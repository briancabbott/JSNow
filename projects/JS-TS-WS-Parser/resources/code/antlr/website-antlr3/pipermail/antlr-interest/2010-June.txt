From haiscai2003 at yahoo.com  Tue Jun  1 02:09:32 2010
From: haiscai2003 at yahoo.com (Ha)
Date: Tue, 1 Jun 2010 02:09:32 -0700 (PDT)
Subject: [antlr-interest] ANTLR3 C Target Runtime Error
Message-ID: <822263.75904.qm@web111709.mail.gq1.yahoo.com>


Hi,

Thanks for your reply. 

I have tried one of those examples but I still get the same runtime crash
due to the fact that the state "member" variable is not initialized.

Is there a way to properly initialize it? 
( as opposed to just passing it as a parameter which doesn't work).

Thanks!


On 28 May 2010, at 18:00, "Jim Idle" <jimi at temporal-wave.com> wrote:

Download the examples from the download page and check out the driver there, in case there is something else that is no up to date in my online docs (that I will update soon;-)

 

Jim

 

From: H S [mailto:haiscai2003 at yahoo.com] 
Sent: Friday, May 28, 2010 12:48 AM
To: Jim Idle
Subject: Re: [antlr-interest] ANTLR3 C Target Runtime Error

 

The code I am using is the one in the documentation found here:

http://www.antlr.org/api/C/index.html

 

I have just changed these two lines, just to make it compile:

 

tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, lxr->pLexer->tokSource);
 

if (psr->pParser->rec->errorCount > 0)

For the first one, I had added the TOKENSOURCE macro and for the second one I changed errorCount to getNumberOfSyntaxErrors.

 

That's really it.

 

Thanks,

Hai

From: Jim Idle <jimi at temporal-wave.com>
To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
Sent: Thu, May 27, 2010 2:52:53 PM
Subject: Re: [antlr-interest] ANTLR3 C Target Runtime Error

Correct function, but obviously you are doing something wrong because the hundreds of parsers out there already would not be there if there was a bug as fundamental as this one. Follow the C examples or post your driver code so we can see what you are doing wrong.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H S
> Sent: Thursday, May 27, 2010 2:43 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR3 C Target Runtime Error
> 
> Hi,
> 
> There seems to be a bug in the generated C sources (antlr3lexer.c): the
> state variable is NULL and dues to that it crashes later.
> It is NULL because LangParserNew passes NULL to LangParserNew SSD, etc.
> I have tried a few versions (3.1.3, 3.2,etc ) and all seem to have this
> problem.
> Am I calling the wrong function (LangParserNew)?
> 
> Thanks.
> Hai
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 



      

From ssedai at gmail.com  Tue Jun  1 02:45:49 2010
From: ssedai at gmail.com (Sergei Smolov)
Date: Tue, 1 Jun 2010 13:45:49 +0400
Subject: [antlr-interest] Can't find template actionSetAttribute.st;
	group 	hierarchy is [Java]
In-Reply-To: <7411da890e945149ad1551faea4cd334@temporal-wave.com>
References: <AANLkTimZE-9iNLXpGsoLGKN7SPkY_iCFlQaHOBeipOXS@mail.gmail.com>
	<7411da890e945149ad1551faea4cd334@temporal-wave.com>
Message-ID: <AANLkTikK_FDJuTcTK2UukFZ5gq4AWrAprp8ibjU0ASol@mail.gmail.com>

Jim, Terence,

Thanks for your replies.

Well, my grammar is too huge to be posted here (about 2000 lines), so I 'll
tell about its main idea.
I want to use ANTLR to generate SIP protocol parser. But the main feature of
my grammar is its output. I don't want to use AST, I want to have just Java
classes hierarchy, but not tree.

Here is a fragment of my grammar code:


request_line *returns* [RequestLine line = *new* RequestLine()]

: method ' ' request_uri ' ' sip_version crlf

{

$line.method = $method.text;

$line.uri = $request_uri.uri;

$line.version = $sip_version.version;

};
I want that after parsing "request_line", that contains, for simplification,
three strings ("method", "request_uri" and "sip_version"), separated by
space, and carriage return-line feed, the RequestLine object to be
generated. I wrote the following Java class, that describes such object:

*

public* *class* RequestLine *extends* ModelObject {

*public* String method;

*public* ModelObject uri;

*public* SIPVersion version;

}
All my grammar has the same structure: every rule has "returns" block, where
appropriate class is described. In most cases, "returns" block contains only
"[String text]" value, by the way.

Terence, would you be so kind to explain what do you mean? Should I wrote my
Java.stg by myself, or not?
Thanks in advance.
2010/5/31 Jim Idle <jimi at temporal-wave.com>

> You have not posted enough information for anyone to help. But you must be
> referencing something that isn't implemented. Post your grammar? Or grep the
> ANTLR source?
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Sergei Smolov
> > Sent: Monday, May 31, 2010 4:07 AM
> > To: antlr-interest
> > Subject: [antlr-interest] Can't find template actionSetAttribute.st;
> > group hierarchy is [Java]
> >
> > Hello, List!
> >
> > I'm writing a SIP protocol parser and now I am using Antlr 3.2. While
> > code
> > generation I've encountered the following error:
> >
> > java.lang.IllegalArgumentException: Can't find template
> > actionSetAttribute.st; group hierarchy is [Java]
> > The thing is that I do not use a standard value of "output" option (I
> > need
> > to generate my own class hierarchy, not AST\CommonTree).
> > So what can be the solution of my problem?
> > Thanks in advance.
> >
> > --
> > Sergey Smolov
> >
>  > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Sergey Smolov

From haiscai2003 at yahoo.com  Tue Jun  1 03:41:27 2010
From: haiscai2003 at yahoo.com (Ha)
Date: Tue, 1 Jun 2010 03:41:27 -0700 (PDT)
Subject: [antlr-interest] ANTLR3 C Target Runtime Error
Message-ID: <783273.80063.qm@web111706.mail.gq1.yahoo.com>

I meant it works with your example but the same include files and library gives me the same crash with my grammar. 

So generated files are different. My grammar generates an AST. Yours doesn't.

Thanks,
Hai


On 1 Jun 2010, at 10:09, Ha <haiscai2003 at yahoo.com> wrote:


Hi,

Thanks for your reply. 

I have tried one of those examples but I still get the same runtime crash
due to the fact that the state "member" variable is not initialized.

Is there a way to properly initialize it?
( as opposed to just passing it as a parameter which doesn't work).

Thanks!


On 28 May 2010, at 18:00, "Jim Idle" <jimi at temporal-wave.com> wrote:

Download the examples from the download page and check out the driver there, in case there is something else that is no up to date in my online docs (that I will update soon;-)



Jim



From: H S [mailto:haiscai2003 at yahoo.com] 
Sent: Friday, May 28, 2010 12:48 AM
To: Jim Idle
Subject: Re: [antlr-interest] ANTLR3 C Target Runtime Error



The code I am using is the one in the documentation found here:

http://www.antlr.org/api/C/index.html



I have just changed these two lines, just to make it compile:



tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, lxr->pLexer->tokSource);


if (psr->pParser->rec->errorCount > 0)

For the first one, I had added the TOKENSOURCE macro and for the second one I changed errorCount to getNumberOfSyntaxErrors.



That's really it.



Thanks,

Hai

From: Jim Idle <jimi at temporal-wave.com>
To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
Sent: Thu, May 27, 2010 2:52:53 PM
Subject: Re: [antlr-interest] ANTLR3 C Target Runtime Error

Correct function, but obviously you are doing something wrong because the hundreds of parsers out there already would not be there if there was a bug as fundamental as this one. Follow the C examples or post your driver code so we can see what you are doing wrong.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
bounces at antlr.org] On Behalf Of H S
Sent: Thursday, May 27, 2010 2:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR3 C Target Runtime Error

Hi,

There seems to be a bug in the generated C sources (antlr3lexer.c): the
state variable is NULL and dues to that it crashes later.
It is NULL because LangParserNew passes NULL to LangParserNew SSD, etc.
I have tried a few versions (3.1.3, 3.2,etc ) and all seem to have this
problem.
Am I calling the wrong function (LangParserNew)?

Thanks.
Hai





List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address







List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From powerofazure at gmail.com  Tue Jun  1 06:33:15 2010
From: powerofazure at gmail.com (Nathan Eloe)
Date: Tue, 1 Jun 2010 08:33:15 -0500
Subject: [antlr-interest] Comments, EOF, and Debugger
Message-ID: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all,
I'm working on an AST parser for the Bash language and I've come across the following strange behavior:
I'm trying to handle comments, so I used the comments token you can get when you start a new grammar in ANTLRworks.  It works.  

COMMENT
    :   '#' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    ;

The problem arises when the comment is the last thing from the input (i.e, no new line before EOF).  Removing the '\n' from the token causes it to freak out when I run the tests, but I can't get it to match comments at the end of file.  Leaving that '\n' in lets the code compile, but I still can't match that last case.

Here's where the interesting part happens.  When I run it through the debugger with the same test case that I use in gunit, the debugger allows the input and parses it correctly (meaning, it ignores it as it should) and correctly generates the expected AST.

Does the debugger allow the code to be more robust in its decision making abilities?  Or does it do something to the input to allow it to be matched to a token.

Thanks for the help!

Nathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.14 (Darwin)

iEYEARECAAYFAkwFDBsACgkQFpoRlVgtqKZHIgCfRWHiKc6fr51t7tHT1xtxlVYG
s9sAmwak2ZHv3XPVPeMgwYNDbqhXJztq
=2bxk
-----END PGP SIGNATURE-----

From swalton at cs.utah.edu  Tue Jun  1 10:14:11 2010
From: swalton at cs.utah.edu (swalton)
Date: Tue, 01 Jun 2010 11:14:11 -0600
Subject: [antlr-interest] In-place rewrites
Message-ID: <9cd668040c6eba0a7bd87883ecef014a@cs.utah.edu>

I am trying to do some "in-place" rewrites where the tree parser is
modified as it is parsed.  There are six loci where I desire to add a
procedure call:

1) Before a procedure call -- Create a block that calls method_new after
method_org
    (call method_org (params_org)) 
       => 
    (block (call method_new (params_new)) (call method_org (params_org)))
2) After a procedure call -- Create a block that calls method_new after
method_org
    (call method_org (params_org)) 
       => 
    (block (call method_org (params_new)) (call method_new (params_new)))
3) Around a procedure call -- Replace call with a "call_through" which
permits a call pointer inside method_new
    (call method_org (params_org)) 
       => 
    (call_through method_new (params_new) method_org (params_org))
4) Before a procedure execution -- Place a call to method_new at beginning
of block
    (proc name (block ...)) 
       => 
    (proc (block (call method_new params_new) ...))
5) After a procedure execution -- Place a call to method_new at end and at
every "return" command
    (proc name (block ... (return) ...)) 
       => 
    (proc name (block ... (block (call method_new params_new) (return))
... (call method_new params_new)))
6) Around a procedure execution -- Detach proc declaration into a delegate
and place a call in its stead
    (proc name_org (params_org) (block ...)) 
       => 
    (declarations ... (proc name_org (block (call_through method_new
(params_new) method_org (params_org)))) ... (proc delegate (params_org)
(block ...))

Can anyone help?
-Sean Walton
PhD Student
School of Computing
University of Utah

From jimi at temporal-wave.com  Tue Jun  1 11:33:37 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 1 Jun 2010 11:33:37 -0700
Subject: [antlr-interest] Comments, EOF, and Debugger
In-Reply-To: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>
References: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>
Message-ID: <9F66B2EE-1A77-41E7-A9D0-AE7CC029C59F@temporal-wave.com>

Remember antlr.markmail.org. The simplest way to deal with this is to  
add a newline to your input before parsimg it.

Jim

On Jun 1, 2010, at 6:33, Nathan Eloe <powerofazure at gmail.com> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hello all,
> I'm working on an AST parser for the Bash language and I've come  
> across the following strange behavior:
> I'm trying to handle comments, so I used the comments token you can  
> get when you start a new grammar in ANTLRworks.  It works.
>
> COMMENT
>    :   '#' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>    ;
>
> The problem arises when the comment is the last thing from the input  
> (i.e, no new line before EOF).  Removing the '\n' from the token  
> causes it to freak out when I run the tests, but I can't get it to  
> match comments at the end of file.  Leaving that '\n' in lets the  
> code compile, but I still can't match that last case.
>
> Here's where the interesting part happens.  When I run it through  
> the debugger with the same test case that I use in gunit, the  
> debugger allows the input and parses it correctly (meaning, it  
> ignores it as it should) and correctly generates the expected AST.
>
> Does the debugger allow the code to be more robust in its decision  
> making abilities?  Or does it do something to the input to allow it  
> to be matched to a token.
>
> Thanks for the help!
>
> Nathan
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG/MacGPG2 v2.0.14 (Darwin)
>
> iEYEARECAAYFAkwFDBsACgkQFpoRlVgtqKZHIgCfRWHiKc6fr51t7tHT1xtxlVYG
> s9sAmwak2ZHv3XPVPeMgwYNDbqhXJztq
> =2bxk
> -----END PGP SIGNATURE-----
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From anteusz at freemail.hu  Tue Jun  1 11:33:04 2010
From: anteusz at freemail.hu (anteusz at freemail.hu)
Date: Tue, 01 Jun 2010 20:33:04 +0200
Subject: [antlr-interest] Comments, EOF, and Debugger
In-Reply-To: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>
References: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>
Message-ID: <4C055260.7060807@freemail.hu>

6/1/2010 3:33 PM keltez?ssel, Nathan Eloe ?rta:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hello all,
> I'm working on an AST parser for the Bash language and I've come across the following strange behavior:
> I'm trying to handle comments, so I used the comments token you can get when you start a new grammar in ANTLRworks.  It works.
>
> COMMENT
>      :   '#' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>      ;
>
> The problem arises when the comment is the last thing from the input (i.e, no new line before EOF).  Removing the '\n' from the token causes it to freak out when I run the tests, but I can't get it to match comments at the end of file.  Leaving that '\n' in lets the code compile, but I still can't match that last case.
>
> Here's where the interesting part happens.  When I run it through the debugger with the same test case that I use in gunit, the debugger allows the input and parses it correctly (meaning, it ignores it as it should) and correctly generates the expected AST.
>
> Does the debugger allow the code to be more robust in its decision making abilities?  Or does it do something to the input to allow it to be matched to a token.
>
> Thanks for the help!
>
> Nathan
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG/MacGPG2 v2.0.14 (Darwin)
>
> iEYEARECAAYFAkwFDBsACgkQFpoRlVgtqKZHIgCfRWHiKc6fr51t7tHT1xtxlVYG
> s9sAmwak2ZHv3XPVPeMgwYNDbqhXJztq
> =2bxk
> -----END PGP SIGNATURE-----
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>    
What about

COMMENT
     :   '#' ~('\n'|'\r')* ('\r'? '\n')? {$channel=HIDDEN;}
     ;


?

Have you tried that?

Marton Papp


From powerofazure at gmail.com  Tue Jun  1 11:41:21 2010
From: powerofazure at gmail.com (Nathan Eloe)
Date: Tue, 1 Jun 2010 13:41:21 -0500
Subject: [antlr-interest] Comments, EOF, and Debugger
In-Reply-To: <4C055260.7060807@freemail.hu>
References: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>
	<4C055260.7060807@freemail.hu>
Message-ID: <D4E9A186-A695-4D7E-8682-F90602628A47@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Jun 1, 2010, at 1:33 PM, anteusz at freemail.hu wrote:

> 6/1/2010 3:33 PM keltez?ssel, Nathan Eloe ?rta:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>> 
>> Hello all,
>> I'm working on an AST parser for the Bash language and I've come across the following strange behavior:
>> I'm trying to handle comments, so I used the comments token you can get when you start a new grammar in ANTLRworks.  It works.
>> 
>> COMMENT
>>     :   '#' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>     ;
>> 
>> The problem arises when the comment is the last thing from the input (i.e, no new line before EOF).  Removing the '\n' from the token causes it to freak out when I run the tests, but I can't get it to match comments at the end of file.  Leaving that '\n' in lets the code compile, but I still can't match that last case.
>> 
>> Here's where the interesting part happens.  When I run it through the debugger with the same test case that I use in gunit, the debugger allows the input and parses it correctly (meaning, it ignores it as it should) and correctly generates the expected AST.
>> 
>> Does the debugger allow the code to be more robust in its decision making abilities?  Or does it do something to the input to allow it to be matched to a token.
>> 
>> Thanks for the help!
>> 
>> Nathan
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG/MacGPG2 v2.0.14 (Darwin)
>> 
>> iEYEARECAAYFAkwFDBsACgkQFpoRlVgtqKZHIgCfRWHiKc6fr51t7tHT1xtxlVYG
>> s9sAmwak2ZHv3XPVPeMgwYNDbqhXJztq
>> =2bxk
>> -----END PGP SIGNATURE-----
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> 
> What about
> 
> COMMENT
>     :   '#' ~('\n'|'\r')* ('\r'? '\n')? {$channel=HIDDEN;}
>     ;
> 
> 
Yes, I have.  that brings other errors up (I don't remember what they are though off the top of my head).  Thanks for the response though.

Nathan

-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.14 (Darwin)

iEYEARECAAYFAkwFVFUACgkQFpoRlVgtqKbN+gCgifUWtqpOffABpn6heYX+gB1q
pokAn0cSxt2p41gYnJJMrSPSeqt2S2aC
=DcoG
-----END PGP SIGNATURE-----

From j at junkwallah.org  Tue Jun  1 12:34:01 2010
From: j at junkwallah.org (Junkman)
Date: Tue, 01 Jun 2010 12:34:01 -0700
Subject: [antlr-interest] Comments, EOF, and Debugger
In-Reply-To: <D4E9A186-A695-4D7E-8682-F90602628A47@gmail.com>
References: <4FDBBD17-772F-494B-84AB-96A50663E5EB@gmail.com>	<4C055260.7060807@freemail.hu>
	<D4E9A186-A695-4D7E-8682-F90602628A47@gmail.com>
Message-ID: <4C0560A9.5020209@junkwallah.org>

Disclaimer:  I'm a noob.  :)

Taking the newline out of comment seems to work, like this:

COMMENT	: '#' (~( '\r' | '\n' ))* ;
NEWLINE : '\r'? '\n'
          {
	      // kick it off to the hidden channel
              // $channel=HIDDEN;

              // or skip it altogether
              // skip();

          }
          ;

Last line comment terminating in EOF presents no problem.

I've seen this pattern for comment in other examples.

Don't know how/why debuggerLexer changes the outcome, but I assume you
can always trace the generated lexers to see how the different outcomes
result.

J

Nathan Eloe wrote:
> 
> On Jun 1, 2010, at 1:33 PM, anteusz at freemail.hu wrote:
> 
>> 6/1/2010 3:33 PM keltez?ssel, Nathan Eloe ?rta:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>>
>>> Hello all,
>>> I'm working on an AST parser for the Bash language and I've come across the following strange behavior:
>>> I'm trying to handle comments, so I used the comments token you can get when you start a new grammar in ANTLRworks.  It works.
>>>
>>> COMMENT
>>>     :   '#' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>     ;
>>>
>>> The problem arises when the comment is the last thing from the input (i.e, no new line before EOF).  Removing the '\n' from the token causes it to freak out when I run the tests, but I can't get it to match comments at the end of file.  Leaving that '\n' in lets the code compile, but I still can't match that last case.
>>>
>>> Here's where the interesting part happens.  When I run it through the debugger with the same test case that I use in gunit, the debugger allows the input and parses it correctly (meaning, it ignores it as it should) and correctly generates the expected AST.
>>>
>>> Does the debugger allow the code to be more robust in its decision making abilities?  Or does it do something to the input to allow it to be matched to a token.
>>>
>>> Thanks for the help!
>>>
>>> Nathan
>>> 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From berdario at gmail.com  Tue Jun  1 18:40:59 2010
From: berdario at gmail.com (Dario Bertini)
Date: Wed, 02 Jun 2010 03:40:59 +0200
Subject: [antlr-interest] Problem with imaginary nodes start index
Message-ID: <4C05B6AB.1000306@gmail.com>

Hi, i've a problem with my grammar...

my target is java, and i have a parser that outputs an AST, and a 
treewalker that rewrites it thanks to stringtemplate.

i've tried to add some dummy inline templates to some of my treewalker's 
rules, but when i run it throws this exception:

Exception in thread "main" java.lang.IllegalArgumentException: replace: 
range invalid: -1..-1(size=519)
     at 
org.antlr.runtime.TokenRewriteStream.replace(TokenRewriteStream.java:263)
     at 
org.antlr.runtime.TokenRewriteStream.replace(TokenRewriteStream.java:250)
     at qicvgwalker.containerrow(qicvgwalker.java:1457)
     at qicvgwalker.def(qicvgwalker.java:1260)
     at qicvgwalker.prog(qicvgwalker.java:314)
     at ExampleRunner.main(ExampleRunner.java:47)

if i go to line 1457 of the treewalker, i can see that the problem is 
caused by
input.getTreeAdaptor().getTokenStartIndex(retval.start)
returning -1

this supposedly means that it couldn't find the retval.start token... 
that is the token i defined as an imaginary node

i'm using imaginary nodes also in other places of the code (along the 
needed template rewritings), but these doesn't throw up any problem... 
instead this is the second time i get this exception: the first time i 
managed to workaround it, but this time i cant' afford to do it

here are the relevant rules from my parser:

prog     :    row? (ENDL row?)* -> ^(ROW row)*;

row     :    def COMMENT? |COMMENT ;

containerrow    :    innerdef COMMENT? |COMMENT ;

innerdef:
     def
   | ID ID '(' point (',' FLOAT (',' FLOAT)?)? ')' -> ^(ID ID ^(POSITION 
point) ^(SCALE FLOAT)? ^(ANGLE FLOAT)?);

here is the relevant AST subtree generated ("println"ed through 
((CommonTree) parser.prog().getTree()).toStringTree() ) :

(ROW (container frattale (POSITION 0 0) (ROW (line linea1 (INITPOSITION 
(frattale x) (frattale y)) (FINALPOSITION (+ (frattale x) 1) (frattale 
y)))) (ROW (frattale frattale1 (POSITION (+ (frattale x) 1) (frattale 
y)) (SCALE 0.35) (ANGLE 0.35))) (ROW (frattale frattale2 (POSITION (+ 
(frattale x) 2) (+ (frattale y) 1)) (SCALE 0.35) (ANGLE 0.35))) (ROW 
(line linea2 (INITPOSITION (+ (frattale x) 3) (frattale y)) 
(FINALPOSITION (+ (frattale x) 4) (frattale y))))))

here are the options of my treewalker:

options {
     tokenVocab=qicvg ;
     ASTLabelType=CommonTree;
     output=template;
     rewrite=true;
}

(i'm using the rewrite mode since, until now, practically every rule has 
a simple substitution template without recursion problems)

and here is the problematic treewalker rule:

containerrow :    ^(ROW innerdef comment?)-> template() "dummy" | ^(ROW 
comment);

retval.start here should be ROW, and apparently the treewalker can't 
find its starting index... if i remove "-> template() "dummy" " all goes 
fine... here are other relevant treewalker rules:

innerdef returns [String id]:
     def {$id=$def.id;} -> template() "dummy"
   | ^(ID ID ^(POSITION point) ^(SCALE FLOAT) ^(ANGLE FLOAT)) -> 
template() "dummy";

comment: COMMENT -> template(c={$COMMENT.text}) "\<!--<c>--\>" ;



hope someone here can point me out to where the problem is...
thanks in advance


From jens.hausherr at logica.com  Wed Jun  2 01:01:45 2010
From: jens.hausherr at logica.com (Hausherr, Jens)
Date: Wed, 2 Jun 2010 10:01:45 +0200
Subject: [antlr-interest] [SPAM] ANTLR 3.2 build fails with Maven 2.2.1
Message-ID: <8EEB19743835C348922EBF41BB4A6330431C87@de-ex016.groupinfra.com>

Hi all,

 

I had problems building ANTLR 3.2 with Maven 2.2.1 because Maven reported a NPE due to a missing SCM URL. I fixed it for me by copying a dummy SCM snippet from the Maven documentation into the master POM.

 

<scm>

    <connection>scm:svn:http://127.0.0.1/svn/my-project</connection>

    <developerConnection>scm:svn:https://127.0.0.1/svn/my-project</developerConnection>

    <tag>HEAD</tag>

    <url>http://127.0.0.1/websvn/my-project</url>

</scm>

 

Maybe you could add a "real" SCM block to the master POM to prevent this error.

 

/Jens 

 

Jens Hausherr | Senior Consultant
Am Sandtorkai 72 | 20455 Hamburg | Germany
M: +49 178 8866-097 
jens.hausherr at logica.com <mailto:vorname.nachname at logica.com>  | www.logica.de <http://www.logica.de> 
Logica Deutschland GmbH & Co. KG

Zettachring 4, 70567 Stuttgart; Amtsgericht Stuttgart HRA 722072

Pers?nlich haftender Gesellschafter: Logica Deutschland Verwaltungs GmbH

Gesch?ftsf?hrer: Torsten Stra? (Vors.) | Steven Blythe | Eric Guyot | Olaf Scholz | Oliver Starzonek | Dr. Alexander Wurdack
Handelsregister: AG Stuttgart HRB 724084

 



Please help Logica to respect the environment by not printing this email  / Pour contribuer comme Logica au respect de l'environnement, merci de ne pas imprimer ce mail /  Bitte drucken Sie diese Nachricht nicht aus und helfen Sie so Logica dabei, die Umwelt zu sch?tzen. /  Por favor ajude a Logica a respeitar o ambiente nao imprimindo este correio electronico.



This e-mail and any attachment is for authorised use by the intended recipient(s) only. It may contain proprietary material, confidential information and/or be subject to legal privilege. It should not be copied, disclosed to, retained or used by, any other party. If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender. Thank you.


From code_dude at nym.hush.com  Wed Jun  2 01:59:02 2010
From: code_dude at nym.hush.com (code_dude at nym.hush.com)
Date: Wed, 02 Jun 2010 09:59:02 +0100
Subject: [antlr-interest] C++ Target
Message-ID: <20100602085902.345A71200A2@smtp.hushmail.com>

Hi Guys,
any news on the C++ target in antlr v3 - or is it just a pipe dream?
Regards hmb



From jimi at temporal-wave.com  Wed Jun  2 08:22:22 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 08:22:22 -0700
Subject: [antlr-interest] ANTLR 3.2 build fails with Maven 2.2.1
In-Reply-To: <8EEB19743835C348922EBF41BB4A6330431C87@de-ex016.groupinfra.com>
Message-ID: <31834cd28065c64f88d4fbb49ce599a8@temporal-wave.com>

Thanks for contributing a fix, but this has already been fixed in development. Don't forget to use antlr.markmail.org as this will quite often save you some time waiting for an answer :-)

Cheers,

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hausherr, Jens
> Sent: Wednesday, June 02, 2010 1:02 AM
> To: antlr-interest at antlr.org
> Subject: [SPAM] [antlr-interest] [SPAM] ANTLR 3.2 build fails with
> Maven 2.2.1
> 
> Hi all,
> 
> 
> 
> I had problems building ANTLR 3.2 with Maven 2.2.1 because Maven
> reported a NPE due to a missing SCM URL. I fixed it for me by copying a
> dummy SCM snippet from the Maven documentation into the master POM.
> 
> 
> 
> <scm>
> 
>     <connection>scm:svn:http://127.0.0.1/svn/my-project</connection>
> 
>     <developerConnection>scm:svn:https://127.0.0.1/svn/my-
> project</developerConnection>
> 
>     <tag>HEAD</tag>
> 
>     <url>http://127.0.0.1/websvn/my-project</url>
> 
> </scm>
> 
> 
> 
> Maybe you could add a "real" SCM block to the master POM to prevent
> this error.
> 
> 
> 
> /Jens
> 
> 
> 
> Jens Hausherr | Senior Consultant
> Am Sandtorkai 72 | 20455 Hamburg | Germany
> M: +49 178 8866-097
> jens.hausherr at logica.com <mailto:vorname.nachname at logica.com>  |
> www.logica.de <http://www.logica.de>
> Logica Deutschland GmbH & Co. KG
> 
> Zettachring 4, 70567 Stuttgart; Amtsgericht Stuttgart HRA 722072
> 
> Pers?nlich haftender Gesellschafter: Logica Deutschland Verwaltungs
> GmbH
> 
> Gesch?ftsf?hrer: Torsten Stra? (Vors.) | Steven Blythe | Eric Guyot |
> Olaf Scholz | Oliver Starzonek | Dr. Alexander Wurdack
> Handelsregister: AG Stuttgart HRB 724084
> 
> 
> 
> 
> 
> Please help Logica to respect the environment by not printing this
> email  / Pour contribuer comme Logica au respect de l'environnement,
> merci de ne pas imprimer ce mail /  Bitte drucken Sie diese Nachricht
> nicht aus und helfen Sie so Logica dabei, die Umwelt zu sch?tzen. /
> Por favor ajude a Logica a respeitar o ambiente nao imprimindo este
> correio electronico.
> 
> 
> 
> This e-mail and any attachment is for authorised use by the intended
> recipient(s) only. It may contain proprietary material, confidential
> information and/or be subject to legal privilege. It should not be
> copied, disclosed to, retained or used by, any other party. If you are
> not an intended recipient then please promptly delete this e-mail and
> any attachment and all copies and inform the sender. Thank you.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Jun  2 08:23:39 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 08:23:39 -0700
Subject: [antlr-interest] C++ Target
In-Reply-To: <20100602085902.345A71200A2@smtp.hushmail.com>
Message-ID: <995ea982f11c4142bed372b79a23405c@temporal-wave.com>

No time at the moment, but it is easy enough to use C target. When v4 comes out I will build a C++ as well as a C target.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of code_dude at nym.hush.com
> Sent: Wednesday, June 02, 2010 1:59 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C++ Target
> 
> Hi Guys,
> any news on the C++ target in antlr v3 - or is it just a pipe dream?
> Regards hmb
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Wed Jun  2 09:45:34 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Wed, 02 Jun 2010 11:45:34 -0500
Subject: [antlr-interest] Fragments in parser rules - generate error?
Message-ID: <C82BF4DE.2B6D9%ken.williams@thomsonreuters.com>

Hi,

I have the following toy grammar:

-------------------------
date    :    DIGIT+ SLASH DIGIT+ SLASH DIGIT+ ;

SLASH    :    '/' ;
DIGITS    :    DIGIT+ ;
fragment DIGIT    : '0'..'9' ;
-------------------------

(No options{} declarations etc.)

I know I shouldn't be using fragments in this way, but it was an accident -
'DIGIT' used to be a lexer rule, but then I changed it into a fragment,
added DIGITS as a new lexer rule, and forgot to remove DIGIT+ from the
parser rule.

The problem I encountered was that even though the grammar check succeeded
and the lexer/parser classes were successfully generated, the 'date' rule
doesn't match the intended input.

It seems like the right solution would be for Antlr to generate an error
when a fragment is used in a parser rule.

Or is there a reason I'm not thinking of to allow them?

Thanks.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From cummings at kjchome.homeip.net  Wed Jun  2 11:48:59 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 02 Jun 2010 14:48:59 -0400
Subject: [antlr-interest] Fragments in parser rules - generate error?
In-Reply-To: <C82BF4DE.2B6D9%ken.williams@thomsonreuters.com>
References: <C82BF4DE.2B6D9%ken.williams@thomsonreuters.com>
Message-ID: <4C06A79B.7090507@kjchome.homeip.net>

On 06/02/2010 12:45 PM, Ken Williams wrote:
> Hi,
> 
> I have the following toy grammar:
> 
> -------------------------
> date    :    DIGIT+ SLASH DIGIT+ SLASH DIGIT+ ;
> 
> SLASH    :    '/' ;
> DIGITS    :    DIGIT+ ;
> fragment DIGIT    : '0'..'9' ;
> -------------------------
> 
> (No options{} declarations etc.)
> 
> I know I shouldn't be using fragments in this way, but it was an accident -
> 'DIGIT' used to be a lexer rule, but then I changed it into a fragment,
> added DIGITS as a new lexer rule, and forgot to remove DIGIT+ from the
> parser rule.
> 
> The problem I encountered was that even though the grammar check succeeded
> and the lexer/parser classes were successfully generated, the 'date' rule
> doesn't match the intended input.

How can it?  When the lexer runs (before the parser, and without any
knowledge of the parse state) when it finds DIGIT+, it creates a DIGITS
token.  This is your problem, not the fragment DIGIT.  What happens when
you change your date rule to:

date : DIGITS SLASH DIGITS SLASH DIGITS
     ;

?

Does it work then?

> It seems like the right solution would be for Antlr to generate an error
> when a fragment is used in a parser rule.
> 
> Or is there a reason I'm not thinking of to allow them?
> 
> Thanks.

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jimi at temporal-wave.com  Wed Jun  2 12:05:15 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 12:05:15 -0700
Subject: [antlr-interest] Fragments in parser rules - generate error?
In-Reply-To: <4C06A79B.7090507@kjchome.homeip.net>
Message-ID: <343577187443364e8789def6e02f831e@temporal-wave.com>

Ken was commenting on the fact that a fragment was mentioned in the parser grammar but no error was given out by ANTLR about this; there should be as fragment tokens cannot be sent to the parser. Hopefully v4 will address that one :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kevin J. Cummings
> Sent: Wednesday, June 02, 2010 11:49 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fragments in parser rules - generate
> error?
> 
> On 06/02/2010 12:45 PM, Ken Williams wrote:
> > Hi,
> >
> > I have the following toy grammar:
> >
> > -------------------------
> > date    :    DIGIT+ SLASH DIGIT+ SLASH DIGIT+ ;
> >
> > SLASH    :    '/' ;
> > DIGITS    :    DIGIT+ ;
> > fragment DIGIT    : '0'..'9' ;
> > -------------------------
> >
> > (No options{} declarations etc.)
> >
> > I know I shouldn't be using fragments in this way, but it was an
> accident -
> > 'DIGIT' used to be a lexer rule, but then I changed it into a
> fragment,
> > added DIGITS as a new lexer rule, and forgot to remove DIGIT+ from
> the
> > parser rule.
> >
> > The problem I encountered was that even though the grammar check
> succeeded
> > and the lexer/parser classes were successfully generated, the 'date'
> rule
> > doesn't match the intended input.
> 
> How can it?  When the lexer runs (before the parser, and without any
> knowledge of the parse state) when it finds DIGIT+, it creates a DIGITS
> token.  This is your problem, not the fragment DIGIT.  What happens
> when
> you change your date rule to:
> 
> date : DIGITS SLASH DIGITS SLASH DIGITS
>      ;
> 
> ?
> 
> Does it work then?
> 
> > It seems like the right solution would be for Antlr to generate an
> error
> > when a fragment is used in a parser rule.
> >
> > Or is there a reason I'm not thinking of to allow them?
> >
> > Thanks.
> 
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Wed Jun  2 13:04:10 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Wed, 02 Jun 2010 15:04:10 -0500
Subject: [antlr-interest] Advice with backtracking/ambiguity
Message-ID: <C82C236A.2B6F0%ken.williams@thomsonreuters.com>

Hi,

Here's a simple grammar demonstrating something I'm working with:

------------------------------
grammar testg;

options {
    backtrack=true;
    memoize=true;
    output=AST;
}

cite    :    token+ EOF ;

token    :    DATE | SLASH | DIGITS ;
    
DATE    :    DIGITS SLASH DIGITS SLASH DIGITS ;

WS    :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;

SLASH    :    '/' ;
DIGITS    :    ('0'..'9')+ ;
--------------------------------


As you can see, there's an ambiguity with DATE.  What I'm trying to do is to
use the DATE rule when it can succeed, and use DATE & SLASH otherwise.  So
for example, the input "10 30/2" should parse as "DIGITS DIGITS SLASH
DIGITS", but "10 30/2/24" should parse as "DIGITS DATE".

Instead, what happens is that "10 30/2" fails to parse, saying "mismatched
character '<EOF>' expecting '/'".

I've tried using syntactic predicates on DATE and on the first alternative
for 'token', but nothing I've tried seems to have any effect.  What I've
tried is:

token    :   (DATE)=> DATE | SLASH | DIGITS ;

and

DATE    :    (DIGITS SLASH DIGITS SLASH DIGITS)=> DIGITS SLASH DIGITS SLASH
DIGITS ;

but neither seems to actually have any effect on the parse.

I've also tried changing DATE to a parser rule:

token    :    (DIGITS SLASH DIGITS SLASH DIGITS)=> date | SLASH | DIGITS ;
date    :     DIGITS SLASH DIGITS SLASH DIGITS ;

but now I can't get the 'date' rule to ever match - the input "10 30/2/24"
parses as "DIGITS DIGITS SLASH DIGITS SLASH DIGITS" instead of "DIGITS
date".


I'm sure this is a classic problem with a classic solution but so far it
eludes me, so I'd appreciate any advice.  Thanks.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From jimi at temporal-wave.com  Wed Jun  2 13:11:09 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 13:11:09 -0700
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <C82C236A.2B6F0%ken.williams@thomsonreuters.com>
Message-ID: <de016d9889162a4e994faf5edbd420f0@temporal-wave.com>

Remember antlr.markmail.org as it will give you lots of examples of this. You need:

fragment DIGITS : ('0'..'9')+ ;
DATE
: DIGITS
  (
      (SLASH DIGITS SLASH DIGITS)=> SLASH DIGITS SLASH DIGITS
    | {$type = DIGITS; }
;

SLASH : '/' ;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ken Williams
> Sent: Wednesday, June 02, 2010 1:04 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Advice with backtracking/ambiguity
> 
> Hi,
> 
> Here's a simple grammar demonstrating something I'm working with:
> 
> ------------------------------
> grammar testg;
> 
> options {
>     backtrack=true;
>     memoize=true;
>     output=AST;
> }
> 
> cite    :    token+ EOF ;
> 
> token    :    DATE | SLASH | DIGITS ;
> 
> DATE    :    DIGITS SLASH DIGITS SLASH DIGITS ;
> 
> WS    :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
> 
> SLASH    :    '/' ;
> DIGITS    :    ('0'..'9')+ ;
> --------------------------------
> 
> 
> As you can see, there's an ambiguity with DATE.  What I'm trying to do
> is to
> use the DATE rule when it can succeed, and use DATE & SLASH otherwise.





From jimi at temporal-wave.com  Wed Jun  2 13:12:16 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 13:12:16 -0700
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <de016d9889162a4e994faf5edbd420f0@temporal-wave.com>
Message-ID: <8b63f0accf0b434a8adf6c7758027d3d@temporal-wave.com>

And turn of the backtracking option of course..

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, June 02, 2010 1:11 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Advice with backtracking/ambiguity
> 
> Remember antlr.markmail.org as it will give you lots of examples of
> this. You need:
> 
> fragment DIGITS : ('0'..'9')+ ;
> DATE
> : DIGITS
>   (
>       (SLASH DIGITS SLASH DIGITS)=> SLASH DIGITS SLASH DIGITS
>     | {$type = DIGITS; }
> ;
> 
> SLASH : '/' ;
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ken Williams
> > Sent: Wednesday, June 02, 2010 1:04 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Advice with backtracking/ambiguity
> >
> > Hi,
> >
> > Here's a simple grammar demonstrating something I'm working with:
> >
> > ------------------------------
> > grammar testg;
> >
> > options {
> >     backtrack=true;
> >     memoize=true;
> >     output=AST;
> > }
> >
> > cite    :    token+ EOF ;
> >
> > token    :    DATE | SLASH | DIGITS ;
> >
> > DATE    :    DIGITS SLASH DIGITS SLASH DIGITS ;
> >
> > WS    :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
> >
> > SLASH    :    '/' ;
> > DIGITS    :    ('0'..'9')+ ;
> > --------------------------------
> >
> >
> > As you can see, there's an ambiguity with DATE.  What I'm trying to
> do
> > is to
> > use the DATE rule when it can succeed, and use DATE & SLASH
> otherwise.
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Wed Jun  2 14:29:03 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Wed, 02 Jun 2010 16:29:03 -0500
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <C82C236A.2B6F0%ken.williams@thomsonreuters.com>
Message-ID: <C82C374F.2B707%ken.williams@thomsonreuters.com>

Jim Idle (ji... at temporal-wave.com) wrote:

> You need:
> 
> fragment DIGITS : ('0'..'9')+ ;
> DATE
> : DIGITS
>   (
>       (SLASH DIGITS SLASH DIGITS)=> SLASH DIGITS SLASH DIGITS
>     | {$type = DIGITS; }
> ;
> 
> SLASH : '/' ;

Thanks.  But it seems like it'll get nasty pretty quick when I put this back
into the "real" grammar I'm working on.  If I have to left-factor everything
I'll be rather confused.

Is there not a way besides factoring?  In TheBook on page 299 it talks about
"rather than left-factor the grammar, making it less readable...", and I
tend to agree in this case.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From jimi at temporal-wave.com  Wed Jun  2 14:41:38 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 14:41:38 -0700
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <C82C374F.2B707%ken.williams@thomsonreuters.com>
Message-ID: <d88c1bf24e869444b56b28ec08f079f3@temporal-wave.com>

This isn't left factored, it is doing the lookahead that you require to distinguish the two. In v4 this will be different, but for now, this is what you will need to do.

Or, don't try to do it in the lexer at all and construct parser rules for it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ken Williams
> Sent: Wednesday, June 02, 2010 2:29 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Advice with backtracking/ambiguity
> 
> Jim Idle (ji... at temporal-wave.com) wrote:
> 
> > You need:
> >
> > fragment DIGITS : ('0'..'9')+ ;
> > DATE
> > : DIGITS
> >   (
> >       (SLASH DIGITS SLASH DIGITS)=> SLASH DIGITS SLASH DIGITS
> >     | {$type = DIGITS; }
> > ;
> >
> > SLASH : '/' ;
> 
> Thanks.  But it seems like it'll get nasty pretty quick when I put this
> back
> into the "real" grammar I'm working on.  If I have to left-factor
> everything
> I'll be rather confused.
> 
> Is there not a way besides factoring?  In TheBook on page 299 it talks
> about
> "rather than left-factor the grammar, making it less readable...", and
> I
> tend to agree in this case.
> 
> --
> Ken Williams
> Sr. Research Scientist
> Thomson Reuters
> Phone: 651-848-7712
> ken.williams at thomsonreuters.com
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Wed Jun  2 15:03:35 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Wed, 02 Jun 2010 17:03:35 -0500
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <d88c1bf24e869444b56b28ec08f079f3@temporal-wave.com>
Message-ID: <C82C3F67.2B711%ken.williams@thomsonreuters.com>

Yeah, probably I should be using parser rules.  I was trying to keep things
"simple" by making everything a linear stream of tokens from the point of
view of the Java caller, while still having high-level constructs like DATE.

Perhaps what I really want is something like this:

-------------------
options {
    backtrack=true;
    memoize=true;
    output=AST;
}

tokens {
    DATE;
}

cite    :    token+ EOF ;
token   :    date -> DATE | SLASH | DIGITS;
date    :    DIGITS SLASH DIGITS SLASH DIGITS ;

SLASH   :    '/' ;
DIGITS  :    ('0'..'9')+ ;
WS      :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
-------------------


The only thing missing now is the character-data from DATE.  Is there a way
to change that 'token' rule to something like this?

token   :    date -> {new CommonToken(DATE, $text)} | SLASH | DIGITS;


I appreciate all the help.



On 6/2/10 4:41 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> This isn't left factored, it is doing the lookahead that you require to
> distinguish the two. In v4 this will be different, but for now, this is what
> you will need to do.
> 
> Or, don't try to do it in the lexer at all and construct parser rules for it.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From ken.williams at thomsonreuters.com  Wed Jun  2 15:08:02 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Wed, 02 Jun 2010 17:08:02 -0500
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <C82C3F67.2B711%ken.williams@thomsonreuters.com>
Message-ID: <C82C4072.2B714%ken.williams@thomsonreuters.com>


On 6/2/10 5:03 PM, "Ken Williams" <ken.williams at thomsonreuters.com> wrote:

> The only thing missing now is the character-data from DATE.  Is there a way
> to change that 'token' rule to something like this?
> 
> token   :    date -> {new CommonToken(DATE, $text)} | SLASH | DIGITS;


Of course, right after I wrote that, I came up with this:

token   :    date -> {new CommonTree(new CommonToken(DATE, $text))}
        | SLASH
        | DIGITS;


I think that'll work for me.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From jbb at acm.org  Wed Jun  2 15:38:59 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 02 Jun 2010 18:38:59 -0400
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <C82C3F67.2B711%ken.williams@thomsonreuters.com>
References: <C82C3F67.2B711%ken.williams@thomsonreuters.com>
Message-ID: <1275518339.30656.9.camel@gecko.home.org>

On Wed, 2010-06-02 at 17:03 -0500, Ken Williams wrote:
> Yeah, probably I should be using parser rules.  I was trying to keep things
> "simple" by making everything a linear stream of tokens from the point of
> view of the Java caller, while still having high-level constructs like DATE.
> 
> Perhaps what I really want is something like this:

just be aware that when you make date a parser rule WS will be silently
accepted between the DIGITS and SLASHes comprising the date
non-terminal. 

if your language permits this, great! otherwise you would need to keep
it in the lexer.

i do not know what $text will be for a parser rule and do not know
whether any skip()'d WS will (or not) be included.

(same drill for COMMENT if you have that and/or any other skip()'d or
HIDDEN token within the lexer)

> 
> -------------------
> options {
>     backtrack=true;
>     memoize=true;
>     output=AST;
> }
> 
> tokens {
>     DATE;
> }
> 
> cite    :    token+ EOF ;
> token   :    date -> DATE | SLASH | DIGITS;
> date    :    DIGITS SLASH DIGITS SLASH DIGITS ;
> 
> SLASH   :    '/' ;
> DIGITS  :    ('0'..'9')+ ;
> WS      :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
> -------------------
> 
> 
> The only thing missing now is the character-data from DATE.  Is there a way
> to change that 'token' rule to something like this?
> 
> token   :    date -> {new CommonToken(DATE, $text)} | SLASH | DIGITS;
> 
> 
> I appreciate all the help.
> 
> 
> 
> On 6/2/10 4:41 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> 
> > This isn't left factored, it is doing the lookahead that you require to
> > distinguish the two. In v4 this will be different, but for now, this is what
> > you will need to do.
> > 
> > Or, don't try to do it in the lexer at all and construct parser rules for it.
> 




From jimi at temporal-wave.com  Wed Jun  2 15:44:01 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Jun 2010 15:44:01 -0700
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <1275518339.30656.9.camel@gecko.home.org>
Message-ID: <e59c930c17026d4a92d06bf4f408df11@temporal-wave.com>

You just need to test that there were no hidden space elements between the parser tokens that cannot have them and reject that rule if there were. But it is much neater to use the predicate in the lexer and I do not think that it makes things look strange at all - you just get used to it.

But, if there are too many of these in the lexer then maybe you should be using the parser or perhaps the task is better suited to awk or a filtering lexer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John B. Brodie
> Sent: Wednesday, June 02, 2010 3:39 PM
> To: Ken Williams
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Advice with backtracking/ambiguity
> 
> On Wed, 2010-06-02 at 17:03 -0500, Ken Williams wrote:
> > Yeah, probably I should be using parser rules.  I was trying to keep
> things
> > "simple" by making everything a linear stream of tokens from the
> point of
> > view of the Java caller, while still having high-level constructs
> like DATE.
> >
> > Perhaps what I really want is something like this:
> 
> just be aware that when you make date a parser rule WS will be silently
> accepted between the DIGITS and SLASHes comprising the date
> non-terminal.
> 
> if your language permits this, great! otherwise you would need to keep
> it in the lexer.
> 
> i do not know what $text will be for a parser rule and do not know
> whether any skip()'d WS will (or not) be included.
> 
> (same drill for COMMENT if you have that and/or any other skip()'d or
> HIDDEN token within the lexer)
> 
> >
> > -------------------
> > options {
> >     backtrack=true;
> >     memoize=true;
> >     output=AST;
> > }
> >
> > tokens {
> >     DATE;
> > }
> >
> > cite    :    token+ EOF ;
> > token   :    date -> DATE | SLASH | DIGITS;
> > date    :    DIGITS SLASH DIGITS SLASH DIGITS ;
> >
> > SLASH   :    '/' ;
> > DIGITS  :    ('0'..'9')+ ;
> > WS      :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
> > -------------------
> >
> >
> > The only thing missing now is the character-data from DATE.  Is there
> a way
> > to change that 'token' rule to something like this?
> >
> > token   :    date -> {new CommonToken(DATE, $text)} | SLASH | DIGITS;
> >
> >
> > I appreciate all the help.
> >
> >
> >
> > On 6/2/10 4:41 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> >
> > > This isn't left factored, it is doing the lookahead that you
> require to
> > > distinguish the two. In v4 this will be different, but for now,
> this is what
> > > you will need to do.
> > >
> > > Or, don't try to do it in the lexer at all and construct parser
> rules for it.
> >
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From george.soom at siria.cc  Thu Jun  3 01:52:18 2010
From: george.soom at siria.cc (George Soom)
Date: Thu, 03 Jun 2010 08:52:18 GMT
Subject: [antlr-interest] .* consuming all input
Message-ID: <20100603085218.19249.qmail@info9.gawab.com>


Hi,
according to documentation wildcards are non-greedy in ANTLR, so rule '
comment: '//' a+=.* NEWLINE -> comment(a={a}) ' should match anything until
newline, construct list 'a' and send it to template 'comment'.
Somehow .* will consume everything up to the end of input file so I get
error 'line 0:-1 mismatched input '<EOF>' expecting NEWLINE'. NEWLINE is
defined as NEWLINE: ('\r'? '\n')+; and is not sent to hidden channel or
skipped. Where is the problem? I need to send everything to template
comment, so I can not send comments to trashbin through lexer rule.
Thank You
Georg



From oliver.zeigermann at gmail.com  Thu Jun  3 02:09:06 2010
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 3 Jun 2010 11:09:06 +0200
Subject: [antlr-interest] .* consuming all input
In-Reply-To: <20100603085218.19249.qmail@info9.gawab.com>
References: <20100603085218.19249.qmail@info9.gawab.com>
Message-ID: <AANLkTin3eB6aphjL80-LKwimL1kVpAKa9NpFv--ShtE4@mail.gmail.com>

Hi, I am pretty sure wildcards are *greedy* by default and you have to
switch on non-greediness. I seem to remember this should look like:

(options {greedy=false;}:.)*

- Oliver

2010/6/3 George Soom <george.soom at siria.cc>:
>
> Hi,
> according to documentation wildcards are non-greedy in ANTLR, so rule '
> comment: '//' a+=.* NEWLINE -> comment(a={a}) ' should match anything until
> newline, construct list 'a' and send it to template 'comment'.
> Somehow .* will consume everything up to the end of input file so I get
> error 'line 0:-1 mismatched input '<EOF>' expecting NEWLINE'. NEWLINE is
> defined as NEWLINE: ('\r'? '\n')+; and is not sent to hidden channel or
> skipped. Where is the problem? I need to send everything to template
> comment, so I can not send comments to trashbin through lexer rule.
> Thank You
> Georg
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Thu Jun  3 02:52:11 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 3 Jun 2010 11:52:11 +0200
Subject: [antlr-interest] .* consuming all input
In-Reply-To: <AANLkTin3eB6aphjL80-LKwimL1kVpAKa9NpFv--ShtE4@mail.gmail.com>
References: <20100603085218.19249.qmail@info9.gawab.com>
	<AANLkTin3eB6aphjL80-LKwimL1kVpAKa9NpFv--ShtE4@mail.gmail.com>
Message-ID: <AANLkTim5SDed-pyy1ighpjraFzoihESYZAbZAgVcg4CC@mail.gmail.com>

On Thu, Jun 3, 2010 at 11:09 AM, Oliver Zeigermann <
oliver.zeigermann at gmail.com> wrote:

> Hi, I am pretty sure wildcards are *greedy* by default and ...


+ and * are normally greedy, except when preceded by a DOT. From "the
Definitive ANTLR reference":

*What you really want to type, though, and what you will see in other*

*systems, is the terse notation: ?.*? and ?.+?. Unfortunately, following the
> *

*usual convention that all subrules are greedy makes this notation useless.*

*Such greedy subrules would match all characters until the end of*

*file. Instead, ANTLR considers them idioms for ?Match any symbol until*

*you see what lies beyond the subrule.? ANTLR automatically makes*

*these two subrules nongreedy. So, you can use ?.*? instead of manually*

*specifying the option.*


See chapter 4, *Extended BNF Subrules*, page 86.

Regards,

Bart.

From george.soom at siria.cc  Thu Jun  3 02:59:00 2010
From: george.soom at siria.cc (George Soom)
Date: Thu, 03 Jun 2010 09:59:00 GMT
Subject: [antlr-interest] .* consuming all input
Message-ID: <20100603095900.29898.qmail@info9.gawab.com>

Hi, thank You for answer.
Book "The definitive ANTLR Reference" , page 101, states, 
that ANTLR automatically makes .' and .+ non-greedy. 
Also adding non-greedi option does nothing.

Georg

Oliver Zeigermann <oliver.zeigermann at gmail.com> wrote on 3 Jun 2010, 12:09
PM:
Subject: Re: [antlr-interest] .* consuming all input
>Hi, I am pretty sure wildcards are *greedy* by default and you have to
>switch on non-greediness. I seem to remember this should look like:
>
>(options {greedy=false;}:.)*
>
>- Oliver
>
>2010/6/3 George Soom <george.soom at siria.cc>:
>>
>> Hi,
>> according to documentation wildcards are non-greedy in ANTLR, so rule '
>> comment: '//' a+=.* NEWLINE -> comment(a={a}) ' should match anything
>until
>> newline, construct list 'a' and send it to template 'comment'.
>> Somehow .* will consume everything up to the end of input file so I get
>> error 'line 0:-1 mismatched input '<EOF>' expecting NEWLINE'. NEWLINE is
>> defined as NEWLINE: ('\r'? '\n')+; and is not sent to hidden channel or
>> skipped. Where is the problem? I need to send everything to template
>> comment, so I can not send comments to trashbin through lexer rule.
>> Thank You
>> Georg
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>


From ken.williams at thomsonreuters.com  Thu Jun  3 11:35:07 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Thu, 03 Jun 2010 13:35:07 -0500
Subject: [antlr-interest] Advice with backtracking/ambiguity
In-Reply-To: <1275518339.30656.9.camel@gecko.home.org>
Message-ID: <C82D600B.2B784%ken.williams@thomsonreuters.com>




On 6/2/10 5:38 PM, "John B. Brodie" <jbb at acm.org> wrote:

> On Wed, 2010-06-02 at 17:03 -0500, Ken Williams wrote:
>> Yeah, probably I should be using parser rules.  I was trying to keep things
>> "simple" by making everything a linear stream of tokens from the point of
>> view of the Java caller, while still having high-level constructs like DATE.
> 
> just be aware that when you make date a parser rule WS will be silently
> accepted between the DIGITS and SLASHes comprising the date
> non-terminal. 

Yeah, good point.  In this case that's fine.  It would be nice, though, if
there were a per-rule parser directive to control which channel(s) to pay
attention to, something like this:

date    
options {channel=ALL;}
:    DIGITS SLASH DIGITS SLASH DIGITS ;


Not sure whether that's feasible or not though.

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From karimc17 at gmail.com  Thu Jun  3 11:38:19 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Thu, 3 Jun 2010 14:38:19 -0400
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>
Message-ID: <AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>

Hi,

I have a grammar that does not give an error (in ANTLR 3.2) if there are
extraneous characters at the end of the input.  For example, I would expect
"(a+b))" to generate an error, but it does not.  "(a+b)" is parsed fine and
the extra ")" at the end is just ignored.

I enclose a small sample grammar that demonstrates this problem.  I am using
the C runtime, but the problem is not there.  The error is not detected in
ANTLRWorks 1.4 either.

Any help anyone can give me would be greatly appreciated.

Thank you,

Karim
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 2056 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100603/a091434c/attachment.obj 

From kirby.bohling at gmail.com  Thu Jun  3 11:46:14 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Thu, 3 Jun 2010 13:46:14 -0500
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com> 
	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
Message-ID: <AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>

Channeling Jim Idle:

Remember to use antlr.markmail.org, this is a very common question,
and has been answered many times.

More then likely you don't require "EOF" at the end of whatever your
start rule is.  The token stream more then likely has a ')' and if you
tried to parse again, you'd get an error.  Use EOF to require all
input to be parsed.

Kirby



On Thu, Jun 3, 2010 at 1:38 PM, Karim Chichakly <karimc17 at gmail.com> wrote:
> Hi,
>
> I have a grammar that does not give an error (in ANTLR 3.2) if there are
> extraneous characters at the end of the input. ?For example, I would expect
> "(a+b))" to generate an error, but it does not. ?"(a+b)" is parsed fine and
> the extra ")" at the end is just ignored.
>
> I enclose a small sample grammar that demonstrates this problem. ?I am using
> the C runtime, but the problem is not there. ?The error is not detected in
> ANTLRWorks 1.4 either.
>
> Any help anyone can give me would be greatly appreciated.
>
> Thank you,
>
> Karim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From bkiers at gmail.com  Thu Jun  3 11:47:14 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 3 Jun 2010 20:47:14 +0200
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>
	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
Message-ID: <AANLkTinEAMVPzjLvm3mgi8b0ce9DQmp2C1gqfdctQL-M@mail.gmail.com>

Hi,

On Thu, Jun 3, 2010 at 8:38 PM, Karim Chichakly <karimc17 at gmail.com> wrote:

> Hi,
>
> I have a grammar that does not give an error (in ANTLR 3.2) if there are
> extraneous characters at the end of the input.  For example, I would expect
> "(a+b))" to generate an error, but it does not.  "(a+b)" is parsed fine and
> the extra ")" at the end is just ignored.
>

Since "(a+b))" does not contain any illegal tokens, the parser simply stops
after it (successfully) parses "(a+b)". You'll want to "force" the parser to
go through the entire token stream by adding an 'EOF' after your 'equation'
rule:

equation
  :  expr EOF
  ;


Regards,

Bart.

From bkiers at gmail.com  Thu Jun  3 11:49:21 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 3 Jun 2010 20:49:21 +0200
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>
	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
	<AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>
Message-ID: <AANLkTikb4b3h46wpZJHbq8R8eh2-wq3ALhXrgYQhW_yI@mail.gmail.com>

On Thu, Jun 3, 2010 at 8:46 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> Channeling Jim Idle:
>
> Remember to use antlr.markmail.org, this is a very common question,
> and has been answered many times.
>

True, but I can imagine one would not know what to search for, in this case.

Regards,

Bart.

From karimc17 at gmail.com  Thu Jun  3 12:11:24 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Thu, 3 Jun 2010 15:11:24 -0400
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTinEAMVPzjLvm3mgi8b0ce9DQmp2C1gqfdctQL-M@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com> 
	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com> 
	<AANLkTinEAMVPzjLvm3mgi8b0ce9DQmp2C1gqfdctQL-M@mail.gmail.com>
Message-ID: <AANLkTimbyjfVzOWb-rVVYNzoRO7n7oV3r9b85eC-Dun7@mail.gmail.com>

Thank you Bart and Kirby, that is very helpful!

Karim


On Thu, Jun 3, 2010 at 2:47 PM, Bart Kiers <bkiers at gmail.com> wrote:

> Hi,
>
> On Thu, Jun 3, 2010 at 8:38 PM, Karim Chichakly <karimc17 at gmail.com>
> wrote:
>
> > Hi,
> >
> > I have a grammar that does not give an error (in ANTLR 3.2) if there are
> > extraneous characters at the end of the input.  For example, I would
> expect
> > "(a+b))" to generate an error, but it does not.  "(a+b)" is parsed fine
> and
> > the extra ")" at the end is just ignored.
> >
>
> Since "(a+b))" does not contain any illegal tokens, the parser simply stops
> after it (successfully) parses "(a+b)". You'll want to "force" the parser
> to
> go through the entire token stream by adding an 'EOF' after your 'equation'
> rule:
>
> equation
>  :  expr EOF
>  ;
>
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kcarroll at signmgmt.com  Thu Jun  3 13:23:03 2010
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Thu, 3 Jun 2010 15:23:03 -0500
Subject: [antlr-interest] Grammar not detecting extraneous input at end
In-Reply-To: <AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>
	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>
	<AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>
Message-ID: <80A5CDD2686EA042AE41C526324D44558ECA03A6FD@EXCHANGE2007.signmgmt.local>

Perhaps the lack of EOF in the start rule is Karim's problem; however, I reported a similar situation a few days ago (search for: "Missing" Tokens Do Not Cause Errors) in which I observed that the Match method does not fail, but instead inserts a missing token and does not report any error (from what I can tell).  Could there also be situations where ANTLR consumes extraneous tokens to allow the parse to proceed, but fails to report any error?

Thanks,
Kevin

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kirby Bohling
Sent: Thursday, June 03, 2010 1:46 PM
To: Karim Chichakly
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Grammar not detecting extraneous input at end

Channeling Jim Idle:

Remember to use antlr.markmail.org, this is a very common question,
and has been answered many times.

More then likely you don't require "EOF" at the end of whatever your
start rule is.  The token stream more then likely has a ')' and if you
tried to parse again, you'd get an error.  Use EOF to require all
input to be parsed.

Kirby



On Thu, Jun 3, 2010 at 1:38 PM, Karim Chichakly <karimc17 at gmail.com> wrote:
> Hi,
>
> I have a grammar that does not give an error (in ANTLR 3.2) if there are
> extraneous characters at the end of the input.  For example, I would expect
> "(a+b))" to generate an error, but it does not.  "(a+b)" is parsed fine and
> the extra ")" at the end is just ignored.
>
> I enclose a small sample grammar that demonstrates this problem.  I am using
> the C runtime, but the problem is not there.  The error is not detected in
> ANTLRWorks 1.4 either.
>
> Any help anyone can give me would be greatly appreciated.
>
> Thank you,
>
> Karim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ken.williams at thomsonreuters.com  Thu Jun  3 13:42:03 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Thu, 03 Jun 2010 15:42:03 -0500
Subject: [antlr-interest] Multiple lexer tokens per rule
Message-ID: <C82D7DCB.2B798%ken.williams@thomsonreuters.com>

Both the DAR book and the Javadoc
(http://www.antlr.org/api/ActionScript/org/antlr/runtime/Lexer.html#emitToke
n() ) mention that if you want to emit multiple tokens for a single lexer
rule, you need to override emit() or emitToken().  Does anyone have any
examples of doing that?

I assume nextToken() would also need to be overridden.


In case I have an XY Problem
(http://www.perlmonks.org/index.pl?node_id=542341), my use case is to parse
as in the following examples:

23      -> DIGITS
23,     -> DIGITS PUNC
23,450  -> NUMERIC
23,450, -> NUMERIC PUNC

To do that, I'm using a lexer rule that consumes all the numeric & permitted
in-numeric punctuation, then I fix it up afterwards:

-----------------------
token    : ...
    | DIGITS 
    | NUMERIC -> {fixNum($text)}
    | PUNC

PUNC   : '-' | ',' | '.' ;
fragment DIGIT    : '0'..'9' ;
NUMERIC    :    DIGIT (DIGIT | PUNC)*
        {if ($text.matches("^[0-9]+$")) {$type=DIGITS;}} ;
-----------------------

My fixNum() method is trying to fix things up at the parser level, but I
really want to do it in the lexer.

An alternate solution might be to "push back" any trailing punctuation onto
the input stream.  Not sure if that's possible?


-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From j at junkwallah.org  Thu Jun  3 13:54:45 2010
From: j at junkwallah.org (Junkman)
Date: Thu, 03 Jun 2010 13:54:45 -0700
Subject: [antlr-interest] '%' in action (bug?)
In-Reply-To: <80A5CDD2686EA042AE41C526324D44558ECA03A6FD@EXCHANGE2007.signmgmt.local>
References: <AANLkTilCxm0ZnYOqbhlkpRZyL6yip3QJcf5mc7U8E3-b@mail.gmail.com>	<AANLkTimERrFTKuEtKGWIFCeAst-T3yrH1dBm9VI5X7LC@mail.gmail.com>	<AANLkTinMvfph2-yRliom-jj3PtYgRibgmy_IioGVHjb7@mail.gmail.com>
	<80A5CDD2686EA042AE41C526324D44558ECA03A6FD@EXCHANGE2007.signmgmt.local>
Message-ID: <4C081695.5080904@junkwallah.org>

Greetings,

The following grammar generates invalid string template error (146):

---------------------------------
grammar Test;

@lexer::members {

	int x = 1234 \% 1;

}


TOKEN : 'bogus' ;

stmt	:	
	( . )+
	;

---------------------------------

For @lexer::members action, the modulo operator ('%') causes the error -
escaping with backslash doesn't help.

No problem for @parser::members.

A bug?



From jimi at temporal-wave.com  Thu Jun  3 14:18:14 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 03 Jun 2010 14:18:14 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <C82D7DCB.2B798%ken.williams@thomsonreuters.com>
Message-ID: <0a9ce7c4a17edf4ab1b53ab5c6f19964@temporal-wave.com>

Add to an array or collection then get nextToken to remove from the collection. It si slower to do this so it isn't the default way.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ken Williams
> Sent: Thursday, June 03, 2010 1:42 PM
> To: ANTLR list
> Subject: [antlr-interest] Multiple lexer tokens per rule
> 
> Both the DAR book and the Javadoc
> (http://www.antlr.org/api/ActionScript/org/antlr/runtime/Lexer.html#emi
> tToke
> n() ) mention that if you want to emit multiple tokens for a single
> lexer
> rule, you need to override emit() or emitToken().  Does anyone have any
> examples of doing that?
> 
> I assume nextToken() would also need to be overridden.
> 
> 
> In case I have an XY Problem
> (http://www.perlmonks.org/index.pl?node_id=542341), my use case is to
> parse
> as in the following examples:
> 
> 23      -> DIGITS
> 23,     -> DIGITS PUNC
> 23,450  -> NUMERIC
> 23,450, -> NUMERIC PUNC
> 
> To do that, I'm using a lexer rule that consumes all the numeric &
> permitted
> in-numeric punctuation, then I fix it up afterwards:
> 
> -----------------------
> token    : ...
>     | DIGITS
>     | NUMERIC -> {fixNum($text)}
>     | PUNC
> 
> PUNC   : '-' | ',' | '.' ;
> fragment DIGIT    : '0'..'9' ;
> NUMERIC    :    DIGIT (DIGIT | PUNC)*
>         {if ($text.matches("^[0-9]+$")) {$type=DIGITS;}} ;
> -----------------------
> 
> My fixNum() method is trying to fix things up at the parser level, but
> I
> really want to do it in the lexer.
> 
> An alternate solution might be to "push back" any trailing punctuation
> onto
> the input stream.  Not sure if that's possible?
> 
> 
> --
> Ken Williams
> Sr. Research Scientist
> Thomson Reuters
> Phone: 651-848-7712
> ken.williams at thomsonreuters.com
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Thu Jun  3 14:57:41 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Thu, 03 Jun 2010 16:57:41 -0500
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <0a9ce7c4a17edf4ab1b53ab5c6f19964@temporal-wave.com>
Message-ID: <C82D8F85.2B7A6%ken.williams@thomsonreuters.com>



On 6/3/10 4:18 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> Add to an array or collection then get nextToken to remove from the
> collection. It si slower to do this so it isn't the default way.

Yeah, that's what the book says. =)

It seems like there are some subtleties involved, though - there's a lot of
bookkeeping in nextToken() that looks kind of scary (e.g. the
current-line-number stuff, the default-channel stuff, etc.), and if I
override it I'm really not confident I'll do it correctly.  I'm also unsure
how mTokens(), emit(), and nextToken() cooperate with their member
variables.

I tried this simple-minded implementation, and started getting out-of-bounds
exceptions:

@lexer::members {
    List<Token> tokBuf = new ArrayList<Token>();
    public Token nextToken() {
        while (tokBuf.isEmpty()) {
            emit();
        }
        return tokBuf.remove(0);
    }
    public void emit(Token token) {
        tokBuf.add(token);
    }
}


So if someone does have a working example, I'd love to see it!

-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From j at junkwallah.org  Thu Jun  3 15:36:27 2010
From: j at junkwallah.org (Junkman)
Date: Thu, 03 Jun 2010 15:36:27 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <C82D8F85.2B7A6%ken.williams@thomsonreuters.com>
References: <C82D8F85.2B7A6%ken.williams@thomsonreuters.com>
Message-ID: <4C082E6B.9070508@junkwallah.org>

Try this to get you started:
-----------------------------------------------------
@lexer::members {

    // Queue to hold additional tokens
    private java.util.Queue<Token> tokenQueue = new
java.util.LinkedList<Token>();

    // Include queue in reset().
    public void reset() {
        super.reset();
        tokenQueue.clear();
    }

    // Queued tokens are returned before matching a new token.
    public Token nextToken() {
        if (tokenQueue.peek() != null)
            return tokenQueue.poll();
        return super.nextToken();
    }

}

MATCHED_TOKEN:  ...
    {
        // Add additional tokens to the queue.
        tokenQueue( new CommonToken( ... ) );
    }

-----------------------------------------------------

MATCHED_TOKEN is returned first, and additional tokens queued by
MATCHED_TOKEN's action are returned subsequently before matching new
tokens in the input stream.

Instantiate the additional token accordingly if you need input stream
context - see Lexer.emit().



Ken Williams wrote:
> 
> On 6/3/10 4:18 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> 
>> Add to an array or collection then get nextToken to remove from the
>> collection. It si slower to do this so it isn't the default way.
> 
> Yeah, that's what the book says. =)
> 
> It seems like there are some subtleties involved, though - there's a lot of
> bookkeeping in nextToken() that looks kind of scary (e.g. the
> current-line-number stuff, the default-channel stuff, etc.), and if I
> override it I'm really not confident I'll do it correctly.  I'm also unsure
> how mTokens(), emit(), and nextToken() cooperate with their member
> variables.
> 
> I tried this simple-minded implementation, and started getting out-of-bounds
> exceptions:
> 
> @lexer::members {
>     List<Token> tokBuf = new ArrayList<Token>();
>     public Token nextToken() {
>         while (tokBuf.isEmpty()) {
>             emit();
>         }
>         return tokBuf.remove(0);
>     }
>     public void emit(Token token) {
>         tokBuf.add(token);
>     }
> }
> 
> 
> So if someone does have a working example, I'd love to see it!
> 


From aravinda777 at gmail.com  Fri Jun  4 05:31:27 2010
From: aravinda777 at gmail.com (Aravinda Dassanayake)
Date: Fri, 4 Jun 2010 18:01:27 +0530
Subject: [antlr-interest] CommonToknStream creation hangs
Message-ID: <AANLkTikDSROU8kO6E3vDbWIIBMMQ8jAZkhKqAWBZxQy4@mail.gmail.com>

Hi all,

I am parsing a file using the following Java syntax.

ANTLRFileStream afs = new ANTLRFileStream(file.getPath());
CSLexer lexer = new CSLexer(afs);
CommonTokenStream tokens = new CommonTokenStream(lexer);
CSParser parser = new CSParser(tokens);

However, for some files, the application hangs at the point where it has to
create the 'tokens' object.

What are the possible reasons for this?

Regards,
Aravinda

From zep_antlr at bahj.com  Fri Jun  4 07:17:05 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Fri, 04 Jun 2010 10:17:05 -0400
Subject: [antlr-interest] Match All Tokens Except
Message-ID: <4C090AE1.8080305@bahj.com>

I need way to match every token coming in from the lexer except one or 
two in particular.  This situation is a bit unusual, but it has to do 
with the fact that certain parsing decisions in this language cannot be 
made until semantic analysis of other parts of the code is complete; 
that is, how I choose to parse the code may vary depending upon other 
information I gather later.  In order to separate these steps cleanly, I 
simply want to parse the as-of-yet ambiguous section as a sequence of 
tokens.  (The parse is ambiguous but the lex is not.)

So here's a representative example:

program: programElement* EOF;
programElement: normal | special;
normal: 'a'..'z';
special: '<:'
     (
         special |
         ???
     )
     ':>';

In the place of the ??? above, I would like to express to ANTLR that it 
should accept ANY token which is not '<:' or ':>'.  Any suggestions?

Thanks!

- Zach

From ken.williams at thomsonreuters.com  Fri Jun  4 09:02:14 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Fri, 04 Jun 2010 11:02:14 -0500
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <4C082E6B.9070508@junkwallah.org>
Message-ID: <C82E8DB6.2B7D2%ken.williams@thomsonreuters.com>




On 6/3/10 5:36 PM, "Junkman" <j at junkwallah.org> wrote:

> Try this to get you started: [...]

Thanks, that's a good start.  There's still some bookkeeping I'm not
getting, though.  I seem to have to queue them in the reverse order that I
want them out - in the Lexer I do 'queueUp(tok1); emit(tok2);' and then in
nextToken() I return the queued token first.  But then for some reason I get
the tokens in the sequence 'tok2 tok1'.

It seems like maybe somewhere in the generated code, something?s accessing
tokens directly in the ?state? member, or something?s getting confused by
using ?index?, or something like that.

My complete [toy] grammar is below.  When I use it, I get the following
results:

23      -> DIGITS                  *good*
23,     -> PUNC DIGITS       *bad*
23,450  -> NUMERIC         *good*
23,450, -> PUNC NUMERIC  *bad*


----------------------------------------------------
grammar testg;

options { backtrack=true; memoize=true; output=AST; }

tokens { PUNC; DIGITS; }

@lexer::header{ 
    package com.tr.research.cites;
    import java.util.regex.Pattern;
    import java.util.regex.Matcher;
} 
@parser::header{ package com.tr.research.cites; }

@lexer::members {
    protected Pattern trailingPunc = Pattern.compile("[^0-9]+$");
    protected void fixNum(String text) {
        if (text.matches("^[0-9]+$")) { emit(new CommonToken(DIGITS, text));
return; }
        if (text.matches("^.*[0-9]+$")) { emit(new CommonToken(NUMERIC,
text)); return; }
        
        Matcher m = trailingPunc.matcher(text);
        if (!m.find())
            throw new RuntimeException("Can't figure out numeric token '" +
text + "'");
        
        String prefix = text.substring(0, m.start());
        String suffix = text.substring(m.start());
        
        queueUp( new CommonToken(prefix.matches("^[0-9]+$") ? DIGITS :
NUMERIC, prefix) );
        emit(new CommonToken( PUNC, suffix ));
    }

    // Queue to hold additional tokens
    private java.util.Queue<Token> tokenQueue = new
java.util.LinkedList<Token>();

    // Include queue in reset().
    public void reset() {
        super.reset();
        tokenQueue.clear();
    }

    // Queued tokens are returned before matching a new token.
    public Token nextToken() {
        return tokenQueue.isEmpty() ? super.nextToken() : tokenQueue.poll();
    }
    
    public void queueUp(Token t) {
        tokenQueue.add(t);
    }
}

cite    :    token+ EOF ;
token    : DIGITS | NUMERIC | PUNC ;
WS    :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;

fragment DIGIT    : '0'..'9' ;
NUMERIC    :    DIGIT (DIGIT | '-' | ',' | '.')*  {fixNum($text);} ;
----------------------------------------------------


-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From richard.thrippleton at progress.com  Fri Jun  4 09:29:57 2010
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Fri, 4 Jun 2010 17:29:57 +0100
Subject: [antlr-interest] Pruning malformed ASTs
Message-ID: <4C092A05.9090604@progress.com>

I am in the slightly painful situation of wanting to apply a tree grammar 
(type and other constraints checking) after a parser grammar even in the 
case that there were parse errors.

At the moment I just have the tree grammar exit at the moment that it 
encounters a malformed part of the tree; as I've seen stated on here before, 
there's no other sensible thing to do.

Sometimes I'm fortunate to have simple parse errors that still result in a 
correct tree (e.g. standalone unexpected tokens just get removed in 
recovery). For the larger parse errors I'll get an AST containing 
CommonErrorNodes which obviously trip up the tree grammar.

What I'm looking for is some common pattern or part of the ANTLR API that 
will allow the parser to snip subtrees at a specific granularity that 
contain error nodes as I create them. For example:

procedure:
	command* -> ^(PROC command*)

needs to ignore any tree coming out of the 'command' rule that contains 
error nodes.

Thanks,
Richard
-- 
\o/

From kcarroll at signmgmt.com  Fri Jun  4 09:57:22 2010
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Fri, 4 Jun 2010 11:57:22 -0500
Subject: [antlr-interest] Pruning malformed ASTs
In-Reply-To: <4C092A05.9090604@progress.com>
References: <4C092A05.9090604@progress.com>
Message-ID: <80A5CDD2686EA042AE41C526324D44558EED6E2D80@EXCHANGE2007.signmgmt.local>

I've run into a similar situation.  Basically, I needed to do the same thing as you - i.e., completely remove a node from arbitrary places in the tree.  I had trouble coming up with a solution using Antlr tree grammars, so I just wrote a simple recursive method to strip out the unwanted nodes.  In my case, running this method is the last link in the chain, so I'm only interested in the Ast.  I believe you will have to create a new CommonTreeNodeStream using the pruned Ast prior to passing it on to your tree grammar parser.  I've quickly converted it here to use CommonTree nodes as the ast type.  Hope this helps (If any ANTLR guru's know of a better, more elegant solution, please chime in):

private static bool RemoveErrorNodes(CommonTree ast)
    {
    if (ast is CommonErrorNode)
        {
        ((CommonTree) ast.Parent).DeleteChild(ast.ChildIndex);
        return true;
        }

    for (int i = 0; i < ast.ChildCount; ++i)
        if (RemoveErrorNodes((CommonTree) ast.GetChild(i)))
            --i;

    return false;
    }



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Richard Thrippleton
Sent: Friday, June 04, 2010 11:30 AM
To: ANTLR Interest
Subject: [antlr-interest] Pruning malformed ASTs

I am in the slightly painful situation of wanting to apply a tree grammar 
(type and other constraints checking) after a parser grammar even in the 
case that there were parse errors.

At the moment I just have the tree grammar exit at the moment that it 
encounters a malformed part of the tree; as I've seen stated on here before, 
there's no other sensible thing to do.

Sometimes I'm fortunate to have simple parse errors that still result in a 
correct tree (e.g. standalone unexpected tokens just get removed in 
recovery). For the larger parse errors I'll get an AST containing 
CommonErrorNodes which obviously trip up the tree grammar.

What I'm looking for is some common pattern or part of the ANTLR API that 
will allow the parser to snip subtrees at a specific granularity that 
contain error nodes as I create them. For example:

procedure:
	command* -> ^(PROC command*)

needs to ignore any tree coming out of the 'command' rule that contains 
error nodes.

Thanks,
Richard
-- 
\o/

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Jun  4 10:10:40 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 04 Jun 2010 10:10:40 -0700
Subject: [antlr-interest] CommonToknStream creation hangs
In-Reply-To: <AANLkTikDSROU8kO6E3vDbWIIBMMQ8jAZkhKqAWBZxQy4@mail.gmail.com>
Message-ID: <991a044a3d48814fb5247292b15fbad0@temporal-wave.com>

Did you try using the debugger?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Aravinda Dassanayake
> Sent: Friday, June 04, 2010 5:31 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] CommonToknStream creation hangs
> 
> Hi all,
> 
> I am parsing a file using the following Java syntax.
> 
> ANTLRFileStream afs = new ANTLRFileStream(file.getPath());
> CSLexer lexer = new CSLexer(afs);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> CSParser parser = new CSParser(tokens);
> 
> However, for some files, the application hangs at the point where it
> has to
> create the 'tokens' object.
> 
> What are the possible reasons for this?
> 
> Regards,
> Aravinda
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Fri Jun  4 12:50:30 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 04 Jun 2010 12:50:30 -0700
Subject: [antlr-interest] Pruning malformed ASTs
In-Reply-To: <4C092A05.9090604@progress.com>
Message-ID: <4e89c43a35497849a17ad299a86a9dfc@temporal-wave.com>

You might be better off just improving the error catching capabilities of your parser such that you do not generate the error nodes in the first place. You can use the error recovery techniques shown in the Wiki article:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

And then download the JavaFX parser grammar to see how to intercept errors such that you can create a tree with a defined pattern for error nodes. I think that you will need to build the tree manually to do that, but you can build an ANTLR AST, you don't have to come up with your own format.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Richard Thrippleton
> Sent: Friday, June 04, 2010 9:30 AM
> To: ANTLR Interest
> Subject: [antlr-interest] Pruning malformed ASTs
> 
> I am in the slightly painful situation of wanting to apply a tree
> grammar
> (type and other constraints checking) after a parser grammar even in
> the
> case that there were parse errors.
> 
> At the moment I just have the tree grammar exit at the moment that it
> encounters a malformed part of the tree; as I've seen stated on here
> before,
> there's no other sensible thing to do.
> 
> Sometimes I'm fortunate to have simple parse errors that still result
> in a
> correct tree (e.g. standalone unexpected tokens just get removed in
> recovery). For the larger parse errors I'll get an AST containing
> CommonErrorNodes which obviously trip up the tree grammar.
> 
> What I'm looking for is some common pattern or part of the ANTLR API
> that
> will allow the parser to snip subtrees at a specific granularity that
> contain error nodes as I create them. For example:
> 
> procedure:
> 	command* -> ^(PROC command*)
> 
> needs to ignore any tree coming out of the 'command' rule that contains
> error nodes.
> 
> Thanks,
> Richard
> --
> \o/
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Fri Jun  4 12:53:12 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 04 Jun 2010 12:53:12 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <C82E8DB6.2B7D2%ken.williams@thomsonreuters.com>
Message-ID: <b91b423f4bb1fe41839ac236a2c7616a@temporal-wave.com>

You need to use a collection that gives out the entries in the order they were added:

http://java.sun.com/docs/books/tutorial/collections/interfaces/queue.html

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ken Williams
> Sent: Friday, June 04, 2010 9:02 AM
> To: Junkman
> Cc: ANTLR list
> Subject: Re: [antlr-interest] Multiple lexer tokens per rule
> 
> 
> 
> 
> On 6/3/10 5:36 PM, "Junkman" <j at junkwallah.org> wrote:
> 
> > Try this to get you started: [...]
> 
> Thanks, that's a good start.  There's still some bookkeeping I'm not
> getting, though.  I seem to have to queue them in the reverse order
> that I
> want them out - in the Lexer I do 'queueUp(tok1); emit(tok2);' and then
> in
> nextToken() I return the queued token first.  But then for some reason
> I get
> the tokens in the sequence 'tok2 tok1'.
> 
> It seems like maybe somewhere in the generated code, something?s
> accessing
> tokens directly in the ?state? member, or something?s getting confused
> by
> using ?index?, or something like that.
> 
> My complete [toy] grammar is below.  When I use it, I get the following
> results:
> 
> 23      -> DIGITS                  *good*
> 23,     -> PUNC DIGITS       *bad*
> 23,450  -> NUMERIC         *good*
> 23,450, -> PUNC NUMERIC  *bad*
> 
> 
> ----------------------------------------------------
> grammar testg;
> 
> options { backtrack=true; memoize=true; output=AST; }
> 
> tokens { PUNC; DIGITS; }
> 
> @lexer::header{
>     package com.tr.research.cites;
>     import java.util.regex.Pattern;
>     import java.util.regex.Matcher;
> }
> @parser::header{ package com.tr.research.cites; }
> 
> @lexer::members {
>     protected Pattern trailingPunc = Pattern.compile("[^0-9]+$");
>     protected void fixNum(String text) {
>         if (text.matches("^[0-9]+$")) { emit(new CommonToken(DIGITS,
> text));
> return; }
>         if (text.matches("^.*[0-9]+$")) { emit(new CommonToken(NUMERIC,
> text)); return; }
> 
>         Matcher m = trailingPunc.matcher(text);
>         if (!m.find())
>             throw new RuntimeException("Can't figure out numeric token
> '" +
> text + "'");
> 
>         String prefix = text.substring(0, m.start());
>         String suffix = text.substring(m.start());
> 
>         queueUp( new CommonToken(prefix.matches("^[0-9]+$") ? DIGITS :
> NUMERIC, prefix) );
>         emit(new CommonToken( PUNC, suffix ));
>     }
> 
>     // Queue to hold additional tokens
>     private java.util.Queue<Token> tokenQueue = new
> java.util.LinkedList<Token>();
> 
>     // Include queue in reset().
>     public void reset() {
>         super.reset();
>         tokenQueue.clear();
>     }
> 
>     // Queued tokens are returned before matching a new token.
>     public Token nextToken() {
>         return tokenQueue.isEmpty() ? super.nextToken() :
> tokenQueue.poll();
>     }
> 
>     public void queueUp(Token t) {
>         tokenQueue.add(t);
>     }
> }
> 
> cite    :    token+ EOF ;
> token    : DIGITS | NUMERIC | PUNC ;
> WS    :    ( ' ' | '\t'| '\f' | '\n' | '\r' ) {skip();} ;
> 
> fragment DIGIT    : '0'..'9' ;
> NUMERIC    :    DIGIT (DIGIT | '-' | ',' | '.')*  {fixNum($text);} ;
> ----------------------------------------------------
> 
> 
> --
> Ken Williams
> Sr. Research Scientist
> Thomson Reuters
> Phone: 651-848-7712
> ken.williams at thomsonreuters.com
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ken.williams at thomsonreuters.com  Fri Jun  4 12:58:10 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Fri, 04 Jun 2010 14:58:10 -0500
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <b91b423f4bb1fe41839ac236a2c7616a@temporal-wave.com>
Message-ID: <C82EC502.2B7F0%ken.williams@thomsonreuters.com>




On 6/4/10 2:53 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> You need to use a collection that gives out the entries in the order they were
> added:
> 
> http://java.sun.com/docs/books/tutorial/collections/interfaces/queue.html

I don't think that's the issue here, there's only ever 1 element in the
queue.  It's not getting mixed up with other elements in the queue, it's
getting mixed up with the token held by the superclass.


-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From j at junkwallah.org  Fri Jun  4 14:16:31 2010
From: j at junkwallah.org (Junkman)
Date: Fri, 04 Jun 2010 14:16:31 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <C82EC502.2B7F0%ken.williams@thomsonreuters.com>
References: <C82EC502.2B7F0%ken.williams@thomsonreuters.com>
Message-ID: <4C096D2F.30803@junkwallah.org>

Ken Williams wrote:
> 
> 
> On 6/4/10 2:53 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> 
>> You need to use a collection that gives out the entries in the order they were
>> added:
>>
>> http://java.sun.com/docs/books/tutorial/collections/interfaces/queue.html
> 
> I don't think that's the issue here, there's only ever 1 element in the
> queue.  It's not getting mixed up with other elements in the queue, it's
> getting mixed up with the token held by the superclass.
> 
> 

The way nextToken() is overriden, it first returns the token matched by
the rule, and subsequently any additional queued token before matching a
new token in the input stream.

Lexer.emit(x) sets x as the token matched by the rule.

That's why the token emitted with Lexer.emit(Token) is returned before
any queued token(s).



From ken.williams at thomsonreuters.com  Fri Jun  4 14:21:58 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Fri, 04 Jun 2010 16:21:58 -0500
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <4C096D2F.30803@junkwallah.org>
Message-ID: <C82ED8A6.2B7FB%ken.williams@thomsonreuters.com>




On 6/4/10 4:16 PM, "Junkman" <j at junkwallah.org> wrote:
> 
> The way nextToken() is overriden, it first returns the token matched by
> the rule, and subsequently any additional queued token before matching a
> new token in the input stream.

Maybe I'm being dense here, but I don't think that's what it's doing:

    public Token nextToken() {
        return tokenQueue.isEmpty() ? super.nextToken() : tokenQueue.poll();
    }

If tokenQueue() is non-empty, it always uses it.  On the *next* invocation,
when it's empty, it will call super.nextToken().


-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From j at junkwallah.org  Fri Jun  4 15:45:13 2010
From: j at junkwallah.org (Junkman)
Date: Fri, 04 Jun 2010 15:45:13 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <C82ED8A6.2B7FB%ken.williams@thomsonreuters.com>
References: <C82ED8A6.2B7FB%ken.williams@thomsonreuters.com>
Message-ID: <4C0981F9.3070706@junkwallah.org>

Ken Williams wrote:
> 
> 
> On 6/4/10 4:16 PM, "Junkman" <j at junkwallah.org> wrote:
>> The way nextToken() is overriden, it first returns the token matched by
>> the rule, and subsequently any additional queued token before matching a
>> new token in the input stream.
> 
> Maybe I'm being dense here, but I don't think that's what it's doing:
> 
>     public Token nextToken() {
>         return tokenQueue.isEmpty() ? super.nextToken() : tokenQueue.poll();
>     }
> 
> If tokenQueue() is non-empty, it always uses it.  On the *next* invocation,
> when it's empty, it will call super.nextToken().
> 
> 

Think of tokens generated by a single rule invocation as a set.  The set
is generated in/under "super.nextToken()", AFTER the queue has been
tested to be empty.  Among the tokens in the set, the "matching" token
is returned first, because that's what Lexer.nextToken()
("super.nextToken()") returns.

If that's still not clear, I suggest you put the generated lexer under a
debugger (like Jim suggested in another thread ;-) and trace it from
nextToken() - will give you better explanation than my verbiage.

Best regards.

From christian.convey at gmail.com  Sat Jun  5 19:41:05 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sat, 5 Jun 2010 22:41:05 -0400
Subject: [antlr-interest] Parsing whole-line comments?
Message-ID: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>

I'm new to ANTLR, and I'm having trouble designing a lexicon and
grammar for what I think is really simple.  The DSL I'm dealing with
is mostly line-oriented, where the first character of a line indicates
what kind of thing the line is.  Example:

C This is a test.
E 1 2 3
C Previous line (# 2) was an "edge" line.

Lines starting with 'C' are comment lines, in which all characters
after the 'C' until the end-of-line are comment text that I want the
parser to report.

If I was using standard regular expressions to represent my tokens, I
would define a "comment" token something like this:
  ^C.*$

That is, <beginning of line> <the letter C> <zero or more
non-end-of-line characters> <end-of-line>

My problem is, to my knowledge ANTLR won't let me define tokens that
match on the beginning of a line ('^').

Any suggestions?

From christian.convey at gmail.com  Sun Jun  6 04:14:14 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 07:14:14 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
Message-ID: <AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>

>> That is, <beginning of line> <the letter C> <zero or more
>> non-end-of-line characters> <end-of-line>
>>
>> My problem is, to my knowledge ANTLR won't let me define tokens that
>> match on the beginning of a line ('^').
>>
>> Any suggestions?
>
>
> There is no need to match such positions: when you match a certain line (a
> token that ends with a line break), the next character will be the first in
> a (new) line.
> Something like this should do the trick:
>
> grammar Test;
> parse
> ??: (Comment | Line)+ EOF
> ??;
> Comment
> ??: ?'C' ~('\r' | '\n')* (NewLine | EOF)
> ??;
> Line
> ??: ?~'C' ~('\r' | '\n')* (NewLine | EOF)
> ??;
> fragment
> NewLine
> ??: ?'\r'? '\n'
> ??| ?'\r'
> ??;

Thanks, that may work for my particular language, because I may have
no other tokens that begin with a capital letter 'C'.

But let me wax hypothetical for a minute.  Suppose that in other,
non-comment lines, I have need to support another token that begins
with a capital C.  For example, 'CALL'.   So my DSL might have a
program like this:

C My test
E CALL FOO
CALL This is a comment because 'C' is in first column.

Any suggestions for how to an ANTLR lexeme/grammar should handle this?
 My impression is that something like Flex, whose token regex's can
match the beginning-of-line imaginary character, would just let me do
this:

CommentToken ::= ^C.*$
CallToken ::= ~(^)CALL

From j at junkwallah.org  Sun Jun  6 07:39:34 2010
From: j at junkwallah.org (Junkman)
Date: Sun, 06 Jun 2010 07:39:34 -0700
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
Message-ID: <4C0BB326.1040509@junkwallah.org>

It's probably better to keep lexer simple - just convert character
stream into a token stream - and push contextual constraints like
"beginning of the line" into parsing rules, like this:

----------------
/* Tokens */
NEWLINE: '\n' ;
E:  'E';
C:  'C';
CALL: 'CALL';
// default greediness ensures "CALL" is matched as CALL instead of C.


/* Parsing rules */
stmt : E ... NEWLINE
     | C ... NEWLINE
     | CALL ... NEWLINE
     ;
----------------

Use stmt as the start symbol for the parser, and you have imposed
contextual rules for tokens via defining what are valid stmt's.

Christian Convey wrote:
>>> That is, <beginning of line> <the letter C> <zero or more
>>> non-end-of-line characters> <end-of-line>
>>>
>>> My problem is, to my knowledge ANTLR won't let me define tokens that
>>> match on the beginning of a line ('^').
>>>
>>> Any suggestions?
>>
>> There is no need to match such positions: when you match a certain line (a
>> token that ends with a line break), the next character will be the first in
>> a (new) line.
>> Something like this should do the trick:
>>
>> grammar Test;
>> parse
>>   : (Comment | Line)+ EOF
>>   ;
>> Comment
>>   :  'C' ~('\r' | '\n')* (NewLine | EOF)
>>   ;
>> Line
>>   :  ~'C' ~('\r' | '\n')* (NewLine | EOF)
>>   ;
>> fragment
>> NewLine
>>   :  '\r'? '\n'
>>   |  '\r'
>>   ;
> 
> Thanks, that may work for my particular language, because I may have
> no other tokens that begin with a capital letter 'C'.
> 
> But let me wax hypothetical for a minute.  Suppose that in other,
> non-comment lines, I have need to support another token that begins
> with a capital C.  For example, 'CALL'.   So my DSL might have a
> program like this:
> 
> C My test
> E CALL FOO
> CALL This is a comment because 'C' is in first column.
> 
> Any suggestions for how to an ANTLR lexeme/grammar should handle this?
>  My impression is that something like Flex, whose token regex's can
> match the beginning-of-line imaginary character, would just let me do
> this:
> 
> CommentToken ::= ^C.*$
> CallToken ::= ~(^)CALL
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From christian.convey at gmail.com  Sun Jun  6 07:47:25 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 10:47:25 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <4C0BB326.1040509@junkwallah.org>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
Message-ID: <AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>

> ----------------
> /* Tokens */
> NEWLINE: '\n' ;
> E: ?'E';
> C: ?'C';
> CALL: 'CALL';
> // default greediness ensures "CALL" is matched as CALL instead of C.

Thanks, but 'C' can also be the name of a variable, as long as it's
not in the first column.  So I don't think greediness solves the whole
problem.

From j at junkwallah.org  Sun Jun  6 08:19:29 2010
From: j at junkwallah.org (Junkman)
Date: Sun, 06 Jun 2010 08:19:29 -0700
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
Message-ID: <4C0BBC81.1090907@junkwallah.org>

Christian Convey wrote:
>> ----------------
>> /* Tokens */
>> NEWLINE: '\n' ;
>> E:  'E';
>> C:  'C';
>> CALL: 'CALL';
>> // default greediness ensures "CALL" is matched as CALL instead of C.
> 
> Thanks, but 'C' can also be the name of a variable, as long as it's
> not in the first column.  So I don't think greediness solves the whole
> problem.
> 

I wonder if this would work better in that case:
---------------------------
/* Tokens */
NEWLINE: '\n' ;

/* Parsing rules */
stmt : 'E' ... NEWLINE
     | 'C' ... NEWLINE
     | 'CALL'  ... NEWLINE
     ;
---------------------------

Nor sure since I don't know how explicitly defined tokens are treated
differently from tokens implicitly defined in parsing rules.

Alternatively, you can apply semantic predicate to lexer rules like this:
------------------------

C:  { $pos == 0 }?=> 'C' ;

------------------------

It should only match "C" at the beginning of the line, but I found (in
my noob experiences) semantic predicate can be pretty tricky due to
"hoisting out" business and how it affects prediction DFA construction -
I'm sure more experienced hands can tell you better.

Good luck.

From christian.convey at gmail.com  Sun Jun  6 09:19:43 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 12:19:43 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <4C0BBC81.1090907@junkwallah.org>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
Message-ID: <AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>

> Alternatively, you can apply semantic predicate to lexer rules like this:
> ------------------------
>
> C: ?{ $pos == 0 }?=> 'C' ;
>
> ------------------------
>
> It should only match "C" at the beginning of the line, but I found (in
> my noob experiences) semantic predicate can be pretty tricky due to
> "hoisting out" business and how it affects prediction DFA construction -
> I'm sure more experienced hands can tell you better.

Thanks.  But I'm actually pretty against intermixing lexical,
grammatical, and semantic rules.  At that point (at least in my
particular project) I've given up most of the clarity that I was
hoping to gain by using ANTLR as opposed to a hand-written recursive
descent parser.

I think at this point I'm just going to hand-write the parser for my
DSL.  Thanks very much for the help.

From jimi at temporal-wave.com  Sun Jun  6 11:16:38 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 06 Jun 2010 11:16:38 -0700
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
Message-ID: <aebc724aa3259842ac32b504a9f70a7f@temporal-wave.com>

COMMENT :{ getCharPositionInLine() == 0}? 'C' etc....

Or perhaps

COMMENT :{ getCharPositionInLine() == 0}?=> 'C' etc....

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian Convey
> Sent: Sunday, June 06, 2010 4:14 AM
> To: Bart Kiers
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Parsing whole-line comments?
> 
> >> That is, <beginning of line> <the letter C> <zero or more
> >> non-end-of-line characters> <end-of-line>
> >>
> >> My problem is, to my knowledge ANTLR won't let me define tokens that
> >> match on the beginning of a line ('^').
> >>
> >> Any suggestions?
> >
> >
> > There is no need to match such positions: when you match a certain
> line (a
> > token that ends with a line break), the next character will be the
> first in
> > a (new) line.
> > Something like this should do the trick:
> >
> > grammar Test;
> > parse
> > ??: (Comment | Line)+ EOF
> > ??;
> > Comment
> > ??: ?'C' ~('\r' | '\n')* (NewLine | EOF)
> > ??;
> > Line
> > ??: ?~'C' ~('\r' | '\n')* (NewLine | EOF)
> > ??;
> > fragment
> > NewLine
> > ??: ?'\r'? '\n'
> > ??| ?'\r'
> > ??;
> 
> Thanks, that may work for my particular language, because I may have
> no other tokens that begin with a capital letter 'C'.
> 
> But let me wax hypothetical for a minute.  Suppose that in other,
> non-comment lines, I have need to support another token that begins
> with a capital C.  For example, 'CALL'.   So my DSL might have a
> program like this:
> 
> C My test
> E CALL FOO
> CALL This is a comment because 'C' is in first column.
> 
> Any suggestions for how to an ANTLR lexeme/grammar should handle this?
>  My impression is that something like Flex, whose token regex's can
> match the beginning-of-line imaginary character, would just let me do
> this:
> 
> CommentToken ::= ^C.*$
> CallToken ::= ~(^)CALL
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jbb at acm.org  Sun Jun  6 11:16:59 2010
From: jbb at acm.org (John B. Brodie)
Date: Sun, 06 Jun 2010 14:16:59 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
Message-ID: <1275848219.15183.18.camel@gecko.home.org>

Greetings!

On Sun, 2010-06-06 at 12:19 -0400, Christian Convey wrote:
> > Alternatively, you can apply semantic predicate to lexer rules like this:
> > ------------------------
> >
> > C:  { $pos == 0 }?=> 'C' ;
> >
> > ------------------------
> >
> > It should only match "C" at the beginning of the line, but I found (in
> > my noob experiences) semantic predicate can be pretty tricky due to
> > "hoisting out" business and how it affects prediction DFA construction -
> > I'm sure more experienced hands can tell you better.
> 
> Thanks.  But I'm actually pretty against intermixing lexical,
> grammatical, and semantic rules.  At that point (at least in my
> particular project) I've given up most of the clarity that I was
> hoping to gain by using ANTLR as opposed to a hand-written recursive
> descent parser.
> 
> I think at this point I'm just going to hand-write the parser for my
> DSL.  Thanks very much for the help.
> 

you might look at the Python lexer in the examples. It seems to me the
Python lexer would have a similar problem to yours --- identifying white
space at the beginning of a line --- your case seems a little simpler
because you seem to care about just the first letter at the beginning of
the line.

also perhaps realizing that the first character of a line must be
preceeded by a new-line character (except the very first line).

so:

tokens { C; E; }

......

NEWLINE : ( '\r' | '\n' )+  // for the last line....
   ( 'C' { $type = C; }
   | 'E' { $type = E; }
//..... other first-char possibilities go here
   )
   ;

CALL : 'CALL' ;
ID : ('a'..'z'|'A'..'Z')+ // or whatever

and of course create a wrapper around the input stream in order to
supply a new-line as the very first character and then the actual input
text as the rest of the stream. (in effect append a new-line to the
front of the input)

just a thought.....
   -jbb



From christian.convey at gmail.com  Sun Jun  6 12:09:02 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 15:09:02 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <1275848219.15183.18.camel@gecko.home.org>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
	<1275848219.15183.18.camel@gecko.home.org>
Message-ID: <AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>

Hi John,

Thanks for the ideas.  The "{ $type = ..." approach sounds viable.
But it still seems like a messier solution than I was hoping for when
I decided to take ANTLR for a test drive.

Do you know why ANTLR lacks regular expressions that can match the
beginning-of-line?  It seems to me like it would go a long way to
making line-oriented languages easier to describe.  I can't think of
any good reason for ANTLR to not support this, at least as an option.

- C

On Sun, Jun 6, 2010 at 2:16 PM, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
>
> On Sun, 2010-06-06 at 12:19 -0400, Christian Convey wrote:
>> > Alternatively, you can apply semantic predicate to lexer rules like this:
>> > ------------------------
>> >
>> > C: ?{ $pos == 0 }?=> 'C' ;
>> >
>> > ------------------------
>> >
>> > It should only match "C" at the beginning of the line, but I found (in
>> > my noob experiences) semantic predicate can be pretty tricky due to
>> > "hoisting out" business and how it affects prediction DFA construction -
>> > I'm sure more experienced hands can tell you better.
>>
>> Thanks. ?But I'm actually pretty against intermixing lexical,
>> grammatical, and semantic rules. ?At that point (at least in my
>> particular project) I've given up most of the clarity that I was
>> hoping to gain by using ANTLR as opposed to a hand-written recursive
>> descent parser.
>>
>> I think at this point I'm just going to hand-write the parser for my
>> DSL. ?Thanks very much for the help.
>>
>
> you might look at the Python lexer in the examples. It seems to me the
> Python lexer would have a similar problem to yours --- identifying white
> space at the beginning of a line --- your case seems a little simpler
> because you seem to care about just the first letter at the beginning of
> the line.
>
> also perhaps realizing that the first character of a line must be
> preceeded by a new-line character (except the very first line).
>
> so:
>
> tokens { C; E; }
>
> ......
>
> NEWLINE : ( '\r' | '\n' )+ ?// for the last line....
> ? ( 'C' { $type = C; }
> ? | 'E' { $type = E; }
> //..... other first-char possibilities go here
> ? )
> ? ;
>
> CALL : 'CALL' ;
> ID : ('a'..'z'|'A'..'Z')+ // or whatever
>
> and of course create a wrapper around the input stream in order to
> supply a new-line as the very first character and then the actual input
> text as the rest of the stream. (in effect append a new-line to the
> front of the input)
>
> just a thought.....
> ? -jbb
>
>
>

From scott at javadude.com  Sun Jun  6 11:36:22 2010
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 6 Jun 2010 14:36:22 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <aebc724aa3259842ac32b504a9f70a7f@temporal-wave.com>
References: <AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<aebc724aa3259842ac32b504a9f70a7f@temporal-wave.com>
Message-ID: <AANLkTinJ9MJL5wHimhBCHRfVhiQeTAYZwKQM0X8ghlG-@mail.gmail.com>

A simpler approach might be to read lines (BufferedReader), check the
first character, and if something that requires a more interesting
parse, _then_ pass the rest of the line to a parser.
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com

From christian.convey at gmail.com  Sun Jun  6 12:43:07 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 15:43:07 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTinJ9MJL5wHimhBCHRfVhiQeTAYZwKQM0X8ghlG-@mail.gmail.com>
References: <AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<aebc724aa3259842ac32b504a9f70a7f@temporal-wave.com>
	<AANLkTinJ9MJL5wHimhBCHRfVhiQeTAYZwKQM0X8ghlG-@mail.gmail.com>
Message-ID: <AANLkTilvpzPNsZEDKrwrNX1EkoHMWRUC38n4h-euccei@mail.gmail.com>

Agreed.  Although my DSL is simple enough that if I'm going to do
that, I may as well just hand-write my parser.  Thanks for the
suggestion.

- C

On Sun, Jun 6, 2010 at 2:36 PM, Scott Stanchfield <scott at javadude.com> wrote:
> A simpler approach might be to read lines (BufferedReader), check the
> first character, and if something that requires a more interesting
> parse, _then_ pass the rest of the line to a parser.
> -- Scott
>
> ----------------------------------------
> Scott Stanchfield
> http://javadude.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From lgcraymer at yahoo.com  Sun Jun  6 15:49:51 2010
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 6 Jun 2010 15:49:51 -0700 (PDT)
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
	<1275848219.15183.18.camel@gecko.home.org>
	<AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>
Message-ID: <807433.22866.qm@web55904.mail.re3.yahoo.com>

You can, of course, do

COMMENT : '\n' 'C' (~'\n')+ ;

NEWLINE: '\n' ;

(the ordering matters for ANTLR 3's DFA construction), but the approach Brodie suggested is the common idiom since it costs less in terms of performance and does not depend on the quirks of ANTLR DFA construction.  "Start of line" is a semantic notion, whereas '\n' 'C' specifies syntax.

--Loring





----- Original Message ----
> From: Christian Convey <christian.convey at gmail.com>
> To: John B. Brodie <jbb at acm.org>
> Cc: antlr-interest at antlr.org
> Sent: Sun, June 6, 2010 12:09:02 PM
> Subject: Re: [antlr-interest] Parsing whole-line comments?
> 
> Hi John,

Thanks for the ideas.  The "{ $type = ..." approach sounds 
> viable.
But it still seems like a messier solution than I was hoping for 
> when
I decided to take ANTLR for a test drive.

Do you know why ANTLR 
> lacks regular expressions that can match the
beginning-of-line?  It 
> seems to me like it would go a long way to
making line-oriented languages 
> easier to describe.  I can't think of
any good reason for ANTLR to not 
> support this, at least as an option.

- C

On Sun, Jun 6, 2010 at 
> 2:16 PM, John B. Brodie <
> href="mailto:jbb at acm.org">jbb at acm.org> wrote:
> 
> Greetings!
>
> On Sun, 2010-06-06 at 12:19 -0400, Christian Convey 
> wrote:
>> > Alternatively, you can apply semantic predicate to lexer 
> rules like this:
>> > ------------------------
>> 
> >
>> > C:  { $pos == 0 }?=> 'C' ;
>> >
>> 
> > ------------------------
>> >
>> > It should only 
> match "C" at the beginning of the line, but I found (in
>> > my noob 
> experiences) semantic predicate can be pretty tricky due to
>> > 
> "hoisting out" business and how it affects prediction DFA construction 
> -
>> > I'm sure more experienced hands can tell you 
> better.
>>
>> Thanks.  But I'm actually pretty against 
> intermixing lexical,
>> grammatical, and semantic rules.  At that point 
> (at least in my
>> particular project) I've given up most of the 
> clarity that I was
>> hoping to gain by using ANTLR as opposed to a 
> hand-written recursive
>> descent parser.
>>
>> I 
> think at this point I'm just going to hand-write the parser for my
>> 
> DSL.  Thanks very much for the help.
>>
>
> you might look 
> at the Python lexer in the examples. It seems to me the
> Python lexer 
> would have a similar problem to yours --- identifying white
> space at the 
> beginning of a line --- your case seems a little simpler
> because you 
> seem to care about just the first letter at the beginning of
> the 
> line.
>
> also perhaps realizing that the first character of a line 
> must be
> preceeded by a new-line character (except the very first 
> line).
>
> so:
>
> tokens { C; E; }
>
> 
> ......
>
> NEWLINE : ( '\r' | '\n' )+  // for the last 
> line....
>   ( 'C' { $type = C; }
>   | 'E' { $type = E; }
> 
> //..... other first-char possibilities go here
>   )
>   
> ;
>
> CALL : 'CALL' ;
> ID : ('a'..'z'|'A'..'Z')+ // or 
> whatever
>
> and of course create a wrapper around the input stream 
> in order to
> supply a new-line as the very first character and then the 
> actual input
> text as the rest of the stream. (in effect append a 
> new-line to the
> front of the input)
>
> just a 
> thought.....
>   -jbb
>
>
>

List: 
> href="http://www.antlr.org/mailman/listinfo/antlr-interest" target=_blank 
> >http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
> href="http://www.antlr.org/mailman/options/antlr-interest/your-email-address" 
> target=_blank 
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      


From christian.convey at gmail.com  Sun Jun  6 15:56:10 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 18:56:10 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <807433.22866.qm@web55904.mail.re3.yahoo.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
	<1275848219.15183.18.camel@gecko.home.org>
	<AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>
	<807433.22866.qm@web55904.mail.re3.yahoo.com>
Message-ID: <AANLkTim4Lz1msuMcT2VzZ4rk5SmmFjldQrj3vNNe314l@mail.gmail.com>

On Sun, Jun 6, 2010 at 6:49 PM, Loring Craymer <lgcraymer at yahoo.com> wrote:
> You can, of course, do
>
> COMMENT : '\n' 'C' (~'\n')+ ;
>
> NEWLINE: '\n' ;
>
> (the ordering matters for ANTLR 3's DFA construction), but the approach Brodie suggested is the common idiom since it costs less in terms of performance and does not depend on the quirks of ANTLR DFA construction. ?"Start of line" is a semantic notion, whereas '\n' 'C' specifies syntax.


Thanks.  How would you handle the case where the very first line in
the file is a comment line?  That is, there's no preceding newline
sequence.

From lgcraymer at yahoo.com  Sun Jun  6 17:16:28 2010
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 6 Jun 2010 17:16:28 -0700 (PDT)
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <AANLkTim4Lz1msuMcT2VzZ4rk5SmmFjldQrj3vNNe314l@mail.gmail.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
	<1275848219.15183.18.camel@gecko.home.org>
	<AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>
	<807433.22866.qm@web55904.mail.re3.yahoo.com>
	<AANLkTim4Lz1msuMcT2VzZ4rk5SmmFjldQrj3vNNe314l@mail.gmail.com>
Message-ID: <936787.20544.qm@web55907.mail.re3.yahoo.com>

Then you probably would want to handle this special case with a custom subclass of ANTLRFileStream that checks to see if the first line begins with 'C' and consumes the line (but not the newline following) if it does.  (You would also need to subclass CommonTokenStream if you need to keep that first comment).  This is not the most elegant solution, perhaps, but it provides optimal performance at about the same implementation cost as any of the alternatives.

Lexer modes would be another way of handling this problem, but they are not currently supported in ANTLR 3.  For that matter, this would also not be a problem if ANTLR lexer grammars were true context free grammars that supported start symbols, but then you would have to deal with writing the top level Tokens rule yourself--probably not a good trade.

--Loring




----- Original Message ----
> From: Christian Convey <christian.convey at gmail.com>
> To: Loring Craymer <lgcraymer at yahoo.com>
> Cc: John B. Brodie <jbb at acm.org>; antlr-interest at antlr.org
> Sent: Sun, June 6, 2010 3:56:10 PM
> Subject: Re: [antlr-interest] Parsing whole-line comments?
> 
> On Sun, Jun 6, 2010 at 6:49 PM, Loring Craymer <
> ymailto="mailto:lgcraymer at yahoo.com" 
> href="mailto:lgcraymer at yahoo.com">lgcraymer at yahoo.com> wrote:
> You 
> can, of course, do
>
> COMMENT : '\n' 'C' (~'\n')+ ;
>
> 
> NEWLINE: '\n' ;
>
> (the ordering matters for ANTLR 3's DFA 
> construction), but the approach Brodie suggested is the common idiom since it 
> costs less in terms of performance and does not depend on the quirks of ANTLR 
> DFA construction.  "Start of line" is a semantic notion, whereas '\n' 'C' 
> specifies syntax.


Thanks.  How would you handle the case where 
> the very first line in
the file is a comment line?  That is, there's no 
> preceding newline
sequence.


      

From christian.convey at gmail.com  Sun Jun  6 17:27:42 2010
From: christian.convey at gmail.com (Christian Convey)
Date: Sun, 6 Jun 2010 20:27:42 -0400
Subject: [antlr-interest] Parsing whole-line comments?
In-Reply-To: <936787.20544.qm@web55907.mail.re3.yahoo.com>
References: <AANLkTinoKSJ0ehQW6j6u-_oQU9dcaGYA0bkr-MkqUl3H@mail.gmail.com>
	<AANLkTikvRjScD8YxB2wn3bZ25xJ96b6vhsX8FsgJL85E@mail.gmail.com>
	<AANLkTimr3MDYw8NiPVgrofZ3gVDSPdx4rEKU5FOB6MoC@mail.gmail.com>
	<4C0BB326.1040509@junkwallah.org>
	<AANLkTimRq-9UaBbmOKpM7kORt-jBRmBftv0UV42hr9u9@mail.gmail.com>
	<4C0BBC81.1090907@junkwallah.org>
	<AANLkTinq9Dy_4w1femUJTzUBP4vutbD_VQQlN04wQpOd@mail.gmail.com>
	<1275848219.15183.18.camel@gecko.home.org>
	<AANLkTinzuoA3n7RU240lJFUV6C74BhAiuZYRG3JPHuR8@mail.gmail.com>
	<807433.22866.qm@web55904.mail.re3.yahoo.com>
	<AANLkTim4Lz1msuMcT2VzZ4rk5SmmFjldQrj3vNNe314l@mail.gmail.com>
	<936787.20544.qm@web55907.mail.re3.yahoo.com>
Message-ID: <AANLkTimQla0a_U4NNCaj-Ux-fat9PPpn-T6N_AQEldtC@mail.gmail.com>

On Sun, Jun 6, 2010 at 8:16 PM, Loring Craymer <lgcraymer at yahoo.com> wrote:
> Then you probably would want to handle this special case with a custom subclass of ANTLRFileStream that checks to see if the first line begins with 'C' and consumes the line (but not the newline following) if it does. ?(You would also need to subclass CommonTokenStream if you need to keep that first comment). ?This is not the most elegant solution, perhaps, but it provides optimal performance at about the same implementation cost as any of the alternatives.
>
> Lexer modes would be another way of handling this problem, but they are not currently supported in ANTLR 3. ?For that matter, this would also not be a problem if ANTLR lexer grammars were true context free grammars that supported start symbols, but then you would have to deal with writing the top level Tokens rule yourself--probably not a good trade.

Thanks for all the ideas.  It sounds like for now I'm going to want to
just hand-write my parser.  The language in question really is dead
simple, it's just line-orientation that seems to be complicating the
picture so much.

- Christian

From rgildea at gmail.com  Mon Jun  7 03:52:38 2010
From: rgildea at gmail.com (Richard Gildea)
Date: Mon, 7 Jun 2010 11:52:38 +0100
Subject: [antlr-interest] Discard comment text
Message-ID: <AANLkTin5FL7DlRIe9lia-r9eeSW-J7COteIBvudkyPrF@mail.gmail.com>

Dear all,

I have encountered the following problem with my grammar related to
comments:

The rule loop_header correctly matches a construct such as:

loop_  # comment
_tag1
_tag2
_tag3


However, when I later get the text matched by the rule loop_header as
"$loop_header.text", the text of the comment is still included, even though
I send the comments to the hidden channel.

Is there a way to discard the text of the comment from the text stream
matched by a rule?


loop_header
: LOOP_ ( WHITESPACE+ TAG )+ WHITESPACE
 ;

COMMENTS
: ( ( '#' ANY_PRINT_CHAR*  EOL )+ )  { $channel = HIDDEN; }
 ;


Thanks,

Richard

From karimc17 at gmail.com  Mon Jun  7 08:43:56 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Mon, 7 Jun 2010 11:43:56 -0400
Subject: [antlr-interest] Semantic predicate losing token/char position on
	error
Message-ID: <AANLkTinsS7EPz2WZ7GcsQiNjUPk7tB26N1GqrjDQjs1C@mail.gmail.com>

Hi,

Thank you again for your previous help.  I now know about
antlr.markmail.org(perhaps a link from
www.antlr.org would help others) and have searched for this problem to no
avail.  A year ago, someone asked what may be a related question, but no one
answered.

If you use the grammar I posted last week, and type in "a ab", it will give
you an error and by looking at (token->start - parser->input_start) and
(token->stop - parser->input_start), it is possible to extract the character
position of the erroneous text in the input (giving 2 and 3, respectively,
corresponding to "ab").  [Note token is picked up from
recognizer->state->exception->token and parser is picked up from
base_parser->super, where base_parser = recognizer->super.  The recognizer
is passed by ANTLR to my error handler, which overrides
displayRecognitionError.]

If, however, I add a semantic predicate to that grammar (enclosed) to
distinguish between X as a function call and X as a variable (which is
described starting on page 297 of the Definitive ANTLR Reference), I no
longer get a character position.  All four of the variables involved in the
position calculation are set to 1, and the start and stop then become zero.
These values are, by the way, a bit peculiar as these fields usually hold
pointers into the text.  I also note that token->input is now NULL.

I am guessing that perhaps the erroneous text has been consumed before the
error has been triggered, but I do not really know.  I do need the character
position of the text causing the error and would like to know how to get it
when using a semantic predicate in this manner.  Using a semantic predicate
at the end of the rule works just fine.  It is just this disambiguation
usage that fails to give the token causing the error.

Thank you,

Karim

PS is_function() takes an pANTLR3_STRING and can unconditionally return
false to drive this problem.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 2112 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100607/55763903/attachment.obj 

From powerofazure at gmail.com  Mon Jun  7 09:44:41 2010
From: powerofazure at gmail.com (Nathan Eloe)
Date: Mon, 7 Jun 2010 11:44:41 -0500
Subject: [antlr-interest] Token "splitting"
Message-ID: <E60F76E6-0860-4CAD-AEC6-F411CB34FF8D@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello again everybody.

As I mentioned previously, I'm working on implementing the grammar for bash in ANTLR w/ the output being an AST, and I've run into the following problem:
In bash, to define a variable, it has to be of the form:

name=value

There can be no spaces around the equals sign (bash is a bit strange about its whitespace, which has caused me some fun headaches)
My question is this: if I have:

foo=bar

I'd like the resulting AST to be:

(= foo bar)

However, when I try to implement this as:

arr_var_def2
	:	NAME EQUALS^ NAME;

or anything similar where I try to define all the tokens at once, it doesn't parse correctly, I believe because it's parsing "foo=bar" as one token.
However, if I do:

arr_var_def
	: ARR_VAR_DEF;

ARR_VAR_DEF: NAME EQUALS NAME;

It parses correctly (since ARR_VAR_DEF is one token), but I cannot control the AST output, and it just outputs it as the one token.

I know about http://antlr.markmail.org, but I'm not exactly sure what to search for for this question.

Thank you so much for all the help you have given me thus far.

Nathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.14 (Darwin)

iEYEARECAAYFAkwNIfsACgkQFpoRlVgtqKZaMwCfTWY48VBh4I4AZReYMCCspxZX
NhYAoIEZ3uqxuD5S9o9fZjOrtwYp0PlW
=m4vZ
-----END PGP SIGNATURE-----

From jimi at temporal-wave.com  Mon Jun  7 10:02:29 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 07 Jun 2010 10:02:29 -0700
Subject: [antlr-interest] Semantic predicate losing token/char position
	on error
In-Reply-To: <AANLkTinsS7EPz2WZ7GcsQiNjUPk7tB26N1GqrjDQjs1C@mail.gmail.com>
Message-ID: <4c9229854c1d034391c941cb6fa1b44a@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, June 07, 2010 8:44 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Semantic predicate losing token/char position
> on error
> 
> Hi,
> 
> Thank you again for your previous help.  I now know about
> antlr.markmail.org(perhaps a link from www.antlr.org would help others)

You mean like the one on the support page with a box that you can type your search terms in and a logo saying "Mark mail"? ;-)


> If, however, I add a semantic predicate to that grammar (enclosed) to
> distinguish between X as a function call and X as a variable (which is
> described starting on page 297 of the Definitive ANTLR Reference), I no
> longer get a character position.  All four of the variables involved in
> the position calculation are set to 1, and the start and stop then
> become zero.
> These values are, by the way, a bit peculiar as these fields usually
> hold pointers into the text.  I also note that token->input is now
> NULL.

Well, though this might be shown as an example in the book it isn't really the way to do things. You are trying to make a semantic distinction via syntax rules and that is always going to give you a headache. You should parse as:

var_id:
	( funcCall -> ^(FUNCTION var_id funcCall)
         | -> var_id
      )
   ;

Then check to see if the function construct really was a function when you walk the tree in a verification pass.

I need to see your error reporting function to help you more on the display stuff. It is likely that you are trying to use elements that are not valid for the type of error you are being passed. Not all elements are available for all errors.

Finally, do not use the pANTLR3_STRING stuff unless your grammar is just a small single-shot parse as you will create a new string every time you run that predicate! Call a function, use LT() to get the next token, then use the pointers in the token directly. You will use no memory that way!

Jim




From karimc17 at gmail.com  Mon Jun  7 10:46:26 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Mon, 7 Jun 2010 13:46:26 -0400
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char position
	on error
In-Reply-To: <4c9229854c1d034391c941cb6fa1b44a@temporal-wave.com>
References: <AANLkTinsS7EPz2WZ7GcsQiNjUPk7tB26N1GqrjDQjs1C@mail.gmail.com> 
	<4c9229854c1d034391c941cb6fa1b44a@temporal-wave.com>
Message-ID: <AANLkTinGVef4fy8wk1EA73TEsoh11JGLhRayLZ9BieWi@mail.gmail.com>

Hi Jim,

Thank you.  I am sorry, but I completely missed that on the support page.

I understand your point (and thanks for the tip about pANTLR3_STRING), but
in your example, what is funcCall?  In my full grammar, I also have a branch
that looks for var_id(args), so perhaps funcCall : (args)?  However, the
problem I have is that the grammar I am parsing allows an identifier by
itself (i.e., no distiguishing syntactical features, such as parens) to
represent either a variable or a zero-argument function call.  All function
names are reserved, so I can distinguish zero-argument function calls from
variables via a symbol table lookup.

In the spirit of what you are saying, I think would have to pass the var_ids
through as var_ids and then do the lookup in a follow-on pass that modifies
the AST as needed.  Is this really the best way, i.e., to add another pass?

I enclose my nascent error handler.  As you can see, I am trying to supply
uniform behavior rather than do different things based on the specific error
(all I want is a clear indication of what went wrong and the position where
it went wrong).  Perhaps this is folly.  The error in this case was
ANTLR3_NO_VIABLE_ALT_EXCEPTION.

Thanks again,

Karim


---------- Forwarded message ----------
From: Jim Idle <jimi at temporal-wave.com>
Date: Mon, Jun 7, 2010 at 1:02 PM
Subject: Re: [antlr-interest] Semantic predicate losing token/char position
on error
To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, June 07, 2010 8:44 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Semantic predicate losing token/char position
> on error
>
> Hi,
>
> Thank you again for your previous help.  I now know about
> antlr.markmail.org(perhaps a link from www.antlr.org would help others)

You mean like the one on the support page with a box that you can type your
search terms in and a logo saying "Mark mail"? ;-)


> If, however, I add a semantic predicate to that grammar (enclosed) to
> distinguish between X as a function call and X as a variable (which is
> described starting on page 297 of the Definitive ANTLR Reference), I no
> longer get a character position.  All four of the variables involved in
> the position calculation are set to 1, and the start and stop then
> become zero.
> These values are, by the way, a bit peculiar as these fields usually
> hold pointers into the text.  I also note that token->input is now
> NULL.

Well, though this might be shown as an example in the book it isn't really
the way to do things. You are trying to make a semantic distinction via
syntax rules and that is always going to give you a headache. You should
parse as:

var_id:
       ( funcCall -> ^(FUNCTION var_id funcCall)
        | -> var_id
     )
  ;

Then check to see if the function construct really was a function when you
walk the tree in a verification pass.

I need to see your error reporting function to help you more on the display
stuff. It is likely that you are trying to use elements that are not valid
for the type of error you are being passed. Not all elements are available
for all errors.

Finally, do not use the pANTLR3_STRING stuff unless your grammar is just a
small single-shot parse as you will create a new string every time you run
that predicate! Call a function, use LT() to get the next token, then use
the pointers in the token directly. You will use no memory that way!

Jim




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
A non-text attachment was scrubbed...
Name: handler.cpp
Type: application/octet-stream
Size: 3694 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100607/2d569ac3/attachment.obj 

From jimi at temporal-wave.com  Mon Jun  7 11:12:16 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 07 Jun 2010 11:12:16 -0700
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
	position on error
In-Reply-To: <AANLkTinGVef4fy8wk1EA73TEsoh11JGLhRayLZ9BieWi@mail.gmail.com>
Message-ID: <fbac6c4aa534a947a3ebb268774a420d@temporal-wave.com>

With no viable alt, there is no token to inspect as there was no token missing etc. You can use the bitmap of expected tokens to say what tokens could be there at that point. Hence there is no token in the exception as there is no specific token that is in error. At least off the top of my head that is the case.

You are approaching the problem from the wrong end:

varorFunc
  : i=IDENT 
	( 
	   LPAREN fa=funcArgs? RPAREN
              { you could issue an error here if $i is not a function or wait until the tree walk }
            -> ^(FUNCTION $i $fa?)

         | -> {isFunction($i)}? -> ^(FUNCTION $i)
           -> $i
	)
   ;
    
You can get an IDENT with or without function parameters and the syntax (which is what your parser is concerned with) is always valid. Later you can verify if the names that were used were valid functions and issue a much nicer message than the parser could generate alone.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, June 07, 2010 10:46 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> 
> Hi Jim,
> 
> Thank you.  I am sorry, but I completely missed that on the support
> page.
> 
> I understand your point (and thanks for the tip about pANTLR3_STRING),
> but in your example, what is funcCall?  In my full grammar, I also have
> a branch that looks for var_id(args), so perhaps funcCall : (args)?
> However, the problem I have is that the grammar I am parsing allows an
> identifier by itself (i.e., no distiguishing syntactical features, such
> as parens) to represent either a variable or a zero-argument function
> call.  All function names are reserved, so I can distinguish zero-
> argument function calls from variables via a symbol table lookup.
> 
> In the spirit of what you are saying, I think would have to pass the
> var_ids through as var_ids and then do the lookup in a follow-on pass
> that modifies the AST as needed.  Is this really the best way, i.e., to
> add another pass?
> 
> I enclose my nascent error handler.  As you can see, I am trying to
> supply uniform behavior rather than do different things based on the
> specific error (all I want is a clear indication of what went wrong and
> the position where it went wrong).  Perhaps this is folly.  The error
> in this case was ANTLR3_NO_VIABLE_ALT_EXCEPTION.
> 
> Thanks again,
> 
> Karim
> 
> 
> ---------- Forwarded message ----------
> From: Jim Idle <jimi at temporal-wave.com>
> Date: Mon, Jun 7, 2010 at 1:02 PM
> Subject: Re: [antlr-interest] Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> 
> 
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Monday, June 07, 2010 8:44 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Semantic predicate losing token/char
> > position on error
> >
> > Hi,
> >
> > Thank you again for your previous help.  I now know about
> > antlr.markmail.org(perhaps a link from www.antlr.org would help
> > others)
> 
> You mean like the one on the support page with a box that you can type
> your search terms in and a logo saying "Mark mail"? ;-)
> 
> 
> > If, however, I add a semantic predicate to that grammar (enclosed) to
> > distinguish between X as a function call and X as a variable (which
> is
> > described starting on page 297 of the Definitive ANTLR Reference), I
> > no longer get a character position.  All four of the variables
> > involved in the position calculation are set to 1, and the start and
> > stop then become zero.
> > These values are, by the way, a bit peculiar as these fields usually
> > hold pointers into the text.  I also note that token->input is now
> > NULL.
> 
> Well, though this might be shown as an example in the book it isn't
> really the way to do things. You are trying to make a semantic
> distinction via syntax rules and that is always going to give you a
> headache. You should parse as:
> 
> var_id:
>        ( funcCall -> ^(FUNCTION var_id funcCall)
>         | -> var_id
>      )
>   ;
> 
> Then check to see if the function construct really was a function when
> you walk the tree in a verification pass.
> 
> I need to see your error reporting function to help you more on the
> display stuff. It is likely that you are trying to use elements that
> are not valid for the type of error you are being passed. Not all
> elements are available for all errors.
> 
> Finally, do not use the pANTLR3_STRING stuff unless your grammar is
> just a small single-shot parse as you will create a new string every
> time you run that predicate! Call a function, use LT() to get the next
> token, then use the pointers in the token directly. You will use no
> memory that way!
> 
> Jim
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From karimc17 at gmail.com  Mon Jun  7 11:46:37 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Mon, 7 Jun 2010 14:46:37 -0400
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
	position on error
In-Reply-To: <fbac6c4aa534a947a3ebb268774a420d@temporal-wave.com>
References: <AANLkTinGVef4fy8wk1EA73TEsoh11JGLhRayLZ9BieWi@mail.gmail.com> 
	<fbac6c4aa534a947a3ebb268774a420d@temporal-wave.com>
Message-ID: <AANLkTikctRH7ckWjoqxqGLtSaF_6dJ-_GHS7yls3MbVX@mail.gmail.com>

Hi Jim,

Thank you!  I did not realize you could write a rule like that in ANTLR.

Re: No viable alt exception:  I can see that the parser has no idea about
what kind of token it is, but didn't the lexer pull a token off?  [If not,
what is the parser trying to match?]  Where is that token?  I am guessing
that this will be moot after I change the grammar as you suggest since I was
getting that token (with the same error) before I put the leading predicate
in.

Thanks,

Karim


---------- Forwarded message ----------
From: Jim Idle <jimi at temporal-wave.com>
Date: Mon, Jun 7, 2010 at 2:12 PM
Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
position on error
To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>


With no viable alt, there is no token to inspect as there was no token
missing etc. You can use the bitmap of expected tokens to say what tokens
could be there at that point. Hence there is no token in the exception as
there is no specific token that is in error. At least off the top of my head
that is the case.

You are approaching the problem from the wrong end:

varorFunc
 : i=IDENT
       (
          LPAREN fa=funcArgs? RPAREN
             { you could issue an error here if $i is not a function or wait
until the tree walk }
           -> ^(FUNCTION $i $fa?)

        | -> {isFunction($i)}? -> ^(FUNCTION $i)
          -> $i
       )
  ;

You can get an IDENT with or without function parameters and the syntax
(which is what your parser is concerned with) is always valid. Later you can
verify if the names that were used were valid functions and issue a much
nicer message than the parser could generate alone.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, June 07, 2010 10:46 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
>
> Hi Jim,
>
> Thank you.  I am sorry, but I completely missed that on the support
> page.
>
> I understand your point (and thanks for the tip about pANTLR3_STRING),
> but in your example, what is funcCall?  In my full grammar, I also have
> a branch that looks for var_id(args), so perhaps funcCall : (args)?
> However, the problem I have is that the grammar I am parsing allows an
> identifier by itself (i.e., no distiguishing syntactical features, such
> as parens) to represent either a variable or a zero-argument function
> call.  All function names are reserved, so I can distinguish zero-
> argument function calls from variables via a symbol table lookup.
>
> In the spirit of what you are saying, I think would have to pass the
> var_ids through as var_ids and then do the lookup in a follow-on pass
> that modifies the AST as needed.  Is this really the best way, i.e., to
> add another pass?
>
> I enclose my nascent error handler.  As you can see, I am trying to
> supply uniform behavior rather than do different things based on the
> specific error (all I want is a clear indication of what went wrong and
> the position where it went wrong).  Perhaps this is folly.  The error
> in this case was ANTLR3_NO_VIABLE_ALT_EXCEPTION.
>
> Thanks again,
>
> Karim
>
>
> ---------- Forwarded message ----------
> From: Jim Idle <jimi at temporal-wave.com>
> Date: Mon, Jun 7, 2010 at 1:02 PM
> Subject: Re: [antlr-interest] Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Monday, June 07, 2010 8:44 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Semantic predicate losing token/char
> > position on error
> >
> > Hi,
> >
> > Thank you again for your previous help.  I now know about
> > antlr.markmail.org(perhaps a link from www.antlr.org would help
> > others)
>
> You mean like the one on the support page with a box that you can type
> your search terms in and a logo saying "Mark mail"? ;-)
>
>
> > If, however, I add a semantic predicate to that grammar (enclosed) to
> > distinguish between X as a function call and X as a variable (which
> is
> > described starting on page 297 of the Definitive ANTLR Reference), I
> > no longer get a character position.  All four of the variables
> > involved in the position calculation are set to 1, and the start and
> > stop then become zero.
> > These values are, by the way, a bit peculiar as these fields usually
> > hold pointers into the text.  I also note that token->input is now
> > NULL.
>
> Well, though this might be shown as an example in the book it isn't
> really the way to do things. You are trying to make a semantic
> distinction via syntax rules and that is always going to give you a
> headache. You should parse as:
>
> var_id:
>        ( funcCall -> ^(FUNCTION var_id funcCall)
>         | -> var_id
>      )
>   ;
>
> Then check to see if the function construct really was a function when
> you walk the tree in a verification pass.
>
> I need to see your error reporting function to help you more on the
> display stuff. It is likely that you are trying to use elements that
> are not valid for the type of error you are being passed. Not all
> elements are available for all errors.
>
> Finally, do not use the pANTLR3_STRING stuff unless your grammar is
> just a small single-shot parse as you will create a new string every
> time you run that predicate! Call a function, use LT() to get the next
> token, then use the pointers in the token directly. You will use no
> memory that way!
>
> Jim
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From weiwei32329 at sina.com  Mon Jun  7 19:41:26 2010
From: weiwei32329 at sina.com (weiwei32329 at sina.com)
Date: Tue, 08 Jun 2010 10:41:26 +0800 
Subject: [antlr-interest] How to convert a sting to conditional expression
Message-ID: <20100608024126.DAECDFF8405@mail3-13.sinamail.sina.com.cn>

&nbsp;I want to ask a question about antlr. If&nbsp; I input a condition just like S==1 or Q>0, how to convert them to conditional expression like if(S==1){} or if(Q>0) in java programming,because we need daynamicly input the condition. Thanks very much!

From kumlehna at upb.de  Tue Jun  8 07:44:29 2010
From: kumlehna at upb.de (Andreas Kumlehn)
Date: Tue, 8 Jun 2010 16:44:29 +0200
Subject: [antlr-interest] Problem running book examples
In-Reply-To: <20100608024126.DAECDFF8405@mail3-13.sinamail.sina.com.cn>
References: <20100608024126.DAECDFF8405@mail3-13.sinamail.sina.com.cn>
Message-ID: <22BDC986-16D6-4AC7-A7AA-895E36C0643C@upb.de>

Hi all, 
I want to develop a configuration file for some tool of mine and 
therefore decided to dive into ANTLR. The definitive ANTLR reference 
book arrived some days ago and I tried some of the examples from the book's website. 

To generate the lexer/parser and compiling the Java files the 
following commands work without erros: 
java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
stringtemplate-3.2.jar org.antlr.Tool Expr.g 
javac -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
stringtemplate-3.2.jar ExprLexer.java ExprParser.java Test.java 

When I try to run the provided testrig coded in Test.java with command 
java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
stringtemplate-3.2.jar Test 
results in the following error: 

Exception in thread "main" java.lang.NoClassDefFoundError: Test 
Caused by: java.lang.ClassNotFoundException: Test 
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190) 
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307) 
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301) 
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248) 

The commands above are from my Mac, but I tried this on a WinXP 
machine, too (with adapted paths).

Current SDK is installed, everything else works fine. Any suggestions or hints?
Thanks for helping! 
Bye, 
Andreas

From jbb at acm.org  Tue Jun  8 08:25:22 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 08 Jun 2010 11:25:22 -0400
Subject: [antlr-interest] Problem running book examples
In-Reply-To: <22BDC986-16D6-4AC7-A7AA-895E36C0643C@upb.de>
References: <20100608024126.DAECDFF8405@mail3-13.sinamail.sina.com.cn>
	<22BDC986-16D6-4AC7-A7AA-895E36C0643C@upb.de>
Message-ID: <1276010722.21681.2.camel@gecko.home.org>

Greetings!

On Tue, 2010-06-08 at 16:44 +0200, Andreas Kumlehn wrote:
> Hi all, 
> I want to develop a configuration file for some tool of mine and 
> therefore decided to dive into ANTLR. The definitive ANTLR reference 
> book arrived some days ago and I tried some of the examples from the book's website. 
> 
> To generate the lexer/parser and compiling the Java files the 
> following commands work without erros: 
> java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
> stringtemplate-3.2.jar org.antlr.Tool Expr.g 
> javac -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
> stringtemplate-3.2.jar ExprLexer.java ExprParser.java Test.java 
> 
> When I try to run the provided testrig coded in Test.java with command 
> java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
> stringtemplate-3.2.jar Test 
> results in the following error: 
> 
> Exception in thread "main" java.lang.NoClassDefFoundError: Test 
> Caused by: java.lang.ClassNotFoundException: Test 
>         at java.net.URLClassLoader$1.run(URLClassLoader.java:202) 
>         at java.security.AccessController.doPrivileged(Native Method) 
>         at java.net.URLClassLoader.findClass(URLClassLoader.java:190) 
>         at java.lang.ClassLoader.loadClass(ClassLoader.java:307) 
>         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301) 
>         at java.lang.ClassLoader.loadClass(ClassLoader.java:248) 
> 
> The commands above are from my Mac, but I tried this on a WinXP 
> machine, too (with adapted paths).
> 
> Current SDK is installed, everything else works fine. Any suggestions or hints?
> Thanks for helping! 

it appears that the current directory (e.g. ./) is not in the class path
when you try to execute the Test class

include ./ somewhere in your -cp stuff

or better yet add the ANTLR stuff to the $CLASSPATH environment
variable.

   -jbb



From karimc17 at gmail.com  Tue Jun  8 08:40:47 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Tue, 8 Jun 2010 11:40:47 -0400
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
	position on error
In-Reply-To: <AANLkTikctRH7ckWjoqxqGLtSaF_6dJ-_GHS7yls3MbVX@mail.gmail.com>
References: <AANLkTinGVef4fy8wk1EA73TEsoh11JGLhRayLZ9BieWi@mail.gmail.com> 
	<fbac6c4aa534a947a3ebb268774a420d@temporal-wave.com>
	<AANLkTikctRH7ckWjoqxqGLtSaF_6dJ-_GHS7yls3MbVX@mail.gmail.com>
Message-ID: <AANLkTimE9kRJo0YAkJO4M3Z8qj1iIUbcUFiMPp8xvotk@mail.gmail.com>

Hi Jim,

The semantic predicate was a red herring.  First of all, no viable alt
exception is reliably giving me a token, which makes sense to me.

Secondly, changing the grammar is what leads to my problem and I think I
know why, though I don't know how to get around it.  If my grammar appears
as follows:

var        :    var_id
        |    var_id LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id
args)
        ;

and I enter "a ab", the token I get from no viable alt exception is, in
fact, "ab", as I expect.  If I rewrite the grammar as follows:

var        :    var_id
        (    LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id args)
        |    -> var_id
        )
        ;

and I enter "a ab", the token I get from no viable alt exception is "".
Indeed, token->start == token->stop == parser->input_start.  It is not as
surprising to me that token->start == token->stop as that they equal
parser->input_start.  In thinking about this, it seems the parser get the
next token, "ab", which successfully matches var_id.  It then has to get
another token (consuming "ab") to distinguish between the cases presented
before it.  We are at the end of input, so, of course, the next token it
gets is "", but I would have expected there to be a difference between
token->start and parser->input_start of 4.

Tracing through the generated code, I see a different picture.  I thought
the problem was that it consumed the token.  The problem is really that it
never consumed any tokens at all.  That is why token->start ==
parser->input_start.  My full definition of var_id is:

var_id        :    ID
        |    ID (DOT ID)+    -> ^(DOT ID+)
        |    DOT^ ID
        ;

The code generated for this switches on LA(1) to test for ID or DOT.  Within
case ID, it then switches on LA(2) to decide between the first two
alternatives.  Here it fails because LA(2) is also ID and it throws a no
viable alt exception.  Unfortunately, since it made this decision based on
LA(1) and LA(2), the actual token that caused the problem has not been
identified; instead everything still points to the start of the input.  Is
there any way to recover this information?

By the way, for the [first] grammar that properly returns the erroneous
token, cdfa18.predict is called instead, which does consume tokens.  The
first grammar, however, is unable to disambiguate the cases I have to parse
("X" as a 0-argument function call vs. "X" as a variable).

Thanks again,

Karim


---------- Forwarded message ----------
From: Karim Chichakly <karimc17 at gmail.com>
Date: Mon, Jun 7, 2010 at 2:46 PM
Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
position on error
To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>


Hi Jim,

Thank you!  I did not realize you could write a rule like that in ANTLR.

Re: No viable alt exception:  I can see that the parser has no idea about
what kind of token it is, but didn't the lexer pull a token off?  [If not,
what is the parser trying to match?]  Where is that token?  I am guessing
that this will be moot after I change the grammar as you suggest since I was
getting that token (with the same error) before I put the leading predicate
in.

Thanks,

Karim


---------- Forwarded message ----------
From: Jim Idle <jimi at temporal-wave.com>
 Date: Mon, Jun 7, 2010 at 2:12 PM
Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
position on error
To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>


With no viable alt, there is no token to inspect as there was no token
missing etc. You can use the bitmap of expected tokens to say what tokens
could be there at that point. Hence there is no token in the exception as
there is no specific token that is in error. At least off the top of my head
that is the case.

You are approaching the problem from the wrong end:

varorFunc
 : i=IDENT
       (
          LPAREN fa=funcArgs? RPAREN
             { you could issue an error here if $i is not a function or wait
until the tree walk }
           -> ^(FUNCTION $i $fa?)

        | -> {isFunction($i)}? -> ^(FUNCTION $i)
          -> $i
       )
  ;

You can get an IDENT with or without function parameters and the syntax
(which is what your parser is concerned with) is always valid. Later you can
verify if the names that were used were valid functions and issue a much
nicer message than the parser could generate alone.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, June 07, 2010 10:46 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
>
> Hi Jim,
>
> Thank you.  I am sorry, but I completely missed that on the support
> page.
>
> I understand your point (and thanks for the tip about pANTLR3_STRING),
> but in your example, what is funcCall?  In my full grammar, I also have
> a branch that looks for var_id(args), so perhaps funcCall : (args)?
> However, the problem I have is that the grammar I am parsing allows an
> identifier by itself (i.e., no distiguishing syntactical features, such
> as parens) to represent either a variable or a zero-argument function
> call.  All function names are reserved, so I can distinguish zero-
> argument function calls from variables via a symbol table lookup.
>
> In the spirit of what you are saying, I think would have to pass the
> var_ids through as var_ids and then do the lookup in a follow-on pass
> that modifies the AST as needed.  Is this really the best way, i.e., to
> add another pass?
>
> I enclose my nascent error handler.  As you can see, I am trying to
> supply uniform behavior rather than do different things based on the
> specific error (all I want is a clear indication of what went wrong and
> the position where it went wrong).  Perhaps this is folly.  The error
> in this case was ANTLR3_NO_VIABLE_ALT_EXCEPTION.
>
> Thanks again,
>
> Karim
>
>
> ---------- Forwarded message ----------
> From: Jim Idle <jimi at temporal-wave.com>
> Date: Mon, Jun 7, 2010 at 1:02 PM
> Subject: Re: [antlr-interest] Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Monday, June 07, 2010 8:44 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Semantic predicate losing token/char
> > position on error
> >
> > Hi,
> >
> > Thank you again for your previous help.  I now know about
> > antlr.markmail.org(perhaps a link from www.antlr.org would help
> > others)
>
> You mean like the one on the support page with a box that you can type
> your search terms in and a logo saying "Mark mail"? ;-)
>
>
> > If, however, I add a semantic predicate to that grammar (enclosed) to
> > distinguish between X as a function call and X as a variable (which
> is
> > described starting on page 297 of the Definitive ANTLR Reference), I
> > no longer get a character position.  All four of the variables
> > involved in the position calculation are set to 1, and the start and
> > stop then become zero.
> > These values are, by the way, a bit peculiar as these fields usually
> > hold pointers into the text.  I also note that token->input is now
> > NULL.
>
> Well, though this might be shown as an example in the book it isn't
> really the way to do things. You are trying to make a semantic
> distinction via syntax rules and that is always going to give you a
> headache. You should parse as:
>
> var_id:
>        ( funcCall -> ^(FUNCTION var_id funcCall)
>         | -> var_id
>      )
>   ;
>
> Then check to see if the function construct really was a function when
> you walk the tree in a verification pass.
>
> I need to see your error reporting function to help you more on the
> display stuff. It is likely that you are trying to use elements that
> are not valid for the type of error you are being passed. Not all
> elements are available for all errors.
>
> Finally, do not use the pANTLR3_STRING stuff unless your grammar is
> just a small single-shot parse as you will create a new string every
> time you run that predicate! Call a function, use LT() to get the next
> token, then use the pointers in the token directly. You will use no
> memory that way!
>
> Jim
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Tue Jun  8 09:41:11 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 08 Jun 2010 09:41:11 -0700
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
	position on error
In-Reply-To: <AANLkTimE9kRJo0YAkJO4M3Z8qj1iIUbcUFiMPp8xvotk@mail.gmail.com>
Message-ID: <aeef9b1cefbd7247ba4850d711dbf12f@temporal-wave.com>

You need to change your var rule I think. Try this:

var_id
	: ID (DOT^ ID)*;

This is properly left factored and will also produce a tree that is much easier to resolve in DOT notation.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Tuesday, June 08, 2010 8:41 AM
> To: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> 
> Hi Jim,
> 
> The semantic predicate was a red herring.  First of all, no viable alt
> exception is reliably giving me a token, which makes sense to me.
> 
> Secondly, changing the grammar is what leads to my problem and I think
> I
> know why, though I don't know how to get around it.  If my grammar
> appears
> as follows:
> 
> var        :    var_id
>         |    var_id LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id
> args)
>         ;
> 
> and I enter "a ab", the token I get from no viable alt exception is, in
> fact, "ab", as I expect.  If I rewrite the grammar as follows:
> 
> var        :    var_id
>         (    LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id args)
>         |    -> var_id
>         )
>         ;
> 
> and I enter "a ab", the token I get from no viable alt exception is "".
> Indeed, token->start == token->stop == parser->input_start.  It is not
> as
> surprising to me that token->start == token->stop as that they equal
> parser->input_start.  In thinking about this, it seems the parser get
> the
> next token, "ab", which successfully matches var_id.  It then has to
> get
> another token (consuming "ab") to distinguish between the cases
> presented
> before it.  We are at the end of input, so, of course, the next token
> it
> gets is "", but I would have expected there to be a difference between
> token->start and parser->input_start of 4.
> 
> Tracing through the generated code, I see a different picture.  I
> thought
> the problem was that it consumed the token.  The problem is really that
> it
> never consumed any tokens at all.  That is why token->start ==
> parser->input_start.  My full definition of var_id is:
> 
> var_id        :    ID
>         |    ID (DOT ID)+    -> ^(DOT ID+)
>         |    DOT^ ID
>         ;
> 
> The code generated for this switches on LA(1) to test for ID or DOT.
> Within
> case ID, it then switches on LA(2) to decide between the first two
> alternatives.  Here it fails because LA(2) is also ID and it throws a
> no
> viable alt exception.  Unfortunately, since it made this decision based
> on
> LA(1) and LA(2), the actual token that caused the problem has not been
> identified; instead everything still points to the start of the input.
> Is
> there any way to recover this information?
> 
> By the way, for the [first] grammar that properly returns the erroneous
> token, cdfa18.predict is called instead, which does consume tokens.
> The
> first grammar, however, is unable to disambiguate the cases I have to
> parse
> ("X" as a 0-argument function call vs. "X" as a variable).
> 
> Thanks again,
> 
> Karim
> 
> 
> ---------- Forwarded message ----------
> From: Karim Chichakly <karimc17 at gmail.com>
> Date: Mon, Jun 7, 2010 at 2:46 PM
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> 
> 
> Hi Jim,
> 
> Thank you!  I did not realize you could write a rule like that in
> ANTLR.
> 
> Re: No viable alt exception:  I can see that the parser has no idea
> about
> what kind of token it is, but didn't the lexer pull a token off?  [If
> not,
> what is the parser trying to match?]  Where is that token?  I am
> guessing
> that this will be moot after I change the grammar as you suggest since
> I was
> getting that token (with the same error) before I put the leading
> predicate
> in.
> 
> Thanks,
> 
> Karim
> 
> 
> ---------- Forwarded message ----------
> From: Jim Idle <jimi at temporal-wave.com>
>  Date: Mon, Jun 7, 2010 at 2:12 PM
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> 
> 
> With no viable alt, there is no token to inspect as there was no token
> missing etc. You can use the bitmap of expected tokens to say what
> tokens
> could be there at that point. Hence there is no token in the exception
> as
> there is no specific token that is in error. At least off the top of my
> head
> that is the case.
> 
> You are approaching the problem from the wrong end:
> 
> varorFunc
>  : i=IDENT
>        (
>           LPAREN fa=funcArgs? RPAREN
>              { you could issue an error here if $i is not a function or
> wait
> until the tree walk }
>            -> ^(FUNCTION $i $fa?)
> 
>         | -> {isFunction($i)}? -> ^(FUNCTION $i)
>           -> $i
>        )
>   ;
> 
> You can get an IDENT with or without function parameters and the syntax
> (which is what your parser is concerned with) is always valid. Later
> you can
> verify if the names that were used were valid functions and issue a
> much
> nicer message than the parser could generate alone.
> 
> Jim
> 
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Monday, June 07, 2010 10:46 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
> > position on error
> >
> > Hi Jim,
> >
> > Thank you.  I am sorry, but I completely missed that on the support
> > page.
> >
> > I understand your point (and thanks for the tip about
> pANTLR3_STRING),
> > but in your example, what is funcCall?  In my full grammar, I also
> have
> > a branch that looks for var_id(args), so perhaps funcCall : (args)?
> > However, the problem I have is that the grammar I am parsing allows
> an
> > identifier by itself (i.e., no distiguishing syntactical features,
> such
> > as parens) to represent either a variable or a zero-argument function
> > call.  All function names are reserved, so I can distinguish zero-
> > argument function calls from variables via a symbol table lookup.
> >
> > In the spirit of what you are saying, I think would have to pass the
> > var_ids through as var_ids and then do the lookup in a follow-on pass
> > that modifies the AST as needed.  Is this really the best way, i.e.,
> to
> > add another pass?
> >
> > I enclose my nascent error handler.  As you can see, I am trying to
> > supply uniform behavior rather than do different things based on the
> > specific error (all I want is a clear indication of what went wrong
> and
> > the position where it went wrong).  Perhaps this is folly.  The error
> > in this case was ANTLR3_NO_VIABLE_ALT_EXCEPTION.
> >
> > Thanks again,
> >
> > Karim
> >
> >
> > ---------- Forwarded message ----------
> > From: Jim Idle <jimi at temporal-wave.com>
> > Date: Mon, Jun 7, 2010 at 1:02 PM
> > Subject: Re: [antlr-interest] Semantic predicate losing token/char
> > position on error
> > To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> >
> >
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Karim Chichakly
> > > Sent: Monday, June 07, 2010 8:44 AM
> > > To: antlr-interest at antlr.org interest
> > > Subject: [antlr-interest] Semantic predicate losing token/char
> > > position on error
> > >
> > > Hi,
> > >
> > > Thank you again for your previous help.  I now know about
> > > antlr.markmail.org(perhaps a link from www.antlr.org would help
> > > others)
> >
> > You mean like the one on the support page with a box that you can
> type
> > your search terms in and a logo saying "Mark mail"? ;-)
> >
> >
> > > If, however, I add a semantic predicate to that grammar (enclosed)
> to
> > > distinguish between X as a function call and X as a variable (which
> > is
> > > described starting on page 297 of the Definitive ANTLR Reference),
> I
> > > no longer get a character position.  All four of the variables
> > > involved in the position calculation are set to 1, and the start
> and
> > > stop then become zero.
> > > These values are, by the way, a bit peculiar as these fields
> usually
> > > hold pointers into the text.  I also note that token->input is now
> > > NULL.
> >
> > Well, though this might be shown as an example in the book it isn't
> > really the way to do things. You are trying to make a semantic
> > distinction via syntax rules and that is always going to give you a
> > headache. You should parse as:
> >
> > var_id:
> >        ( funcCall -> ^(FUNCTION var_id funcCall)
> >         | -> var_id
> >      )
> >   ;
> >
> > Then check to see if the function construct really was a function
> when
> > you walk the tree in a verification pass.
> >
> > I need to see your error reporting function to help you more on the
> > display stuff. It is likely that you are trying to use elements that
> > are not valid for the type of error you are being passed. Not all
> > elements are available for all errors.
> >
> > Finally, do not use the pANTLR3_STRING stuff unless your grammar is
> > just a small single-shot parse as you will create a new string every
> > time you run that predicate! Call a function, use LT() to get the
> next
> > token, then use the pointers in the token directly. You will use no
> > memory that way!
> >
> > Jim
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From j at junkwallah.org  Tue Jun  8 10:49:31 2010
From: j at junkwallah.org (Junkman)
Date: Tue, 08 Jun 2010 10:49:31 -0700
Subject: [antlr-interest] Multiple lexer tokens per rule
In-Reply-To: <4C0981F9.3070706@junkwallah.org>
References: <C82ED8A6.2B7FB%ken.williams@thomsonreuters.com>
	<4C0981F9.3070706@junkwallah.org>
Message-ID: <4C0E82AB.5020901@junkwallah.org>

In case anyone reads this thread again, Antlr wiki has a better example
for emitting multiple tokens:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497

Cheers.

Junkman wrote:
> Ken Williams wrote:
>>
>> On 6/4/10 4:16 PM, "Junkman" <j at junkwallah.org> wrote:
>>> The way nextToken() is overriden, it first returns the token matched by
>>> the rule, and subsequently any additional queued token before matching a
>>> new token in the input stream.
>> Maybe I'm being dense here, but I don't think that's what it's doing:
>>
>>     public Token nextToken() {
>>         return tokenQueue.isEmpty() ? super.nextToken() : tokenQueue.poll();
>>     }
>>
>> If tokenQueue() is non-empty, it always uses it.  On the *next* invocation,
>> when it's empty, it will call super.nextToken().
>>
>>
> 
> Think of tokens generated by a single rule invocation as a set.  The set
> is generated in/under "super.nextToken()", AFTER the queue has been
> tested to be empty.  Among the tokens in the set, the "matching" token
> is returned first, because that's what Lexer.nextToken()
> ("super.nextToken()") returns.
> 
> If that's still not clear, I suggest you put the generated lexer under a
> debugger (like Jim suggested in another thread ;-) and trace it from
> nextToken() - will give you better explanation than my verbiage.
> 
> Best regards.
> 


From karimc17 at gmail.com  Tue Jun  8 11:20:34 2010
From: karimc17 at gmail.com (Karim Chichakly)
Date: Tue, 8 Jun 2010 14:20:34 -0400
Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
	position on error
In-Reply-To: <aeef9b1cefbd7247ba4850d711dbf12f@temporal-wave.com>
References: <AANLkTimE9kRJo0YAkJO4M3Z8qj1iIUbcUFiMPp8xvotk@mail.gmail.com> 
	<aeef9b1cefbd7247ba4850d711dbf12f@temporal-wave.com>
Message-ID: <AANLkTilNJ4jTxXezw3QbZd01asgzKYpmu3RogQPn_tsq@mail.gmail.com>

Brilliant!  That was it, thank you, Jim!  And much cleaner, too.

Karim


---------- Forwarded message ----------
From: Jim Idle <jimi at temporal-wave.com>
Date: Tue, Jun 8, 2010 at 12:41 PM
Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
position on error
To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>


You need to change your var rule I think. Try this:

var_id
       : ID (DOT^ ID)*;

This is properly left factored and will also produce a tree that is much
easier to resolve in DOT notation.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Tuesday, June 08, 2010 8:41 AM
> To: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
>
> Hi Jim,
>
> The semantic predicate was a red herring.  First of all, no viable alt
> exception is reliably giving me a token, which makes sense to me.
>
> Secondly, changing the grammar is what leads to my problem and I think
> I
> know why, though I don't know how to get around it.  If my grammar
> appears
> as follows:
>
> var        :    var_id
>         |    var_id LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id
> args)
>         ;
>
> and I enter "a ab", the token I get from no viable alt exception is, in
> fact, "ab", as I expect.  If I rewrite the grammar as follows:
>
> var        :    var_id
>         (    LEFT_PAREN args RIGHT_PAREN        -> ^(CALL var_id args)
>         |    -> var_id
>         )
>         ;
>
> and I enter "a ab", the token I get from no viable alt exception is "".
> Indeed, token->start == token->stop == parser->input_start.  It is not
> as
> surprising to me that token->start == token->stop as that they equal
> parser->input_start.  In thinking about this, it seems the parser get
> the
> next token, "ab", which successfully matches var_id.  It then has to
> get
> another token (consuming "ab") to distinguish between the cases
> presented
> before it.  We are at the end of input, so, of course, the next token
> it
> gets is "", but I would have expected there to be a difference between
> token->start and parser->input_start of 4.
>
> Tracing through the generated code, I see a different picture.  I
> thought
> the problem was that it consumed the token.  The problem is really that
> it
> never consumed any tokens at all.  That is why token->start ==
> parser->input_start.  My full definition of var_id is:
>
> var_id        :    ID
>         |    ID (DOT ID)+    -> ^(DOT ID+)
>         |    DOT^ ID
>         ;
>
> The code generated for this switches on LA(1) to test for ID or DOT.
> Within
> case ID, it then switches on LA(2) to decide between the first two
> alternatives.  Here it fails because LA(2) is also ID and it throws a
> no
> viable alt exception.  Unfortunately, since it made this decision based
> on
> LA(1) and LA(2), the actual token that caused the problem has not been
> identified; instead everything still points to the start of the input.
> Is
> there any way to recover this information?
>
> By the way, for the [first] grammar that properly returns the erroneous
> token, cdfa18.predict is called instead, which does consume tokens.
> The
> first grammar, however, is unable to disambiguate the cases I have to
> parse
> ("X" as a 0-argument function call vs. "X" as a variable).
>
> Thanks again,
>
> Karim
>
>
> ---------- Forwarded message ----------
> From: Karim Chichakly <karimc17 at gmail.com>
> Date: Mon, Jun 7, 2010 at 2:46 PM
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
>
>
> Hi Jim,
>
> Thank you!  I did not realize you could write a rule like that in
> ANTLR.
>
> Re: No viable alt exception:  I can see that the parser has no idea
> about
> what kind of token it is, but didn't the lexer pull a token off?  [If
> not,
> what is the parser trying to match?]  Where is that token?  I am
> guessing
> that this will be moot after I change the grammar as you suggest since
> I was
> getting that token (with the same error) before I put the leading
> predicate
> in.
>
> Thanks,
>
> Karim
>
>
> ---------- Forwarded message ----------
> From: Jim Idle <jimi at temporal-wave.com>
>  Date: Mon, Jun 7, 2010 at 2:12 PM
> Subject: Re: [antlr-interest] Fwd: Semantic predicate losing token/char
> position on error
> To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
>
>
> With no viable alt, there is no token to inspect as there was no token
> missing etc. You can use the bitmap of expected tokens to say what
> tokens
> could be there at that point. Hence there is no token in the exception
> as
> there is no specific token that is in error. At least off the top of my
> head
> that is the case.
>
> You are approaching the problem from the wrong end:
>
> varorFunc
>  : i=IDENT
>        (
>           LPAREN fa=funcArgs? RPAREN
>              { you could issue an error here if $i is not a function or
> wait
> until the tree walk }
>            -> ^(FUNCTION $i $fa?)
>
>         | -> {isFunction($i)}? -> ^(FUNCTION $i)
>           -> $i
>        )
>   ;
>
> You can get an IDENT with or without function parameters and the syntax
> (which is what your parser is concerned with) is always valid. Later
> you can
> verify if the names that were used were valid functions and issue a
> much
> nicer message than the parser could generate alone.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Monday, June 07, 2010 10:46 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Fwd: Semantic predicate losing token/char
> > position on error
> >
> > Hi Jim,
> >
> > Thank you.  I am sorry, but I completely missed that on the support
> > page.
> >
> > I understand your point (and thanks for the tip about
> pANTLR3_STRING),
> > but in your example, what is funcCall?  In my full grammar, I also
> have
> > a branch that looks for var_id(args), so perhaps funcCall : (args)?
> > However, the problem I have is that the grammar I am parsing allows
> an
> > identifier by itself (i.e., no distiguishing syntactical features,
> such
> > as parens) to represent either a variable or a zero-argument function
> > call.  All function names are reserved, so I can distinguish zero-
> > argument function calls from variables via a symbol table lookup.
> >
> > In the spirit of what you are saying, I think would have to pass the
> > var_ids through as var_ids and then do the lookup in a follow-on pass
> > that modifies the AST as needed.  Is this really the best way, i.e.,
> to
> > add another pass?
> >
> > I enclose my nascent error handler.  As you can see, I am trying to
> > supply uniform behavior rather than do different things based on the
> > specific error (all I want is a clear indication of what went wrong
> and
> > the position where it went wrong).  Perhaps this is folly.  The error
> > in this case was ANTLR3_NO_VIABLE_ALT_EXCEPTION.
> >
> > Thanks again,
> >
> > Karim
> >
> >
> > ---------- Forwarded message ----------
> > From: Jim Idle <jimi at temporal-wave.com>
> > Date: Mon, Jun 7, 2010 at 1:02 PM
> > Subject: Re: [antlr-interest] Semantic predicate losing token/char
> > position on error
> > To: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> >
> >
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Karim Chichakly
> > > Sent: Monday, June 07, 2010 8:44 AM
> > > To: antlr-interest at antlr.org interest
> > > Subject: [antlr-interest] Semantic predicate losing token/char
> > > position on error
> > >
> > > Hi,
> > >
> > > Thank you again for your previous help.  I now know about
> > > antlr.markmail.org(perhaps a link from www.antlr.org would help
> > > others)
> >
> > You mean like the one on the support page with a box that you can
> type
> > your search terms in and a logo saying "Mark mail"? ;-)
> >
> >
> > > If, however, I add a semantic predicate to that grammar (enclosed)
> to
> > > distinguish between X as a function call and X as a variable (which
> > is
> > > described starting on page 297 of the Definitive ANTLR Reference),
> I
> > > no longer get a character position.  All four of the variables
> > > involved in the position calculation are set to 1, and the start
> and
> > > stop then become zero.
> > > These values are, by the way, a bit peculiar as these fields
> usually
> > > hold pointers into the text.  I also note that token->input is now
> > > NULL.
> >
> > Well, though this might be shown as an example in the book it isn't
> > really the way to do things. You are trying to make a semantic
> > distinction via syntax rules and that is always going to give you a
> > headache. You should parse as:
> >
> > var_id:
> >        ( funcCall -> ^(FUNCTION var_id funcCall)
> >         | -> var_id
> >      )
> >   ;
> >
> > Then check to see if the function construct really was a function
> when
> > you walk the tree in a verification pass.
> >
> > I need to see your error reporting function to help you more on the
> > display stuff. It is likely that you are trying to use elements that
> > are not valid for the type of error you are being passed. Not all
> > elements are available for all errors.
> >
> > Finally, do not use the pANTLR3_STRING stuff unless your grammar is
> > just a small single-shot parse as you will create a new string every
> > time you run that predicate! Call a function, use LT() to get the
> next
> > token, then use the pointers in the token directly. You will use no
> > memory that way!
> >
> > Jim
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kumlehna at upb.de  Wed Jun  9 01:46:16 2010
From: kumlehna at upb.de (Andreas Kumlehn)
Date: Wed, 9 Jun 2010 10:46:16 +0200
Subject: [antlr-interest] Problem running book examples
In-Reply-To: <1276010722.21681.2.camel@gecko.home.org>
References: <20100608024126.DAECDFF8405@mail3-13.sinamail.sina.com.cn>
	<22BDC986-16D6-4AC7-A7AA-895E36C0643C@upb.de>
	<1276010722.21681.2.camel@gecko.home.org>
Message-ID: <514DAA3F-5253-4556-9036-EEC7D83CE5DC@upb.de>

Hey all,

thanks a lot, John. That fixed the problem :)

I tried setting a CLASSPATH environment variable on my XP machines, but to no end. Got the same result as from command line.

Anyway, it works!
Bye,
Andreas
Am 08.06.2010 um 17:25 schrieb John B. Brodie:

> Greetings!
> 
> On Tue, 2010-06-08 at 16:44 +0200, Andreas Kumlehn wrote:
>> Hi all, 
>> I want to develop a configuration file for some tool of mine and 
>> therefore decided to dive into ANTLR. The definitive ANTLR reference 
>> book arrived some days ago and I tried some of the examples from the book's website. 
>> 
>> To generate the lexer/parser and compiling the Java files the 
>> following commands work without erros: 
>> java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
>> stringtemplate-3.2.jar org.antlr.Tool Expr.g 
>> javac -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
>> stringtemplate-3.2.jar ExprLexer.java ExprParser.java Test.java 
>> 
>> When I try to run the provided testrig coded in Test.java with command 
>> java -cp ./lib/antlr-3.1.3.jar:./lib/antlr-2.7.7.jar:./lib/ 
>> stringtemplate-3.2.jar Test 
>> results in the following error: 
>> 
>> Exception in thread "main" java.lang.NoClassDefFoundError: Test 
>> Caused by: java.lang.ClassNotFoundException: Test 
>>        at java.net.URLClassLoader$1.run(URLClassLoader.java:202) 
>>        at java.security.AccessController.doPrivileged(Native Method) 
>>        at java.net.URLClassLoader.findClass(URLClassLoader.java:190) 
>>        at java.lang.ClassLoader.loadClass(ClassLoader.java:307) 
>>        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301) 
>>        at java.lang.ClassLoader.loadClass(ClassLoader.java:248) 
>> 
>> The commands above are from my Mac, but I tried this on a WinXP 
>> machine, too (with adapted paths).
>> 
>> Current SDK is installed, everything else works fine. Any suggestions or hints?
>> Thanks for helping! 
> 
> it appears that the current directory (e.g. ./) is not in the class path
> when you try to execute the Test class
> 
> include ./ somewhere in your -cp stuff
> 
> or better yet add the ANTLR stuff to the $CLASSPATH environment
> variable.
> 
>   -jbb
> 
> 


From powerofazure at gmail.com  Wed Jun  9 13:21:01 2010
From: powerofazure at gmail.com (Nathan Eloe)
Date: Wed, 9 Jun 2010 15:21:01 -0500
Subject: [antlr-interest] Mismatched input, expecting set null error
Message-ID: <D50238D9-73F6-4461-AE82-64A2056AF896@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all,
I have a question about the "Mismatched input 'foo' expecting set null" error.

Here are the relevant parts of the grammar I am working on:

for_expr:	for_t space name (wspace in_t space word)? semiel do_t wspace list semiel done_t -> ^(for_t name (word)? list);
space	:	BLANK;
wspace	:	BLANK | EOL;
name	:	FILEPATH;
semiel	:	BLANK? (';' | EOL) BLANK?;

for_t	:	'for';
in_t	:	'in';
do_t	:	'do';
done_t	:	'done';
word	:	command_sub;

BLANK	:	(' '|'\t')+;
EOL	:	('\r'?'\n') ;

fragment
FILENAME:	'"'(ALPHANUM|'.'|'-'|'_')(ALPHANUM|'.'|' '|'-'|'_')*'"'
	|	(ALPHANUM|'.'|'-'|'_')(ALPHANUM|'.'|'-'|'_')*;
FILEPATH:	'/'?FILENAME('/'FILENAME)*;

I'm testing my grammar with gunit, and I'm using the following input:

"for asdf; do
time cat; done" -> (for asdf (cat time))

This succeeds and does not fail the unit test.  However, if I give it the input

"for asdf; do
time cat
done" -> (for asdf (cat time))

I get the error:

test1 (for_expr, line4) - 
expected: (for asdf (cat time))
actual: line 3:0 mismatched input 'done' expecting set null

The debugger in ANTLRworks allows this input (I copied and pasted from the gunit file to the debugger input window) and shows the correct abstract syntax tree.  Everything  I've been able to find on the list so far has boiled down to white space which I've checked repeatedly.  What I cannot figure out is why changing the one character makes a difference.

Is there something obvious that I am doing wrong?  I'm still fairly new to ANTLR, and this is a very ambitious project, so any help would be greatly appreciated.

Thanks,
Nathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.14 (Darwin)

iEYEARECAAYFAkwP97EACgkQFpoRlVgtqKavdgCfWgzlGBMHz0rguJLd4PRt9vyH
r5UAn3RC8oSjERRkO0kwhK6hkCowFrUW
=bLYD
-----END PGP SIGNATURE-----

From isabelle.perseil at enst.fr  Wed Jun  9 14:29:21 2010
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Wed, 9 Jun 2010 23:29:21 +0200
Subject: [antlr-interest] =?iso-8859-1?q?_CALL_FOR_PAPERS_=3A_UML=26FM=922?=
	=?iso-8859-1?q?010?=
Message-ID: <37b840809864fd6e69e81038619fcd8c.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                    CALL FOR PAPERS :  UML&FM?2010
            3rd INTERNATIONAL WORKSHOP ON UML&FORMAL METHODS
          http://www.artist-embedded.org/artist/UML-FM-2010.html

               Workshop held in conjunction with ICFEM 2010
                   The 12th International Conference on
                      Formal Engineering Methods
                 http://www.sei.ecnu.edu.cn/icfem2010/
                           November 16th, 2010
                             Shanghai, China
************************************************************************

                     Submission deadline: September 15th, 2010
                     -----------------------------------------


Many interest groups from a research perspective are in favour of the
creation of this workshop.

For more than a decade now, the two communities of UML and formal methods
have been working together to produce a simultaneously practical (via UML)
and rigorous (via formal methods) approach to software engineering.

UML is the de facto standard for modelling various aspects of software
systems in both industry and academia, despite the inconvenience that its
current specification is complex and its syntax imprecise.

The fact that the UML semantics is too informal have led many researchers
to formalize it with all kinds of existing formal languages, like OCL, Z,
B, CSP, VDM, Petri Nets, UPPAAL, HOL, Coq, PVS etc.

This third edition of the workshop will be open to various subjects as the
main objective is to encourage new initiatives of building bridges between
informal, semi-formal and formal notations.


Topics:
======

This workshop seeks contributions from researchers and practitioners
interested in all aspects of integrating UML and formal methods. To this
end, we solicit papers (no more than 8 pages long) related to, but not
limited to, the following principal topics:

?        Consistent specifications, model transformations (QVT technologies,
         transformation repositories). Transformations to make models more
         analyzable so as to make them executable.

?        Automation of traceability through transformations

?        Refinement techniques: developing detailed design from a UML
         abstract specification

?        Refinement of OCL specification as well

?        Formal reasoning on models for code generation

?        Technologies for compositional verification of models

?        Specification of a formal semantics for the UML.
         Giving an abstract syntax to UML diagrams

?        Formal validation and verification of software

?        Co-modeling methods formal/informal mapping techniques

?        End-to-end methodologies or software process
         engineering,correct-by-construction design providing and
         supporting tools for safety-critical embedded systems design


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper

to agusti[dot]canals[at]c-s[dot]fr with ?ICFEM 2010 UML&FM Workshop? in
the title.

2 versions of the papers will be requested on the same deadline:
september, 15th
Short versions are required for the workshop participation.
Only the best papers of extended versions will be published in a special
issue of the SoSyM journal.

- 1/ Short versions will be published in the ACM Software Engineering
Notes (SEN), January 2011 (all the selected papers)

Papers should not exceed 8 pages. Submitted manuscripts should be in
English and formatted in the style of the SEN Format.
http://www.stidolph.com/SEN/index.html
Preferably, submissions should be in PDF format.

- 2/ Extended versions of the 7 best papers will be published in the SoSyM
journal, inside a 2011 special issue

These extended papers should not exceed 20 pages, must be based on the
same results as the original paper but different. Submitted manuscripts
should be in English and formatted in the style of the SoSyM Springer
Format. Preferably, submissions should be in PDF format. Please, follow
the guidelines at the "Authors information" heading in the SoSyM website.
http://www.sosym.org/submission/
Slides will be made available through the workshop website.


IMPORTANT DATES
===============
Submission deadline:                                 September 15th, 2010
All Notification of acceptance:                      September 30th, 2010
Final copy for proceedings and SoSyM selection:      October 15th, 2010
Workshop date :                                      November 16th, 2010


Organizers
==========

Organizational sponsors :

OMG        (http://www.omg.org/)
ARTIST   (http://www.artist-embedded.org/artist/)


Organizers and Programme Steering committee:

Jean-Michel Bruel (Liuppa, France)
Agusti Canals (CS, France)
Robert de Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Elie Najm (Telecom ParisTech, France)
Isabelle Perseil (Inserm, France)

Publicity Chair:
Sun Meng (CWI, The Netherlands)

IEEE CS Coordinator:

Mike Hinchey (Lero and NASA GSFC , Ireland)


Program Committee:

    * Nazareno Aguirre (Universidad Nacional de R?o Cuarto, Argentina)
    * Pascal Andr? (LINA, University of Nantes, France)
    * Yamine Ait Ameur (LISI / ENSMA, France)
    * Luciano Baresi (Politecnico di Milano, Italia)
    * Yves Bernard (AIRBUS France, France)
    * Jean-Paul Bodeveix (IRIT, France)
    * Agusti Canals (CS, France) ? General Chair
    * Sebastien Demathieu (THALES, France)
    * Jean-Marie Favre (University Joseph Fourier of Grenoble, France)
    * Mamoun Filali (IRIT, France)
    * Madeleine Faug?re (THALES, France)
    * Robert France (Colorado State University, USA)
    * S?bastien G?rard (CEA-LIST, France)
    * Martin Gogolla (University of Bremen, Germany)
    * Irfan Hamid (Microsoft Corp, Canada)
    * Wooter Joosen (Catholic University of Leuven, Belgium)
    * Sharon Keidar-Barner (IBM Haifa Research Laboratory, Israel)
    * Kevin Lano (King?s College London, United Kingdom)
    * Tom Maibaum (McMaster University, Canada )
    * Manuel Mazzara (Newcastle University, United Kingdom)
    * Stephen J.Mellor (Accelerated Technologies, Tucson AZ, USA)
    * Sun Meng (CWI, The Netherlands)
    * Dominique Mery (LORIA, France)
    * Alexandre Mota (Universidade Federal de Pernambuco, Brazil)
    * Elie Najm (Telecom ParisTech, France)
    * Kazuhiro Ogata (Japan Advanced Institute of Science and Technology,
      Japan)
    * Richard Paige (University of York, United Kingdom)
    * Dorina Petriu (Carlton University, USA)
    * Pierre-Yves Schobbens (University of Namur, Belgium)
    * Douglas C. Schmidt (Vanderbild University, USA)
    * Fran?oise Simonot Lion (LORIA, France)
    * Jing Sun (University of Auckland, New Zealand)
    * Jun Suzuki (University of Massachusetts, Boston, USA)
    * Martin T?rngren (Royal Institute of Technology, Sweden)
    * Tatsuhiro Tsuchiya (Osaka University, Japan)
    * Naoyasu Ubayashi (Kyushu Institute of Technology, Japan)
    * Stefan Van Baelen (Catholic University of Leuven, Belgium)
    * Tullio Vardanega (University of Padua, Italia)
    * Fran?ois Vernadat (CNRS-LAAS, France)
    * Eugenio Villar (Universidad de Cantabria, Spain)
    * Tim Weilkiens (OOSE Innovative Informatik, Germany)
    * Andr? Windisch (EADS Military Aircraft, Germany)
    * John Whittle (George Mason University, USA)
    * Sergio Yovine (CNRS-Verimag, France)










From normand.bedard at gmail.com  Thu Jun 10 07:09:05 2010
From: normand.bedard at gmail.com (BiGNoRm6969)
Date: Thu, 10 Jun 2010 07:09:05 -0700 (PDT)
Subject: [antlr-interest] How catch exception when "extraneous input"
	happens?
Message-ID: <1276178945709-5163385.post@n2.nabble.com>


During a string validation, I receive this message "line 1:20 extraneous
input 'f' expecting ASA" in the console. This is printed by the
"getErrorMessage" function, initiated by the "match" function. I understanrd
why this message is displayed. 

My problem is that I want to catch the error generated by the parser. I
include this code in my .g:

@rulecatch {
       catch ( RecognitionException testing ) {
           throw testing;
       }
  }

I also include a try/catch block in my Java code that use my parser, to
catch the RecognitionException exception. However, it never catch it. So, my
program is unable to know if the validation succeed or not.

What I am  missing?


-- 
View this message in context: http://antlr.1301665.n2.nabble.com/How-catch-exception-when-extraneous-input-happens-tp5163385p5163385.html
Sent from the ANTLR mailing list archive at Nabble.com.

From ron.hunter-duvar at oracle.com  Thu Jun 10 07:55:40 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Thu, 10 Jun 2010 08:55:40 -0600
Subject: [antlr-interest] How catch exception when "extraneous input"
 happens?
In-Reply-To: <1276178945709-5163385.post@n2.nabble.com>
References: <1276178945709-5163385.post@n2.nabble.com>
Message-ID: <4C10FCEC.8010302@oracle.com>

BiGNoRm6969 wrote:
> During a string validation, I receive this message "line 1:20 extraneous
> input 'f' expecting ASA" in the console. This is printed by the
> "getErrorMessage" function, initiated by the "match" function. I understanrd
> why this message is displayed. 
>
> My problem is that I want to catch the error generated by the parser. I
> include this code in my .g:
>
> @rulecatch {
>        catch ( RecognitionException testing ) {
>            throw testing;
>        }
>   }
>
> I also include a try/catch block in my Java code that use my parser, to
> catch the RecognitionException exception. However, it never catch it. So, my
> program is unable to know if the validation succeed or not.
>
> What I am  missing?
>
>
>   
Try overriding either the emitErrorMessage or the 
displayRecognitionError method in org.antlr.runtime.BaseRecognizer. You 
can do that with an @member section in your grammar, or in a separate 
superclass.

Ron

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From ron.hunter-duvar at oracle.com  Thu Jun 10 09:31:22 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Thu, 10 Jun 2010 10:31:22 -0600
Subject: [antlr-interest] How catch exception when "extraneous input"
 happens?
In-Reply-To: <4C110ADF.2050906@gmail.com>
References: <1276178945709-5163385.post@n2.nabble.com>
	<4C10FCEC.8010302@oracle.com> <4C110ADF.2050906@gmail.com>
Message-ID: <4C11135A.7050207@oracle.com>

Yes, the problem is that you have it in a try-catch, so when you throw 
it you just catch it again. But unfortunately displayRecognitionError is 
not defined with "throws RecognitionException" in BaseRecognizer, so if 
you remove the try-catch you'll get a compile error (which I'm guessing 
is why you added it). If you don't need an exception thrown, you could 
just set a flag that gets tested later (actually, Antlr already keeps a 
count of the number of syntax errors that you can check).

If you really need the exception thrown, then you need to overrride a 
different method. Inside the match method, if the match fails and it's 
not in the middle of backtracking, it calls recoverFromMismatchedToken. 
This method tries to recover by either inserting a single missing token 
or deleting tokens until a token in the follow set is found. If it 
succeeds in one of these, it reports the error but suppresses the 
exception and continues parsing. If you always want the exception thrown 
you need to override recoverFromMismatchedToken.

Ron


Normand B?dard wrote:
> I tried to override the displayRecognitionError to manually throw an 
> exception that will be catch in my java code using my parser:
>
> In my .g:
>
> @members {
>     public void displayRecognitionError(String[] tokenNames,
>                                         RecognitionException e) {
>         String hdr = getErrorHeader(e);
>         String msg = getErrorMessage(e, tokenNames);
>
>         // Now do something with hdr and msg...
>         emitErrorMessage(hdr+" "+msg);
>
>         try {
>         throw e;
>
>       } catch (RecognitionException e1) {
>         // TODO Auto-generated catch block
>         System.err.println("testing :P");
>       }
>     }
> }
>
>
> In the .java that use my parser I have:
>
> try
>         {
>             parser.evaluation_13_15();
>             System.out.println("flag 001 test");
>
>
>         }
>         catch (RecognitionException test)
>         {
>             System.out.println("flag 002 test");
>         }
>
>
>
> When I manually throw the exception in the overriden fonction, it is 
> catched by the try catch surrounding the throw call (of course :P). Is 
> there a way to throw an exception outside a try/catch (I am little 
> experienced with Java..) ? Or it is my approch that is problematic?
>
> Thanks!
>
> Normand
>
>
>
>
> On 10-06-10 10:55 AM, Ron Hunter-Duvar wrote:
>> BiGNoRm6969 wrote:
>>> During a string validation, I receive this message "line 1:20 
>>> extraneous
>>> input 'f' expecting ASA" in the console. This is printed by the
>>> "getErrorMessage" function, initiated by the "match" function. I 
>>> understanrd
>>> why this message is displayed.
>>> My problem is that I want to catch the error generated by the parser. I
>>> include this code in my .g:
>>>
>>> @rulecatch {
>>>        catch ( RecognitionException testing ) {
>>>            throw testing;
>>>        }
>>>   }
>>>
>>> I also include a try/catch block in my Java code that use my parser, to
>>> catch the RecognitionException exception. However, it never catch 
>>> it. So, my
>>> program is unable to know if the validation succeed or not.
>>>
>>> What I am  missing?
>>>
>>>
>> Try overriding either the emitErrorMessage or the 
>> displayRecognitionError method in org.antlr.runtime.BaseRecognizer. 
>> You can do that with an @member section in your grammar, or in a 
>> separate superclass.
>>
>> Ron
>>
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From jimi at temporal-wave.com  Thu Jun 10 09:58:10 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Jun 2010 09:58:10 -0700
Subject: [antlr-interest] How catch exception when "extraneous input"
	happens?
In-Reply-To: <1276178945709-5163385.post@n2.nabble.com>
Message-ID: <2f8e5f55accdc449b8611adf3c30ef56@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of BiGNoRm6969
> Sent: Thursday, June 10, 2010 7:09 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How catch exception when "extraneous input"
> happens?
> 
> 
> During a string validation, I receive this message "line 1:20
> extraneous
> input 'f' expecting ASA" in the console. This is printed by the
> "getErrorMessage" function, initiated by the "match" function. I
> understanrd
> why this message is displayed.
> 
> My problem is that I want to catch the error generated by the parser. I
> include this code in my .g:
> 
> @rulecatch {
>        catch ( RecognitionException testing ) {
>            throw testing;
>        }
>   }
> 
> I also include a try/catch block in my Java code that use my parser, to
> catch the RecognitionException exception. However, it never catch it.
> So, my
> program is unable to know if the validation succeed or not.
> 
> What I am  missing?


When the parser recovery code discovers that it can 'correct' the input stream by either inserting a token it manufactures, or skipping an extra token, then it issues the error message as normal but it does not throw an exception because it can just carry on. So can override the recover methods and force a throw if you need that, but if you are just wanting to print your own message, then you just override displayRecognitionError() 

Jim




From normand.bedard at gmail.com  Thu Jun 10 10:22:26 2010
From: normand.bedard at gmail.com (BiGNoRm6969)
Date: Thu, 10 Jun 2010 10:22:26 -0700 (PDT)
Subject: [antlr-interest] How catch exception when "extraneous input"
	happens?
In-Reply-To: <4C11135A.7050207@oracle.com>
References: <1276178945709-5163385.post@n2.nabble.com>
	<4C10FCEC.8010302@oracle.com> <4C11135A.7050207@oracle.com>
Message-ID: <1276190546686-5164328.post@n2.nabble.com>


overriding the function "recoverFromMismatchedToken" fixed my problem! 

Thank you!
-- 
View this message in context: http://antlr.1301665.n2.nabble.com/How-catch-exception-when-extraneous-input-happens-tp5163385p5164328.html
Sent from the ANTLR mailing list archive at Nabble.com.

From ken.williams at thomsonreuters.com  Fri Jun 11 10:01:28 2010
From: ken.williams at thomsonreuters.com (Ken Williams)
Date: Fri, 11 Jun 2010 12:01:28 -0500
Subject: [antlr-interest] Syntactic predicate ignored?
Message-ID: <C837D618.2B9F2%ken.williams@thomsonreuters.com>

I am surprised that the following grammar matches "xli" as a STATE rather
than as a ROMAN.  It's like it's completely ignoring the syntactic predicate
on STATE.  Anyone have any insight into what's going on?

I'm using:

  ANTLRWorks   1.4 
  ANTLR   3.2 Sep 23, 2009 12:02:23
  StringTemplate   3.2.1
  Java   1.6.0_20 (Apple Inc.)


------------------------
grammar testg;
options { output=AST; }

cite    : token+ EOF ;
token    :  ROMAN | STATE ;

fragment LETTER : 'a'..'z' ;
STATE: (('mi'|'dc') (EOF | ~LETTER)) => LETTER+
       {System.err.println("Found state");};

// From Perl 6 Exegesis on pattern matching
//http://search.cpan.org/~lichtkind/Perl6-Doc-0.36/lib/Perl6/Doc/Design/E05.
pod

fragment ROMANPAT
    :    'm'* ('d'?('c'('c'('c')?)?)?|'c'('d'|'m'))
              ('l'?('x'('x'('x')?)?)?|'x'('l'|'c'))
              ('v'?('i'('i'('i')?)?)?|'i'('v'|'x'))
    ;

ROMAN : (ROMANPAT (EOF | ~LETTER)) => ROMANPAT
        {System.err.println("Found roman");};
------------------------




-- 
Ken Williams
Sr. Research Scientist
Thomson Reuters
Phone: 651-848-7712
ken.williams at thomsonreuters.com



From andrew.bradnan at gmail.com  Fri Jun 11 11:52:10 2010
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Fri, 11 Jun 2010 11:52:10 -0700
Subject: [antlr-interest] non-LL(*) grammar question
Message-ID: <AANLkTimmNsdLiur9F1aQFE6vWJtkh90JX5hiSt6o37VR@mail.gmail.com>

I'm lost on how to correctly write my grammar with backtracking off.  It
seems relatively simple but I didn't find anything in the archive, or in
TDAR.

This is C#/Java grammar and I'm stuck on the relational_expression which
conflicts with the syntax for generics.
Valid input can be *a < b;* or *a<T> < b;*
So at the '<' it doesn't know if it should look for a generic type (and
types don't have to be defined ahead of time) or look for the right hand
side of the expression.  I basically want to know if there's a matching '>'
in the future or not.

Here's the simplified grammar sans the lexer bits.

relational_expression:    // non-LL(*) decision blah blah blah
    type ('<' type)* ;
    // type ('@' type)* ; // works fine
generic_argument_list:
    '<'   type   '>' ;
type:
    identifier   generic_argument_list? ;
How should I fix this?
Thanks,
-- 
/Andrew

From jbholman at gmail.com  Fri Jun 11 20:46:05 2010
From: jbholman at gmail.com (Jeff Holman)
Date: Fri, 11 Jun 2010 22:46:05 -0500
Subject: [antlr-interest] Python Runtime - version 3.2
Message-ID: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>

Just bought both the ANTLR books ,and I'm trying to get started using a
lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a version
3.2 Python runtime?

From parrt at cs.usfca.edu  Sat Jun 12 10:33:09 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Jun 2010 10:33:09 -0700
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
Message-ID: <723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>

Yup. should be in the distribution under runtime dir
Ter
On Jun 11, 2010, at 8:46 PM, Jeff Holman wrote:

> Just bought both the ANTLR books ,and I'm trying to get started  
> using a
> lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a  
> version
> 3.2 Python runtime?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglas at mayle.org  Sat Jun 12 10:55:17 2010
From: douglas at mayle.org (Douglas Mayle)
Date: Sat, 12 Jun 2010 19:55:17 +0200
Subject: [antlr-interest] mysterious nil nodes...
Message-ID: <2DCF99E5-360C-4D93-BF47-0BD9E1EAE619@mayle.org>

Hi all, I'm using ANTLR v3.0.1 on ubuntu with a Python target and I keep getting nil nodes where I don't expect them.  For example, I have the following rule:

argument : ID COLON ID (EQUAL expression)? -> ^(ARGSPEC ID ID expression?)
	;

I expect this to generate an ARGSPEC tree with three children.  Instead, I'm getting a nil root with one child (the ARGSPEC tree with three children).  I could simply add an action like so:
{ root_0 = root_1 }
and this would take care of the problem, but it definitely feels like the wrong way to handle things.  Is there something I'm doing wrong in my rule, or is this just normal and I should ignore it?  I should note that I'm using my own TreeAdaptor and nodes to create a custom AST, maybe the nil node is automatically ignored by the CommonTree code?

Thanks,
Douglas Mayle

From jbholman at gmail.com  Sat Jun 12 15:28:59 2010
From: jbholman at gmail.com (Jeff Holman)
Date: Sat, 12 Jun 2010 17:28:59 -0500
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
	<723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
Message-ID: <AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>

I think I am still confused.  I am looking at this page for directions:

http://www.antlr.org/wiki/display/ANTLR3/Python+runtime

I have looked for a python setup.py file in the following downloads:
http://www.antlr.org/download/antlr-3.2.tar.gz
http://www.antlr.org/download/antlr-3.2.jar
http://www.antlr.org/download/antlr-runtime-3.2.jar

and I cannot find one.

Under http://www.antlr.org/download/Python, I don't see a run time for antlr
3.2 under that directory.  I tried installing the latest version, but when I
used ANTLRworks to generate a parser and lexer python file, I got an error
message about incompatible versions (saying the python files were generated
using antlr version 3.2 but my python runtime version was 3.1).

Maybe I'm just overlooking something obvious.  Sorry!


On Sat, Jun 12, 2010 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Yup. should be in the distribution under runtime dir
> Ter
>
> On Jun 11, 2010, at 8:46 PM, Jeff Holman wrote:
>
>  Just bought both the ANTLR books ,and I'm trying to get started using a
>> lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a
>> version
>> 3.2 Python runtime?
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From parrt at cs.usfca.edu  Sat Jun 12 17:08:02 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Jun 2010 17:08:02 -0700
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
	<723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
	<AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>
Message-ID: <9180C0DD-B231-489A-AC52-F1FDDAA89C12@cs.usfca.edu>

when you untar 3.2 main distribution, is there a python subdir?
T
On Jun 12, 2010, at 3:28 PM, Jeff Holman wrote:

> I think I am still confused.  I am looking at this page for directions:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Python+runtime
> 
> I have looked for a python setup.py file in the following downloads:
> http://www.antlr.org/download/antlr-3.2.tar.gz
> http://www.antlr.org/download/antlr-3.2.jar
> http://www.antlr.org/download/antlr-runtime-3.2.jar
> 
> and I cannot find one.
> 
> Under http://www.antlr.org/download/Python, I don't see a run time for antlr
> 3.2 under that directory.  I tried installing the latest version, but when I
> used ANTLRworks to generate a parser and lexer python file, I got an error
> message about incompatible versions (saying the python files were generated
> using antlr version 3.2 but my python runtime version was 3.1).
> 
> Maybe I'm just overlooking something obvious.  Sorry!
> 
> 
> On Sat, Jun 12, 2010 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
>> Yup. should be in the distribution under runtime dir
>> Ter
>> 
>> On Jun 11, 2010, at 8:46 PM, Jeff Holman wrote:
>> 
>> Just bought both the ANTLR books ,and I'm trying to get started using a
>>> lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a
>>> version
>>> 3.2 Python runtime?
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>> 
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jbholman at gmail.com  Sat Jun 12 19:42:35 2010
From: jbholman at gmail.com (Jeff Holman)
Date: Sat, 12 Jun 2010 21:42:35 -0500
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <9180C0DD-B231-489A-AC52-F1FDDAA89C12@cs.usfca.edu>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
	<723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
	<AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>
	<9180C0DD-B231-489A-AC52-F1FDDAA89C12@cs.usfca.edu>
Message-ID: <AANLkTim9-pgsNUKhxHhsGqGdqb7IjR6kswtbcIqpHn0k@mail.gmail.com>

When I unpack antlr-3.2.tar.gz, there is the following subdirectory
containing the word 'python':
antlr-3.2\tool\src\main\resources\org\antlr\codegen\templates\Python

When I unpack antlr-3.2.jar, there are the following subdirectories
containing the word 'python':
antlr\actions\python
org\antlr\codegen\templates\Python

Neither of these look like they contain what is contained in
antlr_python_runtime-3.1.2.zip when I download that.

On Sat, Jun 12, 2010 at 7:08 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> when you untar 3.2 main distribution, is there a python subdir?
> T
> On Jun 12, 2010, at 3:28 PM, Jeff Holman wrote:
>
> > I think I am still confused.  I am looking at this page for directions:
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Python+runtime
> >
> > I have looked for a python setup.py file in the following downloads:
> > http://www.antlr.org/download/antlr-3.2.tar.gz
> > http://www.antlr.org/download/antlr-3.2.jar
> > http://www.antlr.org/download/antlr-runtime-3.2.jar
> >
> > and I cannot find one.
> >
> > Under http://www.antlr.org/download/Python, I don't see a run time for
> antlr
> > 3.2 under that directory.  I tried installing the latest version, but
> when I
> > used ANTLRworks to generate a parser and lexer python file, I got an
> error
> > message about incompatible versions (saying the python files were
> generated
> > using antlr version 3.2 but my python runtime version was 3.1).
> >
> > Maybe I'm just overlooking something obvious.  Sorry!
> >
> >
> > On Sat, Jun 12, 2010 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >
> >> Yup. should be in the distribution under runtime dir
> >> Ter
> >>
> >> On Jun 11, 2010, at 8:46 PM, Jeff Holman wrote:
> >>
> >> Just bought both the ANTLR books ,and I'm trying to get started using a
> >>> lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a
> >>> version
> >>> 3.2 Python runtime?
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From javadba at gmail.com  Sun Jun 13 08:56:44 2010
From: javadba at gmail.com (Stephen Boesch)
Date: Sun, 13 Jun 2010 08:56:44 -0700
Subject: [antlr-interest] really simple ? bring up antlrworks in IJ
Message-ID: <AANLkTinQIV373OdbxW4Vw0SkipJxsmmSnXjhQ2ed2TZU@mail.gmail.com>

I have installed the antlrworks plugin, restarted IJ, the AW plugin does
show up and is enabled. In fact I can go into plugins and modify prefs for
it.

but.. where's the power switch?  i don't know how to start AW from within
IJ    ;)

-- 
Stephen Boesch
Sun, Oracle, & BEA Certified 650-799-3078

From Gordon.Tyler at quest.com  Mon Jun 14 07:10:29 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Mon, 14 Jun 2010 07:10:29 -0700
Subject: [antlr-interest] really simple ? bring up antlrworks in IJ
In-Reply-To: <AANLkTinQIV373OdbxW4Vw0SkipJxsmmSnXjhQ2ed2TZU@mail.gmail.com>
References: <AANLkTinQIV373OdbxW4Vw0SkipJxsmmSnXjhQ2ed2TZU@mail.gmail.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D0286719B89@alvxmbw04.prod.quest.corp>

Open an ANTLR .g grammar file in IDEA. The ANTLRworks editor replaces the standard IDEA editor.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stephen Boesch
Sent: June 13, 2010 11:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] really simple ? bring up antlrworks in IJ

I have installed the antlrworks plugin, restarted IJ, the AW plugin does
show up and is enabled. In fact I can go into plugins and modify prefs for
it.

but.. where's the power switch?  i don't know how to start AW from within
IJ    ;)

-- 
Stephen Boesch
Sun, Oracle, & BEA Certified 650-799-3078

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Todd.T.Stevenson at ge.com  Mon Jun 14 16:22:37 2010
From: Todd.T.Stevenson at ge.com (Stevenson, Todd (GE Healthcare))
Date: Mon, 14 Jun 2010 19:22:37 -0400
Subject: [antlr-interest] Checkstyle warnings
Message-ID: <B4B0A329ACAB3247830EA5930E0C902F077E4047@ALPMLVEM16.e2k.ad.ge.com>

Are there any plans to add annotations to minimize the checkstyle
warnings that are part of the generated output of the Antlr code
generator?
 
I know we could manually fix the string template files to fix some of
these, but it would be nicer to have it part of the standard
distribution.
 
thanks.
 
 

From sadie at kind.ocn.ne.jp  Mon Jun 14 19:12:44 2010
From: sadie at kind.ocn.ne.jp (sunao furukawa)
Date: Tue, 15 Jun 2010 11:12:44 +0900
Subject: [antlr-interest] How to debug under the router
Message-ID: <85C64C6B0CB941A2ADFD12F369926424@sunaoPC>

Hello!

I am Japanese and use Windows Vista Home Basic.
Sorry,I understand English a little.
I edited both MaxUserPort registry and TcpTimedWaitDelay registry.
I use router to access the internet.
When I debug a tree grammar by antlrworks 1.3 ,I am in trouble with Errors:
"java.lang.ClassCastException: 
org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken cannot be 
cast to org.antlr.works.debugger.tree.DBTreeToken
".
Please,Teach how to remove error by using antlrworks 1.3 under a router.
By the way,because I edited registry,I can use port 49153.
Source code is http://www.pragmaticprogrammer.com/titles/tpantlr : 
code/tour/trees ,code generated by antlrworks(with -debug).



From jbholman at gmail.com  Mon Jun 14 21:32:44 2010
From: jbholman at gmail.com (Jeff Holman)
Date: Mon, 14 Jun 2010 23:32:44 -0500
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <AANLkTim9-pgsNUKhxHhsGqGdqb7IjR6kswtbcIqpHn0k@mail.gmail.com>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
	<723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
	<AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>
	<9180C0DD-B231-489A-AC52-F1FDDAA89C12@cs.usfca.edu>
	<AANLkTim9-pgsNUKhxHhsGqGdqb7IjR6kswtbcIqpHn0k@mail.gmail.com>
Message-ID: <AANLkTimg7mb8IkprYUq1WJuDK_lrx2C0X3VE7sErcamG@mail.gmail.com>

Are there any major issues with using the the following?

1. http://www.antlr.org/download/antlr-3.1.2.tar.gz
2. http://www.antlr.org/download/Python/antlr_python_runtime-3.1.2.zip
3. a compatible version of antlrworks.  not sure which version is should
use.  can i still download old versions?



On Sat, Jun 12, 2010 at 9:42 PM, Jeff Holman <jbholman at gmail.com> wrote:

> When I unpack antlr-3.2.tar.gz, there is the following subdirectory
> containing the word 'python':
> antlr-3.2\tool\src\main\resources\org\antlr\codegen\templates\Python
>
> When I unpack antlr-3.2.jar, there are the following subdirectories
> containing the word 'python':
> antlr\actions\python
> org\antlr\codegen\templates\Python
>
> Neither of these look like they contain what is contained in
> antlr_python_runtime-3.1.2.zip when I download that.
>
>
> On Sat, Jun 12, 2010 at 7:08 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> when you untar 3.2 main distribution, is there a python subdir?
>> T
>> On Jun 12, 2010, at 3:28 PM, Jeff Holman wrote:
>>
>> > I think I am still confused.  I am looking at this page for directions:
>> >
>> > http://www.antlr.org/wiki/display/ANTLR3/Python+runtime
>> >
>> > I have looked for a python setup.py file in the following downloads:
>> > http://www.antlr.org/download/antlr-3.2.tar.gz
>> > http://www.antlr.org/download/antlr-3.2.jar
>> > http://www.antlr.org/download/antlr-runtime-3.2.jar
>> >
>> > and I cannot find one.
>> >
>> > Under http://www.antlr.org/download/Python, I don't see a run time for
>> antlr
>> > 3.2 under that directory.  I tried installing the latest version, but
>> when I
>> > used ANTLRworks to generate a parser and lexer python file, I got an
>> error
>> > message about incompatible versions (saying the python files were
>> generated
>> > using antlr version 3.2 but my python runtime version was 3.1).
>> >
>> > Maybe I'm just overlooking something obvious.  Sorry!
>> >
>> >
>> > On Sat, Jun 12, 2010 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>> >
>> >> Yup. should be in the distribution under runtime dir
>> >> Ter
>> >>
>> >> On Jun 11, 2010, at 8:46 PM, Jeff Holman wrote:
>> >>
>> >> Just bought both the ANTLR books ,and I'm trying to get started using a
>> >>> lexer and parser generated by ANTLRWorks 1.4 for python.  Is there a
>> >>> version
>> >>> 3.2 Python runtime?
>> >>>
>> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>> Unsubscribe:
>> >>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>>
>> >>
>> >>
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From rgildea at gmail.com  Tue Jun 15 01:30:13 2010
From: rgildea at gmail.com (Richard Gildea)
Date: Tue, 15 Jun 2010 09:30:13 +0100
Subject: [antlr-interest] Python Runtime - version 3.2
In-Reply-To: <AANLkTimg7mb8IkprYUq1WJuDK_lrx2C0X3VE7sErcamG@mail.gmail.com>
References: <AANLkTikN1wi_7zNucD8_Ch-mMILfv1_EbzXe5RS9IKnO@mail.gmail.com>
	<723AC871-E2CE-4F57-AA14-49DA8BC124AA@cs.usfca.edu>
	<AANLkTinryE2lvCIwxUpQhgqNUhevgYJseME2ftcEakdV@mail.gmail.com>
	<9180C0DD-B231-489A-AC52-F1FDDAA89C12@cs.usfca.edu>
	<AANLkTim9-pgsNUKhxHhsGqGdqb7IjR6kswtbcIqpHn0k@mail.gmail.com>
	<AANLkTimg7mb8IkprYUq1WJuDK_lrx2C0X3VE7sErcamG@mail.gmail.com>
Message-ID: <AANLkTin8FBSRFJ7QtfmOhlxOh2M8cLY8lGG8pzFsV_1v@mail.gmail.com>

Hi Jeff,

Are there any major issues with using the the following?
>
> 1. http://www.antlr.org/download/antlr-3.1.2.tar.gz
> 2. http://www.antlr.org/download/Python/antlr_python_runtime-3.1.2.zip
> 3. a compatible version of antlrworks.  not sure which version is should
> use.  can i still download old versions?
>
>
The runtime files must be the same, or more recent, version that was used to
generate the files (there is a runtime version check), so you won't be able
to use the current version of antlrworks to generate the files, although it
is OK to use it to edit your grammar.  It is easy enough to write a batch
file to generate your files using antlr-3.1.2 (this is what I do for my
Python version).  See
http://www.antlr.org/wiki/display/ANTLR3/Command+line+options for the
command line options.

Thanks,

Richard

From Anders.Karlsson at sybase.com  Tue Jun 15 02:00:17 2010
From: Anders.Karlsson at sybase.com (Anders.Karlsson at sybase.com)
Date: Tue, 15 Jun 2010 17:00:17 +0800
Subject: [antlr-interest]  calling parser from c++, correct way?
Message-ID: <OF826FDA18.BB05D845-ON48257743.0030EC38-48257743.0031825A@sybase.com>

Hi,

Is this the correct way to call the antlr-runtime from C++? (It seems I 
have some memory overwrite issues so that is why I am asking)

I have a string with the content I want to parse (e.g. string s = "1+1")


      pANTLR3_INPUT_STREAM input = antlr3NewAsciiStringInPlaceStream(
reinterpret_cast<pANTLR3_UINT8>(const_cast<char*>(s.c_str())), 
(ANTLR3_UINT64)s.length(), NULL);
      pMAExpressionLexer lxr = MAExpressionLexerNew(input);
      pANTLR3_COMMON_TOKEN_STREAM tstream = 
antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
      pMAExpressionParser psr = MAExpressionParserNew(tstream);
      MAExpressionParser_ma_expression_return r = psr->ma_expression(psr); 
// calling the start rule for parsing

when I later free psr it crashes

        psr->free(psr); psr = NULL;
Has anybody an idea what I am doing wrong?
Thank you and kind regards,
Anders

From lucabelluccini at gmail.com  Tue Jun 15 02:58:26 2010
From: lucabelluccini at gmail.com (Luca Belluccini)
Date: Tue, 15 Jun 2010 11:58:26 +0200
Subject: [antlr-interest] An example for interfacing a Grammar and a String
	Template for language translation?
Message-ID: <AANLkTinbOaWPJrHkcKRVCslW4cG3WB9gVbfIDxVZdkCQ@mail.gmail.com>

Any link to an example showing language translation from an Antlr Grammar to
String Template?

From jimi at temporal-wave.com  Tue Jun 15 10:54:50 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Jun 2010 10:54:50 -0700
Subject: [antlr-interest] calling parser from c++, correct way?
In-Reply-To: <OF826FDA18.BB05D845-ON48257743.0030EC38-48257743.0031825A@sybase.com>
References: <OF826FDA18.BB05D845-ON48257743.0030EC38-48257743.0031825A@sybase.com>
Message-ID: <F41A2A8F-C53A-42AB-A851-D5AA5C7EE5F9@temporal-wave.com>

Try copying the examples and see where your issue is or use valgrind.  
I am yravellling this week so difficult to spend more time looking.

Jim

On Jun 15, 2010, at 2:00, Anders.Karlsson at sybase.com wrote:

> Hi,
>
> Is this the correct way to call the antlr-runtime from C++? (It  
> seems I
> have some memory overwrite issues so that is why I am asking)
>
> I have a string with the content I want to parse (e.g. string s =  
> "1+1")
>
>
>      pANTLR3_INPUT_STREAM input = antlr3NewAsciiStringInPlaceStream(
> reinterpret_cast<pANTLR3_UINT8>(const_cast<char*>(s.c_str())),
> (ANTLR3_UINT64)s.length(), NULL);
>      pMAExpressionLexer lxr = MAExpressionLexerNew(input);
>      pANTLR3_COMMON_TOKEN_STREAM tstream =
> antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
>      pMAExpressionParser psr = MAExpressionParserNew(tstream);
>      MAExpressionParser_ma_expression_return r = psr->ma_expression 
> (psr);
> // calling the start rule for parsing
>
> when I later free psr it crashes
>
>        psr->free(psr); psr = NULL;
> Has anybody an idea what I am doing wrong?
> Thank you and kind regards,
> Anders
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From javadba at gmail.com  Tue Jun 15 11:31:49 2010
From: javadba at gmail.com (Stephen Boesch)
Date: Tue, 15 Jun 2010 11:31:49 -0700
Subject: [antlr-interest] Grammars that Parse Successully in antlrworks
Message-ID: <AANLkTinMO8plSveuoRLD3Ozb3aatu_0uETm__jf8vOCM@mail.gmail.com>

Hi,
    I tried maybe 8 or 10 grammars on this link included on the antlr home
page: all of them generate numerous errors in antlrworks.   Can someone shed
light:

http://www.antlr.org/grammar/list

where is a list of grammars that parse cleanly in antlrworks
specifically i am looking for a modest complexity sql SELECT grammar that
can be relied upon: from the numerous errors I don't know which if any are
valid (tried all of the sql related ones.)

thanks

-- 
Stephen Boesch
Sun, Oracle, & BEA Certified 650-799-3078

From Anders.Karlsson at sybase.com  Tue Jun 15 17:57:31 2010
From: Anders.Karlsson at sybase.com (Anders.Karlsson at sybase.com)
Date: Wed, 16 Jun 2010 08:57:31 +0800
Subject: [antlr-interest] calling parser from c++, correct way?
In-Reply-To: <F41A2A8F-C53A-42AB-A851-D5AA5C7EE5F9@temporal-wave.com>
References: <OF826FDA18.BB05D845-ON48257743.0030EC38-48257743.0031825A@sybase.com>
	<F41A2A8F-C53A-42AB-A851-D5AA5C7EE5F9@temporal-wave.com>
Message-ID: <OF66ED50B9.76001CE3-ON48257744.00043E56-48257744.00055003@sybase.com>


Hi Jim,

It seems I have this issue only when running with VS2010, the main program
is in C++ and the generated lexer/parser are kept as C-files (tried also
compiling them as C++ files, same result).

The same parser/lexer seems to work under objective-c(and Java of course)
however when running it from within VS2010 the function pointers in the CTX
seem to either not be set or set to wrong functions during run-time, not
sure if the debugger is showing wrong and this is just normal behavior or
if what I am seeing is a memory overwrite that occurs inside the generated
parser. Are there any particular switches when compiling the library that
needs to be set, something specific when using VS2010? I've been fiddling
with pragma pack(1) thinking it had something to do with the structures not
aligning up on byte boundary but that didn't help as well, I have tried
both unicode and multibyte same problem.

Since I am running under Windows/VS2010 I don't have Valgrind but I will
try and see if I can dig up Boundschecker today

Another observation is that the problem seems to depend on the expression,
so I was thinking maybe my grammar had broken some unwritten laws for how a
grammar should look like :-)



Thank you and kind regards,
Anders



Anders Karlsson | Staff SE II, Architect | Sybase Inc, Singapore, ( +65
6571 3125 | * anders.karlsson at sybase.com
-- It takes a tonne of fact to overcome an ounce of opinion


<antlr-interest-bounces at antlr.org> wrote on 06/16/2010 01:54:50 AM:

> Jim Idle <jimi at temporal-wave.com>
> Sent by: <antlr-interest-bounces at antlr.org>
>
> 06/16/2010 01:54 AM
>
> To
>
> "Anders.Karlsson at sybase.com" <Anders.Karlsson at sybase.com>
>
> cc
>
> antlr-interest Interest <antlr-interest at antlr.org>
>
> Subject
>
> Re: [antlr-interest] calling parser from c++, correct way?
>
> Try copying the examples and see where your issue is or use valgrind.
> I am yravellling this week so difficult to spend more time looking.
>
> Jim
>
> On Jun 15, 2010, at 2:00, Anders.Karlsson at sybase.com wrote:
>
> > Hi,
> >
> > Is this the correct way to call the antlr-runtime from C++? (It
> > seems I
> > have some memory overwrite issues so that is why I am asking)
> >
> > I have a string with the content I want to parse (e.g. string s =
> > "1+1")
> >
> >
> >      pANTLR3_INPUT_STREAM input = antlr3NewAsciiStringInPlaceStream(
> > reinterpret_cast<pANTLR3_UINT8>(const_cast<char*>(s.c_str())),
> > (ANTLR3_UINT64)s.length(), NULL);
> >      pMAExpressionLexer lxr = MAExpressionLexerNew(input);
> >      pANTLR3_COMMON_TOKEN_STREAM tstream =
> > antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
> >      pMAExpressionParser psr = MAExpressionParserNew(tstream);
> >      MAExpressionParser_ma_expression_return r = psr->ma_expression
> > (psr);
> > // calling the start rule for parsing
> >
> > when I later free psr it crashes
> >
> >        psr->free(psr); psr = NULL;
> > Has anybody an idea what I am doing wrong?
> > Thank you and kind regards,
> > Anders
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/
> your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/
> your-email-address
>


From sadie at kind.ocn.ne.jp  Tue Jun 15 22:17:53 2010
From: sadie at kind.ocn.ne.jp (sunao furukawa)
Date: Wed, 16 Jun 2010 14:17:53 +0900
Subject: [antlr-interest] How to debug under the router
In-Reply-To: <85C64C6B0CB941A2ADFD12F369926424@sunaoPC>
References: <85C64C6B0CB941A2ADFD12F369926424@sunaoPC>
Message-ID: <EB2DCAA5D54348DFAAE8B70C4B54B16C@sunaoPC>

Hello.
This mail is Self-follow mail.
I mistake how to use Antlrworks.
I inputed debug option in combined grammar file.
I input debug option only in tree grammar file.

Thank you very much!

----- Original Message ----- 
From: "sunao furukawa" <sadie at kind.ocn.ne.jp>
To: <antlr-interest at antlr.org>
Sent: Tuesday, June 15, 2010 11:12 AM
Subject: [antlr-interest] How to debug under the router


> Hello!
>
> I am Japanese and use Windows Vista Home Basic.
> Sorry,I understand English a little.
> I edited both MaxUserPort registry and TcpTimedWaitDelay registry.
> I use router to access the internet.
> When I debug a tree grammar by antlrworks 1.3 ,I am in trouble with 
> Errors:
> "java.lang.ClassCastException:
> org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken cannot 
> be
> cast to org.antlr.works.debugger.tree.DBTreeToken
> ".
> Please,Teach how to remove error by using antlrworks 1.3 under a router.
> By the way,because I edited registry,I can use port 49153.
> Source code is http://www.pragmaticprogrammer.com/titles/tpantlr :
> code/tour/trees ,code generated by antlrworks(with -debug).
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From Anders.Karlsson at sybase.com  Wed Jun 16 16:32:26 2010
From: Anders.Karlsson at sybase.com (Anders.Karlsson at sybase.com)
Date: Thu, 17 Jun 2010 07:32:26 +0800
Subject: [antlr-interest] calling parser from c++, correct way?
In-Reply-To: <AANLkTimIzAR2_2RVbFSOhochG3cQaIWyh-bdcTGHgxi5@mail.gmail.com>
References: <OF826FDA18.BB05D845-ON48257743.0030EC38-48257743.0031825A@sybase.com>	<F41A2A8F-C53A-42AB-A851-D5AA5C7EE5F9@temporal-wave.com>
	<OF66ED50B9.76001CE3-ON48257744.00043E56-48257744.00055003@sybase.com>
	<AANLkTimIzAR2_2RVbFSOhochG3cQaIWyh-bdcTGHgxi5@mail.gmail.com>
Message-ID: <OFAC1C8CFB.FDD582DD-ON48257744.0080F3F2-48257744.00815B8A@sybase.com>

Hi,

Well it turned out to be something unrelated to the three scenarios 
mentioned below,
when I started out generating files I placed them in one directory but 
then decided in
my infinite wisdom to generate them directly in the project directory 
without removing
the old headers and changing the include path <> .... duh! /facepalm
Thank you and kind regards,
Anders




Joep Suijs <jsuijs at gmail.com> 
16/06/2010 13:54

To
Anders.Karlsson at sybase.com
cc

Subject
Re: [antlr-interest] calling parser from c++, correct way?






Hi Anders, Jim,

FYI: I have a similar problem (crash on free) with gcc3.4.5 (C, not
C++) on Windows XP. I disabled the free but never got around to fix it
properly.

Joep

2010/6/16  <Anders.Karlsson at sybase.com>:
>
> Hi Jim,
>
> It seems I have this issue only when running with VS2010, the main 
program
> is in C++ and the generated lexer/parser are kept as C-files (tried also
> compiling them as C++ files, same result).
>
> The same parser/lexer seems to work under objective-c(and Java of 
course)
> however when running it from within VS2010 the function pointers in the 
CTX
> seem to either not be set or set to wrong functions during run-time, not
> sure if the debugger is showing wrong and this is just normal behavior 
or
> if what I am seeing is a memory overwrite that occurs inside the 
generated
> parser. Are there any particular switches when compiling the library 
that
> needs to be set, something specific when using VS2010? I've been 
fiddling
> with pragma pack(1) thinking it had something to do with the structures 
not
> aligning up on byte boundary but that didn't help as well, I have tried
> both unicode and multibyte same problem.
>
> Since I am running under Windows/VS2010 I don't have Valgrind but I will
> try and see if I can dig up Boundschecker today
>
> Another observation is that the problem seems to depend on the 
expression,
> so I was thinking maybe my grammar had broken some unwritten laws for 
how a
> grammar should look like :-)
>
>
>
> Thank you and kind regards,
> Anders
>
>
>
> Anders Karlsson | Staff SE II, Architect | Sybase Inc, Singapore, ( +65
> 6571 3125 | * anders.karlsson at sybase.com
> -- It takes a tonne of fact to overcome an ounce of opinion
>
>
> <antlr-interest-bounces at antlr.org> wrote on 06/16/2010 01:54:50 AM:
>
>> Jim Idle <jimi at temporal-wave.com>
>> Sent by: <antlr-interest-bounces at antlr.org>
>>
>> 06/16/2010 01:54 AM
>>
>> To
>>
>> "Anders.Karlsson at sybase.com" <Anders.Karlsson at sybase.com>
>>
>> cc
>>
>> antlr-interest Interest <antlr-interest at antlr.org>
>>
>> Subject
>>
>> Re: [antlr-interest] calling parser from c++, correct way?
>>
>> Try copying the examples and see where your issue is or use valgrind.
>> I am yravellling this week so difficult to spend more time looking.
>>
>> Jim
>>
>> On Jun 15, 2010, at 2:00, Anders.Karlsson at sybase.com wrote:
>>
>> > Hi,
>> >
>> > Is this the correct way to call the antlr-runtime from C++? (It
>> > seems I
>> > have some memory overwrite issues so that is why I am asking)
>> >
>> > I have a string with the content I want to parse (e.g. string s =
>> > "1+1")
>> >
>> >
>> >      pANTLR3_INPUT_STREAM input = antlr3NewAsciiStringInPlaceStream(
>> > reinterpret_cast<pANTLR3_UINT8>(const_cast<char*>(s.c_str())),
>> > (ANTLR3_UINT64)s.length(), NULL);
>> >      pMAExpressionLexer lxr = MAExpressionLexerNew(input);
>> >      pANTLR3_COMMON_TOKEN_STREAM tstream =
>> > antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
>> >      pMAExpressionParser psr = MAExpressionParserNew(tstream);
>> >      MAExpressionParser_ma_expression_return r = psr->ma_expression
>> > (psr);
>> > // calling the start rule for parsing
>> >
>> > when I later free psr it crashes
>> >
>> >        psr->free(psr); psr = NULL;
>> > Has anybody an idea what I am doing wrong?
>> > Thank you and kind regards,
>> > Anders
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/
>> your-email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/
>> your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



From lucabelluccini at gmail.com  Thu Jun 17 06:50:32 2010
From: lucabelluccini at gmail.com (Luca Belluccini)
Date: Thu, 17 Jun 2010 15:50:32 +0200
Subject: [antlr-interest] Unexpected token in a rewrite rule
Message-ID: <AANLkTimNxa4hUhHGuOnH5tM6G4buQimc7dIY8M2CImlV@mail.gmail.com>

Our grammar is quite complex (similar to Python one, with INDENT DEDENT
stuff and so on...) and it's attached to the mail.
We would like to use templates and rewrite.
I encountered this rule:
pointer :
| 'pointer' '.' t=(SDT | ID) ID (',' ID)* -> ( 'pointer' '.' t ID )+
| 'pointer' '.' t=(SDT | ID) ID -> pointer(type={$t.text},name={$ID.text})
;

I wrote this one because I saw a little example at
http://www.stringtemplate.org/wiki/display/~admin/2008/04/11/Rewrite+rules.
In the grammar options I placed:
output = template;
rewrite = true;

I would like to know if it is possible to do so, cause of when generating
the code, I get a "Unexpected token (" at first alternative, after the ->
Accordingly to the page on the stringtemplate wiki, It should work...
Let me know.
Thanks in advance,

L.B.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twyncat.g
Type: application/octet-stream
Size: 12552 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100617/1ffbd5c9/attachment.obj 

From singh.nishanth5 at gmail.com  Thu Jun 17 07:46:02 2010
From: singh.nishanth5 at gmail.com (Nishanth singh)
Date: Thu, 17 Jun 2010 10:46:02 -0400
Subject: [antlr-interest] please reply urgent
Message-ID: <AANLkTik9eseWE6v5tfAbhXHE9oDIrH1MD1pB9QmAFfoo@mail.gmail.com>

Hello,

Kindly read the mail completely and please reply back to me.

I am a student doing an intern this summer . I was given a task of
building a compiler using antlr. I read the book called "The
definitive antlr reference" and was able to build the grammer which
generates an abstract syntax tree and parse the data file and check it
for errors. Now using the parser and lexer files generated they wants
me to convert the tree into a list structure of C sharp code. I am
having no idea of how to do it. I searched a lot in the net but
couldnt find it. There is no one in my work place who knows antlr. I
am really getting depressed  because of this. If any one can help me
then i can even pay them the amount they want. Sorry if i am doing
something not correct. I am really frustated guys.

Is there any one who can help me. Please reply to me.

                                                                  Regards,
                                                                  Nishanth.

From singh.nishanth5 at gmail.com  Thu Jun 17 08:23:34 2010
From: singh.nishanth5 at gmail.com (Nishanth singh)
Date: Thu, 17 Jun 2010 11:23:34 -0400
Subject: [antlr-interest] disregard the previous mail
Message-ID: <AANLkTikt_oz1o8A39iol6No5WfCzZEDMI1O1ZobuvMxt@mail.gmail.com>

Hello,

Kindly read the mail completely and please reply back to me.

I am a student doing an intern this summer . I was given a task of
building a compiler using antlr. I read the book called "The
definitive antlr reference" and was able to build the grammer which
generates an abstract syntax tree and parse the data file and check it
for errors. Now using the parser and lexer files generated they want
me to convert the tree into a list structure of C sharp code. I am
having no idea of how to do it. I searched a lot in the net but
couldnt find it. There is no one in my work place who knows antlr. I
am really getting depressed  because of this. If any one can help me
please reply to me. Please help me guys I am really frustated.



                                                                 Regards,
                                                                 Nishanth.

From powerofazure at gmail.com  Thu Jun 17 14:28:17 2010
From: powerofazure at gmail.com (Nathan Eloe)
Date: Thu, 17 Jun 2010 16:28:17 -0500
Subject: [antlr-interest] Comment parsing at beginning of file
Message-ID: <4C1A9371.8000203@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

I'm working on a tree grammar that accepts the Bash language and have
run across the current problem:

Comments in bash are started by the "#" symbol.  From man bash:
"[...] a word beginning with # causes that word and all remaining
characters on that line to be ignored."

As such, I've added the following token to my file:

COMMENT
    :   (EOL|BLANK) '#' ~('\n'|'\r')* (EOL|EOF){$channel=HIDDEN;}
    ;

The EOL was put in to allow vertain parameter expansions that take the form:

${#param}
${name#word}
${name##word}

Before I tried to handle these cases, my test cases handled comments at
the beginning of files.  However, now it cannot.

What I need is either a semi-graceful way to either tell the token it
needs to be at the beginning of a line (including at the start of the
file) or something to add that it needs to be at the beginning of the file.

I've searched MarkMail and the internet, but everything I've come up
with (semantic predicates for position, etc, etc) will only work for
parser rules, and since I'm at the beginning of the file I can't emit a
beginning of line token to fix the problem.

Also, this will eventually be using the C runtime (right now I'm
outputting it in java so I can test the grammar with gunit and the
ANTLRworks debugger).

Thanks,
Nathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.14 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwak3AACgkQFpoRlVgtqKZ0+QCbB5hLxL2S32RYolqE/UunFOSW
jZgAniHHEV3Z1Od0fEoPYCs8ggJiD5A6
=r4yz
-----END PGP SIGNATURE-----

From mike.matera at xilinx.com  Thu Jun 17 15:11:55 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Thu, 17 Jun 2010 15:11:55 -0700
Subject: [antlr-interest] disregard the previous mail
In-Reply-To: <AANLkTikt_oz1o8A39iol6No5WfCzZEDMI1O1ZobuvMxt@mail.gmail.com>
References: <AANLkTikt_oz1o8A39iol6No5WfCzZEDMI1O1ZobuvMxt@mail.gmail.com>
Message-ID: <4d1b3040-bcf5-4402-8d36-f184f432a8fb@VA3EHSMHS013.ehs.local>

Hi Nishanth,

Please try to ask more specific questions.  This list is not the place 
to have your parser project done for you.  Summer interns are supposed 
to do that!

That said, you might have an easier time if you don't construct an AST. 
  Instead you can build your data structure as you parse.  Here's what I 
mean (my example is in Java):


grammar Example

options {
  language = Java;
}

@members {
   private HashMap<String,Integer> MyMap;
}

file
   returns [HashMap<String,Integer> rval]
   @init {
     MyMap = new HashMap<String,Integer>();
   }
   @after {
     rval = MyMap;
   }
   : list_item* EOF
   ;

list_item
   : str:ID '=' num:INT
     {
       Integer myint = Integer.parseInt($num.getText());
       MyMap.put($str.getText(), myint);
     }
   ;

ID : ('a'..'z' | 'A'..'Z')* ;

INT : ('0'..'9')+ ;

WS : (' '|'\r'|'\n'|'\t')+ {$channel = HIDDEN;} ;


In this example no AST is made.  Instead a Java HashMap is built.  This 
is probably similar to what you want.  The HashMap is returned by the 
'file' rule instead of an AST.  Please note that if you tell ANTLR to 
build an AST you will have an error, so turn AST building off.  The 
above code will not produce anything if there's a parse error.  This is 
also probably what you want.

If you follow up to this reply, please ask a specific question!

Cheers
./m

Nishanth singh wrote:
> Hello,
> 
> Kindly read the mail completely and please reply back to me.
> 
> I am a student doing an intern this summer . I was given a task of
> building a compiler using antlr. I read the book called "The
> definitive antlr reference" and was able to build the grammer which
> generates an abstract syntax tree and parse the data file and check it
> for errors. Now using the parser and lexer files generated they want
> me to convert the tree into a list structure of C sharp code. I am
> having no idea of how to do it. I searched a lot in the net but
> couldnt find it. There is no one in my work place who knows antlr. I
> am really getting depressed  because of this. If any one can help me
> please reply to me. Please help me guys I am really frustated.
> 
> 
> 
>                                                                  Regards,
>                                                                  Nishanth.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From jasperfloor at gmail.com  Fri Jun 18 07:00:48 2010
From: jasperfloor at gmail.com (Jasper Floor)
Date: Fri, 18 Jun 2010 16:00:48 +0200
Subject: [antlr-interest] Slight mismatch between real and expected gunit
	results
Message-ID: <AANLkTinQLW0Fp2pCM0asdyDbNbmdBoWH_fY6RWDcoJMo@mail.gmail.com>

I have used ANTLR to create a small DSL for my company. I wanted to
implement tests for the grammar with gunit (which I only just
discovered). I ran the example and it works wonderfully but there is
one slight problem with the output.

On the wiki you can see the expected output of gunit. The output I get
is almost identical except that escape codes in Strings are not
interpreted.

As can be seen below the output is correct but the strings contain \n
instead of eol characters.

I don't know if this happens in gunit or in the generated Parser but I
suspect gunit or something I did.

I am working with ANTLR 3.2, Ubuntu 10.4 and java 6 update 20.

mvg,
Jasper Floor

my output:
-----------------------------------------------------------------------
executing testsuite for grammar:SimpleC with 11 tests
-----------------------------------------------------------------------
4 failures found:
test2 (variable, line7) -
expected: x
actual: null

test3 (functionHeader, line11) -
expected: int
actual: bar

test6 (program, line22) -
expected:
actual: bar is a declaration\nfoo is a definition\n

test8 (ID, line28) -
expected: OK
actual: extra text found, '@999'


Tests run: 11, Failures: 4

From a.moderacja at gmail.com  Fri Jun 18 07:56:09 2010
From: a.moderacja at gmail.com (Borneq)
Date: Fri, 18 Jun 2010 16:56:09 +0200
Subject: [antlr-interest] Beginner want to compile Html grammar
Message-ID: <AANLkTilUVu8-i0jaLOHqyAN_000D377UXAQNPefFQ7f1@mail.gmail.com>

Both version antlrworks-1.2.1.jar and antlrworks-1.4.jar can compile
SimpleCalc.g, SimpleCalcLexer.java, SimpleCalcParser.java from simple
example http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3
But I want compile HTML from http://www.antlr.org/grammar/HTML.
If I compile html.g with antlrworks-1.2.1.jar it show syntax error in
line 75, unexpected token class
If I compile html.g with antlrworks-1.4.jar it show more errors.
How I can comppile, how I change target to C?
Can Anyone compile for me html.g and sent me to a.moderacja at gmail.com?
It would be the best if generated for two target: Java and C.
I want write Html parser in Delphi and I want manually translate it
from Java or C to Delphi.

From j at junkwallah.org  Fri Jun 18 12:25:06 2010
From: j at junkwallah.org (Junkman)
Date: Fri, 18 Jun 2010 12:25:06 -0700
Subject: [antlr-interest] Antlrworks with Python-like grammar
In-Reply-To: <AANLkTilUVu8-i0jaLOHqyAN_000D377UXAQNPefFQ7f1@mail.gmail.com>
References: <AANLkTilUVu8-i0jaLOHqyAN_000D377UXAQNPefFQ7f1@mail.gmail.com>
Message-ID: <4C1BC812.4090306@junkwallah.org>

Hello,

I have a parser grammar that relies on a custom TokenStream - quite like
the Python grammar posted on the Antlr website that relies on
PythonTokenStream.java.

I am wondering if there is a way to run/debug the parser in AntlrWorks -
it would be nice if I can make use of AntlrWorks' debugger visualization
features.

Thanks for any help,

Jay

From pchapin at cems.uvm.edu  Sat Jun 19 18:20:16 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Sat, 19 Jun 2010 21:20:16 -0400
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
Message-ID: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>

I recently downloaded the latest release of NetBeans (6.9). I see that
there is a NetBeans plug-in that supports the editing of ANTLR grammars.

http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444

It does not appear to work with NetBeans 6.9. In particular when I try
to install it I am told:

<quote>
Some plugins require plugin Editor Library to be installed. 
The plugin Editor Library is requested in version >= 1.27 (release
version 1) but only 2.10.1.10.2 (of release version different from 1)
was found.

The following plugin is affected:
      Antlr Editor Support 
</quote>

I'm not necessarily surprised that support for 6.9 is not available at
this time. However, I notice that this plug-in was last updated in June
2009... almost exactly a year ago. Does anyone happen to know if this
project is still being maintained?

Peter



From a.moderacja at gmail.com  Sun Jun 20 23:09:06 2010
From: a.moderacja at gmail.com (Borneq)
Date: Mon, 21 Jun 2010 08:09:06 +0200
Subject: [antlr-interest] [OT]Hello!
Message-ID: <AANLkTiniqqbRVezbVBaqilA4wq-_GxH8eXCIYTWt3uQ-@mail.gmail.com>

Is anyone on this mailing list?

From bkiers at gmail.com  Mon Jun 21 03:51:02 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 21 Jun 2010 12:51:02 +0200
Subject: [antlr-interest] [OT]Hello!
In-Reply-To: <AANLkTiniqqbRVezbVBaqilA4wq-_GxH8eXCIYTWt3uQ-@mail.gmail.com>
References: <AANLkTiniqqbRVezbVBaqilA4wq-_GxH8eXCIYTWt3uQ-@mail.gmail.com>
Message-ID: <AANLkTimFO4sBf9Yk8KIj57959zB5uijUJR8uY9IA8H_B@mail.gmail.com>

On Mon, Jun 21, 2010 at 8:09 AM, Borneq <a.moderacja at gmail.com> wrote:

> Is anyone on this mailing list?
>
>

Yes, lots of people.

Regards,

Bart.

From stefika at gmail.com  Mon Jun 21 08:05:04 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 21 Jun 2010 10:05:04 -0500
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
In-Reply-To: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
References: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
Message-ID: <AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>

Do you know if the sourcecode is available? The changes made to the
platform APIs in netbeans 6.9 are trivial to solve, and I could
probably port it over easily if it were.

Stefik

On Sat, Jun 19, 2010 at 8:20 PM, Peter C. Chapin <pchapin at cems.uvm.edu> wrote:
> I recently downloaded the latest release of NetBeans (6.9). I see that
> there is a NetBeans plug-in that supports the editing of ANTLR grammars.
>
> http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444
>
> It does not appear to work with NetBeans 6.9. In particular when I try
> to install it I am told:
>
> <quote>
> Some plugins require plugin Editor Library to be installed.
> The plugin Editor Library is requested in version >= 1.27 (release
> version 1) but only 2.10.1.10.2 (of release version different from 1)
> was found.
>
> The following plugin is affected:
> ? ? ?Antlr Editor Support
> </quote>
>
> I'm not necessarily surprised that support for 6.9 is not available at
> this time. However, I notice that this plug-in was last updated in June
> 2009... almost exactly a year ago. Does anyone happen to know if this
> project is still being maintained?
>
> Peter
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From pchapin at cems.uvm.edu  Mon Jun 21 08:54:22 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Mon, 21 Jun 2010 11:54:22 -0400
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
In-Reply-To: <AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>
References: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
	<AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>
Message-ID: <1277135662.6224.1.camel@dustdevil.cis.vtc.edu>


On Mon, 2010-06-21 at 10:05 -0500, Andreas Stefik wrote:

> Do you know if the sourcecode is available? The changes made to the
> platform APIs in netbeans 6.9 are trivial to solve, and I could
> probably port it over easily if it were.

It looks like a Mercurial repository holds the source. See the page here
for more information:

http://kenai.com/projects/nbantlr/sources

If you back up that URL by one level you come to the home page for the
project.

Peter



From jon.forums at gmail.com  Mon Jun 21 08:55:25 2010
From: jon.forums at gmail.com (Jon)
Date: Mon, 21 Jun 2010 11:55:25 -0400
Subject: [antlr-interest] determining tokens at runtime
Message-ID: <20100621115525.90fcc5b7.jon.forums@gmail.com>

I'm very new to ANTLR and am investigating how I might use the tool for an upcoming project.

I need to be able to recognize and parse a language that is similar to X12 syntax in that it contains delimited segments each containing delimited data elements.

The first segment specifies both the element delimiter and segment delimiters used for the rest of the input, the delimiters must be different from one another and from the element data, and the segment delimiter can contain multiple characters.

Below is a very simple test grammar in which I want to convert to being able to determine the element delimiter (ED) at runtime (always the 1st character after 'STA') and the segment delimiter (SD).  I suspect I can't do this entirely in the grammar and may need to subclass/override some core ANTLR classes or maybe even scan the input buffer.

I'm not sure where to go from here and haven't yet found anything that appears useful either in the Definitive ANTLR Ref book or via google. I'd appreciate any RTFM links I missed if this has already been discussed many times before, or any pointers on where to look in the source for extending existing ANTLR behavior.

Thanks, Jon


// Simple.g
grammar Simple;

tokens {
  STA = 'STA';
  BEG = 'BEG';
  END = 'END';
}

transaction : header beg_segment footer;

header : STA segment_body;
beg_segment : BEG segment_body;
footer : END segment_body;
segment_body : ED DATA ED DATA SD;

DATA : 'A'..'Z'+;
ED : '*';
SD : '\r' '\n' | 'r';


// test data
STA*HEADER*SEGMENT
BEG*TRANSACTION*HEADER
END*FOOTER*SEGMENT

From stefika at gmail.com  Mon Jun 21 09:46:35 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 21 Jun 2010 11:46:35 -0500
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
In-Reply-To: <1277135662.6224.1.camel@dustdevil.cis.vtc.edu>
References: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
	<AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>
	<1277135662.6224.1.camel@dustdevil.cis.vtc.edu>
Message-ID: <AANLkTinILuH55YEpv6bGKP6XvWZdjim5uVVCf0EeTjv9@mail.gmail.com>

Peter,

Looks like there is already a 0.2.7 available for 6.9:

http://kenai.com/projects/nbantlr/downloads

So, it looks like the changes have already been made.

Stefik

On Mon, Jun 21, 2010 at 10:54 AM, Peter C. Chapin <pchapin at cems.uvm.edu> wrote:
>
> On Mon, 2010-06-21 at 10:05 -0500, Andreas Stefik wrote:
>
>> Do you know if the sourcecode is available? The changes made to the
>> platform APIs in netbeans 6.9 are trivial to solve, and I could
>> probably port it over easily if it were.
>
> It looks like a Mercurial repository holds the source. See the page here
> for more information:
>
> http://kenai.com/projects/nbantlr/sources
>
> If you back up that URL by one level you come to the home page for the
> project.
>
> Peter
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jon.forums at gmail.com  Mon Jun 21 13:25:26 2010
From: jon.forums at gmail.com (Jon)
Date: Mon, 21 Jun 2010 16:25:26 -0400
Subject: [antlr-interest] determining tokens at runtime
In-Reply-To: <AANLkTil4o5lLpDAMJUJJAuqwBpbv72itCzoiooIgYoJ1@mail.gmail.com>
References: <20100621115525.90fcc5b7.jon.forums@gmail.com>
	<AANLkTimdGWU9N2sAqDrIVAnni6BupovWMPvykXMShPnZ@mail.gmail.com>
	<20100621140631.92f73832.jon.forums@gmail.com>
	<AANLkTil4o5lLpDAMJUJJAuqwBpbv72itCzoiooIgYoJ1@mail.gmail.com>
Message-ID: <20100621162526.8f43c032.jon.forums@gmail.com>

> See TDAR pg 285.
> 
> A parser rule is going to work well.


I tweaked the grammar (below) to get it to compile but am still not seeing the dynamic ED behavior when I use "test data 2" below with "^" as the ED delimiter instead of "*".

The ED lexer rule appears to hard code the choices and the capture action + semantic predicate seems only to validate rather than provide dynamic token behavior.

I get the following errors:

line 1:3 no viable alternative at character '^'
...
line 1:4 missing ED at 'HEADER'
...


I'm guessing I didn't implement your suggestion correctly or fully.  Ideas?

Jon



// Simple.g
grammar Simple;

tokens {
  STA = 'STA';
  BEG = 'BEG';
  END = 'END';
}

@members {
  char sep;
}

transaction : header beg_segment footer;

header : STA ed=ED { sep = $ed.text.toCharArray()[0]; } DATA
         ed=ED { $ed.text.toCharArray()[0] == sep }? DATA SD
       ;
beg_segment : BEG segment_body;
footer : END segment_body;
segment_body : ED DATA ED DATA SD;

DATA : (ALPHA_CAPS | DIGIT | '_')+;
ED : '*';
SD : '\r'? '\n';
fragment DIGIT : '0'..'9';
fragment ALPHA_CAPS : 'A'..'Z';


// test data 2 (fail)
STA^HEADER^SEGMENT
BEG^TRANSACTION^HEADER
END^FOOTER^SEGMENT

From pchapin at cems.uvm.edu  Mon Jun 21 16:20:15 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Mon, 21 Jun 2010 19:20:15 -0400
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
In-Reply-To: <AANLkTinILuH55YEpv6bGKP6XvWZdjim5uVVCf0EeTjv9@mail.gmail.com>
References: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
	<AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>
	<1277135662.6224.1.camel@dustdevil.cis.vtc.edu>
	<AANLkTinILuH55YEpv6bGKP6XvWZdjim5uVVCf0EeTjv9@mail.gmail.com>
Message-ID: <1277162415.7342.20.camel@dustdevil.cis.vtc.edu>

On Mon, 2010-06-21 at 11:46 -0500, Andreas Stefik wrote:

> Looks like there is already a 0.2.7 available for 6.9:
> 
> http://kenai.com/projects/nbantlr/downloads
> 
> So, it looks like the changes have already been made.

Thanks! I didn't notice that. I guess they haven't updated the NetBeans
plug-in site. Again, thanks for taking the time to look into it.

Peter



From stefika at gmail.com  Mon Jun 21 19:05:46 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 21 Jun 2010 21:05:46 -0500
Subject: [antlr-interest] ANTLR editor support in NetBeans 6.9
In-Reply-To: <1277162415.7342.20.camel@dustdevil.cis.vtc.edu>
References: <1276996816.6539.5.camel@dustdevil.cis.vtc.edu>
	<AANLkTikngbq4ZVS6rAMF5L88OaQCl3PlwRRZrJwc9QZ6@mail.gmail.com>
	<1277135662.6224.1.camel@dustdevil.cis.vtc.edu>
	<AANLkTinILuH55YEpv6bGKP6XvWZdjim5uVVCf0EeTjv9@mail.gmail.com>
	<1277162415.7342.20.camel@dustdevil.cis.vtc.edu>
Message-ID: <AANLkTil8KlvGO83ge485VHRBCHnFbbGhX69u9S-WYZKP@mail.gmail.com>

Yaa, no problem. My team just finished porting over our tools to the
6.9 release, so when I saw your post I thought I'd take a quick gander
:)

Stefik

On Mon, Jun 21, 2010 at 6:20 PM, Peter C. Chapin <pchapin at cems.uvm.edu> wrote:
> On Mon, 2010-06-21 at 11:46 -0500, Andreas Stefik wrote:
>
>> Looks like there is already a 0.2.7 available for 6.9:
>>
>> http://kenai.com/projects/nbantlr/downloads
>>
>> So, it looks like the changes have already been made.
>
> Thanks! I didn't notice that. I guess they haven't updated the NetBeans
> plug-in site. Again, thanks for taking the time to look into it.
>
> Peter
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From pg at freeboundaries.com  Tue Jun 22 01:22:01 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Tue, 22 Jun 2010 04:22:01 -0400
Subject: [antlr-interest] Help me get started
Message-ID: <4C2072A9.4020303@freeboundaries.com>

Hi,

Here's my first attempt at an ANTLR project. For practice, I just want 
to read a file with lowercase words and print them. I feed it "hi there 
how are you"
All that the program prints is "hi".

Many thanks in advance,

PG

grammar pg;

doc
:    a = word {System.out.println($a.value);} ( WS b = word 
{System.out.println($b.value);}  )*;

word    returns[String value]
:LETTERS  {$value = $LETTERS.text;}  ;

WS  :   ( ' '
         | '\t'
         | '\r'
         | '\n'
         ) {$channel=HIDDEN;}
     ;

LETTERS:    ('a'..'z')+;

From a.moderacja at gmail.com  Tue Jun 22 03:12:08 2010
From: a.moderacja at gmail.com (Borneq)
Date: Tue, 22 Jun 2010 12:12:08 +0200
Subject: [antlr-interest] Help me get started
In-Reply-To: <4C2072A9.4020303@freeboundaries.com>
References: <4C2072A9.4020303@freeboundaries.com>
Message-ID: <AANLkTikV2TwF8DQdAmbg1-T8KWuNy1SBYa697NzNapXy@mail.gmail.com>

2010/6/22 Pavel Grinfeld <pg at freeboundaries.com>:
> grammar pg;

Grammar pg compiling OK, but in html.g we have
class HTMLParser extends Parser;
options {
	exportVocab=HTML;
	k = 1;
}
and compiler not works...

From a.moderacja at gmail.com  Tue Jun 22 03:19:36 2010
From: a.moderacja at gmail.com (Borneq)
Date: Tue, 22 Jun 2010 12:19:36 +0200
Subject: [antlr-interest] [OT]Hello!
In-Reply-To: <AANLkTimFO4sBf9Yk8KIj57959zB5uijUJR8uY9IA8H_B@mail.gmail.com>
References: <AANLkTiniqqbRVezbVBaqilA4wq-_GxH8eXCIYTWt3uQ-@mail.gmail.com>
	<AANLkTimFO4sBf9Yk8KIj57959zB5uijUJR8uY9IA8H_B@mail.gmail.com>
Message-ID: <AANLkTimVmx_fppbzv13FL30tiJhSOI7bSCvcOk6fd02V@mail.gmail.com>

2010/6/21 Bart Kiers <bkiers at gmail.com>:
> Yes, lots of people.
> Regards,
> Bart.

Recently I don't get any mail

From jbb at acm.org  Tue Jun 22 05:37:31 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 22 Jun 2010 08:37:31 -0400
Subject: [antlr-interest] Help me get started
In-Reply-To: <4C2072A9.4020303@freeboundaries.com>
References: <4C2072A9.4020303@freeboundaries.com>
Message-ID: <1277210251.14806.12.camel@gecko.home.org>

Greetings!

On Tue, 2010-06-22 at 04:22 -0400, Pavel Grinfeld wrote:
> Hi,
> 
> Here's my first attempt at an ANTLR project. For practice, I just want 
> to read a file with lowercase words and print them. I feed it "hi there 
> how are you"
> All that the program prints is "hi".
> 
> Many thanks in advance,
> 
> PG
> 
> grammar pg;
> 
> doc
> :    a = word {System.out.println($a.value);} ( WS b = word 
> {System.out.println($b.value);}  )*;
> 
> word    returns[String value]
> :LETTERS  {$value = $LETTERS.text;}  ;
> 
> WS  :   ( ' '
>          | '\t'
>          | '\r'
>          | '\n'
>          ) {$channel=HIDDEN;}
>      ;
> 
> LETTERS:    ('a'..'z')+;

Because you have directed the WS token to the HIDDEN channel in your
Lexer rule, the doc parser rule will never see a WS between your words.

The reason you just get 1 word is because your doc rule uses the * meta
operator to consume the second and subsequent words --- if there is a WS
which will never happen --- and you have not included the EOF in any
rule so ANTLR just stops after the first acceptable input (e.g. the
first word).

change your doc rule to be something like this:

doc : ( a=word { System.out.println($a.value); } )+ EOF ;


Hope this helps....
   -jbb



From pg at freeboundaries.com  Tue Jun 22 07:18:04 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Tue, 22 Jun 2010 10:18:04 -0400
Subject: [antlr-interest] lexer vs. grammer
Message-ID: <4C20C61C.4030009@freeboundaries.com>

Hi,

Is it always clear cut whether to call something a token or make it part 
of grammar.

For example, suppose we are parsing TeX and a command is something that 
looks like this:

\name{stuff}

Should "command" be in the lexer section or grammar section?

Sorry for such a vague question, but I am just starting out...

Thanks!

PG

From pg at freeboundaries.com  Tue Jun 22 08:08:06 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Tue, 22 Jun 2010 11:08:06 -0400
Subject: [antlr-interest] Multiple alternatives warning
Message-ID: <4C20D1D6.9070803@freeboundaries.com>

Hi,

I'm begging to get my bearings on this.... But the following gives two 
"multiple alternatives" warnings.

How come?

Many thanks in advance,

Pavel

grammar PGTeX;

doc
:     
(a=text{System.out.print(">"+$a.value+"<");}|b=command{System.out.print($b.value);})+ 
EOF;

command returns [ String value ]
:'\\' a=word '\{' b=word '\}' {$value=$a.value+"+"+$b.value;};

text    returns[String value]
:{$value="";}(a=word{$value += $a.value;} | WS{$value += $WS.text;} )+;

word    returns[String value]
:WORD  {$value = $WORD.text;}  ;

WS  :   ( ' '
         | '\t'
         | '\r'
         | '\n'
         )+;


WORD:    ('a'..'z')+;

From jbb at acm.org  Tue Jun 22 08:59:13 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 22 Jun 2010 11:59:13 -0400
Subject: [antlr-interest] Multiple alternatives warning
In-Reply-To: <4C20D1D6.9070803@freeboundaries.com>
References: <4C20D1D6.9070803@freeboundaries.com>
Message-ID: <1277222353.16425.19.camel@gecko.home.org>

Greetings!

On Tue, 2010-06-22 at 11:08 -0400, Pavel Grinfeld wrote:
> Hi,
> 
> I'm begging to get my bearings on this.... But the following gives two 
> "multiple alternatives" warnings.
> 
> How come?
> 
> Many thanks in advance,
> 
> Pavel
> 
> grammar PGTeX;
> 
> doc
> :     
> (a=text{System.out.print(">"+$a.value+"<");}|b=command{System.out.print($b.value);})+ 
> EOF;
> 
> command returns [ String value ]
> :'\\' a=word '\{' b=word '\}' {$value=$a.value+"+"+$b.value;};
> 
> text    returns[String value]
> :{$value="";}(a=word{$value += $a.value;} | WS{$value += $WS.text;} )+;
> 
> word    returns[String value]
> :WORD  {$value = $WORD.text;}  ;
> 
> WS  :   ( ' '
>          | '\t'
>          | '\r'
>          | '\n'
>          )+;
> 
> 
> WORD:    ('a'..'z')+;

your grammar is ambiguous because there is no way to know how to divide
up multiple text instances and supply them to the loop in the doc rule.

my explanation is probably really confusing but lets look at an example.

consider this input: a b

so the input is just 3 tokens: a WS b

now there are at least 4 derivations (e.g. parse trees) for this input
under your grammar:

doc
   text
      word=='a'
      WS==' '
      word=='b'

or

doc
   text
      word=='a'
   text
      WS==' '
   text
      word=='b'

or

doc
   text
      word=='a'
      WS==' '
   text
      word=='b'

doc
   text
      word=='a'
   text
      WS==' '
      word=='b'

all of these are perfectly valid under your grammar and there is no way
for the Tool to decide which derivation you really want (i'm guessing
you want the first...)

I think if you ignore the warning and try your grammar you will get the
first derivation, not sure.

of course the better solution is to re-work your grammar in order to
remove the ambiguity.

is this Knuth's TeX typesetting language? I have not used TeX directly,
but have used Lamport's LaTeX quite a bit. And in LaTeX commands and
text are interleaved. is that true for TeX also? so maybe:

doc : command+ ( text command+ )+ EOF;

Hope this helps...
   -jbb



From jon.forums at gmail.com  Tue Jun 22 09:00:06 2010
From: jon.forums at gmail.com (Jon)
Date: Tue, 22 Jun 2010 12:00:06 -0400
Subject: [antlr-interest] determining tokens at runtime
In-Reply-To: <AANLkTinYoW7EltCx8jWWAzXSA-6zATCp7ytQuuL_nk_n@mail.gmail.com>
References: <20100621115525.90fcc5b7.jon.forums@gmail.com>
	<AANLkTimdGWU9N2sAqDrIVAnni6BupovWMPvykXMShPnZ@mail.gmail.com>
	<20100621140631.92f73832.jon.forums@gmail.com>
	<AANLkTil4o5lLpDAMJUJJAuqwBpbv72itCzoiooIgYoJ1@mail.gmail.com>
	<20100621162526.8f43c032.jon.forums@gmail.com>
	<AANLkTinYoW7EltCx8jWWAzXSA-6zATCp7ytQuuL_nk_n@mail.gmail.com>
Message-ID: <20100622120006.08393785.jon.forums@gmail.com>

> The lexer rule should be...
> ED: .;
> Dot will match any one character.  Then it works as expected.

Thanks for your insight...I'm off and running again!  It seems so obvious now that you showed me ;)

Back to the TDAR book and thinking how the wide-open-lexer-rule-plus-predicate validation can best be modularized so I don't have to repeat the predicate all over the grammar.

Jon

From pg at freeboundaries.com  Tue Jun 22 09:39:16 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Tue, 22 Jun 2010 12:39:16 -0400
Subject: [antlr-interest] Multiple alternatives warning
In-Reply-To: <1277222353.16425.19.camel@gecko.home.org>
References: <4C20D1D6.9070803@freeboundaries.com>
	<1277222353.16425.19.camel@gecko.home.org>
Message-ID: <4C20E734.8060308@freeboundaries.com>

I'm sorry, you did tell me how to fix it!

On 6/22/2010 11:59 AM, John B. Brodie wrote:
> Greetings!
>
> On Tue, 2010-06-22 at 11:08 -0400, Pavel Grinfeld wrote:
>    
>> Hi,
>>
>> I'm begging to get my bearings on this.... But the following gives two
>> "multiple alternatives" warnings.
>>
>> How come?
>>
>> Many thanks in advance,
>>
>> Pavel
>>
>> grammar PGTeX;
>>
>> doc
>> :
>> (a=text{System.out.print(">"+$a.value+"<");}|b=command{System.out.print($b.value);})+
>> EOF;
>>
>> command returns [ String value ]
>> :'\\' a=word '\{' b=word '\}' {$value=$a.value+"+"+$b.value;};
>>
>> text    returns[String value]
>> :{$value="";}(a=word{$value += $a.value;} | WS{$value += $WS.text;} )+;
>>
>> word    returns[String value]
>> :WORD  {$value = $WORD.text;}  ;
>>
>> WS  :   ( ' '
>>           | '\t'
>>           | '\r'
>>           | '\n'
>>           )+;
>>
>>
>> WORD:    ('a'..'z')+;
>>      
> your grammar is ambiguous because there is no way to know how to divide
> up multiple text instances and supply them to the loop in the doc rule.
>
> my explanation is probably really confusing but lets look at an example.
>
> consider this input: a b
>
> so the input is just 3 tokens: a WS b
>
> now there are at least 4 derivations (e.g. parse trees) for this input
> under your grammar:
>
> doc
>     text
>        word=='a'
>        WS==' '
>        word=='b'
>
> or
>
> doc
>     text
>        word=='a'
>     text
>        WS==' '
>     text
>        word=='b'
>
> or
>
> doc
>     text
>        word=='a'
>        WS==' '
>     text
>        word=='b'
>
> doc
>     text
>        word=='a'
>     text
>        WS==' '
>        word=='b'
>
> all of these are perfectly valid under your grammar and there is no way
> for the Tool to decide which derivation you really want (i'm guessing
> you want the first...)
>
> I think if you ignore the warning and try your grammar you will get the
> first derivation, not sure.
>
> of course the better solution is to re-work your grammar in order to
> remove the ambiguity.
>
> is this Knuth's TeX typesetting language? I have not used TeX directly,
> but have used Lamport's LaTeX quite a bit. And in LaTeX commands and
> text are interleaved. is that true for TeX also? so maybe:
>
> doc : command+ ( text command+ )+ EOF;
>
> Hope this helps...
>     -jbb
>
>
>    

From pg at freeboundaries.com  Tue Jun 22 13:47:52 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Tue, 22 Jun 2010 16:47:52 -0400
Subject: [antlr-interest] Help needed with baby LaTeX parser
Message-ID: <4C212178.6010404@freeboundaries.com>

Hi,

I'm doing pretty well recognizing LaTeX commands, but now I'm at the 
stage where I want to capture the "text". I'm having trouble defining 
"everything else".
Basically, I currently define LaTeX as

commands (as I define them), possibly separated by WS, and everything 
that's not a command is "text". I keep running into a problem that when 
I define "text" generously, it starts grabbing tokens that belong to 
commands. Any help would be greatly appreciated!

Thanks in advance,

Pavel

  I'm including what I have so far, and the document I'm hoping to parse.

grammar PGTeX;

doc : (command WS?)+ EOF;

command : escWord  cWord+ ( sWord+ cWord*)?;

sWord    : '[' word ']';
cWord    : '{' word '}';
escWord : '\\' word;

word : WORD;

WORD:    ('-'|'a'..'z'|'A'..'Z'|'0'..'9'|'\*')+;

WS  :   ( ' ' | '\t'| '\r' | '\n' )+;

COMMENT
     :    '%' (~('\n'|'\r'))*  {$channel = HIDDEN;};


And here's the document:

\documentclass{book}%
\usepackage{amsfonts}
\usepackage{amsmath}%
\newtheorem{summary}[theorem]{Summary}
\begin{document}


\chapter*{Intro}

Book starts here $x^{2}+y^{2}=1$. Here's an intersting faction:
\begin{equation}
\int_{0}^{1}\sin xdx=4
\end{equation}

\end{document}




From a.moderacja at gmail.com  Wed Jun 23 06:18:32 2010
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 23 Jun 2010 15:18:32 +0200
Subject: [antlr-interest] How compile Html grammar?
Message-ID: <AANLkTikdHwTSO9gE_Epr9aKi_5QkuvTaPILWR0_BhsJj@mail.gmail.com>

Grammar is from http://www.antlr.org/grammar/HTML
How to compile it, can anyone say me step by step?
antlrworks-1.4.jar say error for "class HTMLParser extends Parser;"

From netjan42 at gmail.com  Wed Jun 23 07:53:48 2010
From: netjan42 at gmail.com (Jan F)
Date: Wed, 23 Jun 2010 16:53:48 +0200
Subject: [antlr-interest] Text attribute for tree parser rule not working
Message-ID: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>

Hello fellow ANTLRs, I have a problem with obtaining text and positions for
one of my rules ion a tree walker, and since I ran out of ideas on what
might be wrong I am here to ask :-)

My rule looks like this:

memberExpression returns [ Expression expression = null ]
@after { post ($expression, $memberExpression.start,
$memberExpression.text); }
    : ^( BYINDEX parenLeftHandSideExpression expressionSt ) {
       $expression = new NIndexRefExpression (0, 0,
$parenLeftHandSideExpression.expression, $expressionSt.statement);
  }
    | ^( BYFIELD parenLeftHandSideExpression Identifier ) {
       $expression = new NFieldRefExpression (0, 0,
$parenLeftHandSideExpression.expression, $Identifier.text);
     }
    ;

and the problem is that $memberExpression.text returns empty string, caused
by the fact that $memberExpression.start has the start/stop indexes as -1.

I have a second rule for something else, which looks very similar, and that
one (as well as all others) work perfectly fine, the $rule.text containing
the text corresponding to what the rule matched.

Any ideas why this may be happening?

-Jan

From sharwell at pixelminegames.com  Wed Jun 23 08:18:35 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 23 Jun 2010 10:18:35 -0500
Subject: [antlr-interest] Runtime Library of v 3.2 for C#
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F9343F3942@sun.epirion.local>
References: <666090.41114.qm@web26302.mail.ukl.yahoo.com><SNT121-W10C48D0F9EFE43CC78F453960A0@phx.gbl>
	<2B65C901391C804DBB9CF9E6FE30C6F9343F3942@sun.epirion.local>
Message-ID: <00f301cb12e7$59819140$0c84b3c0$@pixelminegames.com>

The CSharp3 target should support the ANTLR 3.2 features. There are a few
known issues, such as the fact that the method generated for the bottomUp
and topDown rules doesn't match the name expected by the current CSharp3
runtime (BottomUp and TopDown), so you have to manually override the
BottomUp and TopDown methods to call bottomUp and topDown instead.

To use the CSharp3 target, you'll need to generate your grammar using the C#
port of the ANTLR tool (Antlr3.exe). The binaries for the tool and the
CSharp3 runtime can be found here:
http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.2.0.6805.7z

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
Sent: Wednesday, April 21, 2010 1:40 AM
To: Nazim Oztahtaci; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Runtime Library of v 3.2 for C#

Johannes Luber, maintainer of the CSharp2 target, wrote in December 2009:

<quote>
I'm working on the 3.2 release. The major issue I'm tackling is to make the
APIs of CSharp2 and CSharp3 source compatible and I have to coordinate this
with the other maintainer. I'll release a beta once I've finished this.
</quote>

I don't know if it is viable to just pull the sources and compile it
yourself. I have not yet tried that. If the changes were trivial, I expect
it would have been in beta stage already. Until that time, I will try and
keep my patience...

Best regards,

Ranco Marcus

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Nazim Oztahtaci
> Sent: dinsdag 20 april 2010 13:42
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Runtime Library of v 3.2 for C#
> 
> 
> Hello,
> 
> I am sorry if I repeat this question. I have checked the history of 
> mail list to find out current situation of C# library for v 3.2 
> Currently I use Java for the implementation of my grammar because when 
> I apply theorems(DeMorgan, Distribution etc) on the tree, BottomUp
function is called to apply them.
> However in C# v.3.1.3 there is no support and I guess I need version 
> 3.2 library.
> 
> I read that version 3.2 for C# can be found in repository. Is that 
> true? I just wanted to confirm that. I assume that to use BottomUp 
> function, it is necessary to have TreeFilter class. If I cant use C# v 
> 3.2 library yet and I have to implement my own TreeFilter class which 
> has BottomUp function, which files in C# version 3.1.3 source code I 
> should make changes?Is it too complex to implement just bottomup 
> function manually? If it is, is there any implementation of C# v 3.2
runtime dlls on the Net for Antlr?
> 
> BEst regards
> 
> 
> __________________________________________________________
> _______
> Yeni Windows 7: G?ndelik i?lerinizi basitle?tirin. Size en uygun 
> bilgisayar? bulun.
> http://windows.microsoft.com/shop
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From scott_boag at us.ibm.com  Wed Jun 23 08:34:09 2010
From: scott_boag at us.ibm.com (scott_boag at us.ibm.com)
Date: Wed, 23 Jun 2010 11:34:09 -0400
Subject: [antlr-interest] Dumb newbie question dept: Anyway to simulate
	lexical states?
Message-ID: <OF88ADD105.F65165AE-ON8525774B.0053432F-8525774B.0055863B@lotus.com>

I need to at least simulate the lexical states I had in JavaCC.  I've been 
banging my head against ANTLR trying to see if the semantic predicates can 
be used to simulate lexer states.  After several days monkeying with 
things, I think my conclusion is, no... semantic predicates in lexer rules 
only throw FailedPredicateException when false, and do not help the lexer 
decide if a token will be recognized.  But, I do remain a bit confused 
about the whole matter... the documentation is really hard to follow. I've 
read and re-read the Terence Parr chapters on semantic and syntactic 
predicates.  But what happens in a the lexer vs. parser seemed relatively 
confused... as far as I can tell, the same syntax for semantic predicates 
do totally different things in the parser rules vs. the lexer rules.

I'm exploring creating a separate lexer for the XML part of the syntax... 
what Martin Probst's XQPretty does.  But there's not declarative syntax 
for doing multiple lexers... we'll have to create classes that do the 
pushing and popping at the java and C++ level.  Also, multiple token 
streams doesn't seem to work with ANTLRWORKS.  Also, looking at Martin's 
code, multiple scanner handling does seem to have a certain complexity... 
making sure one scanner isn't behind another, and the like.

Generate flex when using C++, which is not an unattractive possibility 
(and, hmm... there is a JFlex out there, and JLex for that matter).  It's 
possible this is my best option?

So, the concrete question is, is it possible in ANTLR3 to filter out sets 
of tokens based on a predicates, or do I need ANTLR4 or a flex variant or 
multiple lexers?

-scott

From Tony.Gray at ca.schneider-electric.com  Wed Jun 23 09:10:16 2010
From: Tony.Gray at ca.schneider-electric.com (Tony.Gray at ca.schneider-electric.com)
Date: Wed, 23 Jun 2010 09:10:16 -0700
Subject: [antlr-interest] Heterogeneous AST node construction - minor
 limitation in allowed class names
Message-ID: <OF67566CCF.6B9F2AE3-ON8825774B.0055437A-8825774B.0058D484@US.Schneider-Electric.com>

Hi All,

I've been using Heterogeneous AST node construction with good success, 
following the nicely laid out example at 

http://www.antlr.org/wiki/display/ANTLR3/Tree+construction#Treeconstruction-heterogeneous

though I've run into a minor snag, for which there is a workaround.  The 
class name that follows the token name in angle brackets can't itself 
contain angle brackets.  So template/generic classes can't be created in 
this way.  The workaround is always to just make individual classes for 
each combination of types you'd use in the templates, but it would be nice 
if I could keep the whole specification in the ANTLR grammar rather than 
having to make classes that just wrap my generic classes.

For example, a node type UnaryOperatorNode<double> can't be emitted by 
ANTLR because if you enter:

unaryFunction:
        ABS     -> ABS<UnaryOperatorNode<double>>[$ABS,operand => 
Math.Abs(operand)]
        ;

you get an ANTLR error:
[08:39:50] ANTLR Parser Generator  Version 3.2 Sep 23, 2009 12:02:23
[08:39:50] error(100): CalcValueFormula.g:141:14: syntax error: antlr: 
CalcValueFormula.g:141:14: unexpected token: <
[08:39:50] error(100): CalcValueFormula.g:141:46: syntax error: antlr: 
CalcValueFormula.g:141:46: unexpected token: >

but without the type parameter on the class name, you're fine.  If I make 
a wrapper class DoubleUnaryOperatorNode: UnaryOperatorNode<double> in my 
code, then I can use it in the above construction without problems.

I have tried escaping with backslashes, no luck.  Not a big deal, the 
workaround is easy, this is just an FYI.

On a related note, I thought there was a similar problem with using square 
brackets within the parameter list to the constructor, but I was wrong. 
You do get an error if you don't escape, but you must only escape the 
CLOSING bracket, not both. 

So 
unaryFunction:  ABS     -> ABS<DoubleUnaryOperatorNode>[$ABS,operand => 
Math.Abs(operand[0])];

fails, and
unaryFunction:  ABS     -> ABS<DoubleUnaryOperatorNode>[$ABS,operand => 
Math.Abs(operand\[0\])];

fails, but 
unaryFunction:  ABS     -> ABS<DoubleUnaryOperatorNode>[$ABS,operand => 
Math.Abs(operand[0\])];

works fine.

From gerald at certiv.net  Wed Jun 23 09:26:00 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 23 Jun 2010 09:26:00 -0700
Subject: [antlr-interest] Dumb newbie question dept: Anyway to simulate
 lexical states?
In-Reply-To: <OF88ADD105.F65165AE-ON8525774B.0053432F-8525774B.0055863B@lotus.com>
References: <OF88ADD105.F65165AE-ON8525774B.0053432F-8525774B.0055863B@lotus.com>
Message-ID: <4C223598.9040706@certiv.net>

------ Original Message (Wednesday, June 23, 2010 11:34:09 
AM) From: scott_boag ------
Subject: [antlr-interest] Dumb newbie question dept: Anyway to simulate 
lexical states?
> So, the concrete question is, is it possible in ANTLR3 to filter out sets
> of tokens based on a predicates
>    
The short answer is, yes.  Without knowing more about the problem you 
are having, I can only guess that you may be failing to recognize that 
the lexer is effectively k=1.  An easy solution is to not leave gaps in 
predicate predictions.


From andrew.bradnan at gmail.com  Wed Jun 23 09:32:16 2010
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Wed, 23 Jun 2010 09:32:16 -0700
Subject: [antlr-interest] Runtime Library of v 3.2 for C#
In-Reply-To: <00f301cb12e7$59819140$0c84b3c0$@pixelminegames.com>
References: <666090.41114.qm@web26302.mail.ukl.yahoo.com>
	<SNT121-W10C48D0F9EFE43CC78F453960A0@phx.gbl>
	<2B65C901391C804DBB9CF9E6FE30C6F9343F3942@sun.epirion.local>
	<00f301cb12e7$59819140$0c84b3c0$@pixelminegames.com>
Message-ID: <AANLkTimoYR711svkT64L50T6YnZq-KAAjn8kKGix2S5j@mail.gmail.com>

>From an earlier email on the list...here's what was involved in getting this
to work for me.  (There's a working example in
http://antlrcsharp.codeplex.com  It's the browse project.  It isn't included
in any of the "releases" so you'll need to download the latest source.)

Here's how to get this working with a slightly modified antlr-3.2.jar and
the latest CSharp2 runtime.  Specifically
I got the sample for pattern 19 (symtab/class) from Language Implementation
Patterns working.  That should cover
all the filter=true; Downup() goodness.
1.) Download the latest CSharp2 runtime code and build it (I got a zip from
http://fisheye2.atlassian.com/browse/antlr/runtime/CSharp2).
There's a Visual Studio 2008 project file that builds it without
modification.
2.) You'll need to make a few modifications to the string templates.  The
file to modify in the jar (antlr3-3.2.jar) is
org\antlr\codegen\templates\CSharp2\CSharp2.stg.  (To update...Unzip the
jar, modify CSharp2.stg, and rezip sans
any compression).
Here are the updates to make.
a.) Change Index() to just Index (there are 3 occurances)
b.) Update the treeParser rule to use the TreeRewriter base class as shown
below.  Replace the old version
(line 312) with this.
/** How to generate a tree parser; same as parser except the input
 *  stream is a different type.
 */
treeParser(grammar, name, scopes, tokens, tokenNames, globalAction, rules,
           numRules, bitsets, labelType={<ASTLabelType>},
ASTLabelType="object",

superClass={<if(filterMode)><if(buildAST)>TreeRewriter<else>TreeFilter<endif><else>TreeParser<endif>},
           members={<actions.treeparser.members>},
           filterMode) ::= <<
3.)  Add the override methods for Topdown / Bottomup to YourGrammar.g.
[[To have this behave like the java runtime, the string template for rule
would have to be modified to override
the two methods topdown/bottomup.  You have to explicitly "override" in C#.
topdown/bottomup also need to be all
lower case in CSharpN runtimes since they are not Lexer rules.]]
@members
{
 ...
    protected override void Topdown() { topdown(); }
    protected override void Bottomup() { bottomup(); }
}
4.)  Make sure you translate the java version of TreeAdapter class to
explicitly override Create/DupNode/ErrorNode
(or you'll get mysterious casting exceptions if left as
create/dupNode/errorNode).  Mine looks like this
 // test.cs
    public static Test.TreeAdaptor cymbalAdaptor = new Test.TreeAdaptor();
 public class TreeAdaptor : CommonTreeAdaptor
 {
        public override object Create(IToken token)
  {
   return new CymbolAST(token);
        }
        public override object DupNode(object t)
  {
            if (t == null)
                return null;
            return Create(((CymbolAST)t).Token);
        }
        public override object ErrorNode(ITokenStream input, IToken start,
IToken stop, RecognitionException e)
        {
            CymbolErrorNode t = new CymbolErrorNode(input, start, stop, e);
            Console.WriteLine("returning error node '"+t+"'
@index="+input.Index);
            return t;
        }
    }
Hopefully that helps.
Andrew

2010/6/23 Sam Harwell <sharwell at pixelminegames.com>

> The CSharp3 target should support the ANTLR 3.2 features. There are a few
> known issues, such as the fact that the method generated for the bottomUp
> and topDown rules doesn't match the name expected by the current CSharp3
> runtime (BottomUp and TopDown), so you have to manually override the
> BottomUp and TopDown methods to call bottomUp and topDown instead.
>
> To use the CSharp3 target, you'll need to generate your grammar using the
> C#
> port of the ANTLR tool (Antlr3.exe). The binaries for the tool and the
> CSharp3 runtime can be found here:
> http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.2.0.6805.7z
>
> Thanks,
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
>  [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Wednesday, April 21, 2010 1:40 AM
> To: Nazim Oztahtaci; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Runtime Library of v 3.2 for C#
>
> Johannes Luber, maintainer of the CSharp2 target, wrote in December 2009:
>
> <quote>
> I'm working on the 3.2 release. The major issue I'm tackling is to make the
> APIs of CSharp2 and CSharp3 source compatible and I have to coordinate this
> with the other maintainer. I'll release a beta once I've finished this.
> </quote>
>
> I don't know if it is viable to just pull the sources and compile it
> yourself. I have not yet tried that. If the changes were trivial, I expect
> it would have been in beta stage already. Until that time, I will try and
> keep my patience...
>
> Best regards,
>
> Ranco Marcus
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Nazim Oztahtaci
> > Sent: dinsdag 20 april 2010 13:42
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Runtime Library of v 3.2 for C#
> >
> >
> > Hello,
> >
> > I am sorry if I repeat this question. I have checked the history of
> > mail list to find out current situation of C# library for v 3.2
> > Currently I use Java for the implementation of my grammar because when
> > I apply theorems(DeMorgan, Distribution etc) on the tree, BottomUp
> function is called to apply them.
> > However in C# v.3.1.3 there is no support and I guess I need version
> > 3.2 library.
> >
> > I read that version 3.2 for C# can be found in repository. Is that
> > true? I just wanted to confirm that. I assume that to use BottomUp
> > function, it is necessary to have TreeFilter class. If I cant use C# v
> > 3.2 library yet and I have to implement my own TreeFilter class which
> > has BottomUp function, which files in C# version 3.1.3 source code I
> > should make changes?Is it too complex to implement just bottomup
> > function manually? If it is, is there any implementation of C# v 3.2
> runtime dlls on the Net for Antlr?
> >
> > BEst regards
> >
> >
> > __________________________________________________________
> > _______
> > Yeni Windows 7: G?ndelik i?lerinizi basitle?tirin. Size en uygun
> > bilgisayar? bulun.
> > http://windows.microsoft.com/shop
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
/Andrew

From lgcraymer at yahoo.com  Wed Jun 23 11:56:47 2010
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 23 Jun 2010 11:56:47 -0700 (PDT)
Subject: [antlr-interest] Dumb newbie question dept: Anyway to simulate
	lexical states?
In-Reply-To: <4C223598.9040706@certiv.net>
References: <OF88ADD105.F65165AE-ON8525774B.0053432F-8525774B.0055863B@lotus.com>
	<4C223598.9040706@certiv.net>
Message-ID: <926806.922.qm@web55906.mail.re3.yahoo.com>

The major barrier to use of lexical states with ANTLR 3 is the rule option "backtracking = true" that is tacked onto the Tokens rule when it is constructed.  That seems to interfere with predicate hoisting.

--Loring




----- Original Message ----
> From: Gerald Rosenberg <gerald at certiv.net>
> To: scott_boag at us.ibm.com
> Cc: antlr-interest at antlr.org
> Sent: Wed, June 23, 2010 9:26:00 AM
> Subject: Re: [antlr-interest] Dumb newbie question dept: Anyway to simulate lexical states?
> 
> ------ Original Message (Wednesday, June 23, 2010 11:34:09 
AM) From: 
> scott_boag ------
Subject: [antlr-interest] Dumb newbie question dept: Anyway 
> to simulate 
lexical states?
> So, the concrete question is, is it 
> possible in ANTLR3 to filter out sets
> of tokens based on a 
> predicates
>    
The short answer is, yes.  Without 
> knowing more about the problem you 
are having, I can only guess that you may 
> be failing to recognize that 
the lexer is effectively k=1.  An easy 
> solution is to not leave gaps in 
predicate predictions.


List: 
> href="http://www.antlr.org/mailman/listinfo/antlr-interest" target=_blank 
> >http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
> href="http://www.antlr.org/mailman/options/antlr-interest/your-email-address" 
> target=_blank 
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      


From JALuber at gmx.de  Thu Jun 24 03:52:15 2010
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 24 Jun 2010 12:52:15 +0200
Subject: [antlr-interest] Runtime Library of v 3.2 for C#
In-Reply-To: <00f301cb12e7$59819140$0c84b3c0$@pixelminegames.com>
References: <666090.41114.qm@web26302.mail.ukl.yahoo.com><SNT121-W10C48D0F9EFE43CC78F453960A0@phx.gbl>
	<2B65C901391C804DBB9CF9E6FE30C6F9343F3942@sun.epirion.local>
	<00f301cb12e7$59819140$0c84b3c0$@pixelminegames.com>
Message-ID: <20100624105215.33580@gmx.net>

Hi,

I am halfway there. The current repo version works with my test cases but hasn't been tested extensively. Also I still haven't changed the API completely to full conformance to CSharp3. If you want to use it be aware that thus still bugs may be lurking and later versions may require other source code changes (though they are in general just spelling changes).

Johannes

-------- Original-Nachricht --------
> Datum: Wed, 23 Jun 2010 10:18:35 -0500
> Von: "Sam Harwell" <sharwell at pixelminegames.com>
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] Runtime Library of v 3.2 for C#

> The CSharp3 target should support the ANTLR 3.2 features. There are a few
> known issues, such as the fact that the method generated for the bottomUp
> and topDown rules doesn't match the name expected by the current CSharp3
> runtime (BottomUp and TopDown), so you have to manually override the
> BottomUp and TopDown methods to call bottomUp and topDown instead.
> 
> To use the CSharp3 target, you'll need to generate your grammar using the
> C#
> port of the ANTLR tool (Antlr3.exe). The binaries for the tool and the
> CSharp3 runtime can be found here:
> http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.2.0.6805.7z
> 
> Thanks,
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Wednesday, April 21, 2010 1:40 AM
> To: Nazim Oztahtaci; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Runtime Library of v 3.2 for C#
> 
> Johannes Luber, maintainer of the CSharp2 target, wrote in December 2009:
> 
> <quote>
> I'm working on the 3.2 release. The major issue I'm tackling is to make
> the
> APIs of CSharp2 and CSharp3 source compatible and I have to coordinate
> this
> with the other maintainer. I'll release a beta once I've finished this.
> </quote>
> 
> I don't know if it is viable to just pull the sources and compile it
> yourself. I have not yet tried that. If the changes were trivial, I expect
> it would have been in beta stage already. Until that time, I will try and
> keep my patience...
> 
> Best regards,
> 
> Ranco Marcus
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> > bounces at antlr.org] On Behalf Of Nazim Oztahtaci
> > Sent: dinsdag 20 april 2010 13:42
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Runtime Library of v 3.2 for C#
> > 
> > 
> > Hello,
> > 
> > I am sorry if I repeat this question. I have checked the history of 
> > mail list to find out current situation of C# library for v 3.2 
> > Currently I use Java for the implementation of my grammar because when 
> > I apply theorems(DeMorgan, Distribution etc) on the tree, BottomUp
> function is called to apply them.
> > However in C# v.3.1.3 there is no support and I guess I need version 
> > 3.2 library.
> > 
> > I read that version 3.2 for C# can be found in repository. Is that 
> > true? I just wanted to confirm that. I assume that to use BottomUp 
> > function, it is necessary to have TreeFilter class. If I cant use C# v 
> > 3.2 library yet and I have to implement my own TreeFilter class which 
> > has BottomUp function, which files in C# version 3.1.3 source code I 
> > should make changes?Is it too complex to implement just bottomup 
> > function manually? If it is, is there any implementation of C# v 3.2
> runtime dlls on the Net for Antlr?
> > 
> > BEst regards
> > 
> > 
> > __________________________________________________________
> > _______
> > Yeni Windows 7: G?ndelik i?lerinizi basitle?tirin. Size en uygun 
> > bilgisayar? bulun.
> > http://windows.microsoft.com/shop
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From richard.thrippleton at progress.com  Thu Jun 24 05:09:48 2010
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Thu, 24 Jun 2010 13:09:48 +0100
Subject: [antlr-interest] Text attribute for tree parser rule not working
In-Reply-To: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>
References: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>
Message-ID: <4C234B0C.5030508@progress.com>

Jan F wrote:
> Hello fellow ANTLRs, I have a problem with obtaining text and positions for
> one of my rules ion a tree walker, and since I ran out of ideas on what
> might be wrong I am here to ask :-)
> 
> My rule looks like this:
> 
> memberExpression returns [ Expression expression = null ]
> @after { post ($expression, $memberExpression.start,
> $memberExpression.text); }
>     : ^( BYINDEX parenLeftHandSideExpression expressionSt ) {
>        $expression = new NIndexRefExpression (0, 0,
> $parenLeftHandSideExpression.expression, $expressionSt.statement);
>   }
>     | ^( BYFIELD parenLeftHandSideExpression Identifier ) {
>        $expression = new NFieldRefExpression (0, 0,
> $parenLeftHandSideExpression.expression, $Identifier.text);
>      }
>     ;
> 
> and the problem is that $memberExpression.text returns empty string, caused
> by the fact that $memberExpression.start has the start/stop indexes as -1.
By my understanding the .text attribute on a tree-walker rule will only
return you the text from the top node of the tree. Is your parser
constructing the BYINDEX / BYFIELD tokens with any useful text in them? By
default, imaginary nodes get constructed with empty text.

Richard
-- 
\o/

From markus.scherer at inet-logistics.com  Thu Jun 24 07:23:24 2010
From: markus.scherer at inet-logistics.com (Scherer Markus)
Date: Thu, 24 Jun 2010 16:23:24 +0200
Subject: [antlr-interest] unexpected behavior in splitter grammar
Message-ID: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09B71@MXS04.welo.corp00.com>

Hi everyone!

I am currently working on a grammar, that converts SQL*PLUS scripts in JDBC compatible statements.
Basically I am separating the different statements in

* normal SQL statements (to be JDBC compatible, the trailing semicolon must be removed)
* PL/SQL statements (or more precise: statement that require a trailing ?END;?)
* comments (I keep them for metadata or something)

Furthermore, the SQL*PLUS specific ?/? is recognized.

I simply tried imitate the behavior of multiline-comments, since I am for now not interested in the inner structure of the statements, however the appended grammar yields many errors like the following while parsing

line 4:27 mismatched character 'e' expecting set null
line 4:29 no viable alternative at character 't'
line 4:30 mismatched character ';' expecting set null
line 5:7 mismatched character 'R' expecting set null

Besides of this, the grammar does what I want it to do, but I don?t really trust it.
I appended a test-file, that gets recognized the way I want.

Thanks,
Markus

PS: Since PL/SQL can have nested BEGIN?END-blocks I will have to include a mechanism to count  the BEGINs and ENDs. I am thinking about a counter, that gets incremented, when the lexer finds a BEGIN and decrements when it finds an END. Would you recommend this or do you know a better way?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PLSQLSplitter.g
Type: application/octet-stream
Size: 2471 bytes
Desc: PLSQLSplitter.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100624/5bff76c5/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.sql
Type: application/octet-stream
Size: 356 bytes
Desc: test.sql
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100624/5bff76c5/attachment-0001.obj 

From scott_boag at us.ibm.com  Thu Jun 24 07:57:46 2010
From: scott_boag at us.ibm.com (scott_boag at us.ibm.com)
Date: Thu, 24 Jun 2010 10:57:46 -0400
Subject: [antlr-interest] Dumb newbie question dept: Anyway to simulate
 lexical states?
In-Reply-To: <926806.922.qm@web55906.mail.re3.yahoo.com>
References: <OF88ADD105.F65165AE-ON8525774B.0053432F-8525774B.0055863B@lotus.com>
	<4C223598.9040706@certiv.net>
	<926806.922.qm@web55906.mail.re3.yahoo.com>
Message-ID: <OF96939F64.4007205A-ON8525774C.005120D2-8525774C.0052312F@lotus.com>

Thank you very much for for the suggestions, and the assertion that it is, 
indeed, possible.  Between these suggestions and some ideas from a 
colleague of mine, I have enough ammunition for another try.

-scott

From jbb at acm.org  Thu Jun 24 10:10:53 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 24 Jun 2010 13:10:53 -0400
Subject: [antlr-interest] unexpected behavior in splitter grammar
In-Reply-To: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09B71@MXS04.welo.corp00.com>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09B71@MXS04.welo.corp00.com>
Message-ID: <1277399453.5112.12.camel@gecko.home.org>

Greetings!

On Thu, 2010-06-24 at 16:23 +0200, Scherer Markus wrote:
> I am currently working on a grammar, that converts SQL*PLUS scripts in JDBC compatible statements.
> Basically I am separating the different statements in
> 
> * normal SQL statements (to be JDBC compatible, the trailing semicolon must be removed)
> * PL/SQL statements (or more precise: statement that require a trailing ?END;?)
> * comments (I keep them for metadata or something)
> 
> Furthermore, the SQL*PLUS specific ?/? is recognized.
> 
> I simply tried imitate the behavior of multiline-comments, since I am for now not interested in the inner structure of the statements, however the appended grammar yields many errors like the following while parsing
> 
> line 4:27 mismatched character 'e' expecting set null
> line 4:29 no viable alternative at character 't'
> line 4:30 mismatched character ';' expecting set null
> line 5:7 mismatched character 'R' expecting set null
> 
> Besides of this, the grammar does what I want it to do, but I don?t really trust it.
> I appended a test-file, that gets recognized the way I want.
> 

I received similar errors also using your grammar and test file but at
different lines and columns than you report. I hope that maybe your
reported errors are (hopefully) from some other input file? also I do
not use ANTLRWorks so maybe there is a difference therein (you appear to
be using the ANTLRWorks interpreter? - if so don't)

anyway.....

ANTLR lexers commit themselves to a set of possible tokens as soon as a
valid prefix for that set of tokens is encountered. the lexer will not
backup if the prefix turns out to be non viable.

in your case you have, for example, the keywords INDEX and INSERT. and
your input contains the word INTO. so when the lexer sees the I and N of
the INTO; it assumes that either a D or an S should appear next, but a T
appears; thus an error is emitted.

a simple fix is to add a lexer rule that will match any sequence of
letters. the lexer will then be able to recognize that token for cases
similar to the above. so add this lexer rule (at the very end of the
lexer):

WORD : ('a'..'z'|'A'..'Z')+ ;

the lexer will now announce that the input INTO is a WORD token and life
is good...

hope this helps...
   -jbb



From netjan42 at gmail.com  Thu Jun 24 10:33:20 2010
From: netjan42 at gmail.com (Jan F)
Date: Thu, 24 Jun 2010 19:33:20 +0200
Subject: [antlr-interest] Text attribute for tree parser rule not working
In-Reply-To: <AANLkTikbnXAzsdJg1FRfFMiv98FbV19PqvbDLHNNQcWv@mail.gmail.com>
References: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>
	<AANLkTikhqsI-MiOVSTP2nIQ2mvPH0mHf_zFqMSIsgLAD@mail.gmail.com>
	<AANLkTimdL1aaYA6Qq_PaLm2jQXPonQi-87Yle6VnbE4L@mail.gmail.com>
	<AANLkTikbnXAzsdJg1FRfFMiv98FbV19PqvbDLHNNQcWv@mail.gmail.com>
Message-ID: <AANLkTilkxoLygtxnbzNHbhT1_vc7pK1hUJUlIBQoX2Z9@mail.gmail.com>

I spent most of today debugging this and putting together a view for Eclipse
to display a tree of the two ASTs that I deal with (the ANTLR one and then a
second one that I create using tree walker that is fed into Eclipse DLTK
platform).

So far it is clear, that the problem is that some nodes in the AST have a
pseudo token which is not in the original token stream and has -1 as the
token index (and no positioning info). Those pseudo tokens are created for
some imaginary tokens, and only sometime.

Per Andrew's suggestion I traced what is happening inside the addChild, and
actually before it. The corresponding code in the generated parser is:

    root_1 = (Object)adaptor.becomeRoot((Object)adaptor.create(BYFIELD,
"BYFIELD"), root_1);
    adaptor.addChild(root_1, stream_retval.nextTree());
    adaptor.addChild(root_1, stream_Identifier.nextNode());
    adaptor.addChild(root_0, root_1);

and the adaptor.create (BYFIELD, ...) creates the new pseudo token, that is
not in the token stream.

>From looking at the CommonTreeAdaptor.createToken method JavaDoc, it
explains that for imaginary tokens something extra needs to be done

I am still looking into what the best approach is here, as I have not quite
figured out the whole picture yet .

-Jan

On Wed, Jun 23, 2010 at 7:45 PM, Andrew Bradnan <andrew.bradnan at gmail.com>wrote:

> Yeah, CC the list.  I keep thinking it's automatic.
>
> I just haven't crawled through the generated code enough to fully
> understand when an AST node has a token and when it doesn't.  You should
> probably just trace through the AddChild code.  It tries to keep the
> children in a list when it can, but changes to real children of a nil node
> at some magical point.
>
> Re object.field.anotherfield   For my FIELD rule I just updated an Id field
> on my custom AST node.  You could always update the start/end index
> yourself, or add some custom ones if those are private.
> I haven't seen a thing documentation wise, so I look forward to seeing what
> you find out.
> On Wed, Jun 23, 2010 at 9:49 AM, Jan F <netjan42 at gmail.com> wrote:
>
>> Hmm, that shows that I have not really gotten a good understanding of how
>> the rule/subrule attributes work.
>>
>> I have been fighting pretty hard with obtaining the position boundaries
>> for AST elements, and what I ended up with, which works in most cases, is
>> the trick with updating the positions in the @after section of each rule,
>> based on the $rule.start position and $rule.text length.
>>
>> In my code below, I actually do want the boundaries of the
>> memberExpression (which is like "object.field" reference) rule to be around
>> the whole text (that is the parenLeftHandSideExpression (matches the
>> "object" part) and Identifier (matches the "field" part) - so passing it
>> from subrules as a return value does not really work - the BYFIELD is just
>> an imaginary token.
>>
>> Actually a bit more context - the positions are correct if I parse text
>> with "object.field", but stop working if I have a chain like
>> "obejct.field.anotherfield" - so perhaps the problem could be somewhere
>> else?
>>
>> BTW. I just noticed that you sent this only to me directly, would you mind
>> if I cc the list on further replies?
>>
>> -Jan
>>
>>
>> On Wed, Jun 23, 2010 at 6:21 PM, Andrew Bradnan <andrew.bradnan at gmail.com
>> > wrote:
>>
>>> Only the AST's that actually matched one token will have the token
>>> information filled out.  Subrules with multiple children are blank.  I
>>> haven't actually tested those conditions extensively but just go with the
>>> fixes below when the token information is missing.
>>>
>>> To get around this I've either passed the values back from the subrules
>>> in the grammar using returns or in the subrule I have updated a field on the
>>> AST for the root (like on AST node for BYFIELD).  To update the AST node,
>>> you need to have a custom AST class.  See setting options { ASTLabelType =
>>> MyASTNode; }
>>>
>>> Hopefully that will get you going again.
>>> Andrew
>>>
>>>   On Wed, Jun 23, 2010 at 7:53 AM, Jan F <netjan42 at gmail.com> wrote:
>>>
>>>>  Hello fellow ANTLRs, I have a problem with obtaining text and
>>>> positions for
>>>> one of my rules ion a tree walker, and since I ran out of ideas on what
>>>> might be wrong I am here to ask :-)
>>>>
>>>> My rule looks like this:
>>>>
>>>> memberExpression returns [ Expression expression = null ]
>>>> @after { post ($expression, $memberExpression.start,
>>>> $memberExpression.text); }
>>>>    : ^( BYINDEX parenLeftHandSideExpression expressionSt ) {
>>>>       $expression = new NIndexRefExpression (0, 0,
>>>> $parenLeftHandSideExpression.expression, $expressionSt.statement);
>>>>  }
>>>>    | ^( BYFIELD parenLeftHandSideExpression Identifier ) {
>>>>       $expression = new NFieldRefExpression (0, 0,
>>>> $parenLeftHandSideExpression.expression, $Identifier.text);
>>>>     }
>>>>    ;
>>>>
>>>> and the problem is that $memberExpression.text returns empty string,
>>>> caused
>>>> by the fact that $memberExpression.start has the start/stop indexes as
>>>> -1.
>>>>
>>>> I have a second rule for something else, which looks very similar, and
>>>> that
>>>> one (as well as all others) work perfectly fine, the $rule.text
>>>> containing
>>>> the text corresponding to what the rule matched.
>>>>
>>>> Any ideas why this may be happening?
>>>>
>>>> -Jan
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>>
>>> --
>>> /Andrew
>>>
>>
>>
>
>
> --
> /Andrew
>

From netjan42 at gmail.com  Thu Jun 24 11:24:40 2010
From: netjan42 at gmail.com (Jan F)
Date: Thu, 24 Jun 2010 20:24:40 +0200
Subject: [antlr-interest] Text attribute for tree parser rule not working
In-Reply-To: <4C234B0C.5030508@progress.com>
References: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>
	<4C234B0C.5030508@progress.com>
Message-ID: <AANLkTinnBv2E2qNJBltYX148sUziswVWeE0DGp8Vu7W7@mail.gmail.com>

On Thu, Jun 24, 2010 at 2:09 PM, Richard Thrippleton <
richard.thrippleton at progress.com> wrote:

> Jan F wrote:
>
>> Hello fellow ANTLRs, I have a problem with obtaining text and positions
>> for
>> one of my rules ion a tree walker, and since I ran out of ideas on what
>> might be wrong I am here to ask :-)
>>
>> My rule looks like this:
>>
>> memberExpression returns [ Expression expression = null ]
>> @after { post ($expression, $memberExpression.start,
>> $memberExpression.text); }
>>    : ^( BYINDEX parenLeftHandSideExpression expressionSt ) {
>>       $expression = new NIndexRefExpression (0, 0,
>> $parenLeftHandSideExpression.expression, $expressionSt.statement);
>>  }
>>    | ^( BYFIELD parenLeftHandSideExpression Identifier ) {
>>       $expression = new NFieldRefExpression (0, 0,
>> $parenLeftHandSideExpression.expression, $Identifier.text);
>>     }
>>    ;
>>
>> and the problem is that $memberExpression.text returns empty string,
>> caused
>> by the fact that $memberExpression.start has the start/stop indexes as -1.
>>
> By my understanding the .text attribute on a tree-walker rule will only
> return you the text from the top node of the tree. Is your parser
> constructing the BYINDEX / BYFIELD tokens with any useful text in them? By
> default, imaginary nodes get constructed with empty text.
>
> Richard
>

I believe that the $rule.text does actually give the entire text matched by
the rule. The generate parser has this code:

             post (retval.expression, ((CommonTree)retval.start),
input.getTokenStream().toString(
              input.getTreeAdaptor().getTokenStartIndex(retval.start),
              input.getTreeAdaptor().getTokenStopIndex(retval.start)));

which should give the text between the first and last token of the rule.

The Definitive ANTLR reference book says:


"The text derived from the first node matched by this rule. Each tree node
knows the range of input tokens from which it was created. Parsers automati-
cally set this range to the first and last token matched by the rule that
created the tree. This attribute includes the text for all tokens including
those on hidden channels, which is what you want because usually that has
all the whitespace and comments. When referring to the current rule, this
attribute is available in any action including exception actions. Note that
text is not well defined for rules like this:
slist : stat+ ;
because stat is not a single node or rooted with a single node. $slist.text
gets only the first stat tree."

However, this seems to have problems with imaginary tokens...

From pg at freeboundaries.com  Thu Jun 24 11:27:28 2010
From: pg at freeboundaries.com (Pavel Grinfeld)
Date: Thu, 24 Jun 2010 14:27:28 -0400
Subject: [antlr-interest] Reposting an email about a baby latex parser
Message-ID: <4C23A390.1060301@freeboundaries.com>

Hi, I hope it's OK to resend an email that was overlooked previously...

My problem is separating text from commands in LaTeX. I'm doing pretty 
well recognizing LaTeX commands, but now I'm at the stage where I want 
to capture the "text". I'm having trouble defining "everything else".

Basically, I currently define LaTeX as

commands (as I define them), possibly separated by WS, and everything 
that's not a command is "text". I keep running into a problem that when 
I define "text" generously, it starts grabbing tokens that belong to 
commands. Any help would be greatly appreciated!

Thanks in advance,

Pavel

  I'm including what I have so far, and the document I'm hoping to parse.

grammar PGTeX;

doc : (command WS?)+ EOF;

command : escWord  cWord+ ( sWord+ cWord*)?;

sWord    : '[' word ']';
cWord    : '{' word '}';
escWord : '\\' word;

word : WORD;

WORD:    ('-'|'a'..'z'|'A'..'Z'|'0'..'9'|'\*')+;

WS  :   ( ' ' | '\t'| '\r' | '\n' )+;

COMMENT
     :    '%' (~('\n'|'\r'))*  {$channel = HIDDEN;};


And here's the document:

\documentclass{book}%
\usepackage{amsfonts}
\usepackage{amsmath}%
\newtheorem{summary}[theorem]{Summary}
\begin{document}


\chapter*{Intro}

Book starts here $x^{2}+y^{2}=1$. Here's an intersting faction:
\begin{equation}
\int_{0}^{1}\sin xdx=4
\end{equation}

\end{document}





From qiaocai.hust at gmail.com  Thu Jun 24 12:39:51 2010
From: qiaocai.hust at gmail.com (Qiao Cai)
Date: Thu, 24 Jun 2010 15:39:51 -0400
Subject: [antlr-interest] ANTLR to parse C in Java Environment
Message-ID: <AANLkTikzMyW4imUj4vW0wIiKTPy1C-SwH5wTLLec5ii0@mail.gmail.com>

Hi,

I am a new learner of ANTLR, currently I am trying to find out some Antlr
grammar example to parse C code stream, but in Java testing environment. How
can I get that grammar file? Thanks!

Joe

From andrew.bradnan at gmail.com  Thu Jun 24 14:40:10 2010
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Thu, 24 Jun 2010 14:40:10 -0700
Subject: [antlr-interest] Reposting an email about a baby latex parser
In-Reply-To: <4C23A390.1060301@freeboundaries.com>
References: <4C23A390.1060301@freeboundaries.com>
Message-ID: <AANLkTikO-_TXVD7nRFOqTIEAShhfyK8fzqnRn30t7m-Z@mail.gmail.com>

What happens in the example you give? and what do you want it to do.


On Thu, Jun 24, 2010 at 11:27 AM, Pavel Grinfeld <pg at freeboundaries.com>wrote:

> Hi, I hope it's OK to resend an email that was overlooked previously...
>
> My problem is separating text from commands in LaTeX. I'm doing pretty
> well recognizing LaTeX commands, but now I'm at the stage where I want
> to capture the "text". I'm having trouble defining "everything else".
>
> Basically, I currently define LaTeX as
>
> commands (as I define them), possibly separated by WS, and everything
> that's not a command is "text". I keep running into a problem that when
> I define "text" generously, it starts grabbing tokens that belong to
> commands. Any help would be greatly appreciated!
>
> Thanks in advance,
>
> Pavel
>
>  I'm including what I have so far, and the document I'm hoping to parse.
>
> grammar PGTeX;
>
> doc : (command WS?)+ EOF;
>
> command : escWord  cWord+ ( sWord+ cWord*)?;
>
> sWord    : '[' word ']';
> cWord    : '{' word '}';
> escWord : '\\' word;
>
> word : WORD;
>
> WORD:    ('-'|'a'..'z'|'A'..'Z'|'0'..'9'|'\*')+;
>
> WS  :   ( ' ' | '\t'| '\r' | '\n' )+;
>
> COMMENT
>     :    '%' (~('\n'|'\r'))*  {$channel = HIDDEN;};
>
>
> And here's the document:
>
> \documentclass{book}%
> \usepackage{amsfonts}
> \usepackage{amsmath}%
> \newtheorem{summary}[theorem]{Summary}
> \begin{document}
>
>
> \chapter*{Intro}
>
> Book starts here $x^{2}+y^{2}=1$. Here's an intersting faction:
> \begin{equation}
> \int_{0}^{1}\sin xdx=4
> \end{equation}
>
> \end{document}
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
/Andrew

From lefevrol at yahoo.com  Thu Jun 24 18:00:27 2010
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 25 Jun 2010 03:00:27 +0200
Subject: [antlr-interest] [SPAM] non-LL(*) error with nested arrays
Message-ID: <i00v5n$fgl$1@dough.gmane.org>

Greetings ANTLR experts,

I have the attached toy grammar for integer arrays of arbitrary
depth but the stat rule has non-LL(*) decision due to recursive
rule invocation. It is recommended to left-factor or to use a
syntactic predicate; in principle I know what both are (I just
reread the applicable sections in the book) but it's been a while
since I last used ANTLR and in this case, with the added twist of
recursion, I still don't get it. Can someone offer a hint?

Thanks,

-- O.L.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ArrayTest.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100625/0ead34cf/attachment.pl 

From jbb at acm.org  Thu Jun 24 18:44:53 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 24 Jun 2010 21:44:53 -0400
Subject: [antlr-interest] [SPAM] [SPAM] non-LL(*) error with nested
 arrays
In-Reply-To: <i00v5n$fgl$1@dough.gmane.org>
References: <i00v5n$fgl$1@dough.gmane.org>
Message-ID: <1277430293.12331.6.camel@gecko.home.org>

Greetings!

On Fri, 2010-06-25 at 03:00 +0200, Olivier Lefevre wrote:
> Greetings ANTLR experts,
> 
> I have the attached toy grammar for integer arrays of arbitrary
> depth but the stat rule has non-LL(*) decision due to recursive
> rule invocation. It is recommended to left-factor or to use a
> syntactic predicate; in principle I know what both are (I just
> reread the applicable sections in the book) but it's been a while
> since I last used ANTLR and in this case, with the added twist of
> recursion, I still don't get it. Can someone offer a hint?

according to your rules, a stat may be either an array or an expr and an
expr may be either an INT or an array. e.g.:

stat : array | expr ;
expr : INT | array ;

remove the array from the stat rule because the expr rule gets us that
syntax already.

hope this helps...
   -jbb



From lefevrol at yahoo.com  Thu Jun 24 21:15:25 2010
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 25 Jun 2010 06:15:25 +0200
Subject: [antlr-interest] [SPAM] Re: [SPAM] [SPAM] non-LL(*) error with
	nested arrays
In-Reply-To: <1277430293.12331.6.camel@gecko.home.org>
References: <i00v5n$fgl$1@dough.gmane.org>
	<1277430293.12331.6.camel@gecko.home.org>
Message-ID: <i01aj7$9lh$1@dough.gmane.org>

> remove the array from the stat rule because the expr rule gets us that
> syntax already.

Duh! You're right. No wonder I couldn't refactor or predicate it: I needed
to step back instead.

-- O.L.



From netjan42 at gmail.com  Fri Jun 25 03:14:24 2010
From: netjan42 at gmail.com (Jan F)
Date: Fri, 25 Jun 2010 12:14:24 +0200
Subject: [antlr-interest] Text attribute for tree parser rule not working
In-Reply-To: <AANLkTilkxoLygtxnbzNHbhT1_vc7pK1hUJUlIBQoX2Z9@mail.gmail.com>
References: <AANLkTimhMw0MNxW_lEFTOkYcXDtgdPZxxO4khu6IipSL@mail.gmail.com>
	<AANLkTikhqsI-MiOVSTP2nIQ2mvPH0mHf_zFqMSIsgLAD@mail.gmail.com>
	<AANLkTimdL1aaYA6Qq_PaLm2jQXPonQi-87Yle6VnbE4L@mail.gmail.com>
	<AANLkTikbnXAzsdJg1FRfFMiv98FbV19PqvbDLHNNQcWv@mail.gmail.com>
	<AANLkTilkxoLygtxnbzNHbhT1_vc7pK1hUJUlIBQoX2Z9@mail.gmail.com>
Message-ID: <AANLkTinPHHY6sID2khXaSb5DnNWFnHPfg0COwOYIjhU0@mail.gmail.com>

I am a bit smarter, so posting an update.

The problem seems to be in the basic AST creation for rules that recurse,
such as mine:

leftHandSideExpression
    :  DOT Identifier        -> ^( BYFIELD $leftHandSideExpression
Identifier )
    ;

In  the generated parser, the corresponding method for the rule calls
"adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);" at its
end, which updates the token start/stop indexes for the rule's result. Works
perfectly fine, except for the case when the recursion occurs (such as
matching "item.field.field2") - in this case the method is actually not
called recursively, but loops inside, and the setTokenBoundaries is only
called once for the outer CommonTree node - the internal nodes representing
the BYFIELD token keep their -1 values for startIndex/stopIndex.

So now for the $1000 question - how should I fix this? :-) Any ideas?

BTW. If anybody is debugging bugs in the AST creation, I can highly
recommend taking the time and implementing a debug tool that visualizes the
token list and AST tree. Suddenly so many issues (and that typically there
would be multiple ones at the same time) become clear.

I have created Eclipse view that is synced with the source editor and
displays list of tokens and the two AST trees I have (CommonTree-based and
DLTK ASTNode-based one) - when I click in the view, the corresponding code
in the source is selected. Great tool to fix problems with positions, among
others.

I could make it available (sans the code that hooks it up to the parser, as
this is specific for everyone) if there is an interest.

-Jan


On Thu, Jun 24, 2010 at 7:33 PM, Jan F <netjan42 at gmail.com> wrote:

> I spent most of today debugging this and putting together a view for
> Eclipse to display a tree of the two ASTs that I deal with (the ANTLR one
> and then a second one that I create using tree walker that is fed into
> Eclipse DLTK platform).
>
> So far it is clear, that the problem is that some nodes in the AST have a
> pseudo token which is not in the original token stream and has -1 as the
> token index (and no positioning info). Those pseudo tokens are created for
> some imaginary tokens, and only sometime.
>
> Per Andrew's suggestion I traced what is happening inside the addChild, and
> actually before it. The corresponding code in the generated parser is:
>
>     root_1 = (Object)adaptor.becomeRoot((Object)adaptor.create(BYFIELD,
> "BYFIELD"), root_1);
>     adaptor.addChild(root_1, stream_retval.nextTree());
>     adaptor.addChild(root_1, stream_Identifier.nextNode());
>     adaptor.addChild(root_0, root_1);
>
> and the adaptor.create (BYFIELD, ...) creates the new pseudo token, that is
> not in the token stream.
>
> From looking at the CommonTreeAdaptor.createToken method JavaDoc, it
> explains that for imaginary tokens something extra needs to be done
>
> I am still looking into what the best approach is here, as I have not quite
> figured out the whole picture yet .
>
> -Jan
>
>
> On Wed, Jun 23, 2010 at 7:45 PM, Andrew Bradnan <andrew.bradnan at gmail.com>wrote:
>
>> Yeah, CC the list.  I keep thinking it's automatic.
>>
>> I just haven't crawled through the generated code enough to fully
>> understand when an AST node has a token and when it doesn't.  You should
>> probably just trace through the AddChild code.  It tries to keep the
>> children in a list when it can, but changes to real children of a nil node
>> at some magical point.
>>
>> Re object.field.anotherfield   For my FIELD rule I just updated an Id
>> field on my custom AST node.  You could always update the start/end index
>> yourself, or add some custom ones if those are private.
>> I haven't seen a thing documentation wise, so I look forward to seeing
>> what you find out.
>> On Wed, Jun 23, 2010 at 9:49 AM, Jan F <netjan42 at gmail.com> wrote:
>>
>>> Hmm, that shows that I have not really gotten a good understanding of how
>>> the rule/subrule attributes work.
>>>
>>> I have been fighting pretty hard with obtaining the position boundaries
>>> for AST elements, and what I ended up with, which works in most cases, is
>>> the trick with updating the positions in the @after section of each rule,
>>> based on the $rule.start position and $rule.text length.
>>>
>>> In my code below, I actually do want the boundaries of the
>>> memberExpression (which is like "object.field" reference) rule to be around
>>> the whole text (that is the parenLeftHandSideExpression (matches the
>>> "object" part) and Identifier (matches the "field" part) - so passing it
>>> from subrules as a return value does not really work - the BYFIELD is just
>>> an imaginary token.
>>>
>>> Actually a bit more context - the positions are correct if I parse text
>>> with "object.field", but stop working if I have a chain like
>>> "obejct.field.anotherfield" - so perhaps the problem could be somewhere
>>> else?
>>>
>>> BTW. I just noticed that you sent this only to me directly, would you
>>> mind if I cc the list on further replies?
>>>
>>> -Jan
>>>
>>>
>>> On Wed, Jun 23, 2010 at 6:21 PM, Andrew Bradnan <
>>> andrew.bradnan at gmail.com> wrote:
>>>
>>>> Only the AST's that actually matched one token will have the token
>>>> information filled out.  Subrules with multiple children are blank.  I
>>>> haven't actually tested those conditions extensively but just go with the
>>>> fixes below when the token information is missing.
>>>>
>>>> To get around this I've either passed the values back from the subrules
>>>> in the grammar using returns or in the subrule I have updated a field on the
>>>> AST for the root (like on AST node for BYFIELD).  To update the AST node,
>>>> you need to have a custom AST class.  See setting options { ASTLabelType =
>>>> MyASTNode; }
>>>>
>>>> Hopefully that will get you going again.
>>>> Andrew
>>>>
>>>>   On Wed, Jun 23, 2010 at 7:53 AM, Jan F <netjan42 at gmail.com> wrote:
>>>>
>>>>>  Hello fellow ANTLRs, I have a problem with obtaining text and
>>>>> positions for
>>>>> one of my rules ion a tree walker, and since I ran out of ideas on what
>>>>> might be wrong I am here to ask :-)
>>>>>
>>>>> My rule looks like this:
>>>>>
>>>>> memberExpression returns [ Expression expression = null ]
>>>>> @after { post ($expression, $memberExpression.start,
>>>>> $memberExpression.text); }
>>>>>    : ^( BYINDEX parenLeftHandSideExpression expressionSt ) {
>>>>>       $expression = new NIndexRefExpression (0, 0,
>>>>> $parenLeftHandSideExpression.expression, $expressionSt.statement);
>>>>>  }
>>>>>    | ^( BYFIELD parenLeftHandSideExpression Identifier ) {
>>>>>       $expression = new NFieldRefExpression (0, 0,
>>>>> $parenLeftHandSideExpression.expression, $Identifier.text);
>>>>>     }
>>>>>    ;
>>>>>
>>>>> and the problem is that $memberExpression.text returns empty string,
>>>>> caused
>>>>> by the fact that $memberExpression.start has the start/stop indexes as
>>>>> -1.
>>>>>
>>>>> I have a second rule for something else, which looks very similar, and
>>>>> that
>>>>> one (as well as all others) work perfectly fine, the $rule.text
>>>>> containing
>>>>> the text corresponding to what the rule matched.
>>>>>
>>>>> Any ideas why this may be happening?
>>>>>
>>>>> -Jan
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> /Andrew
>>>>
>>>
>>>
>>
>>
>> --
>> /Andrew
>>
>
>

From markus.scherer at inet-logistics.com  Fri Jun 25 06:02:48 2010
From: markus.scherer at inet-logistics.com (Scherer Markus)
Date: Fri, 25 Jun 2010 15:02:48 +0200
Subject: [antlr-interest] best way to deal with nested statements
Message-ID: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>

Hi there antlr folk!

As I have mentioned in a former thread I am currently working on a grammar that splits SQL*PLUS files in normal SQL-statements and PL/SQL-blocks.

The PL/SQL-blocks are a bit tricky, because the can contain nested blocks like

BEGIN
            ?
            BEGIN
                        ?
            END;
END;

I thought about a mechanism, that increases a counter when a BEGIN is found and decreases it when a END; is found:

@members {
            int _iNestLevel = 0;
}

pl_sql_block
            :
            (           ((BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");})| DECLARE)
            |           CREATE         (OR REPLACE
                                   |PROCEDURE
                                   |FUNCTION
                                   |PACKAGE)
            )           pl_sql_block_content
            ;


pl_sql_block_content
            :           {_iNestLevel < 16}? (options {greedy=false;} : .)*
                        (           BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");}
                        |           END SEMI{System.out.println("end (nestlevel: " + (--_iNestLevel) + ")");})
                        (           {_iNestLevel > 0}? pl_sql_block_content
                        )
            ;

I tried to eliminate recursion-issues with the predicates, but antlr nevertheless considers the grammar wrong and throws following error when I try to compile it:

[14:46:43] error(206): PLSQLSplitter.g:62:34: Alternative 2: after matching input such as SEMI SL_COMMENT ML_COMMENT BEGIN BEGIN SEMI END SEMI END SEMI END SEMI BEGIN decision cannot predict what comes next due to recursion overflow to pl_sql_block_content from pl_sql_block_content


The second solution that came to my mind was a proper recursive grammar (like e.g. the expression grammar from the book), but I think that?s a little overkill for a simple splitter.

I attached the whole grammar in case the error isn?t obvious from the two rules above.

Thanks in advance
Markus


-------------- next part --------------
A non-text attachment was scrubbed...
Name: PLSQLSplitter.g
Type: application/octet-stream
Size: 3200 bytes
Desc: PLSQLSplitter.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100625/0101ecea/attachment.obj 

From Gordon.Tyler at quest.com  Fri Jun 25 06:50:49 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Fri, 25 Jun 2010 06:50:49 -0700
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D02872EC768@alvxmbw04.prod.quest.corp>

Why not something like this:

statements: (stuff|codeBlock);
codeBlock: BEGIN statements END;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scherer Markus
Sent: June 25, 2010 9:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] best way to deal with nested statements

Hi there antlr folk!

As I have mentioned in a former thread I am currently working on a grammar that splits SQL*PLUS files in normal SQL-statements and PL/SQL-blocks.

The PL/SQL-blocks are a bit tricky, because the can contain nested blocks like

BEGIN
            ?
            BEGIN
                        ?
            END;
END;

I thought about a mechanism, that increases a counter when a BEGIN is found and decreases it when a END; is found:

@members {
            int _iNestLevel = 0;
}

pl_sql_block
            :
            (           ((BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");})| DECLARE)
            |           CREATE         (OR REPLACE
                                   |PROCEDURE
                                   |FUNCTION
                                   |PACKAGE)
            )           pl_sql_block_content
            ;


pl_sql_block_content
            :           {_iNestLevel < 16}? (options {greedy=false;} : .)*
                        (           BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");}
                        |           END SEMI{System.out.println("end (nestlevel: " + (--_iNestLevel) + ")");})
                        (           {_iNestLevel > 0}? pl_sql_block_content
                        )
            ;

I tried to eliminate recursion-issues with the predicates, but antlr nevertheless considers the grammar wrong and throws following error when I try to compile it:

[14:46:43] error(206): PLSQLSplitter.g:62:34: Alternative 2: after matching input such as SEMI SL_COMMENT ML_COMMENT BEGIN BEGIN SEMI END SEMI END SEMI END SEMI BEGIN decision cannot predict what comes next due to recursion overflow to pl_sql_block_content from pl_sql_block_content


The second solution that came to my mind was a proper recursive grammar (like e.g. the expression grammar from the book), but I think that?s a little overkill for a simple splitter.

I attached the whole grammar in case the error isn?t obvious from the two rules above.

Thanks in advance
Markus



From Gordon.Tyler at quest.com  Fri Jun 25 06:52:42 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Fri, 25 Jun 2010 06:52:42 -0700
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <1FE9A296676737419A8912A6FD22AE1D02872EC768@alvxmbw04.prod.quest.corp>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC768@alvxmbw04.prod.quest.corp>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>

Sorry, this should be better:

statement: (stuff|codeBlock) SEMI ;
codeBlock: BEGIN statement* END ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gordon Tyler
Sent: June 25, 2010 9:51 AM
To: Scherer Markus; antlr-interest at antlr.org
Subject: Re: [antlr-interest] best way to deal with nested statements

Why not something like this:

statements: (stuff|codeBlock);
codeBlock: BEGIN statements END;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scherer Markus
Sent: June 25, 2010 9:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] best way to deal with nested statements

Hi there antlr folk!

As I have mentioned in a former thread I am currently working on a grammar that splits SQL*PLUS files in normal SQL-statements and PL/SQL-blocks.

The PL/SQL-blocks are a bit tricky, because the can contain nested blocks like

BEGIN
            ?
            BEGIN
                        ?
            END;
END;

I thought about a mechanism, that increases a counter when a BEGIN is found and decreases it when a END; is found:

@members {
            int _iNestLevel = 0;
}

pl_sql_block
            :
            (           ((BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");})| DECLARE)
            |           CREATE         (OR REPLACE
                                   |PROCEDURE
                                   |FUNCTION
                                   |PACKAGE)
            )           pl_sql_block_content
            ;


pl_sql_block_content
            :           {_iNestLevel < 16}? (options {greedy=false;} : .)*
                        (           BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");}
                        |           END SEMI{System.out.println("end (nestlevel: " + (--_iNestLevel) + ")");})
                        (           {_iNestLevel > 0}? pl_sql_block_content
                        )
            ;

I tried to eliminate recursion-issues with the predicates, but antlr nevertheless considers the grammar wrong and throws following error when I try to compile it:

[14:46:43] error(206): PLSQLSplitter.g:62:34: Alternative 2: after matching input such as SEMI SL_COMMENT ML_COMMENT BEGIN BEGIN SEMI END SEMI END SEMI END SEMI BEGIN decision cannot predict what comes next due to recursion overflow to pl_sql_block_content from pl_sql_block_content


The second solution that came to my mind was a proper recursive grammar (like e.g. the expression grammar from the book), but I think that?s a little overkill for a simple splitter.

I attached the whole grammar in case the error isn?t obvious from the two rules above.

Thanks in advance
Markus



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From markus.scherer at inet-logistics.com  Fri Jun 25 07:36:43 2010
From: markus.scherer at inet-logistics.com (Scherer Markus)
Date: Fri, 25 Jun 2010 16:36:43 +0200
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC768@alvxmbw04.prod.quest.corp>
	<1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
Message-ID: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>

Thanks for your quick response Gordon. 

Unfortunately, this solution does not seem to work. If I define "stuff" as generic as I want it to be (like (options {greedy=false;} : .)*)) it isn't able to compile either (The following alternatives can never be matched: 2). I guess because the END of a codeBlock would get matched by "stuff" in statement. If define stuff as

stuff	:	(options {greedy=false;} : ~(END))* ;

it does not match all tokens I am interested in :-/. 

-----Urspr?ngliche Nachricht-----
Von: Gordon Tyler [mailto:Gordon.Tyler at quest.com] 
Gesendet: Freitag, 25. Juni 2010 15:53
An: Gordon Tyler; Scherer Markus; antlr-interest at antlr.org
Betreff: RE: best way to deal with nested statements

Sorry, this should be better:

statement: (stuff|codeBlock) SEMI ;
codeBlock: BEGIN statement* END ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gordon Tyler
Sent: June 25, 2010 9:51 AM
To: Scherer Markus; antlr-interest at antlr.org
Subject: Re: [antlr-interest] best way to deal with nested statements

Why not something like this:

statements: (stuff|codeBlock);
codeBlock: BEGIN statements END;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scherer Markus
Sent: June 25, 2010 9:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] best way to deal with nested statements

Hi there antlr folk!

As I have mentioned in a former thread I am currently working on a grammar that splits SQL*PLUS files in normal SQL-statements and PL/SQL-blocks.

The PL/SQL-blocks are a bit tricky, because the can contain nested blocks like

BEGIN
            ?
            BEGIN
                        ?
            END;
END;

I thought about a mechanism, that increases a counter when a BEGIN is found and decreases it when a END; is found:

@members {
            int _iNestLevel = 0;
}

pl_sql_block
            :
            (           ((BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");})| DECLARE)
            |           CREATE         (OR REPLACE
                                   |PROCEDURE
                                   |FUNCTION
                                   |PACKAGE)
            )           pl_sql_block_content
            ;


pl_sql_block_content
            :           {_iNestLevel < 16}? (options {greedy=false;} : .)*
                        (           BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");}
                        |           END SEMI{System.out.println("end (nestlevel: " + (--_iNestLevel) + ")");})
                        (           {_iNestLevel > 0}? pl_sql_block_content
                        )
            ;

I tried to eliminate recursion-issues with the predicates, but antlr nevertheless considers the grammar wrong and throws following error when I try to compile it:

[14:46:43] error(206): PLSQLSplitter.g:62:34: Alternative 2: after matching input such as SEMI SL_COMMENT ML_COMMENT BEGIN BEGIN SEMI END SEMI END SEMI END SEMI BEGIN decision cannot predict what comes next due to recursion overflow to pl_sql_block_content from pl_sql_block_content


The second solution that came to my mind was a proper recursive grammar (like e.g. the expression grammar from the book), but I think that?s a little overkill for a simple splitter.

I attached the whole grammar in case the error isn?t obvious from the two rules above.

Thanks in advance
Markus



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Gordon.Tyler at quest.com  Fri Jun 25 08:30:12 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Fri, 25 Jun 2010 08:30:12 -0700
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC768@alvxmbw04.prod.quest.corp>
	<1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
	<F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D028738E88C@alvxmbw04.prod.quest.corp>

Hmmm... Sorry, my experience with ANTLR is limited to grammars for known limited languages. I haven't had to do something like that with rules matching unknown contents.

-----Original Message-----
From: Scherer Markus [mailto:markus.scherer at inet-logistics.com] 
Sent: June 25, 2010 10:37 AM
To: Gordon Tyler; antlr-interest at antlr.org
Subject: Re: best way to deal with nested statements

Thanks for your quick response Gordon. 

Unfortunately, this solution does not seem to work. If I define "stuff" as generic as I want it to be (like (options {greedy=false;} : .)*)) it isn't able to compile either (The following alternatives can never be matched: 2). I guess because the END of a codeBlock would get matched by "stuff" in statement. If define stuff as

stuff	:	(options {greedy=false;} : ~(END))* ;

it does not match all tokens I am interested in :-/. 

-----Urspr?ngliche Nachricht-----
Von: Gordon Tyler [mailto:Gordon.Tyler at quest.com] 
Gesendet: Freitag, 25. Juni 2010 15:53
An: Gordon Tyler; Scherer Markus; antlr-interest at antlr.org
Betreff: RE: best way to deal with nested statements

Sorry, this should be better:

statement: (stuff|codeBlock) SEMI ;
codeBlock: BEGIN statement* END ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gordon Tyler
Sent: June 25, 2010 9:51 AM
To: Scherer Markus; antlr-interest at antlr.org
Subject: Re: [antlr-interest] best way to deal with nested statements

Why not something like this:

statements: (stuff|codeBlock);
codeBlock: BEGIN statements END;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scherer Markus
Sent: June 25, 2010 9:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] best way to deal with nested statements

Hi there antlr folk!

As I have mentioned in a former thread I am currently working on a grammar that splits SQL*PLUS files in normal SQL-statements and PL/SQL-blocks.

The PL/SQL-blocks are a bit tricky, because the can contain nested blocks like

BEGIN
            ?
            BEGIN
                        ?
            END;
END;

I thought about a mechanism, that increases a counter when a BEGIN is found and decreases it when a END; is found:

@members {
            int _iNestLevel = 0;
}

pl_sql_block
            :
            (           ((BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");})| DECLARE)
            |           CREATE         (OR REPLACE
                                   |PROCEDURE
                                   |FUNCTION
                                   |PACKAGE)
            )           pl_sql_block_content
            ;


pl_sql_block_content
            :           {_iNestLevel < 16}? (options {greedy=false;} : .)*
                        (           BEGIN {System.out.println("begin (nestlevel: " + (++_iNestLevel) + ")");}
                        |           END SEMI{System.out.println("end (nestlevel: " + (--_iNestLevel) + ")");})
                        (           {_iNestLevel > 0}? pl_sql_block_content
                        )
            ;

I tried to eliminate recursion-issues with the predicates, but antlr nevertheless considers the grammar wrong and throws following error when I try to compile it:

[14:46:43] error(206): PLSQLSplitter.g:62:34: Alternative 2: after matching input such as SEMI SL_COMMENT ML_COMMENT BEGIN BEGIN SEMI END SEMI END SEMI END SEMI BEGIN decision cannot predict what comes next due to recursion overflow to pl_sql_block_content from pl_sql_block_content


The second solution that came to my mind was a proper recursive grammar (like e.g. the expression grammar from the book), but I think that?s a little overkill for a simple splitter.

I attached the whole grammar in case the error isn?t obvious from the two rules above.

Thanks in advance
Markus



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From micha-1 at fantasymail.de  Mon Jun 28 00:47:55 2010
From: micha-1 at fantasymail.de (michael)
Date: Mon, 28 Jun 2010 09:47:55 +0200
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
	<F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
Message-ID: <201006280947.55949.micha-1@fantasymail.de>

On Friday 25 June 2010 16:36:43 Scherer Markus wrote:
> Thanks for your quick response Gordon.
> 
> Unfortunately, this solution does not seem to work. If I define "stuff" as
>  generic as I want it to be (like (options {greedy=false;} : .)*)) it isn't
>  able to compile either (The following alternatives can never be matched:
>  2). I guess because the END of a codeBlock would get matched by "stuff" in
>  statement. If define stuff as
> 
> stuff	:	(options {greedy=false;} : ~(END))* ;
> 
> it does not match all tokens I am interested in :-/.

this is like switching the lexer language during lexing. There are discussions 
here that antlr is able so simulate packrat parsing (like rats!), which can 
handle that (you need to enable backtracking for unlimited lookahead and 
memoizing), but I'm not sure about it.
You could also use another lexer like jflex with antlr which has lexer states 
to handle that.

But if your pl_sql_block_content (or stuff) includes a statement with a string 
which includes your 'END' keyword, your splitter doesn't work anymore. So you 
may need to lex strings in pl_sql_block_content (or stuff).

cheers,
 Michael

From andrew.bradnan at gmail.com  Mon Jun 28 10:28:51 2010
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Mon, 28 Jun 2010 10:28:51 -0700
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <201006280947.55949.micha-1@fantasymail.de>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
	<F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
	<201006280947.55949.micha-1@fantasymail.de>
Message-ID: <AANLkTimxC6jMeAdljJhWMn8l27nxO1dCFUAvLMHP1FGz@mail.gmail.com>

Since you know all the legal constructs why don't you just fill out the
lexer section.  Then you can use
stuff: word+ ;
word: id | Number | StringLiteral | operator | etc ;
It's a tad more work, but it's easy.
On Mon, Jun 28, 2010 at 12:47 AM, michael <micha-1 at fantasymail.de> wrote:

> On Friday 25 June 2010 16:36:43 Scherer Markus wrote:
> > Thanks for your quick response Gordon.
> >
> > Unfortunately, this solution does not seem to work. If I define "stuff"
> as
> >  generic as I want it to be (like (options {greedy=false;} : .)*)) it
> isn't
> >  able to compile either (The following alternatives can never be matched:
> >  2). I guess because the END of a codeBlock would get matched by "stuff"
> in
> >  statement. If define stuff as
> >
> > stuff :       (options {greedy=false;} : ~(END))* ;
> >
> > it does not match all tokens I am interested in :-/.
>
> this is like switching the lexer language during lexing. There are
> discussions
> here that antlr is able so simulate packrat parsing (like rats!), which can
> handle that (you need to enable backtracking for unlimited lookahead and
> memoizing), but I'm not sure about it.
> You could also use another lexer like jflex with antlr which has lexer
> states
> to handle that.
>
> But if your pl_sql_block_content (or stuff) includes a statement with a
> string
> which includes your 'END' keyword, your splitter doesn't work anymore. So
> you
> may need to lex strings in pl_sql_block_content (or stuff).
>
> cheers,
>  Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
/Andrew

From markus.scherer at inet-logistics.com  Tue Jun 29 04:59:43 2010
From: markus.scherer at inet-logistics.com (Scherer Markus)
Date: Tue, 29 Jun 2010 13:59:43 +0200
Subject: [antlr-interest] best way to deal with nested statements
In-Reply-To: <AANLkTimxC6jMeAdljJhWMn8l27nxO1dCFUAvLMHP1FGz@mail.gmail.com>
References: <F20D5D7C0938BC4FB7A0E5372B58FB566BD09DA9@MXS04.welo.corp00.com>
	<1FE9A296676737419A8912A6FD22AE1D02872EC76F@alvxmbw04.prod.quest.corp>
	<F20D5D7C0938BC4FB7A0E5372B58FB566BD09DE9@MXS04.welo.corp00.com>
	<201006280947.55949.micha-1@fantasymail.de>
	<AANLkTimxC6jMeAdljJhWMn8l27nxO1dCFUAvLMHP1FGz@mail.gmail.com>
Message-ID: <F20D5D7C0938BC4FB7A0E5372B58FB566BD0A1E3@MXS04.welo.corp00.com>

Hi there everyone,

I finally solved my problem by using the lexer provided by ANTLR and a primitive parser I implemented by hand.

Again: Thank you very much for your answers, without them I'd still be stuck :-)

From alex_mcmains at yahoo.com  Tue Jun 29 15:18:55 2010
From: alex_mcmains at yahoo.com (Alex McMains)
Date: Tue, 29 Jun 2010 15:18:55 -0700 (PDT)
Subject: [antlr-interest] how do you make Antlr work with a recursively
	changing input stream
Message-ID: <184754.10907.qm@web55203.mail.re4.yahoo.com>

Hi all,
?
I'm new to Antlr.? I've bought?and read portions of the?Antlr book, and I've read dozens of postings and tutorials, but I still can't see how to do deal with a recursively changing input stream in Antlr.? Do I somehow use TokenRewriteStream, or am I missing something?
?
Here's the situation:
?
I start with an input stream.? As I move through the input I will either encounter?something?that can be parsed directly, or I will encounter something that tells me to go to a table and substitute an entire row of the table at the node where I currently am.? This can continue to happen recursively since each field from the substituted row can again call for a substitution.?
?
Here's an example:
?
Person table:
_Identifier_??? Name?? {Address}
Person1??????? Jon?????? Jon's Address
?
Address table:
_Identifier_???? HouseNumber? StreetName
Jon's Address?? 3477?????????????? Blue Lane
?
The {} around Address says to name the current node?"Address" and substitute the current value for whatever is at "Jon's Address" in the Address table.
?
Eventually this will become XML that would look like:
?
<Person>
??? <Name>Jon</Name>
??? <Address>
???????? <HouseNumber>3477</HouseNumber>
?????????<StreetName>Blue Lane</StreetName>
???? </Address>
</Person>
?
Any ideas would be appreciated.
?
Thanks.
?
?????? -- alex


      

From markwright at internode.on.net  Tue Jun 29 16:29:00 2010
From: markwright at internode.on.net (Mark Wright)
Date: Wed, 30 Jun 2010 09:29:00 +1000
Subject: [antlr-interest] how do you make Antlr work with a recursively
 changing input stream
In-Reply-To: <184754.10907.qm@web55203.mail.re4.yahoo.com>
References: <184754.10907.qm@web55203.mail.re4.yahoo.com>
Message-ID: <20100629232900.GA28856@internode.on.net>

On Tue, Jun 29, 2010 at 03:18:55PM -0700, Alex McMains wrote:
> Hi all,
> 
> I'm new to Antlr.  I've bought?and read portions of the?Antlr book,
> and I've read dozens of postings and tutorials, but I still can't
> see how to do deal with a recursively changing input stream in
> Antlr.  Do I somehow use TokenRewriteStream, or am I missing
> something?

Hi Alex,

Yes, you are missing something, the Antlr book does not say much about
symbol tables or type systems.

For simple type systems, it is probably easier to just use the
approach which is called a "symbol table" in old school books
on compiler construction.  A really good description of this
approach is in chapter 7 of the book Language Implementation Patterns
by Terence Parr.  An introduction to this approach is at:

http://www.antlr.org/wiki/display/CS652/Symbol+tables

You obviously need to implement forward references scopes.

Mainly for the mailing list archive, I would just like to say that I
find this symbol table approach seems difficult to use for
complex type systems.  For complex type systems the approach I
recommend is described in the book "Types and Programming Languages"
by Benjamin Pierce, the online book "Software Foundations", see the
course:

http://www.seas.upenn.edu/~cis500/current/index.html

and the book "Certified Programming with Dependent Types" by
Adam Chlipala:

http://adam.chlipala.net/cpdt/

Regards, Mark
 
> Here's the situation:
> 
> I start with an input stream.  As I move through the input I will
> either encounter something that can be parsed directly, or I will
> encounter something that tells me to go to a table and substitute an
> entire row of the table at the node where I currently am.  This can
> continue to happen recursively since each field from the substituted
> row can again call for a substitution. 
>  
> Here's an example:
>  
> Person table:
>  Identifier     Name   {Address}
> Person1        Jon       Jon's Address
>  
> Address table:
>  Identifier      HouseNumber  StreetName
> Jon's Address   3477               Blue Lane
>  
> The {} around Address says to name the current node "Address" and
> substitute the current value for whatever is at "Jon's Address" in
> the Address table.
>  
> Eventually this will become XML that would look like:
>  
> <Person>
>     <Name>Jon</Name>
>     <Address>
>          <HouseNumber>3477</HouseNumber>
>          <StreetName>Blue Lane</StreetName>
>      </Address>
> </Person>
>  
> Any ideas would be appreciated.
>  
> Thanks.
>  
>        -- alex
> 
> 
>       
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From arne.schroeder at gmail.com  Wed Jun 30 03:22:50 2010
From: arne.schroeder at gmail.com (=?ISO-8859-1?Q?Arne_Schr=F6der?=)
Date: Wed, 30 Jun 2010 12:22:50 +0200
Subject: [antlr-interest] tokenVocab-limit of 127?
Message-ID: <AANLkTil3s6a5OwHdPLItECC1LzeG5uctVqb0Iz_MyY63@mail.gmail.com>

Hi everyone,

I am working on a parser to collect information about my source-code.

Recently I found it quite handy to split my parsing-efforts into a "normal"
parser and a tree-parser. To simplify things I told the parser to leave
tokens in the AST, indicating a certain construction, so the tree-parser
does not need to double-check that.

To let the tree-parser know about the tokens, I used the option
"tokenVocab=<NameOfParser>". So far this has worked out very nicely but now
I seem to have reached a limit at the token-number 127. That is, tokenVocab
does not copy any token with a number exceeding 128 (128 is interestingly
mapped to 127), so these tokens are unknown in my tree-parser.

Looks to me as if this is a bug in ANTLR ;-P. I am using "Version 3.2 Sep
23, 2009 12:02:23" to generate my parsers.
Has anyone come accross this phenomenon before and/or does know a
work-around (besides the obvious of reducing the number of tokens ;-)).


Many thanks for any help in advance,

Arne

From David.Maier at ingres.com  Wed Jun 30 04:20:11 2010
From: David.Maier at ingres.com (David Maier)
Date: Wed, 30 Jun 2010 07:20:11 -0400
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do
	k=1 for decision
Message-ID: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv>

Hi,


I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:

" internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"

So I tried the following workarounds:

* Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors
* Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems

So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.

Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:

rule1: rule2 | rule3;
rule2: TOKEN1;
rule3: rule4 | rule5;  
rule4: TOKEN1;
rule5: TOKEN2;

would result in the following tree for TOKEN1:

TOKEN1 -> rule2 -> rule1;
       -> rul4 -> rule3 -> rule1;

I am wondering if there is already such a tool available to find ambiguous rules, is there?

BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL

Advise would be highly appreciated! Thanks in advance for your help!


Regards, David


--
David Maier
Senior Software Engineer

Ingres Germany GmbH
Weimarer Stra?e 1a
D-98693 Ilmenau

PHONE:  +49.3677.6785-59
FAX:    +49.3677.6785-23
MAIL:   david.maier at ingres.com

This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.


From markwright at internode.on.net  Wed Jun 30 04:48:39 2010
From: markwright at internode.on.net (Mark Wright)
Date: Wed, 30 Jun 2010 21:48:39 +1000
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even
 do k=1 for decision
In-Reply-To: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv>
References: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv>
Message-ID: <20100630114839.GB28856@internode.on.net>

On Wed, Jun 30, 2010 at 07:20:11AM -0400, David Maier wrote:
> Hi,
> 
> 
> I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:
> 
> " internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"
> 
> So I tried the following workarounds:
> 
> * Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors

Hi David,

Often with larger grammars it is necessary to increse the timeout and
to increase the Java VM heap size.

I am not sure about the other problems.

Just to state the obvious though: since Yacc will happilly accept
left recursive grammars, while as ANTLR will not, it is necessary
to remove any left recursion from the grammar.  A good description
of how to do that is on p.129 of the book "Modern Compiler Design"
by Grune, et. al.  There is also a description in the dragon book,
I like the description in Modern Compiler Design better for this
task though.  Presumably there are other descriptions for
left recursion removal.

Regards, Mark

> * Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems
> 
> So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.
> 
> Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:
> 
> rule1: rule2 | rule3;
> rule2: TOKEN1;
> rule3: rule4 | rule5;  
> rule4: TOKEN1;
> rule5: TOKEN2;
> 
> would result in the following tree for TOKEN1:
> 
> TOKEN1 -> rule2 -> rule1;
>        -> rul4 -> rule3 -> rule1;
> 
> I am wondering if there is already such a tool available to find ambiguous rules, is there?
> 
> BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL
> 
> Advise would be highly appreciated! Thanks in advance for your help!
> 
> 
> Regards, David
> 
> 
> --
> David Maier
> Senior Software Engineer
> 
> Ingres Germany GmbH
> Weimarer Stra?e 1a
> D-98693 Ilmenau
> 
> PHONE:  +49.3677.6785-59
> FAX:    +49.3677.6785-23
> MAIL:   david.maier at ingres.com
> 
> This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From David.Maier at ingres.com  Wed Jun 30 05:01:10 2010
From: David.Maier at ingres.com (David Maier)
Date: Wed, 30 Jun 2010 08:01:10 -0400
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even
	do k=1 for decision
References: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv>
	<20100630114839.GB28856@internode.on.net>
Message-ID: <21C3E073B82EFE4F8A76536D9066FE560427BBCD@USINVMAILB01.ingres.prv>

Hi Mark,

thanks for your quick reply. I think that I already removed the left recursive rules by replacing them with iterations (Kleene operator '*') if possible or by using ANTLRWork's refactoring. However, it may be that there are still some Multi Line Recursive rules left. Further details are available here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL#MySQL_grammar_from_YACC_to_ANTLR .

I also already increased the timeout to 2 minutes and assigned 1GB of RAM to the JVM in which the code generation happens. The result was an Out Of Memory message. So I am not sure but maybe there is as you pointed out still a Multi Line left recursion in my grammar which causes that the Look Ahead DFA creation comes never to an end. Could that be?

Regards, David

--
David Maier
Senior Software Engineer

Ingres Germany GmbH
Weimarer Stra?e 1a
D-98693 Ilmenau

PHONE:  +49.3677.6785-59
FAX:    +49.3677.6785-23
MAIL:   david.maier at ingres.com

This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.



-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
Gesendet: Mi 30.06.2010 13:48
An: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
 
On Wed, Jun 30, 2010 at 07:20:11AM -0400, David Maier wrote:
> Hi,
> 
> 
> I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:
> 
> " internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"
> 
> So I tried the following workarounds:
> 
> * Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors

Hi David,

Often with larger grammars it is necessary to increse the timeout and
to increase the Java VM heap size.

I am not sure about the other problems.

Just to state the obvious though: since Yacc will happilly accept
left recursive grammars, while as ANTLR will not, it is necessary
to remove any left recursion from the grammar.  A good description
of how to do that is on p.129 of the book "Modern Compiler Design"
by Grune, et. al.  There is also a description in the dragon book,
I like the description in Modern Compiler Design better for this
task though.  Presumably there are other descriptions for
left recursion removal.

Regards, Mark

> * Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems
> 
> So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.
> 
> Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:
> 
> rule1: rule2 | rule3;
> rule2: TOKEN1;
> rule3: rule4 | rule5;  
> rule4: TOKEN1;
> rule5: TOKEN2;
> 
> would result in the following tree for TOKEN1:
> 
> TOKEN1 -> rule2 -> rule1;
>        -> rul4 -> rule3 -> rule1;
> 
> I am wondering if there is already such a tool available to find ambiguous rules, is there?
> 
> BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL
> 
> Advise would be highly appreciated! Thanks in advance for your help!
> 
> 
> Regards, David
> 
> 
> --
> David Maier
> Senior Software Engineer
> 
> Ingres Germany GmbH
> Weimarer Stra?e 1a
> D-98693 Ilmenau
> 
> PHONE:  +49.3677.6785-59
> FAX:    +49.3677.6785-23
> MAIL:   david.maier at ingres.com
> 
> This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From markwright at internode.on.net  Wed Jun 30 05:41:37 2010
From: markwright at internode.on.net (Mark Wright)
Date: Wed, 30 Jun 2010 22:41:37 +1000
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even
 do k=1 for decision
In-Reply-To: <21C3E073B82EFE4F8A76536D9066FE560427BBCD@USINVMAILB01.ingres.prv>
References: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv>
	<20100630114839.GB28856@internode.on.net>
	<21C3E073B82EFE4F8A76536D9066FE560427BBCD@USINVMAILB01.ingres.prv>
Message-ID: <20100630124137.GC28856@internode.on.net>

On Wed, Jun 30, 2010 at 08:01:10AM -0400, David Maier wrote:
> Hi Mark,
> 
> thanks for your quick reply. I think that I already removed the left
> recursive rules by replacing them with iterations (Kleene operator
> '*') if possible or by using ANTLRWork's refactoring. However, it
> may be that there are still some Multi Line Recursive rules
> left. Further details are available here:
> http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL#MySQL_grammar_from_YACC_to_ANTLR
  .
> 
> I also already increased the timeout to 2 minutes and assigned 1GB
> of RAM to the JVM in which the code generation happens. The result
> was an Out Of Memory message. So I am not sure but maybe there is as
> you pointed out still a Multi Line left recursion in my grammar
> which causes that the Look Ahead DFA creation comes never to an
> end. Could that be?
> 
> Regards, David

Hi David,

Having a quick look at the grammar, it looks like you are/were
having problems with the expressions.  The recipe to convert those
is desribed on p. 266 of The Definitive ANTLR Reference by
Terence Parr.  Basically it says you have to explicitly encode
the expression priorities by creating rules for them, as you
see in any ANTLR grammar that handles expressions.

And that yacc would instead deal with them by setting the
priority on the expression operators.

I am not really sure why it runs out of memory or why you get
the error:

" internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"

so I'm kind of guessing.

Thanks, Mark
 
> --
> David Maier
> Senior Software Engineer
> 
> Ingres Germany GmbH
> Weimarer Stra?e 1a
> D-98693 Ilmenau
> 
> PHONE:  +49.3677.6785-59
> FAX:    +49.3677.6785-23
> MAIL:   david.maier at ingres.com
> 
> This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> 
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
> Gesendet: Mi 30.06.2010 13:48
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
>  
> On Wed, Jun 30, 2010 at 07:20:11AM -0400, David Maier wrote:
> > Hi,
> > 
> > 
> > I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:
> > 
> > " internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"
> > 
> > So I tried the following workarounds:
> > 
> > * Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors
> 
> Hi David,
> 
> Often with larger grammars it is necessary to increse the timeout and
> to increase the Java VM heap size.
> 
> I am not sure about the other problems.
> 
> Just to state the obvious though: since Yacc will happilly accept
> left recursive grammars, while as ANTLR will not, it is necessary
> to remove any left recursion from the grammar.  A good description
> of how to do that is on p.129 of the book "Modern Compiler Design"
> by Grune, et. al.  There is also a description in the dragon book,
> I like the description in Modern Compiler Design better for this
> task though.  Presumably there are other descriptions for
> left recursion removal.
> 
> Regards, Mark
> 
> > * Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems
> > 
> > So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.
> > 
> > Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:
> > 
> > rule1: rule2 | rule3;
> > rule2: TOKEN1;
> > rule3: rule4 | rule5;  
> > rule4: TOKEN1;
> > rule5: TOKEN2;
> > 
> > would result in the following tree for TOKEN1:
> > 
> > TOKEN1 -> rule2 -> rule1;
> >        -> rul4 -> rule3 -> rule1;
> > 
> > I am wondering if there is already such a tool available to find ambiguous rules, is there?
> > 
> > BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL
> > 
> > Advise would be highly appreciated! Thanks in advance for your help!
> > 
> > 
> > Regards, David
> > 
> > 
> > --
> > David Maier
> > Senior Software Engineer
> > 
> > Ingres Germany GmbH
> > Weimarer Stra?e 1a
> > D-98693 Ilmenau
> > 
> > PHONE:  +49.3677.6785-59
> > FAX:    +49.3677.6785-23
> > MAIL:   david.maier at ingres.com
> > 
> > This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> 

From arne.schroeder at gmail.com  Wed Jun 30 05:41:59 2010
From: arne.schroeder at gmail.com (=?ISO-8859-1?Q?Arne_Schr=F6der?=)
Date: Wed, 30 Jun 2010 14:41:59 +0200
Subject: [antlr-interest] tokenVocab-limit of 127?
In-Reply-To: <AANLkTil3s6a5OwHdPLItECC1LzeG5uctVqb0Iz_MyY63@mail.gmail.com>
References: <AANLkTil3s6a5OwHdPLItECC1LzeG5uctVqb0Iz_MyY63@mail.gmail.com>
Message-ID: <AANLkTikE45eaw_9trFzVxDAtVfxXDVRu0sUlu_dQgdti@mail.gmail.com>

Hi again,

sorry for the disruption. Deleting the tokens-files and re-generating has
solved the issue.


Arne

On Wed, Jun 30, 2010 at 12:22, Arne Schr?der <arne.schroeder at gmail.com>wrote:

> Hi everyone,
>
> I am working on a parser to collect information about my source-code.
>
> Recently I found it quite handy to split my parsing-efforts into a "normal"
> parser and a tree-parser. To simplify things I told the parser to leave
> tokens in the AST, indicating a certain construction, so the tree-parser
> does not need to double-check that.
>
> To let the tree-parser know about the tokens, I used the option
> "tokenVocab=<NameOfParser>". So far this has worked out very nicely but now
> I seem to have reached a limit at the token-number 127. That is, tokenVocab
> does not copy any token with a number exceeding 128 (128 is interestingly
> mapped to 127), so these tokens are unknown in my tree-parser.
>
> Looks to me as if this is a bug in ANTLR ;-P. I am using "Version 3.2 Sep
> 23, 2009 12:02:23" to generate my parsers.
> Has anyone come accross this phenomenon before and/or does know a
> work-around (besides the obvious of reducing the number of tokens ;-)).
>
>
> Many thanks for any help in advance,
>
> Arne
>

From David.Maier at ingres.com  Wed Jun 30 05:51:59 2010
From: David.Maier at ingres.com (David Maier)
Date: Wed, 30 Jun 2010 08:51:59 -0400
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even
	do k=1 for decision
References: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv><20100630114839.GB28856@internode.on.net><21C3E073B82EFE4F8A76536D9066FE560427BBCD@USINVMAILB01.ingres.prv>
	<20100630124137.GC28856@internode.on.net>
Message-ID: <21C3E073B82EFE4F8A76536D9066FE560427BBCE@USINVMAILB01.ingres.prv>

Hi Mark,

thanks again. I just before I got your message proofed that the expression rules are causing the problem. I did this because you pointed to this left recursion thing and the expression rules were refactored by using ANTLWorks capabilities. However, I did let the 'expr' rule point to a dummy Token named EXPRESSION_TMP and 'Yes' the errors disappeared. So my error is definitely caused by the 'expr' rule. Thanks again. I will investigate it further and let you know if it is solved.

Regards, David

--
David Maier
Senior Software Engineer

Ingres Germany GmbH
Weimarer Stra?e 1a
D-98693 Ilmenau

PHONE:  +49.3677.6785-59
FAX:    +49.3677.6785-23
MAIL:   david.maier at ingres.com

This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.



-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
Gesendet: Mi 30.06.2010 14:41
An: David Maier
Cc: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
 
On Wed, Jun 30, 2010 at 08:01:10AM -0400, David Maier wrote:
> Hi Mark,
> 
> thanks for your quick reply. I think that I already removed the left
> recursive rules by replacing them with iterations (Kleene operator
> '*') if possible or by using ANTLRWork's refactoring. However, it
> may be that there are still some Multi Line Recursive rules
> left. Further details are available here:
> http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL#MySQL_grammar_from_YACC_to_ANTLR
  .
> 
> I also already increased the timeout to 2 minutes and assigned 1GB
> of RAM to the JVM in which the code generation happens. The result
> was an Out Of Memory message. So I am not sure but maybe there is as
> you pointed out still a Multi Line left recursion in my grammar
> which causes that the Look Ahead DFA creation comes never to an
> end. Could that be?
> 
> Regards, David

Hi David,

Having a quick look at the grammar, it looks like you are/were
having problems with the expressions.  The recipe to convert those
is desribed on p. 266 of The Definitive ANTLR Reference by
Terence Parr.  Basically it says you have to explicitly encode
the expression priorities by creating rules for them, as you
see in any ANTLR grammar that handles expressions.

And that yacc would instead deal with them by setting the
priority on the expression operators.

I am not really sure why it runs out of memory or why you get
the error:

" internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"

so I'm kind of guessing.

Thanks, Mark
 
> --
> David Maier
> Senior Software Engineer
> 
> Ingres Germany GmbH
> Weimarer Stra?e 1a
> D-98693 Ilmenau
> 
> PHONE:  +49.3677.6785-59
> FAX:    +49.3677.6785-23
> MAIL:   david.maier at ingres.com
> 
> This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> 
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
> Gesendet: Mi 30.06.2010 13:48
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
>  
> On Wed, Jun 30, 2010 at 07:20:11AM -0400, David Maier wrote:
> > Hi,
> > 
> > 
> > I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:
> > 
> > " internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"
> > 
> > So I tried the following workarounds:
> > 
> > * Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors
> 
> Hi David,
> 
> Often with larger grammars it is necessary to increse the timeout and
> to increase the Java VM heap size.
> 
> I am not sure about the other problems.
> 
> Just to state the obvious though: since Yacc will happilly accept
> left recursive grammars, while as ANTLR will not, it is necessary
> to remove any left recursion from the grammar.  A good description
> of how to do that is on p.129 of the book "Modern Compiler Design"
> by Grune, et. al.  There is also a description in the dragon book,
> I like the description in Modern Compiler Design better for this
> task though.  Presumably there are other descriptions for
> left recursion removal.
> 
> Regards, Mark
> 
> > * Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems
> > 
> > So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.
> > 
> > Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:
> > 
> > rule1: rule2 | rule3;
> > rule2: TOKEN1;
> > rule3: rule4 | rule5;  
> > rule4: TOKEN1;
> > rule5: TOKEN2;
> > 
> > would result in the following tree for TOKEN1:
> > 
> > TOKEN1 -> rule2 -> rule1;
> >        -> rul4 -> rule3 -> rule1;
> > 
> > I am wondering if there is already such a tool available to find ambiguous rules, is there?
> > 
> > BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL
> > 
> > Advise would be highly appreciated! Thanks in advance for your help!
> > 
> > 
> > Regards, David
> > 
> > 
> > --
> > David Maier
> > Senior Software Engineer
> > 
> > Ingres Germany GmbH
> > Weimarer Stra?e 1a
> > D-98693 Ilmenau
> > 
> > PHONE:  +49.3677.6785-59
> > FAX:    +49.3677.6785-23
> > MAIL:   david.maier at ingres.com
> > 
> > This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> 


From a.moderacja at gmail.com  Wed Jun 30 05:58:22 2010
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 30 Jun 2010 14:58:22 +0200
Subject: [antlr-interest] AntLR target
Message-ID: <AANLkTikKi_WHSyWHUuZVyKg4LWk0VgVgHlHPA7L85LqJ@mail.gmail.com>

How I choose target in verion 2 and 3? How compile grammar to C?
Is possible make own target, for example Pascal, how do it?

From richard.thrippleton at progress.com  Wed Jun 30 06:38:24 2010
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Wed, 30 Jun 2010 14:38:24 +0100
Subject: [antlr-interest] Default recovery code in tree grammars
Message-ID: <4C2B48D0.50808@progress.com>

In parser grammars, ANTLR generates some default error-recovery code that I 
don't override, because it's moderately good and better than bailing out on 
the first error.

However, for tree grammars I've seen ANTLR generate similar error-recovery 
code to try to recover from malformed trees. I override this as I've seen 
statements (that I absolutely agree with) that any kind of automatic 
recovery from walking a malformed tree is folly. With that said, why does 
ANTLR generate any kind of recovery code at all for this kind of grammar?

Richard
-- 
\o/

From luchesar.cekov at ontology-partners.com  Wed Jun 30 07:10:02 2010
From: luchesar.cekov at ontology-partners.com (Luchesar Cekov)
Date: Wed, 30 Jun 2010 15:10:02 +0100
Subject: [antlr-interest] Continue parsing after an error
Message-ID: <4C2B503A.1040605@ontology-partners.com>

Dear ANTLR enthusiasts,

I am struggling with a problem. The parser jumps to the end of file from 
the middle of the document.

The setup is as follow:
    * I have two alternatives flowed by EOF
    * during parse time in the middle of the document next token can not 
match either alternatives start

This leads to parsing termination because the parser jumps to the EndOfFile.

A simple grammar the illustrates the problem is

===============
tokens {ROOT_TOKEN;}
root
    : expressions EOF -> ^(ROOT_TOKEN expressions) ;
expressions : ('[' | ']')* ;
OTHER   : . ;
===============

If then I try parsing "[[][]]sdsdf[]][]][" the parsing will stop and the 
first "s" and will try to recover as if the EOF was the next token.
When looking at the generated Parser it looks like if there is no viable 
alternative in the top rule in this case "root" the parser will behave 
as if it reached the EOF and will skip the rest of the tokens.

The result AST will contain only children up until the first illegal 
token "s".

I cannot see where my mistake is. It looks like the parser should not do 
that. Can you suggest a workaround for the problem?

Thanks in advance,
Luchesar
-- 

Luchesar Cekov
Software Engineer
+44 (0) 207 239 4949
*Ontology Systems*
www.ontology.com <http://www.ontology.com/>

	

award list of icons       

 

 

 

 

.

 


From Gordon.Tyler at quest.com  Wed Jun 30 07:51:48 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Wed, 30 Jun 2010 07:51:48 -0700
Subject: [antlr-interest] Continue parsing after an error
In-Reply-To: <4C2B503A.1040605@ontology-partners.com>
References: <4C2B503A.1040605@ontology-partners.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D0287547B94@alvxmbw04.prod.quest.corp>

The grammar you have defined says, roughly:

Parse any number of '[' or ']' until you reach EOF.

It does not describe what to do if something other than '[' or ']' are found before EOF is found.

You have defined a token, OTHER, to match the other stuff, but your parse rules do not reference OTHER. Perhaps something like this would work:

root : (expressions | OTHER)* EOF -> ^(ROOT_TOKEN expressions) ;



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luchesar Cekov
Sent: June 30, 2010 10:10 AM
To: antlr-interest at antlr.org
Cc: Valerio Malenchino
Subject: [antlr-interest] Continue parsing after an error

Dear ANTLR enthusiasts,

I am struggling with a problem. The parser jumps to the end of file from 
the middle of the document.

The setup is as follow:
    * I have two alternatives flowed by EOF
    * during parse time in the middle of the document next token can not 
match either alternatives start

This leads to parsing termination because the parser jumps to the EndOfFile.

A simple grammar the illustrates the problem is

===============
tokens {ROOT_TOKEN;}
root
    : expressions EOF -> ^(ROOT_TOKEN expressions) ;
expressions : ('[' | ']')* ;
OTHER   : . ;
===============

If then I try parsing "[[][]]sdsdf[]][]][" the parsing will stop and the 
first "s" and will try to recover as if the EOF was the next token.
When looking at the generated Parser it looks like if there is no viable 
alternative in the top rule in this case "root" the parser will behave 
as if it reached the EOF and will skip the rest of the tokens.

The result AST will contain only children up until the first illegal 
token "s".

I cannot see where my mistake is. It looks like the parser should not do 
that. Can you suggest a workaround for the problem?

Thanks in advance,
Luchesar
-- 

Luchesar Cekov
Software Engineer
+44 (0) 207 239 4949
*Ontology Systems*
www.ontology.com <http://www.ontology.com/>

	

award list of icons       

 

 

 

 

.

 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From David.Maier at ingres.com  Wed Jun 30 09:24:26 2010
From: David.Maier at ingres.com (David Maier)
Date: Wed, 30 Jun 2010 12:24:26 -0400
Subject: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even
	do k=1 for decision
References: <21C3E073B82EFE4F8A76536D9066FE560427BBCB@USINVMAILB01.ingres.prv><20100630114839.GB28856@internode.on.net><21C3E073B82EFE4F8A76536D9066FE560427BBCD@USINVMAILB01.ingres.prv>
	<20100630124137.GC28856@internode.on.net>
Message-ID: <21C3E073B82EFE4F8A76536D9066FE560427BBCF@USINVMAILB01.ingres.prv>

Hi Mark,


finally the problem could be solved by removing the Multi Line Left Recusion which was in rule simple_expr. The problem is that simple_expr is left recursive because it calls expr whereby expr terminates on simple_expr. Same happens because simple_expr has bit_expr as subrule. I did a quick and dirty fix by splitting simple_expr into multiple rules:

simple_expr
	:    (simple_ident
        	    | function_call_keyword
        	    | function_call_nonkeyword
        	    | function_call_generic
        	    | function_call_conflict  
        	    | literal
        	    | param_marker
        	    | variable
        	    |  '(' subselect ')'
        	    | EXISTS '(' subselect ')'
        	    | DEFAULT '(' simple_ident ')'
        	    |  VALUES '(' simple_ident_nospvar ')' 
        	    | '+'
        	    | '-'
        	    | '~'
        	    | not
        	    | BINARY)   (OR_OR_SYM simple_expr | COLLATE_SYM ident_or_text)*
        	    //Expected to cause problems because it calls again expr
        	    //| simple_expr_expr
        	    //| simple_expr_bit_expr
        	    | simple_expr_sum_expr     	   
        	     ;

//Causes problems because of left recursion
simple_expr_expr
	: 	
		 '(' expr ')'
		| '(' expr ',' expr_list ')'
		| ROW_SYM '(' expr ',' expr_list ')'
		| CAST_SYM '(' expr AS cast_type ')'
		| CASE_SYM opt_expr when_list opt_else END
		| CONVERT_SYM '(' expr ',' cast_type ')'
       		| CONVERT_SYM '(' expr USING charset_name ')'
       		| INTERVAL_SYM expr interval '+' expr
       	;
	

//Causes problems because of left recusions
simple_expr_bit_expr
	:	MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')';


simple_expr_sum_expr
	:	sum_expr;



The 'simple_expr_expr' and 'simple_expr_bit_expr' are now no longer handled in the simple_expr rule instead they are now part of the expr and bit_expr rule.


Regards, David


--
David Maier
Senior Software Engineer

Ingres Germany GmbH
Weimarer Stra?e 1a
D-98693 Ilmenau

PHONE:  +49.3677.6785-59
FAX:    +49.3677.6785-23
MAIL:   david.maier at ingres.com

This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.



-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
Gesendet: Mi 30.06.2010 14:41
An: David Maier
Cc: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
 
On Wed, Jun 30, 2010 at 08:01:10AM -0400, David Maier wrote:
> Hi Mark,
> 
> thanks for your quick reply. I think that I already removed the left
> recursive rules by replacing them with iterations (Kleene operator
> '*') if possible or by using ANTLRWork's refactoring. However, it
> may be that there are still some Multi Line Recursive rules
> left. Further details are available here:
> http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL#MySQL_grammar_from_YACC_to_ANTLR
  .
> 
> I also already increased the timeout to 2 minutes and assigned 1GB
> of RAM to the JVM in which the code generation happens. The result
> was an Out Of Memory message. So I am not sure but maybe there is as
> you pointed out still a Multi Line left recursion in my grammar
> which causes that the Look Ahead DFA creation comes never to an
> end. Could that be?
> 
> Regards, David

Hi David,

Having a quick look at the grammar, it looks like you are/were
having problems with the expressions.  The recipe to convert those
is desribed on p. 266 of The Definitive ANTLR Reference by
Terence Parr.  Basically it says you have to explicitly encode
the expression priorities by creating rules for them, as you
see in any ANTLR grammar that handles expressions.

And that yacc would instead deal with them by setting the
priority on the expression operators.

I am not really sure why it runs out of memory or why you get
the error:

" internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"

so I'm kind of guessing.

Thanks, Mark
 
> --
> David Maier
> Senior Software Engineer
> 
> Ingres Germany GmbH
> Weimarer Stra?e 1a
> D-98693 Ilmenau
> 
> PHONE:  +49.3677.6785-59
> FAX:    +49.3677.6785-23
> MAIL:   david.maier at ingres.com
> 
> This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> 
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: antlr-interest-bounces at antlr.org im Auftrag von Mark Wright
> Gesendet: Mi 30.06.2010 13:48
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] MySQL's YACC grammar to ANTLR: could not even do k=1 for decision
>  
> On Wed, Jun 30, 2010 at 07:20:11AM -0400, David Maier wrote:
> > Hi,
> > 
> > 
> > I am currently migrating the MySQL grammar from YACC to ANTLR. I am now hitting the problem to get a lot of error messages like:
> > 
> > " internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even do k=1 for decision <n>"
> > 
> > So I tried the following workarounds:
> > 
> > * Increased the timeout during the generation of the Parser's Java code: This did not solve the problem and ended up in out of memory errors
> 
> Hi David,
> 
> Often with larger grammars it is necessary to increse the timeout and
> to increase the Java VM heap size.
> 
> I am not sure about the other problems.
> 
> Just to state the obvious though: since Yacc will happilly accept
> left recursive grammars, while as ANTLR will not, it is necessary
> to remove any left recursion from the grammar.  A good description
> of how to do that is on p.129 of the book "Modern Compiler Design"
> by Grune, et. al.  There is also a description in the dragon book,
> I like the description in Modern Compiler Design better for this
> task though.  Presumably there are other descriptions for
> left recursion removal.
> 
> Regards, Mark
> 
> > * Did set k=1, which helps to avoid the error message but introduces limitations regarding the look ahead and so causes new problems
> > 
> > So I think the right solution will be to remove ambiguous rules. I already began to remove 'Epsilon' rules and I can imagine that there are other ambiguous rules in the grammar as well. The problem I have is to find them easily. So the error message above contains the decision number <n>. Is it easily possible to find the rule in my grammar's source code which is related to this decision number <n>? How to do that.
> > 
> > Another idea would be to implement an algorithm which starts at a single token definition and creates a tree by substituting the rules back. The idea is that a rule is ambiguous if it is part of 2 different paths in this tree. So for instance:
> > 
> > rule1: rule2 | rule3;
> > rule2: TOKEN1;
> > rule3: rule4 | rule5;  
> > rule4: TOKEN1;
> > rule5: TOKEN2;
> > 
> > would result in the following tree for TOKEN1:
> > 
> > TOKEN1 -> rule2 -> rule1;
> >        -> rul4 -> rule3 -> rule1;
> > 
> > I am wondering if there is already such a tool available to find ambiguous rules, is there?
> > 
> > BTW: Future information can be found here: http://community.ingres.com/wiki/Ingres_Migration_Tool_Set_Idiom_MySQL
> > 
> > Advise would be highly appreciated! Thanks in advance for your help!
> > 
> > 
> > Regards, David
> > 
> > 
> > --
> > David Maier
> > Senior Software Engineer
> > 
> > Ingres Germany GmbH
> > Weimarer Stra?e 1a
> > D-98693 Ilmenau
> > 
> > PHONE:  +49.3677.6785-59
> > FAX:    +49.3677.6785-23
> > MAIL:   david.maier at ingres.com
> > 
> > This transmission is confidential and intended solely for the use of the recipient named above. It may contain confidential, proprietary, or legally privileged information. If you are not the intended recipient, you are hereby notified that any unauthorized review, use, disclosure or distribution is strictly prohibited. If you have received this transmission in error, please contact the sender by reply e-mail and delete the original transmission and all copies from your system.
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> 


From luchesar.cekov at ontology-partners.com  Wed Jun 30 10:35:23 2010
From: luchesar.cekov at ontology-partners.com (Luchesar Cekov)
Date: Wed, 30 Jun 2010 18:35:23 +0100
Subject: [antlr-interest] Continue parsing after an error
In-Reply-To: <1FE9A296676737419A8912A6FD22AE1D0287547B94@alvxmbw04.prod.quest.corp>
References: <4C2B503A.1040605@ontology-partners.com>
	<1FE9A296676737419A8912A6FD22AE1D0287547B94@alvxmbw04.prod.quest.corp>
Message-ID: <4C2B805B.2070706@ontology-partners.com>

Hi Gordon,

Thanks for the prompt response.
Adding OTHER as an alternative was what I tried to do in the beginning. 
Unfortunately my use case is a bit more complex. I have worked out a 
better example below.
In this example, the input string  [ax][kx][ax] is wrong (k is not 
allowed) but the grammar builds the full ast tree, so it recovers from 
the error - it would generate three expression nodes the second of which 
contains a ErrorCommonToken inside as per recoverFromMismatchedToken().
The string [ax]sax][ax] on the other end, generates only the first bit 
of the tree, till the error.  - it generares only one expression node.

I do not understand why I get this different behavior - the parser 
recovers if the error happens in the middle of a rule, but not if the 
error is at the beginning of a rule.

Is this a problem in my grammar or it is just the way ANTLR works?

Thanks,
Luchesar

================
grammar StartOfARuleFailTest;

options {    output=AST;    ASTLabelType=CommonTree; }

tokens { ROOT_TOKEN;ERROR_TOKEN;EXPRESSIONS;EXPRESSION; }

@members {
    @Override
    protected Object recoverFromMismatchedToken(IntStream input, int 
ttype, BitSet follow)
            throws RecognitionException {
        MismatchedTokenException ex = new 
MismatchedTokenException(ttype, input);
        input.consume();
        return createErrorToken(ex, ttype);
    }
   
    public static ErrorCommonToken createErrorToken(RecognitionException 
ex, int ttype) {
        ErrorCommonToken errorCommonToken = new ErrorCommonToken(ex.token);
        errorCommonToken.setType(ttype);
       
        return errorCommonToken;
    }
}

root : expressions  EOF -> ^(ROOT_TOKEN expressions) ;
expressions  : expression* -> ^(EXPRESSIONS expression*) ;
expression : '[' 'a' 'x' ']' -> ^(EXPRESSION '[' 'a' 'x' ']');

OTHER   : . ;
================


Gordon Tyler wrote:
> The grammar you have defined says, roughly:
>
> Parse any number of '[' or ']' until you reach EOF.
>
> It does not describe what to do if something other than '[' or ']' are found before EOF is found.
>
> You have defined a token, OTHER, to match the other stuff, but your parse rules do not reference OTHER. Perhaps something like this would work:
>
> root : (expressions | OTHER)* EOF -> ^(ROOT_TOKEN expressions) ;
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luchesar Cekov
> Sent: June 30, 2010 10:10 AM
> To: antlr-interest at antlr.org
> Cc: Valerio Malenchino
> Subject: [antlr-interest] Continue parsing after an error
>
> Dear ANTLR enthusiasts,
>
> I am struggling with a problem. The parser jumps to the end of file from 
> the middle of the document.
>
> The setup is as follow:
>     * I have two alternatives flowed by EOF
>     * during parse time in the middle of the document next token can not 
> match either alternatives start
>
> This leads to parsing termination because the parser jumps to the EndOfFile.
>
> A simple grammar the illustrates the problem is
>
> ===============
> tokens {ROOT_TOKEN;}
> root
>     : expressions EOF -> ^(ROOT_TOKEN expressions) ;
> expressions : ('[' | ']')* ;
> OTHER   : . ;
> ===============
>
> If then I try parsing "[[][]]sdsdf[]][]][" the parsing will stop and the 
> first "s" and will try to recover as if the EOF was the next token.
> When looking at the generated Parser it looks like if there is no viable 
> alternative in the top rule in this case "root" the parser will behave 
> as if it reached the EOF and will skip the rest of the tokens.
>
> The result AST will contain only children up until the first illegal 
> token "s".
>
> I cannot see where my mistake is. It looks like the parser should not do 
> that. Can you suggest a workaround for the problem?
>
> Thanks in advance,
> Luchesar
>   

-- 

Luchesar Cekov
Software Engineer
+44 (0) 207 239 4949
*Ontology Systems*
www.ontology.com <http://www.ontology.com/>

	

award list of icons       

 

 

 

 

.

 


From Gordon.Tyler at quest.com  Wed Jun 30 10:48:39 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Wed, 30 Jun 2010 10:48:39 -0700
Subject: [antlr-interest] Continue parsing after an error
In-Reply-To: <4C2B805B.2070706@ontology-partners.com>
References: <4C2B503A.1040605@ontology-partners.com>
	<1FE9A296676737419A8912A6FD22AE1D0287547B94@alvxmbw04.prod.quest.corp>
	<4C2B805B.2070706@ontology-partners.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D02875480EA@alvxmbw04.prod.quest.corp>

I'm not very familiar with ANTLR's error recovery mechanisms, but I suspect that the generated code for the 'expressions' rule looks for a character that it recognizes as the start of an 'expression' rule before it calls into the 'expression' rule and when it doesn't find one in the second case, it exits out into the root rule, which then checks if the next token is EOF and fails.

But this is just speculation. Hopefully one of the more experienced ANTLRers can give you a better answer.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luchesar Cekov
Sent: June 30, 2010 1:35 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Continue parsing after an error

Hi Gordon,

Thanks for the prompt response.
Adding OTHER as an alternative was what I tried to do in the beginning. 
Unfortunately my use case is a bit more complex. I have worked out a 
better example below.
In this example, the input string  [ax][kx][ax] is wrong (k is not 
allowed) but the grammar builds the full ast tree, so it recovers from 
the error - it would generate three expression nodes the second of which 
contains a ErrorCommonToken inside as per recoverFromMismatchedToken().
The string [ax]sax][ax] on the other end, generates only the first bit 
of the tree, till the error.  - it generares only one expression node.

I do not understand why I get this different behavior - the parser 
recovers if the error happens in the middle of a rule, but not if the 
error is at the beginning of a rule.

Is this a problem in my grammar or it is just the way ANTLR works?

Thanks,
Luchesar

================
grammar StartOfARuleFailTest;

options {    output=AST;    ASTLabelType=CommonTree; }

tokens { ROOT_TOKEN;ERROR_TOKEN;EXPRESSIONS;EXPRESSION; }

@members {
    @Override
    protected Object recoverFromMismatchedToken(IntStream input, int 
ttype, BitSet follow)
            throws RecognitionException {
        MismatchedTokenException ex = new 
MismatchedTokenException(ttype, input);
        input.consume();
        return createErrorToken(ex, ttype);
    }
   
    public static ErrorCommonToken createErrorToken(RecognitionException 
ex, int ttype) {
        ErrorCommonToken errorCommonToken = new ErrorCommonToken(ex.token);
        errorCommonToken.setType(ttype);
       
        return errorCommonToken;
    }
}

root : expressions  EOF -> ^(ROOT_TOKEN expressions) ;
expressions  : expression* -> ^(EXPRESSIONS expression*) ;
expression : '[' 'a' 'x' ']' -> ^(EXPRESSION '[' 'a' 'x' ']');

OTHER   : . ;
================


Gordon Tyler wrote:
> The grammar you have defined says, roughly:
>
> Parse any number of '[' or ']' until you reach EOF.
>
> It does not describe what to do if something other than '[' or ']' are found before EOF is found.
>
> You have defined a token, OTHER, to match the other stuff, but your parse rules do not reference OTHER. Perhaps something like this would work:
>
> root : (expressions | OTHER)* EOF -> ^(ROOT_TOKEN expressions) ;
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luchesar Cekov
> Sent: June 30, 2010 10:10 AM
> To: antlr-interest at antlr.org
> Cc: Valerio Malenchino
> Subject: [antlr-interest] Continue parsing after an error
>
> Dear ANTLR enthusiasts,
>
> I am struggling with a problem. The parser jumps to the end of file from 
> the middle of the document.
>
> The setup is as follow:
>     * I have two alternatives flowed by EOF
>     * during parse time in the middle of the document next token can not 
> match either alternatives start
>
> This leads to parsing termination because the parser jumps to the EndOfFile.
>
> A simple grammar the illustrates the problem is
>
> ===============
> tokens {ROOT_TOKEN;}
> root
>     : expressions EOF -> ^(ROOT_TOKEN expressions) ;
> expressions : ('[' | ']')* ;
> OTHER   : . ;
> ===============
>
> If then I try parsing "[[][]]sdsdf[]][]][" the parsing will stop and the 
> first "s" and will try to recover as if the EOF was the next token.
> When looking at the generated Parser it looks like if there is no viable 
> alternative in the top rule in this case "root" the parser will behave 
> as if it reached the EOF and will skip the rest of the tokens.
>
> The result AST will contain only children up until the first illegal 
> token "s".
>
> I cannot see where my mistake is. It looks like the parser should not do 
> that. Can you suggest a workaround for the problem?
>
> Thanks in advance,
> Luchesar
>   

-- 

Luchesar Cekov
Software Engineer
+44 (0) 207 239 4949
*Ontology Systems*
www.ontology.com <http://www.ontology.com/>

	

award list of icons       

 

 

 

 

.

 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From zeaflal at aai.textron.com  Wed Jun 30 12:26:57 2010
From: zeaflal at aai.textron.com (Zeafla, Larry)
Date: Wed, 30 Jun 2010 15:26:57 -0400
Subject: [antlr-interest] Is it possible that I found a bug on my first day
	using Antlr?
Message-ID: <74858D4BB13DA34B946363FB76A728CC03FEC188@txamasnwh021.ent.textron.com>

I started using Antlr today.  Being cautious, I tried to write a parser
for a tiny grammar by commenting out almost everything from the online
demo and then adding my code incrementally.  I got errors that can be
reduced to this grammar file:

        grammar comment_test;
        /** Comment 1 */
        /** Comment 2 */
        INT         :  '0'..'9'+ ;

 

This generated the error message:

         syntax error: antlr: comment_test.g:3:1: unexpected token: /**
Comment 2 */

 

Changing either of the comment start characters from /** to /* makes the
error go away.  It appears that Antlr will not accept back to back
comments in a grammar file if both start with /**

    Larry


From a.moderacja at gmail.com  Wed Jun 30 12:36:53 2010
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 30 Jun 2010 21:36:53 +0200
Subject: [antlr-interest] AntLR target
In-Reply-To: <AANLkTikKi_WHSyWHUuZVyKg4LWk0VgVgHlHPA7L85LqJ@mail.gmail.com>
References: <AANLkTikKi_WHSyWHUuZVyKg4LWk0VgVgHlHPA7L85LqJ@mail.gmail.com>
Message-ID: <AANLkTin7Zk9cND23TdJP2bI95ypo0JHdb7RYyw-nPxJj@mail.gmail.com>

2010/6/30 Borneq <a.moderacja at gmail.com>:
> How I choose target in verion 2 and 3? How compile grammar to C?
> Is possible make own target, for example Pascal, how do it?

ANTLR has many targets,
http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
unofortunately not Delphi. Targets are for ANTLR v3, but many grammar,
http://www.antlr.org/grammar/list
for example HTML is for ANTLR v2
How convert grammar from version 2 to 3?

From alex_mcmains at yahoo.com  Wed Jun 30 12:40:44 2010
From: alex_mcmains at yahoo.com (Alex McMains)
Date: Wed, 30 Jun 2010 12:40:44 -0700 (PDT)
Subject: [antlr-interest] how do you make Antlr work with a recursively
	changing input stream
Message-ID: <721581.41156.qm@web55207.mail.re4.yahoo.com>

Thanks Mark.? I appreciate the response.? However, I'm not sure if I've made myself quite?clear in what I'm trying to do.? I read the links you gave me, and I think I understand at least the basics of using a symbol table.? I implemented a?rudimentary C compiler in college using flex/bison, but that was 12 years ago.??Plenty long enough for me to forget the details.?
?
However, unless I can either call Antlr recursively (is this possible?), or change the stream that Antlr is parsing as I find substitutions, then I don't see how a symbol table will help me.? I get the feeling that I'm missing something completely obvious.? I'm sure I'm not the only person who has ever tried to do what I'm trying to do.
?
My problem isn't forward references in this case.? My problem is that the data stream is discovered dynamically by following a table of substitutions.? The tables are similar to a relational database.
?
I have a hand-coded parser using regular expressions that I've written that handles all of this, but it's somewhat hard to maintain (even for me the person who wrote it).
?
I would like Antlr to both tell me whether or not I need to substitute at any given node based on a grammar and then recurse over the substituted data and finally parse the leaf nodes using the grammar.
??
Here's a slightly more complex example than I gave before:
?
xml = Parse(Person);??/* I pass in the table to start with - that's it.? The original stream only contains the Person table representation.? The rest is determined dynamically.?*/???????

/* Here's how the tables might be layed out. */

Person (table name)
_Identifier_?????? {Name}??????? {Address}
Person1????????? 15555??????????? 15555???????
Person2??????????14444??????????? 14444
?
Name (table name)
_Identifier_????? Salutation??? FirstName??? LastName
15555?????????????? Mr?????????????Joe?????????Blow
14444?????????????? Mrs????????????Jane????????Doe
?
Address (table name)
_Identifier_???? Street????? City????????State????? {Neighborhood}
15555??????????? Main????? Bozeman????????MT?????????? Stirling
14444?????????? Second??? Los Angeles???? CA?????????? Brentwood
?
Neighborhood (table name)
_Identifier_?????????? Name?????????????????YearlyDues
Stirling????????????Stirling Meadows??????????400
Brentwood????????   Brentwood Estates???????  4000
?
Here's what the XML would look like - remember I only passed in the?Person?table representation as the original stream, the rest was determined dynamically as I look at each node and decide whether or not to perform?a substitution.? Currently these substitutions?are designated with the {} around the table's column header.
?
<Person1>
? <Name>
??? <Salutation>Mr</Salutation>
??? <FirstName>Joe</FirstName>
??? <LastName>Blow</LastName>
? </Name>
? <Address>
??? <Street>Main</Street>
??? <City>Bozeman</City>
??? <State>MT</State>
??? <Neighborhood>
????? <Name>Stirling Meadows</Name>
????? <YearlyDues>400</YearlyDues>
??? </Neighborhood>
? </Address>
</Person1>
<Person2>
? <Name>
??? <Salutation>Mrs</Salutation>
??? <FirstName>Jane</FirstName>
??? <LastName>Doe</LastName>
? </Name>
? <Address>
??? <Street>Second</Street>
??? <City>Los Angeles</City>
??? <State>CA</State>
??? <Neighborhood>
????? <Name>Brentwood Estates</Name>
????? <YearlyDues>4000</YearlyDues>
??? </Neighborhood>
? </Address>
</Person2>
?
I'm sorry if this is too long.? Maybe there is something obvious I am missing here.? If you still think a symbol table is warranted, could you please write me some psuedocode that shows how I can get Antlr to parse the dynamic data recursively.
?
Thanks!
?
???????? -- alex
?
--- On Tue, 6/29/10, Mark Wright <markwright at internode.on.net> wrote:


From: Mark Wright <markwright at internode.on.net>
Subject: Re: [antlr-interest] how do you make Antlr work with a recursively changing input stream
To: antlr-interest at antlr.org
Date: Tuesday, June 29, 2010, 5:29 PM


On Tue, Jun 29, 2010 at 03:18:55PM -0700, Alex McMains wrote:
> Hi all,
> 
> I'm new to Antlr.? I've bought?and read portions of the?Antlr book,
> and I've read dozens of postings and tutorials, but I still can't
> see how to do deal with a recursively changing input stream in
> Antlr.? Do I somehow use TokenRewriteStream, or am I missing
> something?

Hi Alex,

Yes, you are missing something, the Antlr book does not say much about
symbol tables or type systems.

For simple type systems, it is probably easier to just use the
approach which is called a "symbol table" in old school books
on compiler construction.? A really good description of this
approach is in chapter 7 of the book Language Implementation Patterns
by Terence Parr.? An introduction to this approach is at:

http://www.antlr.org/wiki/display/CS652/Symbol+tables

You obviously need to implement forward references scopes.

Mainly for the mailing list archive, I would just like to say that I
find this symbol table approach seems difficult to use for
complex type systems.? For complex type systems the approach I
recommend is described in the book "Types and Programming Languages"
by Benjamin Pierce, the online book "Software Foundations", see the
course:

http://www.seas.upenn.edu/~cis500/current/index.html

and the book "Certified Programming with Dependent Types" by
Adam Chlipala:

http://adam.chlipala.net/cpdt/

Regards, Mark

> Here's the situation:
> 
> I start with an input stream.? As I move through the input I will
> either encounter something that can be parsed directly, or I will
> encounter something that tells me to go to a table and substitute an
> entire row of the table at the node where I currently am.? This can
> continue to happen recursively since each field from the substituted
> row can again call for a substitution. 
>? 
> Here's an example:
>? 
> Person table:
>? Identifier? ???Name???{Address}
> Person1? ? ? ? Jon? ? ???Jon's Address
>? 
> Address table:
>? Identifier? ? ? HouseNumber? StreetName
> Jon's Address???3477? ? ? ? ? ? ???Blue Lane
>? 
> The {} around Address says to name the current node "Address" and
> substitute the current value for whatever is at "Jon's Address" in
> the Address table.
>? 
> Eventually this will become XML that would look like:
>? 
> <Person>
>? ???<Name>Jon</Name>
>? ???<Address>
>? ? ? ? ? <HouseNumber>3477</HouseNumber>
>? ? ? ? ? <StreetName>Blue Lane</StreetName>
>? ? ? </Address>
> </Person>
>? 
> Any ideas would be appreciated.
>? 
> Thanks.
>? 
>? ? ? ? -- alex
> 
> 
>? ? ???
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

-----Inline Attachment Follows-----



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From parrt at cs.usfca.edu  Wed Jun 30 12:55:17 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 Jun 2010 12:55:17 -0700
Subject: [antlr-interest] Is it possible that I found a bug on my first
	day using Antlr?
In-Reply-To: <74858D4BB13DA34B946363FB76A728CC03FEC188@txamasnwh021.ent.textron.com>
References: <74858D4BB13DA34B946363FB76A728CC03FEC188@txamasnwh021.ent.textron.com>
Message-ID: <2C38AA6D-8D65-43BE-9D03-FFDF44D0012C@cs.usfca.edu>

/** foo */ is javadoc not just a comment. one per rule :)
T
On Jun 30, 2010, at 12:26 PM, Zeafla, Larry wrote:

> I started using Antlr today.  Being cautious, I tried to write a parser
> for a tiny grammar by commenting out almost everything from the online
> demo and then adding my code incrementally.  I got errors that can be
> reduced to this grammar file:
> 
>        grammar comment_test;
>        /** Comment 1 */
>        /** Comment 2 */
>        INT         :  '0'..'9'+ ;
> 
> 
> 
> This generated the error message:
> 
>         syntax error: antlr: comment_test.g:3:1: unexpected token: /**
> Comment 2 */
> 
> 
> 
> Changing either of the comment start characters from /** to /* makes the
> error go away.  It appears that Antlr will not accept back to back
> comments in a grammar file if both start with /**
> 
>    Larry
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From Darin.Mikesell at gd-ais.com  Wed Jun 30 14:30:50 2010
From: Darin.Mikesell at gd-ais.com (Mikesell, Darin B.)
Date: Wed, 30 Jun 2010 16:30:50 -0500
Subject: [antlr-interest] Bug or Error
Message-ID: <DBCB698FB6D4B643BF64C7B5025E37FBDC36D654F8@EADC01-MABPRD11.ad.gd-ais.com>

I have an interesting error/bug that just started coming up.

First here's a description of the bug.  If I enter a Line Comment, then the next keyword that is encountered (however many lines below that comment) will seem to have its first letter incorrectly 'read'. If I enter a 2nd or 3rd line of comments after that 1st comment, then the 2nd and 3rd letter of that same keyword will not be 'read'.  When I say 'read', I mean to say that the word will have its 1st-3rd letter grayed out, almost like it was considered still part of the comment(s) from the line above.

The weird part is that everything seems to run fine (i.e. the parse tree builds correctly), other than the Exception below being thrown if enough comments are read as to gray out the entire keyword.  Here's the other kicker, I only get the Exception being thrown if I debug from an input file... if I copy/paste the data from the file into the Text window and debug, the Exception never gets thrown.

The interesting part is that I never received this Exception being thrown before, it just started coming up. I've been testing this grammar for about a week and then just yesterday this Exception starting popping up.  The only thing that I can recall doing that may have caused it was that I clicked on the Refactor, Remove All Left Recursion.

I wish I was using versioning software, so I can just revert, but I don't think that would help anyway because the Exception is still being thrown even when I run the example grammars (the comments in the example grammars are having the same effect).

I'm using ANTLRWorks 1.4  I've tried deleting and reinstalling (including deleting the registry keys) to no avail.
I've tried using Java 1.5 and Java 1.6 and it doesn't matter, the Exception still gets thrown.

Here is a subset of my language, I've broken it down to its smallest possible pieces for the debugging purposes I was performing, and have determined (as stated above) that the Exceptions seem to be caused by the comments section.


grammar myLang;

my_program
        : 'begin'
           statement+
          'end'
        ;

// S t a t e m e n t s
statement
        : print_statement
        ;

print_statement
        : 'print' STRING_LITERAL
        ;

STRING_LITERAL
        :  '"' ( ~('\\'|'"') )* '"'
        ;

WS
        :  (' '|'\t'|'\u000C'|'\r'|'\n') {$channel=HIDDEN;}
        ;

LINE_COMMENT
        : (';' | '!') ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
        ;


Here is the input program that I'm using:
begin
   ; Comment Line 1
   ; Comment Line 2
   ; Comment Line 3
   ; Comment Line 4
   ; Comment Line 5
   ; Comment Line 6
   print "This is a test print statement"
end



Here is the exception that is being thrown:
[14:19:10] javax.swing.text.BadLocationException: Position not represented by view
        at javax.swing.text.CompositeView.modelToView(Unknown Source)
        at javax.swing.text.BoxView.modelToView(Unknown Source)
        at javax.swing.plaf.basic.BasicTextUI$RootView.modelToView(Unknown Source)
        at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
        at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
        at javax.swing.text.JTextComponent.modelToView(Unknown Source)
        at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(DBInputProcessorToken.java:304)
        at java.awt.event.InvocationEvent.dispatch(Unknown Source)
        at java.awt.EventQueue.dispatchEvent(Unknown Source)
        at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
        at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
        at java.awt.EventDispatchThread.run(Unknown Source)

Any advice would be greatly appreciated.


- Darin


