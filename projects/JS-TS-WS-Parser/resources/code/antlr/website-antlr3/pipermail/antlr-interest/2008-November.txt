From wbgillis at gmail.com  Sat Nov  1 00:06:07 2008
From: wbgillis at gmail.com (Ben Gillis)
Date: Sat, 1 Nov 2008 02:06:07 -0500
Subject: [antlr-interest] QUESTION on: How do I handle abbreviated
	keywords?
References: <F6CBE06B817147B29C0466E492DCD8CA@homelaptop>
	<490bc49a.0c0bca0a.2ec8.ffffb1e5SMTPIN_ADDED@mx.google.com>
	<458D50E380214757BA4CEAEC978E6BC9@homelaptop>
	<490bf8df.080bca0a.6ff5.2ad4SMTPIN_ADDED@mx.google.com>
Message-ID: <174D16D352AC46DD9E137BBADFD643C7@homelaptop>

Hi Gavin,

inline...

----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "Ben Gillis" <wbgillis at gmail.com>; <antlr-interest at antlr.org>
Sent: Saturday, November 01, 2008 1:36 AM
Subject: Re: [antlr-interest] QUESTION on: How do I handle abbreviated 
keywords?


> At 18:53 1/11/2008, Ben Gillis wrote:
> >In my CSharp2 target, there *already* is both components
> necessary
> >for this dicationary; string values of the tokens and the
> >corresponding integer token type.
>
> No, there isn't :)
>
> If you have a token called BEGIN, the string you'll find in tokenNames is 
> "BEGIN" -- which is a different string from "begin", the keyword in the 
> input language that you actually want to match.  And it's different again 
> from "bgn", which might be a valid abbreviation for the same keyword (and 
> thus should translate to the same token type).
>
> The token name is purely arbitrary -- it could be called BEGIN_KEYWORD, or 
> KW_BEGIN, or BLOCK_START, or even FOO.  While it's usually convenient to 
> name it similar to what it's going to end up matching in the input 
> language, there's no requirement to do so -- and that's especially true of 
> imaginary tokens, which don't actually match anything in the input 
> language at all (or at least not directly).

Yes, I see your point and now some things in the example grammars make more 
sense.
Thanks.

>
> There's no way this kind of information can be generated automatically -- 
> hence if you want to do things that way, then you have to do them yourself 
> :)
>
> >It appears I have to duplicate some of that to make a
> dictionary,
> >which is OK, but surprising since ANTLR doc/publication stresses
>
> >efficiency.  i.e. it seems the target could've reorg'd it in
> such
> >a way as to provide this vs. requiring manual duplication of
> it.
> >Just thinking out loud, not complaining...overall, I'm loving
> >ANTLR.  :-)
>
> Well, this is a bit of a side path, after all.  That's not how you'd 
> normally define keywords.  (At least, it's not how I ever do it; some 
> people do prefer that sort of thing though.)
>

Can you tell me more about how you go about it?  This is exactly what
I'm looking into, i.e. what is the best way to define my keywords.

Thanks again,
Ben


From pink at odahoda.de  Sat Nov  1 02:52:06 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 1 Nov 2008 10:52:06 +0100
Subject: [antlr-interest] C# Target Unreachable Code
In-Reply-To: <6E872CECFD894C9FA8DF91E04F2F379B@homelaptop>
References: <6E872CECFD894C9FA8DF91E04F2F379B@homelaptop>
Message-ID: <543531490811010252o1f67b65n6dd315466f4815eb@mail.gmail.com>

Hi Ben,

I'd had to see the grammar rule that generates this code to judge if
it is really an error, but I really doubt it is.
Although ANTLR tries to generate readable code, it will never come to
the level of (good) human written code. In this specific case, the
'true' might come from action/predicate code - ANTLR would have to
understand C# (and any other target language) in order to omit the
trailing else block. Even if it could optimize that block away, it's
probably not worth the effort because the compiler already does it.
So unless you're sure your grammar is correct, but the generate code
doesn't work as it should do (i.e. you're trying to debug a bug of the
code generator), it is save to disable such compiler warnings.

- (the other) Ben

On Sat, Nov 1, 2008 at 12:47 AM, Ben Gillis <wbgillis at gmail.com> wrote:
> why the unreachable code generation?
>
> ...
> else if ( (true) )
> {
>     alt8 = 3;
> }
> else
> {
>     if ( state.backtracking > 0 ) {state.failed = true; return retval;}
>     NoViableAltException nvae_d8s1 =
>     new NoViableAltException("", 8, 1, input);
>     throw nvae_d8s1;
> }
>
> It seems fairly harmless to disable 0219 (unused variables), but disabling
> unreachable code warnings perhaps not.
>
> Regards,
> Ben
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From antlr at mirality.co.nz  Sat Nov  1 03:03:32 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 01 Nov 2008 23:03:32 +1300
Subject: [antlr-interest] QUESTION on: How do I handle abbreviated
 keywords?
In-Reply-To: <174D16D352AC46DD9E137BBADFD643C7@homelaptop>
References: <F6CBE06B817147B29C0466E492DCD8CA@homelaptop>
	<490bc49a.0c0bca0a.2ec8.ffffb1e5SMTPIN_ADDED@mx.google.com>
	<458D50E380214757BA4CEAEC978E6BC9@homelaptop>
	<490bf8df.080bca0a.6ff5.2ad4SMTPIN_ADDED@mx.google.com>
	<174D16D352AC46DD9E137BBADFD643C7@homelaptop>
Message-ID: <20081101100346.83D7B3D168D@www.antlr.org>

At 20:06 1/11/2008, Ben Gillis wrote:
 >Can you tell me more about how you go about it?  This is exactly 

 >what I'm looking into, i.e. what is the best way to define my
 >keywords.

I normally just define them directly, ie:

BEGIN: 'begin';

(I used to define them in the tokens section:

tokens {
   BEGIN = 'begin';
}

except that in recent versions of ANTLR this sometimes gives odd 
warning messages.)


It helps to write lots of unit tests, though.  Sometimes 
interactions between lexer rules (and ANTLR's minimal lookahead) 
can lead to odd results.


From Development at ChrisSek.de  Sat Nov  1 03:06:20 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Sat, 1 Nov 2008 11:06:20 +0100
Subject: [antlr-interest] gUnit: Is it possible to test StringTemplate
	output?
Message-ID: <9123957C-6996-432A-80CF-79D587AAE3C8@ChrisSek.de>

Hello all,

simple question: Is it possible to test a tree walkers template output  
using
gUnit? In my tree grammar I put the following into the starting rule:

@init {
    try {
         FileReader groupFileR = new FileReader("path/to/group.stg");
         StringTemplateGroup templates = new  
StringTemplateGroup(groupFileR);
         groupFileR.close();
         this.setTemplateLib(templates);
     } /... some catch blocks
}

Of cause, I also added the imports. My testsuite looks as follows:

	gunit TreeWalker walks Parser;

	program walks program:
	"if(true){}" OK

This TC fails. When I expect some value, like

	program walks program:
	"if(true){}" -> <<
         if True:
             pass
         >>

I got the following output:

	test1 (program walks program, line9) -
	expected: if(true)
	actual: java.lang.NullPointerException

Why does this NullPointerException occurs? I debugged into the
StringTemplate code but found nothing useful. I think it's produced
when performing the "node to template" transformation.

When I use the usual way to run the parser and walker, the input
"if(true){}" produces the expected "if True:\n pass". So I think the
issue is not caused by my grammars.

Wiki page http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
points out that testing template output is possible (see section "Test
StringTemplate output").

Thanks in advance.

Kind regards,
Chris

From iar73 at freemail.hu  Sat Nov  1 07:14:14 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sat, 1 Nov 2008 15:14:14 +0100 (CET)
Subject: [antlr-interest] (no subject)
In-Reply-To: <200811010215.mA12F0s3026471@zinc.newtechlaw.com>
Message-ID: <freemail.20081001151414.59744@fm25.freemail.hu>

Gerald Rosenberg <gerald at certiv.net> ?rta: 


> At 06:39 PM 10/31/2008, =?ISO-8859-2?Q?Imre_Andr=E1s?= wrote:
> 
> >Now how can I explicitly tell that SEQUENCE is a keyword, and not a valid ID?
> 
> 
> tokens { SQ; }
> 
> ID:        { 'SEQUENCE' }=> 'SEQUENCE'  {$type = SQ}
>          | ('a'..'z'|'A'..'Z')+ ;
> it with some necessary changes (please find the current grammar below).
This compiles ok (I'm still wondering about the $type and token magic), but there is a problem with processing A ::= SEQUENCE { a, SEQUENCE, c} as input. A MismatchedTokenException occurs instead of treating SEQUENCE as an ID.
How can I tell ANTLR that 'SEQUENCE' means a list when followed by '{', otherwise it is an ID?


Thanks,
  Andr?s

--- grammar -------------------- 
grammar keyword;

tokens { SQ; }

DEFINES : '::=' ;
WS : (' '|'\t')+ {skip();} ;
SEQUENCE : 'SEQUENCE';

prog: stat+ ;

stat: assignment;

assignment : leftValue DEFINES rightValue {System.out.println($leftValue.value + "=" + $rightValue.value);};

leftValue returns [String value]: ID {$value = $ID.text;};
rightValue returns [String value]: ID {$value = $ID.text;}| sequence {$value = $sequence.value;};

sequence returns [String value]: SEQUENCE '{' e=rightValue {$value=$e.value;} (',' e=rightValue {$value += $e.value;})* '}';

ID: ( SEQUENCE )=> SEQUENCE {$type = SQ;} | ('a'..'z'|'A'..'Z')+ ;

--- end of grammar --- 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081101/82a6636c/attachment.html 

From antlr at mirality.co.nz  Sat Nov  1 12:05:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 02 Nov 2008 08:05:43 +1300
Subject: [antlr-interest] (no subject)
In-Reply-To: <freemail.20081001151414.59744@fm25.freemail.hu>
References: <200811010215.mA12F0s3026471@zinc.newtechlaw.com>
	<freemail.20081001151414.59744@fm25.freemail.hu>
Message-ID: <20081101190555.B042411EE52@www.antlr.org>

At 03:14 2/11/2008, =?ISO-8859-2?Q?Imre_Andr=E1s?= wrote:
>This compiles ok (I'm still wondering about the $type and token 
>magic), but there is a problem with processing A ::= SEQUENCE { 
>a, SEQUENCE, c} as input. A MismatchedTokenException occurs 
>instead of treating SEQUENCE as an ID.
[...]
>tokens { SQ; }
[...]
>SEQUENCE : 'SEQUENCE';
[...]
>ID: ( SEQUENCE )=> SEQUENCE {$type = SQ;} | ('a'..'z'|'A'..'Z')+ 
>;

I missed the earlier part of this thread, so I'm not entirely sure 
what you're trying to accomplish, but the above seems wrong.

First off, you're defining two top-level tokens that can match the 
character sequence 'SEQUENCE': the SEQUENCE rule, which will 
assign it the token type SEQUENCE, and the ID rule, which will 
assign it the token type SQ (which you are not actually using 
anywhere in your parser rules, so if it ever gets produced your 
parser will have mismatched token errors).

If you want the ID rule to be the only source of matching for the 
input text "SEQUENCE", then you need to make the SEQUENCE rule a 
fragment and either change your parser rules to look for SQ 
instead or to make the ID rule set the token type to SEQUENCE.

Alternatively (provided there aren't weird issues with lookahead) 
you ought to be able to remove the SEQUENCE-matching clause from 
ID entirely.  The input text "SEQUENCE" should always generate a 
SEQUENCE token without that clause in ID being present, so that 
clause is just introducing ambiguity (though it does guarantee 
full lookahead).

>How can I tell ANTLR that 'SEQUENCE' means a list when followed 
>by '{', otherwise it is an ID?

This sounds like an entirely different problem than what the above 
clause is trying to accomplish :)

There are two schools of thought on how to treat out-of-place 
keywords as if they are just normal identifiers, and they're both 
covered here:
   <http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741>http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741 



From antlr at mirality.co.nz  Sat Nov  1 12:41:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 02 Nov 2008 08:41:26 +1300
Subject: [antlr-interest] QUESTION on: How do I handle abbreviated
 keywords?
In-Reply-To: <46B33E6324614A0C8533EE3F7D501CA0@homelaptop>
References: <F6CBE06B817147B29C0466E492DCD8CA@homelaptop>
	<490bc49a.0c0bca0a.2ec8.ffffb1e5SMTPIN_ADDED@mx.google.com>
	<458D50E380214757BA4CEAEC978E6BC9@homelaptop>
	<490bf8df.080bca0a.6ff5.2ad4SMTPIN_ADDED@mx.google.com>
	<174D16D352AC46DD9E137BBADFD643C7@homelaptop>
	<490c2980.0a0bca0a.098a.3478SMTPIN_ADDED@mx.google.com>
	<46B33E6324614A0C8533EE3F7D501CA0@homelaptop>
Message-ID: <20081101194137.D008511EC69@www.antlr.org>

At 08:11 2/11/2008, Ben Gillis wrote:
 >However, the grammar compiler pukes when I try to define 
keywords
 >with a special sign, such as the dollar sign.
[...]
 >   ...
 >    _keywordDictionary.Add("$SOMETHING", DOLLAR_SOMETHING);
 >   ...
 >}
 >
 >I get the following org.antlr.Tool on the grammar file:
 >
 >error(111): MyGrammar.g:26:1: reference to attribute outside of 
a
 >rule:
 >SOMETHING
[...]
 >That leads me to believe ANTLR is somehow detecting the dollar 
sign
 >and using it as some metasymbol.
 >I thought the code snippets I put in the members block is put 
out
 >"as-is" like the ANTLR book tells me.

Mostly, but it does look for a couple of special characters for 
use with StringTemplate and for ANTLR's own attribute replacement 
(which is why you can refer to $foo.text in a rule action).

You can escape these by using \$ instead.


Also: please remember to use your Reply to All button when 
replying to messages on the ANTLR list, in order to keep responses 
on the list.


From gmdidro at gmail.com  Sat Nov  1 12:53:59 2008
From: gmdidro at gmail.com (=?KOI8-R?B?8MXU0s/XIOHMxcvTwc7E0g==?=)
Date: Sat, 1 Nov 2008 22:53:59 +0300
Subject: [antlr-interest] Attribute in Tree grammar. Semantic predicates
	with Alternative clause Problem
In-Reply-To: <1dcb5c470810310121l65d6873ekb54ada9322a83e94@mail.gmail.com>
References: <1dcb5c470810301545g44e191caka5ca37654cea0494@mail.gmail.com>
	<490A3E5A.1070709@gmx.de>
	<1dcb5c470810310121l65d6873ekb54ada9322a83e94@mail.gmail.com>
Message-ID: <1dcb5c470811011253y78420314je5bd161f3424e9ba@mail.gmail.com>

The question was stated in wrong way (of course the code in my
question-post isn't correct).

 Sorry for waste your time.

Petrov Alexander

From wbgillis at gmail.com  Sat Nov  1 13:17:41 2008
From: wbgillis at gmail.com (Ben Gillis)
Date: Sat, 1 Nov 2008 15:17:41 -0500
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
Message-ID: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>

 Why does ANTLRWorks display blocks with synpredNN__  labels?  e.g.

    {synpred25_MyGrammar}?

Ambiguous alternatives?  

When I duplicate the *exact-same* rule (all sub-rules included) in a smaller grammar to isolate the problem, the "synpredNN" labels never appear.

Thanks,
Ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081101/d11f2645/attachment.html 

From parrt at cs.usfca.edu  Sat Nov  1 14:09:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Nov 2008 14:09:17 -0700
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
In-Reply-To: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
Message-ID: <78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>

they are backtracking syntactic predicates.
Ter
On Nov 1, 2008, at 1:17 PM, Ben Gillis wrote:

>  Why does ANTLRWorks display blocks with synpredNN__  labels?  e.g.
>
>     {synpred25_MyGrammar}?
>
> Ambiguous alternatives?
>
> When I duplicate the *exact-same* rule (all sub-rules included) in a  
> smaller grammar to isolate the problem, the "synpredNN" labels never  
> appear.
>
> Thanks,
> Ben
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From wbgillis at gmail.com  Sat Nov  1 14:11:56 2008
From: wbgillis at gmail.com (Ben Gillis)
Date: Sat, 1 Nov 2008 16:11:56 -0500
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
	<78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>
Message-ID: <6D61CDC45FC5412A8C753C409621EC59@homelaptop>

OK...thanks. :-)

So, why are they present in some ANTLRWorks Syntax Diagrams, but not in 
others?  (Exact-same grammar rules, the smaller, trimmed down grammars do 
not have them...but, beyond being the exact-same rules, sub-rules, etc. I 
don't know why/what else in the grammar would determine when they're 
displayed).

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "Ben Gillis" <wbgillis at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Saturday, November 01, 2008 4:09 PM
Subject: Re: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels


> they are backtracking syntactic predicates.
> Ter
> On Nov 1, 2008, at 1:17 PM, Ben Gillis wrote:
>
>>  Why does ANTLRWorks display blocks with synpredNN__  labels?  e.g.
>>
>>     {synpred25_MyGrammar}?
>>
>> Ambiguous alternatives?
>>
>> When I duplicate the *exact-same* rule (all sub-rules included) in a 
>> smaller grammar to isolate the problem, the "synpredNN" labels never 
>> appear.
>>
>> Thanks,
>> Ben
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 


From parrt at cs.usfca.edu  Sat Nov  1 14:14:31 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Nov 2008 14:14:31 -0700
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
In-Reply-To: <6D61CDC45FC5412A8C753C409621EC59@homelaptop>
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
	<78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>
	<6D61CDC45FC5412A8C753C409621EC59@homelaptop>
Message-ID: <48B51124-C017-4E90-B4B0-0AFE068F622D@cs.usfca.edu>


On Nov 1, 2008, at 2:11 PM, Ben Gillis wrote:

> OK...thanks. :-)
>
> So, why are they present in some ANTLRWorks Syntax Diagrams, but not  
> in others?  (Exact-same grammar rules, the smaller, trimmed down  
> grammars do not have them...but, beyond being the exact-same rules,  
> sub-rules, etc. I don't know why/what else in the grammar would  
> determine when they're displayed).

ANTLR only backtracks when it can't avoid it. Even if you specify  
backtracking, ANTLR does it when it's necessary only.
T

From wbgillis at gmail.com  Sat Nov  1 14:25:00 2008
From: wbgillis at gmail.com (Ben Gillis)
Date: Sat, 1 Nov 2008 16:25:00 -0500
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
	<78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>
	<6D61CDC45FC5412A8C753C409621EC59@homelaptop>
	<48B51124-C017-4E90-B4B0-0AFE068F622D@cs.usfca.edu>
Message-ID: <1B3899DF64EA4B0E9A5EE71C60182345@homelaptop>

...but, this is the exact-same rules, same order in the grammar file; just a 
subset of the grammar where these same rules do display the synpred.
Why ANTLR needs to backtrack in one and not the other I'm not clear on.
(So, back to the Definitive Guide on b/t'ing for clues will help?)



----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "Ben Gillis" <wbgillis at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Saturday, November 01, 2008 4:14 PM
Subject: Re: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels


>
> On Nov 1, 2008, at 2:11 PM, Ben Gillis wrote:
>
>> OK...thanks. :-)
>>
>> So, why are they present in some ANTLRWorks Syntax Diagrams, but not  in 
>> others?  (Exact-same grammar rules, the smaller, trimmed down  grammars 
>> do not have them...but, beyond being the exact-same rules,  sub-rules, 
>> etc. I don't know why/what else in the grammar would  determine when 
>> they're displayed).
>
> ANTLR only backtracks when it can't avoid it. Even if you specify 
> backtracking, ANTLR does it when it's necessary only.
> T 


From iar73 at freemail.hu  Sat Nov  1 13:47:56 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sat, 1 Nov 2008 21:47:56 +0100 (CET)
Subject: [antlr-interest] (no subject)
In-Reply-To: undefined
Message-ID: <freemail.20081001214756.24842@fm25.freemail.hu>


Gavin Lambert <antlr at mirality.co.nz> ?rta: 


> At 03:14 2/11/2008, =?ISO-8859-2?Q?Imre_Andr=E1s?= wrote:
> >This compiles ok (I'm still wondering about the $type and token 
> >magic), but there is a problem with processing A ::= SEQUENCE { 
> >a, SEQUENCE, c} as input. A MismatchedTokenException occurs 
> >instead of treating SEQUENCE as an ID.
> [...]
> >tokens { SQ; }
> [...]
> >SEQUENCE : 'SEQUENCE';
> [...]
> >ID: ( SEQUENCE )=> SEQUENCE {$type = SQ;} | ('a'..'z'|'A'..'Z')+ 
> >;
> 
> I missed the earlier part of this thread, so I'm not entirely sure 
> what you're trying to accomplish, but the above seems wrong.
> 
> First off, you're defining two top-level tokens that can match the 
> character sequence 'SEQUENCE': the SEQUENCE rule, which will 
> assign it the token type SEQUENCE, and the ID rule, which will 
> assign it the token type SQ (which you are not actually using 
> anywhere in your parser rules, so if it ever gets produced your 
> parser will have mismatched token errors).
> 
> If you want the ID rule to be the only source of matching for the 
> input text "SEQUENCE", then you need to make the SEQUENCE rule a 
> fragment and either change your parser rules to look for SQ 
> instead or to make the ID rule set the token type to SEQUENCE.
> 
> Alternatively (provided there aren't weird issues with lookahead) 
> you ought to be able to remove the SEQUENCE-matching clause from 
> ID entirely.  The input text "SEQUENCE" should always generate a 
> SEQUENCE token without that clause in ID being present, so that 
> clause is just introducing ambiguity (though it does guarantee 
> full lookahead).
> 
> >How can I tell ANTLR that 'SEQUENCE' means a list when followed 
> >by '{', otherwise it is an ID?
> 
> This sounds like an entirely different problem than what the above 
> clause is trying to accomplish :)
> 
> There are two schools of thought on how to treat out-of-place 
> keywords as if they are just normal identifiers, and they're both 
> covered here:
>    <http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741>http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741 
> 
> 
> in,

I'd like to have a simple grammar that recognizes assignments. An assignment has an ID on the left side, and either an ID or a non-empty sequence(list) on the right side. Sequences can be embedded. The string 'SEQUENCE' should be allowed in a sequence, being an ID there.

I came across two mutually exclusive problems:

First, if I allow 'SEQUENCE' to be an ID, I have ambiguity errors in the grammar. Tried to get rid of it using fragments but not succeeded yet. I assume there should be no ambuiguity looking forward one token. If the next token is '{', it should denote a sequence def, otherwise it should be an ID.

Second, if I want 'SEQUENCE'  to be a reserved keyword, I don't know how to specify that this string should not be recognized as an ID. I assume I have to do something with the ID rule, but currently have no clue how to do that. I examined the v1.5 Java Grammar available on the antlr site, looking for keyword and identifier relation inside, but found nothing. I even tried to start with rule Identifier (for this I had to bring it forward as the first rule) to see what happens when I specify keywords, but the grammar had errors (The following token definitions can never be matched because prior tokens match the same input: ENUM,ASSERT).

Unfortunately my grammar got a bit large, and still not working yet :( I think I have to invest a couple of hours more to do it right :)

However, if you could help to flatten the learning curve, please do not hesitate. Thanks for the answers so far.


Regards,
  Andr?s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081101/3de5c97e/attachment.html 

From parrt at cs.usfca.edu  Sat Nov  1 14:31:43 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Nov 2008 14:31:43 -0700
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
In-Reply-To: <1B3899DF64EA4B0E9A5EE71C60182345@homelaptop>
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
	<78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>
	<6D61CDC45FC5412A8C753C409621EC59@homelaptop>
	<48B51124-C017-4E90-B4B0-0AFE068F622D@cs.usfca.edu>
	<1B3899DF64EA4B0E9A5EE71C60182345@homelaptop>
Message-ID: <7F7D48C7-F29F-40FA-A8AC-CAFE33BDE686@cs.usfca.edu>


On Nov 1, 2008, at 2:25 PM, Ben Gillis wrote:

> ...but, this is the exact-same rules, same order in the grammar  
> file; just a subset of the grammar where these same rules do display  
> the synpred.
> Why ANTLR needs to backtrack in one and not the other I'm not clear  
> on.

  different grammars have different lookahead requirements.

a : A | B ; is LL(1)

a : A B | A C ; is LL(2)

a : A+ B | A+ C; is LL(*)

a : e '.' | e ';' ; // requires backtracking
e : '(' e ')' | INT ;

Change e to

e : INT ;

and you don't need backtracking anymore

> (So, back to the Definitive Guide on b/t'ing for clues will help?)

yep. ;)

Ter

From jimi at temporal-wave.com  Sat Nov  1 14:42:17 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 01 Nov 2008 14:42:17 -0700
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
In-Reply-To: <6D61CDC45FC5412A8C753C409621EC59@homelaptop>
References: <4D4364D3E90D46388746C9BBCA0ED9B8@homelaptop>
	<78A8599E-E86D-4D57-9FD5-AF0700588A47@cs.usfca.edu>
	<6D61CDC45FC5412A8C753C409621EC59@homelaptop>
Message-ID: <1225575737.16027.57.camel@jimi>

On Sat, 2008-11-01 at 16:11 -0500, Ben Gillis wrote:

> OK...thanks. :-)
> 
> So, why are they present in some ANTLRWorks Syntax Diagrams, but not in 
> others?  (Exact-same grammar rules, the smaller, trimmed down grammars do 
> not have them...but, beyond being the exact-same rules, sub-rules, etc. I 
> don't know why/what else in the grammar would determine when they're 
> displayed).


Firstly, don't use backtracking mode as the parsers you get will be
pretty slow and error messages will be weak - see lots of posts on this
(it might help you to read through some of the archives).

ANTLR does what it can to get rid of any predicates that it realizes it
does not need. So sometimes there will be a predicate and sometimes
there won't be. Get rid of the backtrack option and there won't be any
that you don't put in yourself.

Jim

> 
> ----- Original Message ----- 
> From: "Terence Parr" <parrt at cs.usfca.edu>
> To: "Ben Gillis" <wbgillis at gmail.com>
> Cc: <antlr-interest at antlr.org>
> Sent: Saturday, November 01, 2008 4:09 PM
> Subject: Re: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
> 
> 
> > they are backtracking syntactic predicates.
> > Ter
> > On Nov 1, 2008, at 1:17 PM, Ben Gillis wrote:
> >
> >>  Why does ANTLRWorks display blocks with synpredNN__  labels?  e.g.
> >>
> >>     {synpred25_MyGrammar}?
> >>
> >> Ambiguous alternatives?
> >>
> >> When I duplicate the *exact-same* rule (all sub-rules included) in a 
> >> smaller grammar to isolate the problem, the "synpredNN" labels never 
> >> appear.
> >>
> >> Thanks,
> >> Ben
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: 
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> > 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081101/96033d93/attachment.html 

From leon.antlr at mac.com  Sat Nov  1 15:28:30 2008
From: leon.antlr at mac.com (Leon Su)
Date: Sat, 01 Nov 2008 15:28:30 -0700
Subject: [antlr-interest] gUnit: Is it possible to test
	StringTemplate	output?
In-Reply-To: <9123957C-6996-432A-80CF-79D587AAE3C8@ChrisSek.de>
References: <9123957C-6996-432A-80CF-79D587AAE3C8@ChrisSek.de>
Message-ID: <ECB5A19B-2176-4846-BC05-880B0CAF7E36@mac.com>

Hi Chris,

Thanks for pointing out this issue. I think it's a bug of testing a  
tree grammar's template output in gUnit-1.0.2.
I just uploaded an intermediate release to the wiki page of gUnit.
Please download the new version and try to see if it works on your  
testsuite.

ps.  you may need to put gunit-1.0.3b.jar before antlr-3.1.1.jar in  
your classpath.

Leon

On Nov 1, 2008, at 3:06 AM, Chris Sekszczynska wrote:

> Hello all,
>
> simple question: Is it possible to test a tree walkers template output
> using
> gUnit? In my tree grammar I put the following into the starting rule:
>
> @init {
>     try {
>          FileReader groupFileR = new FileReader("path/to/group.stg");
>          StringTemplateGroup templates = new
> StringTemplateGroup(groupFileR);
>          groupFileR.close();
>          this.setTemplateLib(templates);
>      } /... some catch blocks
> }
>
> Of cause, I also added the imports. My testsuite looks as follows:
>
> 	gunit TreeWalker walks Parser;
>
> 	program walks program:
> 	"if(true){}" OK
>
> This TC fails. When I expect some value, like
>
> 	program walks program:
> 	"if(true){}" -> <<
>          if True:
>              pass
>>>
>
> I got the following output:
>
> 	test1 (program walks program, line9) -
> 	expected: if(true)
> 	actual: java.lang.NullPointerException
>
> Why does this NullPointerException occurs? I debugged into the
> StringTemplate code but found nothing useful. I think it's produced
> when performing the "node to template" transformation.
>
> When I use the usual way to run the parser and walker, the input
> "if(true){}" produces the expected "if True:\n pass". So I think the
> issue is not caused by my grammars.
>
> Wiki page http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar 
> +Unit+Testing
> points out that testing template output is possible (see section "Test
> StringTemplate output").
>
> Thanks in advance.
>
> Kind regards,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr- 
> interest/your-email-address
>


From Vitaliy at dbsophic.com  Sun Nov  2 00:33:31 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Sun, 2 Nov 2008 09:33:31 +0200
Subject: [antlr-interest] Error handeling - Illigal input termination
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8CA6@ex01.dbsophicHQ.com>

Hi again,

Is this an obvious question?
I did not find any references to it in the documentation.
Could anybody please shed some light upon the issue?

Thanks allot,
Vitaliy

From: Vitaliy
Sent: Wednesday, October 29, 2008 14:05
To: ANTLR-Interest Interest
Subject: Error handeling - Illigal input termination

Hi,

I would like Antlr to fail upon any error, instead of trying to recover.
I've managed to do this for almost all types of errors, following the directives in the reference,
but for some reason if there is an illegal input termination, Antlr won't report an error for it.

That is, If we've got the input:
LegalStatement1,
LegalStatement2,
...
LegalStatementN,
IllegalStatement,

Antlr would stop on LegalStatementN,
Instead of reporting an error for IllegalStatement.

Following are all the steps I took to achieve the bail-upon-any-error behavior:


1.       Overriding NextToken method of the lexer, so it would always throw an exception

2.       Overriding methods Mismatch and RecoverFromMismatchedSet of the parser, so they would always throw an exception

3.       Adding @parser::rulecatch directive, so a RecognitionException would always be thrown.

So, what did I miss?

I would really appreciate any help,
Vitaliy


__________ Information from ESET NOD32 Antivirus, version of virus signature database 3565 (20081029) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


__________ Information from ESET NOD32 Antivirus, version of virus signature database 3568 (20081030) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


__________ Information from ESET NOD32 Antivirus, version of virus signature database 3575 (20081031) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081102/c62b3953/attachment.html 

From Development at ChrisSek.de  Sun Nov  2 02:09:26 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Sun, 2 Nov 2008 11:09:26 +0100
Subject: [antlr-interest] gUnit: Is it possible to test
	StringTemplate	output?
In-Reply-To: <ECB5A19B-2176-4846-BC05-880B0CAF7E36@mac.com>
References: <9123957C-6996-432A-80CF-79D587AAE3C8@ChrisSek.de>
	<ECB5A19B-2176-4846-BC05-880B0CAF7E36@mac.com>
Message-ID: <51BDC4B4-6CC6-4B44-8BC3-86252A5E49E1@ChrisSek.de>

Hi Leon,

thank you very much! Your patch works fine. Now, I can test my grammars
and templates in an convenient way :)

Kind regards,
Chris

> Thanks for pointing out this issue. I think it's a bug of testing a
> tree grammar's template output in gUnit-1.0.2.
> I just uploaded an intermediate release to the wiki page of gUnit.
> Please download the new version and try to see if it works on your
> testsuite

From me.tk82c at gmail.com  Sun Nov  2 15:40:18 2008
From: me.tk82c at gmail.com (me tk82c)
Date: Sun, 2 Nov 2008 20:40:18 -0300
Subject: [antlr-interest] Java Grammar and how to use it to create a
	script language to my app
In-Reply-To: <200810302003.50631.rschulz@sonic.net>
References: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>
	<200810302003.50631.rschulz@sonic.net>
Message-ID: <277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>

Hello Randal!

   I agree with you, but my problem is because this "new language" must run
on our windows mobile and java micro edition apps.

   BeanShell doesn't allow this and use a lot of APIs that are from desktop
world (reflection, for example).
   I agree with you that Java is not a good language to act as script
language. But what I'm really looking for is a way to create a small script
language that conforms to any standard (Python for example) and can be
extended easily.

   ANTLR is a good way? There is any solution out of box that i can just get
and use it to improve later without have to learn all about ANTLR?

   Get a already implemented grammar will help and save the day? If so could
you give the way to use it?

Thanks!

tk



On Fri, Oct 31, 2008 at 12:03 AM, Randall R Schulz <rschulz at sonic.net>wrote:

> On Thursday 30 October 2008 18:25, me tk82c wrote:
> > Hello Everybody!
> >
> > I'm trying to create a new language to allow my users to write small
> > scripts in our web app.
> >
> > There is any short way to do that? Something like, download the
> > existent java grammar from ANTLR and implement the specific functions
> > that users will use in my app with this "Java" version.
>
> I don't think Java is a good model or pattern for an extension or
> application scripting language.
>
> I am personally fond of Lisp and the general use of S-Expressions for
> programming languages of all stripes, but many people feel such
> languages cumbersome.
>
> You'd probably be best advised to craft a language specific to the
> system it will control or drive and which will seem natural to its
> users.
>
> ANTLR will help you detect and either eliminate or accommodate any
> abiguities in the grammar you devise, which is one of its many virtues.
>
> And if Java really _is_ a good language for your purposes, then perhaps
> BeanShell would be appropriate. You should probably also consider,
> JavaScript or another JSR-223-compliant language before starting out
> from scratch inventing a scripting language.
>
> Lastly, there are several dynamic languages that integrate well with
> Java and which can serve as scripting languages for programs written in
> Java. They include (but are by no means limited to) Groovy, Scala and
> Clojure.
>
>
> In short, don't invent something you don't need and don't use a language
> that is too low-level (by which I mean Java itself) for your intended
> requirements and audience.
>
>
> > Please, help!
> >
> > tk
>
>
> Randall Schulz
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081102/89cfbd42/attachment.html 

From jaluber at gmx.de  Sun Nov  2 16:04:05 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 03 Nov 2008 01:04:05 +0100
Subject: [antlr-interest] Java Grammar and how to use it to create
 a	script language to my app
In-Reply-To: <277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>
References: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>	<200810302003.50631.rschulz@sonic.net>
	<277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>
Message-ID: <490E3FF5.3020901@gmx.de>

me tk82c schrieb:
> Hello Randal!
> 
>    I agree with you, but my problem is because this "new language" must
> run on our windows mobile and java micro edition apps.
> 
>    BeanShell doesn't allow this and use a lot of APIs that are from
> desktop world (reflection, for example).
> 
>    I agree with you that Java is not a good language to act as script
> language. But what I'm really looking for is a way to create a small
> script language that conforms to any standard (Python for example) and
> can be extended easily.
> 
>    ANTLR is a good way? There is any solution out of box that i can just
> get and use it to improve later without have to learn all about ANTLR?
> 
>    Get a already implemented grammar will help and save the day? If so
> could you give the way to use it?
> 
> Thanks!
> 
> tk

What about using JRuby? Ruby is scripting language, can be extended
easily and runs via JRuby on the Java platform. Or is JRuby too big for
your purposes? Although I wonder why a wep app is executed on such tiny
devices in the first place...

Johannes
> 
> 
> 
> On Fri, Oct 31, 2008 at 12:03 AM, Randall R Schulz <rschulz at sonic.net
> <mailto:rschulz at sonic.net>> wrote:
> 
>     On Thursday 30 October 2008 18:25, me tk82c wrote:
>     > Hello Everybody!
>     >
>     > I'm trying to create a new language to allow my users to write small
>     > scripts in our web app.
>     >
>     > There is any short way to do that? Something like, download the
>     > existent java grammar from ANTLR and implement the specific functions
>     > that users will use in my app with this "Java" version.
> 
>     I don't think Java is a good model or pattern for an extension or
>     application scripting language.
> 
>     I am personally fond of Lisp and the general use of S-Expressions for
>     programming languages of all stripes, but many people feel such
>     languages cumbersome.
> 
>     You'd probably be best advised to craft a language specific to the
>     system it will control or drive and which will seem natural to its
>     users.
> 
>     ANTLR will help you detect and either eliminate or accommodate any
>     abiguities in the grammar you devise, which is one of its many virtues.
> 
>     And if Java really _is_ a good language for your purposes, then perhaps
>     BeanShell would be appropriate. You should probably also consider,
>     JavaScript or another JSR-223-compliant language before starting out
>     from scratch inventing a scripting language.
> 
>     Lastly, there are several dynamic languages that integrate well with
>     Java and which can serve as scripting languages for programs written in
>     Java. They include (but are by no means limited to) Groovy, Scala and
>     Clojure.
> 
> 
>     In short, don't invent something you don't need and don't use a language
>     that is too low-level (by which I mean Java itself) for your intended
>     requirements and audience.
> 
> 
>     > Please, help!
>     >
>     > tk
> 
> 
>     Randall Schulz
> 
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From rschulz at sonic.net  Sun Nov  2 16:35:01 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 2 Nov 2008 16:35:01 -0800
Subject: [antlr-interest] Java Grammar and how to use it to create a
	script language to my app
In-Reply-To: <277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>
References: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>
	<200810302003.50631.rschulz@sonic.net>
	<277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>
Message-ID: <200811021635.01902.rschulz@sonic.net>

On Sunday 02 November 2008 15:40, me tk82c wrote:
> Hello Randal!
>
>    I agree with you, but my problem is because this "new language"
> must run on our windows mobile and java micro edition apps.
>
>    ...
>
>    ANTLR is a good way? There is any solution out of box that i can
> just get and use it to improve later without have to learn all about
> ANTLR?

Probably.

However, it's important to realize that ANTLR "only" helps create 
syntactic recognizers. There is much more to  writing language 
interpreters than merely performing syntax analysis. I've only resorted 
to YACC, Bison, JavaCC, ANTLR, etc. when I didn't dictate the language 
I had to accept. When I do, I've preferred to use S-Expressions. I 
wrote a Common Lisp reader for Java (complete with programmable reader 
macros and other CL fluff), and I generally use it as the starting 
point when I want an extension language.

From the philosophical perspective, it's just that the creation of 
entirely new languages should be viewed as something that demands a 
specific justification. The world (i.e., users; i.e., humans) do _not_ 
require more languages! They want to use the ones they already know!


> Get a already implemented grammar will help and save the day? If
> so could you give the way to use it?

How is that possible? We know nothing about your application's domain! 
Nothing about what you need to accomplish with a scripting / extension 
language. There are no generic solutions. (Except, of course, for 
S-Expressions...)

Languages are all about what you want to allow its "speakers" to be able 
to say and what you want to make succinct.


> Thanks!
>
> tk


Randall Schulz

From antlr at mirality.co.nz  Sun Nov  2 23:22:01 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 03 Nov 2008 20:22:01 +1300
Subject: [antlr-interest] Java Grammar and how to use it to create a
 script language to my app
In-Reply-To: <200811021635.01902.rschulz@sonic.net>
References: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>
	<200810302003.50631.rschulz@sonic.net>
	<277aaded0811021540g38f7382agcfafbf0c22de4e45@mail.gmail.com>
	<200811021635.01902.rschulz@sonic.net>
Message-ID: <20081103072211.D86C411ED7C@www.antlr.org>

At 13:35 3/11/2008, Randall R Schulz wrote:
 >From the philosophical perspective, it's just that the
 >creation of entirely new languages should be viewed as
 >something that demands a specific justification. The
 >world (i.e., users; i.e., humans) do _not_ require more
 >languages! They want to use the ones they already
 >know!

Small DSLs (eg. for codegen tools; essentially structure or data 
definition languages) can be quite useful, especially when you can 
make them simpler or more readable than alternatives (eg. XML).

It's when you start wanting to put variables, expressions, and 
other elements of an algorithmic language into it that I think you 
really ought to strongly consider using an existing language.


From juvvij at gmail.com  Sun Nov  2 23:39:21 2008
From: juvvij at gmail.com (Vamsi Juvvi)
Date: Sun, 2 Nov 2008 23:39:21 -0800
Subject: [antlr-interest] AST Rewrite,
	Creating imaginary tokens from real ones. C target problem. Help!!
Message-ID: <c12e29d0811022339y7421525y9109c931cdfea9bf@mail.gmail.com>

Hi all:

  I have more or less finished a generator for a custom IDL format used at
my company. Pretty much everything is working except when I started to
initialize imaginary tokens for AST creation from real tokens.

I am trying to accomplish the following. All C/C++ style comments in the IDL
file being parsed are placed on a hidden channel and are ignored nicely by
the parser. This works very well. I however, need to retain some comments
(those listed just before an IDL interface declaration for eg.) and so am
thinking of doing it thusly.

In the parser grammar, when creating the AST root for my interface. I use an
imaginary token which will somehow encode the line number of the first token
that matched the parser rule. My understanding is that this can be doine
useing the rule attribute $start. Then, in my treeParser, I can lookup the
line number from the imaginary token (INTERFACE_BLOCK as listed below) and
start scanning the token stream from the parser in reverse to look for
comments. I am not sure if there is a better way ?

The following is a parser rule which I am using nd which has been
frustrating me for a while now.


interface
@init { aidl::PushParserRuleOnStack("in interface declaration block");}
@after{ aidl::PopParserRuleFromStack();}
    : interface_decl
        OPEN_BRACE
            interface_body_line*
        CLOSE_BRACE SEMI_COLON
    -> ^(INTERFACE_BLOCK[$start] interface_decl interface_body_line*)
    ;


The C code generated (wihch fails to compile) for the node creation of
INTERFACE_BLOCK is as follows (there is a #if 1 == 2, #else, #endif block
which inserts lines 2 and 3 of the following 4 line block which I removed
for readability)

root_1 = (pANTLR3_BASE_TREE)(ADAPTOR->becomeRoot(ADAPTOR,

(pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, INTERFACE_BLOCK,
(pANTLR3_UINT8)((pANTLR3_COMMON_TOKEN)retval).start)
                        , root_1));


Which while not very easy to read is basically creating a brand new token
from the text of the "start"token. There are two problems here.

     1. My understanading of the NODE[$token] leads me to believe that this
should be a createTypeToken call instead of a createTypeText call.
     2. Even otherwise, casting retval which is a rule return type to a
token is a bug and introduces a compilation error.

I would appreciate it very very much if someone could help me fix this. I am
hoping a fix is needed in the AST.stg file packed in with the jar.

It is entirely likely that I am doing something stupid here (I hope not as I
pored over the book multiple times) and coud do with some expert advice.

Either way, appreciate a reply.

thanks very much.

-vamsi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081102/0fdf50b0/attachment.html 

From qwizv9b02 at sneakemail.com  Mon Nov  3 06:56:38 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 03 Nov 2008 15:56:38 +0100
Subject: [antlr-interest] How to get Javadocs for integration with
	Eclipse?
In-Reply-To: <490B7076.5040507@gmail.com>
References: <490B7076.5040507@gmail.com>
Message-ID: <gen3fc$ici$1@ger.gmane.org>

AlanM schreef:
> Hello, this is my first post to antlr-interest. I know this topic has 
> come up before but I couldn't find an answer to this question:
> 
> How can I get or build complete Javadocs so that I can smoothly 
> integrate the generated Java classes with the rest of my Eclipse 
> projects? Eclipse doesn't like the online Javadocs at 
> http://www.antlr.org/api/Java/index.html -- it doesn't recognize them as 
> valid.
> 
> Or alternatively -- how can I download the complete source of 
> antlr-3.1.1? The source in the antlr-3.1.1.jar is missing the vital 
> org.antlr.runtime package.

No it does not, but it is under a different folder.  Try looking for
runtime/Java

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081103/9ce45bfa/attachment.bin 

From qwizv9b02 at sneakemail.com  Mon Nov  3 07:08:46 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 03 Nov 2008 16:08:46 +0100
Subject: [antlr-interest] lexer problem
In-Reply-To: <20081101024011.7CB9B35229D@www.antlr.org>
References: <d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.com>
	<d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.co m>
	<20081101024011.7CB9B35229D@www.antlr.org>
Message-ID: <gen462$ls8$1@ger.gmane.org>

Gavin Lambert schreef:
> At 10:07 1/11/2008, Robert Soule wrote:
>  >I was hoping someone might be able to help me out. I have the
>  >following grammar:
>  >
>  >grammar Test;
>  >start: '[' AB ']' | A;
>  >A: '[a]';
>  >AB: ('a' | 'b')+;
>  >
>  >In English, there is a keyword in my language '[a]', and
>  >all other statements are of the form: [(a|b)+]. I tried this
>  >with two test cases:
>  >
>  >test [ab] fails unexpectedly (no viable alternative)
>  >test [ba] succeeds
>  >
>  >I believe that the lexer sees a '[' character followed by
>  >an 'a' characters, and expects a ']' next, even though
>  >'a' or 'b' could also be valid next input characters. Has
>  >anyone had any experience with this type of issue?
> 
> Yeah, this is a common prefix problem :)  (By which I both mean 
> that it's a common problem and that it's a problem with common 
> prefixes.)
> 
> Essentially what you've got above are the following lexer rules:
> 
> T15: '[';
> T16: ']';
> A: '[a]';
> AB: ('a' | 'b')+;
> 
> To decide between these top-level alternatives, ANTLR essentially 
> builds a least-lookahead disambiguation table.  With only one 
> character of lookahead, it can instantly recognise the difference 
> between T16, AB, and *either* of T15 and A, but it needs at least 
> two characters to tell between T15 and A.  It never checks that 
> third character, which is what it'd need to look at to decide 
> between a single A vs. a T15 *followed by* an AB.
> 
> To deal with this kind of problem, you need to manually force the 
> necessary lookahead.  You can do this by combining the rules with 
> common prefixes:
> 
> fragment A: '[a]';
> LSQUARE: '[' ('a]' { $type = A; })? ;
> 
> Another way of writing it:
> 
> fragment A: '[a]';
> LSQUARE
>    :  (A) => A { $type = A; }
>    |  '['
>    ;
> 
> (Either way, of course, you'll need to refer to LSQUARE in your 
> parser rules after this.)

This looks promising to solve my problem as well (see other threads).
Could you explain further what the line
    :  (A) => A { $type = A; }
does?  I crawled the site for an explanation of ?=>? but couldn?t find
more than ?semantic predicate? and ?always execute predicate?.

Thanks, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081103/ec9d96bd/attachment.bin 

From jaluber at gmx.de  Mon Nov  3 07:54:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 03 Nov 2008 16:54:58 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
 PL/SQL grammar
In-Reply-To: <45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
References: <45c28e3e0810310336s4c046fd2veb7029cbce3e55e8@mail.gmail.com>	
	<490AEB7A.5000808@gmx.de>
	<45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
Message-ID: <490F1ED2.1040002@gmx.de>

Javier Luis C?novas Izquierdo schrieb:
> Hi Johannes, thanks for your fast response.
> 
> Maybe I have not explined the problem correctly, sorry. I have just
> proved that changes.
> 
> I have specified the parameter for the JVM for increasing the memory
> limit of the JVM. Actually, it is "-Xms1024m -Xmx1024m" (will it need
> more? really?) and the options section does not contain the line which
> specifies the output language (it only contains the output and k
> options).
> 
> I did not check that the grammar does not contain C# code. However, I
> suppose that the parser process generation should not depends on the
> actions included by the user. The problem should appear once the
> parser is generated, is it true?. Anyway I have just checked the
> grammar and I have cleaned it to remove the C# actions. The problem
> keeps on.
> 
> I have tested the grammar with antlr 3.0.1 and 3.1.1 and both fail. I
> think that there should be some wrong (or maybe there is a problem
> with the antlr parser tool). I attach the grammar that I am using and
> the trace of the last execution.
> 
> Thanks!

Sorry for the delay. I've tested it myself and I can compile just fine
(although with some warnings). Could it be that you are doing the
options order wrong? I use

java -Xmx1024m -cp <paths to jars - use your own here> org.antlr.Tool
PLSQL3.g

Johannes

> 
> 2008/10/31 Johannes Luber <jaluber at gmx.de>:
>> Javier Luis C?novas Izquierdo schrieb:
>>> Hi,
>>>
>>> I am working with ANTLRv3 and the Oracle PL/SQL grammar definition
>>> which is located in the antlr grammar list webpage and whose author is
>>> Andrey Kharitonkin. I need to enrich the grammar in order to create a
>>> data structure of the parsed plsql text. However, I have a problem on
>>> the first phase: I cannot generate the Java parser with ANTLR tool
>>> from the grammar of the webpage.
>>>
>>> The grammar has activated the backtrack and memoize options and the k
>>> value is *. When I try to generate the parser, I get a
>>> "java.lang.OutOfMemoryError: Java heap space" (firstTrace.txt file
>>> contains the stack trace of this situation). I have tried to
>>> deactivate the backtrack and memoize options and to set the k value to
>>> 1 (although it will cause warnings during the generation) and the
>>> problem keeps on (secondTrace.txt file contains the stack trace of
>>> this situation).
>>>
>>> I have changed the parameters of the JVM to increase the memory limit
>>> of the virtual machine to 1gb and again, the problem goes on .
>>> However, the memory charge of the java instance does not exceed 100mb.
>>> I cannot understand it.
>>>
>>> I have to be doing some wrong because the grammar that I am using is
>>> the same of the grammar list, I have not change anything. I have seen
>>> that the grammar has the "language=CSharp" option. Could that be the
>>> problem? Could you help me?
>>>
>>> Thanks
>> You have two problems: The first is that you need to tell the Java VM to
>> use more memory like "java -Xmx1024m ...". Adjust the number to your
>> needs. The second problem is that the grammar has been developed with C#
>> as the output language. Changing "CSharp" to "Java" (or removing that
>> line) won't help entirely, as all actions are written in C#. You have to
>> go trough them one by one and fix any incompatibilities.
>>
>> Johannes
>>>
>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
> 
> 
> 
> --
> Javier Luis C?novas Izquierdo
> http://zirrus.es
> zirrus at gmail.com
> 


From robert.soule at gmail.com  Mon Nov  3 07:59:48 2008
From: robert.soule at gmail.com (Robert Soule)
Date: Mon, 3 Nov 2008 10:59:48 -0500
Subject: [antlr-interest] lexer problem
In-Reply-To: <490bc18b.050bca0a.252b.ffff8d4eSMTPIN_ADDED@mx.google.com>
References: <d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.com>
	<490bc18b.050bca0a.252b.ffff8d4eSMTPIN_ADDED@mx.google.com>
Message-ID: <d1316fd70811030759l6eccd4eah7399f042140a1e09@mail.gmail.com>

Thank you for your help, but I'm still having some problems with the
suggested re-write:

start	
	: LSQUARE AB RSQUARE
	| A
	;
AB	:	('a'|'b')+;

fragment A: '[a]';
LSQUARE
 :  (A) => A { $type = A; }
 |  '['
 ;

RSQUARE	:	']';


When I test with inputs "[ba]" I pass, but "[ab]" fails.

thank you,
Robert


On Fri, Oct 31, 2008 at 9:40 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 10:07 1/11/2008, Robert Soule wrote:
>>I was hoping someone might be able to help me out. I have the
>>following grammar:
>>
>>grammar Test;
>>start: '[' AB ']' | A;
>>A: '[a]';
>>AB: ('a' | 'b')+;
>>
>>In English, there is a keyword in my language '[a]', and
>>all other statements are of the form: [(a|b)+]. I tried this
>>with two test cases:
>>
>>test [ab] fails unexpectedly (no viable alternative)
>>test [ba] succeeds
>>
>>I believe that the lexer sees a '[' character followed by
>>an 'a' characters, and expects a ']' next, even though
>>'a' or 'b' could also be valid next input characters. Has
>>anyone had any experience with this type of issue?
>
> Yeah, this is a common prefix problem :)  (By which I both mean that it's a
> common problem and that it's a problem with common prefixes.)
>
> Essentially what you've got above are the following lexer rules:
>
> T15: '[';
> T16: ']';
> A: '[a]';
> AB: ('a' | 'b')+;
>
> To decide between these top-level alternatives, ANTLR essentially builds a
> least-lookahead disambiguation table.  With only one character of lookahead,
> it can instantly recognise the difference between T16, AB, and *either* of
> T15 and A, but it needs at least two characters to tell between T15 and A.
>  It never checks that third character, which is what it'd need to look at to
> decide between a single A vs. a T15 *followed by* an AB.
>
> To deal with this kind of problem, you need to manually force the necessary
> lookahead.  You can do this by combining the rules with common prefixes:
>
> fragment A: '[a]';
> LSQUARE: '[' ('a]' { $type = A; })? ;
>
> Another way of writing it:
>
> fragment A: '[a]';
> LSQUARE
>  :  (A) => A { $type = A; }
>  |  '['
>  ;
>
> (Either way, of course, you'll need to refer to LSQUARE in your parser rules
> after this.)
>
>

From parrt at cs.usfca.edu  Mon Nov  3 09:53:46 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 3 Nov 2008 09:53:46 -0800
Subject: [antlr-interest] new builtools in fisheye
Message-ID: <FE0E0503-761B-45E7-8E05-AF28F4E61F9C@cs.usfca.edu>

Hi, Jim Idle has worked like a dog to create maven support tools and  
reorg the antlr source tree.  As part of the reorg, we've moved all  
build tools to their own dir.  Fisheye now shows it too, but at new  
addr:

http://fisheye2.atlassian.com/browse/antlr-buildtools

Ter

From jeanclaude.mahieux at prismtech.com  Mon Nov  3 10:32:01 2008
From: jeanclaude.mahieux at prismtech.com (Jean-Claude Mahieux)
Date: Mon, 03 Nov 2008 19:32:01 +0100
Subject: [antlr-interest] "illegal option output" post
Message-ID: <490F43A1.4040401@prismtech.com>

Did anybody find the solution ? I have exactly same problem as Mikael 
Petterson ...

Thanks in advance ,

-- 
Jean-Claude Mahieux 
COO PrismTech France
Parc Fontaine de Jouvence - 4 rue Angiboust
91460 - Marcoussis - FRANCE
Tel : + 33 (0) 1 69 01 53 54
jeanclaude.mahieux at prismtech.com



From rhund at rumms.uni-mannheim.de  Mon Nov  3 10:40:36 2008
From: rhund at rumms.uni-mannheim.de (Ralf Hund)
Date: Mon, 03 Nov 2008 19:40:36 +0100
Subject: [antlr-interest] Rewriting Rule Problem
Message-ID: <490F45A4.7000105@rumms.uni-mannheim.de>

Hello everyone,
I started working with ANTLR a few days ago and ran into a problem with 
certain rewriting rules. Basically, there is the following rule:
    exprOr : exprXor (opGroupOr exprXor)*;

I want an AST node to be created everytime the parentheses* *matches. My 
first solution was to apply the following rewrite rule:
    exprOr : l=exprXor (o=opGroupOr r=exprXor -> ^(Expression $l $o $r))*;

However, this always results in a RewriteEmptyStreamException. Which is 
kind of strange since the following rules work perfectly:
    exprOrRight : opGroupOr exprXor -> ^(Expression opGroupOr exprXor);
    exprOr : l=exprXor (exprOrRight)*;

However there's no way to access $l in exprOrRight as it's in a 
different rule(at least i'm not aware of any way to do that). Is there 
any simpler way to solve the problem? What am I doing wrong?

Cheers,
Ralf Hund


From antlr at mirality.co.nz  Mon Nov  3 11:53:50 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 04 Nov 2008 08:53:50 +1300
Subject: [antlr-interest] lexer problem
In-Reply-To: <gen462$ls8$1@ger.gmane.org>
References: <d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.com>
	<d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.co m>
	<20081101024011.7CB9B35229D@www.antlr.org>
	<gen462$ls8$1@ger.gmane.org>
Message-ID: <20081103195429.E7B5911EB30@www.antlr.org>

At 04:08 4/11/2008, Hendrik Maryns wrote:
 >This looks promising to solve my problem as well (see other
 >threads).
 >Could you explain further what the line
 >    :  (A) => A { $type = A; }
 >does?  I crawled the site for an explanation of "=>" but
 >couldn't find more than "semantic predicate" and "always
 >execute predicate".

It's called a "syntactic predicate".  Basically the fragment in 
parentheses before the => is evaluated as lookahead, and only if 
the entire thing is present does it enter the block to the right 
of the =>.  It's a way of forcing explicit lookahead.

Normally, you want to avoid putting loops (*/+) into the lookahead 
(since they're usually just a waste of time -- but not always), so 
it's more common to inline the rule rather than put it verbatim on 
both sides as above.  But in this case it's a simple sequence rule 
so it should be ok.


From antlr at mirality.co.nz  Mon Nov  3 12:00:44 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 04 Nov 2008 09:00:44 +1300
Subject: [antlr-interest] lexer problem
In-Reply-To: <d1316fd70811030759l6eccd4eah7399f042140a1e09@mail.gmail.co
 m>
References: <d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.com>
	<490bc18b.050bca0a.252b.ffff8d4eSMTPIN_ADDED@mx.google.com>
	<d1316fd70811030759l6eccd4eah7399f042140a1e09@mail.gmail.com>
Message-ID: <20081103200212.A027111ED47@www.antlr.org>

At 04:59 4/11/2008, Robert Soule wrote:
 >start	
 >	: LSQUARE AB RSQUARE
 >	| A
 >	;
 >AB	:	('a'|'b')+;
 >
 >fragment A: '[a]';
 >LSQUARE
 > :  (A) => A { $type = A; }
 > |  '['
 > ;
 >
 >RSQUARE	:	']';
 >
 >
 >When I test with inputs "[ba]" I pass, but "[ab]" fails.

It works for me (ANTLR 3.0.1).  You are using a real compiled 
parser, though, right (or ANTLRworks' debugger)?  Not the 
interpreter?  Because the interpreter doesn't execute predicates 
(so it almost never works properly).

If I change the start rule given above to this:

start : (LSQUARE AB RSQUARE | A)+ ;

then it'll successfully match the input "[ba][a][ab]".


From antlr at mirality.co.nz  Mon Nov  3 12:11:14 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 04 Nov 2008 09:11:14 +1300
Subject: [antlr-interest] Rewriting Rule Problem
In-Reply-To: <490F45A4.7000105@rumms.uni-mannheim.de>
References: <490F45A4.7000105@rumms.uni-mannheim.de>
Message-ID: <20081103201303.245DA11EC69@www.antlr.org>

At 07:40 4/11/2008, Ralf Hund wrote:
 >    exprOr : l=exprXor (o=opGroupOr r=exprXor -> ^(Expression $l 
$o
 >$r))*;
 >
 >However, this always results in a RewriteEmptyStreamException.

This means that one of the expressions you're trying to insert 
into the AST is an empty tree, which suggests that there's 
something optional in one of the subrules, or they're not 
producing the tree you think they are.

 >However there's no way to access $l in exprOrRight as it's in a
 >different rule(at least i'm not aware of any way to do that). Is 

 >there any simpler way to solve the problem? What am I doing 
wrong?

It's possible to pass $l into the subrule as a parameter and use 
it that way, but I doubt that's what you really want to do.  Your 
original rule above will only work properly for zero or one 
matches of the parenthetic block -- as soon as you hit two or 
more, you'll lose some of the input.  It's better to write it like 
this:

exprOr
   : (exprXor -> exprXor)
     (o=opGroupOr r=exprXor -> ^(Expression $exprOr $o $r))*
   ;

If your operator was a single token instead of a subrule 
invokation (and you wanted the operator to be the root of the 
tree, which is fairly common), you could alternatively write it 
like this:

exprOr
   : exprXor (OR^ exprXor)*
   ;

Or:

exprOr
   : exprXor ((OR1^ | OR2^) exprXor)*
   ;


From sven.prevrhal at ucsf.edu  Mon Nov  3 12:48:55 2008
From: sven.prevrhal at ucsf.edu (Sven Prevrhal)
Date: Mon, 3 Nov 2008 12:48:55 -0800
Subject: [antlr-interest] ints and fractions - how to avoid "Decision
 can match input such as "INT SLASH INT" using multiple alternatives"
 warnings
In-Reply-To: <47c890dc0810302205h13a09a75u941924fc38bb3364@mail.gmail.com>
References: <490a8e71.081b600a.0a71.ffffe88a@mx.google.com>
	<47c890dc0810302205h13a09a75u941924fc38bb3364@mail.gmail.com>
Message-ID: <F95D079AE57C42A08030E0A07BC13BFD@anatta>

Thanks Chris,
I can follow. However I don't know how to disambiguate this. 

?
Thanks and Cheers!
Sven


-----Original Message-----
From: cvrebert at gmail.com [mailto:cvrebert at gmail.com] On Behalf Of Chris
Rebert
Sent: Thursday, October 30, 2008 10:06 PM
To: sven.prevrhal at ucsf.edu
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ints and fractions - how to avoid "Decision
can match input such as "INT SLASH INT" using multiple alternatives"
warnings

In plain English, that error message means: input such as e.g. "1/2"
is ambiguous since it could be interpreted as either a float literal
using the fraction syntax or as a division expression with 2 integer
operands.
You'll have to disambiguate your grammar so ANTLR can know which
interpretation you intend.

Cheers,
Chris
-- 
Follow the path of the Iguana...
http://rebertia.com


On Thu, Oct 30, 2008 at 9:49 PM, Sven Prevrhal <sprevrha at gmail.com> wrote:
> Essentially, I want a return of type double for e.g.
>
> 3
>
> 1.523
>
> 1 2/3
>
>
>
> Below's my grammar with C# actions, and I get
>
> "Decision can match input such as "INT SLASH INT" using multiple
> alternatives" in Antlrworks.
>
>
>
> Thanks for your help!!
>
> Sven
>
>
>
> //
>
> //Trouble Grammar
>
> //
>
> number returns [double n]
>
>                 :
>
>                 (INT {$n = (double)int.Parse($INT.text);}) (f = fraction
{$n
> += f;})? |
>
>                 f = fraction {$n = f;} |
>
>                 AFLOAT {$n = double.Parse($AFLOAT.text);};
>
>
>
> fraction  returns [double f]          :
>
>                 i1=INT SLASH i2=INT {$f = (double)int.Parse($i1.text) /
> (double)int.Parse($i2.text);};
>
>
>
> AFLOAT                :               INT DOT INT?;
>
>
>
> INT         :               '0'..'9'+;
>
>
>
> SLASH   :               '/';
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
>
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>



From robert.soule at gmail.com  Mon Nov  3 14:17:51 2008
From: robert.soule at gmail.com (Robert Soule)
Date: Mon, 3 Nov 2008 17:17:51 -0500
Subject: [antlr-interest] lexer problem
In-Reply-To: <490f58c4.0a0bca0a.070d.66a0SMTPIN_ADDED@mx.google.com>
References: <d1316fd70810311407r176180a5sef9cc21a3795cef2@mail.gmail.com>
	<490bc18b.050bca0a.252b.ffff8d4eSMTPIN_ADDED@mx.google.com>
	<d1316fd70811030759l6eccd4eah7399f042140a1e09@mail.gmail.com>
	<490f58c4.0a0bca0a.070d.66a0SMTPIN_ADDED@mx.google.com>
Message-ID: <d1316fd70811031417j22665bf2w1fe448f9404717af@mail.gmail.com>

Thank you! My problem was that I was testing the solution with the
interpreter.

thanks again for your help,
Robert

On Mon, Nov 3, 2008 at 3:00 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 04:59 4/11/2008, Robert Soule wrote:
>>start
>>       : LSQUARE AB RSQUARE
>>       | A
>>       ;
>>AB     :       ('a'|'b')+;
>>
>>fragment A: '[a]';
>>LSQUARE
>> :  (A) => A { $type = A; }
>> |  '['
>> ;
>>
>>RSQUARE        :       ']';
>>
>>
>>When I test with inputs "[ba]" I pass, but "[ab]" fails.
>
> It works for me (ANTLR 3.0.1).  You are using a real compiled parser,
> though, right (or ANTLRworks' debugger)?  Not the interpreter?  Because the
> interpreter doesn't execute predicates (so it almost never works properly).
>
> If I change the start rule given above to this:
>
> start : (LSQUARE AB RSQUARE | A)+ ;
>
> then it'll successfully match the input "[ba][a][ab]".
>
>

From nimbusob at gmail.com  Mon Nov  3 18:08:05 2008
From: nimbusob at gmail.com (Hwan Jo)
Date: Tue, 4 Nov 2008 11:08:05 +0900
Subject: [antlr-interest] How to build an AST with 'ANSI C grammar for ANTLR
	v3'?
Message-ID: <6b783e320811031808m66587f7dnaa530db04cfe5dcb@mail.gmail.com>

    I am afraid that this question seems stupid; however anyone
concerned, please give me a solution for this. Spent 3 weeks for this
problem by myself and found no exit yet.

    I have downloaded a grammar file from grammars section in ANTLRv3
official homepage. Unfortunately, there are some problems. At first,
the parser reports 'no viable alternative at input <EOF>' error in
many decent C source files(tested 30 sources) and seems not parse
source files any further.

    I have found some solutions in mailing list; however it is a
problem too. Should I modify all grammar definition with EOF! ending
condition? Author of this grammar file commented out that he had
tested a source file with 3500 lines, but the grammar file does not
works for my source files which are compiled normally(without any
WARNINGS in Microsoft VC and GCC).

    The another problem is 'how can I build an AST tree for any ANSI C
source files with this grammar file?'. Googled about it already, still
have no clues. There are nice examples in ANTLR wiki site and tried
some, (like Heterogeneous tree construction example in
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction#Treeconstruction-heterogeneous)
but it did not helped me much. What should I do for my goal? Are there
any useful examples -even failure attempts- for this? What thread or
article should I read for? (I already put output=AST; option in
options section in the grammar file)

    My testing environment is

    Microsoft windows XP
    ANTLR Version 3.1.1(Latest)
    'ANSI C grammar for ANTLR v3'
    Java SE SDK 1.6.1
    Eclipse europa
    and target language is Java.



    Thank you for reading my thread.
    Regards,

    Francesco Jo

From zirrus at gmail.com  Tue Nov  4 02:37:10 2008
From: zirrus at gmail.com (=?ISO-8859-1?Q?Javier_Luis_C=E1novas_Izquierdo?=)
Date: Tue, 4 Nov 2008 11:37:10 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <490F1ED2.1040002@gmx.de>
References: <45c28e3e0810310336s4c046fd2veb7029cbce3e55e8@mail.gmail.com>
	<490AEB7A.5000808@gmx.de>
	<45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
	<490F1ED2.1040002@gmx.de>
Message-ID: <45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>

Hi again!

I have located the problem: The operative system. In Windows (under
Eclipse platform or under MSDOS) it fails. Now, I am using a linux
system and it works. I do not understand the real reason but I prefer
to be able to generate the parser.

Can the operative system be the problem? It is very odd, isn't it? It
is important to note that I am using the ANT task to execute the ANTLR
Tool in Windows, maybe the problem is that. I do not know.

Anyway, thanks for all!

Regards

2008/11/3 Johannes Luber <jaluber at gmx.de>:
> Javier Luis C?novas Izquierdo schrieb:
>> Hi Johannes, thanks for your fast response.
>>
>> Maybe I have not explined the problem correctly, sorry. I have just
>> proved that changes.
>>
>> I have specified the parameter for the JVM for increasing the memory
>> limit of the JVM. Actually, it is "-Xms1024m -Xmx1024m" (will it need
>> more? really?) and the options section does not contain the line which
>> specifies the output language (it only contains the output and k
>> options).
>>
>> I did not check that the grammar does not contain C# code. However, I
>> suppose that the parser process generation should not depends on the
>> actions included by the user. The problem should appear once the
>> parser is generated, is it true?. Anyway I have just checked the
>> grammar and I have cleaned it to remove the C# actions. The problem
>> keeps on.
>>
>> I have tested the grammar with antlr 3.0.1 and 3.1.1 and both fail. I
>> think that there should be some wrong (or maybe there is a problem
>> with the antlr parser tool). I attach the grammar that I am using and
>> the trace of the last execution.
>>
>> Thanks!
>
> Sorry for the delay. I've tested it myself and I can compile just fine
> (although with some warnings). Could it be that you are doing the
> options order wrong? I use
>
> java -Xmx1024m -cp <paths to jars - use your own here> org.antlr.Tool
> PLSQL3.g
>
> Johannes
>
>>
>> 2008/10/31 Johannes Luber <jaluber at gmx.de>:
>>> Javier Luis C?novas Izquierdo schrieb:
>>>> Hi,
>>>>
>>>> I am working with ANTLRv3 and the Oracle PL/SQL grammar definition
>>>> which is located in the antlr grammar list webpage and whose author is
>>>> Andrey Kharitonkin. I need to enrich the grammar in order to create a
>>>> data structure of the parsed plsql text. However, I have a problem on
>>>> the first phase: I cannot generate the Java parser with ANTLR tool
>>>> from the grammar of the webpage.
>>>>
>>>> The grammar has activated the backtrack and memoize options and the k
>>>> value is *. When I try to generate the parser, I get a
>>>> "java.lang.OutOfMemoryError: Java heap space" (firstTrace.txt file
>>>> contains the stack trace of this situation). I have tried to
>>>> deactivate the backtrack and memoize options and to set the k value to
>>>> 1 (although it will cause warnings during the generation) and the
>>>> problem keeps on (secondTrace.txt file contains the stack trace of
>>>> this situation).
>>>>
>>>> I have changed the parameters of the JVM to increase the memory limit
>>>> of the virtual machine to 1gb and again, the problem goes on .
>>>> However, the memory charge of the java instance does not exceed 100mb.
>>>> I cannot understand it.
>>>>
>>>> I have to be doing some wrong because the grammar that I am using is
>>>> the same of the grammar list, I have not change anything. I have seen
>>>> that the grammar has the "language=CSharp" option. Could that be the
>>>> problem? Could you help me?
>>>>
>>>> Thanks
>>> You have two problems: The first is that you need to tell the Java VM to
>>> use more memory like "java -Xmx1024m ...". Adjust the number to your
>>> needs. The second problem is that the grammar has been developed with C#
>>> as the output language. Changing "CSharp" to "Java" (or removing that
>>> line) won't help entirely, as all actions are written in C#. You have to
>>> go trough them one by one and fix any incompatibilities.
>>>
>>> Johannes
>>>>
>>>>
>>>> ------------------------------------------------------------------------
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>
>>
>>
>> --
>> Javier Luis C?novas Izquierdo
>> http://zirrus.es
>> zirrus at gmail.com
>>
>
>



-- 
Javier Luis C?novas Izquierdo
http://zirrus.es
zirrus at gmail.com

From atlan at gmx.li  Tue Nov  4 07:03:33 2008
From: atlan at gmx.li (Marc Bischof)
Date: Tue, 4 Nov 2008 16:03:33 +0100
Subject: [antlr-interest] change ANTLRs (generated) grammarFileName?
Message-ID: <200811041603.33673.atlan@gmx.li>

Hej List,

i have a question to ANTLRs grammar file name.
(i use antlr 3.1b2 with antlrwork1.2b5)

Within my generated source code, the complete source path is generated as 
shown below.

a) as comments spread over the file
>//$ANTLR3.1b2 /home/bischomc/studienarbeit/workspace/BPELscript/src/iaas/bpelscript/antlr/BPELscriptWalker.g 
2008-11-04 14:48:57
b) as hard coded grammarFileName
>  public String getGrammarFileName() { 
return "/home/bischomc/studienarbeit/workspace/BPELscript/src/iaas/bpelscript/antlr/BPELscriptWalker.g"; }

Now i want to share the code and i'am trying to avoid this absolute 
representation.

Is it possible to set this name (and the comment-name) by a grammar or 
antlrworks option?
Or have this be done manually?

I found nothing about this when searching in the reference or other papers. 
(the homepage is currently down)

Cheers,
	Marc

From robert at rvaessen.com  Tue Nov  4 07:38:31 2008
From: robert at rvaessen.com (Robert Vaessen)
Date: Tue, 04 Nov 2008 10:38:31 -0500
Subject: [antlr-interest] IDE Plugins
Message-ID: <49106C77.6070706@rvaessen.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081104/c9cfbd4d/attachment.html 

From zirrus at gmail.com  Wed Nov  5 01:27:28 2008
From: zirrus at gmail.com (=?ISO-8859-1?Q?Javier_Luis_C=E1novas_Izquierdo?=)
Date: Wed, 5 Nov 2008 10:27:28 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>
References: <45c28e3e0810310336s4c046fd2veb7029cbce3e55e8@mail.gmail.com>
	<490AEB7A.5000808@gmx.de>
	<45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
	<490F1ED2.1040002@gmx.de>
	<45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>
Message-ID: <45c28e3e0811050127x41113a7cgfd099222ccbf964f@mail.gmail.com>

Hi,

I have been testing the different situations to generate the parser
with the ANTLR tool in Windows and in Linux. The problem is the ant
task for ANTLR. It seems that the memory is limited by the ant
environment, I do not know.

The solution is to generate the parser in a "traditional way" (default
way). You have to use the java command and to execute the
org.antlr.Tool class. It works in Windows and in Linux.

Regards!

2008/11/4 Javier Luis C?novas Izquierdo <zirrus at gmail.com>:
> Hi again!
>
> I have located the problem: The operative system. In Windows (under
> Eclipse platform or under MSDOS) it fails. Now, I am using a linux
> system and it works. I do not understand the real reason but I prefer
> to be able to generate the parser.
>
> Can the operative system be the problem? It is very odd, isn't it? It
> is important to note that I am using the ANT task to execute the ANTLR
> Tool in Windows, maybe the problem is that. I do not know.
>
> Anyway, thanks for all!
>
> Regards
>
> 2008/11/3 Johannes Luber <jaluber at gmx.de>:
>> Javier Luis C?novas Izquierdo schrieb:
>>> Hi Johannes, thanks for your fast response.
>>>
>>> Maybe I have not explined the problem correctly, sorry. I have just
>>> proved that changes.
>>>
>>> I have specified the parameter for the JVM for increasing the memory
>>> limit of the JVM. Actually, it is "-Xms1024m -Xmx1024m" (will it need
>>> more? really?) and the options section does not contain the line which
>>> specifies the output language (it only contains the output and k
>>> options).
>>>
>>> I did not check that the grammar does not contain C# code. However, I
>>> suppose that the parser process generation should not depends on the
>>> actions included by the user. The problem should appear once the
>>> parser is generated, is it true?. Anyway I have just checked the
>>> grammar and I have cleaned it to remove the C# actions. The problem
>>> keeps on.
>>>
>>> I have tested the grammar with antlr 3.0.1 and 3.1.1 and both fail. I
>>> think that there should be some wrong (or maybe there is a problem
>>> with the antlr parser tool). I attach the grammar that I am using and
>>> the trace of the last execution.
>>>
>>> Thanks!
>>
>> Sorry for the delay. I've tested it myself and I can compile just fine
>> (although with some warnings). Could it be that you are doing the
>> options order wrong? I use
>>
>> java -Xmx1024m -cp <paths to jars - use your own here> org.antlr.Tool
>> PLSQL3.g
>>
>> Johannes
>>
>>>
>>> 2008/10/31 Johannes Luber <jaluber at gmx.de>:
>>>> Javier Luis C?novas Izquierdo schrieb:
>>>>> Hi,
>>>>>
>>>>> I am working with ANTLRv3 and the Oracle PL/SQL grammar definition
>>>>> which is located in the antlr grammar list webpage and whose author is
>>>>> Andrey Kharitonkin. I need to enrich the grammar in order to create a
>>>>> data structure of the parsed plsql text. However, I have a problem on
>>>>> the first phase: I cannot generate the Java parser with ANTLR tool
>>>>> from the grammar of the webpage.
>>>>>
>>>>> The grammar has activated the backtrack and memoize options and the k
>>>>> value is *. When I try to generate the parser, I get a
>>>>> "java.lang.OutOfMemoryError: Java heap space" (firstTrace.txt file
>>>>> contains the stack trace of this situation). I have tried to
>>>>> deactivate the backtrack and memoize options and to set the k value to
>>>>> 1 (although it will cause warnings during the generation) and the
>>>>> problem keeps on (secondTrace.txt file contains the stack trace of
>>>>> this situation).
>>>>>
>>>>> I have changed the parameters of the JVM to increase the memory limit
>>>>> of the virtual machine to 1gb and again, the problem goes on .
>>>>> However, the memory charge of the java instance does not exceed 100mb.
>>>>> I cannot understand it.
>>>>>
>>>>> I have to be doing some wrong because the grammar that I am using is
>>>>> the same of the grammar list, I have not change anything. I have seen
>>>>> that the grammar has the "language=CSharp" option. Could that be the
>>>>> problem? Could you help me?
>>>>>
>>>>> Thanks
>>>> You have two problems: The first is that you need to tell the Java VM to
>>>> use more memory like "java -Xmx1024m ...". Adjust the number to your
>>>> needs. The second problem is that the grammar has been developed with C#
>>>> as the output language. Changing "CSharp" to "Java" (or removing that
>>>> line) won't help entirely, as all actions are written in C#. You have to
>>>> go trough them one by one and fix any incompatibilities.
>>>>
>>>> Johannes
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>>
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>
>>>
>>>
>>> --
>>> Javier Luis C?novas Izquierdo
>>> http://zirrus.es
>>> zirrus at gmail.com
>>>
>>
>>
>
>
>
> --
> Javier Luis C?novas Izquierdo
> http://zirrus.es
> zirrus at gmail.com
>



-- 
Javier Luis C?novas Izquierdo
http://zirrus.es
zirrus at gmail.com

From J.Kraaijeveld at Askesis.nl  Wed Nov  5 04:59:10 2008
From: J.Kraaijeveld at Askesis.nl (Joost Kraaijeveld)
Date: Wed, 05 Nov 2008 13:59:10 +0100
Subject: [antlr-interest] Building Antlr 3.1.1 c-runtime with MinGW?
Message-ID: <1225889950.11046.118.camel@panoramix.askesis.nl>

Hi,

Is it possible to actually compile the c-runtime using MinGW? 

I get lots of errors that look alike, the first ones being:

make  all-am
make[1]: Entering directory `/d/src/libantlr3c-3.1.1'
/bin/sh ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -Iinclude -Iinclude    -m32  -O2  -Wall -MT antlr3baserecognizer.lo -MD -MP -MF .deps/antlr3baserecognizer.Tpo -c -o antlr3baserecognizer.lo `test -f 'src/antlr3baserecognizer.c' || echo './'`src/antlr3baserecognizer.c
 gcc -DHAVE_CONFIG_H -I. -Iinclude -Iinclude -m32 -O2 -Wall -MT antlr3baserecognizer.lo -MD -MP -MF .deps/antlr3baserecognizer.Tpo -c src/antlr3baserecognizer.c  -DDLL_EXPORT -DPIC -o .libs/antlr3baserecognizer.o
In file included from include/antlr3baserecognizer.h:10,
                 from src/antlr3baserecognizer.c:9:
include/antlr3defs.h:132: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'ANTLR3_BOOLEAN'
include/antlr3defs.h:178: warning: ignoring #pragma warning 
In file included from include/antlr3defs.h:388,
                 from include/antlr3baserecognizer.h:10,
                 from src/antlr3baserecognizer.c:9:
include/antlr3convertutf.h:158: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'isLegalUTF8Sequence'
In file included from include/antlr3baserecognizer.h:10,
                 from src/antlr3baserecognizer.c:9:
include/antlr3defs.h:487: error: expected declaration specifiers or '...' before 'ANTLR3_BOOLEAN'
In file included from include/antlr3baserecognizer.h:11,
                 from src/antlr3baserecognizer.c:9:
include/antlr3exception.h:108: error: expected specifier-qualifier-list before 'ANTLR3_BOOLEAN'
In file included from include/antlr3string.h:11,
                 from include/antlr3input.h:13,
                 from include/antlr3baserecognizer.h:12,
                 from src/antlr3baserecognizer.c:9:


TIA

-- 
Groeten,

Joost Kraaijeveld
Askesis B.V.
Molukkenstraat 14
6524NB Nijmegen
tel: 024-3888063 / 06-51855277
fax: 024-3608416
web: www.askesis.nl



From Vitaliy at dbsophic.com  Wed Nov  5 07:55:00 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Wed, 5 Nov 2008 17:55:00 +0200
Subject: [antlr-interest] Failing upon illigal input termination
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ.com>

Hi,



I would like Antlr to fail upon any error, instead of trying to recover.

I've managed to do this for almost all types of errors, following the directives in the reference,

but for some reason if there is an illegal input termination, Antlr won't report an error for it.



That is, If we've got the input:

LegalStatement1,

LegalStatement2,

...

LegalStatementN,

IllegalStatement,



Antlr would stop on LegalStatementN,

Instead of reporting an error for IllegalStatement.



What can I do to achieve this behavior?



I would really appreciate any help or response,

Vitaliy



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081105/498053c9/attachment.html 

From antlr at cfraizer.com  Wed Nov  5 09:25:51 2008
From: antlr at cfraizer.com (Colin Fraizer)
Date: Wed, 5 Nov 2008 12:25:51 -0500
Subject: [antlr-interest] C Target Question: compiling under C++
Message-ID: <000301c93f6b$8d4b4260$a7e1c720$@com>

I apologize for the newbie question, but I'm somewhat new to ANTLR.

 

I want to build a parser for a domain-specific language. I would like to use
C++ for my implementation and understood that the C target would generate
code that compiles under C++, but I'm running into trouble. (Perhaps I've
just misunderstood. If so, I'm sorry.)

 

When I select these options:

{

                language=C;

                output=AST;

                backtrack=true;

                ASTLabelType=pANTLR3_BASE_TREE;

}

 

ANLTR generates a parser which contains lines like this:

                                        root_1 =
(pANTLR3_BASE_TREE)(ADAPTOR->becomeRootToken(ADAPTOR,
stream_oper->nextToken(stream_oper), root_1));

 

but my C++ compiler complains that the return type of stream_oper->nextToken
is "void *", which cannot be converted to 'pANTLR3_COMMON_TOKEN' without a
cast.

 

Any suggestions on how to avoid this? (Or is the answer: just use C?)

 

Thanks in advance,

Colin Fraizer

Indianapolis, IN

antlr at cfraizer.com // (yeah, I use a separate mailbox for this mailing list.
I'm not claiming to be "Mr. Antlr" or anything. 8-)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081105/317f8672/attachment.html 

From parrt at cs.usfca.edu  Wed Nov  5 11:14:49 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 5 Nov 2008 11:14:49 -0800
Subject: [antlr-interest] mail test; is this thing on?
Message-ID: <9E4C0167-AA2A-4DE4-B3CC-8FFE00D5F54E@cs.usfca.edu>

T

From antlr at cfraizer.com  Wed Nov  5 12:34:31 2008
From: antlr at cfraizer.com (Colin Fraizer)
Date: Wed, 5 Nov 2008 15:34:31 -0500
Subject: [antlr-interest] C Target Question: compiling under C++
Message-ID: <007801c93f85$ea54dc40$befe94c0$@com>

I apologize for the newbie question, but I'm somewhat new to ANTLR.

 

I want to build a parser for a domain-specific language. I would like to use
C++ for my implementation and understood that the C target would generate
code that compiles under C++, but I'm running into trouble. (Perhaps I've
just misunderstood. If so, I'm sorry.)

 

When I select these options:

{

                language=C;

                output=AST;

                backtrack=true;

                ASTLabelType=pANTLR3_BASE_TREE;

}

 

ANLTR generates a parser which contains lines like this:

                                        root_1 =
(pANTLR3_BASE_TREE)(ADAPTOR->becomeRootToken(ADAPTOR,
stream_oper->nextToken(stream_oper), root_1));

 

but my C++ compiler complains that the return type of stream_oper->nextToken
is "void *", which cannot be converted to 'pANTLR3_COMMON_TOKEN' without a
cast.

 

Any suggestions on how to avoid this? (Or is the answer: just use C?)

 

Thanks in advance,

Colin Fraizer

Indianapolis, IN

antlr at cfraizer.com // (yeah, I use a separate mailbox for this mailing list.
I'm not claiming to be "Mr. Antlr" or anything. 8-)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081105/1fe37589/attachment.html 

From gerald at certiv.net  Wed Nov  5 13:28:46 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 05 Nov 2008 13:28:46 -0800
Subject: [antlr-interest] IDE Plugins
In-Reply-To: <49106C77.6070706@rvaessen.com>
References: <49106C77.6070706@rvaessen.com>
Message-ID: <200811052129.mA5LSxSi009689@zinc.newtechlaw.com>

At 07:38 AM 11/4/2008, Robert Vaessen wrote:
>    * Will these plugins provide syntax highlighting, 
> auto-completion, etc. for java code snippets in grammar files?
If you are looking for a JDT-level experience, no.  At least not 
currently.  Neither Eclipse plug-in supports full JDT-style 
refactoring of java code or full java syntax highlighting.  Not too 
surprising, since Antlr is not limited to java actions.

Better to minimize the amount of java code in the grammar file by 
having the Antlr generated parser subclass the action code 
implementation -- removes visual clutter from the grammar and 
separates specification from implementation.

Still, both plug-ins do provide Template support for Antlr syntax and 
action code completion.  Both come with a fairly complete set of 
Antlr templates and allow definition of custom Antlr and action code 
templates  -- the AntlrDT plugin automatically includes the JDT templates.

Both have full syntax highlighting Antlr editors and provide 
incremental builders and grammar launchers.  AntlrIDEv3 has grammar 
debug support.  AntlrDT has a full syntax highlighting StringTemplate editor.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081105/c60ab36e/attachment.html 

From gerald at certiv.net  Wed Nov  5 13:28:46 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 05 Nov 2008 13:28:46 -0800
Subject: [antlr-interest] IDE Plugins
In-Reply-To: <49106C77.6070706@rvaessen.com>
References: <49106C77.6070706@rvaessen.com>
Message-ID: <200811052129.mA5LSxSi009689@zinc.newtechlaw.com>

At 07:38 AM 11/4/2008, Robert Vaessen wrote:
>    * Will these plugins provide syntax highlighting, 
> auto-completion, etc. for java code snippets in grammar files?
If you are looking for a JDT-level experience, no.  At least not 
currently.  Neither Eclipse plug-in supports full JDT-style 
refactoring of java code or full java syntax highlighting.  Not too 
surprising, since Antlr is not limited to java actions.

Better to minimize the amount of java code in the grammar file by 
having the Antlr generated parser subclass the action code 
implementation -- removes visual clutter from the grammar and 
separates specification from implementation.

Still, both plug-ins do provide Template support for Antlr syntax and 
action code completion.  Both come with a fairly complete set of 
Antlr templates and allow definition of custom Antlr and action code 
templates  -- the AntlrDT plugin automatically includes the JDT templates.

Both have full syntax highlighting Antlr editors and provide 
incremental builders and grammar launchers.  AntlrIDEv3 has grammar 
debug support.  AntlrDT has a full syntax highlighting StringTemplate editor.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081105/c60ab36e/attachment-0001.html 

From jimi at temporal-wave.com  Wed Nov  5 16:32:04 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 05 Nov 2008 16:32:04 -0800
Subject: [antlr-interest] Building Antlr 3.1.1 c-runtime with MinGW?
In-Reply-To: <1225889950.11046.118.camel@panoramix.askesis.nl>
References: <1225889950.11046.118.camel@panoramix.askesis.nl>
Message-ID: <1225931524.4523.633.camel@jimi.temporal-wave.com>

On Wed, 2008-11-05 at 13:59 +0100, Joost Kraaijeveld wrote:
> Hi,
> 
> Is it possible to actually compile the c-runtime using MinGW? 

Should be, but someone reported that they had to change the typedef
ANTLR3_BOOLEAN.

Personally, I would compile it with VS, then just link to the libraries
with MingW. The fix to the typedef is on my list though.

Jim

> 
> I get lots of errors that look alike, the first ones being:
> 
> make  all-am
> make[1]: Entering directory `/d/src/libantlr3c-3.1.1'
> /bin/sh ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -Iinclude -Iinclude    -m32  -O2  -Wall -MT antlr3baserecognizer.lo -MD -MP -MF .deps/antlr3baserecognizer.Tpo -c -o antlr3baserecognizer.lo `test -f 'src/antlr3baserecognizer.c' || echo './'`src/antlr3baserecognizer.c
>  gcc -DHAVE_CONFIG_H -I. -Iinclude -Iinclude -m32 -O2 -Wall -MT antlr3baserecognizer.lo -MD -MP -MF .deps/antlr3baserecognizer.Tpo -c src/antlr3baserecognizer.c  -DDLL_EXPORT -DPIC -o .libs/antlr3baserecognizer.o
> In file included from include/antlr3baserecognizer.h:10,
>                  from src/antlr3baserecognizer.c:9:
> include/antlr3defs.h:132: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'ANTLR3_BOOLEAN'
> include/antlr3defs.h:178: warning: ignoring #pragma warning 
> In file included from include/antlr3defs.h:388,
>                  from include/antlr3baserecognizer.h:10,
>                  from src/antlr3baserecognizer.c:9:
> include/antlr3convertutf.h:158: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'isLegalUTF8Sequence'
> In file included from include/antlr3baserecognizer.h:10,
>                  from src/antlr3baserecognizer.c:9:
> include/antlr3defs.h:487: error: expected declaration specifiers or '...' before 'ANTLR3_BOOLEAN'
> In file included from include/antlr3baserecognizer.h:11,
>                  from src/antlr3baserecognizer.c:9:
> include/antlr3exception.h:108: error: expected specifier-qualifier-list before 'ANTLR3_BOOLEAN'
> In file included from include/antlr3string.h:11,
>                  from include/antlr3input.h:13,
>                  from include/antlr3baserecognizer.h:12,
>                  from src/antlr3baserecognizer.c:9:
> 
> 
> TIA
> 


From jimi at temporal-wave.com  Wed Nov  5 16:33:34 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 05 Nov 2008 16:33:34 -0800
Subject: [antlr-interest] C Target Question: compiling under C++
In-Reply-To: <000301c93f6b$8d4b4260$a7e1c720$@com>
References: <000301c93f6b$8d4b4260$a7e1c720$@com>
Message-ID: <1225931614.4523.634.camel@jimi.temporal-wave.com>

On Wed, 2008-11-05 at 12:25 -0500, Colin Fraizer wrote:
> I apologize for the newbie question, but I?m somewhat new to ANTLR.
> 

This should just work, but perhaps there is a missing cast that you are
the first to discover. Are you using ANTLR 3.1.1? If you are then let me
have a piece of ANTLR grammar that shows this problem, and I will fix
it :-)

Jim
>  
> 
> I want to build a parser for a domain-specific language. I would like
> to use C++ for my implementation and understood that the C target
> would generate code that compiles under C++, but I?m running into
> trouble. (Perhaps I?ve just misunderstood. If so, I?m sorry.)
> 
>  
> 
> When I select these options:
> 
> {
> 
>                 language=C;
> 
>                 output=AST;
> 
>                 backtrack=true;
> 
>                 ASTLabelType=pANTLR3_BASE_TREE;
> 
> }
> 
>  
> 
> ANLTR generates a parser which contains lines like this:
> 
>                                         root_1 =
> (pANTLR3_BASE_TREE)(ADAPTOR->becomeRootToken(ADAPTOR,
> stream_oper->nextToken(stream_oper), root_1));
> 
>  
> 
> but my C++ compiler complains that the return type of
> stream_oper->nextToken is ?void *?, which cannot be converted to
> ?pANTLR3_COMMON_TOKEN? without a cast.
> 
>  
> 
> Any suggestions on how to avoid this? (Or is the answer: just use C?)
> 
>  
> 
> Thanks in advance,
> 
> Colin Fraizer
> 
> Indianapolis, IN
> 
> antlr at cfraizer.com // (yeah, I use a separate mailbox for this mailing
> list. I?m not claiming to be ?Mr. Antlr? or anything. 8-)
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Wed Nov  5 16:41:22 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 05 Nov 2008 16:41:22 -0800
Subject: [antlr-interest] Problem generating the Java parser for Oracle
 PL/SQL grammar
In-Reply-To: <45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>
References: <45c28e3e0810310336s4c046fd2veb7029cbce3e55e8@mail.gmail.com>
	<490AEB7A.5000808@gmx.de>
	<45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
	<490F1ED2.1040002@gmx.de>
	<45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>
Message-ID: <1225932082.4523.639.camel@jimi.temporal-wave.com>

On Tue, 2008-11-04 at 11:37 +0100, Javier Luis C?novas Izquierdo wrote:
> Hi again!
> 
> I have located the problem: The operative system. In Windows (under
> Eclipse platform or under MSDOS) it fails. Now, I am using a linux
> system and it works. I do not understand the real reason but I prefer
> to be able to generate the parser.
> 
> Can the operative system be the problem? It is very odd, isn't it? It
> is important to note that I am using the ANT task to execute the ANTLR
> Tool in Windows, maybe the problem is that. I do not know.

Did you change the ant task option to specify the VM memory limits? You
need to set that explicitly.

Jim



From iar73 at freemail.hu  Wed Nov  5 17:18:05 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Thu, 6 Nov 2008 02:18:05 +0100 (CET)
Subject: [antlr-interest] My parsing brackets logic fails somewhere
Message-ID: <freemail.20081006021805.81767@fm20.freemail.hu>

Hello,

I'd like to extract definitions from free text for further processing by another grammar. All I care about are the definition sections. I consider all lines containing '::=' as the beginning of a definition. A definition section ends at either the end of the line, or if there is an opening bracket on the first line, at the outermost closing bracket (and might span multiple lines).

Please find my grammar attempt at the bottom.

My bracketed rule does not work. The {p>0}? conditions always fail, and I don't have a clue why. This should be able to track the recursion level, but it does not work.

What am I getting wrong here?


Thanks,
  Andr?s

--- grammar file start ---

grammar specreader;

options { backtrack = true; }

@members {
    int p;
}

start: {p = 0; System.out.println("@line "+p);} line*;
                
line : singleLineDef | multiLineDef | anyline;

anyline : nonlineends LINEEND ;

singleLineDef : nondefines DEFINE nonlbrackets LINEEND ;

multiLineDef : nondefines DEFINE nonlbrackets bracketed nonlineends LINEEND ;

bracketed :  LBRACKET {++p; System.out.println("@bracketed "+p);}
             nonbrackets
             bracketed* {System.out.println("@bracketed after embedded "+p);}
             {p>0}? => RBRACKET {--p; System.out.println("@bracketed after RBRACKET "+p);}
             {p>0}? => nonbrackets ;

nonlbrackets : (~LBRACKET)*;

nonbrackets : (~(LBRACKET|RBRACKET))*;

nonlineends : (~('\n'|'\r'))*;

nondefines : (~DEFINE)*;


DEFINE : '::=';

LINEEND : '\n'|'\r'|EOF;

LBRACKET : '{';

RBRACKET : '}';

ANY : .;

--- grammar file end ---

From antlr at mirality.co.nz  Wed Nov  5 23:41:22 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 06 Nov 2008 20:41:22 +1300
Subject: [antlr-interest] Failing upon illigal input termination
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ .com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ.com>
Message-ID: <20081106074132.DD82E11EC81@www.antlr.org>

At 04:55 6/11/2008, Vitaliy wrote:
>That is, If we?ve got the input:
>LegalStatement1,
>LegalStatement2,
>

>LegalStatementN,
>IllegalStatement,
>
>Antlr would stop on LegalStatementN,
>Instead of reporting an error for IllegalStatement.
>
>What can I do to achieve this behavior?

Add EOF to the end of your top-level parser rule.


From laurent.caillette at gmail.com  Thu Nov  6 03:55:06 2008
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Thu, 6 Nov 2008 12:55:06 +0100
Subject: [antlr-interest] Java Grammar and how to use it to create a
	script language to my app
In-Reply-To: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>
References: <277aaded0810301825x28112f35ue7542751bf70c282@mail.gmail.com>
Message-ID: <3b7c64070811060355p5f117f80l91fb2822b2aee3c9@mail.gmail.com>

Another aspect to consider is security / safety. As users upload some
kind of executable code, he / she might do illegal stuff on the server
like accessing to the filesystem or gaining more access rights to
attack another server. If your language allows something like a loop
or resource allocation, unchecked CPU / memory consumption may quickly
lead to a Denial Of Service. This could be caused even by benevolent
users.

I've already developed a small formula language for generating
server-side reports. By the way it was based on ANTLR and we started
from the Java grammar but there was nothing like a loop, it was all
declarative stuff. From the prototype to a polished tool with nice
error display and basic types, it was surprisingly time-consuming.

So my advice is to head toward an existing language with built-in
security features. Rhino takes the security aspect in account, while
it doesn't seem to go a lot further than Java's SecurityManager.
https://developer.mozilla.org/en/Rhino_Overview#Security

c.

On Fri, Oct 31, 2008 at 2:25 AM, me tk82c <me.tk82c at gmail.com> wrote:
> Hello Everybody!
>
> I'm trying to create a new language to allow my users to write small scripts
> in our web app.
>
> There is any short way to do that? Something like, download the existent
> java grammar from ANTLR and implement the specific functions that users will
> use in my app with this "Java" version.
>
> Please, help!
>
> tk
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From zirrus at gmail.com  Thu Nov  6 04:09:26 2008
From: zirrus at gmail.com (=?ISO-8859-1?Q?Javier_Luis_C=E1novas_Izquierdo?=)
Date: Thu, 6 Nov 2008 13:09:26 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <1225932082.4523.639.camel@jimi.temporal-wave.com>
References: <45c28e3e0810310336s4c046fd2veb7029cbce3e55e8@mail.gmail.com>
	<490AEB7A.5000808@gmx.de>
	<45c28e3e0810310518u6f99c234m649cdf94b0a4712d@mail.gmail.com>
	<490F1ED2.1040002@gmx.de>
	<45c28e3e0811040237h7ca832e4kd623abf0269d045b@mail.gmail.com>
	<1225932082.4523.639.camel@jimi.temporal-wave.com>
Message-ID: <45c28e3e0811060409r5a9b54acqf7ff58d4645a6ee5@mail.gmail.com>

Hi Jim!

I did not know that detail. I have changed the antlr ant task
definition adding "<jvmarg value="-Xmx1024m"/>" and it has worked.

The finally I understand the problem. Thanks!!

Kind regards

2008/11/6 Jim Idle <jimi at temporal-wave.com>:
> On Tue, 2008-11-04 at 11:37 +0100, Javier Luis C?novas Izquierdo wrote:
>> Hi again!
>>
>> I have located the problem: The operative system. In Windows (under
>> Eclipse platform or under MSDOS) it fails. Now, I am using a linux
>> system and it works. I do not understand the real reason but I prefer
>> to be able to generate the parser.
>>
>> Can the operative system be the problem? It is very odd, isn't it? It
>> is important to note that I am using the ANT task to execute the ANTLR
>> Tool in Windows, maybe the problem is that. I do not know.
>
> Did you change the ant task option to specify the VM memory limits? You
> need to set that explicitly.
>
> Jim
>
>
>



-- 
Javier Luis C?novas Izquierdo
http://zirrus.es
zirrus at gmail.com

From shubha-s at hp.com  Thu Nov  6 04:52:02 2008
From: shubha-s at hp.com (S, Shubha)
Date: Thu, 6 Nov 2008 12:52:02 +0000
Subject: [antlr-interest] Parser Problem
Message-ID: <41E3B309B2D20848BC45131A224BA07446986591A4@GVW0440EXB.americas.hpqcorp.net>

Hi All,
I am using ANTLR for first time, so need ur help on an issue.

I downloaded a open source parser which uses ANTLR. This parser fails to parse a term which is infact valid one.
For ex: valid term is 'Protocols' but the parser is expecting only 'Protocol'.

I see that terms expected by parser is seen in a '*.g' file, if I modify in this, its not working as exepected.

Can anyone pls tel me where should I do the modification. Any file specific to ANTLR?

Thanks in advance!

From Vitaliy at dbsophic.com  Thu Nov  6 05:28:26 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Thu, 6 Nov 2008 15:28:26 +0200
Subject: [antlr-interest] Failing upon illigal input termination
In-Reply-To: <eb08982f-87cc-4abe-84c4-0580f4ce1a37@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ.com>
	<eb08982f-87cc-4abe-84c4-0580f4ce1a37@ex01.dbsophicHQ.com>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DDA@ex01.dbsophicHQ.com>

Gavin,

Thanks so much!!!
That did it!

Wasted so much time on this one..
Wonder why this is not the default behavior?

Anyway, Thanks again!!

Vitaliy

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz]
Sent: Thursday, November 06, 2008 09:41
To: Vitaliy; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Failing upon illigal input termination

At 04:55 6/11/2008, Vitaliy wrote:
>That is, If we've got the input:
>LegalStatement1,
>LegalStatement2,
>...
>LegalStatementN,
>IllegalStatement,
>
>Antlr would stop on LegalStatementN,
>Instead of reporting an error for IllegalStatement.
>
>What can I do to achieve this behavior?

Add EOF to the end of your top-level parser rule.






__________ Information from ESET NOD32 Antivirus, version of virus signature database 3589 (20081106) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From qwizv9b02 at sneakemail.com  Thu Nov  6 06:43:21 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Thu, 06 Nov 2008 15:43:21 +0100
Subject: [antlr-interest] =?utf-8?q?=E2=80=98Cannot_find_tokens_file?=
	=?utf-8?b?4oCZ?=
Message-ID: <geuvqa$56r$1@ger.gmane.org>

Hi,

I split up my grammar into three parts, inspired by

So now I have fsqLexer.g, fsqParser.g and fsqTreeParser.g.  The latter
complains that ?(3): cannot find tokens file
<unset-dir>/fsqParser.tokens?.  Indeed, there is no file
fsqParser.tokens.  fsqParser.g compiles fine, and even from the command
line, no tokens file is created.  What is the solution to this?

fsqTreeParser.g contains the following:

options {
  language = Java;
  ASTLabelType = CommonTree;
  tokenVocab = fsqParser;
}

fsqParser.g

options {
  language = Java;
  output = AST;
  tokenVocab = fsqLexer;
}

fsqLexer.java and fsqParser.java are successfully created,
fsqTreeParser.java is not.

Thanks for suggestions, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/62fb9de4/attachment.bin 

From Dennis.Benzinger at gmx.net  Thu Nov  6 07:36:02 2008
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Thu, 06 Nov 2008 16:36:02 +0100
Subject: [antlr-interest] Parser Problem
In-Reply-To: <41E3B309B2D20848BC45131A224BA07446986591A4@GVW0440EXB.americas.hpqcorp.net>
References: <41E3B309B2D20848BC45131A224BA07446986591A4@GVW0440EXB.americas.hpqcorp.net>
Message-ID: <49130EE2.5010903@gmx.net>

Am 06.11.2008 13:52, S, Shubha schrieb:
> Hi All,
> I am using ANTLR for first time, so need ur help on an issue.
> 
> I downloaded a open source parser which uses ANTLR. This parser fails to parse a term which is infact valid one.
> For ex: valid term is 'Protocols' but the parser is expecting only 'Protocol'.
> 
> I see that terms expected by parser is seen in a '*.g' file, if I modify in this, its not working as exepected.
> 
> Can anyone pls tel me where should I do the modification. Any file specific to ANTLR?
> [...]

ANTLR is not an interpreter for .g files. It's a kind of compiler for .g
files. ANTLR generates code out of them. So if you change something in a
.g file you have to execute ANTLR do generate the code and then compile
or run the new code.

HTH,
Dennis Benzinger

From dejas9000 at gmail.com  Thu Nov  6 08:20:41 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 6 Nov 2008 10:20:41 -0600
Subject: [antlr-interest] ANTLR not reporting error for malformed program
Message-ID: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>

I know I saw something about this on the ANTLR web site a while back, but I
can't find it now for the life of me.  I have some program text that does
not conform to my grammar.  If thought of as a long string, about the first
half of the string conforms to the cfg but then does something blatantly
wrong from a grammar standpoint.  When ANTLR processes the program it
consumes and parses the valid part of the program and then stops as if only
the first half of the program string was the entire program string.  I do
not see tokens pass by for the 2nd half of the malformed program (and as
consiquence, no error is generated).  Can someone point me to the part of
the web site that discusses this issue?

Thanks,
Matt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/00012b51/attachment.html 

From Vitaliy at dbsophic.com  Thu Nov  6 08:28:50 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Thu, 6 Nov 2008 18:28:50 +0200
Subject: [antlr-interest] ANTLR not reporting error for malformed program
In-Reply-To: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>
References: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DF3@ex01.dbsophicHQ.com>

Hi Matt,



Had exactly the same problem.

What you need to do is

"Add EOF to the end of your top-level parser rule.",

As Gavin had told me.



Gavin - thanks again!



Enjoy,

Vitaliy



From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dejas Ninethousand
Sent: Thursday, November 06, 2008 18:21
To: antlr-interest Interest
Subject: [antlr-interest] ANTLR not reporting error for malformed program



I know I saw something about this on the ANTLR web site a while back, but I can't find it now for the life of me.  I have some program text that does not conform to my grammar.  If thought of as a long string, about the first half of the string conforms to the cfg but then does something blatantly wrong from a grammar standpoint.  When ANTLR processes the program it consumes and parses the valid part of the program and then stops as if only the first half of the program string was the entire program string.  I do not see tokens pass by for the 2nd half of the malformed program (and as consiquence, no error is generated).  Can someone point me to the part of the web site that discusses this issue?

Thanks,
Matt



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________



The message was checked by ESET NOD32 Antivirus.



http://www.eset.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/17f20737/attachment.html 

From dejas9000 at gmail.com  Thu Nov  6 08:36:16 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 6 Nov 2008 10:36:16 -0600
Subject: [antlr-interest] ANTLR not reporting error for malformed program
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DF3@ex01.dbsophicHQ.com>
References: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DF3@ex01.dbsophicHQ.com>
Message-ID: <38a26f430811060836u4c754baate9d4ff386aeffe84@mail.gmail.com>

How do I express EOF in ANTLR?  When I add "EOF" to the production I can't
pass grammar check anymore:

program    :
    statement_list EOF -> statement_list PROGRAM
    |
    expression EOF ->  expression PROGRAM
    ;

-- Matt


On Thu, Nov 6, 2008 at 10:28 AM, Vitaliy <Vitaliy at dbsophic.com> wrote:

>  Hi Matt,
>
>
>
> Had exactly the same problem.
>
> What you need to do is
>
> "Add EOF to the end of your top-level parser rule.",
>
> As Gavin had told me.
>
>
>
> Gavin ? thanks again!
>
>
>
> Enjoy,
>
> Vitaliy
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Dejas Ninethousand
> *Sent:* Thursday, November 06, 2008 18:21
> *To:* antlr-interest Interest
> *Subject:* [antlr-interest] ANTLR not reporting error for malformed
> program
>
>
>
> I know I saw something about this on the ANTLR web site a while back, but I
> can't find it now for the life of me.  I have some program text that does
> not conform to my grammar.  If thought of as a long string, about the first
> half of the string conforms to the cfg but then does something blatantly
> wrong from a grammar standpoint.  When ANTLR processes the program it
> consumes and parses the valid part of the program and then stops as if only
> the first half of the program string was the entire program string.  I do
> not see tokens pass by for the 2nd half of the malformed program (and as
> consiquence, no error is generated).  Can someone point me to the part of
> the web site that discusses this issue?
>
> Thanks,
> Matt
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus
> signature database 3591 (20081106) __________
>
>
>
> The message was checked by ESET NOD32 Antivirus.
>
>
>
> http://www.eset.com
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus
> signature database 3591 (20081106) __________
>
> The message was checked by ESET NOD32 Antivirus.
>
> http://www.eset.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/4ade6d20/attachment.html 

From Vitaliy at dbsophic.com  Thu Nov  6 08:42:01 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Thu, 6 Nov 2008 18:42:01 +0200
Subject: [antlr-interest] ANTLR not reporting error for malformed program
In-Reply-To: <38a26f430811060836u4c754baate9d4ff386aeffe84@mail.gmail.com>
References: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DF3@ex01.dbsophicHQ.com>
	<38a26f430811060836u4c754baate9d4ff386aeffe84@mail.gmail.com>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DF4@ex01.dbsophicHQ.com>

Did you try:

superProgram
                :
                program
                EOF
;

program    :
    statement_list -> statement_list PROGRAM
    |
    expression ->  expression PROGRAM
    ;


From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dejas Ninethousand
Sent: Thursday, November 06, 2008 18:36
To: Vitaliy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR not reporting error for malformed program

How do I express EOF in ANTLR?  When I add "EOF" to the production I can't pass grammar check anymore:

program    :
    statement_list EOF -> statement_list PROGRAM
    |
    expression EOF ->  expression PROGRAM
    ;

-- Matt

On Thu, Nov 6, 2008 at 10:28 AM, Vitaliy <Vitaliy at dbsophic.com<mailto:Vitaliy at dbsophic.com>> wrote:

Hi Matt,



Had exactly the same problem.

What you need to do is

"Add EOF to the end of your top-level parser rule.",

As Gavin had told me.



Gavin - thanks again!



Enjoy,

Vitaliy



From: antlr-interest-bounces at antlr.org<mailto:antlr-interest-bounces at antlr.org> [mailto:antlr-interest-bounces at antlr.org<mailto:antlr-interest-bounces at antlr.org>] On Behalf Of Dejas Ninethousand
Sent: Thursday, November 06, 2008 18:21
To: antlr-interest Interest
Subject: [antlr-interest] ANTLR not reporting error for malformed program



I know I saw something about this on the ANTLR web site a while back, but I can't find it now for the life of me.  I have some program text that does not conform to my grammar.  If thought of as a long string, about the first half of the string conforms to the cfg but then does something blatantly wrong from a grammar standpoint.  When ANTLR processes the program it consumes and parses the valid part of the program and then stops as if only the first half of the program string was the entire program string.  I do not see tokens pass by for the 2nd half of the malformed program (and as consiquence, no error is generated).  Can someone point me to the part of the web site that discusses this issue?

Thanks,
Matt



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________



The message was checked by ESET NOD32 Antivirus.



http://www.eset.com


__________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________


The message was checked by ESET NOD32 Antivirus.


http://www.eset.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/388c52ca/attachment.html 

From juvvij at gmail.com  Thu Nov  6 09:48:32 2008
From: juvvij at gmail.com (Vamsi Juvvi)
Date: Thu, 6 Nov 2008 09:48:32 -0800
Subject: [antlr-interest] Antlr3 C runtime woes.
Message-ID: <c12e29d0811060948x14002656xcbd184744938072c@mail.gmail.com>

Hi all.

   I hope this gets scanned by jim or any other C runtime expert and I get
some advice.

   I had sent out an email containing a whole lot of text (in retrospect)
and probably created an overload for whoever read it. I am simplifying it
and adding some other problems I am facing.

  I am trying to write a replacement for the MSIDL compiler with a custom
simplified and customized syntax for my company's needs. I am using Antlr
3.1.1 with the C runtime. The problems started when I decided to carry some
comments over from the IDL file to the generated files. Thats when I lost a
few days tracking the following issues and figuring out workarounds.

  //-- Problem 1 -----------------
  In a rule (import_decl say), I want to have a validating predicate to
ensure that the rule starts on a line all by itself. The antlr book gave me
the impression that it can expressed thus.

      import_decl : IMPORT_DECL { $start.pos == 0 } ?

     This in the C code translates to

     if ( !(( ((pANTLR3_COMMON_TOKEN)retval).start.pos == 0 )) )

     Which fails as retval is the return type of the rule itself and cannot
be cast to a token. There is a minor bug with parens here and another one
with an untranslated pos token attribute. it should have been

     if ( !(( ((pANTLR3_COMMON_TOKEN)retval.start).charPosition == 0 )) )

     or

     if ( !((
((pANTLR3_COMMON_TOKEN)retval.start).getCharPositionInLine((pANTLR3_COMMON_TOKEN)retval.start)
== 0 )) )


  There is a workaround though. I can hack it to use the actual members in
the C runtime. I can replace the predicate with
   { retval.start->charPosition == 0 }?

  Is this what I am expected to be doing in the C runtime ? This looks more
like a bug to me (judging from the compile error) and not an unsupported
feature of antlr3 C runtime.

  //-- Problem 2---------------------
  Similar problems exist when I want to generate an imaginary token in my
parser initialized with a real token.

  tokens
   {
      INTERFACE_BLOCK; // imaginary token.
   }

  // The book indicates that the following should work.
  interface
    :^(INTERFACE_BLOCK[$interface.start] interface_decl
interface_body_line*)
    ;

 The C code generated however has two issues.
   It has the same problem as above where it tries to cast the rule retvalue
to pANTLR3_COMMON_TOKEN instead of casting the retval.start item.
   It uses ADAPTER->createTypeTokenText or ADAPTER->createTypeText instead
of ADAPTER->createTypeToken which is what I expect

 I am doing all of this just so I can encode the start or a rule (
INTERFACE_BLOCK[$start] is expected to copy the start token's data into the
INTERFACE_BLOCK token) so I can later start searching for comments on a
hidden channel.

  I worked around this by adding even more suspect C code and ended up
making the antlr grammar file lose some of it's declarative beauty. In my
parser I did this to work around.

interface
@after
{
    // Save the line-num/charPos of the first token to match in this
interface
    // rule to the members of our imaginary token.
    pANTLR3_COMMON_TOKEN pTok = retval.tree->getToken(retval.tree);
    if(pTok != 0)
    {
      pTok->line = retval.start->line;
      pTok->charPosition = retval.start->charPosition;
    }
}
    : interface_decl
        OPEN_BRACE
            interface_body_line*
        CLOSE_BRACE SEMI_COLON
    -> ^(INTERFACE_BLOCK interface_decl interface_body_line*)
    ;

  Is this related to the unsupported tokenReWrite feature documented in the
C runtime or a bug ?

  This makes me feel vaguely dirty. I will have an interresting time
explaining why these workarounds are neccesary. I have hyped antlr to the
point where any mention of bugs will make my boss cringe. I will just gloss
over all the C code telling him that its just the way it has to be done.

  //-- Problem 3 -----
  Finally armed with these workaround, I expected searching the token stream
for comments before/after would be straighforward. Frustration strikes
again. After several days of pulling my hair out, I realize that there is
yet another bug (which was reported on the antlr mailing lists last year)
which needs to be fixed for it to work.

  First thing I did was allow hidden channel tokens to be retained. I wasn't
aware that this needed to be done till I started tracing through the run
time (Extra documentation maybe)

 pTokenStream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
TOKENSOURCE(pLexerCtx));
 pTokenStream->discardOffChannel     = ANTLR3_FALSE;

 After this was done, there seems to be a very subtle bug with cache
coherency (occacional issue when using caching for performance) which was
reported on the mainling list. This was causing a token that was supposed to
be hidden to be sent to parser failing the parse. The first token in my file
was a hidden token and luckily exposed the problem right away. The fix (as
reported by the original reporter of the problem) was to make sure that in
the last few lines of the *fillBuffer* methods in antlr3tokenstream.c.

replace

     /* Set the consume pointer to the first token that is on our channel */
    tokenStream->p  = 0;
    tokenStream->p  = skipOffTokenChannels(tokenStream, tokenStream->p);

    /* Cache the size so we don't keep doing indirect method calls*/
    tokenStream->tstream->istream->cachedSize = tokenStream->tokens->count;

  With

     /* Cache the size so we don't keep doing indirect method calls
     * Relocated to above the following two lines following bug report
     * at
http://markmail.org/search/list:antlr?q=token+stream+comments#query:list%3Aantlr%20token%20stream%20comments+page:6+mid:5olqv5itjde27uhi+state:results
     */
    tokenStream->tstream->istream->cachedSize = tokenStream->tokens->count;

    /* Set the consume pointer to the first token that is on our channel
     */
    tokenStream->p  = 0;
    tokenStream->p  = skipOffTokenChannels(tokenStream, tokenStream->p);


//----------------------------------------------------------------------------------------------------------------------------------------------------------------------

 These are minor problems on the whole, but made the experience of
developing non trivial Antlr3 stuff surprinsgly tricky and not nearly as
much fun as it was with Antlr2. I understand the fact that this is a
volunteer effort and that much like in a commercial setting, bugs can slip
through in a volunteer driven runtime and it is amazing that there are so
few bugs.

  I can volunteer to start adding test cases if someone can point me to the
resources to do so. If there is an effort to start with a CPP runtime, I
will be more than glad to assist in whatever way is needed as reading the
current C code makes me want to cry! I feel more manly just for digging
through it and getting it to work for me :-).

 I hope someone can tell me where I am doing idiotic things or put these
bugs in for eventual fixes. I can help with this but I will probably have to
learn stringtemplate stuff and get an overview document or some such. I am
willing however.

thanks much,

-vamsi

PS: Somehow this mail also got long. Hope it doesn't get dismissed as too
much stuff.

-- 
Between impulse and reaction lies man's greatest strength: The freedom to
create a choice, to create his universe, to choose - Victor Frankl (adapted)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/fb075a7c/attachment.html 

From dejas9000 at gmail.com  Thu Nov  6 09:57:56 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 6 Nov 2008 11:57:56 -0600
Subject: [antlr-interest] ANTLR not reporting error for malformed program
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DF4@ex01.dbsophicHQ.com>
References: <38a26f430811060820w1283eb6bn92a32ca263c2ad4b@mail.gmail.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DF3@ex01.dbsophicHQ.com>
	<38a26f430811060836u4c754baate9d4ff386aeffe84@mail.gmail.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DF4@ex01.dbsophicHQ.com>
Message-ID: <38a26f430811060957y2b668493g2b4aac0bdfdaaf25@mail.gmail.com>

Strange, it found an actual error in the grammar that was not found when the
EOF was omitted.  I was referencing a terminal that did not exist.

On Thu, Nov 6, 2008 at 10:42 AM, Vitaliy <Vitaliy at dbsophic.com> wrote:

>  Did you try:
>
>
>
> superProgram
>
>                 :
>
>                 program
>
>                 EOF
>
> ;
>
>
>
> program    :
>     statement_list -> statement_list PROGRAM
>     |
>     expression ->  expression PROGRAM
>     ;
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Dejas Ninethousand
> *Sent:* Thursday, November 06, 2008 18:36
> *To:* Vitaliy
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] ANTLR not reporting error for malformed
> program
>
>
>
> How do I express EOF in ANTLR?  When I add "EOF" to the production I can't
> pass grammar check anymore:
>
> program    :
>     statement_list EOF -> statement_list PROGRAM
>     |
>     expression EOF ->  expression PROGRAM
>     ;
>
> -- Matt
>
>  On Thu, Nov 6, 2008 at 10:28 AM, Vitaliy <Vitaliy at dbsophic.com> wrote:
>
> Hi Matt,
>
>
>
> Had exactly the same problem.
>
> What you need to do is
>
> "Add EOF to the end of your top-level parser rule.",
>
> As Gavin had told me.
>
>
>
> Gavin ? thanks again!
>
>
>
> Enjoy,
>
> Vitaliy
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Dejas Ninethousand
> *Sent:* Thursday, November 06, 2008 18:21
> *To:* antlr-interest Interest
> *Subject:* [antlr-interest] ANTLR not reporting error for malformed
> program
>
>
>
> I know I saw something about this on the ANTLR web site a while back, but I
> can't find it now for the life of me.  I have some program text that does
> not conform to my grammar.  If thought of as a long string, about the first
> half of the string conforms to the cfg but then does something blatantly
> wrong from a grammar standpoint.  When ANTLR processes the program it
> consumes and parses the valid part of the program and then stops as if only
> the first half of the program string was the entire program string.  I do
> not see tokens pass by for the 2nd half of the malformed program (and as
> consiquence, no error is generated).  Can someone point me to the part of
> the web site that discusses this issue?
>
> Thanks,
> Matt
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus
> signature database 3591 (20081106) __________
>
>
>
> The message was checked by ESET NOD32 Antivirus.
>
>
>
> http://www.eset.com
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus
> signature database 3591 (20081106) __________
>
> The message was checked by ESET NOD32 Antivirus.
>
> http://www.eset.com
>
>
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus
> signature database 3591 (20081106) __________
>
>
>
> The message was checked by ESET NOD32 Antivirus.
>
>
>
> http://www.eset.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/4b2f3ec0/attachment.html 

From giovanebarcelos at gmail.com  Thu Nov  6 10:50:08 2008
From: giovanebarcelos at gmail.com (Giovane)
Date: Thu, 6 Nov 2008 16:50:08 -0200
Subject: [antlr-interest] [fatal] rule Tokens has non-LL(*) decision due to
	recursive rule invocations
Message-ID: <011d01c94040$866943e0$933bcba0$@com>

Hi everyone, hopefully this is a stupid question with a similarly easy
answer.

I have a grammar attached in this email that generate the message below when
I compile it:

"Test.g:1:8: [fatal] rule Tokens has non-LL(*) decision due to recursive
rule invocations reachable from alts 1,4.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option."

I tried several alternatives in this grammar but I couldn't solve the
problem. I have no idea what the rule "Tokens" means, because I don't have
this rule in my grammar. 

I thank you in advance for your help. 

 

-Giovane

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/3f79b582/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 2111 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081106/3f79b582/attachment.obj 

From atlan at gmx.li  Thu Nov  6 11:17:41 2008
From: atlan at gmx.li (Marc Bischof)
Date: Thu, 6 Nov 2008 20:17:41 +0100
Subject: [antlr-interest] change ANTLRs (generated) grammarFileName?
Message-ID: <200811062017.42075.atlan@gmx.li>

Hej List,

i have a question to ANTLRs grammar file name.
(i use antlr 3.1b2 with antlrwork1.2b5)

Within my generated source code, the complete source path is generated as 
shown below.

a) as comments spread over the file
>//$ANTLR3.1b2 /home/bischomc/studienarbeit/workspace/BPELscript/src/iaas/bpelscript/antlr/BPELscriptWalker.g 
2008-11-04 14:48:57
b) as hard coded grammarFileName
> ?public String getGrammarFileName() { 
return "/home/bischomc/studienarbeit/workspace/BPELscript/src/iaas/bpelscript/antlr/BPELscriptWalker.g"; }

Now i want to share the code and i'am trying to avoid this absolute 
representation.

Is it possible to set this name (and the comment-name) by a grammar or 
antlrworks option?
Or have this be done manually?

I found nothing about this when searching in the reference or other papers. 
(the homepage is currently down)

Cheers,
????????Marc

From jimi at temporal-wave.com  Thu Nov  6 11:55:41 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 06 Nov 2008 11:55:41 -0800
Subject: [antlr-interest] Antlr3 C runtime woes.
In-Reply-To: <c12e29d0811060948x14002656xcbd184744938072c@mail.gmail.com>
References: <c12e29d0811060948x14002656xcbd184744938072c@mail.gmail.com>
Message-ID: <1226001341.4523.678.camel@jimi.temporal-wave.com>

On Thu, 2008-11-06 at 09:48 -0800, Vamsi Juvvi wrote:
> Hi all.
> 
>    I hope this gets scanned by jim or any other C runtime expert and I
> get some advice.

Are you using output=AST ? I would need to see more of your grammar to
see whether any of these are bugs are just a misuse of the grammar to be
honest. I think that you might be trying to do things that would work if
you had output=AST (or the other way around).

> 
>    I had sent out an email containing a whole lot of text (in
> retrospect) and probably created an overload for whoever read it. I am
> simplifying it and adding some other problems I am facing. 
> 
>   I am trying to write a replacement for the MSIDL compiler with a
> custom simplified and customized syntax for my company's needs. I am
> using Antlr 3.1.1 with the C runtime. The problems started when I
> decided to carry some comments over from the IDL file to the generated
> files. Thats when I lost a few days tracking the following issues and
> figuring out workarounds.
> 
>   //-- Problem 1 -----------------
>   In a rule (import_decl say), I want to have a validating predicate
> to ensure that the rule starts on a line all by itself. The antlr book
> gave me the impression that it can expressed thus.
> 
>       import_decl : IMPORT_DECL { $start.pos == 0 } ?

Here you would be trying to reference the first token of the rule
return, which if your outputting the AST will be the tree span.

There are a few things wrong here. But first review what you are trying
to do. It seems that you want whatever IMPORT_DECL is, to start at
column position 0 only. What do you do with this token when it isn't at
column 0? Your construct will probably just throw a confusing error to
the user about what to them looks like valid code. Don't try to encode
errors in the grammar syntax like this, you should be going the other
way and parsing everything, then issuing specific things about errors
that you can check for. Then again, if the parser can accept it even if
it isn't at the start of a line, why make this an error anyway?

If you want to know something about IMPORT_DECL, then reference it
explicitly:

import_decl: i=IMPORT_DECL  { if ($i.whatever ...

off the top of my head the pos attribute isn't the start position of the
token, but the token number anyway (check that though I have not
looked).

If a token takes a different meaning when not at the start of the line,
then perform this token change in the lexer, not the parser. The parser
is really about token sequences, not their position in text lines.

Also, remember that you might not want:

import

to be any different than:

     import


>   There is a workaround though. I can hack it to use the actual
> members in the C runtime. I can replace the predicate with
>    { retval.start->charPosition == 0 }?

It usually means that you are doing something wrong if you start
resorting to this.

>   //-- Problem 2---------------------
>   Similar problems exist when I want to generate an imaginary token in
> my parser initialized with a real token.

You are probably repeating the same mistake to be honest.

> 
>   tokens
>    {
>       INTERFACE_BLOCK; // imaginary token.
>    }
> 
>   // The book indicates that the following should work.
>   interface
>     :^(INTERFACE_BLOCK[$interface.start] interface_decl
> interface_body_line*)

You mean -> ^(  

right?

>  The C code generated however has two issues.
>    It has the same problem as above where it tries to cast the rule
> retvalue to pANTLR3_COMMON_TOKEN instead of casting the retval.start
> item.

This may be a bug in the start template then.

>    It uses ADAPTER->createTypeTokenText or ADAPTER->createTypeText
> instead of ADAPTER->createTypeToken which is what I expect

This stuff can be confusing. One of the issues is that the Java runtime
uses overloaded method calls, which I don't have in C, so the template
has to guess from the parameters it is given. However, I have not known
it to be wrong. Try explicitly constructing what you want to know in the
interface rule and returning it from the rule, this will be much less
confusing in your grammar anyway.

> 
>  I am doing all of this just so I can encode the start or a rule
> ( INTERFACE_BLOCK[$start] is expected to copy the start token's data
> into the INTERFACE_BLOCK token) so I can later start searching for
> comments on a hidden channel.

Why not keep your interface block IMAGINARY and just use:

-> ^(INTERFACE_BLOCK $interface $interface_decl) 

INTERFACE_BLOCK will then contain start and end tokens anyway in your
AST and the start will logically be the interface token. I think that
you are trying to solve problems that don't exist ;-)

> 
>   I worked around this by adding even more suspect C code and ended up
> making the antlr grammar file lose some of it's declarative beauty. In
> my parser I did this to work around.
> 
> interface
> @after

@after isn't really supported in C targets at the moment anyway. There
are sequencing issues.

> {         
>     // Save the line-num/charPos of the first token to match in this
> interface

Yeah - I think that you are doing all this code but the imaginary token
has this anyway. The imaginary token will give you the start and end
tokens that it spans, regardless of how you re-write them. Hence in your
AST, you get the start token, and ask it in turn for the line and column
position, just like in Java. Then, if you don't like it, you can give a
nice semantic error and not have the parser say "NVA at 'interface'" ;-)
It is also a lot more efficient as until you ask for anythign, it is all
just passing pointers around.


>     // rule to the members of our imaginary token.
>     pANTLR3_COMMON_TOKEN pTok = retval.tree->getToken(retval.tree);
>     if(pTok != 0)
>     {
>       pTok->line = retval.start->line;
>       pTok->charPosition = retval.start->charPosition;
>     }    
> }
>     : interface_decl
>         OPEN_BRACE
>             interface_body_line*
>         CLOSE_BRACE SEMI_COLON
>     -> ^(INTERFACE_BLOCK interface_decl interface_body_line*)    
>     ;
>   
>   Is this related to the unsupported tokenReWrite feature documented
> in the C runtime or a bug ?

I think you are just doing things wrong ;-) It isn't token rewrite that
is unsupported, but the tokenStreamRewrite engine.

> 
>   This makes me feel vaguely dirty. I will have an interresting time
> explaining why these workarounds are neccesary. I have hyped antlr to
> the point where any mention of bugs will make my boss cringe. I will
> just gloss over all the C code telling him that its just the way it
> has to be done. 

No, basically, just take it out, and let ANTLR do what it does
naturally.

> 
>   //-- Problem 3 -----
>   Finally armed with these workaround, I expected searching the token
> stream for comments before/after would be straighforward. Frustration
> strikes again. After several days of pulling my hair out, I realize
> that there is yet another bug (which was reported on the antlr mailing
> lists last year) which needs to be fixed for it to work.
> 
>   First thing I did was allow hidden channel tokens to be retained. I
> wasn't aware that this needed to be done till I started tracing
> through the run time (Extra documentation maybe)
> 
>  pTokenStream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
> TOKENSOURCE(pLexerCtx));
>  pTokenStream->discardOffChannel     = ANTLR3_FALSE;
> 
>  After this was done, there seems to be a very subtle bug with cache
> coherency (occacional issue when using caching for performance) which
> was reported on the mainling list. This was causing a token that was
> supposed to be hidden to be sent to parser failing the parse. The
> first token in my file was a hidden token and luckily exposed the
> problem right away. The fix (as reported by the original reporter of
> the problem) was to make sure that in the last few lines of the
> *fillBuffer* methods in antlr3tokenstream.c.
> 
> replace 
> 
>      /* Set the consume pointer to the first token that is on our
> channel */
>     tokenStream->p  = 0;
>     tokenStream->p  = skipOffTokenChannels(tokenStream,
> tokenStream->p);
> 
>     /* Cache the size so we don't keep doing indirect method calls*/
>     tokenStream->tstream->istream->cachedSize =
> tokenStream->tokens->count;
> 
>   With
> 
>      /* Cache the size so we don't keep doing indirect method calls
>      * Relocated to above the following two lines following bug report
>      * at http://markmail.org/search/list:antlr?q=token+stream
> +comments#query:list%3Aantlr%20token%20stream%20comments+page:6
> +mid:5olqv5itjde27uhi+state:results
>      */
>     tokenStream->tstream->istream->cachedSize =
> tokenStream->tokens->count;
> 
>     /* Set the consume pointer to the first token that is on our
> channel
>      */
>     tokenStream->p  = 0;
>     tokenStream->p  = skipOffTokenChannels(tokenStream,
> tokenStream->p);
> 
>   //----------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
>  These are minor problems on the whole, but made the experience of
> developing non trivial Antlr3 stuff surprinsgly tricky and not nearly
> as much fun as it was with Antlr2. 

Well, I think you are doing a bit of running before walking really ;-)

> I understand the fact that this is a volunteer effort and that much
> like in a commercial setting, bugs can slip through in a volunteer
> driven runtime and it is amazing that there are so few bugs.
> 
>   I can volunteer to start adding test cases if someone can point me
> to the resources to do so. 

I have been asking for someone to do this for 3 years. All you need to
do is write them. I want to use something like C-unit, but at the end of
the day, I don't care so long as someone other than me produces them.

> If there is an effort to start with a CPP runtime, I will be more than
> glad to assist in whatever way is needed as reading the current C code
> makes me want to cry! 

Normally, you don't go anywhere near this, but just use your own C++
code. However, I have started the C++ runtime and I will finish it
shortly.

> I feel more manly just for digging through it and getting it to work
> for me :-).

Try writing it :-)

> 
>  I hope someone can tell me where I am doing idiotic things or put
> these bugs in for eventual fixes. I can help with this but I will
> probably have to learn stringtemplate stuff and get an overview
> document or some such. I am willing however.

Mostly you are over complicating things I believe. 

I have some time set aside this week for latest bugs and some C++ work,
so I will check these things, probably tomorrow.

Jim



From jaluber at gmx.de  Thu Nov  6 12:12:18 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 06 Nov 2008 21:12:18 +0100
Subject: [antlr-interest] Failing upon illigal input termination
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DDA@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ.com>	<eb08982f-87cc-4abe-84c4-0580f4ce1a37@ex01.dbsophicHQ.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DDA@ex01.dbsophicHQ.com>
Message-ID: <49134FA2.9080405@gmx.de>

Vitaliy schrieb:
> Gavin,
> 
> Thanks so much!!!
> That did it!
> 
> Wasted so much time on this one..
> Wonder why this is not the default behavior?

Because ANTLR doesn't know which rule should be the starting rule. Using
an option to specify this rule falls short for people who need several
rules with EOF. Then again those people may not use such an option anyway.

Johannes
> 
> Anyway, Thanks again!!
> 
> Vitaliy
> 
> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Thursday, November 06, 2008 09:41
> To: Vitaliy; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Failing upon illigal input termination
> 
> At 04:55 6/11/2008, Vitaliy wrote:
>> That is, If we've got the input:
>> LegalStatement1,
>> LegalStatement2,
>> ...
>> LegalStatementN,
>> IllegalStatement,
>>
>> Antlr would stop on LegalStatementN,
>> Instead of reporting an error for IllegalStatement.
>>
>> What can I do to achieve this behavior?
> 
> Add EOF to the end of your top-level parser rule.
> 
> 
> 
> 
> 
> 
> __________ Information from ESET NOD32 Antivirus, version of virus signature database 3589 (20081106) __________
> 
> The message was checked by ESET NOD32 Antivirus.
> 
> http://www.eset.com
> 
> 
> 
> __________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________
> 
> The message was checked by ESET NOD32 Antivirus.
> 
> http://www.eset.com
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From antlr at mirality.co.nz  Thu Nov  6 12:12:25 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 07 Nov 2008 09:12:25 +1300
Subject: [antlr-interest]
 =?iso-8859-1?q?=E2=80=98Cannot_find_tokens__file?=
 =?iso-8859-1?q?_=E2=80=99?=
In-Reply-To: <geuvqa$56r$1@ger.gmane.org>
References: <geuvqa$56r$1@ger.gmane.org>
Message-ID: <20081106201234.0A18A11EE49@www.antlr.org>

At 03:43 7/11/2008, Hendrik Maryns wrote:
 >So now I have fsqLexer.g, fsqParser.g and fsqTreeParser.g.  The
 >latter complains that "(3): cannot find tokens file
 ><unset-dir>/fsqParser.tokens".  Indeed, there is no file
 >fsqParser.tokens.  fsqParser.g compiles fine, and even from
 >the command line, no tokens file is created.  What is the
 >solution to this?

The file is more likely to be named fsq.tokens, not 
fsqParser.tokens.

The tokens file should appear in the same folder as the target 
language output files.


From antlr at mirality.co.nz  Thu Nov  6 12:25:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 07 Nov 2008 09:25:19 +1300
Subject: [antlr-interest] [fatal] rule Tokens has non-LL(*) decision due
 to recursive rule invocations
In-Reply-To: <011d01c94040$866943e0$933bcba0$@com>
References: <011d01c94040$866943e0$933bcba0$@com>
Message-ID: <20081106202529.A40753522A9@www.antlr.org>

At 07:50 7/11/2008, Giovane wrote:
>"Test.g:1:8: [fatal] rule Tokens has non-LL(*) decision due to 
>recursive rule invocations reachable from alts 1,4.  Resolve by 
>left-factoring or using syntactic predicates or using 
>backtrack=true option."
>I tried several alternatives in this grammar but I couldn't solve 
>the problem. I have no idea what the rule "Tokens" means, because 
>I don't have this rule in my grammar.

The "Tokens" rule is the auto-generated parent rule of all your 
top-level lexer rules.  So this means that there is ambiguity 
between these rules.

The most obvious problem I can see is the PATHTERM rule.  Since it 
refers to other non-fragment lexer rules (especially on the left 
side), that's instant ambiguity right there.

I think the biggest problem though is that many of the lexer rules 
you have there (eg. the expressions and operators) look like they 
ought to be parser rules instead.  Certainly, if you want to keep 
them as lexer rules then you'll need to modify them for 
whitespace.

I'm not sure why you're getting that specific error, but it's 
probably not helped by your grammar being completely saturated 
with ambiguity (StepExpr is also internally ambiguous).


From jqwoods at gmail.com  Thu Nov  6 18:09:29 2008
From: jqwoods at gmail.com (John Woods)
Date: Thu, 06 Nov 2008 18:09:29 -0800
Subject: [antlr-interest] Parsing huge files a chunk at a time
Message-ID: <4913A359.3050007@gmail.com>

Hello,

I'd like to parse files which are much larger than my target memory 
footprint. The files are composed of many small independently parsable 
chunks. I only need to parse one of these chunks at a time, dispose of 
the parsed result, then parse the next chunk.

The first hurdle I find is that ANTLRReaderStream reads the entire file 
into a memory buffer upon construction. So, I thought I'd implement 
MyOwnReaderStream class which implements the CharStream interface such 
that only as many chars as look-ahead requests are read into memory 
(using a relatively small look-ahead buffer backed by a RandomAccessFile 
to support long distance marks, etc).

However, it seems that even if I did that, the next hurdle would be 
CommonTokenStream.fillBuffer() which again tries to tokenize everything 
into memory even though it's not needed yet.

Is there a way to only consume memory on the order of the size of the 
rule I'm attempting to parse, and not on the order of the size of the file?

Thanks for any tips!

From bergschloss at ukr.net  Fri Nov  7 03:38:31 2008
From: bergschloss at ukr.net (Sergiy Karpenko)
Date: Fri, 07 Nov 2008 13:38:31 +0200
Subject: [antlr-interest] Generated code dismatch
Message-ID: <E1KyPfb-0009RB-Pk@ffe11.ukr.net>

Hi all    
    
There is a problem, I use antlrworks-1.2.1 which use antlr-3.1.1 and it genrate code well.    
    
But when I use antlr3-maven-plugin?with?same?antlr-3.1.1 it generates wrong code    
    
<dependency>    
?<groupId>org.antlr</groupId>    
?<artifactId>antlr-runtime</artifactId>    
??<version>3.1.1</version>    
??<scope>compile</scope>    
</dependency>    
    
<plugin>    
<groupId>org.codehaus.mojo</groupId>    
<artifactId>antlr3-maven-plugin</artifactId>    
<version>1.0</version>    
<configuration>    
<!--libDirectory>target/generated-sources/antlr/org/exoplatform/services/jcr/impl/core/query/antlr</libDirectory-->    
<includes>    
<include>**/FullText.g</include>    
<include>**/SQL2.g</include>    
</includes>    
</configuration>    
<executions>    
<execution>    
<goals>    
<goal>antlr</goal>    
</goals>    
</execution>    
</executions>    
</plugin>    
    
There is    
"cannot find symbol : variable _fsp"    
    
differense between two ganerated code is:    
? state._fsp--; in first case    
and    
??_fsp--; ?in second case    
    
Thanks    
    
    
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081107/119b0c85/attachment.html 

From jimi at temporal-wave.com  Fri Nov  7 08:26:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 07 Nov 2008 08:26:26 -0800
Subject: [antlr-interest] Obvious memory leak in Antlr3.1.1 C code
In-Reply-To: <BAY118-W35B3AAEB18B962889C3D05E2190@phx.gbl>
References: <BAY118-W35B3AAEB18B962889C3D05E2190@phx.gbl>
Message-ID: <1226075186.9045.52.camel@jimi.temporal-wave.com>

On Fri, 2008-11-07 at 10:45 +0000, merry_winfly at hotmail.com wrote:

> Dear Jimi,


Hi - please use the list to report errors as others may be able to help
you too.


>  
> Thanks for your product of Antlr, which help me a lot.
>  
> But when I use the C code from antlr generator , I find it exist
> obvious memory leak issue.


The released runtimes are tested using valgrind, and while there are not
really enough tests (as I have bemoaned in the past ;-), I currently do
not know of any memory leaks. I known of one person that claimed to be
seeing a small leak from the last invoked rule, but didn't get any
example to trace that. 

Your issue might be as simple as not closing down the parser or tree
parser properly, but I am not sure if I will have time in the next few
days to analyze your issue (though thanks for the code examples etc). In
the meantime, I suggest that you build the runtime with gcc debug mode
turned on, and then rebuild your parser. Choose an input file that
exhibits this behavior then run the program using valgrind with full
memory tracing. This is usually good enough to tell you where the memory
is going. If you see that it is an ANTLR memory structure, and having
checked the example drivers, you feel that you are closing down
everything correctly, then send me the valgrind output. If it is not an
ANTLR issue, then please also let us know here so that I don't go on
later to try and track down a problem that does not exist.

I have a reported issue with string factories, whereby the move to use
malloc rather than calloc seems to have caused a shutdown issue in some
cases. I will be fixing the known bugs today, so you can always try the
latest source (look for a group announcement).

Assuming I get through all the bugs today (there are not very many), and
catch up with Java development, then I will try and have a look at your
code for you.

Jim

>  
> I have searched wiki topic, in this version, no obvirous memory leak
> exist.
>  
> Could you help me to solve this? (I'm hurry for this code, thanks a
> lot!)
>  
> I list the information and attachment includes all code about it (g
> file, all test C file ):
>  
> Platform: RedHat Enterprise 5 Server, virtual machine.
> GCC version: 4.1.1
> Antlr Version: 3.1.1
>  
> I use following command to generate C code from PLSQLpredigestParser.g
>  
> java -cp antlr-3.1.1.jar -Xmx256M org.antlr.Tool -Xconversiontimeout
> 10000 PLSQLpredigestParser.g
>  
>  
> And use following command to compile:
>  
> gcc -c  -I. -w -g  -c *.c
> g++ -c -w -g -I . -c *.cpp
> g++   -w -g -I.   -o treeMemory *.o 
>  
>  
> I don't know if it is enough information to trace this problem, but if
> you want to know any more information, pls freely contact me with this
> E-mail.
>  
> Thanks a lot.
>  
>  
> Best Regards
> Winfly Lin
> 
> 
> ______________________________________________________________________
> Get news, entertainment and everything you care about at Live.com.
> Check it out!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081107/c69a493b/attachment.html 

From cocoa at gmx.ch  Fri Nov  7 15:03:37 2008
From: cocoa at gmx.ch (Simon)
Date: Sat, 8 Nov 2008 00:03:37 +0100
Subject: [antlr-interest] Java Grammar Question
Message-ID: <7F3BD30D-D62F-4649-8119-EA1E1E433568@gmx.ch>

Hi

I've been studying the Java grammar from the Antlr page and stumbled  
across the array access alternative in the identifierSuffix rule:

identifierSuffix
     :   ('[' ']')+ '.' 'class'
     |   ('[' expression ']')+ // can also be matched by selector, but  
do here
     ...
     ;

What is the motivation behind matching stuff like [1][2] in the  
identifer suffix and not in the selector rule?

selector
     :   '.' Identifier arguments?
     |   '.' 'this'
     |   '.' 'super' superSuffix
     |   '.' 'new' innerCreator
     |   '[' expression ']'
     ;

The two ways to match array accesses obviously introduces an ambiguity  
into the grammar. Or am I missing something?

Thanks
Simon

From sharwell at pixelminegames.com  Fri Nov  7 15:21:28 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 7 Nov 2008 17:21:28 -0600
Subject: [antlr-interest] Updated Visual Studio language service,
	includes a C# port of the ANTLR tool
Message-ID: <86403CA0939415448BCCB83855EFE09A64E7ED@Bloodymary.ironwillgames.com>

I posted another preview release of our ANTLR dev tool suite that's in
development.

 

http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr:Relea
ses

 

Major new items:

*         StringTemplate syntax highlighting

*         C# port of the Antlr tool itself (Antlr3.exe), up-to-date on
the 3.2 development work as of 11/7/08

 

Eventually the source code for the new C# ports of StringTemplate, Antlr
tool, and the new CSharp3 Antlr runtime will be available under the BSD
license. However, I'm still working things out in it for now. This copy
of the ANTLR tool is built using entirely V3 grammars for both the Tool
and the StringTemplate library.

 

Sam Harwell

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081107/d245dd34/attachment.html 

From metolone+gmane at gmail.com  Fri Nov  7 19:17:37 2008
From: metolone+gmane at gmail.com (Mark Tolonen)
Date: Fri, 7 Nov 2008 19:17:37 -0800
Subject: [antlr-interest] mailing list registration working? (posting from
	gmane)
Message-ID: <gf30c9$3ip$1@ger.gmane.org>

I've tried to sign up for the mailing list twice and never receive a 
confirmation and can't post via the email address.  Is it broken, or there a 
human in the loop that is just busy?

Just wondering,
Mark



From robert at rvaessen.com  Sat Nov  8 08:57:29 2008
From: robert at rvaessen.com (Robert Vaessen)
Date: Sat, 08 Nov 2008 11:57:29 -0500
Subject: [antlr-interest] Bug in ANTLR 3.1.1?
Message-ID: <4915C4F9.2030703@rvaessen.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081108/0383821f/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ClientApiTreeParser.java
Type: text/java
Size: 34586 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081108/0383821f/attachment.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ClientApiTreeParser.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20081108/0383821f/attachment.pl 

From adman1108 at gmail.com  Sat Nov  8 10:24:40 2008
From: adman1108 at gmail.com (AlanM)
Date: Sat, 08 Nov 2008 13:24:40 -0500
Subject: [antlr-interest] Error parsing grammar comes from interactions
	between 3 lexer rules?
Message-ID: <4915D968.6000602@gmail.com>

Can anyone tell me what I'm doing wrong here? Antlr (great tool!) gives 
me the error

syntax error: buildnfa: expecting EOA, found '
  System.out.println( "foo");
  '
when parsing the following grammar file:

lexer grammar Test;
RPAREN     : ')' {  System.out.println( "foo");  };
fragment METACHAR   : RPAREN ;
 NON_METACHAR  :  ~METACHAR;


(Of course these rules are selected from a much larger grammar).
Thanks for any help.
Alan

From Vitaliy at dbsophic.com  Sun Nov  9 00:00:19 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Sun, 9 Nov 2008 10:00:19 +0200
Subject: [antlr-interest] Failing upon illigal input termination
In-Reply-To: <49134FA2.9080405@gmx.de>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8DAE@ex01.dbsophicHQ.com>
	<eb08982f-87cc-4abe-84c4-0580f4ce1a37@ex01.dbsophicHQ.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8DDA@ex01.dbsophicHQ.com>
	<49134FA2.9080405@gmx.de>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8E0C@ex01.dbsophicHQ.com>

That's very reasonable.
I just wish it would have been documented anywhere..

Again, IMHO, Antlr is an amazing tool for an open source project, with so much power to it,
I just wish it would have been better documented.

Anyway, Thanks again,
Vitaliy

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de]
Sent: Thursday, November 06, 2008 22:12
To: Vitaliy
Cc: Gavin Lambert; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Failing upon illigal input termination

Vitaliy schrieb:
> Gavin,
>
> Thanks so much!!!
> That did it!
>
> Wasted so much time on this one..
> Wonder why this is not the default behavior?

Because ANTLR doesn't know which rule should be the starting rule. Using
an option to specify this rule falls short for people who need several
rules with EOF. Then again those people may not use such an option anyway.

Johannes
>
> Anyway, Thanks again!!
>
> Vitaliy
>
> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Thursday, November 06, 2008 09:41
> To: Vitaliy; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Failing upon illigal input termination
>
> At 04:55 6/11/2008, Vitaliy wrote:
>> That is, If we've got the input:
>> LegalStatement1,
>> LegalStatement2,
>> ...
>> LegalStatementN,
>> IllegalStatement,
>>
>> Antlr would stop on LegalStatementN,
>> Instead of reporting an error for IllegalStatement.
>>
>> What can I do to achieve this behavior?
>
> Add EOF to the end of your top-level parser rule.
>
>
>
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus signature database 3589 (20081106) __________
>
> The message was checked by ESET NOD32 Antivirus.
>
> http://www.eset.com
>
>
>
> __________ Information from ESET NOD32 Antivirus, version of virus signature database 3591 (20081106) __________
>
> The message was checked by ESET NOD32 Antivirus.
>
> http://www.eset.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>






__________ Information from ESET NOD32 Antivirus, version of virus signature database 3597 (20081108) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3597 (20081108) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From Development at ChrisSek.de  Sun Nov  9 08:24:07 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Sun, 9 Nov 2008 17:24:07 +0100
Subject: [antlr-interest] Write a token to the AST within an action
Message-ID: <2D03873E-A595-46C5-8B26-8FC27ED1564D@ChrisSek.de>

Hi all,

After a long research, I ask you because I have no idea how to write  
directly to the AST-Stream from within an action. My parser remembers  
token-names in an ArrayList which must be written to the AST in an  
other rule. Here's my rule "program", where the names are ready to  
write to AST:

	program
	scope SymbolTable;
	@init {
		// initialize the scope for this block
		$SymbolTable::newGlobals = new ArrayList<String>();
	}
	@after {
		System.out.println("Number of globals: " +  
$SymbolTable::newGlobals.size());
	}
	    : sourceElement*
	    -> ^(PROGRAM sourceElement*)
	    ;

There, I like to achieve something like this:

		-> ^(PROGRAM ^(GLOBALS {?return the element of  
$SymbolTable::newGlobals?}) sourceElement*)

The GLOBALS-subtree should look like ^(GLOBALS i x y) when "i", "x"  
and "y" are the token-names in my "newGlobals" ArrayList.

Is it maybe possible to add a method like writeToAstStream(String  
root, String child ...) to the parser? This is, in general, no  
problem, but how can I write something to the tree from within such an  
method or an action?

Any ideas?

Thank you very much in advance,

Chris

From thikone at gmail.com  Sun Nov  9 17:32:52 2008
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 10 Nov 2008 02:32:52 +0100
Subject: [antlr-interest] ANTLRWorks "synpredNN_MyGrammar" labels
In-Reply-To: <a382aa010811070219l43c0f44ere97a887aa5bfe191@mail.gmail.com>
References: <a382aa010811070219l43c0f44ere97a887aa5bfe191@mail.gmail.com>
Message-ID: <a382aa010811091732u6094aab4l3c1a143f08eb4774@mail.gmail.com>

On Sat, 2008-11-01 at 16:11 -0500, Ben Gillis wrote:

> OK...thanks. :-)
>
> So, why are they present in some ANTLRWorks Syntax Diagrams, but not in
> others?  (Exact-same grammar rules, the smaller, trimmed down grammars do
> not have them...but, beyond being the exact-same rules, sub-rules, etc. I
> don't know why/what else in the grammar would determine when they're
> displayed).

They are displayed by ANTLRWorks when option backtrack=true; Comment
it, and you will see clean diagrams ;-)

That's why you don't see them in smaller grammar - you forgot to copy
options section, I believe.

Andrew

From thikone at gmail.com  Sun Nov  9 17:33:54 2008
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 10 Nov 2008 02:33:54 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <a382aa010811070207j6c8e933cs1a8761a89cac0912@mail.gmail.com>
References: <a382aa010811070207j6c8e933cs1a8761a89cac0912@mail.gmail.com>
Message-ID: <a382aa010811091733x4a4a1a98u7b87ac2db8e42c7a@mail.gmail.com>

Hi, Javier Luis C?novas Izquierdo!

You don't need so much memory for my grammar, really :) 256Mb is
enough for ANTLR v3.1.1. Well I use 512Mb actually...

You need to change one rule though, to make it compatible with ANTLR 3.1.x:

column_spec
   :       sql_identifier ( DOT sql_identifier )*;

For some reason, ANTLR 3.1.x cannot compile it, raising a error:

error(206): PLSQL3.g:791:4: Alternative 2: after matching input such
as ID DOT ID DOT ID DOT ID DOT decision cannot predict what comes next
due to recursion overflow to expr_add from sql_expression and to
expr_mul from expr_add

While with ANTLR 3.0.1 it was compiling just fine... Anyway, replace
it with this:

column_spec
   :       sql_identifier ( DOT sql_identifier ( DOT sql_identifier )? )?;

And regarding Java target - there is not much you need to change, only
members declaration and some gate predicates:

options {
       language=Java;
       k=*;
       backtrack=true;
       memoize=true;
       output=AST;
}

@members {
   private boolean is_sql = false;
}

and all parser rules for keywords should like like this:

keyA : {PLSQL3Parser.this.input.LT(1).getText().toUpperCase().equals("A")}? ID;

Here I have to reference parser class, because this predicate can be
also embedded in DFA, but there only token type stream is available,
LT(1) returns token ID, integer... not very convenient. Gonna write
separate topic for this, eventually.

I also use Java target, mainly to debug the grammar in ANTLRWorks -
works perfectly.

Andrew

From sprevrha at gmail.com  Sun Nov  9 22:07:59 2008
From: sprevrha at gmail.com (Sven Prevrhal)
Date: Sun, 9 Nov 2008 22:07:59 -0800
Subject: [antlr-interest] Need help in understanding DFA prediction
Message-ID: <00eb01c942fa$af9032d0$0eb09870$@com>

Hello and thanks Gurus:

 

I have a Lexer rule

 

CATEGORYSTART

                :               SPACE* 'Categories:';

 

and the call to DFA.Predict which originates from Lexer.mTokens() predicts
it for input like "Cake", and then of course the call to mCATEGORYSTART() in
the switch statement inside mTokens()after the DFA.Predict call returns
issues an error.

 

Sooo, how do I get DFA.Predict to predict the WORD rule for "Cake" instead
of CATEGORYSTART?

 

Here's my WORD rule:

WORD :                LETTER+;

 

Thank you and cheers,

Sven

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081109/d7980f27/attachment.html 

From sharwell at pixelminegames.com  Sun Nov  9 22:52:03 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 10 Nov 2008 00:52:03 -0600
Subject: [antlr-interest] Need help in understanding DFA prediction
In-Reply-To: <00eb01c942fa$af9032d0$0eb09870$@com>
References: <00eb01c942fa$af9032d0$0eb09870$@com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E7F0@Bloodymary.ironwillgames.com>

What's the definition for LETTER? If, for example, you have this:

 

LETTER : 'a'..'z' ;

 

Then Cake matches CATEGORYSTART because the capital letter C at the
beginning rules out all options but that. Does your LETTER rule allow
capital letters?

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sven Prevrhal
Sent: Monday, November 10, 2008 12:08 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Need help in understanding DFA prediction

 

Hello and thanks Gurus:

 

I have a Lexer rule

 

CATEGORYSTART

                :               SPACE* 'Categories:';

 

and the call to DFA.Predict which originates from Lexer.mTokens()
predicts it for input like "Cake", and then of course the call to
mCATEGORYSTART() in the switch statement inside mTokens()after the
DFA.Predict call returns issues an error.

 

Sooo, how do I get DFA.Predict to predict the WORD rule for "Cake"
instead of CATEGORYSTART?

 

Here's my WORD rule:

WORD :                LETTER+;

 

Thank you and cheers,

Sven

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/7fd6e46b/attachment.html 

From sprevrha at gmail.com  Sun Nov  9 23:25:20 2008
From: sprevrha at gmail.com (Sven Prevrhal)
Date: Sun, 9 Nov 2008 23:25:20 -0800
Subject: [antlr-interest] Need help in understanding DFA prediction
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E7F0@Bloodymary.ironwillgames.com>
References: <00eb01c942fa$af9032d0$0eb09870$@com>
	<86403CA0939415448BCCB83855EFE09A64E7F0@Bloodymary.ironwillgames.com>
Message-ID: <4917e1ef.14da600a.29de.5abd@mx.google.com>

Sam,

 It does - 

 

fragment LETTER              :               'a'..'z' | 'A'..'Z';

 

Perhaps the 'fragment' is a problem?

Sven

 

From: Sam Harwell [mailto:sharwell at pixelminegames.com] 
Sent: Sunday, November 09, 2008 10:52 PM
To: sven.prevrhal at ucsf.edu; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Need help in understanding DFA prediction

 

What's the definition for LETTER? If, for example, you have this:

 

LETTER : 'a'..'z' ;

 

Then Cake matches CATEGORYSTART because the capital letter C at the
beginning rules out all options but that. Does your LETTER rule allow
capital letters?

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sven Prevrhal
Sent: Monday, November 10, 2008 12:08 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Need help in understanding DFA prediction

 

Hello and thanks Gurus:

 

I have a Lexer rule

 

CATEGORYSTART

                :               SPACE* 'Categories:';

 

and the call to DFA.Predict which originates from Lexer.mTokens() predicts
it for input like "Cake", and then of course the call to mCATEGORYSTART() in
the switch statement inside mTokens()after the DFA.Predict call returns
issues an error.

 

Sooo, how do I get DFA.Predict to predict the WORD rule for "Cake" instead
of CATEGORYSTART?

 

Here's my WORD rule:

WORD :                LETTER+;

 

Thank you and cheers,

Sven

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081109/d35a7f16/attachment.html 

From antlr at shmuelhome.mine.nu  Mon Nov 10 00:42:32 2008
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon, 10 Nov 2008 10:42:32 +0200
Subject: [antlr-interest] Need help in understanding DFA prediction
In-Reply-To: <4917e1ef.14da600a.29de.5abd@mx.google.com>
References: <00eb01c942fa$af9032d0$0eb09870$@com>	<86403CA0939415448BCCB83855EFE09A64E7F0@Bloodymary.ironwillgames.com>
	<4917e1ef.14da600a.29de.5abd@mx.google.com>
Message-ID: <4917F3F8.7000002@shmuelhome.mine.nu>

Sven Prevrhal wrote:
>
> Sam,
>
> It does ?
>
> fragment LETTER : 'a'..'z' | 'A'..'Z';
>
> Perhaps the ?fragment? is a problem?
>
> Sven
>
> *From:* Sam Harwell [mailto:sharwell at pixelminegames.com]
> *Sent:* Sunday, November 09, 2008 10:52 PM
> *To:* sven.prevrhal at ucsf.edu; antlr-interest at antlr.org
> *Subject:* RE: [antlr-interest] Need help in understanding DFA prediction
>
> What?s the definition for LETTER? If, for example, you have this:
>
> LETTER : 'a'..'z' ;
>
> Then Cake matches CATEGORYSTART because the capital letter C at the 
> beginning rules out all options but that. Does your LETTER rule allow 
> capital letters?
>
> Sam
>
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Sven Prevrhal
> *Sent:* Monday, November 10, 2008 12:08 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Need help in understanding DFA prediction
>
> Hello and thanks Gurus:
>
> I have a Lexer rule
>
> CATEGORYSTART
>
> : SPACE* 'Categories:';
>
> and the call to DFA.Predict which originates from Lexer.mTokens() 
> predicts it for input like ?Cake?, and then of course the call to 
> mCATEGORYSTART() in the switch statement inside mTokens()after the 
> DFA.Predict call returns issues an error.
>
> Sooo, how do I get DFA.Predict to predict the WORD rule for ?Cake? 
> instead of CATEGORYSTART?
>
> Here?s my WORD rule:
>
> WORD : LETTER+;
>
> Thank you and cheers,
>
> Sven
>
> ------------------------------------------------------------------------
In antlrworks 1.2, I get your problem in the interpreter which can't
handle java predicates. But it works in the debugger. I didn't try a
real program. Here is my grammar.

grammar problem;

token
: (WORD | CATEGORYSTART) EOF {System.out.println("done");};

WORD : LETTER+;

CATEGORYSTART: ' '* 'Categories:';

fragment LETTER: 'a'..'z' | 'A'..'Z';






From nukiti at yahoo.de  Mon Nov 10 02:32:07 2008
From: nukiti at yahoo.de (Britta Kiera)
Date: Mon, 10 Nov 2008 10:32:07 +0000 (GMT)
Subject: [antlr-interest] Why does syntactic predicate not take effect?
Message-ID: <562265.27067.qm@web27003.mail.ukl.yahoo.com>

I'm replacing a handwritten config file parser by an ANTLR based implementation. The config files contain so called feature configurations which look like this:

    plugins.navigation.GoTo Outline XRefs {}
    
where "plugins.navigation." is the feature path and "Goto Outline XRefs" is a sequence of three feature names. The braces contain some property definitions which are omitted here.

The lexer was supposed to generate a NAMES token for the feature name sequence. The definition below shows an approach that I tried to accomplish this. This approach didn't work. The lexer never generated a NAMES token although I tried
to enforce this using a syntactic predicate. I solved this problem in the parser but I'd like to understand why the
syntactic predicate does not take effect. Can somebody explain this to me?

Thank you,
Nukiti

================================= ANTLR lexer start ==========================================

lexer grammar SimpleLex;

options {
    language = Java;
}

@header {
package test.antlr;

import java.io.StringReader;
}

@members {
    public static void main(String args[]) throws Exception {
        String      input = "   plugins.navigation.XRefs Outline GoTo {}";
        CharStream  cs    = new ANTLRStringStream(input);
        SimpleLex   lex   = new SimpleLex(cs);
       
        Token t;
        do {
            String type;
            t=lex.nextToken();
            switch(t.getType()) {
                case IDENT: type = "IDENT"; break;
                case NAMES: type = "NAMES"; break;
                case DOT  : type = "DOT"  ; break;
                case WHITE: type = "WHITE"; break;
                case LB   : type = "LB"   ; break;
                case RB   : type = "RB"   ; break;
                default   : type = Integer.toString(t.getType()); break;
            }
            System.out.printf("Token: %6s(%2d) >%s<\n", type, t.getChannel(), t.getText());
        }
        while(t.getType() != -1);
    }
}

IDENT
    : (ID (WS ID)+)=> ID (WS ID)+ {$type = NAMES;}
    | ID
    ;
    
WHITE
    : WS { $channel = HIDDEN; }
    ;

NAMES:
    ;

LB  : '{' ;
RB  : '}' ;
DOT : '.' ;

fragment WS    : (' '|'\r'|'\t'|'\u000C'|'\n')+;
fragment ID    : LETTER (LETTER|DIGIT)*;
fragment DIGIT : '0'..'9';
fragment LETTER: 'A'..'Z' | 'a'..'z' | '_';

================================= ANTLR lexer end ==========================================




      

From qwizv9b02 at sneakemail.com  Mon Nov 10 03:15:41 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 10 Nov 2008 12:15:41 +0100
Subject: [antlr-interest] 'Cannot find tokens  file '
In-Reply-To: <20081106201234.0A18A11EE49@www.antlr.org>
References: <geuvqa$56r$1@ger.gmane.org>
	<20081106201234.0A18A11EE49@www.antlr.org>
Message-ID: <gf954u$5ld$1@ger.gmane.org>

Gavin Lambert schreef:
> At 03:43 7/11/2008, Hendrik Maryns wrote:
>  >So now I have fsqLexer.g, fsqParser.g and fsqTreeParser.g.  The
>  >latter complains that "(3): cannot find tokens file
>  ><unset-dir>/fsqParser.tokens".  Indeed, there is no file
>  >fsqParser.tokens.  fsqParser.g compiles fine, and even from
>  >the command line, no tokens file is created.  What is the
>  >solution to this?
> 
> The file is more likely to be named fsq.tokens, not 
> fsqParser.tokens.

There is no file fsq.tokens.
This is a message from antlr, so how can I change this?  I didn?t do
anything except creating the three grammar files.  Should I put the line

tokenVocab=fsqLexer;

in faqTreeParser?

> The tokens file should appear in the same folder as the target 
> language output files.

Hm, AntlrIDE (for Eclipse) seems to move the Java output files to the
appropriate folder, but leave the tokens file where the grammar is.
This is fine with me.

Aha, invoking antlr from the command line indeed does create the file
fsqParser.tokens.  So this seems to be a bug with AntlrIDE.  Is somebody
from there reading this, or should I report it elsewhere?

Thanks, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/d80dee42/attachment.bin 

From qwizv9b02 at sneakemail.com  Mon Nov 10 03:33:08 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 10 Nov 2008 12:33:08 +0100
Subject: [antlr-interest] On to the next issue: error(211)
Message-ID: <gf965l$90v$1@ger.gmane.org>

HI,

Ok, so the ?token file not found? issue seems to be bogus, but here is
the next problem with my grammar:

error(211): fsqTreeParser.g:68:3: [fatal] rule body has non-LL(*)
decision due to recursive rule invocations reachable from alts 3,5.
Resolve by left-factoring or using syntactic predicates or using
backtrack=true option.

Strangely, the parser grammar contains the exact same rule, but does not
give this error message.

Here is the relevant rule:

body returns [Formula result]
  : label { $result = $label.result; }
  | atomic { $result = $atomic.result; }
  | unary { $result = $unary.result; }
  | binary { $result = $binary.result; }
  | n_ary { $result = $n_ary.result; }
  | quantor { $result = $quantor.result; }
  ;

Indeed, the unary, binary, n_ary and quantor rules (indirectly) refer to
formula:

formula returns [Formula result]
  : ^(FORMULA body) { $result = $body.result; }
  ;

What would be the proper thing to do here?  Adding backtrack=true does
fix it, but I am not sure whether that is a good idea?

You might notice that I am trying to implement a parser for some logic
here.

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/abd4cd59/attachment.bin 

From james.abley at gmail.com  Mon Nov 10 03:48:51 2008
From: james.abley at gmail.com (James Abley)
Date: Mon, 10 Nov 2008 11:48:51 +0000
Subject: [antlr-interest] Creating a simple expression language
Message-ID: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>

Hi,

I'm an ANTLR newbie. A code base that I work on has various expression
evaluation aspects. I have to add to this by defining various
functions that can be evaluated. ANTLR seemed like a good way of
separating out the parsing aspects and should let my colleagues
concentrate on just defining and plugging in new functions without
having to know much about parsing, etc. I've skimmed the ANTLR
Reference book, but don't quite have the time to go in depth at this
point.

I've written a grammar, which seems to do what I need. Doubtless it
could be trimmed a bit as I learn more. Where I'm stuck is the
connection between having a grammar which can parse the input and how
it gets evaluated.

The baggage that I'm struggling with is how to define my environment,
bind variables, create stack frames, etc.

I think this would be as part of a tree grammar the re-uses the tokens
from the AST grammar, but would like to confirm.

Cheers,

James



grammar Eval;

options {
	output = AST;
//	tokenVocab=Expr; // Read token types from Expr.tokens resource
//	ASTLabelType=CommonTree;    // The Java type of the nodes.
}

tokens {
	FUNC;	// function call
	STR;
}

@parser::header {
package com.example.expression;
}

@lexer::header {
package com.example.expression;
}

stat	:	expr+;

/*
For now, we define expr very basically. We don't need to support
addition, multiplication or other operators. But if we
do, the grammar is easy to alter.
*/
expr	:	atom
	;
//multExpr ( ( '+' | '-') multExpr)*;

//multExpr
//	:	unaryExpr (( '*' | '/') unaryExpr)*;

//unaryExpr
//	:	('+' | '-')?  atom
//	;

/* Basic constituent of an expression.*/
atom	:	var
	|	LPAREN expr RPAREN	// Rule to allow nested expressions.
	|	functionCall
	|	stringLiteral
	| 	number
	;

functionCall
	:	functionName LPAREN ( expr (COMMA expr)* )? RPAREN	-> ^(FUNC
functionName expr*)
	;

functionName
	:	ALPHA (ALPHA | '-' | '_' | DIGIT )* ;
/*
Added to indicate how we currently reference bound variables in
expressions.. This lets us parse them easily enough.
with a view to consolidating our expression evaluation code into this
ANTLR-based version.
*/
var	:	'$' ALPHA (ALPHA | '-' | '_' | DIGIT)*
	;

stringLiteral	:	'"'  ~'"'* '"'
	|	'\'' ~'\''* '\''
	;

number	:	DIGIT+ ('.' DIGIT+)?
	;
	
DIGIT
	:	'0' .. '9';
	
ALPHA
	:	 'a' .. 'z'
	|	 'A' .. 'Z';
	
COMMA
	:	(WS* ',' WS*);

LPAREN	
	: 	(WS*  '(' WS*);
RPAREN	
	:	(WS* ')' WS*);

WS
	:  	' '
	| 	'\t';

From jaluber at gmx.de  Mon Nov 10 04:20:24 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 10 Nov 2008 13:20:24 +0100
Subject: [antlr-interest] Parsing huge files a chunk at a time
In-Reply-To: <4913A359.3050007@gmail.com>
References: <4913A359.3050007@gmail.com>
Message-ID: <49182708.7080202@gmx.de>

John Woods schrieb:
> Hello,
> 
> I'd like to parse files which are much larger than my target memory 
> footprint. The files are composed of many small independently parsable 
> chunks. I only need to parse one of these chunks at a time, dispose of 
> the parsed result, then parse the next chunk.
> 
> The first hurdle I find is that ANTLRReaderStream reads the entire file 
> into a memory buffer upon construction. So, I thought I'd implement 
> MyOwnReaderStream class which implements the CharStream interface such 
> that only as many chars as look-ahead requests are read into memory 
> (using a relatively small look-ahead buffer backed by a RandomAccessFile 
> to support long distance marks, etc).
> 
> However, it seems that even if I did that, the next hurdle would be 
> CommonTokenStream.fillBuffer() which again tries to tokenize everything 
> into memory even though it's not needed yet.
> 
> Is there a way to only consume memory on the order of the size of the 
> rule I'm attempting to parse, and not on the order of the size of the file?
> 
> Thanks for any tips!

I don't know if creating MyOwnReaderStream is necessary, but the
important point is to replace CommonTokenStream.fillBuffer(). Just
derive a new class and add your own handling.

Johannes
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jaluber at gmx.de  Mon Nov 10 04:22:09 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 10 Nov 2008 13:22:09 +0100
Subject: [antlr-interest] Generated code dismatch
In-Reply-To: <E1KyPfb-0009RB-Pk@ffe11.ukr.net>
References: <E1KyPfb-0009RB-Pk@ffe11.ukr.net>
Message-ID: <49182771.5080505@gmx.de>

Sergiy Karpenko schrieb:
> 
> Hi all
> 
> There is a problem, I use antlrworks-1.2.1 which use antlr-3.1.1 and it
> genrate code well.
> 
> But when I use antlr3-maven-plugin with same antlr-3.1.1 it generates
> wrong code
> 
> <dependency>
>  <groupId>org.antlr</groupId>
>  <artifactId>antlr-runtime</artifactId>
>   <version>3.1.1</version>
>   <scope>compile</scope>
> </dependency>
> 
> <plugin>
> <groupId>org.codehaus.mojo</groupId>
> <artifactId>antlr3-maven-plugin</artifactId>
> <version>1.0</version>
> <configuration>
> <!--libDirectory>target/generated-sources/antlr/org/exoplatform/services/jcr/impl/core/query/antlr</libDirectory-->
> 
> <includes>
> <include>**/FullText.g</include>
> <include>**/SQL2.g</include>
> </includes>
> </configuration>
> <executions>
> <execution>
> <goals>
> <goal>antlr</goal>
> </goals>
> </execution>
> </executions>
> </plugin>
> 
> There is
> "cannot find symbol : variable _fsp"
> 
> differense between two ganerated code is:
>   state._fsp--; in first case
> and
>   _fsp--;  in second case
> 
> Thanks

The cause lies in a wrong ANLTR version. Somehow your maven plugin still
uses ANTLR 3.0.x. Either the maven plugin is outdated or your classpath
for maven is wrong.

Johannes
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jaluber at gmx.de  Mon Nov 10 04:27:08 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 10 Nov 2008 13:27:08 +0100
Subject: [antlr-interest] On to the next issue: error(211)
In-Reply-To: <gf965l$90v$1@ger.gmane.org>
References: <gf965l$90v$1@ger.gmane.org>
Message-ID: <4918289C.4040908@gmx.de>

Hendrik Maryns schrieb:
> HI,
> 
> Ok, so the ?token file not found? issue seems to be bogus, but here is
> the next problem with my grammar:
> 
> error(211): fsqTreeParser.g:68:3: [fatal] rule body has non-LL(*)
> decision due to recursive rule invocations reachable from alts 3,5.
> Resolve by left-factoring or using syntactic predicates or using
> backtrack=true option.
> 
> Strangely, the parser grammar contains the exact same rule, but does not
> give this error message.
> 
> Here is the relevant rule:
> 
> body returns [Formula result]
>   : label { $result = $label.result; }
>   | atomic { $result = $atomic.result; }
>   | unary { $result = $unary.result; }
>   | binary { $result = $binary.result; }
>   | n_ary { $result = $n_ary.result; }
>   | quantor { $result = $quantor.result; }
>   ;
> 
> Indeed, the unary, binary, n_ary and quantor rules (indirectly) refer to
> formula:
> 
> formula returns [Formula result]
>   : ^(FORMULA body) { $result = $body.result; }
>   ;
> 
> What would be the proper thing to do here?  Adding backtrack=true does
> fix it, but I am not sure whether that is a good idea?
> 
> You might notice that I am trying to implement a parser for some logic
> here.
> 
> H.

Try the description of
<http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar>.

Johannes
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jared.bunting at peachjean.com  Mon Nov 10 04:29:44 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 10 Nov 2008 06:29:44 -0600
Subject: [antlr-interest] Generated code dismatch
In-Reply-To: <49182771.5080505@gmx.de>
References: <E1KyPfb-0009RB-Pk@ffe11.ukr.net> <49182771.5080505@gmx.de>
Message-ID: <49182938.9030900@peachjean.com>

I can confirm that antlr3-maven-plugin from codehaus uses antlr 3.0 to 
generate the code.  Unfortunately, code changes are required to get it 
to work properly with 3.1.1.  Fortunately, Jim Idle has moved the plugin 
to antlr and made those necessary changes.  If you change your plugin's 
groupId to org.antlr and it's version to 3.1.1, your problem should be 
resolved.

-Jared

Johannes Luber wrote:
> Sergiy Karpenko schrieb:
>   
>> Hi all
>>
>> There is a problem, I use antlrworks-1.2.1 which use antlr-3.1.1 and it
>> genrate code well.
>>
>> But when I use antlr3-maven-plugin with same antlr-3.1.1 it generates
>> wrong code
>>
>> <dependency>
>>  <groupId>org.antlr</groupId>
>>  <artifactId>antlr-runtime</artifactId>
>>   <version>3.1.1</version>
>>   <scope>compile</scope>
>> </dependency>
>>
>> <plugin>
>> <groupId>org.codehaus.mojo</groupId>
>> <artifactId>antlr3-maven-plugin</artifactId>
>> <version>1.0</version>
>> <configuration>
>> <!--libDirectory>target/generated-sources/antlr/org/exoplatform/services/jcr/impl/core/query/antlr</libDirectory-->
>>
>> <includes>
>> <include>**/FullText.g</include>
>> <include>**/SQL2.g</include>
>> </includes>
>> </configuration>
>> <executions>
>> <execution>
>> <goals>
>> <goal>antlr</goal>
>> </goals>
>> </execution>
>> </executions>
>> </plugin>
>>
>> There is
>> "cannot find symbol : variable _fsp"
>>
>> differense between two ganerated code is:
>>   state._fsp--; in first case
>> and
>>   _fsp--;  in second case
>>
>> Thanks
>>     
>
> The cause lies in a wrong ANLTR version. Somehow your maven plugin still
> uses ANTLR 3.0.x. Either the maven plugin is outdated or your classpath
> for maven is wrong.
>
> Johannes
>   
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From jaluber at gmx.de  Mon Nov 10 04:33:09 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 10 Nov 2008 13:33:09 +0100
Subject: [antlr-interest] Generated code dismatch
In-Reply-To: <49182938.9030900@peachjean.com>
References: <E1KyPfb-0009RB-Pk@ffe11.ukr.net> <49182771.5080505@gmx.de>
	<49182938.9030900@peachjean.com>
Message-ID: <49182A05.8050208@gmx.de>

Jared Bunting schrieb:
> I can confirm that antlr3-maven-plugin from codehaus uses antlr 3.0 to
> generate the code.  Unfortunately, code changes are required to get it
> to work properly with 3.1.1.  Fortunately, Jim Idle has moved the plugin
> to antlr and made those necessary changes.  If you change your plugin's
> groupId to org.antlr and it's version to 3.1.1, your problem should be
> resolved.
> 
> -Jared

That supposes that neither a bug nor newly introduced features prevent
the backporting. In the worst case the OP needs to create a task which
calls the command line version of ANTLR directly.

Johannes
> 
> Johannes Luber wrote:
>> Sergiy Karpenko schrieb:
>>  
>>> Hi all
>>>
>>> There is a problem, I use antlrworks-1.2.1 which use antlr-3.1.1 and it
>>> genrate code well.
>>>
>>> But when I use antlr3-maven-plugin with same antlr-3.1.1 it generates
>>> wrong code
>>>
>>> <dependency>
>>>  <groupId>org.antlr</groupId>
>>>  <artifactId>antlr-runtime</artifactId>
>>>   <version>3.1.1</version>
>>>   <scope>compile</scope>
>>> </dependency>
>>>
>>> <plugin>
>>> <groupId>org.codehaus.mojo</groupId>
>>> <artifactId>antlr3-maven-plugin</artifactId>
>>> <version>1.0</version>
>>> <configuration>
>>> <!--libDirectory>target/generated-sources/antlr/org/exoplatform/services/jcr/impl/core/query/antlr</libDirectory-->
>>>
>>>
>>> <includes>
>>> <include>**/FullText.g</include>
>>> <include>**/SQL2.g</include>
>>> </includes>
>>> </configuration>
>>> <executions>
>>> <execution>
>>> <goals>
>>> <goal>antlr</goal>
>>> </goals>
>>> </execution>
>>> </executions>
>>> </plugin>
>>>
>>> There is
>>> "cannot find symbol : variable _fsp"
>>>
>>> differense between two ganerated code is:
>>>   state._fsp--; in first case
>>> and
>>>   _fsp--;  in second case
>>>
>>> Thanks
>>>     
>>
>> The cause lies in a wrong ANLTR version. Somehow your maven plugin still
>> uses ANTLR 3.0.x. Either the maven plugin is outdated or your classpath
>> for maven is wrong.
>>
>> Johannes
>>  
>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>>     
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>   
> 


From merry_winfly at hotmail.com  Mon Nov 10 05:21:04 2008
From: merry_winfly at hotmail.com (merry_winfly at hotmail.com)
Date: Mon, 10 Nov 2008 13:21:04 +0000
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
Message-ID: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>


Hi All,
 When I use the C code from antlr generator with predigest PLSQL parser  , I find it exist obvious memory leak issue. I use valgrind  to check and the result is: valgrind --leak-check=full ./treeMemory==9541== Memcheck, a memory error detector.==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.==9541== Using LibVEX rev 1854, a library for dynamic binary translation.==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.==9541== For more details, rerun with: -v==9541====9541====9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.==9541== For counts of detected errors, rerun with: -v==9541== searching for pointers to 98 not-freed blocks.==9541== checked 149,260 bytes.==9541====9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3==9541==    at 0x40057C8: malloc (vg_replace_malloc.c:207)==9541==    by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)==9541==    by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)==9541==    by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)==9541==    by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)==9541==    by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)==9541==    by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)==9541==    by 0x80B1E12: sql_command (PLSQLpredigestParser.c:49133)==9541==    by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)==9541==    by 0x8083185: statement (PLSQLpredigestParser.c:31331)==9541==    by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)==9541==    by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)==9541====9541== LEAK SUMMARY:==9541==    definitely lost: 7,560 bytes in 90 blocks.==9541==    indirectly lost: 448 bytes in 8 blocks.==9541==      possibly lost: 0 bytes in 0 blocks.==9541==    still reachable: 0 bytes in 0 blocks.==9541==         suppressed: 0 bytes in 0 blocks.
 
Source Code:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";
    pANTLR3_INPUT_STREAM lInput=NULL; pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL; pPLSQLpredigestParser lPredigestParser=NULL; pPLSQLpredigestLexer lPredigestLexer=NULL;
 lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL); if(!lInput) {  cout<<" input error"<<endl;  return -1; } lInput->setUcaseLA(lInput,ANTLR3_TRUE);     lPredigestLexer = PLSQLpredigestLexerNew(lInput);
 if(!lPredigestLexer) {  cout<<" lPredigestLexer error"<<endl;  return -1; }     lPredigestTokenStream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lPredigestLexer));
 if(!lPredigestTokenStream) {  cout<<" lPredigestTokenStream error"<<endl;  return -1; }     lPredigestParser = PLSQLpredigestParserNew(lPredigestTokenStream);
 if(!lPredigestParser) {  cout<<" lPredigestParser error"<<endl;  return -1;         }     PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);   lPredigestParser->free(lPredigestParser); lPredigestTokenStream->free(lPredigestTokenStream); lPredigestLexer->free(lPredigestLexer); lInput->close(lInput);
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
 
I don't know why so simple code cause so obvious memory leak Could you help me to solve this? (I'm hurry for this code, thanks a lot!) I list the information and attachment includes all code about it (C file ): Platform: RedHat Enterprise 5 Server, virtual machine.GCC version: 4.1.1Antlr Version: 3.1.1  I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com). Thanks a lot.  Best RegardsWinfly Lin
_________________________________________________________________
News, entertainment and everything you care about at Live.com. Get it now!
http://www.live.com/getstarted.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/cba75556/attachment.html 

From cowang at comcast.net  Mon Nov 10 07:09:42 2008
From: cowang at comcast.net (George S. Cowan)
Date: Mon, 10 Nov 2008 10:09:42 -0500
Subject: [antlr-interest] gUnit error with NewLine
In-Reply-To: <CDBA7E185B734014AA092134568490EB@gsce0ae1cfad8d>
Message-ID: <DA156C0F2E644EC18DAF2D66CBAA739C@gsce0ae1cfad8d>

Is this the place to submit gUnit BUGs?
 
Using the Expr.g for the ANTLR Ref, Ch. 3 the following test doesn't work
correctly
--------
/**Expr.testsuite - for the Expr.g grammar of ANTLR Ref, Ch. 3
 *
 * This test should succeed, but gives a failure when this file has PC line
endings:
 *   1 failures found:
 *   test1 (stat, line29) - 
 *   expected: OK
 *   actual: FAIL
 *
 * For UNIX line endings it gives an exception:
 *   Exception in thread "main" java.lang.StringIndexOutOfBoundsException:
String index out of range: -1
 *    at java.lang.String.substring(Unknown Source)
 *    at org.antlr.gunit.gUnitLexer.mML_STRING(gUnitLexer.java:490)
 *    at org.antlr.gunit.gUnitLexer.mTokens(gUnitLexer.java:1338)
 *    at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
 *    at
org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:119)
 *    at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
 *    at org.antlr.runtime.Parser.getCurrentInputSymbol(Parser.java:54)
 *    at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:104)
 *    at org.antlr.gunit.gUnitParser.gUnitDef(gUnitParser.java:76)
 *    at org.antlr.gunit.Interp.parse(Interp.java:75)
 *    at org.antlr.gunit.Interp.main(Interp.java:60)
 */
 
gunit Expr;
 
stat
: 
  // test newline                
  <<
>> OK
-----------------------
 
I'm using ANTLR 3.1.1, Java 1.6.0_07, MSWindows XP SP3
 
George
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/19439ca6/attachment.html 

From qwizv9b02 at sneakemail.com  Mon Nov 10 07:24:16 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 10 Nov 2008 16:24:16 +0100
Subject: [antlr-interest] Debugging: how? (Why do I get
 MismatchedTokenException or UnwantedTokenException?) Unhelpful error
 messages.
In-Reply-To: <gecsde$o2j$1@ger.gmane.org>
References: <ge7422$n0$1@ger.gmane.org>	<200810281136.59755.jbb@acm.org>	<gecgav$8sj$1@ger.gmane.org>	<1225383413.4826.526.camel@jimi>
	<gecsde$o2j$1@ger.gmane.org>
Message-ID: <gf9jn1$qc1$1@ger.gmane.org>

Hendrik Maryns schreef:
> Jim Idle schreef:
>> On Thu, 2008-10-30 at 15:28 +0100, Hendrik Maryns wrote:
>>> John B. Brodie schreef:
>>>> Greetings!
>>>>
>>>> Hendrik Maryns asked:
>>>>
>>>>> I showed you my grammar yesterday.  Now trying it out on some simple
>>>>> inputs blows me away right away: it doesn?t even parse anything.
>>>> Your problem seems to be with your Lexer rule for LABEL which is :
>>>>
>>>> LABEL : ~(')')+ ;
>>>>
>>>> this means that any sequence of characters that is not a ')' must be a
>>>> LABEL.
>>> I am starting to understand the difference between lexer and parser now.
>>>  I was thinking of it as some sort of regular expression parser, but
>>> since the lexer does not know anything about the parser, it doesn?t care
>>> about it.
>>>
>>>> another problem is that ')' is not matched by any Lexer rule. did you
>>>> want OPEN and CLOSE to be parens?
>>> Yes, sorry, a relict of debugging.
>>>
>>>>> Grateful for any suggestions,
>>>>> .....remainder of message snipped....
>>>> Hope this helps
>>> It did, in that I know what is wrong, but I still have no solution to my
>>> problem: how can I make the variable in my label rule be anything?  That
>>> is, I would think anything except whitespace and braces and control
>>> characters would be fine.  In particular, it definitely has to accept
>>> any word in any script, along with some punctuation characters such as .
>>> - _ $ and probably more.
>> There are a couple of solutions, but you don't say what the lexical
>> significance of your labels are, or whether this is a language you are
>> inventing (in which case don't do that), or one you are following a spec
>> for.
> 
> I like your suggestion: don?t do that!
> 
> Well, I am following a spec, but I am free to change it.  Although I
> cannot believe why this wouldn?t be possible: I simply want a lisp-like
> grammar that takes whatever is there.  See my other posts.
> 
> Expected input: (word x whatever), where whatever can be really
> anything, in particular, any word in any human language, so also
> Chinese, etc.  And additionally, some punctuation should be allowed.
> The ?whatever? is clearly defined though: it starts after the space and
> ends before the brace.  It would be a piece of cake to write this as a
> regex: /[^ ][^)]*/, but unfortunately, as John pointed out, if I would
> make a lexer rule out of this, it would eat everything, also the (word,
> which of course should not be matched.  I think the lexer rules are
> stupid, it shoul simply apply the rules in order of appearance, I see
> absolutely no reason for this ?rule which eats most wins? system.
> 
>> In general, such labels tend to be valid in certain places only, such as
>> the start of a line/statement, only following goto and so on. If this is
>> the case, then you use a semantic predicate to check if you are at the
>> first character position in a line, then consume everything up to
>> whitespace and return LABEL. After goto and gosub, then consume the
>> label spec within the definitions of such keywords, make the text of the
>> token be the label, and extract the label from the token in the parser.
>> You just have to think creatively about the trigger points that indicate
>> a label is/could be, next.
> 
> This seems like the way to go.  Could you write this down in newbie
> words please?  While I can make some sense of it, it is too abstract to
> be able to implement it yet.
> 
>> What language is this? This knowledge may help people help you.
> 
> I describe it at
> http://tcl.sfs.uni-tuebingen.de/MonaSearch/doc/#formula-syntax, but note
> that I can change that if need be.  I would prefer not to, since it
> would break existing formulas, but there are not so many of them.
> 
>> If there are no lexical points that trigger a label interpretation, then
>> the next best thing is to construct a parser rule that accumulates label
>> components:
>>
>> label : WORD ( { checkNoSpace() }?=> labelstuff )* ;
> 
> I have been wondering what this => in some grammars is.  Where can I
> read about it?
> 
>> labelstuff
>>        : WORD | DOT | UNDERSCORE | BANG | keywords ... ;
>>
>> Then build the text of the label from the text of the individual tokens
>> and rewrite as a LABEL for the AST.
>>
>> Can't be any more specific without knowing what you are trying to parse.
>> You usually have to look for specific solutions for your DSL when you
>> get in to this stuff as usually it means the language design was weak in
>> the first place.
> 
> I suppose it is.  I think I should start using quoted strings.  But it
> is also a very educational discussion which, to me is showing off some
> of ANTLR?s weaknesses (such as no \p{alpha} classes).

Maybe someone can give some general suggestion on how to tackle this
issue?  I think I should make a more general ID lexer rule and indeed
check whether it is a proper first or second order variable in the
parser rules instead of having separate lexer rules for that.

More suggestions?  And what is => really?

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/d0c10afb/attachment-0001.bin 

From tvial at octo.com  Mon Nov 10 07:48:13 2008
From: tvial at octo.com (Thomas Vial)
Date: Mon, 10 Nov 2008 16:48:13 +0100
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
Message-ID: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>

Hi,

I have noticed that the new version of the antlr3-maven-plugin doesn't make
the build fail when the grammar file contains a syntax error (this used to
be a limitation of ANTLR 3.0.x not setting a return code). Now that the
Maven plugin relies on ANTLR 3.1.1, I would have expected this behavior to
change.

Any plans to fix this? This was, to me, the biggest limitation of the first
version of the plugin!

Here is an extract of my POM, just in case I missed something:
    <build>
        <plugins>
            <!-- ANTLR -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>



Thanks in advance,

Thomas

PS : and so many thanks for setting up the repository!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/2f7552d1/attachment.html 

From jared.bunting at peachjean.com  Mon Nov 10 07:52:47 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 10 Nov 2008 09:52:47 -0600
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
Message-ID: <491858CF.9090006@peachjean.com>

One other issue is that changes in 3.1 seem to have broken the plugin's 
ability to properly order grammar files based on dependencies.  I have 
fixed both of these locally, and would be happy to submit patches if 
anyone is interested.

Thanks,
Jared

Thomas Vial wrote:
> Hi,
>
> I have noticed that the new version of the antlr3-maven-plugin doesn't 
> make the build fail when the grammar file contains a syntax error 
> (this used to be a limitation of ANTLR 3.0.x not setting a return 
> code). Now that the Maven plugin relies on ANTLR 3.1.1, I would have 
> expected this behavior to change.
>
> Any plans to fix this? This was, to me, the biggest limitation of the 
> first version of the plugin!
>
> Here is an extract of my POM, just in case I missed something:
>     <build>
>         <plugins>
>             <!-- ANTLR -->
>             <plugin>
>                 <groupId>org.antlr</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1</version>
>                 <executions>
>                     <execution>
>                         <goals>
>                             <goal>antlr</goal>
>                         </goals>
>                     </execution>
>                 </executions>
>             </plugin>
>         </plugins>
>     </build>
>
>
>
> Thanks in advance,
>
> Thomas
>
> PS : and so many thanks for setting up the repository!!
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From tvial at octo.com  Mon Nov 10 08:35:07 2008
From: tvial at octo.com (Thomas Vial)
Date: Mon, 10 Nov 2008 17:35:07 +0100
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <491858CF.9090006@peachjean.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
	<491858CF.9090006@peachjean.com>
Message-ID: <475086500811100835l4722735cl4507dd0ecf33452e@mail.gmail.com>

That would be great :-)



On Mon, Nov 10, 2008 at 4:52 PM, Jared Bunting
<jared.bunting at peachjean.com>wrote:

> One other issue is that changes in 3.1 seem to have broken the plugin's
> ability to properly order grammar files based on dependencies.  I have fixed
> both of these locally, and would be happy to submit patches if anyone is
> interested.
>
> Thanks,
> Jared
>
> Thomas Vial wrote:
>
>> Hi,
>>
>> I have noticed that the new version of the antlr3-maven-plugin doesn't
>> make the build fail when the grammar file contains a syntax error (this used
>> to be a limitation of ANTLR 3.0.x not setting a return code). Now that the
>> Maven plugin relies on ANTLR 3.1.1, I would have expected this behavior to
>> change.
>>
>> Any plans to fix this? This was, to me, the biggest limitation of the
>> first version of the plugin!
>>
>> Here is an extract of my POM, just in case I missed something:
>>    <build>
>>        <plugins>
>>            <!-- ANTLR -->
>>            <plugin>
>>                <groupId>org.antlr</groupId>
>>                <artifactId>antlr3-maven-plugin</artifactId>
>>                <version>3.1.1</version>
>>                <executions>
>>                    <execution>
>>                        <goals>
>>                            <goal>antlr</goal>
>>                        </goals>
>>                    </execution>
>>                </executions>
>>            </plugin>
>>        </plugins>
>>    </build>
>>
>>
>>
>> Thanks in advance,
>>
>> Thomas
>>
>> PS : and so many thanks for setting up the repository!!
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>


-- 
..........................................................
Thomas VIAL
OCTO Technology
..........................................................
50, Avenue des Champs-Elys?es
75008 Paris
T?l : (33) 1 58 56 10 00
Fax : (33) 1 58 56 10 01
GSM : (33) 6 28 50 07 64
Web : http://www.octo.com/
..........................................................
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/b756d623/attachment.html 

From antlr at quantdev.com  Mon Nov 10 09:30:02 2008
From: antlr at quantdev.com (Michael Lee)
Date: Mon, 10 Nov 2008 12:30:02 -0500
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
Message-ID: <49186F9A.6090402@quantdev.com>

Hi, James

I am a newbie as well. Past 4 weeks, I worked on creating an expression 
engine that will evaluate an FIX message during runtime. What I wanted 
to is 'compile' the expression into an expression during the program 
start time and evaluate them runtime. It also require to have binding to 
'Msg' at evaluation and thread-safe.

For example,

Msg["PRICE"] < 5.00

Msg["PRICE"] will be evaluated during runtime - value is determined by 
FixMsg passed in for evaluation.

For this, I created two separate files (Eval.g and Expr.g). One for 
parsing expression(Expr.g) and one for assembling parsed expression into 
an organized expression object(Eval.g).

Eval.g is a tree grammar. Here is a simplified snippet...

expression returns [ Expression exp ]
: ^(op='+' a=expression b=expression ) { $exp = 
NumericOperationExpression.createOperation( "+" , a , b); }
| ^(op='-' a=expression b=expression ) { $exp = 
NumericOperationExpression.createOperation( "-" , a , b); }
| ^(op='*' a=expression b=expression ) { $exp = 
NumericOperationExpression.createOperation( "*" , a , b); }
| ^(op='/' a=expression b=expression ) { $exp = 
NumericOperationExpression.createOperation( "/" , a , b); }
;

I create an expression object by calling...

InputStream is = new ByteArrayInputStream( exprString.getBytes());

// Create an input character stream from standard in
ANTLRInputStream input = new ANTLRInputStream(is);

// Create an ExprLexer that feeds from that stream
ExprLexer lexer = new ExprLexer(input);

// Create a stream of tokens fed by the lexer
CommonTokenStream tokens = new CommonTokenStream(lexer);

// Create a parser that feeds off the token stream
ExprParser parser = new ExprParser(tokens);

// Begin parsing at rule prog, get return value structure
ExprParser.expression_return r = parser.expression();

// WALK RESULTING TREE
CommonTree t = (CommonTree)r.getTree(); // get tree from parser

// Create a tree node stream from resulting tree
CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);

Eval walker = new Eval(nodes); // create a tree parser
Expression expression = walker.expression();


Expression.evaluate has one argument - Msg. You can expand this to 
include context-binding instead of Msg.

Basically, an expression is compiled during the program start time and 
evaluate them during the runtime with some context.

I hope this helps.

Michael J. Lee



James Abley wrote:
> Hi,
>
> I'm an ANTLR newbie. A code base that I work on has various expression
> evaluation aspects. I have to add to this by defining various
> functions that can be evaluated. ANTLR seemed like a good way of
> separating out the parsing aspects and should let my colleagues
> concentrate on just defining and plugging in new functions without
> having to know much about parsing, etc. I've skimmed the ANTLR
> Reference book, but don't quite have the time to go in depth at this
> point.
>
> I've written a grammar, which seems to do what I need. Doubtless it
> could be trimmed a bit as I learn more. Where I'm stuck is the
> connection between having a grammar which can parse the input and how
> it gets evaluated.
>
> The baggage that I'm struggling with is how to define my environment,
> bind variables, create stack frames, etc.
>
> I think this would be as part of a tree grammar the re-uses the tokens
> from the AST grammar, but would like to confirm.
>
> Cheers,
>
> James
>
>
>
> grammar Eval;
>
> options {
> 	output = AST;
> //	tokenVocab=Expr; // Read token types from Expr.tokens resource
> //	ASTLabelType=CommonTree;    // The Java type of the nodes.
> }
>
> tokens {
> 	FUNC;	// function call
> 	STR;
> }
>
> @parser::header {
> package com.example.expression;
> }
>
> @lexer::header {
> package com.example.expression;
> }
>
> stat	:	expr+;
>
> /*
> For now, we define expr very basically. We don't need to support
> addition, multiplication or other operators. But if we
> do, the grammar is easy to alter.
> */
> expr	:	atom
> 	;
> //multExpr ( ( '+' | '-') multExpr)*;
>
> //multExpr
> //	:	unaryExpr (( '*' | '/') unaryExpr)*;
>
> //unaryExpr
> //	:	('+' | '-')?  atom
> //	;
>
> /* Basic constituent of an expression.*/
> atom	:	var
> 	|	LPAREN expr RPAREN	// Rule to allow nested expressions.
> 	|	functionCall
> 	|	stringLiteral
> 	| 	number
> 	;
>
> functionCall
> 	:	functionName LPAREN ( expr (COMMA expr)* )? RPAREN	-> ^(FUNC
> functionName expr*)
> 	;
>
> functionName
> 	:	ALPHA (ALPHA | '-' | '_' | DIGIT )* ;
> /*
> Added to indicate how we currently reference bound variables in
> expressions.. This lets us parse them easily enough.
> with a view to consolidating our expression evaluation code into this
> ANTLR-based version.
> */
> var	:	'$' ALPHA (ALPHA | '-' | '_' | DIGIT)*
> 	;
>
> stringLiteral	:	'"'  ~'"'* '"'
> 	|	'\'' ~'\''* '\''
> 	;
>
> number	:	DIGIT+ ('.' DIGIT+)?
> 	;
> 	
> DIGIT
> 	:	'0' .. '9';
> 	
> ALPHA
> 	:	 'a' .. 'z'
> 	|	 'A' .. 'Z';
> 	
> COMMA
> 	:	(WS* ',' WS*);
>
> LPAREN	
> 	: 	(WS*  '(' WS*);
> RPAREN	
> 	:	(WS* ')' WS*);
>
> WS
> 	:  	' '
> 	| 	'\t';
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From jared.bunting at peachjean.com  Mon Nov 10 09:34:10 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 10 Nov 2008 11:34:10 -0600
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <475086500811100835l4722735cl4507dd0ecf33452e@mail.gmail.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>	<491858CF.9090006@peachjean.com>
	<475086500811100835l4722735cl4507dd0ecf33452e@mail.gmail.com>
Message-ID: <49187092.4010809@peachjean.com>

Hmm...is there any access to the source other than FishEye?  I can't 
figure out a good way to download the entire source tree so that I can 
write a proper patch...

Thanks,
Jared

Thomas Vial wrote:
> That would be great :-)
>
>
>
> On Mon, Nov 10, 2008 at 4:52 PM, Jared Bunting 
> <jared.bunting at peachjean.com <mailto:jared.bunting at peachjean.com>> wrote:
>
>     One other issue is that changes in 3.1 seem to have broken the
>     plugin's ability to properly order grammar files based on
>     dependencies.  I have fixed both of these locally, and would be
>     happy to submit patches if anyone is interested.
>
>     Thanks,
>     Jared
>
>     Thomas Vial wrote:
>
>         Hi,
>
>         I have noticed that the new version of the antlr3-maven-plugin
>         doesn't make the build fail when the grammar file contains a
>         syntax error (this used to be a limitation of ANTLR 3.0.x not
>         setting a return code). Now that the Maven plugin relies on
>         ANTLR 3.1.1, I would have expected this behavior to change.
>
>         Any plans to fix this? This was, to me, the biggest limitation
>         of the first version of the plugin!
>
>         Here is an extract of my POM, just in case I missed something:
>            <build>
>                <plugins>
>                    <!-- ANTLR -->
>                    <plugin>
>                        <groupId>org.antlr</groupId>
>                        <artifactId>antlr3-maven-plugin</artifactId>
>                        <version>3.1.1</version>
>                        <executions>
>                            <execution>
>                                <goals>
>                                    <goal>antlr</goal>
>                                </goals>
>                            </execution>
>                        </executions>
>                    </plugin>
>                </plugins>
>            </build>
>
>
>
>         Thanks in advance,
>
>         Thomas
>
>         PS : and so many thanks for setting up the repository!!
>         ------------------------------------------------------------------------
>
>
>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>          
>
>
>
>
> -- 
> ..........................................................
> Thomas VIAL
> OCTO Technology
> ..........................................................
> 50, Avenue des Champs-Elys?es
> 75008 Paris
> T?l : (33) 1 58 56 10 00
> Fax : (33) 1 58 56 10 01
> GSM : (33) 6 28 50 07 64
> Web : http://www.octo.com/
> ..........................................................
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From parrt at cs.usfca.edu  Mon Nov 10 09:35:37 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 10 Nov 2008 09:35:37 -0800
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <49187092.4010809@peachjean.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>	<491858CF.9090006@peachjean.com>
	<475086500811100835l4722735cl4507dd0ecf33452e@mail.gmail.com>
	<49187092.4010809@peachjean.com>
Message-ID: <2EB87BCD-9A4A-43BB-8F00-02A01437FFA6@cs.usfca.edu>


On Nov 10, 2008, at 9:34 AM, Jared Bunting wrote:

> Hmm...is there any access to the source other than FishEye?  I can't
> figure out a good way to download the entire source tree so that I can
> write a proper patch...

I can give you read-only access to the entire keep oh using perforce  
if you're. Just mail me directly with username; you'll be good to go.

You should synchronize with Jim Idle, who is working on the maven  
stuff at the moment.

Ter

From antlr at mirality.co.nz  Mon Nov 10 11:14:00 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 11 Nov 2008 08:14:00 +1300
Subject: [antlr-interest] Bug in ANTLR 3.1.1?
In-Reply-To: <4915C4F9.2030703@rvaessen.com>
References: <4915C4F9.2030703@rvaessen.com>
Message-ID: <20081110191410.8B11A11EE17@www.antlr.org>

At 05:57 9/11/2008, Robert Vaessen wrote:
>In the grammar (see the attached grammar file) the start rule 
>calls the booleanExpression rule passing it a string argument. In 
>the generated class the start() method  invokes a "delegated" 
>rule which in turn invokes a "fragment" which in turn invokes the 
>booleanExpression() method (see line 867 in the attached java 
>file) passing it the string argument which was never passed in by 
>the start() method???

It's because you've set backtrack=true, so ANTLR has inserted a 
predicate to perform the lookahead.  Predicates and rule arguments 
don't really play nicely together, especially if they get hoisted.

>start[String inCdlClassName, String inCdlVariableName] returns 
>[String code]
>@init {
>   linkDefinitions();
>   pushDefiniton(inCdlClassName);
>   mCdlVariableName = inCdlVariableName;
>   CodeBuilder builder = new CodeBuilder();
>}
>@after {
>   $code = builder.toString();
>   unlinkDefinitions();
>}
>   : booleanExpression[inCdlVariableName] { 
> builder.append($booleanExpression.code); }
>   | objectPath[builder]
>   ;

The first thing to try is to use $inCdlVariableName here, so that 
ANTLR knows you're referring to the parameter.  (You should always 
do this when referring to a symbol defined in the grammar rather 
than the code.)

If that doesn't help, then you will probably need to use scopes 
instead of rule parameters.  Or you could just use 
mCdlVariableName, since you're saving it anyway.


From antlr at mirality.co.nz  Mon Nov 10 11:32:17 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 11 Nov 2008 08:32:17 +1300
Subject: [antlr-interest] Write a token to the AST within an action
In-Reply-To: <2D03873E-A595-46C5-8B26-8FC27ED1564D@ChrisSek.de>
References: <2D03873E-A595-46C5-8B26-8FC27ED1564D@ChrisSek.de>
Message-ID: <20081110193245.DE6B2312962@www.antlr.org>

At 05:24 10/11/2008, Chris Sekszczynska wrote:
 >There, I like to achieve something like this:
 >
 >		-> ^(PROGRAM ^(GLOBALS {?return the element of
 >$SymbolTable::newGlobals?}) sourceElement*)
 >
 >The GLOBALS-subtree should look like ^(GLOBALS i x y) when "i",
 >"x" and "y" are the token-names in my "newGlobals" ArrayList.

All the functions that ANTLR itself uses to 
construct ASTs are available to your code.

This is air code, so might need a bit of 
tweaking, but it ought to work:

program
scope SymbolTable;
@init {
   // initialize the scope for this block
   $SymbolTable::newGlobals = new ArrayList<String>();
   CommonTree globalTree = null;
}
@after {
   System.out.println("Number of globals: " + 
$SymbolTable::newGlobals.size());
}
   : sourceElement*
     {
       globalTree = (CommonTree)adaptor.becomeRoot(
           adaptor.create(GLOBALS, "GLOBALS"), adaptor.nil());
       foreach (String name in $SymbolTable::newGlobals)
       {
         adaptor.addChild(globalTree, adaptor.create(ID, name));
       }
     }
	    -> ^(PROGRAM {globalTree} sourceElement*)
	 ;


From yuri at tijerino.net  Mon Nov 10 11:36:09 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Tue, 11 Nov 2008 04:36:09 +0900
Subject: [antlr-interest] Recovering from partial rule matches
Message-ID: <49188D29.90401@tijerino.net>

Hi All,

I have been working with ANTLR for about 3.5 months on a domain-specific 
language for a very constrained domain in natural language, English.  I 
have created a fairly complex EBNF grammar for this.  Thus far I have 
been able to solve most of my questions through documentation and 
looking at the mailing list archives.

One of the requirements for this parser is that it goes through any 
English sentence and extract only the phrases that match the parsing 
rules, while skipping others.  The problem I have found with this, is 
that when the rules (parser or lexer), do not match anything in an 
sentence and then encounter something that matches, it works great with 
the automatic error recovery strategy in ANTLR, however, when there is a 
partial match of a parser rule, I get an "required (..)+ loop did not 
match anything at input" exception. 

Is there anyway to throw away the token that caused this exception and 
continue with the rest of the input? 

Currently I am handling most of these problems by creating an additional 
rule where all the alternatives are the single tokens at the beginning 
of the rules that cause the problem above.  This works fine, but 
increases the complexity of the DFA and causes munch unwanted 
ambiguities.  There has got to be a better way.

I am using ANTLR 3.1.1 and my target language is Java.

Any help is very much appreciated.

Yuri Tijerino

From antlr at mirality.co.nz  Mon Nov 10 11:39:20 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 11 Nov 2008 08:39:20 +1300
Subject: [antlr-interest] Why does syntactic predicate not take effect?
In-Reply-To: <562265.27067.qm@web27003.mail.ukl.yahoo.com>
References: <562265.27067.qm@web27003.mail.ukl.yahoo.com>
Message-ID: <20081110193931.8F06ECE953@www.antlr.org>

At 23:32 10/11/2008, Britta Kiera wrote:
 >The lexer was supposed to generate a NAMES token for the feature 

 >name sequence. The definition below shows an approach that I 
tried
 >to accomplish this. This approach didn't work. The lexer never
 >generated a NAMES token although I tried
 >to enforce this using a syntactic predicate. I solved this 
problem
 >in the parser but I'd like to understand why the
 >syntactic predicate does not take effect. Can somebody explain 
this
 >to me?

Are you using the interpreter or the debugger (or a "real" 
compiled program)?  Because the interpreter doesn't evaluate 
predicates.

 >NAMES:
 >    ;

You need to make this a fragment rule.  Otherwise you've got a 
top-level lexer rule which can successfully match nothing at all, 
which is Bad.  (Since that way lies infinite loops.)


From antlr at mirality.co.nz  Mon Nov 10 11:45:47 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 11 Nov 2008 08:45:47 +1300
Subject: [antlr-interest] On to the next issue: error(211)
In-Reply-To: <gf965l$90v$1@ger.gmane.org>
References: <gf965l$90v$1@ger.gmane.org>
Message-ID: <20081110194628.89AC4CE955@www.antlr.org>

At 00:33 11/11/2008, Hendrik Maryns wrote:
 >error(211): fsqTreeParser.g:68:3: [fatal] rule body has 
non-LL(*)
 >decision due to recursive rule invocations reachable from alts
 >3,5. Resolve by left-factoring or using syntactic predicates or
 >using backtrack=true option.
[...]
 >body returns [Formula result]
 >  : label { $result = $label.result; }
 >  | atomic { $result = $atomic.result; }
 >  | unary { $result = $unary.result; }
 >  | binary { $result = $binary.result; }
 >  | n_ary { $result = $n_ary.result; }
 >  | quantor { $result = $quantor.result; }
 >  ;
 >
 >Indeed, the unary, binary, n_ary and quantor rules (indirectly)
 >refer to formula:

It's unlikely that this would be the problem, or at least not 
directly.  It's more likely an issue with your AST structure being 
too ambiguous.

Can you post your unary, binary, and n_ary rules (and any subrules 
they refer to)?


From parrt at cs.usfca.edu  Mon Nov 10 12:45:11 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 10 Nov 2008 12:45:11 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
Message-ID: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>

http://openjdk.java.net/projects/compiler-grammar/

Direct link to the grammar:

http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g

USF MSCS student Yang Jiang built this as an intern for Sun.

Terence

From sharwell at pixelminegames.com  Mon Nov 10 12:52:06 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 10 Nov 2008 14:52:06 -0600
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E7F8@Bloodymary.ironwillgames.com>

Oh, this is excellent news.

http://picsorban.com/upload/excellent.jpg

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, November 10, 2008 2:45 PM
To: antlr-interest Interest
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler

http://openjdk.java.net/projects/compiler-grammar/

Direct link to the grammar:

http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g

USF MSCS student Yang Jiang built this as an intern for Sun.

Terence

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From robert at rvaessen.com  Mon Nov 10 13:04:26 2008
From: robert at rvaessen.com (Robert Vaessen)
Date: Mon, 10 Nov 2008 16:04:26 -0500
Subject: [antlr-interest] Bug in ANTLR 3.1.1?
In-Reply-To: <4915C4F9.2030703@rvaessen.com> 
References: <4915C4F9.2030703@rvaessen.com> 
Message-ID: <4918A1DA.1050802@rvaessen.com>

Thx Gavin.

I've already tried adding the $ to the variable name. BTW: I am still 
waiting for complete understanding on this one - some times it matters 
and some times it doesn't.

And isn't it interesting that the invocation of objectPath doesn't have 
the same problem?

____________________
Robert Jozef Vaessen
robert at rvaessen.com
(704) 996-1080




Gavin Lambert wrote:
> At 05:57 9/11/2008, Robert Vaessen wrote:
>> In the grammar (see the attached grammar file) the start rule calls 
>> the booleanExpression rule passing it a string argument. In the 
>> generated class the start() method  invokes a "delegated" rule which 
>> in turn invokes a "fragment" which in turn invokes the 
>> booleanExpression() method (see line 867 in the attached java file) 
>> passing it the string argument which was never passed in by the 
>> start() method???
>
> It's because you've set backtrack=true, so ANTLR has inserted a 
> predicate to perform the lookahead.  Predicates and rule arguments 
> don't really play nicely together, especially if they get hoisted.
>
>> start[String inCdlClassName, String inCdlVariableName] returns 
>> [String code]
>> @init {
>>   linkDefinitions();
>>   pushDefiniton(inCdlClassName);
>>   mCdlVariableName = inCdlVariableName;
>>   CodeBuilder builder = new CodeBuilder();
>> }
>> @after {
>>   $code = builder.toString();
>>   unlinkDefinitions();
>> }
>>   : booleanExpression[inCdlVariableName] { 
>> builder.append($booleanExpression.code); }
>>   | objectPath[builder]
>>   ;
>
> The first thing to try is to use $inCdlVariableName here, so that 
> ANTLR knows you're referring to the parameter.  (You should always do 
> this when referring to a symbol defined in the grammar rather than the 
> code.)
>
> If that doesn't help, then you will probably need to use scopes 
> instead of rule parameters.  Or you could just use mCdlVariableName, 
> since you're saving it anyway.
>
>
>



From cowang at comcast.net  Mon Nov 10 13:57:27 2008
From: cowang at comcast.net (George S. Cowan)
Date: Mon, 10 Nov 2008 16:57:27 -0500
Subject: [antlr-interest] gUnit suggestion: treat Lexer and Parser errors
	the same
Message-ID: <0354A78154154BBB9D8F5CB68E085086@gsce0ae1cfad8d>

I have experimented with gUnit a little and I think it has real
possibilities. I would find it more useful if lexer failures were treated
the same as parser failures.
 
For instance, gUnit does not allow me to specify a Lexer test, e.g.,
  ID: "93XXX" FAIL
 
Also, as long as no lexer errors are involved, gUnit treats parser errors
much as I expect a unit tester to do. That is, a very simple message is
given when all tests are successful, and only failing tests are reported.
However all lexer errors are reported, even when the test is marked as FAIL.
This means that if I test that a lexer handles invalid tokens correctly, I
have to scan the "invalid input" messages to make sure that it happened at
the point I expected the failure.
 
Even weirder, a parser test with an OK that fails because of a lexer failure
is not counted as a test failure, although it is listed as an "invalid
input".
 
This limits gUnit to use where no lexer mistakes are made. If I adopt a
strategy of assuming that my lexer works, then when I get any message it
means that something went wrong. But note that there may be false negatives:
if something goes wrong because my lexer collected characters into an
unexpected and goofy set of tokens, my tests may FAIL or be OK for a
different reason than I think I am testing, leaving my worries about the
original problem untested. 
 
Here is a sample testsuite:
------------- file follows this line ----------------
/**Expr.testsuite - tests for the Expr grammar of ANTLR Ref, Ch. 3
 *  (really this is to test the use of gunit)
 */
 
//   why not test Lexer as well as Parser? e.g.,
//   ID: "93XXX" FAIL 
 

gunit Expr;
 
stat
: "99 = a" FAIL     // --> Marked as FAIL, 
                    //     so should not give INVALID INPUT message <--
  "99 = a" OK       // --> INVALID INPUT, BUT SHOULD ALSO BE FAILURE <--
 
  <<a = 99>> FAIL   // because newline required
 
expr
: "12*a + B * 93XXX"  OK     // --> Marked as OK, so should give FAILURE msg
                             //     (as well as INVALID INPUT?)
<--
  "5+ a*Z"         OK
  "5+ a - b*c*22"  OK
  "+21"            FAIL
  "-12"            FAIL  
  "a - -3"         FAIL
  "b++"            FAIL
  "5-(3-(4-6-2))"  OK
  "5-(a)-()"       FAIL
 
multExpr
: "a*3" OK
  "4" OK
  "B * 93XXX" FAIL           // --> Marked as FAIL, 
                             //     so should not give INVALID INPUT message
<--
  "B" OK
  "2*3" OK
  "(2*4)" OK
 
atom
: "93XXX" FAIL               // --> Marked as FAIL, 
                             //     so should not give INVALID INPUT message
<--
  "KA"      OK 
  "ka"      OK   
 
  "93"           OK
  "9 "           OK
  "  ( 92doo ) " FAIL
  "  ( 92    ) " OK
  "  ( doo   ) " OK
  "  (92 "       FAIL
  "()"           FAIL
----------- end of file -------------
 
 
And here is the output:
========== file follows this line ============
-----------------------------------------------------------------------
executing testsuite for grammar:Expr with 28 tests
-----------------------------------------------------------------------
0 failures found:
5 invalid inputs found:
test1 (stat, line12) - 
invalid input: 99 = a
test2 (stat, line14) - 
invalid input: 99 = a
test4 (expr, line19) - 
invalid input: 12*a + B * 93XXX
test15 (multExpr, line33) - 
invalid input: B * 93XXX
test19 (atom, line40) - 
invalid input: 93XXX
 
Tests run: 28, Failures: 0
=========== end of file ============
 
George
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/f8fcfa03/attachment.html 

From nukiti at yahoo.de  Mon Nov 10 14:16:04 2008
From: nukiti at yahoo.de (Britta Kiera)
Date: Mon, 10 Nov 2008 22:16:04 +0000 (GMT)
Subject: [antlr-interest] Why does syntactic predicate not take effect?
Message-ID: <391061.82865.qm@web27001.mail.ukl.yahoo.com>

Don't know if the first reply was sent. Trying it a second time.

> At 23:32 10/11/2008, Britta Kiera wrote:
> >The lexer was supposed to generate a NAMES token for the feature
> >name sequence. The definition below shows an approach that I tried
> >to accomplish this. This approach didn't work. The lexer never
> >generated a NAMES token although I tried
> >to enforce this using a syntactic predicate. I solved this problem
> >in the parser but I'd like to understand why the
> >syntactic predicate does not take effect. Can somebody explain this
> >to me?
>
> Are you using the interpreter or the debugger (or a "real" compiled program)? 
> Because the interpreter doesn't evaluate predicates.
I'm not using ANTLRWorks. I'm using the ANTLR IDE Eclipse plugin with
the ANTLR 3.1.1 runtime to generate the lexer code. Then I run the main
method of the generated lexer using the Eclipse "Run" command. The main
method of the grammar that I sent with my first mail contains a short test.

> >NAMES:
> >    ;
>
> You need to make this a fragment rule.  Otherwise you've got a top-level lexer
> rule which can successfully match nothing at all, which is Bad.  (Since that way
> lies infinite loops.)
In the grammar below NAMES has been made a fragment. But still it produces the same
output as before that doesn't contain a NAMES token:

Token:  WHITE(99) >   <
Token:  IDENT( 0) >plugins<
Token:  DOT( 0) >.<
Token:  IDENT( 0) >navigation<
Token:  DOT( 0) >.<
Token:  IDENT( 0) >XRefs<
Token:  WHITE(99) > <
Token:  IDENT( 0) >Outline<
Token:  WHITE(99) > <
Token:  IDENT( 0) >GoTo<
Token:  WHITE(99) > <
Token:  LB( 0) >{<
Token:  RB( 0) >}<
Token:  -1( 0) >null<

Regards,
Nukiti

========================= modified ANTLR lexer start ======================
lexer grammar SimpleLex;

options {
    language = Java;
}

@header {
package test.antlr;

import java.io.StringReader;
}

@members {
    public static void main(String args[]) throws Exception {
        String      input = "   plugins.navigation.XRefs Outline GoTo {}";
        CharStream  cs    = new ANTLRStringStream(input);
        SimpleLex   lex   = new SimpleLex(cs);
       
        Token t;
        do {
            String type = "?";
            t=lex.nextToken();
            switch(t.getType()) {
                case IDENT: type = "IDENT"; break;
                case NAMES: type = "NAMES"; break;
                case DOT  : type = "DOT"  ; break;
                case WHITE: type = "WHITE"; break;
                case LB   : type = "LB"   ; break;
                case RB   : type = "RB"   ; break;
                default   : type = Integer.toString(t.getType()); break;
            }
            System.out.printf("Token: %6s(%2d) >%s<\n", type, t.getChannel(), t.getText());
        }
        while(t.getType() != -1);
    }
}

IDENT
    : (ID (WS ID)+)=> ID (WS ID)+ {$type = NAMES;}
    | ID
    ;
    
WHITE
    : WS { $channel = HIDDEN; }
    ;

LB  : '{' ;
RB  : '}' ;
DOT : '.' ;

fragment NAMES :;
fragment WS    : (' '|'\r'|'\t'|'\u000C'|'\n')+;
fragment ID    : LETTER (LETTER|DIGIT)*;
fragment DIGIT : '0'..'9';
fragment LETTER: 'A'..'Z' | 'a'..'z' | '_';


      

From matthew.e.boyce at gmail.com  Mon Nov 10 14:34:48 2008
From: matthew.e.boyce at gmail.com (Matthew E. Boyce)
Date: Mon, 10 Nov 2008 14:34:48 -0800
Subject: [antlr-interest] Status of C++ support for ANTLR 3
Message-ID: <8A0A0724-3659-467C-B672-F9A62E1418B1@gmail.com>

Hello everyone... I've been using ANTLR 2 for several years now and  
would like to make the switch to ANTLR 3 while at the same time  
switching target languages (our old parser was java), but current  
support for C++ through the C support seems to be a little clumsy.  On  
the target languages wiki it says that "C++ classes will be provided  
as a separate library later in 2008."  It's pretty late into 2008, so  
I'm wondering if this has been abandoned or postponed.  I would much  
prefer using ANTLR 3, but other members of my project would like to go  
back to ANTLR 2 without this support.

~MEB

From jimi at temporal-wave.com  Mon Nov 10 15:11:09 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 10 Nov 2008 15:11:09 -0800
Subject: [antlr-interest] Generated code dismatch
In-Reply-To: <49182938.9030900@peachjean.com>
References: <E1KyPfb-0009RB-Pk@ffe11.ukr.net> <49182771.5080505@gmx.de>
	<49182938.9030900@peachjean.com>
Message-ID: <1226358669.20066.0.camel@jimi.temporal-wave.com>

On Mon, 2008-11-10 at 06:29 -0600, Jared Bunting wrote:
> I can confirm that antlr3-maven-plugin from codehaus uses antlr 3.0 to 
> generate the code.  Unfortunately, code changes are required to get it 
> to work properly with 3.1.1.  Fortunately, Jim Idle has moved the plugin 
> to antlr and made those necessary changes.  If you change your plugin's 
> groupId to org.antlr and it's version to 3.1.1, your problem should be 
> resolved.


Yes, and it seems that the maven repository is syncing from the
antlr.org repository now too, so it shoudl just work.

Jim



From jimi at temporal-wave.com  Mon Nov 10 15:14:57 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 10 Nov 2008 15:14:57 -0800
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <491858CF.9090006@peachjean.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
	<491858CF.9090006@peachjean.com>
Message-ID: <1226358897.20066.3.camel@jimi.temporal-wave.com>

On Mon, 2008-11-10 at 09:52 -0600, Jared Bunting wrote:
> One other issue is that changes in 3.1 seem to have broken the plugin's 
> ability to properly order grammar files based on dependencies.  I have 
> fixed both of these locally, and would be happy to submit patches if 
> anyone is interested.

It was broken beofer and there is a patch for it, but I did not get time
to add it. However, please send me the patch if you have already worked
it out for 3.1.1 as I will use that if you have verified that it
works :-)

Jim

> 
> Thanks,
> Jared
> 
> Thomas Vial wrote:
> > Hi,
> >
> > I have noticed that the new version of the antlr3-maven-plugin doesn't 
> > make the build fail when the grammar file contains a syntax error 
> > (this used to be a limitation of ANTLR 3.0.x not setting a return 
> > code). Now that the Maven plugin relies on ANTLR 3.1.1, I would have 
> > expected this behavior to change.
> >
> > Any plans to fix this? This was, to me, the biggest limitation of the 
> > first version of the plugin!
> >
> > Here is an extract of my POM, just in case I missed something:
> >     <build>
> >         <plugins>
> >             <!-- ANTLR -->
> >             <plugin>
> >                 <groupId>org.antlr</groupId>
> >                 <artifactId>antlr3-maven-plugin</artifactId>
> >                 <version>3.1.1</version>
> >                 <executions>
> >                     <execution>
> >                         <goals>
> >                             <goal>antlr</goal>
> >                         </goals>
> >                     </execution>
> >                 </executions>
> >             </plugin>
> >         </plugins>
> >     </build>
> >
> >
> >
> > Thanks in advance,
> >
> > Thomas
> >
> > PS : and so many thanks for setting up the repository!!
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >   
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jbb at acm.org  Mon Nov 10 15:16:42 2008
From: jbb at acm.org (John B. Brodie)
Date: Mon, 10 Nov 2008 18:16:42 -0500
Subject: [antlr-interest] Why does syntactic predicate not take effect?
In-Reply-To: <391061.82865.qm@web27001.mail.ukl.yahoo.com>
References: <391061.82865.qm@web27001.mail.ukl.yahoo.com>
Message-ID: <200811101816.42550.jbb@acm.org>

Britta Kiera wrote:
> Don't know if the first reply was sent. Trying it a second time.
>
> > At 23:32 10/11/2008, Britta Kiera wrote:
> > >The lexer was supposed to generate a NAMES token for the feature
> > >name sequence. The definition below shows an approach that I tried
> > >to accomplish this. This approach didn't work. The lexer never
> > >generated a NAMES token although I tried
> > >to enforce this using a syntactic predicate. I solved this problem
> > >in the parser but I'd like to understand why the
> > >syntactic predicate does not take effect. Can somebody explain this
> > >to me?
> >
> > Are you using the interpreter or the debugger (or a "real" compiled
> > program)? Because the interpreter doesn't evaluate predicates.
>
> I'm not using ANTLRWorks. I'm using the ANTLR IDE Eclipse plugin with
> the ANTLR 3.1.1 runtime to generate the lexer code. Then I run the main
> method of the generated lexer using the Eclipse "Run" command. The main
> method of the grammar that I sent with my first mail contains a short test.
>
> > >NAMES:
> > > ? ?;
> >
> > You need to make this a fragment rule. ?Otherwise you've got a top-level
> > lexer rule which can successfully match nothing at all, which is Bad.
> > ?(Since that way lies infinite loops.)
>
> In the grammar below NAMES has been made a fragment. But still it produces
> the same output as before that doesn't contain a NAMES token:

actually I believe the prefered way is to specify this and any other Virtural 
Token in a tokens {} section - should appear after the options {} and before 
your @header {} section.

>
> Token: ?WHITE(99) > ? <
> Token: ?IDENT( 0) >plugins<
> Token: ?DOT( 0) >.<
> Token: ?IDENT( 0) >navigation<
> Token: ?DOT( 0) >.<
> Token: ?IDENT( 0) >XRefs<
> Token: ?WHITE(99) > <
> Token: ?IDENT( 0) >Outline<
> Token: ?WHITE(99) > <
> Token: ?IDENT( 0) >GoTo<
> Token: ?WHITE(99) > <

here is, i believe the problem, see comments near your IDENT rule below.

> Token: ?LB( 0) >{<
> Token: ?RB( 0) >}<
> Token: ?-1( 0) >null<
>
> Regards,
> Nukiti
>
> ========================= modified ANTLR lexer start ======================
> lexer grammar SimpleLex;
>
> options {
> ? ? language = Java;
> }
>
> @header {
> package test.antlr;
>
> import java.io.StringReader;
> }
>
> @members {
> ? ? public static void main(String args[]) throws Exception {
> ? ? ? ? String ? ? ?input = " ? plugins.navigation.XRefs Outline GoTo {}";
> ? ? ? ? CharStream ?cs ? ?= new ANTLRStringStream(input);
> ? ? ? ? SimpleLex ? lex ? = new SimpleLex(cs);
> ? ? ? ?
> ? ? ? ? Token t;
> ? ? ? ? do {
> ? ? ? ? ? ? String type = "?";
> ? ? ? ? ? ? t=lex.nextToken();
> ? ? ? ? ? ? switch(t.getType()) {
> ? ? ? ? ? ? ? ? case IDENT: type = "IDENT"; break;
> ? ? ? ? ? ? ? ? case NAMES: type = "NAMES"; break;
> ? ? ? ? ? ? ? ? case DOT ?: type = "DOT" ?; break;
> ? ? ? ? ? ? ? ? case WHITE: type = "WHITE"; break;
> ? ? ? ? ? ? ? ? case LB ? : type = "LB" ? ; break;
> ? ? ? ? ? ? ? ? case RB ? : type = "RB" ? ; break;
> ? ? ? ? ? ? ? ? default ? : type = Integer.toString(t.getType()); break;
> ? ? ? ? ? ? }
> ? ? ? ? ? ? System.out.printf("Token: %6s(%2d) >%s<\n", type,
> t.getChannel(), t.getText()); }
> ? ? ? ? while(t.getType() != -1);
> ? ? }
> }
>
> IDENT
> ? ? : (ID (WS ID)+)=> ID (WS ID)+ {$type = NAMES;}

recall that ANTLR lexer constructs greedily consume the longest possible 
string, and that, further, once commited to a particular looping construct no 
other alternative is recognized. so your predicate wants a list of WS ID 
pairs. fine. good. gotcha. but your input has some WS ID pairs and then a WS 
LB pair - that does not match a (WS ID)+ and the predicate fails.

remove the blank before the { in your test data and see what I mean.

so try this ident rule instead:

IDENT
    : ID ( ((WS ID)=>(WS ID))+ {$type = NAMES;} )?
    ;

> ? ? | ID
> ? ? ;
> ? ?
> WHITE
> ? ? : WS { $channel = HIDDEN; }
> ? ? ;
>
> LB ?: '{' ;
> RB ?: '}' ;
> DOT : '.' ;
>
> fragment NAMES :;
> fragment WS ? ?: (' '|'\r'|'\t'|'\u000C'|'\n')+;
> fragment ID ? ?: LETTER (LETTER|DIGIT)*;
> fragment DIGIT : '0'..'9';
> fragment LETTER: 'A'..'Z' | 'a'..'z' | '_';

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/d41c3b74/attachment.html 

From jimi at temporal-wave.com  Mon Nov 10 15:22:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 10 Nov 2008 15:22:03 -0800
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
Message-ID: <1226359323.20066.4.camel@jimi.temporal-wave.com>

On Mon, 2008-11-10 at 16:48 +0100, Thomas Vial wrote:
> Hi,
> 
> I have noticed that the new version of the antlr3-maven-plugin doesn't
> make the build fail when the grammar file contains a syntax error
> (this used to be a limitation of ANTLR 3.0.x not setting a return
> code). Now that the Maven plugin relies on ANTLR 3.1.1, I would have
> expected this behavior to change.

I'll get to it I guess. First job was to understand how Maven worked and
produce a rspository and so on. THis tookl way longer than i had hoped
but is in place now.

Jim



From jimi at temporal-wave.com  Mon Nov 10 15:25:09 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 10 Nov 2008 15:25:09 -0800
Subject: [antlr-interest] Status of C++ support for ANTLR 3
In-Reply-To: <8A0A0724-3659-467C-B672-F9A62E1418B1@gmail.com>
References: <8A0A0724-3659-467C-B672-F9A62E1418B1@gmail.com>
Message-ID: <1226359509.20066.7.camel@jimi.temporal-wave.com>

On Mon, 2008-11-10 at 14:34 -0800, Matthew E. Boyce wrote:
> Hello everyone... I've been using ANTLR 2 for several years now and  
> would like to make the switch to ANTLR 3 while at the same time  
> switching target languages (our old parser was java), but current  
> support for C++ through the C support seems to be a little clumsy.  On  
> the target languages wiki it says that "C++ classes will be provided  
> as a separate library later in 2008."  It's pretty late into 2008, so  
> I'm wondering if this has been abandoned or postponed.  I would much  
> prefer using ANTLR 3, but other members of my project would like to go  
> back to ANTLR 2 without this support.
> 

Still going to do this. However, I am a bit overloaded at the moment.
Try the C with C++ optoin though as there should be so little
interaction between your grammar and C++ code that I don't think you
will have any issues of clumsiness really. Your grammar action code
shoudl just be calling external methods really.

Jim

> ~MEB
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From leon.antlr at mac.com  Mon Nov 10 19:35:24 2008
From: leon.antlr at mac.com (Leon Su)
Date: Mon, 10 Nov 2008 19:35:24 -0800
Subject: [antlr-interest] gUnit suggestion: treat Lexer and Parser
	errors	the same
In-Reply-To: <0354A78154154BBB9D8F5CB68E085086@gsce0ae1cfad8d>
References: <0354A78154154BBB9D8F5CB68E085086@gsce0ae1cfad8d>
Message-ID: <CDABE1C5-6A25-4875-8FA2-6EBE269D77BB@mac.com>

Hi George,

Thanks for the suggestion. There's indeed a need to add the  
functionality of testing lexical rules separately in gUnit. I'll try  
to add this support into the next release soon :)

Leon

On Nov 10, 2008, at 1:57 PM, George S. Cowan wrote:

> I have experimented with gUnit a little and I think it has real  
> possibilities. I would find it more useful if lexer failures were  
> treated the same as parser failures.
>
> For instance, gUnit does not allow me to specify a Lexer test, e.g.,
>   ID: "93XXX" FAIL
>
> Also, as long as no lexer errors are involved, gUnit treats parser  
> errors much as I expect a unit tester to do. That is, a very simple  
> message is given when all tests are successful, and only failing  
> tests are reported. However all lexer errors are reported, even  
> when the test is marked as FAIL. This means that if I test that a  
> lexer handles invalid tokens correctly, I have to scan the "invalid  
> input" messages to make sure that it happened at the point I  
> expected the failure.
>
> Even weirder, a parser test with an OK that fails because of a  
> lexer failure is not counted as a test failure, although it is  
> listed as an "invalid input".
>
> This limits gUnit to use where no lexer mistakes are made. If I  
> adopt a strategy of assuming that my lexer works, then when I get  
> any message it means that something went wrong. But note that there  
> may be false negatives: if something goes wrong because my lexer  
> collected characters into an unexpected and goofy set of tokens, my  
> tests may FAIL or be OK for a different reason than I think I am  
> testing, leaving my worries about the original problem untested.
>
> Here is a sample testsuite:
> ------------- file follows this line ----------------
> /**Expr.testsuite - tests for the Expr grammar of ANTLR Ref, Ch. 3
>  *  (really this is to test the use of gunit)
>  */
>
> //   why not test Lexer as well as Parser? e.g.,
> //   ID: "93XXX" FAIL
>
>
> gunit Expr;
>
> stat
> : "99 = a" FAIL     // --> Marked as FAIL,
>                     //     so should not give INVALID INPUT message  
> <--
>   "99 = a" OK       // --> INVALID INPUT, BUT SHOULD ALSO BE  
> FAILURE <--
>
>   <<a = 99>> FAIL   // because newline required
>
> expr
> : "12*a + B * 93XXX"  OK     // --> Marked as OK, so should give  
> FAILURE msg
>                              //     (as well as INVALID  
> INPUT?)              <--
>   "5+ a*Z"         OK
>   "5+ a - b*c*22"  OK
>   "+21"            FAIL
>   "-12"            FAIL
>   "a - -3"         FAIL
>   "b++"            FAIL
>   "5-(3-(4-6-2))"  OK
>   "5-(a)-()"       FAIL
>
> multExpr
> : "a*3" OK
>   "4" OK
>   "B * 93XXX" FAIL           // --> Marked as FAIL,
>                              //     so should not give INVALID  
> INPUT message <--
>   "B" OK
>   "2*3" OK
>   "(2*4)" OK
>
> atom
> : "93XXX" FAIL               // --> Marked as FAIL,
>                              //     so should not give INVALID  
> INPUT message <--
>   "KA"      OK
>   "ka"      OK
>
>   "93"           OK
>   "9 "           OK
>   "  ( 92doo ) " FAIL
>   "  ( 92    ) " OK
>   "  ( doo   ) " OK
>   "  (92 "       FAIL
>   "()"           FAIL
> ----------- end of file -------------
>
>
> And here is the output:
> ========== file follows this line ============
> ---------------------------------------------------------------------- 
> -
> executing testsuite for grammar:Expr with 28 tests
> ---------------------------------------------------------------------- 
> -
> 0 failures found:
> 5 invalid inputs found:
> test1 (stat, line12) -
> invalid input: 99 = a
> test2 (stat, line14) -
> invalid input: 99 = a
> test4 (expr, line19) -
> invalid input: 12*a + B * 93XXX
> test15 (multExpr, line33) -
> invalid input: B * 93XXX
> test19 (atom, line40) -
> invalid input: 93XXX
>
> Tests run: 28, Failures: 0
> =========== end of file ============
>
> George
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr- 
> interest/your-email-address
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081110/d14d6b10/attachment.html 

From jared.bunting at peachjean.com  Mon Nov 10 22:37:18 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Tue, 11 Nov 2008 00:37:18 -0600
Subject: [antlr-interest] more gUnit suggestions
Message-ID: <4919281E.1090409@peachjean.com>

I was looking at writing a Maven plugin around gUnit tonight, and I ran 
into two issues that I was hoping could be addressed.

My approach was to use the JUnitCodeGen class to generate JUnit classes 
during maven's generate-test-sources phase. 


The first issue that I ran into was that I was unable to specify the 
output directory.  I was able to get around this by extending 
JUnitCodeGen and overriding "writeTestFile", but this seems a bit 
hackish, as I had to throw away the "dir" parameter to this method  
(which is hard coded as ".").  Something like a "setOutputDirectory" 
that was then used in the call to writeTestFile would be much more 
elegant here.

The second issue was in the constructor, where it invokes 
"Class.forName(...)".  When I'm invoking this from maven, my generated 
parser classes likely aren't in the system ClassLoader.  However, I am 
able to load them all into a child ClassLoader, so it would be great if 
there were a way to provide a ClassLoader to JUnitCodeGen so that it can 
load the parser class from there instead.  Unfortunately, I wasn't able 
to work around this one without modifying JUnitCodeGen.

Is this the preferred way to access GUnit programmatically?  I'm open 
for suggestions.

Thanks,
Jared

From sharwell at pixelminegames.com  Mon Nov 10 23:28:38 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 11 Nov 2008 01:28:38 -0600
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E802@Bloodymary.ironwillgames.com>

I was able to use the Java.g grammar to create a syntax highlighter in a
skeleton Visual Studio language service in about 45 minutes today. It
was very easy to use from the clean work on it! :)

The lexer goes from 19000+ to just over 11000 lines, and codegen time is
cut in half or better if you do the following:

The last alt in each of IdentifierStart and IdentifierPart prevent those
rules from evaluating as sets. Change the IDENTIFIER rule to this:

IDENTIFIER
	:	(IdentifierStart | IdentifierStart2) (IdentifierPart |
IdentifierPart2)*
	;

And move the last lines of IdentifierStart and IdentifierPart to the new
fragment rules IdentifierStart2 and IdentifierPart2 (they should no
longer be alts in IdentifierStart and IdentifierPart):

fragment
IdentifierStart2
	:	('\ud800'..'\udbff') ('\udc00'..'\udfff')
	;

fragment
IdentifierPart2
	:	('\ud800'..'\udbff') ('\udc00'..'\udfff')
	;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, November 10, 2008 2:45 PM
To: antlr-interest Interest
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler

http://openjdk.java.net/projects/compiler-grammar/

Direct link to the grammar:

http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g

USF MSCS student Yang Jiang built this as an intern for Sun.

Terence

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From james.abley at gmail.com  Tue Nov 11 01:48:57 2008
From: james.abley at gmail.com (James Abley)
Date: Tue, 11 Nov 2008 09:48:57 +0000
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <49186F9A.6090402@quantdev.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
	<49186F9A.6090402@quantdev.com>
Message-ID: <23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>

Hi Michael,

That helps, thanks. I have something like that, but I'm a little stuck
with getting the Eval.g grammar going. I think I need to start with a
simpler grammar and get a better handle on how that will hang
together, and then see if I still don't understand how to apply that
to my problem, and then take the CMinus example from the book and play
around with that a little.

Cheers,

James


2008/11/10 Michael Lee <antlr at quantdev.com>:
> Hi, James
>
> I am a newbie as well. Past 4 weeks, I worked on creating an expression
> engine that will evaluate an FIX message during runtime. What I wanted to is
> 'compile' the expression into an expression during the program start time
> and evaluate them runtime. It also require to have binding to 'Msg' at
> evaluation and thread-safe.
>
> For example,
>
> Msg["PRICE"] < 5.00
>
> Msg["PRICE"] will be evaluated during runtime - value is determined by
> FixMsg passed in for evaluation.
>
> For this, I created two separate files (Eval.g and Expr.g). One for parsing
> expression(Expr.g) and one for assembling parsed expression into an
> organized expression object(Eval.g).
>
> Eval.g is a tree grammar. Here is a simplified snippet...
>
> expression returns [ Expression exp ]
> : ^(op='+' a=expression b=expression ) { $exp =
> NumericOperationExpression.createOperation( "+" , a , b); }
> | ^(op='-' a=expression b=expression ) { $exp =
> NumericOperationExpression.createOperation( "-" , a , b); }
> | ^(op='*' a=expression b=expression ) { $exp =
> NumericOperationExpression.createOperation( "*" , a , b); }
> | ^(op='/' a=expression b=expression ) { $exp =
> NumericOperationExpression.createOperation( "/" , a , b); }
> ;
>
> I create an expression object by calling...
>
> InputStream is = new ByteArrayInputStream( exprString.getBytes());
>
> // Create an input character stream from standard in
> ANTLRInputStream input = new ANTLRInputStream(is);
>
> // Create an ExprLexer that feeds from that stream
> ExprLexer lexer = new ExprLexer(input);
>
> // Create a stream of tokens fed by the lexer
> CommonTokenStream tokens = new CommonTokenStream(lexer);
>
> // Create a parser that feeds off the token stream
> ExprParser parser = new ExprParser(tokens);
>
> // Begin parsing at rule prog, get return value structure
> ExprParser.expression_return r = parser.expression();
>
> // WALK RESULTING TREE
> CommonTree t = (CommonTree)r.getTree(); // get tree from parser
>
> // Create a tree node stream from resulting tree
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
>
> Eval walker = new Eval(nodes); // create a tree parser
> Expression expression = walker.expression();
>
>
> Expression.evaluate has one argument - Msg. You can expand this to include
> context-binding instead of Msg.
>
> Basically, an expression is compiled during the program start time and
> evaluate them during the runtime with some context.
>
> I hope this helps.
>
> Michael J. Lee
>
>
>
> James Abley wrote:
>>
>> Hi,
>>
>> I'm an ANTLR newbie. A code base that I work on has various expression
>> evaluation aspects. I have to add to this by defining various
>> functions that can be evaluated. ANTLR seemed like a good way of
>> separating out the parsing aspects and should let my colleagues
>> concentrate on just defining and plugging in new functions without
>> having to know much about parsing, etc. I've skimmed the ANTLR
>> Reference book, but don't quite have the time to go in depth at this
>> point.
>>
>> I've written a grammar, which seems to do what I need. Doubtless it
>> could be trimmed a bit as I learn more. Where I'm stuck is the
>> connection between having a grammar which can parse the input and how
>> it gets evaluated.
>>
>> The baggage that I'm struggling with is how to define my environment,
>> bind variables, create stack frames, etc.
>>
>> I think this would be as part of a tree grammar the re-uses the tokens
>> from the AST grammar, but would like to confirm.
>>
>> Cheers,
>>
>> James
>>
>>
>>
>> grammar Eval;
>>
>> options {
>>        output = AST;
>> //      tokenVocab=Expr; // Read token types from Expr.tokens resource
>> //      ASTLabelType=CommonTree;    // The Java type of the nodes.
>> }
>>
>> tokens {
>>        FUNC;   // function call
>>        STR;
>> }
>>
>> @parser::header {
>> package com.example.expression;
>> }
>>
>> @lexer::header {
>> package com.example.expression;
>> }
>>
>> stat    :       expr+;
>>
>> /*
>> For now, we define expr very basically. We don't need to support
>> addition, multiplication or other operators. But if we
>> do, the grammar is easy to alter.
>> */
>> expr    :       atom
>>        ;
>> //multExpr ( ( '+' | '-') multExpr)*;
>>
>> //multExpr
>> //      :       unaryExpr (( '*' | '/') unaryExpr)*;
>>
>> //unaryExpr
>> //      :       ('+' | '-')?  atom
>> //      ;
>>
>> /* Basic constituent of an expression.*/
>> atom    :       var
>>        |       LPAREN expr RPAREN      // Rule to allow nested
>> expressions.
>>        |       functionCall
>>        |       stringLiteral
>>        |       number
>>        ;
>>
>> functionCall
>>        :       functionName LPAREN ( expr (COMMA expr)* )? RPAREN      ->
>> ^(FUNC
>> functionName expr*)
>>        ;
>>
>> functionName
>>        :       ALPHA (ALPHA | '-' | '_' | DIGIT )* ;
>> /*
>> Added to indicate how we currently reference bound variables in
>> expressions.. This lets us parse them easily enough.
>> with a view to consolidating our expression evaluation code into this
>> ANTLR-based version.
>> */
>> var     :       '$' ALPHA (ALPHA | '-' | '_' | DIGIT)*
>>        ;
>>
>> stringLiteral   :       '"'  ~'"'* '"'
>>        |       '\'' ~'\''* '\''
>>        ;
>>
>> number  :       DIGIT+ ('.' DIGIT+)?
>>        ;
>>
>> DIGIT
>>        :       '0' .. '9';
>>
>> ALPHA
>>        :        'a' .. 'z'
>>        |        'A' .. 'Z';
>>
>> COMMA
>>        :       (WS* ',' WS*);
>>
>> LPAREN
>>        :       (WS*  '(' WS*);
>> RPAREN
>>        :       (WS* ')' WS*);
>>
>> WS
>>        :       ' '
>>        |       '\t';
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>

From nukiti at yahoo.de  Tue Nov 11 01:52:02 2008
From: nukiti at yahoo.de (Britta Kiera)
Date: Tue, 11 Nov 2008 09:52:02 +0000 (GMT)
Subject: [antlr-interest] Why does syntactic predicate not take effect?
References: <391061.82865.qm@web27001.mail.ukl.yahoo.com>
	<200811101816.42550.jbb@acm.org>
Message-ID: <692156.5282.qm@web27001.mail.ukl.yahoo.com>

John B. Brodie <jbb at acm.org> wrote:
> > In the grammar below NAMES has been made a fragment. But still it produces
> > the same output as before that doesn't contain a NAMES token:
> actually I believe the prefered way is to specify this and any other Virtural
> Token in a tokens {} section - should appear after the options {} and before
> your @header {} section.
I agree.

> > Token:  IDENT( 0) >GoTo<
> > Token:  WHITE(99) > <
> here is, i believe the problem, see comments near your IDENT rule below.
You were right.

> > IDENT
> >     : (ID (WS ID)+)=> ID (WS ID)+ {$type = NAMES;}
> recall that ANTLR lexer constructs greedily consume the longest possible string, and that,
> further, once commited to a particular looping construct no other alternative is recognized.
> so your predicate wants a list of WS ID pairs. fine. good. gotcha. but your input has some
> WS ID pairs and then a WS LB pair - that does not match a (WS ID)+ and the predicate fails.
> remove the blank before the { in your test data and see what I mean. so try this ident
> rule instead:
> IDENT
>     : ID ( ((WS ID)=>(WS ID))+ {$type = NAMES;} )?
>     ;
Obviously I didn't understand how predicates work. I thought they would
match as much as possible. I did not understand that the complete predicate
fails when the common WS prefix was recognized. Coming from lex/JFlex
this will probably be a pitfall for quite some time.

Thank you very much John. You brought me a big step further in understanding
how ANTLR works.

Regards,
Nukiti


      

From Development at ChrisSek.de  Tue Nov 11 02:56:32 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Tue, 11 Nov 2008 11:56:32 +0100
Subject: [antlr-interest] Write a token to the AST within an action
In-Reply-To: <20081110193245.DE6B2312962@www.antlr.org>
References: <2D03873E-A595-46C5-8B26-8FC27ED1564D@ChrisSek.de>
	<20081110193245.DE6B2312962@www.antlr.org>
Message-ID: <8014A9A8-99D8-43B9-816F-94A9B82AC8D1@ChrisSek.de>

Hi Gavin,

> All the functions that ANTLR itself uses to
> construct ASTs are available to your code.

The following helper method works great, thanks a lot!

<snip>
private CommonTree createTreeByGlobals(List<String> symbols) {
	CommonTree globalTree = null;

	if (newGlobals.size() > 0) {
	    globalTree =  
(CommonTree)adaptor.becomeRoot(adaptor.create(GLOBAL,  
"GLOBAL"),adaptor.nil());
	    for (String name : newGlobals) {
	    	adaptor.addChild(globalTree, adaptor.create(Identifier, name));
	    }
	}

	return globalTree;
}

<snip>

: sourceElement*
  -> ^(PROGRAM  
{createTreeByGlobals 
(((SymbolTable_scope)SymbolTable_stack.peek()).newGlobals)}  
sourceElement*)

<snip>

Kind regards,

Chris

From tvial at octo.com  Tue Nov 11 03:59:26 2008
From: tvial at octo.com (Thomas Vial)
Date: Tue, 11 Nov 2008 12:59:26 +0100
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <1226359323.20066.4.camel@jimi.temporal-wave.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
	<1226359323.20066.4.camel@jimi.temporal-wave.com>
Message-ID: <475086500811110359i62a80667y2c7ff4f772654cef@mail.gmail.com>

No problem Jim, this was meant to let you know and make sure it wasn't me
making mistakes in the POM (like picking up the old version of the plugin
;-)
The plugin itself is of little use without an up-to-date repository anyway.

Thanks again,
Thomas


On Tue, Nov 11, 2008 at 12:22 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> On Mon, 2008-11-10 at 16:48 +0100, Thomas Vial wrote:
> > Hi,
> >
> > I have noticed that the new version of the antlr3-maven-plugin doesn't
> > make the build fail when the grammar file contains a syntax error
> > (this used to be a limitation of ANTLR 3.0.x not setting a return
> > code). Now that the Maven plugin relies on ANTLR 3.1.1, I would have
> > expected this behavior to change.
>
> I'll get to it I guess. First job was to understand how Maven worked and
> produce a rspository and so on. THis tookl way longer than i had hoped
> but is in place now.
>
> Jim
>
>
>


-- 
..........................................................
Thomas VIAL
OCTO Technology
..........................................................
50, Avenue des Champs-Elys?es
75008 Paris
T?l : (33) 1 58 56 10 00
Fax : (33) 1 58 56 10 01
GSM : (33) 6 28 50 07 64
Web : http://www.octo.com/
..........................................................
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081111/e071f110/attachment.html 

From qwizv9b02 at sneakemail.com  Tue Nov 11 04:52:19 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Tue, 11 Nov 2008 13:52:19 +0100
Subject: [antlr-interest] On to the next issue: error(211)
In-Reply-To: <20081110194628.89AC4CE955@www.antlr.org>
References: <gf965l$90v$1@ger.gmane.org>
	<20081110194628.89AC4CE955@www.antlr.org>
Message-ID: <gfbv63$m1i$1@ger.gmane.org>

Gavin Lambert schreef:
> At 00:33 11/11/2008, Hendrik Maryns wrote:
>  >error(211): fsqTreeParser.g:68:3: [fatal] rule body has 
> non-LL(*)
>  >decision due to recursive rule invocations reachable from alts
>  >3,5. Resolve by left-factoring or using syntactic predicates or
>  >using backtrack=true option.
> [...]
>  >body returns [Formula result]
>  >  : label { $result = $label.result; }
>  >  | atomic { $result = $atomic.result; }
>  >  | unary { $result = $unary.result; }
>  >  | binary { $result = $binary.result; }
>  >  | n_ary { $result = $n_ary.result; }
>  >  | quantor { $result = $quantor.result; }
>  >  ;
>  >
>  >Indeed, the unary, binary, n_ary and quantor rules (indirectly)
>  >refer to formula:
> 
> It's unlikely that this would be the problem, or at least not 
> directly.  It's more likely an issue with your AST structure being 
> too ambiguous.

You are right, I had a lisp-like grammar in the parser, so there it
worked fine, since it saw the functor first, which disambiguated the
rules.  However, I rewrote them for the tree parser with the arguments
coming first, introducing the ambiguities.  I did this because it made
the Java code in the background simpler.

I stepped away from this approach, making my parser radically simpler.
Focussing first on getting my parser to recognize the proper strings has
now worked (some details aside), and I will now gently try to adopt it
to produce the right output.

The thing I am having trouble with is that, with the idea of
polymorphism etc., I?d like to have things dealt with at the appropriate
place.

I have rules like

atomic : atomicHead variable label ;

atomicHead : EQUALITY | DOMINANCE | INCLUSION | ? ;

and depending on the value of atomicHead, I want a different Java object
to be created.  The solution I see now is stuff like

if ($atomicHead.text == "=") {
  new Equality($first, $second);
} else if ($functor.text == ">" {
  new Dominance($first, $second);
} else ?

and so on.  But it would be better if I could delegate this to
atomicHead, which would have code execution for each subrule.  However,
I cannot do

atomic return [Formula result] : atomicHead[$variable.result,
$label.result] variable label { $result = $atomicHead.result; };

since $variable.result and $label.result will not have been evaluated at
that point.

Anyone better suggestions?

> Can you post your unary, binary, and n_ary rules (and any subrules 
> they refer to)?

I am sure even in the simpler grammar enough questions will arise, to be
handled later :-)

Thanks a lot, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081111/6aa7f35f/attachment.bin 

From merry_winfly at hotmail.com  Tue Nov 11 05:39:47 2008
From: merry_winfly at hotmail.com (merry_winfly at hotmail.com)
Date: Tue, 11 Nov 2008 13:39:47 +0000
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
Message-ID: <BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>


 
==>
Actully, I find when (lPredigestParser->free(lPredigestParser);) the adapter and vector will be freed by this free action, but at last some tokenstream didn't be freed, I don't know if my source code issue or antlr's bug.
 
And any one know this, pls freely tell me the reason.
 
Thanks a lot.
 
Best Regards
Winfly Lin



From: merry_winfly at hotmail.com
To: antlr-interest at antlr.org
Date: Mon, 10 Nov 2008 13:21:04 +0000
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1



Hi All,
 
When I use the C code from antlr generator with predigest PLSQL parser  , I find it exist obvious memory leak issue.
 
I use valgrind  to check and the result is:

 
valgrind --leak-check=full ./treeMemory

==9541== Memcheck, a memory error detector.

==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.

==9541== Using LibVEX rev 1854, a library for dynamic binary translation.

==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.

==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.

==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.

==9541== For more details, rerun with: -v

==9541==
==9541==
==9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)
==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.
==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.
==954 1== For counts of detected errors, rerun with: -v
==9541== searching for pointers to 98 not-freed blocks.
==9541== checked 149,260 bytes.
==9541==
==9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3
==9541==    at 0x40057C8: malloc (vg_replace_malloc.c:207)
==9541==    by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)
==9541==    by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)
==9541==    by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)
==9541==    by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)
==9541==    by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)
==9541==    by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)
==9541==    by 0x80B1E12: sql_command (PLSQLpredigest Parser.c:49133)
==9541==    by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)
==9541==    by 0x8083185: statement (PLSQLpredigestParser.c:31331)
==9541==    by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)
==9541==    by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)
==9541==
==9541== LEAK SUMMARY:
==9541==    definitely lost: 7,560 bytes in 90 blocks.
==9541==    indirectly lost: 448 bytes in 8 blocks.
==9541==      possibly lost: 0 bytes in 0 blocks.
==9541==    still reachable: 0 bytes in 0 blocks.
==9541==         suppressed: 0 bytes in 0 blocks.
 
Source Code:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";
   
 pANTLR3_INPUT_STREAM lInput=NULL;
 pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
 pPLSQLpredigestParser lPredigestParser=NULL;
 pPLSQLpredigestLexer lPredigestLexer=NULL;
 lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
 if(!lInput)
 {
  cout<<" input error"<setUcaseLA(lInput,ANTLR3_TRUE);
    
 lPredigestLexer = PLSQLpredigestLexerNew(lInput);
 if(!lPredigestLexer)
 {
  cout<<" lPredigestLexer error"<start_rule(lPredigestParser);
  
 lPredigestParser->free(lPredigestParser);
 lPredigestTokenStream->free(lPredigestTokenStream);
 lPredigestLexer->free(lPredigestLexer);
 lInput->close(lInput);
 

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
 
I don't know why so simple code cause so obvious memory leak

 
Could you help me to solve this? (I'm hurry for this code, thanks a lot!)
 
I list the information and attachment includes all code about it (C file ):
 
Platform: RedHat Enterprise 5 Server, virtual machine.
GCC version: 4.1.1
Antlr Version: 3.1.1
 


 
I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com).
 

Thanks a lot.
 
 
Best Regards
Winfly Lin








Get news, entertainment and everything you care about at Live.com. Check it out!
_________________________________________________________________
Connect to the next generation of MSN Messenger?
http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline

From jimi at temporal-wave.com  Tue Nov 11 08:50:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 11 Nov 2008 08:50:12 -0800
Subject: [antlr-interest] Problem with antlr3-maven-plugin v3.1.1
In-Reply-To: <475086500811110359i62a80667y2c7ff4f772654cef@mail.gmail.com>
References: <475086500811100748o4ba5a530i966e59631ca3ff49@mail.gmail.com>
	<1226359323.20066.4.camel@jimi.temporal-wave.com>
	<475086500811110359i62a80667y2c7ff4f772654cef@mail.gmail.com>
Message-ID: <1226422212.4332.3.camel@jimi.temporal-wave.com>

On Tue, 2008-11-11 at 12:59 +0100, Thomas Vial wrote:
> No problem Jim, this was meant to let you know and make sure it wasn't
> me making mistakes in the POM (like picking up the old version of the
> plugin ;-)
> The plugin itself is of little use without an up-to-date repository
> anyway.


The repository should be up to date now as I added ANTLR 3.1, 3.1.1
(Tool and runtime) and the relevant string template libaries. The plugin
is the first thing that went in to the org.antlr repository. Other than
the dependancies, does it all work otherwise for you?

Jim

> 
> Thanks again,
> Thomas
> 
> 
> On Tue, Nov 11, 2008 at 12:22 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>         On Mon, 2008-11-10 at 16:48 +0100, Thomas Vial wrote:
>         > Hi,
>         >
>         > I have noticed that the new version of the
>         antlr3-maven-plugin doesn't
>         > make the build fail when the grammar file contains a syntax
>         error
>         > (this used to be a limitation of ANTLR 3.0.x not setting a
>         return
>         > code). Now that the Maven plugin relies on ANTLR 3.1.1, I
>         would have
>         > expected this behavior to change.
>         
>         
>         I'll get to it I guess. First job was to understand how Maven
>         worked and
>         produce a rspository and so on. THis tookl way longer than i
>         had hoped
>         but is in place now.
>         
>         Jim
>         
>         
> 
> 
> 
> -- 
> ..........................................................
> Thomas VIAL
> OCTO Technology
> ..........................................................
> 50, Avenue des Champs-Elys?es
> 75008 Paris
> T?l : (33) 1 58 56 10 00
> Fax : (33) 1 58 56 10 01
> GSM : (33) 6 28 50 07 64
> Web : http://www.octo.com/
> ..........................................................


From jimi at temporal-wave.com  Tue Nov 11 08:52:30 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 11 Nov 2008 08:52:30 -0800
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>
Message-ID: <1226422350.4332.4.camel@jimi.temporal-wave.com>

On Tue, 2008-11-11 at 13:39 +0000, merry_winfly at hotmail.com wrote:
> 
> ==>
> Actully, I find when (lPredigestParser->free(lPredigestParser);) the adapter and vector will be freed by this free action, but at last some tokenstream didn't be freed, I don't know if my source code issue or antlr's bug.
>  
> And any one know this, pls freely tell me the reason.

Did you call free on the token stream itself? I think that this is your
issue. There is a treenode stream that you must free too. Check against
that example tree parsers, but I will look at your issue today.

Jim

>  
> Thanks a lot.
>  
> Best Regards
> Winfly Lin
> 
> 
> 
> From: merry_winfly at hotmail.com
> To: antlr-interest at antlr.org
> Date: Mon, 10 Nov 2008 13:21:04 +0000
> Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> 
> 
> 
> Hi All,
>  
> When I use the C code from antlr generator with predigest PLSQL parser  , I find it exist obvious memory leak issue.
>  
> I use valgrind  to check and the result is:
> 
>  
> valgrind --leak-check=full ./treeMemory
> 
> ==9541== Memcheck, a memory error detector.
> 
> ==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
> 
> ==9541== Using LibVEX rev 1854, a library for dynamic binary translation.
> 
> ==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
> 
> ==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.
> 
> ==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
> 
> ==9541== For more details, rerun with: -v
> 
> ==9541==
> ==9541==
> ==9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)
> ==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.
> ==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.
> ==954 1== For counts of detected errors, rerun with: -v
> ==9541== searching for pointers to 98 not-freed blocks.
> ==9541== checked 149,260 bytes.
> ==9541==
> ==9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3
> ==9541==    at 0x40057C8: malloc (vg_replace_malloc.c:207)
> ==9541==    by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)
> ==9541==    by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)
> ==9541==    by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)
> ==9541==    by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)
> ==9541==    by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)
> ==9541==    by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)
> ==9541==    by 0x80B1E12: sql_command (PLSQLpredigest Parser.c:49133)
> ==9541==    by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)
> ==9541==    by 0x8083185: statement (PLSQLpredigestParser.c:31331)
> ==9541==    by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)
> ==9541==    by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)
> ==9541==
> ==9541== LEAK SUMMARY:
> ==9541==    definitely lost: 7,560 bytes in 90 blocks.
> ==9541==    indirectly lost: 448 bytes in 8 blocks.
> ==9541==      possibly lost: 0 bytes in 0 blocks.
> ==9541==    still reachable: 0 bytes in 0 blocks.
> ==9541==         suppressed: 0 bytes in 0 blocks.
>  
> Source Code:
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";
>    
>  pANTLR3_INPUT_STREAM lInput=NULL;
>  pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
>  pPLSQLpredigestParser lPredigestParser=NULL;
>  pPLSQLpredigestLexer lPredigestLexer=NULL;
>  lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
>  if(!lInput)
>  {
>   cout<<" input error"<setUcaseLA(lInput,ANTLR3_TRUE);
>     
>  lPredigestLexer = PLSQLpredigestLexerNew(lInput);
>  if(!lPredigestLexer)
>  {
>   cout<<" lPredigestLexer error"<start_rule(lPredigestParser);
>   
>  lPredigestParser->free(lPredigestParser);
>  lPredigestTokenStream->free(lPredigestTokenStream);
>  lPredigestLexer->free(lPredigestLexer);
>  lInput->close(lInput);
>  
> 
>  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
> Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
>  
> I don't know why so simple code cause so obvious memory leak
> 
>  
> Could you help me to solve this? (I'm hurry for this code, thanks a lot!)
>  
> I list the information and attachment includes all code about it (C file ):
>  
> Platform: RedHat Enterprise 5 Server, virtual machine.
> GCC version: 4.1.1
> Antlr Version: 3.1.1
>  
> 
> 
> 
> I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com).
>  
> 
> Thanks a lot.
>  
> 
> Best Regards
> Winfly Lin
> 
> 
> 
> 
> 
> 
> 
> 
> Get news, entertainment and everything you care about at Live.com. Check it out!
> _________________________________________________________________
> Connect to the next generation of MSN Messenger 
> http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From amartinez at atc.ugr.es  Tue Nov 11 09:12:49 2008
From: amartinez at atc.ugr.es (amartinez at atc.ugr.es)
Date: Tue, 11 Nov 2008 18:12:49 +0100 (CET)
Subject: [antlr-interest] Simple grammar not showing a recognition exception
Message-ID: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>

Hi all,

I'm having problems in grammars that do not throw a
recognition exception.


I want to parse a very little/restricted assembly language source, only
the 'add' opcode for now.

The grammar should process this input:
<input>

add r1, 23
add r4, r5

</input>

Below it is attached an example to reproduce my error.

Everything seam to work fine (Lexer and sometimes the grammar complain
on the source).

But, if a try this source:

<answer input>

add  r1, 23
addj r4,56

</answer input>

the parser does not say anything about the inappropriate 'addj' (which is
not a legal assembly token). I have even create an AST from the original
grammar, have debugged it on AntlrWorks, and have seen that this environment
also does not complain on this input.

Where is the mistake?

Thank in advance, best regards


Attached is an example of a grammar to reproduce my error:


<Grammar T>

grammar T;

tokens {
	ADD;
}

prog			:	(add NEWLINE)+ ;
add			:	TOKEN_ADD renreg ',' renreg ;
renreg		: 	RX | UINT8 | ID ;

RX			:	('r'|'R') HEXDIGIT;
TOKEN_NAMEREG	:	('namereg' | 'Namereg' | 'NAMEREG');
TOKEN_CONST		:	('const' | 'Const' | 'CONST');
TOKEN_ADD		:	'add' ;

ID			:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ;
UINT8			:	HEXDIGIT? HEXDIGIT;
fragment
HEXDIGIT		:	('0'..'9'|'a'..'f'|'A'..'F');
NEWLINE    		:	{getCharPositionInLine() > 0}? 	=> ('\r'? '\n')+ ;
NEWLINE_AT_COLUM_ZERO	:   	{getCharPositionInLine() == 0}? => ('\r'?
'\n')+ { $channel=HIDDEN; } ;
WS			:   	(' '|'\t') { $channel=HIDDEN; };
LINE_COMMENT 	:   	(';'|'//') (~'\n')* { $channel=HIDDEN; } ;


</Grammar T>





<Main.java>

import java.io.*;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;


public class Main {

    public static void main(String args[]) throws Exception {

     CharStream input = new ANTLRFileStream(args[0]);
     TLexer lex = new TLexer(input);
     CommonTokenStream tokens = new CommonTokenStream(lex);
     TParser g = new TParser(tokens);
      g.prog ();
   }
}

</Main.java>



From ranco.marcus at epirion.nl  Tue Nov 11 09:46:55 2008
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Tue, 11 Nov 2008 18:46:55 +0100
Subject: [antlr-interest] fragment and option greedy=false
In-Reply-To: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>
References: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>
Message-ID: <83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local>

Hello all,

I would like to know if there are any limitations on the use of
fragments in non-greedy sub rules. In the example below, I would like to
create a lexer rule that matches with a comment (i.e. starts with /*,
has zero or more characters from the given fragment and ends with */). 

grammar MulticharComment;

sentence 
	: COMMENT '.'
	;

COMMENT
//	: '/*'  ( options {greedy=false;} : VALID_CHARS )* '*/'
// option 1
	: '/*'  ( options {greedy=false;} : ('a'..'z' | '*' | '/') )*
'*/'       // option 2
	;

fragment
VALID_CHARS
	: 'a'..'z' | '*' | '/'
	;

If I use the line with the fragment (option 1), I get the following
error (in ANTLRWorks 1.2.1, ANTLR v3.1.1) which I didn't expect. 

Input: /*abba*/.
Error: problem matching token at 1:9 NoViableAltException('.'@[()*
loopback of 8:10: ( options {greedy=false; } : VALID_CHARS )*])

Where does '.'@[()* come from and what is meant by 'the loopback'?

In this particular example, I could use the pattern itself (option 2)
and accept a little redundancy. However, if the pattern is more complex
(i.e. consists of Unicode character ranges, escapes, multiple subrules
etc.), this doesn't feel right. 


It would be great if any of you could clarify on this matter. Thanks in
advance.

Kind regards, Ranco Marcus

From sharwell at pixelminegames.com  Tue Nov 11 09:48:07 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 11 Nov 2008 11:48:07 -0600
Subject: [antlr-interest] fragment and option greedy=false
In-Reply-To: <83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local>
References: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>
	<83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>

COMMENT
    : '/*'
      (   (~'*' | '*' ~'/') => VALID_CHAR
      )*
      '*/'
    ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
Sent: Tuesday, November 11, 2008 11:47 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] fragment and option greedy=false

Hello all,

I would like to know if there are any limitations on the use of
fragments in non-greedy sub rules. In the example below, I would like to
create a lexer rule that matches with a comment (i.e. starts with /*,
has zero or more characters from the given fragment and ends with */). 

grammar MulticharComment;

sentence 
	: COMMENT '.'
	;

COMMENT
//	: '/*'  ( options {greedy=false;} : VALID_CHARS )* '*/'
// option 1
	: '/*'  ( options {greedy=false;} : ('a'..'z' | '*' | '/') )*
'*/'       // option 2
	;

fragment
VALID_CHARS
	: 'a'..'z' | '*' | '/'
	;

If I use the line with the fragment (option 1), I get the following
error (in ANTLRWorks 1.2.1, ANTLR v3.1.1) which I didn't expect. 

Input: /*abba*/.
Error: problem matching token at 1:9 NoViableAltException('.'@[()*
loopback of 8:10: ( options {greedy=false; } : VALID_CHARS )*])

Where does '.'@[()* come from and what is meant by 'the loopback'?

In this particular example, I could use the pattern itself (option 2)
and accept a little redundancy. However, if the pattern is more complex
(i.e. consists of Unicode character ranges, escapes, multiple subrules
etc.), this doesn't feel right. 


It would be great if any of you could clarify on this matter. Thanks in
advance.

Kind regards, Ranco Marcus

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From antlr at mirality.co.nz  Tue Nov 11 11:41:42 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 12 Nov 2008 08:41:42 +1300
Subject: [antlr-interest] On to the next issue: error(211)
In-Reply-To: <gfbv63$m1i$1@ger.gmane.org>
References: <gf965l$90v$1@ger.gmane.org>
	<20081110194628.89AC4CE955@www.antlr.org>
	<gfbv63$m1i$1@ger.gmane.org>
Message-ID: <20081111194153.549F911ED1C@www.antlr.org>

At 01:52 12/11/2008, Hendrik Maryns wrote:
 >The thing I am having trouble with is that, with the idea of
 >polymorphism etc., I'd like to have things dealt with at the
 >appropriate place.
 >
 >I have rules like
 >
 >atomic : atomicHead variable label ;
 >
 >atomicHead : EQUALITY | DOMINANCE | INCLUSION | 
 ;
 >
 >and depending on the value of atomicHead, I 
want a different Java
 >object to be created.

If you have input AST fragments like this:
   ^(EQUALITY a b)
   ^(DOMINANCE a b)
   ^(INCLUSION a b)
   ^(INVERSE a)

then they're trivial to parse with AST 
rules.  The job of the parser is usually to 
translate the sequential token stream into a tree 
structure that conveys the intended meaning; the 
tree parser then goes through that tree and does 
whatever you want.  The tree grammar is usually 
very simple and you should almost never need to 
use any predicates in it.

(Though I'm not sure why you're calling this 
"atomic".  It seems like an odd choice of name 
for something that seems to require neighbouring symbols as well.)

 >I cannot do
 >
 >atomic return [Formula result] : atomicHead[$variable.result,
 >$label.result] variable label { $result = $atomicHead.result; };
 >
 >since $variable.result and $label.result will not have been
 >evaluated at that point.

atomic returns [Formula result]
   : ^(EQUALITY variable expr) { $result = new
         Equality($variable.result, $expr.result); }
   | ^(DOMINANCE ...


From dejas9000 at gmail.com  Tue Nov 11 12:48:11 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Tue, 11 Nov 2008 14:48:11 -0600
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
	production appears to affect "accept/reject" of parser for
	fixed input.
Message-ID: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>

Hello,

I believe I have found a peculiar issue in ANTLR.  If memory serves, the
order of alternatives in a grammar should have no effect on the set of
inputs it accepts.  For example I believe:

program : statement_list | expression

is equivalent to:

program : expression | statement_list

I'm having an issue where for the fixed program:

"DOG CAT x ZEBRA x > x"  (quotes not actually a part of the input)

defining one of my NT's as:

a : b | c ;

causes the following error when parsing the program:

"line 1:18 mismatched input '>' expecting EOF"

while redefining a to be:

a : c | b ;

accepts the program after regeneration, recompilation, re-execution.

This completely blows my mind.  I believe these grammars (see full grammar
below) to be equivalent.  What am I missing?

notes:

I claim the input is valid by production:

(program
(a
 (b
(d
'DOG'
'CAT'
(a
(b
(f
'x')))
ZEBRA
(a
(b
(f
'x')))
 '>'
(a
(b
(f
'x')))))))

------------------------------------
grammar bug;

options {
    language='CSharp';
    output=AST;
    backtrack = true;

}


program    : a EOF ;

a : b | c ;

b : f |    d ;

c : e ;

d : D_NAME idl=f? D_TARGET a (resOp=RES res=a)? -> D_NAME $idl? D_TARGET a
$resOp? $res?;

e : b RCHEVRON b;

f : VERBATUM_IDENTIFIER;

D_NAME
    :    'DOG';

D_TARGET
    :    'CAT';

RES
    :    'ZEBRA';

RCHEVRON
    :    '>';

VERBATUM_IDENTIFIER
    : ('a'..'z'|'A'..'Z')(('a'..'z'|'A'..'Z')|('_')|('0'..'9'))*
    ;

WHITESPACE
    : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { $channel = HIDDEN; } ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081111/88fe9503/attachment.html 

From jbb at acm.org  Tue Nov 11 14:59:50 2008
From: jbb at acm.org (John B. Brodie)
Date: Tue, 11 Nov 2008 17:59:50 -0500
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
	production appears to affect "accept/reject" of parser for
	fixed input.
In-Reply-To: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
Message-ID: <200811111759.50452.jbb@acm.org>

Dejas Ninethousand wrote:
> Hello,

Greetings!

> I believe I have found a peculiar issue in ANTLR. ?If memory serves, the
> order of alternatives in a grammar should have no effect on the set of
> inputs it accepts. ?For example I believe:
>
> program : statement_list | expression
>
> is equivalent to:
>
> program : expression | statement_list
>
>....remainder of original message snipped...

Apparently, when backtracking is enabled this is not the case.

Quoting from page 107 of the book "The Definitive ANTLR Reference" by Terence 
Parr regarding the backtrack Option, Section 5.3:

"The backtrack option informs ANTLR that, should LL(*) analysis fail, it 
should try the alternatives within the decision in the order specified at 
parse time, choosing the first alternative that matches."

So when backtracking is enabled, as is the case in your posted problematic 
grammar, order does make a difference.

(Hopefully one of the ANTLR maintainers will confirm and/or deny this because 
my experience with backtracking is almost non-existant. I work very hard to 
ensure that my gramars do not need to backtrack. And IMHO you should too:)

Hope this helps...
   -jbb

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081111/863884a5/attachment.html 

From dejas9000 at gmail.com  Tue Nov 11 15:53:06 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Tue, 11 Nov 2008 17:53:06 -0600
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
	production appears to affect "accept/reject" of parser for
	fixed input.
In-Reply-To: <200811111759.50452.jbb@acm.org>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
	<200811111759.50452.jbb@acm.org>
Message-ID: <38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>

I disagree.  My interpretation of that that quote is that enabling
backtracking can influence *which* production is used to match an input (by
prioritizing them) however it doesn't say that the set of valid inputs that
can match *some* production changes.

My problem it seems is that in one grammar ordering ANTLR is able to find *some
*match for the input while with the other ordering ANTLR decides *no *match
can be found.  I claim that changing the ordering should not affect whether
*some *match can be found by the parser for a fixed input, irrespective of
what that specific match is.  When ANLTR says no match can be found, I point
to the syntax tree shown in my original email and say "what about that
match?"

-- Matt

On Tue, Nov 11, 2008 at 4:59 PM, John B. Brodie <jbb at acm.org> wrote:

>  Dejas Ninethousand wrote:
>
> > Hello,
>
> Greetings!
>
> > I believe I have found a peculiar issue in ANTLR.  If memory serves, the
>
> > order of alternatives in a grammar should have no effect on the set of
>
> > inputs it accepts.  For example I believe:
>
> >
>
> > program : statement_list | expression
>
> >
>
> > is equivalent to:
>
> >
>
> > program : expression | statement_list
>
> >
>
> >....remainder of original message snipped...
>
> Apparently, when backtracking is enabled this is not the case.
>
> Quoting from page 107 of the book "The Definitive ANTLR Reference" by
> Terence Parr regarding the backtrack Option, Section 5.3:
>
> "The backtrack option informs ANTLR that, should LL(*) analysis fail, it
> should try the alternatives within the decision in the order specified at
> parse time, choosing the first alternative that matches."
>
> So when backtracking is enabled, as is the case in your posted problematic
> grammar, order does make a difference.
>
> (Hopefully one of the ANTLR maintainers will confirm and/or deny this
> because my experience with backtracking is almost non-existant. I work very
> hard to ensure that my gramars do not need to backtrack. And IMHO you should
> too:)
>
> Hope this helps...
>
> -jbb
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081111/5587728d/attachment.html 

From merry_winfly at hotmail.com  Tue Nov 11 18:10:08 2008
From: merry_winfly at hotmail.com (merry_winfly at hotmail.com)
Date: Wed, 12 Nov 2008 02:10:08 +0000
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <1226422350.4332.4.camel@jimi.temporal-wave.com>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl> 
	<1226422350.4332.4.camel@jimi.temporal-wave.com>
Message-ID: <BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl>


Hi Jim
 
=>
 pANTLR3_INPUT_STREAM lInput=NULL;
 pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
 pPLSQLpredigestParser lPredigestParser=NULL;
 pPLSQLpredigestLexer lPredigestLexer=NULL;
 lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
 if(!lInput)
 {
  cout<<" input error"<setUcaseLA(lInput,ANTLR3_TRUE);
    
 lPredigestLexer = PLSQLpredigestLexerNew(lInput);
 if(!lPredigestLexer)
 {
  cout<<" lPredigestLexer error"<start_rule(lPredigestParser);
  
 lPredigestParser->free(lPredigestParser);
 lPredigestTokenStream->free(lPredigestTokenStream);
 lPredigestLexer->free(lPredigestLexer);
 lInput->close(lInput);
 lPredigestParser=NULL;
 lPredigestTokenStream=NULL;
 lPredigestLexer=NULL;
 lInput=NULL;

=>This is my all source code, and memory leak exist in PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);

 
Actually, I have two type PLSQL's lexer and parser code from two type PLSQL g file. 
 
But only this file (PLSQLPredigest.g,I send to you before)exist memory leak (the source PLSQL.g is from website, and no memory leak issue,PLSQLpredigest is predigested from PLSQL.g) , and I seems to follow the "treeparser" sample to code (because I don't have any walker to new a node "antlr3CommonTreeNodeStreamNewTree"). 
 
Thank Jim.
 
Best Regards
Winfly Lin

> Subject: Re: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> From: jimi at temporal-wave.com
> To: merry_winfly at hotmail.com
> CC: antlr-interest at antlr.org
> Date: Tue, 11 Nov 2008 08:52:30 -0800
> 
> On Tue, 2008-11-11 at 13:39 +0000, merry_winfly at hotmail.com wrote:
>> 
>> ==>
>> Actully, I find when (lPredigestParser->free(lPredigestParser);) the adapter and vector will be freed by this free action, but at last some tokenstream didn't be freed, I don't know if my source code issue or antlr's bug.
>> 
>> And any one know this, pls freely tell me the reason.
> 
> Did you call free on the token stream itself? I think that this is your
> issue. There is a treenode stream that you must free too. Check against
> that example tree parsers, but I will look at your issue today.
> 
> Jim
> 
>> 
>> Thanks a lot.
>> 
>> Best Regards
>> Winfly Lin
>> 
>> 
>> 
>> From: merry_winfly at hotmail.com
>> To: antlr-interest at antlr.org
>> Date: Mon, 10 Nov 2008 13:21:04 +0000
>> Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
>> 
>> 
>> 
>> Hi All,
>> 
>> When I use the C code from antlr generator with predigest PLSQL parser , I find it exist obvious memory leak issue.
>> 
>> I use valgrind to check and the result is:
>> 
>> 
>> valgrind --leak-check=full ./treeMemory
>> 
>> ==9541== Memcheck, a memory error detector.
>> 
>> ==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
>> 
>> ==9541== Using LibVEX rev 1854, a library for dynamic binary translation.
>> 
>> ==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
>> 
>> ==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.
>> 
>> ==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
>> 
>> ==9541== For more details, rerun with: -v
>> 
>> ==9541==
>> ==9541==
>> ==9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)
>> ==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.
>> ==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.
>> ==954 1== For counts of detected errors, rerun with: -v
>> ==9541== searching for pointers to 98 not-freed blocks.
>> ==9541== checked 149,260 bytes.
>> ==9541==
>> ==9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3
>> ==9541== at 0x40057C8: malloc (vg_replace_malloc.c:207)
>> ==9541== by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)
>> ==9541== by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)
>> ==9541== by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)
>> ==9541== by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)
>> ==9541== by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)
>> ==9541== by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)
>> ==9541== by 0x80B1E12: sql_command (PLSQLpredigest Parser.c:49133)
>> ==9541== by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)
>> ==9541== by 0x8083185: statement (PLSQLpredigestParser.c:31331)
>> ==9541== by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)
>> ==9541== by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)
>> ==9541==
>> ==9541== LEAK SUMMARY:
>> ==9541== definitely lost: 7,560 bytes in 90 blocks.
>> ==9541== indirectly lost: 448 bytes in 8 blocks.
>> ==9541== possibly lost: 0 bytes in 0 blocks.
>> ==9541== still reachable: 0 bytes in 0 blocks.
>> ==9541== suppressed: 0 bytes in 0 blocks.
>> 
>> Source Code:
>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>> string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";
>> 
>> pANTLR3_INPUT_STREAM lInput=NULL;
>> pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
>> pPLSQLpredigestParser lPredigestParser=NULL;
>> pPLSQLpredigestLexer lPredigestLexer=NULL;
>> lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
>> if(!lInput)
>> {
>> cout<<" input error"> 
>> lPredigestLexer = PLSQLpredigestLexerNew(lInput);
>> if(!lPredigestLexer)
>> {
>> cout<<" lPredigestLexer error"> 
>> lPredigestParser->free(lPredigestParser);
>> lPredigestTokenStream->free(lPredigestTokenStream);
>> lPredigestLexer->free(lPredigestLexer);
>> lInput->close(lInput);
>> 
>> 
>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
>> Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
>> 
>> I don't know why so simple code cause so obvious memory leak
>> 
>> 
>> Could you help me to solve this? (I'm hurry for this code, thanks a lot!)
>> 
>> I list the information and attachment includes all code about it (C file ):
>> 
>> Platform: RedHat Enterprise 5 Server, virtual machine.
>> GCC version: 4.1.1
>> Antlr Version: 3.1.1
>> 
>> 
>> 
>> 
>> I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com).
>> 
>> 
>> Thanks a lot.
>> 
>> 
>> Best Regards
>> Winfly Lin
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> Get news, entertainment and everything you care about at Live.com. Check it out!
>> _________________________________________________________________
>> Connect to the next generation of MSN Messenger 
>> http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
_________________________________________________________________
Connect to the next generation of MSN Messenger?
http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline

From merry_winfly at hotmail.com  Tue Nov 11 18:21:36 2008
From: merry_winfly at hotmail.com (merry_winfly at hotmail.com)
Date: Wed, 12 Nov 2008 02:21:36 +0000
Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl> 
	<1226422350.4332.4.camel@jimi.temporal-wave.com> 
	<BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl> 
Message-ID: <BAY118-W2227BB17C2C5FD974BD266E2140@phx.gbl>


Use the attachment to see the source code for the display issue (I can't send the all code for large size, any more information pls tell me directly). Thanks Winfly Lin> > > From: merry_winfly at hotmail.com> > To: jimi at temporal-wave.com> > Date: Wed, 12 Nov 2008 02:10:08 +0000> > CC: antlr-interest at antlr.org> > Subject: Re: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1> > > > > > Hi Jim> > > > =>> > pANTLR3_INPUT_STREAM lInput=NULL;> > pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;> > pPLSQLpredigestParser lPredigestParser=NULL;> > pPLSQLpredigestLexer lPredigestLexer=NULL;> > lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);> > if(!lInput)> > {> > cout<<" input error" > > lPredigestLexer = PLSQLpredigestLexerNew(lInput);> > if(!lPredigestLexer)> > {> > cout<<" lPredigestLexer error" > > lPredigestParser->free(lPredigestParser);> > lPredigestTokenStream->free(lPredigestTokenStream);> > lPredigestLexer->free(lPredigestLexer);> > lInput->close(lInput);> > lPredigestParser=NULL;> > lPredigestTokenStream=NULL;> > lPredigestLexer=NULL;> > lInput=NULL;> > > > =>This is my all source code, and memory leak exist in PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);> > > > > > Actually, I have two type PLSQL's lexer and parser code from two type PLSQL g file. > > > > But only this file (PLSQLPredigest.g,I send to you before)exist memory leak (the source PLSQL.g is from website, and no memory leak issue,PLSQLpredigest is predigested from PLSQL.g) , and I seems to follow the "treeparser" sample to code (because I don't have any walker to new a node "antlr3CommonTreeNodeStreamNewTree"). > > > > Thank Jim.> > > > Best Regards> > Winfly Lin> > > >> Subject: Re: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1> >> From: jimi at temporal-wave.com> >> To: merry_winfly at hotmail.com> >> CC: antlr-interest at antlr.org> >> Date: Tue, 11 Nov 2008 08:52:30 -0800> >> > >> On Tue, 2008-11-11 at 13:39 +0000, merry_winfly at hotmail.com wrote:> >>> > >>> ==>> >>> Actully, I find when (lPredigestParser->free(lPredigestParser);) the adapter and vector will be freed by this free action, but at last some tokenstream didn't be freed, I don't know if my source code issue or antlr's bug.> >>> > >>> And any one know this, pls freely tell me the reason.> >> > >> Did you call free on the token stream itself? I think that this is your> >> issue. There is a treenode stream that you must free too. Check against> >> that example tree parsers, but I will look at your issue today.> >> > >> Jim> >> > >>> > >>> Thanks a lot.> >>> > >>> Best Regards> >>> Winfly Lin> >>> > >>> > >>> > >>> From: merry_winfly at hotmail.com> >>> To: antlr-interest at antlr.org> >>> Date: Mon, 10 Nov 2008 13:21:04 +0000> >>> Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1> >>> > >>> > >>> > >>> Hi All,> >>> > >>> When I use the C code from antlr generator with predigest PLSQL parser , I find it exist obvious memory leak issue.> >>> > >>> I use valgrind to check and the result is:> >>> > >>> > >>> valgrind --leak-check=full ./treeMemory> >>> > >>> ==9541== Memcheck, a memory error detector.> >>> > >>> ==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.> >>> > >>> ==9541== Using LibVEX rev 1854, a library for dynamic binary translation.> >>> > >>> ==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.> >>> > >>> ==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.> >>> > >>> ==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.> >>> > >>> ==9541== For more details, rerun with: -v> >>> > >>> ==9541==> >>> ==9541==> >>> ==9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)> >>> ==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.> >>> ==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.> >>> ==954 1== For counts of detected errors, rerun with: -v> >>> ==9541== searching for pointers to 98 not-freed blocks.> >>> ==9541== checked 149,260 bytes.> >>> ==9541==> >>> ==9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3> >>> ==9541== at 0x40057C8: malloc (vg_replace_malloc.c:207)> >>> ==9541== by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)> >>> ==9541== by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)> >>> ==9541== by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)> >>> ==9541== by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)> >>> ==9541== by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)> >>> ==9541== by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)> >>> ==9541== by 0x80B1E12: sql_command (PLSQLpredigest Parser.c:49133)> >>> ==9541== by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)> >>> ==9541== by 0x8083185: statement (PLSQLpredigestParser.c:31331)> >>> ==9541== by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)> >>> ==9541== by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)> >>> ==9541==> >>> ==9541== LEAK SUMMARY:> >>> ==9541== definitely lost: 7,560 bytes in 90 blocks.> >>> ==9541== indirectly lost: 448 bytes in 8 blocks.> >>> ==9541== possibly lost: 0 bytes in 0 blocks.> >>> ==9541== still reachable: 0 bytes in 0 blocks.> >>> ==9541== suppressed: 0 bytes in 0 blocks.> >>> > >>> Source Code:> >>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~> >>> string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";> >>> > >>> pANTLR3_INPUT_STREAM lInput=NULL;> >>> pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;> >>> pPLSQLpredigestParser lPredigestParser=NULL;> >>> pPLSQLpredigestLexer lPredigestLexer=NULL;> >>> lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);> >>> if(!lInput)> >>> {> >>> cout<<" input error"> > >>> lPredigestLexer = PLSQLpredigestLexerNew(lInput);> >>> if(!lPredigestLexer)> >>> {> >>> cout<<" lPredigestLexer error"> > >>> lPredigestParser->free(lPredigestParser);> >>> lPredigestTokenStream->free(lPredigestTokenStream);> >>> lPredigestLexer->free(lPredigestLexer);> >>> lInput->close(lInput);> >>> > >>> > >>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`> >>> Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);> >>> > >>> I don't know why so simple code cause so obvious memory leak> >>> > >>> > >>> Could you help me to solve this? (I'm hurry for this code, thanks a lot!)> >>> > >>> I list the information and attachment includes all code about it (C file ):> >>> > >>> Platform: RedHat Enterprise 5 Server, virtual machine.> >>> GCC version: 4.1.1> >>> Antlr Version: 3.1.1> >>> > >>> > >>> > >>> > >>> I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com).> >>> > >>> > >>> Thanks a lot.> >>> > >>> > >>> Best Regards> >>> Winfly Lin> >>> > >>> > >>> > >>> > >>> > >>> > >>> > >>> > >>> Get news, entertainment and everything you care about at Live.com. Check it out!> >>> _________________________________________________________________> >>> Connect to the next generation of MSN Messenger > >>> http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline> >>> > >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest> >>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address> >>> > >> > > _________________________________________________________________> > Connect to the next generation of MSN Messenger > > http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address> > > _________________________________________________________________> Discover the new Windows Vista> http://search.msn.com/results.aspx?q=windows+vista&mkt=en-US&form=QBRE
_________________________________________________________________
Invite your mail contacts to join your friends list with Windows Live Spaces. It's easy!
http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mkt=en-us
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/b15de281/attachment.html 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test.cpp
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/b15de281/attachment.pl 

From yuri at tijerino.net  Tue Nov 11 21:59:55 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Wed, 12 Nov 2008 14:59:55 +0900
Subject: [antlr-interest] Parsing a file
Message-ID: <491A70DB.6070805@tijerino.net>

Ok, let me rephrase my previous question.

Let's say that I have simple grammar for a parser of the following form:

grammar Hour;

time
  :
     'at' HOURNUM ('pm' | 'am' | 'p' | 'a')
  ;

HOURNUM
  :
    '0'..'12'
  ;

WS
  :
    ' ', | '\t' | '\n' {$channel = HIDDEN;}
  ;

I want to use this grammar to extract ALL instances of times in any 
given input sentence.

For example:

1) at 4pm
2) at 8a
3) at 10p
4) at 11am

or even sentences like:

6) for 5 people at 8pm
7) find me 3 pieces at 6pm

All parse fine and return a time date structure with startIndex and 
endIndex information.  However, the following sentence causes problems

8) at 2 times the cost at 5pm

notice that while the previous two sentences (6 and 7) above have "5 p" 
and "3 p" which are partial matches to the rule, the 'at' token is 
missing from the beginning, so automatic error recovery would skip all 
input until it finds a valid token that matches the beginning of a valid 
input stream, in this case "at 8pm" and "at 6pm", which begin with the 
'at' literal.

The problem is in the following sentence because "at 2", matches the 
rule at the first 2 tokens, so ANTLR would report an error and exit. 

The behavior I want for my parser is that even if it finds partial 
matches such as this, I would like to throw away the partially matched 
tokens, in this case 'at' and '2' and then continue with the rest of the 
input trying to parse it along the way, thus eventually reaching "at 
5pm" and matching it correctly.  The default behavior, I believe is that 
since it does not find anything that matches '('am' | 'pm' | 'a' | 'p'), 
but instead it eventually finds another 'at' and '5' it fails and 
exits.   Is it possible to override this behavior and allow some kind of 
resync of the input so that it throws away the 'at' '2' and tries to 
parse the remaining sentence? That is "times the cost at 5 pm".

What do I need to do to achieve this behavior at the parser level?  I 
believe this is similar to what the lexer is doing to tokenize all the 
input until the end of the input. I want to do likewise, not at the 
lexical level, but at the syntactical  level. I have seen the example 
for extracting comments in the documentation and wiki, but since my 
domain-specific language does not have a definite termination token 
(such as the "*/" for end of comment), I can't use that approach.  I 
have seen some clues of how to do this by catching the exceptions 
associated and then doing something with the input, but I have not been 
able to figure it out. 

Can anyone help with this one?

Thanks in advance,

Yuri Tijerino






From ranco.marcus at epirion.nl  Wed Nov 12 00:05:18 2008
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Wed, 12 Nov 2008 09:05:18 +0100
Subject: [antlr-interest] fragment and option greedy=false
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>
References: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>
	<83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local>
	<86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>
Message-ID: <83315D8A233B6E45B9AD4BF153589BB3026951@sun.epirion.local>

Thanks for pointing me in the right direction. I understood that
syntactic predicates could only be used to resolve ambiguity in a
grammar. I'm now trying to use this in the following rule (long string,
starts and ends with three double quotes). 

The first option gives me an error (The following alternatives can never
be matched: 2), but why? Which alternative does the 2 refer to?

LONGSTRING
	: '"""' ( options {greedy=false;} : ( '"' | '""' )? ( ~('"') )
=> LCHARACTER  )* '"""'
	;

The second option is still greedy and won't work either (Grammar passes
check, but generated code is greedy). 

LONGSTRING
	: '"""' ( ( '"' | '""' )? ( ~('"') ) => LCHARACTER  )* '"""'
	;

Any input?


-----Original Message-----
From: Sam Harwell [mailto:sharwell at pixelminegames.com] 
Sent: Tuesday, November 11, 2008 6:48 PM
To: Ranco Marcus; antlr-interest at antlr.org
Subject: RE: [antlr-interest] fragment and option greedy=false

COMMENT
    : '/*'
      (   (~'*' | '*' ~'/') => VALID_CHAR
      )*
      '*/'
    ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
Sent: Tuesday, November 11, 2008 11:47 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] fragment and option greedy=false

Hello all,

I would like to know if there are any limitations on the use of
fragments in non-greedy sub rules. In the example below, I would like to
create a lexer rule that matches with a comment (i.e. starts with /*,
has zero or more characters from the given fragment and ends with */). 

grammar MulticharComment;

sentence 
	: COMMENT '.'
	;

COMMENT
//	: '/*'  ( options {greedy=false;} : VALID_CHARS )* '*/'
// option 1
	: '/*'  ( options {greedy=false;} : ('a'..'z' | '*' | '/') )*
'*/'       // option 2
	;

fragment
VALID_CHARS
	: 'a'..'z' | '*' | '/'
	;

If I use the line with the fragment (option 1), I get the following
error (in ANTLRWorks 1.2.1, ANTLR v3.1.1) which I didn't expect. 

Input: /*abba*/.
Error: problem matching token at 1:9 NoViableAltException('.'@[()*
loopback of 8:10: ( options {greedy=false; } : VALID_CHARS )*])

Where does '.'@[()* come from and what is meant by 'the loopback'?

In this particular example, I could use the pattern itself (option 2)
and accept a little redundancy. However, if the pattern is more complex
(i.e. consists of Unicode character ranges, escapes, multiple subrules
etc.), this doesn't feel right. 


It would be great if any of you could clarify on this matter. Thanks in
advance.

Kind regards, Ranco Marcus

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From antlr at mirality.co.nz  Wed Nov 12 00:44:10 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 12 Nov 2008 21:44:10 +1300
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
 production appears to affect "accept/reject" of parser for fixed input.
In-Reply-To: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.co
 m>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
Message-ID: <20081112084419.8329A11ED57@www.antlr.org>

At 09:48 12/11/2008, Dejas Ninethousand wrote:
>I believe I have found a peculiar issue in ANTLR.  If memory 
>serves, the order of alternatives in a grammar should have no 
>effect on the set of inputs it accepts.  For example I believe:
>
>program : statement_list | expression
>
>is equivalent to:
>
>program : expression | statement_list

As far as I am aware, they are indeed different, since ANTLR tests 
the alts in order of appearance (which is why you can use semantic 
predicates to choose between two otherwise identical 
alternatives).

>a : b | c ;
>
>b : f |    d ;
>
>c : e ;
>
>d : D_NAME idl=f? D_TARGET a (resOp=RES res=a)? -> D_NAME $idl? 
>D_TARGET a $resOp? $res?;
>
>e : b RCHEVRON b;
>
>f : VERBATUM_IDENTIFIER;

Rules a and e share a common left prefix (b), and as rule c is 
equivalent to e, you've just introduced an ambiguity -- on 
encountering a "b" (and hence either a "d" or an "f", in turn a 
D_NAME or a VERBATUM_IDENTIFIER), should ANTLR follow the first or 
second alt in a?  Lacking any better information, it will try each 
in turn (since you've enabled backtracking) -- another reason why 
the order matters.

It's best to factor these sorts of things out so you don't have 
this kind of ambiguity.  And once you've done that you should be 
able to get rid of the backtracking as well :)


From antlr at mirality.co.nz  Wed Nov 12 00:49:49 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 12 Nov 2008 21:49:49 +1300
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491A70DB.6070805@tijerino.net>
References: <491A70DB.6070805@tijerino.net>
Message-ID: <20081112085004.D7BD12F4314@www.antlr.org>

At 18:59 12/11/2008, Yuri Tijerino wrote:
 >HOURNUM
 >  :
 >    '0'..'12'
 >  ;

That doesn't mean what you seem to think it means.  In fact I'm 
not convinced it means anything sensible at all :)


From freddy.mallet at gmail.com  Wed Nov 12 01:43:26 2008
From: freddy.mallet at gmail.com (Freddy Mallet)
Date: Wed, 12 Nov 2008 10:43:26 +0100
Subject: [antlr-interest] Don't want to pervert reference grammar like
	Terence Parr one on Java 1.5
Message-ID: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>

Hi all,

I'd like to create my own Open Source library to calculate metrics on java
and pl/sql source code. Those metrics could be lines of code, cyclomatic
complexity, maintainability index (SEI), etc. I've studied javacc and antlr,
then read the definitive ANTLR Reference.

At that point, I guess I've enough material to begin writing this library
but ... there is a recurring question I can't evacuate from my brain.

Here is my issue : on the shelf, there is already two reference grammars
available to parse java and pl/sql. Of course, those two reference grammars
will evolve in time to follow java and pl/sql evolutions.

Tomorrow, beginning to touch those two grammars to build my own AST or to
add my own actions on rules is equivalent to create a new branch on a source
code. After few months, the differences between the grammars will be so
important that I couldn't synchronize them. So after a while, I couldn't
capitalize on ANTLR community work.

That's exactly what happens currently to JavaNCSS library. The library used
javacc and all work has been done from a Java 1.1 grammar which has now
great difficulty to evolve.

So, is there an abstraction mechanism which allow us to use on the shelf
grammars without modifying them directly ?

Thanks for your help,

Freddy



-- 
Freddy Mallet,
Sonar , Embrace Quality
http://sonar.codehaus.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/a0cfe395/attachment.html 

From qwizv9b02 at sneakemail.com  Wed Nov 12 02:05:15 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 12 Nov 2008 11:05:15 +0100
Subject: [antlr-interest] On to the next issue: error(211)
In-Reply-To: <20081111194153.549F911ED1C@www.antlr.org>
References: <gf965l$90v$1@ger.gmane.org>	<20081110194628.89AC4CE955@www.antlr.org>	<gfbv63$m1i$1@ger.gmane.org>
	<20081111194153.549F911ED1C@www.antlr.org>
Message-ID: <gfe9or$46j$1@ger.gmane.org>

Gavin Lambert schreef:
> At 01:52 12/11/2008, Hendrik Maryns wrote:
>  >The thing I am having trouble with is that, with the idea of
>  >polymorphism etc., I'd like to have things dealt with at the
>  >appropriate place.
>  >
>  >I have rules like
>  >
>  >atomic : atomicHead variable label ;
>  >
>  >atomicHead : EQUALITY | DOMINANCE | INCLUSION | ? ;
>  >
>  >and depending on the value of atomicHead, I 
> want a different Java
>  >object to be created.
> 
> If you have input AST fragments like this:
>    ^(EQUALITY a b)
>    ^(DOMINANCE a b)
>    ^(INCLUSION a b)
>    ^(INVERSE a)
> 
> then they're trivial to parse with AST 
> rules.  The job of the parser is usually to 
> translate the sequential token stream into a tree 
> structure that conveys the intended meaning; the 
> tree parser then goes through that tree and does 
> whatever you want.

That is what I intended to do, but the problem remains.  Indeed I will
have to come back from the generalization that I had in the atomic rule,
and indeed just list all possible subtypes separately, each of them
looking for their arguments.  This is no problem, but I just thought it
was a nice generalization.  For simple parsing, it works, but it makes
it difficult to generate the proper code, due to the dependencies on
subrules.

  The tree grammar is usually
> very simple and you should almost never need to 
> use any predicates in it.

I see.  Since my grammar is so easy, I will do it in the parser directly
instead.


> (Though I'm not sure why you're calling this 
> "atomic".  It seems like an odd choice of name 
> for something that seems to require neighbouring symbols as well.)

Lol, because they are atomic formulas in the problem domain, but of
course not viewn from a parser standpoint.

>  >I cannot do
>  >
>  >atomic return [Formula result] : atomicHead[$variable.result,
>  >$label.result] variable label { $result = $atomicHead.result; };
>  >
>  >since $variable.result and $label.result will not have been
>  >evaluated at that point.
> 
> atomic returns [Formula result]
>    : ^(EQUALITY variable expr) { $result = new
>          Equality($variable.result, $expr.result); }
>    | ^(DOMINANCE ...

So indeed split up the rule which generalizes over the structure of the
several atomic formulas (head variable variable) into a rule for each
head.  This is what I am doing now.

Thanks!

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/031222f2/attachment.bin 

From zirrus at gmail.com  Wed Nov 12 02:18:46 2008
From: zirrus at gmail.com (=?ISO-8859-1?Q?Javier_Luis_C=E1novas_Izquierdo?=)
Date: Wed, 12 Nov 2008 11:18:46 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <a382aa010811091733x4a4a1a98u7b87ac2db8e42c7a@mail.gmail.com>
References: <a382aa010811070207j6c8e933cs1a8761a89cac0912@mail.gmail.com>
	<a382aa010811091733x4a4a1a98u7b87ac2db8e42c7a@mail.gmail.com>
Message-ID: <45c28e3e0811120218j72f49ddey31df70445458e7c8@mail.gmail.com>

Hi Andrew!

Thanks for the advices. They have been useful for improving my grammar
definition.

I had to modify the antlr ant task to execute the antlr parser tool
(memory aspects) and some elements in the grammar definition (as you
told in your mail): options section, members section, and some grammar
rules. The only thing I have done different is the definition of rules
for keyword. I use the ANTLRNoCaseFileStream Java class defined in
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782. This way,
all keywords can be specified in uppercase, lowercase or both, they
will be recognized in uppercase in the lexer so these rules only work
with uppercase words.

Regards!

2008/11/10 Andrew Haritonkin <thikone at gmail.com>:
> Hi, Javier Luis C?novas Izquierdo!
>
> You don't need so much memory for my grammar, really :) 256Mb is
> enough for ANTLR v3.1.1. Well I use 512Mb actually...
>
> You need to change one rule though, to make it compatible with ANTLR 3.1.x:
>
> column_spec
>   :       sql_identifier ( DOT sql_identifier )*;
>
> For some reason, ANTLR 3.1.x cannot compile it, raising a error:
>
> error(206): PLSQL3.g:791:4: Alternative 2: after matching input such
> as ID DOT ID DOT ID DOT ID DOT decision cannot predict what comes next
> due to recursion overflow to expr_add from sql_expression and to
> expr_mul from expr_add
>
> While with ANTLR 3.0.1 it was compiling just fine... Anyway, replace
> it with this:
>
> column_spec
>   :       sql_identifier ( DOT sql_identifier ( DOT sql_identifier )? )?;
>
> And regarding Java target - there is not much you need to change, only
> members declaration and some gate predicates:
>
> options {
>       language=Java;
>       k=*;
>       backtrack=true;
>       memoize=true;
>       output=AST;
> }
>
> @members {
>   private boolean is_sql = false;
> }
>
> and all parser rules for keywords should like like this:
>
> keyA : {PLSQL3Parser.this.input.LT(1).getText().toUpperCase().equals("A")}? ID;
>
> Here I have to reference parser class, because this predicate can be
> also embedded in DFA, but there only token type stream is available,
> LT(1) returns token ID, integer... not very convenient. Gonna write
> separate topic for this, eventually.
>
> I also use Java target, mainly to debug the grammar in ANTLRWorks -
> works perfectly.
>
> Andrew
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>



-- 
Javier Luis C?novas Izquierdo
http://zirrus.es
zirrus at gmail.com

From asoka250 at gmail.com  Wed Nov 12 02:55:41 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 12 Nov 2008 04:55:41 -0600
Subject: [antlr-interest] How to get value of next token match - regd.
Message-ID: <491AB62D.8030507@gmail.com>

Hello list,

My tree grammar looks as follow's:-

edges[Object g,String subID] returns [int nodeID] @init { nodeID= 0; } :
    { int edgeID = 0;  }
    ( ^(D_EDGE_OP  ( start=edges[g,subID] | start=node_id[g,subID] ) 
end=node_id[g,subID]
      {
      }

node_id[Object g,String subID] returns [int nodeID] @init { nodeID=0;}
    :
    ( i=id
    | ^(COLON i=id (r=ID) ? ( compass ) ? )
    ) {}

Simply put, *Can I get text of a next matched token using a grammar 
action*. *Lookahead K=1 for example*.

Further description:-
For this sample edge  cluster_A --> B, in the edges function, 
start=node_id[g,subID] is the first match.
How do I do something like this, ( ^(D_EDGE_OP  ( start=edges[g,subID] | 
start=node_id[g,subID] (get value of matched id in node_id func here) 
end=node_id[g,subID]
That is, I want to get the id of the matched node(which is obvious 
node_id func) in the edges function.

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From antlr at mirality.co.nz  Wed Nov 12 03:22:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 13 Nov 2008 00:22:19 +1300
Subject: [antlr-interest] How to get value of next token match -  regd.
In-Reply-To: <491AB62D.8030507@gmail.com>
References: <491AB62D.8030507@gmail.com>
Message-ID: <20081112112228.80B3B3D1696@www.antlr.org>

At 23:55 12/11/2008, Ashok Varikuti wrote:
 >node_id[Object g,String subID] returns [int nodeID] @init {
 >nodeID=0;}
 >    :
 >    ( i=id
 >    | ^(COLON i=id (r=ID) ? ( compass ) ? )
 >    ) {}
[...]
 >For this sample edge  cluster_A --> B, in the edges function,
 >start=node_id[g,subID] is the first match.
 >How do I do something like this, ( ^(D_EDGE_OP  (
 >start=edges[g,subID] | start=node_id[g,subID] (get value
 >of matched id in node_id func here) end=node_id[g,subID]
 >That is, I want to get the id of the matched node(which is
 >obvious node_id func) in the edges function.

You mean like $start.nodeID?  Or something else?

(To do that you'd need to make your node_id rule assign the ID to 
the $nodeID return value as well.)


From asoka250 at gmail.com  Wed Nov 12 03:29:35 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 12 Nov 2008 05:29:35 -0600
Subject: [antlr-interest] How to get value of next token match -  regd.
In-Reply-To: <491abc74.050bca0a.3cd3.282eSMTPIN_ADDED@mx.google.com>
References: <491AB62D.8030507@gmail.com>
	<491abc74.050bca0a.3cd3.282eSMTPIN_ADDED@mx.google.com>
Message-ID: <491ABE1F.20709@gmail.com>

Gavin Lambert wrote:
> At 23:55 12/11/2008, Ashok Varikuti wrote:
> >node_id[Object g,String subID] returns [int nodeID] @init {
> >nodeID=0;}
> >    :
> >    ( i=id
> >    | ^(COLON i=id (r=ID) ? ( compass ) ? )
> >    ) {}
> [...]
> >For this sample edge  cluster_A --> B, in the edges function,
> >start=node_id[g,subID] is the first match.
> >How do I do something like this, ( ^(D_EDGE_OP  (
> >start=edges[g,subID] | start=node_id[g,subID] (get value
> >of matched id in node_id func here) end=node_id[g,subID]
> >That is, I want to get the id of the matched node(which is
> >obvious node_id func) in the edges function.
>
> You mean like $start.nodeID?  Or something else?
>
> (To do that you'd need to make your node_id rule assign the ID to the 
> $nodeID return value as well.)
>
>
I can assign the ID to the return value, but I am returning an integer 
value and the text of the ID can be string too. Hence my wish to 
lookahead and get the ID value. Can I do something like this:-
$node_id[g,subID].ID to get the ID value. $start.nodeID doesn't work 
since start is of type integer. Thnkx gavin for ur response.

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From asoka250 at gmail.com  Wed Nov 12 03:31:43 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 12 Nov 2008 05:31:43 -0600
Subject: [antlr-interest] How to get value of next token match -  regd.
In-Reply-To: <491abc74.050bca0a.3cd3.282eSMTPIN_ADDED@mx.google.com>
References: <491AB62D.8030507@gmail.com>
	<491abc74.050bca0a.3cd3.282eSMTPIN_ADDED@mx.google.com>
Message-ID: <491ABE9F.5080406@gmail.com>

Gavin Lambert wrote:
> At 23:55 12/11/2008, Ashok Varikuti wrote:
> >node_id[Object g,String subID] returns [int nodeID] @init {
> >nodeID=0;}
> >    :
> >    ( i=id
> >    | ^(COLON i=id (r=ID) ? ( compass ) ? )
> >    ) {}
> [...]
> >For this sample edge  cluster_A --> B, in the edges function,
> >start=node_id[g,subID] is the first match.
> >How do I do something like this, ( ^(D_EDGE_OP  (
> >start=edges[g,subID] | start=node_id[g,subID] (get value
> >of matched id in node_id func here) end=node_id[g,subID]
> >That is, I want to get the id of the matched node(which is
> >obvious node_id func) in the edges function.
>
> You mean like $start.nodeID?  Or something else?
>
> (To do that you'd need to make your node_id rule assign the ID to the 
> $nodeID return value as well.)
>
>
Can you suggest me some other way.

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From thikone at gmail.com  Wed Nov 12 03:44:41 2008
From: thikone at gmail.com (Andrew Haritonkin)
Date: Wed, 12 Nov 2008 12:44:41 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <45c28e3e0811120218j72f49ddey31df70445458e7c8@mail.gmail.com>
References: <a382aa010811070207j6c8e933cs1a8761a89cac0912@mail.gmail.com>
	<a382aa010811091733x4a4a1a98u7b87ac2db8e42c7a@mail.gmail.com>
	<45c28e3e0811120218j72f49ddey31df70445458e7c8@mail.gmail.com>
Message-ID: <a382aa010811120344m1ab5d36g3a631441ac433568@mail.gmail.com>

Hi, Javier Luis C?novas!

You are welcome!

Yep, I also use ANTLRNoCaseFileStream for case insensitivity, and all
my keywords therefore are upper case. Beyond that I did small
improvement in select statement regarding join clause - see attached
file.

I would also appreciate any comments/suggestions from your side.
Especially it would be helpful to know if valid pl/sql cannot be
parsed by this grammar, since I'm very interested in this grammar
improvement...

>From what I already know is that XML SQL functions are not supported,
and that the following statement fails (it seems multiple level of '(
)' caused the trouble):

select * from
(((( a inner join b on a.x = b.x )
left outer join c on a.x = c.x )
left outer join d on a.x = d.x )
left outer join e on a.x = e.x );

Also there is a problem with some not reserved keywords. Well, most of
them are ID tokens with the gate predicate to check the text of token,
like this:

keyWHILE : {PLSQL3jParser.this.input.LT(1).getText().toUpperCase().equals("WHILE")}?
ID;

but this particular keyword and some others I had to replace with
literal token instead:

keyWHILE : 'WHILE';

Because otherwise parser is not able to make the right decision in
some cases... Therefore, they cannot be used as identifiers, while in
fact, they can:

CREATE TABLE test (while NUMBER);

BEGIN
   UPDATE test SET while = while + 1;
END;
/

Will be accepted by Oracle.

Recently I saw an article in wiki which might help me to solve this
and also improve the speed (I think I already know what to do):
http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar

Andrew

On Wed, Nov 12, 2008 at 11:18 AM, Javier Luis C?novas Izquierdo
<zirrus at gmail.com> wrote:
> Hi Andrew!
>
> Thanks for the advices. They have been useful for improving my grammar
> definition.
>
> I had to modify the antlr ant task to execute the antlr parser tool
> (memory aspects) and some elements in the grammar definition (as you
> told in your mail): options section, members section, and some grammar
> rules. The only thing I have done different is the definition of rules
> for keyword. I use the ANTLRNoCaseFileStream Java class defined in
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782. This way,
> all keywords can be specified in uppercase, lowercase or both, they
> will be recognized in uppercase in the lexer so these rules only work
> with uppercase words.
>
> Regards!
>
> 2008/11/10 Andrew Haritonkin <thikone at gmail.com>:
>> Hi, Javier Luis C?novas Izquierdo!
>>
>> You don't need so much memory for my grammar, really :) 256Mb is
>> enough for ANTLR v3.1.1. Well I use 512Mb actually...
>>
>> You need to change one rule though, to make it compatible with ANTLR 3.1.x:
>>
>> column_spec
>>   :       sql_identifier ( DOT sql_identifier )*;
>>
>> For some reason, ANTLR 3.1.x cannot compile it, raising a error:
>>
>> error(206): PLSQL3.g:791:4: Alternative 2: after matching input such
>> as ID DOT ID DOT ID DOT ID DOT decision cannot predict what comes next
>> due to recursion overflow to expr_add from sql_expression and to
>> expr_mul from expr_add
>>
>> While with ANTLR 3.0.1 it was compiling just fine... Anyway, replace
>> it with this:
>>
>> column_spec
>>   :       sql_identifier ( DOT sql_identifier ( DOT sql_identifier )? )?;
>>
>> And regarding Java target - there is not much you need to change, only
>> members declaration and some gate predicates:
>>
>> options {
>>       language=Java;
>>       k=*;
>>       backtrack=true;
>>       memoize=true;
>>       output=AST;
>> }
>>
>> @members {
>>   private boolean is_sql = false;
>> }
>>
>> and all parser rules for keywords should like like this:
>>
>> keyA : {PLSQL3Parser.this.input.LT(1).getText().toUpperCase().equals("A")}? ID;
>>
>> Here I have to reference parser class, because this predicate can be
>> also embedded in DFA, but there only token type stream is available,
>> LT(1) returns token ID, integer... not very convenient. Gonna write
>> separate topic for this, eventually.
>>
>> I also use Java target, mainly to debug the grammar in ANTLRWorks -
>> works perfectly.
>>
>> Andrew
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>
>
> --
> Javier Luis C?novas Izquierdo
> http://zirrus.es
> zirrus at gmail.com
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PLSQL3j.g
Type: application/octet-stream
Size: 44748 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/fd91859f/attachment.obj 

From qwizv9b02 at sneakemail.com  Wed Nov 12 04:09:32 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 12 Nov 2008 13:09:32 +0100
Subject: [antlr-interest] fragment and option greedy=false
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>
References: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>	<83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local>
	<86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>
Message-ID: <gfeh1s$rnk$1@ger.gmane.org>

Sam Harwell schreef:
> COMMENT
>     : '/*'
>       (   (~'*' | '*' ~'/') => VALID_CHAR
>       )*
>       '*/'
>     ;

Why not simply

 (~'*/') => VALID_CHAR

?

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/1446e384/attachment.bin 

From andreas.weigel at tu-harburg.de  Wed Nov 12 04:12:10 2008
From: andreas.weigel at tu-harburg.de (Andreas Weigel)
Date: Wed, 12 Nov 2008 13:12:10 +0100
Subject: [antlr-interest] Listing order of NT alternatives on rhs
 of	production appears to affect "accept/reject" of parser for	fixed input.
In-Reply-To: <38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>	<200811111759.50452.jbb@acm.org>
	<38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>
Message-ID: <491AC81A.2090006@tu-harburg.de>

Hi,
> I disagree.  My interpretation of that that quote is that enabling 
> backtracking can influence /which/ production is used to match an 
> input (by prioritizing them) however it doesn't say that the set of 
> valid inputs that can match /some/ production changes.
>
> My problem it seems is that in one grammar ordering ANTLR is able to 
> find /some /match for the input while with the other ordering ANTLR 
> decides /no /match can be found.  I claim that changing the ordering 
> should not affect whether /some /match can be found by the parser for 
> a fixed input, irrespective of what that specific match is.  When 
> ANLTR says no match can be found, I point to the syntax tree shown in 
> my original email and say "what about that match?"
>
> -- Matt

I also was under the impression, that backtrack=true should always yield 
at least some match for a valid input. But I have exactly the same issue 
here with another grammar so I'd be very interested in a statement 
concerning that issue. Left factoring is not a great option for me as I 
don't want to tear apart what belongs together and predicates cannot be 
applied as I'm working with another framework (openarchitectureware's 
xText) that generates an Antlr grammar without giving me the possibility 
to intervene and define those.

From sharwell at pixelminegames.com  Wed Nov 12 08:01:04 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 10:01:04 -0600
Subject: [antlr-interest] fragment and option greedy=false
In-Reply-To: <gfeh1s$rnk$1@ger.gmane.org>
References: <1125.81.41.86.20.1226423569.squirrel@atc.ugr.es>	<83315D8A233B6E45B9AD4BF153589BB302694E@sun.epirion.local><86403CA0939415448BCCB83855EFE09A64E808@Bloodymary.ironwillgames.com>
	<gfeh1s$rnk$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E82C@Bloodymary.ironwillgames.com>

In a lexer, '*/' is two consecutive characters and not a set, so while ANTLR lets you complement it without a warning, it doesn't work as expected. At least that was the result when I tried a similar method on another rule.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hendrik Maryns
Sent: Wednesday, November 12, 2008 6:10 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] fragment and option greedy=false

Sam Harwell schreef:
> COMMENT
>     : '/*'
>       (   (~'*' | '*' ~'/') => VALID_CHAR
>       )*
>       '*/'
>     ;

Why not simply

 (~'*/') => VALID_CHAR

?

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html


From espina.edgar at gmail.com  Wed Nov 12 08:24:21 2008
From: espina.edgar at gmail.com (Edgar Espina)
Date: Wed, 12 Nov 2008 14:24:21 -0200
Subject: [antlr-interest] ANTLR Source Formatting
Message-ID: <92b42db60811120824m1dcd9410pe5504b367053af00@mail.gmail.com>

Hi all,

I would like to include a source formatter in ANTLR IDE.

Can anyone suggest a default format?

Thanks!

-- 
edgar

From qwizv9b02 at sneakemail.com  Wed Nov 12 09:04:26 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 12 Nov 2008 18:04:26 +0100
Subject: [antlr-interest] Failing on case test: how?
Message-ID: <gff2aq$2kq$1@ger.gmane.org>

Hi,

I have two rules as follows:

firstOrderVariable returns [FirstOrderVariable result]
	: IDENTIFIER { $result = getFirstOrderVariable($IDENTIFIER.text); }
	;

secondOrderVariable returns [SecondOrderVariable result]
	: IDENTIFIER { $result = getSecondOrderVariable($IDENTIFIER.text); }
	;

with

IDENTIFIER
  : ( ~( CLOSE | OPEN | WS ) )+
  ;

OPEN : '(' ;
CLOSE : ')' ;
fragment WS : ( ' ' | '\t' ) ;

Most of the times, it is no problem they are identical, since the rest
of the surrounding rule will do the disambiguation.  Unfortunately, in
some cases, it won?t.  I would like to separate them in that first-order
variables should start with a lowercase letter, but second-order
variables with an uppercase letter.  So I?d like to insert some semantic
predicate which checks the case of the first letter and fails as
appropriate.  Is this possible, and if yes, how?

If it isn?t I can make sure the surrounding rules do the disambiguation,
but this solution would be nicer.

Originally, I had a lexer rule FIRST_ORDER_VARIABLE: LOWER ( LOWER |
UPPER )* and similar for SECOND_ORDER_VARIABLE, but that didn?t work
properly since that way it was not possible to match other kind of stuff
with the IDENTIFIER rule.  (It would have been lexed as FOV, but an ID
was expected, so the lexer would barf.  It might be that I interpret the
problem incorrectly, but at least now it works.)  Also just allowing
letters is too simple, I want to allow (almost) every possible Unicode
token.

TIA, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/ae0c3662/attachment.bin 

From jimi at temporal-wave.com  Wed Nov 12 07:58:15 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Nov 2008 07:58:15 -0800
Subject: [antlr-interest] [Bug] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <BAY118-W241134EB477703B1B8DEC3E2140@phx.gbl>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>
	<1226422350.4332.4.camel@jimi.temporal-wave.com>
	<BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl>
	<BAY118-W241134EB477703B1B8DEC3E2140@phx.gbl>
Message-ID: <1226505495.4885.581.camel@server.temporal-wave.com>

On Wed, 2008-11-12 at 09:42 +0000, merry_winfly at hotmail.com wrote:
> 
> Hi Jim,
>  
> 
> I have test two g file, and one exist memory leak and anther no memory leak issue, more importantly, two files only one line is different.
>  
> And this two g file all come from PLSQL3.g(only change a little).
>  
> And I give you and memory leak information and all code in attachment.
>  
> I think this is a bug of antlr3.1.1 C.
>  
> Any way, I should fix the problem for this is a important demo with urgent schedule, and hope get help from you.
>  

OK - as I tried to explain to you, your parser produces an AST tree
output. However you are just calling the parser and throwing away the
return value of the parser rule. Copy the tree parsing example code and
create a node stream from the return value. You should then close this
node stream down as in the examples. Also check the strings you are
passing in to the parser - at first glance you are creating them
dynamically and not destroying them.

If you do not wish to use an AST, then take out the output=AST option
and the AST rewriting rules.

Finally you are saying: k=* and have turned on backtracking mode
globally. This parser will therefore be pretty inefficient and it will
not be able to pin down syntax errors too well for you. Turn off
backtracking mode and fix up the ambiguities that backtrack is hiding.

I will verify my code exception by fixing your code later today all
being well.

Jim



> Thanks a lot.
>  
> Best Regards
> Winfly Lin
> 
> 
>  
> 
> 
> 
> From: merry_winfly at hotmail.com
> To: jimi at temporal-wave.com
> CC: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> Date: Wed, 12 Nov 2008 02:21:36 +0000
> 
> 
> 
> Use the attachment to see the source code for the display issue (I can't send the all code for large size, any more information pls tell me directly).
>  
> Thanks 
> Winfly Lin
> > 
> >> From: merry_winfly at hotmail.com
> >> To: jimi at temporal-wave.com
> >> Date: Wed, 12 Nov 2008 02:10:08 +0000
> >> CC: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> >> 
> >> 
> >> Hi Jim
> >> 
> >> =>
> >> pANTLR3_INPUT_STREAM lInput=NULL;
> >> pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
> >> pPLSQLpredigestParser lPredigestParser=NULL;
> >> pPLSQLpredigestLexer lPredigestLexer=NULL;
> >> lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
> >> if(!lInput)
> >> {
> >> cout<<" input error" 
> >> lPredigestLexer = PLSQLpredigestLexerNew(lInput);
> >> if(!lPredigestLexer)
> >> {
> >> cout<<" lPredigestLexer error" 
> >> lPredigestParser->free(lPredigestParser);
> >> lPredigestTokenStream->free(lPredigestTokenStream);
> >> lPredigestLexer->free(lPredigestLexer);
> >> lInput->close(lInput);
> >> lPredigestParser=NULL;
> >> lPredigestTokenStream=NULL;
> >> lPredigestLexer=NULL;
> >> lInput=NULL;
> >> 
> >> =>This is my all source code, and memory leak exist in PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
> >> 
> >> 
> >> Actually, I have two type PLSQL's lexer and parser code from two type PLSQL g file. 
> >> 
> >> But only this file (PLSQLPredigest.g,I send to you before)exist memory leak (the source PLSQL.g is from website, and no memory leak issue,PLSQLpredigest is predigested from PLSQL.g) , and I seems to follow the "treeparser" sample to code (because I don't have any walker to new a node "antlr3CommonTreeNodeStreamNewTree"). 
> >> 
> >> Thank Jim.
> >> 
> >> Best Regards
> >> Winfly Lin
> >> 
> >>> Subject: Re: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> >>> From: jimi at temporal-wave.com
> >>> To: merry_winfly at hotmail.com
> >>> CC: antlr-interest at antlr.org
> >>> Date: Tue, 11 Nov 2008 08:52:30 -0800
> >>> 
> >>> On Tue, 2008-11-11 at 13:39 +0000, merry_winfly at hotmail.com wrote:
> >>>> 
> >>>> ==>
> >>>> Actully, I find when (lPredigestParser->free(lPredigestParser);) the adapter and vector will be freed by this free action, but at last some tokenstream didn't be freed, I don't know if my source code issue or antlr's bug.
> >>>> 
> >>>> And any one know this, pls freely tell me the reason.
> >>> 
> >>> Did you call free on the token stream itself? I think that this is your
> >>> issue. There is a treenode stream that you must free too. Check against
> >>> that example tree parsers, but I will look at your issue today.
> >>> 
> >>> Jim
> >>> 
> >>>> 
> >>>> Thanks a lot.
> >>>> 
> >>>> Best Regards
> >>>> Winfly Lin
> >>>> 
> >>>> 
> >>>> 
> >>>> From: merry_winfly at hotmail.com
> >>>> To: antlr-interest at antlr.org
> >>>> Date: Mon, 10 Nov 2008 13:21:04 +0000
> >>>> Subject: [antlr-interest] Antlr C code memory leak in Antlr 3.1.1
> >>>> 
> >>>> 
> >>>> 
> >>>> Hi All,
> >>>> 
> >>>> When I use the C code from antlr generator with predigest PLSQL parser , I find it exist obvious memory leak issue.
> >>>> 
> >>>> I use valgrind to check and the result is:
> >>>> 
> >>>> 
> >>>> valgrind --leak-check=full ./treeMemory
> >>>> 
> >>>> ==9541== Memcheck, a memory error detector.
> >>>> 
> >>>> ==9541== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
> >>>> 
> >>>> ==9541== Using LibVEX rev 1854, a library for dynamic binary translation.
> >>>> 
> >>>> ==9541== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
> >>>> 
> >>>> ==9541== Using valgrind-3.3.1, a dynamic binary instrumentation framework.
> >>>> 
> >>>> ==9541== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
> >>>> 
> >>>> ==9541== For more details, rerun with: -v
> >>>> 
> >>>> ==9541==
> >>>> ==9541==
> >>>> ==9541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17 from 1)
> >>>> ==9541== malloc/free: in use at exit: 8,008 bytes in 98 blocks.
> >>>> ==9541== malloc/free: 8,847 allocs, 8,749 frees, 2,202,767 bytes allocated.
> >>>> ==954 1== For counts of detected errors, rerun with: -v
> >>>> ==9541== searching for pointers to 98 not-freed blocks.
> >>>> ==9541== checked 149,260 bytes.
> >>>> ==9541==
> >>>> ==9541== 8,008 (7,560 direct, 448 indirect) bytes in 90 blocks are definitely lost in loss record 3 of 3
> >>>> ==9541== at 0x40057C8: malloc (vg_replace_malloc.c:207)
> >>>> ==9541== by 0x8055BFA: antlr3RewriteRuleElementStreamNewAE (antlr3rewritestreams.c:94)
> >>>> ==9541== by 0x8055DA0: antlr3RewriteRuleTOKENStreamNewAE (antlr3rewritestreams.c:192)
> >>>> ==9541== by 0x80B8125: select_list (PLSQLpredigestParser.c:51593)
> >>>> ==9541== by 0x80B4E0F: select_expression (PLSQLpredigestParser.c:50283)
> >>>> ==9541== by 0x80B3F4D: select_statement (PLSQLpredigestParser.c:49890)
> >>>> ==9541== by 0x810C0F5: insert_command (PLSQLpredigestParser.c:83912)
> >>>> ==9541== by 0x80B1E12: sql_command (PLSQLpredigest Parser.c:49133)
> >>>> ==9541== by 0x80B13BE: sql_statement (PLSQLpredigestParser.c:48855)
> >>>> ==9541== by 0x8083185: statement (PLSQLpredigestParser.c:31331)
> >>>> ==9541== by 0x808110E: seq_of_statements (PLSQLpredigestParser.c:30542)
> >>>> ==9541== by 0x8077D5C: start_rule (PLSQLpredigestParser.c:26944)
> >>>> ==9541==
> >>>> ==9541== LEAK SUMMARY:
> >>>> ==9541== definitely lost: 7,560 bytes in 90 blocks.
> >>>> ==9541== indirectly lost: 448 bytes in 8 blocks.
> >>>> ==9541== possibly lost: 0 bytes in 0 blocks.
> >>>> ==9541== still reachable: 0 bytes in 0 blocks.
> >>>> ==9541== suppressed: 0 bytes in 0 blocks.
> >>>> 
> >>>> Source Code:
> >>>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> >>>> string SQL="insert into T K(a1,a2,a3) select a,b,c from t2 where a>9 union all select e,f,g from t5 where e>'winfly' ;";
> >>>> 
> >>>> pANTLR3_INPUT_STREAM lInput=NULL;
> >>>> pANTLR3_COMMON_TOKEN_STREAM lPredigestTokenStream=NULL;
> >>>> pPLSQLpredigestParser lPredigestParser=NULL;
> >>>> pPLSQLpredigestLexer lPredigestLexer=NULL;
> >>>> lInput = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)SQL.c_str(), (ANTLR3_UINT64)SQL.size(), NULL);
> >>>> if(!lInput)
> >>>> {
> >>>> cout<<" input error"> 
> >>>> lPredigestLexer = PLSQLpredigestLexerNew(lInput);
> >>>> if(!lPredigestLexer)
> >>>> {
> >>>> cout<<" lPredigestLexer error"> 
> >>>> lPredigestParser->free(lPredigestParser);
> >>>> lPredigestTokenStream->free(lPredigestTokenStream);
> >>>> lPredigestLexer->free(lPredigestLexer);
> >>>> lInput->close(lInput);
> >>>> 
> >>>> 
> >>>> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
> >>>> Actually the memory leak exist PLSQLpredigestParser_start_rule_return psr = lPredigestParser->start_rule(lPredigestParser);
> >>>> 
> >>>> I don't know why so simple code cause so obvious memory leak
> >>>> 
> >>>> 
> >>>> Could you help me to solve this? (I'm hurry for this code, thanks a lot!)
> >>>> 
> >>>> I list the information and attachment includes all code about it (C file ):
> >>>> 
> >>>> Platform: RedHat Enterprise 5 Server, virtual machine.
> >>>> GCC version: 4.1.1
> >>>> Antlr Version: 3.1.1
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> I don't know if it is enough information to trace this problem, but if you want to know any more information, pls freely contact me with this E-mail (merry_winfly at hotmail.com).
> >>>> 
> >>>> 
> >>>> Thanks a lot.
> >>>> 
> >>>> 
> >>>> Best Regards
> >>>> Winfly Lin
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> 
> >>>> Get news, entertainment and everything you care about at Live.com. Check it out!
> >>>> _________________________________________________________________
> >>>> Connect to the next generation of MSN Messenger 
> >>>> http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
> >>>> 
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>> 
> >>> 
> >> _________________________________________________________________
> >> Connect to the next generation of MSN Messenger 
> >> http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
> >> 
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> 
> > _________________________________________________________________
> > Discover the new Windows Vista
> > http://search.msn.com/results.aspx?q=windows+vista&mkt=en-US&form=QBRE
> 
> 
> 
> 
> 
> Invite your mail contacts to join your friends list with Windows Live Spaces. It's easy! Try it!
> _________________________________________________________________
> Explore the seven wonders of the world
> http://search.msn.com/results.aspx?q=7+wonders+world&mkt=en-US&form=QBRE


From jimi at temporal-wave.com  Wed Nov 12 09:19:02 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Nov 2008 09:19:02 -0800
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
 production appears to affect "accept/reject" of parser for	fixed input.
In-Reply-To: <491AC81A.2090006@tu-harburg.de>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
	<200811111759.50452.jbb@acm.org>
	<38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>
	<491AC81A.2090006@tu-harburg.de>
Message-ID: <1226510342.4885.712.camel@server.temporal-wave.com>

On Wed, 2008-11-12 at 13:12 +0100, Andreas Weigel wrote:
> Hi,
> > I disagree.  My interpretation of that that quote is that enabling 
> > backtracking can influence /which/ production is used to match an 
> > input (by prioritizing them) however it doesn't say that the set of 
> > valid inputs that can match /some/ production changes.
> >
> > My problem it seems is that in one grammar ordering ANTLR is able to 
> > find /some /match for the input while with the other ordering ANTLR 
> > decides /no /match can be found.  I claim that changing the ordering 
> > should not affect whether /some /match can be found by the parser for 
> > a fixed input, irrespective of what that specific match is.  When 
> > ANLTR says no match can be found, I point to the syntax tree shown in 
> > my original email and say "what about that match?"
> >
> > -- Matt
> 
> I also was under the impression, that backtrack=true should always yield 
> at least some match for a valid input. But I have exactly the same issue 
> here with another grammar so I'd be very interested in a statement 
> concerning that issue. 

If it is not parsing valid input, then it would indeed be a bug, but
unfortunately, you probably think it is valid input but it isn't for one
reason or another.

I have never known a backtracking parser to fail to parse something that
will match one rule or another (valid input that the grammar is proven
to accept [the grammar, not the generated code ;-)] .) This is almost
certainly an error in the grammar, which is masked by the inability
localize the error (see below). Could be a bug of course, but my first
instinct is that it is not.

Basically, backtracking turns off any ambiguity errors that would
otherwise be thrown up at analysis time (and even if you are using
backtracking, it is worth turning that option off and generating the
code, to see what the ambiguities are). However, it isn't quite as
simple as just taking each alt in order as if the analysis shows that
some alts do not need predicates then predicates won't be inserted in
the hope of optimizing the parse.

So, if you can isolate some standalone grammar rule with a smallish
input, that shows that changing the rule order breaks the grammar, then
it would be considered a bug, all other things being equal (such as you
are using your own semantic predicates that work off flags being set or
not and changing the rule order somehow causes the flags to be
different).


> Left factoring is not a great option for me as I 
> don't want to tear apart what belongs together 

Unfortunately, what you think belongs together with your language
reading brain is quite often not the same as a good grammar ;-) You can
usually left factor without altering the maintainability at all though.
In fact I would argue that what you are seeing here shows that
backtracking parsers are more difficult to maintain because sometimes
the only way to find out what is happening is to debug with ANTLRWorks.

Other than performance, I think that the main issue with backtracking is
error recovery/syntax errors. This is because given some rule:

r : ra | rb | rc;

Backtracking will try alt ra, and if that fails try rb, then rc. If we
suppose that ra, rb and rc are complicated rules, then apart from the
very long syntactic predicates involved, a syntax error way down the
path of say rc, will cause the error to occur at start(r). Suppose you
have:

ra: attributes modifiers function;
rb: attributes modifiers function_prototype;
rc: attributes modifiers class;

and your input (supposedly trying to match rc, is:

<Attribute> <Attribute> public final static class F(int A) {
//lots of class body
syntax error here
}

Your backtracking will try ra and fail because it sees class, it will
try rb and fail because it sees class then try rc, get all the way to
the syntax error, then fail the predicate at the syntax error, so it
won't take rc either. It will then throw a recognition exception at the
first <Attribute> because none of the paths match, and your parser users
will be very confused.

Note that the order should not matter, so again, it would be a bug if
you can show that correct input is not matched when you reorder the
alts, assuming no side effects of your alts.

I would be betting on a situation like this if I were you. What you are
seeing as valid input is valid at that point, but a syntax error farther
along in the stream is throwing the error a lot earlier than you think,
even though it is also done a heck of a lot more work than you think.

The only way to work out what is going wrong is to generate your parser
with the -debug option, run your program, then attach to the parser
remotely using ANTLR Works. This will step you through the parse and you
will get to some point where a recognition error happens in the
predicate, that you were not expecting, and explains why it doesn't take
the path you think it should.

I can't think off-hand of any grammar that would not be easier to look
after in a refactored state. For instance, from the above:

r : attributes modifiers
      (
          function_types
        | class
      )
   ;

function_types
   : function_decl_spec
       (
           SEMI     // Prototype
         | function_body
       )
    ;
function_decl_spec
You can play around with where things are parsed of course, but your
tree then just reflects the real structure of the program instead of
trying to jump straight to FUNCTION or FUNCTION_DECL and so on.


m : x+=r* -> ^(MEMBERS $x*)
  ;

r : a=attributes m=modifiers
      (
          f=function_types

             -> ^(MEMBER $a? $m? $f)

        | c=class

             -> ^(MEMBER $a? $m? $c)

      )
   ;

function_types
   : f=function_decl_spec
       (
           SEMI     // Prototype

	     -> ^(FUNC_DECL $f)
	
         | fb=function_body

	     -> ^(FUNCTION $fb)
       )
    ;


> and predicates cannot be 
> applied as I'm working with another framework (openarchitectureware's 
> xText) that generates an Antlr grammar without giving me the possibility 
> to intervene and define those.

Perhaps you should use a different tool, or can fix the tool, or get teh
authors to fix the tool?

The problem is that the framework is generating a poor grammar and it
should machine re-factor before generating the grammar. This is fairly
easy if it already 'knows' the problem domain (and not so easy if you
have a generic tool like ANTLR itself). By which I mean that if it is
going to generate a bunch of rules from a template, then the template
should be refactored to avoid the problem. Or knowing in advance the
types of inputs that cause it to generate ambiguous parsers, then it
should special case them. It need not necessarily conduct complete
analysis, and if it were to do that, then it might as well generate the
code and skip the grammar ;-)

More simply though, the framework is probably generating an incorrect
grammar, or the input that causes it to generate the grammar that it
does is incorrect, or your input is not actually correct even thoguh it
looks like it is.

Generally, just don't use backtracking, but there are some situations
where it might be useful:

1) The input is guaranteed to be syntactically correct because it is
generated by some program, that would be considered in error itself it
generated syntactically incorrect code. For instance a symbolic
representation of an intermediate step in a compiler (say assembler code
generation);
2) Performance and error localization are not an issue because the input
is either correct or it isn't. For instance a code formatter can just
abandon a format and say "Your code is not correct, fix it and try
again".
3) At a push, prototyping. Though my own feeling here is that you end up
with a weaker parser than you would and never get around to making the
production version.
4) One shot parsers, written to convert one thing in to another then
thrown away (though they may be covered by 1 and 2 above really).

If you can show a small grammar and an input set that does not parser
correctly, then you will surely get Ter to fix it. So far thoguh, there
is no indication of an error in ANTLR (that does not mean there isn't
one, but that there is not enough information yet.)

Hope this helps somewhat,

Jim

> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From qwizv9b02 at sneakemail.com  Wed Nov 12 09:27:04 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 12 Nov 2008 18:27:04 +0100
Subject: [antlr-interest] How to handle + when using arguments in Java code
Message-ID: <gff3l9$7vn$1@ger.gmane.org>

Hi all,

I have a rule like the following:

binary returns [Formula result]
	: IMPLICATION WHITESPACE first=formula WHITESPACE second=formula {
$result = new Implication($first, $second); }
	| EQUIVALENCE WHITESPACE first=formula WHITESPACE second=formula {
$result = new Equivalence($first, $second); }
	;

and I would like to do something similar for n-ary junctors, that is
junctors that can take an arbitrary number of arguments.

The bare rule would be:
/**
 * Conjunction or disjunction.
 */
n_ary returns [Formula result]
	: CONJUNCTION ( WHITESPACE formula )+
	| DISJUNCTION ( WHITESPACE formula )+
	;

And for CONJUNCTION I would like new Conjunction(Formula... args) to be
invoked with the formulas found (ignoring whitespace).  Similar for new
Disjunction(Formula... args).  As you might guess

formula  returns [Formula result] ?

is the starting rule.

Can I simply do { $result = new Equivalence($formula); } or something?

Thanks, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/2ec4df08/attachment.bin 

From yuri at tijerino.net  Wed Nov 12 09:29:02 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Thu, 13 Nov 2008 02:29:02 +0900
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491A70DB.6070805@tijerino.net> 
References: <491A70DB.6070805@tijerino.net> 
Message-ID: <491B125E.5040608@tijerino.net>

Well, suppose it does.  It is just an example for my question. Or if 
your prefer you can change this definition to:

HOURNUM : '0'..'9' | '1' '0'..'2' ;

I remember something in one of Terrence's blog a while back where he 
used something like:

decl (';' decl)*

in the main rule instead of

decl+

together with a catch statement for  NoViableAltException.  But I think 
I had to declare an ListArray with all the possible stop tokens.  
However this didn't work in my case becase I don't have anything that 
corresponds to a  ';' in between statements.

What I really want is change the default behavior and throw away the 
tokens that cause the exception and continue parsing the input after 
those tokens as if it was a new input.  Is this even possible? Terrence?

Yuri Tijerino

Gavin Lambert wrote:
> At 18:59 12/11/2008, Yuri Tijerino wrote:
> >HOURNUM
> >  :
> >    '0'..'12'
> >  ;
>
> That doesn't mean what you seem to think it means.  In fact I'm not 
> convinced it means anything sensible at all :)
>
>

From sharwell at pixelminegames.com  Wed Nov 12 09:43:55 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 11:43:55 -0600
Subject: [antlr-interest] Failing on case test: how?
In-Reply-To: <gff2aq$2kq$1@ger.gmane.org>
References: <gff2aq$2kq$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E833@Bloodymary.ironwillgames.com>

Can you make a rule like:

variable returns [Variable result]
  : IDENTIFIER { $result = getVariable($IDENTIFIER.text); }
  ;

Where the check is done in the indicated function? If there are cases where only one or the other is allowed, you can also do that semantic analysis at another point. The advantage here is you can have a more "lenient" parser that's able to provide better error messages once you start working on that.

The other option with *gated* semantic predicates is (I don't do Java so the code is a best guess on what it might be in Java):

firstOrderVariable returns [FirstOrderVariable result]
	: {Character.isLowerCase( input.LA(1).getText().charAt(0) )} =>
        IDENTIFIER { $result = getFirstOrderVariable($IDENTIFIER.text); }
	;

secondOrderVariable returns [SecondOrderVariable result]
	: {Character.isUpperCase( input.LA(1).getText().charAt(0) )} =>
        IDENTIFIER { $result = getSecondOrderVariable($IDENTIFIER.text); }
	;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hendrik Maryns
Sent: Wednesday, November 12, 2008 11:04 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Failing on case test: how?

Hi,

I have two rules as follows:

firstOrderVariable returns [FirstOrderVariable result]
	: IDENTIFIER { $result = getFirstOrderVariable($IDENTIFIER.text); }
	;

secondOrderVariable returns [SecondOrderVariable result]
	: IDENTIFIER { $result = getSecondOrderVariable($IDENTIFIER.text); }
	;

with

IDENTIFIER
  : ( ~( CLOSE | OPEN | WS ) )+
  ;

OPEN : '(' ;
CLOSE : ')' ;
fragment WS : ( ' ' | '\t' ) ;

Most of the times, it is no problem they are identical, since the rest of the surrounding rule will do the disambiguation.  Unfortunately, in some cases, it won?t.  I would like to separate them in that first-order variables should start with a lowercase letter, but second-order variables with an uppercase letter.  So I?d like to insert some semantic predicate which checks the case of the first letter and fails as appropriate.  Is this possible, and if yes, how?

If it isn?t I can make sure the surrounding rules do the disambiguation, but this solution would be nicer.

Originally, I had a lexer rule FIRST_ORDER_VARIABLE: LOWER ( LOWER | UPPER )* and similar for SECOND_ORDER_VARIABLE, but that didn?t work properly since that way it was not possible to match other kind of stuff with the IDENTIFIER rule.  (It would have been lexed as FOV, but an ID was expected, so the lexer would barf.  It might be that I interpret the problem incorrectly, but at least now it works.)  Also just allowing letters is too simple, I want to allow (almost) every possible Unicode token.

TIA, H.
--
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html


From yuri at tijerino.net  Wed Nov 12 09:49:11 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Thu, 13 Nov 2008 02:49:11 +0900
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491B125E.5040608@tijerino.net>
References: <491A70DB.6070805@tijerino.net> <491B125E.5040608@tijerino.net>
Message-ID: <491B1717.4060707@tijerino.net>


> What I really want is change the default behavior and throw away the 
> tokens that cause the exception and continue parsing the input after 
> those tokens as if it was a new input.  Is this even possible? Terrence?
>
Isn't this in a way what the Lexer does when trying to find tokens based 
on EBNF rules?  How do I duplicate that behavior in the parser rules so 
that it won't stop trying to match the rest of the input when a rule 
partially matches something and it can't recover automagically?

Yuri Tijerino

From antlr at mirality.co.nz  Wed Nov 12 10:07:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 13 Nov 2008 07:07:37 +1300
Subject: [antlr-interest] How to get value of next token match - regd.
In-Reply-To: <491ABE1F.20709@gmail.com>
References: <491AB62D.8030507@gmail.com>
	<491abc74.050bca0a.3cd3.282eSMTPIN_ADDED@mx.google.com>
	<491ABE1F.20709@gmail.com>
Message-ID: <20081112181227.B92B011EDDD@www.antlr.org>

At 00:29 13/11/2008, Ashok Varikuti wrote:
 >> You mean like $start.nodeID?  Or something else?
[...]
 >$start.nodeID doesn't work since start is of type
 >integer.

Oh, right, because "start" is a reserved name.  Just use a 
different label then.


From antlr at mirality.co.nz  Wed Nov 12 10:19:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 13 Nov 2008 07:19:04 +1300
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491B1717.4060707@tijerino.net>
References: <491A70DB.6070805@tijerino.net> <491B125E.5040608@tijerino.net>
	<491B1717.4060707@tijerino.net>
Message-ID: <20081112182007.4960F11EDEA@www.antlr.org>

At 06:49 13/11/2008, Yuri Tijerino wrote:
 >> What I really want is change the default behavior and throw
 >> away the tokens that cause the exception and continue
 >> parsing the input after those tokens as if it was a new
 >> input.  Is this even possible?
[...]
 >Isn't this in a way what the Lexer does when trying to find
 >tokens based on EBNF rules?  How do I duplicate that behavior
 >in the parser rules so that it won't stop trying to match the
 >rest of the input when a rule partially matches something and
 >it can't recover automagically?

You could try turning backtracking on, and have as your final alt 
something that consumes a single token and then tries the standard 
recognition again.  Something like this:

start
   :  ( somethingvalid |  somethingelse | . )* EOF
   ;


From sharwell at pixelminegames.com  Wed Nov 12 10:27:19 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 12:27:19 -0600
Subject: [antlr-interest] Parsing a file
In-Reply-To: <20081112182007.4960F11EDEA@www.antlr.org>
References: <491A70DB.6070805@tijerino.net>
	<491B125E.5040608@tijerino.net><491B1717.4060707@tijerino.net>
	<20081112182007.4960F11EDEA@www.antlr.org>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E836@Bloodymary.ironwillgames.com>

You can also implement your own recovery mechanism by overriding
recover, recoverFromMismatchedSet, recoverFromMismatchedToken and/or the
functions the base versions call. For a C/C++-style language, I suppose
one might try to recover by skipping to a } or a ;. I haven't
implemented the best error handling in my primary grammar yet; after I
have I'll probably have more information about the results.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Wednesday, November 12, 2008 12:19 PM
To: Yuri Tijerino; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Parsing a file

At 06:49 13/11/2008, Yuri Tijerino wrote:
 >> What I really want is change the default behavior and throw
 >> away the tokens that cause the exception and continue
 >> parsing the input after those tokens as if it was a new
 >> input.  Is this even possible?
[...]
 >Isn't this in a way what the Lexer does when trying to find
 >tokens based on EBNF rules?  How do I duplicate that behavior
 >in the parser rules so that it won't stop trying to match the
 >rest of the input when a rule partially matches something and
 >it can't recover automagically?

You could try turning backtracking on, and have as your final alt 
something that consumes a single token and then tries the standard 
recognition again.  Something like this:

start
   :  ( somethingvalid |  somethingelse | . )* EOF
   ;


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From darnellm at bit-sys.com  Wed Nov 12 10:41:06 2008
From: darnellm at bit-sys.com (Mark Darnell)
Date: Wed, 12 Nov 2008 13:41:06 -0500
Subject: [antlr-interest] (no subject)
Message-ID: <2F9D6BF544641142ACC04AB22063E95204F5A7@suhn-mailbox1.BITS.local>

I have a requirement to parse a text report in the following format:

SUBJ:  <<report subject>>
A. <<report_type>>/YY/NNNNN/NNNN
B. YYMMDD/HHMM:SS
C. <<field1>>/<<field2>>
D. <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>
   <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>
 <<some text would go here>>
E. <<some text would go here>>

I was wondering if ANTLR would be a help in parsing this type of text
file. I need to get the items marked as fields into an XML file that is
later parsed by another system.

If ANTLR is a good fit, could you point me to some examples of writing a
grammar for text file parsing?

Mark Darnell
BIT Systems, Inc.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/dd362831/attachment.html 

From darnellm at bit-sys.com  Wed Nov 12 10:43:56 2008
From: darnellm at bit-sys.com (Mark Darnell)
Date: Wed, 12 Nov 2008 13:43:56 -0500
Subject: [antlr-interest] Will ANTLR Help Parse a Text Report?
In-Reply-To: <2F9D6BF544641142ACC04AB22063E95204F5A7@suhn-mailbox1.BITS.local>
References: <2F9D6BF544641142ACC04AB22063E95204F5A7@suhn-mailbox1.BITS.local>
Message-ID: <2F9D6BF544641142ACC04AB22063E95204F5A8@suhn-mailbox1.BITS.local>

I have a requirement to parse a text report in the following format:

SUBJ:  <<report subject>>
A. <<report_type>>/YY/NNNNN/NNNN
B. YYMMDD/HHMM:SS
C. <<field1>>/<<field2>>
D. <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>
   <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>
 <<some text would go here>>
E. <<some text would go here>>

I was wondering if ANTLR would be a help in parsing this type of text
file. I need to get the items marked as fields into an XML file that is
later parsed by another system.

If ANTLR is a good fit, could you point me to some examples of writing a
grammar for text file parsing?

Mark Darnell
BIT Systems, Inc.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/d99f915b/attachment.html 

From sharwell at pixelminegames.com  Wed Nov 12 10:49:51 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 12:49:51 -0600
Subject: [antlr-interest] (no subject)
In-Reply-To: <2F9D6BF544641142ACC04AB22063E95204F5A7@suhn-mailbox1.BITS.local>
References: <2F9D6BF544641142ACC04AB22063E95204F5A7@suhn-mailbox1.BITS.local>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E837@Bloodymary.ironwillgames.com>

ANTLR would work since the format is well-defined, but based on what
you've said about the format it may be massive overkill if the target
language has good regex & string operations support. On the other hand,
a simple format like this would be a great learning opportunity, so I
say go for it. J

 

There are many examples on the ANTLR site:

http://www.antlr.org/grammar/list

 

You might start with this one. It's another line-based simple text
format:

http://www.antlr.org/grammar/1205078833386/StackTraceText.g

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Darnell
Sent: Wednesday, November 12, 2008 12:41 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] (no subject)

 

I have a requirement to parse a text report in the following format:

SUBJ:  <<report subject>>

A. <<report_type>>/YY/NNNNN/NNNN

B. YYMMDD/HHMM:SS

C. <<field1>>/<<field2>>

D. <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>

   <<line#>>/<<field3>>/<<field4>>/<<field5>>/<<field6>>

 <<some text would go here>>

E. <<some text would go here>>

I was wondering if ANTLR would be a help in parsing this type of text
file. I need to get the items marked as fields into an XML file that is
later parsed by another system.

If ANTLR is a good fit, could you point me to some examples of writing a
grammar for text file parsing?

Mark Darnell

BIT Systems, Inc.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/0780da12/attachment.html 

From yuri at tijerino.net  Wed Nov 12 10:56:07 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Thu, 13 Nov 2008 03:56:07 +0900
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491B1717.4060707@tijerino.net> 
References: <491A70DB.6070805@tijerino.net> <491B125E.5040608@tijerino.net>
	<491B1717.4060707@tijerino.net> 
Message-ID: <491B26C7.5070604@tijerino.net>

Thanks Gavin,

Unfortunately my grammar is about 6500 lines long and already takes 
about 1 minute to generate the lexer and parser with backtracking turned 
on.  So as soon as I add the wildcard to the main loop, I get all kinds 
of  "createLookaheadDFA(Unknown Source): could not even do K=1 for 
decision..." errors during generation.

Yuri

Gavin Lambert wrote:
> At 06:49 13/11/2008, Yuri Tijerino wrote:
> >> What I really want is change the default behavior and throw
> >> away the tokens that cause the exception and continue
> >> parsing the input after those tokens as if it was a new
> >> input.  Is this even possible?
> [...]
> >Isn't this in a way what the Lexer does when trying to find
> >tokens based on EBNF rules?  How do I duplicate that behavior
> >in the parser rules so that it won't stop trying to match the
> >rest of the input when a rule partially matches something and
> >it can't recover automagically?
>
> You could try turning backtracking on, and have as your final alt 
> something that consumes a single token and then tries the standard 
> recognition again.  Something like this:
>
> start
>   :  ( somethingvalid |  somethingelse | . )* EOF
>   ;
>
>

From yuri at tijerino.net  Wed Nov 12 10:59:19 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Thu, 13 Nov 2008 03:59:19 +0900
Subject: [antlr-interest] Parsing a file
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E836@Bloodymary.ironwillgames.com>
References: <491A70DB.6070805@tijerino.net>
	<491B125E.5040608@tijerino.net><491B1717.4060707@tijerino.net>
	<20081112182007.4960F11EDEA@www.antlr.org>
	<86403CA0939415448BCCB83855EFE09A64E836@Bloodymary.ironwillgames.com>
Message-ID: <491B2787.70601@tijerino.net>

Thank you Sam,

This sounds like what I am looking for.  However, I am having hard-time 
understanding how those functions work.  I have looked at the API, but 
would appreciate an example of how to modify those.  Let me know if you 
come across any examples.

Yuri

Sam Harwell wrote:
> You can also implement your own recovery mechanism by overriding
> recover, recoverFromMismatchedSet, recoverFromMismatchedToken and/or the
> functions the base versions call. For a C/C++-style language, I suppose
> one might try to recover by skipping to a } or a ;. I haven't
> implemented the best error handling in my primary grammar yet; after I
> have I'll probably have more information about the results.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Wednesday, November 12, 2008 12:19 PM
> To: Yuri Tijerino; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Parsing a file
>
> At 06:49 13/11/2008, Yuri Tijerino wrote:
>  >> What I really want is change the default behavior and throw
>  >> away the tokens that cause the exception and continue
>  >> parsing the input after those tokens as if it was a new
>  >> input.  Is this even possible?
> [...]
>  >Isn't this in a way what the Lexer does when trying to find
>  >tokens based on EBNF rules?  How do I duplicate that behavior
>  >in the parser rules so that it won't stop trying to match the
>  >rest of the input when a rule partially matches something and
>  >it can't recover automagically?
>
> You could try turning backtracking on, and have as your final alt 
> something that consumes a single token and then tries the standard 
> recognition again.  Something like this:
>
> start
>    :  ( somethingvalid |  somethingelse | . )* EOF
>    ;
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> ess
>
>
>   

From sharwell at pixelminegames.com  Wed Nov 12 11:25:54 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 13:25:54 -0600
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491B26C7.5070604@tijerino.net>
References: <491A70DB.6070805@tijerino.net>
	<491B125E.5040608@tijerino.net><491B1717.4060707@tijerino.net>
	<491B26C7.5070604@tijerino.net>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E83C@Bloodymary.ironwillgames.com>

If you send me your grammar (directly to just me if you don't want it to
go to the list), I can probably (highly likely) let you know how to
significantly reduce the generation time. I'd only use it for profiling
the code generation process to improve this situation for future users
of the Antlr tool.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Yuri Tijerino
Sent: Wednesday, November 12, 2008 12:56 PM
To: Gavin Lambert
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Parsing a file

Thanks Gavin,

Unfortunately my grammar is about 6500 lines long and already takes 
about 1 minute to generate the lexer and parser with backtracking turned

on.  So as soon as I add the wildcard to the main loop, I get all kinds 
of  "createLookaheadDFA(Unknown Source): could not even do K=1 for 
decision..." errors during generation.

Yuri

Gavin Lambert wrote:
> At 06:49 13/11/2008, Yuri Tijerino wrote:
> >> What I really want is change the default behavior and throw
> >> away the tokens that cause the exception and continue
> >> parsing the input after those tokens as if it was a new
> >> input.  Is this even possible?
> [...]
> >Isn't this in a way what the Lexer does when trying to find
> >tokens based on EBNF rules?  How do I duplicate that behavior
> >in the parser rules so that it won't stop trying to match the
> >rest of the input when a rule partially matches something and
> >it can't recover automagically?
>
> You could try turning backtracking on, and have as your final alt 
> something that consumes a single token and then tries the standard 
> recognition again.  Something like this:
>
> start
>   :  ( somethingvalid |  somethingelse | . )* EOF
>   ;
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From jimi at temporal-wave.com  Wed Nov 12 11:52:56 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Nov 2008 11:52:56 -0800
Subject: [antlr-interest] Parsing a file
In-Reply-To: <491B2787.70601@tijerino.net>
References: <491A70DB.6070805@tijerino.net> <491B125E.5040608@tijerino.net>
	<491B1717.4060707@tijerino.net>
	<20081112182007.4960F11EDEA@www.antlr.org>
	<86403CA0939415448BCCB83855EFE09A64E836@Bloodymary.ironwillgames.com>
	<491B2787.70601@tijerino.net>
Message-ID: <1226519576.25720.167.camel@server.temporal-wave.com>

On Thu, 2008-11-13 at 03:59 +0900, Yuri Tijerino wrote:
> Thank you Sam,
> 
> This sounds like what I am looking for.  However, I am having hard-time 
> understanding how those functions work.  I have looked at the API, but 
> would appreciate an example of how to modify those.  Let me know if you 
> come across any examples.

You could download thew source code for the Open JavaFX compiler. IN
there I use two techniques for error recovery so that for instance
parsing members of class definitions does not cause an exit of the
entire class parsing rules, but just consumes tokens until it finds a
member of first() of a class member declaration.

This probably does everything you want and is properly documented with
comments.

Jim

> 
> Yuri
> 
> Sam Harwell wrote:
> > You can also implement your own recovery mechanism by overriding
> > recover, recoverFromMismatchedSet, recoverFromMismatchedToken and/or the
> > functions the base versions call. For a C/C++-style language, I suppose
> > one might try to recover by skipping to a } or a ;. I haven't
> > implemented the best error handling in my primary grammar yet; after I
> > have I'll probably have more information about the results.
> >
> > Sam
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
> > Sent: Wednesday, November 12, 2008 12:19 PM
> > To: Yuri Tijerino; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Parsing a file
> >
> > At 06:49 13/11/2008, Yuri Tijerino wrote:
> >  >> What I really want is change the default behavior and throw
> >  >> away the tokens that cause the exception and continue
> >  >> parsing the input after those tokens as if it was a new
> >  >> input.  Is this even possible?
> > [...]
> >  >Isn't this in a way what the Lexer does when trying to find
> >  >tokens based on EBNF rules?  How do I duplicate that behavior
> >  >in the parser rules so that it won't stop trying to match the
> >  >rest of the input when a rule partially matches something and
> >  >it can't recover automagically?
> >
> > You could try turning backtracking on, and have as your final alt 
> > something that consumes a single token and then tries the standard 
> > recognition again.  Something like this:
> >
> > start
> >    :  ( somethingvalid |  somethingelse | . )* EOF
> >    ;
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> > ess
> >
> >
> >   
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jaluber at gmx.de  Wed Nov 12 13:37:53 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 12 Nov 2008 22:37:53 +0100
Subject: [antlr-interest] Don't want to pervert reference grammar like
 Terence Parr one on Java 1.5
In-Reply-To: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>
References: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>
Message-ID: <491B4CB1.1060200@gmx.de>

Freddy Mallet schrieb:
> Hi all,
> 
> I'd like to create my own Open Source library to calculate metrics on
> java and pl/sql source code. Those metrics could be lines of code,
> cyclomatic complexity, maintainability index (SEI), etc. I've studied
> javacc and antlr, then read the definitive ANTLR Reference.
> 
> At that point, I guess I've enough material to begin writing this
> library but ... there is a recurring question I can't evacuate from my
> brain.
> 
> Here is my issue : on the shelf, there is already two reference grammars
> available to parse java and pl/sql. Of course, those two reference
> grammars will evolve in time to follow java and pl/sql evolutions.
> 
> Tomorrow, beginning to touch those two grammars to build my own AST or
> to add my own actions on rules is equivalent to create a new branch on a
> source code. After few months, the differences between the grammars will
> be so important that I couldn't synchronize them. So after a while, I
> couldn't capitalize on ANTLR community work.
> 
> That's exactly what happens currently to JavaNCSS library. The library
> used javacc and all work has been done from a Java 1.1 grammar which has
> now great difficulty to evolve.
> 
> So, is there an abstraction mechanism which allow us to use on the shelf
> grammars without modifying them directly ?
> 
> Thanks for your help,
> 
> Freddy

AFAIK, there is a whitepaper on a tool named gdiff, which would be a
specialized diff for grammars. It would ignore actions and focus only on
the grammar structure. But I don't know how far the implementation has
been realized.

Johannes

> 
> 
> -- 
> Freddy Mallet,
> Sonar , Embrace Quality
> http://sonar.codehaus.org
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From yang.jiang.z at gmail.com  Wed Nov 12 14:22:07 2008
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Wed, 12 Nov 2008 14:22:07 -0800
Subject: [antlr-interest] Don't want to pervert reference grammar like
 Terence Parr one on Java 1.5
In-Reply-To: <491B4CB1.1060200@gmx.de>
References: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>
	<491B4CB1.1060200@gmx.de>
Message-ID: <491B570F.2060606@gmail.com>

Another way I can think of is to automatically generate a grammar (from 
the java or sql grammar) which builds a general
data structure, like a tree, then you can do your work on top of that 
and not worrying about the original grammar getting changed.

Then the problems left here is whether or not the metrics you want to 
calculate can be general enough to auto-generate :)
I once wrote such a grammar based on the ANTLRv3 grammar 
(http://www.antlr.org/grammar/ANTLR/ANTLRv3.g) and using rewrite stream,
which converts a java grammar to generate parsing trees. It worked quite 
well.

Cheers,
Yang





Johannes Luber wrote:
> Freddy Mallet schrieb:
>   
>> Hi all,
>>
>> I'd like to create my own Open Source library to calculate metrics on
>> java and pl/sql source code. Those metrics could be lines of code,
>> cyclomatic complexity, maintainability index (SEI), etc. I've studied
>> javacc and antlr, then read the definitive ANTLR Reference.
>>
>> At that point, I guess I've enough material to begin writing this
>> library but ... there is a recurring question I can't evacuate from my
>> brain.
>>
>> Here is my issue : on the shelf, there is already two reference grammars
>> available to parse java and pl/sql. Of course, those two reference
>> grammars will evolve in time to follow java and pl/sql evolutions.
>>
>> Tomorrow, beginning to touch those two grammars to build my own AST or
>> to add my own actions on rules is equivalent to create a new branch on a
>> source code. After few months, the differences between the grammars will
>> be so important that I couldn't synchronize them. So after a while, I
>> couldn't capitalize on ANTLR community work.
>>
>> That's exactly what happens currently to JavaNCSS library. The library
>> used javacc and all work has been done from a Java 1.1 grammar which has
>> now great difficulty to evolve.
>>
>> So, is there an abstraction mechanism which allow us to use on the shelf
>> grammars without modifying them directly ?
>>
>> Thanks for your help,
>>
>> Freddy
>>     
>
> AFAIK, there is a whitepaper on a tool named gdiff, which would be a
> specialized diff for grammars. It would ignore actions and focus only on
> the grammar structure. But I don't know how far the implementation has
> been realized.
>
> Johannes
>
>   
>> -- 
>> Freddy Mallet,
>> Sonar , Embrace Quality
>> http://sonar.codehaus.org
>>
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From juvvij at gmail.com  Wed Nov 12 19:57:02 2008
From: juvvij at gmail.com (Vamsi Juvvi)
Date: Wed, 12 Nov 2008 19:57:02 -0800
Subject: [antlr-interest] C runtime,
	VS2005 barfs at generated Initializers for double!!
Message-ID: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>

Hi list/the-not-so-idle-idle:

   While preparing a small antlr presentation for my colleagues I managed to
generate code that VS 2005 simply refuses to compile.

   in my tree parser for a simple calculator example. I have

atom returns [double val]
    : (
            a=DECIMAL_LITERAL
        | a=HEX_LITERAL
        | a=OCTAL_LITERAL
       )
       { val = parseInt($a.text);}

    | a=FLOATING_POINT_LITERAL
      {val = parseDouble($a.text);}
    ;

The generated code for the atom method does this to initialize val

double val = 0.0D;

It does not compile unless I remove the D suffix on the 0.0. 0.0D is not a
legal double literal for Visual studio C/C++. Is there any way I can turn
this automatic initialization off ? Or is this a bug that'll need to be
fixed in the C templates ? I can workaround this using a struct to wrap my
double but that would be perverse.

thanks much for reading.

-vamsi

-- 
Between impulse and reaction lies man's greatest strength: The freedom to
create a choice, to create his universe, to choose - Victor Frankl (adapted)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/f60e3039/attachment.html 

From sharwell at pixelminegames.com  Wed Nov 12 20:07:38 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Nov 2008 22:07:38 -0600
Subject: [antlr-interest] C runtime,
	VS2005 barfs at generated Initializers for double!!
In-Reply-To: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
References: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E84E@Bloodymary.ironwillgames.com>

You need to alter the template file C.stg and rebuild the ANTLR tool. In
the cTypeInitMap at the top, change 0.0D to 0.0.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Vamsi Juvvi
Sent: Wednesday, November 12, 2008 9:57 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C runtime,VS2005 barfs at generated
Initializers for double!!

 

Hi list/the-not-so-idle-idle:

   While preparing a small antlr presentation for my colleagues I
managed to generate code that VS 2005 simply refuses to compile.

   in my tree parser for a simple calculator example. I have

atom returns [double val]
    : (
            a=DECIMAL_LITERAL        
        | a=HEX_LITERAL
        | a=OCTAL_LITERAL
       )
       { val = parseInt($a.text);}
       
    | a=FLOATING_POINT_LITERAL 
      {val = parseDouble($a.text);}
    ;

The generated code for the atom method does this to initialize val

double val = 0.0D;

It does not compile unless I remove the D suffix on the 0.0. 0.0D is not
a legal double literal for Visual studio C/C++. Is there any way I can
turn this automatic initialization off ? Or is this a bug that'll need
to be fixed in the C templates ? I can workaround this using a struct to
wrap my double but that would be perverse.

thanks much for reading.

-vamsi

-- 
Between impulse and reaction lies man's greatest strength: The freedom
to create a choice, to create his universe, to choose - Victor Frankl
(adapted)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081112/7e94eaae/attachment.html 

From andreas.weigel at tu-harburg.de  Thu Nov 13 01:25:36 2008
From: andreas.weigel at tu-harburg.de (Andreas Weigel)
Date: Thu, 13 Nov 2008 10:25:36 +0100
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
 production appears to affect "accept/reject" of parser for	fixed input.
In-Reply-To: <1226510342.4885.712.camel@server.temporal-wave.com>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>	
	<200811111759.50452.jbb@acm.org>	
	<38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>	
	<491AC81A.2090006@tu-harburg.de>
	<1226510342.4885.712.camel@server.temporal-wave.com>
Message-ID: <491BF290.6060206@tu-harburg.de>

Hi again,

thanks for your elaborate reply. I'm not very long into languages, 
grammars etc. and you surely made me more aware of the fact that having 
to use backtracking is something one should definitely avoid (and some 
other considerations when working with parser generators). Still, here 
is an example grammar which does reproduce the issue Dejas came up with 
originally. I'm aware that it is a very ugly grammar and that the issue 
disappears as soon as you "leftfactor" id and opAppl into one rule, but 
again - backtracking turned on - the parser /should/ be able to match a 
valid input correctly imho, which it does not:

grammar parserambiguity;
 options{backtrack=true; memoize=true;}

model:
    def* EOF;

def:
    ID '==' expr;

prefix:
    (
        ID ('(' expr (',' expr)* ')')? '!'
    )+
;

id:
    (prefix)? ID;

opAppl:   
    id
    ('(' expr (',' expr)* ')');

expr:
    id | opAppl;


ID :
     ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
     
;

WS :
     (' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;}
;

I used the following input:
Foo == Bar(bleh)
Alice == Bob

This in my understanding is a valid input of two 'def's which can be 
derived by the following:
model -> def def
-> id == expr def
-> id == opAppl def
-> id == id(expr) def
-> id == id(id) def
-> id == id(id) id == expr
-> id == id(id) id == id

Debugging this with Antlrworks 1.2.1 and watching the parse tree the 
parser first tries to match the first expr to an id with prefix (not 
very surprising) which is deemed to fail as the "!" is missing. Then it 
backtracks and matches a single id. But instead of realizing that this 
too, is a wrong decision it just exits the rules down the stack (or is 
it "up" the stack? I'm no native speaker...) and instead of trying to 
jump into oppAppl (which i would expect due to backtrack=true) it simply 
sees the invalid "(" token and throws an MissingTokenException(at ( ).

Changing the order of the alternatives in expr to expr: opAppl | id the 
same example will parse to the end without any problems, also 
backtracking out of opAppl and recognize the lonely id token in the 
second def (Alice == Bob). To my understanding this isn't the behaviour 
one could expect, although I might have overlooked something (did I 
mention that I'm not into grammars and languages for long? ;-)

Hope this is enough of a small example to reproduce the "bug" and if 
not, that someone may point out the mistake in my reasoning.

Andreas


From dejas9000 at gmail.com  Thu Nov 13 08:53:57 2008
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 13 Nov 2008 10:53:57 -0600
Subject: [antlr-interest] Listing order of NT alternatives on rhs of
	production appears to affect "accept/reject" of parser for
	fixed input.
In-Reply-To: <491BF290.6060206@tu-harburg.de>
References: <38a26f430811111248w7abce652m2f25657d3a9ef03e@mail.gmail.com>
	<200811111759.50452.jbb@acm.org>
	<38a26f430811111553j5ed2d908maa6245c30b7e3b94@mail.gmail.com>
	<491AC81A.2090006@tu-harburg.de>
	<1226510342.4885.712.camel@server.temporal-wave.com>
	<491BF290.6060206@tu-harburg.de>
Message-ID: <38a26f430811130853i71a70d52wdb4e957c0cb87092@mail.gmail.com>

Thank you everyone for the response.  Please let me clarify one issue based
on poor word choice on my part.  I wrote:

I believe I have found a peculiar issue in ANTLR.  If memory serves, the
order of alternatives in a grammar should have no effect on the set of
inputs it accepts.  For example I believe:

program : statement_list | expression

is equivalent to:

program : expression | statement_list

I concede that these are not "equivalent" because, as many of you pointed
out, the specific syntax tree generated for some input program can be
different based on ordering of the non terminals.  I completely agree.  What
I meant to say was that changing the ordering of the non terminals should
not affect whether a specific input program to the parser is accepted or
rejected as a whole, irrespective of what the produced syntax tree is.  This
is the issue I am experiencing.  In one ordering of the non terminals in my
grammar the parser accepts my input "DOG CAT x ZEBRA x > x" and in another
ordering the parser throws a RecognitionException.  As a summary of the
issue here is the input, the reordered terminals, and the whole grammar:

Input:

DOG CAT x ZEBRA x > x

Varations of the Grammar:

a : b | c  vs. a : c | b ;

Whole Grammar:

program    : a EOF ;

a : b | c ; // swap b and c to change parser behavior

b : f |    d ;

c : e ;

d : D_NAME idl=f? D_TARGET a (resOp=RES res=a)? -> D_NAME $idl? D_TARGET a
$resOp? $res?;

e : b RCHEVRON b;

f : VERBATUM_IDENTIFIER;

D_NAME
    :    'DOG';

D_TARGET
    :    'CAT';

RES
    :    'ZEBRA';

RCHEVRON
    :    '>';

VERBATUM_IDENTIFIER
    : ('a'..'z'|'A'..'Z')(('a'..'z'|'A'..'Z')|('_')|('0'..'9'))*
    ;

WHITESPACE
    : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { $channel = HIDDEN; } ;


On Thu, Nov 13, 2008 at 3:25 AM, Andreas Weigel <
andreas.weigel at tu-harburg.de> wrote:

> Hi again,
>
> thanks for your elaborate reply. I'm not very long into languages,
> grammars etc. and you surely made me more aware of the fact that having
> to use backtracking is something one should definitely avoid (and some
> other considerations when working with parser generators). Still, here
> is an example grammar which does reproduce the issue Dejas came up with
> originally. I'm aware that it is a very ugly grammar and that the issue
> disappears as soon as you "leftfactor" id and opAppl into one rule, but
> again - backtracking turned on - the parser /should/ be able to match a
> valid input correctly imho, which it does not:
>
> grammar parserambiguity;
>  options{backtrack=true; memoize=true;}
>
> model:
>    def* EOF;
>
> def:
>    ID '==' expr;
>
> prefix:
>    (
>        ID ('(' expr (',' expr)* ')')? '!'
>    )+
> ;
>
> id:
>    (prefix)? ID;
>
> opAppl:
>    id
>    ('(' expr (',' expr)* ')');
>
> expr:
>    id | opAppl;
>
>
> ID :
>     ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>
> ;
>
> WS :
>     (' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;}
> ;
>
> I used the following input:
> Foo == Bar(bleh)
> Alice == Bob
>
> This in my understanding is a valid input of two 'def's which can be
> derived by the following:
> model -> def def
> -> id == expr def
> -> id == opAppl def
> -> id == id(expr) def
> -> id == id(id) def
> -> id == id(id) id == expr
> -> id == id(id) id == id
>
> Debugging this with Antlrworks 1.2.1 and watching the parse tree the
> parser first tries to match the first expr to an id with prefix (not
> very surprising) which is deemed to fail as the "!" is missing. Then it
> backtracks and matches a single id. But instead of realizing that this
> too, is a wrong decision it just exits the rules down the stack (or is
> it "up" the stack? I'm no native speaker...) and instead of trying to
> jump into oppAppl (which i would expect due to backtrack=true) it simply
> sees the invalid "(" token and throws an MissingTokenException(at ( ).
>
> Changing the order of the alternatives in expr to expr: opAppl | id the
> same example will parse to the end without any problems, also
> backtracking out of opAppl and recognize the lonely id token in the
> second def (Alice == Bob). To my understanding this isn't the behaviour
> one could expect, although I might have overlooked something (did I
> mention that I'm not into grammars and languages for long? ;-)
>
> Hope this is enough of a small example to reproduce the "bug" and if
> not, that someone may point out the mistake in my reasoning.
>
> Andreas
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081113/6ea9e511/attachment.html 

From cocoa at gmx.ch  Thu Nov 13 10:12:05 2008
From: cocoa at gmx.ch (Simon)
Date: Thu, 13 Nov 2008 19:12:05 +0100
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
Message-ID: <C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>

Why do they not use the tree construction mechanisms available in  
Antlr? As far as I can tell, they build the tree by using custom  
actions. The link to the full grammar is shown below:

http://hg.openjdk.java.net/compiler-grammar/compiler-grammar/langtools/file/e37d7d5df672/src/share/classes/com/sun/tools/javac/antlr/Java.g

When would you choose not to use the tree construction mechanisms?

Simon

On Nov 10, 2008, at 21:45 , Terence Parr wrote:

> http://openjdk.java.net/projects/compiler-grammar/
>
> Direct link to the grammar:
>
> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g
>
> USF MSCS student Yang Jiang built this as an intern for Sun.
>
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From amartinez at atc.ugr.es  Thu Nov 13 10:22:58 2008
From: amartinez at atc.ugr.es (amartinez at atc.ugr.es)
Date: Thu, 13 Nov 2008 19:22:58 +0100 (CET)
Subject: [antlr-interest] Simple grammar doesn't complain about illegal input
Message-ID: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>

Hi all,
I'm having problems in grammars that do not complain about illegal input
(throwing a recognition exception).
I want to parse a very little/restricted assembly language source, in the
attached example only the 'add' instruction is processed for now.

The grammar should process this input:
add r1, 23
add r4, r5

Everything seams to work fine, but if I try this source:
add  r1, 23
addj r4,56

the parser does not say anything about the inappropriate 'addj' (which is
not a legal assembly token). I have even create an AST from the original
grammar, have debugged it on AntlrWorks, and have seen that this environment
also does not complain on this input.

Where is the mistake?

Thank in advance, best regards

Attached is an example of a grammar that reproduces my error:

grammar T;
tokens {ADD;}
prog                    :       (add NEWLINE)+ ;
add                     :       TOKEN_ADD renreg ',' renreg ;
renreg          :       RX | UINT8 | ID ;

RX                      :       ('r'|'R') HEXDIGIT;
TOKEN_NAMEREG   :       ('namereg' | 'Namereg' | 'NAMEREG');
TOKEN_CONST             :       ('const' | 'Const' | 'CONST');
TOKEN_ADD               :       'add' ;

ID                      :       ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ;
UINT8                   :       HEXDIGIT? HEXDIGIT;
fragment
HEXDIGIT                :       ('0'..'9'|'a'..'f'|'A'..'F');
NEWLINE                 :       {getCharPositionInLine() > 0}?  => ('\r'?
'\n')+ ;
NEWLINE_AT_COLUM_ZERO   :       {getCharPositionInLine() == 0}? => ('\r'?
'\n')+ { $channel=HIDDEN; } ;
WS                      :       (' '|'\t') { $channel=HIDDEN; };
LINE_COMMENT    :       (';'|'//') (~'\n')* { $channel=HIDDEN; } ;

// Java code:
import java.io.*;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;


public class Main {

    public static void main(String args[]) throws Exception {

     CharStream input = new ANTLRFileStream(args[0]);
     TLexer lex = new TLexer(input);
     CommonTokenStream tokens = new CommonTokenStream(lex);
     TParser g = new TParser(tokens);
      g.prog ();
   }
}

From yang.jiang.z at gmail.com  Thu Nov 13 10:23:59 2008
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Thu, 13 Nov 2008 10:23:59 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
Message-ID: <491C70BF.1020801@gmail.com>

That is because we are talking about two kinds of tree here.
The one build by Antlr's tree construction mechanisms is different than 
the one needed by javac.

Of course you could build an Antlr tree, but that's how far a grammar 
can go. But if you want to
take advantages of javac's code validation, code generation etc., you 
have to build a javac tree
to hook into the javac's system.

Yang

Simon wrote:
> Why do they not use the tree construction mechanisms available in  
> Antlr? As far as I can tell, they build the tree by using custom  
> actions. The link to the full grammar is shown below:
>
> http://hg.openjdk.java.net/compiler-grammar/compiler-grammar/langtools/file/e37d7d5df672/src/share/classes/com/sun/tools/javac/antlr/Java.g
>
> When would you choose not to use the tree construction mechanisms?
>
> Simon
>
> On Nov 10, 2008, at 21:45 , Terence Parr wrote:
>
>   
>> http://openjdk.java.net/projects/compiler-grammar/
>>
>> Direct link to the grammar:
>>
>> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g
>>
>> USF MSCS student Yang Jiang built this as an intern for Sun.
>>
>> Terence
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From sharwell at pixelminegames.com  Thu Nov 13 10:46:41 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 13 Nov 2008 12:46:41 -0600
Subject: [antlr-interest] Simple grammar doesn't complain about illegal
	input
In-Reply-To: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>
References: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E857@Bloodymary.ironwillgames.com>

Your grammar actually just stopped parsing at addj. You need to add an
EOF to the end of the prog rule to make sure it prints an error rather
than stops processing the file:

prog: (add NEWLINE)+ EOF ;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
amartinez at atc.ugr.es
Sent: Thursday, November 13, 2008 12:23 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Simple grammar doesn't complain about illegal
input

Hi all,
I'm having problems in grammars that do not complain about illegal input
(throwing a recognition exception).
I want to parse a very little/restricted assembly language source, in
the
attached example only the 'add' instruction is processed for now.

The grammar should process this input:
add r1, 23
add r4, r5

Everything seams to work fine, but if I try this source:
add  r1, 23
addj r4,56

the parser does not say anything about the inappropriate 'addj' (which
is
not a legal assembly token). I have even create an AST from the original
grammar, have debugged it on AntlrWorks, and have seen that this
environment
also does not complain on this input.

Where is the mistake?

Thank in advance, best regards

Attached is an example of a grammar that reproduces my error:

grammar T;
tokens {ADD;}
prog                    :       (add NEWLINE)+ ;
add                     :       TOKEN_ADD renreg ',' renreg ;
renreg          :       RX | UINT8 | ID ;

RX                      :       ('r'|'R') HEXDIGIT;
TOKEN_NAMEREG   :       ('namereg' | 'Namereg' | 'NAMEREG');
TOKEN_CONST             :       ('const' | 'Const' | 'CONST');
TOKEN_ADD               :       'add' ;

ID                      :       ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ;
UINT8                   :       HEXDIGIT? HEXDIGIT;
fragment
HEXDIGIT                :       ('0'..'9'|'a'..'f'|'A'..'F');
NEWLINE                 :       {getCharPositionInLine() > 0}?  =>
('\r'?
'\n')+ ;
NEWLINE_AT_COLUM_ZERO   :       {getCharPositionInLine() == 0}? =>
('\r'?
'\n')+ { $channel=HIDDEN; } ;
WS                      :       (' '|'\t') { $channel=HIDDEN; };
LINE_COMMENT    :       (';'|'//') (~'\n')* { $channel=HIDDEN; } ;

// Java code:
import java.io.*;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;


public class Main {

    public static void main(String args[]) throws Exception {

     CharStream input = new ANTLRFileStream(args[0]);
     TLexer lex = new TLexer(input);
     CommonTokenStream tokens = new CommonTokenStream(lex);
     TParser g = new TParser(tokens);
      g.prog ();
   }
}

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From sharwell at pixelminegames.com  Thu Nov 13 11:26:36 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 13 Nov 2008 13:26:36 -0600
Subject: [antlr-interest] A useful unit test for dependent grammars
Message-ID: <86403CA0939415448BCCB83855EFE09A64E85A@Bloodymary.ironwillgames.com>

This is taken from the testing portion for the ANTLR Tool as an example
of a token matching unit test in the actual executable. It uses
reflection to make sure the constant token values in a source class
match those in a target class (where target grammar imports source's
tokens).

 

[TestInitialize]

public void setUp()

{

    ErrorManager.resetErrorState();

 

    // verify token constants in StringTemplate

    VerifyImportedTokens( typeof( Antlr3.ST.Language.ActionParser ),
typeof( Antlr3.ST.Language.ActionLexer ) );

    VerifyImportedTokens( typeof( Antlr3.ST.Language.ActionParser ),
typeof( Antlr3.ST.Language.ActionEvaluator ) );

    VerifyImportedTokens( typeof( Antlr3.ST.Language.TemplateParser ),
typeof( Antlr3.ST.Language.TemplateLexer ) );

    VerifyImportedTokens( typeof( Antlr3.ST.Language.TemplateParser ),
typeof( Antlr3.ST.Language.AngleBracketTemplateLexer ) );

 

    // verify token constants in the ANTLR Tool

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.ANTLRLexer ) );

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.ANTLRTreePrinter ) );

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.AssignTokenTypesWalker ) );

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.CodeGenTreeWalker ) );

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.DefineGrammarItemsWalker ) );

    VerifyImportedTokens( typeof( Antlr3.Grammars.ANTLRParser ), typeof(
Antlr3.Grammars.TreeToNFAConverter ) );

}

 

private void VerifyImportedTokens( Type source, Type target )

{

    System.Reflection.FieldInfo namesField = source.GetField(
"tokenNames" );

    System.Reflection.FieldInfo targetNamesField = target.GetField(
"tokenNames" );

    Assert.IsNotNull( namesField, string.Format( "No tokenNames field
was found in grammar {0}.", source.Name ) );

 

    string[] sourceNames = namesField.GetValue( null ) as string[];

    string[] targetNames = ( targetNamesField != null ) ?
targetNamesField.GetValue( null ) as string[] : null;

    Assert.IsNotNull( sourceNames, string.Format( "The tokenNames field
in grammar {0} was null.", source.Name ) );

 

    for ( int i = 0; i < sourceNames.Length; i++ )

    {

        string tokenName = sourceNames[i];

        if ( string.IsNullOrEmpty( tokenName ) || tokenName[0] == '<' )

            continue;

 

        if ( tokenName[0] == '\'' )

        {

            if ( targetNames != null && targetNames.Length > i )

            {

                // make sure implicit tokens like 'new' that show up in
code as T__45 refer to the same token

                Assert.AreEqual(

                    sourceNames[i],

                    targetNames[i],

                    string.Format( "Implicit token {0} in grammar {1}
doesn't match {2} in grammar {3}.", sourceNames[i], source.Name,
targetNames[i], target.Name )

                    );

 

                continue;

            }

            else

            {

                tokenName = "T__" + i.ToString();

            }

        }

 

        System.Reflection.FieldInfo sourceToken = source.GetField(
tokenName );

        System.Reflection.FieldInfo targetToken = target.GetField(
tokenName );

        if ( source != null && target != null )

        {

            int sourceValue = (int)sourceToken.GetValue( null );

            int targetValue = (int)targetToken.GetValue( null );

            Assert.AreEqual(

                sourceValue,

                targetValue,

                string.Format( "Token {0} with value {1} grammar {2}
doesn't match value {3} in grammar {4}.", tokenName, sourceValue,
source.Name, targetValue, target.Name )

                );

        }

    }

}

 

 

Sam

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081113/7fe4c3b1/attachment.html 

From amartinez at atc.ugr.es  Thu Nov 13 11:29:57 2008
From: amartinez at atc.ugr.es (amartinez at atc.ugr.es)
Date: Thu, 13 Nov 2008 20:29:57 +0100 (CET)
Subject: [antlr-interest] Simple grammar doesn't complain about illegal
 input
Message-ID: <46763.193.145.230.9.1226604597.squirrel@atc.ugr.es>

If I do what yo say  I obtain this error:
line 7:8 missing EOF at 'adds'

Shouldn't this error be something like this?:
line 7:8 required (...)+ loop did not match anything at input 'adds'

I obtain te previous error by means of calling twice g.prog(), what is
wrong ... but for now it's the only way to make Antlr complain about the
illegal input ...

Isn't there any other way to do this?
Isn't the second error more accurate than the first one? I wonder.

Thanks in advance.

El jue, 13-11-2008 a las 12:46 -0600, Sam Harwell escribi?:
Your grammar actually just stopped parsing at addj. You need to add an
> EOF to the end of the prog rule to make sure it prints an error rather
> than stops processing the file:
>
> prog: (add NEWLINE)+ EOF ;
>
> Sam
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of
>> amartinez at atc.ugr.es
>> Sent: Thursday, November 13, 2008 12:23 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Simple grammar doesn't complain about illegal
>> input
>>
>> Hi all,
>> I'm having problems in grammars that do not complain about illegal input
>> (throwing a recognition exception).
>> I want to parse a very little/restricted assembly language source, in
>> the
>> attached example only the 'add' instruction is processed for now.
>>
>> The grammar should process this input:
>> add r1, 23
>> add r4, r5
>>
>> Everything seams to work fine, but if I try this source:
>> add  r1, 23
>> addj r4,56
>>
>> the parser does not say anything about the inappropriate 'addj' (which
>> is
>> not a legal assembly token). I have even create an AST from the original
>> grammar, have debugged it on AntlrWorks, and have seen that this
>> environment
>> also does not complain on this input.
>>
>> Where is the mistake?
>>
>> Thank in advance, best regards
>>
>> Attached is an example of a grammar that reproduces my error:
>>
>> grammar T;
>> tokens {ADD;}
>> prog                    :       (add NEWLINE)+ ;
>> add                     :       TOKEN_ADD renreg ',' renreg ;
>> renreg          :       RX | UINT8 | ID ;
>>
>> RX                      :       ('r'|'R') HEXDIGIT;
>> TOKEN_NAMEREG   :       ('namereg' | 'Namereg' | 'NAMEREG');
>> TOKEN_CONST             :       ('const' | 'Const' | 'CONST');
>> TOKEN_ADD               :       'add' ;
>>
>> ID                      :       ('a'..'z'|'A'..'Z'|'_')
>> ('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ;
>> UINT8                   :       HEXDIGIT? HEXDIGIT;
>> fragment
>> HEXDIGIT                :       ('0'..'9'|'a'..'f'|'A'..'F');
>> NEWLINE                 :       {getCharPositionInLine() > 0}?  =>
>> ('\r'?
>> '\n')+ ;
>> NEWLINE_AT_COLUM_ZERO   :       {getCharPositionInLine() == 0}? =>
>> ('\r'?
>> '\n')+ { $channel=HIDDEN; } ;
>> WS                      :       (' '|'\t') { $channel=HIDDEN; };
>> LINE_COMMENT    :       (';'|'//') (~'\n')* { $channel=HIDDEN; } ;
>>
>> // Java code:
>> import java.io.*;
>> import org.antlr.runtime.*;
>> import org.antlr.runtime.tree.*;
>>
>>
>> public class Main {
>>
>>     public static void main(String args[]) throws Exception {
>>
>>      CharStream input = new ANTLRFileStream(args[0]);
>>      TLexer lex = new TLexer(input);
>>      CommonTokenStream tokens = new CommonTokenStream(lex);
>>      TParser g = new TParser(tokens);
>>       g.prog ();
>>    }
>> }
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
>> ess
>>

From sharwell at pixelminegames.com  Thu Nov 13 11:36:11 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 13 Nov 2008 13:36:11 -0600
Subject: [antlr-interest] Simple grammar doesn't complain about illegal
	input
In-Reply-To: <46763.193.145.230.9.1226604597.squirrel@atc.ugr.es>
References: <46763.193.145.230.9.1226604597.squirrel@atc.ugr.es>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E85B@Bloodymary.ironwillgames.com>

You need to do special error handling if you want better messages. Here's what's happening:

When the rule encounters the ID token "addj", it knows that it doesn't have to enter the 'add' rule, so it goes on to expect EOF. Since EOF isn't found ("addj" was found), you get the error you saw. Something like this might be more informative:

prog
	:	(instruction NEWLINE)+
		EOF
	;

instruction
	:	add
	|	ID {error("Unknown instruction " + $ID.text);}
	;

Sam

-----Original Message-----
From: amartinez at atc.ugr.es [mailto:amartinez at atc.ugr.es] 
Sent: Thursday, November 13, 2008 1:30 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Simple grammar doesn't complain about illegal input

If I do what yo say  I obtain this error:
line 7:8 missing EOF at 'adds'

Shouldn't this error be something like this?:
line 7:8 required (...)+ loop did not match anything at input 'adds'

I obtain te previous error by means of calling twice g.prog(), what is
wrong ... but for now it's the only way to make Antlr complain about the
illegal input ...

Isn't there any other way to do this?
Isn't the second error more accurate than the first one? I wonder.

Thanks in advance.

El jue, 13-11-2008 a las 12:46 -0600, Sam Harwell escribi?:
Your grammar actually just stopped parsing at addj. You need to add an
> EOF to the end of the prog rule to make sure it prints an error rather
> than stops processing the file:
>
> prog: (add NEWLINE)+ EOF ;
>
> Sam
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of
>> amartinez at atc.ugr.es
>> Sent: Thursday, November 13, 2008 12:23 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Simple grammar doesn't complain about illegal
>> input
>>
>> Hi all,
>> I'm having problems in grammars that do not complain about illegal input
>> (throwing a recognition exception).
>> I want to parse a very little/restricted assembly language source, in
>> the
>> attached example only the 'add' instruction is processed for now.
>>
>> The grammar should process this input:
>> add r1, 23
>> add r4, r5
>>
>> Everything seams to work fine, but if I try this source:
>> add  r1, 23
>> addj r4,56
>>
>> the parser does not say anything about the inappropriate 'addj' (which
>> is
>> not a legal assembly token). I have even create an AST from the original
>> grammar, have debugged it on AntlrWorks, and have seen that this
>> environment
>> also does not complain on this input.
>>
>> Where is the mistake?
>>
>> Thank in advance, best regards
>>
>> Attached is an example of a grammar that reproduces my error:
>>
>> grammar T;
>> tokens {ADD;}
>> prog                    :       (add NEWLINE)+ ;
>> add                     :       TOKEN_ADD renreg ',' renreg ;
>> renreg          :       RX | UINT8 | ID ;
>>
>> RX                      :       ('r'|'R') HEXDIGIT;
>> TOKEN_NAMEREG   :       ('namereg' | 'Namereg' | 'NAMEREG');
>> TOKEN_CONST             :       ('const' | 'Const' | 'CONST');
>> TOKEN_ADD               :       'add' ;
>>
>> ID                      :       ('a'..'z'|'A'..'Z'|'_')
>> ('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ;
>> UINT8                   :       HEXDIGIT? HEXDIGIT;
>> fragment
>> HEXDIGIT                :       ('0'..'9'|'a'..'f'|'A'..'F');
>> NEWLINE                 :       {getCharPositionInLine() > 0}?  =>
>> ('\r'?
>> '\n')+ ;
>> NEWLINE_AT_COLUM_ZERO   :       {getCharPositionInLine() == 0}? =>
>> ('\r'?
>> '\n')+ { $channel=HIDDEN; } ;
>> WS                      :       (' '|'\t') { $channel=HIDDEN; };
>> LINE_COMMENT    :       (';'|'//') (~'\n')* { $channel=HIDDEN; } ;
>>
>> // Java code:
>> import java.io.*;
>> import org.antlr.runtime.*;
>> import org.antlr.runtime.tree.*;
>>
>>
>> public class Main {
>>
>>     public static void main(String args[]) throws Exception {
>>
>>      CharStream input = new ANTLRFileStream(args[0]);
>>      TLexer lex = new TLexer(input);
>>      CommonTokenStream tokens = new CommonTokenStream(lex);
>>      TParser g = new TParser(tokens);
>>       g.prog ();
>>    }
>> }
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
>> ess
>>

From antlr at mirality.co.nz  Thu Nov 13 11:36:38 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 14 Nov 2008 08:36:38 +1300
Subject: [antlr-interest] Simple grammar doesn't complain about illegal
 input
In-Reply-To: <46763.193.145.230.9.1226604597.squirrel@atc.ugr.es>
References: <46763.193.145.230.9.1226604597.squirrel@atc.ugr.es>
Message-ID: <20081113193649.7543711EEB5@www.antlr.org>

At 08:29 14/11/2008, amartinez at atc.ugr.es wrote:
 >If I do what yo say  I obtain this error:
 >line 7:8 missing EOF at 'adds'
 >
 >Shouldn't this error be something like this?:
 >line 7:8 required (...)+ loop did not match anything at input
 >'adds'

If your input consists solely of the invalid instruction, then 
this is the error you'll get as well.

When your input contains some valid instructions followed by some 
invalid instructions, then the (...)+ loop will pass (since there 
was at least one valid instruction) and it'll then try to match 
the EOF -- if it's not yet the end of the input (because there was 
an invalid instruction afterwards), then you'll get an "missing 
EOF" error (like you did).


From andersen at ontologyworks.com  Thu Nov 13 12:02:01 2008
From: andersen at ontologyworks.com (Bill Andersen)
Date: Thu, 13 Nov 2008 15:02:01 -0500
Subject: [antlr-interest] AST transforms - propagation of semantic
	information
Message-ID: <C8DDE085-63F5-4622-A14B-D4E4293DBFE1@ontologyworks.com>

Folks,

Here's a fragment of a AST transformation grammar I'm working on

foo
	: ^(IMPL ^(OR x+=form+) y=form)
		-> ^(AND ^(AS_IMPL $x $y)+)
	;

I want to keep certain semantic information on tree nodes.  Figured  
out already how to do this with custom node classes.  What I want, in  
the example of the rule above, is for the semantic information on the  
root node (IMPL) to be automatically propagated to the output root  
node (AND).  Of course I can write actions in each such production to  
do this, but I have a whole lot of productions like this and writing  
all those actions is a maintenance problem.

Is there some way to do this pervasively, perhaps with a custom  
TreeAdaptor?  Thanks in advance.

	bill

Bill Andersen
Ontology Works, Inc. (www.ontologyworks.com)
3600 O'Donnell Street, Suite 600
Baltimore, MD 21224
Office: +1.410.675.1201
Cell: +1.443.858.6444
Fax: +1.410.675.1204





From cocoa at gmx.ch  Thu Nov 13 13:38:13 2008
From: cocoa at gmx.ch (Simon)
Date: Thu, 13 Nov 2008 22:38:13 +0100
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <491C70BF.1020801@gmail.com>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
	<491C70BF.1020801@gmail.com>
Message-ID: <FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>

You could have written a custom TreeAdaptor to build the javac tree.  
Or was that simply not possible / too tedious?

On Nov 13, 2008, at 19:23 , Yang Jiang wrote:

> That is because we are talking about two kinds of tree here.
> The one build by Antlr's tree construction mechanisms is different  
> than the one needed by javac.
>
> Of course you could build an Antlr tree, but that's how far a  
> grammar can go. But if you want to
> take advantages of javac's code validation, code generation etc.,  
> you have to build a javac tree
> to hook into the javac's system.
>
> Yang
>
> Simon wrote:
>> Why do they not use the tree construction mechanisms available in   
>> Antlr? As far as I can tell, they build the tree by using custom   
>> actions. The link to the full grammar is shown below:
>>
>> http://hg.openjdk.java.net/compiler-grammar/compiler-grammar/langtools/file/e37d7d5df672/src/share/classes/com/sun/tools/javac/antlr/Java.g
>>
>> When would you choose not to use the tree construction mechanisms?
>>
>> Simon
>>
>> On Nov 10, 2008, at 21:45 , Terence Parr wrote:
>>
>>
>>> http://openjdk.java.net/projects/compiler-grammar/
>>>
>>> Direct link to the grammar:
>>>
>>> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g
>>>
>>> USF MSCS student Yang Jiang built this as an intern for Sun.
>>>
>>> Terence
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>


From sharwell at pixelminegames.com  Thu Nov 13 13:44:18 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 13 Nov 2008 15:44:18 -0600
Subject: [antlr-interest] AST transforms - propagation of
	semanticinformation
In-Reply-To: <C8DDE085-63F5-4622-A14B-D4E4293DBFE1@ontologyworks.com>
References: <C8DDE085-63F5-4622-A14B-D4E4293DBFE1@ontologyworks.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E85D@Bloodymary.ironwillgames.com>

Use a custom tree adaptor and write your rules like this:

foo
  : ^(IMPL ^(OR x+=form+) y=form)
    -> ^(AND[$IMPL] ^(AS_IMPL $x $y)+)
  ;

Then put the semantics to duplicate the information in the constructor
for your custom node type.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Andersen
Sent: Thursday, November 13, 2008 2:02 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AST transforms - propagation of
semanticinformation

Folks,

Here's a fragment of a AST transformation grammar I'm working on

foo
	: ^(IMPL ^(OR x+=form+) y=form)
		-> ^(AND ^(AS_IMPL $x $y)+)
	;

I want to keep certain semantic information on tree nodes.  Figured  
out already how to do this with custom node classes.  What I want, in  
the example of the rule above, is for the semantic information on the  
root node (IMPL) to be automatically propagated to the output root  
node (AND).  Of course I can write actions in each such production to  
do this, but I have a whole lot of productions like this and writing  
all those actions is a maintenance problem.

Is there some way to do this pervasively, perhaps with a custom  
TreeAdaptor?  Thanks in advance.

	bill

Bill Andersen
Ontology Works, Inc. (www.ontologyworks.com)
3600 O'Donnell Street, Suite 600
Baltimore, MD 21224
Office: +1.410.675.1201
Cell: +1.443.858.6444
Fax: +1.410.675.1204





List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From yang.jiang.z at gmail.com  Thu Nov 13 14:12:03 2008
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Thu, 13 Nov 2008 14:12:03 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
	<491C70BF.1020801@gmail.com>
	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
Message-ID: <491CA633.8040902@gmail.com>

Yeah, that is the reason.
The javac tree is more than just nodes, it also has info like position, 
javadoc and line maps etc..
It would be pretty easy to simply use the Antlr tree rewrite to build a 
tree, but not that easy if
the tree structure/specification has already been defined.

Yang

Simon wrote:
> You could have written a custom TreeAdaptor to build the javac tree. 
> Or was that simply not possible / too tedious?
>
> On Nov 13, 2008, at 19:23 , Yang Jiang wrote:
>
>> That is because we are talking about two kinds of tree here.
>> The one build by Antlr's tree construction mechanisms is different 
>> than the one needed by javac.
>>
>> Of course you could build an Antlr tree, but that's how far a grammar 
>> can go. But if you want to
>> take advantages of javac's code validation, code generation etc., you 
>> have to build a javac tree
>> to hook into the javac's system.
>>
>> Yang
>>
>> Simon wrote:
>>> Why do they not use the tree construction mechanisms available in  
>>> Antlr? As far as I can tell, they build the tree by using custom  
>>> actions. The link to the full grammar is shown below:
>>>
>>> http://hg.openjdk.java.net/compiler-grammar/compiler-grammar/langtools/file/e37d7d5df672/src/share/classes/com/sun/tools/javac/antlr/Java.g 
>>>
>>>
>>> When would you choose not to use the tree construction mechanisms?
>>>
>>> Simon
>>>
>>> On Nov 10, 2008, at 21:45 , Terence Parr wrote:
>>>
>>>
>>>> http://openjdk.java.net/projects/compiler-grammar/
>>>>
>>>> Direct link to the grammar:
>>>>
>>>> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g
>>>>
>>>> USF MSCS student Yang Jiang built this as an intern for Sun.
>>>>
>>>> Terence
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: 
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 
>>>>
>>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 
>>>
>>>
>>>
>


From antlr at jazillian.com  Thu Nov 13 14:30:26 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 13 Nov 2008 17:30:26 -0500
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <491CA633.8040902@gmail.com>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>	<491C70BF.1020801@gmail.com>	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
	<491CA633.8040902@gmail.com>
Message-ID: <491CAA82.6080805@jazillian.com>

This seems like a good goal for the new ANTLR tree rewrite mechanism.
Given the problem of converting a "whatever the java.g author thought
was reasonable" AST to a "exactly what javac needs" AST, if the
rewrite mechanism can make this easier than just "doing it by hand", then
it will be a "good" mechanism, and not just a toy.

Having said that, it looks to me like none of the tree rewrite software
(e.g. TXL) out there are "good". In other words, they don't look to me like they
are saving anybody any work, even for this typical use case.

I'm sure Terence could use ANTLR treewalkers to do this pretty quickly,
but I wonder if Jiang could, too.

Yang Jiang wrote:
> Yeah, that is the reason.
> The javac tree is more than just nodes, it also has info like position, 
> javadoc and line maps etc..
> It would be pretty easy to simply use the Antlr tree rewrite to build a 
> tree, but not that easy if
> the tree structure/specification has already been defined.

When is the tree structure that you need to produce NOT already defined?

> 
> Yang

From jimi at temporal-wave.com  Thu Nov 13 15:21:52 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 15:21:52 -0800
Subject: [antlr-interest] [Bug] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <BAY118-W1790AAD5AA29A50E9857D6E2170@phx.gbl>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>
	<1226422350.4332.4.camel@jimi.temporal-wave.com>
	<BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl>
	<BAY118-W241134EB477703B1B8DEC3E2140@phx.gbl>
	<1226505495.4885.581.camel@server.temporal-wave.com>
	<BAY118-W1790AAD5AA29A50E9857D6E2170@phx.gbl>
Message-ID: <1226618512.32070.3.camel@jimi>

On Thu, 2008-11-13 at 03:31 +0000, merry_winfly at hotmail.com wrote:
> Hi Jim,
>  
> I have found the problem,
>  
> In the code of PLSQLpredigestParser.c:51987 , I find the new memory didn't free when meet 
> (
>               if (BACKTRACKING>0)
>               {
>                   FAILEDFLAG = ANTLR3_TRUE; 
>                   return retval;
>               }
> )

At face value, then I woudl say that there is a template error that
means somethign is being allocated in backtrack mode when it should not
be. I have your code, so I should be able to track it down.

Sorry for the sparadic replies, but I have ben rebuilding machines,
setting up Hudson builds of ANTLR and all sorts of things that have got
in the way of me being useful ;-) Actually, I have been useful at
swearing a lot at 64 bit Linux distributions; the idea that Linux will
any time soon replce Windows as a desktop is laughable right now ;-)


Jim



From yang.jiang.z at gmail.com  Thu Nov 13 15:26:20 2008
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Thu, 13 Nov 2008 15:26:20 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <491CAA82.6080805@jazillian.com>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>	<491C70BF.1020801@gmail.com>	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
	<491CA633.8040902@gmail.com> <491CAA82.6080805@jazillian.com>
Message-ID: <491CB79C.1010609@gmail.com>

Andy Tripp wrote:
> This seems like a good goal for the new ANTLR tree rewrite mechanism.
> Given the problem of converting a "whatever the java.g author thought
> was reasonable" AST to a "exactly what javac needs" AST, if the
> rewrite mechanism can make this easier than just "doing it by hand", then
> it will be a "good" mechanism, and not just a toy.
>
> Having said that, it looks to me like none of the tree rewrite software
> (e.g. TXL) out there are "good". In other words, they don't look to me 
> like they
> are saving anybody any work, even for this typical use case.
>
> I'm sure Terence could use ANTLR treewalkers to do this pretty quickly,
> but I wonder if Jiang could, too.
Hi Andy,
I agree with you that rewrite from on AST to another AST could be hard :)

But what Simon was saying is to use the Antlr tree rewrite + a custom 
TreeAdaptor to build
the javac tree directly, rather than using the Antlr tree built from the 
tree rewrite grammar with a tree walker,
then generating the javac tree.

>
> Yang Jiang wrote:
>> Yeah, that is the reason.
>> The javac tree is more than just nodes, it also has info like 
>> position, javadoc and line maps etc..
>> It would be pretty easy to simply use the Antlr tree rewrite to build 
>> a tree, but not that easy if
>> the tree structure/specification has already been defined.
>
> When is the tree structure that you need to produce NOT already defined?
For example, the javac node for Compilation unit has three children : 
package annotations, package declaration,  definition list(including 
types imported from "import" and class/interface/enum declaration).

The Java.g grammar I used , from here 
http://antlr.org/grammar/1152141644268/Java.g, defines compliationUnit 
like this:

compilationUnit
    :   annotations
        (   packageDeclaration importDeclaration* typeDeclaration*
        |   classOrInterfaceDeclaration typeDeclaration*
        )
    |   packageDeclaration? importDeclaration* typeDeclaration*
    ;


importDeclaration is NOT part of typeDeclaration here.
Of course, I could tweak the rules to make it generate what I need, but 
it'll just make the grammar hard to read. Besides, I don't want to write 
another Java.g  myself:)


Yang




From jimi at temporal-wave.com  Thu Nov 13 15:28:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 15:28:12 -0800
Subject: [antlr-interest] C runtime,
 VS2005 barfs at generated Initializers for double!!
In-Reply-To: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
References: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
Message-ID: <1226618892.32070.5.camel@jimi>

On Wed, 2008-11-12 at 19:57 -0800, Vamsi Juvvi wrote:
> Hi list/the-not-so-idle-idle:
> 
>    While preparing a small antlr presentation for my colleagues I
> managed to generate code that VS 2005 simply refuses to compile.
> 
>    in my tree parser for a simple calculator example. I have
> 
> atom returns [double val]
>     : (
>             a=DECIMAL_LITERAL        
>         | a=HEX_LITERAL
>         | a=OCTAL_LITERAL
>        )
>        { val = parseInt($a.text);}
>        
>     | a=FLOATING_POINT_LITERAL 
>       {val = parseDouble($a.text);}
>     ;
> 
> The generated code for the atom method does this to initialize val
> 
> double val = 0.0D;
> 
> It does not compile unless I remove the D suffix on the 0.0. 0.0D is
> not a legal double literal for Visual studio C/C++. 

Works fine with VS2008. Perhaps your best bet is to compile with
the .Net C compiler.

> Is there any way I can turn this automatic initialization off ? Or is
> this a bug that'll need to be fixed in the C templates ? I can
> workaround this using a struct to wrap my double but that would be
> perverse.

It is auto-intialized in the templates. However, I suspect that I
probably changed it to use D for C++ or some other compiler. I will have
to retest it all to change that.

Jim

> 
> thanks much for reading.
> 
> -vamsi
> 
> -- 
> Between impulse and reaction lies man's greatest strength: The freedom
> to create a choice, to create his universe, to choose - Victor Frankl
> (adapted)
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From vhawargi at gmail.com  Thu Nov 13 15:51:49 2008
From: vhawargi at gmail.com (Vishwanath Hawargi)
Date: Thu, 13 Nov 2008 17:51:49 -0600
Subject: [antlr-interest] Is it necessary to write the 'main' code inside
	the grammar?
Message-ID: <4c63b36c0811131551m578cc0d3y796ab5ffab7007ec@mail.gmail.com>

Hello,
I am newbie to ANTLR and I am trying to implement a parser.
I wrote a grammar file and the grammar check is fine and i can
successfully generate either java /  c code.

My grammar file has only list of Literals and Parser rules. and to
generate the C code, i have put
                       options { language = Cpp;}

other than these, there are no  more sections.

I am not able to use the generated files now. Couldnt get any  sample
code to use the lexer.c and parser. files.
What do i have to write in the main() ? Can i write one independantly
without writing the @init part in the grammar?
Kindly throw some light on this... treat me as a layman and show me
the steps please!

Also, I am not able to locate C++ include files in the ANTLR site,
could someone help me locate them?
 (trying to change the 'language' to cpp, gives a cpp.stg file error.)

Eventually i want c++ code generated..
please help

thanks.
V

From jimi at temporal-wave.com  Thu Nov 13 15:57:56 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 15:57:56 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
	<491C70BF.1020801@gmail.com>
	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
Message-ID: <1226620676.32070.26.camel@jimi>

On Thu, 2008-11-13 at 22:38 +0100, Simon wrote:
> You could have written a custom TreeAdaptor to build the javac tree.  
> Or was that simply not possible / too tedious?


At least one of the problems is (and this is a common one), that the
javac tree building code expects all the nodes that are children of the
node you are building to be supplied at once. There is no "add this
child" operation.

Further, when you want to build an AST that is useful for netbeans or
similar, then at error recovery time you want to build whatever you have
managed to gather as an AST; the ANTLR tree building currently makes
this quite difficult. Hence, in this case at least, it is easier to use
the existing AST building mechanism, as Yang has done.

If this grammar is to become the definitive Java grammar, it will have
to be a non-backtracking grammar and the proposed operator precedence
changes would be needed. Otherwise it is not possible to compete with
the speed of the current Java lexer/parser. 

Specific error recovery rules, (already discussed/formulated as a
syntax) will be really good (for everyone in fact - 'if you fail here,
see if any of these rules would match') too. The problem with trying to
explicitly code them is that they become part of the valid grammar and
of course introduce ambiguties. The idea here is that you say:

instr: ADD REG COMMA REG

And then adorn this rule with a set of error recognition rules such as:

ID REG COMMA REG { generate special error message}

And so on. Ter already has a tentative syntax for doing this.

The good news is that there is lots of great work in this grammar and I
see no reason it can't be modifed to drop backtracking and incorporate
the proposed operator parsing for expressions (that basically avoids
descending 22 methods to find '666'.)

Jim

> 
> On Nov 13, 2008, at 19:23 , Yang Jiang wrote:
> 
> > That is because we are talking about two kinds of tree here.
> > The one build by Antlr's tree construction mechanisms is different  
> > than the one needed by javac.
> >
> > Of course you could build an Antlr tree, but that's how far a  
> > grammar can go. But if you want to
> > take advantages of javac's code validation, code generation etc.,  
> > you have to build a javac tree
> > to hook into the javac's system.
> >
> > Yang
> >
> > Simon wrote:
> >> Why do they not use the tree construction mechanisms available in   
> >> Antlr? As far as I can tell, they build the tree by using custom   
> >> actions. The link to the full grammar is shown below:
> >>
> >> http://hg.openjdk.java.net/compiler-grammar/compiler-grammar/langtools/file/e37d7d5df672/src/share/classes/com/sun/tools/javac/antlr/Java.g
> >>
> >> When would you choose not to use the tree construction mechanisms?
> >>
> >> Simon
> >>
> >> On Nov 10, 2008, at 21:45 , Terence Parr wrote:
> >>
> >>
> >>> http://openjdk.java.net/projects/compiler-grammar/
> >>>
> >>> Direct link to the grammar:
> >>>
> >>> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g
> >>>
> >>> USF MSCS student Yang Jiang built this as an intern for Sun.
> >>>
> >>> Terence
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >>
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Thu Nov 13 16:01:28 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 16:01:28 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <491CB79C.1010609@gmail.com>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>	<491C70BF.1020801@gmail.com>
	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
	<491CA633.8040902@gmail.com>
	<491CAA82.6080805@jazillian.com>  <491CB79C.1010609@gmail.com>
Message-ID: <1226620888.32070.29.camel@jimi>

On Thu, 2008-11-13 at 15:26 -0800, Yang Jiang wrote:
> Andy Tripp wrote:
> > This seems like a good goal for the new ANTLR tree rewrite mechanism.
> > Given the problem of converting a "whatever the java.g author thought
> > was reasonable" AST to a "exactly what javac needs" AST, if the
> > rewrite mechanism can make this easier than just "doing it by hand", then
> > it will be a "good" mechanism, and not just a toy.
> >
> > Having said that, it looks to me like none of the tree rewrite software
> > (e.g. TXL) out there are "good". In other words, they don't look to me 
> > like they
> > are saving anybody any work, even for this typical use case.
> >
> > I'm sure Terence could use ANTLR treewalkers to do this pretty quickly,
> > but I wonder if Jiang could, too.
> Hi Andy,
> I agree with you that rewrite from on AST to another AST could be hard :)
> 
> But what Simon was saying is to use the Antlr tree rewrite + a custom 
> TreeAdaptor to build
> the javac tree directly, rather than using the Antlr tree built from the 
> tree rewrite grammar with a tree walker,
> then generating the javac tree.

I thought about this for JavaFX but decided against it because of the
inability to append new nodes. It would mean having code in the tree
adaptor to work out when a node was 'complete' and this adds more
complication to the system for basically no gain. 

Jim


From jimi at temporal-wave.com  Thu Nov 13 16:02:47 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 16:02:47 -0800
Subject: [antlr-interest] C runtime,
 VS2005 barfs at generated Initializers for double!!
In-Reply-To: <1226618892.32070.5.camel@jimi>
References: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
	<1226618892.32070.5.camel@jimi>
Message-ID: <1226620967.32070.31.camel@jimi>

On Thu, 2008-11-13 at 15:28 -0800, Jim Idle wrote:
> On Wed, 2008-11-12 at 19:57 -0800, Vamsi Juvvi wrote:
> > Hi list/the-not-so-idle-idle:
> > 

Just a thought here though - have you done something like turn off
extensions in your project? I don't have VS2005 loaded anymore so can't
try this easilly.

Jim

> >    While preparing a small antlr presentation for my colleagues I
> > managed to generate code that VS 2005 simply refuses to compile.
> > 
> >    in my tree parser for a simple calculator example. I have
> > 
> > atom returns [double val]
> >     : (
> >             a=DECIMAL_LITERAL        
> >         | a=HEX_LITERAL
> >         | a=OCTAL_LITERAL
> >        )
> >        { val = parseInt($a.text);}
> >        
> >     | a=FLOATING_POINT_LITERAL 
> >       {val = parseDouble($a.text);}
> >     ;
> > 
> > The generated code for the atom method does this to initialize val
> > 
> > double val = 0.0D;
> > 
> > It does not compile unless I remove the D suffix on the 0.0. 0.0D is
> > not a legal double literal for Visual studio C/C++. 
> 
> Works fine with VS2008. Perhaps your best bet is to compile with
> the .Net C compiler.
> 
> > Is there any way I can turn this automatic initialization off ? Or is
> > this a bug that'll need to be fixed in the C templates ? I can
> > workaround this using a struct to wrap my double but that would be
> > perverse.
> 
> It is auto-intialized in the templates. However, I suspect that I
> probably changed it to use D for C++ or some other compiler. I will have
> to retest it all to change that.
> 
> Jim
> 
> > 
> > thanks much for reading.
> > 
> > -vamsi
> > 
> > -- 
> > Between impulse and reaction lies man's greatest strength: The freedom
> > to create a choice, to create his universe, to choose - Victor Frankl
> > (adapted)
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Thu Nov 13 16:06:38 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Nov 2008 16:06:38 -0800
Subject: [antlr-interest] Is it necessary to write the 'main' code
 inside the grammar?
In-Reply-To: <4c63b36c0811131551m578cc0d3y796ab5ffab7007ec@mail.gmail.com>
References: <4c63b36c0811131551m578cc0d3y796ab5ffab7007ec@mail.gmail.com>
Message-ID: <1226621198.32070.35.camel@jimi>

On Thu, 2008-11-13 at 17:51 -0600, Vishwanath Hawargi wrote:
> Hello,
> I am newbie to ANTLR and I am trying to implement a parser.
> I wrote a grammar file and the grammar check is fine and i can
> successfully generate either java /  c code.
> 
> My grammar file has only list of Literals and Parser rules. and to
> generate the C code, i have put
>                        options { language = Cpp;}
> 
> other than these, there are no  more sections.
> 
> I am not able to use the generated files now. Couldnt get any  sample
> code to use the lexer.c and parser. files.
> What do i have to write in the main() ? Can i write one independantly
> without writing the @init part in the grammar?
> Kindly throw some light on this... treat me as a layman and show me
> the steps please!
> 
> Also, I am not able to locate C++ include files in the ANTLR site,
> could someone help me locate them?
>  (trying to change the 'language' to cpp, gives a cpp.stg file error.)
> 
> Eventually i want c++ code generated..
> please help

Assumign you ar suign ANTLR 3, then use language=C; but compile the
generated files as C++. I am working on C++ target reasonably actively
now in the hope to complete it before the end of the year.

Jim

> 
> thanks.
> V
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From parrt at cs.usfca.edu  Thu Nov 13 17:54:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Nov 2008 17:54:27 -0800
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <1226620676.32070.26.camel@jimi>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>
	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>
	<491C70BF.1020801@gmail.com>
	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
	<1226620676.32070.26.camel@jimi>
Message-ID: <7A2EE11B-54EB-4AE0-8A87-0B75464F3ED6@cs.usfca.edu>


On Nov 13, 2008, at 3:57 PM, Jim Idle wrote:

> On Thu, 2008-11-13 at 22:38 +0100, Simon wrote:
>> You could have written a custom TreeAdaptor to build the javac tree.
>> Or was that simply not possible / too tedious?
>
>
> At least one of the problems is (and this is a common one), that the
> javac tree building code expects all the nodes that are children of  
> the
> node you are building to be supplied at once. There is no "add this
> child" operation.

In my design patterns book, I'm calling these heterogenous nodes with  
irregular children (vs normalized children).  They are great for hand  
written code but suck ass for automation. ;)

Ter

From merry_winfly at hotmail.com  Thu Nov 13 18:03:47 2008
From: merry_winfly at hotmail.com (merry_winfly at hotmail.com)
Date: Fri, 14 Nov 2008 02:03:47 +0000
Subject: [antlr-interest] [Bug] Antlr C code memory leak in Antlr 3.1.1
In-Reply-To: <1226618512.32070.3.camel@jimi>
References: <BAY122-W357A6A45B7CD1B0F72A474E21A0@phx.gbl>
	<BAY116-W161C442813E8EFC7875DEAE2150@phx.gbl>
	<1226422350.4332.4.camel@jimi.temporal-wave.com>
	<BAY118-W4242C707BC12BE906F8F6E2140@phx.gbl>
	<BAY118-W241134EB477703B1B8DEC3E2140@phx.gbl>
	<1226505495.4885.581.camel@server.temporal-wave.com>
	<BAY118-W1790AAD5AA29A50E9857D6E2170@phx.gbl> 
	<1226618512.32070.3.camel@jimi>
Message-ID: <BAY118-W43B86B537162823BAE457E2160@phx.gbl>




> From: jimi at temporal-wave.com
> CC: antlr-interest at antlr.org
> Date: Thu, 13 Nov 2008 15:21:52 -0800
> Subject: Re: [antlr-interest] [Bug] Antlr C code memory leak in Antlr 3.1.1
> 
> On Thu, 2008-11-13 at 03:31 +0000, merry_winfly at hotmail.com wrote:
>> Hi Jim,
>> 
>> I have found the problem,
>> 
>> In the code of PLSQLpredigestParser.c:51987 , I find the new memory didn't free when meet 
>> (
>> if (BACKTRACKING>0)
>> {
>> FAILEDFLAG = ANTLR3_TRUE; 
>> return retval;
>> }
>> )
> 
> At face value, then I woudl say that there is a template error that
> means somethign is being allocated in backtrack mode when it should not
> be. I have your code, so I should be able to track it down.
> 
> Sorry for the sparadic replies, but I have ben rebuilding machines,
> setting up Hudson builds of ANTLR and all sorts of things that have got
> in the way of me being useful ;-) Actually, I have been useful at
> swearing a lot at 64 bit Linux distributions; the idea that Linux will
> any time soon replce Windows as a desktop is laughable right now ;-)
> 
> 
> Jim
> 

Hi Jim,

Actually, I use gdb to trace and find when meet (if (BACKTRACKING>0) FAILEDFLAG = ANTLR3_TRUE; return retval;), it will not add the memory to the garbage vector.
 
But more, I will know the reason.
 
Waitting for your message and thanks you a lot.
 
BTW, I agree with you, more and more OS are Linux, including me:)
 
 
Thanks.
 
Best Regards
Winfly Lin
 
 
 
 
 
> 
 
 

> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
_________________________________________________________________
Discover the new Windows Vista
http://search.msn.com/results.aspx?q=windows+vista&mkt=en-US&form=QBRE

From qwizv9b02 at sneakemail.com  Fri Nov 14 04:05:04 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Fri, 14 Nov 2008 13:05:04 +0100
Subject: [antlr-interest] How to handle + when using arguments in Java
	code
In-Reply-To: <gff3l9$7vn$1@ger.gmane.org>
References: <gff3l9$7vn$1@ger.gmane.org>
Message-ID: <gfjphg$fn5$1@ger.gmane.org>

Hendrik Maryns schreef:
> Hi all,
> 
> I have a rule like the following:
> 
> binary returns [Formula result]
> 	: IMPLICATION WHITESPACE first=formula WHITESPACE second=formula {
> $result = new Implication($first, $second); }
> 	| EQUIVALENCE WHITESPACE first=formula WHITESPACE second=formula {
> $result = new Equivalence($first, $second); }
> 	;
> 
> and I would like to do something similar for n-ary junctors, that is
> junctors that can take an arbitrary number of arguments.
> 
> The bare rule would be:
> /**
>  * Conjunction or disjunction.
>  */
> n_ary returns [Formula result]
> 	: CONJUNCTION ( WHITESPACE formula )+
> 	| DISJUNCTION ( WHITESPACE formula )+
> 	;
> 
> And for CONJUNCTION I would like new Conjunction(Formula... args) to be
> invoked with the formulas found (ignoring whitespace).  Similar for new
> Disjunction(Formula... args).  As you might guess
> 
> formula  returns [Formula result] ?
> 
> is the starting rule.
> 
> Can I simply do { $result = new Equivalence($formula); } or something?

Surely this can?t be too difficult, I read something about adding stuff
to a list, but I forgot where.  Just a pointer would be fine really.  I
could define a constructor taking a list for both classes, NP.

TIA, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/096beb6d/attachment.bin 

From zirrus at gmail.com  Fri Nov 14 04:23:33 2008
From: zirrus at gmail.com (=?ISO-8859-1?Q?Javier_Luis_C=E1novas_Izquierdo?=)
Date: Fri, 14 Nov 2008 13:23:33 +0100
Subject: [antlr-interest] Problem generating the Java parser for Oracle
	PL/SQL grammar
In-Reply-To: <a382aa010811120344m1ab5d36g3a631441ac433568@mail.gmail.com>
References: <a382aa010811070207j6c8e933cs1a8761a89cac0912@mail.gmail.com>
	<a382aa010811091733x4a4a1a98u7b87ac2db8e42c7a@mail.gmail.com>
	<45c28e3e0811120218j72f49ddey31df70445458e7c8@mail.gmail.com>
	<a382aa010811120344m1ab5d36g3a631441ac433568@mail.gmail.com>
Message-ID: <45c28e3e0811140423r36c82cc7s5aa6ad5a5c5a1552@mail.gmail.com>

Hello Andrew.

I am working with the grammar. I will notice you about any problem that appears.

Now I am facing with the need of distinguishing between function call
and variable usage.

Thanks!

2008/11/12 Andrew Haritonkin <thikone at gmail.com>:
> Hi, Javier Luis C?novas!
>
> You are welcome!
>
> Yep, I also use ANTLRNoCaseFileStream for case insensitivity, and all
> my keywords therefore are upper case. Beyond that I did small
> improvement in select statement regarding join clause - see attached
> file.
>
> I would also appreciate any comments/suggestions from your side.
> Especially it would be helpful to know if valid pl/sql cannot be
> parsed by this grammar, since I'm very interested in this grammar
> improvement...
>
> From what I already know is that XML SQL functions are not supported,
> and that the following statement fails (it seems multiple level of '(
> )' caused the trouble):
>
> select * from
> (((( a inner join b on a.x = b.x )
> left outer join c on a.x = c.x )
> left outer join d on a.x = d.x )
> left outer join e on a.x = e.x );
>
> Also there is a problem with some not reserved keywords. Well, most of
> them are ID tokens with the gate predicate to check the text of token,
> like this:
>
> keyWHILE : {PLSQL3jParser.this.input.LT(1).getText().toUpperCase().equals("WHILE")}?
> ID;
>
> but this particular keyword and some others I had to replace with
> literal token instead:
>
> keyWHILE : 'WHILE';
>
> Because otherwise parser is not able to make the right decision in
> some cases... Therefore, they cannot be used as identifiers, while in
> fact, they can:
>
> CREATE TABLE test (while NUMBER);
>
> BEGIN
>   UPDATE test SET while = while + 1;
> END;
> /
>
> Will be accepted by Oracle.
>
> Recently I saw an article in wiki which might help me to solve this
> and also improve the speed (I think I already know what to do):
> http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar
>
> Andrew
>
> On Wed, Nov 12, 2008 at 11:18 AM, Javier Luis C?novas Izquierdo
> <zirrus at gmail.com> wrote:
>> Hi Andrew!
>>
>> Thanks for the advices. They have been useful for improving my grammar
>> definition.
>>
>> I had to modify the antlr ant task to execute the antlr parser tool
>> (memory aspects) and some elements in the grammar definition (as you
>> told in your mail): options section, members section, and some grammar
>> rules. The only thing I have done different is the definition of rules
>> for keyword. I use the ANTLRNoCaseFileStream Java class defined in
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782. This way,
>> all keywords can be specified in uppercase, lowercase or both, they
>> will be recognized in uppercase in the lexer so these rules only work
>> with uppercase words.
>>
>> Regards!
>>
>> 2008/11/10 Andrew Haritonkin <thikone at gmail.com>:
>>> Hi, Javier Luis C?novas Izquierdo!
>>>
>>> You don't need so much memory for my grammar, really :) 256Mb is
>>> enough for ANTLR v3.1.1. Well I use 512Mb actually...
>>>
>>> You need to change one rule though, to make it compatible with ANTLR 3.1.x:
>>>
>>> column_spec
>>>   :       sql_identifier ( DOT sql_identifier )*;
>>>
>>> For some reason, ANTLR 3.1.x cannot compile it, raising a error:
>>>
>>> error(206): PLSQL3.g:791:4: Alternative 2: after matching input such
>>> as ID DOT ID DOT ID DOT ID DOT decision cannot predict what comes next
>>> due to recursion overflow to expr_add from sql_expression and to
>>> expr_mul from expr_add
>>>
>>> While with ANTLR 3.0.1 it was compiling just fine... Anyway, replace
>>> it with this:
>>>
>>> column_spec
>>>   :       sql_identifier ( DOT sql_identifier ( DOT sql_identifier )? )?;
>>>
>>> And regarding Java target - there is not much you need to change, only
>>> members declaration and some gate predicates:
>>>
>>> options {
>>>       language=Java;
>>>       k=*;
>>>       backtrack=true;
>>>       memoize=true;
>>>       output=AST;
>>> }
>>>
>>> @members {
>>>   private boolean is_sql = false;
>>> }
>>>
>>> and all parser rules for keywords should like like this:
>>>
>>> keyA : {PLSQL3Parser.this.input.LT(1).getText().toUpperCase().equals("A")}? ID;
>>>
>>> Here I have to reference parser class, because this predicate can be
>>> also embedded in DFA, but there only token type stream is available,
>>> LT(1) returns token ID, integer... not very convenient. Gonna write
>>> separate topic for this, eventually.
>>>
>>> I also use Java target, mainly to debug the grammar in ANTLRWorks -
>>> works perfectly.
>>>
>>> Andrew
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>
>>
>>
>> --
>> Javier Luis C?novas Izquierdo
>> http://zirrus.es
>> zirrus at gmail.com
>>
>



-- 
Javier Luis C?novas Izquierdo
http://zirrus.es
zirrus at gmail.com

From freddy.mallet at gmail.com  Fri Nov 14 06:17:11 2008
From: freddy.mallet at gmail.com (Freddy Mallet)
Date: Fri, 14 Nov 2008 15:17:11 +0100
Subject: [antlr-interest] Don't want to pervert reference grammar like
	Terence Parr one on Java 1.5
In-Reply-To: <491B570F.2060606@gmail.com>
References: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>
	<491B4CB1.1060200@gmx.de> <491B570F.2060606@gmail.com>
Message-ID: <e2ed2be20811140617p67eeaf23y5641ff7bf0d83c02@mail.gmail.com>

Thanks for your help Yang and Johannes.
So there isn't any "native" mechanism to prevent touching original grammars
(precious piece of information) but I'm going to study your proposals.

Cheers,
Freddy

On Wed, Nov 12, 2008 at 11:22 PM, Yang Jiang <yang.jiang.z at gmail.com> wrote:

> Another way I can think of is to automatically generate a grammar (from the
> java or sql grammar) which builds a general
> data structure, like a tree, then you can do your work on top of that and
> not worrying about the original grammar getting changed.
>
> Then the problems left here is whether or not the metrics you want to
> calculate can be general enough to auto-generate :)
> I once wrote such a grammar based on the ANTLRv3 grammar (
> http://www.antlr.org/grammar/ANTLR/ANTLRv3.g) and using rewrite stream,
> which converts a java grammar to generate parsing trees. It worked quite
> well.
>
> Cheers,
> Yang
>
>
>
>
>
>
> Johannes Luber wrote:
>
>> Freddy Mallet schrieb:
>>
>>
>>> Hi all,
>>>
>>> I'd like to create my own Open Source library to calculate metrics on
>>> java and pl/sql source code. Those metrics could be lines of code,
>>> cyclomatic complexity, maintainability index (SEI), etc. I've studied
>>> javacc and antlr, then read the definitive ANTLR Reference.
>>>
>>> At that point, I guess I've enough material to begin writing this
>>> library but ... there is a recurring question I can't evacuate from my
>>> brain.
>>>
>>> Here is my issue : on the shelf, there is already two reference grammars
>>> available to parse java and pl/sql. Of course, those two reference
>>> grammars will evolve in time to follow java and pl/sql evolutions.
>>>
>>> Tomorrow, beginning to touch those two grammars to build my own AST or
>>> to add my own actions on rules is equivalent to create a new branch on a
>>> source code. After few months, the differences between the grammars will
>>> be so important that I couldn't synchronize them. So after a while, I
>>> couldn't capitalize on ANTLR community work.
>>>
>>> That's exactly what happens currently to JavaNCSS library. The library
>>> used javacc and all work has been done from a Java 1.1 grammar which has
>>> now great difficulty to evolve.
>>>
>>> So, is there an abstraction mechanism which allow us to use on the shelf
>>> grammars without modifying them directly ?
>>>
>>> Thanks for your help,
>>>
>>> Freddy
>>>
>>>
>>
>> AFAIK, there is a whitepaper on a tool named gdiff, which would be a
>> specialized diff for grammars. It would ignore actions and focus only on
>> the grammar structure. But I don't know how far the implementation has
>> been realized.
>>
>> Johannes
>>
>>
>>
>>> --
>>> Freddy Mallet,
>>> Sonar , Embrace Quality
>>> http://sonar.codehaus.org
>>>
>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
>


-- 
Freddy Mallet, +41 78 850 97 50
Hortis, Consulting & Innovation team
Sonar , Embrace Quality
http://sonar.codehaus.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/5c93c7d4/attachment.html 

From rschulz at sonic.net  Fri Nov 14 06:36:09 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 14 Nov 2008 06:36:09 -0800
Subject: [antlr-interest] Don't want to pervert reference grammar like
	Terence Parr one on Java 1.5
In-Reply-To: <491B4CB1.1060200@gmx.de>
References: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>
	<491B4CB1.1060200@gmx.de>
Message-ID: <200811140636.09172.rschulz@sonic.net>

On Wednesday 12 November 2008 13:37, Johannes Luber wrote:
> ...
>
> AFAIK, there is a whitepaper on a tool named gdiff, which would be a
> specialized diff for grammars. It would ignore actions and focus only
> on the grammar structure. But I don't know how far the implementation
> has been realized.
>
> Johannes

Are you referring to gDiff?

  <http://www.antlr.org/wiki/display/ANTLR3/gDiff+-+Grammar+Diff+Tool>

It looks like the software exists, but I cannot find the whitepaper you 
mention. I'm curious about the tree differencing algorithms that 
presumably underly its operation.


Randall Schulz

From antlr at jazillian.com  Fri Nov 14 07:35:03 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 14 Nov 2008 10:35:03 -0500
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
In-Reply-To: <491CB79C.1010609@gmail.com>
References: <691A1783-CCCB-43EF-A986-886CF7DC9D04@cs.usfca.edu>	<C5591EEA-5BA3-4213-87A2-FE2CBCF33F04@gmx.ch>	<491C70BF.1020801@gmail.com>	<FF7CF6B2-FA0A-491B-93BD-24D324082702@gmx.ch>
	<491CA633.8040902@gmail.com> <491CAA82.6080805@jazillian.com>
	<491CB79C.1010609@gmail.com>
Message-ID: <491D9AA7.2050304@jazillian.com>

Yang Jiang wrote:
> Andy Tripp wrote:
>> This seems like a good goal for the new ANTLR tree rewrite mechanism.
>> Given the problem of converting a "whatever the java.g author thought
>> was reasonable" AST to a "exactly what javac needs" AST, if the
>> rewrite mechanism can make this easier than just "doing it by hand", then
>> it will be a "good" mechanism, and not just a toy.
>>
>> Having said that, it looks to me like none of the tree rewrite software
>> (e.g. TXL) out there are "good". In other words, they don't look to me 
>> like they
>> are saving anybody any work, even for this typical use case.
>>
>> I'm sure Terence could use ANTLR treewalkers to do this pretty quickly,
>> but I wonder if Jiang could, too.
> Hi Andy,
> I agree with you that rewrite from on AST to another AST could be hard :)
> 
> But what Simon was saying is to use the Antlr tree rewrite + a custom 
> TreeAdaptor to build
> the javac tree directly, rather than using the Antlr tree built from the 
> tree rewrite grammar with a tree walker,
> then generating the javac tree.

So there are 4 potential approaches:
1) ANTLR parser with rewrite + TreeAdaptor
2) ANTLR parser + ANTLR treewalker
3) ANTLR parser + some other AST rewrite system
4) ANTLR parser + handwritten code to transform AST

I think Simon's question is "is there any easier way than #4?"
And my answer is "No" with a strong hint to Terence that it sure would be nice
if #1 or #2 would make that answer "Yes."

> 
>>
>> Yang Jiang wrote:
>>> Yeah, that is the reason.
>>> The javac tree is more than just nodes, it also has info like 
>>> position, javadoc and line maps etc..
>>> It would be pretty easy to simply use the Antlr tree rewrite to build 
>>> a tree, but not that easy if
>>> the tree structure/specification has already been defined.
>>
>> When is the tree structure that you need to produce NOT already defined?
> For example, the javac node for Compilation unit has three children : 
> package annotations, package declaration,  definition list(including 
> types imported from "import" and class/interface/enum declaration).
> 
> The Java.g grammar I used , from here 
> http://antlr.org/grammar/1152141644268/Java.g, defines compliationUnit 
> like this:
> 
> compilationUnit
>    :   annotations
>        (   packageDeclaration importDeclaration* typeDeclaration*
>        |   classOrInterfaceDeclaration typeDeclaration*
>        )
>    |   packageDeclaration? importDeclaration* typeDeclaration*
>    ;
> 
> 
> importDeclaration is NOT part of typeDeclaration here.
> Of course, I could tweak the rules to make it generate what I need, but 
> it'll just make the grammar hard to read. Besides, I don't want to write 
> another Java.g  myself:)

What I meant was that this is always the case for many real-world applications -
you don't get to decide what the end AST should look like. For some simple
applications, the shape of the AST produced by the given java.g will be "close enough".

I guess I'd just love to see Terence to for AST rewriting what he did for parsing:
raise the level of whole playing field :)

> 
> 
> Yang
> 
> 
> 


From jimi at temporal-wave.com  Fri Nov 14 08:28:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Nov 2008 08:28:33 -0800
Subject: [antlr-interest] How to handle + when using arguments in Java
 code
In-Reply-To: <gfjphg$fn5$1@ger.gmane.org>
References: <gff3l9$7vn$1@ger.gmane.org>  <gfjphg$fn5$1@ger.gmane.org>
Message-ID: <1226680113.17369.24.camel@jimi.temporal-wave.com>

On Fri, 2008-11-14 at 13:05 +0100, Hendrik Maryns wrote:

> Hendrik Maryns schreef:
> > Hi all,
> > 



> > The bare rule would be:
> > /**
> >  * Conjunction or disjunction.
> >  */
> > n_ary returns [Formula result]
> > 	: CONJUNCTION ( WHITESPACE formula )+
> > 	| DISJUNCTION ( WHITESPACE formula )+
> > 	;
> > 
> > And for CONJUNCTION I would like new Conjunction(Formula... args) to be
> > invoked with the formulas found (ignoring whitespace).  Similar for new
> > Disjunction(Formula... args).  As you might guess
> > 


I am not sure what your Formula class is, but the two patterns are:

n_ary returns [Formula result]

@init {
   $result = new Formula();
}
 : CONJUNCTION ( WHITESPACE f1=formula   { $result.add($f1); } ) +


And

n_ary returns [Formula result]

: CONJUNCTION ( WHITESPACE f1+=formula    ) +  { $result = new
Formula($f1); } // f1 is  a list


JIm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/e15b5ea0/attachment.html 

From bo-ba at mail.ru  Fri Nov 14 09:06:37 2008
From: bo-ba at mail.ru (Bo Ba)
Date: Fri, 14 Nov 2008 20:06:37 +0300
Subject: [antlr-interest] Extracting autocompletion rules from antlr grammar
In-Reply-To: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>
References: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>
Message-ID: <E1L127x-0001Xa-00.bo-ba-mail-ru@f128.mail.ru>

Hello,

Since autocompletion is not yet supported by ANTLR (http://groups.google.com/group/il-antlr-interest/browse_thread/thread/7c6d05a35046854d), I am thinking of implementing this simple reverse engineering approach.

1. Take a programm, which is complete in terms of the grammar.
2. Parse it in antlr parser.
3. During parsing of this "complete program", every current token type will get a set of token types, which can follow this current token.
4. As user types his program, the latter will be parsed on every key stroke (incrementally or not), and a current token will be extracted, which then will be used to get a corresponding set of possible predictions.
5. Optionally, the predictions will be filtered by their semantic validity, before presented to the user.

Am I overlooking something obvious feature of ANTLR, which could simplify this procedure? Specifically, are items 1 to 3 above the best way to obtain the raw predictions for every token type?

Thanks.

V

From qwizv9b02 at sneakemail.com  Fri Nov 14 09:48:17 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Fri, 14 Nov 2008 18:48:17 +0100
Subject: [antlr-interest] How to handle + when using arguments in Java
	code
In-Reply-To: <1226680113.17369.24.camel@jimi.temporal-wave.com>
References: <gff3l9$7vn$1@ger.gmane.org> <gfjphg$fn5$1@ger.gmane.org>
	<1226680113.17369.24.camel@jimi.temporal-wave.com>
Message-ID: <gfkdl1$s4g$1@ger.gmane.org>

Jim Idle schreef:
> On Fri, 2008-11-14 at 13:05 +0100, Hendrik Maryns wrote:
>> Hendrik Maryns schreef:
>> > Hi all,
>> > 
> 
>> > The bare rule would be:
>> > /**
>> >  * Conjunction or disjunction.
>> >  */
>> > n_ary returns [Formula result]
>> > 	: CONJUNCTION ( WHITESPACE formula )+
>> > 	| DISJUNCTION ( WHITESPACE formula )+
>> > 	;
>> > 
>> > And for CONJUNCTION I would like new Conjunction(Formula... args) to be
>> > invoked with the formulas found (ignoring whitespace).  Similar for new
>> > Disjunction(Formula... args).  As you might guess
>> > 
> 
> I am not sure what your Formula class is, but the two patterns are:
> 
> n_ary returns [Formula result]
> 
> @init {
>    $result = new Formula();
> }
> : CONJUNCTION ( WHITESPACE f1=formula   { $result.add($f1); } ) +

I found this solution by myself, made a subrule as follows:

n_aryArguments returns [List<Formula> result]
@init{ $result = new ArrayList<Formula>(); }
	: ( WHITESPACE arg=formula { $result.add(arg) } )+
	;

> And
> 
> n_ary returns [Formula result]
> 
> : CONJUNCTION ( WHITESPACE f1+=formula    ) +  { $result = new
> Formula($f1); } // f1 is  a list

This looks better, but I get an error:

(134): rule '+=' list labels are not allowed w/o output option: f1

Cheers, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/b76511f8/attachment.bin 

From juvvij at gmail.com  Fri Nov 14 10:23:57 2008
From: juvvij at gmail.com (Vamsi Juvvi)
Date: Fri, 14 Nov 2008 10:23:57 -0800
Subject: [antlr-interest] C runtime,
	VS2005 barfs at generated Initializers for double!!
In-Reply-To: <1226620967.32070.31.camel@jimi>
References: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
	<1226618892.32070.5.camel@jimi> <1226620967.32070.31.camel@jimi>
Message-ID: <c12e29d0811141023t76b80724n4cd557f28dda13d@mail.gmail.com>

I just checked. Extensions are turned on in my C++/Language options. If I
turn them off, I get a boatload of errors in windows headers themselves. So
VS2005 doesn't handle this even with Extensions turned on.

 Is there some other extension that needs to be turned on ? I just used the
default options when I created a new sln.

thanks for looking into this.

-vamsi

On Thu, Nov 13, 2008 at 4:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> On Thu, 2008-11-13 at 15:28 -0800, Jim Idle wrote:
> > On Wed, 2008-11-12 at 19:57 -0800, Vamsi Juvvi wrote:
> > > Hi list/the-not-so-idle-idle:
> > >
>
> Just a thought here though - have you done something like turn off
> extensions in your project? I don't have VS2005 loaded anymore so can't
> try this easilly.
>
> Jim
>
> > >    While preparing a small antlr presentation for my colleagues I
> > > managed to generate code that VS 2005 simply refuses to compile.
> > >
> > >    in my tree parser for a simple calculator example. I have
> > >
> > > atom returns [double val]
> > >     : (
> > >             a=DECIMAL_LITERAL
> > >         | a=HEX_LITERAL
> > >         | a=OCTAL_LITERAL
> > >        )
> > >        { val = parseInt($a.text);}
> > >
> > >     | a=FLOATING_POINT_LITERAL
> > >       {val = parseDouble($a.text);}
> > >     ;
> > >
> > > The generated code for the atom method does this to initialize val
> > >
> > > double val = 0.0D;
> > >
> > > It does not compile unless I remove the D suffix on the 0.0. 0.0D is
> > > not a legal double literal for Visual studio C/C++.
> >
> > Works fine with VS2008. Perhaps your best bet is to compile with
> > the .Net C compiler.
> >
> > > Is there any way I can turn this automatic initialization off ? Or is
> > > this a bug that'll need to be fixed in the C templates ? I can
> > > workaround this using a struct to wrap my double but that would be
> > > perverse.
> >
> > It is auto-intialized in the templates. However, I suspect that I
> > probably changed it to use D for C++ or some other compiler. I will have
> > to retest it all to change that.
> >
> > Jim
> >
> > >
> > > thanks much for reading.
> > >
> > > -vamsi
> > >
> > > --
> > > Between impulse and reaction lies man's greatest strength: The freedom
> > > to create a choice, to create his universe, to choose - Victor Frankl
> > > (adapted)
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>


-- 
Between impulse and reaction lies man's greatest strength: The freedom to
create a choice, to create his universe, to choose - Victor Frankl (adapted)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/3066881a/attachment.html 

From jimi at temporal-wave.com  Fri Nov 14 10:34:04 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Nov 2008 10:34:04 -0800
Subject: [antlr-interest] C runtime,
 VS2005 barfs at generated Initializers for double!!
In-Reply-To: <c12e29d0811141023t76b80724n4cd557f28dda13d@mail.gmail.com>
References: <c12e29d0811121957r5ced841bod9c5c5d05a7b9e02@mail.gmail.com>
	<1226618892.32070.5.camel@jimi> <1226620967.32070.31.camel@jimi>
	<c12e29d0811141023t76b80724n4cd557f28dda13d@mail.gmail.com>
Message-ID: <1226687644.17369.41.camel@jimi.temporal-wave.com>

On Fri, 2008-11-14 at 10:23 -0800, Vamsi Juvvi wrote:

> I just checked. Extensions are turned on in my C++/Language options.
> If I turn them off, I get a boatload of errors in windows headers
> themselves. So VS2005 doesn't handle this even with Extensions turned
> on.
> 
>  Is there some other extension that needs to be turned on ? I just
> used the default options when I created a new sln.
> 
> thanks for looking into this.
> 


I guess that it is just something that VS2005 did not support in C code.
However, there is probably no need for me to use this extension when
initializing with 0 anyway. I will take it off and see what happens. I
am sure I must have deliberately put it there though at some time - I
will check perforce :-(

Jim


> -vamsi
> 
> 
> On Thu, Nov 13, 2008 at 4:02 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> 
>         On Thu, 2008-11-13 at 15:28 -0800, Jim Idle wrote:
>         > On Wed, 2008-11-12 at 19:57 -0800, Vamsi Juvvi wrote:
>         > > Hi list/the-not-so-idle-idle:
>         > >
>         
>         
>         
>         Just a thought here though - have you done something like turn
>         off
>         extensions in your project? I don't have VS2005 loaded anymore
>         so can't
>         try this easilly.
>         
>         Jim
>         
>         
>         
>         > >    While preparing a small antlr presentation for my
>         colleagues I
>         > > managed to generate code that VS 2005 simply refuses to
>         compile.
>         > >
>         > >    in my tree parser for a simple calculator example. I
>         have
>         > >
>         > > atom returns [double val]
>         > >     : (
>         > >             a=DECIMAL_LITERAL
>         > >         | a=HEX_LITERAL
>         > >         | a=OCTAL_LITERAL
>         > >        )
>         > >        { val = parseInt($a.text);}
>         > >
>         > >     | a=FLOATING_POINT_LITERAL
>         > >       {val = parseDouble($a.text);}
>         > >     ;
>         > >
>         > > The generated code for the atom method does this to
>         initialize val
>         > >
>         > > double val = 0.0D;
>         > >
>         > > It does not compile unless I remove the D suffix on the
>         0.0. 0.0D is
>         > > not a legal double literal for Visual studio C/C++.
>         >
>         > Works fine with VS2008. Perhaps your best bet is to compile
>         with
>         > the .Net C compiler.
>         >
>         > > Is there any way I can turn this automatic initialization
>         off ? Or is
>         > > this a bug that'll need to be fixed in the C templates ? I
>         can
>         > > workaround this using a struct to wrap my double but that
>         would be
>         > > perverse.
>         >
>         > It is auto-intialized in the templates. However, I suspect
>         that I
>         > probably changed it to use D for C++ or some other compiler.
>         I will have
>         > to retest it all to change that.
>         >
>         > Jim
>         >
>         > >
>         > > thanks much for reading.
>         > >
>         > > -vamsi
>         > >
>         > > --
>         > > Between impulse and reaction lies man's greatest strength:
>         The freedom
>         > > to create a choice, to create his universe, to choose -
>         Victor Frankl
>         > > (adapted)
>         > > List:
>         http://www.antlr.org/mailman/listinfo/antlr-interest
>         > > Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         > >
>         >
>         >
>         > List:
>         http://www.antlr.org/mailman/listinfo/antlr-interest
>         > Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         >
>         
>         
> 
> 
> 
> 
> -- 
> Between impulse and reaction lies man's greatest strength: The freedom
> to create a choice, to create his universe, to choose - Victor Frankl
> (adapted)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081114/d3bfd0b8/attachment.html 

From sharwell at pixelminegames.com  Fri Nov 14 11:12:26 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 14 Nov 2008 13:12:26 -0600
Subject: [antlr-interest] Extracting autocompletion rules from antlr
	grammar
In-Reply-To: <E1L127x-0001Xa-00.bo-ba-mail-ru@f128.mail.ru>
References: <56098.193.145.230.9.1226600578.squirrel@atc.ugr.es>
	<E1L127x-0001Xa-00.bo-ba-mail-ru@f128.mail.ru>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E86C@Bloodymary.ironwillgames.com>

ANTLR itself is not the correct method for implementing autocompletion
features. Our IntelliSense engine (our support for Visual Studio's
autocompletion & code navigation features) does involve ANTLR, but maybe
not in the way you expect.

Autocomplete is not a syntactical analysis process; it is a semantic
analysis process. For example, public and protected members of base
classes are available in derived classes in C++. There is no way for
ANTLR to understand this type of dependence. I'll start with some
reasons why you shouldn't even attempt to use ANTLR for the full
autocompletion implementation. Then I'll cover the various tasks that
ANTLR is slated for in the process.

1. Performance. In order to gather context information for a file, ANTLR
processes a file-at-a-time. When providing editor features such as
autocomplete, you have 20ms to process and provide the correct
information in a list. If you don't address this, you'll end up with a
product like Eclipse, and no one wants that. Even if you have a fast
grammar (LL(k) for low k, few or no synpreds or sempreds, no
backtracking), large files will take more than that amount of time to
process.
2. Robustness. As users are typing, they constantly introduce syntax
errors. These errors throw wrenches in the tracks of ANTLR's lookahead
decision making process. Incomplete statements are extremely likely to
cause ANTLR to either stop processing in the context of these errors, or
provide misleading context information if it made bad decisions. Since
the users watching this process are unaware of what ANTLR is trying to
do behind the scenes, the only conclusion they can draw from the
misleading information is "this product has no idea what is going on?!"

The largest task ANTLR *is* appropriate for is gathering source
information for an entire project. We take the parse results from all
the files in the project and build an IntelliSense-appropriate cache
that is directly used for later lookups in auto-completion or code
navigation. IntelliSense engines have many unique demands on the cached
information. One example I have is for C++: cached classes cannot point
directly to the class information of a base class, but instead must do
so via a unique ID derived from the name of the base class. That way, if
the programmer changes the base class and that class is reparsed, the
derived class is automatically able to use the new information for
auto-complete.

Another task we use ANTLR for is expression parsing. We have a small
ANTLR rule that builds a tree for a single postfix-expression in source
code, and is specially designed handle malformed expressions (they're
really just incomplete expressions but ANTLR doesn't know that). The
expression parser was easy to prevent ambiguities because we strictly
limited it to postfix operations. The operators in that parse tree are
replaced with functors that access the cache, and the end result is an
enumeration of the desired auto-complete items. If the user requested a
"goto declaration" operation, the functors result in a location in
source code. Here's an example of these operations:

User enters: myVariable.
ANTLR tree: (MEMBER myVariable ?)
Operation autocomplete: (get-members (resolve myVariable (source-context
(cursor-position))))
Operation goto-declaration: (resolve ? (get-members (resolve myVariable
(source-context (cursor-position)))))

User enters: myVariable.f().yourVariable
ANTLR tree: (MEMBER (CALL (MEMBER myVariable f) ()) yourVariable)
Operation goto-declaration: (resolve yourVariable (get-members
(return-value f () (resolve myVariable (source-context
(cursor-position))))))

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bo Ba
Sent: Friday, November 14, 2008 11:07 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Extracting autocompletion rules from antlr
grammar

Hello,

Since autocompletion is not yet supported by ANTLR
(http://groups.google.com/group/il-antlr-interest/browse_thread/thread/7
c6d05a35046854d), I am thinking of implementing this simple reverse
engineering approach.

1. Take a programm, which is complete in terms of the grammar.
2. Parse it in antlr parser.
3. During parsing of this "complete program", every current token type
will get a set of token types, which can follow this current token.
4. As user types his program, the latter will be parsed on every key
stroke (incrementally or not), and a current token will be extracted,
which then will be used to get a corresponding set of possible
predictions.
5. Optionally, the predictions will be filtered by their semantic
validity, before presented to the user.

Am I overlooking something obvious feature of ANTLR, which could
simplify this procedure? Specifically, are items 1 to 3 above the best
way to obtain the raw predictions for every token type?

Thanks.

V

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From joe.peterson at intel.com  Fri Nov 14 12:21:29 2008
From: joe.peterson at intel.com (Peterson, Joe)
Date: Fri, 14 Nov 2008 12:21:29 -0800
Subject: [antlr-interest] Import problems with Antlr 3.1.1 - Whitespace
In-Reply-To: <mailman.0.1226692801.5116.antlr-interest@antlr.org>
References: <mailman.0.1226692801.5116.antlr-interest@antlr.org>
Message-ID: <BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>

Hello all,

I'm having several some problems with import and I'm hoping y'all can help me understand the problems. I'll list them in separate e-mails as I fully qualify the problems.

Basically, I have 15 or so related files that I need to parse. They all should use the same lexer rules, so I started out trying to put all the lexer rules into a single file that all the root grammars would import.  But that didn't work. I'm using Antlr 3.1.1 (AntlrWorks 1.2) and when I compile, I'm using VC2008 (but my current problem happens even using the AntlrWorks interpreter).

Here is my first problem... I can't seem to put all my lexer rules in a separate file because when I put the WS definition in a separate file, I get errors.  Take these overly simple sample files that demonstrate one of my issues:

//// test.g Starts here
grammar test;
import testlexer;
version_info : VERSION VERSION_IDENTIFIER SEMICOLON ;
//// test.g Ends here

//// testlexer.g starts here
lexer grammar testlexer;
VERSION : 'Version';
VERSION_IDENTIFIER : ('0'..'9')+ '.' ('0'..'9')+ ;
SEMICOLON : ';';
WS  : (' '|'\t' | '\r' | '\n')+ {$channel=HIDDEN;};
//// testlexer.g ends here

//// input starts here
Version 1.0;
//// input ends here

When I run it on a simple file it blows up after the version keyword... it's like it doesn't send the WS to the hidden channel.

If I move the WS declaration into test.g, it works fine.

Am I missing something with how imports work? Shouldn't I be able to put the WS declaration in the common lexer file?

(I apologize if this goes through twice, I sent it yesterday and still haven't seen it come through...)

Thanks,
-JEEP
Joe Peterson




From parrt at cs.usfca.edu  Fri Nov 14 14:08:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Nov 2008 14:08:57 -0800
Subject: [antlr-interest] Import problems with Antlr 3.1.1 - Whitespace
In-Reply-To: <BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>
References: <mailman.0.1226692801.5116.antlr-interest@antlr.org>
	<BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>
Message-ID: <2976F760-984F-458D-ACD5-719DE292E07B@cs.usfca.edu>

I'll add to my list to look at.
Ter
On Nov 14, 2008, at 12:21 PM, Peterson, Joe wrote:

> Hello all,
>
> I'm having several some problems with import and I'm hoping y'all  
> can help me understand the problems. I'll list them in separate e- 
> mails as I fully qualify the problems.
>
> Basically, I have 15 or so related files that I need to parse. They  
> all should use the same lexer rules, so I started out trying to put  
> all the lexer rules into a single file that all the root grammars  
> would import.  But that didn't work. I'm using Antlr 3.1.1  
> (AntlrWorks 1.2) and when I compile, I'm using VC2008 (but my  
> current problem happens even using the AntlrWorks interpreter).
>
> Here is my first problem... I can't seem to put all my lexer rules  
> in a separate file because when I put the WS definition in a  
> separate file, I get errors.  Take these overly simple sample files  
> that demonstrate one of my issues:
>
> //// test.g Starts here
> grammar test;
> import testlexer;
> version_info : VERSION VERSION_IDENTIFIER SEMICOLON ;
> //// test.g Ends here
>
> //// testlexer.g starts here
> lexer grammar testlexer;
> VERSION : 'Version';
> VERSION_IDENTIFIER : ('0'..'9')+ '.' ('0'..'9')+ ;
> SEMICOLON : ';';
> WS  : (' '|'\t' | '\r' | '\n')+ {$channel=HIDDEN;};
> //// testlexer.g ends here
>
> //// input starts here
> Version 1.0;
> //// input ends here
>
> When I run it on a simple file it blows up after the version  
> keyword... it's like it doesn't send the WS to the hidden channel.
>
> If I move the WS declaration into test.g, it works fine.
>
> Am I missing something with how imports work? Shouldn't I be able to  
> put the WS declaration in the common lexer file?
>
> (I apologize if this goes through twice, I sent it yesterday and  
> still haven't seen it come through...)
>
> Thanks,
> -JEEP
> Joe Peterson
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jaluber at gmx.de  Sat Nov 15 03:54:50 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 15 Nov 2008 12:54:50 +0100
Subject: [antlr-interest] Don't want to pervert reference grammar like
 Terence Parr one on Java 1.5
In-Reply-To: <200811140636.09172.rschulz@sonic.net>
References: <e2ed2be20811120143n5a9b6d86y9ae7d06f9ca48e0d@mail.gmail.com>	<491B4CB1.1060200@gmx.de>
	<200811140636.09172.rschulz@sonic.net>
Message-ID: <491EB88A.7070707@gmx.de>

Randall R Schulz schrieb:
> On Wednesday 12 November 2008 13:37, Johannes Luber wrote:
>> ...
>>
>> AFAIK, there is a whitepaper on a tool named gdiff, which would be a
>> specialized diff for grammars. It would ignore actions and focus only
>> on the grammar structure. But I don't know how far the implementation
>> has been realized.
>>
>> Johannes
> 
> Are you referring to gDiff?
> 
>   <http://www.antlr.org/wiki/display/ANTLR3/gDiff+-+Grammar+Diff+Tool>

Yes.
> 
> It looks like the software exists, but I cannot find the whitepaper you 
> mention. I'm curious about the tree differencing algorithms that 
> presumably underly its operation.

It may have been the website I've read. My memory on this topic is a bit
fuzzy.

Johannes
> 
> 
> Randall Schulz
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From cowang at comcast.net  Sat Nov 15 08:12:41 2008
From: cowang at comcast.net (George S. Cowan)
Date: Sat, 15 Nov 2008 11:12:41 -0500
Subject: [antlr-interest] ANTLR-based Java grammar for javac compiler
Message-ID: <78B1BA01E627440F9FFC0088B3794E4A@gsce0ae1cfad8d>

Just reminding everyone that if you attempt to generate a parser for Yang
Jiang's Java.g from the command line and get the message:
 
ANTLR Parser Generator  Version 3.1.1
warning(205): Java.g:1:8: ANTLR could not analyze this decision in rule
Tokens; often this is because of recursive rule references visible from the
left edge of alternatives.  ANTLR will re-analyze the decision with a fixed
lookahead of k=1.  Consider using options {k=1;}" for that decision and
possibly adding a syntactic predicate.
error(10):  internal error:
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could not even
do k=1 for decision 33; reason: timed out (>1000ms)
 
You can add the ANTLR extended command line option
  -Xconversiontimeout 100000
 
(Jiang gives instructions for using his Java.g under ANTLRworks at 
   <http://openjdk.java.net/projects/compiler-grammar/antlrworks/>
http://openjdk.java.net/projects/compiler-grammar/antlrworks/
)
 
Now that warning(205) is very interesting, and I would like to work on
factoring out the recursion, but, of course, there is no rule "Tokens" in
the grammar. Does this message give me a clue about where to look that I am
missing?
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081115/98ed6149/attachment.html 

From toddobryan at gmail.com  Sat Nov 15 08:36:23 2008
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sat, 15 Nov 2008 11:36:23 -0500
Subject: [antlr-interest] Number tokenizer vs. number grammar
Message-ID: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>

 (One warning--I'm new to ANTLR so I haven't wrapped my brain around
syntactic/semantic predicates and may have missed something obvious
there that would make this trivial.)

I'm parsing a language that allows a great range of number constructs.
1, -3, 3.14, -5.8, 2/3, -3/-5, 3+2i, -4+i, 5-i, -3/5+2/3i, 3/5-2/3i,
7+2.3i and some other things are all legal numbers.

For the language grammar itself, it would be very nice to just have a
NUMBER token, but it would also be nice to have the ability to parse
numbers into component parts since creating a complex number involves
calling a constructor with the two real parts. The other tricky thing
is that whitespace is irrelevant in the language grammar, but relevant
in parsing numbers. For example, 3+ 2i (with a space before the 2) is
not a legal number.

I've thought about identifying a NUMBER token in the grammar and then
calling a number parser on that token as part of processing, but what
I'm afraid of is keeping the number parser and the NUMBER token in
sync. What I'm feeling like is that I need token fragments in the
language grammar that aren't fragments but are actual tokens in the
number grammar.

Am I missing a simple way to deal with this or is this just a nasty problem?

Todd

From sharwell at pixelminegames.com  Sat Nov 15 12:20:15 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 15 Nov 2008 14:20:15 -0600
Subject: [antlr-interest] Number tokenizer vs. number grammar
In-Reply-To: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>
References: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E881@Bloodymary.ironwillgames.com>

The problem you'll encounter is order of operations. If the following is
valid in your language:

2 * 3+2i

Then is the result supposed to be 6+2i or 6+4i? What about 2*3+2i?

How the language treats order of operations will determine your possible
approaches.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Todd O'Bryan
Sent: Saturday, November 15, 2008 10:36 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Number tokenizer vs. number grammar

 (One warning--I'm new to ANTLR so I haven't wrapped my brain around
syntactic/semantic predicates and may have missed something obvious
there that would make this trivial.)

I'm parsing a language that allows a great range of number constructs.
1, -3, 3.14, -5.8, 2/3, -3/-5, 3+2i, -4+i, 5-i, -3/5+2/3i, 3/5-2/3i,
7+2.3i and some other things are all legal numbers.

For the language grammar itself, it would be very nice to just have a
NUMBER token, but it would also be nice to have the ability to parse
numbers into component parts since creating a complex number involves
calling a constructor with the two real parts. The other tricky thing
is that whitespace is irrelevant in the language grammar, but relevant
in parsing numbers. For example, 3+ 2i (with a space before the 2) is
not a legal number.

I've thought about identifying a NUMBER token in the grammar and then
calling a number parser on that token as part of processing, but what
I'm afraid of is keeping the number parser and the NUMBER token in
sync. What I'm feeling like is that I need token fragments in the
language grammar that aren't fragments but are actual tokens in the
number grammar.

Am I missing a simple way to deal with this or is this just a nasty
problem?

Todd

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From toddobryan at gmail.com  Sat Nov 15 12:50:26 2008
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sat, 15 Nov 2008 15:50:26 -0500
Subject: [antlr-interest] Number tokenizer vs. number grammar
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E881@Bloodymary.ironwillgames.com>
References: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09A64E881@Bloodymary.ironwillgames.com>
Message-ID: <904774730811151250v29a5006dkf5f366c078bf4c74@mail.gmail.com>

Assume that that both 2 * 3+2i and 2*3+2i should lex as NUMBER OP
NUMBER. What does that determine about my possible approaches? :-)

Todd

On Sat, Nov 15, 2008 at 3:20 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> The problem you'll encounter is order of operations. If the following is
> valid in your language:
>
> 2 * 3+2i
>
> Then is the result supposed to be 6+2i or 6+4i? What about 2*3+2i?
>
> How the language treats order of operations will determine your possible
> approaches.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Todd O'Bryan
> Sent: Saturday, November 15, 2008 10:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Number tokenizer vs. number grammar
>
>  (One warning--I'm new to ANTLR so I haven't wrapped my brain around
> syntactic/semantic predicates and may have missed something obvious
> there that would make this trivial.)
>
> I'm parsing a language that allows a great range of number constructs.
> 1, -3, 3.14, -5.8, 2/3, -3/-5, 3+2i, -4+i, 5-i, -3/5+2/3i, 3/5-2/3i,
> 7+2.3i and some other things are all legal numbers.
>
> For the language grammar itself, it would be very nice to just have a
> NUMBER token, but it would also be nice to have the ability to parse
> numbers into component parts since creating a complex number involves
> calling a constructor with the two real parts. The other tricky thing
> is that whitespace is irrelevant in the language grammar, but relevant
> in parsing numbers. For example, 3+ 2i (with a space before the 2) is
> not a legal number.
>
> I've thought about identifying a NUMBER token in the grammar and then
> calling a number parser on that token as part of processing, but what
> I'm afraid of is keeping the number parser and the NUMBER token in
> sync. What I'm feeling like is that I need token fragments in the
> language grammar that aren't fragments but are actual tokens in the
> number grammar.
>
> Am I missing a simple way to deal with this or is this just a nasty
> problem?
>
> Todd
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> ess
>
>

From antlr at mirality.co.nz  Sat Nov 15 22:30:35 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 16 Nov 2008 19:30:35 +1300
Subject: [antlr-interest] Number tokenizer vs. number grammar
In-Reply-To: <904774730811151250v29a5006dkf5f366c078bf4c74@mail.gmail.co
 m>
References: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09A64E881@Bloodymary.ironwillgames.com>
	<904774730811151250v29a5006dkf5f366c078bf4c74@mail.gmail.com>
Message-ID: <20081116063045.99C3F11EB21@www.antlr.org>

At 09:50 16/11/2008, Todd O'Bryan wrote:
 >Assume that that both 2 * 3+2i and 2*3+2i should lex as NUMBER 
OP
 >NUMBER. What does that determine about my possible approaches? 
:-)

It implies that you're going to experience pain with "2+3+2i" (or 
"2/3+2i", for that matter, given that you've already said that 
this ought to be a single NUMBER).  :)

If you can require that whitespace is significant (ie. "2 / 3+2i" 
is two NUMBERs and a division, but "2/3+2i" is a single NUMBER, 
and "2 /3+2i" is simply illegal), then probably the simplest way 
to deal with this (and avoid duplication) is to define NUMBER as 
any sequence with a leading digit and any combination of digits 
and operators afterwards, with no whitespace:

fragment DIGIT : '0'..'9';
NUMBER : '-'? '.'? DIGIT (DIGIT | '+' | '-' | '/' | '.' | 'i')* ;

This will of course be able to match invalid constructs as well, 
but you can deal with that at the parser / tree parser / driver 
code level (which permits better error messages anyway).


From wrose at zip-it.org  Sun Nov 16 04:39:59 2008
From: wrose at zip-it.org (William Rose)
Date: Sun, 16 Nov 2008 23:39:59 +1100
Subject: [antlr-interest] Confused about backtracking in lexer rules
Message-ID: <4920149F.40201@zip-it.org>

Hi,

I'm trying to write a simple wiki markup parser.  One basic task that's 
going strangely for me is trying to pull out URLs in the lexer so I can 
send them as a single token to the parser.  I originally thought I would 
be able to write a lexer rule that would start trying to match a URL, 
fail, then retry the sub tokens it has been working towards matching a 
URL from and trying to match them someplace else.  I'm guessing this is 
backtracking, and all I've read around the place says that ANTLR 3 is 
pretty cluey at working it out (I'm using 3.1.1, via ANTLRWorks 1.2.1, 
with Java code generation).

What I'm finding is that the lexer starts matching the URL, gets to a 
point where it can't match the character, then drops everything it has 
read so far and starts lexing from the next character, losing the 
initially matched tokens.

I've tried to find out how to stop this, but the best I've come up with 
is options { backtrack = true; }, which didn't work.  Syntactic or 
semantic predicates are often mentioned as helpful, but I don't see how 
I can write a predicate to help with this decision.

Here's my trimmed-down grammar, with the final two lexer rules being of 
most interest (I expect failed matches of URL to backtrack and retry TEXT):

--- LexLose.g ---
grammar LexLose;

start    :   
        element* EOF
    ;

element    :    word
    |    punctuation
    |    whitespace
    ;

whitespace
    :    SPACES
    ;

word    :    URL
    |    TEXT
    ;
   
punctuation
    :    COLON
    |    SLASH
    |    HYPHEN
    |    ASTERISK
    ;

// Lexer
fragment CR
    :    '\r';
fragment LF
    :    '\n';
fragment SPACE
    :    ' ';
fragment TAB
    :    '\t';

fragment LETTER
    :    'a' .. 'z'
    |    'A' .. 'Z'
    ;
fragment DIGIT
    :    '0' .. '9'
    ;

SPACES    :    (SPACE | TAB | CR | LF)+
    ;

COLON    :    ':';
SLASH    :    '/';
HYPHEN    :    '-';
ASTERISK:    '*';

URL    :    LETTER (LETTER | DIGIT | HYPHEN)* COLON ~(SPACE | TAB | CR | 
LF)+
    ;
   
TEXT    :    ~(COLON | SLASH | HYPHEN | ASTERISK | SPACE | TAB | CR | LF)*
    ;
--- end LexLose.g ---

A sample input file that shows some strangeness is:

Most would agree: ANTLR makes life easier.
And those that would't probably came from 
http://antlr.org/mailing-list.  Although...

Running the lexer leads to an error lexing "agree:" -- it looked like a 
URL all the way up until there was a space after the colon.  But instead 
of retrying and matching TEXT COLON, it loses the incoming data.  Is 
there a way to make the lexer return TEXT COLON as the tokens?

One alternative I've tried is to make URL into a parser rule, but I 
found that ANTLR would warn about the non-determinism of trailing tokens 
that matched either url or punctuation:

--- alternative LexLose.g ---
grammar LexLose;

start    :   
        element* EOF
    ;

element    :    word
    |    punctuation
    |    whitespace
    ;

whitespace
    :    SPACES
    ;

word    :    url
    |    TEXT
    ;
   
punctuation
    :    COLON
    |    SLASH
    |    HYPHEN
    |    ASTERISK
    ;

url    :    scheme COLON locator
    ;

scheme    :    TEXT (HYPHEN TEXT)*
    ;

locator    :    (TEXT | COLON | SLASH | HYPHEN | ASTERISK)+
    ;
   
// Lexer
fragment CR
    :    '\r';
fragment LF
    :    '\n';
fragment SPACE
    :    ' ';
fragment TAB
    :    '\t';

fragment LETTER
    :    'a' .. 'z'
    |    'A' .. 'Z'
    ;
fragment DIGIT
    :    '0' .. '9'
    ;

SPACES    :    (SPACE | TAB | CR | LF)+
    ;

COLON    :    ':';
SLASH    :    '/';
HYPHEN    :    '-';
ASTERISK:    '*';

TEXT    :    ~(COLON | SLASH | HYPHEN | ASTERISK | SPACE | TAB | CR | LF)*
    ;
--- end alternative LexLose.g ---

Is this the better way forward?  And if so, is there a way to make this 
grammar warning-free?

cheers,

Will

From toddobryan at gmail.com  Sun Nov 16 09:38:15 2008
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sun, 16 Nov 2008 12:38:15 -0500
Subject: [antlr-interest] Number tokenizer vs. number grammar
In-Reply-To: <491fbe15.0a0bca0a.766c.ffffa211SMTPIN_ADDED@mx.google.com>
References: <904774730811150836n1f2c909cme5cae16e963eeb7@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09A64E881@Bloodymary.ironwillgames.com>
	<904774730811151250v29a5006dkf5f366c078bf4c74@mail.gmail.com>
	<491fbe15.0a0bca0a.766c.ffffa211SMTPIN_ADDED@mx.google.com>
Message-ID: <904774730811160938y2674dee2q6b5530dec4ddc048@mail.gmail.com>

Thanks for that advice. I think I figured it out. I created a
tokenizer that grabs all the possible number sequences, then I have a
parser rule that, if it receives a RATIONAL or COMPLEX number, splits
it appropriately and sends each part back through the number rule to
correctly parse each part.

Here are the lexical rules, if anyone is interested.

fragment DIGIT : '0'..'9';
POS_INT : DIGIT+;
NEG_INT : '-' POS_INT;
POS_DECIMAL : DIGIT+ '.' DIGIT* | '.' DIGIT+;
NEG_DECIMAL : '-' POS_DECIMAL;
POS_RATIONAL : POS_INT '/' (POS_INT | NEG_INT);
NEG_RATIONAL : '-' POS_RATIONAL;
fragment POS_REAL : POS_DECIMAL | POS_INT | POS_RATIONAL;
fragment NEG_REAL : NEG_DECIMAL | NEG_INT | NEG_RATIONAL;

COMPLEX : (POS_REAL | NEG_REAL) '+' POS_REAL? 'i'
  | (POS_REAL | NEG_REAL) (NEG_REAL | '-') 'i'
  ;

WS : (' ' | '\t' | '\n' | '\r') { $channel = HIDDEN; }
  ;

And here's how the number rule handles a couple of examples. (I
translated to Java for the sake of being most useful to most people,
so there may be some typos.)

number returns [MyNumber value]
  : (POS_INT | NEG_INT) { $value = new MyInt($text); }
  | COMPLEX {
      int sep = Math.max($text.lastIndexOf('+'), $text.lastIndexOf('-'));
      String real = $text.substring(0, sep)
      String imag = $text.substring(sep+1)
      if (imag.equals("")) {
          imag = "1";
      }
      if ($text.charAt(sep) == '-') {
          imag = '-' + imag
      }
      Parser real_parser =
NumberParser(CommonTokenStream(numberLexer(ANTLRStringStream(real))));
      Parser imag_parser  =
NumberParser(CommonTokenStream(numberLexer(ANTLRStringStream(imag))));
      $value = new Complex(real_parser.number().getValue(),
imag_parser.number().getValue());
    }
  ;

I'm still having problems trying to include this grammar in another
grammar, but that's the subject of a forthcoming email.

Thanks again!
Todd

On Sun, Nov 16, 2008 at 1:30 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 09:50 16/11/2008, Todd O'Bryan wrote:
>>Assume that that both 2 * 3+2i and 2*3+2i should lex as NUMBER OP
>>NUMBER. What does that determine about my possible approaches? :-)
>
> It implies that you're going to experience pain with "2+3+2i" (or "2/3+2i",
> for that matter, given that you've already said that this ought to be a
> single NUMBER).  :)
>
> If you can require that whitespace is significant (ie. "2 / 3+2i" is two
> NUMBERs and a division, but "2/3+2i" is a single NUMBER, and "2 /3+2i" is
> simply illegal), then probably the simplest way to deal with this (and avoid
> duplication) is to define NUMBER as any sequence with a leading digit and
> any combination of digits and operators afterwards, with no whitespace:
>
> fragment DIGIT : '0'..'9';
> NUMBER : '-'? '.'? DIGIT (DIGIT | '+' | '-' | '/' | '.' | 'i')* ;
>
> This will of course be able to match invalid constructs as well, but you can
> deal with that at the parser / tree parser / driver code level (which
> permits better error messages anyway).
>
>

From antlr at mirality.co.nz  Sun Nov 16 10:44:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 17 Nov 2008 07:44:43 +1300
Subject: [antlr-interest] Confused about backtracking in lexer rules
In-Reply-To: <4920149F.40201@zip-it.org>
References: <4920149F.40201@zip-it.org>
Message-ID: <20081116184453.CD47D11EB82@www.antlr.org>

At 01:39 17/11/2008, William Rose wrote:
 >What I'm finding is that the lexer starts matching the URL,
 >gets to a point where it can't match the character, then
 >drops everything it has read so far and starts lexing from
 >the next character, losing the initially matched tokens.
 >
 >I've tried to find out how to stop this, but the best I've
 >come up with is options { backtrack = true; }, which didn't
 >work.  Syntactic or semantic predicates are often mentioned
 >as helpful, but I don't see how I can write a predicate to
 >help with this decision.

Backtracking is a parser concept -- it's not available in the 
lexer.

 >URL    :    LETTER (LETTER | DIGIT | HYPHEN)* COLON
 >            ~(SPACE | TAB | CR | LF)+
 >    ;
 >
 >TEXT    :    ~(COLON | SLASH | HYPHEN | ASTERISK |
 >             SPACE | TAB | CR | LF)*
 >    ;

When you have two toplevel rules like this, ANTLR basically looks 
at the input stream and uses as little lookahead as it can to 
choose between them.  In this case, seeing a single letter with a 
colon a little later is sufficient to choose URL, and once there 
it can't switch back to TEXT.  (I'm not even sure if it would look 
for the colon -- it might decide that the LETTER by itself is 
sufficient justification for choosing URL, since explicitly named 
characters trump exclusion sets, and the standard lookahead has 
trouble seeing through loops (because it can't use fixed 
lookahead.)

One way you can resolve this is to make your URL rule more 
specific -- eg. only consider it an URL if it starts with "http" 
or "ftp" or "mailto" or whatever other schemes you're expecting.

Otherwise you'll need to merge these into one rule and use a 
syntactic predicate to force complete lookahead (which is 
functionally equivalant to backtracking):

fragment URL : LETTER (LETTER | DIGIT | HYPHEN)* COLON
                ~(SPACE | TAB | CR | LF)+
              ;
TEXT : (URL) => URL { $type = URL; }
      | ~(COLON | SLASH | HYPHEN | ASTERISK | SPACE | TAB | CR | 
LF)*
      ;


From toddobryan at gmail.com  Sun Nov 16 11:08:38 2008
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sun, 16 Nov 2008 14:08:38 -0500
Subject: [antlr-interest] Import--can someone explain how to make it work
Message-ID: <904774730811161108q6dca710fjc06c62a54b83da72@mail.gmail.com>

Piggybacking on a recent post about import issues, I'm having trouble
understanding how everything fits together.

>From the Wiki, I've figured out that lexer grammars can only import
lexer grammars, parser grammars can only import parser grammars, and
combined grammars can only import lexer or parser grammars, but not
combined grammars.

If I read this correctly, you can only have a single combined grammar
in any grammar you write that imports other grammars and it has to be
*the* grammar that imports all the other grammars. Is that correct?

Is it also the case that a tokens section is only allowed in a
combined grammar? I know it's not allowed in a lexer grammar, but it
doesn't seem like it would make sense at all in a parser grammar, so
then there can only be one tokens section in any grammar that consists
of more than a single file. Again, is that correct?

Given these constraints, can somebody provide a decent heuristic for
how to break up grammars? I've got a bunch of pieces that need to fit
together, but given the constraints on putting them together, I'm not
sure where to start. I have some rules that combine parsing with
lexing and these can only go in the grammar that imports everything
else, but they don't logically belong there.

Am I missing something basic here, or is the grammar inheritance
system a work in progress that's still a bit too picky to be as useful
as it could be?

Todd

From jimi at temporal-wave.com  Sun Nov 16 11:51:34 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 16 Nov 2008 11:51:34 -0800
Subject: [antlr-interest] Confused about backtracking in lexer rules
In-Reply-To: <20081116184453.CD47D11EB82@www.antlr.org>
References: <4920149F.40201@zip-it.org>
	<20081116184453.CD47D11EB82@www.antlr.org>
Message-ID: <1226865094.17369.105.camel@jimi.temporal-wave.com>

On Mon, 2008-11-17 at 07:44 +1300, Gavin Lambert wrote:

> At 01:39 17/11/2008, William Rose wrote:
>  >What I'm finding is that the lexer starts matching the URL,
>  >gets to a point where it can't match the character, then



>               ;
> TEXT : (URL) => URL { $type = URL; }
>       | ~(COLON | SLASH | HYPHEN | ASTERISK | SPACE | TAB | CR | 
> LF)*
>       ;


Remember that lexer rules that can effectively match a zero length
string are meaningless. That * would have to be + :-)

To be honest I think that wiki syntax is so bad (I don't even find it
that helpful to marking things up), that a grammar to parser such a
thing is going to be so full of exceptions and hacks that it probably
isn't worth it. 

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081116/90740623/attachment.html 

From parrt at cs.usfca.edu  Sun Nov 16 11:54:11 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 16 Nov 2008 11:54:11 -0800
Subject: [antlr-interest] Confused about backtracking in lexer rules
In-Reply-To: <1226865094.17369.105.camel@jimi.temporal-wave.com>
References: <4920149F.40201@zip-it.org>
	<20081116184453.CD47D11EB82@www.antlr.org>
	<1226865094.17369.105.camel@jimi.temporal-wave.com>
Message-ID: <3A86F8CE-6E27-4720-BC04-D1F099698E36@cs.usfca.edu>


On Nov 16, 2008, at 11:51 AM, Jim Idle wrote:
> To be honest I think that wiki syntax is so bad (I don't even find  
> it that helpful to marking things up), that a grammar to parser such  
> a thing is going to be so full of exceptions and hacks that it  
> probably isn't worth it.

There's almost no syntax in a wiki format; it's all lexical structure.  
I've implemented to wiki like format, both of which I did using ANTLR  
lexers (in filter=true mode).  Works great.

Ter

From sztywny at gmail.com  Sun Nov 16 23:19:47 2008
From: sztywny at gmail.com (=?ISO-8859-1?Q?Jarek_Rzesz=F3tko?=)
Date: Mon, 17 Nov 2008 07:19:47 +0000
Subject: [antlr-interest] Doing things to rewritten AST nodes
Message-ID: <7b9f28470811162319g45baa8a8t76fde157e8b86d42@mail.gmail.com>

Hello!

I want to do a tree-to-tree rewrite in the semantic analysis of my toy
compiler, replacing ^('+' (* 5 10) 'foobar') with ^(STRING_PLUS (* 5
10) 'foobar') when one of the arguments to '+' is a string. I'm
running into trouble with this, through - I have my custom ASTNode
class for AST nodes (extending CommonTree), which among other things
keeps track of the type of the expression the node represents (string,
int etc.) How can I do something to the resulting tree after the
rewrite was done? I have rules likes this (I want to flatten the tree
for string concatenation too):

addition
    :  ^('+' a=addition_flatten b=addition_flatten) {
            TypeChecker.infer($start, $a.start, $b.start);
        }
        -> {$start.isOf(Types.String)}? ^(STRING_PLUS addition_flatten+)
        -> ^('+' addition_flatten+)
    ;

addition_flatten
    :  ^('+' (operands+=addition_flatten)+) {
            TypeChecker.infer($start, $operands);
        }
        -> {$start.isOf(Types.String)}? addition_flatten+
        -> ^('+' addition_flatten+)
    |  binary_expression -> binary_expression
    ;

TypeChecker.infer deduces the type of his first argument based on the
type of his second two arguments, and as a result calls something like
$start.setNodeType(Types.String). It works correctly, but as you may
expect, what gets the attribute set is the tree ^('+' (* 5 10)
'foobar') and not the rewritten tree ^(STRING_PLUS (* 5 10) 'foobar').
This ends up with a null pointer exception at some point.

Do you have any idea how to fix that? You can see the complete code
here: http://github.com/sztywny/xpl/tree/master

Cheers,
Jaros?aw Rzesz?tko

From davyd at fugro-fsi.com.au  Mon Nov 17 00:54:11 2008
From: davyd at fugro-fsi.com.au (Davyd Madeley)
Date: Mon, 17 Nov 2008 17:54:11 +0900
Subject: [antlr-interest] token precedence (and an ANTLRworks question)
Message-ID: <1226912051.751.137.camel@tc35>

I am having what looks like a problem with rule precedence.

I have lexer rules that look as following:

        IDENTIFIER
        	: CHAR (CHAR | DIGIT)*
        	;
        	
        TOKEN
        	: ~(NEWLINE|','|'>')+
        	;
        
        NEWLINE
        	: '\n'          // Line feed
                | '\r'          // Carriage return
                | '\u2028'      // Line separator
                | '\u2029'      // Paragraph separator
        	;
        
        fragment
        CHAR
        	: 'A' .. 'Z'
        	| 'a' .. 'z'
        	;
        
        fragment
        DIGIT
        	: '0' .. '9'
        	;

I'm trying to use it to parse the following text ('**' and '/' appear in
the parser rules):

	LINE,1500,4,60,60
	**INPUT/NOSICHECK

Into a token stream:

        |LINE|,|1500|,|4|,|60|,|60|
        |**|INPUT|/|NOSICHECK|

But instead what I'm ending up with is:

        |LINE|,|1500|,|4|,|60|,|60|
        |**INPUT/NOSICHECK|
        
This suggests to me that it's wrong of me to assume that the first rule
will be matched first. I can't find much discussion of precedence rules
in the ANTLR book.

Also, the ANTLRworks debugger can show you the token stream with little
red boxes around each token, but I can't seem to work out how to find
out the token type for that token, is there something I'm missing here?

Thanks in advance,
--davyd

-- 
Davyd Madeley        Software Engineer
Fugro Seismic Imaging, Perth Australia


From qwizv9b02 at sneakemail.com  Mon Nov 17 02:25:13 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 17 Nov 2008 11:25:13 +0100
Subject: [antlr-interest] Import problems with Antlr 3.1.1 - Whitespace
In-Reply-To: <2976F760-984F-458D-ACD5-719DE292E07B@cs.usfca.edu>
References: <mailman.0.1226692801.5116.antlr-interest@antlr.org>	<BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>
	<2976F760-984F-458D-ACD5-719DE292E07B@cs.usfca.edu>
Message-ID: <gfrgq9$n1a$1@ger.gmane.org>

Terence Parr schreef:
> I'll add to my list to look at.
> Ter
> On Nov 14, 2008, at 12:21 PM, Peterson, Joe wrote:
> 
>> Hello all,
>>
>> I'm having several some problems with import and I'm hoping y'all  
>> can help me understand the problems. I'll list them in separate e- 
>> mails as I fully qualify the problems.
>>
>> Basically, I have 15 or so related files that I need to parse. They  
>> all should use the same lexer rules, so I started out trying to put  
>> all the lexer rules into a single file that all the root grammars  
>> would import.  But that didn't work. I'm using Antlr 3.1.1  
>> (AntlrWorks 1.2) and when I compile, I'm using VC2008 (but my  
>> current problem happens even using the AntlrWorks interpreter).
>>
>> Here is my first problem... I can't seem to put all my lexer rules  
>> in a separate file because when I put the WS definition in a  
>> separate file, I get errors.  Take these overly simple sample files  
>> that demonstrate one of my issues:
>>
>> //// test.g Starts here
>> grammar test;
>> import testlexer;
>> version_info : VERSION VERSION_IDENTIFIER SEMICOLON ;
>> //// test.g Ends here
>>
>> //// testlexer.g starts here
>> lexer grammar testlexer;
>> VERSION : 'Version';
>> VERSION_IDENTIFIER : ('0'..'9')+ '.' ('0'..'9')+ ;
>> SEMICOLON : ';';
>> WS  : (' '|'\t' | '\r' | '\n')+ {$channel=HIDDEN;};
>> //// testlexer.g ends here
>>
>> //// input starts here
>> Version 1.0;
>> //// input ends here
>>
>> When I run it on a simple file it blows up after the version  
>> keyword... it's like it doesn't send the WS to the hidden channel.
>>
>> If I move the WS declaration into test.g, it works fine.
>>
>> Am I missing something with how imports work? Shouldn't I be able to  
>> put the WS declaration in the common lexer file?

I think I am having the same problem.  I wanted NEWLINEs to be ignored,
but at least the antlrIDE interpreter doesn?t.

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081117/475413d0/attachment.bin 

From sharwell at pixelminegames.com  Mon Nov 17 08:35:31 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 17 Nov 2008 10:35:31 -0600
Subject: [antlr-interest] Full C# port of ANTLR,
	also updated Visual Studio support
Message-ID: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>

Now that I have the ANTLR tool using full V3 grammars, I tied the tool
grammars directly into the Visual Studio language service. The previous
build of our language service reported syntax errors in some valid
grammars (including the ANTLR tool grammars themselves). This build
fixes those issues.

 

Also, I've posted a 7-zip (http://www.7-zip.org) archive containing only
the C# port of the Tool and its required StringTemplate and Runtime
dlls.

 

The current preview of our Visual Studio support and the binaries are
available on our site:

http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr:Relea
ses

 

Here is a Q&A regarding the new ports.

 

Are there any differences between this port and the Java package for the
Tool?

Functionally, there should be few to no differences. The command line
parameters should work the same as before, and any variation from this
should be reported as a bug. Under the hood, there is one very big
change. This build of the Tool and StringTemplate library were generated
entirely from ANTLR 3 grammars. The Java version of these items use
primarily ANTLR 2 grammars. The ANTLR 2 grammars are known to be stable,
and will likely be used for a while until we can verify the
functionality of the ANTLR 3 grammars across a wide range of usages.
Then we'll have to port these grammars back from C# to Java (which
really isn't the hard part).

 

What are the requirements to use these tools?

To use the C# port of the ANTLR 3 Tool, you need the following:

*         .NET Framework 3.5 SP1:
http://www.microsoft.com/downloads/details.aspx?familyid=ab99342f-5d1a-4
13d-8319-81da479ab0d7&displaylang=en

*         Visual J# Runtime:
http://www.microsoft.com/downloads/details.aspx?familyid=f72c74b3-ed0e-4
af8-ae63-2f0e42501be1&displaylang=en

 

To use the Visual Studio integration, please see the following page for
additional requirements:
http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr

 

This download includes "Antlr.Runtime.dll", and my grammar uses the
CSharp or CSharp2 target. Can I use this runtime?

No. This dll is only compatible with the unofficial CSharp3 target, and
is not licensed for distribution. You should continue using your current
target and runtime until we release the new target under an appropriate
license.

 

This download includes "Antlr3.StringTemplate.dll". Can I use it as my
StringTemplate runtime?

Not at this time. The C# port of the Tool depends on StringTemplate
support and uses this file. We will license this library for general use
at a later time.

 

Can this port of the Tool build grammars for other targets like Java, C,
etc.?

Yes. All targets should be updated. Let me know if there are any issues.

 

Is the source code for the Tool available?

We will release the source for the C# ports of the Tool, StringTemplate,
and the CSharp3 runtime under a BSD license as soon as possible. The
extra features such as full Visual Studio support, debugging, etc., will
be under a separate license. Among other things, we are working to
complete the following before releasing the code:

*         Verify proper functionality of runtime features including
debugging in the new Runtime library.

*         Clean up the code and remove dependence on the J# runtime.

*         Provide a mechanism for adding/removing/editing the supported
runtimes without forcing a rebuild of the Tool itself. Currently, the
.stg templates for all of the runtime libraries are embedded in the
executable.

 

Thank you,

Sam Harwell

nFringe Project Lead

Pixel Mine, Inc.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081117/f64a256d/attachment.html 

From brent.yates at gmail.com  Mon Nov 17 08:41:25 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Mon, 17 Nov 2008 11:41:25 -0500
Subject: [antlr-interest] Full C# port of ANTLR,
	also updated Visual Studio support
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
Message-ID: <6edc6c380811170841y6d3c2f1dub82ce9a8507415c2@mail.gmail.com>

Sam,

Good job.  Very cool work!

Brent Yates

On Mon, Nov 17, 2008 at 11:35 AM, Sam Harwell
<sharwell at pixelminegames.com>wrote:

>  Now that I have the ANTLR tool using full V3 grammars, I tied the tool
> grammars directly into the Visual Studio language service. The previous
> build of our language service reported syntax errors in some valid grammars
> (including the ANTLR tool grammars themselves). This build fixes those
> issues.
>
>
>
> Also, I've posted a 7-zip (http://www.7-zip.org) archive containing only
> the C# port of the Tool and its required StringTemplate and Runtime dlls.
>
> * *
>
> The current preview of our Visual Studio support and the binaries are
> available on our site:
>
> http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr:Releases
>
>
>
> *Here is a Q&A regarding the new ports.*
>
>
>
> *Are there any differences between this port and the Java package for the
> Tool?*
>
> Functionally, there should be few to no differences. The command line
> parameters should work the same as before, and any variation from this
> should be reported as a bug. Under the hood, there is one very big change.
> This build of the Tool and StringTemplate library were generated entirely
> from ANTLR 3 grammars. The Java version of these items use primarily ANTLR 2
> grammars. The ANTLR 2 grammars are known to be stable, and will likely be
> used for a while until we can verify the functionality of the ANTLR 3
> grammars across a wide range of usages. Then we'll have to port these
> grammars back from C# to Java (which really isn't the hard part).
>
>
>
> *What are the requirements to use these tools?*
>
> To use the C# port of the ANTLR 3 Tool, you need the following:
>
> ?         .NET Framework 3.5 SP1:
> http://www.microsoft.com/downloads/details.aspx?familyid=ab99342f-5d1a-413d-8319-81da479ab0d7&displaylang=en
>
> ?         Visual J# Runtime:
> http://www.microsoft.com/downloads/details.aspx?familyid=f72c74b3-ed0e-4af8-ae63-2f0e42501be1&displaylang=en
>
>
>
> To use the Visual Studio integration, please see the following page for
> additional requirements:
> http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr
>
>
>
> *This download includes "Antlr.Runtime.dll", and my grammar uses the
> CSharp or CSharp2 target. Can I use this runtime?*
>
> No. This dll is only compatible with the unofficial CSharp3 target, and is
> not licensed for distribution. You should continue using your current target
> and runtime until we release the new target under an appropriate license.
>
>
>
> *This download includes "Antlr3.StringTemplate.dll". Can I use it as my
> StringTemplate runtime?*
>
> Not at this time. The C# port of the Tool depends on StringTemplate support
> and uses this file. We will license this library for general use at a later
> time.
>
>
>
> *Can this port of the Tool build grammars for other targets like Java, C,
> etc.?*
>
> Yes. All targets should be updated. Let me know if there are any issues.
>
>
>
> *Is the source code for the Tool available?*
>
> We will release the source for the C# ports of the Tool, StringTemplate,
> and the CSharp3 runtime under a BSD license as soon as possible. The extra
> features such as full Visual Studio support, debugging, etc., will be under
> a separate license. Among other things, we are working to complete the
> following before releasing the code:
>
> ?         Verify proper functionality of runtime features including
> debugging in the new Runtime library.
>
> ?         Clean up the code and remove dependence on the J# runtime.
>
> ?         Provide a mechanism for adding/removing/editing the supported
> runtimes without forcing a rebuild of the Tool itself. Currently, the .stg
> templates for all of the runtime libraries are embedded in the executable.
>
>
>
> Thank you,
>
> Sam Harwell
>
> nFringe Project Lead
>
> Pixel Mine, Inc.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081117/6e7ff166/attachment.html 

From jaluber at gmx.de  Mon Nov 17 09:26:14 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 17 Nov 2008 18:26:14 +0100
Subject: [antlr-interest] Full C# port of ANTLR,
 also updated Visual Studio support
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
Message-ID: <4921A936.3080403@gmx.de>

Congratulations!

Sam Harwell schrieb:
...
> *Is the source code for the Tool available?*
> 
> We will release the source for the C# ports of the Tool, StringTemplate,
> and the CSharp3 runtime under a BSD license as soon as possible. The
> extra features such as full Visual Studio support, debugging, etc., will
> be under a separate license. Among other things, we are working to
> complete the following before releasing the code:
> 
> ?         Verify proper functionality of runtime features including
> debugging in the new Runtime library.
> 
> ?         Clean up the code and remove dependence on the J# runtime.

What's the reason for the existing dependency? Do you still use some
Java code?
> 
> ?         Provide a mechanism for adding/removing/editing the supported
> runtimes without forcing a rebuild of the Tool itself. Currently, the
> .stg templates for all of the runtime libraries are embedded in the
> executable.

I never used embedded files myself, but why don't you just put them into
a subdirectory? Then anyone can modify the templates.

Johannes
> 
>  
> 
> Thank you,
> 
> Sam Harwell
> 
> nFringe Project Lead
> 
> Pixel Mine, Inc.
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From antlr at mirality.co.nz  Mon Nov 17 11:48:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 18 Nov 2008 08:48:37 +1300
Subject: [antlr-interest] token precedence (and an ANTLRworks question)
In-Reply-To: <1226912051.751.137.camel@tc35>
References: <1226912051.751.137.camel@tc35>
Message-ID: <20081117194852.390512F4317@www.antlr.org>

At 21:54 17/11/2008, Davyd Madeley wrote:
 >        TOKEN
 >        	: ~(NEWLINE|','|'>')+
 >        	;
[...]
 >	LINE,1500,4,60,60
 >	**INPUT/NOSICHECK
 >
 >Into a token stream:
 >
 >        |LINE|,|1500|,|4|,|60|,|60|
 >        |**|INPUT|/|NOSICHECK|
 >
 >But instead what I'm ending up with is:
 >
 >        |LINE|,|1500|,|4|,|60|,|60|
 >        |**INPUT/NOSICHECK|
 >
 >This suggests to me that it's wrong of me to assume that the 
first
 >rule will be matched first. I can't find much discussion of
 >precedence rules in the ANTLR book.

Essentially how it works is that at the top-level ANTLR uses the 
least amount of lookahead it can get away with to choose between 
the top-level rules.  The order of the rules is unimportant 
(except when it can't decide between them any other way).  Once it 
is "inside" a rule, however, it uses only that rules' own 
conditions to decide when to stop, ignoring the possibility of 
stopping earlier and generating additional tokens.  (Which makes 
sense when you think about it.)

In this case, on seeing '*', ANTLR enters the TOKEN rule (since no 
other rule could possibly match that character), and won't leave 
the rule until it hits any of a newline, comma, or '>'.  Thus 
everything on that second line is matched as a single TOKEN token.

If you want to split the TOKEN up at things that might be 
IDENTIFIERs, then you'll need to add CHAR to the list of 
terminating characters in the TOKEN rule.

 >Also, the ANTLRworks debugger can show you the token stream with 

 >little red boxes around each token, but I can't seem to work out 

 >how to find out the token type for that token, is there 
something
 >I'm missing here?

Not that I know of; I've wished it'd do that for quite some 
time.  ANTLRworks is fairly weak at sorting out problems in the 
lexer; I've usually found that it's better to write my own unit 
tests for that purpose.


From tapetedepadaria at gmail.com  Mon Nov 17 12:08:13 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Mon, 17 Nov 2008 17:08:13 -0300
Subject: [antlr-interest] A bug at C# DLLs?
Message-ID: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>

Hello!

I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).

My grammar is:

tokens {
MODULE;
SPECIFICATION;
}
compilation : specification EOF! ;
specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
definition : module ';' ;
module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;
ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;

and I have this simple input for test:

module etal { };

And I got

Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},

which is odd, because ID should be 'etal'.

I changed the rule module using operators and got
NullReferenceException, for the same reason.

I am new at this, so I'm not sure how to handle. Is this a bug from
the DLLs that I should report or I am doing something wrong? Because I
tried the same grammar using ANTLRWorks and changing the language to
Java, and it worked like a charm, with no errors.

I don't know if this was already discussed, thought I searched for
this at the most recent Interest Archives. If it was, sorry.

Thank you all very much for any help.

 -- Rodrigo C. Lopes
 -- Also in r.cerqueira.lopes at gmail.com

From sharwell at pixelminegames.com  Mon Nov 17 12:09:08 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 17 Nov 2008 14:09:08 -0600
Subject: [antlr-interest] [antlr-dev] Full C# port of ANTLR,
	also updated Visual Studio support
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E888@Bloodymary.ironwillgames.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E898@Bloodymary.ironwillgames.com>

There was a bug in build 16828 that broke the targets codegen. I fixed
it and re-hosted the port as build 16839. The link is still on the
releases page.

 

Sam

 

From: antlr-dev-bounces at antlr.org [mailto:antlr-dev-bounces at antlr.org]
On Behalf Of Sam Harwell
Sent: Monday, November 17, 2008 10:36 AM
To: antlr-interest at antlr.org; ANTLR-dev Dev
Subject: [antlr-dev] Full C# port of ANTLR,also updated Visual Studio
support

 

The current preview of our Visual Studio support and the binaries are
available on our site:

http://wiki.pixelminegames.com/index.php?title=Tools:nFringe:Antlr:Relea
ses

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081117/9f894ad9/attachment.html 

From jaluber at gmx.de  Mon Nov 17 13:57:36 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 17 Nov 2008 22:57:36 +0100
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
Message-ID: <4921E8D0.90900@gmx.de>

Rodrigo C. L. schrieb:
> Hello!
> 
> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
> 
> My grammar is:
> 
> tokens {
> MODULE;
> SPECIFICATION;
> }
> compilation : specification EOF! ;
> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
> definition : module ';' ;
> module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;
> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> 
> and I have this simple input for test:
> 
> module etal { };
> 
> And I got
> 
> Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
> 
> which is odd, because ID should be 'etal'.
> 
> I changed the rule module using operators and got
> NullReferenceException, for the same reason.
> 
> I am new at this, so I'm not sure how to handle. Is this a bug from
> the DLLs that I should report or I am doing something wrong? Because I
> tried the same grammar using ANTLRWorks and changing the language to
> Java, and it worked like a charm, with no errors.
> 
> I don't know if this was already discussed, thought I searched for
> this at the most recent Interest Archives. If it was, sorry.
> 
> Thank you all very much for any help.

I believe the cause lies in a bug in the Mono C# compiler. Can you
compile the sources yourself via Visual Studio? Under windows the Nant
script is supposed to be working.

Johannes
> 
>  -- Rodrigo C. Lopes
>  -- Also in r.cerqueira.lopes at gmail.com
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From tapetedepadaria at gmail.com  Mon Nov 17 16:43:59 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Mon, 17 Nov 2008 21:43:59 -0300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <4921E8D0.90900@gmx.de>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<4921E8D0.90900@gmx.de>
Message-ID: <da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>

hello, thanks for the help..

I did all this throught visual studio with .NET, not Mono. I did
compile the grammar with the jar (3.1.1). I'm going to try with NAnt,
but I'm not confident that it'll work.

Anyway, didn't it ocurred with anyone?

My ASTLabelType is CommonTree. Does it help if I change it?

I'm sorry the urge of the questions. I have kind of a deadline. :(

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com



2008/11/17 Johannes Luber <jaluber at gmx.de>:

> I believe the cause lies in a bug in the Mono C# compiler. Can you
> compile the sources yourself via Visual Studio? Under windows the Nant
> script is supposed to be working.
>
> Johannes
>
> Rodrigo C. L. schrieb:
>> Hello!
>>
>> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
>>
>> My grammar is:
>>
>> tokens {
>> MODULE;
>> SPECIFICATION;
>> }
>> compilation : specification EOF! ;
>> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>> definition : module ';' ;
>> module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;
>> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>>
>> and I have this simple input for test:
>>
>> module etal { };
>>
>> And I got
>>
>> Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>
>> which is odd, because ID should be 'etal'.
>>
>> I changed the rule module using operators and got
>> NullReferenceException, for the same reason.
>>
>> I am new at this, so I'm not sure how to handle. Is this a bug from
>> the DLLs that I should report or I am doing something wrong? Because I
>> tried the same grammar using ANTLRWorks and changing the language to
>> Java, and it worked like a charm, with no errors.
>>
>> I don't know if this was already discussed, thought I searched for
>> this at the most recent Interest Archives. If it was, sorry.
>>
>> Thank you all very much for any help.
>>
>>  -- Rodrigo C. Lopes
>>  -- Also in r.cerqueira.lopes at gmail.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Mon Nov 17 16:53:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 17 Nov 2008 16:53:26 -0800
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<4921E8D0.90900@gmx.de>
	<da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
Message-ID: <1226969606.3410.60.camel@jimi.temporal-wave.com>

On Mon, 2008-11-17 at 21:43 -0300, Rodrigo C. L. wrote:

> hello, thanks for the help..
> 
> I did all this throught visual studio with .NET, not Mono. I did
> compile the grammar with the jar (3.1.1). I'm going to try with NAnt,
> but I'm not confident that it'll work.
> 
> Anyway, didn't it ocurred with anyone?
> 
> My ASTLabelType is CommonTree. Does it help if I change it?
> 
> I'm sorry the urge of the questions. I have kind of a deadline. :(
> 
>  -- Rodrigo C. Lopes
>  -- Tamb?m em r.cerqueira.lopes at gmail.com
> 
> 
> 
> 2008/11/17 Johannes Luber <jaluber at gmx.de>:
> 
> > I believe the cause lies in a bug in the Mono C# compiler. Can you
> > compile the sources yourself via Visual Studio? Under windows the Nant
> > script is supposed to be working.
> >
> > Johannes
> >
> > Rodrigo C. L. schrieb:
> >> Hello!
> >>
> >> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
> >>
> >> My grammar is:
> >>
> >> tokens {
> >> MODULE;
> >> SPECIFICATION;
> >> }
> >> compilation : specification EOF! ;
> >> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
> >> definition : module ';' ;
> >> module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;



I suspect that your specification rule can return nothing. Try

-> ^(MODULE ID specification*) 


You don't need to try nant or anything, using .Net and VS is fine.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081117/9889a0c0/attachment.html 

From antlr at shmuelhome.mine.nu  Mon Nov 17 17:08:32 2008
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue, 18 Nov 2008 03:08:32 +0200
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <1226969606.3410.60.camel@jimi.temporal-wave.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>	<4921E8D0.90900@gmx.de>	<da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
	<1226969606.3410.60.camel@jimi.temporal-wave.com>
Message-ID: <49221590.4090708@shmuelhome.mine.nu>

Jim Idle wrote:
> On Mon, 2008-11-17 at 21:43 -0300, Rodrigo C. L. wrote:
>> >>
>> >> tokens {
>> >> MODULE;
>> >> SPECIFICATION;
>> >> }
>> >> compilation : specification EOF! ;
>> >> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>> >> definition : module ';' ;
>> >> module : 'module' ID '{' specification '}' -> ^(MODULE ID 
>> specification) ;
>>     
>
>
> I suspect that your specification rule can return nothing. Try
>
> -> ^(MODULE ID specification*)
>
>
> You don't need to try nant or anything, using .Net and VS is fine.
>
> Jim
>   
Really? Why wouldn't it at least return the token SPECIFICATION. Maybe 
SPECIFICATION is undefined.



From tapetedepadaria at gmail.com  Mon Nov 17 18:02:37 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Mon, 17 Nov 2008 23:02:37 -0300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <49221590.4090708@shmuelhome.mine.nu>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<4921E8D0.90900@gmx.de>
	<da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
	<1226969606.3410.60.camel@jimi.temporal-wave.com>
	<49221590.4090708@shmuelhome.mine.nu>
Message-ID: <da9e26b90811171802q3b802d34w5dbd40ee0ecfb066@mail.gmail.com>

When I debbugged at antlrworks, it made a "specification" leaf.

Besides, it does not reach this part, because it throws the exception
while making the tree at ID.

Maybe if I change ID to id and make

id returns [String value] : l=ID { $value = $l.text; } ;

and making a leaf node with id.value. Is it possible?

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com



2008/11/17 shmuel siegel <antlr at shmuelhome.mine.nu>:
> Jim Idle wrote:
>> On Mon, 2008-11-17 at 21:43 -0300, Rodrigo C. L. wrote:
>>> >>
>>> >> tokens {
>>> >> MODULE;
>>> >> SPECIFICATION;
>>> >> }
>>> >> compilation : specification EOF! ;
>>> >> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>>> >> definition : module ';' ;
>>> >> module : 'module' ID '{' specification '}' -> ^(MODULE ID
>>> specification) ;
>>>
>>
>>
>> I suspect that your specification rule can return nothing. Try
>>
>> -> ^(MODULE ID specification*)
>>
>>
>> You don't need to try nant or anything, using .Net and VS is fine.
>>
>> Jim
>>
> Really? Why wouldn't it at least return the token SPECIFICATION. Maybe
> SPECIFICATION is undefined.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at mirality.co.nz  Tue Nov 18 01:48:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 18 Nov 2008 22:48:28 +1300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.co
 m>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
Message-ID: <20081118094841.2B9D73D168C@www.antlr.org>

At 09:08 18/11/2008, Rodrigo C. L. wrote:
 >compilation : specification EOF! ;
 >specification : ( definition )* -> ^( SPECIFICATION definition* 
);
 >definition : module ';' ;
 >module : 'module' ID '{' specification '}' -> ^(MODULE ID
 >specification) ;
[...]
 >Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
 >
 >which is odd, because ID should be 'etal'.
 >
 >I changed the rule module using operators and got
 >NullReferenceException, for the same reason.

I'm not sure why the error message mentions ID, but I suspect the 
problem is actually with the 'definition' rule.  It's the only 
rule in the group that doesn't contain any tree construction at 
all (neither rewrite expressions nor tree operators).

I've never been entirely sure what ANTLR does with rules that 
don't define tree construction, but I seem to recall it causing 
problems at some point.  So try:

definition : module ';'! ;


From rsm at ti.com  Tue Nov 18 02:13:18 2008
From: rsm at ti.com (Mitra, Raj)
Date: Tue, 18 Nov 2008 15:43:18 +0530
Subject: [antlr-interest] Bug in comments
Message-ID: <EAF47CD23C76F840A9E7FCE10091EFAB0292FE5E38@dbde02.ent.ti.com>

Hi,

This looks like a bug (version 3.1.1), can anyone please confirm?

Here is an edited version of T.g (from the antlr book):

{---------start of file -----
grammar T;
/*
// ASSIGN='='
*/
/** Match things like "call foo;" */
r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
ID: 'a'..'z' + ;
WS: (' ' |'\n' |'\r' )+ {$channel=HIDDEN;} ; // ignore whitespace
---------end of file-----}

Here, the only extra lines I have added are the comments.
Here is the error I get when I run antlr:

ANTLR Parser Generator  Version 3.1.1
error(10):  internal error: Exception T.g:3:9: expecting '*', found 'N'@org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:333): unexpected stream error from parsing T.g
error(150):  grammar file T.g has no rules
error(100): T.g:0:0: syntax error: assign.types: <AST>:1:9: unexpected AST node: T
error(100): T.g:0:0: syntax error: define: <AST>:1:9: unexpected AST node: T

This happens with both kinds of comments: "//" as well as "/*...*/"

Best Regards
Raj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081118/bb837af4/attachment.html 

From james.abley at gmail.com  Tue Nov 18 04:13:49 2008
From: james.abley at gmail.com (James Abley)
Date: Tue, 18 Nov 2008 12:13:49 +0000
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
	<49186F9A.6090402@quantdev.com>
	<23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>
Message-ID: <23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>

Hi all,

Sorry, I'm still stuck with this. I have taken the sample grammar from
the book and reduced it as small as I know how currently.


grammar Expr;

options {
	output=AST;
	ASTLabelType=CommonTree;
	k = 1;
}

prog	:	(stat {System.out.println($stat.tree.toStringTree());} )+ ;

stat	:	expr	-> expr
	;
	
expr	:	multExpr (('+' ^  | '-'^) multExpr)*
	;
	
multExpr	:	atom ('*'^ atom)*
	;
	
atom	:	INT
	|	function
	/* We don't want nodes for the parentheses */
	|	'('! expr ')'!
	;

/* We don't want nodes for the paretheses or commas. */	
function	:	FUNCNAME^ (WS)* '('! (WS)* (expr ( (WS)* ','! (WS)* expr )* )? ')'! ;
	
FUNCNAME	:	( 'a' .. 'z' | 'A' .. 'Z')+  ;
INT	:	'0' .. '9'+ ;
WS	:	( ' ' | '\t' | '\n' | '\r' ) + {skip(); };


I then have a tree grammar to go with this AST grammar.



tree grammar Eval;

options {
	tokenVocab=Expr;	// read the token types from Expr.tokens
	ASTLabelType=CommonTree;
}

prog	:	stat+ ;

stat	:	expr
		{ System.out.println($expr.value); }
	;
	
expr returns [int value]
	:	^('+' a=expr b=expr) { $value = a+b; }
	|	^('-' a=expr b=expr) { $value = a-b; }
	|	^('*' a=expr b=expr) { $value = a*b; }
	|	^( FUNCNAME expr*) { /* What do I do here? */ }
	|	INT	{$value = Integer.parseInt($INT.text); }
	;


I'm not sure how to plugin in the function evaluation using just the
tree grammar.

    @Test
    public void simpleAdditionDefinedInGrammar() throws Exception {
        ExprLexer lexer = new ExprLexer(new ANTLRStringStream("1+15+23-3"));
        CommonTokenStream tokens = new CommonTokenStream(lexer);

        ExprParser parser = new ExprParser(tokens);
        ExprParser.expr_return r = parser.expr();

        CommonTree tree = (CommonTree) r.getTree();

        CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);

        Eval eval = new Eval(nodes);

        assertEquals(36, eval.expr());
    }

Evaluation using the rules defined in the grammar works fine, as per
my test above. I need to have an environment to allow function binding
and dispatch so that I can have a simple Java API for people to
implement functions against, without having to know ANTLR and alter
the grammar.

Am I approaching this problem in the right way?

I have been able to walk the CommonTree that I get back from the
parser, but I'm not sure I'm doing that in the right way either. Is
there an existing ANTLR API to walk / visit trees?

[1] JUnit TestEval - http://pastie.org/317730 - the second test fails
since my tree grammar currently has no way to do any sort of lookup to
a function.
[2] Function - http://pastie.org/317734
[3] AddFunction - http://pastie.org/317733
[4] Environment - http://pastie.org/317736
[5] TreeEvaluator - http://pastie.org/317737

Cheers,

James

2008/11/11 James Abley <james.abley at gmail.com>:
> Hi Michael,
>
> That helps, thanks. I have something like that, but I'm a little stuck
> with getting the Eval.g grammar going. I think I need to start with a
> simpler grammar and get a better handle on how that will hang
> together, and then see if I still don't understand how to apply that
> to my problem, and then take the CMinus example from the book and play
> around with that a little.
>
> Cheers,
>
> James
>
>
> 2008/11/10 Michael Lee <antlr at quantdev.com>:
>> Hi, James
>>
>> I am a newbie as well. Past 4 weeks, I worked on creating an expression
>> engine that will evaluate an FIX message during runtime. What I wanted to is
>> 'compile' the expression into an expression during the program start time
>> and evaluate them runtime. It also require to have binding to 'Msg' at
>> evaluation and thread-safe.
>>
>> For example,
>>
>> Msg["PRICE"] < 5.00
>>
>> Msg["PRICE"] will be evaluated during runtime - value is determined by
>> FixMsg passed in for evaluation.
>>
>> For this, I created two separate files (Eval.g and Expr.g). One for parsing
>> expression(Expr.g) and one for assembling parsed expression into an
>> organized expression object(Eval.g).
>>
>> Eval.g is a tree grammar. Here is a simplified snippet...
>>
>> expression returns [ Expression exp ]
>> : ^(op='+' a=expression b=expression ) { $exp =
>> NumericOperationExpression.createOperation( "+" , a , b); }
>> | ^(op='-' a=expression b=expression ) { $exp =
>> NumericOperationExpression.createOperation( "-" , a , b); }
>> | ^(op='*' a=expression b=expression ) { $exp =
>> NumericOperationExpression.createOperation( "*" , a , b); }
>> | ^(op='/' a=expression b=expression ) { $exp =
>> NumericOperationExpression.createOperation( "/" , a , b); }
>> ;
>>
>> I create an expression object by calling...
>>
>> InputStream is = new ByteArrayInputStream( exprString.getBytes());
>>
>> // Create an input character stream from standard in
>> ANTLRInputStream input = new ANTLRInputStream(is);
>>
>> // Create an ExprLexer that feeds from that stream
>> ExprLexer lexer = new ExprLexer(input);
>>
>> // Create a stream of tokens fed by the lexer
>> CommonTokenStream tokens = new CommonTokenStream(lexer);
>>
>> // Create a parser that feeds off the token stream
>> ExprParser parser = new ExprParser(tokens);
>>
>> // Begin parsing at rule prog, get return value structure
>> ExprParser.expression_return r = parser.expression();
>>
>> // WALK RESULTING TREE
>> CommonTree t = (CommonTree)r.getTree(); // get tree from parser
>>
>> // Create a tree node stream from resulting tree
>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
>>
>> Eval walker = new Eval(nodes); // create a tree parser
>> Expression expression = walker.expression();
>>
>>
>> Expression.evaluate has one argument - Msg. You can expand this to include
>> context-binding instead of Msg.
>>
>> Basically, an expression is compiled during the program start time and
>> evaluate them during the runtime with some context.
>>
>> I hope this helps.
>>
>> Michael J. Lee
>>
>>
>>
>> James Abley wrote:
>>>
>>> Hi,
>>>
>>> I'm an ANTLR newbie. A code base that I work on has various expression
>>> evaluation aspects. I have to add to this by defining various
>>> functions that can be evaluated. ANTLR seemed like a good way of
>>> separating out the parsing aspects and should let my colleagues
>>> concentrate on just defining and plugging in new functions without
>>> having to know much about parsing, etc. I've skimmed the ANTLR
>>> Reference book, but don't quite have the time to go in depth at this
>>> point.
>>>
>>> I've written a grammar, which seems to do what I need. Doubtless it
>>> could be trimmed a bit as I learn more. Where I'm stuck is the
>>> connection between having a grammar which can parse the input and how
>>> it gets evaluated.
>>>
>>> The baggage that I'm struggling with is how to define my environment,
>>> bind variables, create stack frames, etc.
>>>
>>> I think this would be as part of a tree grammar the re-uses the tokens
>>> from the AST grammar, but would like to confirm.
>>>
>>> Cheers,
>>>
>>> James
>>>
>>>
>>>
>>> grammar Eval;
>>>
>>> options {
>>>        output = AST;
>>> //      tokenVocab=Expr; // Read token types from Expr.tokens resource
>>> //      ASTLabelType=CommonTree;    // The Java type of the nodes.
>>> }
>>>
>>> tokens {
>>>        FUNC;   // function call
>>>        STR;
>>> }
>>>
>>> @parser::header {
>>> package com.example.expression;
>>> }
>>>
>>> @lexer::header {
>>> package com.example.expression;
>>> }
>>>
>>> stat    :       expr+;
>>>
>>> /*
>>> For now, we define expr very basically. We don't need to support
>>> addition, multiplication or other operators. But if we
>>> do, the grammar is easy to alter.
>>> */
>>> expr    :       atom
>>>        ;
>>> //multExpr ( ( '+' | '-') multExpr)*;
>>>
>>> //multExpr
>>> //      :       unaryExpr (( '*' | '/') unaryExpr)*;
>>>
>>> //unaryExpr
>>> //      :       ('+' | '-')?  atom
>>> //      ;
>>>
>>> /* Basic constituent of an expression.*/
>>> atom    :       var
>>>        |       LPAREN expr RPAREN      // Rule to allow nested
>>> expressions.
>>>        |       functionCall
>>>        |       stringLiteral
>>>        |       number
>>>        ;
>>>
>>> functionCall
>>>        :       functionName LPAREN ( expr (COMMA expr)* )? RPAREN      ->
>>> ^(FUNC
>>> functionName expr*)
>>>        ;
>>>
>>> functionName
>>>        :       ALPHA (ALPHA | '-' | '_' | DIGIT )* ;
>>> /*
>>> Added to indicate how we currently reference bound variables in
>>> expressions.. This lets us parse them easily enough.
>>> with a view to consolidating our expression evaluation code into this
>>> ANTLR-based version.
>>> */
>>> var     :       '$' ALPHA (ALPHA | '-' | '_' | DIGIT)*
>>>        ;
>>>
>>> stringLiteral   :       '"'  ~'"'* '"'
>>>        |       '\'' ~'\''* '\''
>>>        ;
>>>
>>> number  :       DIGIT+ ('.' DIGIT+)?
>>>        ;
>>>
>>> DIGIT
>>>        :       '0' .. '9';
>>>
>>> ALPHA
>>>        :        'a' .. 'z'
>>>        |        'A' .. 'Z';
>>>
>>> COMMA
>>>        :       (WS* ',' WS*);
>>>
>>> LPAREN
>>>        :       (WS*  '(' WS*);
>>> RPAREN
>>>        :       (WS* ')' WS*);
>>>
>>> WS
>>>        :       ' '
>>>        |       '\t';
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>
>>
>

From micha-1 at fantasymail.de  Tue Nov 18 04:54:18 2008
From: micha-1 at fantasymail.de (micha)
Date: Tue, 18 Nov 2008 13:54:18 +0100
Subject: [antlr-interest] possible bug?
Message-ID: <200811181354.18640.micha-1@fantasymail.de>

the followinig lexer grammar:
 lexer grammar Lexbug;

 SLASH: '/';
 POINT: '.';

 fragment DIGIT: '0'..'9';
 fragment BYTE: DIGIT | '1'..'9' DIGIT | '1' DIGIT DIGIT | '2' '0'..'4'
 DIGIT | '25' '0'..'6';

 IP: BYTE POINT BYTE POINT BYTE POINT BYTE;
 NUMBER: '0' | '1'..'9' DIGIT*;


produces 13kb of java code and all works well.

If I add the definition:
 IPNET: IP SLASH NUMBER;

then I get 22MB output (!)

Is this o.k.? I didn't thought, that this rule requires so much code :-)

cheer
 Michael





From micha-1 at fantasymail.de  Tue Nov 18 05:16:23 2008
From: micha-1 at fantasymail.de (micha)
Date: Tue, 18 Nov 2008 14:16:23 +0100
Subject: [antlr-interest] possible bug?
In-Reply-To: <200811181354.18640.micha-1@fantasymail.de>
References: <200811181354.18640.micha-1@fantasymail.de>
Message-ID: <200811181416.24375.micha-1@fantasymail.de>

On Tuesday 18 November 2008 13:54:18 micha wrote:
>
> then I get 22MB output (!)
>
> Is this o.k.? I didn't thought, that this rule requires so much code :-)

answering myself:

the error was with antlr 3.0.x (the debian package). With antlr 3.1.1 it 
works...

 Michael




From tapetedepadaria at gmail.com  Tue Nov 18 05:27:13 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Tue, 18 Nov 2008 10:27:13 -0300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <49228f79.020bca0a.2ffd.57a4SMTPIN_ADDED@mx.google.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<49228f79.020bca0a.2ffd.57a4SMTPIN_ADDED@mx.google.com>
Message-ID: <da9e26b90811180527q41f36e1chf570d890f4d31e37@mail.gmail.com>

Tried that too.

The error is not at definition. I made this simple grammar:


grammar Test;

options {
	language=CSharp2;
    output=AST;
    ASTLabelType=CommonTree;
}

phrase : WORD ( ',' WORD ) -> ^( ',' WORD+ ) ;


WORD : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;

WS : ( '\t' | ' ' | '\r' | '\n' | '\u000C' )+ 	{ $channel=HIDDEN; } ;


and the very same error persists at WORD.

Doesn't it happen with anyone else?

I'll try with some older release..

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com



2008/11/18 Gavin Lambert <antlr at mirality.co.nz>:
> At 09:08 18/11/2008, Rodrigo C. L. wrote:
>>compilation : specification EOF! ;
>>specification : ( definition )* -> ^( SPECIFICATION definition* );
>>definition : module ';' ;
>>module : 'module' ID '{' specification '}' -> ^(MODULE ID
>>specification) ;
> [...]
>>Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>
>>which is odd, because ID should be 'etal'.
>>
>>I changed the rule module using operators and got
>>NullReferenceException, for the same reason.
>
> I'm not sure why the error message mentions ID, but I suspect the problem is
> actually with the 'definition' rule.  It's the only rule in the group that
> doesn't contain any tree construction at all (neither rewrite expressions
> nor tree operators).
>
> I've never been entirely sure what ANTLR does with rules that don't define
> tree construction, but I seem to recall it causing problems at some point.
>  So try:
>
> definition : module ';'! ;
>
>

From tapetedepadaria at gmail.com  Tue Nov 18 06:25:44 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Tue, 18 Nov 2008 11:25:44 -0300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <da9e26b90811180527q41f36e1chf570d890f4d31e37@mail.gmail.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<49228f79.020bca0a.2ffd.57a4SMTPIN_ADDED@mx.google.com>
	<da9e26b90811180527q41f36e1chf570d890f4d31e37@mail.gmail.com>
Message-ID: <da9e26b90811180625k383a422el1f4c0c2d26e37c68@mail.gmail.com>

I forgot to tell. The error occurs when I construct the tree..

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com



2008/11/18 Rodrigo C. L. <tapetedepadaria at gmail.com>:
> Tried that too.
>
> The error is not at definition. I made this simple grammar:
>
>
> grammar Test;
>
> options {
>        language=CSharp2;
>    output=AST;
>    ASTLabelType=CommonTree;
> }
>
> phrase : WORD ( ',' WORD ) -> ^( ',' WORD+ ) ;
>
>
> WORD : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>
> WS : ( '\t' | ' ' | '\r' | '\n' | '\u000C' )+   { $channel=HIDDEN; } ;
>
>
> and the very same error persists at WORD.
>
> Doesn't it happen with anyone else?
>
> I'll try with some older release..
>
>  -- Rodrigo C. Lopes
>  -- Tamb?m em r.cerqueira.lopes at gmail.com
>
>
>
> 2008/11/18 Gavin Lambert <antlr at mirality.co.nz>:
>> At 09:08 18/11/2008, Rodrigo C. L. wrote:
>>>compilation : specification EOF! ;
>>>specification : ( definition )* -> ^( SPECIFICATION definition* );
>>>definition : module ';' ;
>>>module : 'module' ID '{' specification '}' -> ^(MODULE ID
>>>specification) ;
>> [...]
>>>Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>>
>>>which is odd, because ID should be 'etal'.
>>>
>>>I changed the rule module using operators and got
>>>NullReferenceException, for the same reason.
>>
>> I'm not sure why the error message mentions ID, but I suspect the problem is
>> actually with the 'definition' rule.  It's the only rule in the group that
>> doesn't contain any tree construction at all (neither rewrite expressions
>> nor tree operators).
>>
>> I've never been entirely sure what ANTLR does with rules that don't define
>> tree construction, but I seem to recall it causing problems at some point.
>>  So try:
>>
>> definition : module ';'! ;
>>
>>
>

From sharwell at pixelminegames.com  Tue Nov 18 08:05:44 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 18 Nov 2008 10:05:44 -0600
Subject: [antlr-interest] possible bug?
In-Reply-To: <200811181354.18640.micha-1@fantasymail.de>
References: <200811181354.18640.micha-1@fantasymail.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E8B1@Bloodymary.ironwillgames.com>

You might try the following:

fragment IP : ;
fragment IPNET : ;

NUMBER
  : NumberFormat
    ( POINT NumberFormat POINT NumberFormat POINT NumberFormat {$type =
IP;}
      ( SLASH NumberFormat {$type = IPNET;}
      )?
    )?
  ;

NumberFormat
  : '0' | '1'..'9' DIGIT*
  ;

Then validate a proper IP either at the end of the number rule, or
possibly in the parser, so you can print an informative message about a
malformed IP.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of micha
Sent: Tuesday, November 18, 2008 6:54 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] possible bug?

the followinig lexer grammar:
 lexer grammar Lexbug;

 SLASH: '/';
 POINT: '.';

 fragment DIGIT: '0'..'9';
 fragment BYTE: DIGIT | '1'..'9' DIGIT | '1' DIGIT DIGIT | '2' '0'..'4'
 DIGIT | '25' '0'..'6';

 IP: BYTE POINT BYTE POINT BYTE POINT BYTE;
 NUMBER: '0' | '1'..'9' DIGIT*;


produces 13kb of java code and all works well.

If I add the definition:
 IPNET: IP SLASH NUMBER;

then I get 22MB output (!)

Is this o.k.? I didn't thought, that this rule requires so much code :-)

cheer
 Michael





List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From jaluber at gmx.de  Tue Nov 18 08:26:45 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 18 Nov 2008 17:26:45 +0100
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>	
	<4921E8D0.90900@gmx.de>
	<da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
Message-ID: <4922ECC5.8060402@gmx.de>

Rodrigo C. L. schrieb:
> hello, thanks for the help..
> 
> I did all this throught visual studio with .NET, not Mono. I did
> compile the grammar with the jar (3.1.1). I'm going to try with NAnt,
> but I'm not confident that it'll work.
> 
> Anyway, didn't it ocurred with anyone?
> 
> My ASTLabelType is CommonTree. Does it help if I change it?
> 
> I'm sorry the urge of the questions. I have kind of a deadline. :(

Sorry, I just saw that I didn't write which sources I meant. In that
particular case it is the runtime itself which has to be compiled with
VS, not the generated sources.

Johannes
> 
>  -- Rodrigo C. Lopes
>  -- Tamb?m em r.cerqueira.lopes at gmail.com
> 
> 
> 
> 2008/11/17 Johannes Luber <jaluber at gmx.de>:
> 
>> I believe the cause lies in a bug in the Mono C# compiler. Can you
>> compile the sources yourself via Visual Studio? Under windows the Nant
>> script is supposed to be working.
>>
>> Johannes
>>
>> Rodrigo C. L. schrieb:
>>> Hello!
>>>
>>> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
>>>
>>> My grammar is:
>>>
>>> tokens {
>>> MODULE;
>>> SPECIFICATION;
>>> }
>>> compilation : specification EOF! ;
>>> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>>> definition : module ';' ;
>>> module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;
>>> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>>>
>>> and I have this simple input for test:
>>>
>>> module etal { };
>>>
>>> And I got
>>>
>>> Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>>
>>> which is odd, because ID should be 'etal'.
>>>
>>> I changed the rule module using operators and got
>>> NullReferenceException, for the same reason.
>>>
>>> I am new at this, so I'm not sure how to handle. Is this a bug from
>>> the DLLs that I should report or I am doing something wrong? Because I
>>> tried the same grammar using ANTLRWorks and changing the language to
>>> Java, and it worked like a charm, with no errors.
>>>
>>> I don't know if this was already discussed, thought I searched for
>>> this at the most recent Interest Archives. If it was, sorry.
>>>
>>> Thank you all very much for any help.
>>>
>>>  -- Rodrigo C. Lopes
>>>  -- Also in r.cerqueira.lopes at gmail.com
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
> 


From micha-1 at fantasymail.de  Tue Nov 18 10:58:13 2008
From: micha-1 at fantasymail.de (Micha)
Date: Tue, 18 Nov 2008 19:58:13 +0100
Subject: [antlr-interest] possible bug?
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E8B1@Bloodymary.ironwillgames.com>
References: <200811181354.18640.micha-1@fantasymail.de>
	<86403CA0939415448BCCB83855EFE09A64E8B1@Bloodymary.ironwillgames.com>
Message-ID: <200811181958.13824.micha-1@fantasymail.de>

On Tuesday 18 November 2008 17:05:44 Sam Harwell wrote:
> You might try the following:
>
>   : NumberFormat
>
>     ( POINT NumberFormat POINT NumberFormat POINT NumberFormat {$type =
> IP;}
>       ( SLASH NumberFormat {$type = IPNET;}
>       )?
>     )?
>   ;
>

nice, it's the first try with antlr, I haven't known then $type = token thing
thanks,
 Michael


From tapetedepadaria at gmail.com  Tue Nov 18 12:05:56 2008
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Tue, 18 Nov 2008 17:05:56 -0300
Subject: [antlr-interest] A bug at C# DLLs?
In-Reply-To: <4922ECC5.8060402@gmx.de>
References: <da9e26b90811171208j6a9fa32duc673a5fdf7fc5622@mail.gmail.com>
	<4921E8D0.90900@gmx.de>
	<da9e26b90811171643l33b29031vdce17f576849b945@mail.gmail.com>
	<4922ECC5.8060402@gmx.de>
Message-ID: <da9e26b90811181205u5ad41a62ndc9bcbebe3ba794@mail.gmail.com>

ok, now it's working. If and when I find the cause of what was going
on, I'll report.

And definition was really trouble. I changed module to generate
^(MODULE ID specification?) and now it's going ok.

thank you all, anyway =]

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com



2008/11/18 Johannes Luber <jaluber at gmx.de>:
> Rodrigo C. L. schrieb:
>> hello, thanks for the help..
>>
>> I did all this throught visual studio with .NET, not Mono. I did
>> compile the grammar with the jar (3.1.1). I'm going to try with NAnt,
>> but I'm not confident that it'll work.
>>
>> Anyway, didn't it ocurred with anyone?
>>
>> My ASTLabelType is CommonTree. Does it help if I change it?
>>
>> I'm sorry the urge of the questions. I have kind of a deadline. :(
>
> Sorry, I just saw that I didn't write which sources I meant. In that
> particular case it is the runtime itself which has to be compiled with
> VS, not the generated sources.
>
> Johannes
>>
>>  -- Rodrigo C. Lopes
>>  -- Tamb?m em r.cerqueira.lopes at gmail.com
>>
>>
>>
>> 2008/11/17 Johannes Luber <jaluber at gmx.de>:
>>
>>> I believe the cause lies in a bug in the Mono C# compiler. Can you
>>> compile the sources yourself via Visual Studio? Under windows the Nant
>>> script is supposed to be working.
>>>
>>> Johannes
>>>
>>> Rodrigo C. L. schrieb:
>>>> Hello!
>>>>
>>>> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
>>>>
>>>> My grammar is:
>>>>
>>>> tokens {
>>>> MODULE;
>>>> SPECIFICATION;
>>>> }
>>>> compilation : specification EOF! ;
>>>> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>>>> definition : module ';' ;
>>>> module : 'module' ID '{' specification '}' -> ^(MODULE ID specification) ;
>>>> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>>>>
>>>> and I have this simple input for test:
>>>>
>>>> module etal { };
>>>>
>>>> And I got
>>>>
>>>> Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>>>
>>>> which is odd, because ID should be 'etal'.
>>>>
>>>> I changed the rule module using operators and got
>>>> NullReferenceException, for the same reason.
>>>>
>>>> I am new at this, so I'm not sure how to handle. Is this a bug from
>>>> the DLLs that I should report or I am doing something wrong? Because I
>>>> tried the same grammar using ANTLRWorks and changing the language to
>>>> Java, and it worked like a charm, with no errors.
>>>>
>>>> I don't know if this was already discussed, thought I searched for
>>>> this at the most recent Interest Archives. If it was, sorry.
>>>>
>>>> Thank you all very much for any help.
>>>>
>>>>  -- Rodrigo C. Lopes
>>>>  -- Also in r.cerqueira.lopes at gmail.com
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>
>
>

From qwizv9b02 at sneakemail.com  Wed Nov 19 08:05:24 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 19 Nov 2008 17:05:24 +0100
Subject: [antlr-interest] Failing on case test: how?
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E833@Bloodymary.ironwillgames.com>
References: <gff2aq$2kq$1@ger.gmane.org>
	<86403CA0939415448BCCB83855EFE09A64E833@Bloodymary.ironwillgames.com>
Message-ID: <gg1dg4$2uj$2@ger.gmane.org>

Sam Harwell sharwell-at-pixelminegames.com |news.gmane.org| schreef:
> Can you make a rule like:
> 
> variable returns [Variable result]
>   : IDENTIFIER { $result = getVariable($IDENTIFIER.text); }
>   ;
> 
> Where the check is done in the indicated function? If there are cases where only one or the other is allowed, you can also do that semantic analysis at another point. The advantage here is you can have a more "lenient" parser that's able to provide better error messages once you start working on that.

No I can?t, since the constructors of the other formula subtypes expect
a specific type of variable, either first- or second order, so the rules
have to return a variable of the appropriate type.

> The other option with *gated* semantic predicates is (I don't do Java so the code is a best guess on what it might be in Java):
> 
> firstOrderVariable returns [FirstOrderVariable result]
> 	: {Character.isLowerCase( input.LA(1).getText().charAt(0) )} =>
>         IDENTIFIER { $result = getFirstOrderVariable($IDENTIFIER.text); }
> 	;
> 
> secondOrderVariable returns [SecondOrderVariable result]
> 	: {Character.isUpperCase( input.LA(1).getText().charAt(0) )} =>
>         IDENTIFIER { $result = getSecondOrderVariable($IDENTIFIER.text); }
> 	;

I think that is the way to go, thanks.

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/31d4a355/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/31d4a355/attachment-0001.bin 

From westlifezs at gmail.com  Wed Nov 19 14:35:19 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Wed, 19 Nov 2008 16:35:19 -0600
Subject: [antlr-interest] antlr-interest Digest, Vol 48, Issue 17
In-Reply-To: <mailman.1.1227124801.25543.antlr-interest@antlr.org>
References: <mailman.1.1227124801.25543.antlr-interest@antlr.org>
Message-ID: <e2842950811191435v7aaddcads1b479cb43d898bd1@mail.gmail.com>

Hi
 I encoutered a problem while using antlr, it said that " unexpected
end of subtree", does anybody have some idea on know how to solve this kind
of problem?

thank you!



2008/11/19, antlr-interest-request at antlr.org <antlr-interest-request at antlr.org>:
> Send antlr-interest mailing list submissions to
> 	antlr-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request at antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>    1. Re: A bug at C# DLLs? (Rodrigo C. L.)
>    2. Re: Failing on case test: how? (Hendrik Maryns)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 18 Nov 2008 17:05:56 -0300
> From: "Rodrigo C. L." <tapetedepadaria at gmail.com>
> Subject: Re: [antlr-interest] A bug at C# DLLs?
> To: "Johannes Luber" <jaluber at gmx.de>
> Cc: antlr-interest at antlr.org
> Message-ID:
> 	<da9e26b90811181205u5ad41a62ndc9bcbebe3ba794 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> ok, now it's working. If and when I find the cause of what was going
> on, I'll report.
>
> And definition was really trouble. I changed module to generate
> ^(MODULE ID specification?) and now it's going ok.
>
> thank you all, anyway =]
>
>  -- Rodrigo C. Lopes
>  -- Tamb?m em r.cerqueira.lopes at gmail.com
>
>
>
> 2008/11/18 Johannes Luber <jaluber at gmx.de>:
>> Rodrigo C. L. schrieb:
>>> hello, thanks for the help..
>>>
>>> I did all this throught visual studio with .NET, not Mono. I did
>>> compile the grammar with the jar (3.1.1). I'm going to try with NAnt,
>>> but I'm not confident that it'll work.
>>>
>>> Anyway, didn't it ocurred with anyone?
>>>
>>> My ASTLabelType is CommonTree. Does it help if I change it?
>>>
>>> I'm sorry the urge of the questions. I have kind of a deadline. :(
>>
>> Sorry, I just saw that I didn't write which sources I meant. In that
>> particular case it is the runtime itself which has to be compiled with
>> VS, not the generated sources.
>>
>> Johannes
>>>
>>>  -- Rodrigo C. Lopes
>>>  -- Tamb?m em r.cerqueira.lopes at gmail.com
>>>
>>>
>>>
>>> 2008/11/17 Johannes Luber <jaluber at gmx.de>:
>>>
>>>> I believe the cause lies in a bug in the Mono C# compiler. Can you
>>>> compile the sources yourself via Visual Studio? Under windows the Nant
>>>> script is supposed to be working.
>>>>
>>>> Johannes
>>>>
>>>> Rodrigo C. L. schrieb:
>>>>> Hello!
>>>>>
>>>>> I'm new at ANTLR, and I'm using it to generate code for C# (.NET v3.5).
>>>>>
>>>>> My grammar is:
>>>>>
>>>>> tokens {
>>>>> MODULE;
>>>>> SPECIFICATION;
>>>>> }
>>>>> compilation : specification EOF! ;
>>>>> specification : ( definition )* -> ^( SPECIFICATION definition* ) ;
>>>>> definition : module ';' ;
>>>>> module : 'module' ID '{' specification '}' -> ^(MODULE ID
>>>>> specification) ;
>>>>> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>>>>>
>>>>> and I have this simple input for test:
>>>>>
>>>>> module etal { };
>>>>>
>>>>> And I got
>>>>>
>>>>> Antlr.Runtime.Tree.RewriteEmptyStreamException{"token ID"},
>>>>>
>>>>> which is odd, because ID should be 'etal'.
>>>>>
>>>>> I changed the rule module using operators and got
>>>>> NullReferenceException, for the same reason.
>>>>>
>>>>> I am new at this, so I'm not sure how to handle. Is this a bug from
>>>>> the DLLs that I should report or I am doing something wrong? Because I
>>>>> tried the same grammar using ANTLRWorks and changing the language to
>>>>> Java, and it worked like a charm, with no errors.
>>>>>
>>>>> I don't know if this was already discussed, thought I searched for
>>>>> this at the most recent Interest Archives. If it was, sorry.
>>>>>
>>>>> Thank you all very much for any help.
>>>>>
>>>>>  -- Rodrigo C. Lopes
>>>>>  -- Also in r.cerqueira.lopes at gmail.com
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>
>>
>>
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 19 Nov 2008 17:05:24 +0100
> From: Hendrik Maryns <qwizv9b02 at sneakemail.com>
> Subject: Re: [antlr-interest] Failing on case test: how?
> To: antlr-interest at antlr.org
> Message-ID: <gg1dg4$2uj$2 at ger.gmane.org>
> Content-Type: text/plain; charset="utf-8"
>
> Sam Harwell sharwell-at-pixelminegames.com |news.gmane.org| schreef:
>> Can you make a rule like:
>>
>> variable returns [Variable result]
>>   : IDENTIFIER { $result = getVariable($IDENTIFIER.text); }
>>   ;
>>
>> Where the check is done in the indicated function? If there are cases
>> where only one or the other is allowed, you can also do that semantic
>> analysis at another point. The advantage here is you can have a more
>> "lenient" parser that's able to provide better error messages once you
>> start working on that.
>
> No I can?t, since the constructors of the other formula subtypes expect
> a specific type of variable, either first- or second order, so the rules
> have to return a variable of the appropriate type.
>
>> The other option with *gated* semantic predicates is (I don't do Java so
>> the code is a best guess on what it might be in Java):
>>
>> firstOrderVariable returns [FirstOrderVariable result]
>> 	: {Character.isLowerCase( input.LA(1).getText().charAt(0) )} =>
>>         IDENTIFIER { $result = getFirstOrderVariable($IDENTIFIER.text); }
>> 	;
>>
>> secondOrderVariable returns [SecondOrderVariable result]
>> 	: {Character.isUpperCase( input.LA(1).getText().charAt(0) )} =>
>>         IDENTIFIER { $result = getSecondOrderVariable($IDENTIFIER.text); }
>> 	;
>
> I think that is the way to go, thanks.
>
> H.
> --
> Hendrik Maryns
> http://tcl.sfs.uni-tuebingen.de/~hendrik/
> ==================
> Ask smart questions, get good answers:
> http://www.catb.org/~esr/faqs/smart-questions.html
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: signature.asc
> Type: application/pgp-signature
> Size: 257 bytes
> Desc: not available
> Url :
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/31d4a355/attachment-0002.bin
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: signature.asc
> Type: application/pgp-signature
> Size: 257 bytes
> Desc: OpenPGP digital signature
> Url :
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/31d4a355/attachment-0003.bin
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
>
> End of antlr-interest Digest, Vol 48, Issue 17
> **********************************************
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University

From jimi at temporal-wave.com  Wed Nov 19 15:26:29 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 19 Nov 2008 15:26:29 -0800
Subject: [antlr-interest] antlr-interest Digest, Vol 48, Issue 17
In-Reply-To: <e2842950811191435v7aaddcads1b479cb43d898bd1@mail.gmail.com>
References: <mailman.1.1227124801.25543.antlr-interest@antlr.org>
	<e2842950811191435v7aaddcads1b479cb43d898bd1@mail.gmail.com>
Message-ID: <1227137189.3410.2694.camel@jimi.temporal-wave.com>

On Wed, 2008-11-19 at 16:35 -0600, Su Zhang wrote:

> Hi
>  I encoutered a problem while using antlr, it said that " unexpected
> end of subtree", does anybody have some idea on know how to solve this kind
> of problem?


The error message isn't very helpful i guess but it means you have a
syntax error in your grammar file. Look for missing '}', ')', and
sections such as options and @header etc being in the wrong order.

> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of antlr-interest digest..."
> >


Please take note of the above instructions. about subject lines.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/4cf9dab2/attachment.html 

From jimi at temporal-wave.com  Wed Nov 19 16:39:18 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 19 Nov 2008 16:39:18 -0800
Subject: [antlr-interest] Maven builds, hudson continuous
Message-ID: <1227141558.3410.2741.camel@jimi.temporal-wave.com>

As some of you may have noticed, a lot of work has been done lately to
provide the ANTLR components as Maven artifacts
(http://maven.apache.org/ ), to provide an auto-syncing repository so
that new release are available via Maven within 4 hours of release and
finally to create Maven projects so that it is easy for people other
than Ter to build ANTLR. 

If you build Java projects and have not come across Maven then I highly
recommend taking the 10 minute tour as it is pretty useful.

As a side effect of this work, if you install the Maven plugin into your
IDE (Netbeans/IDEA/Eclipse) then you will find that you can open the
directory that contains the ANTLR source code (look for the pom.xml
file) in the IDE and it will automatically know how to build and test
the software.

A further side effect however, should make the need for you to build
your own development snapshots. This is because we have also implemented
an instance of the Hudson continuous build server. Here you can find the
latests build status of all the ANTLR tools and you can download the
latest development snapshot, if you are not using Maven.

You can find the hudson reports at: http://www.antlr.org:8888/hudson
(JIRA is still at http://www.antlr.org:8888 )

Finally, if you are a Maven user and for some reason feel the need to
build with the latest snapshot releases (perhaps to get a bug fix and so
on), then you can connect to the ANTLR snapshot repository by specifying
it in your maven pom.xml file as follows:


<project> ...

    <!--

    Inform Maven of the ANTLR snapshot repository, which it will
    need to consult to get the latest snapshot build of the runtime
    and tool directories if it was not built and installed locally.
    -->
    <repositories>

        <!--
        This is the ANTLR repository.
        -->
        <repository>
            <id>antlr-snapshot</id>
            <name>ANTLR Testing Snapshot Repository</name>
            <url>http://antlr.org/antlr-snapshot</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

    </repositories>
...
</project>



Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081119/4e0ef92b/attachment.html 

From robert.soule at gmail.com  Wed Nov 19 18:49:12 2008
From: robert.soule at gmail.com (Robert Soule)
Date: Wed, 19 Nov 2008 21:49:12 -0500
Subject: [antlr-interest] AST to AST
Message-ID: <d1316fd70811191849m1efd8e0axbf471e9ff5a1e8ea@mail.gmail.com>

Hi,

I have two languages that are fairly similar, and I'd like to translate
from one to the other. For both languages, I have grammars, and
re-write rules that create ASTs. I also have tree grammars that
recognize the ASTs and use StringTemplates to output the original
source.

That is:

Lang1 -> Parser1 -> AST1 -> Template1 -> Lang1
Lang2 -> Parser2 -> AST2 -> Template2 -> Lang2

What I'd like to do is write a tree grammar that recognizes
AST1, and creates an AST2, so that I can use the template2
to output the source:

Lang1 -> Parser1 -> AST1 -> AST2 -> Template2 -> Lang2

As I understand it, antlr dosn't allow me to specify tree
grammars that generate ASTs. Has anyone else tried to do
something like this? If so, can you recommend a way to do
this?

thank you,
Robert

From parrt at cs.usfca.edu  Wed Nov 19 19:28:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Nov 2008 19:28:06 -0800
Subject: [antlr-interest] AST to AST
In-Reply-To: <d1316fd70811191849m1efd8e0axbf471e9ff5a1e8ea@mail.gmail.com>
References: <d1316fd70811191849m1efd8e0axbf471e9ff5a1e8ea@mail.gmail.com>
Message-ID: <18DED6FD-58DC-4F07-AE02-822F30CBAEED@cs.usfca.edu>


On Nov 19, 2008, at 6:49 PM, Robert Soule wrote:

> Hi,
>
> I have two languages that are fairly similar, and I'd like to  
> translate
> from one to the other. For both languages, I have grammars, and
> re-write rules that create ASTs. I also have tree grammars that
> recognize the ASTs and use StringTemplates to output the original
> source.
>
> That is:
>
> Lang1 -> Parser1 -> AST1 -> Template1 -> Lang1
> Lang2 -> Parser2 -> AST2 -> Template2 -> Lang2
>
> What I'd like to do is write a tree grammar that recognizes
> AST1, and creates an AST2, so that I can use the template2
> to output the source:
>
> Lang1 -> Parser1 -> AST1 -> AST2 -> Template2 -> Lang2
>
> As I understand it, antlr dosn't allow me to specify tree
> grammars that generate ASTs.

As of 3.1 it does. :)

Ter

From parrt at cs.usfca.edu  Thu Nov 20 10:28:09 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Nov 2008 10:28:09 -0800
Subject: [antlr-interest] Maven builds, hudson continuous
In-Reply-To: <1227141558.3410.2741.camel@jimi.temporal-wave.com>
References: <1227141558.3410.2741.camel@jimi.temporal-wave.com>
Message-ID: <B235912B-681A-464C-B588-37894044A17E@cs.usfca.edu>

HI everyone,

Just wanted to follow up on this note to recognize Jim Idle (or is it  
Idol!?) for his extraordinary efforts to get maven and the continuous  
build server Hudson working! It really is a huge improvement in an  
area that I always lag behind (build systems).

I'll update the website to include all of these links for easy  
reference.

Ter

On Nov 19, 2008, at 4:39 PM, Jim Idle wrote:

> As some of you may have noticed, a lot of work has been done lately  
> to provide the ANTLR components as Maven artifacts (http://maven.apache.org/ 
>  ), to provide an auto-syncing repository so that new release are  
> available via Maven within 4 hours of release and finally to create  
> Maven projects so that it is easy for people other than Ter to build  
> ANTLR.
>
> If you build Java projects and have not come across Maven then I  
> highly recommend taking the 10 minute tour as it is pretty useful.
>
> As a side effect of this work, if you install the Maven plugin into  
> your IDE (Netbeans/IDEA/Eclipse) then you will find that you can  
> open the directory that contains the ANTLR source code (look for the  
> pom.xml file) in the IDE and it will automatically know how to build  
> and test the software.
>
> A further side effect however, should make the need for you to build  
> your own development snapshots. This is because we have also  
> implemented an instance of the Hudson continuous build server. Here  
> you can find the latests build status of all the ANTLR tools and you  
> can download the latest development snapshot, if you are not using  
> Maven.
>
> You can find the hudson reports at: http://www.antlr.org:8888/ 
> hudson  (JIRA is still at http://www.antlr.org:8888 )
>
> Finally, if you are a Maven user and for some reason feel the need  
> to build with the latest snapshot releases (perhaps to get a bug fix  
> and so on), then you can connect to the ANTLR snapshot repository by  
> specifying it in your maven pom.xml file as follows:
>
> <project> ...
>
>     <!--
>
>     Inform Maven of the ANTLR snapshot repository, which it will
>     need to consult to get the latest snapshot build of the runtime
>     and tool directories if it was not built and installed locally.
>     -->
>     <repositories>
>
>         <!--
>         This is the ANTLR repository.
>         -->
>         <repository>
>             <id>antlr-snapshot</id>
>             <name>ANTLR Testing Snapshot Repository</name>
>             <url>http://antlr.org/antlr-snapshot</url>
>             <snapshots>
>                 <enabled>true</enabled>
>                 <updatePolicy>always</updatePolicy>
>             </snapshots>
>         </repository>
>
>     </repositories>
> ...
> </project>
>
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From robert.soule at gmail.com  Thu Nov 20 12:38:27 2008
From: robert.soule at gmail.com (Robert Soule)
Date: Thu, 20 Nov 2008 15:38:27 -0500
Subject: [antlr-interest] StringTemplates in C?
Message-ID: <d1316fd70811201238x5fc18f9aga508c3764ed1421a@mail.gmail.com>

Hi,

Is there a port of StringTemplates to C? I would like to have my
tree grammar with C target language output templates, but I can't
seem to compile my grammar, The www.stringtemplate.org
website only says "with ports for C# and Python", which makes
me suspect I'm in for some bad news...

-Robert

From sharwell at pixelminegames.com  Thu Nov 20 12:52:28 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 20 Nov 2008 14:52:28 -0600
Subject: [antlr-interest] StringTemplates in C?
In-Reply-To: <d1316fd70811201238x5fc18f9aga508c3764ed1421a@mail.gmail.com>
References: <d1316fd70811201238x5fc18f9aga508c3764ed1421a@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E911@Bloodymary.ironwillgames.com>

StringTemplate relies heavily on features that would be extremely
difficult to duplicate in C. If there was ever a "port" of
StringTemplate to C, it would altered to the point of being a different
product.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robert Soule
Sent: Thursday, November 20, 2008 2:38 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] StringTemplates in C?

Hi,

Is there a port of StringTemplates to C? I would like to have my
tree grammar with C target language output templates, but I can't
seem to compile my grammar, The www.stringtemplate.org
website only says "with ports for C# and Python", which makes
me suspect I'm in for some bad news...

-Robert

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From vhawargi at gmail.com  Thu Nov 20 13:13:11 2008
From: vhawargi at gmail.com (Vishwanath Hawargi)
Date: Thu, 20 Nov 2008 15:13:11 -0600
Subject: [antlr-interest] Does it make sense to use Antlr for interactive
	parsing?
Message-ID: <4c63b36c0811201313k31488297rd9f85bb99415674a@mail.gmail.com>

Hello,
 Another dumb question from me.

I am looking for parsing an expression from the command line. Each of
these expressions are syntactically correct.
Instead of having a input file, i am having one expression at a time
to  be processed.
In this situation is it optimal/ ok to use antlr to validate and
generate the tokens?

Also, how do i process input arg instead of input file?

please let me know.

thank you.
vishwa

From jimi at temporal-wave.com  Thu Nov 20 14:44:28 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 20 Nov 2008 14:44:28 -0800
Subject: [antlr-interest] StringTemplates in C?
In-Reply-To: <d1316fd70811201238x5fc18f9aga508c3764ed1421a@mail.gmail.com>
References: <d1316fd70811201238x5fc18f9aga508c3764ed1421a@mail.gmail.com>
Message-ID: <1227221068.22288.53.camel@jimi.temporal-wave.com>

On Thu, 2008-11-20 at 15:38 -0500, Robert Soule wrote:

> Hi,
> 
> Is there a port of StringTemplates to C? I would like to have my
> tree grammar with C target language output templates, but I can't
> seem to compile my grammar, The www.stringtemplate.org
> website only says "with ports for C# and Python", which makes
> me suspect I'm in for some bad news...


Stringtemplate is object based, so there is no way to create a C port,
at least as the design stands. Something similar could be created but
would probably be relatively unwieldy.

Jim 


> 
> -Robert
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/4655e873/attachment.html 

From jimi at temporal-wave.com  Thu Nov 20 14:50:02 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 20 Nov 2008 14:50:02 -0800
Subject: [antlr-interest] Does it make sense to use Antlr for
 interactive parsing?
In-Reply-To: <4c63b36c0811201313k31488297rd9f85bb99415674a@mail.gmail.com>
References: <4c63b36c0811201313k31488297rd9f85bb99415674a@mail.gmail.com>
Message-ID: <1227221402.22288.56.camel@jimi.temporal-wave.com>

On Thu, 2008-11-20 at 15:13 -0600, Vishwanath Hawargi wrote:

> Hello,
>  Another dumb question from me.
> 
> I am looking for parsing an expression from the command line. Each of
> these expressions are syntactically correct.
> Instead of having a input file, i am having one expression at a time
> to  be processed.
> In this situation is it optimal/ ok to use antlr to validate and
> generate the tokens?
> 
> Also, how do i process input arg instead of input file?
> 


It makes sense if the input is relatively complicated, but if it is
just: command {options} something, then probably custom code is as good.
You run it exactly the same way as a file but use the StringStream
rather than the file stream. See teh api docs:

http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_string_stream.html
http://www.antlr.org/api/Java

Jim


> please let me know.
> 
> thank you.
> vishwa
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/721a45a1/attachment.html 

From davyd at fugro-fsi.com.au  Thu Nov 20 20:32:58 2008
From: davyd at fugro-fsi.com.au (Davyd Madeley)
Date: Fri, 21 Nov 2008 13:32:58 +0900
Subject: [antlr-interest] Updated vim syntax highlighter
Message-ID: <1227241978.751.152.camel@tc35>

I found an old vim syntax highlighter on antlr-interest,  but it didn't
deal very nicely with some things in my grammar.

I've updated it and thought I'd share it with anyone who might be
interested.

Add it to ~/.vim/syntax/

And add something like this to your .vimrc:
au BufRead,BufNewFile *.g       set syntax=antlr3

Regards,
--davyd

-- 
Davyd Madeley        Software Engineer
Fugro Seismic Imaging, Perth Australia
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr3.vim
Type: application/octet-stream
Size: 2040 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0e4bcde1/attachment.obj 

From antlr-list at arizona-software.ch  Thu Nov 20 22:06:36 2008
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu, 20 Nov 2008 22:06:36 -0800
Subject: [antlr-interest] Maven builds, hudson continuous
In-Reply-To: <B235912B-681A-464C-B588-37894044A17E@cs.usfca.edu>
References: <1227141558.3410.2741.camel@jimi.temporal-wave.com>
	<B235912B-681A-464C-B588-37894044A17E@cs.usfca.edu>
Message-ID: <0990F569-A597-4BC1-9A04-AA97257C1077@arizona-software.ch>

Great job Jim!

Jean

On Nov 20, 2008, at 10:28 AM, Terence Parr wrote:

> HI everyone,
>
> Just wanted to follow up on this note to recognize Jim Idle (or is it
> Idol!?) for his extraordinary efforts to get maven and the continuous
> build server Hudson working! It really is a huge improvement in an
> area that I always lag behind (build systems).
>
> I'll update the website to include all of these links for easy
> reference.
>
> Ter
>
> On Nov 19, 2008, at 4:39 PM, Jim Idle wrote:
>
>> As some of you may have noticed, a lot of work has been done lately
>> to provide the ANTLR components as Maven artifacts (http://maven.apache.org/
>> ), to provide an auto-syncing repository so that new release are
>> available via Maven within 4 hours of release and finally to create
>> Maven projects so that it is easy for people other than Ter to build
>> ANTLR.
>>
>> If you build Java projects and have not come across Maven then I
>> highly recommend taking the 10 minute tour as it is pretty useful.
>>
>> As a side effect of this work, if you install the Maven plugin into
>> your IDE (Netbeans/IDEA/Eclipse) then you will find that you can
>> open the directory that contains the ANTLR source code (look for the
>> pom.xml file) in the IDE and it will automatically know how to build
>> and test the software.
>>
>> A further side effect however, should make the need for you to build
>> your own development snapshots. This is because we have also
>> implemented an instance of the Hudson continuous build server. Here
>> you can find the latests build status of all the ANTLR tools and you
>> can download the latest development snapshot, if you are not using
>> Maven.
>>
>> You can find the hudson reports at: http://www.antlr.org:8888/
>> hudson  (JIRA is still at http://www.antlr.org:8888 )
>>
>> Finally, if you are a Maven user and for some reason feel the need
>> to build with the latest snapshot releases (perhaps to get a bug fix
>> and so on), then you can connect to the ANTLR snapshot repository by
>> specifying it in your maven pom.xml file as follows:
>>
>> <project> ...
>>
>>    <!--
>>
>>    Inform Maven of the ANTLR snapshot repository, which it will
>>    need to consult to get the latest snapshot build of the runtime
>>    and tool directories if it was not built and installed locally.
>>    -->
>>    <repositories>
>>
>>        <!--
>>        This is the ANTLR repository.
>>        -->
>>        <repository>
>>            <id>antlr-snapshot</id>
>>            <name>ANTLR Testing Snapshot Repository</name>
>>            <url>http://antlr.org/antlr-snapshot</url>
>>            <snapshots>
>>                <enabled>true</enabled>
>>                <updatePolicy>always</updatePolicy>
>>            </snapshots>
>>        </repository>
>>
>>    </repositories>
>> ...
>> </project>
>>
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From chainone at gmail.com  Fri Nov 21 05:30:57 2008
From: chainone at gmail.com (chain one)
Date: Fri, 21 Nov 2008 21:30:57 +0800
Subject: [antlr-interest] How to get the last token type just recognized in
	the lexer?
Message-ID: <5a92ffb60811210530p6f807a85mb3968c853fe9e93f@mail.gmail.com>

I am right now using antlr V2 to write a parser.And I meet this
problem,don't know how to fix it.
The problem is:

Lexer rule:


INT
:    (DIGIT)+
;

FLOAT
:    '.' (DIGIT)+ (('e' | 'E') ('+' | '-')? (DIGIT)+)?
|    '.' ('e' | 'E') ('+' | '-')? (DIGIT)+
     ;

DIGIT
: '0'..'9'
;

I want to match the strings like:

0.1E-10
0.1e+1
0.0

0.E14

To deal with the case like:"class.e9", ".e9" here could be accepted by FLOAT
rule and ID rule

So it seems that the only solution is to predict the last token just
recognized, if the last token is a INT, then FLOAT rule should be followed.

so I need to know what the last token is.
calling function LA(-1) could do this, however LA(-1) is only available in
parser not in lexer

So...Is there anyone could tell me how to get the last token type
just recognized in the lexer?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0ce5b75c/attachment.html 

From jimi at temporal-wave.com  Fri Nov 21 09:23:05 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 21 Nov 2008 09:23:05 -0800
Subject: [antlr-interest] Updated vim syntax highlighter
In-Reply-To: <1227241978.751.152.camel@tc35>
References: <1227241978.751.152.camel@tc35>
Message-ID: <1227288185.22288.89.camel@jimi.temporal-wave.com>

On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:

> I found an old vim syntax highlighter on antlr-interest,  but it didn't
> deal very nicely with some things in my grammar.
> 
> I've updated it and thought I'd share it with anyone who might be
> interested.
> 
> Add it to ~/.vim/syntax/
> 
> And add something like this to your .vimrc:
> au BufRead,BufNewFile *.g       set syntax=antlr3
> 

Works a treat for me :-)

We should put this up as a download.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/12af141d/attachment.html 

From parrt at cs.usfca.edu  Fri Nov 21 11:34:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 21 Nov 2008 11:34:47 -0800
Subject: [antlr-interest] Updated vim syntax highlighter
In-Reply-To: <1227288185.22288.89.camel@jimi.temporal-wave.com>
References: <1227241978.751.152.camel@tc35>
	<1227288185.22288.89.camel@jimi.temporal-wave.com>
Message-ID: <4AA6C070-81E3-4F0E-B9C1-FA4ED4BD4C51@cs.usfca.edu>

It's in share now.
Ter
On Nov 21, 2008, at 9:23 AM, Jim Idle wrote:

> On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:
>>
>> I found an old vim syntax highlighter on antlr-interest,  but it  
>> didn't
>> deal very nicely with some things in my grammar.
>>
>> I've updated it and thought I'd share it with anyone who might be
>> interested.
>>
>> Add it to ~/.vim/syntax/
>>
>> And add something like this to your .vimrc:
>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>
> Works a treat for me :-)
>
> We should put this up as a download.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From antlr at mirality.co.nz  Fri Nov 21 12:45:21 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 22 Nov 2008 09:45:21 +1300
Subject: [antlr-interest] How to get the last token type just recognized
 in the lexer?
In-Reply-To: <5a92ffb60811210530p6f807a85mb3968c853fe9e93f@mail.gmail.co
 m>
References: <5a92ffb60811210530p6f807a85mb3968c853fe9e93f@mail.gmail.com>
Message-ID: <20081121204543.C4ABF11EAED@www.antlr.org>

At 02:30 22/11/2008, chain one wrote:
>INT
>:    (DIGIT)+
>;
>
>FLOAT
>:    '.' (DIGIT)+ (('e' | 'E') ('+' | '-')? (DIGIT)+)?
>|    '.' ('e' | 'E') ('+' | '-')? (DIGIT)+
>      ;
>
>DIGIT
>:'0'..'9'
>;
[...]
>So it seems that the only solution is to predict the last token 
>just recognized, if the last token is a INT, then FLOAT rule 
>should be followed.
>
>so I need to know what the last token is.
>calling function LA(-1) could do this, however LA(-1) is only 
>available in parser not in lexer

You're asking the wrong question.  Instead of trying to work out 
INTs followed by FLOATs, simply recognise it as a FLOAT in the 
first place:

protected DIGIT: '0'..'9';

protected EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;

FLOAT
   : '.' (DIGIT)+ (EXPONENT)?
   ;

INT
   : (DIGIT)+
     ( FLOAT { $setType(FLOAT); }
     | EXPONENT { $setType(FLOAT); }
     )?
   ;

(".e16" by itself shouldn't be recognised as a float anyway.)


From cocoa at gmx.ch  Fri Nov 21 12:56:37 2008
From: cocoa at gmx.ch (Simon)
Date: Fri, 21 Nov 2008 21:56:37 +0100
Subject: [antlr-interest] Java Grammar
Message-ID: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>

hi

I'm trying to build an AST for a Java like language. The hardest part  
(if you want to built a meaningful AST) is the section of  
unaryExpressionNotPlusMinus (see grammar fragments at end or the  
Java.g grammar on antlr.org).

I have successfully built ASTs for the following constructs (using  
semantic predicates based on a symbol table)

   ^(FIELD_ACCESS target Identifier)
   ^(INVOKE target Identifier arguments)
   ^(ARRAY_ACCESS target expr)

However, I'm struggling with fully qualified type names, such as those  
in

   java.lang.Integer.parseInt("123")

Of course, I want something like

   ^(INVOKE ^(TYPE_REFERENCE ...) arguments)

The problem is that I somehow have to look ahead to detect whether it  
is a qualified type name (don't know how the precedence is if there is  
a variable named java with a field named lang that has a field named  
Integer that has method named parseInt, but that's another problem). I  
could write my own semantic predicate method that looks ahead in the  
input to detect a qualified type name. Is there an easier way to do  
that? Or am I approaching the problem from the wrong side?

I've tried to look at the Java grammar from langtools recently posted  
in this list, but didn't get any smarter (they rely heavily on the  
existing javac classes).

Thanks
Simon



unaryExpressionNotPlusMinus
     :   ...
     |   primary selector* ('++'|'--')?
     ;

primary
     :   parExpression
     |   literal
     |   'new' creator
     |   Identifier ('.' Identifier)* identifierSuffix?   // this is  
the hard / interesting part
     |   primitiveType ('[' ']')* '.' 'class'
     |   'void' '.' 'class'
     ;

identifierSuffix
     :   ('[' ']')+ '.' 'class'
     |   ('[' expression ']')+ // can also be matched by selector, but  
do here
     |   arguments
     |   '.' 'class'
     ;

selector
     :   '.' Identifier arguments?
     |   '[' expression ']'
     ;


From chainone at gmail.com  Fri Nov 21 21:50:40 2008
From: chainone at gmail.com (chain one)
Date: Sat, 22 Nov 2008 13:50:40 +0800
Subject: [antlr-interest] Could the AST of ANTLR be used to write an
	Interpreter?
Message-ID: <5a92ffb60811212150w4396fb05j1c256acf749ada87@mail.gmail.com>

I mean the Abstract Syntax Tree interpreters

Has anybody ever used ANTLR to write this kind of interpreter?

If yes, could you drop me some material related to this? Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/14c46fe8/attachment.html 

From gmdidro at gmail.com  Sat Nov 22 07:49:16 2008
From: gmdidro at gmail.com (=?KOI8-R?B?8MXU0s/XIOHMxcvTwc7E0g==?=)
Date: Sat, 22 Nov 2008 18:49:16 +0300
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
Message-ID: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>

Hello,
why such grammar doesn't work properly:
--------------------------------------------------------------------------------------
expr	:
        operand ((oper) operand)*
      	;
//Correct operands
operand	:
	INT
	;
OPER: ('+'|'-'|'*'|'/')
	;
INT	:	
	('0'..'9')+
	;
--------------------------------------------------------------------------------------
> t+1
line 0:3 mismatched input '+' expecting EOF

But if I replace the Lexer rule by Parser rule:

oper: ('+'|'-'|'*'|'/');

All work as it should. Why I should't use Lexer rule with alternatives ?

Thank you

From jbb at acm.org  Sat Nov 22 08:23:58 2008
From: jbb at acm.org (John B. Brodie)
Date: Sat, 22 Nov 2008 11:23:58 -0500
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
Message-ID: <200811221123.58695.jbb@acm.org>

> Hello,

Greetings!

> why such grammar doesn't work properly:
> ---------------------------------------------------------------------------
>----------- expr????:
> ? ? ? ? operand ((oper) operand)*
                            ^^^^^^
I assume you mean the lexer rule OPER here?
> ? ? ? ??;
> //Correct operands
> operand?:
> ????????INT
> ????????;
> OPER: ('+'|'-'|'*'|'/')
> ????????;
> INT?????:???????
> ????????('0'..'9')+
> ????????;
> ---------------------------------------------------------------------------
>-----------
>
> > t+1
    ^^^
your grammar does specify anything for how to handle the character 't'

>
> line 0:3 mismatched input '+' expecting EOF
>
> But if I replace the Lexer rule by Parser rule:
>
> oper: ('+'|'-'|'*'|'/');
>
> All work as it should. Why I should't use Lexer rule with alternatives ?
>

works for me with the following changes: (1) changed reference to oper to be 
OPER in the rule expr, and (2) changed the test input to be "1+1"

i am using ANTLR v3.1 from 12 August 2008.

my test source grammar is this:

//-----cut here-----

> Thank you

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/27413b7a/attachment.html 

From jaluber at gmx.de  Sat Nov 22 08:26:12 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 22 Nov 2008 17:26:12 +0100
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
Message-ID: <492832A4.1010705@gmx.de>

?????? ????????? schrieb:
> Hello,
> why such grammar doesn't work properly:
> --------------------------------------------------------------------------------------
> expr	:
>         operand ((oper) operand)*
>       	;
> //Correct operands
> operand	:
> 	INT
> 	;
> OPER: ('+'|'-'|'*'|'/')
> 	;
> INT	:	
> 	('0'..'9')+
> 	;
> --------------------------------------------------------------------------------------
>> t+1
> line 0:3 mismatched input '+' expecting EOF
> 
> But if I replace the Lexer rule by Parser rule:
> 
> oper: ('+'|'-'|'*'|'/');
> 
> All work as it should. Why I should't use Lexer rule with alternatives ?

The problem with your example is that in the expr rule you use oper, but
define OPER as rule. Did you overlook this while posting or does even

expr	:
         operand (OPER operand)*
       	;

not work? Nonetheless, the usual way to define operands is to create a
single rule for each operand and reference those lexer rules in a single
parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
implicit lexer rules doing it this way simulates the described approach,
but there can be problems as '+' used in to different rules will create
two distinct token types which will cause a MismatchedTokenTypeException
later.

Johannes
> 
> Thank you
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From gmdidro at gmail.com  Sat Nov 22 08:50:40 2008
From: gmdidro at gmail.com (=?KOI8-R?B?8MXU0s/XIOHMxcvTwc7E0g==?=)
Date: Sat, 22 Nov 2008 19:50:40 +0300
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <492832A4.1010705@gmx.de>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
	<492832A4.1010705@gmx.de>
Message-ID: <1dcb5c470811220850v61e3f3d9n92d47d6f8fdd0ec9@mail.gmail.com>

Sorry for many misprints. I experiment with grammar and post
intermediate variant.

My question is below:
I have a grammar:

expr	:
	(operand) (OPER operand)*
	;
operand	:
	ID|INT
	;
OPER	:
	('+'|'-'|'*'|'/')
	;
INT	:	
	('0'..'9')+
	;
ID	:
	('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
	;

And for the input "t+1", I have the error:
line 1:4 mismatched input '+'

But when I switch "OPER" to "oper", All work as it should. I don't
understand Why it's so.

Thank you

2008/11/22 Johannes Luber <jaluber at gmx.de>:
> ?????? ????????? schrieb:
>> Hello,
>> why such grammar doesn't work properly:
>> --------------------------------------------------------------------------------------
>> expr  :
>>         operand ((oper) operand)*
>>               ;
>> //Correct operands
>> operand       :
>>       INT
>>       ;
>> OPER: ('+'|'-'|'*'|'/')
>>       ;
>> INT   :
>>       ('0'..'9')+
>>       ;
>> --------------------------------------------------------------------------------------
>>> t+1
>> line 0:3 mismatched input '+' expecting EOF
>>
>> But if I replace the Lexer rule by Parser rule:
>>
>> oper: ('+'|'-'|'*'|'/');
>>
>> All work as it should. Why I should't use Lexer rule with alternatives ?
>
> The problem with your example is that in the expr rule you use oper, but
> define OPER as rule. Did you overlook this while posting or does even
>
> expr    :
>         operand (OPER operand)*
>        ;
>
> not work? Nonetheless, the usual way to define operands is to create a
> single rule for each operand and reference those lexer rules in a single
> parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
> implicit lexer rules doing it this way simulates the described approach,
> but there can be problems as '+' used in to different rules will create
> two distinct token types which will cause a MismatchedTokenTypeException
> later.
>
> Johannes
>>
>> Thank you
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jbb at acm.org  Sat Nov 22 09:16:48 2008
From: jbb at acm.org (John B. Brodie)
Date: Sat, 22 Nov 2008 12:16:48 -0500
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <1dcb5c470811220850v61e3f3d9n92d47d6f8fdd0ec9@mail.gmail.com>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
	<492832A4.1010705@gmx.de>
	<1dcb5c470811220850v61e3f3d9n92d47d6f8fdd0ec9@mail.gmail.com>
Message-ID: <200811221216.48631.jbb@acm.org>

> My question is below:
> I have a grammar:
>
> expr????:
> ????????(operand) (OPER operand)*
> ????????;
> operand?:
> ????????ID|INT
> ????????;
> OPER????:
> ????????('+'|'-'|'*'|'/')
> ????????;
> INT?????:???????
> ????????('0'..'9')+
> ????????;
> ID??????:
> ????????('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
> ????????;
>
> And for the input "t+1", I have the error:
> line 1:4 mismatched input '+'
>
works for me. no errors reported. using the attached test rig under ANTLR 
v3.1, August 12, 2008.

> But when I switch "OPER" to "oper", All work as it should. I don't
> understand Why it's so.
>
> Thank you
Hope this helps.
-- 
John B. Brodie

//---------------------begin attachment-------------------------
grammar Test;

options {
	output = AST;
	ASTLabelType = CommonTree;
}

@members {
    private static final String [] x = new String[]{
        "1+1", "t+1"
    };

    public static void main(String [] args) {
        for( int i = 0; i < x.length; ++i ) {
            try {
                System.out.println("about to parse:`"+x[i]+"`");
                TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
                CommonTokenStream tokens = new CommonTokenStream(lexer);

                TestParser parser = new TestParser(tokens);
                TestParser.expr_return p_result = parser.expr();

                CommonTree ast = p_result.tree;
                if( ast == null ) {
                   System.out.println("resultant tree: is NULL");
                } else {
                   System.out.println("resultant tree: " + 
ast.toStringTree());
                }
                System.out.println();
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }
}

expr    :
        (operand) (OPER operand)*
        ;
operand :
        ID|INT
        ;
OPER    :
        ('+'|'-'|'*'|'/')
        ;
INT     :       
        ('0'..'9')+
        ;
ID      :
        ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
        ;
//---------------------end of attachment------------------------


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/694a8c9c/attachment.html 

From westlifezs at gmail.com  Sat Nov 22 09:36:39 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sat, 22 Nov 2008 11:36:39 -0600
Subject: [antlr-interest] Why waiting timeout? why cannot find symbol?
Message-ID: <e2842950811220936g10dd156fweadfecac7d77cd6b@mail.gmail.com>

Hi all,

I meet two very strange problems when debugging my program,the first
one is "timeout waiting connect remote parser", the other is cannot
find symbol
[11:17:54] symbol  : variable b64
[11:17:54] location: class assignment6Parser
[11:17:54]             b64=i.getText();
is anybody have solutions to similar problems?
here is my grammar just for common tree
:

grammar assignment6;

options {
    output=AST;
    ASTLabelType=CommonTree;
    k=*;
    memoize = true;
}

tokens {
        CredentialHeader  = '-----BEGIN MPKI CREDENTIAL-----';
        CredentialEnd  = '-----END MPKI CREDENTIAL-----';
        PublicKeyHeader  = '-----BEGIN PUBLIC KEY-----';
        PublicKeyEnd = '-----END PUBLIC KEY-----';
        SignatureHeader  = '-----BEGIN SIGNATURE-----';
        SignatureEnd  = '-----END SIGNATURE-----';
        ValidityHeader  = '-----BEGIN VALIDITY-----';
        ValidityEnd = '-----END VALIDITY-----';
        CertHeader = '-----BEGIN MPKI CERTIFICATE-----';
        CertEnd  = '-----END MPKI CERTIFICATE-----';
        ChallengeHeader  = '-----BEGIN MPKI CHALLENGE-----';
        ChallengeEnd = '-----END MPKI CHALLENGE-----';
        ResponseHeader = '-----BEGIN MPKI CHALLENGE RESPONSE-----';
        ResponseEnd  = '-----END MPKI CHALLENGE RESPONSE-----';
        RequestHeader = '-----BEGIN REPOSITORY CLIENT REQUEST-----';
        RequestEnd = '-----END REPOSITORY CLIENT REQUEST-----';
        ReplyHeader  = '-----BEGIN REPOSITORY SERVER REPLY-----';
        ReplyEnd  = '-----END REPOSITORY SERVER REPLY-----';
        NotBefore  = 'Not before:';
        NotAfter  = 'Not after:';
        DAYTIME = 'daytime';
        Read = 'read';
        Write = 'write';
        Commit = 'commit';
        //Says = 'says';
       // Granted = 'granted';
        //Denied = 'denied';
       // request = 'request';

}

@header {

}

@lexer::header {
//package certificate;

}
prog    :    credential
    ;

credential
    :    CredentialHeader publicKey certificate* CredentialEnd
    ;

certificate returns [ String cert ]
    :   CertHeader clause+ validity? publicKey signature CertEnd
        { /*cert = 74*/}
    ;

signature
    :  SignatureHeader b=base{}	 SignatureEnd
     // { isTypeName(b.getText()); }
    ;

validity  returns [String v]
    : ValidityHeader NotBefore tb= timeTuple NotAfter ta= timeTuple ValidityEnd
    { /*v= tb + ta;*/ }
    ;

timeTuple  returns [String time]
    : 'datime' '('t1= num ','t2= num ','t3= num ','t4= num ','t5= num
','t6= num ')' '.'
    {//time= new timeTuple(t1, t2, t3, t4, t5 ,t6);
    // time = "daytime" + '(' + t1 + ','+ t2 +','+ t3 +',' + t4+',' +
t5+',' +t6 + ')';
    }
    ;

//num    returns [String t]
      //  :n = Num
       // {/*t = n.getText();*/}
       // ;

clause    : literal '.' | literal ':-' literal (',' literal)* '.'
    ;

literal    : predicate | 'says' '(' id ',' predicate')'
    ;


predicate
    : id'(' id ( ',' id)* ')'
    ;


publicKey
    :    PublicKeyHeader b=base PublicKeyEnd
     // { isTypeName(b.getText()); }
    ;

challenge
    :     ChallengeHeader base ChallengeEnd
    ;
response
    :     ResponseHeader b= base ResponseEnd
          //  { isTypeName(b.getText()); }
    ;

//Base64Block
//       : s =Base64Block
//           {isType(s.getText())}? Base64Block
//       ;
base  returns [String b64 ]	
     : i= ID {!(i.getText().contains("-"))
}?{!(i.getText().contains("_"))}? {b64=i.getText();}
     ;
id  returns [String identification]	
     : ident= ID
{!(ident.getText().contains("+"))}?{!(ident.getText().contains("="))}?{!(ident.getText().contains("/"))}?
 {identification= ident.getText();}
     ;
num  	  returns [String no]
        :	n= ID {no=
n.getText();}{n.getText().contains("0")}?{n.getText().contains("1")}?{n.getText().contains("2")}?{n.getText().contains("3")}?{n.getText().contains("4")}?{n.getText().contains("5")}?{n.getText().contains("6")}?{n.getText().contains("7")}?{n.getText().contains("8")}?{n.getText().contains("9")}?
        ;
request
    :     RequestHeader 'request' '('op ',' ID ')' RequestEnd
    ;
op      :    'read' | Write | Commit
    ;
reply      :     ReplyHeader result ReplyEnd
    ;
result  :     'granted' | 'denied'
    ;

ID   :	  ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '='| '-'| '_'|':')*
     ;
//Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_'
|'-'| '0'..'9' ) *;
//Base64Block      : ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '=')*;
//ChallengeBlock   : ( 'a'..'z' | 'A'..'Z' | 'O'..'9'| ':')* ;
//Num   :     ( '0'..'9' ) * ;
//fragment
WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;

thanks alot!


2008/11/21, antlr-interest-request at antlr.org <antlr-interest-request at antlr.org>:
> Send antlr-interest mailing list submissions to
> 	antlr-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request at antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>    1. StringTemplates in C? (Robert Soule)
>    2. Re: StringTemplates in C? (Sam Harwell)
>    3. Does it make sense to use Antlr for interactive	parsing?
>       (Vishwanath Hawargi)
>    4. Re: StringTemplates in C? (Jim Idle)
>    5. Re: Does it make sense to use Antlr for interactive parsing?
>       (Jim Idle)
>    6. Updated vim syntax highlighter (Davyd Madeley)
>    7. Re: Maven builds, hudson continuous (Jean Bovet)
>    8. How to get the last token type just recognized in	the lexer?
>       (chain one)
>    9. Re: Updated vim syntax highlighter (Jim Idle)
>   10. Re: Updated vim syntax highlighter (Terence Parr)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 20 Nov 2008 15:38:27 -0500
> From: "Robert Soule" <robert.soule at gmail.com>
> Subject: [antlr-interest] StringTemplates in C?
> To: antlr-interest at antlr.org
> Message-ID:
> 	<d1316fd70811201238x5fc18f9aga508c3764ed1421a at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi,
>
> Is there a port of StringTemplates to C? I would like to have my
> tree grammar with C target language output templates, but I can't
> seem to compile my grammar, The www.stringtemplate.org
> website only says "with ports for C# and Python", which makes
> me suspect I'm in for some bad news...
>
> -Robert
>
>
> ------------------------------
>
> Message: 2
> Date: Thu, 20 Nov 2008 14:52:28 -0600
> From: "Sam Harwell" <sharwell at pixelminegames.com>
> Subject: Re: [antlr-interest] StringTemplates in C?
> To: "Robert Soule" <robert.soule at gmail.com>,
> 	<antlr-interest at antlr.org>
> Message-ID:
> 	<86403CA0939415448BCCB83855EFE09A64E911 at Bloodymary.ironwillgames.com>
> Content-Type: text/plain;	charset="us-ascii"
>
> StringTemplate relies heavily on features that would be extremely
> difficult to duplicate in C. If there was ever a "port" of
> StringTemplate to C, it would altered to the point of being a different
> product.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robert Soule
> Sent: Thursday, November 20, 2008 2:38 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] StringTemplates in C?
>
> Hi,
>
> Is there a port of StringTemplates to C? I would like to have my
> tree grammar with C target language output templates, but I can't
> seem to compile my grammar, The www.stringtemplate.org
> website only says "with ports for C# and Python", which makes
> me suspect I'm in for some bad news...
>
> -Robert
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> ess
>
>
>
> ------------------------------
>
> Message: 3
> Date: Thu, 20 Nov 2008 15:13:11 -0600
> From: "Vishwanath Hawargi" <vhawargi at gmail.com>
> Subject: [antlr-interest] Does it make sense to use Antlr for
> 	interactive	parsing?
> To: antlr-interest at antlr.org
> Message-ID:
> 	<4c63b36c0811201313k31488297rd9f85bb99415674a at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hello,
>  Another dumb question from me.
>
> I am looking for parsing an expression from the command line. Each of
> these expressions are syntactically correct.
> Instead of having a input file, i am having one expression at a time
> to  be processed.
> In this situation is it optimal/ ok to use antlr to validate and
> generate the tokens?
>
> Also, how do i process input arg instead of input file?
>
> please let me know.
>
> thank you.
> vishwa
>
>
> ------------------------------
>
> Message: 4
> Date: Thu, 20 Nov 2008 14:44:28 -0800
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] StringTemplates in C?
> To: Robert Soule <robert.soule at gmail.com>
> Cc: antlr-interest at antlr.org
> Message-ID: <1227221068.22288.53.camel at jimi.temporal-wave.com>
> Content-Type: text/plain; charset="us-ascii"
>
> On Thu, 2008-11-20 at 15:38 -0500, Robert Soule wrote:
>
>> Hi,
>>
>> Is there a port of StringTemplates to C? I would like to have my
>> tree grammar with C target language output templates, but I can't
>> seem to compile my grammar, The www.stringtemplate.org
>> website only says "with ports for C# and Python", which makes
>> me suspect I'm in for some bad news...
>
>
> Stringtemplate is object based, so there is no way to create a C port,
> at least as the design stands. Something similar could be created but
> would probably be relatively unwieldy.
>
> Jim
>
>
>>
>> -Robert
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/4655e873/attachment-0001.html
>
> ------------------------------
>
> Message: 5
> Date: Thu, 20 Nov 2008 14:50:02 -0800
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Does it make sense to use Antlr for
> 	interactive parsing?
> Cc: antlr-interest at antlr.org
> Message-ID: <1227221402.22288.56.camel at jimi.temporal-wave.com>
> Content-Type: text/plain; charset="us-ascii"
>
> On Thu, 2008-11-20 at 15:13 -0600, Vishwanath Hawargi wrote:
>
>> Hello,
>>  Another dumb question from me.
>>
>> I am looking for parsing an expression from the command line. Each of
>> these expressions are syntactically correct.
>> Instead of having a input file, i am having one expression at a time
>> to  be processed.
>> In this situation is it optimal/ ok to use antlr to validate and
>> generate the tokens?
>>
>> Also, how do i process input arg instead of input file?
>>
>
>
> It makes sense if the input is relatively complicated, but if it is
> just: command {options} something, then probably custom code is as good.
> You run it exactly the same way as a file but use the StringStream
> rather than the file stream. See teh api docs:
>
> http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_string_stream.html
> http://www.antlr.org/api/Java
>
> Jim
>
>
>> please let me know.
>>
>> thank you.
>> vishwa
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/721a45a1/attachment-0001.html
>
> ------------------------------
>
> Message: 6
> Date: Fri, 21 Nov 2008 13:32:58 +0900
> From: Davyd Madeley <davyd at fugro-fsi.com.au>
> Subject: [antlr-interest] Updated vim syntax highlighter
> To: antlr-interest at antlr.org
> Message-ID: <1227241978.751.152.camel at tc35>
> Content-Type: text/plain; charset="us-ascii"
>
> I found an old vim syntax highlighter on antlr-interest,  but it didn't
> deal very nicely with some things in my grammar.
>
> I've updated it and thought I'd share it with anyone who might be
> interested.
>
> Add it to ~/.vim/syntax/
>
> And add something like this to your .vimrc:
> au BufRead,BufNewFile *.g       set syntax=antlr3
>
> Regards,
> --davyd
>
> --
> Davyd Madeley        Software Engineer
> Fugro Seismic Imaging, Perth Australia
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: antlr3.vim
> Type: application/octet-stream
> Size: 2040 bytes
> Desc: not available
> Url :
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0e4bcde1/attachment-0001.obj
>
> ------------------------------
>
> Message: 7
> Date: Thu, 20 Nov 2008 22:06:36 -0800
> From: Jean Bovet <antlr-list at arizona-software.ch>
> Subject: Re: [antlr-interest] Maven builds, hudson continuous
> To: Terence Parr <parrt at cs.usfca.edu>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <0990F569-A597-4BC1-9A04-AA97257C1077 at arizona-software.ch>
> Content-Type: text/plain; charset=US-ASCII; format=flowed
>
> Great job Jim!
>
> Jean
>
> On Nov 20, 2008, at 10:28 AM, Terence Parr wrote:
>
>> HI everyone,
>>
>> Just wanted to follow up on this note to recognize Jim Idle (or is it
>> Idol!?) for his extraordinary efforts to get maven and the continuous
>> build server Hudson working! It really is a huge improvement in an
>> area that I always lag behind (build systems).
>>
>> I'll update the website to include all of these links for easy
>> reference.
>>
>> Ter
>>
>> On Nov 19, 2008, at 4:39 PM, Jim Idle wrote:
>>
>>> As some of you may have noticed, a lot of work has been done lately
>>> to provide the ANTLR components as Maven artifacts
>>> (http://maven.apache.org/
>>> ), to provide an auto-syncing repository so that new release are
>>> available via Maven within 4 hours of release and finally to create
>>> Maven projects so that it is easy for people other than Ter to build
>>> ANTLR.
>>>
>>> If you build Java projects and have not come across Maven then I
>>> highly recommend taking the 10 minute tour as it is pretty useful.
>>>
>>> As a side effect of this work, if you install the Maven plugin into
>>> your IDE (Netbeans/IDEA/Eclipse) then you will find that you can
>>> open the directory that contains the ANTLR source code (look for the
>>> pom.xml file) in the IDE and it will automatically know how to build
>>> and test the software.
>>>
>>> A further side effect however, should make the need for you to build
>>> your own development snapshots. This is because we have also
>>> implemented an instance of the Hudson continuous build server. Here
>>> you can find the latests build status of all the ANTLR tools and you
>>> can download the latest development snapshot, if you are not using
>>> Maven.
>>>
>>> You can find the hudson reports at: http://www.antlr.org:8888/
>>> hudson  (JIRA is still at http://www.antlr.org:8888 )
>>>
>>> Finally, if you are a Maven user and for some reason feel the need
>>> to build with the latest snapshot releases (perhaps to get a bug fix
>>> and so on), then you can connect to the ANTLR snapshot repository by
>>> specifying it in your maven pom.xml file as follows:
>>>
>>> <project> ...
>>>
>>>    <!--
>>>
>>>    Inform Maven of the ANTLR snapshot repository, which it will
>>>    need to consult to get the latest snapshot build of the runtime
>>>    and tool directories if it was not built and installed locally.
>>>    -->
>>>    <repositories>
>>>
>>>        <!--
>>>        This is the ANTLR repository.
>>>        -->
>>>        <repository>
>>>            <id>antlr-snapshot</id>
>>>            <name>ANTLR Testing Snapshot Repository</name>
>>>            <url>http://antlr.org/antlr-snapshot</url>
>>>            <snapshots>
>>>                <enabled>true</enabled>
>>>                <updatePolicy>always</updatePolicy>
>>>            </snapshots>
>>>        </repository>
>>>
>>>    </repositories>
>>> ...
>>> </project>
>>>
>>>
>>> Jim
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> ------------------------------
>
> Message: 8
> Date: Fri, 21 Nov 2008 21:30:57 +0800
> From: "chain one" <chainone at gmail.com>
> Subject: [antlr-interest] How to get the last token type just
> 	recognized in	the lexer?
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<5a92ffb60811210530p6f807a85mb3968c853fe9e93f at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I am right now using antlr V2 to write a parser.And I meet this
> problem,don't know how to fix it.
> The problem is:
>
> Lexer rule:
>
>
> INT
> :    (DIGIT)+
> ;
>
> FLOAT
> :    '.' (DIGIT)+ (('e' | 'E') ('+' | '-')? (DIGIT)+)?
> |    '.' ('e' | 'E') ('+' | '-')? (DIGIT)+
>      ;
>
> DIGIT
> : '0'..'9'
> ;
>
> I want to match the strings like:
>
> 0.1E-10
> 0.1e+1
> 0.0
>
> 0.E14
>
> To deal with the case like:"class.e9", ".e9" here could be accepted by FLOAT
> rule and ID rule
>
> So it seems that the only solution is to predict the last token just
> recognized, if the last token is a INT, then FLOAT rule should be followed.
>
> so I need to know what the last token is.
> calling function LA(-1) could do this, however LA(-1) is only available in
> parser not in lexer
>
> So...Is there anyone could tell me how to get the last token type
> just recognized in the lexer?
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0ce5b75c/attachment-0001.html
>
> ------------------------------
>
> Message: 9
> Date: Fri, 21 Nov 2008 09:23:05 -0800
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Updated vim syntax highlighter
> To: Davyd Madeley <davyd at fugro-fsi.com.au>
> Cc: antlr-interest at antlr.org
> Message-ID: <1227288185.22288.89.camel at jimi.temporal-wave.com>
> Content-Type: text/plain; charset="us-ascii"
>
> On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:
>
>> I found an old vim syntax highlighter on antlr-interest,  but it didn't
>> deal very nicely with some things in my grammar.
>>
>> I've updated it and thought I'd share it with anyone who might be
>> interested.
>>
>> Add it to ~/.vim/syntax/
>>
>> And add something like this to your .vimrc:
>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>
>
> Works a treat for me :-)
>
> We should put this up as a download.
>
> Jim
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/12af141d/attachment-0001.html
>
> ------------------------------
>
> Message: 10
> Date: Fri, 21 Nov 2008 11:34:47 -0800
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [antlr-interest] Updated vim syntax highlighter
> To: Jim Idle <jimi at temporal-wave.com>
> Cc: antlr-interest at antlr.org
> Message-ID: <4AA6C070-81E3-4F0E-B9C1-FA4ED4BD4C51 at cs.usfca.edu>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
> It's in share now.
> Ter
> On Nov 21, 2008, at 9:23 AM, Jim Idle wrote:
>
>> On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:
>>>
>>> I found an old vim syntax highlighter on antlr-interest,  but it
>>> didn't
>>> deal very nicely with some things in my grammar.
>>>
>>> I've updated it and thought I'd share it with anyone who might be
>>> interested.
>>>
>>> Add it to ~/.vim/syntax/
>>>
>>> And add something like this to your .vimrc:
>>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>>
>> Works a treat for me :-)
>>
>> We should put this up as a download.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
>
> End of antlr-interest Digest, Vol 48, Issue 19
> **********************************************
>


-- 
Su Zhang
Computer Information and Science
Kansas State University

From gmdidro at gmail.com  Sat Nov 22 09:44:17 2008
From: gmdidro at gmail.com (=?KOI8-R?B?8MXU0s/XIOHMxcvTwc7E0g==?=)
Date: Sat, 22 Nov 2008 20:44:17 +0300
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <492832A4.1010705@gmx.de>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
	<492832A4.1010705@gmx.de>
Message-ID: <1dcb5c470811220944s642bae21hd5a791396bc9c1be@mail.gmail.com>

> but there can be problems as '+' used in to different rules will create
> two distinct token types which will cause a MismatchedTokenTypeException
> later.

This is exactly what happens with my grammar.
Thank you very much.

2008/11/22 Johannes Luber <jaluber at gmx.de>:
> ?????? ????????? schrieb:
>> Hello,
>> why such grammar doesn't work properly:
>> --------------------------------------------------------------------------------------
>> expr  :
>>         operand ((oper) operand)*
>>               ;
>> //Correct operands
>> operand       :
>>       INT
>>       ;
>> OPER: ('+'|'-'|'*'|'/')
>>       ;
>> INT   :
>>       ('0'..'9')+
>>       ;
>> --------------------------------------------------------------------------------------
>>> t+1
>> line 0:3 mismatched input '+' expecting EOF
>>
>> But if I replace the Lexer rule by Parser rule:
>>
>> oper: ('+'|'-'|'*'|'/');
>>
>> All work as it should. Why I should't use Lexer rule with alternatives ?
>
> The problem with your example is that in the expr rule you use oper, but
> define OPER as rule. Did you overlook this while posting or does even
>
> expr    :
>         operand (OPER operand)*
>        ;
>
> not work? Nonetheless, the usual way to define operands is to create a
> single rule for each operand and reference those lexer rules in a single
> parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
> implicit lexer rules doing it this way simulates the described approach,
> but there can be problems as '+' used in to different rules will create
> two distinct token types which will cause a MismatchedTokenTypeException
> later.
>
> Johannes
>>
>> Thank you
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From Development at ChrisSek.de  Sat Nov 22 10:39:02 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Sat, 22 Nov 2008 19:39:02 +0100
Subject: [antlr-interest] Write comments to templates
Message-ID: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>

Hi all,

after a longer search, I don't found a good way  to write comments  
from the source file to template output. My workflow is the following:

	Lexer (which puts comments into the hidden channel) -> parser (which  
creates an AST) -> walker (which writes output using StringTemplate)

Now I like to write all comments occurring in the source file to the  
(nearly) same position in the destination file. So I have to pass the  
comments to the walker. Of cause, I could simply put the comments into  
the default token stream and add "Comment?" to every position in every  
rule. This will make my parser and walker grammars unreadable.

Isn't there a better solution? Is it, for example, possible to scan  
the token stream parallel while the AST is parsed? So it could be  
possible to write comments to the StringTemplate output just after  
they appear in the input stream at the nearly same position (using  
token.index).

I know, that it is not quite clear where to put comments occurring in  
the input stream. But it's not so important to keep the context. It's  
more important to write the comments more or less to the same position.

Thanks for your help in advance.

Kind regards,

Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/49d56a56/attachment.html 

From antlr at mirality.co.nz  Sat Nov 22 15:57:55 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 23 Nov 2008 12:57:55 +1300
Subject: [antlr-interest] Lexer rule with alternatives (Newbie question)
In-Reply-To: <492832A4.1010705@gmx.de>
References: <1dcb5c470811220749u46bf38bwa43ed521a4470350@mail.gmail.com>
	<492832A4.1010705@gmx.de>
Message-ID: <20081122235802.64A9B11EB03@www.antlr.org>

At 05:26 23/11/2008, Johannes Luber wrote:
 >but there can be problems as '+' used in to different rules will 

 >create two distinct token types which will cause a
 >MismatchedTokenTypeException later.

Actually normally it won't create separate token types, if you're 
just using '+' on its own only in parser rules.  But it's easy to 
accidentally introduce additional types (if you forget to import 
the lexer tokens; if you combine it with additional characters; if 
you refer to it in other lexer rules as well; etc).

This is one of the reasons why I prefer to never use literal 
characters in parser rules at all, and make explicit lexer rules 
for them.


From antlr at mirality.co.nz  Sat Nov 22 16:05:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 23 Nov 2008 13:05:05 +1300
Subject: [antlr-interest] Why waiting timeout? why cannot find  symbol?
In-Reply-To: <e2842950811220936g10dd156fweadfecac7d77cd6b@mail.gmail.com
 >
References: <e2842950811220936g10dd156fweadfecac7d77cd6b@mail.gmail.com>
Message-ID: <20081123000513.E20D211EB48@www.antlr.org>

At 06:36 23/11/2008, Su Zhang wrote:
 >I meet two very strange problems when debugging my program,the
 >first one is "timeout waiting connect remote parser",

Are you compiling the grammar with -debug so it includes the debug 
code, and running it before you select Debug Remote?

(If your target language is Java, as it seems to be, then you 
shouldn't need to use Debug Remote anyway.  Just use the normal 
Debug.  But of course before that'll work you'll need to fix your 
compilation errors.)

 >the other is cannot find symbol
 >[11:17:54] symbol  : variable b64
 >[11:17:54] location: class assignment6Parser
 >[11:17:54]             b64=i.getText();
[...]
 >base  returns [String b64 ]	
 >     : i= ID {!(i.getText().contains("-"))
 >}?{!(i.getText().contains("_"))}? {b64=i.getText();}
 >     ;

This is where that's coming from.  This is because you're not 
using the correct syntax to refer to ANTLR-defined symbols, 
neither here nor in any of your other rules.  While you might get 
away with it sometimes, it's bad style and reduces portability.

Instead of writing "b64=i.getText()", you should be using "$b64 = 
$i.text".

You should never refer to a parameter, return value, or label 
defined in the ANTLR grammar without using the $ syntax.


From antlr at mirality.co.nz  Sat Nov 22 16:47:10 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 23 Nov 2008 13:47:10 +1300
Subject: [antlr-interest] Why waiting timeout? why cannot find  symbol?
In-Reply-To: <e2842950811221625g62c84db5i7d3b2ec08e40de78@mail.gmail.com
 >
References: <e2842950811220936g10dd156fweadfecac7d77cd6b@mail.gmail.com>
	<49289e3a.020bca0a.2cb5.7352SMTPIN_ADDED@mx.google.com>
	<e2842950811221625g62c84db5i7d3b2ec08e40de78@mail.gmail.com>
Message-ID: <20081123004719.216A811EB0A@www.antlr.org>

At 13:25 23/11/2008, Su Zhang wrote:
 >thank you for your reply, yet i still have some problems, why 
the
 >return rule timeTuple cannot be regarded as a string? just part 
of
 >my grammar below, and with error information
 >
 >validity  returns [String v]
 >    : ValidityHeader NotBefore tb= timeTuple NotAfter ta= 
timeTuple
 >      ValidityEnd { $v= $tb.getText() + $ta.getText(); }
 >    ;
 >timeTuple  returns [String time]
 >    : 'datime' '('t1= num ','t2= num ','t3= num ','t4= num ','
 >      t5= num ','t6= num ')' '.'
 >    {//time= new timeTuple(t1, t2, t3, t4, t5 ,t6);
 >     $time = "datime" + '(' + t1 + ','+ t2 +','+ t3 +',' + 
t4+','
 >       + t5+',' +t6 + ')';
 >    }
 >    ;
 >error information: unknown attribute for rule timeTuple: getText
[...]
 >even it won't work if I change   $v= $tb.getText() +
 >$ta.getText();
 >into $v=$tb+$ta;, it will show
 >
 >missing attribute access on rule scope: tb
 >missing attribute access on rule scope: ta

As I mentioned before, the correct syntax would be $tb.text, not 
$tb or $tb.getText().

$x.y is the ANTLR syntax for getting (or setting) the attribute y 
from label x.  Different target languages (and different versions 
of ANTLR, and in different contexts) resolve this into different 
bits of target language code, but the syntax in the grammar is 
uniform for convenience.

It's discussed in detail in the ANTLR book, and in passing (but 
sufficiently) in the Wiki.

(And remember to use Reply All to direct responses to the group as 
well.  You can get better results that way.)


From westlifezs at gmail.com  Sat Nov 22 18:31:12 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sat, 22 Nov 2008 20:31:12 -0600
Subject: [antlr-interest] how can i return a string including a regular
	express?
Message-ID: <e2842950811221831w1a8c3396xf8be2c99d28bc28@mail.gmail.com>

HI everyone,

the problem is, I want to return a string which includes a regular
express, like  i1=id1'(' i2=id1 ( ',' i3=id1)* ')', on the left of
equals are label variables which are not included in the return
string, and I use the method {String k=','+$i3.text;
$p=$i1.text+'('+$i2.text + k*+')';} to assemble the return value p,
but it won't work, it says that the * cannot be applied in this kind
of express, so does everyone know a method to handle this kind of
problem?

Thank you!

Su

2008/11/22, antlr-interest-request at antlr.org <antlr-interest-request at antlr.org>:
> Send antlr-interest mailing list submissions to
> 	antlr-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request at antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>    1. Re: How to get the last token type just recognized in the
>       lexer? (Gavin Lambert)
>    2. Java Grammar (Simon)
>    3. Could the AST of ANTLR be used to write an	Interpreter?
>       (chain one)
>    4. Lexer rule with alternatives (Newbie question)
>       ( ?????? ????????? )
>    5. Re: Lexer rule with alternatives (Newbie question)
>       (John B. Brodie)
>    6. Re: Lexer rule with alternatives (Newbie question)
>       (Johannes Luber)
>    7. Re: Lexer rule with alternatives (Newbie question)
>       ( ?????? ????????? )
>    8. Re: Lexer rule with alternatives (Newbie question)
>       (John B. Brodie)
>    9. Why waiting timeout? why cannot find symbol? (Su Zhang)
>   10. Re: Lexer rule with alternatives (Newbie question)
>       ( ?????? ????????? )
>   11. Write comments to templates (Chris Sekszczynska)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 22 Nov 2008 09:45:21 +1300
> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] How to get the last token type just
> 	recognized in the lexer?
> To: "chain one" <chainone at gmail.com>, antlr-interest
> 	<antlr-interest at antlr.org>
> Message-ID: <20081121204543.C4ABF11EAED at www.antlr.org>
> Content-Type: text/plain; charset="us-ascii"; format=flowed
>
> At 02:30 22/11/2008, chain one wrote:
>>INT
>>:    (DIGIT)+
>>;
>>
>>FLOAT
>>:    '.' (DIGIT)+ (('e' | 'E') ('+' | '-')? (DIGIT)+)?
>>|    '.' ('e' | 'E') ('+' | '-')? (DIGIT)+
>>      ;
>>
>>DIGIT
>>:'0'..'9'
>>;
> [...]
>>So it seems that the only solution is to predict the last token
>>just recognized, if the last token is a INT, then FLOAT rule
>>should be followed.
>>
>>so I need to know what the last token is.
>>calling function LA(-1) could do this, however LA(-1) is only
>>available in parser not in lexer
>
> You're asking the wrong question.  Instead of trying to work out
> INTs followed by FLOATs, simply recognise it as a FLOAT in the
> first place:
>
> protected DIGIT: '0'..'9';
>
> protected EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;
>
> FLOAT
>    : '.' (DIGIT)+ (EXPONENT)?
>    ;
>
> INT
>    : (DIGIT)+
>      ( FLOAT { $setType(FLOAT); }
>      | EXPONENT { $setType(FLOAT); }
>      )?
>    ;
>
> (".e16" by itself shouldn't be recognised as a float anyway.)
>
>
>
> ------------------------------
>
> Message: 2
> Date: Fri, 21 Nov 2008 21:56:37 +0100
> From: Simon <cocoa at gmx.ch>
> Subject: [antlr-interest] Java Grammar
> To: antlr-interest Interest <antlr-interest at antlr.org>
> Message-ID: <1B35796C-F70C-446B-BA7B-737EA04A144D at gmx.ch>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
> hi
>
> I'm trying to build an AST for a Java like language. The hardest part
> (if you want to built a meaningful AST) is the section of
> unaryExpressionNotPlusMinus (see grammar fragments at end or the
> Java.g grammar on antlr.org).
>
> I have successfully built ASTs for the following constructs (using
> semantic predicates based on a symbol table)
>
>    ^(FIELD_ACCESS target Identifier)
>    ^(INVOKE target Identifier arguments)
>    ^(ARRAY_ACCESS target expr)
>
> However, I'm struggling with fully qualified type names, such as those
> in
>
>    java.lang.Integer.parseInt("123")
>
> Of course, I want something like
>
>    ^(INVOKE ^(TYPE_REFERENCE ...) arguments)
>
> The problem is that I somehow have to look ahead to detect whether it
> is a qualified type name (don't know how the precedence is if there is
> a variable named java with a field named lang that has a field named
> Integer that has method named parseInt, but that's another problem). I
> could write my own semantic predicate method that looks ahead in the
> input to detect a qualified type name. Is there an easier way to do
> that? Or am I approaching the problem from the wrong side?
>
> I've tried to look at the Java grammar from langtools recently posted
> in this list, but didn't get any smarter (they rely heavily on the
> existing javac classes).
>
> Thanks
> Simon
>
>
>
> unaryExpressionNotPlusMinus
>      :   ...
>      |   primary selector* ('++'|'--')?
>      ;
>
> primary
>      :   parExpression
>      |   literal
>      |   'new' creator
>      |   Identifier ('.' Identifier)* identifierSuffix?   // this is
> the hard / interesting part
>      |   primitiveType ('[' ']')* '.' 'class'
>      |   'void' '.' 'class'
>      ;
>
> identifierSuffix
>      :   ('[' ']')+ '.' 'class'
>      |   ('[' expression ']')+ // can also be matched by selector, but
> do here
>      |   arguments
>      |   '.' 'class'
>      ;
>
> selector
>      :   '.' Identifier arguments?
>      |   '[' expression ']'
>      ;
>
>
>
> ------------------------------
>
> Message: 3
> Date: Sat, 22 Nov 2008 13:50:40 +0800
> From: "chain one" <chainone at gmail.com>
> Subject: [antlr-interest] Could the AST of ANTLR be used to write an
> 	Interpreter?
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<5a92ffb60811212150w4396fb05j1c256acf749ada87 at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I mean the Abstract Syntax Tree interpreters
>
> Has anybody ever used ANTLR to write this kind of interpreter?
>
> If yes, could you drop me some material related to this? Thanks.
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/14c46fe8/attachment-0001.html
>
> ------------------------------
>
> Message: 4
> Date: Sat, 22 Nov 2008 18:49:16 +0300
> From: " ?????? ????????? " <gmdidro at gmail.com>
> Subject: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<1dcb5c470811220749u46bf38bwa43ed521a4470350 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hello,
> why such grammar doesn't work properly:
> --------------------------------------------------------------------------------------
> expr	:
>         operand ((oper) operand)*
>       	;
> //Correct operands
> operand	:
> 	INT
> 	;
> OPER: ('+'|'-'|'*'|'/')
> 	;
> INT	:	
> 	('0'..'9')+
> 	;
> --------------------------------------------------------------------------------------
>> t+1
> line 0:3 mismatched input '+' expecting EOF
>
> But if I replace the Lexer rule by Parser rule:
>
> oper: ('+'|'-'|'*'|'/');
>
> All work as it should. Why I should't use Lexer rule with alternatives ?
>
> Thank you
>
>
> ------------------------------
>
> Message: 5
> Date: Sat, 22 Nov 2008 11:23:58 -0500
> From: "John B. Brodie" <jbb at acm.org>
> Subject: Re: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: antlr-interest at antlr.org
> Message-ID: <200811221123.58695.jbb at acm.org>
> Content-Type: text/plain; charset="iso-8859-1"
>
>> Hello,
>
> Greetings!
>
>> why such grammar doesn't work properly:
>> ---------------------------------------------------------------------------
>>----------- expr????:
>> ? ? ? ? operand ((oper) operand)*
>                             ^^^^^^
> I assume you mean the lexer rule OPER here?
>> ? ? ? ??;
>> //Correct operands
>> operand?:
>> ????????INT
>> ????????;
>> OPER: ('+'|'-'|'*'|'/')
>> ????????;
>> INT?????:???????
>> ????????('0'..'9')+
>> ????????;
>> ---------------------------------------------------------------------------
>>-----------
>>
>> > t+1
>     ^^^
> your grammar does specify anything for how to handle the character 't'
>
>>
>> line 0:3 mismatched input '+' expecting EOF
>>
>> But if I replace the Lexer rule by Parser rule:
>>
>> oper: ('+'|'-'|'*'|'/');
>>
>> All work as it should. Why I should't use Lexer rule with alternatives ?
>>
>
> works for me with the following changes: (1) changed reference to oper to be
> OPER in the rule expr, and (2) changed the test input to be "1+1"
>
> i am using ANTLR v3.1 from 12 August 2008.
>
> my test source grammar is this:
>
> //-----cut here-----
>
>> Thank you
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/27413b7a/attachment-0001.html
>
> ------------------------------
>
> Message: 6
> Date: Sat, 22 Nov 2008 17:26:12 +0100
> From: Johannes Luber <jaluber at gmx.de>
> Subject: Re: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: ?????? ????????? 	<gmdidro at gmail.com>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <492832A4.1010705 at gmx.de>
> Content-Type: text/plain; charset=UTF-8
>
> ?????? ????????? schrieb:
>> Hello,
>> why such grammar doesn't work properly:
>> --------------------------------------------------------------------------------------
>> expr	:
>>         operand ((oper) operand)*
>>       	;
>> //Correct operands
>> operand	:
>> 	INT
>> 	;
>> OPER: ('+'|'-'|'*'|'/')
>> 	;
>> INT	:	
>> 	('0'..'9')+
>> 	;
>> --------------------------------------------------------------------------------------
>>> t+1
>> line 0:3 mismatched input '+' expecting EOF
>>
>> But if I replace the Lexer rule by Parser rule:
>>
>> oper: ('+'|'-'|'*'|'/');
>>
>> All work as it should. Why I should't use Lexer rule with alternatives ?
>
> The problem with your example is that in the expr rule you use oper, but
> define OPER as rule. Did you overlook this while posting or does even
>
> expr	:
>          operand (OPER operand)*
>        	;
>
> not work? Nonetheless, the usual way to define operands is to create a
> single rule for each operand and reference those lexer rules in a single
> parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
> implicit lexer rules doing it this way simulates the described approach,
> but there can be problems as '+' used in to different rules will create
> two distinct token types which will cause a MismatchedTokenTypeException
> later.
>
> Johannes
>>
>> Thank you
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> ------------------------------
>
> Message: 7
> Date: Sat, 22 Nov 2008 19:50:40 +0300
> From: " ?????? ????????? " <gmdidro at gmail.com>
> Subject: Re: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<1dcb5c470811220850v61e3f3d9n92d47d6f8fdd0ec9 at mail.gmail.com>
> Content-Type: text/plain; charset=KOI8-R
>
> Sorry for many misprints. I experiment with grammar and post
> intermediate variant.
>
> My question is below:
> I have a grammar:
>
> expr	:
> 	(operand) (OPER operand)*
> 	;
> operand	:
> 	ID|INT
> 	;
> OPER	:
> 	('+'|'-'|'*'|'/')
> 	;
> INT	:	
> 	('0'..'9')+
> 	;
> ID	:
> 	('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
> 	;
>
> And for the input "t+1", I have the error:
> line 1:4 mismatched input '+'
>
> But when I switch "OPER" to "oper", All work as it should. I don't
> understand Why it's so.
>
> Thank you
>
> 2008/11/22 Johannes Luber <jaluber at gmx.de>:
>> ?????? ????????? schrieb:
>>> Hello,
>>> why such grammar doesn't work properly:
>>> --------------------------------------------------------------------------------------
>>> expr  :
>>>         operand ((oper) operand)*
>>>               ;
>>> //Correct operands
>>> operand       :
>>>       INT
>>>       ;
>>> OPER: ('+'|'-'|'*'|'/')
>>>       ;
>>> INT   :
>>>       ('0'..'9')+
>>>       ;
>>> --------------------------------------------------------------------------------------
>>>> t+1
>>> line 0:3 mismatched input '+' expecting EOF
>>>
>>> But if I replace the Lexer rule by Parser rule:
>>>
>>> oper: ('+'|'-'|'*'|'/');
>>>
>>> All work as it should. Why I should't use Lexer rule with alternatives ?
>>
>> The problem with your example is that in the expr rule you use oper, but
>> define OPER as rule. Did you overlook this while posting or does even
>>
>> expr    :
>>         operand (OPER operand)*
>>        ;
>>
>> not work? Nonetheless, the usual way to define operands is to create a
>> single rule for each operand and reference those lexer rules in a single
>> parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
>> implicit lexer rules doing it this way simulates the described approach,
>> but there can be problems as '+' used in to different rules will create
>> two distinct token types which will cause a MismatchedTokenTypeException
>> later.
>>
>> Johannes
>>>
>>> Thank you
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
> ------------------------------
>
> Message: 8
> Date: Sat, 22 Nov 2008 12:16:48 -0500
> From: "John B. Brodie" <jbb at acm.org>
> Subject: Re: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: antlr-interest at antlr.org
> Message-ID: <200811221216.48631.jbb at acm.org>
> Content-Type: text/plain; charset="iso-8859-1"
>
>> My question is below:
>> I have a grammar:
>>
>> expr????:
>> ????????(operand) (OPER operand)*
>> ????????;
>> operand?:
>> ????????ID|INT
>> ????????;
>> OPER????:
>> ????????('+'|'-'|'*'|'/')
>> ????????;
>> INT?????:???????
>> ????????('0'..'9')+
>> ????????;
>> ID??????:
>> ????????('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>> ????????;
>>
>> And for the input "t+1", I have the error:
>> line 1:4 mismatched input '+'
>>
> works for me. no errors reported. using the attached test rig under ANTLR
> v3.1, August 12, 2008.
>
>> But when I switch "OPER" to "oper", All work as it should. I don't
>> understand Why it's so.
>>
>> Thank you
> Hope this helps.
> --
> John B. Brodie
>
> //---------------------begin attachment-------------------------
> grammar Test;
>
> options {
> 	output = AST;
> 	ASTLabelType = CommonTree;
> }
>
> @members {
>     private static final String [] x = new String[]{
>         "1+1", "t+1"
>     };
>
>     public static void main(String [] args) {
>         for( int i = 0; i < x.length; ++i ) {
>             try {
>                 System.out.println("about to parse:`"+x[i]+"`");
>                 TestLexer lexer = new TestLexer(new
> ANTLRStringStream(x[i]));
>                 CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>                 TestParser parser = new TestParser(tokens);
>                 TestParser.expr_return p_result = parser.expr();
>
>                 CommonTree ast = p_result.tree;
>                 if( ast == null ) {
>                    System.out.println("resultant tree: is NULL");
>                 } else {
>                    System.out.println("resultant tree: " +
> ast.toStringTree());
>                 }
>                 System.out.println();
>             } catch(Exception e) {
>                 e.printStackTrace();
>             }
>         }
>     }
> }
>
> expr    :
>         (operand) (OPER operand)*
>         ;
> operand :
>         ID|INT
>         ;
> OPER    :
>         ('+'|'-'|'*'|'/')
>         ;
> INT     :
>         ('0'..'9')+
>         ;
> ID      :
>         ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>         ;
> //---------------------end of attachment------------------------
>
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/694a8c9c/attachment-0001.html
>
> ------------------------------
>
> Message: 9
> Date: Sat, 22 Nov 2008 11:36:39 -0600
> From: "Su Zhang" <westlifezs at gmail.com>
> Subject: [antlr-interest] Why waiting timeout? why cannot find symbol?
> To: antlr-interest at antlr.org
> Message-ID:
> 	<e2842950811220936g10dd156fweadfecac7d77cd6b at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi all,
>
> I meet two very strange problems when debugging my program,the first
> one is "timeout waiting connect remote parser", the other is cannot
> find symbol
> [11:17:54] symbol  : variable b64
> [11:17:54] location: class assignment6Parser
> [11:17:54]             b64=i.getText();
> is anybody have solutions to similar problems?
> here is my grammar just for common tree
> :
>
> grammar assignment6;
>
> options {
>     output=AST;
>     ASTLabelType=CommonTree;
>     k=*;
>     memoize = true;
> }
>
> tokens {
>         CredentialHeader  = '-----BEGIN MPKI CREDENTIAL-----';
>         CredentialEnd  = '-----END MPKI CREDENTIAL-----';
>         PublicKeyHeader  = '-----BEGIN PUBLIC KEY-----';
>         PublicKeyEnd = '-----END PUBLIC KEY-----';
>         SignatureHeader  = '-----BEGIN SIGNATURE-----';
>         SignatureEnd  = '-----END SIGNATURE-----';
>         ValidityHeader  = '-----BEGIN VALIDITY-----';
>         ValidityEnd = '-----END VALIDITY-----';
>         CertHeader = '-----BEGIN MPKI CERTIFICATE-----';
>         CertEnd  = '-----END MPKI CERTIFICATE-----';
>         ChallengeHeader  = '-----BEGIN MPKI CHALLENGE-----';
>         ChallengeEnd = '-----END MPKI CHALLENGE-----';
>         ResponseHeader = '-----BEGIN MPKI CHALLENGE RESPONSE-----';
>         ResponseEnd  = '-----END MPKI CHALLENGE RESPONSE-----';
>         RequestHeader = '-----BEGIN REPOSITORY CLIENT REQUEST-----';
>         RequestEnd = '-----END REPOSITORY CLIENT REQUEST-----';
>         ReplyHeader  = '-----BEGIN REPOSITORY SERVER REPLY-----';
>         ReplyEnd  = '-----END REPOSITORY SERVER REPLY-----';
>         NotBefore  = 'Not before:';
>         NotAfter  = 'Not after:';
>         DAYTIME = 'daytime';
>         Read = 'read';
>         Write = 'write';
>         Commit = 'commit';
>         //Says = 'says';
>        // Granted = 'granted';
>         //Denied = 'denied';
>        // request = 'request';
>
> }
>
> @header {
>
> }
>
> @lexer::header {
> //package certificate;
>
> }
> prog    :    credential
>     ;
>
> credential
>     :    CredentialHeader publicKey certificate* CredentialEnd
>     ;
>
> certificate returns [ String cert ]
>     :   CertHeader clause+ validity? publicKey signature CertEnd
>         { /*cert = 74*/}
>     ;
>
> signature
>     :  SignatureHeader b=base{}	 SignatureEnd
>      // { isTypeName(b.getText()); }
>     ;
>
> validity  returns [String v]
>     : ValidityHeader NotBefore tb= timeTuple NotAfter ta= timeTuple
> ValidityEnd
>     { /*v= tb + ta;*/ }
>     ;
>
> timeTuple  returns [String time]
>     : 'datime' '('t1= num ','t2= num ','t3= num ','t4= num ','t5= num
> ','t6= num ')' '.'
>     {//time= new timeTuple(t1, t2, t3, t4, t5 ,t6);
>     // time = "daytime" + '(' + t1 + ','+ t2 +','+ t3 +',' + t4+',' +
> t5+',' +t6 + ')';
>     }
>     ;
>
> //num    returns [String t]
>       //  :n = Num
>        // {/*t = n.getText();*/}
>        // ;
>
> clause    : literal '.' | literal ':-' literal (',' literal)* '.'
>     ;
>
> literal    : predicate | 'says' '(' id ',' predicate')'
>     ;
>
>
> predicate
>     : id'(' id ( ',' id)* ')'
>     ;
>
>
> publicKey
>     :    PublicKeyHeader b=base PublicKeyEnd
>      // { isTypeName(b.getText()); }
>     ;
>
> challenge
>     :     ChallengeHeader base ChallengeEnd
>     ;
> response
>     :     ResponseHeader b= base ResponseEnd
>           //  { isTypeName(b.getText()); }
>     ;
>
> //Base64Block
> //       : s =Base64Block
> //           {isType(s.getText())}? Base64Block
> //       ;
> base  returns [String b64 ]	
>      : i= ID {!(i.getText().contains("-"))
> }?{!(i.getText().contains("_"))}? {b64=i.getText();}
>      ;
> id  returns [String identification]	
>      : ident= ID
> {!(ident.getText().contains("+"))}?{!(ident.getText().contains("="))}?{!(ident.getText().contains("/"))}?
>  {identification= ident.getText();}
>      ;
> num  	  returns [String no]
>         :	n= ID {no=
> n.getText();}{n.getText().contains("0")}?{n.getText().contains("1")}?{n.getText().contains("2")}?{n.getText().contains("3")}?{n.getText().contains("4")}?{n.getText().contains("5")}?{n.getText().contains("6")}?{n.getText().contains("7")}?{n.getText().contains("8")}?{n.getText().contains("9")}?
>         ;
> request
>     :     RequestHeader 'request' '('op ',' ID ')' RequestEnd
>     ;
> op      :    'read' | Write | Commit
>     ;
> reply      :     ReplyHeader result ReplyEnd
>     ;
> result  :     'granted' | 'denied'
>     ;
>
> ID   :	  ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '='| '-'| '_'|':')*
>      ;
> //Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_'
> |'-'| '0'..'9' ) *;
> //Base64Block      : ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '=')*;
> //ChallengeBlock   : ( 'a'..'z' | 'A'..'Z' | 'O'..'9'| ':')* ;
> //Num   :     ( '0'..'9' ) * ;
> //fragment
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>     ;
>
> thanks alot!
>
>
> 2008/11/21, antlr-interest-request at antlr.org
> <antlr-interest-request at antlr.org>:
>> Send antlr-interest mailing list submissions to
>> 	antlr-interest at antlr.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>> 	http://www.antlr.org/mailman/listinfo/antlr-interest
>> or, via email, send a message with subject or body 'help' to
>> 	antlr-interest-request at antlr.org
>>
>> You can reach the person managing the list at
>> 	antlr-interest-owner at antlr.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of antlr-interest digest..."
>>
>>
>> Today's Topics:
>>
>>    1. StringTemplates in C? (Robert Soule)
>>    2. Re: StringTemplates in C? (Sam Harwell)
>>    3. Does it make sense to use Antlr for interactive	parsing?
>>       (Vishwanath Hawargi)
>>    4. Re: StringTemplates in C? (Jim Idle)
>>    5. Re: Does it make sense to use Antlr for interactive parsing?
>>       (Jim Idle)
>>    6. Updated vim syntax highlighter (Davyd Madeley)
>>    7. Re: Maven builds, hudson continuous (Jean Bovet)
>>    8. How to get the last token type just recognized in	the lexer?
>>       (chain one)
>>    9. Re: Updated vim syntax highlighter (Jim Idle)
>>   10. Re: Updated vim syntax highlighter (Terence Parr)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Thu, 20 Nov 2008 15:38:27 -0500
>> From: "Robert Soule" <robert.soule at gmail.com>
>> Subject: [antlr-interest] StringTemplates in C?
>> To: antlr-interest at antlr.org
>> Message-ID:
>> 	<d1316fd70811201238x5fc18f9aga508c3764ed1421a at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Hi,
>>
>> Is there a port of StringTemplates to C? I would like to have my
>> tree grammar with C target language output templates, but I can't
>> seem to compile my grammar, The www.stringtemplate.org
>> website only says "with ports for C# and Python", which makes
>> me suspect I'm in for some bad news...
>>
>> -Robert
>>
>>
>> ------------------------------
>>
>> Message: 2
>> Date: Thu, 20 Nov 2008 14:52:28 -0600
>> From: "Sam Harwell" <sharwell at pixelminegames.com>
>> Subject: Re: [antlr-interest] StringTemplates in C?
>> To: "Robert Soule" <robert.soule at gmail.com>,
>> 	<antlr-interest at antlr.org>
>> Message-ID:
>> 	<86403CA0939415448BCCB83855EFE09A64E911 at Bloodymary.ironwillgames.com>
>> Content-Type: text/plain;	charset="us-ascii"
>>
>> StringTemplate relies heavily on features that would be extremely
>> difficult to duplicate in C. If there was ever a "port" of
>> StringTemplate to C, it would altered to the point of being a different
>> product.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robert Soule
>> Sent: Thursday, November 20, 2008 2:38 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] StringTemplates in C?
>>
>> Hi,
>>
>> Is there a port of StringTemplates to C? I would like to have my
>> tree grammar with C target language output templates, but I can't
>> seem to compile my grammar, The www.stringtemplate.org
>> website only says "with ports for C# and Python", which makes
>> me suspect I'm in for some bad news...
>>
>> -Robert
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
>> ess
>>
>>
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Thu, 20 Nov 2008 15:13:11 -0600
>> From: "Vishwanath Hawargi" <vhawargi at gmail.com>
>> Subject: [antlr-interest] Does it make sense to use Antlr for
>> 	interactive	parsing?
>> To: antlr-interest at antlr.org
>> Message-ID:
>> 	<4c63b36c0811201313k31488297rd9f85bb99415674a at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Hello,
>>  Another dumb question from me.
>>
>> I am looking for parsing an expression from the command line. Each of
>> these expressions are syntactically correct.
>> Instead of having a input file, i am having one expression at a time
>> to  be processed.
>> In this situation is it optimal/ ok to use antlr to validate and
>> generate the tokens?
>>
>> Also, how do i process input arg instead of input file?
>>
>> please let me know.
>>
>> thank you.
>> vishwa
>>
>>
>> ------------------------------
>>
>> Message: 4
>> Date: Thu, 20 Nov 2008 14:44:28 -0800
>> From: Jim Idle <jimi at temporal-wave.com>
>> Subject: Re: [antlr-interest] StringTemplates in C?
>> To: Robert Soule <robert.soule at gmail.com>
>> Cc: antlr-interest at antlr.org
>> Message-ID: <1227221068.22288.53.camel at jimi.temporal-wave.com>
>> Content-Type: text/plain; charset="us-ascii"
>>
>> On Thu, 2008-11-20 at 15:38 -0500, Robert Soule wrote:
>>
>>> Hi,
>>>
>>> Is there a port of StringTemplates to C? I would like to have my
>>> tree grammar with C target language output templates, but I can't
>>> seem to compile my grammar, The www.stringtemplate.org
>>> website only says "with ports for C# and Python", which makes
>>> me suspect I'm in for some bad news...
>>
>>
>> Stringtemplate is object based, so there is no way to create a C port,
>> at least as the design stands. Something similar could be created but
>> would probably be relatively unwieldy.
>>
>> Jim
>>
>>
>>>
>>> -Robert
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/4655e873/attachment-0001.html
>>
>> ------------------------------
>>
>> Message: 5
>> Date: Thu, 20 Nov 2008 14:50:02 -0800
>> From: Jim Idle <jimi at temporal-wave.com>
>> Subject: Re: [antlr-interest] Does it make sense to use Antlr for
>> 	interactive parsing?
>> Cc: antlr-interest at antlr.org
>> Message-ID: <1227221402.22288.56.camel at jimi.temporal-wave.com>
>> Content-Type: text/plain; charset="us-ascii"
>>
>> On Thu, 2008-11-20 at 15:13 -0600, Vishwanath Hawargi wrote:
>>
>>> Hello,
>>>  Another dumb question from me.
>>>
>>> I am looking for parsing an expression from the command line. Each of
>>> these expressions are syntactically correct.
>>> Instead of having a input file, i am having one expression at a time
>>> to  be processed.
>>> In this situation is it optimal/ ok to use antlr to validate and
>>> generate the tokens?
>>>
>>> Also, how do i process input arg instead of input file?
>>>
>>
>>
>> It makes sense if the input is relatively complicated, but if it is
>> just: command {options} something, then probably custom code is as good.
>> You run it exactly the same way as a file but use the StringStream
>> rather than the file stream. See teh api docs:
>>
>> http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_string_stream.html
>> http://www.antlr.org/api/Java
>>
>> Jim
>>
>>
>>> please let me know.
>>>
>>> thank you.
>>> vishwa
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://www.antlr.org/pipermail/antlr-interest/attachments/20081120/721a45a1/attachment-0001.html
>>
>> ------------------------------
>>
>> Message: 6
>> Date: Fri, 21 Nov 2008 13:32:58 +0900
>> From: Davyd Madeley <davyd at fugro-fsi.com.au>
>> Subject: [antlr-interest] Updated vim syntax highlighter
>> To: antlr-interest at antlr.org
>> Message-ID: <1227241978.751.152.camel at tc35>
>> Content-Type: text/plain; charset="us-ascii"
>>
>> I found an old vim syntax highlighter on antlr-interest,  but it didn't
>> deal very nicely with some things in my grammar.
>>
>> I've updated it and thought I'd share it with anyone who might be
>> interested.
>>
>> Add it to ~/.vim/syntax/
>>
>> And add something like this to your .vimrc:
>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>
>> Regards,
>> --davyd
>>
>> --
>> Davyd Madeley        Software Engineer
>> Fugro Seismic Imaging, Perth Australia
>> -------------- next part --------------
>> A non-text attachment was scrubbed...
>> Name: antlr3.vim
>> Type: application/octet-stream
>> Size: 2040 bytes
>> Desc: not available
>> Url :
>> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0e4bcde1/attachment-0001.obj
>>
>> ------------------------------
>>
>> Message: 7
>> Date: Thu, 20 Nov 2008 22:06:36 -0800
>> From: Jean Bovet <antlr-list at arizona-software.ch>
>> Subject: Re: [antlr-interest] Maven builds, hudson continuous
>> To: Terence Parr <parrt at cs.usfca.edu>
>> Cc: antlr-interest <antlr-interest at antlr.org>
>> Message-ID: <0990F569-A597-4BC1-9A04-AA97257C1077 at arizona-software.ch>
>> Content-Type: text/plain; charset=US-ASCII; format=flowed
>>
>> Great job Jim!
>>
>> Jean
>>
>> On Nov 20, 2008, at 10:28 AM, Terence Parr wrote:
>>
>>> HI everyone,
>>>
>>> Just wanted to follow up on this note to recognize Jim Idle (or is it
>>> Idol!?) for his extraordinary efforts to get maven and the continuous
>>> build server Hudson working! It really is a huge improvement in an
>>> area that I always lag behind (build systems).
>>>
>>> I'll update the website to include all of these links for easy
>>> reference.
>>>
>>> Ter
>>>
>>> On Nov 19, 2008, at 4:39 PM, Jim Idle wrote:
>>>
>>>> As some of you may have noticed, a lot of work has been done lately
>>>> to provide the ANTLR components as Maven artifacts
>>>> (http://maven.apache.org/
>>>> ), to provide an auto-syncing repository so that new release are
>>>> available via Maven within 4 hours of release and finally to create
>>>> Maven projects so that it is easy for people other than Ter to build
>>>> ANTLR.
>>>>
>>>> If you build Java projects and have not come across Maven then I
>>>> highly recommend taking the 10 minute tour as it is pretty useful.
>>>>
>>>> As a side effect of this work, if you install the Maven plugin into
>>>> your IDE (Netbeans/IDEA/Eclipse) then you will find that you can
>>>> open the directory that contains the ANTLR source code (look for the
>>>> pom.xml file) in the IDE and it will automatically know how to build
>>>> and test the software.
>>>>
>>>> A further side effect however, should make the need for you to build
>>>> your own development snapshots. This is because we have also
>>>> implemented an instance of the Hudson continuous build server. Here
>>>> you can find the latests build status of all the ANTLR tools and you
>>>> can download the latest development snapshot, if you are not using
>>>> Maven.
>>>>
>>>> You can find the hudson reports at: http://www.antlr.org:8888/
>>>> hudson  (JIRA is still at http://www.antlr.org:8888 )
>>>>
>>>> Finally, if you are a Maven user and for some reason feel the need
>>>> to build with the latest snapshot releases (perhaps to get a bug fix
>>>> and so on), then you can connect to the ANTLR snapshot repository by
>>>> specifying it in your maven pom.xml file as follows:
>>>>
>>>> <project> ...
>>>>
>>>>    <!--
>>>>
>>>>    Inform Maven of the ANTLR snapshot repository, which it will
>>>>    need to consult to get the latest snapshot build of the runtime
>>>>    and tool directories if it was not built and installed locally.
>>>>    -->
>>>>    <repositories>
>>>>
>>>>        <!--
>>>>        This is the ANTLR repository.
>>>>        -->
>>>>        <repository>
>>>>            <id>antlr-snapshot</id>
>>>>            <name>ANTLR Testing Snapshot Repository</name>
>>>>            <url>http://antlr.org/antlr-snapshot</url>
>>>>            <snapshots>
>>>>                <enabled>true</enabled>
>>>>                <updatePolicy>always</updatePolicy>
>>>>            </snapshots>
>>>>        </repository>
>>>>
>>>>    </repositories>
>>>> ...
>>>> </project>
>>>>
>>>>
>>>> Jim
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 8
>> Date: Fri, 21 Nov 2008 21:30:57 +0800
>> From: "chain one" <chainone at gmail.com>
>> Subject: [antlr-interest] How to get the last token type just
>> 	recognized in	the lexer?
>> To: antlr-interest <antlr-interest at antlr.org>
>> Message-ID:
>> 	<5a92ffb60811210530p6f807a85mb3968c853fe9e93f at mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> I am right now using antlr V2 to write a parser.And I meet this
>> problem,don't know how to fix it.
>> The problem is:
>>
>> Lexer rule:
>>
>>
>> INT
>> :    (DIGIT)+
>> ;
>>
>> FLOAT
>> :    '.' (DIGIT)+ (('e' | 'E') ('+' | '-')? (DIGIT)+)?
>> |    '.' ('e' | 'E') ('+' | '-')? (DIGIT)+
>>      ;
>>
>> DIGIT
>> : '0'..'9'
>> ;
>>
>> I want to match the strings like:
>>
>> 0.1E-10
>> 0.1e+1
>> 0.0
>>
>> 0.E14
>>
>> To deal with the case like:"class.e9", ".e9" here could be accepted by
>> FLOAT
>> rule and ID rule
>>
>> So it seems that the only solution is to predict the last token just
>> recognized, if the last token is a INT, then FLOAT rule should be
>> followed.
>>
>> so I need to know what the last token is.
>> calling function LA(-1) could do this, however LA(-1) is only available in
>> parser not in lexer
>>
>> So...Is there anyone could tell me how to get the last token type
>> just recognized in the lexer?
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/0ce5b75c/attachment-0001.html
>>
>> ------------------------------
>>
>> Message: 9
>> Date: Fri, 21 Nov 2008 09:23:05 -0800
>> From: Jim Idle <jimi at temporal-wave.com>
>> Subject: Re: [antlr-interest] Updated vim syntax highlighter
>> To: Davyd Madeley <davyd at fugro-fsi.com.au>
>> Cc: antlr-interest at antlr.org
>> Message-ID: <1227288185.22288.89.camel at jimi.temporal-wave.com>
>> Content-Type: text/plain; charset="us-ascii"
>>
>> On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:
>>
>>> I found an old vim syntax highlighter on antlr-interest,  but it didn't
>>> deal very nicely with some things in my grammar.
>>>
>>> I've updated it and thought I'd share it with anyone who might be
>>> interested.
>>>
>>> Add it to ~/.vim/syntax/
>>>
>>> And add something like this to your .vimrc:
>>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>>
>>
>> Works a treat for me :-)
>>
>> We should put this up as a download.
>>
>> Jim
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://www.antlr.org/pipermail/antlr-interest/attachments/20081121/12af141d/attachment-0001.html
>>
>> ------------------------------
>>
>> Message: 10
>> Date: Fri, 21 Nov 2008 11:34:47 -0800
>> From: Terence Parr <parrt at cs.usfca.edu>
>> Subject: Re: [antlr-interest] Updated vim syntax highlighter
>> To: Jim Idle <jimi at temporal-wave.com>
>> Cc: antlr-interest at antlr.org
>> Message-ID: <4AA6C070-81E3-4F0E-B9C1-FA4ED4BD4C51 at cs.usfca.edu>
>> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>>
>> It's in share now.
>> Ter
>> On Nov 21, 2008, at 9:23 AM, Jim Idle wrote:
>>
>>> On Fri, 2008-11-21 at 13:32 +0900, Davyd Madeley wrote:
>>>>
>>>> I found an old vim syntax highlighter on antlr-interest,  but it
>>>> didn't
>>>> deal very nicely with some things in my grammar.
>>>>
>>>> I've updated it and thought I'd share it with anyone who might be
>>>> interested.
>>>>
>>>> Add it to ~/.vim/syntax/
>>>>
>>>> And add something like this to your .vimrc:
>>>> au BufRead,BufNewFile *.g       set syntax=antlr3
>>>>
>>> Works a treat for me :-)
>>>
>>> We should put this up as a download.
>>>
>>> Jim
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> ------------------------------
>>
>> _______________________________________________
>> antlr-interest mailing list
>> antlr-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/antlr-interest
>>
>>
>> End of antlr-interest Digest, Vol 48, Issue 19
>> **********************************************
>>
>
>
> --
> Su Zhang
> Computer Information and Science
> Kansas State University
>
>
> ------------------------------
>
> Message: 10
> Date: Sat, 22 Nov 2008 20:44:17 +0300
> From: " ?????? ????????? " <gmdidro at gmail.com>
> Subject: Re: [antlr-interest] Lexer rule with alternatives (Newbie
> 	question)
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<1dcb5c470811220944s642bae21hd5a791396bc9c1be at mail.gmail.com>
> Content-Type: text/plain; charset=KOI8-R
>
>> but there can be problems as '+' used in to different rules will create
>> two distinct token types which will cause a MismatchedTokenTypeException
>> later.
>
> This is exactly what happens with my grammar.
> Thank you very much.
>
> 2008/11/22 Johannes Luber <jaluber at gmx.de>:
>> ?????? ????????? schrieb:
>>> Hello,
>>> why such grammar doesn't work properly:
>>> --------------------------------------------------------------------------------------
>>> expr  :
>>>         operand ((oper) operand)*
>>>               ;
>>> //Correct operands
>>> operand       :
>>>       INT
>>>       ;
>>> OPER: ('+'|'-'|'*'|'/')
>>>       ;
>>> INT   :
>>>       ('0'..'9')+
>>>       ;
>>> --------------------------------------------------------------------------------------
>>>> t+1
>>> line 0:3 mismatched input '+' expecting EOF
>>>
>>> But if I replace the Lexer rule by Parser rule:
>>>
>>> oper: ('+'|'-'|'*'|'/');
>>>
>>> All work as it should. Why I should't use Lexer rule with alternatives ?
>>
>> The problem with your example is that in the expr rule you use oper, but
>> define OPER as rule. Did you overlook this while posting or does even
>>
>> expr    :
>>         operand (OPER operand)*
>>        ;
>>
>> not work? Nonetheless, the usual way to define operands is to create a
>> single rule for each operand and reference those lexer rules in a single
>> parser rule for convenience. As "oper: ('+'|'-'|'*'|'/');" creates
>> implicit lexer rules doing it this way simulates the described approach,
>> but there can be problems as '+' used in to different rules will create
>> two distinct token types which will cause a MismatchedTokenTypeException
>> later.
>>
>> Johannes
>>>
>>> Thank you
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
> ------------------------------
>
> Message: 11
> Date: Sat, 22 Nov 2008 19:39:02 +0100
> From: Chris Sekszczynska <Development at ChrisSek.de>
> Subject: [antlr-interest] Write comments to templates
> To: antlr-interest at antlr.org
> Message-ID: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C at ChrisSek.de>
> Content-Type: text/plain; charset="us-ascii"
>
> Hi all,
>
> after a longer search, I don't found a good way  to write comments
> from the source file to template output. My workflow is the following:
>
> 	Lexer (which puts comments into the hidden channel) -> parser (which
> creates an AST) -> walker (which writes output using StringTemplate)
>
> Now I like to write all comments occurring in the source file to the
> (nearly) same position in the destination file. So I have to pass the
> comments to the walker. Of cause, I could simply put the comments into
> the default token stream and add "Comment?" to every position in every
> rule. This will make my parser and walker grammars unreadable.
>
> Isn't there a better solution? Is it, for example, possible to scan
> the token stream parallel while the AST is parsed? So it could be
> possible to write comments to the StringTemplate output just after
> they appear in the input stream at the nearly same position (using
> token.index).
>
> I know, that it is not quite clear where to put comments occurring in
> the input stream. But it's not so important to keep the context. It's
> more important to write the comments more or less to the same position.
>
> Thanks for your help in advance.
>
> Kind regards,
>
> Chris
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/49d56a56/attachment-0001.html
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
>
> End of antlr-interest Digest, Vol 48, Issue 20
> **********************************************
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University

From jimi at temporal-wave.com  Sat Nov 22 19:18:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 22 Nov 2008 19:18:33 -0800
Subject: [antlr-interest] how can i return a string including a regular
 express?
In-Reply-To: <e2842950811221831w1a8c3396xf8be2c99d28bc28@mail.gmail.com>
References: <e2842950811221831w1a8c3396xf8be2c99d28bc28@mail.gmail.com>
Message-ID: <1227410313.4481.45.camel@jimi.temporal-wave.com>

On Sat, 2008-11-22 at 20:31 -0600, Su Zhang wrote:

> HI everyone,
> 
> the problem is, I want to return a string which includes a regular
> express, like  i1=id1'(' i2=id1 ( ',' i3=id1)* ')', on the left of
> equals are label variables which are not included in the return
> string, and I use the method {String k=','+$i3.text;
> $p=$i1.text+'('+$i2.text + k*+')';} to assemble the return value p,
> but it won't work, it says that the * cannot be applied in this kind
> of express, so does everyone know a method to handle this kind of
> problem?


That's because it can't be applied like that ;-). * means zero or more
instances, so you want to put the action for $i3 within the * construct:

returns [String retStr]
... ( ',' i3=id1  { $retStr += $i3.text; } )* ...

Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/f2434a3b/attachment.html 

From jared.bunting at peachjean.com  Sat Nov 22 20:34:47 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Sat, 22 Nov 2008 22:34:47 -0600
Subject: [antlr-interest] Write comments to templates
In-Reply-To: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
References: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
Message-ID: <b15aaba10811222034p7472d729nc6200483720c6eed@mail.gmail.com>

Not sure if it will meet your needs or not, but you might want to look at
the rewrite functionality.  It should allow you to use your source file as a
starting point, and replace code in it with your template output.  By
ignoring comments in your parser, I would think the rewrite would simply
leave those where they are.

-Jared

On Sat, Nov 22, 2008 at 12:39 PM, Chris Sekszczynska <
Development at chrissek.de> wrote:

> Hi all,
> after a longer search, I don't found a good way  to write comments from the
> source file to template output. My workflow is the following:
>
> Lexer (which puts comments into the hidden channel) -> parser (which
> creates an AST) -> walker (which writes output using StringTemplate)
>
> Now I like to write all comments occurring in the source file to the
> (nearly) same position in the destination file. So I have to pass the
> comments to the walker. Of cause, I could simply put the comments into the
> default token stream and add "Comment?" to *every* position in *every*rule. This will make my parser and walker grammars unreadable.
>
> Isn't there a better solution? Is it, for example, possible to scan the
> token stream parallel while the AST is parsed? So it could be possible to
> write comments to the StringTemplate output just after they appear in the
> input stream at the nearly same position (using token.index).
>
> I know, that it is not quite clear where to put comments occurring in the
> input stream. But it's not so important to keep the context. It's more
> important to write the comments more or less to the same position.
>
> Thanks for your help in advance.
>
> Kind regards,
>
> Chris
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081122/e25c6864/attachment.html 

From dr_a2002 at hotmail.com  Sun Nov 23 00:27:44 2008
From: dr_a2002 at hotmail.com (Ahmad Al-Naimi)
Date: Sun, 23 Nov 2008 08:27:44 +0000
Subject: [antlr-interest] Embedded actions for while-loop
Message-ID: <BLU121-W4693B909ABBF8CE3F084F0E7090@phx.gbl>





Hello,

All the documentation provided with Antlr concentrate on the grammar and tree construction (understandably).
I'm working on developing a small interpreter, and will use one of the grammars in the examples with modifications.
However, I couldn't find any grammar example ready with actions (except for simple calculator examples... very primitive nothing new).

I'm struggling to build the embedded actions for the "if" and "while" grammars. I'm relying on standard C-style grammar, so I should be able to compile something like:

if (a>1)
{
   // some code here
}

while(a>1)
{
   // some code here
}

The output is Java. However, examples of any other language is appreciated.
Any links or resources with embedded actions (something more advanced than a calculator)?
Or any hints in this regard?

Thanks a lot!
Naimi

_________________________________________________________________
Connect to the next generation of MSN Messenger?
http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/a0500290/attachment.html 

From antlr at mirality.co.nz  Sun Nov 23 00:58:57 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 23 Nov 2008 21:58:57 +1300
Subject: [antlr-interest] Write comments to templates
In-Reply-To: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
References: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
Message-ID: <20081123085906.5F7D811E9DB@www.antlr.org>

At 07:39 23/11/2008, Chris Sekszczynska wrote:
>Now I like to write all comments occurring in the source file to 
>the (nearly) same position in the destination file. So I have to 
>pass the comments to the walker. Of cause, I could simply put the 
>comments into the default token stream and add "Comment?" to 
>every position in every rule. This will make my parser and walker 
>grammars unreadable.
>
>Isn't there a better solution? Is it, for example, possible to 
>scan the token stream parallel while the AST is parsed? So it 
>could be possible to write comments to the StringTemplate output 
>just after they appear in the input stream at the nearly same 
>position (using token.index).

I haven't actually done it myself, so I don't know the 
specifics.  But it's possible to put the comments on a separate 
channel (not the hidden channel) and then either use a separate 
parser "tuned" to that channel (so it only sees the comments) and 
then splice the ASTs together outside of ANTLR, or to scan through 
the token stream in your standard parser between two known 
reference points looking for off-channel tokens to include.


From Development at ChrisSek.de  Sun Nov 23 03:10:02 2008
From: Development at ChrisSek.de (Chris Sekszczynska)
Date: Sun, 23 Nov 2008 12:10:02 +0100
Subject: [antlr-interest] Write comments to templates
In-Reply-To: <20081123085906.5F7D811E9DB@www.antlr.org>
References: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
	<20081123085906.5F7D811E9DB@www.antlr.org>
Message-ID: <3DE6047E-17D1-4CA4-98A7-D8828A769B80@ChrisSek.de>

Hi Gavin,

in general, a good idea. This would simplify the parser. But what's  
about the walker? After splicing the ASTs, the walker has to expect an  
^(comment ...) subtree everywhere (or at least after / before every  
statement).

Is it possible to let the walker walk two ASTs? Synchronization can be  
achieved by using the TokenWithIndex class, for example. But how to  
implement this? Is there a method which I have to overwrite? How  
complex this would be?

Kind regards,

Chris

Am 23.11.2008 um 09:58 schrieb Gavin Lambert:

> I haven't actually done it myself, so I don't know the
> specifics.  But it's possible to put the comments on a separate
> channel (not the hidden channel) and then either use a separate
> parser "tuned" to that channel (so it only sees the comments) and
> then splice the ASTs together outside of ANTLR, or to scan through
> the token stream in your standard parser between two known
> reference points looking for off-channel tokens to include.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/e3e33ac5/attachment.html 

From cocoa at gmx.ch  Sun Nov 23 03:34:13 2008
From: cocoa at gmx.ch (Simon)
Date: Sun, 23 Nov 2008 12:34:13 +0100
Subject: [antlr-interest] Java Grammar
In-Reply-To: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>
Message-ID: <41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>

I try to rephrase my question. I don't know how to handle some of the  
primary constructs of the Java grammar.

  Integer.parseInt("123")
  x.y(a, b)
  x[12][34]
  String.class
  java.util.Arrays.class

are all pretty simple to detect with a symbol table and the  
information from the imports. But how do I handle qualified type  
names, such as the one in

  java.util.Arrays.asList("1", "2")

Conceptually, I need something like the following:

  primary
      :    { isType(Identifier ('.' Identifier)*) } Identifier ('.'  
Identifier)* ...
      ;

That is, I have to stop as soon as I have a type name  
(the .asList("1", "2") part should be parsed as selector).

This combination of semantic and syntactic predicate does not exist  
out of the box. I could write a semantic predicate. But, is there an  
easier way?

How would you write your parser to detect qualified type name  
constructs? Any help is appreciated!

Simon

On Nov 21, 2008, at 21:56 , Simon wrote:

> hi
>
> I'm trying to build an AST for a Java like language. The hardest part
> (if you want to built a meaningful AST) is the section of
> unaryExpressionNotPlusMinus (see grammar fragments at end or the
> Java.g grammar on antlr.org).
>
> I have successfully built ASTs for the following constructs (using
> semantic predicates based on a symbol table)
>
>   ^(FIELD_ACCESS target Identifier)
>   ^(INVOKE target Identifier arguments)
>   ^(ARRAY_ACCESS target expr)
>
> However, I'm struggling with fully qualified type names, such as those
> in
>
>   java.lang.Integer.parseInt("123")
>
> Of course, I want something like
>
>   ^(INVOKE ^(TYPE_REFERENCE ...) arguments)
>
> The problem is that I somehow have to look ahead to detect whether it
> is a qualified type name (don't know how the precedence is if there is
> a variable named java with a field named lang that has a field named
> Integer that has method named parseInt, but that's another problem). I
> could write my own semantic predicate method that looks ahead in the
> input to detect a qualified type name. Is there an easier way to do
> that? Or am I approaching the problem from the wrong side?
>
> I've tried to look at the Java grammar from langtools recently posted
> in this list, but didn't get any smarter (they rely heavily on the
> existing javac classes).
>
> Thanks
> Simon
>
>
>
> unaryExpressionNotPlusMinus
>     :   ...
>     |   primary selector* ('++'|'--')?
>     ;
>
> primary
>     :   parExpression
>     |   literal
>     |   'new' creator
>     |   Identifier ('.' Identifier)* identifierSuffix?   // this is
> the hard / interesting part
>     |   primitiveType ('[' ']')* '.' 'class'
>     |   'void' '.' 'class'
>     ;
>
> identifierSuffix
>     :   ('[' ']')+ '.' 'class'
>     |   ('[' expression ']')+ // can also be matched by selector, but
> do here
>     |   arguments
>     |   '.' 'class'
>     ;
>
> selector
>     :   '.' Identifier arguments?
>     |   '[' expression ']'
>     ;
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jaluber at gmx.de  Sun Nov 23 06:57:12 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 23 Nov 2008 15:57:12 +0100
Subject: [antlr-interest] Java Grammar
In-Reply-To: <41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>
	<41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
Message-ID: <49296F48.6000407@gmx.de>

Simon schrieb:
> I try to rephrase my question. I don't know how to handle some of the  
> primary constructs of the Java grammar.
> 
>   Integer.parseInt("123")
>   x.y(a, b)
>   x[12][34]
>   String.class
>   java.util.Arrays.class
> 
> are all pretty simple to detect with a symbol table and the  
> information from the imports. But how do I handle qualified type  
> names, such as the one in
> 
>   java.util.Arrays.asList("1", "2")
> 
> Conceptually, I need something like the following:
> 
>   primary
>       :    { isType(Identifier ('.' Identifier)*) } Identifier ('.'  
> Identifier)* ...
>       ;
> 
> That is, I have to stop as soon as I have a type name  
> (the .asList("1", "2") part should be parsed as selector).
> 
> This combination of semantic and syntactic predicate does not exist  
> out of the box. I could write a semantic predicate. But, is there an  
> easier way?
> 
> How would you write your parser to detect qualified type name  
> constructs? Any help is appreciated!
> 
> Simon

On the download page there are example grammars. One of them is a Java
grammar without the heavy interaction with javac. A similar language to
Java is C#. The official grammar for it is available on
<http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf>.

Johannes
> 
> On Nov 21, 2008, at 21:56 , Simon wrote:
> 
>> hi
>>
>> I'm trying to build an AST for a Java like language. The hardest part
>> (if you want to built a meaningful AST) is the section of
>> unaryExpressionNotPlusMinus (see grammar fragments at end or the
>> Java.g grammar on antlr.org).
>>
>> I have successfully built ASTs for the following constructs (using
>> semantic predicates based on a symbol table)
>>
>>   ^(FIELD_ACCESS target Identifier)
>>   ^(INVOKE target Identifier arguments)
>>   ^(ARRAY_ACCESS target expr)
>>
>> However, I'm struggling with fully qualified type names, such as those
>> in
>>
>>   java.lang.Integer.parseInt("123")
>>
>> Of course, I want something like
>>
>>   ^(INVOKE ^(TYPE_REFERENCE ...) arguments)
>>
>> The problem is that I somehow have to look ahead to detect whether it
>> is a qualified type name (don't know how the precedence is if there is
>> a variable named java with a field named lang that has a field named
>> Integer that has method named parseInt, but that's another problem). I
>> could write my own semantic predicate method that looks ahead in the
>> input to detect a qualified type name. Is there an easier way to do
>> that? Or am I approaching the problem from the wrong side?
>>
>> I've tried to look at the Java grammar from langtools recently posted
>> in this list, but didn't get any smarter (they rely heavily on the
>> existing javac classes).
>>
>> Thanks
>> Simon
>>
>>
>>
>> unaryExpressionNotPlusMinus
>>     :   ...
>>     |   primary selector* ('++'|'--')?
>>     ;
>>
>> primary
>>     :   parExpression
>>     |   literal
>>     |   'new' creator
>>     |   Identifier ('.' Identifier)* identifierSuffix?   // this is
>> the hard / interesting part
>>     |   primitiveType ('[' ']')* '.' 'class'
>>     |   'void' '.' 'class'
>>     ;
>>
>> identifierSuffix
>>     :   ('[' ']')+ '.' 'class'
>>     |   ('[' expression ']')+ // can also be matched by selector, but
>> do here
>>     |   arguments
>>     |   '.' 'class'
>>     ;
>>
>> selector
>>     :   '.' Identifier arguments?
>>     |   '[' expression ']'
>>     ;
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From westlifezs at gmail.com  Sun Nov 23 09:52:05 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 09:52:05 -0800
Subject: [antlr-interest] how can i get a return string from the parser
Message-ID: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com>

Hi all,

My program needs a string from Parser, but there is not any function
provided in the public class parser, how can I get the string outside? I
mean I want to get the string generated from the rules of antlr(functions in
parser), and I have written  "returns[String s]" to indicate that I need the
value, but how can i get the String? does anybody familiar with this kind of
problem?

Thank you!

-- 
Su Zhang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/bd29d63e/attachment.html 

From yang.jiang.z at gmail.com  Sun Nov 23 10:25:56 2008
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Sun, 23 Nov 2008 10:25:56 -0800
Subject: [antlr-interest] Java Grammar
In-Reply-To: <49296F48.6000407@gmx.de>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>	<41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
	<49296F48.6000407@gmx.de>
Message-ID: <4929A034.3090905@gmail.com>

Hi Simon,

I guess that would not be possible. Consider the following two cases,
class A {
    static b b;
}

class b {
    static String bField;
    public static void main(String[] args) {
       A.b.bField ="s";                                    // "A" is the 
type, "b.bField" field access
    }
}
----------------------------------------------------

package A;

class b {
    static int bField;
    public static void main(String[] args) {
        A.b.bField = 0;                             // "A.b" is the 
type, "bField" field access
    }
}

So it's not possible to identify the type here without knowing the 
context. (Although it's possible to do so in other constructs like 
import declaration).

The way javac parses these is that each '.' is parsed as a select, then 
if you see a '(', it's a method call, or a '[' for array access etc...
In fact, the grammar you are using- the one on ANTLR website, is derived 
from JLS chapter 18 
(http://java.sun.com/docs/books/jls/third_edition/html/syntax.html)
which actually says
    The grammar presented piecemeal in the preceding chapters is much 
better for exposition, but it is not well suited as a basis for a 
parser.The grammar presented in this chapter is the basis for the 
reference implementation.

So, this grammar is actually a representation how Sun guys build their 
parser, so it might not be suitable for your job.
Say rules like this

classOrInterfaceDeclaration
    :   classOrInterfaceModifiers (classDeclaration | interfaceDeclaration)
    ;


doesn't take advantage of ANTLR's look ahead features, it's like this 
because the hand written javac parser can't see passing modifiers.

You can try to use the Compiler Grammar copy of Java.g, which is a 
little more tuned for ANTLR and better tested.

Yang








Johannes Luber wrote:
> Simon schrieb:
>   
>> I try to rephrase my question. I don't know how to handle some of the  
>> primary constructs of the Java grammar.
>>
>>   Integer.parseInt("123")
>>   x.y(a, b)
>>   x[12][34]
>>   String.class
>>   java.util.Arrays.class
>>
>> are all pretty simple to detect with a symbol table and the  
>> information from the imports. But how do I handle qualified type  
>> names, such as the one in
>>
>>   java.util.Arrays.asList("1", "2")
>>
>> Conceptually, I need something like the following:
>>
>>   primary
>>       :    { isType(Identifier ('.' Identifier)*) } Identifier ('.'  
>> Identifier)* ...
>>       ;
>>
>> That is, I have to stop as soon as I have a type name  
>> (the .asList("1", "2") part should be parsed as selector).
>>
>> This combination of semantic and syntactic predicate does not exist  
>> out of the box. I could write a semantic predicate. But, is there an  
>> easier way?
>>
>> How would you write your parser to detect qualified type name  
>> constructs? Any help is appreciated!
>>
>> Simon
>>     
>
> On the download page there are example grammars. One of them is a Java
> grammar without the heavy interaction with javac. A similar language to
> Java is C#. The official grammar for it is available on
> <http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf>.
>
> Johannes
>   
>> On Nov 21, 2008, at 21:56 , Simon wrote:
>>
>>     
>>> hi
>>>
>>> I'm trying to build an AST for a Java like language. The hardest part
>>> (if you want to built a meaningful AST) is the section of
>>> unaryExpressionNotPlusMinus (see grammar fragments at end or the
>>> Java.g grammar on antlr.org).
>>>
>>> I have successfully built ASTs for the following constructs (using
>>> semantic predicates based on a symbol table)
>>>
>>>   ^(FIELD_ACCESS target Identifier)
>>>   ^(INVOKE target Identifier arguments)
>>>   ^(ARRAY_ACCESS target expr)
>>>
>>> However, I'm struggling with fully qualified type names, such as those
>>> in
>>>
>>>   java.lang.Integer.parseInt("123")
>>>
>>> Of course, I want something like
>>>
>>>   ^(INVOKE ^(TYPE_REFERENCE ...) arguments)
>>>
>>> The problem is that I somehow have to look ahead to detect whether it
>>> is a qualified type name (don't know how the precedence is if there is
>>> a variable named java with a field named lang that has a field named
>>> Integer that has method named parseInt, but that's another problem). I
>>> could write my own semantic predicate method that looks ahead in the
>>> input to detect a qualified type name. Is there an easier way to do
>>> that? Or am I approaching the problem from the wrong side?
>>>
>>> I've tried to look at the Java grammar from langtools recently posted
>>> in this list, but didn't get any smarter (they rely heavily on the
>>> existing javac classes).
>>>
>>> Thanks
>>> Simon
>>>
>>>
>>>
>>> unaryExpressionNotPlusMinus
>>>     :   ...
>>>     |   primary selector* ('++'|'--')?
>>>     ;
>>>
>>> primary
>>>     :   parExpression
>>>     |   literal
>>>     |   'new' creator
>>>     |   Identifier ('.' Identifier)* identifierSuffix?   // this is
>>> the hard / interesting part
>>>     |   primitiveType ('[' ']')* '.' 'class'
>>>     |   'void' '.' 'class'
>>>     ;
>>>
>>> identifierSuffix
>>>     :   ('[' ']')+ '.' 'class'
>>>     |   ('[' expression ']')+ // can also be matched by selector, but
>>> do here
>>>     |   arguments
>>>     |   '.' 'class'
>>>     ;
>>>
>>> selector
>>>     :   '.' Identifier arguments?
>>>     |   '[' expression ']'
>>>     ;
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>       
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From cocoa at gmx.ch  Sun Nov 23 11:11:09 2008
From: cocoa at gmx.ch (Simon)
Date: Sun, 23 Nov 2008 20:11:09 +0100
Subject: [antlr-interest] Java Grammar
In-Reply-To: <4929A034.3090905@gmail.com>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>	<41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
	<49296F48.6000407@gmx.de> <4929A034.3090905@gmail.com>
Message-ID: <B308A875-5325-4470-B145-F5BF137524DA@gmx.ch>

Hi

I'm aware that it is not possible to do this without context. That's  
why I keep symbol tables, all imports, ... at hand to handle those  
situations. Using semantic predicates it should be possible to build a  
meaningful AST (that is an AST with subtree nodes representing  
operations such as invoke method, invoke static method, field  
access, ...).

But I've just realized that without access to the referenced classes  
(source or binary form) it is still not possible to do that.

  a.b.c.D.X.z()

Where does the class name end and the field access start? There is  
simply no way to answer that question without access to the classes.  
Let's say there is class named a.b.c.D, then I know that X must be a  
static field in that class with a method named z. With that knowledge  
it should be possible to write semantic predicates that allow to  
properly build a meaningful AST (I want to use the AST building  
functionality of ANTLR; I'm free to build whatever AST form I like,  
there is no existing AST for what I want to do).

As I'm pretty new to ANTLR, I'm just wondering whether this is the  
"correct" way to approach the problem.

Simon

PS: the language I try an AST for is not Java, but it is close enough  
to use the Java grammar as my starting point

On Nov 23, 2008, at 19:25 , Yang Jiang wrote:

> Hi Simon,
>
> I guess that would not be possible. Consider the following two cases,
> class A {
>   static b b;
> }
>
> class b {
>   static String bField;
>   public static void main(String[] args) {
>      A.b.bField ="s";                                    // "A" is  
> the type, "b.bField" field access
>   }
> }
> ----------------------------------------------------
>
> package A;
>
> class b {
>   static int bField;
>   public static void main(String[] args) {
>       A.b.bField = 0;                             // "A.b" is the  
> type, "bField" field access
>   }
> }
>
> So it's not possible to identify the type here without knowing the  
> context. (Although it's possible to do so in other constructs like  
> import declaration).

> The way javac parses these is that each '.' is parsed as a select,  
> then if you see a '(', it's a method call, or a '[' for array access  
> etc...
> In fact, the grammar you are using- the one on ANTLR website, is  
> derived from JLS chapter 18 (http://java.sun.com/docs/books/jls/third_edition/html/syntax.html 
> )
> which actually says
>   The grammar presented piecemeal in the preceding chapters is much  
> better for exposition, but it is not well suited as a basis for a  
> parser.The grammar presented in this chapter is the basis for the  
> reference implementation.
>
> So, this grammar is actually a representation how Sun guys build  
> their parser, so it might not be suitable for your job.
> Say rules like this
>
> classOrInterfaceDeclaration
>   :   classOrInterfaceModifiers (classDeclaration |  
> interfaceDeclaration)
>   ;
>
>
> doesn't take advantage of ANTLR's look ahead features, it's like  
> this because the hand written javac parser can't see passing  
> modifiers.
>
> You can try to use the Compiler Grammar copy of Java.g, which is a  
> little more tuned for ANTLR and better tested.
>
> Yang
>
>
>
>
>
>
>
>
> Johannes Luber wrote:
>> Simon schrieb:
>>
>>> I try to rephrase my question. I don't know how to handle some of  
>>> the  primary constructs of the Java grammar.
>>>
>>>  Integer.parseInt("123")
>>>  x.y(a, b)
>>>  x[12][34]
>>>  String.class
>>>  java.util.Arrays.class
>>>
>>> are all pretty simple to detect with a symbol table and the   
>>> information from the imports. But how do I handle qualified type   
>>> names, such as the one in
>>>
>>>  java.util.Arrays.asList("1", "2")
>>>
>>> Conceptually, I need something like the following:
>>>
>>>  primary
>>>      :    { isType(Identifier ('.' Identifier)*) } Identifier  
>>> ('.'  Identifier)* ...
>>>      ;
>>>
>>> That is, I have to stop as soon as I have a type name   
>>> (the .asList("1", "2") part should be parsed as selector).
>>>
>>> This combination of semantic and syntactic predicate does not  
>>> exist  out of the box. I could write a semantic predicate. But, is  
>>> there an  easier way?
>>>
>>> How would you write your parser to detect qualified type name   
>>> constructs? Any help is appreciated!
>>>
>>> Simon
>>>
>>
>> On the download page there are example grammars. One of them is a  
>> Java
>> grammar without the heavy interaction with javac. A similar  
>> language to
>> Java is C#. The official grammar for it is available on
>> <http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf 
>> >.
>>
>> Johannes
>>
>>> On Nov 21, 2008, at 21:56 , Simon wrote:
>>>
>>>
>>>> hi
>>>>
>>>> I'm trying to build an AST for a Java like language. The hardest  
>>>> part
>>>> (if you want to built a meaningful AST) is the section of
>>>> unaryExpressionNotPlusMinus (see grammar fragments at end or the
>>>> Java.g grammar on antlr.org).
>>>>
>>>> I have successfully built ASTs for the following constructs (using
>>>> semantic predicates based on a symbol table)
>>>>
>>>>  ^(FIELD_ACCESS target Identifier)
>>>>  ^(INVOKE target Identifier arguments)
>>>>  ^(ARRAY_ACCESS target expr)
>>>>
>>>> However, I'm struggling with fully qualified type names, such as  
>>>> those
>>>> in
>>>>
>>>>  java.lang.Integer.parseInt("123")
>>>>
>>>> Of course, I want something like
>>>>
>>>>  ^(INVOKE ^(TYPE_REFERENCE ...) arguments)
>>>>
>>>> The problem is that I somehow have to look ahead to detect  
>>>> whether it
>>>> is a qualified type name (don't know how the precedence is if  
>>>> there is
>>>> a variable named java with a field named lang that has a field  
>>>> named
>>>> Integer that has method named parseInt, but that's another  
>>>> problem). I
>>>> could write my own semantic predicate method that looks ahead in  
>>>> the
>>>> input to detect a qualified type name. Is there an easier way to do
>>>> that? Or am I approaching the problem from the wrong side?
>>>>
>>>> I've tried to look at the Java grammar from langtools recently  
>>>> posted
>>>> in this list, but didn't get any smarter (they rely heavily on the
>>>> existing javac classes).
>>>>
>>>> Thanks
>>>> Simon
>>>>
>>>>
>>>>
>>>> unaryExpressionNotPlusMinus
>>>>    :   ...
>>>>    |   primary selector* ('++'|'--')?
>>>>    ;
>>>>
>>>> primary
>>>>    :   parExpression
>>>>    |   literal
>>>>    |   'new' creator
>>>>    |   Identifier ('.' Identifier)* identifierSuffix?   // this is
>>>> the hard / interesting part
>>>>    |   primitiveType ('[' ']')* '.' 'class'
>>>>    |   'void' '.' 'class'
>>>>    ;
>>>>
>>>> identifierSuffix
>>>>    :   ('[' ']')+ '.' 'class'
>>>>    |   ('[' expression ']')+ // can also be matched by selector,  
>>>> but
>>>> do here
>>>>    |   arguments
>>>>    |   '.' 'class'
>>>>    ;
>>>>
>>>> selector
>>>>    :   '.' Identifier arguments?
>>>>    |   '[' expression ']'
>>>>    ;
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>


From antlr at mirality.co.nz  Sun Nov 23 11:49:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 24 Nov 2008 08:49:43 +1300
Subject: [antlr-interest] Java Grammar
In-Reply-To: <B308A875-5325-4470-B145-F5BF137524DA@gmx.ch>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>
	<41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
	<49296F48.6000407@gmx.de> <4929A034.3090905@gmail.com>
	<B308A875-5325-4470-B145-F5BF137524DA@gmx.ch>
Message-ID: <20081123194954.5055411EABC@www.antlr.org>

At 08:11 24/11/2008, Simon wrote:
 >But I've just realized that without access to the referenced
 >classes (source or binary form) it is still not possible to
 >do that.
 >
 >  a.b.c.D.X.z()
 >
 >Where does the class name end and the field access start?
 >There is simply no way to answer that question without
 >access to the classes.

Well, I've noticed that normally Java namespaces tend to have a 
lowercase initial letter, while classes have an uppercase initial 
letter.  Is that actually a requirement of the language or is it 
just a convention?  If it's a requirement then you should be able 
to use that as a hint :)

Otherwise, you're right, you'll need access to the classes.  But 
you'd need that anyway if you want to verify that the 
classes/members being used actually exist (as javac does).


From antlr at mirality.co.nz  Sun Nov 23 11:51:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 24 Nov 2008 08:51:19 +1300
Subject: [antlr-interest] how can i get a return string from the parser
In-Reply-To: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com
 >
References: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com>
Message-ID: <20081123195128.E67C211EAE2@www.antlr.org>

At 06:52 24/11/2008, Su Zhang wrote:
>My program needs a string from Parser, but there is not any 
>function provided in the public class parser, how can I get the 
>string outside? I mean I want to get the string generated from 
>the rules of antlr(functions in parser), and I have 
>written  "returns[String s]" to indicate that I need the value, 
>but how can i get the String? does anybody familiar with this 
>kind of problem?

It's a return value.  That means it's actually returned from the 
parser method.  (Depending on your grammar, it might be returned 
directly or inside a structure.  Examine the generated code.)


From james.abley at gmail.com  Sun Nov 23 12:04:44 2008
From: james.abley at gmail.com (James Abley)
Date: Sun, 23 Nov 2008 20:04:44 +0000
Subject: [antlr-interest] Java Grammar
In-Reply-To: <20081123194954.5055411EABC@www.antlr.org>
References: <1B35796C-F70C-446B-BA7B-737EA04A144D@gmx.ch>
	<41412D93-9761-4E5D-966D-EE2E34068F0E@gmx.ch>
	<49296F48.6000407@gmx.de> <4929A034.3090905@gmail.com>
	<B308A875-5325-4470-B145-F5BF137524DA@gmx.ch>
	<20081123194954.5055411EABC@www.antlr.org>
Message-ID: <23fce8e60811231204x978f15bo4f29c44bbbf726bf@mail.gmail.com>

2008/11/23 Gavin Lambert <antlr at mirality.co.nz>:
> At 08:11 24/11/2008, Simon wrote:
>  >But I've just realized that without access to the referenced
>  >classes (source or binary form) it is still not possible to
>  >do that.
>  >
>  >  a.b.c.D.X.z()
>  >
>  >Where does the class name end and the field access start?
>  >There is simply no way to answer that question without
>  >access to the classes.
>
> Well, I've noticed that normally Java namespaces tend to have a
> lowercase initial letter, while classes have an uppercase initial
> letter.  Is that actually a requirement of the language or is it
> just a convention?  If it's a requirement then you should be able
> to use that as a hint :)

Convention only. There are some notable packages which break the
convention; Doug Lea's concurrency library springs to mind.

http://g.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/intro.html

>
> Otherwise, you're right, you'll need access to the classes.  But
> you'd need that anyway if you want to verify that the
> classes/members being used actually exist (as javac does).
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From westlifezs at gmail.com  Sun Nov 23 12:38:28 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 12:38:28 -0800
Subject: [antlr-interest] how can i get a return string from the parser
In-Reply-To: <4929b441.070bca0a.3bc8.0072SMTPIN_ADDED@mx.google.com>
References: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com>
	<4929b441.070bca0a.3bc8.0072SMTPIN_ADDED@mx.google.com>
Message-ID: <e2842950811231238u1dd55e12y862b6ce11d2bd4ee@mail.gmail.com>

Hi Gavin

but the class cannot be applied by the outside source, right? then how can
get the value out of the program? i mean i want to call the function in the
main function, yet it is generated in the internal class of the parser
class, right? then how can i get this value in the main fuction?

thank you

Su
2008/11/23 Gavin Lambert <antlr at mirality.co.nz>

> At 06:52 24/11/2008, Su Zhang wrote:
>
>> My program needs a string from Parser, but there is not any function
>> provided in the public class parser, how can I get the string outside? I
>> mean I want to get the string generated from the rules of antlr(functions in
>> parser), and I have written  "returns[String s]" to indicate that I need the
>> value, but how can i get the String? does anybody familiar with this kind of
>> problem?
>>
>
> It's a return value.  That means it's actually returned from the parser
> method.  (Depending on your grammar, it might be returned directly or inside
> a structure.  Examine the generated code.)
>
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/9454d320/attachment.html 

From james.abley at gmail.com  Sun Nov 23 13:20:48 2008
From: james.abley at gmail.com (James Abley)
Date: Sun, 23 Nov 2008 21:20:48 +0000
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
	<49186F9A.6090402@quantdev.com>
	<23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>
	<23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>
Message-ID: <23fce8e60811231320x7fc4dc9dyaa26959947fc42fd@mail.gmail.com>

2008/11/18 James Abley <james.abley at gmail.com>:
> Hi all,
>
> Sorry, I'm still stuck with this. I have taken the sample grammar from
> the book and reduced it as small as I know how currently.
>
>
> grammar Expr;
>
> options {
>        output=AST;
>        ASTLabelType=CommonTree;
>        k = 1;
> }
>
> prog    :       (stat {System.out.println($stat.tree.toStringTree());} )+ ;
>
> stat    :       expr    -> expr
>        ;
>
> expr    :       multExpr (('+' ^  | '-'^) multExpr)*
>        ;
>
> multExpr        :       atom ('*'^ atom)*
>        ;
>
> atom    :       INT
>        |       function
>        /* We don't want nodes for the parentheses */
>        |       '('! expr ')'!
>        ;
>
> /* We don't want nodes for the paretheses or commas. */
> function        :       FUNCNAME^ (WS)* '('! (WS)* (expr ( (WS)* ','! (WS)* expr )* )? ')'! ;
>
> FUNCNAME        :       ( 'a' .. 'z' | 'A' .. 'Z')+  ;
> INT     :       '0' .. '9'+ ;
> WS      :       ( ' ' | '\t' | '\n' | '\r' ) + {skip(); };
>
>
> I then have a tree grammar to go with this AST grammar.
>
>
>
> tree grammar Eval;
>
> options {
>        tokenVocab=Expr;        // read the token types from Expr.tokens
>        ASTLabelType=CommonTree;
> }
>
> prog    :       stat+ ;
>
> stat    :       expr
>                { System.out.println($expr.value); }
>        ;
>
> expr returns [int value]
>        :       ^('+' a=expr b=expr) { $value = a+b; }
>        |       ^('-' a=expr b=expr) { $value = a-b; }
>        |       ^('*' a=expr b=expr) { $value = a*b; }
>        |       ^( FUNCNAME expr*) { /* What do I do here? */ }
>        |       INT     {$value = Integer.parseInt($INT.text); }
>        ;
>
>
> I'm not sure how to plugin in the function evaluation using just the
> tree grammar.
>
>    @Test
>    public void simpleAdditionDefinedInGrammar() throws Exception {
>        ExprLexer lexer = new ExprLexer(new ANTLRStringStream("1+15+23-3"));
>        CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>        ExprParser parser = new ExprParser(tokens);
>        ExprParser.expr_return r = parser.expr();
>
>        CommonTree tree = (CommonTree) r.getTree();
>
>        CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>
>        Eval eval = new Eval(nodes);
>
>        assertEquals(36, eval.expr());
>    }
>
> Evaluation using the rules defined in the grammar works fine, as per
> my test above. I need to have an environment to allow function binding
> and dispatch so that I can have a simple Java API for people to
> implement functions against, without having to know ANTLR and alter
> the grammar.
>
> Am I approaching this problem in the right way?
>
> I have been able to walk the CommonTree that I get back from the
> parser, but I'm not sure I'm doing that in the right way either. Is
> there an existing ANTLR API to walk / visit trees?
>
> [1] JUnit TestEval - http://pastie.org/317730 - the second test fails
> since my tree grammar currently has no way to do any sort of lookup to
> a function.
> [2] Function - http://pastie.org/317734
> [3] AddFunction - http://pastie.org/317733
> [4] Environment - http://pastie.org/317736
> [5] TreeEvaluator - http://pastie.org/317737
>
> Cheers,
>
> James
>>>
>>> James Abley wrote:
>>>>
>>>> Hi,
>>>>
>>>> I'm an ANTLR newbie. A code base that I work on has various expression
>>>> evaluation aspects. I have to add to this by defining various
>>>> functions that can be evaluated. ANTLR seemed like a good way of
>>>> separating out the parsing aspects and should let my colleagues
>>>> concentrate on just defining and plugging in new functions without
>>>> having to know much about parsing, etc. I've skimmed the ANTLR
>>>> Reference book, but don't quite have the time to go in depth at this
>>>> point.
>>>>
>>>> I've written a grammar, which seems to do what I need. Doubtless it
>>>> could be trimmed a bit as I learn more. Where I'm stuck is the
>>>> connection between having a grammar which can parse the input and how
>>>> it gets evaluated.
>>>>
>>>> The baggage that I'm struggling with is how to define my environment,
>>>> bind variables, create stack frames, etc.
>>>>
>>>> I think this would be as part of a tree grammar the re-uses the tokens
>>>> from the AST grammar, but would like to confirm.
>>>>
>>>> Cheers,
>>>>
>>>> James
>>>>
>>>>
>>>>
>>>> grammar Eval;
>>>>
>>>> options {
>>>>        output = AST;
>>>> //      tokenVocab=Expr; // Read token types from Expr.tokens resource
>>>> //      ASTLabelType=CommonTree;    // The Java type of the nodes.
>>>> }
>>>>
>>>> tokens {
>>>>        FUNC;   // function call
>>>>        STR;
>>>> }
>>>>
>>>> @parser::header {
>>>> package com.example.expression;
>>>> }
>>>>
>>>> @lexer::header {
>>>> package com.example.expression;
>>>> }
>>>>
>>>> stat    :       expr+;
>>>>
>>>> /*
>>>> For now, we define expr very basically. We don't need to support
>>>> addition, multiplication or other operators. But if we
>>>> do, the grammar is easy to alter.
>>>> */
>>>> expr    :       atom
>>>>        ;
>>>> //multExpr ( ( '+' | '-') multExpr)*;
>>>>
>>>> //multExpr
>>>> //      :       unaryExpr (( '*' | '/') unaryExpr)*;
>>>>
>>>> //unaryExpr
>>>> //      :       ('+' | '-')?  atom
>>>> //      ;
>>>>
>>>> /* Basic constituent of an expression.*/
>>>> atom    :       var
>>>>        |       LPAREN expr RPAREN      // Rule to allow nested
>>>> expressions.
>>>>        |       functionCall
>>>>        |       stringLiteral
>>>>        |       number
>>>>        ;
>>>>
>>>> functionCall
>>>>        :       functionName LPAREN ( expr (COMMA expr)* )? RPAREN      ->
>>>> ^(FUNC
>>>> functionName expr*)
>>>>        ;
>>>>
>>>> functionName
>>>>        :       ALPHA (ALPHA | '-' | '_' | DIGIT )* ;
>>>> /*
>>>> Added to indicate how we currently reference bound variables in
>>>> expressions.. This lets us parse them easily enough.
>>>> with a view to consolidating our expression evaluation code into this
>>>> ANTLR-based version.
>>>> */
>>>> var     :       '$' ALPHA (ALPHA | '-' | '_' | DIGIT)*
>>>>        ;
>>>>
>>>> stringLiteral   :       '"'  ~'"'* '"'
>>>>        |       '\'' ~'\''* '\''
>>>>        ;
>>>>
>>>> number  :       DIGIT+ ('.' DIGIT+)?
>>>>        ;
>>>>
>>>> DIGIT
>>>>        :       '0' .. '9';
>>>>
>>>> ALPHA
>>>>        :        'a' .. 'z'
>>>>        |        'A' .. 'Z';
>>>>
>>>> COMMA
>>>>        :       (WS* ',' WS*);
>>>>
>>>> LPAREN
>>>>        :       (WS*  '(' WS*);
>>>> RPAREN
>>>>        :       (WS* ')' WS*);
>>>>
>>>> WS
>>>>        :       ' '
>>>>        |       '\t';
>>>>

Hi,

Any suggestions on this (including further books to read?). I think I
have a conceptual block to break from being too tightly wedded to my
ideas of how to implement this using hand-written parser; in
particular my experiences with things like Java XPath libraries. I
just need a hand getting through that block.

Cheers,

James

From refsdal.ivar at gmail.com  Sun Nov 23 14:20:27 2008
From: refsdal.ivar at gmail.com (Ivar Refsdal)
Date: Sun, 23 Nov 2008 17:20:27 -0500
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <23fce8e60811231320x7fc4dc9dyaa26959947fc42fd@mail.gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>	<49186F9A.6090402@quantdev.com>	<23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>	<23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>
	<23fce8e60811231320x7fc4dc9dyaa26959947fc42fd@mail.gmail.com>
Message-ID: <4929D72B.6090600@gmail.com>

Hi,

I'm also a newbie (thus everything could be wrong) so I can't help that 
much... But anyway:
Here is a edited Expr grammar:

grammar Expr;

options {
    output=AST;
    ASTLabelType=CommonTree;
    k = 1;
}

prog    :    (stat {System.out.println($stat.tree.toStringTree());} )+ ;

stat    :    expr    -> expr;
   
expr    :    multExpr (('+' ^  | '-'^) multExpr)*
    ;
   
multExpr    :    atom ('*'^ atom)*
    ;
   
atom    :    INT
    |    function
    /* We don't want nodes for the parentheses */
    |    '('! expr ')'!
    ;

/* We don't want nodes for the paretheses or commas. */   
function    :    fname^ '('! variable_list? ')'! ;

variable_list
    :    (variable ( ','! variable )* )
    ;

variable    :    FUNCNAME;

fname    :    FUNCNAME;
   
FUNCNAME    :    ( 'a' .. 'z' | 'A' .. 'Z')+  ;
INT    :    '0' .. '9'+ ;
WS    :    ( ' ' | '\t' | '\n' | '\r' ) + {skip(); };


It makes it a little bit easier to debug..
Lexer rules (upper case) will not be included/"named" in the parse tree, 
but parser rules  (lower case) will, so it's easier to have an overview 
like this.

Note also: You don't need to bother with using WS i parser rules as they 
will already have
been skipped on the lexer level.

Here is a screenshot of debugging the input with (almost) the orginal 
grammar,
showing the parse tree:
http://ivarref.at.ifi.uio.no/antlr_screen.png

The input was:
"somefn(arga,argb,argc)"

So as you can see it's not quite generating what you're expecting.
The same holds for using the interactive interpreter, but I prefer the 
debugger at the moment.

It works more or less like expected with the revised grammar..

Also, are you sure you want k=1? Check out the backtrack=true option 
also, that helped me
for grammars that wasn't easily determined (multiple alternatives). If 
you ever run into that.

I've read just a little bit of the Dragon book (new edition), that 
helped me a little bit..

Well, good luck,
Ivar

(first post, hope this works.)

From westlifezs at gmail.com  Sun Nov 23 14:41:55 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 14:41:55 -0800
Subject: [antlr-interest] a strange problem
Message-ID: <e2842950811231441s6fdd213q4cec8b611a646860@mail.gmail.com>

Hi all,
I encountered a very strange problem. I put a string 'read' in the grammar
code, and when matching, I would like the input to match the toke ID which
is defined as ('a'..'z'). Obviously, the IDshould match read, but why it
cannot match, just becasue I have a hardcoded string 'read' in the grammar?
does everyone know how can i get ride of this trouble?

Thank you!
Su

-- 
Su Zhang
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/6abc147b/attachment.html 

From westlifezs at gmail.com  Sun Nov 23 15:25:26 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 15:25:26 -0800
Subject: [antlr-interest] a strange problem
In-Reply-To: <4929E434.10406@kjchome.homeip.net>
References: <e2842950811231441s6fdd213q4cec8b611a646860@mail.gmail.com>
	<4929E434.10406@kjchome.homeip.net>
Message-ID: <e2842950811231525l5183c46tbb10e4c60674ad75@mail.gmail.com>

thanks a lot, yet there still have a minor problem in my project, when I am
trying to get a return value from the program, I called in the main
function,but  I cannot find get the return value, does anybody see problem
in my grammar?

here it is:
num    returns [String t]
        :n = Num  {$t =
$n.getText();}|b64=Base64Block{$t=$b64.getText();}|ident=Id{$t=$ident.getText();}
        ;
Num   :     ( '0'..'9' ) * ;
Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_' |'-'|
'0'..'9' ) *;
Base64Block  :('a'..'z'| 'A'..'Z'|'0'..'9'|'/'|'+'|'=')*;
the input is perfectly matched by the antlr and the program and can be
printed out correctly, but when i called like this  :
"System.out.println(parser.num());" , there is not any return value(there
should be some value in the num cause i put it in the input file), does
anybody know where my problem is?
thank you!

Su
2008/11/23 Kevin J. Cummings <cummings at kjchome.homeip.net>

> Su Zhang wrote:
>
>> Hi all,
>> I encountered a very strange problem. I put a string 'read' in the grammar
>> code, and when matching, I would like the input to match the toke ID which
>> is defined as ('a'..'z'). Obviously, the IDshould match read, but why it
>> cannot match, just becasue I have a hardcoded string 'read' in the grammar?
>> does everyone know how can i get ride of this trouble?
>>
>
> Keywords vs reserved words.  Literals in the parser are reserved words.  If
> you wish for them to match identifiers, you must create a parser rule for
> identifier which includes both IDENTIFIER and the literals.
>
> Thank you!
>> Su
>>
>
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>



-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/52054266/attachment.html 

From sterini at gmail.com  Sun Nov 23 16:22:52 2008
From: sterini at gmail.com (Ilya Sterin)
Date: Sun, 23 Nov 2008 19:22:52 -0500
Subject: [antlr-interest] Capturing a grammar block as a string
Message-ID: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>

So in my grammar, I capture blocks of JSON-like structures.  I don't
want antlr to try to parse that structure, but rather to evaluate it
as a string.

Here is a sample code...

define project as {
    "name": "some_widget",
    "version": "0.01-alpha"
}


Here is a simple grammar rule to demonstrate the issue I'm having...


definesomething
  :  define IDENT as json
  ;

json
  :  '{' .* '}'
  ;

IDENT
  :  ('0'..'9'|'a'..'z'|'A'..'Z'|'_')+;

WHITESPACE
  :  ( '\t' | ' ' | '\r' | '\n' | '\u000C' )+  { $channel=HIDDEN; } ;


This is fact tries to evaluate the content between the braces.  I
actually would like the rule to evaluate all the content as one
string, though I will later parse it within my application.  Is there
a way I can accomplish this?

Thanks.

Ilya

From gaochunguang at 163.com  Sun Nov 23 18:03:21 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Mon, 24 Nov 2008 10:03:21 +0800
Subject: [antlr-interest] MismatchedRangeException never be raised?
In-Reply-To: <mailman.1.1227470402.14198.antlr-interest@antlr.org>
References: <mailman.1.1227470402.14198.antlr-interest@antlr.org>
Message-ID: <FCA5BF661B6E4EB4A93471F440D681CC@ibmPC>

MismatchedRangeException's description is:
The recognizer tried to match a range of symbols, usually characters, but
could not. It tracks the minimum and maximum element in the range.

I try to find what situation MismatchedRangeException be raised.

My grammar is :

number : Digital+;
Digital : '0'..'8';

I input 9, but parser raised NoViableAltException in mTokens() method.
MismatchedRangeException never be raised?



From cowang at comcast.net  Sun Nov 23 18:24:51 2008
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 23 Nov 2008 21:24:51 -0500
Subject: [antlr-interest] antlr-interest not in wiki Dashboard
Message-ID: <420E8E4E31764DA2821090B43CB8F6A8@gsce0ae1cfad8d>

Why is it that I can't search the antlr-interest archive from 
  http://www.antlr.org/wiki/dashboard.action
but I can search stringtemplate-interest?
 
Is there a place where I can search the antlr-interest archive?
 


From cowang at comcast.net  Sun Nov 23 18:49:21 2008
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 23 Nov 2008 21:49:21 -0500
Subject: [antlr-interest] gUnit suggestion: treat Lexer and Parser errors
	the same
Message-ID: <6E4A980782264C60BADA2272E7A7C8B4@gsce0ae1cfad8d>

In-Reply-To: <CDABE1C5-6A25-4875-8FA2-6EBE269D77BB at mac.com>
References: <CDABE1C5-6A25-4875-8FA2-6EBE269D77BB at mac.com>
 
Leon,
I saw your gUnit changes at 
  http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
Thanks. That was a swift response.
 
I'll start using gUnit on my project and let you know if I see any problems.
 
On Mon, 10 Nov 2008 at 19:35:24, Leon Su wrote:
> ...I'll try  
> to add this support into the next release soon :)
> 
> Leon
> 
> On Nov 10, 2008, at 1:57 PM, George S. Cowan wrote:
> 
> > I have experimented with gUnit a little and I think it has real  
> > possibilities. I would find it more useful if lexer failures were  
> > treated the same as parser failures.
> >
> > For instance, gUnit does not allow me to specify a Lexer test, e.g.,
> >   ID: "93XXX" FAIL
> > ...
 
 
 


From leon.antlr at mac.com  Sun Nov 23 19:28:46 2008
From: leon.antlr at mac.com (Leon Su)
Date: Sun, 23 Nov 2008 19:28:46 -0800
Subject: [antlr-interest] gUnit suggestion: treat Lexer and Parser
	errors	the same
In-Reply-To: <6E4A980782264C60BADA2272E7A7C8B4@gsce0ae1cfad8d>
References: <6E4A980782264C60BADA2272E7A7C8B4@gsce0ae1cfad8d>
Message-ID: <9CA571C5-0003-4ED4-B23D-1F5383BBFB77@mac.com>

Hi George,

Also don't forget to download the intermediate release  
gunit-1.0.4.jar I just uploaded to the wiki download page.
The new version should be able to test your lexical rules as the  
example demonstrates on wiki.
Please let me know if you find any problem.
Thanks.

Leon

On Nov 23, 2008, at 6:49 PM, George S. Cowan wrote:

> In-Reply-To: <CDABE1C5-6A25-4875-8FA2-6EBE269D77BB at mac.com>
> References: <CDABE1C5-6A25-4875-8FA2-6EBE269D77BB at mac.com>
>
> Leon,
> I saw your gUnit changes at
>   http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit 
> +Testing
> Thanks. That was a swift response.
>
> I'll start using gUnit on my project and let you know if I see any  
> problems.
>
> On Mon, 10 Nov 2008 at 19:35:24, Leon Su wrote:
>> ...I'll try
>> to add this support into the next release soon :)
>>
>> Leon
>>
>> On Nov 10, 2008, at 1:57 PM, George S. Cowan wrote:
>>
>>> I have experimented with gUnit a little and I think it has real
>>> possibilities. I would find it more useful if lexer failures were
>>> treated the same as parser failures.
>>>
>>> For instance, gUnit does not allow me to specify a Lexer test, e.g.,
>>>   ID: "93XXX" FAIL
>>> ...
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr- 
> interest/your-email-address
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/12b9ec6e/attachment.html 

From westlifezs at gmail.com  Sun Nov 23 19:47:03 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 19:47:03 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how can
	i get the return value from antlr?
Message-ID: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>

Hi all,

I wrote a returns [String s] in my rules in order to get a return value, but
when I call the function generated by the exact rule in the main function,
there is not any return value, and the type of return value is not a String,
and the value includes a tree structure,etc, but I define it as a string in
the antlrworks, does anybody know what's the problem in my project? how can
i get the return String I defined? I am almost crazy about this annoying
problem,
here is a part of my grammar:

num    returns [String t]
        :n = Num  {$t =
$n.getText();}|b64=Base64Block{$t=$b64.getText();}|ident=Id{$t=$ident.getText();}
        ;
base1   returns[String input]
        :
b64=Base64Block{$input=$b64.getText();}|ident=Id{$input=$ident.getText();}|n
= Num  {$input = $n.getText();}
        ;
id1   returns[String input]
      :ident=Id{$input=$ident.getText();/*System.out.println($input);*/}
|b64=Base64Block{$input=$b64.getText();}|n = Num  {$input = $n.getText();}
      ;

Num   :     ( '0'..'9' ) * ;
Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_' |'-'|
'0'..'9' ) *;
Base64Block  :('a'..'z'| 'A'..'Z'|'0'..'9'|'/'|'+'|'=')*;
//Base64Block      : ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '=')*;
ChallengeBlock   : ( 'a'..'z' | 'A'..'Z' | 'O'..'9'| ':')* ;
//fragment
WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;



thanks alot!
-- 
Su Zhang
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/f787bbc1/attachment.html 

From parrt at cs.usfca.edu  Sun Nov 23 20:43:22 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 23 Nov 2008 20:43:22 -0800
Subject: [antlr-interest] antlr-interest not in wiki Dashboard
In-Reply-To: <420E8E4E31764DA2821090B43CB8F6A8@gsce0ae1cfad8d>
References: <420E8E4E31764DA2821090B43CB8F6A8@gsce0ae1cfad8d>
Message-ID: <54186E78-D1F5-4F4D-915F-E8A3F50A2534@cs.usfca.edu>


On Nov 23, 2008, at 6:24 PM, George S. Cowan wrote:

> Why is it that I can't search the antlr-interest archive from
>  http://www.antlr.org/wiki/dashboard.action
> but I can search stringtemplate-interest?
>
> Is there a place where I can search the antlr-interest archive?

hi. sure. in the support page there is a search box:

http://www.antlr.org/support.html

Ter

From parrt at cs.usfca.edu  Sun Nov 23 20:44:38 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 23 Nov 2008 20:44:38 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
	can i get the return value from antlr?
In-Reply-To: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
Message-ID: <0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>


On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:

> Hi all,
>
> I wrote a returns [String s] in my rules in order to get a return  
> value, but when I call the function generated by the exact rule in  
> the main function, there is not any return value, and the type of  
> return value is not a String, and the value includes a tree  
> structure,etc, but I define it as a string in the antlrworks, does  
> anybody know what's the problem in my project? how can i get the  
> return String I defined? I am almost crazy about this annoying  
> problem,
> here is a part of my grammar:
>

hi. have you looked at the generated code?  It should have a t in the  
object returned from that rule.

Ter


From westlifezs at gmail.com  Sun Nov 23 21:49:53 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Sun, 23 Nov 2008 21:49:53 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
	can i get the return value from antlr?
In-Reply-To: <0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
Message-ID: <e2842950811232149k7018381fwa3800ab9f4315522@mail.gmail.com>

yes, i have, it has a prog_return class in the code, but it isnot the String
type,do you know how can I take the value as a string out of the code?

2008/11/23 Terence Parr <parrt at cs.usfca.edu>

>
> On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>
> Hi all,
>>
>> I wrote a returns [String s] in my rules in order to get a return value,
>> but when I call the function generated by the exact rule in the main
>> function, there is not any return value, and the type of return value is not
>> a String, and the value includes a tree structure,etc, but I define it as a
>> string in the antlrworks, does anybody know what's the problem in my
>> project? how can i get the return String I defined? I am almost crazy about
>> this annoying problem,
>> here is a part of my grammar:
>>
>>
> hi. have you looked at the generated code?  It should have a t in the
> object returned from that rule.
>
> Ter
>
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081123/ba92a6b8/attachment.html 

From micha-1 at fantasymail.de  Mon Nov 24 00:33:47 2008
From: micha-1 at fantasymail.de (micha)
Date: Mon, 24 Nov 2008 09:33:47 +0100
Subject: [antlr-interest] Capturing a grammar block as a string
In-Reply-To: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>
References: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>
Message-ID: <200811240933.48001.micha-1@fantasymail.de>

On Monday 24 November 2008 01:22:52 Ilya Sterin wrote:
> So in my grammar, I capture blocks of JSON-like structures.  I don't
> want antlr to try to parse that structure, but rather to evaluate it
> as a string.

I think, that's similar to having to switch two grammars (or lexers) , so I 
would do as in  this post:

http://www.antlr.org/pipermail/antlr-interest/2005-April/011809.html

 cheers
 Michael


From chainone at gmail.com  Mon Nov 24 04:33:14 2008
From: chainone at gmail.com (chain one)
Date: Mon, 24 Nov 2008 20:33:14 +0800
Subject: [antlr-interest]  Antlr v2 AST -> v3 AST
Message-ID: <5a92ffb60811240433n2de07bbcyd34ac4497b73de3@mail.gmail.com>

Sorry for the wide distribution, I am newbie to ANTLR.
I found a V2 AST rule.
logical_literal
              : 'false'  { $logical_literal = $([LOGICAL_LITERAL,
'LOGICAL_LITERAL'], $logical_literal); };

Is it correct to translate this rule to the following RULE in V3?

logical_literal
:  'false'  -> ^(LOGICAL_LITERAL[],$logical_literal);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/2dd77ecf/attachment.html 

From qwizv9b02 at sneakemail.com  Mon Nov 24 05:34:03 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 24 Nov 2008 14:34:03 +0100
Subject: [antlr-interest] how can i get a return string from the parser
In-Reply-To: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com>
References: <e2842950811230952s56ee31bbjbe656ee732cfc1fd@mail.gmail.com>
Message-ID: <ggeagm$mga$1@ger.gmane.org>

Su Zhang schreef:
> Hi all,
>  
> My program needs a string from Parser, but there is not any function
> provided in the public class parser, how can I get the string outside? I
> mean I want to get the string generated from the rules of
> antlr(functions in parser), and I have written  "returns[String s]" to
> indicate that I need the value, but how can i get the String? does
> anybody familiar with this kind of problem?

Use the specific parser that ANTLR generated from your grammar instead
of the generic Parser class.  It will have a public method for each rule
with the return type you specified or with some internally specified one
if you didn?t give one.

E.g. this is how I use my parser:

// Use ANTLR to parse the query string
final CharStream antlrInput = new ANTLRStringStream(queryString);
final Lexer lexer = new fsqLexer(antlrInput);
final CommonTokenStream tokens = new CommonTokenStream(lexer);
final fsqParser parser = new fsqParser(tokens);
final Formula queryFormula = parser.formula();

HTH, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/2796231c/attachment.bin 

From westlifezs at gmail.com  Mon Nov 24 05:59:57 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Mon, 24 Nov 2008 05:59:57 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
	can i get the return value from antlr?
In-Reply-To: <b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
	<e2842950811232149k7018381fwa3800ab9f4315522@mail.gmail.com>
	<b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
Message-ID: <e2842950811240559i415718f1ic5e5d1e78e5a6ba4@mail.gmail.com>

thanks,i see that, yet there is not any value in this String, i checked my
grammar part and did not find any errors or problem? would you take a look
at my grammar and see whether there is a problem in the project?
the grammar is here:

num    returns [String t]
        :n = Num  {$t =
$n.getText();}|b64=Base64Block{$t=$b64.getText();}|ident=Id{$t=$ident.getText();}
        ;
base1   returns[String input]
        :
b64=Base64Block{$input=$b64.getText();}|ident=Id{$input=$ident.getText();}|n
= Num  {$input = $n.getText();}
        ;
id1   returns[String input]
      :ident=Id{$input=$ident.getText();/*System.out.println($input);*/}
|b64=Base64Block{$input=$b64.getText();}|n = Num  {$input = $n.getText();}
      ;

Num   :     ( '0'..'9' ) * ;
Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_' |'-'|
'0'..'9' ) *;
Base64Block  :('a'..'z'| 'A'..'Z'|'0'..'9'|'/'|'+'|'=')*;
//Base64Block      : ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '=')*;
ChallengeBlock   : ( 'a'..'z' | 'A'..'Z' | 'O'..'9'| ':')* ;
//fragment
WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;



thanks

2008/11/24 Jared Bunting <jared.bunting at peachjean.com>

> Look at the definition of that return class.  It should have a field "t"
> that is a String.  That is your return value.
>
>   On Sun, Nov 23, 2008 at 11:49 PM, Su Zhang <westlifezs at gmail.com> wrote:
>
>>  yes, i have, it has a prog_return class in the code, but it isnot the
>> String type,do you know how can I take the value as a string out of the
>> code?
>>
>> 2008/11/23 Terence Parr <parrt at cs.usfca.edu>
>>
>>>
>>> On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>>>
>>> Hi all,
>>>>
>>>> I wrote a returns [String s] in my rules in order to get a return value,
>>>> but when I call the function generated by the exact rule in the main
>>>> function, there is not any return value, and the type of return value is not
>>>> a String, and the value includes a tree structure,etc, but I define it as a
>>>> string in the antlrworks, does anybody know what's the problem in my
>>>> project? how can i get the return String I defined? I am almost crazy about
>>>> this annoying problem,
>>>> here is a part of my grammar:
>>>>
>>>>
>>> hi. have you looked at the generated code?  It should have a t in the
>>> object returned from that rule.
>>>
>>> Ter
>>>
>>>
>>
>>
>> --
>> Su Zhang
>> PHD Candidate
>>  Computer Information and Science
>> Kansas State University
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/b1c84092/attachment.html 

From westlifezs at gmail.com  Mon Nov 24 06:47:07 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Mon, 24 Nov 2008 06:47:07 -0800
Subject: [antlr-interest] =?gb2312?b?QW55Ym9keSBrbm93IHdoYXQnoa5zIHRoZSBM?=
	=?gb2312?b?VCgxKQ==?=
Message-ID: <e2842950811240647u12909933j17c702e9d888579a@mail.gmail.com>

Hi all,

my return string is gone while the java code encoutered the clause"
retval.start = input.LT(1);", does anybody know what's this LT is, why my
String is gone after this?


thank you!

-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/0c8ae7aa/attachment.html 

From refsdal.ivar at gmail.com  Mon Nov 24 06:50:10 2008
From: refsdal.ivar at gmail.com (Ivar Refsdal)
Date: Mon, 24 Nov 2008 15:50:10 +0100
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
 can i get the return value from antlr?
In-Reply-To: <0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
Message-ID: <492ABF22.601@gmail.com>

Hi,

I noticed one thing:

You are using the name "input" as the return value.
It looks like this variable is reserved.
The .g to .java compiler should complain about this in my opinion.

Here the .g compiles to .java, but the .java does not compile.
If you rename the return variable name, the .java compiles also.


If you look at the code:

    public final String base1() throws RecognitionException {
        String input = null;
...
            switch ( input.LA(1) ) {
...
So that's probably it...

This compiles fine:
base1   returns[String input2]
        :
b64=Base64Block{$input2=$b64.getText();}|ident=Id{$input2=$ident.getText();}|n
= Num  {$input2 = $n.getText();}
        ;
id1   returns[String input2]
      :ident=Id{$input2=$ident.getText();}
|b64=Base64Block{$input2=$b64.getText();}|n = Num  {$input2 = $n.getText();}
      ;


Good luck,
Ivar



Terence Parr wrote:
> On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>
>   
>> Hi all,
>>
>> I wrote a returns [String s] in my rules in order to get a return  
>> value, but when I call the function generated by the exact rule in  
>> the main function, there is not any return value, and the type of  
>> return value is not a String, and the value includes a tree  
>> structure,etc, but I define it as a string in the antlrworks, does  
>> anybody know what's the problem in my project? how can i get the  
>> return String I defined? I am almost crazy about this annoying  
>> problem,
>> here is a part of my grammar:
>>
>>     
>
> hi. have you looked at the generated code?  It should have a t in the  
> object returned from that rule.
>
> Ter
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From jared.bunting at peachjean.com  Mon Nov 24 07:10:52 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 24 Nov 2008 09:10:52 -0600
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
 can i get the return value from antlr?
In-Reply-To: <492ABF22.601@gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
	<492ABF22.601@gmail.com>
Message-ID: <492AC3FC.6030208@peachjean.com>

In addition to compiling, after renaming "input" your grammar seems to 
work just fine.  Using output=AST, t had a value for every input that I 
through at it. 

-Jared

Ivar Refsdal wrote:
> Hi,
>
> I noticed one thing:
>
> You are using the name "input" as the return value.
> It looks like this variable is reserved.
> The .g to .java compiler should complain about this in my opinion.
>
> Here the .g compiles to .java, but the .java does not compile.
> If you rename the return variable name, the .java compiles also.
>
>
> If you look at the code:
>
>     public final String base1() throws RecognitionException {
>         String input = null;
> ...
>             switch ( input.LA(1) ) {
> ...
> So that's probably it...
>
> This compiles fine:
> base1   returns[String input2]
>         :
> b64=Base64Block{$input2=$b64.getText();}|ident=Id{$input2=$ident.getText();}|n
> = Num  {$input2 = $n.getText();}
>         ;
> id1   returns[String input2]
>       :ident=Id{$input2=$ident.getText();}
> |b64=Base64Block{$input2=$b64.getText();}|n = Num  {$input2 = $n.getText();}
>       ;
>
>
> Good luck,
> Ivar
>
>
>
> Terence Parr wrote:
>   
>> On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>>
>>   
>>     
>>> Hi all,
>>>
>>> I wrote a returns [String s] in my rules in order to get a return  
>>> value, but when I call the function generated by the exact rule in  
>>> the main function, there is not any return value, and the type of  
>>> return value is not a String, and the value includes a tree  
>>> structure,etc, but I define it as a string in the antlrworks, does  
>>> anybody know what's the problem in my project? how can i get the  
>>> return String I defined? I am almost crazy about this annoying  
>>> problem,
>>> here is a part of my grammar:
>>>
>>>     
>>>       
>> hi. have you looked at the generated code?  It should have a t in the  
>> object returned from that rule.
>>
>> Ter
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>   
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From westlifezs at gmail.com  Mon Nov 24 07:24:34 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Mon, 24 Nov 2008 07:24:34 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
	can i get the return value from antlr?
In-Reply-To: <b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
	<e2842950811232149k7018381fwa3800ab9f4315522@mail.gmail.com>
	<b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
Message-ID: <e2842950811240724l6c544f2die99ea3d014ae61d7@mail.gmail.com>

I even can not get a constant value after the clause ,like "retval.start =
input.LT(1); System.out.println("result");" when I call the function there
is not any return value, but when I change the format like this"
System.out.println("result");retval.start = input.LT(1);", I can get the
output in console, do you or anybody know why this happened, and what the
LT(1) is doing?


thank you!


2008/11/24 Jared Bunting <jared.bunting at peachjean.com>

> Look at the definition of that return class.  It should have a field "t"
> that is a String.  That is your return value.
>
>   On Sun, Nov 23, 2008 at 11:49 PM, Su Zhang <westlifezs at gmail.com> wrote:
>
>>  yes, i have, it has a prog_return class in the code, but it isnot the
>> String type,do you know how can I take the value as a string out of the
>> code?
>>
>> 2008/11/23 Terence Parr <parrt at cs.usfca.edu>
>>
>>>
>>> On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>>>
>>> Hi all,
>>>>
>>>> I wrote a returns [String s] in my rules in order to get a return value,
>>>> but when I call the function generated by the exact rule in the main
>>>> function, there is not any return value, and the type of return value is not
>>>> a String, and the value includes a tree structure,etc, but I define it as a
>>>> string in the antlrworks, does anybody know what's the problem in my
>>>> project? how can i get the return String I defined? I am almost crazy about
>>>> this annoying problem,
>>>> here is a part of my grammar:
>>>>
>>>>
>>> hi. have you looked at the generated code?  It should have a t in the
>>> object returned from that rule.
>>>
>>> Ter
>>>
>>>
>>
>>
>> --
>> Su Zhang
>> PHD Candidate
>>  Computer Information and Science
>> Kansas State University
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>


-- 
Su Zhang
PHD Candidate
Computer Information and Science
Kansas State University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/b9c10286/attachment.html 

From jared.bunting at peachjean.com  Mon Nov 24 07:26:56 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 24 Nov 2008 09:26:56 -0600
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
 can i get the return value from antlr?
In-Reply-To: <e2842950811240724l6c544f2die99ea3d014ae61d7@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>	
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>	
	<e2842950811232149k7018381fwa3800ab9f4315522@mail.gmail.com>	
	<b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
	<e2842950811240724l6c544f2die99ea3d014ae61d7@mail.gmail.com>
Message-ID: <492AC7C0.5040605@peachjean.com>

See the other responses from Ivar and myself - I think your use of the 
variable name "input" is the problem.  If you're still experiencing 
issues, can you send the entire grammar and your test harness?  (I could 
not get the antlr-generated code from the grammar you included to 
compile without modifications.)

-Jared

Su Zhang wrote:
> I even can not get a constant value after the clause ,like 
> "retval.start = input.LT(1); System.out.println("result");" when I 
> call the function there is not any return value, but when I change the 
> format like this" System.out.println("result");retval.start = 
> input.LT(1);", I can get the output in console, do you or anybody know 
> why this happened, and what the LT(1) is doing?
>  
>  
> thank you!
>        
>
> 2008/11/24 Jared Bunting <jared.bunting at peachjean.com 
> <mailto:jared.bunting at peachjean.com>>
>
>     Look at the definition of that return class.  It should have a
>     field "t" that is a String.  That is your return value.
>
>     On Sun, Nov 23, 2008 at 11:49 PM, Su Zhang <westlifezs at gmail.com
>     <mailto:westlifezs at gmail.com>> wrote:
>
>         yes, i have, it has a prog_return class in the code, but it
>         isnot the String type,do you know how can I take the value as
>         a string out of the code?
>
>         2008/11/23 Terence Parr <parrt at cs.usfca.edu
>         <mailto:parrt at cs.usfca.edu>>
>
>
>             On Nov 23, 2008, at 7:47 PM, Su Zhang wrote:
>
>                 Hi all,
>
>                 I wrote a returns [String s] in my rules in order to
>                 get a return value, but when I call the function
>                 generated by the exact rule in the main function,
>                 there is not any return value, and the type of return
>                 value is not a String, and the value includes a tree
>                 structure,etc, but I define it as a string in the
>                 antlrworks, does anybody know what's the problem in my
>                 project? how can i get the return String I defined? I
>                 am almost crazy about this annoying problem,
>                 here is a part of my grammar:
>
>
>             hi. have you looked at the generated code?  It should have
>             a t in the object returned from that rule.
>
>             Ter
>
>
>
>
>         -- 
>         Su Zhang
>         PHD Candidate
>         Computer Information and Science
>         Kansas State University
>
>
>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
> -- 
> Su Zhang
> PHD Candidate
> Computer Information and Science
> Kansas State University

From jimi at temporal-wave.com  Mon Nov 24 07:44:53 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Nov 2008 07:44:53 -0800
Subject: [antlr-interest] antlr-interest not in wiki Dashboard
In-Reply-To: <420E8E4E31764DA2821090B43CB8F6A8@gsce0ae1cfad8d>
References: <420E8E4E31764DA2821090B43CB8F6A8@gsce0ae1cfad8d>
Message-ID: <1227541493.1521.2.camel@jimi.temporal-wave.com>

On Sun, 2008-11-23 at 21:24 -0500, George S. Cowan wrote:

> Why is it that I can't search the antlr-interest archive from 
>   http://www.antlr.org/wiki/dashboard.action
> but I can search stringtemplate-interest?


Actually, I thought that only searched the wiki, but the main search is
at:

www.antlr.org

On the front page, in the middle of the page there is a big text box
marked search. However on the support page (linked from main page) there
are direct searches of the archives, including a link to the excellent
Markmail: http://antlr.markmail.org/ 

Jim

>  
> Is there a place where I can search the antlr-interest archive?
>  
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/8d8144f7/attachment.html 

From jimi at temporal-wave.com  Mon Nov 24 08:01:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Nov 2008 08:01:50 -0800
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
 can i get the return value from antlr?
In-Reply-To: <e2842950811240559i415718f1ic5e5d1e78e5a6ba4@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
	<0701FCB4-C041-4270-BE6A-392C82879E76@cs.usfca.edu>
	<e2842950811232149k7018381fwa3800ab9f4315522@mail.gmail.com>
	<b15aaba10811240356mca9e606g86de4a1080f82c47@mail.gmail.com>
	<e2842950811240559i415718f1ic5e5d1e78e5a6ba4@mail.gmail.com>
Message-ID: <1227542510.1521.11.camel@jimi.temporal-wave.com>

On Mon, 2008-11-24 at 05:59 -0800, Su Zhang wrote:
> thanks,i see that, yet there is not any value in this String, i
> checked my grammar part and did not find any errors or problem? would
> you take a look at my grammar and see whether there is a problem in
> the project?
> the grammar is here:
>  
> num    returns [String t]
>         :n = Num  {$t = $n.getText();}|b64=Base64Block{$t=
> $b64.getText();}|ident=Id{$t=$ident.getText();}


This has already been pointed out once, but don't use getText(). You
want to use:

$n.text $b64.text $ident.text


>         ;
> base1   returns[String input] 


input is already in use as an object name within ANTLR, you need to use
a different name.

Then if your grammar is called myGrammar, you invoke it as:


myGrammar parser = new myGrammar(tokens);  // Set up your parser

// Next, your num rule will either return String (as you only have one return element) or the type num_return:
//

// Either...
//
num_return psrReturn = parser.num();
System.out.println("Return was " + psrReturn.t);

// Or if it just returns string:
//
String psrReturn = parser.num();
System.out.println("Return was " + psrReturn);

If you are not getting back a string value, then there is an error in
your grammar actions. 

I suggest that you buy a copy of the book or at least scan all the
available example grammars and contributed grammars.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/82283e5a/attachment.html 

From jimi at temporal-wave.com  Mon Nov 24 08:06:14 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Nov 2008 08:06:14 -0800
Subject: [antlr-interest]
 =?utf-8?q?Anybody_know_what=27=E2=80=98s_the_LT?= =?utf-8?b?KDEp?=
In-Reply-To: <e2842950811240647u12909933j17c702e9d888579a@mail.gmail.com>
References: <e2842950811240647u12909933j17c702e9d888579a@mail.gmail.com>
Message-ID: <1227542774.1521.12.camel@jimi.temporal-wave.com>

On Mon, 2008-11-24 at 06:47 -0800, Su Zhang wrote:
> Hi all,
>  
> my return string is gone while the java code encoutered the clause"
> retval.start = input.LT(1);", does anybody know what's this LT is, why
> my String is gone after this?
>  

Change the grammar as previously advised.

Jim
>  
> thank you!
> 
> -- 
> Su Zhang
> PHD Candidate 
> Computer Information and Science
> Kansas State University 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/74ee353d/attachment.html 

From sharwell at pixelminegames.com  Mon Nov 24 09:47:05 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 24 Nov 2008 11:47:05 -0600
Subject: [antlr-interest] Antlr v2 AST -> v3 AST
In-Reply-To: <5a92ffb60811240433n2de07bbcyd34ac4497b73de3@mail.gmail.com>
References: <5a92ffb60811240433n2de07bbcyd34ac4497b73de3@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E945@Bloodymary.ironwillgames.com>

That's almost correct. The direct translation would be this:

 

logical_literal : 'false' -> LOGICAL_LITERAL[] ;

 

However, many v2 AST construction rules follow this pattern with a
setLine/setColumn pair, in which case, the following would be better.
There are other advantages to this method as well:

 

logical_literal

  : value='false'

    -> LOGICAL_LITERAL[$value]

  ;

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of chain one
Sent: Monday, November 24, 2008 6:33 AM
To: antlr-interest
Subject: [antlr-interest] Antlr v2 AST -> v3 AST

 

Sorry for the wide distribution, I am newbie to ANTLR.

I found a V2 AST rule.

logical_literal

              : 'false'  { $logical_literal = $([LOGICAL_LITERAL,
'LOGICAL_LITERAL'], $logical_literal); };

 

Is it correct to translate this rule to the following RULE in V3?

 

logical_literal

                        :  'false'  ->
^(LOGICAL_LITERAL[],$logical_literal);

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/825771af/attachment.html 

From Development at chrissek.de  Mon Nov 24 09:53:27 2008
From: Development at chrissek.de (Chris Sekszczynska)
Date: Mon, 24 Nov 2008 18:53:27 +0100
Subject: [antlr-interest] Write comments to templates
In-Reply-To: <b15aaba10811222034p7472d729nc6200483720c6eed@mail.gmail.com>
References: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
	<b15aaba10811222034p7472d729nc6200483720c6eed@mail.gmail.com>
Message-ID: <41EC09FF-D239-411E-A587-188A24E00C43@chrissek.de>

Hi Jared,

this could be a good and elegant solution :)

I think you mean the TokenStreamRewriteEngine? There, I can add a  
String before and after a hidden token. But how can I access the  
String which is produced by a specific template? And how can I map the  
template output to the hidden token? I see no way to access the  
template output within the grammar and no way to access the token  
within my main() method.

I'm not very familiar with ANTLRs internals, so I don't see any  
starting point :(

Kind regards,

Chris


On 23.11.2008 at 05:34 Jared Bunting wrote:

> Not sure if it will meet your needs or not, but you might want to  
> look at the rewrite functionality.  It should allow you to use your  
> source file as a starting point, and replace code in it with your  
> template output.  By ignoring comments in your parser, I would think  
> the rewrite would simply leave those where they are.


From jared.bunting at peachjean.com  Mon Nov 24 10:04:33 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 24 Nov 2008 12:04:33 -0600
Subject: [antlr-interest] Write comments to templates
In-Reply-To: <41EC09FF-D239-411E-A587-188A24E00C43@chrissek.de>
References: <3F9FA3F1-5911-40D4-B64B-FA7ED1A0378C@ChrisSek.de>
	<b15aaba10811222034p7472d729nc6200483720c6eed@mail.gmail.com>
	<41EC09FF-D239-411E-A587-188A24E00C43@chrissek.de>
Message-ID: <492AECB1.9080907@peachjean.com>

Well, I haven't actually used the rewrite features myself, just read the 
section on them in the book :-).  I would suggest that as a starting 
point.  I don't think you have to access the string produced by a 
template, etc.

 From your initial description, it sounded like your parser was 
basically taking some input and modifying the bits that you cared about 
while leaving the bits you don't care about (comments) alone, but 
preserving them in the output.  The rewrite features seem to be designed 
to do exactly this.  From what I understand, the TokenRewriteStream 
basically copies your input to a buffer.  Then, while parsing, each rule 
that is parsed, the output for the template for that rule replaces the 
original text that matched that rule.  Then, you can print out the 
entire buffer from the TokenRewriteStream.

But, like I said, I haven't actually used this functionality, but it 
sounds like it might be a fit for your problem.

-Jared

Chris Sekszczynska wrote:
> Hi Jared,
>
> this could be a good and elegant solution :)
>
> I think you mean the TokenStreamRewriteEngine? There, I can add a 
> String before and after a hidden token. But how can I access the 
> String which is produced by a specific template? And how can I map the 
> template output to the hidden token? I see no way to access the 
> template output within the grammar and no way to access the token 
> within my main() method.
>
> I'm not very familiar with ANTLRs internals, so I don't see any 
> starting point :(
>
> Kind regards,
>
> Chris
>
>
> On 23.11.2008 at 05:34 Jared Bunting wrote:
>
>> Not sure if it will meet your needs or not, but you might want to 
>> look at the rewrite functionality.  It should allow you to use your 
>> source file as a starting point, and replace code in it with your 
>> template output.  By ignoring comments in your parser, I would think 
>> the rewrite would simply leave those where they are.
>

From antlr at mirality.co.nz  Mon Nov 24 11:28:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 25 Nov 2008 08:28:28 +1300
Subject: [antlr-interest] Capturing a grammar block as a string
In-Reply-To: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com
 >
References: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>
Message-ID: <20081124192841.8DEFC11EE84@www.antlr.org>

At 13:22 24/11/2008, Ilya Sterin wrote:
 >So in my grammar, I capture blocks of JSON-like structures.  I
 >don't want antlr to try to parse that structure, but rather to
 >evaluate it as a string.
 >
 >Here is a sample code...
 >
 >define project as {
 >    "name": "some_widget",
 >    "version": "0.01-alpha"
 >}
[...]
 >json
 >  :  '{' .* '}'
 >  ;

The problem is because you've used a parser rule instead of a 
lexer rule (and thus . means "any token", not "any 
character").  If you change this to a lexer rule, then it should 
work.

(Of course, this assumes that {...} isn't used for any other 
construct in your language.  If it is, then things get more 
complicated.)


From jared.bunting at peachjean.com  Mon Nov 24 11:33:58 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 24 Nov 2008 13:33:58 -0600
Subject: [antlr-interest] Capturing a grammar block as a string
In-Reply-To: <b15aaba10811240410i232d09feu578662b2a050a10e@mail.gmail.com>
References: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>
	<b15aaba10811240410i232d09feu578662b2a050a10e@mail.gmail.com>
Message-ID: <492B01A6.6060509@peachjean.com>

I sent this to Ilya earlier on accident - meant to send to the whole 
list.  On that note, is it possible to set the Reply-To header in list 
emails?  Or is there some reason not to do this?

Thanks,
Jared

Jared Bunting wrote:
> If you look at the antlr grammar itself, it does something like this.  
> Using that as a starting point, I was able to accomplish something 
> like this:
>
> ACTION
>     :    '{' NESTED_ACTION '}'
>     ;
>    
> fragment
> NESTED_ACTION
>     :   
>     (    STRING
>     |    SSTRING
>     |    ~('{'|'}'|'\"'|'\'')
>     |    ACTION
>     )*
>     ;
>
> STRING and SSTRING are simply definitions of a double quoted and 
> single quoted string respectively.  These are included in order to 
> prevent a '}' inside a string from being interpreted as the closing 
> bracket.  The reason for nesting ACTION is again to allow the '{}' to 
> be nested.  Something else you might want to look for is comments - 
> somewhere else that braces might get included.  Basically, just 
> consider any situation in which the closing bracket would be legal in 
> the json code, and make sure it doesn't get treated as the closing 
> brace for the whole code block.
>
> It seems that the important aspect here is to treat your code block as 
> a lexer rule, rather than a parser rule - this way you don't have the 
> lexer trying to tokenize your json code, or the parser attempting to 
> parse it.
>
> -Jared
>
> On Sun, Nov 23, 2008 at 6:22 PM, Ilya Sterin <sterini at gmail.com 
> <mailto:sterini at gmail.com>> wrote:
>
>     So in my grammar, I capture blocks of JSON-like structures.  I don't
>     want antlr to try to parse that structure, but rather to evaluate it
>     as a string.
>
>     Here is a sample code...
>
>     define project as {
>        "name": "some_widget",
>        "version": "0.01-alpha"
>     }
>
>
>     Here is a simple grammar rule to demonstrate the issue I'm having...
>
>
>     definesomething
>      :  define IDENT as json
>      ;
>
>     json
>      :  '{' .* '}'
>      ;
>
>     IDENT
>      :  ('0'..'9'|'a'..'z'|'A'..'Z'|'_')+;
>
>     WHITESPACE
>      :  ( '\t' | ' ' | '\r' | '\n' | '\u000C' )+  { $channel=HIDDEN; } ;
>
>
>     This is fact tries to evaluate the content between the braces.  I
>     actually would like the rule to evaluate all the content as one
>     string, though I will later parse it within my application.  Is there
>     a way I can accomplish this?
>
>     Thanks.
>
>     Ilya
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From wil.macaulay at gmail.com  Mon Nov 24 14:34:26 2008
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Mon, 24 Nov 2008 17:34:26 -0500
Subject: [antlr-interest] Objective-c and antlr 3.1
Message-ID: <c713a0460811241434v379cbb7s27237a2e1114ecae@mail.gmail.com>

Sorry if this is a newbie question - I'm interested in using Antlr with the
objective-c target in xcode, and I notice that alllinks to objective-c info
from antlr.org end up ultimately pointing to classdump.org, which give me a
forbidden.

Is there an alternate source?

thanks for the info

wil macaulay

[background: trying to port a java/javacc based application to run on the
iphone]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/739d6e71/attachment.html 

From jneeraj at us.ibm.com  Mon Nov 24 15:05:12 2008
From: jneeraj at us.ibm.com (Neeraj Joshi)
Date: Mon, 24 Nov 2008 16:05:12 -0700
Subject: [antlr-interest] AUTO: Neeraj Joshi/Durham/IBM is out of the office.
Message-ID: <OF9656C52B.305894F2-ON8725750B.007ED1DF-8725750B.007ED1DF@us.ibm.com>



I am out of the office until 12/22/2008.

I am on vacation and  will have no access to email. If urgent please call
919 491 0208


Note: This is an automated response to your message  "antlr-interest
Digest, Vol 48, Issue 22" sent on 11/24/08 13:00:01.

You will receive a notification for each message you send to this person
while the person is away.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/18e5081b/attachment.html 

From antlr-interest at antlr.org  Mon Nov 24 18:23:01 2008
From: antlr-interest at antlr.org (antlr-interest at antlr.org)
Date: Mon, 24 Nov 2008 18:23:01 -0800 (PST)
Subject: [antlr-interest] Best Sales 2008!
Message-ID: <20081124042309.9956.qmail@Stephan>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/31f58ad3/attachment.html 

From geoff_hendrey at yahoo.com  Mon Nov 24 21:35:08 2008
From: geoff_hendrey at yahoo.com (Geoff hendrey)
Date: Mon, 24 Nov 2008 21:35:08 -0800 (PST)
Subject: [antlr-interest] (POST THIRD TIME) how to bail on
	MissingTokenException
References: <241850.70939.qm@web31806.mail.mud.yahoo.com>
	<71F3CF25-19B2-4DA8-A9E2-047758FD67DF@cs.usfca.edu>
	<138094.88434.qm@web31807.mail.mud.yahoo.com>
	<54EC0078-6998-4A40-BFB4-F7379C9D1ABB@cs.usfca.edu>
Message-ID: <10194.58917.qm@web31804.mail.mud.yahoo.com>

For some reason, I misread your suggestion as that I needed to override recoverFromMismatchedSet. 
After looking at the source for BaseRecognizer, and re-reading your suggestion, I realized my error.

I added this to my grammar:

protected Object recoverFromMismatchedToken(IntStream input, int ttype, BitSet follow) throws RecognitionException{
     throw new MissingTokenException(ttype, input, null);

}

I guess the Definitive Guide was written before MissingTokenException, because it only covers overriding recoverFromMismatchedSet...

I'm not sure if passing null into MissingTokenException could cause any problems, but this seems to work fine. I basically just want to make sure I throw some type of RecognitionException. Now AntlrWorks also terminates the parsing when I debug, as expect, rather than placing MissingTokenException into the parse tree. Thanks for your help.

 -geoff

"When I do good, I feel good. When I do bad, I feel bad. That's my religion."
-A. Lincoln




________________________________
From: Terence Parr <parrt at cs.usfca.edu>
To: Geoff hendrey <geoff_hendrey at yahoo.com>
Cc: antlr-interest at antlr.org
Sent: Thursday, October 30, 2008 10:55:51 AM
Subject: Re: [antlr-interest] (POST THIRD TIME) how to bail on MissingTokenException

Missing comes from the automatic in-line error recovery. You need to override

    protected Object recoverFromMismatchedToken(IntStream input, int ttype, BitSet follow)

just throw an exception. make sure you don't catch anything later... this should be in the book under how to make the parser bail on first exception.
Ter
On Oct 29, 2008, at 9:25 PM, Geoff hendrey wrote:

> Hi,
> 
> thanks for the response, I really appreciate it. Do you mean "mismatch" or "missing"? Just to be sure we are on the same page, I am getting a MissingTokenException, not MismatchedTokenException. My grammar file already deals with MismatchedTokenException, nd I have no problem with that. I need to find out how to abort parsing on MISSINGTokenException.
> 
> Thanks, and sorry for using caps and bold. Just wanted to make sure we are on the same page.
> 
> -geoff
> 
> 
> 
> From: Terence Parr <parrt at cs.usfca.edu>
> To: Geoff hendrey <geoff_hendrey at yahoo.com>
> Cc: antlr-interest at antlr.org
> Sent: Wednesday, October 29, 2008 12:58:28 PM
> Subject: Re: [antlr-interest] (POST THIRD TIME) how to bail on MissingTokenException
> 
> Hi Geoff, isn't there something in the source code that says " override me if you want to turn off automatic in-line error recovery for mismatch token"?
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081124/bb7c2a40/attachment.html 

From antlr at mirality.co.nz  Tue Nov 25 00:08:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 25 Nov 2008 21:08:12 +1300
Subject: [antlr-interest] Objective-c and antlr 3.1
In-Reply-To: <c713a0460811241434v379cbb7s27237a2e1114ecae@mail.gmail.com
 >
References: <c713a0460811241434v379cbb7s27237a2e1114ecae@mail.gmail.com>
Message-ID: <20081125080821.DF0EF11EC7E@www.antlr.org>

At 11:34 25/11/2008, Wil Macaulay wrote:
>Sorry if this is a newbie question - I'm interested in using 
>Antlr with the objective-c target in xcode, and I notice that all 
>links to objective-c info from <http://antlr.org>antlr.org end up 
>ultimately pointing to <http://classdump.org>classdump.org, which 
>give me a forbidden.
>
>Is there an alternate source?

While I have no idea what kind of state it is in (not having ever 
used Objective C myself), there *is* an ObjC target built into 
ANTLR v3 already.

So try just setting:

options {
   language = ObjC;
}

and see what happens :)

There's also some runtime code under runtime/ObjC in the source 
distribution.


From qwizv9b02 at sneakemail.com  Tue Nov 25 03:03:27 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Tue, 25 Nov 2008 12:03:27 +0100
Subject: [antlr-interest] Getting rid of redundancy warning
Message-ID: <gggm20$tkb$1@ger.gmane.org>

Hi,

I have a rule like follows:

formulaList : ( WHITESPACE? formula WHITESPACE? )* EOF ;

which gives me the following warning:

(200): Decision can match input such as "WHITESPACE" using multiple
alternatives: 1, 2 As a result,
 alternative(s) 2 were disabled for that input

WHITESPACE is defined as usual, and the formula rule works fine.

How can I get rid of this?

I want formulaList to match a file which contains a formula on each
line, optionally preceded/followed by whitespace and empty lines should
be allowed.  I have tried several things, but I cannot get rid of the
warning.

I have

NEWLINE
	: ( '\r\n' | '\r' | '\n' )
		{ $channel = HIDDEN; }
	;

but the interpreter does not seem to ignore them.  Doesn?t it know about
the hidden channel?

I do not want to make WHITESPACE hidden since it is meaningful as a
separator inside of ?formula?.

Cheers, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/1cd792eb/attachment.bin 

From antlr at shmuelhome.mine.nu  Tue Nov 25 03:33:51 2008
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue, 25 Nov 2008 13:33:51 +0200
Subject: [antlr-interest] Getting rid of redundancy warning
In-Reply-To: <gggm20$tkb$1@ger.gmane.org>
References: <gggm20$tkb$1@ger.gmane.org>
Message-ID: <492BE29F.4060504@shmuelhome.mine.nu>

Hendrik Maryns wrote:
> Hi,
>
> I have a rule like follows:
>
> formulaList : ( WHITESPACE? formula WHITESPACE? )* EOF ;
>
>   
Your rule is intrinsically ambiguous since a white space can be before 
the second formula or after the first formula. The following should work 
(haven't tried it)


formulaList : WHITESPACE? ( formula WHITESPACE? )* EOF ;



From cowanj at freenet.co.uk  Tue Nov 25 03:44:05 2008
From: cowanj at freenet.co.uk (James Cowan)
Date: Tue, 25 Nov 2008 11:44:05 -0000
Subject: [antlr-interest] antlr2, maven2 plugin and importvocab
Message-ID: <2D0D53D2EEAC4DEF91B9670FC024D8A5@marvin>

Hi

I am struggling to get the antlrv2 maven plugin to find the vocabulary of a grammar.

If I put the grammar in src/main/antlr it finds the grammar ok but the importVocab command fails.

If I put the vocabulary in the base directory of the maven project, it will find the vocabulary.

However, if I build the project as part of a modular maven project (i.e it is a sub module of another module) it cannot find the vocabulary.

I have fiddled with sourceDirectory and the grammar localtion in the plugin. For example below I have tried to make the sourceDirectory the basedir of the submodule.

plugin>
     <groupId>org.codehaus.mojo</groupId>
     <artifactId>antlr-maven-plugin</artifactId>
     <configuration>
      <sourceDirectory>${basedir}</sourceDirectory>
      <grammars>src/main/antlr/MySqlParser.g</grammars>
     </configuration>
     <executions>
      <execution>
       <goals>
        <goal>generate</goal>
       </goals>
      </execution>
     </executions>
</plugin>

Anyone else found a way around this problem? I guess changing maven2's working directory to that of the grammar would work but it is not clear to me how to do this.

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/684570af/attachment.html 

From chainone at gmail.com  Tue Nov 25 04:28:56 2008
From: chainone at gmail.com (chain one)
Date: Tue, 25 Nov 2008 20:28:56 +0800
Subject: [antlr-interest] How to write the rewrite rule for AST if I want to
	place an imaginary node as its root
Message-ID: <5a92ffb60811250428l5fe3e38aj24cd489275218b21@mail.gmail.com>

The rule is simple_expression:  term  (  add_like_op  term  )*
If it doesn't need to place an imaginary as its root, I can simply write
this rule like that: simple_expression:  term  (  add_like_op^  term  )*

How about if I wanna put an imaginary node on top of it ?

simple_expression:  term  (  add_like_op  term  )*  -> ^(SIMPLE_EXPRESSION[]
?????????)

I don't know how to write the ????? part.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/ba88e6f7/attachment.html 

From lists at krevsbech.dk  Tue Nov 25 04:35:31 2008
From: lists at krevsbech.dk (lists at krevsbech.dk)
Date: Tue, 25 Nov 2008 13:35:31 +0100 (CET)
Subject: [antlr-interest] Combining a tree with the Parser
Message-ID: <6536be72ba3e7eff48be64d60b39fcdc.squirrel@webmail01.one.com>

Hey
I am having a rather hard time figuring our how to let the tree find my
parser.
I use the ANTLR work and have tree files in the following way:
FooLexer (lexer grammar FooLexer)
FooParser (parser grammar FooParser)
FooTree (tree grammar FooTree)

In my parser I have:
tokenVocab = FooLexer;

In my tree I have:
tokenVocab = FooParser;

But here things goes wrong, when I use the ANTLR debugger on the Tree file
it complains and gives the following output:
error cannot read: "path"/FooParserLexer.java
error cannot read: "path"/FooParserParser.java

and no wonder it can't because the files are named FooLexer.java and
FooParser.java
Can anyone tell me what I have done wrong ?

Kind regards and thanks
Kasper Revsbech



From mamado+groups at gmail.com  Tue Nov 25 05:25:34 2008
From: mamado+groups at gmail.com (Mamado)
Date: Tue, 25 Nov 2008 15:25:34 +0200
Subject: [antlr-interest] Vhdl and Verilog grammars problem
Message-ID: <ec17d2e40811250525k5278e339me628cc375fe47080@mail.gmail.com>

Hello All,

I was trying to create a common tree parser for Vhdl and Verilog, and I was
glad to find both grammars available on ANTLR.

I installed ANTLRWorks and opened the Vhdl and Verilog grammars to try to
generate code, but I got errors in both of them.

[15:23:09] error(208): vhdl.g:1633:1: The following token definitions can
never be matched because prior tokens match the same input:
BASE,BASE_SPECIFIER,LETTER,HEXDIGIT,INTEGER,DIGIT

I am new to ANTLR, though I know a bit about BNF and Parser/Lexer, I tried
to look at the grammar file but didn't understand why this error happens.

I assumed that the grammar files posted on the site should work out of the
box, so I think I am doing something wrong, or there is some settings I
need.

Can someone please help me.

Thanks a lot,
Mamado.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/fbd7d901/attachment.html 

From heinrich at silasvalley.com  Tue Nov 25 05:33:59 2008
From: heinrich at silasvalley.com (heinrich du Toit)
Date: Tue, 25 Nov 2008 15:33:59 +0200
Subject: [antlr-interest] Vhdl and Verilog grammars problem
In-Reply-To: <ec17d2e40811250525k5278e339me628cc375fe47080@mail.gmail.com>
References: <ec17d2e40811250525k5278e339me628cc375fe47080@mail.gmail.com>
Message-ID: <492BFEC7.5060403@silasvalley.com>

I think those grammers are for ANTLR version 2 ..
You probably downloaded version 3 the current new one.
Therefore it's incompatible I think.

I suggest you first play with antlr and build something of your own. 
even if it's pretty useless.
before you jump into a complete grammer.
Because you need to understand quite alot to be able to modify grammers 
to be usefull for any purpose.



Mamado wrote:
> Hello All,
>
> I was trying to create a common tree parser for Vhdl and Verilog, and 
> I was glad to find both grammars available on ANTLR.
>
> I installed ANTLRWorks and opened the Vhdl and Verilog grammars to try 
> to generate code, but I got errors in both of them.
>
> [15:23:09] error(208): vhdl.g:1633:1: The following token definitions 
> can never be matched because prior tokens match the same input: 
> BASE,BASE_SPECIFIER,LETTER,HEXDIGIT,INTEGER,DIGIT
>
> I am new to ANTLR, though I know a bit about BNF and Parser/Lexer, I 
> tried to look at the grammar file but didn't understand why this error 
> happens.
>
> I assumed that the grammar files posted on the site should work out of 
> the box, so I think I am doing something wrong, or there is some 
> settings I need.
>
> Can someone please help me.
>
> Thanks a lot,
> Mamado.
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> __________ Information from ESET Smart Security, version of virus signature database 3638 (20081125) __________
>
> The message was checked by ESET Smart Security.
>
> http://www.eset.com
>   


From jimi at temporal-wave.com  Tue Nov 25 08:11:02 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 25 Nov 2008 08:11:02 -0800
Subject: [antlr-interest] antlr2, maven2 plugin and importvocab
In-Reply-To: <2D0D53D2EEAC4DEF91B9670FC024D8A5@marvin>
References: <2D0D53D2EEAC4DEF91B9670FC024D8A5@marvin>
Message-ID: <1227629462.1521.58.camel@jimi.temporal-wave.com>

On Tue, 2008-11-25 at 11:44 +0000, James Cowan wrote:
> Hi
>  
> I am struggling to get the antlrv2 maven plugin to find the vocabulary
> of a grammar.
>  
> If I put the grammar in src/main/antlr it finds the grammar ok but the
> importVocab command fails.
>  
> If I put the vocabulary in the base directory of the maven project, it
> will find the vocabulary.
>  
> However, if I build the project as part of a modular maven project
> (i.e it is a sub module of another module) it cannot find the
> vocabulary.
>  
> I have fiddled with sourceDirectory and the grammar localtion in the
> plugin. For example below I have tried to make the sourceDirectory the
> basedir of the submodule.
>  
> plugin>
>      <groupId>org.codehaus.mojo</groupId>
>      <artifactId>antlr-maven-plugin</artifactId>
>      <configuration>
>       <sourceDirectory>${basedir}</sourceDirectory>
>       <grammars>src/main/antlr/MySqlParser.g</grammars>
>      </configuration>
>      <executions>
>       <execution>
>        <goals>
>         <goal>generate</goal>
>        </goals>
>       </execution>
>      </executions>
> </plugin>
>  
> Anyone else found a way around this problem? I guess changing maven2's
> working directory to that of the grammar would work but it is not
> clear to me how to do this.


The v2 plugin basically expects all the grammars (at least those that
import), to be in the one directory. It is a reasonable expectation
given that v2 does not allow you to import vocab.txt files from
directories other than the current directory, but it is a bit annoying.
As you can see from the v3 source, I decided to basically collect all
the v2 grammars together in one directory and all the v3 grammars in
another. The plugin then works perfectly. 

However, your configuration is not quite right. From the antlr v3
source:

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>antlr-maven-plugin</artifactId>
                <configuration>

<sourceDirectory>src/org/antlr/grammar/v2</sourceDirectory>
                    <grammars>antlr.g codegen.g, antlr.print.g,
assign.types.g, buildnfa.g, define.g</grammars>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

Note the specification of the <sourceDirectory>, which contains the
whole directory path, with the .g files specified without paths.

Jim


>  
> James
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/2e3e7052/attachment.html 

From jimi at temporal-wave.com  Tue Nov 25 08:17:06 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 25 Nov 2008 08:17:06 -0800
Subject: [antlr-interest] How to write the rewrite rule for AST if I
 want to place an imaginary node as its root
In-Reply-To: <5a92ffb60811250428l5fe3e38aj24cd489275218b21@mail.gmail.com>
References: <5a92ffb60811250428l5fe3e38aj24cd489275218b21@mail.gmail.com>
Message-ID: <1227629826.1521.64.camel@jimi.temporal-wave.com>

On Tue, 2008-11-25 at 20:28 +0800, chain one wrote:

> The rule is 
> 
> simple_expression:  term  (  add_like_op  term  )* 
> If it doesn't need to place an imaginary as its root, I can simply
> write this rule like that: simple_expression:  term  (  add_like_op^
>  term  )* 
> 
> 
> How about if I wanna put an imaginary node on top of it ?
> 
> 
> simple_expression:  term  (  add_like_op  term  )*  ->
> ^(SIMPLE_EXPRESSION[] ?????????)


It isn't clear if you want SIMPLE_EXPRESSION to be the root node of ALL
the add_like_ops, or a SIMPLE_EXPRESSION for each add_like_op. In the
latter case, there is no need to do this, just let the add_like_op be
your node root. In the former case, it is better to separate this into
two rules, especially if you have precedence available in 'term' (to
avoid multiple SIMPLE_EXPRESSION nodes, unless you need them to put back
the parens in reformatting and so on):



simple_expression: se_term -> ^(SIMPLE_EXPRESSION $se_term) ;

se_term: term  (  add_like_op^  term  )* ;

term : INT
     | FLOAT
     | LPAREN se_term RPAREN
     ;

Jim

> 
> 
> I don't know how to write the ????? part.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/6f853850/attachment.html 

From jimi at temporal-wave.com  Tue Nov 25 08:24:41 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 25 Nov 2008 08:24:41 -0800
Subject: [antlr-interest] Combining a tree with the Parser
In-Reply-To: <6536be72ba3e7eff48be64d60b39fcdc.squirrel@webmail01.one.com>
References: <6536be72ba3e7eff48be64d60b39fcdc.squirrel@webmail01.one.com>
Message-ID: <1227630281.1521.70.camel@jimi.temporal-wave.com>

On Tue, 2008-11-25 at 13:35 +0100, lists at krevsbech.dk wrote:

> Hey
> I am having a rather hard time figuring our how to let the tree find my
> parser.
> I use the ANTLR work and have tree files in the following way:
> FooLexer (lexer grammar FooLexer)
> FooParser (parser grammar FooParser)
> FooTree (tree grammar FooTree)
> 
> In my parser I have:
> tokenVocab = FooLexer;
> 
> In my tree I have:
> tokenVocab = FooParser;
> 
> But here things goes wrong, when I use the ANTLR debugger on the Tree file
> it complains and gives the following output:
> error cannot read: "path"/FooParserLexer.java
> error cannot read: "path"/FooParserParser.java
> 
> and no wonder it can't because the files are named FooLexer.java and
> FooParser.java
> Can anyone tell me what I have done wrong ?


Assuming that you are using the latest release of ANTLRWorks (check
that), check the following:

1) Is your ANTLRWorks working directory set to somewhere sensible, that
you can read and write to etc (general permissions);
2) Filenames are correct: FooLexer.g contains lexer grammar FooLexer;
FooParser.g contains parser grammar FooParser;
3) The generated java files are in the correct place.
4) You are debugging the tree grammar remotely (you cannot debug tree
grammars locally, at least not at the moment - generate with -debug, run
the program, connect the remote debugger to it);

If the suffixes Lexer and Parser are being appended, it implies that you
have 'grammar FooParser' rather than 'parser grammar FooParser'. Could
be a bug, but it is one I have never come across myself if it is. My
feeling is that you are are trying to debug the tree grammar locally.

Jim

> 
> Kind regards and thanks
> Kasper Revsbech
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/3b8c910c/attachment.html 

From jimi at temporal-wave.com  Tue Nov 25 08:44:55 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 25 Nov 2008 08:44:55 -0800
Subject: [antlr-interest] antlr2, maven2 plugin and importvocab
In-Reply-To: <EE683F51098A48C1902B5E80ABCB2654@marvin>
References: <2D0D53D2EEAC4DEF91B9670FC024D8A5@marvin>
	<1227629462.1521.58.camel@jimi.temporal-wave.com>
	<EE683F51098A48C1902B5E80ABCB2654@marvin>
Message-ID: <1227631495.1521.87.camel@jimi.temporal-wave.com>

On Tue, 2008-11-25 at 16:39 +0000, James Cowan wrote:

> ? 
> 
> Hi Jim
>  
> thanks for the reply
>  
> The only solution to the problem I can find is to have the vocabulary
> in the sub module and the parent module so that they can both compile.
>  
> Is there any way that one can change the working directory of a maven
> plugin (i.e. to src/main/antlr) while it is executing a plugin?


No - I have been through all possible attempts, but the way it all hangs
together does not lend itself to this because v2 doesn't allow you to
import from other directories. Your only practical choice is to relocate
the grammar files into the same directory. 

Practically speaking, if they are interdependent at the vocabulary
level, then they are not really parent and sub module anyway, as you
can't recompile one without recompiling the other.

There probably is some way to hack it all to death, but I don't think
that is wise.

Jim

>  
> James
> 
> 
>         ----- Original Message ----- 
>         From: Jim Idle 
>         Cc: antlr-interest at antlr.org 
>         Sent: Tuesday, November 25, 2008 4:11 PM
>         Subject: Re: [antlr-interest] antlr2, maven2 plugin and
>         importvocab
>         
>         
>         
>         On Tue, 2008-11-25 at 11:44 +0000, James Cowan wrote: 
>         
>         > Hi 
>         > I am struggling to get the antlrv2 maven plugin to find the
>         > vocabulary of a grammar. 
>         > If I put the grammar in src/main/antlr it finds the grammar
>         > ok but the importVocab command fails. 
>         > If I put the vocabulary in the base directory of the maven
>         > project, it will find the vocabulary. 
>         > However, if I build the project as part of a modular maven
>         > project (i.e it is a sub module of another module) it cannot
>         > find the vocabulary. 
>         > I have fiddled with sourceDirectory and the grammar
>         > localtion in the plugin. For example below I have tried to
>         > make the sourceDirectory the basedir of the submodule. 
>         > plugin>
>         >      <groupId>org.codehaus.mojo</groupId>
>         >      <artifactId>antlr-maven-plugin</artifactId>
>         >      <configuration>
>         >       <sourceDirectory>${basedir}</sourceDirectory>
>         >       <grammars>src/main/antlr/MySqlParser.g</grammars>
>         >      </configuration>
>         >      <executions>
>         >       <execution>
>         >        <goals>
>         >         <goal>generate</goal>
>         >        </goals>
>         >       </execution>
>         >      </executions>
>         > </plugin> 
>         > Anyone else found a way around this problem? I guess
>         > changing maven2's working directory to that of the grammar
>         > would work but it is not clear to me how to do this.
>         
>         
>         The v2 plugin basically expects all the grammars (at least
>         those that import), to be in the one directory. It is a
>         reasonable expectation given that v2 does not allow you to
>         import vocab.txt files from directories other than the current
>         directory, but it is a bit annoying. As you can see from the
>         v3 source, I decided to basically collect all the v2 grammars
>         together in one directory and all the v3 grammars in another.
>         The plugin then works perfectly. 
>         
>         However, your configuration is not quite right. From the antlr
>         v3 source:
>         
>                     <plugin>
>                         <groupId>org.codehaus.mojo</groupId>
>                         <artifactId>antlr-maven-plugin</artifactId>
>                         <configuration>
>         
>         <sourceDirectory>src/org/antlr/grammar/v2</sourceDirectory>
>                             <grammars>antlr.g codegen.g,
>         antlr.print.g, assign.types.g, buildnfa.g, define.g</grammars>
>                         </configuration>
>                         <executions>
>                             <execution>
>                                 <goals>
>                                     <goal>generate</goal>
>                                 </goals>
>                             </execution>
>                         </executions>
>                     </plugin>
>         
>         Note the specification of the <sourceDirectory>, which
>         contains the whole directory path, with the .g files specified
>         without paths.
>         
>         Jim
>         
>         
>         
>         > James 
>         > 
>         > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         > 
>         
>         
>         
>         
>         
>         ______________________________________________________________
>         
>         List:
>         http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         
>         
>         
>         
>         ______________________________________________________________
>         
>         
>         No virus found in this incoming message.
>         Checked by AVG - http://www.avg.com 
>         Version: 8.0.175 / Virus Database: 270.9.10/1810 - Release
>         Date: 24/11/2008 14:36


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/91b31d0c/attachment.html 

From asoka250 at gmail.com  Tue Nov 25 08:46:55 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Tue, 25 Nov 2008 10:46:55 -0600
Subject: [antlr-interest] Tree grammar usage - regd.
Message-ID: <492C2BFF.5070003@gmail.com>

Hi List,

I am not sure about a tree grammar. In most cases we can include actions 
in the parser grammar itself. But when do we write a tree grammar. Can 
some of you throw light on this and enlighten me.

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From bo-ba at mail.ru  Tue Nov 25 08:58:41 2008
From: bo-ba at mail.ru (Bo Ba)
Date: Tue, 25 Nov 2008 19:58:41 +0300
Subject: [antlr-interest] =?koi8-r?b?R2VuZXJhdGluZyBhICJjb21wbGV0ZSIgdGV4?=
	=?koi8-r?b?dCBpbiBhbnRscg==?=
In-Reply-To: <492C2BFF.5070003@gmail.com>
References: <492C2BFF.5070003@gmail.com>
Message-ID: <E1L51FJ-000PNL-00.bo-ba-mail-ru@f160.mail.ru>

Hello,

To generate a text, which is syntactically and semantically "complete" for a given antlr grammar, is my desire...

Of course, I would also like to have this text as short as possible.

I would greatly appreciate any suggestions or thoughts in how this could be done as I am new to this topic.


Thanks.


Vladimir

From mamado+groups at gmail.com  Tue Nov 25 10:33:42 2008
From: mamado+groups at gmail.com (Mamado)
Date: Tue, 25 Nov 2008 20:33:42 +0200
Subject: [antlr-interest] Vhdl and Verilog grammars problem
In-Reply-To: <492BFEC7.5060403@silasvalley.com>
References: <ec17d2e40811250525k5278e339me628cc375fe47080@mail.gmail.com>
	<492BFEC7.5060403@silasvalley.com>
Message-ID: <ec17d2e40811251033vf6bbdccif4d16bccd759a2bd@mail.gmail.com>

Thanks a lot for the quick reply.

This is one of the main reasons more people are using ANTLR, the great
community :-)

I think I agree with you that I need to play around a bit more, I have gone
through the tutorial and the some of the samples, but nothing as complex as
Vhdl or Verilog.


I have checked
http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3and
could see issues that needs migration in the grammar file to make a
file
work in 3. but do we have a more elaborate guide in migrating v2 grammars to
V3?

I think that there should be a warning in the pages that this grammar was
written for V2 and might not work with v3 and so forth.

What do you think?

Thanks again for the help.

Best Regards,
Mohamed.

On Tue, Nov 25, 2008 at 3:33 PM, heinrich du Toit
<heinrich at silasvalley.com>wrote:

> I think those grammers are for ANTLR version 2 ..
> You probably downloaded version 3 the current new one.
> Therefore it's incompatible I think.
>
> I suggest you first play with antlr and build something of your own. even
> if it's pretty useless.
> before you jump into a complete grammer.
> Because you need to understand quite alot to be able to modify grammers to
> be usefull for any purpose.
>
>
>
> Mamado wrote:
>
>> Hello All,
>>
>> I was trying to create a common tree parser for Vhdl and Verilog, and I
>> was glad to find both grammars available on ANTLR.
>>
>> I installed ANTLRWorks and opened the Vhdl and Verilog grammars to try to
>> generate code, but I got errors in both of them.
>>
>> [15:23:09] error(208): vhdl.g:1633:1: The following token definitions can
>> never be matched because prior tokens match the same input:
>> BASE,BASE_SPECIFIER,LETTER,HEXDIGIT,INTEGER,DIGIT
>>
>> I am new to ANTLR, though I know a bit about BNF and Parser/Lexer, I tried
>> to look at the grammar file but didn't understand why this error happens.
>>
>> I assumed that the grammar files posted on the site should work out of the
>> box, so I think I am doing something wrong, or there is some settings I
>> need.
>>
>> Can someone please help me.
>>
>> Thanks a lot,
>> Mamado.
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>>
>> __________ Information from ESET Smart Security, version of virus
>> signature database 3638 (20081125) __________
>>
>> The message was checked by ESET Smart Security.
>>
>> http://www.eset.com
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/707ea5bb/attachment.html 

From virtuoso.coders at gmail.com  Tue Nov 25 11:19:37 2008
From: virtuoso.coders at gmail.com (SSG JJV)
Date: Tue, 25 Nov 2008 13:19:37 -0600
Subject: [antlr-interest] Syntax validation for proprietary language using
	antlr
Message-ID: <26e9b8c20811251119g272929a9le9cab360bdf949c7@mail.gmail.com>

Hello AntlrMasters,

I want to develop an antlr program that validates the syntax of a
proprietary language similar to C++ language. For ex:

INT a, b;

I want to validate syntax and throw errors in case of syntactical errors in
the program.
In the above example, say if user misses semicolon at the end, i want to
throw appropriate message to the user.

Should i use AST approach? Are there any sample 'validation programs
developed in antlr' already available? Please advice.

Thanks,
Munna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/85b7d283/attachment.html 

From wil.macaulay at gmail.com  Tue Nov 25 11:57:57 2008
From: wil.macaulay at gmail.com (Wil Macaulay)
Date: Tue, 25 Nov 2008 14:57:57 -0500
Subject: [antlr-interest] Objective-c and antlr 3.1
In-Reply-To: <492bb275.030bca0a.7786.25dfSMTPIN_ADDED@mx.google.com>
References: <c713a0460811241434v379cbb7s27237a2e1114ecae@mail.gmail.com>
	<492bb275.030bca0a.7786.25dfSMTPIN_ADDED@mx.google.com>
Message-ID: <c713a0460811251157x92080en44a7fab2045c7d60@mail.gmail.com>

Thanks - my concern was really more the level of support objective-c
currently has with Antlr 3   It sounds like (as advised by Kay Roepke
off-list) that I'd be better off using the C target and doing my own
wrapping for production work. Kay also advised that classdump.org is
more-or-less permanently offline.
wil

On Tue, Nov 25, 2008 at 3:08 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 11:34 25/11/2008, Wil Macaulay wrote:
>
>> Sorry if this is a newbie question - I'm interested in using Antlr with
>> the objective-c target in xcode, and I notice that all links to objective-c
>> info from <http://antlr.org>antlr.org end up ultimately pointing to <
>> http://classdump.org>classdump.org, which give me a forbidden.
>>
>> Is there an alternate source?
>>
>
> While I have no idea what kind of state it is in (not having ever used
> Objective C myself), there *is* an ObjC target built into ANTLR v3 already.
>
> So try just setting:
>
> options {
>  language = ObjC;
> }
>
> and see what happens :)
>
> There's also some runtime code under runtime/ObjC in the source
> distribution.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/fb9c9ddc/attachment.html 

From james.abley at gmail.com  Tue Nov 25 14:13:21 2008
From: james.abley at gmail.com (James Abley)
Date: Tue, 25 Nov 2008 22:13:21 +0000
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <4929D72B.6090600@gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>
	<49186F9A.6090402@quantdev.com>
	<23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>
	<23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>
	<23fce8e60811231320x7fc4dc9dyaa26959947fc42fd@mail.gmail.com>
	<4929D72B.6090600@gmail.com>
Message-ID: <23fce8e60811251413t4a226462m72fa94b6a1ade481@mail.gmail.com>

2008/11/23 Ivar Refsdal <refsdal.ivar at gmail.com>:
> Hi,
>
> I'm also a newbie (thus everything could be wrong) so I can't help that
> much... But anyway:
> Here is a edited Expr grammar:
>
> grammar Expr;
>
> options {
>    output=AST;
>    ASTLabelType=CommonTree;
>    k = 1;
> }
>
> prog    :    (stat {System.out.println($stat.tree.toStringTree());} )+ ;
>
> stat    :    expr    -> expr;
>
> expr    :    multExpr (('+' ^  | '-'^) multExpr)*
>    ;
>
> multExpr    :    atom ('*'^ atom)*
>    ;
>
> atom    :    INT
>    |    function
>    /* We don't want nodes for the parentheses */
>    |    '('! expr ')'!
>    ;
>
> /* We don't want nodes for the paretheses or commas. */
> function    :    fname^ '('! variable_list? ')'! ;
>
> variable_list
>    :    (variable ( ','! variable )* )
>    ;
>
> variable    :    FUNCNAME;
>
> fname    :    FUNCNAME;
>
> FUNCNAME    :    ( 'a' .. 'z' | 'A' .. 'Z')+  ;
> INT    :    '0' .. '9'+ ;
> WS    :    ( ' ' | '\t' | '\n' | '\r' ) + {skip(); };
>
>
> It makes it a little bit easier to debug..
> Lexer rules (upper case) will not be included/"named" in the parse tree,
> but parser rules  (lower case) will, so it's easier to have an overview
> like this.
>
> Note also: You don't need to bother with using WS i parser rules as they
> will already have
> been skipped on the lexer level.
>
> Here is a screenshot of debugging the input with (almost) the orginal
> grammar,
> showing the parse tree:
> http://ivarref.at.ifi.uio.no/antlr_screen.png
>
> The input was:
> "somefn(arga,argb,argc)"
>
> So as you can see it's not quite generating what you're expecting.
> The same holds for using the interactive interpreter, but I prefer the
> debugger at the moment.
>
> It works more or less like expected with the revised grammar..
>
> Also, are you sure you want k=1? Check out the backtrack=true option
> also, that helped me
> for grammars that wasn't easily determined (multiple alternatives). If
> you ever run into that.
>
> I've read just a little bit of the Dragon book (new edition), that
> helped me a little bit..
>
> Well, good luck,
> Ivar
>
> (first post, hope this works.)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

Hi Ivar,

Thanks for the response. The Dragon book is good, isn't it? I skimmed
it last year, but probably need to go through it again and do more of
the exercises this time. Ditto Programming Language Pragmatics by
Michael Scott and Essentials of Programming Languages. I am doing the
latter at the moment, exercises and all, but it's Scheme, so it's
great, but not immediately applicable to using ANTLR.

I think I'm fairly happy with the grammar in terms of it parsing my
expected input. Doubtless I will refine it as my understanding grows.
Where I'm stuck is how to evaluate my AST; i.e. Eval.g is where I'm
not sure how to procee, rather than Expr.g.

I think k=1 is the right choice. My understanding is that you want the
smallest possible value of k for performance reasons. You can use a
higher value (ideally scoped by production) to resolve ambiguities,
etc; but you should always strive to resolve that by using
left-factoring, semantic or syntactic predicate. Similarly for
backtracking; it's powerful and useful, but there are other options.

So in summary, I'm still stuck and looking for an example of how to
register and execute my functions. I intuitively feel that my
tree-walking approach is wrong, but I'm not sure what the idiomatic,
best-practice for ANTLR would be.

Cheers,

James

From sterini at gmail.com  Tue Nov 25 14:53:36 2008
From: sterini at gmail.com (Ilya Sterin)
Date: Tue, 25 Nov 2008 17:53:36 -0500
Subject: [antlr-interest] Capturing a grammar block as a string
In-Reply-To: <492b0066.090bca0a.0bd0.ffffb639SMTPIN_ADDED@mx.google.com>
References: <67d2b0c70811231622o5553739m5e974bb052f73bb7@mail.gmail.com>
	<492b0066.090bca0a.0bd0.ffffb639SMTPIN_ADDED@mx.google.com>
Message-ID: <67d2b0c70811251453o7b5b8cdfx6d21f6c15f6b31f5@mail.gmail.com>

Awesome, got it working just as you mentioned, by defining it as a
lexer rule.  I got it there accidentally by just using good practices,
but you've pointed out why it didn't originally work.

Yeah, I won't be using it for any other constructs.  The idea is that
basically anything between the braces will get evaluated by a JSON lib
in the application itself.  I don't particularly need to parse JSON
grammar with Antlr for now as I can just allow JSON libs to do it I'm
sure in a non as efficient manner, but am planning on parsing with
Antlr in the future when the time permits to refactor.

Thanks a bunch to everyone.

Ilya Sterin



On Mon, Nov 24, 2008 at 2:28 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 13:22 24/11/2008, Ilya Sterin wrote:
>>So in my grammar, I capture blocks of JSON-like structures.  I
>>don't want antlr to try to parse that structure, but rather to
>>evaluate it as a string.
>>
>>Here is a sample code...
>>
>>define project as {
>>    "name": "some_widget",
>>    "version": "0.01-alpha"
>>}
> [...]
>>json
>>  :  '{' .* '}'
>>  ;
>
> The problem is because you've used a parser rule instead of a lexer rule
> (and thus . means "any token", not "any character").  If you change this to
> a lexer rule, then it should work.
>
> (Of course, this assumes that {...} isn't used for any other construct in
> your language.  If it is, then things get more complicated.)
>
>

From jneeraj at us.ibm.com  Tue Nov 25 15:04:30 2008
From: jneeraj at us.ibm.com (Neeraj Joshi)
Date: Tue, 25 Nov 2008 16:04:30 -0700
Subject: [antlr-interest] AUTO: Neeraj Joshi/Durham/IBM is out of the office.
Message-ID: <OFAEBC05A1.FBCE0CFF-ON8725750C.007EC182-8725750C.007EC183@us.ibm.com>



I am out of the office until 12/22/2008.

I am on vacation and  will have no access to email. If urgent please call
919 491 0208


Note: This is an automated response to your message  "antlr-interest
Digest, Vol 48, Issue 23" sent on 11/25/08 13:00:01.

You will receive a notification for each message you send to this person
while the person is away.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/0372f949/attachment.html 

From westlifezs at gmail.com  Tue Nov 25 15:35:43 2008
From: westlifezs at gmail.com (Su Zhang)
Date: Tue, 25 Nov 2008 17:35:43 -0600
Subject: [antlr-interest] a crazy problem cost me almost two days ---how
	can i get the return value from antlr?
In-Reply-To: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
References: <e2842950811231947j4810f694kc40cd415cbcbb1bf@mail.gmail.com>
Message-ID: <e2842950811251535r68898d0fp602572aaa67daa4c@mail.gmail.com>


 I got rid of this part, like this"for(Certificate cert: retval.cred.getCertificates()) {"

but there still eorror information:Certificate cannot be resolved to a type,
is there any problems?
thank you
Su
2008/11/23 Su Zhang <westlifezs at gmail.com>
>
> Hi all,
>  
> I wrote a returns [String s] in my rules in order to get a return value, but when I call the function generated by the exact rule in the main function, there is not any return value, and the type of return value is not a String, and the value includes a tree structure,etc, but I define it as a string in the antlrworks, does anybody know what's the problem in my project? how can i get the return String I defined? I am almost crazy about this annoying problem, 
> here is a part of my grammar:
>  
> num    returns [String t]
>         :n = Num  {$t = $n.getText();}|b64=Base64Block{$t=$b64.getText();}|ident=Id{$t=$ident.getText();}
>         ;
> base1   returns[String input] 
>         : b64=Base64Block{$input=$b64.getText();}|ident=Id{$input=$ident.getText();}|n = Num  {$input = $n.getText();}
>         ;
> id1   returns[String input]  
>       :ident=Id{$input=$ident.getText();/*System.out.println($input);*/} |b64=Base64Block{$input=$b64.getText();}|n = Num  {$input = $n.getText();}
>       ;
>
> Num   :     ( '0'..'9' ) * ;
> Id   :     ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_' |'-'| '0'..'9' ) *;
> Base64Block  :('a'..'z'| 'A'..'Z'|'0'..'9'|'/'|'+'|'=')*;
> //Base64Block      : ('a'..'z' | 'A'..'Z' | 'O'..'9' | '/' | '+' | '=')*;
> ChallengeBlock   : ( 'a'..'z' | 'A'..'Z' | 'O'..'9'| ':')* ;
> //fragment
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>     ;
>  
>  
>  
> thanks alot!
> -- 
> Su Zhang
> Computer Information and Science
> Kansas State University 




-- 
Su Zhang
PHD Candidate 
Computer Information and Science
Kansas State University 

From virtuoso.coders at gmail.com  Tue Nov 25 20:32:55 2008
From: virtuoso.coders at gmail.com (SSG JJV)
Date: Tue, 25 Nov 2008 22:32:55 -0600
Subject: [antlr-interest] @rulecatch not working with antlr 3.0.1;
	Help for catching parser exceptions
Message-ID: <26e9b8c20811252032v1eee4945t9ea6ba832268b23f@mail.gmail.com>

Greetings,

I am trying to write a sample antlr program to catch a parser exception.
Below is the program that i use.
I want to catch the mismatch exceptions raised from parser. Used @rulecatch
syntax to print a message for exceptions.
But antlr does not seem to honor '@rulecatch' syntax. The following line
inside @rulecatch block was not generated in the parser.
" System.out.println("Exception occured");" i tried 'catch [ exception]'
and @exception syntax. Nothing worked.

How can I throw custom messages when an parser rule exception is raised? I
am using antlr 3.0.1.

Thanks,

Munna

========================================

grammar testANTLR;

options {
 output=Java;
}@header {
 package sampleTest;
}
@lexer::header {
 package sampleTest;
}

/* to match 'var = 10;' line */

assign
@rulecatch {
 System.out.println("Exception occured");
}
 : NAME EQUAL INTEGER SEMICOLON EOF {
  System.out.println("assign matched on line :"+$EQUAL.line);
 }
 ;

NAME : ('a' .. 'z')+
 ;

SEMICOLON : ';'
 ;

EQUAL : '='
 ;

INTEGER : ('0'..'9')+
 ;

WS : ( ' ' | '\t' | '\r' | '\n' )+ { $channel=HIDDEN;}
 ;

=======================

Generated assign function inside parser:
*

public* *final* *void* assign() *throws* RecognitionException {

Token EQUAL1=*null*;

*try* {

*//* testANTLR.g:18:2: ( NAME EQUAL INTEGER SEMICOLON EOF )



// testANTLR.g:18:4: NAME EQUAL INTEGER SEMICOLON EOF



{

match(input,*NAME*,*FOLLOW_NAME_in_assign43*);

EQUAL1=(Token)input.LT(1);

match(input,*EQUAL*,*FOLLOW_EQUAL_in_assign45*);

match(input,*INTEGER*,*FOLLOW_INTEGER_in_assign47*);

match(input,*SEMICOLON*,*FOLLOW_SEMICOLON_in_assign49*);

match(input,*EOF*,*FOLLOW_EOF_in_assign51*);

System.*out*.println("assign matched on line :"+EQUAL1.getLine());

 }

}

*catch* (RecognitionException re) {

reportError(re);

recover(input,re);

}

*finally* {

}

*return* ;

}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081125/85fcb5ce/attachment.html 

From R.Liebscher at gmx.de  Wed Nov 26 01:36:21 2008
From: R.Liebscher at gmx.de (Rene Liebscher)
Date: Wed, 26 Nov 2008 10:36:21 +0100
Subject: [antlr-interest] Set encoding for python target
Message-ID: <20081126093621.159670@gmx.net>

Hi,

I just use antlr for writing a parser for a small expression language.

In this language I have a function called 'L?NGE' (the german word for length).
This also shows up in the resulting code for the lexer. However this is not ascii so python complains about it.
------
$ python Lexer.py
  File "Lexer.py", line 1414
SyntaxError: Non-ASCII character '\xc4' in file Lexer.py on line 1414, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details
------
The solution is to add a line like 
-----
# coding: latin1
-----
as first or second line in the generated file.

Is there a way to set this from the grammar file?


Kind regards

Ren? Liebscher


PS: One could think encoding it as 'L\u00c4NGE' in the grammar file, but this results in "L\u00c4NGE" in the python file, where it had to be u"L\u00c4NGE" to accept the \u.

-- 
Sensationsangebot nur bis 30.11: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From siddharth.karandikar at gmail.com  Wed Nov 26 02:34:21 2008
From: siddharth.karandikar at gmail.com (Siddharth Karandikar)
Date: Wed, 26 Nov 2008 16:04:21 +0530
Subject: [antlr-interest] parsing quoted string
Message-ID: <703cd4960811260234yc7a4aa0je7be8d47fcc58cd8@mail.gmail.com>

Hi All!

I am a newbie here and trying to test out few things with Antlr-v3.
Following is what I have written to parse quoted string and print that
parsed string on console.
For this I referred to StringLiteral definition in Java.g But somehow,
grammar written by me is not working. Am I doing something really
stupid?

Thanks,
Siddharth

Grammar -

grammar Test;

literal : q=quoted
  {
    System.out.println("q=>"+$q.text);
  };

quoted : '"' ( EscapeSequence | ~('\\'|'"') )* '"' ;

fragment
EscapeSequence : '\\' ('\"'|'\''|'\\') ;

WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;


Errors that I get -

$ java -classpath .:output/:../../antlr-3.1.jar Run
"abcd ABCD"
line 1:1 no viable alternative at character 'a'
line 1:2 no viable alternative at character 'b'
line 1:3 no viable alternative at character 'c'
line 1:4 no viable alternative at character 'd'
line 1:6 no viable alternative at character 'A'
line 1:7 no viable alternative at character 'B'
line 1:8 no viable alternative at character 'C'
line 1:9 no viable alternative at character 'D'
q=>" "

From cvrebert at gmail.com  Wed Nov 26 02:45:38 2008
From: cvrebert at gmail.com (Chris Rebert)
Date: Wed, 26 Nov 2008 02:45:38 -0800
Subject: [antlr-interest] parsing quoted string
In-Reply-To: <703cd4960811260234yc7a4aa0je7be8d47fcc58cd8@mail.gmail.com>
References: <703cd4960811260234yc7a4aa0je7be8d47fcc58cd8@mail.gmail.com>
Message-ID: <47c890dc0811260245y7506e149k1fe9c1a198176d8c@mail.gmail.com>

On Wed, Nov 26, 2008 at 2:34 AM, Siddharth Karandikar
<siddharth.karandikar at gmail.com> wrote:
> Hi All!
>
> I am a newbie here and trying to test out few things with Antlr-v3.
> Following is what I have written to parse quoted string and print that
> parsed string on console.
> For this I referred to StringLiteral definition in Java.g But somehow,
> grammar written by me is not working. Am I doing something really
> stupid?
>
> Thanks,
> Siddharth
>
> Grammar -
>
> grammar Test;
>
> literal : q=quoted
>  {
>    System.out.println("q=>"+$q.text);
>  };
>
> quoted : '"' ( EscapeSequence | ~('\\'|'"') )* '"' ;

I believe quoted is supposed to be a lexer rule and thus must start
with a capital letter (i.e. Quoted), although all-caps is preferred
(i.e. QUOTED).
Otherwise, ANTLR thinks it's a parser rule, and it's obviously not
very sensible as a parser rule, hence the error.

Cheers,
Chris
-- 
Follow the path of the Iguana...
http://rebertia.com

>
> fragment
> EscapeSequence : '\\' ('\"'|'\''|'\\') ;
>
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>    ;
>
>
> Errors that I get -
>
> $ java -classpath .:output/:../../antlr-3.1.jar Run
> "abcd ABCD"
> line 1:1 no viable alternative at character 'a'
> line 1:2 no viable alternative at character 'b'
> line 1:3 no viable alternative at character 'c'
> line 1:4 no viable alternative at character 'd'
> line 1:6 no viable alternative at character 'A'
> line 1:7 no viable alternative at character 'B'
> line 1:8 no viable alternative at character 'C'
> line 1:9 no viable alternative at character 'D'
> q=>" "
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From chainone at gmail.com  Wed Nov 26 02:48:26 2008
From: chainone at gmail.com (chain one)
Date: Wed, 26 Nov 2008 18:48:26 +0800
Subject: [antlr-interest] What's the difference between these two rules?
Message-ID: <5a92ffb60811260248s55fbb0dby572d0a3574f21cde@mail.gmail.com>

I am reading the <<The Definitive ANTLR Reference. Building Domain-Specific
Languages>> book
And I am confused about something talked in p315 of Chapter 12.

Could someone tell me what the difference is between the following two
rules?

stat
options{backtrack=true}
: declaration
| expression
;


stat
:(declaration)=> declaration
| expression
;

Thanks for your help.
Best Regards,

Young
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/c52dc984/attachment.html 

From siddharth.karandikar at gmail.com  Wed Nov 26 02:58:38 2008
From: siddharth.karandikar at gmail.com (Siddharth Karandikar)
Date: Wed, 26 Nov 2008 16:28:38 +0530
Subject: [antlr-interest] parsing quoted string
In-Reply-To: <47c890dc0811260245y7506e149k1fe9c1a198176d8c@mail.gmail.com>
References: <703cd4960811260234yc7a4aa0je7be8d47fcc58cd8@mail.gmail.com>
	<47c890dc0811260245y7506e149k1fe9c1a198176d8c@mail.gmail.com>
Message-ID: <703cd4960811260258m4a6a0f61n96dd6521df7f2c58@mail.gmail.com>

Ooops  what a mistake ...
Thanks Chris. Now working like a charm!  :)


- Siddharth

On Wed, Nov 26, 2008 at 4:15 PM, Chris Rebert <cvrebert at gmail.com> wrote:
> On Wed, Nov 26, 2008 at 2:34 AM, Siddharth Karandikar
> <siddharth.karandikar at gmail.com> wrote:
>> Hi All!
>>
>> I am a newbie here and trying to test out few things with Antlr-v3.
>> Following is what I have written to parse quoted string and print that
>> parsed string on console.
>> For this I referred to StringLiteral definition in Java.g But somehow,
>> grammar written by me is not working. Am I doing something really
>> stupid?
>>
>> Thanks,
>> Siddharth
>>
>> Grammar -
>>
>> grammar Test;
>>
>> literal : q=quoted
>>  {
>>    System.out.println("q=>"+$q.text);
>>  };
>>
>> quoted : '"' ( EscapeSequence | ~('\\'|'"') )* '"' ;
>
> I believe quoted is supposed to be a lexer rule and thus must start
> with a capital letter (i.e. Quoted), although all-caps is preferred
> (i.e. QUOTED).
> Otherwise, ANTLR thinks it's a parser rule, and it's obviously not
> very sensible as a parser rule, hence the error.
>
> Cheers,
> Chris
> --
> Follow the path of the Iguana...
> http://rebertia.com
>
>>
>> fragment
>> EscapeSequence : '\\' ('\"'|'\''|'\\') ;
>>
>> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>>    ;
>>
>>
>> Errors that I get -
>>
>> $ java -classpath .:output/:../../antlr-3.1.jar Run
>> "abcd ABCD"
>> line 1:1 no viable alternative at character 'a'
>> line 1:2 no viable alternative at character 'b'
>> line 1:3 no viable alternative at character 'c'
>> line 1:4 no viable alternative at character 'd'
>> line 1:6 no viable alternative at character 'A'
>> line 1:7 no viable alternative at character 'B'
>> line 1:8 no viable alternative at character 'C'
>> line 1:9 no viable alternative at character 'D'
>> q=>" "
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From antlr at mirality.co.nz  Wed Nov 26 03:20:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 27 Nov 2008 00:20:04 +1300
Subject: [antlr-interest] What's the difference between these two rules?
In-Reply-To: <5a92ffb60811260248s55fbb0dby572d0a3574f21cde@mail.gmail.co
 m>
References: <5a92ffb60811260248s55fbb0dby572d0a3574f21cde@mail.gmail.com>
Message-ID: <20081126112012.9261911EF4A@www.antlr.org>

At 23:48 26/11/2008, chain one wrote:
>Could someone tell me what the difference is between the 
>following two rules?
>
>stat
>options{backtrack=true}
>: declaration
>| expression
>;
>
>stat
>:(declaration)=> declaration
>| expression
>;

As I understand it, the former could end up behaving identically 
to the latter if ANTLR determines that there's any possibility of 
ambiguity between declaration and expression.  Otherwise the 
former is identical to the latter without the use of the synpred 
(or itself without the option).

The latter on the other hand will always try to pre-evaluate 
declaration.


I could be wrong, though.


From qwizv9b02 at sneakemail.com  Wed Nov 26 05:42:47 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 26 Nov 2008 14:42:47 +0100
Subject: [antlr-interest] Getting rid of redundancy warning
In-Reply-To: <492BE29F.4060504@shmuelhome.mine.nu>
References: <gggm20$tkb$1@ger.gmane.org> <492BE29F.4060504@shmuelhome.mine.nu>
Message-ID: <ggjjon$9hm$1@ger.gmane.org>

shmuel siegel schreef:
> Hendrik Maryns wrote:
>> Hi,
>>
>> I have a rule like follows:
>>
>> formulaList : ( WHITESPACE? formula WHITESPACE? )* EOF ;
>>
>>   
> Your rule is intrinsically ambiguous since a white space can be before 
> the second formula or after the first formula. The following should work 
> (haven't tried it)
> 
> 
> formulaList : WHITESPACE? ( formula WHITESPACE? )* EOF ;

Duh! Of course.

Thanks, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/f781a670/attachment.bin 

From qwizv9b02 at sneakemail.com  Wed Nov 26 05:52:30 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Wed, 26 Nov 2008 14:52:30 +0100
Subject: [antlr-interest] ANTLR Source Formatting
In-Reply-To: <92b42db60811120824m1dcd9410pe5504b367053af00@mail.gmail.com>
References: <92b42db60811120824m1dcd9410pe5504b367053af00@mail.gmail.com>
Message-ID: <ggjkau$dp4$1@ger.gmane.org>

Edgar Espina schreef:
> Hi all,
> 
> I would like to include a source formatter in ANTLR IDE.
> 
> Can anyone suggest a default format?

Since nobody of the more experienced people here has answered, let me
present what I have come up with in my short history with ANTLR:

/**
 * There are 6 kinds of formulas.
 */
body returns [Formula result]
	: labelFormula
		{ $result = $labelFormula.result; }
	| atomic
		{ $result = $atomic.result; }
	| unary
		{ $result = $unary.result; }
	| binary
		{ $result = $binary.result; }
	| n_ary
		{ $result = $n_ary.result; }
	| quantor
		{ $result = $quantor.result; }
	;

That is: the rulename and returns statement on one line, the colon on
the next, then each alternative on its own line with the pipes aligned
to the colon.  Code blocks in a separate line, with an additional
indent.  (This will not always be possible, see below.)  Then the
semicolon aligned with the colon and pipes on its own line.  I use tabs
for indentation because I like them, there should of course be an option
to use spaces.

n_aryArguments returns [List<Formula> result]
@init{ $result = new ArrayList<Formula>(); }
	: ( WHITESPACE arg=formula { $result.add(arg); } )+
	;

@init and other such stuff on a separate line, without indentation.
Here you see that it is difficult to put code blocks on a separate line,
since it is inside the ()+.  You could however do

	: (
	    WHITESPACE arg=formula
	    	 { $result.add(arg); }
	  )+
	;

for consistency.

Another one with parens:

equality returns [Formula result]
	: EQUALITY WHITESPACE
		  ( firstfirst=firstOrderVariable WHITESPACE
secondfirst=firstOrderVariable
			{ $result = new FirstOrderEquality($firstfirst.result,
$secondfirst.result); } )
		| ( firstsecond=secondOrderVariable WHITESPACE
secondsecond=secondOrderVariable
			{ $result = new SecondOrderEquality($firstsecond.result,
$secondsecond.result); } )
	;

Note the parens are aligned, the pipe is before it.  Maybe here it would
make sense to have the parens on their own line as well.

And of course all of this should be configurable, similar to the Java
formatter.  Have fun :-)

Cheers, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/cd19e9c6/attachment.bin 

From sharwell at pixelminegames.com  Wed Nov 26 08:00:49 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 26 Nov 2008 10:00:49 -0600
Subject: [antlr-interest] ANTLR Source Formatting
In-Reply-To: <ggjkau$dp4$1@ger.gmane.org>
References: <92b42db60811120824m1dcd9410pe5504b367053af00@mail.gmail.com>
	<ggjkau$dp4$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E969@Bloodymary.ironwillgames.com>

Here's my set of ANTLR grammars for the ANTLR tool itself. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hendrik Maryns
Sent: Wednesday, November 26, 2008 7:53 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR Source Formatting

Edgar Espina schreef:
> Hi all,
> 
> I would like to include a source formatter in ANTLR IDE.
> 
> Can anyone suggest a default format?

Since nobody of the more experienced people here has answered, let me present what I have come up with in my short history with ANTLR:

/**
 * There are 6 kinds of formulas.
 */
body returns [Formula result]
	: labelFormula
		{ $result = $labelFormula.result; }
	| atomic
		{ $result = $atomic.result; }
	| unary
		{ $result = $unary.result; }
	| binary
		{ $result = $binary.result; }
	| n_ary
		{ $result = $n_ary.result; }
	| quantor
		{ $result = $quantor.result; }
	;

That is: the rulename and returns statement on one line, the colon on the next, then each alternative on its own line with the pipes aligned to the colon.  Code blocks in a separate line, with an additional indent.  (This will not always be possible, see below.)  Then the semicolon aligned with the colon and pipes on its own line.  I use tabs for indentation because I like them, there should of course be an option to use spaces.

n_aryArguments returns [List<Formula> result] @init{ $result = new ArrayList<Formula>(); }
	: ( WHITESPACE arg=formula { $result.add(arg); } )+
	;

@init and other such stuff on a separate line, without indentation.
Here you see that it is difficult to put code blocks on a separate line, since it is inside the ()+.  You could however do

	: (
	    WHITESPACE arg=formula
	    	 { $result.add(arg); }
	  )+
	;

for consistency.

Another one with parens:

equality returns [Formula result]
	: EQUALITY WHITESPACE
		  ( firstfirst=firstOrderVariable WHITESPACE secondfirst=firstOrderVariable
			{ $result = new FirstOrderEquality($firstfirst.result,
$secondfirst.result); } )
		| ( firstsecond=secondOrderVariable WHITESPACE secondsecond=secondOrderVariable
			{ $result = new SecondOrderEquality($firstsecond.result,
$secondsecond.result); } )
	;

Note the parens are aligned, the pipe is before it.  Maybe here it would make sense to have the parens on their own line as well.

And of course all of this should be configurable, similar to the Java formatter.  Have fun :-)

Cheers, H.
--
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Grammars.7z
Type: application/octet-stream
Size: 27898 bytes
Desc: Grammars.7z
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/4fa195ed/attachment.obj 

From oliver.zeigermann at gmail.com  Wed Nov 26 12:14:37 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed, 26 Nov 2008 21:14:37 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
Message-ID: <9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>

2008/10/21 Terence Parr <parrt at cs.usfca.edu>:
>
> On Oct 21, 2008, at 12:02 AM, Gavin Lambert wrote:
>> For analysis purposes, shouldn't ^(anything at all) be considered
>> equivalent to a single node anyway?  In much the same way that in
>> the expression "x + (y + z)", "x" and "(y + z)" are both atoms (in
>> terms of precedence).
>>
>> I'm a bit rusty on ANTLR's internal tree representation, but
>> certainly in a "normal" tree this is the case -- any given node
>> can have a subtree (or not), and you can uniquely refer to any
>> subtree by pointing at its root node.  I don't see why ANTLR would
>> need to behave any differently (and I can see quite a few cases
>> where it'd be beneficial if it could handle both cases at runtime,
>> not compile time).
>
> Hi. It turns out that parsing in two dimensions is a bit tricky ;)
> antlr serializes trees too one-dimensional strings, injecting
> imaginary down and up nodes to represent structure. so, we need to be
> able to distinguish between
>
> ^(X Y Z)
>
> and
>
> ^(X ^(Y Z))
>
> A subtree is very different terms of lookahead from a linear list.  A
> B is different than ^(A B). Lookahead is AB on the first one (LL(2))
> and ADOWN on the second one.
>
>>
>> Given the original problem mentioned in the issue:
>>   input: ^(not ^(and ^(= a b) ^(= c d)))
>>   rule: ^('not' ^('and' c51=. c52=.)) -> ...
>>
>> I don't see how this can be misinterpreted.  While processing the
>> 'and' subtree, it reads the first child node, discovers that it's
>> a subtree, reads the whole thing in and assigns the root node
>> (with dangling subtree) to c51.  Then it does the same for the
>> next subtree and c52.
>
> Agreed. After playing around all day yesterday, I came to the
> conclusion that the wild-card should in fact mean single node or
> subtree, which is normally what you want. I have simply altered the
> analysis to consider wild-card as  really ^(. .*) :)

Too bad for me as I have this in a tree parser (rule is spelled with
3xe on purpose):

treee
       : ^(. treee* )
       ;

which will never come to see the "treee*" part as the first "."
matches the complete subtree making my analysis (code is left out for
clarity) defunct.

Or am I missing something here (as usual).

Oliver

From antlr at mirality.co.nz  Wed Nov 26 12:39:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 27 Nov 2008 09:39:28 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com
 >
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
Message-ID: <20081126203936.36A9811EF15@www.antlr.org>

At 09:14 27/11/2008, Oliver Zeigermann wrote:
 >Too bad for me as I have this in a tree parser (rule is spelled
 >with 3xe on purpose):
 >
 >treee
 >       : ^(. treee* )
 >       ;
 >
 >which will never come to see the "treee*" part as the first "."
 >matches the complete subtree making my analysis (code is left 
out
 >for clarity) defunct.
 >
 >Or am I missing something here (as usual).

I'm not sure how Ter ended up implementing it, but I don't think 
there should be any problem with what you have here.

A wildcard in the 'root' position can only be a single node, 
because you can't have a subtree as a root.  So the meaning of the 
above shouldn't have changed.

Although incidentally, I would expect the above to fail to match 
if you have anything other than subtrees; ie. while it should 
match this:

   ^(FOO ^(BAR ^(BAZ)) ^(WIBBLE))

I would expect it to fail to match this:

   ^(FOO ^(BAR BAZ) WIBBLE)


From oliver.zeigermann at gmail.com  Wed Nov 26 12:45:08 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed, 26 Nov 2008 21:45:08 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
Message-ID: <9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>

2008/11/26 Gavin Lambert <antlr at mirality.co.nz>:
> At 09:14 27/11/2008, Oliver Zeigermann wrote:
>>Too bad for me as I have this in a tree parser (rule is spelled
>>with 3xe on purpose):
>>
>>treee
>>       : ^(. treee* )
>>       ;
>>
>>which will never come to see the "treee*" part as the first "."
>>matches the complete subtree making my analysis (code is left out
>>for clarity) defunct.
>>
>>Or am I missing something here (as usual).
>
> I'm not sure how Ter ended up implementing it, but I don't think there
> should be any problem with what you have here.
>
> A wildcard in the 'root' position can only be a single node, because you
> can't have a subtree as a root.  So the meaning of the above shouldn't have
> changed.

I agree with what you say, but in 3.1 this special wildcard consumes
the full subtree.

> Although incidentally, I would expect the above to fail to match if you have
> anything other than subtrees; ie. while it should match this:
>
>  ^(FOO ^(BAR ^(BAZ)) ^(WIBBLE))
>
> I would expect it to fail to match this:
>
>  ^(FOO ^(BAR BAZ) WIBBLE)

Right. That would be what I had expected as well. But in 3.1 it works
the way described above.

Would you agree that chaning the rule to

treee
  : ^(. treee* )
  | .
  ;

should make it accept the second tree as well?

Oliver

From ian at telematter.com  Wed Nov 26 12:46:42 2008
From: ian at telematter.com (ian eyberg)
Date: Wed, 26 Nov 2008 14:46:42 -0600
Subject: [antlr-interest] returning antlr w/c
Message-ID: <20081126204642.GA4098@localhost>

Hi, I'm using antlr 3.1.1 and evaluating
it against boost::spirit and I'm having
a pretty hard time coming up with even
simple examples that work.

I have a grammar like so:
--------------------
grammar Blah
options{ language = C; }
r
returns [char *s]
:w1=ID ' ' w2=ID{ $s = "blah"; };
ID: 'a'..'z'+;
------------------------

this will return me a "blah" but I'm having
trouble figuring out howto return the value of
w1 or w2;

I thought it was w1->getText() but that doesn't
seem to work.

preferably I'd just like to pass in a struct
and tack on w1 and w2 to it

I'm using the lexer/parser that this grammar
generates in a c++ program.

can anyone point me to some resources on this?
I've already looked through the examples tarball
from the site and didn't find anything that related
to these specific questions
 
thanks,
-ian

From jimi at temporal-wave.com  Wed Nov 26 13:05:09 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 26 Nov 2008 13:05:09 -0800
Subject: [antlr-interest] returning antlr w/c
In-Reply-To: <20081126204642.GA4098@localhost>
References: <20081126204642.GA4098@localhost>
Message-ID: <1227733509.11705.7.camel@jimi.temporal-wave.com>

On Wed, 2008-11-26 at 14:46 -0600, ian eyberg wrote:

> Hi, I'm using antlr 3.1.1 and evaluating
> it against boost::spirit and I'm having
> a pretty hard time coming up with even
> simple examples that work.


Please read through the C examples (see downloads for the examples tgz
download) and the examples in general, before trying to construct your
own examples. You should also consult the C API docs. You can also
search the past messages from the support page. All these links are
available from the antlr.org home page.

You might wish to start with the 5 minute intro and similar articles on
the wiki though as your questions are fundamental to ANTLR grammars of
all targets. 

$xxx.text
$xxx.text->chars

Return values of rules are usually contained in structures (returned,
not returned as pointers). Look at the generated source code and use an
IDE (Visual Studio is great but Netbeans 6.5 is not bad for *NIX), which
will help you with the structures.

Jim



> I have a grammar like so:
> --------------------
> grammar Blah
> options{ language = C; }
> r
> returns [char *s]
> :w1=ID ' ' w2=ID{ $s = "blah"; };
> ID: 'a'..'z'+;
> ------------------------
> 
> this will return me a "blah" but I'm having
> trouble figuring out howto return the value of
> w1 or w2;
> 
> I thought it was w1->getText() but that doesn't
> seem to work.
> 
> preferably I'd just like to pass in a struct
> and tack on w1 and w2 to it
> 
> I'm using the lexer/parser that this grammar
> generates in a c++ program.
> 
> can anyone point me to some resources on this?
> I've already looked through the examples tarball
> from the site and didn't find anything that related
> to these specific questions


Look for the C examples.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/96c713ba/attachment.html 

From parrt at cs.usfca.edu  Wed Nov 26 13:09:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Nov 2008 13:09:06 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
Message-ID: <5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>

Hi gang, I've recently fixed how this wildcard thing works in tree  
grammars.

October 21, 2008
* Made . in tree grammar look like ^(. .*) to analysis, though ^(. foo)
   is illegal (can't have . at root). Wildcard is subtree or node.
   Fixed bugs:
     http://www.antlr.org:8888/browse/ANTLR-248
     http://www.antlr.org:8888/browse/ANTLR-344

Not sure why ^(. foo) is illegal...hmm...weird.
Ter

From parrt at cs.usfca.edu  Wed Nov 26 13:11:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Nov 2008 13:11:54 -0800
Subject: [antlr-interest] can we require Java 5 for ANTLR v3.2?
Message-ID: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>

Hi, 3.2 will be the ANTLR release for the language design patterns  
book sometime spring/summer next year.  Can I require Java 1.5 at that  
time for the runtime source?

Thanks!
Ter

From espina.edgar at gmail.com  Wed Nov 26 14:29:07 2008
From: espina.edgar at gmail.com (Edgar Espina)
Date: Wed, 26 Nov 2008 19:29:07 -0300
Subject: [antlr-interest] ANTLR IDE 1.2.0 released
Message-ID: <92b42db60811261429m5eb2d2c7ted7990db4a8262fa@mail.gmail.com>

ANTLR IDE 1.2.0 is out and I proud to announce two new exciting features.

  * Debugging support (see
http://antlrv3ide.sourceforge.net/resources/antlrdebuggerinaction.png)
  * StringTemplate Editor (*.st
http://antlrv3ide.sourceforge.net/resources/stringtemplate.png  and*. stg
http://antlrv3ide.sourceforge.net/resources/stringtemplategroup.png)

I worked hard to add this two new features because ANTLR IDE is built on top
of DLTK and currently DTLK has two limitations: 1) All the debugging
infrastructure is highly tight
to the dbgp protocol; and 2) DLTK doesn't support multiples language in the
same project (ANTLR and StringTemplate), so I do a lot of work to add this
features and I hope that you enjoy it!

Cheers!!

http://antlrv3ide.sourceforge.net/
-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/440d726e/attachment.html 

From Sanus at gmx.de  Wed Nov 26 14:42:21 2008
From: Sanus at gmx.de (Christian Hoffmann)
Date: Wed, 26 Nov 2008 23:42:21 +0100
Subject: [antlr-interest] Bug for C-Target on $tree usage
Message-ID: <17910097937.20081126234221@gmx.de>


Hello,

converting from antlr2 to antlr3 becomes a horror! ;-)


Now I am tumbling over some c-codegeneration.
Don't know if its me or a real bug...


declaration
        :       declSpecifiers variableDeclarations
                        -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
                { m_Symbols.AddVarDef($tree); }   // add the variable
                                      ^^^^problem is here
        ;


should result to somthing like
                { m_Symbols.AddVarDef(retval.tree); }   // add the variable

instead the resulting c-code becomes
            m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree);  );

2 Bugs in one line!
1. bug: retval.tree is not a pANTLR3_COMMON_TOKEN, its of type pANTLR3_BASE_TREE

Bugfix??: C.stg lines 3013 and 3035 ??
line 3013> rulePropertyRef_tree(scope,attr) ::= "retval.tree"
line 3050> ruleSetPropertyRef_tree(scope,attr,expr) ::= "retval.tree=<expr>;"

2. bug:
      original code:
      ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree); );
      look at the end of the line,
      somthing like func(... func(...); ); would not compile ;)
Bugfix:
Swapping the lines helps, but...
declaration
        :       declSpecifiers variableDeclarations
                { m_Symbols.AddVarDef($tree); }   // add the variable
                        -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
        ;


Thx in advance for your comments...


---
Christian Hoffmann
D-38118 Braunschweig


From sharwell at pixelminegames.com  Wed Nov 26 14:47:12 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 26 Nov 2008 16:47:12 -0600
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu><20081021070213.DA48111EB00@www.antlr.org><8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu><9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com><492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com><9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>

It does make sense to have the following action:

. as the first child of a multi-child block matches any single node
. in any other position matches any node or subtree

The following modified check in TreeToNFAConverter should correct the
issues people are seeing. Remember I'm using V3 grammars so let me know
if the translation doesn't work right.

Current:

if ( nfa.grammar.type == Grammar.TREE_PARSER )
{
	$g = factory.build_WildcardTree( $w );
}
else
{
	$g = factory.build_Wildcard( $w );
}

Modified:

if ( nfa.grammar.type == Grammar.TREE_PARSER
	&& (w.ChildIndex > 0 || w.Parent.getChild(1).Type == EOA) )
{
	$g = factory.build_WildcardTree( $w );
}
else
{
	$g = factory.build_Wildcard( $w );
}

Note that when w.ChildIndex == 0 and its next sibling is EOA, it means
the . is the child of a closure such as .* , since the other possibility
^(.) is not allowed in a tree parser.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, November 26, 2008 3:09 PM
To: antlr-interest Interest
Subject: Re: [antlr-interest] wildcard in tree grammar

Hi gang, I've recently fixed how this wildcard thing works in tree  
grammars.

October 21, 2008
* Made . in tree grammar look like ^(. .*) to analysis, though ^(. foo)
   is illegal (can't have . at root). Wildcard is subtree or node.
   Fixed bugs:
     http://www.antlr.org:8888/browse/ANTLR-248
     http://www.antlr.org:8888/browse/ANTLR-344

Not sure why ^(. foo) is illegal...hmm...weird.
Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From jneeraj at us.ibm.com  Wed Nov 26 15:06:11 2008
From: jneeraj at us.ibm.com (Neeraj Joshi)
Date: Wed, 26 Nov 2008 16:06:11 -0700
Subject: [antlr-interest] AUTO: Neeraj Joshi/Durham/IBM is out of the office.
Message-ID: <OF7B24E2C5.EC079166-ON8725750D.007EE90D-8725750D.007EE90E@us.ibm.com>



I am out of the office until 12/22/2008.

I am on vacation and  will have no access to email. If urgent please call
919 491 0208


Note: This is an automated response to your message  "antlr-interest
Digest, Vol 48, Issue 24" sent on 11/26/08 13:00:02.

You will receive a notification for each message you send to this person
while the person is away.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/3bce827e/attachment.html 

From jimi at temporal-wave.com  Wed Nov 26 18:35:47 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 26 Nov 2008 18:35:47 -0800
Subject: [antlr-interest] Bug for C-Target on $tree usage
In-Reply-To: <17910097937.20081126234221@gmx.de>
References: <17910097937.20081126234221@gmx.de>
Message-ID: <1227753347.11705.23.camel@jimi>

On Wed, 2008-11-26 at 23:42 +0100, Christian Hoffmann wrote:

> Hello,
> 
> converting from antlr2 to antlr3 becomes a horror! ;-)
> 
> 
> Now I am tumbling over some c-codegeneration.
> Don't know if its me or a real bug...


Could be a real bug - I'll look on Friday.

Try $declaration rather than $tree though.

Jim

> 
> 
> declaration
>         :       declSpecifiers variableDeclarations
>                         -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
>                 { m_Symbols.AddVarDef($tree); }   // add the variable
>                                       ^^^^problem is here
>         ;
> 
> 
> should result to somthing like
>                 { m_Symbols.AddVarDef(retval.tree); }   // add the variable
> 
> instead the resulting c-code becomes
>             m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree);  );
> 
> 2 Bugs in one line!
> 1. bug: retval.tree is not a pANTLR3_COMMON_TOKEN, its of type pANTLR3_BASE_TREE
> 
> Bugfix??: C.stg lines 3013 and 3035 ??
> line 3013> rulePropertyRef_tree(scope,attr) ::= "retval.tree"
> line 3050> ruleSetPropertyRef_tree(scope,attr,expr) ::= "retval.tree=<expr>;"
> 
> 2. bug:
>       original code:
>       ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree); );
>       look at the end of the line,
>       somthing like func(... func(...); ); would not compile ;)
> Bugfix:
> Swapping the lines helps, but...
> declaration
>         :       declSpecifiers variableDeclarations
>                 { m_Symbols.AddVarDef($tree); }   // add the variable
>                         -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
>         ;
> 
> 
> Thx in advance for your comments...
> 
> 
> ---
> Christian Hoffmann
> D-38118 Braunschweig
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081126/8ed8949b/attachment.html 

From antlr at mirality.co.nz  Wed Nov 26 23:08:27 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 27 Nov 2008 20:08:27 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwill
	games.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
Message-ID: <20081127070936.89F6D11EC83@www.antlr.org>

At 11:47 27/11/2008, Sam Harwell wrote:
 >Note that when w.ChildIndex == 0 and its next sibling is EOA, it 

 >means the . is the child of a closure such as .* , since the 
other
 >possibility ^(.) is not allowed in a tree parser.

Why would "^(.)" not be allowed?  That should simply match any 
node with no children.  I don't think there's any other syntax 
that could express that particular condition (barring a semantic 
predicate of course), as the equivalent 3.0 construct (simply ".") 
now represents any node with any number of children.

I'm not sure it's an especially *useful* construct, but it ought 
to be supported for consistency at least.

In other words (in vaguely ANTLR-like syntax):

   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;

   .          => wild
   ^(.)       => ANYNODE
   ^(. FOO)   => ^(ANYNODE FOO)
   ^(FOO .)   => ^(FOO wildtree)
   ^(FOO . .) => ^(FOO wildtree wildtree)
   ^(FOO .+)  => ^(FOO wildtree+)
   ^(FOO .*)  => ^(FOO wildtree*)

To put it another way, given a single node FOO, all of the 
following should be able to match it:
   FOO
   ^(FOO)
   ^(FOO BAR?)
   ^(FOO xyz*)
   .
   ^(.)
   ^(. BAR?)
   ^(. xyz*)


From antlr at mirality.co.nz  Wed Nov 26 23:13:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 27 Nov 2008 20:13:05 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <20081127070936.89F6D11EC83@www.antlr.org>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
Message-ID: <20081127071316.10BEA11ECEE@www.antlr.org>

Mere moments ago, I wrote:
 >In other words (in vaguely ANTLR-like syntax):
 >
 >   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
 >
 >   .          => wild

Gah!  That should be wildtree of course.  (Sorry for the noise.)


From sharwell at pixelminegames.com  Thu Nov 27 08:18:22 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 27 Nov 2008 10:18:22 -0600
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
	<9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E977@Bloodymary.ironwillgames.com>

That should be correct, but under the current implementation, I believe
it will match any tree with the . wildcard, then find 0 instances of
tree. The problem doesn't occur in the rule you have here, but this rule
will only print 1 line, regardless of the input tree:

tree : ^(. {System.out.println("tree node");} tree*)

Sam

-----Original Message-----
From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com] 
Sent: Thursday, November 27, 2008 2:24 AM
To: Gavin Lambert
Cc: Terence Parr; Sam Harwell; antlr-interest Interest
Subject: Re: [antlr-interest] wildcard in tree grammar

2008/11/27 Gavin Lambert <antlr at mirality.co.nz>:
> In other words (in vaguely ANTLR-like syntax):
>
>   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
>
>   .          => wild
>   ^(.)       => ANYNODE
>   ^(. FOO)   => ^(ANYNODE FOO)
>   ^(FOO .)   => ^(FOO wildtree)
>   ^(FOO . .) => ^(FOO wildtree wildtree)
>   ^(FOO .+)  => ^(FOO wildtree+)
>   ^(FOO .*)  => ^(FOO wildtree*)

Using these semantics my original rule

tree : ^(. tree* ) ;

would match any tree even if subtrees are single nodes only, right?

Oliver

From parrt at cs.usfca.edu  Fri Nov 28 13:46:25 2008
From: parrt at cs.usfca.edu (parrt at cs.usfca.edu)
Date: Fri, 28 Nov 2008 13:46:25 -0800 (PST)
Subject: [antlr-interest] can we require Java 5 for ANTLR v3.2?
In-Reply-To: <37972300-330A-48E4-954B-BA9E5CB0C471@adam.com.au>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
	<37972300-330A-48E4-954B-BA9E5CB0C471@adam.com.au>
Message-ID: <57728.138.202.170.154.1227908785.squirrel@mail.cs.usfca.edu>

> That said, do you mean:
>
> * Running ANTLR will require Java 1.5; or

ANTLR is already 1.5

> * That which ANTLR creates might require Java 1.5

ANTLR runtime would now require 1.5 :)

Ter


From parrt at cs.usfca.edu  Fri Nov 28 13:47:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Nov 2008 13:47:08 -0800
Subject: [antlr-interest] antlr.org back up
Message-ID: <70D1471D-6534-4AE9-ADB4-B69F12AFF9B1@cs.usfca.edu>

machine died...moved drive to new box...it's up and happy for now. :)
Ter

From e.mortoray at ecircle.com  Fri Nov 28 06:26:44 2008
From: e.mortoray at ecircle.com (edA-qa mort-ora-y)
Date: Fri, 28 Nov 2008 15:26:44 +0100
Subject: [antlr-interest] Simple left recursive grammar and rewriting (how
	can it be done)
Message-ID: <492FFFA4.9050401@ecircle.com>

I want a very basic expression parsing in my grammer so that expressions
like this can be parsed:

( ( A OR B OR D ) AND (E OR F) )

The resulting tree should be:
AND
  OR A, B, D
  OR E,F

The ideal grammar looks like

expr
    : terminal
    | '(' expr ( OR expr ) ')' -> ^(OR expr*)
    | '(' expr ( AND expr ) ')' -> ^(AND expr*)
    ;

Where terminal is some other rule (simple) and OR : 'OR'; , AND : 'AND'; 

This causes the troublesome non-LL(*) error due to the left recursion.

These can usually be factored out, but there are two problems here I
don't know how to resolve.
1. Each bracketed section may contain only OR or AND, not combinations
thereof (there is no precedence supported)
2. The rewriting should group the entire bracketed section into a single
node under OR or AND.

Any help would be appreciated.

   

-- 
edA-qa mort-ora-y
Director Quality Assurance
______________________________________________________
eCircle AG - Inside Digital Marketing
Nymphenburger Str. 86
80636 M?nchen

Tel    +49-89-12009-773
Fax    +49-89-12009-750

E-Mail mailto:e.mort-ora-y at ecircle.com
Web    http://www.ecircle.com

______________________________________________________
Aktuelles
"Inside Digital Marketing" - der Newsletter f?r die
Online-Branche von eCircle. Jeden Monat neu & voll
mit aktuellen Fallstudien und hilfreichen Tipps!
Jetzt kostenlos abonnieren:

http://www.ecircle.com/de/newsletter
______________________________________________________

eCircle AG, HRB 136 334, Handelsregister M?nchen
Vorstand:  Lothar Lanz, Volker Wiewer (Vorsitzende), 
Thomas Wilke, Lars W?ssner, Alexander Meyer
Vorsitzender des Aufsichtsrates: Dr. Mark W?ssner


From JALuber at gmx.de  Thu Nov 27 09:47:43 2008
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 27 Nov 2008 18:47:43 +0100
Subject: [antlr-interest] can we require .NET 2 for ANTLR v3.2?
In-Reply-To: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
Message-ID: <20081127174743.72450@gmx.net>

> Hi, 3.2 will be the ANTLR release for the language design patterns  
> book sometime spring/summer next year.  Can I require Java 1.5 at that  
> time for the runtime source?
> 
> Thanks!
> Ter

I hijack the thread for a similar question: Does anyone still use the CSharp target and not its successor? If not, I would like to remove then the support for ANTLR 3.2. I know that I said I would wait for ANTLR 3.3, but then I didn't expected it to take so much to arrive (at least 1 1/2 years). If there aren't any people complaining about this, I'll assume that no one uses it anymore. Which is a pretty safe bet as no one mailed me .NET 1.1 assemblies to upload (can't compile them myself for .NET 1.1).  :)

Thanks!
Johannes
-- 
Sensationsangebot nur bis 30.11: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From antlr at mirality.co.nz  Thu Nov 27 02:43:33 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 27 Nov 2008 23:43:33 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.co
 m>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
	<9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>
Message-ID: <20081128225000.9FAB111EB29@www.antlr.org>

At 21:23 27/11/2008, Oliver Zeigermann wrote:
 >> In other words (in vaguely ANTLR-like syntax):
 >>
 >>   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
 >>
 >>   .          => wild
 >>   ^(.)       => ANYNODE
 >>   ^(. FOO)   => ^(ANYNODE FOO)
 >>   ^(FOO .)   => ^(FOO wildtree)
 >>   ^(FOO . .) => ^(FOO wildtree wildtree)
 >>   ^(FOO .+)  => ^(FOO wildtree+)
 >>   ^(FOO .*)  => ^(FOO wildtree*)
 >
 >Using these semantics my original rule
 >
 >tree : ^(. tree* ) ;
 >
 >would match any tree even if subtrees are single nodes
 >only, right?

Right.  That makes the most sense to me, since it keeps the 
structure consistent and treats a leaf node on the tree exactly 
the same as a parent node that simply happens to have no children 
at the moment (which is usually how it should be).


From matt.jazz at laposte.net  Thu Nov 27 00:25:15 2008
From: matt.jazz at laposte.net (matt.jazz)
Date: Thu, 27 Nov 2008 09:25:15 +0100 (CET)
Subject: [antlr-interest] token definitions can never be matched because
 prior tokens match the same input
Message-ID: <19437379.2674661227774315191.JavaMail.www@wwinf8216>


Hello,

I'm new to ANTLR and i need to create a translator. I encounter a problem with the following grammar.

Grammar :

r0??? :??? 'OK' r1 r2? r3?
?????? ;

r1??? :??? 'V'
?????? |??? 'W'
?????? ;

r2??? :??? ('A'..'Z''0..9')('A'..'Z''0..9')('A'..'Z''0..9')
?????? ;

r3??? :??? ('A'..'Z''0..9')('A'..'Z''0..9')
?????? ;

Examples of valid sentences :

OK W 65 0X9
OK V AZ 78F

Error :

The following token definitions can never be matched because prior tokens match the same input

Thanks for your help

Matt


 Cr?ez votre adresse ?lectronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081127/11ac46b0/attachment.html 

From sterini at gmail.com  Fri Nov 28 15:05:58 2008
From: sterini at gmail.com (Ilya Sterin)
Date: Fri, 28 Nov 2008 18:05:58 -0500
Subject: [antlr-interest] token definitions can never be matched because
	prior tokens match the same input
In-Reply-To: <19437379.2674661227774315191.JavaMail.www@wwinf8216>
References: <19437379.2674661227774315191.JavaMail.www@wwinf8216>
Message-ID: <67d2b0c70811281505o3f2ca15atdec31d01a922e3d@mail.gmail.com>

Based on the grammar you provided it doesn't seem you've defined it
correctly.  First, I'd define some of your patterns as lexer tokens.
Try this...


r0    :    'OK' R1 R2? R3?
       ;
R1   :    'V'
       |    'W'
       ;
R2    :    (APHA_OR_DIGIT)(APHA_OR_DIGIT)
       ;
R3    :    (APHA_OR_DIGIT)(APHA_OR_DIGIT)(APHA_OR_DIGIT)
       ;

fragment
APHA_OR_DIGIT  : ALPHA_UC | DIGIT;

fragment
ALPHA_UC  :  'A'..'Z'
                   ;

fragment
DIGIT          :  '0'..'9'
                   ;



On Thu, Nov 27, 2008 at 3:25 AM, matt.jazz <matt.jazz at laposte.net> wrote:
>
> Hello,
>
> I'm new to ANTLR and i need to create a translator. I encounter a problem
> with the following grammar.
>
> Grammar :
>
> r0    :    'OK' r1 r2? r3?
>        ;
>
> r1    :    'V'
>        |    'W'
>        ;
>
> r2    :    ('A'..'Z''0..9')('A'..'Z''0..9')('A'..'Z''0..9')
>        ;
>
> r3    :    ('A'..'Z''0..9')('A'..'Z''0..9')
>        ;
>
> Examples of valid sentences :
>
> OK W 65 0X9
> OK V AZ 78F
>
> Error :
>
> The following token definitions can never be matched because prior tokens
> match the same input
>
> Thanks for your help
>
> Matt
>
>
>
> Cr?ez votre adresse ?lectronique prenom.nom at laposte.net
> 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From rschulz at sonic.net  Fri Nov 28 15:15:52 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 28 Nov 2008 15:15:52 -0800
Subject: [antlr-interest] token definitions can never be matched because
	prior tokens match the same input
In-Reply-To: <67d2b0c70811281505o3f2ca15atdec31d01a922e3d@mail.gmail.com>
References: <19437379.2674661227774315191.JavaMail.www@wwinf8216>
	<67d2b0c70811281505o3f2ca15atdec31d01a922e3d@mail.gmail.com>
Message-ID: <200811281515.52857.rschulz@sonic.net>

On Friday 28 November 2008 15:05, Ilya Sterin wrote:
> Based on the grammar you provided it doesn't seem you've defined it
> correctly.  First, I'd define some of your patterns as lexer tokens.
> Try this...

I think it's important to make clear the fact that ANTLR encodes a fixed 
naming convention that makes rules whose names begin with a lower-case 
letter produce parser productions and those whose names begin with an 
upper-case letter produce lexer / scanner rules.

It was the first problem I had when first using ANTLR...

The next less will be to understand that the scanner / lexer fully 
processes the input (breaking it into a sequence of tokens) and 
completes its work before the parser begins executing.


Randall Schulz

From rschulz at sonic.net  Fri Nov 28 15:24:51 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 28 Nov 2008 15:24:51 -0800
Subject: [antlr-interest] token definitions can never be matched because
	prior tokens match the same input
In-Reply-To: <200811281515.52857.rschulz@sonic.net>
References: <19437379.2674661227774315191.JavaMail.www@wwinf8216>
	<67d2b0c70811281505o3f2ca15atdec31d01a922e3d@mail.gmail.com>
	<200811281515.52857.rschulz@sonic.net>
Message-ID: <200811281524.51642.rschulz@sonic.net>

On Friday 28 November 2008 15:15, Randall R Schulz wrote:
> ...
>
> The next less will be to understand that the scanner / lexer fully
> processes the input (breaking it into a sequence of tokens) and
> completes its work before the parser begins executing.

D'Oh!

Make that "The next _lesson_ will be ..."


RRS

From micha-1 at fantasymail.de  Fri Nov 28 04:30:10 2008
From: micha-1 at fantasymail.de (micha)
Date: Fri, 28 Nov 2008 13:30:10 +0100
Subject: [antlr-interest] outputting whole source line on error
Message-ID: <200811281330.10601.micha-1@fantasymail.de>

Hi,

maybe I'm not seeing the obvious, but how can I output the whole source line, 
when an error occurs (while parsing) ?

thanks for answering,
 Michael

From rschulz at sonic.net  Fri Nov 28 15:53:09 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 28 Nov 2008 15:53:09 -0800
Subject: [antlr-interest] outputting whole source line on error
In-Reply-To: <200811281330.10601.micha-1@fantasymail.de>
References: <200811281330.10601.micha-1@fantasymail.de>
Message-ID: <200811281553.09630.rschulz@sonic.net>

On Friday 28 November 2008 04:30, micha wrote:
> Hi,
>
> maybe I'm not seeing the obvious, but how can I output the whole
> source line, when an error occurs (while parsing) ?

Well, the lexer counts newlines (or CR+LF pairs) so as to provide a line 
count associated with each token it emits, but lines per se are not 
something that it otherwise deals in. Lines are, in effect, a 
completely separate partitioning of the input sequence and rarely 
correspond to a syntactically significant entity.

So the answer is basically "no."

However, the TokenStream interface can reconstruct the text of one or a 
sub-sequence of the tokens it has produced (based on ordinal indexes or 
particular Token instances produced by that TokenStream). You may be 
able to find a way to use that to reconstruct an input line or, more 
probably, a fragment of the input corresponding to some syntactically 
significant entity.


> thanks for answering,
>  Michael


Randall Schulz

From qwizv9b02 at sneakemail.com  Thu Nov 27 06:44:46 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Thu, 27 Nov 2008 15:44:46 +0100
Subject: [antlr-interest] can we require Java 5 for ANTLR v3.2?
In-Reply-To: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
Message-ID: <ggmbov$h38$1@ger.gmane.org>

Terence Parr schreef:
> Hi, 3.2 will be the ANTLR release for the language design patterns  
> book sometime spring/summer next year.  Can I require Java 1.5 at that  
> time for the runtime source?

I?d say: of course.  It?s already end-of life now, 1.4 is no longer
supported by Sun, 1.7 is coming soon.

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081127/b875254a/attachment.bin 

From vs at iist.unu.edu  Thu Nov 27 19:49:29 2008
From: vs at iist.unu.edu (Volker Stolz)
Date: Fri, 28 Nov 2008 11:49:29 +0800
Subject: [antlr-interest] Generated Java lexer not grokking Unicode
Message-ID: <vs-827FE0.11492828112008@news.gmane.org>

Dear all, to a working grammar, I added some unicode matching to a 
token, e.g.:

AND   :   'AND' | '&&' | '\u00c3' '\u00b5'

Note that I'm only using '?' as an arbitrary test character. Eventually 
we'd like to be able to parse a whole range of mostly mathematical 
characters.

I change a working test file to contain the character in the right 
place, and save it as UTF-8. hexdump -C on the input file confirms that 
it's UTF-8 in the form of 7-bit characters everywhere else except for 
the byte sequence ... c3 b5 ... for the new character.

I use ANTLR 3.1 to generate the code for Java, and fire up a JUnit 
testcase in Eclipse:

line 12:33 no viable alternative at character '?'

OS is MacOS with 1.5 JDK, default charset from java.nio.charset is UTF-8 
in Eclipse and MacRoman when running the test from the commandline. I 
tried instantiating both plain ANTLRFileStream(filename) and 
ANTLRFileStream(filename,"utf-8"). Same result in both cases (have to 
set utf-8 when invoking from the command line anyway).

Any hints on how to get ANTLR to accept this? '\uc3b5' also doesn't work.

Thanks in advance,
  Volker

-- 
United Nations University - ? ? ? ? ? ? ? ? ?     http://rcos.iist.unu.edu/~vs/
International Institute for Software Technology ? Macau SAR, China


From lloy0076 at adam.com.au  Thu Nov 27 16:42:46 2008
From: lloy0076 at adam.com.au (David Lloyd)
Date: Fri, 28 Nov 2008 11:12:46 +1030
Subject: [antlr-interest] Antlr.Org
Message-ID: <94552A6F-200E-4334-B5E5-E166918B9108@adam.com.au>


Is it just me or is the antlr web-site not there?

dsl

From parrt at cs.usfca.edu  Fri Nov 28 17:03:23 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Nov 2008 17:03:23 -0800
Subject: [antlr-interest] can we require Java 5 for ANTLR v3.2?
In-Reply-To: <ggmbov$h38$1@ger.gmane.org>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
	<ggmbov$h38$1@ger.gmane.org>
Message-ID: <C9512636-0360-48D3-BCCE-A69BB2618B4A@cs.usfca.edu>


On Nov 27, 2008, at 6:44 AM, Hendrik Maryns wrote:

> Terence Parr schreef:
>> Hi, 3.2 will be the ANTLR release for the language design patterns
>> book sometime spring/summer next year.  Can I require Java 1.5 at  
>> that
>> time for the runtime source?
>
> I?d say: of course.  It?s already end-of life now, 1.4 is no longer
> supported by Sun, 1.7 is coming soon.

Ok, sounds good.

Ter

From micha-1 at fantasymail.de  Fri Nov 28 17:18:51 2008
From: micha-1 at fantasymail.de (Micha)
Date: Sat, 29 Nov 2008 02:18:51 +0100
Subject: [antlr-interest] outputting whole source line on error
In-Reply-To: <200811281553.09630.rschulz@sonic.net>
References: <200811281330.10601.micha-1@fantasymail.de>
	<200811281553.09630.rschulz@sonic.net>
Message-ID: <200811290218.51610.micha-1@fantasymail.de>

On Saturday 29 November 2008 00:53:09 Randall R Schulz wrote:
> On Friday 28 November 2008 04:30, micha wrote:
>
> So the answer is basically "no."
>
> However, the TokenStream interface can reconstruct the text of one or a
> sub-sequence of the tokens it has produced (based on ordinal indexes or
> particular Token instances produced by that TokenStream). You may be
> able to find a way to use that to reconstruct an input line or, more
> probably, a fragment of the input corresponding to some syntactically
> significant entity.
>

o.k., thanks. Maybe I just buffer the lines myself, not elegant but simple and 
fast (for a few thousend lines) 

 Michael


From lloy0076 at adam.com.au  Thu Nov 27 17:33:07 2008
From: lloy0076 at adam.com.au (David Lloyd)
Date: Fri, 28 Nov 2008 12:03:07 +1030
Subject: [antlr-interest] can we require Java 5 for ANTLR v3.2?
In-Reply-To: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
Message-ID: <37972300-330A-48E4-954B-BA9E5CB0C471@adam.com.au>


Terence,

On 27/11/2008, at 7:41 AM, Terence Parr wrote:

> Hi, 3.2 will be the ANTLR release for the language design patterns
> book sometime spring/summer next year.  Can I require Java 1.5 at that
> time for the runtime source?

I think it's reasonably safe from a technical point of view. From what  
I can tell:

* Windows can easily have Java 1.5
* Debian Stable can, relatively easily, have Java 1.5
* OS X has Java 1.5

I've pointed out Debian because it tends to be the GNU/Linux  
distribution that is the most "stable but out of date" but still  
widely used. The other GNU/Linux distributions don't have Debian's  
release cycle (you're more likely to get run over by a glacier than  
see five Debian stable releases in your life time), nor its "free  
software" philosophy, meaning that Java 1.5 packages are easily  
available for them already.

That said, do you mean:

* Running ANTLR will require Java 1.5; or
* That which ANTLR creates might require Java 1.5

I suppose they're subtly different questions...

DSL

From oliver.zeigermann at gmail.com  Thu Nov 27 05:21:31 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 27 Nov 2008 14:21:31 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <492e79de.070bca0a.3c19.ffffdb61SMTPIN_ADDED@mx.google.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
	<9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>
	<492e79de.070bca0a.3c19.ffffdb61SMTPIN_ADDED@mx.google.com>
Message-ID: <9da4f4520811270521v369ea48cr4eecad073d219a04@mail.gmail.com>

2008/11/27 Gavin Lambert <antlr at mirality.co.nz>:
> At 21:23 27/11/2008, Oliver Zeigermann wrote:
>>> In other words (in vaguely ANTLR-like syntax):
>>>
>>>   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
>>>
>>>   .          => wild
>>>   ^(.)       => ANYNODE
>>>   ^(. FOO)   => ^(ANYNODE FOO)
>>>   ^(FOO .)   => ^(FOO wildtree)
>>>   ^(FOO . .) => ^(FOO wildtree wildtree)
>>>   ^(FOO .+)  => ^(FOO wildtree+)
>>>   ^(FOO .*)  => ^(FOO wildtree*)
>>
>>Using these semantics my original rule
>>
>>tree : ^(. tree* ) ;
>>
>>would match any tree even if subtrees are single nodes
>>only, right?
>
> Right.  That makes the most sense to me, since it keeps the structure
> consistent and treats a leaf node on the tree exactly the same as a parent
> node that simply happens to have no children at the moment (which is usually
> how it should be).

Right. Agreed.

@Terence: Is it like this? What do think? Should it be like that?

Oliver

From g.r.vansickle at att.net  Fri Nov 28 19:28:32 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Fri, 28 Nov 2008 21:28:32 -0600
Subject: [antlr-interest] ANTLR installation/use on Unix
Message-ID: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>

Hi Terence et al,

Am I just getting old, or shouldn't I be able to (in a More Ideal World(tm),
of course) do something like this on a Unix-like box?:

$ cd antlr-src-distro-dir/
$ make install
$ antlr --version

ANTLR Parser Generator  Version 3.1.1
[...]

???

I've read "How do I install this damn thing?" in the FAQ
(http://www.antlr.org/wiki/pages/viewpage.action?pageId=728), and
unfortunately I'm still left with the original question: how do I install
this damn thing?  Sure, I can untar everything to some arbitrary place, add
every JAR I find to CLASSPATH, and get this to work:

$ java org.antlr.Tool [command line params]

...but that sort of thing hasn't passed for "installing" since GPFs were
called UAEs.  And of course, I don't want to run Java, I want to run ANTLR,
so why are you making me type "java" and something that looks like part of
an URL?

Am I missing something blindingly obvious?  Is there a reason for the
current state of affairs?  If it's a matter of Makefile/shell-script-fu, I
can help out in that area.

-- 
Gary R. Van Sickle


From oliver.zeigermann at gmail.com  Thu Nov 27 00:23:40 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 27 Nov 2008 09:23:40 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <20081127070936.89F6D11EC83@www.antlr.org>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
Message-ID: <9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>

2008/11/27 Gavin Lambert <antlr at mirality.co.nz>:
> In other words (in vaguely ANTLR-like syntax):
>
>   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
>
>   .          => wild
>   ^(.)       => ANYNODE
>   ^(. FOO)   => ^(ANYNODE FOO)
>   ^(FOO .)   => ^(FOO wildtree)
>   ^(FOO . .) => ^(FOO wildtree wildtree)
>   ^(FOO .+)  => ^(FOO wildtree+)
>   ^(FOO .*)  => ^(FOO wildtree*)

Using these semantics my original rule

tree : ^(. tree* ) ;

would match any tree even if subtrees are single nodes only, right?

Oliver

From Philip.Moetteli at tele2.ch  Sat Nov 29 00:38:48 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Sat, 29 Nov 2008 09:38:48 +0100
Subject: [antlr-interest] 'Expression Evaluator Tutorial' not working
Message-ID: <05492164-B8E3-4E82-8203-7CC9B394C5CE@tele2.ch>

Hi,


I'm a complete newbie to ANTLR and so I thought to start with the  
simple 'Expression Evaluator Tutorial'. I downloaded the most recent  
version of ANTLRworks, pasted the grammar into the editor, picked  
'prog', entered '2+3*4' and pressed start. Instead of building the  
parse tree, ANTLRworks just says: "The interpreter does not run  
actions nor evaluate syntactic predicates. Use the debugger if you  
want to use these ANTLR features." Apart from the fact, that I wonder  
what the interpreter then would like to do, I can't enter anything in  
the debugger. The panes don't accept input.

Can anybody explain a newbie what he should do?


Thanks
Phil


From oliver.zeigermann at gmail.com  Thu Nov 27 08:23:19 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 27 Nov 2008 17:23:19 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E977@Bloodymary.ironwillgames.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E976@Bloodymary.ironwillgames.com>
	<20081127070936.89F6D11EC83@www.antlr.org>
	<9da4f4520811270023g1d87f28cpfc6588ca3abfeb91@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09A64E977@Bloodymary.ironwillgames.com>
Message-ID: <9da4f4520811270823i310dba13pd7b2e04ef62d8073@mail.gmail.com>

Right. Exactly that is my problem :(

2008/11/27 Sam Harwell <sharwell at pixelminegames.com>:
> That should be correct, but under the current implementation, I believe
> it will match any tree with the . wildcard, then find 0 instances of
> tree. The problem doesn't occur in the rule you have here, but this rule
> will only print 1 line, regardless of the input tree:
>
> tree : ^(. {System.out.println("tree node");} tree*)
>
> Sam
>
> -----Original Message-----
> From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com]
> Sent: Thursday, November 27, 2008 2:24 AM
> To: Gavin Lambert
> Cc: Terence Parr; Sam Harwell; antlr-interest Interest
> Subject: Re: [antlr-interest] wildcard in tree grammar
>
> 2008/11/27 Gavin Lambert <antlr at mirality.co.nz>:
>> In other words (in vaguely ANTLR-like syntax):
>>
>>   wildtree : ANYNODE | ^(ANYNODE wildtree*) ;
>>
>>   .          => wild
>>   ^(.)       => ANYNODE
>>   ^(. FOO)   => ^(ANYNODE FOO)
>>   ^(FOO .)   => ^(FOO wildtree)
>>   ^(FOO . .) => ^(FOO wildtree wildtree)
>>   ^(FOO .+)  => ^(FOO wildtree+)
>>   ^(FOO .*)  => ^(FOO wildtree*)
>
> Using these semantics my original rule
>
> tree : ^(. tree* ) ;
>
> would match any tree even if subtrees are single nodes only, right?
>
> Oliver
>

From antlr at mirality.co.nz  Sat Nov 29 02:42:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 29 Nov 2008 23:42:19 +1300
Subject: [antlr-interest] Generated Java lexer not grokking Unicode
In-Reply-To: <vs-827FE0.11492828112008@news.gmane.org>
References: <vs-827FE0.11492828112008@news.gmane.org>
Message-ID: <20081129104223.B964C11EB33@www.antlr.org>

At 16:49 28/11/2008, Volker Stolz wrote:
 >AND   :   'AND' | '&&' | '\u00c3' '\u00b5'
 >
 >Note that I'm only using '?' as an arbitrary test character.
 >Eventually we'd like to be able to parse a whole range of
 >mostly mathematical characters.
[...]
 >it's UTF-8 in the form of 7-bit characters everywhere else
 >except for the byte sequence ... c3 b5 ... for 
the new character.
[...]
 >Any hints on how to get ANTLR to accept this? 
'\uc3b5' also doesn't
 >work.

C3 B5 is the two-byte UTF-8 encoding for that 
character -- it's not the character 
itself.  (Maybe you should look up how UTF-8 
works, eg. on Wikipedia.)

Lowercase Latin o with tilde (?) is Unicode 
character U+00F5, ie. '\u00F5'.


From jaluber at gmx.de  Sat Nov 29 04:04:18 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 29 Nov 2008 13:04:18 +0100
Subject: [antlr-interest] @rulecatch not working with antlr 3.0.1;
 Help for catching parser exceptions
In-Reply-To: <26e9b8c20811252032v1eee4945t9ea6ba832268b23f@mail.gmail.com>
References: <26e9b8c20811252032v1eee4945t9ea6ba832268b23f@mail.gmail.com>
Message-ID: <49312FC2.5050803@gmx.de>

SSG JJV schrieb:
> Greetings,
>  
> I am trying to write a sample antlr program to catch a parser exception.
> Below is the program that i use.
> I want to catch the mismatch exceptions raised from parser. Used
> @rulecatch syntax to print a message for exceptions.
> But antlr does not seem to honor '@rulecatch' <mailto:'@rulecatch'>
> syntax. The following line inside @rulecatch block was not generated in
> the parser.
> " System.out.println("Exception occured");" i tried 'catch [
> exception]'  and @exception syntax. Nothing worked.
>  
> How can I throw custom messages when an parser rule exception is raised?
> I am using antlr 3.0.1. <http://3.0.1.>

IIRC, @rulecatch isn't implemented yet (even in 3.1). The only
alternative is to manually throw exceptions derived from an exception
class which ANTLR normally throws.

Johannes
> 
> Thanks,
> 
> Munna
> 
> ========================================
> 
> grammar testANTLR;
> 
> options {
>  output=Java;
> }@header <mailto:}@header> {
>  package sampleTest;
> }
> @lexer::header {
>  package sampleTest;
> }
> 
> /* to match 'var = 10;' line */
> 
> assign 
> @rulecatch {
>  System.out.println("Exception occured");
> }
>  : NAME EQUAL INTEGER SEMICOLON EOF {
>   System.out.println("assign matched on line :"+$EQUAL.line);
>  }
>  ;
> 
> NAME : ('a' .. 'z')+
>  ;
> 
> SEMICOLON : ';'
>  ;
> 
> EQUAL : '='
>  ;
>  
> INTEGER : ('0'..'9')+
>  ;
> 
> WS : ( ' ' | '\t' | '\r' | '\n' )+ { $channel=HIDDEN;}
>  ;
> 
> =======================
> 
> Generated assign function inside parser:
> 
> *
> 
> public
> 
> * *final* *void* assign() *throws* RecognitionException {
> 
> Token EQUAL1=
> 
> *null*;
> 
> *try* {
> 
> *//* testANTLR.g:18:2: ( NAME EQUAL INTEGER SEMICOLON EOF )
> 
>  
> 
> // testANTLR.g:18:4: NAME EQUAL INTEGER SEMICOLON EOF
> 
>  
> 
> {
> 
> match(
> 
> input,/NAME/,/FOLLOW_NAME_in_assign43/);
> 
> EQUAL1=(Token)
> 
> input.LT(1);
> 
> match(
> 
> input,/EQUAL/,/FOLLOW_EQUAL_in_assign45/);
> 
> match(
> 
> input,/INTEGER/,/FOLLOW_INTEGER_in_assign47/);
> 
> match(
> 
> input,/SEMICOLON/,/FOLLOW_SEMICOLON_in_assign49/);
> 
> match(
> 
> input,/EOF/,/FOLLOW_EOF_in_assign51/);
> 
> System.
> 
> /out/.println("assign matched on line :"+EQUAL1.getLine());
> 
> }
> 
> }
> 
> *catch* (RecognitionException re) {
> 
> reportError(re);
> 
> recover(
> 
> input,re);
> 
> }
> 
> *finally* {
> 
> }
> 
> *return* ;
> 
> }
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From open.zone at virgin.net  Sat Nov 29 04:04:17 2008
From: open.zone at virgin.net (Micheal J)
Date: Sat, 29 Nov 2008 12:04:17 -0000
Subject: [antlr-interest] can we require .NET 2 for ANTLR v3.2?
In-Reply-To: <20081127174743.72450@gmx.net>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>
	<20081127174743.72450@gmx.net>
Message-ID: <005e01c9521a$a173d4c0$0200a8c0@marion>

 
Hi,

> I hijack the thread for a similar question: Does anyone still 
> use the CSharp target and not its successor? If not, I would 
> like to remove then the support for ANTLR 3.2. I know that I 
> said I would wait for ANTLR 3.3, but then I didn't expected 
> it to take so much to arrive (at least 1 1/2 years). If there 
> aren't any people complaining about this, I'll assume that no 
> one uses it anymore. Which is a pretty safe bet as no one 
> mailed me .NET 1.1 assemblies to upload (can't compile them 
> myself for .NET 1.1).  :)

Kill CSharp. I suspect CSharp2 has undergone enough testing to date. You may
want to add a CSharp3 in place of CSharp....


Given that 

a) C#/.NET 4 is (supposedly) around the corner and,
b) C#/.NET 3.x code can (be carefully designed/coded to) run on .NET 2.x
runtimes without additional dependencies, 

you may want to go straight to .NET 3.x at the source level with .NET 2.x as
the runtime.

Micheal


From Sanus at gmx.de  Sat Nov 29 05:06:53 2008
From: Sanus at gmx.de (Christian Hoffmann)
Date: Sat, 29 Nov 2008 14:06:53 +0100
Subject: [antlr-interest] antlr3 C-Target ever used in reality?
Message-ID: <1536219148.20081129140653@gmx.de>


What's wrong below????
antlr error:  reference to rewrite element unaryExpression1 without reference on left of ->


unaryExpression1     // (level 1)
  : a=INC        -> ^(TOK_PREINC[$a]) unaryExpression1
  | a=DEC        -> ^(TOK_PREDEC[$a]) unaryExpression1
  | unaryExpression2
  ;

rewriting rules doesn't work, if you write something like:
rule : expr -> ^(TOK_SLIST (statement)*)
            { pVMCompiler->m_Symbols.PopScope(); }
     ;
cause C-Target code results in:
      ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.PopScope(); );
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

the inlined code is inside the addChild(...) call


It seems the c-target is developped without beeing used in reality.
I'll go back to antlr2, at this stage, antlr3 is nonviable...


---
Christian Hoffmann
D-38118 Braunschweig





From jaluber at gmx.de  Sat Nov 29 06:33:38 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 29 Nov 2008 15:33:38 +0100
Subject: [antlr-interest] can we require .NET 2 for ANTLR v3.2?
In-Reply-To: <005e01c9521a$a173d4c0$0200a8c0@marion>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>	<20081127174743.72450@gmx.net>
	<005e01c9521a$a173d4c0$0200a8c0@marion>
Message-ID: <493152C2.5080600@gmx.de>

Micheal J schrieb:
>  
> Hi,
> 
>> I hijack the thread for a similar question: Does anyone still 
>> use the CSharp target and not its successor? If not, I would 
>> like to remove then the support for ANTLR 3.2. I know that I 
>> said I would wait for ANTLR 3.3, but then I didn't expected 
>> it to take so much to arrive (at least 1 1/2 years). If there 
>> aren't any people complaining about this, I'll assume that no 
>> one uses it anymore. Which is a pretty safe bet as no one 
>> mailed me .NET 1.1 assemblies to upload (can't compile them 
>> myself for .NET 1.1).  :)
> 
> Kill CSharp. I suspect CSharp2 has undergone enough testing to date. You may
> want to add a CSharp3 in place of CSharp....

CSharp2 isn't that much different compared to CSharp, but yes, it is
pretty stable.
> 
> 
> Given that 
> 
> a) C#/.NET 4 is (supposedly) around the corner and,
> b) C#/.NET 3.x code can (be carefully designed/coded to) run on .NET 2.x
> runtimes without additional dependencies, 
> 
> you may want to go straight to .NET 3.x at the source level with .NET 2.x as
> the runtime.
> 
> Micheal

The newest features C# 4 don't look useful to me for basing a runtime
on. Sam Harwell may have a different opinion, as he is working on a
CSharp3 variant, which will have some runtime dependencies for .NET 3.5.
So killing CSharp2 won't be possible for now, although one could create
a special .NET 2-CSharp3 runtime, where the missing libraries are taken
from Mono.

Johannes

> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From sharwell at pixelminegames.com  Sat Nov 29 08:50:10 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 29 Nov 2008 10:50:10 -0600
Subject: [antlr-interest] can we require .NET 2 for ANTLR v3.2?
In-Reply-To: <493152C2.5080600@gmx.de>
References: <DDAABFB0-956F-4B8D-A3E7-ADB46FD9E386@cs.usfca.edu>	<20081127174743.72450@gmx.net><005e01c9521a$a173d4c0$0200a8c0@marion>
	<493152C2.5080600@gmx.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E97D@Bloodymary.ironwillgames.com>

The CSharp3 target runtime has some tiny dependencies on .NET 3.5 that
I'll be able to strip out. Clearly by the name it uses C# 3 features,
which I will be leaving in. C# 4 primarily targets different kinds of
applications than this runtime. I'm an "early adopter", and I see little
benefit in pushing a new runtime on it. I'm looking forward to C# 4's
help in the Visual Studio packages though (all COM interop).

The C# port of the Tool itself will definitely require both C# 3 and
.NET 3.5. The C# port of StringTemplate requires .NET 3.5 right now, but
I haven't analyzed how intricately it's tied in yet.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Saturday, November 29, 2008 8:34 AM
To: Micheal J
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] can we require .NET 2 for ANTLR v3.2?

Micheal J schrieb:
>  
> Hi,
> 
>> I hijack the thread for a similar question: Does anyone still 
>> use the CSharp target and not its successor? If not, I would 
>> like to remove then the support for ANTLR 3.2. I know that I 
>> said I would wait for ANTLR 3.3, but then I didn't expected 
>> it to take so much to arrive (at least 1 1/2 years). If there 
>> aren't any people complaining about this, I'll assume that no 
>> one uses it anymore. Which is a pretty safe bet as no one 
>> mailed me .NET 1.1 assemblies to upload (can't compile them 
>> myself for .NET 1.1).  :)
> 
> Kill CSharp. I suspect CSharp2 has undergone enough testing to date.
You may
> want to add a CSharp3 in place of CSharp....

CSharp2 isn't that much different compared to CSharp, but yes, it is
pretty stable.
> 
> 
> Given that 
> 
> a) C#/.NET 4 is (supposedly) around the corner and,
> b) C#/.NET 3.x code can (be carefully designed/coded to) run on .NET
2.x
> runtimes without additional dependencies, 
> 
> you may want to go straight to .NET 3.x at the source level with .NET
2.x as
> the runtime.
> 
> Micheal

The newest features C# 4 don't look useful to me for basing a runtime
on. Sam Harwell may have a different opinion, as he is working on a
CSharp3 variant, which will have some runtime dependencies for .NET 3.5.
So killing CSharp2 won't be possible for now, although one could create
a special .NET 2-CSharp3 runtime, where the missing libraries are taken
from Mono.

Johannes

> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess
> 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From jaluber at gmx.de  Sat Nov 29 09:10:29 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 29 Nov 2008 18:10:29 +0100
Subject: [antlr-interest] antlr3 C-Target ever used in reality?
In-Reply-To: <1536219148.20081129140653@gmx.de>
References: <1536219148.20081129140653@gmx.de>
Message-ID: <49317785.10203@gmx.de>

Christian Hoffmann schrieb:
> What's wrong below????
> antlr error:  reference to rewrite element unaryExpression1 without reference on left of ->
> 
> 
> unaryExpression1     // (level 1)
>   : a=INC        -> ^(TOK_PREINC[$a]) unaryExpression1
>   | a=DEC        -> ^(TOK_PREDEC[$a]) unaryExpression1
>   | unaryExpression2
>   ;

I'm not sure if you made a mistake here - "^(TOK_PREINC[$a])
unaryExpression1" may need to be "^(TOK_PREINC[$a] unaryExpression1)".
At least the resulting AST would make more sense to me. In fact,
thinking about your intent you probably want

 unaryExpression1     // (level 1)
   : a=INC unaryExpression1 -> ^(TOK_PREINC[$a] unaryExpression1)
   | a=DEC unaryExpression1 -> ^(TOK_PREINC[$a] unaryExpression1)
   | unaryExpression2
   ;

> 
> rewriting rules doesn't work, if you write something like:
> rule : expr -> ^(TOK_SLIST (statement)*)
>             { pVMCompiler->m_Symbols.PopScope(); }
>      ;
> cause C-Target code results in:
>       ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.PopScope(); );
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 
> the inlined code is inside the addChild(...) call

That is a mistake by you. Actions after "->" are only supposed to create
nodes and aren't supposed to contain complete statements.

rule : expr  { pVMCompiler->m_Symbols.PopScope(); } -> ^(TOK_SLIST
(statement)*)

or

rule : expr -> ^(TOK_SLIST (statement)*) {
pVMCompiler->m_Symbols.PopScope() }

may be your intent.

> 
> It seems the c-target is developped without beeing used in reality.
> I'll go back to antlr2, at this stage, antlr3 is nonviable...

Please don't rant about problems unless you are sure you aren't the
cause. While the second cause isn't obvious to newbies, I suspect you
haven't looked through the available grammars for better examples.
Although the C target requires special treatment - Jim always advises to
look at the C specific examples available on the wiki - the wrong
grammar syntax would have caused the same problems on any target.

Johannes
> 
> 
> ---
> Christian Hoffmann
> D-38118 Braunschweig
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Sat Nov 29 09:37:35 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 29 Nov 2008 09:37:35 -0800
Subject: [antlr-interest] outputting whole source line on error
In-Reply-To: <200811281553.09630.rschulz@sonic.net>
References: <200811281330.10601.micha-1@fantasymail.de>
	<200811281553.09630.rschulz@sonic.net>
Message-ID: <1227980255.2491.2.camel@jimi>

On Fri, 2008-11-28 at 15:53 -0800, Randall R Schulz wrote:

> On Friday 28 November 2008 04:30, micha wrote:
> > Hi,
> >
> > maybe I'm not seeing the obvious, but how can I output the whole
> > source line, when an error occurs (while parsing) ?
> 
> Well, the lexer counts newlines (or CR+LF pairs) so as to provide a line 
> count associated with each token it emits, but lines per se are not 
> something that it otherwise deals in. Lines are, in effect, a 
> completely separate partitioning of the input sequence and rarely 
> correspond to a syntactically significant entity.
> 
> So the answer is basically "no."


Or, more accurately, ANTLR does not do this because it cannot
generically 'know' what a line of your input is. However, the error
message objects give you the token at which an error occurred and it is
easy to use this positional information to locate the start of your
'line' in the input stream and print it out, with a caret underneath the
error and so on.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/c26a0842/attachment.html 

From jimi at temporal-wave.com  Sat Nov 29 09:46:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 29 Nov 2008 09:46:43 -0800
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
Message-ID: <1227980803.2491.10.camel@jimi>

On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote:

> Hi Terence et al,
> 
> Am I just getting old, or shouldn't I be able to (in a More Ideal World(tm),
> of course) do something like this on a Unix-like box?:
> 
> $ cd antlr-src-distro-dir/
> $ make install
> $ antlr --version


Well, ANTLR is a Java tool, so make install only works for the C runtime
distribution (after a ./configure).

The ANTLR source can be bult from scratch now using maven though:

1) In stall Maven 2.0.9 or better;
2) Find the directories with pom.xml in them
3) cd to them and type: mvn
4) Look at the output of the build to see where the .jar files go if are
not familiar with Maven.

Note that the Maven build, as well as constructing the ANTLR .jar file
also creates a complete executable (I.e Java -jar) jar file that
includes all the dependencies  to make things easier for developers.

However, there is also a continuous build system at:
http://antlr.org:8888/hudson/ where you can just download the up to the
minute builds of everything in the ANTLR domain. Unless you are hacking
it yourself, there should be no need to build ANTLR basically.

See the C Runtime API (linked from teh main home page) if you mean that
you want to build the C runtime.

Jim


> 
> ANTLR Parser Generator  Version 3.1.1
> [...]
> 
> ???
> 
> I've read "How do I install this damn thing?" in the FAQ
> (http://www.antlr.org/wiki/pages/viewpage.action?pageId=728), and
> unfortunately I'm still left with the original question: how do I install
> this damn thing?  Sure, I can untar everything to some arbitrary place, add
> every JAR I find to CLASSPATH, and get this to work:
> 
> $ java org.antlr.Tool [command line params]
> 
> ...but that sort of thing hasn't passed for "installing" since GPFs were
> called UAEs.  And of course, I don't want to run Java, I want to run ANTLR,
> so why are you making me type "java" and something that looks like part of
> an URL?
> 
> Am I missing something blindingly obvious?  Is there a reason for the
> current state of affairs?  If it's a matter of Makefile/shell-script-fu, I
> can help out in that area.
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/f8b1c52d/attachment.html 

From jimi at temporal-wave.com  Sat Nov 29 09:52:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 29 Nov 2008 09:52:20 -0800
Subject: [antlr-interest] antlr3 C-Target ever used in reality?
In-Reply-To: <1536219148.20081129140653@gmx.de>
References: <1536219148.20081129140653@gmx.de>
Message-ID: <1227981140.2491.15.camel@jimi>

On Sat, 2008-11-29 at 14:06 +0100, Christian Hoffmann wrote:

> What's wrong below????
> antlr error:  reference to rewrite element unaryExpression1 without reference on left of ->
> 
> 
> unaryExpression1     // (level 1)
>   : a=INC        -> ^(TOK_PREINC[$a]) unaryExpression1
>   | a=DEC        -> ^(TOK_PREDEC[$a]) unaryExpression1
>   | unaryExpression2
>   ;
> 
> rewriting rules doesn't work, if you write something like:
> rule : expr -> ^(TOK_SLIST (statement)*)
>             { pVMCompiler->m_Symbols.PopScope(); }
>      ;
> cause C-Target code results in:
>       ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.PopScope(); );
>                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 
> the inlined code is inside the addChild(...) call
> 
> 
> It seems the c-target is developped without beeing used in reality.
> I'll go back to antlr2, at this stage, antlr3 is nonviable...
> 


I think that you are just running into things that you do not quite
understand yet, but it is true that I don't know of anyone trying to use
a backtracking C parser and produce tree output. backtrack mode really
isn't for a production parser.

In this case, you just don't understand the syntax, and what you think
is action code is being included in the rewrite syntax.  This is nothing
to do with the C target, it would do similar things with all targets.
You need to execute your action before the rewrite, or put the grammar
in '(' ')'.

Jim

PS: It doesn't hurt to be a little less acerbic with your comments,
especially when you later find out that the problem is with your own
understanding :-)

> 
> ---
> Christian Hoffmann
> D-38118 Braunschweig
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/518d6366/attachment.html 

From james.abley at gmail.com  Sat Nov 29 11:25:38 2008
From: james.abley at gmail.com (James Abley)
Date: Sat, 29 Nov 2008 19:25:38 +0000
Subject: [antlr-interest] ANTLR installation/use on Unix
Message-ID: <23fce8e60811291125n560a35afnb9b11b61b0e8ef53@mail.gmail.com>



There is a package for debian / Ubuntu but it's 2.x. Maybe the maintainers 
could be convinced to provide an antlr3 package a la sqlite and sqlite3? 
Typically they do tend to lag behind the current releases, so you're 
probably just best off downloading and configuring your PATH with a wrapper 
script if you really need it.

A better option might be for you to use ANT or Maven to manage your builds, 
if you aren't already?

Cheers,

James

On 29 Nov 2008, 5:47 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote: > > Hi Terence 
et al, > > Am I just get...
Well, ANTLR is a Java tool, so make install only works for the C runtime 
distribution (after a ./configure).

The ANTLR source can be bult from scratch now using maven though:

1) In stall Maven 2.0.9 or better;
2) Find the directories with pom.xml in them
3) cd to them and type: mvn
4) Look at the output of the build to see where the .jar files go if are not 
familiar with Maven.

Note that the Maven build, as well as constructing the ANTLR .jar file also 
creates a complete executable (I.e Java -jar) jar file that includes all the 
dependencies  to make things easier for developers.

However, there is also a continuous build system at: 
http://antlr.org:8888/hudson/ where you can just download the up to the 
minute builds of everything in the ANTLR domain. Unless you are hacking it 
yourself, there should be no need to build ANTLR basically.

See the C Runtime API (linked from teh main home page) if you mean that you 
want to build the C runtime.

Jim

> > > ANTLR Parser Generator Version 3.1.1 > [...] > > ??? > > I've read 
"How do I install this d...


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/226a4b43/attachment.html 

From jimi at temporal-wave.com  Sat Nov 29 11:48:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 29 Nov 2008 11:48:10 -0800
Subject: [antlr-interest] Bug for C-Target on $tree usage
In-Reply-To: <17910097937.20081126234221@gmx.de>
References: <17910097937.20081126234221@gmx.de>
Message-ID: <1227988090.14131.13.camel@jimi>

On Wed, 2008-11-26 at 23:42 +0100, Christian Hoffmann wrote:

> Hello,


Your JIRA entry for tracking this is:

http://www.antlr.org:8888/browse/ANTLR-347

Jim

> 
> 
> Now I am tumbling over some c-codegeneration.
> Don't know if its me or a real bug...
> 
> 
> declaration
>         :       declSpecifiers variableDeclarations
>                         -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
>                 { m_Symbols.AddVarDef($tree); }   // add the variable
>                                       ^^^^problem is here
>         ;
> 
> 
> should result to somthing like
>                 { m_Symbols.AddVarDef(retval.tree); }   // add the variable
> 
> instead the resulting c-code becomes
>             m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree);  );
> 
> 2 Bugs in one line!
> 1. bug: retval.tree is not a pANTLR3_COMMON_TOKEN, its of type pANTLR3_BASE_TREE
> 
> Bugfix??: C.stg lines 3013 and 3035 ??
> line 3013> rulePropertyRef_tree(scope,attr) ::= "retval.tree"
> line 3050> ruleSetPropertyRef_tree(scope,attr,expr) ::= "retval.tree=<expr>;"
> 
> 2. bug:
>       original code:
>       ADAPTOR->addChild(ADAPTOR, root_0,  pVMCompiler->m_Symbols.AddVarDef(((pANTLR3_COMMON_TOKEN)retval).tree); );
>       look at the end of the line,
>       somthing like func(... func(...); ); would not compile ;)
> Bugfix:
> Swapping the lines helps, but...
> declaration
>         :       declSpecifiers variableDeclarations
>                 { m_Symbols.AddVarDef($tree); }   // add the variable
>                         -> ^(TOK_VAR_DEF declSpecifiers variableDeclarations)
>         ;
> 
> 
> Thx in advance for your comments...
> 
> 
> ---
> Christian Hoffmann
> D-38118 Braunschweig
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/bfe1c8af/attachment.html 

From parrt at antlr.org  Sat Nov 29 11:51:01 2008
From: parrt at antlr.org (Terence Parr)
Date: Sat, 29 Nov 2008 11:51:01 -0800
Subject: [antlr-interest] sneak preview of ANTLR v3.2 (book release version)
Message-ID: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>

tree pattern matching for ANTLR v3.2 (it lives in my dev branch!).  
super cool.

http://tinyurl.com/5axpt2

Need it for the book.

Ter

From oliver.zeigermann at gmail.com  Sat Nov 29 12:58:13 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 29 Nov 2008 21:58:13 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
Message-ID: <9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>

Hmmm. Just checked that with the latest snapshot of ANTLR 3.2, but it
really does not work, but it should, right? Why can "." not be a tree
root?

Grammar:
treee
	: ^(. treee* )
	;


Command line:
ANTLR Parser Generator  Version 3.2-2008-10-21
error(166): OCLWalker.g:27:6: Wildcard invalid as root; wildcard can
itself be a tree

Can you fix that?

Cheers Oliver

2008/11/26 Terence Parr <parrt at cs.usfca.edu>:
> Hi gang, I've recently fixed how this wildcard thing works in tree
> grammars.
>
> October 21, 2008
> * Made . in tree grammar look like ^(. .*) to analysis, though ^(. foo)
>   is illegal (can't have . at root). Wildcard is subtree or node.
>   Fixed bugs:
>     http://www.antlr.org:8888/browse/ANTLR-248
>     http://www.antlr.org:8888/browse/ANTLR-344
>
> Not sure why ^(. foo) is illegal...hmm...weird.
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From oliver.zeigermann at gmail.com  Sat Nov 29 13:30:50 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 29 Nov 2008 22:30:50 +0100
Subject: [antlr-interest] sneak preview of ANTLR v3.2 (book release
	version)
In-Reply-To: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>
References: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>
Message-ID: <9da4f4520811291330l730ff353yb7c4caa0d97f457f@mail.gmail.com>

That's pretty cool and exactly what I need.

My trick to transform partial trees only was to have a rule like that

treee
	: ^(. treee* )
	;

which would walk a complete tree in ANTLR 2 as a starting point. For
each subtree to match you then add an alternative into that rule.
That's why I wanted to have this work in ANTLR 3 as well.

Oliver

2008/11/29 Terence Parr <parrt at antlr.org>:
> tree pattern matching for ANTLR v3.2 (it lives in my dev branch!).
> super cool.
>
> http://tinyurl.com/5axpt2
>
> Need it for the book.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at mirality.co.nz  Sat Nov 29 15:23:25 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 30 Nov 2008 12:23:25 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com
 >
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
Message-ID: <20081129232333.E541611EC1F@www.antlr.org>

At 09:58 30/11/2008, Oliver Zeigermann wrote:
 >Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
 >but it really does not work, but it should, right? Why can "."
 >not be a tree root?

Yes, that's what Sam Harwell and myself were discussing earlier in 
this thread; I think we agree that this should be considered as 
valid.

(I gave a detailed description of how I think it should behave 
earlier on, but the general idea was to make ANTLR parse the tree 
as if it were a "real" tree rather than the "flat" tree that it's 
actually implemented as.)


From gambolino at internet.lu  Sat Nov 29 15:33:47 2008
From: gambolino at internet.lu (Guido Amabili)
Date: Sun, 30 Nov 2008 00:33:47 +0100
Subject: [antlr-interest] Parsing simple file
Message-ID: <4931D15B.5030405@internet.lu>

Hello list,
 
I want to parse the string TEST 00125 . The result should be tokenized 
like this name=TEST jobId=00 and mailpieceId=125.
The problem is that for token jobId, the lexer discards the first three 
digits and matches the piece 25(with an UnwantedTokenException for 001) 
and for mailpieceId I get a MissingtokenException   .
I tryied to use greedy=false  on every token definition and rule 
definition but that didn't help.
I need to parse longer strings (approx. 100 chars) composed of codes 
made up of up to 8 digits.
There are no separator between codes.
How can I solve this ?

This is my grammar

grammar Test;
options{
language=Java;
k=1;
}
tokens{
   SPACE = ' ';
}

start    :
   name NEWLINE EOF
   ;
name     :
   WORD+ SPACE jobId mailpieceId
   ;

jobId    :    TWO_DIGIT_CODE ;
 
mailpieceId
   :    THREE_DIGIT_CODE
   ;

NEWLINE    :    '\r'? '\n';
WORD    :    'A'..'z';

fragment DIGIT
   :    '0' .. '9';
  THREE_DIGIT_CODE
   : DIGIT DIGIT DIGIT
   ;
  TWO_DIGIT_CODE
   :  DIGIT DIGIT
   ;

ONE_DIGIT_CODE
   : DIGIT;
 


From antlr at mirality.co.nz  Sat Nov 29 16:16:59 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 30 Nov 2008 13:16:59 +1300
Subject: [antlr-interest] Parsing simple file
In-Reply-To: <4931D15B.5030405@internet.lu>
References: <4931D15B.5030405@internet.lu>
Message-ID: <20081130001704.4F0F911EB26@www.antlr.org>

At 12:33 30/11/2008, Guido Amabili wrote:
 >I want to parse the string TEST 00125 . The result should be
 >tokenized like this name=TEST jobId=00 and mailpieceId=125.
 >The problem is that for token jobId, the lexer discards the 
first
 >three digits and matches the piece 25(with an
 >UnwantedTokenException for 001) and for mailpieceId I get a
 >MissingtokenException
[...]
 >  THREE_DIGIT_CODE
 >   : DIGIT DIGIT DIGIT
 >   ;
 >  TWO_DIGIT_CODE
 >   :  DIGIT DIGIT
 >   ;
 >
 >ONE_DIGIT_CODE
 >   : DIGIT;

The key point about ANTLR that you seem unaware of is that all 
lexing is done up front, with no influence from the parser 
whatsoever.

So for the input "00125" and the lexer rules above, ANTLR will 
create a THREE_DIGIT_CODE token and a TWO_DIGIT_CODE token, since 
doing so will consume the most input at once each time.

For this sort of situation, probably what you ought to do is to 
change DIGIT to be a top-level (non-fragment) rule and each of 
THREE_DIGIT_CODE, TWO_DIGIT_CODE, and ONE_DIGIT_CODE to be parser 
rules instead.

This does mean that you'll get multiple DIGIT tokens matched in 
each rule, of course, but you can combine these later (eg. if 
you're generating an AST).  But since there's nothing lexically 
obvious about the division between them (it's influenced by parser 
structure) then the distinction belongs in the parser.


From parrt at cs.usfca.edu  Sat Nov 29 16:20:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 29 Nov 2008 16:20:08 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <20081129232335.85F37F04D7@mail.cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
Message-ID: <A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>

I agree. '.' as root should be ok.  I'll have to go back and make it  
context sensitive.  Right now, '.' can be a subtree as well.  it would  
mess up analysis.
Ter
On Nov 29, 2008, at 3:23 PM, Gavin Lambert wrote:

> At 09:58 30/11/2008, Oliver Zeigermann wrote:
> >Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
> >but it really does not work, but it should, right? Why can "."
> >not be a tree root?
>
> Yes, that's what Sam Harwell and myself were discussing earlier in  
> this thread; I think we agree that this should be considered as valid.
>
> (I gave a detailed description of how I think it should behave  
> earlier on, but the general idea was to make ANTLR parse the tree as  
> if it were a "real" tree rather than the "flat" tree that it's  
> actually implemented as.)
>


From bryan.haber at gmail.com  Sat Nov 29 16:23:21 2008
From: bryan.haber at gmail.com (Bryan Haber)
Date: Sat, 29 Nov 2008 16:23:21 -0800
Subject: [antlr-interest] Unsubscribing
Message-ID: <4f1b298f0811291623h6232ad2cnad4f58d72e77070c@mail.gmail.com>



Hi.  How do I unsubscribe to this mailing list?  The website isn't working.  
Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/d8a8769e/attachment.html 

From sharwell at pixelminegames.com  Sat Nov 29 16:29:11 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 29 Nov 2008 18:29:11 -0600
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu><20081021070213.DA48111EB00@www.antlr.org><8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu><9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com><492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com><9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com><5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu><9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com><20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E97E@Bloodymary.ironwillgames.com>

I have a reply earlier in this thread that shows the necessary condition
for handling the two cases separately. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, November 29, 2008 6:20 PM
To: Gavin Lambert
Cc: antlr-interest Interest
Subject: Re: [antlr-interest] wildcard in tree grammar

I agree. '.' as root should be ok.  I'll have to go back and make it  
context sensitive.  Right now, '.' can be a subtree as well.  it would  
mess up analysis.
Ter
On Nov 29, 2008, at 3:23 PM, Gavin Lambert wrote:

> At 09:58 30/11/2008, Oliver Zeigermann wrote:
> >Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
> >but it really does not work, but it should, right? Why can "."
> >not be a tree root?
>
> Yes, that's what Sam Harwell and myself were discussing earlier in  
> this thread; I think we agree that this should be considered as valid.
>
> (I gave a detailed description of how I think it should behave  
> earlier on, but the general idea was to make ANTLR parse the tree as  
> if it were a "real" tree rather than the "flat" tree that it's  
> actually implemented as.)
>


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From geoff_hendrey at yahoo.com  Sat Nov 29 17:52:03 2008
From: geoff_hendrey at yahoo.com (Geoff hendrey)
Date: Sat, 29 Nov 2008 17:52:03 -0800 (PST)
Subject: [antlr-interest] Error on line 499 of TokenRewriteStream?
Message-ID: <790963.42155.qm@web31802.mail.mud.yahoo.com>

Hi,

On line 499 of TokenRewriteStream, I find this line, which is consolidating adjacent InsertBeforeOp objects.

iop.text = catOpText(iop.text,prevIop.text);

The problem (at least it seems to be) is that it consolidates them in the opposite of the expected order. Let me give you an example. 
Suppose I have a token whose text "A", and suppose I perform a first insertAfter operation to insert the text "B".
Later on I perform a second insertAfter operation with the text "C". 

My expectation is that calling toString on the TokenRewriteStream produces "ABC". But this
is not the case due to the parameter order of catOpTest. Instead, I get "ACB". And as far as
I can tell there is no way around this.Can anyone tell me a solution? I tried inserting "B" and "C" before the token *after* "A". But when I look in the antlr code, all insertAfter calls internally convert to insertBefore, so this of course produced exactly the same result ..."ACB".


-geoff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081129/a0f424b6/attachment.html 

From g.r.vansickle at att.net  Sun Nov 30 01:06:30 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 30 Nov 2008 03:06:30 -0600
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <1227980803.2491.10.camel@jimi>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
	<1227980803.2491.10.camel@jimi>
Message-ID: <76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>

> From: Jim Idle
> 
> On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote: 
> 
> 	
> 	Hi Terence et al,
> 	
> 	Am I just getting old, or shouldn't I be able to (in a 
> More Ideal World(tm),
> 	of course) do something like this on a Unix-like box?:
> 	
> 	$ cd antlr-src-distro-dir/
> 	$ make install
> 	$ antlr --version
> 
> 
> Well, ANTLR is a Java tool,

It's a tool.  There's no reason the user should have to care what language
it's implemented in simply in order to use it.  Gcc is written in C, but I
don't care about that when I use it to compile C++, Fortran, or Java code.
I don't actually know what languages Flex or Bison are written in (though I
of course have a pretty good idea), but that doesn't in the least prevent me
from invoking them like this:

	$ flex [whatever]
	$ bison [whatever]

Is there a reason why I shouldn't be able to do the equivalent with ANTLR?

> so make install only works for 
> the C runtime distribution (after a ./configure).
> 

Right, but I'm talking about the ANTLR tool itself, not any of its
language-specific runtimes.

> The ANTLR source can be bult from scratch now using maven though:
> 
> 1) In stall Maven 2.0.9 or better;
> 2) Find the directories with pom.xml in them
> 3) cd to them and type: mvn
> 4) Look at the output of the build to see where the .jar 
> files go if are not familiar with Maven.
> 

I'm less concerned with the building of it than the installation and use of
it.  Can I do this?:

	$ cd antlr-src-distro-dir/
	$ mvn install
	$ antlr [whatever]

Like I said, it's the 20th century.  I, as the user, shouldn't have to be
"looking at the output" of anything, picking out the "artifacts" (as the
kids call 'em these days), worrying about where they should go, and then
have to move them manually.  As you indicated above, I don't have to with
the C runtime, why should I have to for the tool itself?

> Note that the Maven build, as well as constructing the ANTLR 
> .jar file also creates a complete executable (I.e Java -jar) 
> jar file that includes all the dependencies  to make things 
> easier for developers.
> 

Ok, so can't it go the last mile and also create a simple shell script
wrapper so I can:

	$ antlr MyGrammar.g

?  In fact, rumor has it that the Maven tool of which you speak uses exactly
that approach itself.

To answer my own question, I broke out my autotools- and script-fu last
night and rolled an automake+autoconf+built-shell-script which does in fact
allow me to:

	$ ./configure
	$ make
	$ make install
	$ antlr
	ANTLR Parser Generator  Version 3.1.1
	[etc etc]

The JARs aren't actually built, but rather the pre-built one in the source
distro's /lib directory is installed, and the "antlr" shell script is
generated from a template (a default Java interpreter and the path to the
JAR are substituted).  "make install" puts everything in reasonable places
and, Bob's your uncle, everything works just as it should.

Terence (or anybody), any interest in this?  I could certainly BSD-license
it and contribute it.

-- 
Gary R. Van Sickle


From g.r.vansickle at att.net  Sun Nov 30 01:14:28 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 30 Nov 2008 03:14:28 -0600
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <23fce8e60811291125n560a35afnb9b11b61b0e8ef53@mail.gmail.com>
References: <23fce8e60811291125n560a35afnb9b11b61b0e8ef53@mail.gmail.com>
Message-ID: <336C135B9DF34D1086D4431F50318EEA@DFW5RB41>

> From: James Abley
> 
> There is a package for debian / Ubuntu but it's 2.x. Maybe 
> the maintainers could be convinced to provide an antlr3 
> package a la sqlite and sqlite3? Typically they do tend to 
> lag behind the current releases, so you're probably just best 
> off downloading and configuring your PATH with a wrapper 
> script if you really need it.
> 

Right, in fact I went one better and put together a whole
automake/autoconf/built-shell-script which builds a wrapper script and
installs everything where it needs to be and voila, It Just Works(tm)!

> A better option might be for you to use ANT or Maven to 
> manage your builds, if you aren't already?
> 

I'm not, but the building isn't my main concern, it's the installing and
using.  Like I say, maybe I'm missing something, but as far as I've been
able to determine, there simply isn't any support in the distribution for
even rudimentary installation and command-line use.  See my last post, I'd
be more than happy to contribute my solution if there's any interest in it.

-- 
Gary R. Van Sickle


From oliver.zeigermann at gmail.com  Sun Nov 30 01:55:06 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 30 Nov 2008 10:55:06 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
Message-ID: <9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>

Great. Thanks!

Can we expect that in 3.2?

Oliver

2008/11/30 Terence Parr <parrt at cs.usfca.edu>:
> I agree. '.' as root should be ok.  I'll have to go back and make it context
> sensitive.  Right now, '.' can be a subtree as well.  it would mess up
> analysis.
> Ter
> On Nov 29, 2008, at 3:23 PM, Gavin Lambert wrote:
>
>> At 09:58 30/11/2008, Oliver Zeigermann wrote:
>> >Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
>> >but it really does not work, but it should, right? Why can "."
>> >not be a tree root?
>>
>> Yes, that's what Sam Harwell and myself were discussing earlier in this
>> thread; I think we agree that this should be considered as valid.
>>
>> (I gave a detailed description of how I think it should behave earlier on,
>> but the general idea was to make ANTLR parse the tree as if it were a "real"
>> tree rather than the "flat" tree that it's actually implemented as.)
>>
>
>

From jaluber at gmx.de  Sun Nov 30 02:20:04 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 30 Nov 2008 11:20:04 +0100
Subject: [antlr-interest] Unsubscribing
In-Reply-To: <4f1b298f0811291623h6232ad2cnad4f58d72e77070c@mail.gmail.com>
References: <4f1b298f0811291623h6232ad2cnad4f58d72e77070c@mail.gmail.com>
Message-ID: <493268D4.70803@gmx.de>

Bryan Haber schrieb:
> Hi.  How do I unsubscribe to this mailing list?  The website isn't
> working.  Thanks.

Supposedly that is the only way to do so. Maybe it was a fluke from when
the ANTLR machine crashed. Try
<http://www.antlr.org/mailman/options/antlr-interest/bryan.haber at gmail.com>
again - if it still doesn't work, ask Ter to do the unsubscribing.

Johannes
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From qwizv9b02 at sneakemail.com  Sun Nov 30 03:09:12 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Sun, 30 Nov 2008 12:09:12 +0100
Subject: [antlr-interest] Google groups mirror page needs updating and
	spellchecking
Message-ID: <ggts8o$5ue$1@ger.gmane.org>

Hi,

I found the antlr-interest Google Groups page.  It is full of errors and
typos.  Who can have a look at that, or can someone grant me the right
to fix it up?  See http://groups.google.com/group/il-antlr-interest/about

Cheers, H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
www.lieverleven.be
http://catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081130/ff08c3f9/attachment.bin 

From jared.bunting at peachjean.com  Sun Nov 30 09:03:03 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Sun, 30 Nov 2008 12:03:03 -0500
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <23fce8e60811291125n560a35afnb9b11b61b0e8ef53@mail.gmail.com>
References: <23fce8e60811291125n560a35afnb9b11b61b0e8ef53@mail.gmail.com>
Message-ID: <b15aaba10811300903n7852d024q1953448a4607fdfc@mail.gmail.com>

There appears to be an antlr3 package for debian/ubuntu.

http://packages.debian.org/search?keywords=antlr3
http://packages.ubuntu.com/search?keywords=antlr3

-Jared

On Sat, Nov 29, 2008 at 2:25 PM, James Abley <james.abley at gmail.com> wrote:

> There is a package for debian / Ubuntu but it's 2.x. Maybe the maintainers
> could be convinced to provide an antlr3 package a la sqlite and sqlite3?
> Typically they do tend to lag behind the current releases, so you're
> probably just best off downloading and configuring your PATH with a wrapper
> script if you really need it.
>
> A better option might be for you to use ANT or Maven to manage your builds,
> if you aren't already?
>
> Cheers,
>
> James
>
> On 29 Nov 2008, 5:47 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote: > > Hi Terence
> et al, > > Am I just get...
> Well, ANTLR is a Java tool, so make install only works for the C runtime
> distribution (after a ./configure).
>
> The ANTLR source can be bult from scratch now using maven though:
>
> 1) In stall Maven 2.0.9 or better;
> 2) Find the directories with pom.xml in them
> 3) cd to them and type: mvn
> 4) Look at the output of the build to see where the .jar files go if are
> not familiar with Maven.
>
> Note that the Maven build, as well as constructing the ANTLR .jar file also
> creates a complete executable (I.e Java -jar) jar file that includes all the
> dependencies  to make things easier for developers.
>
> However, there is also a continuous build system at:
> http://antlr.org:8888/hudson/ where you can just download the up to the
> minute builds of everything in the ANTLR domain. Unless you are hacking it
> yourself, there should be no need to build ANTLR basically.
>
> See the C Runtime API (linked from teh main home page) if you mean that you
> want to build the C runtime.
>
> Jim
>
> > > > ANTLR Parser Generator Version 3.1.1 > [...] > > ??? > > I've read
> "How do I install this d...
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081130/a7888406/attachment.html 

From oliver.zeigermann at gmail.com  Sun Nov 30 09:35:13 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 30 Nov 2008 18:35:13 +0100
Subject: [antlr-interest] sneak preview of ANTLR v3.2 (book release
	version)
In-Reply-To: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>
References: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>
Message-ID: <9da4f4520811300935mdd57adegde7b455213585fcc@mail.gmail.com>

I tried this out and it actually works great :)

I am wondering if "bottomup" is really needed, though. I only need
"topdown" as the whole structure already is encoded in the tree. So
there is no need to track context for me in that way.

Do you have any use case for that?

Or did I get that all wrong?

Cheers and thanks for that cool feature :)

Oliver

2008/11/29 Terence Parr <parrt at antlr.org>:
> tree pattern matching for ANTLR v3.2 (it lives in my dev branch!).
> super cool.
>
> http://tinyurl.com/5axpt2
>
> Need it for the book.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From jimi at temporal-wave.com  Sun Nov 30 09:55:47 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 30 Nov 2008 09:55:47 -0800
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
	<1227980803.2491.10.camel@jimi>
	<76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>
Message-ID: <1228067747.14131.53.camel@jimi>

On Sun, 2008-11-30 at 03:06 -0600, Gary R. Van Sickle wrote:

> > From: Jim Idle
> > 
> > On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote: 
> > 
> > 	
> > 	Hi Terence et al,
> > 	
> > 	Am I just getting old, or shouldn't I be able to (in a 
> > More Ideal World(tm),
> > 	of course) do something like this on a Unix-like box?:
> > 	
> > 	$ cd antlr-src-distro-dir/
> > 	$ make install
> > 	$ antlr --version
> > 
> > 
> > Well, ANTLR is a Java tool,
> 
> It's a tool.  There's no reason the user should have to care what language
> it's implemented in simply in order to use it.  


I am not talking about using it, I am talking about building it! To run
it as if it were a command, you can set up a bash script.


> Gcc is written in C, but I
> don't care about that when I use it to compile C++, Fortran, or Java code.
> I don't actually know what languages Flex or Bison are written in (though I
> of course have a pretty good idea), but that doesn't in the least prevent me
> from invoking them like this:
> 
> 	$ flex [whatever]
> 	$ bison [whatever]
> 
> Is there a reason why I shouldn't be able to do the equivalent with ANTLR?


Well, only if you can't write a one line bash script. flex and bison are
native programs and as such are easier to just stick in /usr/local/bin
and forget about it.


> 
> > so make install only works for 
> > the C runtime distribution (after a ./configure).
> > 
> 
> Right, but I'm talking about the ANTLR tool itself, not any of its
> language-specific runtimes.


So am I.

> 
> > The ANTLR source can be bult from scratch now using maven though:
> > 
> > 1) In stall Maven 2.0.9 or better;
> > 2) Find the directories with pom.xml in them
> > 3) cd to them and type: mvn
> > 4) Look at the output of the build to see where the .jar 
> > files go if are not familiar with Maven.
> > 
> 
> I'm less concerned with the building of it than the installation and use of
> it.  Can I do this?:
> 
> 	$ cd antlr-src-distro-dir/
> 	$ mvn install
> 	$ antlr [whatever]
> 
> Like I said, it's the 20th century.  


Is it really? I must have missed something. Maven does not require you
to do any of this as it is from the 21st century :-)


> I, as the user, shouldn't have to be
> "looking at the output" of anything, picking out the "artifacts" (as the
> kids call 'em these days), worrying about where they should go, and then
> have to move them manually.  As you indicated above, I don't have to with
> the C runtime, why should I have to for the tool itself?


Well, I took the time to create a configure script and Visual Studio
projects. Still, people have problems with this and I think that as soon
as it goes wrong, your make install would be more confusing than a
simple bash script. If you are using Maven, then there is no need to do
any of this because maven already knows where to get the latest jars
from and how to build .g files using it. This is only useful for java
output though of course.



> 
> > Note that the Maven build, as well as constructing the ANTLR 
> > .jar file also creates a complete executable (I.e Java -jar) 
> > jar file that includes all the dependencies  to make things 
> > easier for developers.
> > 
> 
> Ok, so can't it go the last mile and also create a simple shell script
> wrapper so I can:
> 
> 	$ antlr MyGrammar.g
> 
> ?  In fact, rumor has it that the Maven tool of which you speak uses exactly
> that approach itself.
> 
> To answer my own question, I broke out my autotools- and script-fu last
> night and rolled an automake+autoconf+built-shell-script which does in fact
> allow me to:
> 
> 	$ ./configure
> 	$ make
> 	$ make install
> 	$ antlr
> 	ANTLR Parser Generator  Version 3.1.1
> 	[etc etc]
> 
> The JARs aren't actually built, but rather the pre-built one in the source
> distro's /lib directory is installed, and the "antlr" shell script is
> generated from a template (a default Java interpreter and the path to the
> JAR are substituted).  "make install" puts everything in reasonable places
> and, Bob's your uncle, everything works just as it should.
> 
> Terence (or anybody), any interest in this?  I could certainly BSD-license
> it and contribute it.

You know - I was just trying to point you in the right direction - there
is no need to get all huffy, rant at me about being in the wrong century
and complain that ANTLR isn't an instant install on your particular
system and so on. All you need is the composite jar and:

#! /bin/bash
java -jar whereverthejaris.jar $*

With make install, you have to detect the java install, find the
dependencies, it only works on *nix etc. Generic installers are a lot
more work and maintaining a configure script for this does not seem
worth it to me - it is Ter's call in the end though.

Jim


> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081130/34bc98ca/attachment.html 

From viridium at gmail.com  Sun Nov 30 11:41:27 2008
From: viridium at gmail.com (Mihai Danila)
Date: Sun, 30 Nov 2008 14:41:27 -0500
Subject: [antlr-interest] EarlyExitException when token present
Message-ID: <b00576380811301141v593fa532y36eb5978e5d433a3@mail.gmail.com>

Hi,

Not sure if this is dummy level, but I can't figure out why the presence of
token Date messes up the parsing. When Date is present and not a fragment, I
get EarlyExitException on inputs like "123" and "123,456."

My question is primarily whether this is a bug or normal behavior. I'm sure
there are ways around it but this is part of a larger grammar and the "ways
around it" (declar Number token, make Date a rule, etc.) break other parts
of the grammar.

Thanks,
Mihai



grammar BugTest;

list: string (',' string)*;
string: (Alnum+);

fragment Digit: ('0'..'9');
Alnum: ('0'..'9') | ('a'..'z') | ('A'..'Z');
Date: (Digit Digit Digit Digit '-' Digit Digit '-' Digit Digit);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081130/57bdb3a6/attachment.html 

From antlr at mirality.co.nz  Sun Nov 30 12:00:32 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 01 Dec 2008 09:00:32 +1300
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <1228067747.14131.53.camel@jimi>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
	<1227980803.2491.10.camel@jimi>
	<76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>
	<1228067747.14131.53.camel@jimi>
Message-ID: <20081130200041.2044911E9F1@www.antlr.org>

At 06:55 1/12/2008, Jim Idle wrote:
>All you need is the composite jar and:
>
>#! /bin/bash
>java -jar whereverthejaris.jar $*

Plus the knowledge that this is how you actually get it to run :)

>With make install, you have to detect the java install, find the 
>dependencies, it only works on *nix etc. Generic installers are a 
>lot more work and maintaining a configure script for this does 
>not seem worth it to me - it is Ter's call in the end though.

He does have a good point, though.  ANTLR ought to come with 
prepackaged shell scripts and batch files that take care of the 
classpath / command line issues, so that users who don't want to 
know about that sort of thing (like me, and apparently him) don't 
have to.


From parrt at cs.usfca.edu  Sun Nov 30 12:29:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 12:29:57 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
Message-ID: <E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>

not sure.  I guess i left out as it's weird.  When would you write:  
^(. ID).  It's always the root that says what kind of thing it is,  
right?

added

http://www.antlr.org:8888/browse/ANTLR-368

Ter
On Nov 30, 2008, at 1:55 AM, Oliver Zeigermann wrote:

> Great. Thanks!
>
> Can we expect that in 3.2?
>
> Oliver
>
> 2008/11/30 Terence Parr <parrt at cs.usfca.edu>:
>> I agree. '.' as root should be ok.  I'll have to go back and make  
>> it context
>> sensitive.  Right now, '.' can be a subtree as well.  it would mess  
>> up
>> analysis.
>> Ter
>> On Nov 29, 2008, at 3:23 PM, Gavin Lambert wrote:
>>
>>> At 09:58 30/11/2008, Oliver Zeigermann wrote:
>>>> Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
>>>> but it really does not work, but it should, right? Why can "."
>>>> not be a tree root?
>>>
>>> Yes, that's what Sam Harwell and myself were discussing earlier in  
>>> this
>>> thread; I think we agree that this should be considered as valid.
>>>
>>> (I gave a detailed description of how I think it should behave  
>>> earlier on,
>>> but the general idea was to make ANTLR parse the tree as if it  
>>> were a "real"
>>> tree rather than the "flat" tree that it's actually implemented as.)
>>>
>>
>>


From parrt at cs.usfca.edu  Sun Nov 30 12:31:19 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 12:31:19 -0800
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <20081130200041.2044911E9F1@www.antlr.org>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41>
	<1227980803.2491.10.camel@jimi>
	<76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>
	<1228067747.14131.53.camel@jimi>
	<20081130200041.2044911E9F1@www.antlr.org>
Message-ID: <C0A24A38-7233-4EBF-8611-54D1118435BD@cs.usfca.edu>

true. adding.

http://www.antlr.org:8888/browse/ANTLR-369

Ter

On Nov 30, 2008, at 12:00 PM, Gavin Lambert wrote:

> At 06:55 1/12/2008, Jim Idle wrote:
>> All you need is the composite jar and:
>>
>> #! /bin/bash
>> java -jar whereverthejaris.jar $*
>
> Plus the knowledge that this is how you actually get it to run :)
>
>> With make install, you have to detect the java install, find the
>> dependencies, it only works on *nix etc. Generic installers are a
>> lot more work and maintaining a configure script for this does
>> not seem worth it to me - it is Ter's call in the end though.
>
> He does have a good point, though.  ANTLR ought to come with
> prepackaged shell scripts and batch files that take care of the
> classpath / command line issues, so that users who don't want to
> know about that sort of thing (like me, and apparently him) don't
> have to.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Sun Nov 30 12:33:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 12:33:54 -0800
Subject: [antlr-interest] sneak preview of ANTLR v3.2 (book release
	version)
In-Reply-To: <9da4f4520811300935mdd57adegde7b455213585fcc@mail.gmail.com>
References: <C10E07EE-4AFE-417D-90C8-A3044211291C@antlr.org>
	<9da4f4520811300935mdd57adegde7b455213585fcc@mail.gmail.com>
Message-ID: <FA22CEA7-0045-49DC-8AC4-BF25735C2CB6@cs.usfca.edu>


On Nov 30, 2008, at 9:35 AM, Oliver Zeigermann wrote:

> I tried this out and it actually works great :)

Hooray!  Should I add some rewrite examples?

> I am wondering if "bottomup" is really needed, though. I only need
> "topdown" as the whole structure already is encoded in the tree. So
> there is no need to track context for me in that way.
>
> Do you have any use case for that?

Yep, you want to pop scope as you go back up the tree.  Push scope on  
way down.  Remember that matching a method or block pattern is just  
that; don't tell it how to walk the body or whatever.

m : ^(METHOD type=. ID body=.) {push scope} ;

remember we are now just telling it what to match, no how to walk the  
tree. it will walk the type and body for us.  You can't put the "pop  
scope" action in the same rule.

> Cheers and thanks for that cool feature :)

My pleasure.
Ter

From oliver.zeigermann at gmail.com  Sun Nov 30 12:52:29 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 30 Nov 2008 21:52:29 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
Message-ID: <9da4f4520811301252vcc8c393n544bc11dd6b425c9@mail.gmail.com>

My use case was just traversing a tree, not matter how it looks.

But having

^(. ID)

could mean "anything that has an ID as its first child". No idea what
would be the use case, so I know where you are coming from. Maybe just
add it for the sake of completeness and so that my tree rule finally
works?

Oliver

2008/11/30 Terence Parr <parrt at cs.usfca.edu>:
> not sure.  I guess i left out as it's weird.  When would you write: ^(. ID).
>  It's always the root that says what kind of thing it is, right?
>
> added
>
> http://www.antlr.org:8888/browse/ANTLR-368
>
> Ter
> On Nov 30, 2008, at 1:55 AM, Oliver Zeigermann wrote:
>
>> Great. Thanks!
>>
>> Can we expect that in 3.2?
>>
>> Oliver
>>
>> 2008/11/30 Terence Parr <parrt at cs.usfca.edu>:
>>>
>>> I agree. '.' as root should be ok.  I'll have to go back and make it
>>> context
>>> sensitive.  Right now, '.' can be a subtree as well.  it would mess up
>>> analysis.
>>> Ter
>>> On Nov 29, 2008, at 3:23 PM, Gavin Lambert wrote:
>>>
>>>> At 09:58 30/11/2008, Oliver Zeigermann wrote:
>>>>>
>>>>> Hmmm. Just checked that with the latest snapshot of ANTLR 3.2,
>>>>> but it really does not work, but it should, right? Why can "."
>>>>> not be a tree root?
>>>>
>>>> Yes, that's what Sam Harwell and myself were discussing earlier in this
>>>> thread; I think we agree that this should be considered as valid.
>>>>
>>>> (I gave a detailed description of how I think it should behave earlier
>>>> on,
>>>> but the general idea was to make ANTLR parse the tree as if it were a
>>>> "real"
>>>> tree rather than the "flat" tree that it's actually implemented as.)
>>>>
>>>
>>>
>
>

From parrt at cs.usfca.edu  Sun Nov 30 12:53:53 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 12:53:53 -0800
Subject: [antlr-interest] added pattern rewriting example
Message-ID: <0219DA65-89BC-44A6-A3D7-0E4F901DAEEA@cs.usfca.edu>

http://www.antlr.org/wiki/display/~admin/2008/11/30/

You'll need to visit here for software:

http://www.antlr.org/download/build

and look for for class.* (example walker) and antlr-oliver.tar.gz for  
the dev branch software.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081130/720f1d51/attachment.html 

From parrt at cs.usfca.edu  Sun Nov 30 13:13:28 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 13:13:28 -0800
Subject: [antlr-interest] added pattern rewriting example
In-Reply-To: <9da4f4520811301307i657271e0lec62a1d94a7086b7@mail.gmail.com>
References: <0219DA65-89BC-44A6-A3D7-0E4F901DAEEA@cs.usfca.edu>
	<9da4f4520811301307i657271e0lec62a1d94a7086b7@mail.gmail.com>
Message-ID: <BDC9FF57-B134-43FA-865F-7BCE0304BDF5@cs.usfca.edu>


On Nov 30, 2008, at 1:07 PM, Oliver Zeigermann wrote:

> OK. I do not quite grok it. Looking at
>
> topdown
>    :   ^('*' INT ^(VEC (e+=.)+)) -> ^(VEC ^('*' INT $e)+)
>    ;
>
> bottomup
>    :  ^('*' a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>    ;
>
> Why has the second to be in bottomup?

x*(4*0)

If you do it top down, you won't see x*0, you'll see only x*(4*0).   
You will rplace 4*0 with 0, but then you won't see x*0.  You need to  
do it innnermost (bottomup) not outermost (topdown) to see all  
opportunities.

You need to do

4*0 -> 0
x*0 -> 0

not

4*0 -> 0

and stop.

Ter

From oliver.zeigermann at gmail.com  Sun Nov 30 13:53:37 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 30 Nov 2008 22:53:37 +0100
Subject: [antlr-interest] added pattern rewriting example
In-Reply-To: <BDC9FF57-B134-43FA-865F-7BCE0304BDF5@cs.usfca.edu>
References: <0219DA65-89BC-44A6-A3D7-0E4F901DAEEA@cs.usfca.edu>
	<9da4f4520811301307i657271e0lec62a1d94a7086b7@mail.gmail.com>
	<BDC9FF57-B134-43FA-865F-7BCE0304BDF5@cs.usfca.edu>
Message-ID: <9da4f4520811301353u39b19b9fm16a8a1de0df5cf6@mail.gmail.com>

2008/11/30 Terence Parr <parrt at cs.usfca.edu>:
>
> On Nov 30, 2008, at 1:07 PM, Oliver Zeigermann wrote:
>
>> OK. I do not quite grok it. Looking at
>>
>> topdown
>>   :   ^('*' INT ^(VEC (e+=.)+)) -> ^(VEC ^('*' INT $e)+)
>>   ;
>>
>> bottomup
>>   :  ^('*' a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>   ;
>>
>> Why has the second to be in bottomup?
>
> x*(4*0)
>
> If you do it top down, you won't see x*0, you'll see only x*(4*0).  You will
> rplace 4*0 with 0, but then you won't see x*0.  You need to do it innnermost
> (bottomup) not outermost (topdown) to see all opportunities.
>
> You need to do
>
> 4*0 -> 0
> x*0 -> 0
>
> not
>
> 4*0 -> 0
>
> and stop.

I think I understand now.

So this would also work by repetitively traversing the tree until no
more simplificaions are possible (which would of course have a bad
performance), right?

Oliver

From jdfrens at gmail.com  Sun Nov 30 15:04:01 2008
From: jdfrens at gmail.com (Jeremy Frens)
Date: Sun, 30 Nov 2008 18:04:01 -0500
Subject: [antlr-interest] New release of ANTLR Testing
Message-ID: <e97a50950811301504q5c8fdf02m7fa03c7e996cd798@mail.gmail.com>

ANTLR Testing is a unit testing library for ANTLR grammars using JUnit
and a fluid interface.  I use it on a couple of my own projects, and I
have students using it as well.

I released version 0.8 today.  You can get it here:
http://antlr-testing.sourceforge.net/ .  It has some nice new
features:

* I'm finally writing tests for my test framework.  (Infer what you
will from this.)
* I've made sure that it works with ANTLR 3.1.
* You no longer have to add a bunch of ugly code to your grammars to
override the normal error handling of ANTLR.
* I've added a refuteToken() method to assist in testing lexers.

I stole a trick from gUnit for the third item on this list.  Previous
versions of ANTLR Testing required you to add some code that would
always throw an exception when something went wrong in processing.
Now I look at standard error for any output; output means something
went wrong.

As for refuteToken(), I wanted to write assertions that said how input
should NOT be scanned.  Since I write my grammars incrementally (as a
good agile developer), refuteToken() is happy to accept a rejection
for a variety of reasons.

For example, if I first implement identifiers, I can write

refuteToken(MyLexer.IDENTIFIER, myTester.scanInput("123"));

Since something like "x123" is probably a valid identifier, I really
want to assert that an identifier cannot start with a digit.  I can do
this refuteToken() without having to define what an integer is!
Later, when INTEGER is defined, this assertion (refutation?) will
still pass because the token types will not match.

jdf

--
Jeremy D. Frens
jdfrens at gmail.com
http://www.norecess.org/

From g.r.vansickle at att.net  Sun Nov 30 15:50:42 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 30 Nov 2008 17:50:42 -0600
Subject: [antlr-interest] ANTLR installation/use on Unix
In-Reply-To: <1228067747.14131.53.camel@jimi>
References: <54468C6F122C484E88BA9F3EE3F0817E@DFW5RB41><1227980803.2491.10.camel@jimi><76F358D5FDAD45C2BEFB55D22168BB88@DFW5RB41>
	<1228067747.14131.53.camel@jimi>
Message-ID: <385D30640CEA444BAAAB2F7C00363812@DFW5RB41>

> From:  Jim Idle
> 
> On Sun, 2008-11-30 at 03:06 -0600, Gary R. Van Sickle wrote: 
> 
> 	
> 	> From: Jim Idle
> 	> 
> 	> On Fri, 2008-11-28 at 21:28 -0600, Gary R. Van Sickle wrote: 
> 	> 
> 	> 	
> 	> 	Hi Terence et al,
> 	> 	
> 	> 	Am I just getting old, or shouldn't I be able to (in a 
> 	> More Ideal World(tm),
> 	> 	of course) do something like this on a Unix-like box?:
> 	> 	
> 	> 	$ cd antlr-src-distro-dir/
> 	> 	$ make install
> 	> 	$ antlr --version
> 	> 
> 	> 
> 	> Well, ANTLR is a Java tool,
> 	
> 	It's a tool.  There's no reason the user should have to 
> care what language
> 	it's implemented in simply in order to use it.  
> 
> 
> I am not talking about using it, I am talking about building 
> it!

Well, I guess that's our first disconnect. ;-)  I just want to use the dern
thing!

> To run it as if it were a command, you can set up a bash script.
> 

Yeah, I can, and I have (and also you forgot "manually put the JARs
somewhere").  That doesn't mean I should have had to.  I didn't have to do
anything of the sort with flex, bison, or any of a hundred other tools I use
every day.  Why am I, Mr. ANTLR User, expected to treat this one
differently?

> 	Gcc is written in C, but I
> 	don't care about that when I use it to compile C++, 
> Fortran, or Java code.
> 	I don't actually know what languages Flex or Bison are 
> written in (though I
> 	of course have a pretty good idea), but that doesn't in 
> the least prevent me
> 	from invoking them like this:
> 	
> 		$ flex [whatever]
> 		$ bison [whatever]
> 	
> 	Is there a reason why I shouldn't be able to do the 
> equivalent with ANTLR?
> 
> 
> Well, only if you can't write a one line bash script.

Unfortunately it takes more than one line to do it semi-right.  But you're
missing my point: Why did I have to write a shell script at all?

> flex 
> and bison are native programs and as such are easier to just 
> stick in /usr/local/bin and forget about it.
> 

Your argument starts to fray when one realizes that:

1. Shell scripts aren't native programs either.
2. I've never manually moved a flex or bison binary anywhere.  I bet you
haven't either.

Just because ANTLR is written in Java, it somehow gets special dispensation
to not behave like all other tools (including others that are also written
in Java)?  Sorry, that dog won't hunt.

Seriously, the last time I had to write a wrapper script for a
"compiler-like" tool simply in order to run it was... well, technically
never.  I say, let's use my now-broken
never-had-to-write-a-wrapper-just-to-run-a-tool streak as an opportunity to
save the next guy the same hassle - turn lemons into lemonade, if you will!

> 	
> 	> The ANTLR source can be bult from scratch now using 
> maven though:
> 	> 
> 	> 1) In stall Maven 2.0.9 or better;
> 	> 2) Find the directories with pom.xml in them
> 	> 3) cd to them and type: mvn
> 	> 4) Look at the output of the build to see where the .jar 
> 	> files go if are not familiar with Maven.
> 	> 
> 	
> 	I'm less concerned with the building of it than the 
> installation and use of
> 	it.  Can I do this?:
> 	
> 		$ cd antlr-src-distro-dir/
> 		$ mvn install
> 		$ antlr [whatever]
> 	
> 	Like I said, it's the 20th century.  
> 
> 
> Is it really?

At the utter most.  If you're one of those who would believe what the
calendars tell you, consider: Would any citizen of the 21st century be
reduced to moving files around and writing shell scripts simply to invoke
his tools?  Why, it strains all credulity my good sir!

> I must have missed something. Maven does not 
> require you to do any of this as it is from the 21st century :-)
> 

This "Maven" of which you speak sounds like quite the tool.  I'll have to
investigate how effortlessly it is able to build and install projects
consisting of source written in an arbitrary mix of non-Java languages such
as C, C++, lex, yacc, ANTLR, some custom built sources, etc etc, with
various interdependencies between the various source files.  Since it will
most certainly be at least the 21st century before I am able to get to that,
may I humbly suggest that in the interim we work together and arrange it so
that ANTLR does not dictate the build system used to invoke it?

> 	I, as the user, shouldn't have to be
> 	"looking at the output" of anything, picking out the 
> "artifacts" (as the
> 	kids call 'em these days), worrying about where they 
> should go, and then
> 	have to move them manually.  As you indicated above, I 
> don't have to with
> 	the C runtime, why should I have to for the tool itself?
> 
> 
> Well, I took the time to create a configure script and Visual 
> Studio projects.

Hear hear, many hands make light work!

> Still, people have problems with this and I 
> think that as soon as it goes wrong, your make install would 
> be more confusing than a simple bash script.

My "make install" installs a simple shell script.  (Not "bash script" BTW,
remember this is Unix: there's a non-zero possibility that there's one guy
out there somewhere running the original "sh", and hence we cannot use any
shell constructs introduced since 1971.)

> If you are using 
> Maven,

I'm not.  Millions of people are not.  Why should that fact deprive them of
ANTLRy goodnesss?

> then there is no need to do any of this because maven 
> already knows where to get the latest jars from and how to 
> build .g files using it. This is only useful for java output 
> though of course.
> 

Of course.  Considering ANTLR can target about a half-dozen non-Java
languages, doesn't that seem like a less-than-ideal solution?

> 	> Note that the Maven build, as well as constructing the ANTLR 
> 	> .jar file also creates a complete executable (I.e Java -jar) 
> 	> jar file that includes all the dependencies  to make things 
> 	> easier for developers.
> 	> 
> 	
> 	Ok, so can't it go the last mile and also create a 
> simple shell script
> 	wrapper so I can:
> 	
> 		$ antlr MyGrammar.g
> 	
> 	?  In fact, rumor has it that the Maven tool of which 
> you speak uses exactly
> 	that approach itself.
> 	
> 	To answer my own question, I broke out my autotools- 
> and script-fu last
> 	night and rolled an 
> automake+autoconf+built-shell-script which does in fact
> 	allow me to:
> 	
> 		$ ./configure
> 		$ make
> 		$ make install
> 		$ antlr
> 		ANTLR Parser Generator  Version 3.1.1
> 		[etc etc]
> 	
> 	The JARs aren't actually built, but rather the 
> pre-built one in the source
> 	distro's /lib directory is installed, and the "antlr" 
> shell script is
> 	generated from a template (a default Java interpreter 
> and the path to the
> 	JAR are substituted).  "make install" puts everything 
> in reasonable places
> 	and, Bob's your uncle, everything works just as it should.
> 	
> 	Terence (or anybody), any interest in this?  I could 
> certainly BSD-license
> 	it and contribute it.
> 
> You know - I was just trying to point you in the right 
> direction - there is no need to get all huffy,

Whoah whoah whoah, nobody here's getting "all huffy".  I'm here to help, as
clearly indicated in the sentence above.

> rant at me 
> about being in the wrong century

Well, unless you have a nuclear-turbine-powered flying car you'd like to
sell me, I'm afraid that shoe fits all of us. ;-)

> and complain that ANTLR 
> isn't an instant install on your particular system and so on. 

On who's particular system is ANTLR's install on par with, say, bison's?  As
far as I can discern, nobody's, unless possibly they are using this thing
you call "Maven".

> All you need is the composite jar and:
> 
> #! /bin/bash
> java -jar whereverthejaris.jar $*
> 

Well, that's a start... now where did I put that JAR?  ;-)

> With make install, you have to detect the java install,

Wrong.  *I* don't.  The dudes providing the ANTLR tool do.  I'm guessing
they'll do that at "make install"-time, but whatever, none of my business,
all that *I*, Mr. ANTLR User, need to know is:

	$ antlr MyGrammar.g

...and it's all good.  Give to Caesar what is Caesars, sez I.

> find 
> the dependencies,

I thought they were all in the JAR?

> it only works on *nix etc.

Hey hey hey, one front at a time!  *nix alone opens up a pretty big chunk of
real estate, wouldn't you say?  Including OSX and Windows (in Cygwin form).

> Generic 
> installers are a lot more work and maintaining a configure 
> script for this does not seem worth it to me

Right, that's why I left that part up to the autotools.

> - it is Ter's 
> call in the end though.
> 
> Jim

Terence, what say you?  Should I send you what I have?  It's pretty sweet
;-).

-- 
Gary R. Van Sickle
 


From 06virg at gmail.com  Sun Nov 30 21:56:52 2008
From: 06virg at gmail.com (virg g)
Date: Mon, 1 Dec 2008 11:26:52 +0530
Subject: [antlr-interest] help - Parser problem
Message-ID: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>

Hi,
 I have set of commands which I need to parse. This is my sample grammar
file.
It is able to parse if command is

"TESTCMD CNT=2 VAL=TYPE:test123"

If the command is
TESTCMD CNT=2 VAL=TYPE:CNT

It returs error "EarlyExitException" , if i change lexer rules i get
Mismatchtokenexception. But command is never successful. I have figured out
that If the literal contains any of these keywords CNT, VAL, TYPE, RTEST
parsing fails, that means it igonres these tokens while parsing by parser
eventhough these tokens(eg CNT) is/are created by Lexer.
How can i resolve this kind of problems. I cannot avoid having these tokens
in my command as the literal can be any of form. Really i am stuck here.

Also similarly i have set of different commands. If the parser finds any
unknown command it returns error and breaks the parsing. But i want to
continue to parse other commands. How to resume the parsing even if there
are any unknown commands found?

grammar testcmds;

tokens{
RTEST='TESTCMD';
}

commands:    command+;
//command:TESTCMD CNT= number 'VAL' '=' 'TYPE:' literal ;
command: RTEST count_value type_value;

count_value: 'CNT' '=' NUMBER;

type_value:    'VAL' '=' 'TYPE' ':' value;

value: literal;
literal    : (NUMBER|ALPHA|STRING)+
    ;

NUMBER    :    (DIGIT)+;

ALPHA    : ('a'..'z'|'A'..'Z')+
    ;
STRING: ('!' | '#'..'/' | '>'..'@' | '['..'`' | '{'..'~')+;

fragment DIGIT :    '0'..'9';

WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; };

Any help is highly appreciated. Thanks in advance.

- Virg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081201/b5e8d7c1/attachment.html 

From parrt at cs.usfca.edu  Sun Nov 30 22:38:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Nov 2008 22:38:07 -0800
Subject: [antlr-interest] added pattern rewriting example
In-Reply-To: <9da4f4520811301353u39b19b9fm16a8a1de0df5cf6@mail.gmail.com>
References: <0219DA65-89BC-44A6-A3D7-0E4F901DAEEA@cs.usfca.edu>
	<9da4f4520811301307i657271e0lec62a1d94a7086b7@mail.gmail.com>
	<BDC9FF57-B134-43FA-865F-7BCE0304BDF5@cs.usfca.edu>
	<9da4f4520811301353u39b19b9fm16a8a1de0df5cf6@mail.gmail.com>
Message-ID: <7AF9052F-0BC5-400F-A0FD-1C7FE1834876@cs.usfca.edu>


On Nov 30, 2008, at 1:53 PM, Oliver Zeigermann wrote:
> I think I understand now.
>
> So this would also work by repetitively traversing the tree until no
> more simplificaions are possible (which would of course have a bad
> performance), right?

It repeatedly applies all bottomup rules while one of them matches the  
current subtree.  So, it doesn't rerun on whole tree; does per  
subtree.  It says "apply bottomup until the returned tree is same as  
what we parsed".

Ter


From antlr at mirality.co.nz  Sun Nov 30 23:15:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 01 Dec 2008 20:15:04 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
Message-ID: <20081201071555.C357011EAA5@www.antlr.org>

At 09:29 1/12/2008, Terence Parr wrote:
 >not sure.  I guess i left out as it's weird.  When would you 
write:
 >
 >^(. ID).  It's always the root that says what kind of thing it 
is,
 >
 >right?

This is a completely fabricated example, but your tree structure 
might dictate that at that position you know it's either a 
^(ORDER1FN ID) or a ^(ORDER2FN ID) or a ^(ORDER3FN ID).  In one 
tree grammar you care about the distinction, while in another you 
don't.

Of course you could just write ^((ORDER1FN | ORDER2FN | ORDER3FN) 
ID), but if you know that there will never be any other 
possibilities then it's simpler to just write ^(. ID), especially 
as the number of variations increases.


And then of course there's Oliver's example, where he just wanted 
to traverse the (sub)tree regardless of structure (presumably to 
pretty-print it or something).

They might be unusual cases, admittedly, but they seem reasonable.


From antlr at mirality.co.nz  Sun Nov 30 23:30:50 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 01 Dec 2008 20:30:50 +1300
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.co
 m>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
Message-ID: <20081201073059.DF69F11E9F6@www.antlr.org>

At 18:56 1/12/2008, virg g wrote:
>If the command is
>TESTCMD CNT=2 VAL=TYPE:CNT
>
>It returs error "EarlyExitException" , if i change lexer rules i 
>get Mismatchtokenexception. But command is never successful. I 
>have figured out that If the literal contains any of these 
>keywords CNT, VAL, TYPE, RTEST parsing fails, that means it 
>igonres these tokens while parsing by parser eventhough these 
>tokens(eg CNT) is/are created by Lexer.
>How can i resolve this kind of problems. I cannot avoid having 
>these tokens in my command as the literal can be any of form. 
>Really i am stuck here.

Step 1: realise that using quoted literals in parser rules results 
in automatic creation of corresponding lexer rules with a funny 
name.  It's often clearer if you try to avoid doing this.

Step 2: realise that in ANTLR, the lexer runs to completion up 
front and outside of parser control.  So parser context has no 
influence on how things get tokenised.

Step 3: notice how your 'literal' rule doesn't mention any of the 
other literal tokens mentioned in step 1, so it's not surprising 
that it doesn't match them.

Step 4: realise that you can now fix it.

...

Step N: profit!  :)


From chainone at gmail.com  Sun Nov 30 23:47:40 2008
From: chainone at gmail.com (chain one)
Date: Mon, 1 Dec 2008 15:47:40 +0800
Subject: [antlr-interest] The problem of return struct
Message-ID: <5a92ffb60811302347x3b199459xec2c01662494775@mail.gmail.com>

options
{
output=AST;
}

entity_id returns [String eid]
@init{ eid=null; }
     : { isFirst }? id=IDENT { eid=id.getText();
/*addId(eid,ENTITY_IDENT);*/ } -> ^(ENTITY_ID[]  $id)
             |  id2=ENTITY_IDENT { eid=id2.getText();$id2.setType(IDENT);} ->
^(ENTITY_IDENT[] $id2)
             ;

variable eid would be undefined when compiling the generated Java code.
I checked the Java code, and found the reason was because eid was a member
variable of the return struct, so variable eid could not be used in method
directly,check the following code out:

//code start
   public static class entity_id_return extends ParserRuleReturnScope {
        public String eid;
        Object tree;
        public Object getTree() { return tree; }
    };

    public final testbasetypeParser.entity_id_return entity_id() throws
RecognitionException {
         eid=null;

//code end


I am looking for a method that could avoid this kind of problem (not modify
the Java code directly : ) )
Anyone who knows this kind of method please let me know, your help is
appreciated.
Thanks very much.


Best Regards,
chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081201/4d2e389f/attachment.html 

