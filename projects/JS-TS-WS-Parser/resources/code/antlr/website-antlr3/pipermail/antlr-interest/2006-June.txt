From antlr at shmuelhome.mine.nu  Thu Jun  1 00:23:02 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Jun  1 00:23:04 2006
Subject: [antlr-interest] insert token in lexer?
In-Reply-To: <910A9B33-ADE8-44D5-B339-E41A6B6BB2D1@dolphin-services.de>
References: <E4D07AB09F5F044299333C8D0FEB45E9023B0282@nrccenexb1.nrc.ca>
	<910A9B33-ADE8-44D5-B339-E41A6B6BB2D1@dolphin-services.de>
Message-ID: <447E95D6.8040005@shmuelhome.mine.nu>

Kay Roepke wrote:
> 
> On 30. May 2006, at 20:30 Uhr, Putrycz, Erik wrote:
> 
>> Is it possible to insert a token in a lexer rule?
>>
>> On a specific rule, I'd like to change the type of the token with a
>> $setType(...) and I'd also would like to insert another token.
>>
>> I know I could do that with a TokenStream but I'd rather avoid writing
>> that in Java if possible...
> 
> I'm afraid that it is not possible without doing Java coding.
> nextToken() always returns the token in _returnToken. So there can be 
> only one token at a time.
> Surely you could provide some nextToken replacement in subclass that 
> does it differently, and provide some
> hooks for adding more than one token. Then let nextToken loop over the 
> accumulated tokens until it runs
> out and only then let it call another lexer rule. That way you could add 
> as many tokens as you want.
> 
> But question is, why do you want to do that? It sounds a bit far out ;)
> 
> HTH,
> 
> -k
> 
It is one way of implementing javascript's virtual semicolon


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.0/352 - Release Date: 5/30/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.0/352 - Release Date: 5/30/2006

From open.zone at virgin.net  Thu Jun  1 01:28:57 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  1 01:11:17 2006
Subject: [antlr-interest] Is it possible to connect the position in
	soucesand persing.
In-Reply-To: <20060601152144.61D3.OMANUKE@md.point.ne.jp>
Message-ID: <000b01c68555$6f1be010$c704a8c0@hercules>

Hi,

KCSParse (csharp_v1) already tracks file/line/col position in the generated
AST. Can't remember now but I think it also preserves the whole source
comments and all using hidden tokens.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of 
> omanuke@md.point.ne.jp
> Sent: 01 June 2006 07:25
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Is it possible to connect the 
> position in soucesand persing.
> 
> 
> Is it possible to connect the position in souces and persing 
> like VisualStudio? for example,VS can indicate the definition 
> of superclass and so on. to do so,connecting those is necessary.
> 

From craymer at warpiv.com  Thu Jun  1 02:57:16 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Thu Jun  1 02:57:17 2006
Subject: [antlr-interest] ANTLR (C++) pretty printer?
In-Reply-To: <dd3a065f0605311212r47a57c03lddb67a697cbbabfa@mail.gmail.com>
Message-ID: <006301c68561$c3f7d9c0$6402a8c0@Fafnir>

Bryan--

I decided to see how fast I could generate one using antlr 2.8 and the 2.7.6
antlr.g.  It took me about three hours to extract the antlr grammar sans
actions and debug a tree grammar by taking advantage of the antlr 2.8 tree
grammar generator.  I then spent about six hours adding in actions to do the
printing (I already had some grammar printing routines lying around).

There are still a few minor bugs to be fixed, and I haven't yet tested the
options (with or without actions, or exceptions, or options, and a few other
flags).  I'll do a little more cleanup tomorrow and then post the result to
antlr.org.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Wednesday, May 31, 2006 12:12 PM
> To: ANTLR Interest
> Subject: [antlr-interest] ANTLR (C++) pretty printer?
> 
> Does anyone know of an ANTLR pretty printer? That is, a program which
> reads ANTLR *.g files and produces another *.g in a standard form?  If
> it makes a difference, I've got C++ actions.
> 
> I'm hoping to head off a vi-emacs style war by saying "here's a tool...".
> 
> Thanks,
> - Bryan Ewbank

From kroepke at dolphin-services.de  Thu Jun  1 04:03:12 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Thu Jun  1 04:03:20 2006
Subject: [antlr-interest] insert token in lexer?
In-Reply-To: <447E95D6.8040005@shmuelhome.mine.nu>
References: <E4D07AB09F5F044299333C8D0FEB45E9023B0282@nrccenexb1.nrc.ca>
	<910A9B33-ADE8-44D5-B339-E41A6B6BB2D1@dolphin-services.de>
	<447E95D6.8040005@shmuelhome.mine.nu>
Message-ID: <F69AE748-BFDB-4D05-891C-800E0F8561F7@dolphin-services.de>


On 1. Jun 2006, at 9:23 Uhr, shmuel siegel wrote:

> It is one way of implementing javascript's virtual semicolon

So it is indeed far out ;)

Anyway, I think the approach with overriding nextToken would be the  
easiest route, and doesn't even require that much work.

-k
From rhill03 at eds.com  Thu Jun  1 04:30:35 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Thu Jun  1 04:31:08 2006
Subject: [antlr-interest] ANTLR (C++) pretty printer?
Message-ID: <2E909902FD3A03419E3A905908AE3DD401F4B030@UKNSM201.emea.corp.eds.com>

I have to say Loring, you have waaaaay too much spare time ;)
<cough> now when you gonna post it c'mon, we're waiting!
I thought Ter had the monopoly on being the maniac around here LOL

Take care all!
/2ob


--
Rob Hill
EDS - Hallamshire Business Park
F1E/045
Sheffield	
T:	+44 (0) 114 291 1928
M:	+44 (0) 791 732 1227
E:	rhill03@eds.com

 

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org 
>[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Loring Craymer
>Sent: 01 June 2006 10:57
>To: 'Bryan Ewbank'; 'ANTLR Interest'
>Subject: RE: [antlr-interest] ANTLR (C++) pretty printer?
>
>Bryan--
>
>I decided to see how fast I could generate one using antlr 2.8 
>and the 2.7.6 antlr.g.  It took me about three hours to 
>extract the antlr grammar sans actions and debug a tree 
>grammar by taking advantage of the antlr 2.8 tree grammar 
>generator.  I then spent about six hours adding in actions to 
>do the printing (I already had some grammar printing routines 
>lying around).
>
>There are still a few minor bugs to be fixed, and I haven't 
>yet tested the options (with or without actions, or 
>exceptions, or options, and a few other flags).  I'll do a 
>little more cleanup tomorrow and then post the result to antlr.org.
>
>--Loring
>
>> -----Original Message-----
>> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest- 
>> bounces@antlr.org] On Behalf Of Bryan Ewbank
>> Sent: Wednesday, May 31, 2006 12:12 PM
>> To: ANTLR Interest
>> Subject: [antlr-interest] ANTLR (C++) pretty printer?
>> 
>> Does anyone know of an ANTLR pretty printer? That is, a 
>program which 
>> reads ANTLR *.g files and produces another *.g in a standard 
>form?  If 
>> it makes a difference, I've got C++ actions.
>> 
>> I'm hoping to head off a vi-emacs style war by saying 
>"here's a tool...".
>> 
>> Thanks,
>> - Bryan Ewbank
>
>
From sunjigang1965 at yahoo.com.cn  Thu Jun  1 04:46:18 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Thu Jun  1 04:46:30 2006
Subject: [antlr-interest] lexical rule overlapping
Message-ID: <20060601114618.86637.qmail@web15701.mail.cnb.yahoo.com>

Hi,

I am attempting implement Clean 0.8.4. According the following grammar (extracted from page 80 of
appendix.ps on ftp://ftp.cs.kun.nl/pub/Clean/old/Clean08/doc/ps/), +1234 could be either
considered as SymbolID or IntDenot.

SymbolId = UpperCaseChar.{RestChar} | Class1Char.{RestChar} ;

RestChar = LowerCaseChar | Class1Char | Digit| UpperCaseChar | CharDel | StringDel ;
LowerCaseChar = 'a' | 'b' | ... | 'z' ;
UpperCaseChar = 'A' | 'B' | ... | 'Z' ;

Class1Char = '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | '-' | '+' | '/' | '='| '<' | '>' | '_'
| '.' | '`' | ''' ;

IntDenot = [Sign].[Digit]+ ;
Sign = '+' | '-' ;
Digit = '0' | '1' | ... | '9' ;


I am using Antlr to do the work. The rules IntDenot and SymbolId are overlapped, thus caused
lexical nondeterminism between the two grammar rules in lexer.  

Could anyone give me an idea?

Robert 



		
___________________________________________________________ 
ÇÀ×¢ÑÅ»¢Ãâ·ÑÓÊÏä-3.5GÈÝÁ¿£¬20M¸½¼þ£¡ 
http://cn.mail.yahoo.com
From open.zone at virgin.net  Thu Jun  1 05:22:18 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  1 05:04:38 2006
Subject: [antlr-interest] lexical rule overlapping
In-Reply-To: <20060601114618.86637.qmail@web15701.mail.cnb.yahoo.com>
Message-ID: <001701c68576$076d8150$c704a8c0@hercules>

> Hi,
> 
> I am attempting implement Clean 0.8.4. According the 
> following grammar (extracted from page 80 of appendix.ps on 
> ftp://ftp.cs.kun.nl/pub/Clean/old/Clean08/doc/ps/), +1234 
> could be either considered as SymbolID or IntDenot.
> 
> SymbolId = UpperCaseChar.{RestChar} | Class1Char.{RestChar} ;
> 
> RestChar = LowerCaseChar | Class1Char | Digit| UpperCaseChar 
> | CharDel | StringDel ; LowerCaseChar = 'a' | 'b' | ... | 'z' 
> ; UpperCaseChar = 'A' | 'B' | ... | 'Z' ;
> 
> Class1Char = '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | 
> '-' | '+' | '/' | '='| '<' | '>' | '_'
> | '.' | '`' | ''' ;
> 
> IntDenot = [Sign].[Digit]+ ;
> Sign = '+' | '-' ;
> Digit = '0' | '1' | ... | '9' ;
> 
> 
> I am using Antlr to do the work. The rules IntDenot and 
> SymbolId are overlapped, thus caused lexical nondeterminism 
> between the two grammar rules in lexer.  
> 
> Could anyone give me an idea?

Combine the rules where they conflict. That is handle all tokens that can
begin with UpperCaseChar or Class1Char in the same rule. Use $setType() to
fix eventual token type. KCSParse (and the java grammar too I think) does
the same for handling DOT and numeric literals - see the INT_LITERAL rule in
CSharpLexer.g.

I'm curious. Are you implementing a parser/lexer for Clean or a full Clean
compiler/interpreter?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From tomi.schuetz at credit-suisse.com  Thu Jun  1 08:05:53 2006
From: tomi.schuetz at credit-suisse.com (=?iso-8859-1?Q?Sch=FCtz_Tomi_=28KSFC_413=29?=)
Date: Thu Jun  1 08:06:03 2006
Subject: [antlr-interest] New to ANTLR; Problems with the grammar
Message-ID: <68406D6C525EC145A162F2083B7E94E611114C@chsa1056.share.beluni.net>

Hi there

I would like to parse an XML file and to extract some entity information.

sample.xml:

<!ENTITY commonVerification SYSTEM "../includes/commonVerification.xml">
..

My grammar looks like this...

b.g:

class P extends Parser;

startRule
  : (
      PREFIX n:NAME SYS p:PATH SUFFIX
      {
        System.out.println("("+n.getText()+","+p.getText()+")");
      }
    )+
  ;
    
class L extends Lexer;

PREFIX
  : "<!ENTITY"
  ;

SUFFIX
  : '>'
  ;

NAME
  : (
      'a'..'z' |
      'A'..'Z' |
      '_'
    )+
  ;
    
SYS
  : "SYSTEM"
  ;
        
PATH
  : (
      '"' |
      'a'..'z' |
      'A'..'Z' |
      '.' |
      '/'
    )+
  ;

WS
  : (
      ' ' |
      '\t' |
      '\r' '\n' { newline(); } |
      '\n' { newline(); }
    )
    {$setType(Token.SKIP);} //ignore this token
  ;

I get an error message which I don't understand and I can't find an answer or link which brings me further...

<!ENTITY commonVerification SYSTEM "../includes/commonVerification.xml">
line 1:29: expecting SYS, found 'SYSTEM'

Could anyone point me to the problem? Any hint is very much appreciated.

Thanks in advance,
Tomi
From digobaptista at gmail.com  Thu Jun  1 08:28:57 2006
From: digobaptista at gmail.com (Rodrigo Baptista)
Date: Thu Jun  1 08:29:01 2006
Subject: [antlr-interest] New to ANTLR; Problems with the grammar
In-Reply-To: <68406D6C525EC145A162F2083B7E94E611114C@chsa1056.share.beluni.net>
References: <68406D6C525EC145A162F2083B7E94E611114C@chsa1056.share.beluni.net>
Message-ID: <b69b16780606010828h26000c97l6121c9bcb5d5e8b9@mail.gmail.com>

Im not sure but i think you just need to remove the rule :

SYS
 : "SYSTEM"
 ;

And in the lexer part just add:

tokens
{
SYS  = "SYSTEM";
}

right after this:

class L extends Lexer;

Hope it works,

Regards,

Rodrigo

On 6/1/06, Sch?tz Tomi (KSFC 413) <tomi.schuetz@credit-suisse.com> wrote:
>
> Hi there
>
> I would like to parse an XML file and to extract some entity information.
>
> sample.xml:
>
> <!ENTITY commonVerification SYSTEM "../includes/commonVerification.xml">
> ..
>
> My grammar looks like this...
>
> b.g:
>
> class P extends Parser;
>
> startRule
>   : (
>       PREFIX n:NAME SYS p:PATH SUFFIX
>       {
>         System.out.println("("+n.getText()+","+p.getText()+")");
>       }
>     )+
>   ;
>
> class L extends Lexer;
>
> PREFIX
>   : "<!ENTITY"
>   ;
>
> SUFFIX
>   : '>'
>   ;
>
> NAME
>   : (
>       'a'..'z' |
>       'A'..'Z' |
>       '_'
>     )+
>   ;
>
> SYS
>   : "SYSTEM"
>   ;
>
> PATH
>   : (
>       '"' |
>       'a'..'z' |
>       'A'..'Z' |
>       '.' |
>       '/'
>     )+
>   ;
>
> WS
>   : (
>       ' ' |
>       '\t' |
>       '\r' '\n' { newline(); } |
>       '\n' { newline(); }
>     )
>     {$setType(Token.SKIP);} //ignore this token
>   ;
>
> I get an error message which I don't understand and I can't find an answer
> or link which brings me further...
>
> <!ENTITY commonVerification SYSTEM "../includes/commonVerification.xml">
> line 1:29: expecting SYS, found 'SYSTEM'
>
> Could anyone point me to the problem? Any hint is very much appreciated.
>
> Thanks in advance,
> Tomi
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060601/1b8e8755/attachment.html
From mail at martin-probst.com  Thu Jun  1 08:37:51 2006
From: mail at martin-probst.com (Martin Probst)
Date: Thu Jun  1 08:38:15 2006
Subject: [antlr-interest] New to ANTLR; Problems with the grammar
In-Reply-To: <68406D6C525EC145A162F2083B7E94E611114C@chsa1056.share.beluni.net>
References: <68406D6C525EC145A162F2083B7E94E611114C@chsa1056.share.beluni.net>
Message-ID: <DE00D6A2-B0BE-474C-8BE7-4DC0EBF92CA3@martin-probst.com>

Hi,

> I get an error message which I don't understand and I can't find an  
> answer or link which brings me further...
>
> <!ENTITY commonVerification SYSTEM "../includes/ 
> commonVerification.xml">
> line 1:29: expecting SYS, found 'SYSTEM'
>
> Could anyone point me to the problem? Any hint is very much  
> appreciated.

The error message is a bit irritating, the issue is that the token  
"SYSTEM" is being lexed as a NAME, not as a SYS token - it matches  
the lexical specification of both NAME and SYS, so the lexer does not  
know how to handle it. You should get warnings about non-determinism  
from your grammar - these are not for decoration, they nearly always  
mean there is something wrong.

Are you sure you really want to implement an XML parser yourself,  
even though that for every possible programming language a multitude  
of well written, well tested parsers exist?

Regards,
Martin Probst
From tibbetts at streambase.com  Thu Jun  1 12:54:12 2006
From: tibbetts at streambase.com (Richard Tibbetts)
Date: Thu Jun  1 12:54:07 2006
Subject: [antlr-interest] Accessing the token list from a lexer?
Message-ID: <20060601195412.GE17390@localdomain>

In ANTLR 2.7.x is there a clean way to get the token list out of a
Lexer generated by ANTLR? I'm working in Java if that makes a
difference.

I can see hackish ways (access the literals hashtable, and extract the
string byte-by-byte from the ANTLRHashString objects), but nothing
cleaner is jumping out at me.

Thanks,
Richard Tibbetts

From dragonoe at mcmaster.ca  Thu Jun  1 13:04:25 2006
From: dragonoe at mcmaster.ca (O.E. Dragon)
Date: Thu Jun  1 13:04:38 2006
Subject: [antlr-interest] Accessing the token list from a lexer?
In-Reply-To: <20060601195412.GE17390@localdomain>
Message-ID: <web-128089978@cgpsrv2.cis.mcmaster.ca>

On Thu, 1 Jun 2006 15:54:12 -0400
 Richard Tibbetts <tibbetts@streambase.com> wrote:
> In ANTLR 2.7.x is there a clean way to get the token list out of a
> Lexer generated by ANTLR? I'm working in Java if that makes a
> difference.
> 
> I can see hackish ways (access the literals hashtable, and extract
> the
> string byte-by-byte from the ANTLRHashString objects), but nothing
> cleaner is jumping out at me.

You can use use the lexer's "next()" method which is what the generated
parser does. You can then build your own list from that. Of course you
probably won't be able to reuse the same lexer later. There might be a
way to reset the lexer which I don't know. The only way I can think of
is to  re-instantiate it with the same input.

Cheers,
-Olivier
From craymer at warpiv.com  Thu Jun  1 13:34:36 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Thu Jun  1 13:34:39 2006
Subject: [antlr-interest] ANTLR (C++) pretty printer?
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD401F4B030@UKNSM201.emea.corp.eds.com>
Message-ID: <006e01c685ba$cd0ab4c0$6402a8c0@Fafnir>

Ok, I've posted it.  It looks like it processes antlr.g correctly, but I
could have overlooked a print statement or two, and the options for
stripping things other than actions are untested.

The packaging is definitely minimal:  you will have to run ANTLR over the
grammars, and I use eclipse and have not bothered to supply an ant script.

Bug reports are welcome.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Hill, Robert
> Sent: Thursday, June 01, 2006 4:31 AM
> To: ANTLR Interest
> Subject: RE: [antlr-interest] ANTLR (C++) pretty printer?
> 
> I have to say Loring, you have waaaaay too much spare time ;)
> <cough> now when you gonna post it c'mon, we're waiting!
> I thought Ter had the monopoly on being the maniac around here LOL
> 
> Take care all!
> /2ob
> 
> 
> --
> Rob Hill
> EDS - Hallamshire Business Park
> F1E/045
> Sheffield
> T:	+44 (0) 114 291 1928
> M:	+44 (0) 791 732 1227
> E:	rhill03@eds.com
> 
> 
> 
> >-----Original Message-----
> >From: antlr-interest-bounces@antlr.org
> >[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Loring Craymer
> >Sent: 01 June 2006 10:57
> >To: 'Bryan Ewbank'; 'ANTLR Interest'
> >Subject: RE: [antlr-interest] ANTLR (C++) pretty printer?
> >
> >Bryan--
> >
> >I decided to see how fast I could generate one using antlr 2.8
> >and the 2.7.6 antlr.g.  It took me about three hours to
> >extract the antlr grammar sans actions and debug a tree
> >grammar by taking advantage of the antlr 2.8 tree grammar
> >generator.  I then spent about six hours adding in actions to
> >do the printing (I already had some grammar printing routines
> >lying around).
> >
> >There are still a few minor bugs to be fixed, and I haven't
> >yet tested the options (with or without actions, or
> >exceptions, or options, and a few other flags).  I'll do a
> >little more cleanup tomorrow and then post the result to antlr.org.
> >
> >--Loring
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> >> bounces@antlr.org] On Behalf Of Bryan Ewbank
> >> Sent: Wednesday, May 31, 2006 12:12 PM
> >> To: ANTLR Interest
> >> Subject: [antlr-interest] ANTLR (C++) pretty printer?
> >>
> >> Does anyone know of an ANTLR pretty printer? That is, a
> >program which
> >> reads ANTLR *.g files and produces another *.g in a standard
> >form?  If
> >> it makes a difference, I've got C++ actions.
> >>
> >> I'm hoping to head off a vi-emacs style war by saying
> >"here's a tool...".
> >>
> >> Thanks,
> >> - Bryan Ewbank
> >
> >

From jbb at acm.org  Thu Jun  1 14:21:53 2006
From: jbb at acm.org (John B. Brodie)
Date: Thu Jun  1 14:21:57 2006
Subject: [antlr-interest] Accessing the token list from a lexer?
In-Reply-To: <20060601195412.GE17390@localdomain> (message from Richard
	Tibbetts on Thu, 01 Jun 2006 15:54:12 -0400)
References: <20060601195412.GE17390@localdomain>
Message-ID: <E1Fluc5-0005sS-00@gecko>

>In ANTLR 2.7.x is there a clean way to get the token list out of a
>Lexer generated by ANTLR? I'm working in Java if that makes a
>difference.
>
>I can see hackish ways (access the literals hashtable, and extract the
>string byte-by-byte from the ANTLRHashString objects), but nothing
>cleaner is jumping out at me.

Do you want a collection that contains the set of tokens a particular lexer is
able to recognize?

   -- if so, maybe the *TokenTypes.txt files generated by Antlr can help.

Or do you want a collection that contains the set of tokens that are
produced by a lexer when lexing a particular input file?

   -- if so, just construct a lexer on the input file and then repeatedly call
      its next() method to obtain each token recognized (just like the parser
      does).

Hope this helps...
   -jbb
From jose.ventura.roda at gmail.com  Fri Jun  2 03:50:05 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Fri Jun  2 03:50:08 2006
Subject: [antlr-interest] Guidelines for a antlr parser
Message-ID: <e39abda10606020350t779a6bb9sf215ec968755d95f@mail.gmail.com>

Hi all,

I want to ask a question to the community to get your opinion.

I'm working in some parsers, these parsers have commons parts. I say,


Parser 1:   A B C D E
Parser 2:   F B D

    - every letter is a set of rules
      - every parser must build an AST with all tokens of all letters

Can be good to develop two parser, the first with 5 multilexer parsers and
the second with 3 multilexer parsers or it's better to develop without
multilexer?

Can I have performance problems with multilexer?

Thanks in advance,
Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060602/5a933f60/attachment.html
From hugo.leeney at gmail.com  Fri Jun  2 07:58:29 2006
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Fri Jun  2 07:58:34 2006
Subject: [antlr-interest] return result of a rule reference directly
Message-ID: <ccbc40a00606020758g79b7e41nca900fcb72723ae4@mail.gmail.com>

Hi,

I was wondering is it possible to return the result of a rule
reference directly (without instantiating a variable).

>From the manual I have the following code:

yellow_rule
returns[string name]
{string name ="";}
    name=identifier {}
;

I would like to be able to skip the instantiation of 'name' so that
when identifier matches, yellow_rule simply returns what was returned
by the identifier rule. Does anyone know a way that this is possible?

Many thanks,

Hugo Leeney

-- 
*******************************************
This document is strictly confidential and is intended for use by
 the addressee unless otherwise indicated.
*******************************************
From mail at martin-probst.com  Fri Jun  2 09:58:17 2006
From: mail at martin-probst.com (Martin Probst)
Date: Fri Jun  2 09:58:22 2006
Subject: [antlr-interest] return result of a rule reference directly
In-Reply-To: <ccbc40a00606020758g79b7e41nca900fcb72723ae4@mail.gmail.com>
References: <ccbc40a00606020758g79b7e41nca900fcb72723ae4@mail.gmail.com>
Message-ID: <36A39FFE-AD0C-4E98-9DD5-7B7D1B0BA420@martin-probst.com>

> I was wondering is it possible to return the result of a rule
> reference directly (without instantiating a variable).

The problem is with the generated code, which has code paths that  
don't go through the assignment. However, you can reduce bloat by  
initializing it (I presume you mean initializing, no?) in the  
declaration, e.g.

yellow_rule
returns [String name = ""]
:
  ....

Regards,
Martin
From hugo.leeney at gmail.com  Fri Jun  2 10:22:02 2006
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Fri Jun  2 10:22:05 2006
Subject: [antlr-interest] return result of a rule reference directly
In-Reply-To: <36A39FFE-AD0C-4E98-9DD5-7B7D1B0BA420@martin-probst.com>
References: <ccbc40a00606020758g79b7e41nca900fcb72723ae4@mail.gmail.com>
	<36A39FFE-AD0C-4E98-9DD5-7B7D1B0BA420@martin-probst.com>
Message-ID: <ccbc40a00606021022o957e929x3c82253828b095a0@mail.gmail.com>

Hi, Thanks for the reply,

Actually the code I posted before produces an error. It should have
been what you suggested. I messed around with it some more and didn't
come up with anything. The generated code I am looking for would look
like:

void MyParser::rule1() {
    /*NAMESPACE STUFF...*/
    try {
        return rule2();
    }
    catch ( .....

Like you alluded to I don't think it is possible unless there is a
special bit of ANTLR syntax I have missed. It wouldn't be too hard to
generate that kind of code I don't think. Suggestion for syntax
follows:

rule1
returns[string] //For method interfaces
{} :
    return rule2 //similar to  'x=rule2' syntax
...
;

I know everything I want to do is possible using ASTs but I am looking
for efficient parsing with BIG files. I could pass the information up
by creating variables at each level but this is not ideal. I hope you
get my meaning.


On 6/2/06, Martin Probst <mail@martin-probst.com> wrote:
> > I was wondering is it possible to return the result of a rule
> > reference directly (without instantiating a variable).
>
> The problem is with the generated code, which has code paths that
> don't go through the assignment. However, you can reduce bloat by
> initializing it (I presume you mean initializing, no?) in the
> declaration, e.g.
>
> yellow_rule
> returns [String name = ""]
> :
>   ....
>
> Regards,
> Martin
>


-- 
*******************************************
This document is strictly confidential and is intended for use by
 the addressee unless otherwise indicated.
*******************************************
From hugo.leeney at gmail.com  Fri Jun  2 10:23:53 2006
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Fri Jun  2 10:23:59 2006
Subject: [antlr-interest] return result of a rule reference directly
In-Reply-To: <ccbc40a00606021022o957e929x3c82253828b095a0@mail.gmail.com>
References: <ccbc40a00606020758g79b7e41nca900fcb72723ae4@mail.gmail.com>
	<36A39FFE-AD0C-4E98-9DD5-7B7D1B0BA420@martin-probst.com>
	<ccbc40a00606021022o957e929x3c82253828b095a0@mail.gmail.com>
Message-ID: <ccbc40a00606021023m60abeae3td4acb2c98454711b@mail.gmail.com>

Sorry, desired generated code should have looked like:

string MyParser::rule1() {
    /*NAMESPACE STUFF...*/
    try {
        return rule2();
    }
    catch ( .....

method return type changed from 'void' to 'string'

HL
From sunjigang1965 at yahoo.com.cn  Fri Jun  2 11:59:32 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri Jun  2 11:59:37 2006
Subject: [antlr-interest] lexical rule overlapping
Message-ID: <20060602185932.89161.qmail@web15701.mail.cnb.yahoo.com>

Hello Micheal, 

I am doing an MSc project, the topic is implementing Clean(subset). I plan firstly choose a subset
as the core. After the core working, then translate other part of Clean into this core. What I
know is that Clean 0.8 was developed as an experimental language and used to implement other
functional language. Moreover it is small so it is easy to start with. 

I followed sample project MiniJava on Appel's book Modern Compiler Implementation in Java until I
got stuck at Continuation Based I/O. I feel his book is not easy, since, when introducing
functional extension to MiniJava, he simply supposes readers already know functional I/O, that
seems related/is Monads. Originally I planned to start Clean implentation after realizing MiniJava
functional extension. I had to give up and to begin with basic functional aspect such as pattern
matching. I am not sure if this is viable, I have to move on.

I want interpret the core first, finally change into a compiler. 

Jigang (robert)



   
--- Micheal J <open.zone@virgin.net>Ð´µÀ:

> > Hi,
> > 
> > I am attempting implement Clean 0.8.4. According the 
> > following grammar (extracted from page 80 of appendix.ps on 
> > ftp://ftp.cs.kun.nl/pub/Clean/old/Clean08/doc/ps/), +1234 
> > could be either considered as SymbolID or IntDenot.
> > 
> > SymbolId = UpperCaseChar.{RestChar} | Class1Char.{RestChar} ;
> > 
> > RestChar = LowerCaseChar | Class1Char | Digit| UpperCaseChar 
> > | CharDel | StringDel ; LowerCaseChar = 'a' | 'b' | ... | 'z' 
> > ; UpperCaseChar = 'A' | 'B' | ... | 'Z' ;
> > 
> > Class1Char = '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | 
> > '-' | '+' | '/' | '='| '<' | '>' | '_'
> > | '.' | '`' | ''' ;
> > 
> > IntDenot = [Sign].[Digit]+ ;
> > Sign = '+' | '-' ;
> > Digit = '0' | '1' | ... | '9' ;
> > 
> > 
> > I am using Antlr to do the work. The rules IntDenot and 
> > SymbolId are overlapped, thus caused lexical nondeterminism 
> > between the two grammar rules in lexer.  
> > 
> > Could anyone give me an idea?
> 
> Combine the rules where they conflict. That is handle all tokens that can
> begin with UpperCaseChar or Class1Char in the same rule. Use $setType() to
> fix eventual token type. KCSParse (and the java grammar too I think) does
> the same for handling DOT and numeric literals - see the INT_LITERAL rule in
> CSharpLexer.g.
> 
> I'm curious. Are you implementing a parser/lexer for Clean or a full Clean
> compiler/interpreter?
> 
> 
> Micheal
> 
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
> 

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From antlr-list at arizona-software.ch  Fri Jun  2 13:07:09 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Fri Jun  2 13:07:19 2006
Subject: [antlr-interest] ANTLRWorks 1.0ea9 available!
Message-ID: <EE426310-3C6C-4E9D-97CD-ABAAD555B8C9@arizona-software.ch>

Hello!

ANTLRWorks 1.0ea9 is now available:

http://www.antlr.org/works/index.html

This version is now able to debug tree grammar (it displays the input  
tree), to show AST during debugging and to step over rule. See the  
release notes at the end of this e-mail for more information.

The ANTLRWorks jar has everything you need including the latest  
version of ANTLR 3.0ea10 and StringTemplate 2.3b7.

Enjoy!

Jean


*** History ***

06/02/06 - version 1.0ea9

- debugger: display now AST tree during debugging
- debugger: can debug tree grammar (display input tree)
- debugger: can step over a rule
- parse tree in debugger shows backtrack nodes (colorized)
- show now Tokens DFA
- can now export decision DFA and rule dependency graph as DOT file
- new replace all feature in find dialog
- generated code coloring has been disabled
- auto-save document before debugging and generating code for display
- generate parser if document has been modified since last generation
- more precise message when log are reported to the console (warnings  
or errors)
- more information are reported in the events list of the debugger
- debugger: output pane and information pane are now hidden by default
- debugger: new method to select the break event(s)
- debugger: message if remote parser's grammar file does not match  
current file
- tab are reused for the same operation rather than populating
- remote parser launch time-out can be specified in the preferences
- syntax: added exception clause of rule

- fixed a bug in the DOT engine that could prevent a DOT graph to be  
correctly displayed
- fixed a bug where ANTLRWorks would freeze when replacing literals  
with token label
- fixed a bug where stats about programming and language  
implementation experience were inverted

From sunjigang1965 at yahoo.com.cn  Fri Jun  2 13:29:45 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri Jun  2 13:29:49 2006
Subject: [antlr-interest] to recognise interger and real in one rule
Message-ID: <20060602202945.72393.qmail@web15702.mail.cnb.yahoo.com>

In lexer grammar, I try to recognise interger and real in one rule, 

BasicValue: ( Sign)? (Digit)+ {$setType(IntDenot);} ( '.' (Digit)+ (Exponent)?
{$setType(RealDenot);})? ;

protected Exponent : 'E' (Sign)? (Digit)+ ;


In parser grammar, put

basicValue :BaiscValue EOF;

when parsing  "78.9", produces error message: 

line 1:2: expecting "BaiscValue", found '78.9'.

Further more I wish, with action {$setType(IntDenot);} and {$setType(RealDenot);} in lexical
grammar, the token type BasicValue is redundant. 

Robert



__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From sunjigang1965 at yahoo.com.cn  Fri Jun  2 13:47:44 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri Jun  2 13:47:47 2006
Subject: [antlr-interest] Suggestion to the list
Message-ID: <20060602204744.23391.qmail@web15703.mail.cnb.yahoo.com>

Emails from antlr mailing list come with only sender's email address, so sometimes I feedback
directly to the sender without replacinging sender's with antlr-interest@antlr.org. Could the
system make the sender's address secondary/optional, and the list's address as sender's address? I
think thus better.

Robert

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From jbb at acm.org  Fri Jun  2 14:36:31 2006
From: jbb at acm.org (John B. Brodie)
Date: Fri Jun  2 14:36:38 2006
Subject: [antlr-interest] to recognise interger and real in one rule
In-Reply-To: <20060602202945.72393.qmail@web15702.mail.cnb.yahoo.com>
	(sunjigang1965@yahoo.com.cn)
References: <20060602202945.72393.qmail@web15702.mail.cnb.yahoo.com>
Message-ID: <E1FmHJn-0004FT-00@gecko>

>In lexer grammar, I try to recognise interger and real in one rule, 
>
>BasicValue: ( Sign)? (Digit)+ {$setType(IntDenot);} ( '.' (Digit)+ (Exponent)?
>{$setType(RealDenot);})? ;
>
>protected Exponent : 'E' (Sign)? (Digit)+ ;
>
>
>In parser grammar, put
>
>basicValue :BaiscValue EOF;
>
>when parsing  "78.9", produces error message: 
>
>line 1:2: expecting "BaiscValue", found '78.9'.
>
>Further more I wish, with action {$setType(IntDenot);} and {$setType(RealDenot);} in lexical
>grammar, the token type BasicValue is redundant. 

Using the $setType(...) action changes the kind of token returned by the
lexer.  Thus your parser rule should be:

basicValue : ( IntDenot | RealDenot ) EOF ;


And yes, the token BasicValue is redundant (unless you have other lexing
rules that match that token type).

You could simply have this lexer rule:

IntDenot : ( Sign )? ( Digit )+
      ( '.' ( Digit )+ ( Exponent )? { $setType(RealDenot); } )?
    ;

Thus numbers are assumed to be integers unless a fractional part is present,
no need for BasicValue.

Hope this helps...
   -jbb
From parrt at cs.usfca.edu  Fri Jun  2 15:41:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  2 15:42:45 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
Message-ID: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>

I have to laugh...Java is really showing growing pains.  I cannot  
allocate even small static arrays because it requires 6 bytes of code  
for each byte I want to put into a static array.  Yes, Java makes a  
class init method that manually builds these arrays!  At least it  
doesn't seem to wipe to zero first (or does it!? ack)  ;)

See http://www.jroller.com/page/rreyelts for a good explanation.  See  
March 16th entry.

public class T {
         static short[] a = {10, 20};
}

generates:

static {};
   Code:
    0:   iconst_2
    1:   newarray short
    3:   dup
    4:   iconst_0
    5:   bipush  10 <- YIKES!
    7:   sastore
    8:   dup
    9:   iconst_1
    10:  bipush  20
    12:  sastore
    13:  putstatic       #2; //Field a:[S
    16:  return

Same thing, but in ctor when nonstatic. :(

So, what the HELL are we going to do in order to store transition  
tables for DFA in Java?  Load the data from the disk?  gawwwd!   
Seriously?  How can you load static data into a Java class?

Regarding all that extra code laying around, one comment on that page  
says:

"So the obvious answer is to put the initializer into a separate  
class, and to always create a new ClassLoader to load that class, and  
let the ClassLoader and class code be garbage-collected after you've  
created your initial instance of the array which you can then clone()  
at will. "

But that doesn't solve the issue that you still have to get it to FIT  
into a single class.

AH HA!  Just looked at JFLex..they store them as strings, which are  
UTF8 in the class file.

public class T {
         static final String duh = "\1\2\3";
}

generates everything directly in the classfile constant pool!   
Hooray!  Now I have to encode, decode, but it's doable!  Thanks, JFlex!

Ter
From kroepke at dolphin-services.de  Fri Jun  2 18:16:54 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri Jun  2 18:17:04 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
In-Reply-To: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>
References: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>
Message-ID: <37D2174B-E180-4A3E-B53F-E30D528A71B1@dolphin-services.de>


On 3. Jun 2006, at 0:41 Uhr, Terence Parr wrote:

>    5:   bipush  10 <- YIKES!

Please tell me that my calender is broken, and today is in fact April  
Fool's. That worse than Perl! (Well, no it isn't, but it comes close...)

/me shakes (own) head.
From dragonoe at mcmaster.ca  Fri Jun  2 18:44:03 2006
From: dragonoe at mcmaster.ca (O.E. Dragon)
Date: Fri Jun  2 18:44:06 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
In-Reply-To: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>
Message-ID: <web-128218200@cgpsrv2.cis.mcmaster.ca>

On Fri, 2 Jun 2006 15:41:59 -0700
 Terence Parr <parrt@cs.usfca.edu> wrote:
> But that doesn't solve the issue that you still have to get it to FIT
>  into a single class.

So your static array won't fit into a single class? I'm confused...

> AH HA!  Just looked at JFLex..they store them as strings, which are
>  UTF8 in the class file.
> 
> public class T {
>          static final String duh = "\1\2\3";
> }
> 
> generates everything directly in the classfile constant pool!
>   Hooray!  Now I have to encode, decode, but it's doable!  Thanks,
> JFlex!

And this is faster...? I'm not clear on what you're looking for.

What if you do

   static short[] array = new array[2];
   array[0] = 10;
   array[1] = 20;

Or what if you don't make the array static? I mean this is all
generated by the codegen no? It's not pretty to look at but at least
you don't have to type it everytime.

-Olivier
From parrt at cs.usfca.edu  Fri Jun  2 18:48:03 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  2 18:48:46 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
In-Reply-To: <web-128218200@cgpsrv2.cis.mcmaster.ca>
References: <web-128218200@cgpsrv2.cis.mcmaster.ca>
Message-ID: <53155ABC-AED8-464A-BF5A-0E22C077E42E@cs.usfca.edu>


On Jun 2, 2006, at 6:44 PM, O.E. Dragon wrote:

> On Fri, 2 Jun 2006 15:41:59 -0700
>  Terence Parr <parrt@cs.usfca.edu> wrote:
>> But that doesn't solve the issue that you still have to get it to FIT
>>  into a single class.
>
> So your static array won't fit into a single class? I'm confused...

Nope...bloats the constant pool and the code blocks.

> And this is faster...? I'm not clear on what you're looking for.

No but makes it possible.

> What if you do
>
>    static short[] array = new array[2];
>    array[0] = 10;
>    array[1] = 20;

Quickly count in your head how many bytecodes per a[0]=10.  You'll  
see that it's many bytes for each int you want to store.  How big can  
a method be?  64k.  That doesn't leave much room for lots of state  
tables.

> Or what if you don't make the array static?

no diff.

> I mean this is all
> generated by the codegen no? It's not pretty to look at but at least
> you don't have to type it everytime.

won't compile.  Look carefully at the example in my email (and the  
link if still unclear).

Ter

From rodrigobamboo at gmail.com  Fri Jun  2 21:14:59 2006
From: rodrigobamboo at gmail.com (Rodrigo B. de Oliveira)
Date: Fri Jun  2 21:15:03 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
In-Reply-To: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>
References: <9F2FBE64-21E9-4C53-89FA-26B923AB4C76@cs.usfca.edu>
Message-ID: <5917478b0606022114k4bb8d212w9b0e8a41f97e0d57@mail.gmail.com>

On 6/2/06, Terence Parr <parrt@cs.usfca.edu> wrote:
> I have to laugh...Java is really showing growing pains.  I cannot
> allocate even small static arrays because it requires 6 bytes of code
> for each byte I want to put into a static array.  Yes, Java makes a
> class init method that manually builds these arrays!

I can empathize with that :)

> ...
> So, what the HELL are we going to do in order to store transition
> tables for DFA in Java?  Load the data from the disk?  gawwwd!
> Seriously?  How can you load static data into a Java class?
>

If I understood you correctly you should be able to split the
initialization through different methods:

    static {
           init_dfa_0();
           init_dfa_1();
           init_dfa_2();
           ....
     }
     static void init_dfa_0() { _dfa = new int[42*1024]; }
     static void init_dfa_1() {
           _dfa[0] = 0xF00;
           ...
     }
    ....

It sucks but you know, whatever gets you through the night... :)

-- 
bamboo
*** See you at the first global db4o User Conference in London, July
10 and 11, 2006 ***
http://www.db4o.com/about/productinformation/events/duc2006/
From stanio at myrealbox.com  Sat Jun  3 00:01:43 2006
From: stanio at myrealbox.com (Stanimir Stamenkov)
Date: Sat Jun  3 00:01:52 2006
Subject: [antlr-interest] Suggestion to the list
In-Reply-To: <20060602204744.23391.qmail@web15703.mail.cnb.yahoo.com>
References: <20060602204744.23391.qmail@web15703.mail.cnb.yahoo.com>
Message-ID: <448133D7.6010209@myrealbox.com>

/Ëï¼Í¸Õ Jigang (Robert) Sun/:

> Emails from antlr mailing list come with only sender's email 
> address, so sometimes I feedback directly to the sender without 
> replacinging sender's with antlr-interest@antlr.org. Could the 
> system make the sender's address secondary/optional, and the 
> list's address as sender's address? I think thus better.

I think it is not good to change any of the original headers,
however I don't think there's problem to add new headers. The
mailing list system adds some mailing list specific headers (as per
RFC 2369 [1]) and I see them in my mail client [2] (though my mail
client is not aware of the purpose of these headers and doesn't
reply to the mailing list by default), and I've seen on some mailing
lists a 'Reply-To' header added (if it is not already specified by
the sender) pointing to the mailing list address, which helps in
this situation.

[1] http://www.ietf.org/rfc/rfc2369.txt
[2] http://www.geocities.com/stanio/temp/mailing_list_headers.png

-- 
Stanimir
From sunjigang1965 at yahoo.com.cn  Sat Jun  3 10:33:05 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Sat Jun  3 10:33:13 2006
Subject: [antlr-interest] token construction priority
Message-ID: <20060603173306.27539.qmail@web15703.mail.cnb.yahoo.com>

I want  -23.5E3 to be parsed as real value, 

paser rule is

realDenot: (sign)? INTEGER  DOT INTEGER (exponent)? ;
exponent : E (Sign)? INTEGER;
sign: PLUS | MINUS;

in lexer, I put 

options {
	  testLiterals=true; 
	}				
tokens
{	
    MINUS="-"; //I assume MINUS has the precedence of keywords 
}

ID3: Class1Char ( RestChar)* ;

protected Class1Char : ...| '-' |... ;
protected RestChar : LowerCaseChar | Class1Char | Digit| UpperCaseChar;
INTEGER:(Digit)+; //Digit: '0'..'9'

The result is that -23.5E3 is recongnised as ID3, I wish by setting "testLiterals=true; ", the
first char '-' should be considered as MINUS, but it is not the case.

Although setting nongreedy to ID3 works,

ID3: Class1Char (options {greedy=false;}: RestChar)* ;

I do not think this is the best solution.

Could anyone give me an idea?

Thanks.

Robert

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From open.zone at virgin.net  Sat Jun  3 14:30:25 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat Jun  3 14:12:44 2006
Subject: [antlr-interest] token construction priority
In-Reply-To: <20060603173306.27539.qmail@web15703.mail.cnb.yahoo.com>
Message-ID: <001801c68754$eec09940$c704a8c0@hercules>

> -----Original Message-----
> I want  -23.5E3 to be parsed as real value, 

<SNIP>

> Could anyone give me an idea?
> 
> Thanks.
> 
> Robert

See the lexer in the csharp_v1 example. It's a little complex but, it does
what you want.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From coxbrian at msu.edu  Sun Jun  4 08:24:06 2006
From: coxbrian at msu.edu (Brian Cox)
Date: Sun Jun  4 08:23:59 2006
Subject: [antlr-interest] Problems w/ tokenVocab in 3ea10
Message-ID: <4482FB16.6070809@msu.edu>

I'm trying to import a set of common tokens between languages using the 
tokenVocab option, but I'm receiving errors from ANTLR when I try this. 
Oddly enough, it appears as if the tokens are being properly imported 
anyway.  Here's the output I get from ANTLR:

-----
% java org.antlr.Tool etl.g
ANTLR Parser Generator   Early Access Version 3.0ea10 (June 2, 2006) 
1989-2006
problem reading token vocabulary file Common.tokens: 
java.lang.NullPointerException
org.antlr.tool.Grammar.importTokenVocabulary(Grammar.java:1528)
org.antlr.tool.AssignTokenTypesWalker.option(AssignTokenTypesWalker.java:660)
org.antlr.tool.AssignTokenTypesWalker.optionsSpec(AssignTokenTypesWalker.java:522)
org.antlr.tool.AssignTokenTypesWalker.grammarSpec(AssignTokenTypesWalker.java:429)
org.antlr.tool.AssignTokenTypesWalker.grammar(AssignTokenTypesWalker.java:328)
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:461)
org.antlr.Tool.process(Tool.java:254)
org.antlr.Tool.main(Tool.java:72)
-----

Here's the relevant portion of etl.g:

-----
grammar Etl;

options {
         output=AST;
         superClass='net.sf.confection.parsers.AbstractParser';
         tokenVocab='Common';
}

tokens {
     IMPORT_FUNCTION_CLAUSE;
     SINGLE_IDENTIFIER_OR_INDEXED_COMPONENT;
}
-----

Here's all of common.g:

-----
grammar Common;

tokens {
     ARGUMENT_DEFINITION;
     ARGUMENT_LIST;
     BLOCK;
     FUNCTION_DEFINITION;
     FUNCTION_DECLARATION;
     FUNCTION_HEADER;
     TYPE_DECLARATION;
     VARIABLE_DECLARATION;
}

start : ;
-----

.... which produces this Common.tokens:

-----
VARIABLE_DECLARATION=11
BLOCK=6
TYPE_DECLARATION=10
FUNCTION_DEFINITION=7
FUNCTION_HEADER=9
FUNCTION_DECLARATION=8
ARGUMENT_LIST=5
ARGUMENT_DEFINITION=4
-----

Now, despite the error messages I get when trying to process etl.g, the 
tokens from Common are being imported anyway as can be seen from this 
small snippet of Etl.tokens:

-----
LESS_THAN=24
FUNCTION_DEFINITION=7
BLOCK=6
VARIABLE_DECLARATION=11
EQUALS=23
-----

Likewise, it appears that everything is as it should be in the Etl.java 
and EtlLexer.java sources.

Is the error something to worry about (such as there possibly being 
something missing from Etl's output that I'm not seeing) or should I 
ignore the error and assume everything's okay?

- Brian

From parrt at cs.usfca.edu  Sun Jun  4 09:33:42 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun  4 09:33:45 2006
Subject: [antlr-interest] Problems w/ tokenVocab in 3ea10
In-Reply-To: <4482FB16.6070809@msu.edu>
References: <4482FB16.6070809@msu.edu>
Message-ID: <E791BA9C-4C85-4755-BB7C-3652C3634097@cs.usfca.edu>

Hi.  Try just AbstractParser and use -lib or whatever the option is  
to point it at right dir. :)
Ter

On Jun 4, 2006, at 8:24 AM, Brian Cox wrote:

> I'm trying to import a set of common tokens between languages using  
> the tokenVocab option, but I'm receiving errors from ANTLR when I  
> try this. Oddly enough, it appears as if the tokens are being  
> properly imported anyway.  Here's the output I get from ANTLR:

[snip]

> options {
>         output=AST;
>         superClass='net.sf.confection.parsers.AbstractParser';
>         tokenVocab='Common';
> }
>
> tokens {
>     IMPORT_FUNCTION_CLAUSE;
>     SINGLE_IDENTIFIER_OR_INDEXED_COMPONENT;
> }
> -----

Ter
From parrt at cs.usfca.edu  Sun Jun  4 12:51:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun  4 12:52:04 2006
Subject: [antlr-interest] pleasant new table-based DFA speed
Message-ID: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>

Howdy,

Current DFAs are implemented as one object per state and virtual  
method calls are used to transition from 1 state to another.  New  
implementation uses one object per DFA and does array lookups to  
move.  The new DFA are much smaller and it turns out much faster.

Parsing time (no tree construction) for Java 1.4.2 source with 16.8M  
of code (as measured by System.currentTimeInMillis averaged over 3  
attempts after one throwaway to get into mem cache).

Old DFA: 3619.00ms
Both old and new DFA: 4123.66ms
New DFA: 3036.00ms

That implies that we get about both-old = 4123.66 - 3619=505ms cost  
for DFA simulation when parsing Java using new DFA and both-new =  
1088ms for using old DFA.  The ms counter in Java is not very  
accurate, but it looks like we save almost 600ms using new DFA.  That  
is 83% of old cost to parse.  Not bad.  The wallclock shows an  
overall drop from an average of 4.29s to 3.57, again about a 17%  
savings.

Not bad...almost done with them; gotta do the predicated "special"  
states.

Wow.  Parsing is really moving now.  3.57s to parse all of that text  
is pretty nice. :)  v3 Lexing speed is like 5x v2 speed.

Ter
From mail at martin-probst.com  Sun Jun  4 13:35:36 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun Jun  4 13:35:43 2006
Subject: [antlr-interest] pleasant new table-based DFA speed
In-Reply-To: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>
References: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>
Message-ID: <7A616DE2-2FF6-4D3F-9DEB-3B6C9C65ED07@martin-probst.com>

Hi,

that sounds very promising. What are the overall savings, or are you  
still optimizing parts of that?

Regards,
Martin
From vidar at hawkis.com  Sun Jun  4 13:37:39 2006
From: vidar at hawkis.com (Vidar =?iso-8859-1?q?H=E5kestad?=)
Date: Sun Jun  4 13:37:43 2006
Subject: [antlr-interest] pleasant new table-based DFA speed
In-Reply-To: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>
References: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>
Message-ID: <200606042237.39414.vidar@hawkis.com>


> 1088ms for using old DFA.  The ms counter in Java is not very
> accurate, but it looks like we save almost 600ms using new DFA.  That

This will depend on what OS you are running. 

See for example http://www.hawkis.com/pages/hawkistools/uid/thetime.jsp (links 
at the bottom) for some info. It seems that Linux and Windows have quite 
different updates of their wall clocks.

Best way would probably be to use some native code to get exact timings.

regards
hawkis

From parrt at cs.usfca.edu  Sun Jun  4 13:40:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun  4 13:40:58 2006
Subject: [antlr-interest] pleasant new table-based DFA speed
In-Reply-To: <7A616DE2-2FF6-4D3F-9DEB-3B6C9C65ED07@martin-probst.com>
References: <7F14D6F3-FB7B-46C1-8971-6313BF216E7F@cs.usfca.edu>
	<7A616DE2-2FF6-4D3F-9DEB-3B6C9C65ED07@martin-probst.com>
Message-ID: <CC23425A-6472-4190-A0CE-9490684988CB@cs.usfca.edu>


On Jun 4, 2006, at 1:35 PM, Martin Probst wrote:

> Hi,
>
> that sounds very promising. What are the overall savings, or are  
> you still optimizing parts of that?

Hi Martin,

Well, it's pretty good.  The wallclock shows an overall drop from an  
average of 4.29s to 3.57; about a 17% savings.

Just working on the DFA to drop the 1.9M of class files really ;)   
Just happens to be faster too :)

Ter


From parrt at cs.usfca.edu  Sun Jun  4 14:03:58 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun  4 14:04:34 2006
Subject: [antlr-interest] classloading time for old DFA
Message-ID: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>

Hi,

Looks like loading that 1.9M of class files takes about 500ms of that  
600ms discrepancy between old and new.  So, once loaded, the old DFA  
aren't that much slower.

Ter
From navinksinha at lycos.com  Sun Jun  4 16:52:40 2006
From: navinksinha at lycos.com (Navin Sinha)
Date: Sun Jun  4 16:52:48 2006
Subject: [antlr-interest] Java To C compiler
Message-ID: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>

Hi,
Another wonderful product - thanx to the power of ANTLR.

ReInvent Software Solutions has developed a Java to C compiler that produces very small C footprints - as if the application was originally written in C. We have accomplished this using the techniques of Intentional Compilation that we have pioneered. Write to us to request a white paper at technologies@reinventsoft.com

Visit http://reinventsoft.com/intentionalcompilation.html for more information


Regards,
Navin

Navin Sinha,
ReInvent Software Solutions
http://www.reinventsoft.com

navin.sinha@reinventsoft.com


-- 
_______________________________________________

Search for businesses by name, location, or phone number.  -Lycos Yellow Pages

http://r.lycos.com/r/yp_emailfooter/http://yellowpages.lycos.com/default.asp?SRC=lycos10

From sohail at taggedtype.net  Sun Jun  4 17:01:58 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jun  4 17:02:07 2006
Subject: [antlr-interest] Java To C compiler
In-Reply-To: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>
References: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>
Message-ID: <1149465718.6679.1.camel@localhost.localdomain>

On Sun, 2006-06-04 at 15:52 -0800, Navin Sinha wrote:
> Hi,
> Another wonderful product - thanx to the power of ANTLR.
> 
> ReInvent Software Solutions has developed a Java to C compiler that produces very small C footprints - as if the application was originally written in C. We have accomplished this using the techniques of Intentional Compilation that we have pioneered. Write to us to request a white paper at technologies@reinventsoft.com
> 
> Visit http://reinventsoft.com/intentionalcompilation.html for more information

That sounds interesting, what is the white paper about?

Sohail

From mranga at nist.gov  Sun Jun  4 18:33:17 2006
From: mranga at nist.gov (M. Rangnathan)
Date: Sun Jun  4 18:33:26 2006
Subject: [antlr-interest] Java To C compiler
In-Reply-To: <1149465718.6679.1.camel@localhost.localdomain>
References: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>
	<1149465718.6679.1.camel@localhost.localdomain>
Message-ID: <448389DD.3000807@nist.gov>

Hmm ....  from the web page  " capture the Intention present in the 
source language. " 

Sounds a bit like the famous Turing halting problem. :-)

What do you do about the java.util and java.lang.reflect package?  What 
is your most ambitious translation project to date?

Ranga

Sohail Somani wrote:

>On Sun, 2006-06-04 at 15:52 -0800, Navin Sinha wrote:
>  
>
>>Hi,
>>Another wonderful product - thanx to the power of ANTLR.
>>
>>ReInvent Software Solutions has developed a Java to C compiler that produces very small C footprints - as if the application was originally written in C. We have accomplished this using the techniques of Intentional Compilation that we have pioneered. Write to us to request a white paper at technologies@reinventsoft.com
>>
>>Visit http://reinventsoft.com/intentionalcompilation.html for more information
>>    
>>
>
>That sounds interesting, what is the white paper about?
>
>Sohail
>
>
>
>  
>


-- 
M. Ranganathan 

Advanced Networking Technologies Division,
National Institute of Standards and Technology (NIST),
100 Bureau Drive, Stop 8920, Gaithersburg, MD 20899. 
Advanced Networking Technologies For the People!  


From sohail at taggedtype.net  Sun Jun  4 19:41:57 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jun  4 19:42:02 2006
Subject: [antlr-interest] Java To C compiler
In-Reply-To: <448389DD.3000807@nist.gov>
References: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>
	<1149465718.6679.1.camel@localhost.localdomain>
	<448389DD.3000807@nist.gov>
Message-ID: <1149475317.7425.2.camel@localhost.localdomain>

I'm sure java.util is pretty straightforward. As for reflect, you could
probably emulate read-only reflection pretty easily.

If I want easy reflection though I use python :)

On Sun, 2006-06-04 at 21:33 -0400, M. Rangnathan wrote:
> Hmm ....  from the web page  " capture the Intention present in the 
> source language. " 
> 
> Sounds a bit like the famous Turing halting problem. :-)
> 
> What do you do about the java.util and java.lang.reflect package?  What 
> is your most ambitious translation project to date?
> 
> Ranga
> 
> Sohail Somani wrote:
> 
> >On Sun, 2006-06-04 at 15:52 -0800, Navin Sinha wrote:
> >  
> >
> >>Hi,
> >>Another wonderful product - thanx to the power of ANTLR.
> >>
> >>ReInvent Software Solutions has developed a Java to C compiler that produces very small C footprints - as if the application was originally written in C. We have accomplished this using the techniques of Intentional Compilation that we have pioneered. Write to us to request a white paper at technologies@reinventsoft.com
> >>
> >>Visit http://reinventsoft.com/intentionalcompilation.html for more information
> >>    
> >>
> >
> >That sounds interesting, what is the white paper about?
> >
> >Sohail
> >
> >
> >
> >  
> >
> 
> 

From mranga at nist.gov  Sun Jun  4 22:38:57 2006
From: mranga at nist.gov (M. Rangnathan)
Date: Sun Jun  4 22:39:05 2006
Subject: [antlr-interest] Java To C compiler
In-Reply-To: <1149475317.7425.2.camel@localhost.localdomain>
References: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>	
	<1149465718.6679.1.camel@localhost.localdomain>
	<448389DD.3000807@nist.gov>
	<1149475317.7425.2.camel@localhost.localdomain>
Message-ID: <4483C371.9010806@nist.gov>

Are you really sure java.util is straightforward?  Unfortunately, 
reflection turns out to be widely used in java programs. For your 
solution to be attractive (to me anyway) you have to work out a total 
solution (that includes all the functions of  the jvm) and then you may 
find you are replicating the java virtual machine in c++  :-) oops. What 
actually makes java powerful (at least for me) is precisely things like 
reflection and classloading.  Things like garbage collection are 
conveniant but not really essential. A good c++ heap checker and new and 
delete work fine. Indeed gc is a hindrance to real time Java.  Java's 
power is all in the runtime. Not in syntactic structures.

 How does your translator deal with classloading? What has been your 
most ambitious translation project to date ? How many java loc, what 
does the program do and how do you verify correctness?

Ranga

Sohail Somani wrote:

>I'm sure java.util is pretty straightforward. As for reflect, you could
>probably emulate read-only reflection pretty easily.
>
>If I want easy reflection though I use python :)
>
>On Sun, 2006-06-04 at 21:33 -0400, M. Rangnathan wrote:
>  
>
>>Hmm ....  from the web page  " capture the Intention present in the 
>>source language. " 
>>
>>Sounds a bit like the famous Turing halting problem. :-)
>>
>>What do you do about the java.util and java.lang.reflect package?  What 
>>is your most ambitious translation project to date?
>>
>>Ranga
>>
>>Sohail Somani wrote:
>>
>>    
>>
>>>On Sun, 2006-06-04 at 15:52 -0800, Navin Sinha wrote:
>>> 
>>>
>>>      
>>>
>>>>Hi,
>>>>Another wonderful product - thanx to the power of ANTLR.
>>>>
>>>>ReInvent Software Solutions has developed a Java to C compiler that produces very small C footprints - as if the application was originally written in C. We have accomplished this using the techniques of Intentional Compilation that we have pioneered. Write to us to request a white paper at technologies@reinventsoft.com
>>>>
>>>>Visit http://reinventsoft.com/intentionalcompilation.html for more information
>>>>   
>>>>
>>>>        
>>>>
>>>That sounds interesting, what is the white paper about?
>>>
>>>Sohail
>>>
>>>
>>>
>>> 
>>>
>>>      
>>>
>>    
>>
>
>
>
>  
>


-- 
M. Ranganathan 

Advanced Networking Technologies Division,
National Institute of Standards and Technology (NIST),
100 Bureau Drive, Stop 8920, Gaithersburg, MD 20899. 
tel:301 975 3664 , fax:301 590 0932 http://w3.antd.nist.gov/
Advanced Networking Technologies For the People!  


From sohail at taggedtype.net  Sun Jun  4 23:17:28 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jun  4 23:17:35 2006
Subject: [antlr-interest] Java To C compiler
In-Reply-To: <4483C371.9010806@nist.gov>
References: <20060604235240.D03F93384B@ws7-3.us4.outblaze.com>
	<1149465718.6679.1.camel@localhost.localdomain>
	<448389DD.3000807@nist.gov>
	<1149475317.7425.2.camel@localhost.localdomain>
	<4483C371.9010806@nist.gov>
Message-ID: <1149488248.11463.3.camel@localhost.localdomain>

On Mon, 2006-06-05 at 01:38 -0400, M. Rangnathan wrote:
>  How does your translator deal with classloading? What has been your 
> most ambitious translation project to date ? How many java loc, what 
> does the program do and how do you verify correctness?

Its not my translator :)


From rebecca.chernoff at gmail.com  Mon Jun  5 01:29:02 2006
From: rebecca.chernoff at gmail.com (Rebecca Chernoff)
Date: Mon Jun  5 01:29:06 2006
Subject: [antlr-interest] Custom AST Nodes in v3
Message-ID: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>

I apologize if I've overlooked this.  I am trying to convert a v2 grammar to
v3.  I have my tokens section defined with custom AST nodes.

tokens {
  RULE<AST=CustomRule>;
  ...
}


I can't get this to work with v3; it just generates syntax errors.  Is this
functionality not support in v3 yet or has the syntax changed?

Thanks~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060605/2c3ede30/attachment-0001.html
From kroepke at dolphin-services.de  Mon Jun  5 02:20:47 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Mon Jun  5 02:20:54 2006
Subject: [antlr-interest] Custom AST Nodes in v3
In-Reply-To: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>
References: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>
Message-ID: <FC4EA849-188B-454F-91DE-C94DE8EE2B46@dolphin-services.de>


On 5. Jun 2006, at 10:29 Uhr, Rebecca Chernoff wrote:

>  Is this
> functionality not support in v3 yet or has the syntax changed?

I "think" (judging from a quick look over the sources) that this is  
not in yet. I hope it will come
back, as it was pretty useful, but v3 isn't quite there yet.

What do you say, Ter?

HTH,

-k
From mail at martin-probst.com  Mon Jun  5 02:33:02 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon Jun  5 02:33:07 2006
Subject: [antlr-interest] classloading time for old DFA
In-Reply-To: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>
References: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>
Message-ID: <1BD6F6B0-37ED-4C37-B68A-67F0A6EDF57E@martin-probst.com>

Hi,

> Looks like loading that 1.9M of class files takes about 500ms of  
> that 600ms discrepancy between old and new.  So, once loaded, the  
> old DFA aren't that much slower.

I think you should still go with the new system - that's a lot less  
code to optimize for the JIT, a lot less class files, a lot less GC  
on those files.

Martin
From sunjigang1965 at yahoo.com.cn  Mon Jun  5 03:01:08 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Mon Jun  5 03:01:13 2006
Subject: [antlr-interest] It is there but reported not there
Message-ID: <20060605100108.54589.qmail@web15705.mail.cnb.yahoo.com>

Please have a look at the attached picture. The fact is that TokenBuffer.cs is in my solution. I
deleted antlr.runtime from my solution and then added it again, the problem is still there. I do
not know why.

Robert 

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TokenBuffer.bmp
Type: image/bmp
Size: 32318 bytes
Desc: 3165408670-TokenBuffer.bmp
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060605/81adfa1a/TokenBuffer-0001.bmp
From sunjigang1965 at yahoo.com.cn  Mon Jun  5 04:16:25 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Mon Jun  5 04:16:33 2006
Subject: [antlr-interest] non-existed char met
Message-ID: <20060605111625.15876.qmail@web15707.mail.cnb.yahoo.com>

With parser rule
 
    symbolId:( FunnyID) EOF;

and lexer rule

OP: ( '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | '/' | '='| '<' | '>' | '_' | '.'| '`' |  
'\''|'\"'){$setType(FunnyID);} ;

DenotOrFunnyID: (('+'|'-') {$setType(FunnyID);})? NUM{$setType(IntDenot);} ( '.' NUM ( 'E'
('+'|'-')?    NUM)? {$setType(RealDenot);})?;

protected NUM:(Digit)+;

I put only one char in source file, '*' could be parsed normally, but when I replaced it with '-',
after a windows popped described in my previuos email, the attached picture popped up. I swear
there is only one character in source file. I expect both '*' and '-' are recognised as FunnyID. 

Robert

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TokenBuffer.JPG
Type: image/jpeg
Size: 27565 bytes
Desc: 2611848339-TokenBuffer.JPG
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060605/1fb987c1/TokenBuffer-0001.jpe
From Anthony.Youngman at eca-international.com  Mon Jun  5 07:54:56 2006
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Mon Jun  5 07:55:16 2006
Subject: [antlr-interest] Suggestion to the list
Message-ID: <C7FE35004D40FD45AA342991B88CE4040129029E@lnml1.eca-international.local>

The problem with "reply to", imho, is that for certain mailers (Outlook in =
particular) it makes it impossible to reply to the sender. This header over=
rides ALL the reply options :-(

Incidentally, the way the list does it now is the recommended rfc way to do=
 things - the original sender is the sender. Whatever you do, it's a bit of=
 a pain, and I'd much rather things were left as they are.

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr=
.org] On Behalf Of Stanimir Stamenkov
Sent: 03 June 2006 08:02
To: ANTLR Interest
Subject: Re: [antlr-interest] Suggestion to the list

/=CB=EF=BC=CD=B8=D5 Jigang (Robert) Sun/:

> Emails from antlr mailing list come with only sender's email=20
> address, so sometimes I feedback directly to the sender without=20
> replacinging sender's with antlr-interest@antlr.org. Could the=20
> system make the sender's address secondary/optional, and the=20
> list's address as sender's address? I think thus better.

I think it is not good to change any of the original headers,
however I don't think there's problem to add new headers. The
mailing list system adds some mailing list specific headers (as per
RFC 2369 [1]) and I see them in my mail client [2] (though my mail
client is not aware of the purpose of these headers and doesn't
reply to the mailing list by default), and I've seen on some mailing
lists a 'Reply-To' header added (if it is not already specified by
the sender) pointing to the mailing list address, which helps in
this situation.

[1] http://www.ietf.org/rfc/rfc2369.txt
[2] http://www.geocities.com/stanio/temp/mailing_list_headers.png

--=20
Stanimir

* ************************************************************************ *

This transmission is intended for the named recipient only. It may contain =
private and confidential information. If this has come to you in error you =
must not act on anything disclosed in it, nor must you copy it, modify it, =
disseminate it in any way, or show it to anyone. Please e-mail the sender t=
o inform us of the transmission error or telephone ECA International immedi=
ately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5=
300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 =
212 582 2333.

* ************************************************************************ *
From jbb at acm.org  Mon Jun  5 08:42:10 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon Jun  5 08:42:15 2006
Subject: [antlr-interest] non-existed char met
In-Reply-To: <20060605111625.15876.qmail@web15707.mail.cnb.yahoo.com>
	(sunjigang1965@yahoo.com.cn)
References: <20060605111625.15876.qmail@web15707.mail.cnb.yahoo.com>
Message-ID: <E1FnHDW-0005aG-00@gecko>

>DenotOrFunnyID: (('+'|'-') {$setType(FunnyID);})? NUM{$setType(IntDenot);} ( '.' NUM ( 'E' 
..................................................^^^^^ // NUM not optional!
>('+'|'-')?    NUM)? {$setType(RealDenot);})?;

So any '+' or '-' MUST be followed by a NUM.

Your input of just a single '-' is therefore illegal under this rule.

I think the pop up was trying to tell you that it found an EOF when it
was expecting a Digit... 

Note that if you make the NUM above optional, then you would have a
lexer rule that could match the empty input and that would be a Bad
Thing.

Hope this helps...
   -jbb
From parrt at cs.usfca.edu  Mon Jun  5 11:53:53 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 11:54:26 2006
Subject: [antlr-interest] Custom AST Nodes in v3
In-Reply-To: <FC4EA849-188B-454F-91DE-C94DE8EE2B46@dolphin-services.de>
References: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>
	<FC4EA849-188B-454F-91DE-C94DE8EE2B46@dolphin-services.de>
Message-ID: <77FDB8E2-9CA3-488C-A030-CD72C77BFC26@cs.usfca.edu>


On Jun 5, 2006, at 2:20 AM, Kay Roepke wrote:

>
> On 5. Jun 2006, at 10:29 Uhr, Rebecca Chernoff wrote:
>
>>  Is this
>> functionality not support in v3 yet or has the syntax changed?
>
> I "think" (judging from a quick look over the sources) that this is  
> not in yet. I hope it will come
> back, as it was pretty useful, but v3 isn't quite there yet.
>
> What do you say, Ter?

I've not thought about heterogeneous trees yet.  Seems a useful thing  
to have.  Will require some thought after 1.0beta :)

Ter

From parrt at cs.usfca.edu  Mon Jun  5 11:55:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 11:55:56 2006
Subject: [antlr-interest] classloading time for old DFA
In-Reply-To: <1BD6F6B0-37ED-4C37-B68A-67F0A6EDF57E@martin-probst.com>
References: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>
	<1BD6F6B0-37ED-4C37-B68A-67F0A6EDF57E@martin-probst.com>
Message-ID: <F5172047-9B7C-4C6E-B295-A389219DFEA3@cs.usfca.edu>


On Jun 5, 2006, at 2:33 AM, Martin Probst wrote:

> Hi,
>
>> Looks like loading that 1.9M of class files takes about 500ms of  
>> that 600ms discrepancy between old and new.  So, once loaded, the  
>> old DFA aren't that much slower.
>
> I think you should still go with the new system - that's a lot less  
> code to optimize for the JIT, a lot less class files, a lot less GC  
> on those files.

Definitely.  No going back now ;)

Further, I'm thinking of doing this for even the acyclic DFA so we  
have one mechanism in code gen and in resulting parsers...so even LL 
(2) decisions will result in a little DFA (but not an object).  LL(1)  
decisions should be a switch, but I'm not sure exactly how to make  
that happen easily.

Ter

From dragonoe at mcmaster.ca  Mon Jun  5 12:19:12 2006
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Mon Jun  5 12:11:44 2006
Subject: [antlr-interest] Java and static arrays: a serious joke
In-Reply-To: <53155ABC-AED8-464A-BF5A-0E22C077E42E@cs.usfca.edu>
References: <web-128218200@cgpsrv2.cis.mcmaster.ca>
	<53155ABC-AED8-464A-BF5A-0E22C077E42E@cs.usfca.edu>
Message-ID: <20060605191912.GA30769@dragon.homelinux.org>

On Fri, Jun 02, 2006 at 06:48:03PM -0700, Terence Parr wrote:
> Quickly count in your head how many bytecodes per a[0]=10.  You'll  
> see that it's many bytes for each int you want to store.  How big can  
> a method be?  64k.  That doesn't leave much room for lots of state  
> tables.
> ...
> won't compile.  Look carefully at the example in my email (and the  
> link if still unclear).

Ah :) I did not know that! It puts the problem in perspective.

So I presume using enums for token types is out of the question. We're
still stuck in `int'-land. The enum maps appear to be nice and
relatively fast (backed by fixed size arrays) but probably would end up
being too big or too slow for the DFAs you're building.

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   ( dragon.homelinux.org  \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060605/b5f9c3a2/attachment.bin
From antlr at shmuelhome.mine.nu  Mon Jun  5 13:07:26 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon Jun  5 13:07:06 2006
Subject: [antlr-interest] classloading time for old DFA
In-Reply-To: <F5172047-9B7C-4C6E-B295-A389219DFEA3@cs.usfca.edu>
References: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>	<1BD6F6B0-37ED-4C37-B68A-67F0A6EDF57E@martin-probst.com>
	<F5172047-9B7C-4C6E-B295-A389219DFEA3@cs.usfca.edu>
Message-ID: <44848EFE.6080906@shmuelhome.mine.nu>

Terence Parr wrote:

> Further, I'm thinking of doing this for even the acyclic DFA so we have 
> one mechanism in code gen and in resulting parsers...so even LL(2) 
> decisions will result in a little DFA (but not an object).  LL(1) 
> decisions should be a switch, but I'm not sure exactly how to make that 
> happen easily.
> 
> Ter
> 

Am I being overly optimistic or does the above paragraph imply that we 
have done away with linear approximate look ahead?

shmuel


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.1/355 - Release Date: 6/2/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.1/355 - Release Date: 6/2/2006

From parrt at cs.usfca.edu  Mon Jun  5 13:12:06 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 13:12:39 2006
Subject: [antlr-interest] classloading time for old DFA
In-Reply-To: <44848EFE.6080906@shmuelhome.mine.nu>
References: <751ED9D4-364D-4330-858A-0A9940CFF464@cs.usfca.edu>	<1BD6F6B0-37ED-4C37-B68A-67F0A6EDF57E@martin-probst.com>
	<F5172047-9B7C-4C6E-B295-A389219DFEA3@cs.usfca.edu>
	<44848EFE.6080906@shmuelhome.mine.nu>
Message-ID: <FB253303-553B-4B96-A0F3-249DD7B61C94@cs.usfca.edu>


On Jun 5, 2006, at 1:07 PM, shmuel siegel wrote:

> Terence Parr wrote:
>
>> Further, I'm thinking of doing this for even the acyclic DFA so we  
>> have one mechanism in code gen and in resulting parsers...so even  
>> LL(2) decisions will result in a little DFA (but not an object).   
>> LL(1) decisions should be a switch, but I'm not sure exactly how  
>> to make that happen easily.
>> Ter
>
> Am I being overly optimistic or does the above paragraph imply that  
> we have done away with linear approximate look ahead?

It is long gone!  LL(*) is full LL(k) except that k can vary  
arbitrarily far ahead! :)  v3 should crush competition for years to  
come :)

Ter

From mail at martin-probst.com  Mon Jun  5 13:24:49 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon Jun  5 13:24:53 2006
Subject: [antlr-interest] Island grammars
Message-ID: <DDB77D39-F402-4330-B70E-978260697481@martin-probst.com>

Hi Terence,

is there any progress on the 'island grammars' feature? This would  
also crush lexer competition like JFlex :-)

Regards,
Martin
From parrt at cs.usfca.edu  Mon Jun  5 13:54:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 13:54:36 2006
Subject: [antlr-interest] Island grammars
In-Reply-To: <DDB77D39-F402-4330-B70E-978260697481@martin-probst.com>
References: <DDB77D39-F402-4330-B70E-978260697481@martin-probst.com>
Message-ID: <4F4D119F-7AD9-4515-82E2-BB46270CE6E0@cs.usfca.edu>


On Jun 5, 2006, at 1:24 PM, Martin Probst wrote:

> Hi Terence,
>
> is there any progress on the 'island grammars' feature? This would  
> also crush lexer competition like JFlex :-)

Well there is the example in examples-v3.  Remind me..were we talking  
about something in addition?

Thanks,
Ter

From parrt at cs.usfca.edu  Mon Jun  5 14:10:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 14:10:55 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
Message-ID: <7066053E-9712-4654-A18D-B71CA1EA8538@cs.usfca.edu>

Howdy,

As I rebuild the decisions for cyclic DFA, some simplifications  
present themselves.  These new DFA I'm generating are capable of  
handling all decisions, even the ones with predicates.  I wacked a  
few hundred lines of CyclicDFACodeGenerator.java and think that we  
should consider doing the same for ACyclicDFACodeGenerator that  
handles LL(k) decisions.  Right now there are 2 parallel mechanisms  
in the codegen logic and generated code for LL(k) and LL(*) decisions.

My argument would be that having a single codegen strategy is more  
robust, easier to understand, easier to port, and smaller.  The only  
concern would be that it might be a bit slower to do LL(1) decisions  
this way as I'd need a method call to get to the DFA simulation  
code.  OTOH, switches almost always amount to a binary search rather  
than the quick jump via a transition table.

Actually, their is another issue related to (..)? and (..)* blocks.   
For (..)? example, you don't want the DFA testing the lookahead for  
the bypass state.  It delays error detection but is more what people  
expect.  For (X)? people expect "if ( LA(1)==X ) match(X);" rather  
than having an else clause that tests to see if the lookahead is  
consistent with what follows (X)?  Hmmm...seems like I could just  
avoid generating an error msg for optional constructs.  I'll bet that  
would work.  cool.

ok.  Assume we can use the same mechanism for all decisions.  It  
still seems "wrong" to gen a separate DFA for (COMMA ID)*.  We would  
want:

while ( LA(1)== COMMA ) {
   match(COMMA);
   match(ID);
}

Perhaps I should special case only the blocks that are LL(1) and have  
a single alternative.

As for speed, it looks like a method call is not that bad.  Running  
the java parser on jdk 1.4.2 source, yields 4,762,276 decisions which  
would mean that many method calls.  Running a spin loop around a  
method call that is probably not inlined:

         public int count(int f) {
                 return f+1;
         }

yields the following speed in compiled mode:

/tmp $ java SpinCall 4762276
25ms

Naturally, this may perform differently in the actual java parser so  
I added an extra method call to this bogus method:

     int c = 0;
     int n = 0;
     public int foo(IntStream input) {
         return c++;
     }

to *every* decision in the parser.  Parsing/lexing went from 3082ms/ 
1341 to 3145/1400.  That is 3%/5% increase.  So, not that much cost  
for a big improvement in regularity.

Anybody want to comment?

Ter
From parrt at cs.usfca.edu  Mon Jun  5 14:34:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 14:34:35 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <7066053E-9712-4654-A18D-B71CA1EA8538@cs.usfca.edu>
References: <7066053E-9712-4654-A18D-B71CA1EA8538@cs.usfca.edu>
Message-ID: <1303ACF5-D605-40A1-BF76-91B822FC6E1A@cs.usfca.edu>

Followup...i just generated from java.g using all new-style DFA and  
the resulting code is just huge.  Too much overhead to uncompress and  
set up those DFA :(  I think we're better off doing inline DFA for  
fixed LL(k) decisions.  Oh well.  Worth the few hours of investigation.

Ter
From craymer at warpiv.com  Mon Jun  5 15:15:08 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun  5 15:15:13 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <1303ACF5-D605-40A1-BF76-91B822FC6E1A@cs.usfca.edu>
Message-ID: <002301c688ed$82469bd0$6402a8c0@Fafnir>

Ter--

Out of curiosity, what's the distribution of k values in representative
grammars?  It might be useful to be able to gather that statistic when
trying to optimize a grammar; in fact, it might be useful to get that on a
per-rule basis (eventually) and feed that to ANTLRWorks.  Also, we know from
experience that tree grammars have predominantly LL(1) decisions--especially
since up until ANTLR 3 tree grammars have been predicated-LL(1) of
necessity--and the same is probably true of most parser grammars.

Given the code bloat resulting from excessive DFAs, I rather think that not
only was the investigation worthwhile, but it also merits follow-up when
time is available.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Monday, June 05, 2006 2:34 PM
> To: ANTLR Interest; ANTLR-dev list
> Subject: Re: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
> 
> Followup...i just generated from java.g using all new-style DFA and
> the resulting code is just huge.  Too much overhead to uncompress and
> set up those DFA :(  I think we're better off doing inline DFA for
> fixed LL(k) decisions.  Oh well.  Worth the few hours of investigation.
> 
> Ter

From parrt at cs.usfca.edu  Mon Jun  5 15:23:11 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 15:23:45 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <002301c688ed$82469bd0$6402a8c0@Fafnir>
References: <002301c688ed$82469bd0$6402a8c0@Fafnir>
Message-ID: <0980EEC2-A714-4BCD-AEC8-2B008AB7D5CC@cs.usfca.edu>


On Jun 5, 2006, at 3:15 PM, Loring Craymer wrote:

> Ter--
>
> Out of curiosity, what's the distribution of k values in  
> representative
> grammars?

Here is what I get running -report when running antlr on java.g (all  
but 3 decisions are fixed LL(k) out of 90):

ANTLR Grammar Report; Stats Version 2
Grammar: JavaParser
Type: combined
Target language: Java
Rules: 67
Productions: 108
Decisions: 87
Cyclic DFA decisions: 3
Min fixed k: 1
Max fixed k: 2
Average fixed k: 1.130952380952381
Standard deviation of fixed k: 0.33937440336141017
Min acyclic DFA states: 3
Max acyclic DFA states: 11
Average acyclic DFA states: 3.392857142857143
Standard deviation of acyclic DFA states: 1.1721451567543082
Total acyclic DFA states: 285
Min cyclic DFA states: 12
Max cyclic DFA states: 29
Average cyclic DFA states: 19.0
Standard deviation of cyclic DFA states: 8.888194417315589
Total cyclic DFA states: 57
Vocabulary size: 153
DFA creation time in ms: 447
Number of semantic predicates found: 0
Number of manual fixed lookahead k=value options: 2
Number of nondeterministic decisions: 4
Number of nondeterministic decisions resolved with predicates: 0
Number of DFA conversions terminated early: 0
Number of errors: 0
Number of warnings: 6
Number of infos: 1
Number of syntactic predicates found: 0
Decisions with syntactic predicates: 0
Decision DFAs using syntactic predicates: 0
Decisions with semantic predicates: 0
Decision DFAs using semantic predicates: 0

>   It might be useful to be able to gather that statistic when
> trying to optimize a grammar; in fact, it might be useful to get  
> that on a
> per-rule basis (eventually) and feed that to ANTLRWorks.  Also, we  
> know from
> experience that tree grammars have predominantly LL(1) decisions-- 
> especially
> since up until ANTLR 3 tree grammars have been predicated-LL(1) of
> necessity--and the same is probably true of most parser grammars.

Yup.  Running ANTLR -report on my symbol phase of mantra, I get  
following.  Note that there are no cyclic DFA states and max k=2:

ANTLR Grammar Report; Stats Version 2
Grammar: ResolvePhase
Type: tree
Target language: Java
Rules: 36
Productions: 82
Decisions: 47
Cyclic DFA decisions: 0
Min fixed k: 1
Max fixed k: 2
Average fixed k: 1.0425531914893618
Standard deviation of fixed k: 0.2040297088885788
Min acyclic DFA states: 3
Max acyclic DFA states: 15
Average acyclic DFA states: 3.8297872340425534
Standard deviation of acyclic DFA states: 2.6401510903418934
Total acyclic DFA states: 180
Min cyclic DFA states: 0
Max cyclic DFA states: 0
Average cyclic DFA states: 0.0
Standard deviation of cyclic DFA states: 0.0
Total cyclic DFA states: 0
Vocabulary size: 119
DFA creation time in ms: 134
Number of semantic predicates found: 0
Number of manual fixed lookahead k=value options: 0
Number of nondeterministic decisions: 0
Number of nondeterministic decisions resolved with predicates: 0
Number of DFA conversions terminated early: 0
Number of errors: 0
Number of warnings: 0
Number of infos: 1
Number of syntactic predicates found: 0
Decisions with syntactic predicates: 0
Decision DFAs using syntactic predicates: 0
Decisions with semantic predicates: 0
Decision DFAs using semantic predicates: 0

> Given the code bloat resulting from excessive DFAs, I rather think  
> that not
> only was the investigation worthwhile, but it also merits follow-up  
> when
> time is available.

Yup.  Note that .class file size with inline DFA and then with table- 
driven DFA including set up code:

-rw-r--r--   1 parrt  wheel  70289 Jun  5 13:59 JavaParser.class
-rw-r--r--   1 parrt  wheel  95637 Jun  5 14:26 JavaParser.class

C could kick java's ass on this probably--it just gives the encoded  
DFA, no set up time nor code needed.  Code size in loc is

     5412 JavaParser.java inline
     8042 JavaParser.java table-base DFA

Ter


From coxbrian at msu.edu  Mon Jun  5 17:29:22 2006
From: coxbrian at msu.edu (Brian Cox)
Date: Mon Jun  5 17:29:14 2006
Subject: [antlr-interest] Custom AST Nodes in v3
In-Reply-To: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>
References: <b6b62f870606050129x45e0563mfd0f689caa73076e@mail.gmail.com>
Message-ID: <200606052029.23880.coxbrian@msu.edu>

On Monday 05 June 2006 04:29, Rebecca Chernoff wrote:
> I apologize if I've overlooked this.  I am trying to convert a v2 grammar
> to v3.  I have my tokens section defined with custom AST nodes.
>
> tokens {
>   RULE<AST=CustomRule>;
>   ...
> }

As others upthread have mentioned, that's not available in v3 yet; however, 
I'm currently thinking about a workaround.  It's based upon the 
org.antlr.runtime.tree.CommonTreeAdaptor which provides a 
rulePostProcessing(Object) method that can be overridden.  This method is 
called at the tail end of each rule.

Right now I'm using it to rearrange some of the subtrees my grammar generates 
in ways that I couldn't figure out the proper way to express within the 
grammar itself.  So far I'm still using a homogeneous tree based around the 
default Tree/CommonTree, but I'm planning on using the same basic strategy to 
replace subtress with heterogeneous nodes.

This approach does require that you set the parser's TreeAdptor to your custom 
subclass at some point via the parser's setTreeAdaptor() method before the 
parser starts doing its work.  I've accomplished this via an @init tag on the 
very first grammar rule as so:

	start
	@init {setTreeAdaptor(new EtlTreeAdapter(this));}
		: program ;

... where EtlTreeAdapter is my custom subclass.  As for the overridden method, 
here's an example from my code:

    public Object rulePostProcessing(Object root) {
        Tree r = (Tree)super.rulePostProcessing(root);
        if (r != null) r = convertTree(r);
        return r;
    }

.... where I call the super classes's implementation, make sure the tree node 
isn't null, then hand-off to a helper method within my subclass to do the 
actual legwork.  I then return the modified tree which the parser will then 
use as its own root node for the particular rule that called 
rulePostProcessing().  You could probably use the same process to intercept 
the tail-end of each rule, capture the tree node, then create a new 
heterogeneous node based upon the original node.

-- 
 * Brian Cox <coxbrian@msu.edu>
From jbarnesweb at yahoo.com  Mon Jun  5 21:25:36 2006
From: jbarnesweb at yahoo.com (Jeff Barnes)
Date: Mon Jun  5 21:25:40 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <1303ACF5-D605-40A1-BF76-91B822FC6E1A@cs.usfca.edu>
Message-ID: <20060606042537.44791.qmail@web54509.mail.yahoo.com>

Terence,

I've watched you talk about the problems of the
implementation you chose for the cyclic DFAs for
months now... Perhaps you should consider another
alternative. Seems like you're trying to brute-force
the Cargill pattern in the name of performance.

http://www.geocities.com/jbarnesweb/fsmsurvey.pdf

Consider the Knowledge pattern...

Jeff



--- Terence Parr <parrt@cs.usfca.edu> wrote:

> Followup...i just generated from java.g using all
> new-style DFA and  
> the resulting code is just huge.  Too much overhead
> to uncompress and  
> set up those DFA :(  I think we're better off doing
> inline DFA for  
> fixed LL(k) decisions.  Oh well.  Worth the few
> hours of investigation.
> 
> Ter
> 


=========
Jeff Barnes
(206)245-6100


Few things are impossible to diligence and skill.
--- Samuel Johnson (Rasselas Chap. xii.)
From parrt at cs.usfca.edu  Mon Jun  5 21:37:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  5 21:37:51 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <20060606042537.44791.qmail@web54509.mail.yahoo.com>
References: <20060606042537.44791.qmail@web54509.mail.yahoo.com>
Message-ID: <217455AB-4B21-4715-A1EE-6F7A622BF12B@cs.usfca.edu>

Hi Jeff,

Thanks for the pointer.  Patterns are just names for stuff  
programmers know how to do.  In this case, I know how to build DFAs  
reasonably efficiently.  I was just trying to get java to listen to  
me. ;)  The other case of generating state machine DFA for even fixed  
lookahead decisions was a question of size, performance really not  
one of which DFA pattern to use.  If Java were more like C when it  
came to arrays, more opportunities would present themselves.  I have  
decided to keep these tables around for all decisions so target  
developers for C and friends have the choice.

I don't know anything about patterns...I just code.  If you could  
state simply the opportunity I'm missing, I'd appreciate it.  Might  
be a cool trick to learn in this area.

Thanks,
Ter

On Jun 5, 2006, at 9:25 PM, Jeff Barnes wrote:

> Terence,
>
> I've watched you talk about the problems of the
> implementation you chose for the cyclic DFAs for
> months now... Perhaps you should consider another
> alternative. Seems like you're trying to brute-force
> the Cargill pattern in the name of performance.
>
> http://www.geocities.com/jbarnesweb/fsmsurvey.pdf
>
> Consider the Knowledge pattern...
>
> Jeff

From jbarnesweb at yahoo.com  Mon Jun  5 21:56:43 2006
From: jbarnesweb at yahoo.com (Jeff Barnes)
Date: Mon Jun  5 21:56:46 2006
Subject: [antlr-dev] Re: [antlr-interest] LL(1), LL(k), LL(*),
	predicated decisions
In-Reply-To: <217455AB-4B21-4715-A1EE-6F7A622BF12B@cs.usfca.edu>
Message-ID: <20060606045643.56553.qmail@web54506.mail.yahoo.com>


>  Patterns are just names for
> stuff  
> programmers know how to do.  

Patterns are names, relationships, consequences,
rigorous problem analyses, concise descriptions of the
problem domain, etc.

I know I'm coming across a little high-handed (or
heavy-handed one). I'm sure some programmers may think
I'm from the moon. 

I still think I'm right, to say nothing of your
mastery over the domain of DFAs. :)

> I was just trying to get
> java to listen to  
> me. ;)  

How's that working out for you, Ter? I try to get java
to listen to me too. Sigh.

> 
> I don't know anything about patterns...I just code. 
> If you could  
> state simply the opportunity I'm missing, I'd
> appreciate it.  Might  
> be a cool trick to learn in this area.

Man, pointer arithmetic is going away. Far away. It's
so 5 minutes ago... ;)

Pardon my irreverence. I truly couldn't help it.

Regards,
Jeff


=========
Jeff Barnes
(206)245-6100


Few things are impossible to diligence and skill.
--- Samuel Johnson (Rasselas Chap. xii.)
From mail at martin-probst.com  Tue Jun  6 02:42:28 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue Jun  6 02:42:39 2006
Subject: [antlr-interest] Island grammars
In-Reply-To: <4F4D119F-7AD9-4515-82E2-BB46270CE6E0@cs.usfca.edu>
References: <DDB77D39-F402-4330-B70E-978260697481@martin-probst.com>
	<4F4D119F-7AD9-4515-82E2-BB46270CE6E0@cs.usfca.edu>
Message-ID: <9E3DA776-B1C1-4B7E-823A-41570E0187A4@martin-probst.com>

Hi,

> Well there is the example in examples-v3.  Remind me..were we  
> talking about something in addition?

I think we do. What I was referring to was basically stateful lexing  
a la Flex. There are situations where you just can't get around  
it ... I think we came up with a syntax like this:

island Main {
   FOO: "foo" { setState(OP); };
   BAR: "bar" "{"  { pushState(Main); setState(OP); };
}

island OP {
   NAME: "foo" { setState(Main); };
   RCURLY: "}" { popState(); };
}

This would be tremendously helpful for keyword free languages. It  
would need something like multiple Lexers within one Lexer (multiple  
DFAs). Your example with the action that creates a new lexer doesn't  
cut it - you can't create a new lexer for each token you're lexing,  
plus that way there is hardly any syntactical support.

Also your example is not quite valid - it uses a static field  
"nesting" in the simple.g grammar class. This might work for a simple  
compiler that always runs as a single threaded simple executable, but  
this will certainly wreck havoc on anything else (e.g. multi-threaded  
apps, editors with multiple instances, ...).

Please also see the discussion raised by Loring Craymer ("A proposal  
for keywords"). His ideas won't work for standalone Lexers though,  
which is highly desirable for IDEs and editors (so you don't need a  
parser/parse tree for syntax coloring).

Regards,
Martin


From mail at martin-probst.com  Tue Jun  6 02:53:31 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue Jun  6 02:53:39 2006
Subject: [antlr-interest] LL(1), LL(k), LL(*), predicated decisions
In-Reply-To: <217455AB-4B21-4715-A1EE-6F7A622BF12B@cs.usfca.edu>
References: <20060606042537.44791.qmail@web54509.mail.yahoo.com>
	<217455AB-4B21-4715-A1EE-6F7A622BF12B@cs.usfca.edu>
Message-ID: <029A83FF-7C6D-4493-8EF9-8B2E0144A6A0@martin-probst.com>

Hi,

> I don't know anything about patterns...I just code.

I'd consider patterns to be a tool for communication and teaching.  
Good programmers have recognized patterns they use, but learning a  
certain implementation strategy s a lot easier when you have a word  
for it, and telling someone how you've done this or that is also  
easier if you can articulate that.

Martin

From sunjigang8 at netscape.net  Tue Jun  6 02:59:24 2006
From: sunjigang8 at netscape.net (sunjigang8@netscape.net)
Date: Tue Jun  6 02:59:33 2006
Subject: [antlr-interest] TokenStreamRecognitionException
Message-ID: <1E3BD994.7F2E05EE.10BF44CE@netscape.net>

I defined a token in lexer as  (  MINUS = "-"; ). I use ( minus:MINUS; ) in parser to parser the symbol "-". While TokenStreamRecognitionException was thrown and popped up a window says ( unexpected char: '-' ). I think the char is recongnised but could not form the expected token. 

Literals in lexer are consistent with that of parser, that is,  ( public const int MINUS = 31; ) are generated at the beginning of both lexer and parser.

This must be a silly question. I wish you could give a clue.

Robert
 

options {
    language  = "CSharp";
    namespace = "MiniClean"; 
}
class MiniCleanLexer extends Lexer;
options {
            k=2;            
        }                
tokens
{
    IMPLEMENTATION="IMPLEMENTATION";
    FUNCTIONAL="FUNCTIONAL";
    STRATEGY="STRATEGY";
    ABSTYPE="ABSTYPE";
    FROM="FROM";
    IMPORT="IMPORT";
    SYSTEM="SYSTEM";
    DEFINITION="DEFINITION";
    MODULE="MODULE";
    MACRO="MACRO";
    TYPE="TYPE";
    RULE="RULE";
    IF="IF";
    OR="||";
    AND="&&";    
    DB_COLUMN= "::";
    BAR= "|";
    DERIVES= "->";
    SEMI= ";";
    COMMA= ",";
    LPAREN="(";
    RPAREN= ")";
    COLUMN= ":";
    LBRACKET= "[";
    RBRACKET= "]";
    PredefinedType = "=>";
    PLUS ="+";
    MINUS = "-";
    DOT=".";
    E="E";
    INT= "INT";
    REAL="REAL";
    CHAR="CHAR";
    BOOL="BOOL";
    STRING="STRING";
    FILE="FILE";
    PROCID="PROCID";
    WORLD="WORLD" ;
    TRUE="TRUE";
    FALSE="FALSE";
    ID_LOWER;
    ID_UPPER;
    FunnyID1;
    NUM;
}


//ID_LOWER: LowerCaseChar (RestChar)*;
//ID_UPPER: UpperCaseChar (RestChar)*;
//FunnyID1:  '@' | '#' | '$' | '%' | '^' | '&'| '?' |'*' | '/' | '='| '<' | '>' | '_' | '`' | '\''|'\"' ;

//NUM:(Digit)+;

protected UpperCaseChar: 'A'..'Z';
protected LowerCaseChar: 'a'..'z';
protected Digit: OctDigit |'8'|'9';
protected OctDigit: '0'..'7' ;
protected RestChar: LowerCaseChar | Digit| UpperCaseChar; //|CharDel|StringDel ; | Class1Char

//protected StringDenot: StringDel (Char)* StringDel ;

//protected Class1Char: '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | '+' | '-' | '/' | '='| '<' | '>' | '_' | '.'| '`' | '\''|'\"' ;

protected Class2Char: '|' | '!' | '(' | ')' | '{' | '}'| '[' | ']' | ':' | ';' | '~' | ',' ;

protected Special: '\n' | '\r' | '\f' | '\b' | '\t'| '\\' ;//| StringDel | CharDel; // OctDigit OctDigit OctDigit ;

WS:  
(
     ' '
    |  {setTabSize(4);} '\t'         //NOTE (UpperCaseChar|LowerCaseChar|Class1Char|Class2Char)* ('\r''\n' ){newline();} 
    | '\n'
    | '\r' '\n'{newline();}
    
) {$setType(Token.SKIP);} ;





__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp
From Kai.Koehne at student.hpi.uni-potsdam.de  Tue Jun  6 03:18:09 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Tue Jun  6 03:18:16 2006
Subject: AW: [antlr-interest] TokenStreamRecognitionException
References: <1E3BD994.7F2E05EE.10BF44CE@netscape.net>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E95@3mxstu1r.hpi.uni-potsdam.de>

Hi,
 
the problem is that the keywords defined in the tokens section are only detected if there is a lexer rule catching it already!
 
"The literals table [...] is checked after each token is matched, so that the literals effectively override the more general identifier pattern."
http://www.antlr.org/doc/lexer.html#Keywords_and_literals
 
There is no lexer rule that starts with "-", so the keyword MINUS is not detected either.
 
Regards,
 
Kai Koehne

________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von sunjigang8@netscape.net
Gesendet: Di 06.06.2006 11:59
An: antlr-interest@antlr.org
Betreff: [antlr-interest] TokenStreamRecognitionException



I defined a token in lexer as  (  MINUS = "-"; ). I use ( minus:MINUS; ) in parser to parser the symbol "-". While TokenStreamRecognitionException was thrown and popped up a window says ( unexpected char: '-' ). I think the char is recongnised but could not form the expected token.

Literals in lexer are consistent with that of parser, that is,  ( public const int MINUS = 31; ) are generated at the beginning of both lexer and parser.

This must be a silly question. I wish you could give a clue.

Robert


options {
    language  = "CSharp";
    namespace = "MiniClean";
}
class MiniCleanLexer extends Lexer;
options {
            k=2;           
        }               
tokens
{
    IMPLEMENTATION="IMPLEMENTATION";
    FUNCTIONAL="FUNCTIONAL";
    STRATEGY="STRATEGY";
    ABSTYPE="ABSTYPE";
    FROM="FROM";
    IMPORT="IMPORT";
    SYSTEM="SYSTEM";
    DEFINITION="DEFINITION";
    MODULE="MODULE";
    MACRO="MACRO";
    TYPE="TYPE";
    RULE="RULE";
    IF="IF";
    OR="||";
    AND="&&";   
    DB_COLUMN= "::";
    BAR= "|";
    DERIVES= "->";
    SEMI= ";";
    COMMA= ",";
    LPAREN="(";
    RPAREN= ")";
    COLUMN= ":";
    LBRACKET= "[";
    RBRACKET= "]";
    PredefinedType = "=>";
    PLUS ="+";
    MINUS = "-";
    DOT=".";
    E="E";
    INT= "INT";
    REAL="REAL";
    CHAR="CHAR";
    BOOL="BOOL";
    STRING="STRING";
    FILE="FILE";
    PROCID="PROCID";
    WORLD="WORLD" ;
    TRUE="TRUE";
    FALSE="FALSE";
    ID_LOWER;
    ID_UPPER;
    FunnyID1;
    NUM;
}


//ID_LOWER: LowerCaseChar (RestChar)*;
//ID_UPPER: UpperCaseChar (RestChar)*;
//FunnyID1:  '@' | '#' | '$' | '%' | '^' | '&'| '?' |'*' | '/' | '='| '<' | '>' | '_' | '`' | '\''|'\"' ;

//NUM:(Digit)+;

protected UpperCaseChar: 'A'..'Z';
protected LowerCaseChar: 'a'..'z';
protected Digit: OctDigit |'8'|'9';
protected OctDigit: '0'..'7' ;
protected RestChar: LowerCaseChar | Digit| UpperCaseChar; //|CharDel|StringDel ; | Class1Char

//protected StringDenot: StringDel (Char)* StringDel ;

//protected Class1Char: '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | '+' | '-' | '/' | '='| '<' | '>' | '_' | '.'| '`' | '\''|'\"' ;

protected Class2Char: '|' | '!' | '(' | ')' | '{' | '}'| '[' | ']' | ':' | ';' | '~' | ',' ;

protected Special: '\n' | '\r' | '\f' | '\b' | '\t'| '\\' ;//| StringDel | CharDel; // OctDigit OctDigit OctDigit ;

WS: 
(
     ' '
    |  {setTabSize(4);} '\t'         //NOTE (UpperCaseChar|LowerCaseChar|Class1Char|Class2Char)* ('\r''\n' ){newline();}
    | '\n'
    | '\r' '\n'{newline();}
   
) {$setType(Token.SKIP);} ;





__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp


From sunjigang1965 at yahoo.com.cn  Tue Jun  6 07:14:58 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Tue Jun  6 07:15:15 2006
Subject: [antlr-interest] So I wish one token has two types
Message-ID: <20060606141458.86940.qmail@web15708.mail.cnb.yahoo.com>

I have two kinds of tokens, CHAR and ID, to identify 

CHAR: LowerCaseChar;
ID: (LowerCaseChar)+;

a single char, e.g. 's', could be either type of CHAR of ID, 

the following lexical rule can only assign one type, 

ID: LowerCaseChar {$setType(CHAR);} ( LowerCaseChar)* {$setType(ID);} //get only one type
protected LowerCaseChar: 'a'..'z';

In parser I need 's' be scanned as type of CHAR or ID in different context. 

Micheal J ever told me to see rule INT_LITERAL of csharp_v1 example, I think that method can only
differ situation like

     INTEGER: (DIGIT)+;
from
     REAL: (DIGIT)+ '.' (DIGIT)+;

use a rule like 

VALUE: (DIGIT)+ {$setType(INTEGER);} ('.' (DIGIT)+ {$setType(REAL);})?;

if same text such as "32" is treated as INTEGER in one occasion, while in other case it need to be
recognised as REAL the above method could not work.

Probaly the anwser is in the example, but the csharp_v1 grammar is in a big size. I have not find
the solution.

So I wish one token has two types, thus 's' feeding to parser is of CHAR or ID depending by my
needs.

Or could composite token forming be left to parser,

id:(LowerCaseChar)+;

a string "name" could be converted a single token, not a tree in parser? 

Many thanks.

Robert
     


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From hugo.leeney at gmail.com  Tue Jun  6 09:09:30 2006
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Tue Jun  6 09:09:37 2006
Subject: [antlr-interest] TokenStreamRecognitionException
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E95@3mxstu1r.hpi.uni-potsdam.de>
References: <1E3BD994.7F2E05EE.10BF44CE@netscape.net>
	<D90489B77ED9F8439A3C784F732BEC9C737E95@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <ccbc40a00606060909ke6f42e3w10e4f0dafc6923e1@mail.gmail.com>

In that link you posted Koehne, it refers to the literal option in the
Lexer and provides a link. However on the page linked to there is no
entry for such an option (althought the tesLiterals option is listed).
Any ideas as to why? Deprecated or something?

Thanks,

Hugo Leeney

On 6/6/06, Koehne Kai <Kai.Koehne@student.hpi.uni-potsdam.de> wrote:
> Hi,
>
> the problem is that the keywords defined in the tokens section are only detected if there is a lexer rule catching it already!
>
> "The literals table [...] is checked after each token is matched, so that the literals effectively override the more general identifier pattern."
> http://www.antlr.org/doc/lexer.html#Keywords_and_literals
>
> There is no lexer rule that starts with "-", so the keyword MINUS is not detected either.
>
> Regards,
>
> Kai Koehne
>
> ________________________________
>
> Von: antlr-interest-bounces@antlr.org im Auftrag von sunjigang8@netscape.net
> Gesendet: Di 06.06.2006 11:59
> An: antlr-interest@antlr.org
> Betreff: [antlr-interest] TokenStreamRecognitionException
>
>
>
> I defined a token in lexer as  (  MINUS = "-"; ). I use ( minus:MINUS; ) in parser to parser the symbol "-". While TokenStreamRecognitionException was thrown and popped up a window says ( unexpected char: '-' ). I think the char is recongnised but could not form the expected token.
>
> Literals in lexer are consistent with that of parser, that is,  ( public const int MINUS = 31; ) are generated at the beginning of both lexer and parser.
>
> This must be a silly question. I wish you could give a clue.
>
> Robert
>
>
> options {
>     language  = "CSharp";
>     namespace = "MiniClean";
> }
> class MiniCleanLexer extends Lexer;
> options {
>             k=2;
>         }
> tokens
> {
>     IMPLEMENTATION="IMPLEMENTATION";
>     FUNCTIONAL="FUNCTIONAL";
>     STRATEGY="STRATEGY";
>     ABSTYPE="ABSTYPE";
>     FROM="FROM";
>     IMPORT="IMPORT";
>     SYSTEM="SYSTEM";
>     DEFINITION="DEFINITION";
>     MODULE="MODULE";
>     MACRO="MACRO";
>     TYPE="TYPE";
>     RULE="RULE";
>     IF="IF";
>     OR="||";
>     AND="&&";
>     DB_COLUMN= "::";
>     BAR= "|";
>     DERIVES= "->";
>     SEMI= ";";
>     COMMA= ",";
>     LPAREN="(";
>     RPAREN= ")";
>     COLUMN= ":";
>     LBRACKET= "[";
>     RBRACKET= "]";
>     PredefinedType = "=>";
>     PLUS ="+";
>     MINUS = "-";
>     DOT=".";
>     E="E";
>     INT= "INT";
>     REAL="REAL";
>     CHAR="CHAR";
>     BOOL="BOOL";
>     STRING="STRING";
>     FILE="FILE";
>     PROCID="PROCID";
>     WORLD="WORLD" ;
>     TRUE="TRUE";
>     FALSE="FALSE";
>     ID_LOWER;
>     ID_UPPER;
>     FunnyID1;
>     NUM;
> }
>
>
> //ID_LOWER: LowerCaseChar (RestChar)*;
> //ID_UPPER: UpperCaseChar (RestChar)*;
> //FunnyID1:  '@' | '#' | '$' | '%' | '^' | '&'| '?' |'*' | '/' | '='| '<' | '>' | '_' | '`' | '\''|'\"' ;
>
> //NUM:(Digit)+;
>
> protected UpperCaseChar: 'A'..'Z';
> protected LowerCaseChar: 'a'..'z';
> protected Digit: OctDigit |'8'|'9';
> protected OctDigit: '0'..'7' ;
> protected RestChar: LowerCaseChar | Digit| UpperCaseChar; //|CharDel|StringDel ; | Class1Char
>
> //protected StringDenot: StringDel (Char)* StringDel ;
>
> //protected Class1Char: '@' | '#' | '$' | '%' | '^' | '&'| '?' | '*' | '+' | '-' | '/' | '='| '<' | '>' | '_' | '.'| '`' | '\''|'\"' ;
>
> protected Class2Char: '|' | '!' | '(' | ')' | '{' | '}'| '[' | ']' | ':' | ';' | '~' | ',' ;
>
> protected Special: '\n' | '\r' | '\f' | '\b' | '\t'| '\\' ;//| StringDel | CharDel; // OctDigit OctDigit OctDigit ;
>
> WS:
> (
>      ' '
>     |  {setTabSize(4);} '\t'         //NOTE (UpperCaseChar|LowerCaseChar|Class1Char|Class2Char)* ('\r''\n' ){newline();}
>     | '\n'
>     | '\r' '\n'{newline();}
>
> ) {$setType(Token.SKIP);} ;
>
>
>
>
>
> __________________________________________________________________
> Switch to Netscape Internet Service.
> As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register
>
> Netscape. Just the Net You Need.
>
> New! Netscape Toolbar for Internet Explorer
> Search from anywhere on the Web and block those annoying pop-ups.
> Download now at http://channels.netscape.com/ns/search/install.jsp
>
>
>


-- 
*******************************************
This document is strictly confidential and is intended for use by
 the addressee unless otherwise indicated.
*******************************************
From sunjigang1965 at yahoo.com.cn  Wed Jun  7 06:07:43 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Wed Jun  7 06:07:50 2006
Subject: [antlr-interest] Grammar inheritance command line
Message-ID: <20060607130743.77474.qmail@web15709.mail.cnb.yahoo.com>

Hi,
   
  Normally I use command  "java -cp antlr.jar antlr.Tool lex.g" to produce lexer( antlr.jar and lex.g are in same directory). 
   
  Now I have a super grammar in file PreLex.g(located in the same directory) for grammar in lex.g to inherit. I tried several ways, such as 
   
  java -cp antlr.jar antlr.Tool lex.g PreLex.g
   
  java -cp antlr.jar antlr.Tool lex.g -glib H:\Visual Studio 2005\Projects\Clean\Clean\PreLex.g
   
  java -cp antlr.jar antlr.Tool H:\Visual Studio 2005\Projects\Clean\Clean\lex.g  ; H:\Visual Studio 2005\Projects\Clean\Clean\PreLex.g
   
  none of them suceeded.
   
  Robert
  
 

 __________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060607/ef064e36/attachment.html
From scott at javadude.com  Wed Jun  7 06:15:13 2006
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Jun  7 06:15:24 2006
Subject: [antlr-interest] Grammar inheritance command line
In-Reply-To: <20060607130743.77474.qmail@web15709.mail.cnb.yahoo.com>
Message-ID: <200606071402.k57E2TrS019332@s2.eroute.net>

Put double quotes around the names that contain spaces; Java interprets
spaces as meaning argument separators.
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.
org] On Behalf Of ??? Jigang (Robert) Sun
Sent: Wednesday, June 07, 2006 9:08 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Grammar inheritance command line


Hi,
 
Normally I use command  "java -cp antlr.jar antlr.Tool lex.g" to produce
lexer( antlr.jar and lex.g are in same directory). 
 
Now I have a super grammar in file PreLex.g(located in the same directory)
for grammar in lex.g to inherit. I tried several ways, such as 
 
java -cp antlr.jar antlr.Tool lex.g PreLex.g
 
java -cp antlr.jar antlr.Tool lex.g -glib H:\Visual Studio
2005\Projects\Clean\Clean\PreLex.g
 
java -cp antlr.jar antlr.Tool H:\Visual Studio
2005\Projects\Clean\Clean\lex.g  ; H:\Visual Studio
2005\Projects\Clean\Clean\PreLex.g
 
none of them suceeded.
 
Robert

 

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060607/f3530f67/attachment.html
From open.zone at virgin.net  Wed Jun  7 09:33:10 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  7 09:15:35 2006
Subject: [antlr-interest] Grammar inheritance command line
In-Reply-To: <200606071402.k57E2TrS019332@s2.eroute.net>
Message-ID: <00cc01c68a50$11d1d9a0$c704a8c0@hercules>

What Scott said and...
 
- use relative paths (from your project's root dir). that way you can ensure no path components have spaces in them
- consider adopting the use of the Nant as in the examples
- KSCParse/csharp_v1 sample demonstrates the use of grammar inheritance
- Use Nant (or other similar build system e.g. MSBuild)
- Use Nant ;-)
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott Stanchfield
Sent: 07 June 2006 14:15
To: '?????? Jigang (Robert) Sun'
Cc: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Grammar inheritance command line


Put double quotes around the names that contain spaces; Java interprets spaces as meaning argument separators.
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org] On Behalf Of ??? Jigang (Robert) Sun
Sent: Wednesday, June 07, 2006 9:08 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Grammar inheritance command line


Hi,
 
Normally I use command  "java -cp antlr.jar antlr.Tool lex.g" to produce lexer( antlr.jar and lex.g are in same directory). 
 
Now I have a super grammar in file PreLex.g(located in the same directory) for grammar in lex.g to inherit. I tried several ways, such as 
 
java -cp antlr.jar antlr.Tool lex.g PreLex.g
 
java -cp antlr.jar antlr.Tool lex.g -glib H:\Visual Studio 2005\Projects\Clean\Clean\PreLex.g
 
java -cp antlr.jar antlr.Tool H:\Visual Studio 2005\Projects\Clean\Clean\lex.g  ; H:\Visual Studio 2005\Projects\Clean\Clean\PreLex.g
 
none of them suceeded.
 
Robert

 

__________________________________________________
???????????????
http://cn.mail.yahoo.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060607/6d095da1/attachment.html
From open.zone at virgin.net  Wed Jun  7 09:53:46 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  7 09:36:08 2006
Subject: [antlr-interest] So I wish one token has two types
In-Reply-To: <20060606141458.86940.qmail@web15708.mail.cnb.yahoo.com>
Message-ID: <00d301c68a52$f45d3ba0$c704a8c0@hercules>

Jigang,

> I have two kinds of tokens, CHAR and ID, to identify 
> 
> CHAR: LowerCaseChar;
> ID: (LowerCaseChar)+;
> 
> a single char, e.g. 's', could be either type of CHAR of ID, 

Can't be resolved in a lexer (well, it may be possible but it usuallly gets
very messy). Let the parser resolve it.

> the following lexical rule can only assign one type, 
> 
> ID: LowerCaseChar {$setType(CHAR);} ( LowerCaseChar)* 
> {$setType(ID);} //get only one type protected LowerCaseChar: 'a'..'z';
> 
> In parser I need 's' be scanned as type of CHAR or ID in 
> different context. 

The relevant parser rule that doesn't care just accepts either:
	.... ( CHAR | ID )  ...

If at some other point only a single char is acceptable, use CHAR in the
parser rule. Same for ID.
	... CHAR ...

> Micheal J ever told me to see rule INT_LITERAL of csharp_v1 
> example, I think that method can only differ situation like
> 
>      INTEGER: (DIGIT)+;
> from
>      REAL: (DIGIT)+ '.' (DIGIT)+;
> 
> use a rule like 
> 
> VALUE: (DIGIT)+ {$setType(INTEGER);} ('.' (DIGIT)+ 
> {$setType(REAL);})?;

This [can] break[s] down if you also have DOT as a token. 

> if same text such as "32" is treated as INTEGER in one 
> occasion, while in other case it need to be recognised as 
> REAL the above method could not work.

And such context-depedent decisions usually belongs in a parser. Just have a
NUMERIC_LITERAL token and let the parser determine what it means.

> Probaly the anwser is in the example, but the csharp_v1 
> grammar is in a big size. I have not find the solution.

Not really. In any case, you are just interested in the INT_LITERAL rule
right?

> So I wish one token has two types, thus 's' feeding to parser 
> is of CHAR or ID depending by my needs.

That's silly ;-)
A token is either one thing or the other.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From parrt at cs.usfca.edu  Wed Jun  7 14:01:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  7 14:02:05 2006
Subject: [antlr-interest] lexical modes
Message-ID: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>

Hi, consider matching strings in the lexer.  It's pretty easy in  
ANTLR as you can make rule references:

STRING : '"' (ESC | .)* '"' ;
ESC : ... ;

What if you want the lexer though to return a stream of tokens chosen  
from a different set in between square brackets such as when  
recognizing regular expressions.  Inside [...] you can refer to '('  
as just a char not a grouping symbol.  Rather than creating and  
switching to a new lexer every time you see a '[', perhaps good old  
lexical modes from lex are the right idea.

grammar regex;

expr : atom | range | ebnf | ... ;

range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;

LBRACK : '[' {pushMode(inside_brackets);} ;

mode inside_brackets;

CHAR : ... ;
DASH : '-' ;
RBRACK : ']' {popMode();} ;

Something like that...make sense to add?  ANTLR can just switch-on- 
mode when it enters nextToken() to jump to the appropriate set of  
lexical rules.

Ter

From sunjigang1965 at yahoo.com.cn  Wed Jun  7 14:37:49 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Wed Jun  7 14:37:53 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20RE:=20[antlr-interest]=20So=20I=20wish=20?=
	=?gb2312?q?one=20token=20has=20two=20types?=
In-Reply-To: <00d301c68a52$f45d3ba0$c704a8c0@hercules>
Message-ID: <20060607213749.55798.qmail@web15707.mail.cnb.yahoo.com>


--- Micheal J wrote:

> Jigang,
> 
> > I have two kinds of tokens, CHAR and ID, to identify 
> > 
> > CHAR: LowerCaseChar;
> > ID: (LowerCaseChar)+;
> > 
> > a single char, e.g. 's', could be either type of CHAR of ID, 
> 
> Can't be resolved in a lexer (well, it may be possible but it usuallly gets
> very messy). Let the parser resolve it.
> 


If the grammar is
 
CHAR: LowerCaseChar;
id: (CHAR)+;

What got is a tree other than a token/string. So I have to use actions to get the string. Do you
mean token/string creation should be done in parser?

Jigang
  

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From jddahl at micron.com  Wed Jun  7 14:50:11 2006
From: jddahl at micron.com (Jeff Dahl)
Date: Wed Jun  7 14:50:14 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
References: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
Message-ID: <44874A13.1050602@micron.com>

+1

This would greatly simplify my lexers if such functionality existed.  
Great idea!

Jeff

Terence Parr wrote:
> What if you want the lexer though to return a stream of tokens chosen 
> from a different set in between square brackets such as when 
> recognizing regular expressions.  Inside [...] you can refer to '(' as 
> just a char not a grouping symbol.  Rather than creating and switching 
> to a new lexer every time you see a '[', perhaps good old lexical 
> modes from lex are the right idea.
>
> grammar regex;
>
> expr : atom | range | ebnf | ... ;
>
> range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;
>
> LBRACK : '[' {pushMode(inside_brackets);} ;
>
> mode inside_brackets;
>
> CHAR : ... ;
> DASH : '-' ;
> RBRACK : ']' {popMode();} ;
>
> Something like that...make sense to add?  ANTLR can just 
> switch-on-mode when it enters nextToken() to jump to the appropriate 
> set of lexical rules.
>
> Ter
>
>
From open.zone at virgin.net  Wed Jun  7 15:13:48 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  7 14:59:36 2006
Subject: =?iso-8859-1?Q?RE:_=BB=D8=B8=B4=A3=BA_RE:_=5Bantlr-interest=5D_So_I_wis?=
	=?iso-8859-1?Q?h_one_token_has_two_types?=
In-Reply-To: <20060607213749.55798.qmail@web15707.mail.cnb.yahoo.com>
Message-ID: <012d01c68a7f$a8e88c10$c704a8c0@hercules>

Jigang,

> > > I have two kinds of tokens, CHAR and ID, to identify
> > > 
> > > CHAR: LowerCaseChar;
> > > ID: (LowerCaseChar)+;

> > Can't be resolved in a lexer (well, it may be possible but 
> it usuallly 
> > gets very messy). Let the parser resolve it.

> If the grammar is
>  
> CHAR: LowerCaseChar;
> id: (CHAR)+;
> 
> What got is a tree other than a token/string. So I have to 
> use actions to get the string. Do you mean token/string 
> creation should be done in parser?

In your original post, ID is a lexer rule. It should still be.

In your parser:
- wherever a single-char literal is expected, use CHAR. 
- wherever an indentifier is expected use (CHAR | ID)     [since identifier
can also be single-char]
- wherever only a multi-char character sequence/string is expected use ID


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From mail at martin-probst.com  Wed Jun  7 15:00:59 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed Jun  7 15:02:50 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
References: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
Message-ID: <B9844470-8013-435E-B9A9-CFF2DEAEE360@martin-probst.com>

Hi,

> Something like that...make sense to add?  ANTLR can just switch-on- 
> mode when it enters nextToken() to jump to the appropriate set of  
> lexical rules.

That's exactly what I need. Make it easy and cheap to switch, and you  
can hit a lot of problems with that.

Something has to be done about duplicate rules in that case, e.g.

grammar regex:

CHAR: ...;

mode inside_brackets;

CHAR: ...;

I would opt to treat them identical from the grammar, e.g. have the  
same token type map to CHAR. This is probably useful for whitespace,  
comments etc. JFlex also has something called implicit rules - rules  
that are not specified as belonging to a certain state can be matched  
always, except for explicit states. That's nice for whitespace and  
comments. Plus it has the ability to have a rule belong to multiple  
states, but I think that's overkill. I don't want ANTLR to implement  
JFlex' feature set, I just wanted to tell for comparison.

BTW I would prefer a syntax where groups are not separated by  
statements but enclosed in parentheses. E.g.

mode A {
   ruleA1: ...;
   ruleA2: ...;
}

mode B {
   ruleB1: ...;
   ruleB2: ...;
}

But maybe I'm just tainted by XML ;-)

Regards,
Martin

From open.zone at virgin.net  Wed Jun  7 15:44:52 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  7 15:27:06 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
Message-ID: <014601c68a83$fec06b90$c704a8c0@hercules>

Ter,

> What if you want the lexer though to return a stream of 
> tokens chosen  
> from a different set in between square brackets such as when  
> recognizing regular expressions.  Inside [...] you can refer to '('  
> as just a char not a grouping symbol.  Rather than creating and  
> switching to a new lexer every time you see a '[', perhaps good old  
> lexical modes from lex are the right idea.

Well, you would *have to* create a lexer on every switch, just reuse one
that's lying around for that very purpose. Still I lex-style modes. Low
[performance and implementation] cost.

> grammar regex;
> 
> expr : atom | range | ebnf | ... ;
> 
> range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;
> 
> LBRACK : '[' {pushMode(inside_brackets);} ;
> 
> mode inside_brackets;
> 
> CHAR : ... ;
> DASH : '-' ;
> RBRACK : ']' {popMode();} ;
> 
> Something like that...make sense to add?  ANTLR can just switch-on- 
> mode when it enters nextToken() to jump to the appropriate set of  
> lexical rules.

+1

That's how I write lexers manually... ;-)

I presume that the lexer swicthing infrastructure still remains for neato
#include handling and such right?

Suggestion: all modes should be pre-declared in a declaration section as per
[F]lex

	grammar regex;
	....
	modes ..., ..., ...., .....;
	xmodes .....;

and, each mode definition should be in a block:

Mode inside_brackets [
	.....
	.....
];


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From open.zone at virgin.net  Wed Jun  7 15:44:52 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  7 15:27:11 2006
Subject: =?iso-8859-1?Q?RE:_=BB=D8=B8=B4=A3=BA_RE:_=5Bantlr-interest=5D_So_I_wis?=
	=?iso-8859-1?Q?h_one_token_has_two_types?=
In-Reply-To: <20060607213749.55798.qmail@web15707.mail.cnb.yahoo.com>
Message-ID: <014901c68a84$015176b0$c704a8c0@hercules>

Jigang,

> > > I have two kinds of tokens, CHAR and ID, to identify
> > > 
> > > CHAR: LowerCaseChar;
> > > ID: (LowerCaseChar)+;

> > Can't be resolved in a lexer (well, it may be possible but 
> it usuallly 
> > gets very messy). Let the parser resolve it.

> If the grammar is
>  
> CHAR: LowerCaseChar;
> id: (CHAR)+;
> 
> What got is a tree other than a token/string. So I have to 
> use actions to get the string. Do you mean token/string 
> creation should be done in parser?

In your original post, ID is a lexer rule. It should still be.

In your parser:
- wherever a single-char literal is expected, use CHAR. 
- wherever an indentifier is expected use (CHAR | ID)     [since identifier
can also be single-char]
- wherever only a multi-char character sequence/string is expected use ID


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From sunjigang1965 at yahoo.com.cn  Wed Jun  7 15:34:19 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Wed Jun  7 15:34:23 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20RE:=20=BB=D8=B8=B4=A3=BA=20RE:=20[antlr-i?=
	=?gb2312?q?nterest]=20So=20I=20wish=20one=20token=20has=20two=20types?=
In-Reply-To: <012d01c68a7f$a8e88c10$c704a8c0@hercules>
Message-ID: <20060607223419.87293.qmail@web15708.mail.cnb.yahoo.com>

Micheal,

Sorry for being so silly, I put {$setType(ID);} outside (...)* :

ID: LowerCaseChar {$setType(CHAR);} ( LowerCaseChar)*  {$setType(ID);} 

I got it. It is a very good idea. 

I love antlr because of the mailing list.

Jigang 
  
--- Micheal J <open.zone@virgin.net>Ð´µÀ:

> Jigang,
> 
> > > > I have two kinds of tokens, CHAR and ID, to identify
> > > > 
> > > > CHAR: LowerCaseChar;
> > > > ID: (LowerCaseChar)+;
> 
> > > Can't be resolved in a lexer (well, it may be possible but 
> > it usuallly 
> > > gets very messy). Let the parser resolve it.
> 
> > If the grammar is
> >  
> > CHAR: LowerCaseChar;
> > id: (CHAR)+;
> > 
> > What got is a tree other than a token/string. So I have to 
> > use actions to get the string. Do you mean token/string 
> > creation should be done in parser?
> 
> In your original post, ID is a lexer rule. It should still be.
> 
> In your parser:
> - wherever a single-char literal is expected, use CHAR. 
> - wherever an indentifier is expected use (CHAR | ID)     [since identifier
> can also be single-char]
> - wherever only a multi-char character sequence/string is expected use ID
> 
> 
> Micheal
> 
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
> 
> 


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From craymer at warpiv.com  Wed Jun  7 16:59:16 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Wed Jun  7 16:59:24 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
Message-ID: <005401c68a8e$651b60c0$6402a8c0@Fafnir>

Another +1.  That's a PCCTS feature that I've had occasion to miss, and it
would be good to have it back.

I would suggest using something similar to the PCCTS approach for assigning
rules to modes:  the PCCTS syntax was to use "#lexclass" <mode> to cause
following lexer rules to be a part of <mode>.  Make <mode> a list of modes
and find a good name to replace "lexclass", and I think that the syntax
would be convenient.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, June 07, 2006 2:02 PM
> To: ANTLR Interest
> Subject: [antlr-interest] lexical modes
> 
> Hi, consider matching strings in the lexer.  It's pretty easy in
> ANTLR as you can make rule references:
> 
> STRING : '"' (ESC | .)* '"' ;
> ESC : ... ;
> 
> What if you want the lexer though to return a stream of tokens chosen
> from a different set in between square brackets such as when
> recognizing regular expressions.  Inside [...] you can refer to '('
> as just a char not a grouping symbol.  Rather than creating and
> switching to a new lexer every time you see a '[', perhaps good old
> lexical modes from lex are the right idea.
> 
> grammar regex;
> 
> expr : atom | range | ebnf | ... ;
> 
> range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;
> 
> LBRACK : '[' {pushMode(inside_brackets);} ;
> 
> mode inside_brackets;
> 
> CHAR : ... ;
> DASH : '-' ;
> RBRACK : ']' {popMode();} ;
> 
> Something like that...make sense to add?  ANTLR can just switch-on-
> mode when it enters nextToken() to jump to the appropriate set of
> lexical rules.
> 
> Ter


From sunjigang1965 at yahoo.com.cn  Wed Jun  7 06:19:41 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Wed Jun  7 19:46:29 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20Re:=20[antlr-interest]=20So=20I=20wish=20?=
	=?gb2312?q?one=20token=20has=20two=20types?=
In-Reply-To: <953A2EE0-8F5D-479F-90E5-3DF7FE5D076C@martin-probst.com>
Message-ID: <20060607131941.844.qmail@web15704.mail.cnb.yahoo.com>

Thanks, the action works.

While, I just worried this method has a disadvantage. What I know is that, antlr does not check
semantics of action. In this example, the token set of ID is greater than CHAR; So to parser
generator, the token set is ID other than CHAR, nondeterministic warnings would be given for where
original CHAR would not, especially for large scale grammar.

Robert 

   
--- Martin Probst <mail@martin-probst.com>Ð´µÀ:

> You should probably consider CHAR to be a special case of ID and give  
> an error if it's longer than 1, e.g.
> 
> char: id:ID { if (#id.getText().length() > 1) throw new  
> RecognitionException(...)); };
> 
> and replace references to CHAR with references to char and have the  
> CHAR rule in the lexer be protected.
> 
> Am 06.06.2006 um 16:14 schrieb Ëï¼Í¸Õ Jigang (Robert) Sun:
> 
> > I have two kinds of tokens, CHAR and ID, to identify
> >
> > CHAR: LowerCaseChar;
> > ID: (LowerCaseChar)+;
> >
> > a single char, e.g. 's', could be either type of CHAR of ID,
> >
> > the following lexical rule can only assign one type,
> >
> > ID: LowerCaseChar {$setType(CHAR);} ( LowerCaseChar)* {$setType 
> > (ID);} //get only one type
> > protected LowerCaseChar: 'a'..'z';
> >
> > In parser I need 's' be scanned as type of CHAR or ID in different  
> > context.
> >
> > Micheal J ever told me to see rule INT_LITERAL of csharp_v1  
> > example, I think that method can only
> > differ situation like
> >
> >      INTEGER: (DIGIT)+;
> > from
> >      REAL: (DIGIT)+ '.' (DIGIT)+;
> >
> > use a rule like
> >
> > VALUE: (DIGIT)+ {$setType(INTEGER);} ('.' (DIGIT)+ {$setType 
> > (REAL);})?;
> >
> > if same text such as "32" is treated as INTEGER in one occasion,  
> > while in other case it need to be
> > recognised as REAL the above method could not work.
> >
> > Probaly the anwser is in the example, but the csharp_v1 grammar is  
> > in a big size. I have not find
> > the solution.
> >
> > So I wish one token has two types, thus 's' feeding to parser is of  
> > CHAR or ID depending by my
> > needs.
> >
> > Or could composite token forming be left to parser,
> >
> > id:(LowerCaseChar)+;
> >
> > a string "name" could be converted a single token, not a tree in  
> > parser?
> >
> > Many thanks.
> >
> > Robert
> >
> >
> >
> > __________________________________________________
> > ¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
> > http://cn.mail.yahoo.com
> >
> 
> 


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From sohail at taggedtype.net  Wed Jun  7 20:01:46 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Wed Jun  7 20:01:55 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
References: <94804819-D6B3-43B3-8924-88E27B632A44@cs.usfca.edu>
Message-ID: <1149735707.32026.1.camel@localhost.localdomain>

On Wed, 2006-06-07 at 14:01 -0700, Terence Parr wrote:
> Hi, consider matching strings in the lexer.  It's pretty easy in  
> ANTLR as you can make rule references:
> 
> STRING : '"' (ESC | .)* '"' ;
> ESC : ... ;
> 
> What if you want the lexer though to return a stream of tokens chosen  
> from a different set in between square brackets such as when  
> recognizing regular expressions.  Inside [...] you can refer to '('  
> as just a char not a grouping symbol.  Rather than creating and  
> switching to a new lexer every time you see a '[', perhaps good old  
> lexical modes from lex are the right idea.
> 
> grammar regex;
> 
> expr : atom | range | ebnf | ... ;
> 
> range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;
> 
> LBRACK : '[' {pushMode(inside_brackets);} ;
> 
> mode inside_brackets;
> 
> CHAR : ... ;
> DASH : '-' ;
> RBRACK : ']' {popMode();} ;

You could qualify the mode somehow or group it:

LBRACK :....

mode inside_brackets
{
CHAR : ...
DASH : ...
}

OTHER:...

This would allow one to keep tokens that apply to a mode close to the
rules that use it.


From murf at parsetree.com  Thu Jun  8 07:26:12 2006
From: murf at parsetree.com (Steve Murphy)
Date: Thu Jun  8 07:26:24 2006
Subject: [antlr-interest] lexical modes
In-Reply-To: <20060608024630.90F03DCDEE@www.antlr.org>
References: <20060608024630.90F03DCDEE@www.antlr.org>
Message-ID: <1149776773.9714.107.camel@monster>

On Wed, 7 Jun 2006 14:01:39 -0700  (15:01 MDT), Terence Parr
<parrt@cs.usfca.edu>antlr-interest-request@antlr.org wrote:
> Hi, consider matching strings in the lexer.  It's pretty easy in  
> ANTLR as you can make rule references:
> 
> STRING : '"' (ESC | .)* '"' ;
> ESC : ... ;
> 
> What if you want the lexer though to return a stream of tokens
> chosen  
> from a different set in between square brackets such as when  
> recognizing regular expressions.  Inside [...] you can refer to '('  
> as just a char not a grouping symbol.  Rather than creating and  
> switching to a new lexer every time you see a '[', perhaps good old  
> lexical modes from lex are the right idea.
> 
> grammar regex;
> 
> expr : atom | range | ebnf | ... ;
> 
> range : LBRACK (CHAR | CHAR DASH CHAR)+ RBRACK ;
> 
> LBRACK : '[' {pushMode(inside_brackets);} ;
> 
> mode inside_brackets;
> 
> CHAR : ... ;
> DASH : '-' ;
> RBRACK : ']' {popMode();} ;
> 
> Something like that...make sense to add?  ANTLR can just switch-on- 
> mode when it enters nextToken() to jump to the appropriate set of  
> lexical rules.
> 
> Ter
> 
> 
> 
> 

This sounds great! What do you do about look-ahead tokens? Any concerns
there?

murf


From u.hobelmann at web.de  Thu Jun  8 08:07:24 2006
From: u.hobelmann at web.de (Ulrich Hobelmann)
Date: Thu Jun  8 08:07:32 2006
Subject: [antlr-interest] Problem: part of AST gets lost in limbo
Message-ID: <6C34AD0C-0ADD-43EE-A0D3-D56FDF582BDD@web.de>

Hi, I'm using the Antlr Java 1.5 grammar + tree parser, working nicely.

My problem: in one instance now a part of the parsed AST gets lost  
between the parser and tree parser.  The tree parser only receives  
part of the expression; the rest is simply lost.

This happens in the java15.g file in the production  
"compoundStatement", which I modified as follows:

compoundStatement!
	:	lc:LCURLY! //^ {#lc.setType(SLIST);}
			// include the (possibly-empty) list of statements
			sts:(statement)*
		rc:RCURLY!
         {
             /* wrap the line numbers as an IDENT string and smuggle  
them through ;-) */
             #compoundStatement =
                 #(#[SLIST,"SLIST"],
                   #[IDENT,Integer.toString(lc.getLine())],
                   #[IDENT,Integer.toString(rc.getLine())],
                   sts);
         }
	;

I also put a println() inside the "sts:(statement)*" to ensure that  
it works, and indeed it prints several lines as it should.  Now the  
part of the tree parser seems to not receive the "sts" part:

slist { ... return and variable decls ... }
	:	#( SLIST l1:IDENT l2:IDENT (e1=stat
                 {
                     System.out.println("STATEMENT");
                 }
             )*)
         //#( SLIST (stat)*)
	;

For some reason the list of statements exists in the parser, but in  
the tree parser STATEMENT doesn't print even once.  I can only think  
that there must be something wrong with my expression in the parser  
"compoundStatement", but other expressions seem to be written the  
same way, with no problem at all...

Any ideas?

Regards,
   Ulrich
From Kai.Koehne at student.hpi.uni-potsdam.de  Thu Jun  8 11:09:42 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Thu Jun  8 11:09:49 2006
Subject: AW: [antlr-interest] Problem: part of AST gets lost in limbo
References: <6C34AD0C-0ADD-43EE-A0D3-D56FDF582BDD@web.de>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E99@3mxstu1r.hpi.uni-potsdam.de>

Hi Ulrich,
 
> sts:(statement)*
 
this will not work. According to the manual, only atomic or rule reference production elements can be labeled:
http://www.antlr.org/doc/metalang.html#_bb16
 
Instead of referencing (statement)* directly, you can use #lc.getNextSibling().
 
Regards,

Kai Koehne

________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Ulrich Hobelmann
Gesendet: Do 08.06.2006 17:07
An: antlr-interest@antlr.org
Betreff: [antlr-interest] Problem: part of AST gets lost in limbo



Hi, I'm using the Antlr Java 1.5 grammar + tree parser, working nicely.

My problem: in one instance now a part of the parsed AST gets lost 
between the parser and tree parser.  The tree parser only receives 
part of the expression; the rest is simply lost.

This happens in the java15.g file in the production 
"compoundStatement", which I modified as follows:

compoundStatement!
        :       lc:LCURLY! //^ {#lc.setType(SLIST);}
                        // include the (possibly-empty) list of statements
                        sts:(statement)*
                rc:RCURLY!
         {
             /* wrap the line numbers as an IDENT string and smuggle 
them through ;-) */
             #compoundStatement =
                 #(#[SLIST,"SLIST"],
                   #[IDENT,Integer.toString(lc.getLine())],
                   #[IDENT,Integer.toString(rc.getLine())],
                   sts);
         }
        ;

I also put a println() inside the "sts:(statement)*" to ensure that 
it works, and indeed it prints several lines as it should.  Now the 
part of the tree parser seems to not receive the "sts" part:

slist { ... return and variable decls ... }
        :       #( SLIST l1:IDENT l2:IDENT (e1=stat
                 {
                     System.out.println("STATEMENT");
                 }
             )*)
         //#( SLIST (stat)*)
        ;

For some reason the list of statements exists in the parser, but in 
the tree parser STATEMENT doesn't print even once.  I can only think 
that there must be something wrong with my expression in the parser 
"compoundStatement", but other expressions seem to be written the 
same way, with no problem at all...

Any ideas?

Regards,
   Ulrich


From u.hobelmann at web.de  Thu Jun  8 11:43:36 2006
From: u.hobelmann at web.de (Ulrich Hobelmann)
Date: Thu Jun  8 11:43:44 2006
Subject: AW: [antlr-interest] Problem: part of AST gets lost in limbo
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E99@3mxstu1r.hpi.uni-potsdam.de>
References: <6C34AD0C-0ADD-43EE-A0D3-D56FDF582BDD@web.de>
	<D90489B77ED9F8439A3C784F732BEC9C737E99@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <E537D3C6-4745-492C-A082-1A252B349E6A@web.de>

On Jun 8, 2006, at 8:09 PM, Koehne Kai wrote:

> Hi Ulrich,
>
>> sts:(statement)*
>
> this will not work. According to the manual, only atomic or rule  
> reference production elements can be labeled:
> http://www.antlr.org/doc/metalang.html#_bb16
>
> Instead of referencing (statement)* directly, you can use  
> #lc.getNextSibling().

Hm, my Java complains that that method (lc.getNextSibling()) can't be  
found in class antlr.Token.

But simply factoring the statements out into another production helps  
on first glance.

Too bad Antlr didn't complain about my wrong syntax.  I kept thinking  
it was legal code (maybe because the statements even was wrapped in  
() which makes it look like a single element)...


Thanks!
   Ulrich
From juho.jussila at iki.fi  Fri Jun  9 02:25:21 2006
From: juho.jussila at iki.fi (Juho Jussila)
Date: Fri Jun  9 02:30:10 2006
Subject: [antlr-interest] Newbie - How to count indentation level?
Message-ID: <loom.20060609T092552-683@post.gmane.org>

Hi

I'm trying to parse following simple text and build AST.

------------------------------
E01
H01
	H04
	H05
		H06
		H06
	H07
	H02
		H05
		H03
H08
H81
H09
	H22
------------------------------

AST should be like this:

          Root
          / \
       E01  H01  ...
           / | \ 
          /  |  \
        H04 H05 H07 ...
            / \
          H06 H06 


I managed to a create grammar, but the problem is that max indentation
level is hard coded. Is there a way to make this more generic and
allow unlimited indentation level ?

------------------------------
class P extends Parser;
options { 
    buildAST=true; 
    k=4;
}
tab1 : TAB;
tab2 : tab1 TAB;

start : (level1)* { ## = #([ROOT,"Root"], ##); }
     ;
level1 : 
        TUNNUS^ newline! (level2)*
        ;
level2:
        tab1! TUNNUS^ newline! (level3)*
        ;
level3:
        tab2! TUNNUS newline!
        ;
newline:
        NEWLINE | EOF
        ;


class L extends Lexer;
options {
    caseSensitive = false;
}
protected LETTER: ('a'..'?');
protected NUMBER: ('0'..'9');
TUNNUS:     LETTER (LETTER|NUMBER)*;
NEWLINE
    :   '\r' '\n'    // DOS
    |   '\n'        // UNIX    
    { newline(); };
WS  :   (' ') { $setType(Token.SKIP); }; 
TAB : '\t';
------------------------------


Another attempt:
------------------------------
...
start : (level1)* { ## = #([ROOT,"Root"], ##); }
     ;

level[int i]
{ int count = 0; }
    :
        TUNNUS^ newline!
        ( { count < (i+1) }? 
            TAB
            { count++; }     
        )* 
        ({ count == (i+1) }? (level[i+1]))*
    ;
...
------------------------------

But it doesn't work. Result in XML-format:

<Root>
  <E01/>
  <H01>
    <H04/>
    <H05>
      <H06/>
      <H06/>
      <H07/>
      <H02/>
      <H05/>
      <H03/>
      <H08/>
      <H81/>
      <H09/>
      <H22/>
    </H05>
  </H01>
</Root>


-- 
Thanks in advance

Juho Jussila

From Kai.Koehne at student.hpi.uni-potsdam.de  Fri Jun  9 03:06:12 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Fri Jun  9 03:06:15 2006
Subject: AW: [antlr-interest] Newbie - How to count indentation level?
References: <loom.20060609T092552-683@post.gmane.org>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E9B@3mxstu1r.hpi.uni-potsdam.de>

Hi,
 
Have a look at the Python grammar. It introduces a separate stage, a token stream, between the lexer and the parser. This stage converts the explicit indentation information in virtual IDENT and DEDENT-symbols.
 
Imagine following input:
 
A
  B
C
 
Your lexer could scan this as:
 
[A]
[NEWLINE]
[LEADING_WS, '  ']
[B]
[NEWLINE]
[C]
 
The token stream stage would generate:
 
[A]
[NEWLINE]
[INDENT]
[B]
[NEWLINE]
[DEDENT]
[C] 
 
Which can be handled quite nicely by the parser (NOT TESTED!):
 
entity: A
       |  B
       |  C
 
statements: e:entity (NEWLINE! | EOF!) (in:INDENT! (statements)+ DEDENT!)?
                   {
                     if (#in != null)
                       #statements = #(#e, #in.getNextSibling());
                   }
          
program: (statements)+
              {
                #program = #([ROOT], #program);
              }
 
 
Python grammar: http://www.antlr.org/grammar/1078018002577/python.tar.gz
TokenStream interface: http://www.antlr.org/javadoc/antlr/TokenStream.html
 
Regards,
 
Kai Koehne <http://www.antlr.org/grammar/1078018002577/python.tar.gz> 

________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Juho Jussila
Gesendet: Fr 09.06.2006 11:25
An: antlr-interest@antlr.org
Betreff: [antlr-interest] Newbie - How to count indentation level?



Hi

I'm trying to parse following simple text and build AST.

------------------------------
E01
H01
        H04
        H05
                H06
                H06
        H07
        H02
                H05
                H03
H08
H81
H09
        H22
------------------------------

AST should be like this:

          Root
          / \
       E01  H01  ...
           / | \
          /  |  \
        H04 H05 H07 ...
            / \
          H06 H06


I managed to a create grammar, but the problem is that max indentation
level is hard coded. Is there a way to make this more generic and
allow unlimited indentation level ?

------------------------------
class P extends Parser;
options {
    buildAST=true;
    k=4;
}
tab1 : TAB;
tab2 : tab1 TAB;

start : (level1)* { ## = #([ROOT,"Root"], ##); }
     ;
level1 :
        TUNNUS^ newline! (level2)*
        ;
level2:
        tab1! TUNNUS^ newline! (level3)*
        ;
level3:
        tab2! TUNNUS newline!
        ;
newline:
        NEWLINE | EOF
        ;


class L extends Lexer;
options {
    caseSensitive = false;
}
protected LETTER: ('a'..'?');
protected NUMBER: ('0'..'9');
TUNNUS:     LETTER (LETTER|NUMBER)*;
NEWLINE
    :   '\r' '\n'    // DOS
    |   '\n'        // UNIX   
    { newline(); };
WS  :   (' ') { $setType(Token.SKIP); };
TAB : '\t';
------------------------------


Another attempt:
------------------------------
...
start : (level1)* { ## = #([ROOT,"Root"], ##); }
     ;

level[int i]
{ int count = 0; }
    :
        TUNNUS^ newline!
        ( { count < (i+1) }?
            TAB
            { count++; }    
        )*
        ({ count == (i+1) }? (level[i+1]))*
    ;
...
------------------------------

But it doesn't work. Result in XML-format:

<Root>
  <E01/>
  <H01>
    <H04/>
    <H05>
      <H06/>
      <H06/>
      <H07/>
      <H02/>
      <H05/>
      <H03/>
      <H08/>
      <H81/>
      <H09/>
      <H22/>
    </H05>
  </H01>
</Root>


--
Thanks in advance

Juho Jussila



From Myburg_G at mtn.co.za  Fri Jun  9 02:24:27 2006
From: Myburg_G at mtn.co.za (Gerrie Myburg  [ MTN - Innovation Centre ])
Date: Fri Jun  9 03:26:35 2006
Subject: [antlr-interest] sentences of a grammar
Message-ID: <5D9A201EDE2A834BA246B28B31FA3F680378A022@MTNMAIL.mtn.co.za>

I write some code that will take an antlr grammar definition, create a
graph from the grammar and will try to generate all possible sentences
from the grammar. The following rules are used to avoid infinite length
sentences.

(a)* is rewritten as ( |a|aa| ... ) to a max limit 
(a)+ is rewritten as ( a|aa| ... ) to a max limit
(a)? is rewritten as ( |a) 

Recursive loops are avoided by entering the loop once and once only.
Infinite recursion is detected and reported.

The sentences are created by finding all possible paths in the grammar
graph. Backtracking is used in the graph at every point in the path
where a '|' is encountered.

Token references are resolved at the moment by referring to a map of
token ref definitions. If no definition is supplied then the token ref
string is used instead.

The code is meant to be used on a grammar that has already been passed
by the antlr compiler.

I wrote the code to test the tree parser of a sql compiler. While
testing the code I found that the number of sentences generated for some
of the sql rules is enormous. The number of sentences can run into the
millions for most rules. The antlr grammar in turn yields about 8000
sentences.

The only sensible way of using the code is to generate a sentence then
feed it to the destination compiler directly instead of writing out a
file.

The sentences are not necessarily semantically correct at the moment. In
fact I am sure that it is not the case.

Does anyone want me to upload the code to the antlr website?


NOTE: This e-mail message is subject to the MTN Group disclaimer see http://www.mtn.co.za/disclaimer

From dieter_frej at gmx.net  Fri Jun  9 05:48:42 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Fri Jun  9 05:48:48 2006
Subject: [antlr-interest] identifiers that are not allowed to be like
	keywords
Message-ID: <44896E2A.2010306@gmx.net>

Hi everybody,

I am still working on the Java grammar for antlr v3 and I do not know
how to make the following "happen" (copied from the Java language
specification and totally independent from the parser/lexer question
because of the capatilized first character):

Identifier:
IdentifierChars but not a Keyword or BooleanLiteral or NullLiteral

IdentifierChars:
JavaLetter
IdentifierChars JavaLetterOrDigit

As a Java developer, I know that e.g. "true" is a reserved keyword which
is not allowed as a identifier. But "atrue" or "truea" ARE indeed
allowed. For the "... but not ..." I used NOT operator (~) from antlr.
Unfortunately it is not working the way I want.


grammar butNot;

production
	:	production2 ~keyword
	;

production2
	:	(OneChar)*
	;
	
keyword
	:	'true'
	;
		
OneChar
	:	'a'
	;


The small grammar above allows inputs like "aaa", but not "atrue" or
"truea". It is more or less correct because keyword is not allowed to be
in the input sequence. Therefore, my question:
Is there any way to realize that or is that already too much logic in
the grammar that should not be in there?

Thanks for you help!

- Didi

From mail at martin-probst.com  Fri Jun  9 07:19:21 2006
From: mail at martin-probst.com (Martin Probst)
Date: Fri Jun  9 07:19:29 2006
Subject: [antlr-interest] identifiers that are not allowed to be like
	keywords
In-Reply-To: <44896E2A.2010306@gmx.net>
References: <44896E2A.2010306@gmx.net>
Message-ID: <7AFBC425-7272-42F1-AE19-77C005B5D83D@martin-probst.com>

Hi,

> I am still working on the Java grammar for antlr v3 and I do not know
> how to make the following "happen" (copied from the Java language
> specification and totally independent from the parser/lexer question
> because of the capatilized first character):
>
> Identifier:
> IdentifierChars but not a Keyword or BooleanLiteral or NullLiteral
>
> IdentifierChars:
> JavaLetter
> IdentifierChars JavaLetterOrDigit

Don't worry, ANTLR does this for you automatically (in fact, it's  
really difficult to get a different behaviour). Sequences of  
characters will get the ID token type (or something similar). Then  
they will be tested against the so called Literals table, which  
contains stuff like 'true'. If it matches, the token type is changed  
from ID to something different, e.g. LITERAL_true. A rule like:

identifier: ID;

will not match that token then, and everything is fine for you. You  
can read about that in the manual by looking for the option  
"testLiterals".

Martin
From parrt at cs.usfca.edu  Fri Jun  9 08:35:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  9 08:35:21 2006
Subject: [antlr-interest] identifiers that are not allowed to be like
	keywords
In-Reply-To: <7AFBC425-7272-42F1-AE19-77C005B5D83D@martin-probst.com>
References: <44896E2A.2010306@gmx.net>
	<7AFBC425-7272-42F1-AE19-77C005B5D83D@martin-probst.com>
Message-ID: <15209C10-145C-49B0-A629-C3878AE0D548@cs.usfca.edu>

On Jun 9, 2006, at 7:19 AM, Martin Probst wrote:
> Don't worry, ANTLR does this for you automatically (in fact, it's  
> really difficult to get a different behaviour). Sequences of  
> characters will get the ID token type (or something similar). Then  
> they will be tested against the so called Literals table, which  
> contains stuff like 'true'. If it matches, the token type is  
> changed from ID to something different, e.g. LITERAL_true. A rule  
> like:
>
> identifier: ID;
>
> will not match that token then, and everything is fine for you. You  
> can read about that in the manual by looking for the option  
> "testLiterals".

For ANTLR v3, it's even simpler than v2.  There is no literals  
table.  All literals are rules in the lexer and when rules overlap  
like ID and keyword, the ambiguity is resolved by choosing the rule  
mentioned first.  So

B : "begin" ;

ID : 'a'..'z'+ ;

will do what you want.  Just mention keywords as 'if' in the grammar  
and v3 will take care of the rest.

BTW, we will need this java grammar built from the spec so I'm  
willing to help you out here. ;)

Ter
From joerg at jrsoftware.de  Fri Jun  9 14:15:39 2006
From: joerg at jrsoftware.de (=?ISO-8859-15?Q?J=F6rg_Rathlev?=)
Date: Fri Jun  9 14:15:50 2006
Subject: [antlr-interest] Something like EOF token for tree parsers?
Message-ID: <4489E4FB.8020404@jrsoftware.de>

Hi,

in a tree parser, can I somehow make sure I have matched all children of
a tree?

I have just run into a bug in the java15.tree.g, in rule methodHead it
uses the following code for parsing parameter declarations:
#( PARAMETERS (parameterDef)* )
But it should be:
#( PARAMETERS (parameterDef)* (variableLengthParameterDef)? )

This bug is easily fixed, but it is not easily found because ANTLR won't
complain when the parameters subtree has an additional child at its end
that is not matched by "parameterDef". Instead, variable length
parameters are silently ignored.

In normal parsers, I can use the special "EOF" token to make sure I have
reached the end of the file and I am not ignoring any invalid input at
the end of the file. Does a similar feature exist for subtrees in tree
parsers?


Thanks
Joerg
From gudnabrsam at yahoo.com  Fri Jun  9 14:20:03 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri Jun  9 14:20:11 2006
Subject: [antlr-interest] Something like EOF token for tree parsers?
In-Reply-To: <4489E4FB.8020404@jrsoftware.de>
Message-ID: <20060609212003.94069.qmail@web30909.mail.mud.yahoo.com>



--- J?rg Rathlev <joerg@jrsoftware.de> wrote:

> Hi,
> 
> in a tree parser, can I somehow make sure I have
> matched all children of
> a tree?
> 
> I have just run into a bug in the java15.tree.g, in
> rule methodHead it
> uses the following code for parsing parameter
> declarations:
> #( PARAMETERS (parameterDef)* )
> But it should be:
> #( PARAMETERS (parameterDef)*
> (variableLengthParameterDef)? )
> 
> This bug is easily fixed, but it is not easily found
> because ANTLR won't
> complain when the parameters subtree has an
> additional child at its end
> that is not matched by "parameterDef". Instead,
> variable length
> parameters are silently ignored.
> 
> In normal parsers, I can use the special "EOF" token
> to make sure I have
> reached the end of the file and I am not ignoring
> any invalid input at
> the end of the file. Does a similar feature exist
> for subtrees in tree
> parsers?

Couldn't you use a semantic predicate?

-Matt

> 
> 
> Thanks
> Joerg
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From sunjigang1965 at yahoo.com.cn  Fri Jun  9 14:52:09 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri Jun  9 14:52:13 2006
Subject: [antlr-interest] end-of-token
Message-ID: <20060609215209.48520.qmail@web15708.mail.cnb.yahoo.com>

lookahead set to k=2,

IntDenot: ('+'|'-')? (Digit)+;
Sign:'+'|'-';

warning generated:

ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
lex.g: warning:lexical nondeterminism between rules IntDenot and Sign upon
lex.g:     k==1:'+','-'
lex.g:     k==2:<end-of-token>

IntDenot: ('+'|'-')? (Digit)+; should equals to
 
IntDenot: (('+'|'-') (Digit)+) | (Digit)+;

so

IntDenot: (('+'|'-') (Digit)+) | (Digit)+;
Sign:'+'|'-';

should not has any confusion.
if inupt is '+', the second rule should match;  if input "+45" or "45", the first rule should be
invoked.
 
I am not sure what the <end-of-token> char is.

Thank you for your help.

Jigang


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From parrt at cs.usfca.edu  Fri Jun  9 17:11:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  9 17:12:12 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
Message-ID: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>

Hi everyone!

I'm mostly feature frozen I think for 3.0b!!!  Just got some bug  
fixes to do.  I have some cool things I'm working on but they will  
have to wait til 3.1.  I'm going to try to push 3.0b by end of  
June!!!  3 years of development ugh...perhaps it will go real right  
before school starts (mid August)?  Note that people have been using  
it for awhile now and it just reached a critical moment: I felt it  
was stable enough to actually use to build itself.  I spent all week  
rebuilding how actions are translated using an ANTLR v3 lexer grammar  
in filter mode.  I.e., I have enough confidence in the tool to use it  
for something I care about ;)  The damn thing seems to work!

Concerning a manual: nobody but Kunle and I seem to be using the wiki  
much.  As it crashes my server every 2 weeks when it runs out of  
memory, should I just turn it off?  It's a nice FAQ mechanism, so I'd  
like to keep.  How do I get people to use it?

I've decided to write the ANTLR v3 reference guide as a book and  
publish it myself using lulu.com or whatever.  There are several  
advantages:

1. you get a professionally bound book printed on demand so it's  
always got the latest errors corrected

2. I don't have the pressure of a publisher on my back

3. I can publish a draft electronic copy (HTML) for free; people can  
comment on it and more importantly actually use it before the  
finished book arrives.  The HTML would continue to live even after  
the book was available so no one is forced to pay to use the tool.

4. The book can be a bit cheaper and I get more out of it than going  
with a publisher.

5. Something like this mode will be the wave of the future for  
publishing; let's give it a shot.

Normally publishers provide marketing and a kind of validation or  
certification that your tool is real; we don't need either of these.   
The link to the book can just be on the website, which is where 100%  
of the market for the book will visit. :)  The wiki can be the FAQ I  
guess.

Any comments on v3 timing or the idea of lulu.com?

Terence
From ewbank at gmail.com  Fri Jun  9 18:03:50 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun  9 18:03:53 2006
Subject: [antlr-interest] Something like EOF token for tree parsers?
In-Reply-To: <4489E4FB.8020404@jrsoftware.de>
References: <4489E4FB.8020404@jrsoftware.de>
Message-ID: <dd3a065f0606091803s10a6c22aj198f26b90c65a3d3@mail.gmail.com>

There's not a feature; I rolled my own by creating an "endKids" rule
that looks something like this; calling it "andNothingElse" is good
too:

   endKids [ AST parent ]
   :
         (   badkid:
                  {
                       // throw an exeception -- too many children for
/parent/ node.
                  }
         )?
   ;

This may force you to add a few "greedy=true" options, but I've found
the benefit outweighs the cost.

Note that you could create a separate audit pass that verifies tree
shape, to be used only in debug mode, rather than making your true
tree passes more complex.


On 6/9/06, J?rg Rathlev <joerg@jrsoftware.de> wrote:
> In normal parsers, I can use the special "EOF" token to make sure I have
> reached the end of the file and I am not ignoring any invalid input at
> the end of the file. Does a similar feature exist for subtrees in tree
> parsers?
From jbb at acm.org  Fri Jun  9 19:35:44 2006
From: jbb at acm.org (John B. Brodie)
Date: Fri Jun  9 19:35:48 2006
Subject: [antlr-interest] end-of-token
In-Reply-To: <20060609215209.48520.qmail@web15708.mail.cnb.yahoo.com>
	(sunjigang1965@yahoo.com.cn)
References: <20060609215209.48520.qmail@web15708.mail.cnb.yahoo.com>
Message-ID: <E1FotKC-00019L-00@gecko>

>lookahead set to k=2,
>
>IntDenot: ('+'|'-')? (Digit)+;
>Sign:'+'|'-';
>
>warning generated:
>
>ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
>lex.g: warning:lexical nondeterminism between rules IntDenot and Sign upon
>lex.g:     k==1:'+','-'
>lex.g:     k==2:<end-of-token>

try instead

no lookahead set (or k=1).

IntDenot : ( Digit )+ ;
Sign     : ( '+' | '-' ) ( ( Digit )+ { $setType(IntDenot); } )? ;

I believe that Lexer rules in v2 need to be left-factored, regardless
of lookahead...
From ronny-herzog at web.de  Sat Jun 10 01:58:40 2006
From: ronny-herzog at web.de (Ronny Herzog)
Date: Sat Jun 10 01:58:38 2006
Subject: [antlr-interest] Problems with python
Message-ID: <448A89C0.7000403@web.de>

Hello!

I have the following problem by checking out antlr for python. I wrote a 
very small grammar from a tutorial and generated some python code. But I 
got an error message I cannot handle:

 >
Traceback (most recent call last):
  File "tut1.py", line 17, in ?
    main()
  File "tut1.py", line 14, in main
    P.series()
  File "/home/earl/sourcecode/pylangs/tutorial1/SeriesParser.py", line 
50, in series
    self.element()
  File "/home/earl/sourcecode/pylangs/tutorial1/SeriesParser.py", line 
72, in element
    la1 = self.LA(1)
  File "/usr/lib/python2.4/antlr.py", line 2025, in LA
    return self.inputState.input.LA(i)
AttributeError: 'NoneType' object has no attribute 'LA'
<


The code is not much, so I post it here:
tut1.g

 >
options
{
    language = "Python";
}

class IntAndIDLexer extends Lexer;
 
INT : ('0'..'9')+ ;
ID  : ('a'..'z')+ ;
COMMA: ',' ;
NL : '\n';

class SeriesParser extends Parser;

/** Match an element (INT or ID) with possibly a
 *  bunch of ", element" pairs to follow matching
 *  input that looks like 32,a,size,28923,i
 */
series
    : element (COMMA element )* NL
        ;

/** Match either an INT or ID */
element: INT | ID ;
<

and the python code tut1.py:

 >

import IntAndIDLexer
import SeriesParser
import sys
import antlr

def main():
    L = IntAndIDLexer.Lexer()
    P = SeriesParser.Parser()
    P.setFilename(L.getFilename())

    for token in L :
        print token

    P.series()

if __name__ == "__main__":
    main()
<

Thx for any help!

Earl

-- 
Ronny Herzog
Bautzner Str. 55
01099 Dresden

0176/70082636
0351/7966484

From pink at odahoda.de  Sat Jun 10 14:22:54 2006
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat Jun 10 14:23:48 2006
Subject: [antlr-interest] Re: ANTLR 3.0 beta timing
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
Message-ID: <e6fd7e$gd8$1@sea.gmane.org>

Terence Parr wrote:

> I'm mostly feature frozen I think for 3.0b!!!  Just got some bug
> fixes to do.  I have some cool things I'm working on but they will
> have to wait til 3.1.  I'm going to try to push 3.0b by end of
> June!!!

Nice to hear.
What I'm interested in most is the Python target. The wiki says just '?' for
Python, but it does this for Ruby too, when there seems to be support for
Ruby in ea10.
Is Python being worked on? Is there anything I could use (even incomplete)
to tryout the new 3.0 features?
There are some issues I am struggling with, and 3.0 seems to solve them
nicely, so I would like to port my project to 3.0 (even when it's still
beta - I'm pretty sure that 3.0 will be stable before my 1.0 ;) ).

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/

From coxbrian at msu.edu  Sat Jun 10 14:30:53 2006
From: coxbrian at msu.edu (Brian Cox)
Date: Sat Jun 10 14:30:36 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
Message-ID: <200606101730.54447.coxbrian@msu.edu>

On Friday 09 June 2006 20:11, Terence Parr wrote:
> Any comments on v3 timing or the idea of lulu.com?

Sounds good to me!  My only concern so far has been the reliance on ANTLR 
2.7.6 for using ANTLR v3, but if you can now or will be able to soon build 
ANTLR v3 with itself I'd imagine that little problem will soon be history.  

To be honest, I started using ANTLR v3 some weeks ago after much frustration 
with ANTLR 2.7.6.  For some reason, I couldn't get an ANTLR 2 grammar of my 
own making to be accepted by ANTLR 2, let alone getting it to build AST 
trees.  With ANTLR v3, it's been relatively easy!  Initially, the "early 
access" nature of v3 scared me away, but I'm glad I finally took the plunge 
and am eagerly awaiting the beta releases and, eventually, the final release 
of 3.0 and whatever feature enhancements await us for v3.1.

-- 
 * Brian Cox <coxbrian@msu.edu>
From parrt at cs.usfca.edu  Sat Jun 10 15:08:06 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 10 15:08:17 2006
Subject: [antlr-interest] Re: ANTLR 3.0 beta timing
In-Reply-To: <e6fd7e$gd8$1@sea.gmane.org>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
	<e6fd7e$gd8$1@sea.gmane.org>
Message-ID: <BF1A618E-A86C-4BF5-8452-08E1EB8943F6@cs.usfca.edu>


On Jun 10, 2006, at 2:22 PM, Benjamin Niemann wrote:

> Terence Parr wrote:
>
>> I'm mostly feature frozen I think for 3.0b!!!  Just got some bug
>> fixes to do.  I have some cool things I'm working on but they will
>> have to wait til 3.1.  I'm going to try to push 3.0b by end of
>> June!!!
>
> Nice to hear.
> What I'm interested in most is the Python target. The wiki says  
> just '?' for
> Python, but it does this for Ruby too, when there seems to be  
> support for
> Ruby in ea10.

Not seem much Ruby activity yet...as for Python, I'm CC'ing the  
Python codegen maniacs.

> Is Python being worked on? Is there anything I could use (even  
> incomplete)
> to tryout the new 3.0 features?

Not sure if anyone has decided to do it yet...

> There are some issues I am struggling with, and 3.0 seems to solve  
> them
> nicely, so I would like to port my project to 3.0 (even when it's  
> still
> beta - I'm pretty sure that 3.0 will be stable before my 1.0 ;) ).


Hooray!
Ter
From parrt at cs.usfca.edu  Sat Jun 10 15:13:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 10 15:13:41 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <200606101730.54447.coxbrian@msu.edu>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
	<200606101730.54447.coxbrian@msu.edu>
Message-ID: <6B33C539-AB74-4E8F-93BD-78C29184AA1C@cs.usfca.edu>


On Jun 10, 2006, at 2:30 PM, Brian Cox wrote:

> On Friday 09 June 2006 20:11, Terence Parr wrote:
>> Any comments on v3 timing or the idea of lulu.com?
>
> Sounds good to me!  My only concern so far has been the reliance on  
> ANTLR
> 2.7.6 for using ANTLR v3, but if you can now or will be able to  
> soon build
> ANTLR v3 with itself I'd imagine that little problem will soon be  
> history.

Yeah, relying on v2 is a drag, but ST relies on it also and so BOTH  
tools need to be updated.  Note that this is ONLY for the tool itself  
and not the generated code.  The generated code is v3 clean.

> To be honest, I started using ANTLR v3 some weeks ago after much  
> frustration
> with ANTLR 2.7.6.

heh heh heh

> For some reason, I couldn't get an ANTLR 2 grammar of my
> own making to be accepted by ANTLR 2, let alone getting it to build  
> AST
> trees.  With ANTLR v3, it's been relatively easy!

Now that is an endorsement!

> Initially, the "early
> access" nature of v3 scared me away, but I'm glad I finally took  
> the plunge
> and am eagerly awaiting the beta releases and, eventually, the  
> final release
> of 3.0 and whatever feature enhancements await us for v3.1.

:)

The early access is my way of saying "the world will change out from  
underneath you maybe".  However, it has proven rather serviceable.  I  
found it very effective building my start on Mantra (http:// 
www.linguamantra.org) and I found my first actual bug in the analysis  
engine in over a year...I messed something up a while ago and it just  
surfaced.  I was able to fix in 30 minutes and the resulting code is  
simpler and more efficient. :)

Trust me, v3 works.  It's just the fringes which are a little shaky.   
I'm now in bug fix mode and it will go beta w/o a real manual.  Then  
I work on the manual, but 3.0 final will definitely appear before  
school starts.

I'm trying to sneak incremental parsing into 3.0, but it might not  
make it.  Prashant Deva, of ANTLRStudio fame, and I are trying to  
formalize his strategy from ANTLRStudio but I'm completely focused on  
getting 3.0 out and to finish the journal paper with Jean Bovet on  
ANTLRWorks.

Terence
From parrt at cs.usfca.edu  Sat Jun 10 16:21:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 10 16:21:22 2006
Subject: [antlr-interest] executing actions in backtracking mode
Message-ID: <80DEE6AD-42C9-4A30-8E3A-A1578A37A54E@cs.usfca.edu>

Ok, so I really need this now.  I need to gate most actions out  
during backtracking but I need a way to force execution of an action  
no matter what.  I think we could add the notion of an option to  
actions rather than a special character.  Or, perhaps the @ syntax.

Currently we use

rule
@init {
	int i=3;
}
@finally {
	System.out.println("on my way out of rule");
}
	:	...
	;

for init actions etc...  Note that init actions are always executed  
during backtracking, but currently '@finally' are not.

Perhaps we do likewise for forcing execution:

a : @force{always exec} BLORT {regular action gated by  
backtracking==0} ;

or, better yet, a more general solution:

@gate(any condition){}

That way you could do more than force exec, you could specify the  
gate condition.  You can put an IF in the action now, but all actions  
are gated with if ( backtracking==0 ) already.

Hmm...I'm wondering if I can fake this somehow for now...perhaps a  
global action that lets you indicate the gate:

@synpredgate {backtracking==0} // default

Ter
From craymer at warpiv.com  Sat Jun 10 19:52:15 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Sat Jun 10 19:52:19 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <6B33C539-AB74-4E8F-93BD-78C29184AA1C@cs.usfca.edu>
Message-ID: <002001c68d02$0e437230$6402a8c0@Fafnir>

Oh no!  What are we going to do when we can't catch the newbies with
approximate LL(k)?  That will reduce a fair amount of message traffic in the
list.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Saturday, June 10, 2006 3:13 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] ANTLR 3.0 beta timing
> 
> 
> On Jun 10, 2006, at 2:30 PM, Brian Cox wrote:
> 
> > On Friday 09 June 2006 20:11, Terence Parr wrote:
> >> Any comments on v3 timing or the idea of lulu.com?
> >
> > Sounds good to me!  My only concern so far has been the reliance on
> > ANTLR
> > 2.7.6 for using ANTLR v3, but if you can now or will be able to
> > soon build
> > ANTLR v3 with itself I'd imagine that little problem will soon be
> > history.
> 
> Yeah, relying on v2 is a drag, but ST relies on it also and so BOTH
> tools need to be updated.  Note that this is ONLY for the tool itself
> and not the generated code.  The generated code is v3 clean.
> 
> > To be honest, I started using ANTLR v3 some weeks ago after much
> > frustration
> > with ANTLR 2.7.6.
> 
> heh heh heh
> 
> > For some reason, I couldn't get an ANTLR 2 grammar of my
> > own making to be accepted by ANTLR 2, let alone getting it to build
> > AST
> > trees.  With ANTLR v3, it's been relatively easy!
> 
> Now that is an endorsement!
> 
> > Initially, the "early
> > access" nature of v3 scared me away, but I'm glad I finally took
> > the plunge
> > and am eagerly awaiting the beta releases and, eventually, the
> > final release
> > of 3.0 and whatever feature enhancements await us for v3.1.
> 
> :)
> 
> The early access is my way of saying "the world will change out from
> underneath you maybe".  However, it has proven rather serviceable.  I
> found it very effective building my start on Mantra (http://
> www.linguamantra.org) and I found my first actual bug in the analysis
> engine in over a year...I messed something up a while ago and it just
> surfaced.  I was able to fix in 30 minutes and the resulting code is
> simpler and more efficient. :)
> 
> Trust me, v3 works.  It's just the fringes which are a little shaky.
> I'm now in bug fix mode and it will go beta w/o a real manual.  Then
> I work on the manual, but 3.0 final will definitely appear before
> school starts.
> 
> I'm trying to sneak incremental parsing into 3.0, but it might not
> make it.  Prashant Deva, of ANTLRStudio fame, and I are trying to
> formalize his strategy from ANTLRStudio but I'm completely focused on
> getting 3.0 out and to finish the journal paper with Jean Bovet on
> ANTLRWorks.
> 
> Terence

From sohail at taggedtype.net  Sat Jun 10 20:53:28 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Jun 10 20:53:34 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
Message-ID: <1149998009.11582.2.camel@localhost.localdomain>

On Fri, 2006-06-09 at 17:11 -0700, Terence Parr wrote:
> Concerning a manual: nobody but Kunle and I seem to be using the wiki  
> much.  As it crashes my server every 2 weeks when it runs out of  
> memory, should I just turn it off?  It's a nice FAQ mechanism, so I'd  
> like to keep.  How do I get people to use it?

A wiki is *indispensable*, but ime, it takes about a year of full-time
with a maintainer (yourself or volunteer) for it to really catch on.

I know you've been having this problem with confluence crashing etc, if
you like I can help you set up MoinMoin (wicked wiki). I've been using
it for about 1.5 yrs and its just become indispensable now, but this is
with a team of about 20.

Sohail

From kroepke at dolphin-services.de  Sun Jun 11 04:59:14 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sun Jun 11 04:59:21 2006
Subject: [antlr-interest] something like @lexer::init
Message-ID: <B7A23102-6A16-4BD4-BA42-DAC0ACE14E43@dolphin-services.de>

Hi!

Do we already have support for something like

lexer grammar foo;

@lexer::members {
	NSMutableDictionary *packetDict;	// this goes into header file
}	

@lexer::init { // (naming?)
	// do this stuff in the constructor/initializer
	// maybe setup the packetDict instance var...
	packetDict = [[NSMutableDictionary alloc] init];
}

or do I have to subclass the generated lexer? (I'd rather not...)

For extra credit I'd like to have a action scope for the dealloc/ 
destructor phase, too. Maybe @lexer::finally?

Happy hacking,

-k
From parrt at cs.usfca.edu  Sun Jun 11 08:17:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun 11 08:17:27 2006
Subject: [antlr-interest] Re: [antlr-dev] something like @lexer::init
In-Reply-To: <B7A23102-6A16-4BD4-BA42-DAC0ACE14E43@dolphin-services.de>
References: <B7A23102-6A16-4BD4-BA42-DAC0ACE14E43@dolphin-services.de>
Message-ID: <9B3DC19F-A96C-46C4-A150-ED79B93056BF@cs.usfca.edu>

On Jun 11, 2006, at 4:59 AM, Kay Roepke wrote:
> Do we already have support for something like
>
> lexer grammar foo;
>
> @lexer::members {
> 	NSMutableDictionary *packetDict;	// this goes into header file
> }	
>
> @lexer::init { // (naming?)
> 	// do this stuff in the constructor/initializer
> 	// maybe setup the packetDict instance var...
> 	packetDict = [[NSMutableDictionary alloc] init];
> }
>
> or do I have to subclass the generated lexer? (I'd rather not...)
>
> For extra credit I'd like to have a action scope for the dealloc/ 
> destructor phase, too. Maybe @lexer::finally?

Here's the beauty of v3's use of ST.  You can define whatever actions  
you want for your target.  ANTLR just passes them through and your  
target templates just need to reference them.

I added @synpredgate {...} last night for all targets and it just  
appears as <actions.parser.synpredgate> in the parser templates. :)

So, if your target needs them (doesn't ObjC have a ctor?) then define  
them! :)

Ter
From parrt at cs.usfca.edu  Sun Jun 11 09:35:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun 11 09:35:18 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <002001c68d02$0e437230$6402a8c0@Fafnir>
References: <002001c68d02$0e437230$6402a8c0@Fafnir>
Message-ID: <D290B230-27E4-4C3C-95BF-059118909ADC@cs.usfca.edu>


On Jun 10, 2006, at 7:52 PM, Loring Craymer wrote:

> Oh no!  What are we going to do when we can't catch the newbies with
> approximate LL(k)?  That will reduce a fair amount of message  
> traffic in the
> list.

Yeah, that will be nice to not have to explain :)
Ter
From parrt at cs.usfca.edu  Sun Jun 11 09:35:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun 11 09:36:00 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <1149998009.11582.2.camel@localhost.localdomain>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
	<1149998009.11582.2.camel@localhost.localdomain>
Message-ID: <8B2FACDC-B0DD-4763-8384-B4A24793B79C@cs.usfca.edu>

On Jun 10, 2006, at 8:53 PM, Sohail Somani wrote:
> On Fri, 2006-06-09 at 17:11 -0700, Terence Parr wrote:
> A wiki is *indispensable*, but ime, it takes about a year of full-time
> with a maintainer (yourself or volunteer) for it to really catch on.
>
> I know you've been having this problem with confluence crashing  
> etc, if
> you like I can help you set up MoinMoin (wicked wiki). I've been using
> it for about 1.5 yrs and its just become indispensable now, but  
> this is
> with a team of about 20.

I need something in Java to integrate with antlr.org...I like  
confluence, it's just suffering from the usual Java ailment: memory  
leak.

Ter

From sunjigang1965 at yahoo.com.cn  Sun Jun 11 09:48:37 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Sun Jun 11 09:48:44 2006
Subject: [antlr-interest] cyclic token  token vocabulary reference 
Message-ID: <20060611164837.28786.qmail@web15705.mail.cnb.yahoo.com>

In parser grammar option I import token vocabulary from that generated by lexer, in lexer I import
vacabulary from that generated by parser. The reason I do so just because I use double quoted
string to define token literals like <<  boolDenot: "TRUE" | "FALSE" ; >>, which should be
referenced by lexer, and parser is certainly need tokens defined in lexer. This causes problem:
after I delete <<  boolDenot: "TRUE" | "FALSE" ; >>  from parser, LITERAL_TRUE and LITERAL_FALSE
are still kept in token vacabulary file.

I do not know how do you deal with this situation. 

Thanks.

Jigang

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From sunjigang1965 at yahoo.com.cn  Sun Jun 11 10:11:43 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Sun Jun 11 10:11:47 2006
Subject: [antlr-interest] how to distinguish "::" from ":"
Message-ID: <20060611171143.95564.qmail@web15708.mail.cnb.yahoo.com>

The following rules only match single_column instead of double_column when meet input "::",

check:single_column|double_column;
double_column:"::" ;
single_column:":";

what I know is that by default antlr lexer is greedy, it is not hungary this moment.

Jigang   

__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From sunjigang1965 at yahoo.com.cn  Sun Jun 11 15:02:28 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Sun Jun 11 15:02:33 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20[antlr-interest]=20how=20to=20distinguish?=
	=?gb2312?q?=20"::"=20from=20":"?=
In-Reply-To: <20060611171143.95564.qmail@web15708.mail.cnb.yahoo.com>
Message-ID: <20060611220228.94806.qmail@web15701.mail.cnb.yahoo.com>

I've got the answer.

Cheers.

Jigang

--- "Ëï¼Í¸Õ Jigang (Robert) Sun" <sunjigang1965@yahoo.com.cn>Ð´µÀ:

> The following rules only match single_column instead of double_column when meet input "::",
> 
> check:single_column|double_column;
> double_column:"::" ;
> single_column:":";
> 
> what I know is that by default antlr lexer is greedy, it is not hungary this moment.
> 
> Jigang   
> 
> __________________________________________________
> ¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
> http://cn.mail.yahoo.com
> 


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From sohail at taggedtype.net  Sun Jun 11 20:27:26 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jun 11 20:27:32 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <8B2FACDC-B0DD-4763-8384-B4A24793B79C@cs.usfca.edu>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
	<1149998009.11582.2.camel@localhost.localdomain>
	<8B2FACDC-B0DD-4763-8384-B4A24793B79C@cs.usfca.edu>
Message-ID: <1150082846.10347.1.camel@localhost.localdomain>

On Sun, 2006-06-11 at 09:35 -0700, Terence Parr wrote:
> 
> I need something in Java to integrate with antlr.org...I like  
> confluence, it's just suffering from the usual Java ailment: memory  
> leak.

But then it'll never work... I just think an antlr wiki would be wicked.

What sort of integration are you looking for anyway?

From sohail at taggedtype.net  Sun Jun 11 20:28:29 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jun 11 20:28:35 2006
Subject: =?UTF-8?Q?=E5=9B=9E=E5=A4=8D=EF=BC=9A?= [antlr-interest] how
	to distinguish "::" from ":"
In-Reply-To: <20060611220228.94806.qmail@web15701.mail.cnb.yahoo.com>
References: <20060611220228.94806.qmail@web15701.mail.cnb.yahoo.com>
Message-ID: <1150082909.10347.3.camel@localhost.localdomain>

On Mon, 2006-06-12 at 06:02 +0800, ??? Jigang (Robert) Sun wrote:
> I've got the answer.
> 
> Cheers.
> 
> Jigang

Its proper manners to post your solution :)

My guess is you made tokens and used alts in the lexer. But I'll never
know!

From mail at martin-probst.com  Sun Jun 11 23:19:23 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun Jun 11 23:19:27 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <1150082846.10347.1.camel@localhost.localdomain>
References: <15FB61C8-2EF4-452F-AFF1-68DC93F745F4@cs.usfca.edu>
	<1149998009.11582.2.camel@localhost.localdomain>
	<8B2FACDC-B0DD-4763-8384-B4A24793B79C@cs.usfca.edu>
	<1150082846.10347.1.camel@localhost.localdomain>
Message-ID: <3484C9A9-CA06-4D19-A539-C4212C3AEEE6@martin-probst.com>

Well, it's certainly possible to write something in Java that does  
not suffer from memory leaks. After all, it's actually easier than in  
languages without GC ...

Did you try JSPWiki? It looks really ugly by default, but I've had it  
running on a badly maintained server without any problems for months.  
http://jspwiki.org/

The Wiki markup language is also better than Wikipedias, no idea how  
it compares to Confluence.

Martin

Am 12.06.2006 um 05:27 schrieb Sohail Somani:

> On Sun, 2006-06-11 at 09:35 -0700, Terence Parr wrote:
>>
>> I need something in Java to integrate with antlr.org...I like
>> confluence, it's just suffering from the usual Java ailment: memory
>> leak.
>
> But then it'll never work... I just think an antlr wiki would be  
> wicked.
>
> What sort of integration are you looking for anyway?
>
>

From jimi at intersystems.com  Mon Jun 12 04:33:35 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon Jun 12 04:33:57 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <3484C9A9-CA06-4D19-A539-C4212C3AEEE6@martin-probst.com>
Message-ID: <C0B31DAF.6B48%jimi@intersystems.com>

I'll say twiki just one last time:

Twiki : (t+=TWIKI)+ -> ^(TWIKI $t*) ;

TWIKI: 'TWIKI' ;

TWIKI TWIKI TWIKI

OK, so that sounds like some demented robot brain and I said it more than
once. Twiki is written in perl but then it never crashes and it integrates
with Java stuff nicely.

But, basically a wiki is a good idea, it just takes people a while to get
around to contributing via that mechanism.

Jim


On 6/12/06 8:19 AM, "Martin Probst" <mail@martin-probst.com> wrote:

> Well, it's certainly possible to write something in Java that does
> not suffer from memory leaks. After all, it's actually easier than in
> languages without GC ...
> 
> Did you try JSPWiki? It looks really ugly by default, but I've had it
> running on a badly maintained server without any problems for months.
> http://jspwiki.org/
> 
> The Wiki markup language is also better than Wikipedias, no idea how
> it compares to Confluence.
> 
> Martin
> 
> Am 12.06.2006 um 05:27 schrieb Sohail Somani:
> 
>> On Sun, 2006-06-11 at 09:35 -0700, Terence Parr wrote:
>>> 
>>> I need something in Java to integrate with antlr.org...I like
>>> confluence, it's just suffering from the usual Java ailment: memory
>>> leak.
>> 
>> But then it'll never work... I just think an antlr wiki would be
>> wicked.
>> 
>> What sort of integration are you looking for anyway?
>> 
>> 
> 


From jimi at intersystems.com  Mon Jun 12 04:35:46 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon Jun 12 04:36:05 2006
Subject: [antlr-interest] ANTLR 3.0 beta timing
In-Reply-To: <3484C9A9-CA06-4D19-A539-C4212C3AEEE6@martin-probst.com>
Message-ID: <C0B31E32.6B4B%jimi@intersystems.com>

There is always:

www.wikimatrix.org/wizard.php

:-)


On 6/12/06 8:19 AM, "Martin Probst" <mail@martin-probst.com> wrote:

> Well, it's certainly possible to write something in Java that does
> not suffer from memory leaks. After all, it's actually easier than in
> languages without GC ...
> 
> Did you try JSPWiki? It looks really ugly by default, but I've had it
> running on a badly maintained server without any problems for months.
> http://jspwiki.org/
> 
> The Wiki markup language is also better than Wikipedias, no idea how
> it compares to Confluence.
> 
> Martin
> 
> Am 12.06.2006 um 05:27 schrieb Sohail Somani:
> 
>> On Sun, 2006-06-11 at 09:35 -0700, Terence Parr wrote:
>>> 
>>> I need something in Java to integrate with antlr.org...I like
>>> confluence, it's just suffering from the usual Java ailment: memory
>>> leak.
>> 
>> But then it'll never work... I just think an antlr wiki would be
>> wicked.
>> 
>> What sort of integration are you looking for anyway?
>> 
>> 
> 


From dotnetfr at gmail.com  Mon Jun 12 07:11:49 2006
From: dotnetfr at gmail.com (dotnet fr)
Date: Mon Jun 12 07:11:51 2006
Subject: [antlr-interest] Files missing in "csharp/antlr.net-runtime.sln"
	solution
Message-ID: <dcb971710606120711p61d61546o88dbb59cf822a802@mail.gmail.com>

Hi Everyone,

I've got a problem.
I want to generate c# source file.
I open the "antlr-2.7.6/lib/csharp/antlr.net-runtime.sln" solution
file but some files are missing :
-JavaLexer.cs
-JavaRecognizer.cs
-JavaTokenTypes.cs
-JavaTreeParser.cs
-JavaTreeParserTokenTypes.cs.

Have anyone got the same error ?

Cheers
-- 
dotnet
From dotnetfr at gmail.com  Mon Jun 12 08:13:28 2006
From: dotnetfr at gmail.com (dotnet fr)
Date: Mon Jun 12 08:13:32 2006
Subject: [antlr-interest] nant build error
Message-ID: <dcb971710606120813q2e3321ala9f83d8bcd5660c@mail.gmail.com>

Hi everyone,

I want to generate c# source file. I use a tutorial here
(http://www.antlr.org/doc/csharp-runtime.html)

In the "antlr-2.7.5/lib/csharp" directory, I execute "nant build"
command line to generate the missing files :
-JavaLexer.cs
-JavaRecognizer.cs
-JavaTokenTypes.cs
-JavaTreeParser.cs
-JavaTreeParserTokenTypes.cs.

But the build failed, I copy past the message under.

Is anyone have a solution ?

Cheers

dotnet

-------------------------------
NAnt 0.85 (Build 0.85.2337.0; nightly; 26/05/2006)
Copyright (C) 2001-2006 Gerry Shaw
http://nant.sourceforge.net

Buildfile: file:///D:/work/Antlr/antlr-2.7.5/lib/csharp/antlr.runtime.build
Target framework: Microsoft .NET Framework 2.0
Target(s) specified: build


init:

   [tstamp] lundi 12 juin 2006 17:00:12.
   [script] Scanning assembly "dkeotbif" for extensions.
     [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

build:

     [echo] Building antlr.runtime-2.7.5 (debug)

init:

   [tstamp] lundi 12 juin 2006 17:00:13.
   [script] Scanning assembly "a_vuafwx" for extensions.
     [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

compile:

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(118,6):
Element <includes... /> for <assemblyfileset... /> is deprecated. Use
<include> element instead.

BUILD FAILED - 0 non-fatal error(s), 1 warning(s)

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(119,15):
Unexpected attribute "match" on element <includes>.

Total time: 0.6 seconds.
From parrt at cs.usfca.edu  Mon Jun 12 11:34:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 11:34:55 2006
Subject: [antlr-interest] setting, altering text in lexer rules
Message-ID: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>

Hi,

I'm finalizing how lexers emit tokens and possibly alter the text for  
tokens.  I thought I'd run the ideas past you to make sure I'm not  
crazy (about this anyway!) :)

There are a few main things I want to be able to do:

1. emit more than one token per lexer.nextToken() invocation (needed  
for python etc...)

2. allow you to modify the text of a text either with setText() or  
text=foo;

3. allow ! on lexical rule elements to delete text elements from  
token easily

4. I need the common case to be fast and I don't want to clutter up  
the simple Lexer object

Re #1: Currently, there is an emit(Token) method that can be  
overridden to have a queue; nextToken would then be overridden to  
pull from the queue.  When the user emits manually, the token rule  
must avoid doing so.  Sounds easy but what happens when one rule  
calls another?

FLOAT : INT '.' INT ;
INT : '0'..'9'+ ;

How does INT know not to emit a token?  Currently I check "if token! 
=null emit" but that emits two tokens.  So I think I need to add a  
lexical rule nesting level var and a check "if token!=null &&  
level==0 emit".  That adds extra work and each rule would need to  
have inc/dec code for the level.  This infrastructure will still work  
for multiple token emits as emit can just set token to the last token  
emitted to prevent auto emitting.

Re #2: you need to be able to set the text of a token.  There is the  
notion of a single token being matched and so it's ok to have the  
idea of "current text"; i.e., an instance var.  A setText method can  
alter a String and auto token emit can use this instead of indexes  
into the charbuf if nonnull.  Easy until you realize you might want  
to modify it as a buffer of char.  Then it must be a StringBuffer not  
just a string...may be hard to avoid creating a buf for each  
nextToken invocation.  Still it's pretty straightforward.

Re #3.  Now, we need automatic modification of a text buffer to build  
up a string.  Users should be careful doing manual alteration of a  
buffer and using ! on elements.  The first ! that is encountered even  
if deeply nested in multiple lexer rules must create a buffer and  
copy all text from start of token (in the char buffer) to the new  
StringBuffer.  At level==0, we need to add whatever other text  
remains and we need to emit a token using either the modified buffer  
or just pointing into the char buffer (for unmodified text).

Re #4.  We end up with a complicated chunk of code at the end of each  
lexer rule, which costs time/space:

         // token rule postamble
         level--;
         if ( token==null && level==0 ) {
             if ( _buf!=null ) {
                 _buf.append(input.substring(_start, getCharIndex()-1));
             }
             emit(type,line,charPosition,channel,start,getCharIndex 
()-1);
         }

To avoid creating a new StringBuffer each time, I could reuse and set  
the length to 0 at the start of each nextToken.  Otherwise I need to do

if ( _buf==null ) { _buf = new StringBuffer(); }

at each char reference or other element with a bang.  So, i guess I  
need "if ( _buf.length()>0 )" check not _buf==null check.  I hate to  
slow down the token matching speed for every token to set the length  
(the StringBuffer.setLength() method actually requires a fair bit of  
code).

Anybody wanna comment on the implementation?

Ter

From parrt at cs.usfca.edu  Mon Jun 12 12:30:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 12:30:43 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>
References: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>
Message-ID: <21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>

ok, so lexing time when from 1340ms to 2095ms when I added all this  
crap in there.  That is more than 1.5x the cost in time.  I can't  
justify that 50% increase in lexer time.  Also the parser is taking  
more time...weird...a GC issue?

Wow. the

text.setLength(0);

in the nextToken() method costs 200ms out of that 2095ms.  When I  
remove all this machinery it goes back to what it was in my notes  
time-wise so it's not a fluke.  Rats!

Ok, I propose that we take a big step back and say "you can set the  
text for the token manually".  You get a setText() method and the  
auto mechanism will see your altered text if nonnull.  If you want to  
build up a token piecemeal you must do so manually.  So you'd do this:

ESC : '\\' 'n' {setText("\n");} ;

I still need to spend time inc/dec the rule level though so I know  
when to emit a token.  It seems to cost a wee bit but that is ok I  
guess.

Ter

From mail at martin-probst.com  Mon Jun 12 13:59:49 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon Jun 12 13:59:58 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
References: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>
	<21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
Message-ID: <F35825FF-50C2-4CC5-9B1A-6477BF84099F@martin-probst.com>

Hi,

> Ok, I propose that we take a big step back and say "you can set the  
> text for the token manually".  You get a setText() method and the  
> auto mechanism will see your altered text if nonnull.  If you want  
> to build up a token piecemeal you must do so manually.  So you'd do  
> this:
>
> ESC : '\\' 'n' {setText("\n");} ;
>
> I still need to spend time inc/dec the rule level though so I know  
> when to emit a token.  It seems to cost a wee bit but that is ok I  
> guess.

are you 100% sure about this? I think the "!" operator is one of the  
most important feature of ANTLR's Lexers. And there are cases where  
it's not that easy to figure out the text - the user would have to re- 
parse the text in $getText() to get to his result. That's almost  
certainly more expensive. Is there absolutely no way of supporting  
this in a "if you use it you pay" way?

Did you try StringBuilder instead? If you call .setLength(0) once per  
token it really shouldn't matter that much except for the  
synchronization on StringBuffer.

What about the optimization of truncating start and end characters  
simply by using different offsets? I think this is the most common  
use case, e.g.:

STRING: '\"'! CHARS '\"'!;

Martin

From parrt at cs.usfca.edu  Mon Jun 12 14:05:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 14:05:37 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <F35825FF-50C2-4CC5-9B1A-6477BF84099F@martin-probst.com>
References: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>
	<21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
	<F35825FF-50C2-4CC5-9B1A-6477BF84099F@martin-probst.com>
Message-ID: <E8A55B8A-BD3D-4607-96C4-D6F08921C8D7@cs.usfca.edu>


On Jun 12, 2006, at 1:59 PM, Martin Probst wrote:

> Hi,
>
>> Ok, I propose that we take a big step back and say "you can set  
>> the text for the token manually".  You get a setText() method and  
>> the auto mechanism will see your altered text if nonnull.  If you  
>> want to build up a token piecemeal you must do so manually.  So  
>> you'd do this:
>>
>> ESC : '\\' 'n' {setText("\n");} ;
>>
>> I still need to spend time inc/dec the rule level though so I know  
>> when to emit a token.  It seems to cost a wee bit but that is ok I  
>> guess.
>
> are you 100% sure about this? I think the "!" operator is one of  
> the most important feature of ANTLR's Lexers.

Do you mean specifically ! or the ability to set/build-up the text?

> And there are cases where it's not that easy to figure out the text  
> - the user would have to re-parse the text in $getText() to get to  
> his result. That's almost certainly more expensive. Is there  
> absolutely no way of supporting this in a "if you use it you pay" way?

Yeah, I tried...there is too much work to do that must be there if  
any ! is used in the grammar.

> Did you try StringBuilder instead? If you call .setLength(0) once  
> per token it really shouldn't matter that much except for the  
> synchronization on StringBuffer.

I have to be at least 1.4 compatible...is that 1.4?  That cost me  
200ms out of 2000 or so, which is a lot.

> What about the optimization of truncating start and end characters  
> simply by using different offsets? I think this is the most common  
> use case, e.g.:
>
> STRING: '\"'! CHARS '\"'!;

Yep, and a simple action with a substring will work; like 1 or 2  
places in the grammar you want; should be ok to do manually.

setText(getText().substring(0, getText().length()))

or whatever.  Or, just buffer up manually in CHARS.

Ter
From craymer at warpiv.com  Mon Jun 12 14:11:17 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun 12 14:11:55 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
Message-ID: <002301c68e64$c30fe370$6402a8c0@Fafnir>

 

Ter--

 

I wouldn't go back to not being able to edit (via !) in the lexer--that
would be a step back from ANTLR 2.  Think back to the early examples that
showed how powerful the LL(k) lexers with were, especially with the editing
support.

 

What can probably be done is to make the support machinery conditional--if a
lexer rule has a ! in it, then do the StringBuffer thing (or keep character
arrays for altered tokens), else just track the ends of the token.
StringTemplate can handle this, and it may not even be that messy.

 

It should also be remembered that "getText()" in the parser will require
String construction.  For an application that does a lot of text processing,
editing in the lexer is not additional overhead.  For typical applications,
it is added overhead.  However, the typical lexer editing is to remove
quotes from STRINGs; that is usually an optimization from the application's
standpoint.

 

--Loring

 

> -----Original Message-----

> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-

> bounces@antlr.org] On Behalf Of Terence Parr

> Sent: Monday, June 12, 2006 12:31 PM

> To: ANTLR Interest

> Subject: Re: [antlr-interest] (follow up) setting, altering text in lexer

> rules

> 

> ok, so lexing time when from 1340ms to 2095ms when I added all this

> crap in there.  That is more than 1.5x the cost in time.  I can't

> justify that 50% increase in lexer time.  Also the parser is taking

> more time...weird...a GC issue?

> 

> Wow. the

> 

> text.setLength(0);

> 

> in the nextToken() method costs 200ms out of that 2095ms.  When I

> remove all this machinery it goes back to what it was in my notes

> time-wise so it's not a fluke.  Rats!

> 

> Ok, I propose that we take a big step back and say "you can set the

> text for the token manually".  You get a setText() method and the

> auto mechanism will see your altered text if nonnull.  If you want to

> build up a token piecemeal you must do so manually.  So you'd do this:

> 

> ESC : '\\' 'n' {setText("\n");} ;

> 

> I still need to spend time inc/dec the rule level though so I know

> when to emit a token.  It seems to cost a wee bit but that is ok I

> guess.

> 

> Ter

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060612/ee2cd537/attachment.html
From kroepke at dolphin-services.de  Mon Jun 12 14:40:27 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Mon Jun 12 14:40:32 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <E8A55B8A-BD3D-4607-96C4-D6F08921C8D7@cs.usfca.edu>
References: <08446321-95DB-41CD-9EA5-069BE28B911A@cs.usfca.edu>
	<21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
	<F35825FF-50C2-4CC5-9B1A-6477BF84099F@martin-probst.com>
	<E8A55B8A-BD3D-4607-96C4-D6F08921C8D7@cs.usfca.edu>
Message-ID: <F305A57D-40C8-4EBC-AEE3-8F919817B6C2@dolphin-services.de>


On 12. Jun 2006, at 23:05 Uhr, Terence Parr wrote:

> Yep, and a simple action with a substring will work; like 1 or 2  
> places in the grammar you want; should be ok to do manually.
>
> setText(getText().substring(0, getText().length()))
>
> or whatever.  Or, just buffer up manually in CHARS.

This is what I do in the ST debugger. I'm using fragment lexer rules  
to grab the interesting bits from a string and then get those
texts in a later action.
The only downside is that this will create (in my case) two  
additional tokens which are discarded at rule exit.
With '!'s this would be easier to do, but the implementation overhead/ 
effort is pretty steep. The initial stab I had at the problem
a couple months ago didn't add too much code, but wasn't nearly  
complete. Especially if you wanted to skip text in the middle of a rule
it meant a lot string copying. Plus it isn't exactly easy to optimize  
for the case that the !s are at the edges.

I think it's better to put this off for later and then try to do a  
non-costly implementation.

-k
From dcaton at shorelinesoftware.com  Mon Jun 12 15:02:44 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Mon Jun 12 15:03:10 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <21A19010-6B4A-4A82-B819-4C2AF191CABD@cs.usfca.edu>
Message-ID: <006001c68e6b$ef051390$0202fea9@ssdev1>

Ter:

> ok, so lexing time when from 1340ms to 2095ms when I added 
> all this crap in there.  That is more than 1.5x the cost in 
> time.  I can't justify that 50% increase in lexer time.  Also 
> the parser is taking more time...weird...a GC issue?
> 
> Wow. the
> 
> text.setLength(0);
> 
> in the nextToken() method costs 200ms out of that 2095ms.  
> When I remove all this machinery it goes back to what it was 
> in my notes time-wise so it's not a fluke.  Rats!

Is it really important to worry about things like this?  Something that
takes 2095ms in the particular Java implementation you're using isn't
necessarily going to take 2095ms in C++ or C# or any other target language.
Or for that matter, any other particular Java implementation.

IMO, it might be better to determine what features are (and aren't)
necessary, and then leave it up to the individual language implementers to
figure out how to implement them in the target language in the most
efficient manner possible.

You're really wearing two hats here: the architect, and the Java
implementer.  I hope that when you're wearing the first hat you're designing
the best parser you can, not the best parser implemented in Java that you
can.  

And I imagine that anyone who needs serious, heavy duty parsing where every
ms counts isn't going to be using Java anyhow, they're going to be using
C++.

Don


From parrt at cs.usfca.edu  Mon Jun 12 16:20:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 16:20:06 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <006001c68e6b$ef051390$0202fea9@ssdev1>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>
Message-ID: <AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>


On Jun 12, 2006, at 3:02 PM, Don Caton wrote:
> IMO, it might be better to determine what features are (and aren't)
> necessary, and then leave it up to the individual language  
> implementers to
> figure out how to implement them in the target language in the most
> efficient manner possible.
>
> You're really wearing two hats here: the architect, and the Java
> implementer.  I hope that when you're wearing the first hat you're  
> designing
> the best parser you can, not the best parser implemented in Java  
> that you
> can.

Well the ! thing has always been a pain in the ass ;)  I'd rather opt  
for speed for now with a workable solution and see what happens in  
the future. :)

Ter
From canfield at zocalo-tech.com  Mon Jun 12 16:41:19 2006
From: canfield at zocalo-tech.com (Bill Canfield)
Date: Mon Jun 12 16:39:00 2006
Subject: [antlr-interest] Re: (follow up) setting,
	altering text in lexer rules
In-Reply-To: <20060612232008.D4844DCD56@www.antlr.org>
References: <20060612232008.D4844DCD56@www.antlr.org>
Message-ID: <448DFB9F.9040500@zocalo-tech.com>

> Well the ! thing has always been a pain in the ass ;)  I'd rather opt  
> for speed for now with a workable solution and see what happens in  
> the future. :)

Ter:

One testcase I profiled (C++) used most of its time allocating more and
more space for the text of a multi-thousand-line comment that I was just
going to throw away anyway.  I was sure! glad! to! have! that
exclamation point!!!

I would like to second Don Caton's viewpoint:  pick good features and
then optimize.

Bill
-- 
Bill Canfield
Lead Software Developer
Zocalo Tech, Inc.
http://www.zocalo-tech.com/

From parrt at cs.usfca.edu  Mon Jun 12 16:43:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 16:44:02 2006
Subject: [antlr-interest] Re: (follow up) setting,
	altering text in lexer rules
In-Reply-To: <448DFB9F.9040500@zocalo-tech.com>
References: <20060612232008.D4844DCD56@www.antlr.org>
	<448DFB9F.9040500@zocalo-tech.com>
Message-ID: <0F5EC655-5AE7-46AB-A559-E9BA88BA6967@cs.usfca.edu>


On Jun 12, 2006, at 4:41 PM, Bill Canfield wrote:

>> Well the ! thing has always been a pain in the ass ;)  I'd rather opt
>> for speed for now with a workable solution and see what happens in
>> the future. :)
>
> Ter:
>
> One testcase I profiled (C++) used most of its time allocating more  
> and
> more space for the text of a multi-thousand-line comment that I was  
> just
> going to throw away anyway.  I was sure! glad! to! have! that
> exclamation point!!!
>
> I would like to second Don Caton's viewpoint:  pick good features and
> then optimize.

Hi Bill,

Yep.  I did to pick features to start with so that there IS no char  
copying by default, which is why the ! is such a huge pain this go  
around.  All tokens point into the char buffer, the correct  
approach.  It's very rare to modify more than a few tokens' text.  I  
believe I've made the right choice here.  For your comment case,  
you'll get love out of the box; no ! needed.  I call that a great  
invisible feature :)

Thanks to all for the comments!

Ter

From sdb at geekworld.co.uk  Mon Jun 12 17:05:29 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Mon Jun 12 17:05:53 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>
	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
Message-ID: <448E0149.6080602@geekworld.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terence Parr wrote:
> 
> On Jun 12, 2006, at 3:02 PM, Don Caton wrote:
>> IMO, it might be better to determine what features are (and aren't)
>> necessary, and then leave it up to the individual language
>> implementers to
>> figure out how to implement them in the target language in the most
>> efficient manner possible.
>>
>> You're really wearing two hats here: the architect, and the Java
>> implementer.  I hope that when you're wearing the first hat you're
>> designing
>> the best parser you can, not the best parser implemented in Java that you
>> can.
> 
> Well the ! thing has always been a pain in the ass ;)  I'd rather opt
> for speed for now with a workable solution and see what happens in the
> future. :)

It might be a pain in the ass to implement, but it's a really sweet
feature from the user point of view.

Sam
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEjgFJ0zEzmpRX1cwRAg6eAJ4qoi58KGijzaoc3NVCdN0CZ3ClWQCePCBo
fjKXUIugz3kPzdc4UH0VRL8=
=F56N
-----END PGP SIGNATURE-----
From parrt at cs.usfca.edu  Mon Jun 12 17:10:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 17:10:27 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <448E0149.6080602@geekworld.co.uk>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>
	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
	<448E0149.6080602@geekworld.co.uk>
Message-ID: <F8847783-FDE0-43E2-BA13-A141CEBA8BC0@cs.usfca.edu>


On Jun 12, 2006, at 5:05 PM, Sam Barnett-Cormack wrote:
> It might be a pain in the ass to implement, but it's a really sweet
> feature from the user point of view.

Hi Sam,
Can you send in an example that isn't easy to solve with setText()  
for the few rules where it's necessary?  For now, I can't figure out  
how to make it available and go fast...it also adds lots of extra  
templates for people to implement in the targets...

I am not opposed to the feature.  Remember 3.0 is just 3.0 not 3.1,  
3.2, 3.x ;)

Ter

From antlr at shmuelhome.mine.nu  Mon Jun 12 17:42:03 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon Jun 12 17:41:52 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>
	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
Message-ID: <448E09DB.4090904@shmuelhome.mine.nu>

Terence Parr wrote:

> Well the ! thing has always been a pain in the ass ;)  I'd rather opt 
> for speed for now with a workable solution and see what happens in the 
> future. :)
> 
> Ter
> 
> 
I, for one will really miss "the ! thing" when dealing with strings. It 
is much easier to adjust the end pointers to strings than it is to 
create a new string as a substring. Can we at least have that feature 
for 3.0, i.e., the ability to throw away beginning and ending character 
sequences. Forcing the programmer to manipulate strings will more than 
throw away any perceived time savings that you think you will be 
achieving by avoiding this case, not to mention making the programmer's 
job harder.


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.3/361 - Release Date: 6/11/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.3/361 - Release Date: 6/11/2006

From parrt at cs.usfca.edu  Mon Jun 12 17:44:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 17:44:38 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <448E09DB.4090904@shmuelhome.mine.nu>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>
	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>
	<448E09DB.4090904@shmuelhome.mine.nu>
Message-ID: <45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>


On Jun 12, 2006, at 5:42 PM, shmuel siegel wrote:

> Terence Parr wrote:
>
>> Well the ! thing has always been a pain in the ass ;)  I'd rather  
>> opt for speed for now with a workable solution and see what  
>> happens in the future. :)
>> Ter
> I, for one will really miss "the ! thing" when dealing with  
> strings. It is much easier to adjust the end pointers to strings  
> than it is to create a new string as a substring. Can we at least  
> have that feature for 3.0, i.e., the ability to throw away  
> beginning and ending character sequences. Forcing the programmer to  
> manipulate strings will more than throw away any perceived time  
> savings that you think you will be achieving by avoiding this case,  
> not to mention making the programmer's job harder.

So you are saying that STRING token dominates the tokenizing time?  I  
doubt it.  Build your own token and emit that uses char indexes into  
the char buff that are one off.  No char creation at all.

I fixing like 2 bugs an hour right now...adding more bugs and  
breaking all targets is not the way to get a product shipped ;)

Ter

From sdb at geekworld.co.uk  Mon Jun 12 17:49:43 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Mon Jun 12 17:50:07 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>	<448E09DB.4090904@shmuelhome.mine.nu>
	<45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>
Message-ID: <448E0BA7.8090408@geekworld.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terence Parr wrote:
> 
> On Jun 12, 2006, at 5:42 PM, shmuel siegel wrote:
> 
>> Terence Parr wrote:
>>
>>> Well the ! thing has always been a pain in the ass ;)  I'd rather opt
>>> for speed for now with a workable solution and see what happens in
>>> the future. :)
>>> Ter
>> I, for one will really miss "the ! thing" when dealing with strings.
>> It is much easier to adjust the end pointers to strings than it is to
>> create a new string as a substring. Can we at least have that feature
>> for 3.0, i.e., the ability to throw away beginning and ending
>> character sequences. Forcing the programmer to manipulate strings will
>> more than throw away any perceived time savings that you think you
>> will be achieving by avoiding this case, not to mention making the
>> programmer's job harder.
> 
> So you are saying that STRING token dominates the tokenizing time?  I
> doubt it.  Build your own token and emit that uses char indexes into the
> char buff that are one off.  No char creation at all.

So can something like this not be put in autogenerated, allowing ! to be
used only on leading and trailing tokens, for example?

> I fixing like 2 bugs an hour right now...adding more bugs and breaking
> all targets is not the way to get a product shipped ;)

Better to ship no product than a bad product, within reason...
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEjgun0zEzmpRX1cwRAuJ0AJ95d/SoaqA+FFlewvxHcsoi6IjtvACbBreC
4EdhH8/ub4JVkyovZL+zPQQ=
=amRx
-----END PGP SIGNATURE-----
From parrt at cs.usfca.edu  Mon Jun 12 17:59:22 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 12 17:59:24 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <448E0BA7.8090408@geekworld.co.uk>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>	<448E09DB.4090904@shmuelhome.mine.nu>
	<45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>
	<448E0BA7.8090408@geekworld.co.uk>
Message-ID: <4E0F718C-50C5-4DD5-84BF-6E2547A873C9@cs.usfca.edu>

On Jun 12, 2006, at 5:49 PM, Sam Barnett-Cormack wrote:
>> I fixing like 2 bugs an hour right now...adding more bugs and  
>> breaking
>> all targets is not the way to get a product shipped ;)

 > Better to ship no product than a bad product, within reason...

Feel free not to use my bad product when it comes out.

LL(*) kicks so much ass I just can't believe you just said that.   
I've worked like crazy for 3 years to bring you this and one little  
feature that *might* not be put in and you're giving me grief?

Ok, I don't want to hear one more peep about !.  The conversation is  
over.  Supreme dictator for life has made up his mind.

Ter
From mail at martin-probst.com  Mon Jun 12 23:20:53 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon Jun 12 23:20:58 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <4E0F718C-50C5-4DD5-84BF-6E2547A873C9@cs.usfca.edu>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>	<448E09DB.4090904@shmuelhome.mine.nu>
	<45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>
	<448E0BA7.8090408@geekworld.co.uk>
	<4E0F718C-50C5-4DD5-84BF-6E2547A873C9@cs.usfca.edu>
Message-ID: <C30D00D1-F74C-4981-A066-1C6C5C1E2D75@martin-probst.com>

> > Better to ship no product than a bad product, within reason...
>
> Feel free not to use my bad product when it comes out.
 >
> LL(*) kicks so much ass I just can't believe you just said that.   
> I've worked like crazy for 3 years to bring you this and one little  
> feature that *might* not be put in and you're giving me grief?

I don't think he meant that in the way you understood it - I think he  
just wanted to point out on a general note that he'd much rather have  
a perfect product than one that doesn't work well. Everyone here is  
aware how good ANTLR3 is going to be, and how much you invested in it.

There is no reason to be active on this list other than that and the  
hope to contribute something to this great product.

Martin
From sdb at geekworld.co.uk  Tue Jun 13 01:13:13 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Tue Jun 13 00:13:41 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <C30D00D1-F74C-4981-A066-1C6C5C1E2D75@martin-probst.com>
References: <006001c68e6b$ef051390$0202fea9@ssdev1>	<AB1E759E-7400-4797-8D3C-643B3B8793DB@cs.usfca.edu>	<448E09DB.4090904@shmuelhome.mine.nu>	<45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>	<448E0BA7.8090408@geekworld.co.uk>	<4E0F718C-50C5-4DD5-84BF-6E2547A873C9@cs.usfca.edu>
	<C30D00D1-F74C-4981-A066-1C6C5C1E2D75@martin-probst.com>
Message-ID: <448E7399.5090603@geekworld.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Martin Probst wrote:
>> > Better to ship no product than a bad product, within reason...
>>
>> Feel free not to use my bad product when it comes out.
>>
>> LL(*) kicks so much ass I just can't believe you just said that.  I've
>> worked like crazy for 3 years to bring you this and one little feature
>> that *might* not be put in and you're giving me grief?
> 
> I don't think he meant that in the way you understood it - I think he
> just wanted to point out on a general note that he'd much rather have a
> perfect product than one that doesn't work well. Everyone here is aware
> how good ANTLR3 is going to be, and how much you invested in it.

Thanks Martin,

Terence: I'm sorry to have inadvertently caused offence; I was
attempting to make a more general point, not say that ANTLR was bad. If
it hadn't been quite so late at night, I would have written it properly,
not a single ambiguous sentence... :(

Sorry

Sam
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEjnOZ0zEzmpRX1cwRAkbYAJ4x/0ANTDP60373yW1Y0qEdq4PEFACcCAnP
eOFHTrfex/dR/XduFwYRALA=
=i6/x
-----END PGP SIGNATURE-----
From dotnetfr at gmail.com  Tue Jun 13 00:44:52 2006
From: dotnetfr at gmail.com (dotnet fr)
Date: Tue Jun 13 00:44:55 2006
Subject: [antlr-interest] Starting with ANTLR
Message-ID: <dcb971710606130044g43dbced9i8578cbcf8badb393@mail.gmail.com>

Hi everyone,

I want to generate c# source file. I use a tutorial here
(http://www.antlr.org/doc/csharp-runtime.html)

In the "antlr-2.7.5/lib/csharp" directory, I execute "nant build"
command line to generate the missing files :
-JavaLexer.cs
-JavaRecognizer.cs
-JavaTokenTypes.cs
-JavaTreeParser.cs
-JavaTreeParserTokenTypes.cs.

But the build failed, I copy past the message under.

Have anyone got a solution ?

Cheers

dotnet

-------------------------------
NAnt 0.85 (Build 0.85.2337.0; nightly; 26/05/2006)
Copyright (C) 2001-2006 Gerry Shaw
http://nant.sourceforge.net

Buildfile: file:///D:/work/Antlr/antlr-2.7.5/lib/csharp/antlr.runtime.build
Target framework: Microsoft .NET Framework 2.0
Target(s) specified: build


init:

  [tstamp] lundi 12 juin 2006 17:00:12.
  [script] Scanning assembly "dkeotbif" for extensions.
    [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

build:

    [echo] Building antlr.runtime-2.7.5 (debug)

init:

  [tstamp] lundi 12 juin 2006 17:00:13.
  [script] Scanning assembly "a_vuafwx" for extensions.
    [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

compile:

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(118,6):
Element <includes... /> for <assemblyfileset... /> is deprecated. Use
<include> element instead.

BUILD FAILED - 0 non-fatal error(s), 1 warning(s)

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(119,15):
Unexpected attribute "match" on element <includes>.

Total time: 0.6 seconds.
From jimi at intersystems.com  Tue Jun 13 02:20:58 2006
From: jimi at intersystems.com (Jim Idle)
Date: Tue Jun 13 02:21:20 2006
Subject: [antlr-interest] (follow up) setting, altering text in lexer rules
In-Reply-To: <45DCBA63-CE41-4BDF-B031-A04EB1E6A5C9@cs.usfca.edu>
Message-ID: <C0B4501A.6C20%jimi@intersystems.com>




On 6/13/06 2:44 AM, "Terence Parr" <parrt@cs.usfca.edu> wrote:

> 
> On Jun 12, 2006, at 5:42 PM, shmuel siegel wrote:
> 
>> Terence Parr wrote:
>> 
>>> Well the ! thing has always been a pain in the ass ;)  I'd rather
>>> opt for speed for now with a workable solution and see what
>>> happens in the future. :)
>>> Ter
>> I, for one will really miss "the ! thing" when dealing with
>> strings. It is much easier to adjust the end pointers to strings
>> than it is to create a new string as a substring. Can we at least
>> have that feature for 3.0, i.e., the ability to throw away
>> beginning and ending character sequences. Forcing the programmer to
>> manipulate strings will more than throw away any perceived time
>> savings that you think you will be achieving by avoiding this case,
>> not to mention making the programmer's job harder.
> 
> So you are saying that STRING token dominates the tokenizing time?  I
> doubt it.  Build your own token and emit that uses char indexes into
> the char buff that are one off.  No char creation at all.

I think that this is the magic bullet that people are missing. It seems to
me that the most common case is to remove things like quote marks from
strings and not to place char[4] before char[9] and add '$$$' on the end or
something, which would probably work out better in more extensive . In the C
version this would be intercepting the token, incrementing a pointer and
decrementing a counter. As far as I can tell this isn't that different in
Java.

The token generally just points into the input buffer (some trickiness may
be required from reading from sockets forever and so on, but there would
seem logical to always be some 'endpoint' for a stream, even if a socket
remained open for ever).

Personally, I would much rather implement a little bit of custom code for
the odd token - where I can spend time on it if it is important performance
wise, rather than sacrifice performance for the general case - simple is
best and it looks to me that Ter has followed the adage that it should be as
simple as possible but no simpler pretty well.

The point of ANTLR 3 is to make the generation of recognizers simple, but
not to completely rid you of any responsibility for the performance of your
lexer/parser/tree parser. The most convenient expression is not necessarily
the best.

That said, if this became the number one perceived 'problem' with ANTLR 3,
then I will be applauding as then there is only that feature to add to a 3.1
version ;-). I think that all Ter is saying here is "let me come back to
this one if people find it a real pain."

Keep on rockin',

Jim


From Michiel_Vermandel at axi.be  Tue Jun 13 02:27:24 2006
From: Michiel_Vermandel at axi.be (Michiel Vermandel)
Date: Tue Jun 13 02:27:31 2006
Subject: [antlr-interest] token position defined by lexer
Message-ID: <OF202D3809.7971BD45-ONC125718C.00334EDE-C125718C.0033F2CF@Axi.be>

Hi,

In my lexer I have the following rule:

QUOTED_STRING
    : 
      '\''! ( WS | "\'\'" | ~('\'') )* '\''!
    ;

So the lexer does not return the quotes, just the string text.

I do get the AST tree without the quotes but the column position of the 
string is a bit strange, I think.

If I have the following text:

Hello 'world'

then I get the lexer token world at column 7 instead of 8.
So the quote gets removed but the column position of the token is not 
shifted by 1.

Is there some way to work around this?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060613/c66be6cc/attachment.html
From antlr at shmuelhome.mine.nu  Tue Jun 13 04:37:30 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue Jun 13 04:36:30 2006
Subject: [antlr-interest] token position defined by lexer
In-Reply-To: <OF202D3809.7971BD45-ONC125718C.00334EDE-C125718C.0033F2CF@Axi.be>
References: <OF202D3809.7971BD45-ONC125718C.00334EDE-C125718C.0033F2CF@Axi.be>
Message-ID: <448EA37A.5080902@shmuelhome.mine.nu>

Michiel Vermandel wrote:
>
> Hi,
>
> In my lexer I have the following rule:
>
> QUOTED_STRING
>     :
>       '\''! ( WS | "\'\'" | ~('\'') )* '\''!
>     ;
>
> So the lexer does not return the quotes, just the string text.
>
> I do get the AST tree without the quotes but the column position of 
> the string is a bit strange, I think.
>
> If I have the following text:
>
> Hello 'world'
>
> then I get the lexer token world at column 7 instead of 8.
> So the quote gets removed but the column position of the token is not 
> shifted by 1.
>
> Is there some way to work around this?
>
> Thanks 
I question if you really want that. The quote is part of the matched 
token and hence the token really does start at column 7.


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.8.3/361 - Release Date: 6/11/2006

From tas at ultersys.ru  Tue Jun 13 06:51:56 2006
From: tas at ultersys.ru (Andrey Timoshenkov)
Date: Tue Jun 13 06:50:16 2006
Subject: [antlr-interest] Grammar inheritance and parser members
Message-ID: <448EC2FC.7090706@ultersys.ru>

Hello all.

I have the following problem with ANTLR 2.7.5. I define 2 grammars where 
one inherits the other one. Both grammars define "additional members" as 
described in C++ template grammar. However "expanded" grammar includes 
only members defined in the second grammar. Members from the inherited 
grammar are absent which causes compilation errors in inherited actions.

Is it possible to include both parser members in the resulting parser class?

Thank you in advance.
Andrey Timoshenkov
From pmrao7 at gmail.com  Tue Jun 13 15:38:43 2006
From: pmrao7 at gmail.com (Pankaj Rao)
Date: Tue Jun 13 15:38:48 2006
Subject: [antlr-interest] Parsing Identifiers
Message-ID: <f30658850606131538y68a28f4ehe0f199897c9a7753@mail.gmail.com>

Hi All,

I have encoutered this special case while writing my parser and I am trying
to figure out the cleanest way to handle this.

What I am trying to do is be able to parse identifiers having characters
beyond alphabets and numbers , for example   "?name" or "%name"

My lexer rule for parsing identifiers is as follows:

IDENT

  :  ('a'..'z' | 'A'..'Z' | '_' | '$' ) ( ('a'..'z' | 'A'..'Z' | '_' | '$' )
| ('0'..'9' ))*

    ;
 So I thought about modyfing my Identifier rule to look for '?'.

IDENT

  :  ('a'..'z' | 'A'..'Z' | '_' | '$'|'?' ) ( ('a'..'z' | 'A'..'Z' | '_' |
'$' | '?') | ('0'..'9' ))*

    ;

Parsing "$name" or "_name" seems to work ok with the rule I have. But this
approach doesnt seem to work and after modifying the identifier rule , I
still get an error while trying to parse identifiers of the nature "?name"
etc.

Is there a better way to handle this case or any suggestions on what I might
be doing incorrect.

Thanks a lot.

-Pankaj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060613/fdb6ba49/attachment.html
From parrt at cs.usfca.edu  Tue Jun 13 15:57:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 13 15:57:11 2006
Subject: [antlr-interest] Parsing Identifiers
In-Reply-To: <f30658850606131538y68a28f4ehe0f199897c9a7753@mail.gmail.com>
References: <f30658850606131538y68a28f4ehe0f199897c9a7753@mail.gmail.com>
Message-ID: <D93828DF-13C9-45AA-BCF3-C9589093437A@cs.usfca.edu>


On Jun 13, 2006, at 3:38 PM, Pankaj Rao wrote:

> Hi All,
>
> I have encoutered this special case while writing my parser and I  
> am trying to figure out the cleanest way to handle this.
>
> What I am trying to do is be able to parse identifiers having  
> characters beyond alphabets and numbers , for example   "?name" or  
> "%name"
>
> My lexer rule for parsing identifiers is as follows:
>
> IDENT
>
>   :  ('a'..'z' | 'A'..'Z' | '_' | '$' ) ( ('a'..'z' | 'A'..'Z' |  
> '_' | '$' ) | ('0'..'9' ))*
>
>     ;
>  So I thought about modyfing my Identifier rule to look for '?'.
>
> IDENT
>
>   :  ('a'..'z' | 'A'..'Z' | '_' | '$'|'?' ) ( ('a'..'z' | 'A'..'Z'  
> | '_' | '$' | '?') | ('0'..'9' ))*
>
>     ;

My guess is that you also have a '?' rule, which is first and hence  
has priority :)

Ter
From pmrao7 at gmail.com  Tue Jun 13 16:19:03 2006
From: pmrao7 at gmail.com (Pankaj Rao)
Date: Tue Jun 13 16:19:10 2006
Subject: [antlr-interest] Re: Parsing Identifiers
Message-ID: <f30658850606131619x2167f1b3s3fc8e019bd1b508d@mail.gmail.com>

Hi Terence,

Yes I did have the '?' rule before the Ident rule, and that was the issue.
Thanks for your suggestion.

--Pankaj


> Hi All,
>
> I have encoutered this special case while writing my parser and I
> am trying to figure out the cleanest way to handle this.
>
> What I am trying to do is be able to parse identifiers having
> characters beyond alphabets and numbers , for example   "?name" or
> "%name"
>
> My lexer rule for parsing identifiers is as follows:
>
> IDENT
>
>   :  ('a'..'z' | 'A'..'Z' | '_' | '$' ) ( ('a'..'z' | 'A'..'Z' |
> '_' | '$' ) | ('0'..'9' ))*
>
>     ;
>  So I thought about modyfing my Identifier rule to look for '?'.
>
> IDENT
>
>   :  ('a'..'z' | 'A'..'Z' | '_' | '$'|'?' ) ( ('a'..'z' | 'A'..'Z'
> | '_' | '$' | '?') | ('0'..'9' ))*
>
>     ;

My guess is that you also have a '?' rule, which is first and hence
has priority :)

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060613/0b80e010/attachment.html
From johnicholas.hines at gmail.com  Wed Jun 14 07:37:31 2006
From: johnicholas.hines at gmail.com (Johnicholas Hines)
Date: Wed Jun 14 07:37:36 2006
Subject: [antlr-interest] yet another first antlr grammar
Message-ID: <d092c2300606140737i693ea158ye185276628cc785@mail.gmail.com>

Hi, this is my first time using antlr. I've used flex and bison before
(in a compilers class when I was in college).

I'm trying to write a little language that is basically "starless
regular expressions with a range operator". The language is input for
a driver program that will call the same scripts over and over with
different parameters, telling the driver program what scripts to call
and with what parameters.

My question is: Do you think I can implement the range operator with a
tree parser?

Also, if anyone is interested, could you briefly look at my grammar
and give me any suggestions that come to mind? (Am I doing things in a
nonidiomatic way? a stupid way?)

The intended semantics of this language is:
AND(x, y, z) means "concatenations of words from the languages x, y and z"
OR(x, y, z) means "the union of the languages x, y and z"
"ABC" means "the language containing only the word 'ABC'"
1 means "the language containing only the word '1' "

1, ..., 5 is an abbreviation for "1, 2, 3, 4, 5"
10, 20, ..., 50 is an abbreviation for "10, 20, 30, 40, 50"

So:
AND("test ", "-x", OR(1, ..., 10), " -y", OR(10, 20, ..., 1000))
would mean:
test -x1 -y10
test -x1 -y20
...
test -x10 -y1000

Here is my grammar file:
---
{
    language = "Cpp";
}
class DriverLexer extends Lexer;
options
{
    charVocabulary = '\3'..'\377';
}
ELLIPSIS: "...";
INTEGER: ( '0'..'9' )+;
STRING: '"'! ( ESCAPE | ~'"' )* '"'! ;
LPAREN: '(';
RPAREN: ')';
AND: "AND";
OR: "OR";
COMMA: ',';
WS:
        ( ' '
        | '\t'
        | '\n' { newline(); }
        | '\r'
        )+
        { $setType(antlr::Token::SKIP); }
    ;
protected
ESCAPE:
        '\\'
         ( 'n' { $setText("\n"); }
         | 'r' { $setText("\r"); }
         | 't' { $setText("\t"); }
         | '"' { $setText("\""); }
         )
    ;
class DriverParser extends Parser;
options
{
    buildAST = true;
}
expr: INTEGER
    | STRING
    | ELLIPSIS
    | AND^ LPAREN! expr (COMMA! expr)* RPAREN!
    | OR^ LPAREN! expr (COMMA! expr)* RPAREN!
    ;
From carleton.coffrin at gmail.com  Wed Jun 14 09:37:42 2006
From: carleton.coffrin at gmail.com (Carleton Coffrin)
Date: Wed Jun 14 09:37:47 2006
Subject: [antlr-interest] Parser Exception-Handlers with Labels
Message-ID: <190cfd940606140937h3309ef6dw34c1c0b7f30a7dff@mail.gmail.com>

I am using the Java ANTLR compiler 2.7.5 and am having some difficulty
using labeled Exception-Handlers.  When I use a label to refer to a
grammar rule the code for that exception is not generated.  For
example,

identifier returns [ASTIdentifier n = null] : x:ID { n = new
ASTIdentifier(tok(x)); }
	;	
	exception catch [RecognitionException ex] {reportError(ex,
"identifier message");}
	exception[x] catch [TokenStreamException ex] {reportError(ex, "ID
token Mmssage");}  //This works great!
	

autoDef {ASTIdentifier n;}
	: auto:"auto" n=identifier
	;
    exception catch [RecognitionException ex] {reportError(ex,
"autoDef message");}
    exception[n] catch [This does] {not(get,"identifier rule
message");}  //<-------------- This never makes it to the generated
code


I have struggled to find any documentation on useing labeled
Exception-Handlers, this is my last resort.  If this is not best venue
for this inquery I am pleased to redirect it.

-Carleton
From parrt at cs.usfca.edu  Wed Jun 14 09:45:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 14 09:45:23 2006
Subject: [antlr-interest] Parser Exception-Handlers with Labels
In-Reply-To: <190cfd940606140937h3309ef6dw34c1c0b7f30a7dff@mail.gmail.com>
References: <190cfd940606140937h3309ef6dw34c1c0b7f30a7dff@mail.gmail.com>
Message-ID: <569D47DA-625D-4BE9-9F05-05E2DF1D9622@cs.usfca.edu>


On Jun 14, 2006, at 9:37 AM, Carleton Coffrin wrote:

> I am using the Java ANTLR compiler 2.7.5 and am having some difficulty
> using labeled Exception-Handlers.  When I use a label to refer to a
> grammar rule the code for that exception is not generated.  For
> example,
>
> identifier returns [ASTIdentifier n = null] : x:ID { n = new
> ASTIdentifier(tok(x)); }
> 	;	
> 	exception catch [RecognitionException ex] {reportError(ex,
> "identifier message");}
> 	exception[x] catch [TokenStreamException ex] {reportError(ex, "ID
> token Mmssage");}  //This works great!
> 	
>
> autoDef {ASTIdentifier n;}
> 	: auto:"auto" n=identifier
> 	;
>    exception catch [RecognitionException ex] {reportError(ex,
> "autoDef message");}
>    exception[n] catch [This does] {not(get,"identifier rule
> message");}  //<-------------- This never makes it to the generated
> code

Perhaps there is a bug that only token labels work...

Ter

From parrt at cs.usfca.edu  Wed Jun 14 12:56:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 14 12:56:36 2006
Subject: [antlr-interest] Problems w/ tokenVocab in 3ea10
In-Reply-To: <4482FB16.6070809@msu.edu>
References: <4482FB16.6070809@msu.edu>
Message-ID: <732ECF71-4A73-44F6-A0D9-899F284C2AC0@cs.usfca.edu>


On Jun 4, 2006, at 8:24 AM, Brian Cox wrote:

> I'm trying to import a set of common tokens between languages using  
> the tokenVocab option, but I'm receiving errors from ANTLR when I  
> try this. Oddly enough, it appears as if the tokens are being  
> properly imported anyway.  Here's the output I get from ANTLR:

Found the bug... in combined parser/lexer grammars, the tool object  
was not set for generated lexer grammar and the import crashed.  Fixed.

Ter

From parrt at cs.usfca.edu  Wed Jun 14 15:16:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 14 15:16:06 2006
Subject: [antlr-interest] issues with v3 interpreter?
Message-ID: <6864D380-7D6D-4DB4-BB55-16202168A2E2@cs.usfca.edu>

Hi,

I am almost done with my list of things for 3.0beta!  Hooray.  One  
thing that might be a problem is the grammar interpreter (mostly used  
via ANTLRWorks).  I had a few bugs listed for the interpreter that  
didn't work but now they seem to be working.  It might have been that  
Jean and I were not handling whitespace properly.  Anyway, I can't  
find any bugs.  If you have noticed trouble with the interpreter,  
please let me know.

Thanks,
Ter
From sunjigang1965 at yahoo.com.cn  Thu Jun 15 04:41:12 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Thu Jun 15 04:41:21 2006
Subject: [antlr-interest] How to walk a tree with an imaginary root
Message-ID: <20060615114112.25597.qmail@web15706.mail.cnb.yahoo.com>

Hi all,

In parser, to build a tree,

ruleAlt!
    :
    l:graph {##=#([RULE_ALT,"ruleAlt"],l);}
    ;

In tree walker,

ruleAlt
    :     
    RULE_ALT graph 
    ;

got a tree has only "ruleAlt" node without any child, 
runtime error: <AST>: unexpected end of subtree.

Could you help?

Jigang


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From parrt at cs.usfca.edu  Thu Jun 15 09:14:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 15 09:14:21 2006
Subject: [antlr-interest] out of email contact til Monday AM
Message-ID: <94B0EEF2-42C9-411E-A55C-E66C0D954FF0@cs.usfca.edu>

Hi,

I'm off for the weekend in a few hours with no email contact...should  
be back in the saddle on Monday AM.

Terence
From sunjigang1965 at yahoo.com.cn  Thu Jun 15 14:33:26 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Thu Jun 15 14:33:31 2006
Subject: [antlr-interest] how to pass object from parser to walker
Message-ID: <20060615213326.1213.qmail@web15705.mail.cnb.yahoo.com>

Hi,

I created a symbol table in parser then want to use it for type checking in walker. Is there a way
to pass this object into walker? The working language is c#.

thanks.

Jigang


__________________________________________________
¸Ï¿ì×¢²áÑÅ»¢³¬´óÈÝÁ¿Ãâ·ÑÓÊÏä?
http://cn.mail.yahoo.com
From Cyang at infobal.com  Thu Jun 15 14:45:07 2006
From: Cyang at infobal.com (Charlie Yang)
Date: Thu Jun 15 14:39:13 2006
Subject: [antlr-interest] Qes: How to control AST- Combine multi-rules into
	one 
Message-ID: <96AD91D781CCD511A66000B0D0D15C490345FDD2@mail.infobal.com>

Hi, All, I get a problem with AST handling:

for parsing a general function call like:
	......
	Foo("first", "2ndpara", 3);
	......

I can use rules like:
	...
	functioncall_paras :
		    OPEN_PAREN  (one_argu ( COMMA one_argu )*)? CLOSE_PAREN!
	...
 
the rule works fine. 

However, i don't know how to concatenate all argus text together in the AST.
I want all argument combine to single leaf node rather than one argu on leaf
node.
I can use "oa" and oc.getText() to get first argument's text. but how to get
the rest of "ob" , can between 0 to n?

 functioncall_paras! :
    OPEN_PAREN!  ( oa:one_argu ( COMMA ob:one_argu )*)? CLOSE_PAREN!	
    {
    	String rtn="";
    	if(#oa!=null){
    		rtn = "(" + #ae.getText() ;
	    	if(#ob != null){
			//????????? Qestion Here ????????????
	    		rtn=rtn +","+#ae2.getText();
	    	}

    	}
    	oa.setText(rtn);
    	#functioncall_paras=#oa;
    }
    ;

Thanks,

Charlie
From doublemalam at yahoo.co.uk  Thu Jun 15 23:42:23 2006
From: doublemalam at yahoo.co.uk (Muhammad Masoom Alam)
Date: Thu Jun 15 23:42:27 2006
Subject: [antlr-interest] Perority Enforcing using Antlr Grammar
Message-ID: <20060616064223.44484.qmail@web86910.mail.ukl.yahoo.com>

Hi all,

 sorry if my question is a stupid one, as i am a new
bie. How to enforce perority rules using Antlr.

e.g. I have the following conditions

  (Predicate1 And (Predicate2 Or Predicate3))

In the above, Grammar, paranthesis are used to group
and enforce perority, but how this will be done using
the Antlr Grammar.

Thanks in Advance.
MA

Muhammad Masoom Alam
Security Engineering Universit?t Innsbruck
Institut f?r Informatik Technikerstra?e 13  A - 6020 Innsbruck 
Tel.: ++43 - 512 - 507 6462 
http://qe-informatik.uibk.ac.at/


		
___________________________________________________________ 
Copy addresses and emails from any email account to Yahoo! Mail - quick, easy and free. http://uk.docs.yahoo.com/trueswitch2.html
From jose.ventura.roda at gmail.com  Fri Jun 16 00:19:43 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Fri Jun 16 00:19:47 2006
Subject: Fwd: [antlr-interest] Qes: How to control AST- Combine multi-rules
	into one
In-Reply-To: <96AD91D781CCD511A66000B0D0D15C490345FDD2@mail.infobal.com>
References: <96AD91D781CCD511A66000B0D0D15C490345FDD2@mail.infobal.com>
Message-ID: <e39abda10606160019p176f2a73i1c2b473b8f20c50d@mail.gmail.com>

Try this:

functioncall_paras :
   OPEN_PAREN!
              {String rtn="";}
             : ( oa:one_argu! {rtn = "(" + #oa.getText() ;}
                  ( COMMA! ob:one_argu! {rtn=rtn +","+#ob.getText();}
                   )*
               )?
    CLOSE_PAREN!
   {
      if (#oa!=null)
         ## = #( #[FUNCTIONCALL_PARAS, rtn] ,##);
      }
   }
   ;

I believe this will be ok.

Regards

---------- Forwarded message ----------
From: Charlie Yang <Cyang@infobal.com>
Date: Jun 15, 2006 11:45 PM
Subject: [antlr-interest] Qes: How to control AST- Combine multi-rules into
one
To: "antlr-interest@antlr.org" <antlr-interest@antlr.org>

Hi, All, I get a problem with AST handling:

for parsing a general function call like:
       ......
       Foo("first", "2ndpara", 3);
       ......

I can use rules like:
       ...
       functioncall_paras :
                   OPEN_PAREN  (one_argu ( COMMA one_argu )*)? CLOSE_PAREN!
       ...

the rule works fine.

However, i don't know how to concatenate all argus text together in the AST.
I want all argument combine to single leaf node rather than one argu on leaf
node.
I can use "oa" and oc.getText() to get first argument's text. but how to get
the rest of "ob" , can between 0 to n?

functioncall_paras! :
   OPEN_PAREN!  ( oa:one_argu ( COMMA ob:one_argu )*)? CLOSE_PAREN!
   {
       String rtn="";
       if(#oa!=null){
               rtn = "(" + #ae.getText() ;
               if(#ob != null){
                       //????????? Qestion Here ????????????
                       rtn=rtn +","+#ae2.getText();
               }

       }
       oa.setText(rtn);
       #functioncall_paras=#oa;
   }
   ;

Thanks,

Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060616/3d287f3f/attachment.html
From doublemalam at yahoo.co.uk  Fri Jun 16 01:06:49 2006
From: doublemalam at yahoo.co.uk (Muhammad Masoom Alam)
Date: Fri Jun 16 01:06:53 2006
Subject: [antlr-interest] Perority Enforcing using Antlr Grammar
In-Reply-To: <20060616064223.44484.qmail@web86910.mail.ukl.yahoo.com>
Message-ID: <20060616080649.21763.qmail@web86901.mail.ukl.yahoo.com>

Hi all,

Precisely the question is that i have some oridnary
boolean expressions. like 

BooleanExp:  Predicate ((AND|OR) Predicate)*
          ;

This predicate is any boolean expression as we have in
java or C++, but how to mark the perority here. i mean
i can have a predicate expression of the form:
  (a=2) and (c<3 or d>4)

How to make these preferecnes implementable i.e. if
there is a start paranthesis, there should be an end
parantheisis and there can be more paranthesis within
predicates. If i make the grammar of the form:

BooleanExp: (LPAREN|Empty) Predicate (RPAREN|Empty)
((AND|OR) Predicate)*
          ;

This is logically not correct, since start can be
empty and end can be a paranthesis, which is really
not the required result!

Thanks
MA

 
--- Muhammad Masoom Alam <doublemalam@yahoo.co.uk>
wrote:

> Hi all,
> 
>  sorry if my question is a stupid one, as i am a new
> bie. How to enforce perority rules using Antlr.
> 
> e.g. I have the following conditions
> 
>   (Predicate1 And (Predicate2 Or Predicate3))
> 
> In the above, Grammar, paranthesis are used to group
> and enforce perority, but how this will be done
> using
> the Antlr Grammar.
> 
> Thanks in Advance.
> MA
> 

> 
> 
> 		
>
___________________________________________________________
> 
> Copy addresses and emails from any email account to
> Yahoo! Mail - quick, easy and free.
> http://uk.docs.yahoo.com/trueswitch2.html
> 



	
	
		
___________________________________________________________ 
All new Yahoo! Mail "The new Interface is stunning in its simplicity and ease of use." - PC Magazine 
http://uk.docs.yahoo.com/nowyoucan.html
From Kai.Koehne at student.hpi.uni-potsdam.de  Fri Jun 16 01:33:18 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Fri Jun 16 01:34:01 2006
Subject: [antlr-interest] Re: Perority Enforcing using Antlr Grammar
References: <20060616064223.44484.qmail@web86910.mail.ukl.yahoo.com>
	<D90489B77ED9F8439A3C784F732BEC9C737EAD@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737EAE@3mxstu1r.hpi.uni-potsdam.de>

Hi,
 
try something like
 
expr1: expr2 ("OR" expr2)*;
expr2: expr3 ("AND" expr3)*;
expr3: ID | "(" expr1 ")";
 
Regards,
 
Kai Koehne

 
________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Muhammad Masoom Alam
Gesendet: Fr 16.06.2006 08:42
An: antlr-interest@antlr.org
Betreff: [antlr-interest] Perority Enforcing using Antlr Grammar



Hi all,

 sorry if my question is a stupid one, as i am a new
bie. How to enforce perority rules using Antlr.

e.g. I have the following conditions

  (Predicate1 And (Predicate2 Or Predicate3))

In the above, Grammar, paranthesis are used to group
and enforce perority, but how this will be done using
the Antlr Grammar.

Thanks in Advance.
MA

Muhammad Masoom Alam
Security Engineering Universit?t Innsbruck
Institut f?r Informatik Technikerstra?e 13  A - 6020 Innsbruck
Tel.: ++43 - 512 - 507 6462
http://qe-informatik.uibk.ac.at/


               
___________________________________________________________
Copy addresses and emails from any email account to Yahoo! Mail - quick, easy and free. http://uk.docs.yahoo.com/trueswitch2.html


From scott at javadude.com  Fri Jun 16 03:37:02 2006
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun 16 03:37:19 2006
Subject: [antlr-interest] Perority Enforcing using Antlr Grammar
In-Reply-To: <20060616080649.21763.qmail@web86901.mail.ukl.yahoo.com>
Message-ID: <200606161122.k5GBMtZt024306@s2.eroute.net>

I have a discussion of this in my ANTLR tutorial. See
http://javadude.com/articles/antlrtut (the section on Expressions).

-- Scott



From Anthony.Youngman at eca-international.com  Fri Jun 16 03:37:57 2006
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Fri Jun 16 03:38:19 2006
Subject: [antlr-interest] Re: Perority Enforcing using Antlr Grammar
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737EAE@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <C7FE35004D40FD45AA342991B88CE404012902D1@lnml1.eca-international.local>

To expand this ...

Firstly there should be plenty of examples in various grammars but basically the idea is to bind the highest priority stuff first, then the lower stuff. Using standard mathematical priorities...

highestexpr: ID ( ( "*" | "/" ) ID )*;
midexpr: highestexpr ( ( "+" | "-" ) highestexpr );*
expr: midexpr ( ( "AND" | "OR" ) midexpr );*

To explain what it's doing, "highestexpr" grabs all your variable names, and binds them to the highest operators (here arithmetical multiply and divide). "midexpr" then comes along and binds all the "highestexpr"s to the add and subtract. Finally "expr" comes along and binds all the "midexpr" to your lowest operators, "AND" and "OR". Just add more levels for more levels of priority.

As an example, let's take

6 * 4 AND 3 + 9
ID * ID AND ID + ID
highestexpr AND highestexpr + highestexpr
midexpr AND midexpr
expr

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Koehne Kai
Sent: 16 June 2006 09:33
To: antlr-interest@antlr.org
Subject: [antlr-interest] Re: Perority Enforcing using Antlr Grammar

Hi,
 
try something like
 
expr1: expr2 ("OR" expr2)*;
expr2: expr3 ("AND" expr3)*;
expr3: ID | "(" expr1 ")";
 
Regards,
 
Kai Koehne

 
________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Muhammad Masoom Alam
Gesendet: Fr 16.06.2006 08:42
An: antlr-interest@antlr.org
Betreff: [antlr-interest] Perority Enforcing using Antlr Grammar



Hi all,

 sorry if my question is a stupid one, as i am a new
bie. How to enforce perority rules using Antlr.

e.g. I have the following conditions

  (Predicate1 And (Predicate2 Or Predicate3))

In the above, Grammar, paranthesis are used to group
and enforce perority, but how this will be done using
the Antlr Grammar.

Thanks in Advance.
MA

Muhammad Masoom Alam
Security Engineering Universit?t Innsbruck
Institut f?r Informatik Technikerstra?e 13  A - 6020 Innsbruck
Tel.: ++43 - 512 - 507 6462
http://qe-informatik.uibk.ac.at/


               
___________________________________________________________
Copy addresses and emails from any email account to Yahoo! Mail - quick, easy and free. http://uk.docs.yahoo.com/trueswitch2.html



* ************************************************************************ *

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

* ************************************************************************ *
From ewbank at gmail.com  Fri Jun 16 06:06:43 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun 16 06:06:46 2006
Subject: [antlr-interest] How to walk a tree with an imaginary root
In-Reply-To: <20060615114112.25597.qmail@web15706.mail.cnb.yahoo.com>
References: <20060615114112.25597.qmail@web15706.mail.cnb.yahoo.com>
Message-ID: <dd3a065f0606160606k138078dex7e99fbb19036b0c8@mail.gmail.com>

What is the value of "l" when it is parsed?  Try using the "toStringTree"
and "toStringList" methods to discover if the parser is buillding the
correct trees.

One thing that is, to me, curious, is the "!" after ruleAlt.  I don't use
this much, so I'm not sure what it does...

One aside... When I add an imaginary node, as you are doing here, I prefer a
standard idiom:

   ruleAlt : graph  { ## = #( [RULE_ALT,"ruleAlt"], ##); } ;

It may not do anything different, but seeing this as a standard idiom helps
you (and others that read your code) to recognize where you are adding
imaginary nodes.

On 6/15/06, Ëï¼Í¸Õ Jigang (Robert) Sun <sunjigang1965@yahoo.com.cn> wrote:
>
> In parser, to build a tree,
>    ruleAlt! :l:graph {##=#([RULE_ALT,"ruleAlt"],l);} ;
>
> In tree walker,
>    ruleAlt : RULE_ALT graph ;

got a tree has only "ruleAlt" node without any child,
> runtime error: <AST>: unexpected end of subtree.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060616/0c67479f/attachment-0001.html
From joerg at jrsoftware.de  Fri Jun 16 06:22:27 2006
From: joerg at jrsoftware.de (=?UTF-8?B?SsO2cmcgUmF0aGxldg==?=)
Date: Fri Jun 16 06:22:32 2006
Subject: [antlr-interest] How to walk a tree with an imaginary root
In-Reply-To: <20060615114112.25597.qmail@web15706.mail.cnb.yahoo.com>
References: <20060615114112.25597.qmail@web15706.mail.cnb.yahoo.com>
Message-ID: <4492B093.3070606@jrsoftware.de>

Hi,

> In tree walker,
> 
> ruleAlt
>     :     
>     RULE_ALT graph 
>     ;

I think you have to write:

ruleAlt
    :
    #(RULE_ALT graph)
    ;

because graph is a child of RULE_ALT, not a sibling.

If RULE_ALT really does not have any children, there might be an
additional bug in your "graph" rule or in the tree construction.


Regards,
Joerg

From johnicholas.hines at gmail.com  Fri Jun 16 10:24:45 2006
From: johnicholas.hines at gmail.com (Johnicholas Hines)
Date: Fri Jun 16 12:06:41 2006
Subject: [antlr-interest] Qes: How to control AST- Combine multi-rules
	into one
In-Reply-To: <96AD91D781CCD511A66000B0D0D15C490345FDD5@mail.infobal.com>
References: <96AD91D781CCD511A66000B0D0D15C490345FDD5@mail.infobal.com>
Message-ID: <d092c2300606161024m23696aa0scbf2aa15dc594d8a@mail.gmail.com>

I'm an antlr newbie, but perhaps this walker (intended to run with the
calc example in the antlr examples folder) would suit your needs. NB:
I have no idea if this compiles or runs.

class CalcTreeWalker extends TreeParser;
expr returns [String r]
{
        float a,b;
        r= "";
}
        :       #(PLUS a=expr b=expr)   { r = a+b; }
        |       #(STAR a=expr b=expr)   { r = a+b; }
        |       i:INT                   { r = i->getText(); }
        ;

On 6/16/06, Charlie Yang <Cyang@infobal.com> wrote:
> Hi, Johnicholas Hines:
>
> Thanks for your kind reply.
> I considered using tree walker to seperate actions from parser/grammar.
> However, I'm quite new with Antlr and all examples i found about treewalker
> are almost similar with parser. so I did not understand why do samething
> twice. Now I get it  but, still, fail get a good example to start with. do
> you by chance have an example/docs about treewalker for me? your help will
> be very appreciated.
>
> Charlie
>
>
>
> -----Original Message-----
> From: Johnicholas Hines [mailto:johnicholas.hines@gmail.com]
> Sent: Thursday, June 15, 2006 6:51 PM
> To: Charlie Yang
> Subject: Re: [antlr-interest] Qes: How to control AST- Combine multi-rules
> into one
>
>
> Could you perhaps first parse the expression and then walk the tree
> generated?
>
> The AST that antlr builds is not N-ary; it is some finite number-ary,
> depending only on your grammar.
>
> If you print out the AST that antlr is building for you, you will see
> it is actually binary or whatever, and then you can easily write the
> treeparser in that language.
>
> Johnicholas
>
> On 6/15/06, Charlie Yang <Cyang@infobal.com> wrote:
> > Hi, All, I get a problem with AST handling:
> >
> > for parsing a general function call like:
> >        ......
> >        Foo("first", "2ndpara", 3);
> >        ......
> >
> > I can use rules like:
> >        ...
> >        functioncall_paras :
> >                    OPEN_PAREN  (one_argu ( COMMA one_argu )*)?
> CLOSE_PAREN!
> >        ...
> >
> > the rule works fine.
> >
> > However, i don't know how to concatenate all argus text together in the
> AST.
> > I want all argument combine to single leaf node rather than one argu on
> leaf
> > node.
> > I can use "oa" and oc.getText() to get first argument's text. but how to
> get
> > the rest of "ob" , can between 0 to n?
> >
> >  functioncall_paras! :
> >    OPEN_PAREN!  ( oa:one_argu ( COMMA ob:one_argu )*)? CLOSE_PAREN!
> >    {
> >        String rtn="";
> >        if(#oa!=null){
> >                rtn = "(" + #ae.getText() ;
> >                if(#ob != null){
> >                        //????????? Qestion Here ????????????
> >                        rtn=rtn +","+#ae2.getText();
> >                }
> >
> >        }
> >        oa.setText(rtn);
> >        #functioncall_paras=#oa;
> >    }
> >    ;
> >
> > Thanks,
> >
> > Charlie
> >
>
From sunjigang1965 at yahoo.com.cn  Fri Jun 16 13:19:30 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri Jun 16 13:19:35 2006
Subject: [antlr-interest] How to launch ASTFrame
Message-ID: <20060616201930.96531.qmail@web15704.mail.cnb.yahoo.com>

I am using C#. To use ASTFrame, in void Main of class Main , I added "using antlr.debug.misc;" .
Then I tried to run program, error occurs:-

The type 'System.Windows.Forms.Form' is defined in an assembly that is not referenced. You must
add a reference to assembly 'System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
PublicKeyToken=b77a5c561934e089'.	

I added reference: "using System.Windows.Forms;", new error reported:-

The type or namespace name 'Windows' does not exist in the namespace 'System' (are you missing an
assembly reference?)

Thanks

Jigang


		
___________________________________________________________ 
ÇÀ×¢ÑÅ»¢Ãâ·ÑÓÊÏä-3.5GÈÝÁ¿£¬20M¸½¼þ£¡ 
http://cn.mail.yahoo.com
From craig at palantir.co.za  Sat Jun 17 11:07:36 2006
From: craig at palantir.co.za (Craig Main)
Date: Sat Jun 17 11:07:46 2006
Subject: [antlr-interest] Tree Recursion (matching problem).
Message-ID: <20060617180741.F2892DCC4B@www.antlr.org>

Hi,

I have built a simple tree parser that parses, producing the following AST.

( RULESET ( = b ( + 40 ( * 2 1 ) ) ) )

I am having trouble with the recursive part of the process.
My rule is as follows:

expression
returns [object result]            {log.Debug(null); result = null;object
l,r;}                                   
                                 : #(PLUS l=term r=term)
{result=ExpressionOperation.Add(l,r);}
                                 | #(MINUS l=term r=term)
{result=ExpressionOperation.Subtract(l,r);}
                                 | #(MULTIPLY l=term r=term)
{result=ExpressionOperation.Multiply(l,r);}
                                 | #(DIVIDE l=term r=term)
{result=ExpressionOperation.Divide(l,r);}                                 
                                 | result=term {log.Debug("term");}
                                 ;

term
returns [object result]            {log.Debug(null); result = null; object
expr = null;}
                                 : result=literal
                                 ;

literal
returns [object result]            {log.Debug(null); result = null; object
expr = null;}
                                 : id:ID { result = id.getText(); }
                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }
                                 | li:LITERAL { result = li.getText(); }
                                 | #(LPAREN expression)
                                 | #(m:METHOD_CALL #(ELIST (expr=expression
{log.Info(string.Format("e{0}",expr));})*)) {log.Info(string.Format("method
call {0}", m.getText()));}
                                 ;

The problem with the above is that the following works, an expression of 
a = 40 + 2

If I add another term, the matching breaks
a = 40 + 2 * 1
The tree parser fails on the multiplication.

As you can see, the tree is built correctly! I am just not matching
correctly.
What am I doing wrong?

Regards
Craig



From craig at palantir.co.za  Sat Jun 17 23:35:33 2006
From: craig at palantir.co.za (Craig Main)
Date: Sat Jun 17 23:35:41 2006
Subject: [antlr-interest] Tree Recursion (matching problem).
In-Reply-To: <20060617180741.F2892DCC4B@www.antlr.org>
Message-ID: <20060618063538.4CE57DC75D@www.antlr.org>

Hi all,

I apologise in advance for having a conversation with myself in the mailing
list, but I figured out the problem and thought I would respond in to avoid
wasting anyone's precious time.

The problem was that I had stupidly specified:
expression : #(PLUS l=term r=term) // goes too deep to recurse later on?

Instead of:
expression : #(PLUS l=expression r=expression) // correct children.

Thanks
Regards
Craig

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Craig Main
Sent: 17 June 2006 08:08 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Tree Recursion (matching problem).

Hi,

I have built a simple tree parser that parses, producing the following AST.

( RULESET ( = b ( + 40 ( * 2 1 ) ) ) )

I am having trouble with the recursive part of the process.
My rule is as follows:

expression
returns [object result]            {log.Debug(null); result = null;object
l,r;}                                   
                                 : #(PLUS l=term r=term)
{result=ExpressionOperation.Add(l,r);}
                                 | #(MINUS l=term r=term)
{result=ExpressionOperation.Subtract(l,r);}
                                 | #(MULTIPLY l=term r=term)
{result=ExpressionOperation.Multiply(l,r);}
                                 | #(DIVIDE l=term r=term)
{result=ExpressionOperation.Divide(l,r);}                                 
                                 | result=term {log.Debug("term");}
                                 ;

term
returns [object result]            {log.Debug(null); result = null; object
expr = null;}
                                 : result=literal
                                 ;

literal
returns [object result]            {log.Debug(null); result = null; object
expr = null;}
                                 : id:ID { result = id.getText(); }
                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }
                                 | li:LITERAL { result = li.getText(); }
                                 | #(LPAREN expression)
                                 | #(m:METHOD_CALL #(ELIST (expr=expression
{log.Info(string.Format("e{0}",expr));})*)) {log.Info(string.Format("method
call {0}", m.getText()));}
                                 ;

The problem with the above is that the following works, an expression of 
a = 40 + 2

If I add another term, the matching breaks
a = 40 + 2 * 1
The tree parser fails on the multiplication.

As you can see, the tree is built correctly! I am just not matching
correctly.
What am I doing wrong?

Regards
Craig





From ewbank at gmail.com  Sun Jun 18 09:10:28 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Jun 18 09:10:31 2006
Subject: [antlr-interest] Tree Recursion (matching problem).
In-Reply-To: <20060618063538.4CE57DC75D@www.antlr.org>
References: <20060617180741.F2892DCC4B@www.antlr.org>
	<20060618063538.4CE57DC75D@www.antlr.org>
Message-ID: <dd3a065f0606180910t46dc1bd5hf8faabcea3e0fb25@mail.gmail.com>

Hi Craig,

Don't call it "stupid" - or else we are all stupid at some time or other.
It's part of the learning process and can safely be called education
instead.  Those lessons that are a bit painful, but overall harmless, are
the best to learn - and they will not be forgotten.

Thanks for letting us observe the discovery process, and reminding us that
there are some mistakes we all make at some point or other

- Bryan

On 6/18/06, Craig Main <craig@palantir.co.za> wrote:
>
> I apologise in advance for having a conversation with myself in the
> mailing
> list, but I figured out the problem and thought I would respond in to
> avoid
> wasting anyone's precious time.
>
> The problem was that I had stupidly specified:
> expression : #(PLUS l=term r=term) // goes too deep to recurse later on?
>
> Instead of:
> expression : #(PLUS l=expression r=expression) // correct children.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060618/f653fba6/attachment.html
From prashant.deva at gmail.com  Sun Jun 18 16:05:20 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Jun 18 16:05:25 2006
Subject: [antlr-interest] Is ANTLR Studio website working for you?
Message-ID: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>

Hi,
 I just received a complain from a few people they are having trouble
obtaining a license for antlr studio.
However the site seems to be working perfectly fine on my browser.
Could some of you just try opening the link below on your browser and tell
me if its working for you?

http://www.placidsystems.com/account/newaccount.jsf

Thanks,
-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/be9182a9/attachment.html
From oliver.zeigermann at gmail.com  Sun Jun 18 22:25:01 2006
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun Jun 18 22:25:03 2006
Subject: [antlr-interest] Is ANTLR Studio website working for you?
In-Reply-To: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>
References: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>
Message-ID: <9da4f4520606182225v7c5832c0rd2e9a50ceef9428f@mail.gmail.com>

Some people might not be allowed to contact HTTP servers that are not
on port 80.

Oliver

2006/6/19, Prashant Deva <prashant.deva@gmail.com>:
> Hi,
>  I just received a complain from a few people they are having trouble
> obtaining a license for antlr studio.
> However the site seems to be working perfectly fine on my browser.
> Could some of you just try opening the link below on your browser and tell
> me if its working for you?
>
> http://www.placidsystems.com/account/newaccount.jsf
>
> Thanks,
> --
> Prashant Deva
> Creator, ANTLR Studio
> Founder, Placid Systems, www.placidsystems.com
>
From doublemalam at yahoo.co.uk  Sun Jun 18 22:47:19 2006
From: doublemalam at yahoo.co.uk (Muhammad Masoom Alam)
Date: Sun Jun 18 22:47:22 2006
Subject: [antlr-interest] Re: Perority Enforcing using Antlr Grammar
In-Reply-To: <C7FE35004D40FD45AA342991B88CE404012902D1@lnml1.eca-international.local>
Message-ID: <20060619054720.77910.qmail@web86906.mail.ukl.yahoo.com>

Dear All,

If i evaluate the following expression, How the AST
will be created. 
  6 * 4 + 3 + 9

I start the first plus as root and go further:

    *
   / \
  6   +
     / \
    4   +
       / \
      3   9

if i evaluated the tree like this, addition takes
place before the mulitiplication which is not desired.

If any one can help me, how this tree will be
evaluated.

Thanks in advance.
MA


--- Anthony Youngman
<Anthony.Youngman@eca-international.com> wrote:

> To expand this ...
> 
> Firstly there should be plenty of examples in
> various grammars but basically the idea is to bind
> the highest priority stuff first, then the lower
> stuff. Using standard mathematical priorities...
> 
> highestexpr: ID ( ( "*" | "/" ) ID )*;
> midexpr: highestexpr ( ( "+" | "-" ) highestexpr );*
> expr: midexpr ( ( "AND" | "OR" ) midexpr );*
> 
> To explain what it's doing, "highestexpr" grabs all
> your variable names, and binds them to the highest
> operators (here arithmetical multiply and divide).
> "midexpr" then comes along and binds all the
> "highestexpr"s to the add and subtract. Finally
> "expr" comes along and binds all the "midexpr" to
> your lowest operators, "AND" and "OR". Just add more
> levels for more levels of priority.
> 
> As an example, let's take
> 
> 6 * 4 AND 3 + 9
> ID * ID AND ID + ID
> highestexpr AND highestexpr + highestexpr
> midexpr AND midexpr
> expr
> 
> Cheers,
> Wol
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf
> Of Koehne Kai
> Sent: 16 June 2006 09:33
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Re: Perority Enforcing
> using Antlr Grammar
> 
> Hi,
>  
> try something like
>  
> expr1: expr2 ("OR" expr2)*;
> expr2: expr3 ("AND" expr3)*;
> expr3: ID | "(" expr1 ")";
>  
> Regards,
>  
> Kai Koehne
> 
>  
> ________________________________
> 
> Von: antlr-interest-bounces@antlr.org im Auftrag von
> Muhammad Masoom Alam
> Gesendet: Fr 16.06.2006 08:42
> An: antlr-interest@antlr.org
> Betreff: [antlr-interest] Perority Enforcing using
> Antlr Grammar
> 
> 
> 
> Hi all,
> 
>  sorry if my question is a stupid one, as i am a new
> bie. How to enforce perority rules using Antlr.
> 
> e.g. I have the following conditions
> 
>   (Predicate1 And (Predicate2 Or Predicate3))
> 
> In the above, Grammar, paranthesis are used to group
> and enforce perority, but how this will be done
> using
> the Antlr Grammar.
> 
> Thanks in Advance.
> MA
> 
> Muhammad Masoom Alam
> Security Engineering Universit?t Innsbruck
> Institut f?r Informatik Technikerstra?e 13  A - 6020
> Innsbruck
> Tel.: ++43 - 512 - 507 6462
> http://qe-informatik.uibk.ac.at/
> 
> 
>                
>
___________________________________________________________
> Copy addresses and emails from any email account to
> Yahoo! Mail - quick, easy and free.
> http://uk.docs.yahoo.com/trueswitch2.html
> 
> 
> 
> *
>
************************************************************************
> *
> 
> This transmission is intended for the named
> recipient only. It may contain private and
> confidential information. If this has come to you in
> error you must not act on anything disclosed in it,
> nor must you copy it, modify it, disseminate it in
> any way, or show it to anyone. Please e-mail the
> sender to inform us of the transmission error or
> telephone ECA International immediately and delete
> the e-mail from your information system.
> 
> Telephone numbers for ECA International offices are:
> Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121
> 2388, London +44 (0)20 7351 5000 and New York +1 212
> 582 2333.
> 
> *
>
************************************************************************
> *
> 



		
___________________________________________________________ 
Copy addresses and emails from any email account to Yahoo! Mail - quick, easy and free. http://uk.docs.yahoo.com/trueswitch2.html
From prashant.deva at gmail.com  Sun Jun 18 22:51:49 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Jun 18 22:51:53 2006
Subject: [antlr-interest] Is ANTLR Studio website working for you?
In-Reply-To: <9da4f4520606182225v7c5832c0rd2e9a50ceef9428f@mail.gmail.com>
References: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>
	<9da4f4520606182225v7c5832c0rd2e9a50ceef9428f@mail.gmail.com>
Message-ID: <41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>

Yes, i guess that must be it.
Although I cant seem to help it. I need to run both iis and tomcat on the
same machine :(

On 6/19/06, Oliver Zeigermann <oliver.zeigermann@gmail.com> wrote:
>
> Some people might not be allowed to contact HTTP servers that are not
> on port 80.
>
> Oliver
>
> 2006/6/19, Prashant Deva <prashant.deva@gmail.com>:
> > Hi,
> >  I just received a complain from a few people they are having trouble
> > obtaining a license for antlr studio.
> > However the site seems to be working perfectly fine on my browser.
> > Could some of you just try opening the link below on your browser and
> tell
> > me if its working for you?
> >
> > http://www.placidsystems.com/account/newaccount.jsf
> >
> > Thanks,
> > --
> > Prashant Deva
> > Creator, ANTLR Studio
> > Founder, Placid Systems, www.placidsystems.com
> >
>



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/f2d66b49/attachment.html
From craymer at warpiv.com  Sun Jun 18 23:03:47 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Sun Jun 18 23:03:50 2006
Subject: [antlr-interest] Is ANTLR Studio website working for you?
In-Reply-To: <41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>
Message-ID: <004701c69366$221ad950$6402a8c0@Fafnir>

I couldn't get in the first time I tried, but did later.  That would seem to
point to ISP flakiness rather than access restrictions.

 

--Loring

 

 

  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Sunday, June 18, 2006 10:52 PM
To: Oliver Zeigermann
Cc: Antlr List
Subject: Re: [antlr-interest] Is ANTLR Studio website working for you?

 

Yes, i guess that must be it. 
Although I cant seem to help it. I need to run both iis and tomcat on the
same machine :(

On 6/19/06, Oliver Zeigermann <oliver.zeigermann@gmail.com> wrote:

Some people might not be allowed to contact HTTP servers that are not
on port 80.

Oliver

2006/6/19, Prashant Deva <prashant.deva@gmail.com>:
> Hi,
>  I just received a complain from a few people they are having trouble
> obtaining a license for antlr studio.
> However the site seems to be working perfectly fine on my browser.
> Could some of you just try opening the link below on your browser and tell

> me if its working for you?
>
> http://www.placidsystems.com/account/newaccount.jsf
>
> Thanks,
> --
> Prashant Deva 
> Creator, ANTLR Studio
> Founder, Placid Systems, www.placidsystems.com
>




-- 
Prashant Deva
Creator, ANTLR Studio 
Founder, Placid Systems, www.placidsystems.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060618/0a8d92eb/attachment.html
From e.papegaaij at student.utwente.nl  Mon Jun 19 03:23:47 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 03:23:54 2006
Subject: [antlr-interest] Matching tokens only at certain places
Message-ID: <200606191223.47374.e.papegaaij@student.utwente.nl>

Hello,

I'm trying to parse partially language independent input. The input is in fact 
similar to that of actions in ANTLR itself. The action tokens in ANTLR all 
have braces around them. My tokens don't. Here is some example input:

iface public String getString() ;
\___/ \_______________________/\_/

As can be seen in this example, the token can only follow a 'iface' token and 
will not contain a ';'. This second condition is straight forward to 
implement. The first however is more difficult. In the parser I know exactly 
when this token should occur, but not in the lexer. Is there any way to force 
the lexer to produce a certain token at that point and nowhere else? BTW, I'm 
using ANTLR v3.

Best regards,
Emond Papegaaij
From jose.ventura.roda at gmail.com  Mon Jun 19 04:11:56 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Mon Jun 19 04:12:28 2006
Subject: [antlr-interest] EarlyExitException??
Message-ID: <e39abda10606190411l33e4b94bkb4d332bf1c7279b8@mail.gmail.com>

Hi all,

I'm trying to make my first antlr 3 grammar. I don't never seen this
exception and I haven't found information

org.antlr.runtime.EarlyExitException in the Parse Tree Frame on the debugger
session.

I use antlrworks 1.0 early access 9 with antlr included.

Any suggestion?

Thanks.
Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/2ad5a262/attachment-0001.html
From e.papegaaij at student.utwente.nl  Mon Jun 19 05:49:35 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 05:49:44 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <d092c2300606190503r11117ff2i1230439ac09946e@mail.gmail.com>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<d092c2300606190503r11117ff2i1230439ac09946e@mail.gmail.com>
Message-ID: <200606191449.36080.e.papegaaij@student.utwente.nl>

On Monday 19 June 2006 14:03, you wrote:
> On 6/19/06, Emond Papegaaij <e.papegaaij@student.utwente.nl> wrote:
> > I'm trying to parse partially language independent input. The input is in
> > fact similar to that of actions in ANTLR itself. The action tokens in
> > ANTLR all have braces around them. My tokens don't. Here is some example
> > input:
> >
> > iface public String getString() ;
> > \___/ \_______________________/\_/
> >
> > As can be seen in this example, the token can only follow a 'iface' token
> > and will not contain a ';'. This second condition is straight forward to
> > implement. The first however is more difficult. In the parser I know
> > exactly when this token should occur, but not in the lexer. Is there any
> > way to force the lexer to produce a certain token at that point and
> > nowhere else? BTW, I'm using ANTLR v3.
> >
> Could you include a demo lexer/parser, a cut-down version of the lexer and
> parser that you're working on?
>
> It seems to me that you could make 'iface', 'getstring' and 'semicolon'
> token types in the lexer. \
> (IFACE, GETSTRING, SEMI, probably)
> and a production of the form
> line: IFACE GETSTRING SEMI
> in the parser.
>

Below is a very cut-down version of the lexer and parser that is (obviously) not working and a sample of the input it should be able to parse. The problem is that I don't know anything about the contents of METHOD_SIG_ACTION, except that it will not contain a semicolon. Creating a token that matches everything except a semicolon does not work, as ANTLR will always create that token for all input. I need a way to specify that the the METHOD_SIG_ACTION token can only follow the 'iface' token. As 'iface' is always followed by METHOD_SIG_ACTION, it is possible to specify it in the lexer (ie. set some boolean to true after emitting an 'iface' token).


grammar TPL;

specification
        : IDENTIFIER '{' body '}'
        ;

body
        : 'iface' METHOD_SIG_ACTION ';'
        ;

IDENTIFIER: ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')* ;

WS  : ( ' '
                | '\t'
                | '\f'
                  // handle newlines
                | ( '\r'    // Macintosh
                        | '\n'    // Unix (the right way)
                        )
                )+
                { channel=99; /*token = JavaParser.IGNORE_TOKEN;*/ }
                ;

METHOD_SIG_ACTION: (~';')+;



Input:
Printable {
  iface public String getString();
}

IndentedConstruct {
  iface protected String writeIndentation(int indentation);
}

Program {
  iface String visitStmt (int indentation);
}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/4c831269/attachment.html
From e.papegaaij at student.utwente.nl  Mon Jun 19 06:32:27 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 06:32:30 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <d092c2300606190603k877ba85pffe60a72a1263921@mail.gmail.com>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191449.36080.e.papegaaij@student.utwente.nl>
	<d092c2300606190603k877ba85pffe60a72a1263921@mail.gmail.com>
Message-ID: <200606191532.27837.e.papegaaij@student.utwente.nl>

On Monday 19 June 2006 15:03, you wrote:
> On 6/19/06, Emond Papegaaij <e.papegaaij@student.utwente.nl> wrote:
<CUT howto parse 'iface' (~';') ';'>

> > The problem is that I don't know anything about the contents of
> > METHOD_SIG_ACTION, except that it will not contain a semicolon. Creating
> > a token that matches everything except a semicolon does not work, as
> > ANTLR will always create that token for all input. I need a way to
> > specify that the the METHOD_SIG_ACTION token can only follow the 'iface'
> > token. As 'iface' is always followed by METHOD_SIG_ACTION, it is possible
> > to specify it in the lexer (ie. set some boolean to true after emitting
> > an 'iface' token).

> How did you test the statement "Creating a token that matches everything
> except a semicolon does not work"?
> Because that's what I would do, but perhaps I'm stupid.
> Have you looked at syntatic predicates?
> http://antlr.org/doc/metalang.html#SyntacticPredicates

The example grammar (in the previous mail) matches everything as a 
METHOD_SIG_ACTION. I've studied the DFA created by ANTLR, and it is clear 
that the only way to reach the IDENTIFIER token is by ending with <EOT>. 
METHOD_SIG_ACTION matches everything, including IDENTIFIERs. Therefore when 
starting to match an IDENTIFIER, it will switch to METHOD_SIG_ACTION as soon 
as it matches something that is not a letter or ';'. With the following 
input:
Printable {
  iface public String getString();
}
the tokens will be:
METHOD_SIG_ACTION: "Printable {\n\tiface public String getString()"
';'
METHOD_SIG_ACTION: "\n}\n"

and not:
IDENTIFIER: "Printable"
'{'
'iface'
METHOD_SIG_ACTION: "public String getString()"
';'
'}'

Best regards,
Emond Papegaaij
From e.papegaaij at student.utwente.nl  Mon Jun 19 07:13:12 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 07:13:17 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <200606191532.27837.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<d092c2300606190603k877ba85pffe60a72a1263921@mail.gmail.com>
	<200606191532.27837.e.papegaaij@student.utwente.nl>
Message-ID: <200606191613.12433.e.papegaaij@student.utwente.nl>

On Monday 19 June 2006 15:32, Emond Papegaaij wrote:
> On Monday 19 June 2006 15:03, you wrote:
> > On 6/19/06, Emond Papegaaij <e.papegaaij@student.utwente.nl> wrote:
>
> <CUT howto parse 'iface' (~';') ';'>
>
> The example grammar (in the previous mail) matches everything as a
> METHOD_SIG_ACTION. I've studied the DFA created by ANTLR, and it is clear
> that the only way to reach the IDENTIFIER token is by ending with <EOT>.
> METHOD_SIG_ACTION matches everything, including IDENTIFIERs. Therefore when
> starting to match an IDENTIFIER, it will switch to METHOD_SIG_ACTION as
> soon as it matches something that is not a letter or ';'.

Replying to myself.

I've tried to replace
  METHOD_SIG_ACTION: (~';')+ ;
with
  METHOD_SIG_ACTION: {sig}?=> (~';')+ ;
and set 'sig' to 'true' when the token is valid. However the predicate does 
not have the desired effect. In stead of disabling the token, it disables all 
paths the token could match. This is what the resulting s0 DFA state in the 
generated code looks like:

public DFA.State transition(IntStream input) throws RecognitionException {
  int LA3_0 = input.LA(1);
  if ( LA3_0=='{' && (sig)) {return s1;}
  if ( LA3_0=='}' && (sig)) {return s2;}
  if ( LA3_0=='i' && (sig)) {return s3;}
  if ( LA3_0==';' ) {return s4;}
  if ( (..)||(..)||(..) && (sig)) {return s5;}
  if ( (..)||(..)||LA3_0==' ' && (sig)) {return s6;}
  if ( (..)||..||(..)||(..)||(..)||(..)||..||(..) && (sig)) {return s7;}
  NoViableAltException nvae =
    new NoViableAltException("", 3, 0, input);
  throw nvae;
}

It is clear that this disables all paths except "LA3_0==';'" when 'sig' is 
false. As a result the lexer will only except ';' tokens as long as 'sig' is 
false. Am I using the {..}?=> predicates incorrectly?

Best regards,
Emond Papegaaij
From e.papegaaij at student.utwente.nl  Mon Jun 19 08:08:01 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 08:08:07 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <200606191613.12433.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191532.27837.e.papegaaij@student.utwente.nl>
	<200606191613.12433.e.papegaaij@student.utwente.nl>
Message-ID: <200606191708.01553.e.papegaaij@student.utwente.nl>

On Monday 19 June 2006 16:13, Emond Papegaaij wrote:
> On Monday 19 June 2006 15:32, Emond Papegaaij wrote:
> This is what the resulting s0 DFA state in the generated code looks like:
>
> public DFA.State transition(IntStream input) throws RecognitionException {
>   int LA3_0 = input.LA(1);
>   if ( LA3_0=='{' && (sig)) {return s1;}
>   if ( LA3_0=='}' && (sig)) {return s2;}
>   if ( LA3_0=='i' && (sig)) {return s3;}
>   if ( LA3_0==';' ) {return s4;}
>   if ( (..)||(..)||(..) && (sig)) {return s5;}
>   if ( (..)||(..)||LA3_0==' ' && (sig)) {return s6;}
>   if ( (..)||..||(..)||(..)||(..)||(..)||..||(..) && (sig)) {return s7;}
>   NoViableAltException nvae =
>     new NoViableAltException("", 3, 0, input);
>   throw nvae;
> }
>
> It is clear that this disables all paths except "LA3_0==';'" when 'sig' is
> false. As a result the lexer will only except ';' tokens as long as 'sig'
> is false. Am I using the {..}?=> predicates incorrectly?

Well, replying to myself again.

I've managed to get my example to parse correctly, but I had to perform some 
weird tricks. First I had to re-enable the DFA paths that would accept input 
that could have been lexed as METHOD_SIG_ACTION. That meant I had to 
put '{!sig}?=>' predicates in all lexical rules.

However when generating the lexer, it still didn't work. Notice how ANTLR puts 
the semantic predicates in the if statements:
 if ( compareChar ('||' compareChar)* '&&' predicate)
In Java '&&' takes precedence over '||'. This results in the predicate only 
effecting the last character comparison. I believe this is a bug in the 
generated code. Grouping all character comparisons together in the generated 
code made my grammar work.

To come back to the first problem. Is it really preferable to let the gated 
semantic predicates disable all paths that /could/ lead to a certain 
alternative? To me it seems more logical to let the predicates remove all 
paths that /will/ lead to a certain alternative. But I might be missing 
something obvious.

Best regards,
Emond Papegaaij
From open.zone at virgin.net  Mon Jun 19 09:28:46 2006
From: open.zone at virgin.net (Micheal J)
Date: Mon Jun 19 09:10:56 2006
Subject: [antlr-interest] how to pass object from parser to walker
In-Reply-To: <20060615213326.1213.qmail@web15705.mail.cnb.yahoo.com>
Message-ID: <052601c693bd$722335d0$c704a8c0@hercules>

> Hi,
> 
> I created a symbol table in parser then want to use it for 
> type checking in walker. Is there a way to pass this object 
> into walker? The working language is c#.

1. Create your own custom constructor that accepts a symbolTable in the code
section of the ANTLR grammar file for your walker.

2. You can also defined a [private] SymbolTable field for you walker in the
code section.

3. Use symbolTable field in your action code.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From open.zone at virgin.net  Mon Jun 19 09:28:46 2006
From: open.zone at virgin.net (Micheal J)
Date: Mon Jun 19 09:11:08 2006
Subject: [antlr-interest] nant build error
In-Reply-To: <dcb971710606120813q2e3321ala9f83d8bcd5660c@mail.gmail.com>
Message-ID: <052901c693bd$7bbc7c50$c704a8c0@hercules>

Try ANTLR 2.7.6. I don't remember any build problems for 2.7.5 but, perhaps
Nant has changed and that buildfile is no longer valid for the current Nant
releases.

ANTLR 2.7.6 builds fne with Nant 0.85 rc3 and later. Not sure about nighly
build though.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


> Hi everyone,
> 
> I want to generate c# source file. I use a tutorial here
> (http://www.antlr.org/doc/csharp-runtime.html)
> 
> In the "antlr-2.7.5/lib/csharp" directory, I execute "nant 
> build" command line to generate the missing files : 
> -JavaLexer.cs -JavaRecognizer.cs -JavaTokenTypes.cs 
> -JavaTreeParser.cs -JavaTreeParserTokenTypes.cs.
> 
> But the build failed, I copy past the message under.
> 
> Is anyone have a solution ?
> 
> Cheers
> 
> dotnet
> 
> -------------------------------
> NAnt 0.85 (Build 0.85.2337.0; nightly; 26/05/2006)
> Copyright (C) 2001-2006 Gerry Shaw
> http://nant.sourceforge.net
> 
> Buildfile: 
> file:///D:/work/Antlr/antlr-2.7.5/lib/csharp/antlr.runtime.bui
ld
Target framework: Microsoft .NET Framework 2.0
Target(s) specified: build


init:

   [tstamp] lundi 12 juin 2006 17:00:12.
   [script] Scanning assembly "dkeotbif" for extensions.
     [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

build:

     [echo] Building antlr.runtime-2.7.5 (debug)

init:

   [tstamp] lundi 12 juin 2006 17:00:13.
   [script] Scanning assembly "a_vuafwx" for extensions.
     [echo] ------------------- antlr.runtime 2.7.5 [2005] ----------------

compile:

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(118,6):
Element <includes... /> for <assemblyfileset... /> is deprecated. Use
<include> element instead.

BUILD FAILED - 0 non-fatal error(s), 1 warning(s)

D:\work\Antlr\antlr-2.7.5\lib\csharp\antlr.runtime.build(119,15):
Unexpected attribute "match" on element <includes>.

Total time: 0.6 seconds.

From open.zone at virgin.net  Mon Jun 19 09:28:46 2006
From: open.zone at virgin.net (Micheal J)
Date: Mon Jun 19 09:11:14 2006
Subject: [antlr-interest] Files missing in
	"csharp/antlr.net-runtime.sln"solution
In-Reply-To: <dcb971710606120711p61d61546o88dbb59cf822a802@mail.gmail.com>
Message-ID: <052a01c693bd$801c7b10$c704a8c0@hercules>

> Hi Everyone,
> 
> I've got a problem.
> I want to generate c# source file.
> I open the "antlr-2.7.6/lib/csharp/antlr.net-runtime.sln" 
> solution file but some files are missing : -JavaLexer.cs 
> -JavaRecognizer.cs -JavaTokenTypes.cs -JavaTreeParser.cs 
> -JavaTreeParserTokenTypes.cs.
> 
> Have anyone got the same error ?

It's not an error. You have to generate those files from the supplied
grammar files using ANTLR. This applies to all samples. If you are just
interested in the runtime, build that project only and not the entire
solution.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From open.zone at virgin.net  Mon Jun 19 09:28:46 2006
From: open.zone at virgin.net (Micheal J)
Date: Mon Jun 19 09:11:24 2006
Subject: [antlr-interest] How to launch ASTFrame
In-Reply-To: <20060616201930.96531.qmail@web15704.mail.cnb.yahoo.com>
Message-ID: <052b01c693bd$84706be0$c704a8c0@hercules>

> I am using C#. To use ASTFrame, in void Main of class Main , 
> I added "using antlr.debug.misc;" . Then I tried to run 
> program, error occurs:-
> 
> The type 'System.Windows.Forms.Form' is defined in an 
> assembly that is not referenced. You must add a reference to 
> assembly 'System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
> PublicKeyToken=b77a5c561934e089'.	
> 
> I added reference: "using System.Windows.Forms;", new error reported:-
> 
> The type or namespace name 'Windows' does not exist in the 
> namespace 'System' (are you missing an assembly reference?)

Is this a .NET v1.1 vs .NET v2.0 issue?. Have you built all components using
the same runtime version?.

Incidentally, ASTFrame works fines. Perhaps you should try using the "-tree"
parameter on the KCSParse/charp_v1 or the java examples. They use ASTFrame.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From parrt at cs.usfca.edu  Mon Jun 19 10:11:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 10:25:36 2006
Subject: [antlr-interest] Re: ANTLR 3.0 beta timing
In-Reply-To: <000501c690c6$3a1be9b0$0305a8c0@willowbottom>
References: <000501c690c6$3a1be9b0$0305a8c0@willowbottom>
Message-ID: <56A9C1EF-DBDD-42A1-BA92-6C22479AC556@cs.usfca.edu>


On Jun 15, 2006, at 2:54 PM, Marq Kole wrote:

> Ter,
>
> For the ANTLR 3 Python target: at this moment I am not considering
> working on the ANTLR 3.0 port for Python as it is now -- I can only  
> find
> time and resources to perform a port once there is a stable version. I
> just will not be able to keep up with the frequent code changes I
> currently see passing by in the mailing list. If you intend to  
> declare a
> "feature-freeze" on the ANTLR 3.0 code during the beta period, I can
> make a start during that time; if not, I will only start once ANTLR  
> 3.0
> is released.

An excellent choice ;)  I am essentially done with the beta; just bug  
fixes and doc now until final.  I'd wait for beta.  I'm going to be  
too busy doing ST and other work to get any new features into 3.0 I'm  
afraid.  I would expect new features after 3.0 in fairly short order  
though.  E.g., incremental parsing and "parser expression grammar"- 
like parsing may appear in the Fall.  Oh, talking with Ari Steinberg  
as convinced me that a simple inheritance scheme is actually useful  
and appropriate.

I have to build the 2->3 converter in July also I realized this  
weekend hence that sucks up my new-feature time before 3.0 final.   
I'm committed to an August 1 release of 3.0!

In summary, wait until beta in a week or two.  I need to sync with  
Jean about AW and then we're ready to go.

Ter
From parrt at cs.usfca.edu  Mon Jun 19 10:47:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 10:46:42 2006
Subject: [antlr-interest] EarlyExitException??
In-Reply-To: <e39abda10606190411l33e4b94bkb4d332bf1c7279b8@mail.gmail.com>
References: <e39abda10606190411l33e4b94bkb4d332bf1c7279b8@mail.gmail.com>
Message-ID: <EE3F480E-536B-4227-A425-B4C4579054E3@cs.usfca.edu>


On Jun 19, 2006, at 4:11 AM, Jose Ventura wrote:

> Hi all,
>
> I'm trying to make my first antlr 3 grammar. I don't never seen  
> this exception and I haven't found information

It means that you said (...)+ but it did not match anything.  Perhaps  
you wanted (...)* ?

Ter
From parrt at cs.usfca.edu  Mon Jun 19 10:52:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 10:51:58 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <200606191613.12433.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<d092c2300606190603k877ba85pffe60a72a1263921@mail.gmail.com>
	<200606191532.27837.e.papegaaij@student.utwente.nl>
	<200606191613.12433.e.papegaaij@student.utwente.nl>
Message-ID: <44A1B22E-C8F6-4C5E-A0CC-8A667FE2B1F2@cs.usfca.edu>


On Jun 19, 2006, at 7:13 AM, Emond Papegaaij wrote:
> I've tried to replace
>   METHOD_SIG_ACTION: (~';')+ ;
> with
>   METHOD_SIG_ACTION: {sig}?=> (~';')+ ;
> and set 'sig' to 'true' when the token is valid. However the  
> predicate does
> not have the desired effect. In stead of disabling the token, it  
> disables all
> paths the token could match. This is what the resulting s0 DFA  
> state in the
> generated code looks like:

Hi Emond,

Sending feedback from the parser to the lexer is generally not a good  
idea.  In v3, for example, all tokens are consumed and built before  
the parser even starts...this is only the default of course.  Hence,  
your pred will not work.  Try having the lexer set "sig" when it sees  
a construct of interest.

> public DFA.State transition(IntStream input) throws  
> RecognitionException {
>   int LA3_0 = input.LA(1);
>   if ( LA3_0=='{' && (sig)) {return s1;}
>   if ( LA3_0=='}' && (sig)) {return s2;}
>   if ( LA3_0=='i' && (sig)) {return s3;}
>   if ( LA3_0==';' ) {return s4;}
>   if ( (..)||(..)||(..) && (sig)) {return s5;}
>   if ( (..)||(..)||LA3_0==' ' && (sig)) {return s6;}
>   if ( (..)||..||(..)||(..)||(..)||(..)||..||(..) && (sig)) {return  
> s7;}
>   NoViableAltException nvae =
>     new NoViableAltException("", 3, 0, input);
>   throw nvae;
> }
>
> It is clear that this disables all paths except "LA3_0==';'" when  
> 'sig' is
> false. As a result the lexer will only except ';' tokens as long as  
> 'sig' is
> false. Am I using the {..}?=> predicates incorrectly?

Well, not sure about your intention, but you have told antlr to only  
turn on that METHOD_SIG_ACTION rule when sig is true.  When input is  
';' that rule will not match no matter what, right?  It's ~';'.  That  
means another rule will match ';'.

Ter

From parrt at cs.usfca.edu  Mon Jun 19 11:00:22 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 10:59:58 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <200606191708.01553.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191532.27837.e.papegaaij@student.utwente.nl>
	<200606191613.12433.e.papegaaij@student.utwente.nl>
	<200606191708.01553.e.papegaaij@student.utwente.nl>
Message-ID: <BB10C741-DCD7-4696-811D-D35453A741C9@cs.usfca.edu>


On Jun 19, 2006, at 8:08 AM, Emond Papegaaij wrote:

> On Monday 19 June 2006 16:13, Emond Papegaaij wrote:
>> On Monday 19 June 2006 15:32, Emond Papegaaij wrote:
>> This is what the resulting s0 DFA state in the generated code  
>> looks like:
>>
>> public DFA.State transition(IntStream input) throws  
>> RecognitionException {
>>   int LA3_0 = input.LA(1);
>>   if ( LA3_0=='{' && (sig)) {return s1;}
>>   if ( LA3_0=='}' && (sig)) {return s2;}
>>   if ( LA3_0=='i' && (sig)) {return s3;}
>>   if ( LA3_0==';' ) {return s4;}
>>   if ( (..)||(..)||(..) && (sig)) {return s5;}
>>   if ( (..)||(..)||LA3_0==' ' && (sig)) {return s6;}
>>   if ( (..)||..||(..)||(..)||(..)||(..)||..||(..) && (sig))  
>> {return s7;}
>>   NoViableAltException nvae =
>>     new NoViableAltException("", 3, 0, input);
>>   throw nvae;
>> }
>>
>> It is clear that this disables all paths except "LA3_0==';'" when  
>> 'sig' is
>> false. As a result the lexer will only except ';' tokens as long  
>> as 'sig'
>> is false. Am I using the {..}?=> predicates incorrectly?
>
> Well, replying to myself again.
>
> I've managed to get my example to parse correctly, but I had to  
> perform some
> weird tricks. First I had to re-enable the DFA paths that would  
> accept input
> that could have been lexed as METHOD_SIG_ACTION. That meant I had to
> put '{!sig}?=>' predicates in all lexical rules.

That makes sense I think.  ANTLR can guess !sig but only if there is  
1 other unpredicated path.  You must tell antlr how to gate all  
ambiguous paths if you use a predicate.  Note that ~';' is pretty  
much anything and will therefore conflict with every other rule.

> However when generating the lexer, it still didn't work. Notice how  
> ANTLR puts
> the semantic predicates in the if statements:
>  if ( compareChar ('||' compareChar)* '&&' predicate)
> In Java '&&' takes precedence over '||'. This results in the  
> predicate only
> effecting the last character comparison. I believe this is a bug in  
> the
> generated code. Grouping all character comparisons together in the  
> generated
> code made my grammar work.

Doh!  Consider me a moron.  Sorry about that...adding to bug fix list  
(well, will take 3 seconds to fix).  Go into templates/Java/Java.stg  
and change

dfaEdge(labelExpr, targetState, predicates) ::= <<
if ( <labelExpr> <if(predicates)>&& (<predicates>)<endif>) {
     <targetState>
}
 >>

to have (...) around <labelExpr> and same for

cyclicDFAEdge(labelExpr, targetStateNumber, edgeNumber,  
predicates) ::= <<
if ( <labelExpr> <if(predicates)>&& (<predicates>)<endif>) {s =  
<targetStateNumber>;}<\n>
 >>

Sorry about that.

> To come back to the first problem. Is it really preferable to let  
> the gated
> semantic predicates disable all paths that /could/ lead to a certain
> alternative? To me it seems more logical to let the predicates  
> remove all
> paths that /will/ lead to a certain alternative. But I might be  
> missing
> something obvious.

The gated predicate gates all sequences associated with that token in/ 
out.  It dynamically alters the prediction DFA to not see certain  
paths.  This lets you turn off various tokens when a predicate is  
false.   By default all tokens are visible with a {true}=> gated  
predicate.

Ter

From craig at palantir.co.za  Mon Jun 19 13:13:22 2006
From: craig at palantir.co.za (Craig Main)
Date: Mon Jun 19 13:13:38 2006
Subject: [antlr-interest] msbuild task,
Message-ID: <20060619201335.9F8FBDCC85@www.antlr.org>

Hi,

 

I am in the process of building an ms-build target for antlr. Ideally I need
antr in a library for this.

I am using antlr 2.7.6 as version 3.0 doesn't have a .net runtime yet.

 

I have used a tool to translate all the antlr (2.7.6) source into msil byte
code and built a .net dll containing antlr. Works well actually!

I now need to figure out how to find out what files have been generated by
antlr during the processing of a grammar file. I would like to obtain these
in order that they be passed on to the compiler for compiling once they are
generated.

 

I suspect that I might accomplish this by adding the files opened by
Tool.openOutputFile to some kind of list, and making that accessible after
the generation is complete. I would make my own little static method that
calls doEverything, waits for the list to be populated by openOutputFile
calls and then returns the list of generated files.

 

Could someone confirm that this is a good way to accomplish the task?

 

I don't see any static entry points into antlr.Tool that may assist me in
the task, well besides the ones I mentioned. 

I would obviously prefer not to modify the source, even just a little bit.

 

Regards

Craig

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/7c76b8eb/attachment.html
From lachinois at hotmail.com  Mon Jun 19 13:32:36 2006
From: lachinois at hotmail.com (Daniel Shane)
Date: Mon Jun 19 13:32:38 2006
Subject: [antlr-interest] Lexer Rule Ordering,
	how to obtain a default token rule??
Message-ID: <BAY105-W7E3BAA74F6A755942D65ABB860@phx.gbl>

Hi!

I'm writing a lexer for a new Lucene query parser, and I thought of giving ANTLR a try with my project. However, I'm faced with a problem I cant seem to resolve...

To make the problem simple, imagine that you have 4 types of tokens :

  a) AND (matches the string "AND")
  b) PREFIXED_STRING (matches any string ending with *, i.e. google*)
  c) STRING (anything that is separated by WS and is not one of the above)

The priority is *, then AND then STRING, here are a few examples :

google* -> PREFIXED_STRING(google)
AND* -> PREFIXED_STRING(AND)
google AND gogle -> STRING("google") AND STRING("gogle")
alpha beta -> STRING("alpha") STRING("beta")

I'm having an easy time with a) and b) and I have a grammar for something like this at the end of my message.

You can see, the problem is that I simply want the rule c) to be the last string the lexer can try, because its the default case. 
Now ANTLR will always complain because my grammar is ambig., but I really dont care since I want the offending rule STRING_OR_PREFIXED_STRING to be matched LAST anyways, so I should be able to disregard the ambig. warning if it is the case.

Unfortunately, there is no way to predict how ANTLR will order the lexer rules, and in my real grammar, it happens that it inserts that offending rule (STRING_OR_PREFIXED_STRING) right in the middle of the AND, OR, NOT, etc... so my lexer works perfectly with all the keywords above it but all the other keywords under it get recognized as STRING. 

Is there any way I can make this grammar work? The only solution I could come up with is to have a huge predicate and have all my rules potected that way I'm sure of the ordering.... but I mean... its a lexer, there must be a way this work?  


-----------------------------

tokens {
   STRING;
   PREFIXED_STRING;
}

//Match the AND token, if there is something after AND, then return
//either STRING or PREFIXED_STRING since its not a real AND
AND	: 
	"AND" 
	(t:STRING_OR_PREFIXED_STRING { $setType(t.getType()); })?
	;

//Match a STRING or a PREFIXED_STRING
STRING_OR_PREFIXED_STRING:
	(~('*' | ' ' | '\t' | '\n' | '\r'))+
	(
  		t:POSSIBLE_PREFIXED_STRING { $setType(t.getType()); }
		|
		{ $setType(STRING); }
	)
	|
	t2:POSSIBLE_PREFIXED_STRING { $setType(t2.getType()); }
	;

protected 
POSSIBLE_PREFIXED_STRING:
	STAR
	( 
	        (
	  	    WS
	  	  | { LA(1) == EOF_CHAR }?
		)=> { $setType(PREFIXED_STRING); text.setLength(text.length() - 1); }
		|
		t:STRING_OR_PREFIXED_STRING { $setType(t.getType()); }
	)
	;

WS	:	(' ' | '\t' | '\n' | '\r')+ { $setType(Token.SKIP); }
	;








_________________________________________________________________
Soyez parmi les premiers ? essayer la future messagerie : Windows Live Messenger Beta
 http://ideas.live.com/programpage.aspx?versionId=0eccd94b-eb48-497c-8e60-c6313f7ebb73
From e.papegaaij at student.utwente.nl  Mon Jun 19 13:53:26 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 13:53:30 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <BB10C741-DCD7-4696-811D-D35453A741C9@cs.usfca.edu>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191708.01553.e.papegaaij@student.utwente.nl>
	<BB10C741-DCD7-4696-811D-D35453A741C9@cs.usfca.edu>
Message-ID: <200606192253.26472.e.papegaaij@student.utwente.nl>

On Monday 19 June 2006 20:00, Terence Parr wrote:
> On Jun 19, 2006, at 8:08 AM, Emond Papegaaij wrote:
> > On Monday 19 June 2006 16:13, Emond Papegaaij wrote:
> >> On Monday 19 June 2006 15:32, Emond Papegaaij wrote:
> >> This is what the resulting s0 DFA state in the generated code
> >> looks like:
> >>
> >> public DFA.State transition(IntStream input) throws
> >> RecognitionException {
> >>   int LA3_0 = input.LA(1);
> >>   if ( LA3_0=='{' && (sig)) {return s1;}
> >>   if ( LA3_0=='}' && (sig)) {return s2;}
> >>   if ( LA3_0=='i' && (sig)) {return s3;}
> >>   if ( LA3_0==';' ) {return s4;}
> >>   if ( (..)||(..)||(..) && (sig)) {return s5;}
> >>   if ( (..)||(..)||LA3_0==' ' && (sig)) {return s6;}
> >>   if ( (..)||..||(..)||(..)||(..)||(..)||..||(..) && (sig))
> >> {return s7;}
> >>   NoViableAltException nvae =
> >>     new NoViableAltException("", 3, 0, input);
> >>   throw nvae;
> >> }
> >>
> >> It is clear that this disables all paths except "LA3_0==';'" when
> >> 'sig' is false. As a result the lexer will only except ';' tokens
> >> as long as 'sig' is false. Am I using the {..}?=> predicates
> >> incorrectly? 

<cut bug in character comparison>
> Doh!  Consider me a moron.  Sorry about that...adding to bug fix list
> (well, will take 3 seconds to fix).
<cut solution>
> Sorry about that.

No problem, we are all humans right? :) Thanks for the quick-fix.

>
> > To come back to the first problem. Is it really preferable to let
> > the gated
> > semantic predicates disable all paths that /could/ lead to a certain
> > alternative? To me it seems more logical to let the predicates
> > remove all
> > paths that /will/ lead to a certain alternative. But I might be
> > missing
> > something obvious.
>
> The gated predicate gates all sequences associated with that token in/
> out.  It dynamically alters the prediction DFA to not see certain
> paths.  This lets you turn off various tokens when a predicate is
> false.   By default all tokens are visible with a {true}=> gated
> predicate.

In my case, I only have a single rule (well in my real parser I've got 3) that 
conflicts with other rules. I was hoping I could gate that single rule, to 
force the lexer to use the others. With the current behaviour, a single rule 
like this
  ALL_NONE: {false}?=> (.)*
will effectively disable all rules in your entire lexer. The syntax would 
suggest only that rule is disabled. In the resulting DFA all edges are 
removed, because all edges can possibly lead to the disabled token. Isn't is 
possible to only remove those edges that lead to ALL_NONE? That would disable 
ALL_NONE, but leave all other tokens intact. Of course when ALL_NONE is 
re-enabled, you would have ambiguity, but that would be solved the normal 
way, as if no predicates existed. Having to put predicates in all lexer 
rules, just to be able to gate a single rule doesn't seem like an easy 
solution.


Best regards,
Emond Papegaaij
From parrt at cs.usfca.edu  Mon Jun 19 15:11:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 15:16:08 2006
Subject: [antlr-interest] Matching tokens only at certain places
In-Reply-To: <200606192253.26472.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191708.01553.e.papegaaij@student.utwente.nl>
	<BB10C741-DCD7-4696-811D-D35453A741C9@cs.usfca.edu>
	<200606192253.26472.e.papegaaij@student.utwente.nl>
Message-ID: <A7799E87-0853-4E5E-8AEC-7BA5DF3A2457@cs.usfca.edu>


On Jun 19, 2006, at 1:53 PM, Emond Papegaaij wrote:
>> The gated predicate gates all sequences associated with that token  
>> in/
>> out.  It dynamically alters the prediction DFA to not see certain
>> paths.  This lets you turn off various tokens when a predicate is
>> false.   By default all tokens are visible with a {true}=> gated
>> predicate.
>
> In my case, I only have a single rule (well in my real parser I've  
> got 3) that
> conflicts with other rules. I was hoping I could gate that single  
> rule, to
> force the lexer to use the others. With the current behaviour, a  
> single rule
> like this
>   ALL_NONE: {false}?=> (.)*
> will effectively disable all rules in your entire lexer.
> In the resulting DFA all edges are
> removed, because all edges can possibly lead to the disabled token.

Not if you have another rule like

FOO : 'foo' ;

above it.  Or at least that is my intention ;)

> Isn't is
> possible to only remove those edges that lead to ALL_NONE? That  
> would disable
> ALL_NONE, but leave all other tokens intact. Of course when  
> ALL_NONE is
> re-enabled, you would have ambiguity, but that would be solved the  
> normal
> way, as if no predicates existed. Having to put predicates in all  
> lexer
> rules, just to be able to gate a single rule doesn't seem like an easy
> solution.

Hmm....well, let's look at a simple example:

lexer grammar t;

A : 'a' ;

B : 'b' ;

C : {sig}?=> ('a'|'b') ;  // match stuff here if sig

It generates the (somewhat weird) DFA for differentiating tokens:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: t_dec-1.png
Type: image/png
Size: 38183 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060619/eb89bcc1/t_dec-1-0001.png
-------------- next part --------------

That actually doesn't look right!  When sig is false, everything is  
turned off!  ack.  Ok, looks like another bug.  Wow!  Two  
bugs...you're the winner of the season! ;)

Let me dig into this...have you tried w/o the gate by the way?  just  
{sig}? might work.

Ter
From jbb at acm.org  Mon Jun 19 15:28:13 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon Jun 19 15:28:17 2006
Subject: [antlr-interest] Lexer Rule Ordering,
	how to obtain a default token rule??
In-Reply-To: <BAY105-W7E3BAA74F6A755942D65ABB860@phx.gbl> (message from Daniel
	Shane on Mon, 19 Jun 2006 16:32:36 -0400)
References: <BAY105-W7E3BAA74F6A755942D65ABB860@phx.gbl>
Message-ID: <E1FsSE9-0003uy-00@gecko>

on Mon, 19 Jun 2006 16:32:36, Daniel Shane asked:
>Hi!

Greetings!

>I'm writing a lexer for a new Lucene query parser, and I thought of giving
>ANTLR a try with my project. However, I'm faced with a problem I cant seem to
>resolve...
>
>To make the problem simple, imagine that you have 4 types of tokens :
>
>  a) AND (matches the string "AND")
>  b) PREFIXED_STRING (matches any string ending with *, i.e. google*)
>  c) STRING (anything that is separated by WS and is not one of the above)
>
>...other info, including a complex trial lexer, snipped...

(the 4 tokens are AND, STRING, PREFIXED_STRING, and WS; where WS is to be
ignored, right?)

I do not think that Antlr has the concept of a default token.

However, in this case, your reserved word - "AND" - is matched by your general
pattern for STRING; so you are good to go for the use of the testLiterals
option. 

Well maybe testLiterals can be thought of as a default token rule but with a
twist; e.g. first match the general string (or identifier) pattern and then
see if that result should be specialized into one of the reserved words.
rather than trying all the special case reserved words first and then
supplying a default as the result when they all fail.

Anyway, does this Lexer do what you need?

-------------------------
class LuceneLexer extends Lexer;

tokens {
    AND = "AND";
    STRING;
    PREFIXED_STRING;
}

STRING options{ testLiterals=true; } :
    ( ~( '*' | ' ' | '\t' | '\n' | '\r' ) )+
    ( '*' { $setType(PREFIXED_STRING); text.setLength(text.length() - 1); } )?
    ;

WS  : ( ' ' | ('\t' { tab(); }) ) { $setType(Token.SKIP); } ;
EOL : ( '\r' ( '\n' )? | '\n' ) { newline(); $setType(Token.SKIP); } ;

-------------------------

Note: you did not say how the input strings "a * b" or "c*d" should be
handled, so the above Lexer probably does not do the Right Thing on those
inputs.

Hope this helps...
   -jbb
From parrt at cs.usfca.edu  Mon Jun 19 16:47:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 19 16:46:53 2006
Subject: [antlr-interest] fixed bug in predicate collecting
In-Reply-To: <200606192253.26472.e.papegaaij@student.utwente.nl>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606191708.01553.e.papegaaij@student.utwente.nl>
	<BB10C741-DCD7-4696-811D-D35453A741C9@cs.usfca.edu>
	<200606192253.26472.e.papegaaij@student.utwente.nl>
Message-ID: <F7EF2FFD-23FE-4414-A81E-F5AB6A56E5E9@cs.usfca.edu>

Emond,

Thanks for finding that bug.  It was not only a bug in the gated  
predicates, but a bug also in general predicate collecting.  I can  
send you a tarball to try out your problem.  This unit test works:

	public void testGatedPred2() throws Exception {
		String grammar =
			"grammar foo;\n" +
			"@lexer::members {boolean sig=false;}\n"+
			"a : (A|B)+ ;\n" +
			"A : 'a' {System.out.print(\"A\"); sig=true;} ;\n" +
			"B : 'b' ;\n" +
			"C : {sig}?=> ('a'|'b') {System.out.print(\"C\");} ;\n";
		String found =
			TestCompileAndExecSupport.execParser("foo.g", grammar, "foo",  
"fooLexer",
												 "a", "aa", false);
		String expecting = "AC\n";
		assertEqual(found, expecting);
	}

works now.  Unit test added.

Thanks,
Terence
From bernied at gmail.com  Mon Jun 19 22:31:48 2006
From: bernied at gmail.com (Bernhard Damberger)
Date: Mon Jun 19 22:31:50 2006
Subject: [antlr-interest] tree --> tree transformation
Message-ID: <aff5e35a0606192231u76541b78v860b732082d4d5b7@mail.gmail.com>

I was trying to make a tree grammar with Antlr 3.0 that spits out
another modified tree.

options {
      tokenVocab = MyVocab;
      output=AST;
      ASTLabelType=CommonTree;
}

I tried it with and with out the ASTLabelType. In both cases the
compiler complains about Object attempting to being passed as Tokens
to the TreeAdaptor.

Is there something I am missing?

I just want to transform a tree from one form to another.

Two kinds of lines of code are causing problems:
              adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);

In this case retval.start and retval.stop are Objects, not Tokens.

And

                  string_literal4=(Object)input.LT(1);
                  match(input,118,FOLLOW_118_in_statement63);
                  string_literal4_tree =(Object)adaptor.create(string_literal4);

on the third line because string_literal4 is expected to be a token,
but its a Object.

Any thoughts?

_bernhard
From e.papegaaij at student.utwente.nl  Mon Jun 19 23:05:55 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon Jun 19 23:06:00 2006
Subject: [antlr-interest] fixed bug in predicate collecting
In-Reply-To: <F7EF2FFD-23FE-4414-A81E-F5AB6A56E5E9@cs.usfca.edu>
References: <200606191223.47374.e.papegaaij@student.utwente.nl>
	<200606192253.26472.e.papegaaij@student.utwente.nl>
	<F7EF2FFD-23FE-4414-A81E-F5AB6A56E5E9@cs.usfca.edu>
Message-ID: <200606200805.55172.e.papegaaij@student.utwente.nl>

On Tuesday 20 June 2006 01:47, Terence Parr wrote:
> Thanks for finding that bug.  It was not only a bug in the gated
> predicates, but a bug also in general predicate collecting.  I can
> send you a tarball to try out your problem. 

A tarball would be great. Thanks for addressing the problem so quickly!

Best regards,
Emond Papegaaij
From doublemalam at yahoo.co.uk  Mon Jun 19 23:23:21 2006
From: doublemalam at yahoo.co.uk (Muhammad Masoom Alam)
Date: Mon Jun 19 23:23:23 2006
Subject: [antlr-interest] Binary Expression Problem!
In-Reply-To: <41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>
Message-ID: <20060620062321.50016.qmail@web86904.mail.ukl.yahoo.com>

Hi All,

The Grammar below is structured in a way that it
should observes the perority of relational operators.
But in this Grammar one problem persists i.e. a Binary
Expression should be comprised of two operands where
as from the Grammar it is obvivous that it may come up
with a single operand too. Could any body help me in
this regard to overcome the single operand issue
without loosing the operator's perority.
e.g. the Grammar permits: "Hello" where as the
required expression is "Hello" = "Hello" without
loosing the operator's perority.

BinaryExp: EqualityExp;

EqualityExp: RelationalExp ((Not_Equal|Equal)
RelationalExp)*;

RelationalExp: additiveExp ((GT|GTE|LT|LTE)
additiveExp)*;

additiveExp: MultipicativeExp
((PLUS|MINUS)MultipicativeExp)*;

MultipicativeExp: SimpleExp ((MUL|DIV|MOD)
SimpleExp)*;

SimpleExp: STRING|CONSTANTVALUE;

Thanks
MA




	
	
		
___________________________________________________________ 
All new Yahoo! Mail "The new Interface is stunning in its simplicity and ease of use." - PC Magazine 
http://uk.docs.yahoo.com/nowyoucan.html
From sohail at taggedtype.net  Tue Jun 20 00:39:51 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Tue Jun 20 00:40:07 2006
Subject: [antlr-interest] Binary Expression Problem!
In-Reply-To: <20060620062321.50016.qmail@web86904.mail.ukl.yahoo.com>
References: <20060620062321.50016.qmail@web86904.mail.ukl.yahoo.com>
Message-ID: <1150789191.14891.0.camel@localhost.localdomain>

Try:

EqualityExp: RelationalExp ((Not_Equal|Equal) RelationalExp)+

I forget if antlr supports + though, i usually only use ? * :)

On Tue, 2006-06-20 at 07:23 +0100, Muhammad Masoom Alam wrote:
> Hi All,
> 
> The Grammar below is structured in a way that it
> should observes the perority of relational operators.
> But in this Grammar one problem persists i.e. a Binary
> Expression should be comprised of two operands where
> as from the Grammar it is obvivous that it may come up
> with a single operand too. Could any body help me in
> this regard to overcome the single operand issue
> without loosing the operator's perority.
> e.g. the Grammar permits: "Hello" where as the
> required expression is "Hello" = "Hello" without
> loosing the operator's perority.
> 
> BinaryExp: EqualityExp;
> 
> EqualityExp: RelationalExp ((Not_Equal|Equal)
> RelationalExp)*;
> 
> RelationalExp: additiveExp ((GT|GTE|LT|LTE)
> additiveExp)*;
> 
> additiveExp: MultipicativeExp
> ((PLUS|MINUS)MultipicativeExp)*;
> 
> MultipicativeExp: SimpleExp ((MUL|DIV|MOD)
> SimpleExp)*;
> 
> SimpleExp: STRING|CONSTANTVALUE;
> 
> Thanks
> MA
> 
> 
> 
> 
> 	
> 	
> 		
> ___________________________________________________________ 
> All new Yahoo! Mail "The new Interface is stunning in its simplicity and ease of use." - PC Magazine 
> http://uk.docs.yahoo.com/nowyoucan.html

From milan at milica.com.au  Tue Jun 20 01:43:59 2006
From: milan at milica.com.au (Milan Durovic)
Date: Tue Jun 20 01:44:00 2006
Subject: [antlr-interest] parsing a mix of structured and free-form text
Message-ID: <4497B54F.6020902@milica.com.au>

Hi,

I am trying to use ANTLR to parse files that are mostly structured 
(being generated by another program), but here and there have some text 
that's nearly free form, as it is basically user-input. The place where 
this unstructured text appears within the structured varies, but is 
defined by the grammar.

Ideally, what I would like to do, at the point in parsing when I know 
that unstructured text follows, is to simply read enough characters 
(these are fix-width fields, so I know how many I need to read), so that 
parsing of the structured text can continue.

The problem here are look-ahead tokens, where Lexer goes a bit ahead of 
the parser and chews up input characters in advance.

The places where this unstructured text appears are such that there's no 
need to use look-ahead tokens to decide which grammar rule to apply.

I used ANTLR for some simpler things. I also used Bison and Flex before 
and used Flex states to control grabbing characters when places with 
unstructured text are approached. But I'm not that familiar with ANTLR 
to know how to do it, or whether it's possible at all.

I don't know if it would be possible to get the text of look-ahead 
tokens, discard them, and force lexer to continue from a different 
position in the input stream.

Any help/hints/ideas are very much welcome.

Milan
From Sebastian.Kaliszewski at softax.com.pl  Tue Jun 20 02:33:49 2006
From: Sebastian.Kaliszewski at softax.com.pl (Sebastian Kaliszewski)
Date: Tue Jun 20 02:13:45 2006
Subject: [antlr-interest] Binary Expression Problem!
In-Reply-To: <1150789191.14891.0.camel@localhost.localdomain>
References: <20060620062321.50016.qmail@web86904.mail.ukl.yahoo.com>
	<1150789191.14891.0.camel@localhost.localdomain>
Message-ID: <4497C0FD.7040407@softax.com.pl>

>>The Grammar below is structured in a way that it
>>should observes the perority of relational operators.
>>But in this Grammar one problem persists i.e. a Binary
>>Expression should be comprised of two operands where
>>as from the Grammar it is obvivous that it may come up
>>with a single operand too. Could any body help me in
>>this regard to overcome the single operand issue
>>without loosing the operator's perority.
>>e.g. the Grammar permits: "Hello" where as the
>>required expression is "Hello" = "Hello" without
>>loosing the operator's perority.
>>
>>BinaryExp: EqualityExp;
>>
>>EqualityExp: RelationalExp ((Not_Equal|Equal)
>>RelationalExp)*;
>>
>>RelationalExp: additiveExp ((GT|GTE|LT|LTE)
>>additiveExp)*;
>>
>>additiveExp: MultipicativeExp
>>((PLUS|MINUS)MultipicativeExp)*;
>>
>>MultipicativeExp: SimpleExp ((MUL|DIV|MOD)
>>SimpleExp)*;
>>
>>SimpleExp: STRING|CONSTANTVALUE;
>>
 >
> Try:
> 
> EqualityExp: RelationalExp ((Not_Equal|Equal) RelationalExp)+
> 
> I forget if antlr supports + though, i usually only use ? * :)

I'm affraid it's not what Muhammad wanted. I.e. this will only accept 
"hello" = "hello" but will not accept things like 10+40.

Something like this might be the sollution (although I find that restriction 
somewhat strange)

Binary: Relational ((EQ|NEQ) Relational)+ | BiRelational;

BiRelational: Additive ((GT|GTE|LT|LTE) Additive)+ | BiAdditive;

Relational: Additive ((GT|GTE|LT|LTE) Additive)*;

BiAdditive: Multiplicative ((PLUS|MINUS) Multiplicative)+|BiMultiplicative;

Additive: Multiplicative ((PLUS|MINUS) Multiplicative)*;

BiMultiplicative: Simple ((MUL|DIV|MOD) Simple)+;

Multiplicative: Simple ((MUL|DIV|MOD) Simple)*;

Simple: STRING|CONSTANTVALUE;


rgds
-- 
Sebastian Kaliszewski
From Sebastian.Kaliszewski at softax.com.pl  Tue Jun 20 03:09:03 2006
From: Sebastian.Kaliszewski at softax.com.pl (Sebastian Kaliszewski)
Date: Tue Jun 20 02:49:02 2006
Subject: [antlr-interest] Binary Expression Problem!
In-Reply-To: <4497C0FD.7040407@softax.com.pl>
References: <20060620062321.50016.qmail@web86904.mail.ukl.yahoo.com>	<1150789191.14891.0.camel@localhost.localdomain>
	<4497C0FD.7040407@softax.com.pl>
Message-ID: <4497C93F.6010504@softax.com.pl>

Sebastian Kaliszewski wrote:
>>> The Grammar below is structured in a way that it
>>> should observes the perority of relational operators.
>>> But in this Grammar one problem persists i.e. a Binary
>>> Expression should be comprised of two operands where
>>> as from the Grammar it is obvivous that it may come up
>>> with a single operand too. Could any body help me in
>>> this regard to overcome the single operand issue
>>> without loosing the operator's perority.
>>> e.g. the Grammar permits: "Hello" where as the
>>> required expression is "Hello" = "Hello" without
>>> loosing the operator's perority.
>>>
>>> BinaryExp: EqualityExp;
>>>
>>> EqualityExp: RelationalExp ((Not_Equal|Equal)
>>> RelationalExp)*;
>>>
>>> RelationalExp: additiveExp ((GT|GTE|LT|LTE)
>>> additiveExp)*;
>>>
>>> additiveExp: MultipicativeExp
>>> ((PLUS|MINUS)MultipicativeExp)*;
>>>
>>> MultipicativeExp: SimpleExp ((MUL|DIV|MOD)
>>> SimpleExp)*;
>>>
>>> SimpleExp: STRING|CONSTANTVALUE;
>>>
>  >
> 
>> Try:
>>
>> EqualityExp: RelationalExp ((Not_Equal|Equal) RelationalExp)+
>>
>> I forget if antlr supports + though, i usually only use ? * :)
> 
> 
> I'm affraid it's not what Muhammad wanted. I.e. this will only accept 
> "hello" = "hello" but will not accept things like 10+40.
> 
> Something like this might be the sollution (although I find that 
> restriction somewhat strange)
> 
> Binary: Relational ((EQ|NEQ) Relational)+ | BiRelational;
> 
> BiRelational: Additive ((GT|GTE|LT|LTE) Additive)+ | BiAdditive;
> 
> Relational: Additive ((GT|GTE|LT|LTE) Additive)*;
> 
> BiAdditive: Multiplicative ((PLUS|MINUS) Multiplicative)+|BiMultiplicative;
> 
> Additive: Multiplicative ((PLUS|MINUS) Multiplicative)*;
> 
> BiMultiplicative: Simple ((MUL|DIV|MOD) Simple)+;
> 
> Multiplicative: Simple ((MUL|DIV|MOD) Simple)*;
> 
> Simple: STRING|CONSTANTVALUE;

Replying to myself

One probbaly needs to set predicates, like:

BiRelational: (Additive (GT|GTE|LT|LTE))=> Additive ((GT|GTE|LT|LTE) 
Additive)+ | BiAdditive;

To resolve ambiguities. But that's probably the way it could be acheivied.

rgds
-- 
Sebastian Kaliszewski
From lachinois at hotmail.com  Tue Jun 20 06:34:59 2006
From: lachinois at hotmail.com (Daniel Shane)
Date: Tue Jun 20 06:35:01 2006
Subject: [antlr-interest] Lexer Rule Ordering,	how to obtain a
	default token rule??
Message-ID: <BAY105-W5D9055E4068939CD67F1CBB870@phx.gbl>

Hi John and thanks for the input.

Yes indeed you are correct, 4 tokens including WS. I was not very clear but you figurered it out. I was not aware of that specific ANTLR option testLiterals, indeed it does the job very well for the tokens like "AND", "NOT", "OR" and others, and is much less complicated than my original lexer. 

However, I have another token, called lexical proximity that is represented by the following :

N_PROXIMITY : "/"! INT 
{... rule to match the rest in case its a string i.e.;

protected
DIGIT	: '0'..'9';

protected
INT     : ( options { greedy=true; } : DIGIT)+;

The priority is *, then N_PROXIMITY, then STRING. 

So here are some examples :

/12 -> N_PROXIMITY(12)
/12* -> PREFIXED_STRING("/12")
/12*google -> STRING("/12*google")
A * A -> STRING("A") STRING("*") STRING ("A")   // implicit ignored WS here

I will get again a clash with STRING and N_PROXIMITY, but if I can simpy say to ANTLR : hey put this rule at the end since STRING is the lowest priority, then it would be fine.

 ----------------------------------------
> To: lachinois@hotmail.com
> CC: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Lexer Rule Ordering,	how to obtain a default token rule??
> From: jbb@acm.org
> Date: Mon, 19 Jun 2006 18:28:13 -0400
> 
> on Mon, 19 Jun 2006 16:32:36, Daniel Shane asked:
> >Hi!
> 
> Greetings!
> 
> >I'm writing a lexer for a new Lucene query parser, and I thought of giving
> >ANTLR a try with my project. However, I'm faced with a problem I cant seem to
> >resolve...
> >
> >To make the problem simple, imagine that you have 4 types of tokens :
> >
> >  a) AND (matches the string "AND")
> >  b) PREFIXED_STRING (matches any string ending with *, i.e. google*)
> >  c) STRING (anything that is separated by WS and is not one of the above)
> >
> >...other info, including a complex trial lexer, snipped...
> 
> (the 4 tokens are AND, STRING, PREFIXED_STRING, and WS; where WS is to be
> ignored, right?)
> 
> I do not think that Antlr has the concept of a default token.
> 
> However, in this case, your reserved word - "AND" - is matched by your general
> pattern for STRING; so you are good to go for the use of the testLiterals
> option. 
> 
> Well maybe testLiterals can be thought of as a default token rule but with a
> twist; e.g. first match the general string (or identifier) pattern and then
> see if that result should be specialized into one of the reserved words.
> rather than trying all the special case reserved words first and then
> supplying a default as the result when they all fail.
> 
> Anyway, does this Lexer do what you need?
> 
> -------------------------
> class LuceneLexer extends Lexer;
> 
> tokens {
>     AND = "AND";
>     STRING;
>     PREFIXED_STRING;
> }
> 
> STRING options{ testLiterals=true; } :
>     ( ~( '*' | ' ' | '\t' | '\n' | '\r' ) )+
>     ( '*' { $setType(PREFIXED_STRING); text.setLength(text.length() - 1); } )?
>     ;
> 
> WS  : ( ' ' | ('\t' { tab(); }) ) { $setType(Token.SKIP); } ;
> EOL : ( '\r' ( '\n' )? | '\n' ) { newline(); $setType(Token.SKIP); } ;
> 
> -------------------------
> 
> Note: you did not say how the input strings "a * b" or "c*d" should be
> handled, so the above Lexer probably does not do the Right Thing on those
> inputs.
> 
> Hope this helps...
>    -jbb

_________________________________________________________________
Soyez le premier de votre quartier ? d?couvrir le futur Hotmail : essayez Windows Live Mail Beta
http://ideas.live.com/programpage.aspx?versionId=5d21c51a-b161-4314-9b0e-4911fb2b2e6d
From lachinois at hotmail.com  Tue Jun 20 06:44:31 2006
From: lachinois at hotmail.com (Daniel Shane)
Date: Tue Jun 20 06:44:32 2006
Subject: [antlr-interest] Lexer Rule Ordering,	how to obtain a
	default token rule??
Message-ID: <BAY105-W16412E93B505CF98B8133BB870@phx.gbl>

Ahhh... let me know if I'm wrong but is the only solution to use testLiterals on all fixed string literals and for the few cases where the keyword is not fixed (like N_PROXIMITY) in that case I use either a predicate like :

STRING : 
     (N_PROXIMITY) => ... setType(N_PROXIMITY) ...
   | ( ~( '*' | ' ' | '\t' | '\n' | '\r' ) )+ ... previous STRING definition...

and protect N_PROXIMITY

I dont see anything better, I think this is the best solution. Without the testLiterals, it would be pretty ugly with all the rules embedded in STRING.

Daniel

----------------------------------------
> From: lachinois@hotmail.com
> To: jbb@acm.org
> Subject: RE: Re: [antlr-interest] Lexer Rule Ordering,	how to obtain a	default token rule??
> Date: Tue, 20 Jun 2006 09:34:59 -0400
> CC: antlr-interest@antlr.org
> 
> Hi John and thanks for the input.
> 
> Yes indeed you are correct, 4 tokens including WS. I was not very clear but you figurered it out. I was not aware of that specific ANTLR option testLiterals, indeed it does the job very well for the tokens like "AND", "NOT", "OR" and others, and is much less complicated than my original lexer. 
> 
> However, I have another token, called lexical proximity that is represented by the following :
> 
> N_PROXIMITY : "/"! INT 
> {... rule to match the rest in case its a string i.e.;
> 
> protected
> DIGIT	: '0'..'9';
> 
> protected
> INT     : ( options { greedy=true; } : DIGIT)+;
> 
> The priority is *, then N_PROXIMITY, then STRING. 
> 
> So here are some examples :
> 
> /12 -> N_PROXIMITY(12)
> /12* -> PREFIXED_STRING("/12")
> /12*google -> STRING("/12*google")
> A * A -> STRING("A") STRING("*") STRING ("A")   // implicit ignored WS here
> 
> I will get again a clash with STRING and N_PROXIMITY, but if I can simpy say to ANTLR : hey put this rule at the end since STRING is the lowest priority, then it would be fine.
> 
>  ----------------------------------------
> > To: lachinois@hotmail.com
> > CC: antlr-interest@antlr.org
> > Subject: Re: [antlr-interest] Lexer Rule Ordering,	how to obtain a default token rule??
> > From: jbb@acm.org
> > Date: Mon, 19 Jun 2006 18:28:13 -0400
> > 
> > on Mon, 19 Jun 2006 16:32:36, Daniel Shane asked:
> > >Hi!
> > 
> > Greetings!
> > 
> > >I'm writing a lexer for a new Lucene query parser, and I thought of giving
> > >ANTLR a try with my project. However, I'm faced with a problem I cant seem to
> > >resolve...
> > >
> > >To make the problem simple, imagine that you have 4 types of tokens :
> > >
> > >  a) AND (matches the string "AND")
> > >  b) PREFIXED_STRING (matches any string ending with *, i.e. google*)
> > >  c) STRING (anything that is separated by WS and is not one of the above)
> > >
> > >...other info, including a complex trial lexer, snipped...
> > 
> > (the 4 tokens are AND, STRING, PREFIXED_STRING, and WS; where WS is to be
> > ignored, right?)
> > 
> > I do not think that Antlr has the concept of a default token.
> > 
> > However, in this case, your reserved word - "AND" - is matched by your general
> > pattern for STRING; so you are good to go for the use of the testLiterals
> > option. 
> > 
> > Well maybe testLiterals can be thought of as a default token rule but with a
> > twist; e.g. first match the general string (or identifier) pattern and then
> > see if that result should be specialized into one of the reserved words.
> > rather than trying all the special case reserved words first and then
> > supplying a default as the result when they all fail.
> > 
> > Anyway, does this Lexer do what you need?
> > 
> > -------------------------
> > class LuceneLexer extends Lexer;
> > 
> > tokens {
> >     AND = "AND";
> >     STRING;
> >     PREFIXED_STRING;
> > }
> > 
> > STRING options{ testLiterals=true; } :
> >     ( ~( '*' | ' ' | '\t' | '\n' | '\r' ) )+
> >     ( '*' { $setType(PREFIXED_STRING); text.setLength(text.length() - 1); } )?
> >     ;
> > 
> > WS  : ( ' ' | ('\t' { tab(); }) ) { $setType(Token.SKIP); } ;
> > EOL : ( '\r' ( '\n' )? | '\n' ) { newline(); $setType(Token.SKIP); } ;
> > 
> > -------------------------
> > 
> > Note: you did not say how the input strings "a * b" or "c*d" should be
> > handled, so the above Lexer probably does not do the Right Thing on those
> > inputs.
> > 
> > Hope this helps...
> >    -jbb
> 
> _________________________________________________________________
> Soyez le premier de votre quartier ? d?couvrir le futur Hotmail : essayez Windows Live Mail Beta
> http://ideas.live.com/programpage.aspx?versionId=5d21c51a-b161-4314-9b0e-4911fb2b2e6d

_________________________________________________________________
Soyez parmi les premiers ? essayer la future messagerie : Windows Live Messenger Beta
 http://ideas.live.com/programpage.aspx?versionId=0eccd94b-eb48-497c-8e60-c6313f7ebb73
From johnicholas.hines at gmail.com  Tue Jun 20 06:57:21 2006
From: johnicholas.hines at gmail.com (Johnicholas Hines)
Date: Tue Jun 20 06:57:24 2006
Subject: [antlr-interest] building ASTs in actions?
Message-ID: <d092c2300606200657v64861405gc81d8f2d381b766f@mail.gmail.com>

Hi.

I'm working on a grammar that has a range operator.
That is, "RANGE(1, 10)" should expand to "1, 2, 3, 4, 5, 6, 7, 8, 9, 10".

How would you recommend doing that?
At the moment I have this:

if ( first < second && second <= third ) {
int step = second-first;
                antlr::RefAST temp = #([COMMA, "COMMA"], a, b);
                for( int i= second+step; i<third; i+=step ) {
                    istringstream is;
                    is << i;
                    temp = #([COMMA, "COMMA"], temp, [INTEGER, is.str
().c_str()]);
                }
                #expr = #([COMMA, "COMMA", temp, c);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060620/da822d7f/attachment.html
From johnicholas.hines at gmail.com  Tue Jun 20 07:42:51 2006
From: johnicholas.hines at gmail.com (Johnicholas Hines)
Date: Tue Jun 20 07:42:54 2006
Subject: [antlr-interest] am I doing something wrong?
Message-ID: <d092c2300606200742q4180f89i6e1c2b8ebeb0a2ae@mail.gmail.com>

I'm trying to create a AST node with text from a variable, like this:
#expr = #([THING, "THING"], x, [INTEGER, os.str().c_str()]);

I get this:
mygrammar.g:66:76: Syntax error in action: mygrammar.g:66:76: unexpected
char: '.'

Is there a proper, idiomatic way to do this?

Johnicholas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060620/25aabe01/attachment.html
From lexington.luthor at gmail.com  Mon Jun 19 07:56:40 2006
From: lexington.luthor at gmail.com (Lexington Luthor)
Date: Tue Jun 20 09:05:16 2006
Subject: [antlr-interest] Re: Is ANTLR Studio website working for you?
In-Reply-To: <41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>
References: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>	<9da4f4520606182225v7c5832c0rd2e9a50ceef9428f@mail.gmail.com>
	<41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>
Message-ID: <e76dvf$bfk$1@sea.gmane.org>

Prashant Deva wrote:
> Yes, i guess that must be it.
> Although I cant seem to help it. I need to run both iis and tomcat on 
> the same machine :(
> 

Can you not have IIS proxy the Tomcat traffic? I know IIS 6 can do that, 
I am not sure about earlier versions.

Failing that, you can certainly run one of them on port 80 and the other 
on port 443 (https) so that firewalls do not interfere and ISP caches do 
not break your pages.

Regards,
LL

From jbb at acm.org  Tue Jun 20 09:19:05 2006
From: jbb at acm.org (John B. Brodie)
Date: Tue Jun 20 09:19:12 2006
Subject: [antlr-interest] Lexer Rule Ordering,
	how to obtain a	default token rule??
In-Reply-To: <BAY105-W16412E93B505CF98B8133BB870@phx.gbl> (message from Daniel
	Shane on Tue, 20 Jun 2006 09:44:31 -0400)
References: <BAY105-W16412E93B505CF98B8133BB870@phx.gbl>
Message-ID: <E1FsiwT-00018D-00@gecko>

I *REALLY* dislike predicates - altho they are essential in some situations.

I think even with a predicate you would still need to inspect the lookahead
character to see if it was a delimiter (e.g. to make "/1a" be a STRING, while
"/1 " is a N_PROXIMITY).

It is a failing of mine that I spend *WAY* too much time trying to get rid of
predicates.  Not always having a good cost-benefit ratio ;-(

Anyway, how about this lexer without predicates?

(I assume that " / " is a STRING (no WS), and likewise "/google", "g/g",
"g*g/g/" are all STRING's and that "/*", "**", "a*b/c*" are all
PREFIXED_STRINGS)

-------------------------
class LuceneLexer extends Lexer;

tokens {
    AND = "AND";
    STRING;
    PREFIXED_STRING;
    N_PROXIMITY;
}

STRING options{ testLiterals=true; } :
        ~( '/' | ' ' | '\t' | '\n' | '\r' )
        ( ~( ' ' | '\t' | '\n' | '\r' ) )*
        { if ((text.length() > 1) && (text.charAt(text.length()-1) == '*')) {
            $setType(PREFIXED_STRING);
            text.setLength(text.length() - 1);
          }
        }
	;

N_PROXIMITY :
        ( '/' { $setType(STRING);} )
        ( ('0'..'9')+ { $setType(N_PROXIMITY); } )?

        ( ( /*empty*/ {/* need to strip leading '/' here */} )

        | ( /*NB: leading '/' should be kept on this path */
            ~( '0'..'9' | ' ' | '\t' | '\n' | '\r' ) { $setType(STRING); }
             ( ~( ' ' | '\t' | '\n' | '\r' ) )*
             { if(text.charAt(text.length()-1)=='*') {
                 $setType(PREFIXED_STRING);
                 text.setLength(text.length() - 1);
               }
             }
          )
        )
    ;

WS  : ( ' ' | ('\t' { tab(); }) ) { $setType(Token.SKIP); } ;
EOL : ( '\r' ( '\n' )? | '\n' ) { newline(); $setType(Token.SKIP); } ;
-------------------------

Hope this helps...
   -jbb
From prashant.deva at gmail.com  Tue Jun 20 09:39:54 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Jun 20 09:39:56 2006
Subject: [antlr-interest] Re: Is ANTLR Studio website working for you?
In-Reply-To: <e76dvf$bfk$1@sea.gmane.org>
References: <41fed8f80606181605r252350c6w486f7f13dc564fe2@mail.gmail.com>
	<9da4f4520606182225v7c5832c0rd2e9a50ceef9428f@mail.gmail.com>
	<41fed8f80606182251x4a70dbb5wa1d5ed57a902bba6@mail.gmail.com>
	<e76dvf$bfk$1@sea.gmane.org>
Message-ID: <41fed8f80606200939t76a973d6p95b83508ceca3965@mail.gmail.com>

> Can you not have IIS proxy the Tomcat traffic? I know IIS 6 can do that,
> I am not sure about earlier versions.


Tried that and failed. Hell, getting tomcat to work was in itself a major
pain, now getting iis to talk to it is almost impossible.



Failing that, you can certainly run one of them on port 80 and the other
> on port 443 (https) so that firewalls do not interfere and ISP caches do
> not break your pages.


I already have IIS pages running on port 80. Only tomcat stuff, which is
related to account creation and login, is running on port 8080.
I like your idea about running on port 443. I will think about switching
tomcat it.



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060620/2f1cb02e/attachment.html
From lachinois at hotmail.com  Tue Jun 20 09:41:22 2006
From: lachinois at hotmail.com (Daniel Shane)
Date: Tue Jun 20 09:41:24 2006
Subject: [antlr-interest] Adding a new option to ANTLR "defaultRule",
 its possible, but would it be well accepted?
Message-ID: <BAY105-W5DF0B1CFA0654B7A9D92DBB870@phx.gbl>

Hi John!

Yes I really like this solution, its a bit more complex than using a predicate, but its faster since it will obviously never backtrack. If testLiterals was not available, I think the solution would quickly become very complex, but since only a few keywords are not of fixed length I can live with that.

But my question is, is this solution really better than having some degree of control over the ordering of the rules? I mean we are all aware that if it was possible to have some control, we could reduce the size of this simple lexer by half or even more.

I think that in most cases, simply having control over the last rule in the chain is enough power. 

I'm pretty sure it would be dead simple to enhance ANTLR with an option like "defaultRule" kind of option. This option would be general to the lexer, and be something like "defaultRul=STRING". A default rule gets invoked only an only if no other rule can be triggered by the lexer. If you use a rule that is "defaulted" in another rule, the defaultRule option will not change its behavior in any way.

The only time "defaultRule" would change anything, is if the lexer does not match any other rules based on the lookahead it has.

Can anyone find any objection to such an option? I'm really tempted to implement it and submit the changes... although I know we are now in ANTLR v3 so I'm not sure if ANTLR v2 is open for enhancements...

Daniel Shane

> I *REALLY* dislike predicates - altho they are essential in some situations.
> 
> I think even with a predicate you would still need to inspect the lookahead
> character to see if it was a delimiter (e.g. to make "/1a" be a STRING, while
> "/1 " is a N_PROXIMITY).
> 
> It is a failing of mine that I spend *WAY* too much time trying to get rid of
> predicates.  Not always having a good cost-benefit ratio ;-(
> 
> Anyway, how about this lexer without predicates?
> 
> (I assume that " / " is a STRING (no WS), and likewise "/google", "g/g",
> "g*g/g/" are all STRING's and that "/*", "**", "a*b/c*" are all
> PREFIXED_STRINGS)
> 
> -------------------------
> class LuceneLexer extends Lexer;
> 
> tokens {
>     AND = "AND";
>     STRING;
>     PREFIXED_STRING;
>     N_PROXIMITY;
> }
> 
> STRING options{ testLiterals=true; } :
>         ~( '/' | ' ' | '\t' | '\n' | '\r' )
>         ( ~( ' ' | '\t' | '\n' | '\r' ) )*
>         { if ((text.length() > 1) && (text.charAt(text.length()-1) == '*')) {
>             $setType(PREFIXED_STRING);
>             text.setLength(text.length() - 1);
>           }
>         }
> 	;
> 
> N_PROXIMITY :
>         ( '/' { $setType(STRING);} )
>         ( ('0'..'9')+ { $setType(N_PROXIMITY); } )?
> 
>         ( ( /*empty*/ {/* need to strip leading '/' here */} )
> 
>         | ( /*NB: leading '/' should be kept on this path */
>             ~( '0'..'9' | ' ' | '\t' | '\n' | '\r' ) { $setType(STRING); }
>              ( ~( ' ' | '\t' | '\n' | '\r' ) )*
>              { if(text.charAt(text.length()-1)=='*') {
>                  $setType(PREFIXED_STRING);
>                  text.setLength(text.length() - 1);
>                }
>              }
>           )
>         )
>     ;
> 
> WS  : ( ' ' | ('\t' { tab(); }) ) { $setType(Token.SKIP); } ;
> EOL : ( '\r' ( '\n' )? | '\n' ) { newline(); $setType(Token.SKIP); } ;
> -------------------------
> 
> Hope this helps...
>    -jbb

_________________________________________________________________
La messagerie sur votre t?l?phone portable doit ?tre un jeu d'enfant : essayez Windows Live Mail for Mobile Beta
http://ideas.live.com/programpage.aspx?versionId=6e782662-5f2a-4161-a64a-7f63644e1f0a
From parrt at cs.usfca.edu  Tue Jun 20 10:50:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 20 10:50:22 2006
Subject: [antlr-interest] am I doing something wrong?
In-Reply-To: <d092c2300606200742q4180f89i6e1c2b8ebeb0a2ae@mail.gmail.com>
References: <d092c2300606200742q4180f89i6e1c2b8ebeb0a2ae@mail.gmail.com>
Message-ID: <AB2DEEFE-9267-4E44-9492-6CEF17ACF2CF@cs.usfca.edu>


On Jun 20, 2006, at 7:42 AM, Johnicholas Hines wrote:

> I'm trying to create a AST node with text from a variable, like this:
> #expr = #([THING, "THING"], x, [INTEGER, os.str().c_str()]);
>
> I get this:
> mygrammar.g:66:76: Syntax error in action: mygrammar.g:66:76:  
> unexpected char: '.'
>
> Is there a proper, idiomatic way to do this?

The action translator in 2.x is fragile...try yanking out the os.str 
().c_str() expr into a variable.

Ter
From parrt at cs.usfca.edu  Tue Jun 20 11:07:05 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 20 11:06:39 2006
Subject: [antlr-interest] tree --> tree transformation
In-Reply-To: <aff5e35a0606192231u76541b78v860b732082d4d5b7@mail.gmail.com>
References: <aff5e35a0606192231u76541b78v860b732082d4d5b7@mail.gmail.com>
Message-ID: <B83B9517-5DED-47F5-9BF9-CE53330AFAF2@cs.usfca.edu>

On Jun 19, 2006, at 10:31 PM, Bernhard Damberger wrote:
> I was trying to make a tree grammar with Antlr 3.0 that spits out
> another modified tree.

Uh oh!  You caught me!  I have not implemented that feature yet...I'm  
not sure exactly how I want to do it.

> I just want to transform a tree from one form to another.

That's the issue... you can see that the basic mechanism borrowed  
straight from parser -> AST almost works.  My concern is how to deal  
with sharing tree nodes.  Clearly if you only want to go through and  
replace x*0 with 0 everywhere in expressions you should be able to  
reuse the rest of the tree; i.e., without dup'ing it.

I *think* the way to deal with that is that if you don't create a  
tree, return the incoming tree pointer as the result tree.

> Two kinds of lines of code are causing problems:
>              adaptor.setTokenBoundaries 
> (retval.tree,retval.start,retval.stop);
>
> In this case retval.start and retval.stop are Objects, not Tokens.

Yes, that would need to be turned off when building trees from a  
tree; those values are set and should not be touched.

> And
>
>                  string_literal4=(Object)input.LT(1);
>                  match(input,118,FOLLOW_118_in_statement63);
>                  string_literal4_tree =(Object)adaptor.create 
> (string_literal4);
>
> on the third line because string_literal4 is expected to be a token,
> but its a Object.

We could add that method create(object) to the adaptor no problem.   
The issue is that we'd be dup'ing nodes like crazy.

> Any thoughts?

Yep!  I think tree grammars should by default just return the input  
tree.  If you have -> rewrites then a new subtree for a rule is  
created.  ^ and ^^ would not be allowed and I'd like to disallow !  
also to be consistent.  ! could be useful but mostly likely you would  
want to remvoe a node upon some condition, hence, just saying ID! is  
not that useful.  If you unconditionally knew you didn't want ID in  
the tree, you could have used ID! when creating the tree.  Actually,  
you could also reuse old subtrees too:

expr
	:	^(ADD x=expr y=expr)		// return either subtree or whole thing
			-> {isZero($x)}? $y
			-> {isZero($y)}? $x
			-> $expr
	|	^(MULT x=expr y=expr)
			-> {isZero($x)}? [
	|	ID						// same ID node returned
	;

So every rule would by default terminate with a hidden "-> $rule"

Interesting...do you concur Bernhard?  I should add to blog...

Oh, i just noticed from blog:

http://www.antlr.org/blog/antlr3/treegrammar.tml
> June 28, 2005
>
> Ok, last night I figured out how to handle rewrites during tree  
> parsing. Simple! Just mirror what I do for token rewrite stream but  
> for tree rewrite stream. Queue up a series of rewrites until the  
> end and then alter the tree, giving it back to the user. Some  
> people have mentioned doing this on a rule-by-rule basis for tree  
> construction (during parsing) but this will work great on a grammar  
> basis for tree rewriting too. :) I think it was Paul Lucas and  
> Loring and Stanchfield who were talking about a related thing on a  
> rule basis.
Perhaps you'd also be interested in inserting nodes anywhere in the  
tree when you see, for example, an implicit var def (x=3).  You'd  
want to insert a def for x somewhere above.  You could say

engine.insertAfter($block.getFirstChild(), ^([DECL], [TYPE,"int"], $ID))

or some such.  Hmm...needs more thinking...

Ter
From doublemalam at yahoo.co.uk  Tue Jun 20 23:08:14 2006
From: doublemalam at yahoo.co.uk (Muhammad Masoom Alam)
Date: Tue Jun 20 23:08:18 2006
Subject: [antlr-interest] Binary Expression Problem! --- Logical Operator
	IMPLIES Problem
In-Reply-To: <4497C93F.6010504@softax.com.pl>
Message-ID: <20060621060814.52067.qmail@web86902.mail.ukl.yahoo.com>

Dear All,

IMPLIES is a logical operator whose perority is less
than any other logical operator like AND and OR. Some
body proposed a solution for the perority problem as: 

PredicateExp:PredicateAndExp (OR PredicateAndExp)*;
PredicateAndExp: Predicate (AND Predicate)*;
Predicate: ID | ?(? PredicateExp ?)?;

Now i want to add IMPLIES into the list of above
rules.
if i write a rule for IMPLIES as follows:

Predicate1: PredicateImplies IMPLIES PredicateImplies
((AND|OR) PredicateImplies IMPLIES PredicateImplies)*;
PredicateImplies: PredicateAndExp (OR
PredicateAndExp)*;
PredicateAndExp: Predicate (AND Predicate)*;
Predicate: ID | ?(? PredicateExp ?)?;

The problem is that the perorities of expressions are
not consistent in the first rule (Predicate1). For
example it contains Logical Operator AND|OR where as
following that rule PredicateImplies also contains a
logical operator (OR). That is, the logical operators
comes in two places in the Predicate1 and then in the
PredicateImplies and in the PredicateAndExp. How the
perority of IMPLIES can be preserved while putting the
IMPLIES logial operator into its correct place.?

Thanking You in advance.
MA









--- Sebastian Kaliszewski
<Sebastian.Kaliszewski@softax.com.pl> wrote:

> Sebastian Kaliszewski wrote:
> >>> The Grammar below is structured in a way that it
> >>> should observes the perority of relational
> operators.
> >>> But in this Grammar one problem persists i.e. a
> Binary
> >>> Expression should be comprised of two operands
> where
> >>> as from the Grammar it is obvivous that it may
> come up
> >>> with a single operand too. Could any body help
> me in
> >>> this regard to overcome the single operand issue
> >>> without loosing the operator's perority.
> >>> e.g. the Grammar permits: "Hello" where as the
> >>> required expression is "Hello" = "Hello" without
> >>> loosing the operator's perority.
> >>>
> >>> BinaryExp: EqualityExp;
> >>>
> >>> EqualityExp: RelationalExp ((Not_Equal|Equal)
> >>> RelationalExp)*;
> >>>
> >>> RelationalExp: additiveExp ((GT|GTE|LT|LTE)
> >>> additiveExp)*;
> >>>
> >>> additiveExp: MultipicativeExp
> >>> ((PLUS|MINUS)MultipicativeExp)*;
> >>>
> >>> MultipicativeExp: SimpleExp ((MUL|DIV|MOD)
> >>> SimpleExp)*;
> >>>
> >>> SimpleExp: STRING|CONSTANTVALUE;
> >>>
> >  >
> > 
> >> Try:
> >>
> >> EqualityExp: RelationalExp ((Not_Equal|Equal)
> RelationalExp)+
> >>
> >> I forget if antlr supports + though, i usually
> only use ? * :)
> > 
> > 
> > I'm affraid it's not what Muhammad wanted. I.e.
> this will only accept 
> > "hello" = "hello" but will not accept things like
> 10+40.
> > 
> > Something like this might be the sollution
> (although I find that 
> > restriction somewhat strange)
> > 
> > Binary: Relational ((EQ|NEQ) Relational)+ |
> BiRelational;
> > 
> > BiRelational: Additive ((GT|GTE|LT|LTE) Additive)+
> | BiAdditive;
> > 
> > Relational: Additive ((GT|GTE|LT|LTE) Additive)*;
> > 
> > BiAdditive: Multiplicative ((PLUS|MINUS)
> Multiplicative)+|BiMultiplicative;
> > 
> > Additive: Multiplicative ((PLUS|MINUS)
> Multiplicative)*;
> > 
> > BiMultiplicative: Simple ((MUL|DIV|MOD) Simple)+;
> > 
> > Multiplicative: Simple ((MUL|DIV|MOD) Simple)*;
> > 
> > Simple: STRING|CONSTANTVALUE;
> 
> Replying to myself
> 
> One probbaly needs to set predicates, like:
> 
> BiRelational: (Additive (GT|GTE|LT|LTE))=> Additive
> ((GT|GTE|LT|LTE) 
> Additive)+ | BiAdditive;
> 
> To resolve ambiguities. But that's probably the way
> it could be acheivied.
> 
> rgds
> -- 
> Sebastian Kaliszewski
> 



	
	
		
___________________________________________________________ 
All new Yahoo! Mail "The new Interface is stunning in its simplicity and ease of use." - PC Magazine 
http://uk.docs.yahoo.com/nowyoucan.html
From Michiel_Vermandel at axi.be  Wed Jun 21 07:38:48 2006
From: Michiel_Vermandel at axi.be (Michiel Vermandel)
Date: Wed Jun 21 07:38:54 2006
Subject: [antlr-interest] "start of line" issue in lexer
Message-ID: <OFCA759473.8D957E55-ONC1257194.004FCBD7-C1257194.005074F6@Axi.be>

Hi,

I need a lexer rule to skip comment in a part of code-text.

The rule should only be used if "rem" is at the start of the line or only 
preceeded by whitespaces and/or tabs.

so given this part of code:


rem setting a to 5
set a=5;
rem setting lvrem to a
set lvrem = a;


the first and the third line should be concidered as comment.
the fourth line should be left alone.

building a rule for the case in line 3 is quite easy because I can search 
for new line characters, but for the very first line that is not possible 
since there are no preceeding new line characters.

how do I have to handle this?

Thanks a lott!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060621/c435de07/attachment.html
From open.zone at virgin.net  Wed Jun 21 09:46:09 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun 21 09:28:14 2006
Subject: [antlr-interest] "start of line" issue in lexer
In-Reply-To: <OFCA759473.8D957E55-ONC1257194.004FCBD7-C1257194.005074F6@Axi.be>
Message-ID: <007001c69552$33b562a0$c704a8c0@hercules>

Look at the csharp_v1 example in 'examples/csharp/csharp_v1'. The lexer
deals with preprocessor directives that must similarly be the first
non-whitespace token on a line.
 
In general, the examples provide a rich source of ideas.
 
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Michiel Vermandel
Sent: 21 June 2006 15:39
To: antlr-interest@antlr.org
Subject: [antlr-interest] "start of line" issue in lexer



Hi, 

I need a lexer rule to skip comment in a part of code-text. 

The rule should only be used if "rem" is at the start of the line or only
preceeded by whitespaces and/or tabs. 

so given this part of code: 


rem setting a to 5 
set a=5; 
rem setting lvrem to a 
set lvrem = a; 


the first and the third line should be concidered as comment. 
the fourth line should be left alone. 

building a rule for the case in line 3 is quite easy because I can search
for new line characters, but for the very first line that is not possible
since there are no preceeding new line characters. 

how do I have to handle this? 

Thanks a lott! 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060621/ee9e1c05/attachment.html
From psampson at mail.unomaha.edu  Wed Jun 21 12:15:09 2006
From: psampson at mail.unomaha.edu (Pam L Sampson)
Date: Wed Jun 21 12:15:00 2006
Subject: [antlr-interest] header issue
Message-ID: <OF9AF6F752.FE35E0B6-ON86257194.0069C1E5-86257194.0069C1FB@UNOMAHA.EDU>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060621/5b597af7/attachment.html
From zhixueyong at hotmail.com  Wed Jun 21 12:51:08 2006
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Wed Jun 21 12:51:51 2006
Subject: [antlr-interest] Re: header issue
In-Reply-To: <OF9AF6F752.FE35E0B6-ON86257194.0069C1E5-86257194.0069C1FB@UNOMAHA.EDU>
References: <OF9AF6F752.FE35E0B6-ON86257194.0069C1E5-86257194.0069C1FB@UNOMAHA.EDU>
Message-ID: <e7c7vc$38j$1@sea.gmane.org>

Pam L Sampson wrote:
> Can somebody please explain why I am not able to insert a header in the 
> beginning of the java.g grammar file? I am getting an unexpected token 
> error. I have seen other posts on this problem but no answers that can 
> help me.
> 
> Pam

Do you have comments before the header section? If so, antlr will complain.

-- 
Xue Yong Zhi
http://seclib.blogspot.com

From e.papegaaij at student.utwente.nl  Thu Jun 22 00:32:52 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Thu Jun 22 00:33:01 2006
Subject: [antlr-interest] Matching nested actions
Message-ID: <200606220932.52799.e.papegaaij@student.utwente.nl>

Hello,

I'm trying to match nested actions as ANTLR does. For this I've copied the 
following rule from the ANTLR v2 documentation (with a minor modification to 
get rid of the ambiguity warning):

ACTION
    :   '{' ( ACTION | ~('}'|'{') )* '}'
    ;

This works fine with the alpha v3 version I've got from Terence 2 days ago 
(note that it does not work with ea10). However I want this token to be 
protected and use it from another token:

ACTION: NESTED_ACTION;

protected NESTED_ACTION
    :   '{' ( NESTED_ACTION | ~('}'|'{') )* '}'
    ;

This does not change anything to the token, or does it? However ANTLR now 
gives me:

tpl3.g:1:10: Alternative 1: after matching input such as '{''{''{''{''{' 
decision cannot predict what comes next due to recursion overflow to 
NESTED_ACTION from NESTED_ACTION
tpl3.g:1:10: Alternative 2: after matching input such as '{''{''{''{''{' 
decision cannot predict what comes next due to recursion overflow to 
NESTED_ACTION from NESTED_ACTION
tpl3.g:8:11: The following token definitions are unreachable: NESTED_ACTION

(ea10 only gives the last warning)

The grammar still works as before. Why is ANTLR giving these warnings?

Best regards,
Emond Papegaaij
From ewbank at gmail.com  Thu Jun 22 07:39:06 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Jun 22 07:39:09 2006
Subject: [antlr-interest] parsing a mix of structured and free-form text
In-Reply-To: <4497B54F.6020902@milica.com.au>
References: <4497B54F.6020902@milica.com.au>
Message-ID: <dd3a065f0606220739i7adec68ej949bae7b0ebcb17b@mail.gmail.com>

It may not be what you desire, but I'd use flex for scanner, and ANTLR
for everything else; this allows use of scanner states as necessary...

For ANTLR v2, lex is also much faster...

On 6/20/06, Milan Durovic <milan@milica.com.au> wrote:
> Hi,
>
> I am trying to use ANTLR to parse files that are mostly structured
> (being generated by another program), but here and there have some text
> that's nearly free form, as it is basically user-input. The place where
> this unstructured text appears within the structured varies, but is
> defined by the grammar.
>
> Ideally, what I would like to do, at the point in parsing when I know
> that unstructured text follows, is to simply read enough characters
> (these are fix-width fields, so I know how many I need to read), so that
> parsing of the structured text can continue.
>
> The problem here are look-ahead tokens, where Lexer goes a bit ahead of
> the parser and chews up input characters in advance.
>
> The places where this unstructured text appears are such that there's no
> need to use look-ahead tokens to decide which grammar rule to apply.
>
> I used ANTLR for some simpler things. I also used Bison and Flex before
> and used Flex states to control grabbing characters when places with
> unstructured text are approached. But I'm not that familiar with ANTLR
> to know how to do it, or whether it's possible at all.
>
> I don't know if it would be possible to get the text of look-ahead
> tokens, discard them, and force lexer to continue from a different
> position in the input stream.
>
> Any help/hints/ideas are very much welcome.
>
> Milan
>
From parrt at cs.usfca.edu  Thu Jun 22 08:28:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 22 08:28:55 2006
Subject: [antlr-interest] Matching nested actions
In-Reply-To: <200606220932.52799.e.papegaaij@student.utwente.nl>
References: <200606220932.52799.e.papegaaij@student.utwente.nl>
Message-ID: <BD87A433-F3C5-47EC-8070-B7B2B3A696FD@cs.usfca.edu>


On Jun 22, 2006, at 12:32 AM, Emond Papegaaij wrote:
> protected NESTED_ACTION
>     :   '{' ( NESTED_ACTION | ~('}'|'{') )* '}'
>     ;

try "fragment"  not "protected" :)  It thinks there are two identical  
tokens.

Ter

From bernied at gmail.com  Thu Jun 22 12:06:37 2006
From: bernied at gmail.com (Bernhard Damberger)
Date: Thu Jun 22 12:06:40 2006
Subject: [antlr-interest] Re: tree --> tree transformation
Message-ID: <aff5e35a0606221206j2e0e4939qd4c8ebc5722484e3@mail.gmail.com>

On Jun 19, 2006, at 10:31 PM, Bernhard Damberger wrote:
> I was trying to make a tree grammar with Antlr 3.0 that spits out
> another modified tree.

Uh oh!  You caught me!  I have not implemented that feature yet...I'm
not sure exactly how I want to do it.

> I just want to transform a tree from one form to another.


As a starting point, would it be possible for me to just make the two fixes
you outline below (locally), and just build trees using that for now? It
would be nice to be able to continue my development while your still hashing
out the issue of dups/no dups etc.

You might want to provide some control on whether dups are made or not. The
tree I am using is my own tree (which happens to implement Tree interface),
and it might not be the best representation for the transformed tree. So in
my case I am perfectly happy with creating a dup'ed tree. Also, the tree
that I am constructing from is a very simple (slist style) format, so its
going to be transformed from a compact representation to something much more
verbose and w/ more information.

Might also want to consider how TreeAdaptors fit into this whole scheme.

Is this feature going to be working for the beta?

_bernhard

PS I was trying to manually move the Java grammer from 2.7 to 3.0. Almost
got it working, but I don't understand enough about the parser (LL(*) etc)
to finish it. But what I did do instead was use antlr 2.7 to create a tree
that implements both antlr.AST and org.antlr.Tree, and then use the antlr
3.0 to do my tree transformation...which now I find is not yet done. :-( Its
a hack, but it works.

PPS Whats the diff between ^ and ^^ in antlr 3.0?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060622/96645bac/attachment.html
From parrt at cs.usfca.edu  Thu Jun 22 12:27:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 22 12:26:53 2006
Subject: [antlr-interest] Re: tree --> tree transformation
In-Reply-To: <aff5e35a0606221206j2e0e4939qd4c8ebc5722484e3@mail.gmail.com>
References: <aff5e35a0606221206j2e0e4939qd4c8ebc5722484e3@mail.gmail.com>
Message-ID: <F8123D61-10C7-4C51-9820-9734B1494431@cs.usfca.edu>


On Jun 22, 2006, at 12:06 PM, Bernhard Damberger wrote:
> As a starting point, would it be possible for me to just make the  
> two fixes you outline below (locally), and just build trees using  
> that for now? It would be nice to be able to continue my  
> development while your still hashing out the issue of dups/no dups  
> etc.

Most likely that would work.

> Might also want to consider how TreeAdaptors fit into this whole  
> scheme.

yeah...

> Is this feature going to be working for the beta?

Nope... > 3.0 most likely

> _bernhard
>
> PS I was trying to manually move the Java grammer from 2.7 to 3.0.  
> Almost got it working, but I don't understand enough about the  
> parser (LL(*) etc) to finish it.

Did you see the example-v3/java/java.g, which is exactly that?

> But what I did do instead was use antlr 2.7 to create a tree that  
> implements both antlr.AST and org.antlr.Tree, and then use the  
> antlr 3.0 to do my tree transformation...which now I find is not  
> yet done. :-( Its a hack, but it works.
>
> PPS Whats the diff between ^ and ^^ in antlr 3.0?

^ in v2 is ^^ in v3.  Plain ^ in v3 means make root of enclosing  
subtree, which can be a subrule not just a root.

Ter
From jbergmanster at gmail.com  Thu Jun 22 13:55:18 2006
From: jbergmanster at gmail.com (Jeff Bergman)
Date: Thu Jun 22 13:55:23 2006
Subject: [antlr-interest] Need help with an address parser
Message-ID: <9c5da2370606221355j3020decfgd4ab3c914af03f80@mail.gmail.com>

I am trying to build an address parser but I am having problems.  The
grammar seems to choke on my streetDesignator and streetDesignatorLong in
the Parser section.  I tried putting these in the lexer but fared no
better.  I am not sure how to handle these.  I need them to be separated
because I have to eventually convert the long version to the abbreviated
designators when parsing the address.


options {
    language = "CSharp";
}

class AddressParser extends Parser;
options {
    buildAST = true;    // uses CommonAST by default
}

address
    :    poBox | simpleStreetAddress
    ;

poBox: "PO" boxDesignator NUMBER
    ;

simpleStreetAddress: NUMBER  (IDENT |  streetDesignatorLong |
directionDesignator)+ (streetDesignator | streetDesignatorLong )
(directionDesignator)? (unitDesignator (NUMBER  | IDENT)? )?
;


boxDesignator: "BOX";

unitDesignator :
  ("APT" |
  "BASE" |
  "BLDG" |
  "BSMT" |
  "DEPT" |
  "FL" |
  "FRNT" |
  "HNGR" |
  "LBBY" |
  "LOT" |
  "LOWR" |
  "OFC" |
  "PH" |
  "PIER" |
  "POB" |
  "REAR" |
  "RM" |
  "SIDE" |
  "SLIP" |
  "SPC" |
  "STE" |
  "STOP" |
  "TRLR" |
  "UNIT" |
  "UPPR")
;

 directionDesignator:
    ("E" |
    "N" |
    "NE" |
    "NW" |
    "S" |
    "SE" |
    "SW" |
    "W")
;


streetDesignator:
 "ALY" |
  "ANX" |
  "ARC" |
  "AVE" |
  "BCH" |
  "BG" |
  "BGS" |
  "BLF" |
  "BLFS" |
  "BLVD" |
  "BND" |
  "BR" |
  "BRG" |
  "BRK" |
  "BRKS" |
  "BTM" |
  "BYP" |
  "BYU" |
  "CIR" |
  "CIRS" |
  "CLB" |
  "CLF" |
  "CLFS" |
  "CMN" |
  "COR" |
  "CORS" |
  "CP" |
  "CPE" |
  "CRES" |
  "CRK" |
  "CRSE" |
  "CRST" |
  "CSWY" |
  "CT" |
  "CTR" |
  "CTRS" |
  "CTS" |
  "CURV" |
  "CV" |
  "CVS" |
  "CYN" |
  "DL" |
  "DM" |
  "DR" |
  "DRS" |
  "DV" |
  "EST" |
  "ESTS" |
  "EXPY" |
  "EXT" |
  "EXTS" |
  "FALL" |
  "FLD" |
  "FLDS" |
  "FLS" |
  "FLT" |
  "FLTS" |
  "FRD" |
  "FRDS" |
  "FRG" |
  "FRGS" |
  "FRK" |
  "FRKS" |
  "FRST" |
  "FRY" |
  "FT" |
  "FWY" |
  "GDN" |
  "GDNS" |
  "GLN" |
  "GLNS" |
  "GRN" |
  "GRNS" |
  "GRV" |
  "GRVS" |
  "GTWY" |
  "HBR" |
  "HBRS" |
  "HL" |
  "HLS" |
  "HOLW" |
  "HTS" |
  "HVN" |
  "HWY" |
  "INLT" |
  "IS" |
  "ISLE" |
  "ISS" |
  "JCT" |
  "JCTS" |
  "KNL" |
  "KNLS" |
  "KY" |
  "KYS" |
  "LAND" |
  "LCK" |
  "LCKS" |
  "LDG" |
  "LF" |
  "LGT" |
  "LGTS" |
  "LK" |
  "LKS" |
  "LN" |
  "LNDG" |
  "LOOP" |
  "MALL" |
  "MDW" |
  "MDWS" |
  "MEWS" |
  "ML" |
  "MLS" |
  "MNR" |
  "MNRS" |
  "MSN" |
  "MT" |
  "MTN" |
  "MTNS" |
  "MTWY" |
  "NCK" |
  "OPAS" |
  "ORCH" |
  "OVAL" |
  "PARK" |
  "PASS" |
  "PATH" |
  "PIKE" |
  "PKWY" |
  "PL" |
  "PLN" |
  "PLNS" |
  "PLZ" |
  "PNE" |
  "PNES" |
  "PR" |
  "PRT" |
  "PRTS" |
  "PSGE" |
  "PT" |
  "PTS" |
  "RADL" |
  "RAMP" |
  "RD" |
  "RDG" |
  "RDGS" |
  "RDS" |
  "RIV" |
  "RNCH" |
  "ROW" |
  "RPD" |
  "RPDS" |
  "RR" |
  "RST" |
  "RTE" |
  "RUE" |
  "RUN" |
  "SHL" |
  "SHLS" |
  "SHR" |
  "SHRS" |
  "SKWY" |
  "SMT" |
  "SPG" |
  "SPGS" |
  "SPUR" |
  "SQ" |
  "SQS" |
  "ST" |
  "STA" |
  "STRA" |
  "STRM" |
  "STS" |
  "TER" |
  "TPKE" |
  "TRAK" |
  "TRCE" |
  "TRFY" |
  "TRL" |
  "TRWY" |
  "TUNL" |
  "UN" |
  "UNS" |
  "UPAS" |
  "VIA" |
  "VIS" |
  "VL" |
  "VLG" |
  "VLGS" |
  "VLY" |
  "VLYS" |
  "VW" |
  "VWS" |
  "WALK" |
  "WALL" |
  "WAY" |
  "WAYS" |
  "WL" |
  "WLS" |
  "XING" |
  "XRD" |

;
streetDesignatorLong:
 "ALLEY" |
  "ANNEX" |
  "ARCADE" |
  "AVENUE" |
  "BEACH" |
  "BURG" |
  "BURGS" |
  "BLUFF" |
  "BLUFFS" |
  "BOULEVARD" |
  "BEND" |
  "BRANCH" |
  "BRIDGE" |
  "BROOK" |
  "BROOKS" |
  "BOTTOM" |
  "BYPASS" |
  "BAYOU" |
  "BAYOO" |
  "CIRCLE" |
  "CIRCLES" |
  "CLUB" |
  "CLIFF" |
  "CLIFFS" |
  "COMMON" |
  "CORNER" |
  "CORNERS" |
  "CAMP" |
  "CAPE" |
  "CRESCENT" |
  "CREEK" |
  "COURSE" |
  "CREST" |
  "CAUSEWAY" |
  "COURT" |
  "CENTER" |
  "CENTERS" |
  "COURTS" |
  "CURVE" |
  "COVE" |
  "COVES" |
  "CANYON" |
  "DALE" |
  "DAM" |
  "DRIVE" |
  "DRIVES" |
  "DIVIDE" |
  "ESTATE" |
  "ESTATES" |
  "EXPRESSWAY" |
  "EXTENSION" |
  "EXTENSIONS" |
  "FIELD" |
  "FIELDS" |
  "FALLS" |
  "FLAT" |
  "FLATS" |
  "FORD" |
  "FORDS" |
  "FORGE" |
  "FORGES" |
  "FORK" |
  "FORKS" |
  "FOREST" |
  "FERRY" |
  "FORT" |
  "FREEWAY" |
  "GARDEN" |
  "GARDENS" |
  "GLEN" |
  "GLENS" |
  "GREEN" |
  "GREENS" |
  "GROVE" |
  "GROVES" |
  "GATEWAY" |
  "HARBOR" |
  "HARBORS" |
  "HILL" |
  "HILLS" |
  "HOLLOW" |
  "HEIGHTS" |
  "HAVEN" |
  "HIGHWAY" |
  "INLET" |
  "ISLAND" |
  "ISLANDS" |
  "JUNCTION" |
  "JUNCTIONS" |
  "KNOLL" |
  "KNOLLS" |
  "KEY" |
  "KEYS" |
  "LOCK" |
  "LOCKS" |
  "LODGE" |
  "LOAF" |
  "LIGHT" |
  "LIGHTS" |
  "LAKE" |
  "LAKES" |
  "LANE" |
  "LANDING" |
  "MEADOW" |
  "MEADOWS" |
  "MILL" |
  "MILLS" |
  "MANOR" |
  "MANORS" |
  "MISSION" |
  "MOUNT" |
  "MOUNTAIN" |
  "MOUNTAINS" |
  "MOTORWAY" |
  "NECK" |
  "OVERPASS" |
  "ORCHARD" |
  "PARKS" |
  "PARKWAY" |
  "PARKWAYS" |
  "PLACE" |
  "PLAIN" |
  "PLAINS" |
  "PLAZA" |
  "PINE" |
  "PINES" |
  "PRAIRIE" |
  "PORT" |
  "PORTS" |
  "PASSAGE" |
  "POINT" |
  "POINTS" |
  "RADIAL" |
  "ROAD" |
  "RIDGE" |
  "RIDGES" |
  "ROADS" |
  "RIVER" |
  "RANCH" |
  "RAPID" |
  "RAPIDS" |
  "RURAL ROUTE" |
  "REST" |
  "ROUTE" |
  "SHOAL" |
  "SHOALS" |
  "SHORE" |
  "SHORES" |
  "SKYWAY" |
  "SUMMIT" |
  "SPRING" |
  "SPRINGS" |
  "SPUR(S)" |
  "SQUARE" |
  "SQUARES" |
  "STREET" |
  "STATION" |
  "STRAVENUE" |
  "STREAM" |
  "STREETS" |
  "TERRACE" |
  "TURNPIKE" |
  "TRACK" |
  "TRACE" |
  "TRAFFICWAY" |
  "TRAIL" |
  "THROUGHWAY" |
  "TUNNEL" |
  "UNION" |
  "UNIONS" |
  "UNDERPASS" |
  "VIADUCT" |
  "VISTA" |
  "VILLE" |
  "VILLAGE" |
  "VILLAGES" |
  "VALLEY" |
  "VALLEYS" |
  "VIEW" |
  "VIEWS" |
  "WELL" |
  "WELLS" |
  "CROSSING"
  ;




class AddressLexer extends Lexer;
options {
    k=10;
    testLiterals=false;
}
tokens
{
    ADDRESSDESIGNATORLONG;
}

WS    :    (' '
    |    '\t'
    |   '\f'
    |    '\n'
    |    '\r')
        { _ttype = Token.SKIP; }
    ;


protected
DIGIT
    :    '0'..'9'
    ;
protected
CHAR
    :    'A'..'Z'
    ;

NUMBER    :    (DIGIT)+ ('/' (DIGIT)+ )? (  ('-' ( (CHAR)+ | (DIGIT)+ ) )
|  (CHAR {$setType(IDENT);} )*    )
    ;




IDENT
  options {testLiterals=true;}
  : (CHAR) ( CHAR |'-'|'0'..'9')*
  ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060622/97346c11/attachment-0001.html
From parrt at cs.usfca.edu  Thu Jun 22 14:22:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 22 14:21:32 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <200606221516.49327.e.papegaaij@student.utwente.nl>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
Message-ID: <0ADBB40A-1233-4051-B81B-82E216B89682@cs.usfca.edu>

[switching to antlr-interest]

Emond,  I changed the grammar to use fragment instead of protected  
and then chagned

fragment
NESTED_METHOD_BODY_ACTION
	: {bodyFollow}?=>
	'{'
	( NESTED_METHOD_BODY_ACTION
	| CHAR_LITERAL_ACTION
	| STRING_LITERAL_ACTION
	| .
	)*
	'}'
	;

to use ~('{'|'\''|'"') instead of .  It now terminates, but rules like:

METHOD_SIG_ACTION: {sigFollow}?=>
                    {sigFollow = false;}
                    (~(';'|'{'))+
                    {bodyFollow = true;};

EXPRESSION_ACTION: {exprFollow}?=>
                    {exprFollow = false;}
                    (~';')+;

severely overlap with each other and all the other rules.  Moreover,  
some of these rules are recursive, which means the DFA cannot see  
inside.  ANTLR is going crazy building bigger and bigger DFAs trying  
to see past the recursion.

A better way is to use the filter=true option.  Then just list the  
tokens with your predicates; ANTLR will backtrack so it will be  
slower but you can do some really ambiguous stuff.  Things seen first  
take precedence.

Look at codegen/action.g in distribution, which is the $x.y  
translator for actions.  It does stuff like:

ENCLOSING_RULE_SCOPE_ATTR
	:	'$' x=ID '.' y=ID	{enclosingRule!=null &&
	                         $x.text.equals(enclosingRule.name) &&
	                         enclosingRule.getLocalAttributeScope 
($y.text)!=null}?
		...
	;

TOKEN_SCOPE_ATTR
	:	'$' x=ID '.' y=ID	{enclosingRule!=null &&
	                         (enclosingRule.getTokenLabel($x.text)!=null||
	                          isTokenRefInAlt($x.text)) &&
	                         AttributeScope.tokenScope.getAttribute 
($y.text)!=null}?
		...
	;

LABEL_REF
	:	'$' ID {enclosingRule!=null &&
	            getElementLabel($ID.text)!=null &&
		        enclosingRule.getRuleLabel($ID.text)==null}?
		...
	;

These are all highly ambiguous but are resolved with predicates that  
fail/succeed after the syntax matches.  The default backtracking of  
the filter makes the lexer rewind and try next rule.  You should see  
a stream of tokens come out like normal even though this is "filter"  
mode.

Ter
From e.papegaaij at student.utwente.nl  Fri Jun 23 00:12:18 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 23 00:12:26 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <0ADBB40A-1233-4051-B81B-82E216B89682@cs.usfca.edu>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<0ADBB40A-1233-4051-B81B-82E216B89682@cs.usfca.edu>
Message-ID: <200606230912.18824.e.papegaaij@student.utwente.nl>

On Thursday 22 June 2006 23:22, Terence Parr wrote:
> [switching to antlr-interest]
>
> Emond,  I changed the grammar to use fragment instead of protected
> and then chagned NESTED_METHOD_BODY_ACTION to use ~('{'|'\''|'"') instead
> of .  It now terminates, but rules like:
Ah, forgot to change that back. I tried to simplify the grammar to make it run 
through ANTLR.

> A better way is to use the filter=true option.  Then just list the
> tokens with your predicates; ANTLR will backtrack so it will be
> slower but you can do some really ambiguous stuff.  Things seen first
> take precedence.
>
> Look at codegen/action.g in distribution, which is the $x.y
> translator for actions.  It does stuff like:
<cut>
> These are all highly ambiguous but are resolved with predicates that
> fail/succeed after the syntax matches.  The default backtracking of
> the filter makes the lexer rewind and try next rule.  You should see
> a stream of tokens come out like normal even though this is "filter"
> mode.

I can't find these examples, but adding filter=true and moving some tokens did 
the trick. Note that ANTLR still takes very long to generate the parser and 
lexer, over a minute.

Thanks for your help.

Best regards,
Emond Papegaaij
From e.papegaaij at student.utwente.nl  Fri Jun 23 00:13:26 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 23 00:13:28 2006
Subject: [antlr-interest] Matching nested actions
In-Reply-To: <BD87A433-F3C5-47EC-8070-B7B2B3A696FD@cs.usfca.edu>
References: <200606220932.52799.e.papegaaij@student.utwente.nl>
	<BD87A433-F3C5-47EC-8070-B7B2B3A696FD@cs.usfca.edu>
Message-ID: <200606230913.26347.e.papegaaij@student.utwente.nl>

On Thursday 22 June 2006 17:28, Terence Parr wrote:
> On Jun 22, 2006, at 12:32 AM, Emond Papegaaij wrote:
> > protected NESTED_ACTION
> >
> >     :   '{' ( NESTED_ACTION | ~('}'|'{') )* '}'
> >
> >     ;
>
> try "fragment"  not "protected" :)  It thinks there are two identical
> tokens.

Ah, that helped. What is the exact difference between 'fragment' 
and 'protected'?

Best regards
Emond Papegaaij
From tas at ultersys.ru  Fri Jun 23 04:29:35 2006
From: tas at ultersys.ru (Andrey Timoshenkov)
Date: Fri Jun 23 04:27:41 2006
Subject: [antlr-interest] Error handling problem
Message-ID: <449BD09F.2070403@ultersys.ru>

Hi all.

I have a problem with parsing error handling in ANTLR 2.7.5.

Consider the simple grammar:

spec: (statement)* EOF;
statement: statement1 |	statement2 ;

My goal is to handle syntax errors in each statement so that I can 
report an error, drop the incorrect statement and try to continue from 
the next one. I do the following:

spec:
( statement
    exception
    catch[RecognitionException er]
    {
       // report, consume tokens until the next statement
    }
)* EOF ;

This works fine for any errors inside the statement itself, but if the 
very first token of the statement is not recognized, the exception is 
not handled. Instead the loop generated for the rule exits and parser 
tries to match EOF.

How I can handle this situation to be able to recover the parsing process?

And one more question: can I refer the rule lookahead set inside action 
block to be able to write:
	consumeUntil( <ruleLookahedSet> );
in the above catch block to adjust token stream to the next valid statement?

Thank you very much,
Andrey Timoshenkov
From tas at ultersys.ru  Fri Jun 23 04:49:32 2006
From: tas at ultersys.ru (Andrey Timoshenkov)
Date: Fri Jun 23 04:47:33 2006
Subject: [antlr-interest] Error handling problem
In-Reply-To: <OFA59CB6C3.1A690D36-ONC1257196.003F70BE-C1257196.003FB46A@Axi.be>
References: <OFA59CB6C3.1A690D36-ONC1257196.003F70BE-C1257196.003FB46A@Axi.be>
Message-ID: <449BD54C.10403@ultersys.ru>

Michiel,

thank you for your suggestion. I tried something like this, but 
unfortunately this causes nondeterminism errors to be generated. I guess 
the illegalStatement rule should be non-empty to avoid nondeterminism. 
Probably I need something like "any-token-not-in-the-lookahead-set" but 
I have no idea how to write such a rule.

Thank you,
Andrey Timosenkov

Michiel Vermandel wrote:
> 
> Hi,
> 
> I don't know if this is the best way but I solved this issue as follows:
> 
> spec:
> ( statement
>    exception
>    catch[RecognitionException er]
>    {
>       // report, consume tokens until the next statement
>    }
>   | illegalStatement
> )* EOF ;
> 
> illegalStatement:
> {
>    // report, consume tokens until the next statement
> }
> 
> so the illegalStatement rule takes anything that is not taken by the 
> statement rule
> 
> I hope this is of any help...
> 
> 
> 
> 
> 
> 
> *Andrey Timoshenkov <tas@ultersys.ru>*
> Sent by: antlr-interest-bounces@antlr.org
> 
> 23/06/2006 13:29
> 
> 	
> To
> 	ANTLR malilist <antlr-interest@antlr.org>
> cc
> 	
> Subject
> 	[antlr-interest] Error handling problem
> 
> 
> 	
> 
> 
> 
> 
> 
> Hi all.
> 
> I have a problem with parsing error handling in ANTLR 2.7.5.
> 
> Consider the simple grammar:
> 
> spec: (statement)* EOF;
> statement: statement1 |                 statement2 ;
> 
> My goal is to handle syntax errors in each statement so that I can
> report an error, drop the incorrect statement and try to continue from
> the next one. I do the following:
> 
> spec:
> ( statement
>    exception
>    catch[RecognitionException er]
>    {
>       // report, consume tokens until the next statement
>    }
> )* EOF ;
> 
> This works fine for any errors inside the statement itself, but if the
> very first token of the statement is not recognized, the exception is
> not handled. Instead the loop generated for the rule exits and parser
> tries to match EOF.
> 
> How I can handle this situation to be able to recover the parsing process?
> 
> And one more question: can I refer the rule lookahead set inside action
> block to be able to write:
>                 consumeUntil( <ruleLookahedSet> );
> in the above catch block to adjust token stream to the next valid statement?
> 
> Thank you very much,
> Andrey Timoshenkov
> 
From carleton.coffrin at gmail.com  Fri Jun 23 07:46:46 2006
From: carleton.coffrin at gmail.com (Carleton Coffrin)
Date: Fri Jun 23 07:46:49 2006
Subject: [antlr-interest] LT(0) Specification
Message-ID: <190cfd940606230746v573b5467vf3fdfd195954d2d0@mail.gmail.com>

      I am having a problem with the Java version of ANTLR 2.7.5 where
in the middle of parsing a token stream LT(0) returns 'null'.  In all
cases I have found both LT(-1) and LT(1) have non null values,
although they seem to be a few tokens ahead of what I would expect.
Can someone give me some insight into how LT() works so that I may be
able to track down the source of the 'null' value.

-Carleton
From e.papegaaij at student.utwente.nl  Fri Jun 23 08:02:12 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 23 08:02:20 2006
Subject: [antlr-interest] Recursive rules and LL(*)
Message-ID: <200606231702.12370.e.papegaaij@student.utwente.nl>

Hello,

I'm having a bit of a problem with a recursive rule combined with LL(*). The 
following (snapshot) of the grammar triggers the problem:

grammar TPL;
nodeDecl: (targetClass ':')? targetClass;
targetClass: '<' (targetClass)? '>';

This should match strings like '<<>>:<>' and '<<<>>>'. However the recursive 
rule does not work with the LL(*) algorithm. It tries to build the entire 
language in a single DFA and then bails out with:

tpl2.g:3:30: Alternative 1: after matching input such as '<' '<' '<' '<' '<' 
decision cannot predict what comes next due to recursion overflow to 
targetClass from targetClass
tpl2.g:3:30: Alternative 2: after matching input such as '<' '<' '<' '<' '<' 
decision cannot predict what comes next due to recursion overflow to 
targetClass from targetClass

Is there any way to make this work with LL(*)? The DFA should take all '<' 
and '>' tokens without trying to match the number of tokens and finally 
branch on ':' or EOF. A mismatch between the number of '<' and '>' tokens 
will be detected by the parser. Of course I could use the following rule:

nodeDecl options {k = 1;}
         : (targetClass ':')=> targetClass ':' targetClass
         | targetClass;

But I think the LL(*) version is more clear, and it should be faster.

Best regards
Emond Papegaaij
From parrt at cs.usfca.edu  Fri Jun 23 11:09:54 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 23 11:09:17 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <200606230912.18824.e.papegaaij@student.utwente.nl>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<0ADBB40A-1233-4051-B81B-82E216B89682@cs.usfca.edu>
	<200606230912.18824.e.papegaaij@student.utwente.nl>
Message-ID: <5177EEDB-AA0B-440E-BEED-61E57E070CBA@cs.usfca.edu>


On Jun 23, 2006, at 12:12 AM, Emond Papegaaij wrote:
> I can't find these examples,

http://www.antlr.org/download/examples-v3.tar.gz

> but adding filter=true and moving some tokens did
> the trick.

Hooray!

I realized afterwards that you really need lexer modes so you can  
switch contexts...a must have feature coming soon... > 3.0

> Note that ANTLR still takes very long to generate the parser and
> lexer, over a minute.

Strange...how fast is your box?  Can you send me directly the grammar?

Ter
From parrt at cs.usfca.edu  Fri Jun 23 11:10:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 23 11:09:42 2006
Subject: [antlr-interest] Matching nested actions
In-Reply-To: <200606230913.26347.e.papegaaij@student.utwente.nl>
References: <200606220932.52799.e.papegaaij@student.utwente.nl>
	<BD87A433-F3C5-47EC-8070-B7B2B3A696FD@cs.usfca.edu>
	<200606230913.26347.e.papegaaij@student.utwente.nl>
Message-ID: <66570E1C-5BA7-4FB7-A309-D4EC77AD3E91@cs.usfca.edu>


On Jun 23, 2006, at 12:13 AM, Emond Papegaaij wrote:

> On Thursday 22 June 2006 17:28, Terence Parr wrote:
>> On Jun 22, 2006, at 12:32 AM, Emond Papegaaij wrote:
>>> protected NESTED_ACTION
>>>
>>>     :   '{' ( NESTED_ACTION | ~('}'|'{') )* '}'
>>>
>>>     ;
>>
>> try "fragment"  not "protected" :)  It thinks there are two identical
>> tokens.
>
> Ah, that helped. What is the exact difference between 'fragment'
> and 'protected'?

protected is technically meaningless ;)

Ter

From mathew at yeates.tv  Fri Jun 23 20:31:08 2006
From: mathew at yeates.tv (Mathew Yeates)
Date: Fri Jun 23 20:31:11 2006
Subject: [antlr-interest] very basic question
Message-ID: <449CB1FC.5070103@yeates.tv>

Hi
I want to translate some Matlab code to Python. I know very little about 
the subject (some yacc and lex) but I came across the ANTLR site and 
this looks like it might be a good approach.

I have some very basic questions.
1) I see there is a grammar for Python 2.3. Is there one for Python 2.4?
2) Do I need both the Python and Matlab grammars?
3) Is there a Matlab grammar somewhere? If not, how do I generate it? As 
a side note, I have .y .l files from Octave which should be very similar 
to Matlab
4) Then what? I looked at several tutorials and see how to parse the 
input but I havent seen a description of doing the translation.

Any help is appreciated!
Mathew
From craymer at warpiv.com  Fri Jun 23 21:28:02 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Fri Jun 23 21:28:05 2006
Subject: [antlr-interest] very basic question
In-Reply-To: <449CB1FC.5070103@yeates.tv>
Message-ID: <00cb01c69746$9585b2f0$6402a8c0@Fafnir>

Answers to questions below.  BTW, why use Python as a target language?  The
Python interpreter is pretty slow, so you will probably lose performance.
If the problem is that you do not have a Matlab license, then Scilab should
do what you want.  Otherwise, it might make more sense to translate the
Matlab code to C++ and use SWIG to interface to Python.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Mathew Yeates
> Sent: Friday, June 23, 2006 8:31 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] very basic question
> 
> Hi
> I want to translate some Matlab code to Python. I know very little about
> the subject (some yacc and lex) but I came across the ANTLR site and
> this looks like it might be a good approach.
> 
> I have some very basic questions.
> 1) I see there is a grammar for Python 2.3. Is there one for Python 2.4?

If not, it would be easy to generate--the python parser grammar was machine
generated and tweaked by hand.  However, I suspect that there are no grammar
differences between 2.3 and 2.4.

> 2) Do I need both the Python and Matlab grammars?

No, just the Matlab grammar.  For output, check out StringTemplate (same
server as antlr.org, but at stringtemplate.org).

> 3) Is there a Matlab grammar somewhere? If not, how do I generate it? As
> a side note, I have .y .l files from Octave which should be very similar
> to Matlab

Check out the Scilab sources (http://scilabsoft.inria.fr/).  The conversion
tools probably have a Matlab grammar, likely a lex/yacc one.

> 4) Then what? I looked at several tutorials and see how to parse the
> input but I havent seen a description of doing the translation.

Check out some of the grammars on the ANTLR site; the ANTLR GNU C translator
might be a good place to start.

> 
> Any help is appreciated!
> Mathew

From e.papegaaij at student.utwente.nl  Sat Jun 24 06:44:02 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Sat Jun 24 06:44:06 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <5177EEDB-AA0B-440E-BEED-61E57E070CBA@cs.usfca.edu>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<200606230912.18824.e.papegaaij@student.utwente.nl>
	<5177EEDB-AA0B-440E-BEED-61E57E070CBA@cs.usfca.edu>
Message-ID: <200606241544.02633.e.papegaaij@student.utwente.nl>

On Friday 23 June 2006 20:09, Terence Parr wrote:
> On Jun 23, 2006, at 12:12 AM, Emond Papegaaij wrote:
 > but adding filter=true and moving some tokens did
> > the trick.
>
> Hooray!
>
> I realized afterwards that you really need lexer modes so you can
> switch contexts...a must have feature coming soon... > 3.0

That would really make the lexer much simpler. I hope to see that feature 
soon :)

> > Note that ANTLR still takes very long to generate the parser and
> > lexer, over a minute.
>
> Strange...how fast is your box?  Can you send me directly the grammar?

I'm running ANTLR on a dual Opteron 242 (1.6GHz) with 2GB ram. Below is the 
output with the version you sent me a few days ago:

time java -cp <cut> org.antlr.Tool tpl.g
ANTLR Parser Generator   Early Access Version 3.0b1 (?)  1989-2006
tpl.g:113:15: no lexer rule corresponding to token: VISIT_IDENTIFIER

real    1m3.201s
user    1m4.810s
sys     0m0.616s


And with version ea10:

time java -cp <cut> org.antlr.Tool tpl.g
ANTLR Parser Generator   Early Access Version 3.0ea10 (June 2, 2006)  
1989-2006
tpl.g:113:15: no lexer rule corresponding to token: VISIT_IDENTIFIER
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)
stop state @k=1 (terminated early)

real    0m19.001s
user    0m23.855s
sys     0m0.525s


Note that ea10 is much faster (but produces an incorrect result).

I also don't know what to do about the 'no lexer rule corresponding to token: 
VISIT_IDENTIFIER' warning.

Best regards
Emond Papegaaij
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tpl.g
Type: text/x-java
Size: 3352 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060624/c2449e75/tpl.bin
From parrt at cs.usfca.edu  Sat Jun 24 10:44:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 24 10:43:31 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <200606241544.02633.e.papegaaij@student.utwente.nl>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<200606230912.18824.e.papegaaij@student.utwente.nl>
	<5177EEDB-AA0B-440E-BEED-61E57E070CBA@cs.usfca.edu>
	<200606241544.02633.e.papegaaij@student.utwente.nl>
Message-ID: <D43A4086-C0DD-43B6-8685-CC117375FB8F@cs.usfca.edu>


On Jun 24, 2006, at 6:44 AM, Emond Papegaaij wrote:
>> I realized afterwards that you really need lexer modes so you can
>> switch contexts...a must have feature coming soon... > 3.0
>
> That would really make the lexer much simpler. I hope to see that  
> feature
> soon :)

Me too ;)

> Note that ea10 is much faster (but produces an incorrect result).

Yes, I over-optimized ;)

> I also don't know what to do about the 'no lexer rule corresponding  
> to token:
> VISIT_IDENTIFIER' warning.

Hmm...yes, should not get a warning in this case...added to list.

Ter
From parrt at cs.usfca.edu  Sat Jun 24 11:32:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 24 11:31:40 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <200606241544.02633.e.papegaaij@student.utwente.nl>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<200606230912.18824.e.papegaaij@student.utwente.nl>
	<5177EEDB-AA0B-440E-BEED-61E57E070CBA@cs.usfca.edu>
	<200606241544.02633.e.papegaaij@student.utwente.nl>
Message-ID: <A733C3A8-D447-419F-B8A1-53982C80CE0B@cs.usfca.edu>


On Jun 24, 2006, at 6:44 AM, Emond Papegaaij wrote:
> time java -cp <cut> org.antlr.Tool tpl.g
> ANTLR Parser Generator   Early Access Version 3.0b1 (?)  1989-2006
> tpl.g:113:15: no lexer rule corresponding to token: VISIT_IDENTIFIER
>
> real    1m3.201s
> user    1m4.810s
> sys     0m0.616s

Try -Im 3 or -Im 2 and see if that helps...that limits the size of an  
internal stack.

Ter
From parrt at cs.usfca.edu  Sat Jun 24 18:00:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun 24 18:00:16 2006
Subject: [antlr-interest] I'm done with 3.0 beta 1 changes!
Message-ID: <2C109A61-300B-40A0-A995-6D46F6757DC4@cs.usfca.edu>

Howdy, a status report:  I have completed all of the features I need  
for 3.0 and all the bugs I planned on fixing for beta.  I will do a  
formal release this week with a new jar of ANTLRWorks that includes  
my new profiling stuff.  I have heavily augmented the profiling so it  
tracks all sorts of info for backtracking.  I have cleaned up the  
generated code for syntactic predicates as well.  Fixed great stuff  
in the analysis engine etc...

My plan is end of July doing full ANTLR v3.0 release.  Between now  
and then I need to release ST 2.3, fix bugs, get a v2 to v3 converter  
going, keep working on the LL(*) journal paper and get the ANTLRWorks  
paper finished.  I'll need to do some more examples and some doc  
updates too...

In August, I'll start working on the book/manual.

Ter
From mail at martin-probst.com  Sun Jun 25 23:10:49 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun Jun 25 23:10:55 2006
Subject: [antlr-interest] I'm done with 3.0 beta 1 changes!
In-Reply-To: <2C109A61-300B-40A0-A995-6D46F6757DC4@cs.usfca.edu>
References: <2C109A61-300B-40A0-A995-6D46F6757DC4@cs.usfca.edu>
Message-ID: <A3AE1EAC-FAAD-4F69-B1F1-288822BAD963@martin-probst.com>

Congrats, nice progress.

Will ANTLR 3.0 include the lexer contexts feature or is that post-3.0?

Martin

Am 25.06.2006 um 03:00 schrieb Terence Parr:

> Howdy, a status report:  I have completed all of the features I  
> need for 3.0 and all the bugs I planned on fixing for beta.  I will  
> do a formal release this week with a new jar of ANTLRWorks that  
> includes my new profiling stuff.  I have heavily augmented the  
> profiling so it tracks all sorts of info for backtracking.  I have  
> cleaned up the generated code for syntactic predicates as well.   
> Fixed great stuff in the analysis engine etc...
>
> My plan is end of July doing full ANTLR v3.0 release.  Between now  
> and then I need to release ST 2.3, fix bugs, get a v2 to v3  
> converter going, keep working on the LL(*) journal paper and get  
> the ANTLRWorks paper finished.  I'll need to do some more examples  
> and some doc updates too...
>
> In August, I'll start working on the book/manual.
>
> Ter
>

From e.papegaaij at student.utwente.nl  Sun Jun 25 23:38:15 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Sun Jun 25 23:38:19 2006
Subject: [antlr-interest] Re: [antlr-dev] Hitting method size limit
In-Reply-To: <A733C3A8-D447-419F-B8A1-53982C80CE0B@cs.usfca.edu>
References: <200606221516.49327.e.papegaaij@student.utwente.nl>
	<200606241544.02633.e.papegaaij@student.utwente.nl>
	<A733C3A8-D447-419F-B8A1-53982C80CE0B@cs.usfca.edu>
Message-ID: <200606260838.15652.e.papegaaij@student.utwente.nl>

On Saturday 24 June 2006 20:32, Terence Parr wrote:
> On Jun 24, 2006, at 6:44 AM, Emond Papegaaij wrote:
> > time java -cp <cut> org.antlr.Tool tpl.g
> > ANTLR Parser Generator   Early Access Version 3.0b1 (?)  1989-2006
> > tpl.g:113:15: no lexer rule corresponding to token: VISIT_IDENTIFIER
> >
> > real    1m3.201s
> > user    1m4.810s
> > sys     0m0.616s
>
> Try -Im 3 or -Im 2 and see if that helps...that limits the size of an
> internal stack.

With -Im 2 it is a few seconds faster, but not much. It still takes a minute.

Best regards
Emond Papegaaij
From mark.venbrux at gmail.com  Mon Jun 26 04:29:54 2006
From: mark.venbrux at gmail.com (Mark Venbrux)
Date: Mon Jun 26 04:29:57 2006
Subject: [antlr-interest] Antlr V3 string template creation
Message-ID: <fa6015a20606260429h4c089478p85bf9d52e96b38f8@mail.gmail.com>

Antlr Works! ... is wonderful. Would you call this a Domain Specific
Language for creation ... domain specific languages?

Anyway, I created the grammar below as a finger-exercise, and it works. It
was trial and error to get the Stringtemplate screated. So now I wonder: is
this the way to do it, or can it be done in a more elegant, concise way?

==============================================================
grammar RpcIdlParser;

options {
  output=template;
}

rpcinterface : 'interface' name '{' (s+=struct)* (m+=method)* '}'
    -> rpcinterface(name={$name.text}, structs={toTemplates($s)},
methods={toTemplates($m)})
    ;
struct: 'struct' name '{' (v+=variable)+ '}'
    -> struct(name={$name.text}, variables={toTemplates($v)})
    ;
variable: type name ';'
    -> variable(name={$name.text}, type={$type.text})
    ;
parameter: direction type name
    -> parameter(name={$name.text}, direction={$direction.text},
type={$type.text})
    ;
direction: ('in' | 'out' | 'inout')
    ;
method  : name '(' p+=parameter (',' p+=parameter)* ')' ';'
    -> method(name={$name.text}, parameters={toTemplates($p)})
    ;
type    : 'string' | 'int' | ID
        ;
name    : id=ID
    ;

ID    :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060626/ee6d7bbc/attachment.html
From wiggjd at lsbu.ac.uk  Mon Jun 26 07:41:25 2006
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Mon Jun 26 07:39:18 2006
Subject: [antlr-interest] C++ Function to display AST?
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A01085AD6@CSD-EXBE-VS2.lsbu.ac.uk>

Please could someone point me to an implementation of a C++ function
to display (screen and/or text) an AST (created by a C++ version of
TreeParser)?
 
Thanks,
 
David.
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060626/34de20aa/attachment.html
From paul_leaman at hotmail.com  Mon Jun 26 07:58:11 2006
From: paul_leaman at hotmail.com (Paul Leaman)
Date: Mon Jun 26 07:58:15 2006
Subject: [antlr-interest] Stack fault in destructor of ASTRef. 
Message-ID: <BAY102-F224953C22DC41B37BDF76D92790@phx.gbl>


Apologies if this is a known problem. I've been trying to use 2.7.5 with the 
SqlSQL2 grammar and have been getting a stack fault in the destructor of 
ASTRef.

It looks like ASTRefs can point to themselves. I haven't gone in deep enough 
to work out why. The following change seems to fix this:

ASTRef::~ASTRef()
{
	if ( ptr->ref != this )
	{
		delete ptr;
	}
}

This also happens in 2.7.6.

Regards,


Paul


From madcapmaggie at yahoo.com  Mon Jun 26 08:19:22 2006
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon Jun 26 08:19:25 2006
Subject: [antlr-interest] C++ Function to display AST?
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A01085AD6@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <20060626151922.35006.qmail@web60024.mail.yahoo.com>

I'm sure you'll get many answers to this,
but here is the function I use
(note you need the include files, "using namespace
std", etc...

Peggy
/* *****************************************/
void walkTree(RefAST  t, int depth)
{
  if (!t)
    return;

  int counter = t->getNumberOfChildren();
  if (depth > 0)
    {
      for (int i = 0; i < depth; i++)
	cout << " " ;
    }
  string text = t->getText();
  int type = t->getType();

  cout << " TOKEN " << t->getText()  << " at depth "
<< depth 
       << " of type " << t->getType() ;
  cout  << " and number of children " << counter <<
endl;

  if (t->getFirstChild())
    walkTree(t->getFirstChild(), depth+1);

  if (t->getNextSibling())
    walkTree(t->getNextSibling(), depth);

}



--- "Wigg, J D" <wiggjd@lsbu.ac.uk> wrote:

> Please could someone point me to an implementation
> of a C++ function
> to display (screen and/or text) an AST (created by a
> C++ version of
> TreeParser)?
>  
> Thanks,
>  
> David.
>  
>  
> 

From zhixueyong at hotmail.com  Mon Jun 26 08:23:01 2006
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Mon Jun 26 08:23:55 2006
Subject: [antlr-interest] Re: C++ Function to display AST?
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A01085AD6@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A01085AD6@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <e7ou4n$gbb$1@sea.gmane.org>

Wigg, J D wrote:
> Please could someone point me to an implementation of a C++ function to 
> display (screen and/or text) an AST (created by a C++ version of 
> TreeParser)?
>  
> Thanks,
>  
> David.
>  
>  

There is a 'toStringList()' function in the AST class. It generates a
LISP like string representing the AST. I think this function is in the
C++ implementation as well.

-- 
Xue Yong Zhi
http://seclib.blogspot.com

From parrt at cs.usfca.edu  Mon Jun 26 09:38:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 26 09:37:29 2006
Subject: [antlr-interest] I'm done with 3.0 beta 1 changes!
In-Reply-To: <A3AE1EAC-FAAD-4F69-B1F1-288822BAD963@martin-probst.com>
References: <2C109A61-300B-40A0-A995-6D46F6757DC4@cs.usfca.edu>
	<A3AE1EAC-FAAD-4F69-B1F1-288822BAD963@martin-probst.com>
Message-ID: <28DF4D58-D874-4BD0-85AF-F29CF434720D@cs.usfca.edu>


On Jun 25, 2006, at 11:10 PM, Martin Probst wrote:

> Congrats, nice progress.
>
> Will ANTLR 3.0 include the lexer contexts feature or is that post-3.0?

That will be post 3.0 final.  I've called a feature freeze unless  
some is trivial and needed for 3.0. :)  Between now and 3.0 final I  
have lots of other work to do ;)

Ter

From parrt at cs.usfca.edu  Mon Jun 26 09:39:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 26 09:38:49 2006
Subject: [antlr-interest] Antlr V3 string template creation
In-Reply-To: <fa6015a20606260429h4c089478p85bf9d52e96b38f8@mail.gmail.com>
References: <fa6015a20606260429h4c089478p85bf9d52e96b38f8@mail.gmail.com>
Message-ID: <CB830769-630A-4B7C-9C0F-D2FA01FED000@cs.usfca.edu>


On Jun 26, 2006, at 4:29 AM, Mark Venbrux wrote:

> Antlr Works! ... is wonderful. Would you call this a Domain  
> Specific Language for creation ... domain specific languages?

:)  More of a GUI dev tool, but sure :)

> Anyway, I created the grammar below as a finger-exercise, and it  
> works. It was trial and error to get the Stringtemplate screated.  
> So now I wonder: is this the way to do it, or can it be done in a  
> more elegant, concise way?

The grammar looks correct.  Also, you can do name={$name} instead of  
name={$name.text} and then in templates assume a Token is coming in  
and do <name.text> :)

Ter
From Ari.Steinberg at EMBARCADERO.COM  Mon Jun 26 13:24:46 2006
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Mon Jun 26 13:25:09 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
Message-ID: <715057EB65FC7E47923FE408F290ADFD015951AF@ettoma01.embarcadero.com>

In my antlr V2 grammar, I have this

 

 

Ari Steinberg
Engineer Extraordinaire @
Embarcadero Technologies
416-593-1585 x231
ari.steinberg@embarcadero.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060626/0a49f2c2/attachment.html
From Ari.Steinberg at EMBARCADERO.COM  Mon Jun 26 13:27:58 2006
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Mon Jun 26 13:28:29 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
Message-ID: <715057EB65FC7E47923FE408F290ADFD015951B0@ettoma01.embarcadero.com>

In my antlr V2 grammar, I have this

 

value:

            ( t:~( STATEMENT_END ) { #t.setType( VALUE ); } )+

;

 

When I try to build this using ANTLR works ea9 I get the following
error: 

 

Cannot generate the grammar because:  0:0 syntax error: assign.types:
<AST>:62:7: unexpected AST node: ~

 

My intent is to match anything but STATEMENT_END.

 

Thanks,

 

Ari

  _____  

From: Ari Steinberg 
Sent: Monday, June 26, 2006 4:25 PM
To: 'antlr-interest@antlr.org'
Subject: ANTLR V3 parser syntax for ~

 

In my antlr V2 grammar, I have this

 

 

Ari Steinberg
Engineer Extraordinaire @
Embarcadero Technologies
416-593-1585 x231
ari.steinberg@embarcadero.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060626/44f1ddff/attachment.html
From parrt at cs.usfca.edu  Mon Jun 26 13:57:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 26 13:56:29 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
In-Reply-To: <715057EB65FC7E47923FE408F290ADFD015951B0@ettoma01.embarcadero.com>
References: <715057EB65FC7E47923FE408F290ADFD015951B0@ettoma01.embarcadero.com>
Message-ID: <01204181-ABB7-459E-A5AF-4FE07672E285@cs.usfca.edu>

Hi Ari,

Try ( t=~STATEMENT_END {$t.setType(VALUE);} )+

Ter

On Jun 26, 2006, at 1:27 PM, Ari Steinberg wrote:

> In my antlr V2 grammar, I have this
>
>
>
> value:
>
>             ( t:~( STATEMENT_END ) { #t.setType( VALUE ); } )+
>
> ;
>
>
>
> When I try to build this using ANTLR works ea9 I get the following  
> error:
>
>
>
> Cannot generate the grammar because:  0:0 syntax error:  
> assign.types: <AST>:62:7: unexpected AST node: ~
>
>
>
> My intent is to match anything but STATEMENT_END.
>
>
>
> Thanks,
>
>
>
> Ari
>
> From: Ari Steinberg
> Sent: Monday, June 26, 2006 4:25 PM
> To: 'antlr-interest@antlr.org'
> Subject: ANTLR V3 parser syntax for ~
>
>
>
> In my antlr V2 grammar, I have this
>
>
>
>
>
> Ari Steinberg
> Engineer Extraordinaire @
> Embarcadero Technologies
> 416-593-1585 x231
> ari.steinberg@embarcadero.com
>
>
>
>

From Ari.Steinberg at EMBARCADERO.COM  Mon Jun 26 14:22:11 2006
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Mon Jun 26 14:22:33 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
Message-ID: <715057EB65FC7E47923FE408F290ADFD015951B6@ettoma01.embarcadero.com>

No dice, it's still not one bit happy.  Here's a copy of what I've got
so far, maybe you'll see something I'm not.

Cheers,
Ari

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: Monday, June 26, 2006 4:57 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR V3 parser syntax for ~

Hi Ari,

Try ( t=~STATEMENT_END {$t.setType(VALUE);} )+

Ter

On Jun 26, 2006, at 1:27 PM, Ari Steinberg wrote:

> In my antlr V2 grammar, I have this
>
>
>
> value:
>
>             ( t:~( STATEMENT_END ) { #t.setType( VALUE ); } )+
>
> ;
>
>
>
> When I try to build this using ANTLR works ea9 I get the following  
> error:
>
>
>
> Cannot generate the grammar because:  0:0 syntax error:  
> assign.types: <AST>:62:7: unexpected AST node: ~
>
>
>
> My intent is to match anything but STATEMENT_END.
>
>
>
> Thanks,
>
>
>
> Ari
>
> From: Ari Steinberg
> Sent: Monday, June 26, 2006 4:25 PM
> To: 'antlr-interest@antlr.org'
> Subject: ANTLR V3 parser syntax for ~
>
>
>
> In my antlr V2 grammar, I have this
>
>
>
>
>
> Ari Steinberg
> Engineer Extraordinaire @
> Embarcadero Technologies
> 416-593-1585 x231
>
>
>


-------------- next part --------------
A non-text attachment was scrubbed...
Name: inifile.g
Type: application/octet-stream
Size: 1666 bytes
Desc: inifile.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060626/0cb6197e/inifile.obj
From parrt at cs.usfca.edu  Mon Jun 26 16:18:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 26 16:17:48 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
In-Reply-To: <715057EB65FC7E47923FE408F290ADFD015951B6@ettoma01.embarcadero.com>
References: <715057EB65FC7E47923FE408F290ADFD015951B6@ettoma01.embarcadero.com>
Message-ID: <48AD95E5-CAD7-4DE3-AF03-80DA45D4A0AF@cs.usfca.edu>

On Jun 26, 2006, at 2:22 PM, Ari Steinberg wrote:

> No dice, it's still not one bit happy.  Here's a copy of what I've got
> so far, maybe you'll see something I'm not.

Crap...you found some the few things on the todo list.  Bangs on  
wildcard and sets....damn!  Probably easy to fix, but is it ok if I  
go out with beta and fix for 3.0 final?

For the value rlue, try this for now:

value:
         ( ~STATEMENT_END {$value.setType(VALUE);} )+
;

Ter
From craymer at warpiv.com  Mon Jun 26 17:06:38 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun 26 17:06:43 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
In-Reply-To: <48AD95E5-CAD7-4DE3-AF03-80DA45D4A0AF@cs.usfca.edu>
Message-ID: <000c01c6997d$90ad8350$6402a8c0@Fafnir>

Ter

The problem is in codegen.g; antlr.g builds a usable tree for elements, but
codegen.g only recognizes ast_suffixes for "atom".

That reminds me:  someone a few weeks back posted a note saying that they
had a token sequence generator for verifying compatibility between manually
generated tree grammars and the parse grammar that generates the trees.
Perhaps it would be a good idea to apply that to the antlr 3 tree grammars;
the grammars are still not strong on consistency.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Monday, June 26, 2006 4:19 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] ANTLR V3 parser syntax for ~
> 
> On Jun 26, 2006, at 2:22 PM, Ari Steinberg wrote:
> 
> > No dice, it's still not one bit happy.  Here's a copy of what I've got
> > so far, maybe you'll see something I'm not.
> 
> Crap...you found some the few things on the todo list.  Bangs on
> wildcard and sets....damn!  Probably easy to fix, but is it ok if I
> go out with beta and fix for 3.0 final?
> 
> For the value rlue, try this for now:
> 
> value:
>          ( ~STATEMENT_END {$value.setType(VALUE);} )+
> ;
> 
> Ter

From frankhileman at yahoo.com  Mon Jun 26 18:05:40 2006
From: frankhileman at yahoo.com (Frank Hileman)
Date: Mon Jun 26 18:05:43 2006
Subject: [antlr-interest] make TokenTypes class private?
Message-ID: <20060627010540.69401.qmail@web50705.mail.yahoo.com>

Hi,

I am using antlr v2 with the C# generator. Is there a
way to make the generated TokenTypes class private? I
am trying to hide it in a library.

Thanks,
Frank

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From mathew at yeates.tv  Mon Jun 26 19:38:39 2006
From: mathew at yeates.tv (Mathew Yeates)
Date: Mon Jun 26 19:38:40 2006
Subject: [antlr-interest] yacc 2 atlr
Message-ID: <44A09A2F.8020307@yeates.tv>

I have yacc and lex files for a Matlab clone. Is there an article 
somewhere that describes how to translate these into a grammar?

Mathew
From craymer at warpiv.com  Mon Jun 26 20:12:27 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun 26 20:12:32 2006
Subject: [antlr-interest] yacc 2 atlr
In-Reply-To: <44A09A2F.8020307@yeates.tv>
Message-ID: <002101c69997$85b215f0$6402a8c0@Fafnir>


Mathew--

I can't help with the lex files; those you will probably have to do by hand,
but that should not be difficult--Matlab is pretty regular and should not
have a complex lexer.  (It would not be that difficult to write a lex to
ANTLR translator; I just haven't done that.)  I can help with yacc; I have a
bison/yacc to antlr translator that I put together to convert an Ada
grammar; I'll post it to the ANTLR site a little later this
evening--somehow, I think that I should put a README file together first.

You will find that the converted grammars tend to have quite a bit of left
recursion that results from BNF limitations (no ()* or ()+).  When you run
them through ANTLR you will get complaints about left recursion; refactor
the offending rules to use loops and you should converge on a working
grammar quickly.  The convention seems to be to name such rules with an _s
so that you see definitions like

foo_s :  foo_s foo ;

which should be rewritten as

foo_s : (foo)+ ;

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Mathew Yeates
> Sent: Monday, June 26, 2006 7:39 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] yacc 2 atlr
> 
> I have yacc and lex files for a Matlab clone. Is there an article
> somewhere that describes how to translate these into a grammar?
> 
> Mathew

From craymer at warpiv.com  Mon Jun 26 20:20:28 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun 26 20:20:33 2006
Subject: [antlr-interest] sentences of a grammar
In-Reply-To: <5D9A201EDE2A834BA246B28B31FA3F680378A022@MTNMAIL.mtn.co.za>
Message-ID: <002201c69998$a53069d0$6402a8c0@Fafnir>

Gerrie--

Could you post your work to the antlr.org site?  From the response I got
from mentioning your post, I believe that the lack of response to your
original message was an oversight.

--Loring


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Gerrie Myburg [ MTN - Innovation Centre ]
> Sent: Friday, June 09, 2006 2:24 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] sentences of a grammar
> 
> I write some code that will take an antlr grammar definition, create a
> graph from the grammar and will try to generate all possible sentences
> from the grammar. The following rules are used to avoid infinite length
> sentences.
> 
> (a)* is rewritten as ( |a|aa| ... ) to a max limit
> (a)+ is rewritten as ( a|aa| ... ) to a max limit
> (a)? is rewritten as ( |a)
> 
> Recursive loops are avoided by entering the loop once and once only.
> Infinite recursion is detected and reported.
> 
> The sentences are created by finding all possible paths in the grammar
> graph. Backtracking is used in the graph at every point in the path
> where a '|' is encountered.
> 
> Token references are resolved at the moment by referring to a map of
> token ref definitions. If no definition is supplied then the token ref
> string is used instead.
> 
> The code is meant to be used on a grammar that has already been passed
> by the antlr compiler.
> 
> I wrote the code to test the tree parser of a sql compiler. While
> testing the code I found that the number of sentences generated for some
> of the sql rules is enormous. The number of sentences can run into the
> millions for most rules. The antlr grammar in turn yields about 8000
> sentences.
> 
> The only sensible way of using the code is to generate a sentence then
> feed it to the destination compiler directly instead of writing out a
> file.
> 
> The sentences are not necessarily semantically correct at the moment. In
> fact I am sure that it is not the case.
> 
> Does anyone want me to upload the code to the antlr website?
> 
> 
> NOTE: This e-mail message is subject to the MTN Group disclaimer see
> http://www.mtn.co.za/disclaimer


From craymer at warpiv.com  Mon Jun 26 21:08:12 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon Jun 26 21:08:18 2006
Subject: [antlr-interest] bison/yacc to antlr; antlr pretty printer.
In-Reply-To: <44A09A2F.8020307@yeates.tv>
Message-ID: <002301c6999f$5040c670$6402a8c0@Fafnir>

All--

I've uploaded my bison to antlr grammar translator to antlr.org.  I have
also posted an update to my "pretty printer" (source to source antlr grammar
translator) that fixes a couple of minor bugs that Benjamin Zeiss found
while incorporating it into ANTLREclipse.

--Loring

From jose.ventura.roda at gmail.com  Tue Jun 27 01:19:29 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 01:19:33 2006
Subject: [antlr-interest] Tree construction in Antlr 3
Message-ID: <e39abda10606270119xf470a72s87a6b1c2280e5659@mail.gmail.com>

Hi all,

I apologize if this in antlr 3 help, but I haven't found.

I have this rule

         include : 'include' 'var' ID codigo -> ^('include' 'var' ID
codigo);

This rule create the tree:
 level 1-->'include'
level 2-------->'var'
level 2-------->ID
level 2-------->codigo

I want to construct this tree
level 1-->'include'
level 2-------->'var'
level 3---------------->ID
level 3---------------->codigo

If I divide this rule in two I can to make the tree how I want
         include: 'include'^^ var;
         var: 'var'^^ ID codigo;

But, It's possible to make this in one sentence with the form *-> ^(...)*
?


Thanks in advance.
Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/fce804f7/attachment.html
From jose.ventura.roda at gmail.com  Tue Jun 27 02:14:03 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 02:14:06 2006
Subject: [antlr-interest] Can it be a bug in antlr 3?
Message-ID: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>

I don't know if this is a bug or a error in my grammar. This occur in a
debug session of antlrworks with these version tools
  ANTLRWorks 1.0ea9 ANTLR 3.0ea10 StringTemplate 2.3b7 XJLibrary 1.2.6 Java
1.5.0_02 (Sun Microsystems Inc.)

With this grammar


grammar Transformer;
options {output=AST;}

tokens {PROGRAMA;}

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
sentencia: setDir;
setDir : 'set' 'dir' LITERAL ;
LITERAL : '"'(options {greedy=false;}:.)* '"';



It generate this error

[11:05:51] C:\Documents and Settings\JVR3651A\My
Documents\java\Transformer\Transformer.java:65: ';' expected
[11:05:51]         List list_-1=new ArrayList();
[11:05:51]                   ^

because the java code generated is wrong

[...]

        List list_sentencia=new ArrayList();
        List *list_-1*=new ArrayList();
        List list_6=new ArrayList();
        Object char_literal2_tree=null;
        Object EOF3_tree=null;
[...]

It's a bug?

thank's in advance.

Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/190d90fd/attachment.html
From jose.ventura.roda at gmail.com  Tue Jun 27 02:24:49 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 02:24:51 2006
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
	<OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
Message-ID: <e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>

No, this is the error detected by java compiler.

I think  "list_-1" is a bug in the java code generated by antlr, or an error
in my grammar ;-)

---------- Forwarded message ----------
From: Michiel Vermandel <Michiel_Vermandel@axi.be>
Date: Jun 27, 2006 11:20 AM
Subject: Re: [antlr-interest] Can it be a bug in antlr 3?
To: Jose Ventura <jose.ventura.roda@gmail.com>



Is "*list_-1*" a valid variable name?




  *"Jose Ventura" <jose.ventura.roda@gmail.com>*
Sent by: antlr-interest-bounces@antlr.org

27/06/2006 11:14
   To
antlr-interest@antlr.org  cc
  Subject
[antlr-interest] Can it be a bug in antlr 3?




I don't know if this is a bug or a error in my grammar. This occur in a
debug session of antlrworks with these version tools  ANTLRWorks 1.0ea9
ANTLR 3.0ea10 StringTemplate 2.3b7 XJLibrary 1.2.6 Java 1.5.0_02 (Sun
Microsystems Inc.)

With this grammar


grammar Transformer;
options {output=AST;}

tokens {PROGRAMA;}

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
sentencia: setDir;
setDir : 'set' 'dir' LITERAL ;
LITERAL : '"'(options {greedy=false;}:.)* '"';



It generate this error

[11:05:51] C:\Documents and Settings\JVR3651A\My
Documents\java\Transformer\Transformer.java:65: ';' expected
[11:05:51]         List list_-1=new ArrayList();
[11:05:51]                   ^

because the java code generated is wrong

[...]

        List list_sentencia=new ArrayList();
       List *list_-1*=new ArrayList();
       List list_6=new ArrayList();
       Object char_literal2_tree=null;
       Object EOF3_tree=null;
[...]

It's a bug?

thank's in advance.

Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/14176499/attachment.html
From jose.ventura.roda at gmail.com  Tue Jun 27 02:37:58 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 02:38:01 2006
Subject: [antlr-interest] Fwd: Tree construction in Antlr 3
In-Reply-To: <e39abda10606270119xf470a72s87a6b1c2280e5659@mail.gmail.com>
References: <e39abda10606270119xf470a72s87a6b1c2280e5659@mail.gmail.com>
Message-ID: <e39abda10606270237y2a0adaf0la89019ab213eeb91@mail.gmail.com>

Sorry, it's logic, the rule is

'include' 'var' ID CODIGO -> ^('include' ^('var' ID CODIGO))

Regards
Jos? Ventura

---------- Forwarded message ----------
From: Jose Ventura <jose.ventura.roda@gmail.com>
Date: Jun 27, 2006 10:19 AM
Subject: Tree construction in Antlr 3
To: antlr-interest@antlr.org


 Hi all,

I apologize if this in antlr 3 help, but I haven't found.

I have this rule

         include : 'include' 'var' ID codigo -> ^('include' 'var' ID
codigo);

This rule create the tree:
 level 1-->'include'
level 2-------->'var'
level 2-------->ID
level 2-------->codigo

I want to construct this tree
level 1-->'include'
level 2-------->'var'
level 3---------------->ID
level 3---------------->codigo

If I divide this rule in two I can to make the tree how I want
         include: 'include'^^ var;
         var: 'var'^^ ID codigo;

But, It's possible to make this in one sentence with the form *-> ^(...)*
?


Thanks in advance.
Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/4e76d531/attachment-0001.html
From jose.ventura.roda at gmail.com  Tue Jun 27 03:01:48 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 03:01:50 2006
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
	<OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
	<e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>
Message-ID: <e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>

I think the problem is the EOF token

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+); //this's not ok

programa: (sentencia ';')+ -> ^(PROGRAMA sentencia+); //this's ok

---------- Forwarded message ----------
From: Jose Ventura <jose.ventura.roda@gmail.com>
Date: Jun 27, 2006 11:24 AM
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
To: antlr-interest@antlr.org



No, this is the error detected by java compiler.

I think  "list_-1" is a bug in the java code generated by antlr, or an error
in my grammar ;-)

---------- Forwarded message ----------
From: Michiel Vermandel <Michiel_Vermandel@axi.be>
Date: Jun 27, 2006 11:20 AM
Subject: Re: [antlr-interest] Can it be a bug in antlr 3?
To: Jose Ventura <jose.ventura.roda@gmail.com>



Is "*list_-1*" a valid variable name?




  *"Jose Ventura" <jose.ventura.roda@gmail.com >*
Sent by: antlr-interest-bounces@antlr.org

27/06/2006 11:14
   To
antlr-interest@antlr.org  cc
  Subject
[antlr-interest] Can it be a bug in antlr 3?




I don't know if this is a bug or a error in my grammar. This occur in a
debug session of antlrworks with these version tools  ANTLRWorks 1.0ea9
ANTLR 3.0ea10 StringTemplate 2.3b7 XJLibrary 1.2.6 Java 1.5.0_02 (Sun
Microsystems Inc.)

With this grammar


grammar Transformer;
options {output=AST;}

tokens {PROGRAMA;}

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
sentencia: setDir;
setDir : 'set' 'dir' LITERAL ;
LITERAL : '"'(options {greedy=false;}:.)* '"';



It generate this error

[11:05:51] C:\Documents and Settings\JVR3651A\My
Documents\java\Transformer\Transformer.java:65: ';' expected
[11:05:51]         List list_-1=new ArrayList();
[11:05:51]                   ^

because the java code generated is wrong

[...]

        List list_sentencia=new ArrayList();
       List *list_-1*=new ArrayList();
       List list_6=new ArrayList();
       Object char_literal2_tree=null;
       Object EOF3_tree=null;
[...]

It's a bug?

thank's in advance.

Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/780ff6a1/attachment.html
From jose.ventura.roda at gmail.com  Tue Jun 27 03:07:25 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue Jun 27 03:07:28 2006
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
	<OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
	<e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>
	<e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>
Message-ID: <e39abda10606270307r35bc3521ib6826bb9c85ef05c@mail.gmail.com>

I think the problem is the EOF token, each token of rule generate a list
suffix with int value. In case of EOF the list have the name list_-1,
because the value of EOF token is -1.
It's possible?
thank's
Jos? Ventura

---------- Forwarded message ----------
From: Jose Ventura <jose.ventura.roda@gmail.com>
Date: Jun 27, 2006 12:01 PM
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
To: antlr-interest@antlr.org


 I think the problem is the EOF token

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+); //this's not ok

programa: (sentencia ';')+ -> ^(PROGRAMA sentencia+); //this's ok


---------- Forwarded message ----------
From: Jose Ventura < jose.ventura.roda@gmail.com>
Date: Jun 27, 2006 11:24 AM
Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
To: antlr-interest@antlr.org



No, this is the error detected by java compiler.

I think  "list_-1" is a bug in the java code generated by antlr, or an error
in my grammar ;-)

---------- Forwarded message ----------
From: Michiel Vermandel < Michiel_Vermandel@axi.be>
Date: Jun 27, 2006 11:20 AM
Subject: Re: [antlr-interest] Can it be a bug in antlr 3?
To: Jose Ventura < jose.ventura.roda@gmail.com>



Is "*list_-1*" a valid variable name?




  *"Jose Ventura" <jose.ventura.roda@gmail.com >*
Sent by: antlr-interest-bounces@antlr.org

27/06/2006 11:14
   To
antlr-interest@antlr.org  cc
  Subject
[antlr-interest] Can it be a bug in antlr 3?




I don't know if this is a bug or a error in my grammar. This occur in a
debug session of antlrworks with these version tools  ANTLRWorks 1.0ea9
ANTLR 3.0ea10 StringTemplate 2.3b7 XJLibrary 1.2.6 Java 1.5.0_02 (Sun
Microsystems Inc.)

With this grammar


grammar Transformer;
options {output=AST;}

tokens {PROGRAMA;}

programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
sentencia: setDir;
setDir : 'set' 'dir' LITERAL ;
LITERAL : '"'(options {greedy=false;}:.)* '"';



It generate this error

[11:05:51] C:\Documents and Settings\JVR3651A\My
Documents\java\Transformer\Transformer.java:65: ';' expected
[11:05:51]         List list_-1=new ArrayList();
[11:05:51]                   ^

because the java code generated is wrong

[...]

        List list_sentencia=new ArrayList();
       List *list_-1*=new ArrayList();
       List list_6=new ArrayList();
       Object char_literal2_tree=null;
       Object EOF3_tree=null;
[...]

It's a bug?

thank's in advance.

Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/39618c15/attachment.html
From oliver.zeigermann at gmail.com  Tue Jun 27 06:56:57 2006
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue Jun 27 06:57:02 2006
Subject: [antlr-interest] parsing a mix of structured and free-form text
In-Reply-To: <4497B54F.6020902@milica.com.au>
References: <4497B54F.6020902@milica.com.au>
Message-ID: <9da4f4520606270656w4e4a3a26nb4a83e05996e9b20@mail.gmail.com>

Hi!

Your problem sounds like the standard problem you have with comments.
You simply want to skip them. Usually you do this using the lexer.

Isn't that possible? Do you need the parser stage to really determine
which parts you can ignore and which not? If so are you really sure
this is the case?

Oliver

2006/6/20, Milan Durovic <milan@milica.com.au>:
> Hi,
>
> I am trying to use ANTLR to parse files that are mostly structured
> (being generated by another program), but here and there have some text
> that's nearly free form, as it is basically user-input. The place where
> this unstructured text appears within the structured varies, but is
> defined by the grammar.
>
> Ideally, what I would like to do, at the point in parsing when I know
> that unstructured text follows, is to simply read enough characters
> (these are fix-width fields, so I know how many I need to read), so that
> parsing of the structured text can continue.
>
> The problem here are look-ahead tokens, where Lexer goes a bit ahead of
> the parser and chews up input characters in advance.
>
> The places where this unstructured text appears are such that there's no
> need to use look-ahead tokens to decide which grammar rule to apply.
>
> I used ANTLR for some simpler things. I also used Bison and Flex before
> and used Flex states to control grabbing characters when places with
> unstructured text are approached. But I'm not that familiar with ANTLR
> to know how to do it, or whether it's possible at all.
>
> I don't know if it would be possible to get the text of look-ahead
> tokens, discard them, and force lexer to continue from a different
> position in the input stream.
>
> Any help/hints/ideas are very much welcome.
>
> Milan
>
From Ari.Steinberg at EMBARCADERO.COM  Tue Jun 27 07:30:01 2006
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Tue Jun 27 07:30:23 2006
Subject: [antlr-interest] ANTLR V3 parser syntax for ~
Message-ID: <715057EB65FC7E47923FE408F290ADFD8ADB59@ettoma01.embarcadero.com>

I can wait for 3.0 final, this stuff isn't going to be released for a
little while.

Cheers,
Ari

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: Monday, June 26, 2006 7:19 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR V3 parser syntax for ~

On Jun 26, 2006, at 2:22 PM, Ari Steinberg wrote:

> No dice, it's still not one bit happy.  Here's a copy of what I've got
> so far, maybe you'll see something I'm not.

Crap...you found some the few things on the todo list.  Bangs on  
wildcard and sets....damn!  Probably easy to fix, but is it ok if I  
go out with beta and fix for 3.0 final?

For the value rlue, try this for now:

value:
         ( ~STATEMENT_END {$value.setType(VALUE);} )+
;

Ter


From jsamort at gmail.com  Tue Jun 27 10:49:59 2006
From: jsamort at gmail.com (Scott Amort)
Date: Tue Jun 27 10:50:20 2006
Subject: [antlr-interest] Patches for ANTLR-2.7.6
Message-ID: <44A16FC7.6020800@gmail.com>

Hi All,

I've been using ANTLR 2.7.6 on my gentoo linux system, and have proposed
a new ebuild (for anyone using gentoo, the link is:
http://bugs.gentoo.org/show_bug.cgi?id=138236).  While putting together
this ebuild, I corrected a few problems with the C# target configuration
(I believe this has been mentioned on this list before), and added an
antlr.pc file for use with C++ development and pkg-config (as a better
option to the already included antlr-config).  I thought I would offer
these patches here as well, in case you might find them useful for the
upcoming 2.7.7 release.

Best,
Scott
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr-2.7.6-csharp.patch
Type: text/x-patch
Size: 2961 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/1181664a/antlr-2.7.6-csharp-0001.bin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr-2.7.6-pkgconfig.patch
Type: text/x-patch
Size: 3621 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060627/1181664a/antlr-2.7.6-pkgconfig-0001.bin
From TomL at avokia.com  Tue Jun 27 15:46:10 2006
From: TomL at avokia.com (Tom Liu)
Date: Tue Jun 27 15:51:33 2006
Subject: [antlr-interest] questions basic or difficult ?
Message-ID: <79B91C20E7B19A4B85A812C3C554F19D019ECF90@cx41.800onemail.com>


Hi, All

I am testing to use Antlr 2.7.6  to parser sybase stored procedures,
Does anyone have the .g file for stored procedure or sql statement?

Considering the following script as a typical input, 
Test.sql
--------------------------------------
Drop table test 
Go
Drop procedure testsp
Create procedure testsp
as 
   drop table test
   create table test(id int not null, str varchar(20))
go
Create procedure testsp1
as 
begin
   insert into test values(1,'test')
   update test set str='another' 
     where id=(select count(*) from test) and str = 'test'
   select * from test 
end
--------------------------------------
You may notice that there is no last "go" at the end of the file,
And there is nothing that can be used as the flag for the end of a
statement
(actually all the script can be written in one line)

How do I define the rules if I want to generate a xml like following?
Test.sql.xml
--------------------------------------
<root>
<GOBLOCK><STATEMENT>Drop table test</STATEMENT></GOBLOCK>
<GOBLOCK>
   <STATEMENT>Drop procedure testsp</STATEMENT> 
   <STATEMENT>Create procedure testsp as 
   	<STATEMENT>drop table test</STATEMENT>
   	<STATEMENT>create table test(id int not null, str varchar[20])

   	</STATEMENT>   
   </STATEMENT>
</GOBLOCK>
<GOBLOCK>
   <STATEMENT>Create procedure testsp1 as begin
       <STATEMENT>insert into test values(1,'test')</STATEMENT>
       <STATEMENT>update test set str='another' 
              where id=(select count(*) from test) and str = 'test'
       </STATEMENT>
       <STATEMENT>select * from test</STATEMENT>
       end
    </STATEMENT>
</GOBLOCK>
</root>
--------------------------------------

Is this some difficult?

Could anyone give me suggestions or example about this,

Thanks a lot,

Tom

From parrt at cs.usfca.edu  Tue Jun 27 15:59:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 27 15:58:31 2006
Subject: [antlr-interest] ANTLR 3.0b1 is out!
Message-ID: <5D7A4E62-4312-4655-AF9C-9DD16CD95B15@cs.usfca.edu>

Howdy,

Get it while it's hot! ;)  Linked to from main download page now:

http://www.antlr.org/download.html

Changes/improvements are many:

http://www.antlr.org/v3/README.txt

A new version of ANTLRWorks containing this beta will be up soon.

A tweaked version of Mantra language example is also posted.

http://www.linguamantra.org/

Examples updated:

http://www.antlr.org/download/examples-v3.tar.gz

Whew!  Now I work on a v2 to v3 converter (won't do actions though).

Terence
From tbrandonau at gmail.com  Wed Jun 28 00:15:14 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed Jun 28 00:15:17 2006
Subject: [antlr-interest] 3.0 resetStateNumbersToBeContiguous error
Message-ID: <ebc876d70606280015g68d7ef65ycf12aa512eecd636@mail.gmail.com>

I have been trying to get a grammar for C going in Antlr 3 but keep running
errors in resetStateNumbersToBeContiguous (max state num != max renumbered
state) for various rules. I have looked and there does not seem to be any
left recursion in the rule, I'm pretty sure all possible recursive paths
include a terminal. What exactly causes this error? Are there any hints for
diagnosing the cause of the error? As analysis has failed it looks like most
of the really nice information you'd get from Antlr to diagnose such issues
is unavailable. 3.0b1 adds a nicer error message but does not seem to
provide much more information. I have managed to somewhat chart the issues
but largely through trial and error, removing rules I suspect might cause
troubles and rewriting the grammar a number of times in different ways and
seeing where it falls apart. Are there any better methods?

I understand you can set a fixed k and resolve the issue that way but this
seems like a non-optimal solution as I think some of the ambiguities should
be resolvable without backtracking (especially the main statement rule which
currently requires fixed lookahead + a predicate to distinguish varDef and
funcDef rules).

Also, what effect does setting a fixed lookahead on one rule have on the
analysis of calling rules?

And, specifically, has anyone looked at doing a C grammar in Antlr 3?

Oh yeah, and wow, Antlr 3 rocks.

Tom.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060628/94f67987/attachment.html
From jose.ventura.roda at gmail.com  Wed Jun 28 01:42:50 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Wed Jun 28 01:42:55 2006
Subject: [antlr-interest] Wrong generated code (Version 3.01b)
Message-ID: <e39abda10606280142n2afae13ap4068023c80803f1a@mail.gmail.com>

Over all, I want to thank for Terence for new version of antlr

I apologize if this is a founded bug.

With the following grammar

*grammar a;*

*options {output=AST;}
tokens {PARMS;}*

*modulo
 : 'modulo' ID ('(' parms+ ')')? -> ^('modulo' ID ^(PARMS parms+)?)
 ;
parms : '#'|ID;
ID : ('a'..'z' | 'A'..'Z')*;
WS : (' ' | '\t' | '\n' | '\r')+ {channel=99;} ;
*

The compiler result is

*a.java:150: cannot find symbol
symbol  : variable n_1
location: class a
                if ( n_1 > 1 ) throw new RuntimeException(" list has > 1
elements");
                     ^
a.java:151: cannot find symbol
symbol  : variable n_1
location: class a
                if ( n_1==1 ) {
                     ^*

Any help is very much welcome
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060628/8a5c052a/attachment.html
From havingaw at cs.utwente.nl  Wed Jun 28 02:58:10 2006
From: havingaw at cs.utwente.nl (Wilke Havinga)
Date: Wed Jun 28 02:58:17 2006
Subject: [antlr-interest] Lexing C# strings; generated lexer is incorrect?
Message-ID: <44A252B2.4080205@cs.utwente.nl>

Hi,

While trying to modify a C# lexer, I ran into trouble. So, I reduced the
lexer to the smallest size where the problem still occurs (see below).
It seems to me that either I'm doing something very wrong, or the
antlr-generated lexer source is incorrect. If someone can enlighten me
which of those is the case, and what I can do about it, I'd be very
thankful ;)

The offending lexer code:

---- csharp.g -----------
class CSharpLexer extends Lexer;
options { k=2; } // Or 3 or 4, doesn't matter
	
STRING_LITERAL : QUOTE 'a' QUOTE
                 | '@' QUOTE 'a' QUOTE;
QUOTE          : "\"";
------ end csharp.g ----

This construct is supposed to match CSharp strings; I simplified it to
match only the exact string "a" and the C# 'verbatim' string notation
@"a". One would expect that this lexer rule certainly should *not* match
the sequence @a (at-sign followed by character a, without any quotes
being involved).

However, this is the generated CSharpLexer.java:

----- CSharpLexer.java ----
public Token nextToken() {
[..]
if ((LA(1)=='"'||LA(1)=='@') && (LA(2)=='"'||LA(2)=='a')) {
    mSTRING_LITERAL(true);
    theRetToken=_returnToken;
}
else if ((LA(1)=='"') && (true)) {
    mQUOTE(true);
    theRetToken=_returnToken;
}
---- end CSharpLexer.java -

This code clearly matches the combination '@a' as a STRING_LITERAL,
although that string certainly doesn't match the pattern! Setting
testLiterals (to true or false) doesn't make a difference, by the way.

This becomes really problematic when another rule is introduced, e.g.:

IDENTIFIER:	'@' 'a' // real version: STARTCHAR (ANYCHAR)+ etc.

(because identifiers in C# can also start with a '@'-sign). This results
in the following error message:

ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
csharp.g: warning:lexical nondeterminism between rules STRING_LITERAL
and IDENTIFIER upon
csharp.g:     k==1:'@'
csharp.g:     k==2:'a'

So apparently, antlr has some internal model where the string '@a'
really matches the STRING_LITERAL token. Something doesn't seem right
here...

I expect that this may in some way be related to the lexical
lookahead/end-of-token stuff described here:
http://sds.sourceforge.net/src/antlr/doc/lexer.html#lexicallookahead -
because the 'QUOTE' token is a single character which can be followed by
any other token (i.e. "anything"); maybe it's impossible to distinguish
QUOTE from STRING_LITERAL then? However, if that is the case, Antlr
should already have complained about that in the first case (the lexer
without the IDENTIFIER rule) instead of generating code that matches
things that clearly do not match the specified pattern.


To summarize, my questions are: I want to lex C# strings (such as "A" or
@"A"), C# identifiers (such as A or @A) and recognize the QUOTE (") as a
standalone token, too. Question 1: Is that even possible (in a lexer)?
Question 2: If not (because of ambiguity caused by end-of-token
basically limiting lookahead), shouldn't Antlr have flagged my first
lexer definition as ambiguous, then? (rather than generating an
incorrect lexer)?

Attached: the offending lexer source + generated lexer (source).



Any help would be appreciated,

Wilke Havinga

-------------- next part --------------
class CSharpLexer extends Lexer;

options 
{
	k=2; // Was originally 4; doesn't matter
}	
	
STRING_LITERAL
	:	QUOTE 'a' QUOTE
	|	'@' QUOTE 'a' QUOTE
	;

QUOTE		:	"\""    ;

// Uncomment to get the ambiguity warning
//IDENTIFIER
//	:	'@' 'a';

-------------- next part --------------
A non-text attachment was scrubbed...
Name: CSharpLexer.java
Type: text/java
Size: 4252 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060628/5ada5394/CSharpLexer.bin
From open.zone at virgin.net  Wed Jun 28 03:32:38 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun 28 03:14:40 2006
Subject: [antlr-interest] Lexing C# strings; generated lexer is incorrect?
In-Reply-To: <44A252B2.4080205@cs.utwente.nl>
Message-ID: <00cf01c69a9e$2e105390$c704a8c0@hercules>

Wilke,

> I want to lex 
>     C# strings (such as "A" or @"A"),
>     C# identifiers (such as A or @A) and 
>     recognize the QUOTE (") as a standalone token, too.

> Question 1: Is that even possible (in a lexer)? 

'examples/csharp/csharp_v1' in 2.7.6 contains a C# v1 parser using C# as
target language. Includes C# lexers using ANTLR and CsFlex (C# port of
JFlex).

Might glean some ideas from them. Incidentally, I think approximate LL(k)
lookahead might be to blame here. ANTLR v3 shouldn't have those issues.


Micheal


From parrt at cs.usfca.edu  Wed Jun 28 09:12:11 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 09:12:17 2006
Subject: [antlr-interest] 3.0 resetStateNumbersToBeContiguous error
In-Reply-To: <ebc876d70606280015g68d7ef65ycf12aa512eecd636@mail.gmail.com>
References: <ebc876d70606280015g68d7ef65ycf12aa512eecd636@mail.gmail.com>
Message-ID: <0699B822-74BE-46E3-8C15-7A0D71A60455@cs.usfca.edu>

On Jun 28, 2006, at 12:15 AM, Thomas Brandon wrote:

> I have been trying to get a grammar for C going in Antlr 3 but keep  
> running errors in resetStateNumbersToBeContiguous (max state num !=  
> max renumbered state) for various rules. I have looked and there  
> does not seem to be any left recursion in the rule, I'm pretty sure  
> all possible recursive paths include a terminal. What exactly  
> causes this error? Are there any hints for diagnosing the cause of  
> the error? As analysis has failed it looks like most of the really  
> nice information you'd get from Antlr to diagnose such issues is  
> unavailable. 3.0b1 adds a nicer error message but does not seem to  
> provide much more information.

Hi Thomas, that error is a code gen issue using my new table-based  
approach.  Can you send me the grammar directly?


> I have managed to somewhat chart the issues but largely through  
> trial and error, removing rules I suspect might cause troubles and  
> rewriting the grammar a number of times in different ways and  
> seeing where it falls apart. Are there any better methods?

Well, the analysis usually only fails when you have rules like:

a : foo ...
   | foo ...
   ;

where foo is huge or recursive.  It then backs off to LL(1) by  
dfault...i'm adding a backtrack option that will backtrack for any  
alt in the decision that is a problem.

> I understand you can set a fixed k and resolve the issue that way  
> but this seems like a non-optimal solution as I think some of the  
> ambiguities should be resolvable without backtracking (especially  
> the main statement rule which currently requires fixed lookahead +  
> a predicate to distinguish varDef and funcDef rules).

Generally they are...my java statement rule is super complicated.

> Also, what effect does setting a fixed lookahead on one rule have  
> on the analysis of calling rules?

It only affects the set of tokens used to predict which alt gets  
applied not the calling of rules.

> And, specifically, has anyone looked at doing a C grammar in Antlr 3?

If you send it to me, we should have it built within a few hours!

> Oh yeah, and wow, Antlr 3 rocks.

Thanks!  I suspect now that people are really using it we'll find a  
few nasty surprises that I'll raceto fix by 3.0 final.  I'll look  
into your error today though.

Ter
From parrt at cs.usfca.edu  Wed Jun 28 09:12:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 09:12:47 2006
Subject: [antlr-interest] Wrong generated code (Version 3.01b)
In-Reply-To: <e39abda10606280142n2afae13ap4068023c80803f1a@mail.gmail.com>
References: <e39abda10606280142n2afae13ap4068023c80803f1a@mail.gmail.com>
Message-ID: <4F8B2E84-40F3-48B8-A3AD-1358F261A177@cs.usfca.edu>

That is a bug.  I will look at it as soon as I  can get into the office.

Thanks for the report!

Ter
On Jun 28, 2006, at 1:42 AM, Jose Ventura wrote:

> Over all, I want to thank for Terence for new version of antlr
>
> I apologize if this is a founded bug.
>
> With the following grammar
> grammar a;
> options {output=AST;}
> tokens {PARMS;}
>
> modulo
>  : 'modulo' ID ('(' parms+ ')')? -> ^('modulo' ID ^(PARMS parms+)?)
>  ;
> parms : '#'|ID;
> ID : ('a'..'z' | 'A'..'Z')*;
> WS : (' ' | '\t' | '\n' | '\r')+ {channel=99;} ;
>
> The compiler result is
>
> a.java:150: cannot find symbol
> symbol  : variable n_1
> location: class a
>                 if ( n_1 > 1 ) throw new RuntimeException(" list  
> has > 1 elements");
>                      ^
> a.java :151: cannot find symbol
> symbol  : variable n_1
> location: class a
>                 if ( n_1==1 ) {
>                      ^
>
> Any help is very much welcome
> Thanks

From parrt at cs.usfca.edu  Wed Jun 28 10:20:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 10:19:26 2006
Subject: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
Message-ID: <147AB24F-B08D-4294-ACBD-0CB5E6008833@cs.usfca.edu>

Hi Jose, got it down, thanks.
Ter
On Jun 27, 2006, at 2:14 AM, Jose Ventura wrote:

> I don't know if this is a bug or a error in my grammar. This occur  
> in a debug session of antlrworks with these version tools
> ANTLRWorks1.0ea9
> ANTLR3.0ea10
> StringTemplate2.3b7
> XJLibrary1.2.6
> Java1.5.0_02 (Sun Microsystems Inc.)
>
> With this grammar
>
> grammar Transformer;
> options {output=AST;}
>
> tokens {PROGRAMA;}
>
> programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
> sentencia: setDir;
> setDir : 'set' 'dir' LITERAL ;
> LITERAL : '"'(options {greedy=false;}:.)* '"';
>
>
> It generate this error
>
> [11:05:51] C:\Documents and Settings\JVR3651A\My Documents\java 
> \Transformer\Transformer.java:65: ';' expected
> [11:05:51]         List list_-1=new ArrayList();
> [11:05:51]                   ^
>
> because the java code generated is wrong
>
> [...]
>
>         List list_sentencia=new ArrayList();
>         List list_-1=new ArrayList();
>         List list_6=new ArrayList();
>         Object char_literal2_tree=null;
>         Object EOF3_tree=null;
> [...]
>
> It's a bug?
>
> thank's in advance.
>
> Jos? Ventura
>
>

From parrt at cs.usfca.edu  Wed Jun 28 10:21:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 10:20:16 2006
Subject: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
	<OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
	<e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>
	<e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>
Message-ID: <4E9F949D-7F92-4205-BF12-96B5C4B10832@cs.usfca.edu>

oh, actually I think I fixed this...can you try b1?
Ter
On Jun 27, 2006, at 3:01 AM, Jose Ventura wrote:

> I think the problem is the EOF token
>
> programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+); //this's  
> not ok
>
> programa: (sentencia ';')+ -> ^(PROGRAMA sentencia+); //this's ok
>
> ---------- Forwarded message ----------
> From: Jose Ventura < jose.ventura.roda@gmail.com>
> Date: Jun 27, 2006 11:24 AM
> Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
> To: antlr-interest@antlr.org
>
>
>
> No, this is the error detected by java compiler.
>
> I think  "list_-1" is a bug in the java code generated by antlr, or  
> an error in my grammar ;-)
>
> ---------- Forwarded message ----------
> From: Michiel Vermandel < Michiel_Vermandel@axi.be>
> Date: Jun 27, 2006 11:20 AM
> Subject: Re: [antlr-interest] Can it be a bug in antlr 3?
> To: Jose Ventura < jose.ventura.roda@gmail.com>
>
>
>
> Is "list_-1" a valid variable name?
>
>
>
>
> "Jose Ventura" <jose.ventura.roda@gmail.com >
> Sent by: antlr-interest-bounces@antlr.org
> 27/06/2006 11:14
>
> To
> antlr-interest@antlr.org
> cc
> Subject
> [antlr-interest] Can it be a bug in antlr 3?
>
>
>
>
>
>
> I don't know if this is a bug or a error in my grammar. This occur  
> in a debug session of antlrworks with these version tools
> ANTLRWorks 1.0ea9
> ANTLR 3.0ea10
> StringTemplate 2.3b7
> XJLibrary 1.2.6
> Java 1.5.0_02 (Sun Microsystems Inc.)
>
>
> With this grammar
>
> grammar Transformer;
> options {output=AST;}
>
> tokens {PROGRAMA;}
>
> programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
> sentencia: setDir;
> setDir : 'set' 'dir' LITERAL ;
> LITERAL : '"'(options {greedy=false;}:.)* '"';
>
>
> It generate this error
>
> [11:05:51] C:\Documents and Settings\JVR3651A\My Documents\java 
> \Transformer\Transformer.java:65: ';' expected
> [11:05:51]         List list_-1=new ArrayList();
> [11:05:51]                   ^
>
> because the java code generated is wrong
>
> [...]
>
>         List list_sentencia=new ArrayList();
>        List list_-1=new ArrayList();
>        List list_6=new ArrayList();
>        Object char_literal2_tree=null;
>        Object EOF3_tree=null;
> [...]
>
> It's a bug?
>
> thank's in advance.
>
> Jos? Ventura
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>

From tbrandonau at gmail.com  Wed Jun 28 10:33:43 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed Jun 28 10:33:46 2006
Subject: [antlr-interest] 3.0 Tool
Message-ID: <ebc876d70606281033q279a9c4dqf41ca094a9369c31@mail.gmail.com>

Ter,
I knocked up a quick Eclipse builder for Antlr 3 grammars and while I found
it all very nice I had a couple of minor requests.

1) I capture errors for display in Eclipse, and while this was wonderfully
easy with the error listener I ended up writing a regex to seperate the line
and file info from the message for display in Eclipse. Am I missing a better
way to do this and if not could it be added. Currently the templates add in
the line info automatically, perhaps an alternate template (or parameter)
could be supplied that didn't include this. And also if line information
could be provided in the Message object (or a LinedMessage subclass) that
would alleviate the need to specifically deal with all error types just to
pull out line info.
2) I was wondering if you could consider trying to optimise the Antlr tool
for an IDE environment when you port it to 3.0. Specifically, it would be
nice if as much of the Tool as possible could be reused for multiple
compilation runs. Also,  This looks like it would require little more than a
bit of refactoring of the tool methods but would avoid the need to duplicate
Antlr code.
3) If there was a GetInputFile method similar to the GetOutputFile method
then IDEs could avoid the need to access the grammar through a file path.

Thanks,
Tom.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060629/fcb4a102/attachment.html
From parrt at cs.usfca.edu  Wed Jun 28 10:48:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 10:47:59 2006
Subject: [antlr-interest] java.g in ANTLR v3
Message-ID: <377E4591-8CFE-46E0-BB76-08711B78F839@cs.usfca.edu>

Ok, I'm looking at the java grammar submitted by Thomas as derived  
from the java language spec... when from what I can tell, in the  
addition of the generics causes all sorts of problems:

type
	:	Identifier (typeArguments)?
		(DOT Identifier (typeArguments)? )* (LBRACK RBRACK)*
	|	basicType
	;

Note that a<b can be the start of an expression or the start a type  
spec a<b>.  ANTLR correctly says

java.g:45:15: ANTLR could not analyze this decision in rule type;  
often this is because of recursive rule references visible from the  
left edge of alternatives.  ANTLR will re-analyze the decision with a  
fixed lookahead of k=1.  Consider using "options {k=1;}" for that  
decision and adding a syntactic predicate.
trying decision 3 again with k=1
java.g:45:15: Decision can match input such as "LT" using multiple  
alternatives: 1, 2

By looking at the grammar, I quickly realized the problem and added  
the option to force lookahead to k=1 for two reasons: there is no way  
to find lookahead beyond that to help resolve this  nondeterministism  
and ANTLR does the right thing anyway.  After running as follows:

type
	:	Identifier (options {k=1;}: typeArguments)?
		(DOT Identifier (options {k=1;}: typeArguments)? )* (LBRACK RBRACK)*
	|	basicType
	;

  I get the simpler:

java.g:45:15: Decision can match input such as "LT" using multiple  
alternatives: 1, 2

still, these errors are annoying. I have a plan to allow these errors  
to be turned off by specifying a magic cookie as provided by ANTLR;  
and it would give you a warning again if you change the lookahead  
decision.

For now, i am wondering if we could figure out way to prevent ANTLR  
from going crazy on these decisions. it tried to create a DFA for the  
FOLLOW(type), which is huge. :(  Hmm....

Ter

From parrt at cs.usfca.edu  Wed Jun 28 16:10:58 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 28 16:09:59 2006
Subject: [antlr-interest] default ANTLR behavior
Message-ID: <96FE98CF-4E38-4034-9941-33CA547A2027@cs.usfca.edu>

Ok, so after trying to plug in the Java from language spec and also  
to convert Grimm's Rats!-based java grammar to ANTLR v3, I think the  
default mode for antlr should be more forgiving.  While I'm ok with  
making the grammar conform to v3, the deluge of errors emitted by  
ANTLR can be really discouraging.  I am proposing that we start ANTLR  
out with "k=1 + auto-backtracking" or PEG mode.  In other words,  
accept any grammar w/o error.  If there is an ambiguity, ANTLR will  
automatically backtrack over the alts in that decision and take the  
first one that matches.  The LL(1) will make it more efficient than a  
normal PEG implementation.  note that I do memoization so parsing is  
still linear.

Then, if you want to optimize your grammar for speed, you can turn on  
an "expert" mode or something that will engage full LL(*) and manual  
backtracking, which does some amazing optimizations.  The only  
negative with LL(*) at the moment is that sometimes it hits a  
"landmine" and cannot finish analyzing the decision.  I suspect this  
is because of my blunt indicator (raw DFA conversion time, size)  
about when ANTLR has gone off into the weeds, but to ensure  
acceptance of the tool I want to provide a much less intimidating  
interface for the uninitiated.

The default mode would put a syn pred on every alt but of course  
would only use them when LL(1) failed.  You could set k=2 for the  
grammar and it would backtrack when k=2 failed.  So, this is like  
current antlr accept you won't get any warnings, it will just  
backtrack when fixed k fails.  perhaps when I get more experience  
with large grammars and LL(*) we can make this the default.

Thoughts and comments are appreciated.

Ter
From antlr at shmuelhome.mine.nu  Thu Jun 29 01:08:45 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Jun 29 01:08:14 2006
Subject: [antlr-interest] 3.0 Tool
In-Reply-To: <ebc876d70606281033q279a9c4dqf41ca094a9369c31@mail.gmail.com>
References: <ebc876d70606281033q279a9c4dqf41ca094a9369c31@mail.gmail.com>
Message-ID: <44A38A8D.8060908@shmuelhome.mine.nu>

Thomas Brandon wrote:
> Ter,
> I knocked up a quick Eclipse builder for Antlr 3 grammars and while I 
> found it all very nice I had a couple of minor requests.
Is this plugin available to the public.




-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.394 / Virus Database: 268.9.6/378 - Release Date: 6/28/2006

From Jrydl at web.de  Thu Jun 29 01:33:16 2006
From: Jrydl at web.de (=?iso-8859-15?Q?J=F6rg_Riedl?=)
Date: Thu Jun 29 01:33:22 2006
Subject: [antlr-interest] ANTLR Problem
Message-ID: <500230447@web.de>



Hello. 

I have a problem with ANTLR. 
The Consol throws the following exception! 

Antlr.g:654:4: ANTLR could not analyze this decision in rule UpperBound probably due to a true ambiguity in the grammar or left-recursion problems. ANTLR re-analyzed the decision with a fixed lookahead of k=1. 

[12:36:01] Antlr.g:654:4: Decision can match input such as "'i'" using multiple alternatives: 

alt 1 via NFA path 2596,2584,860,7423,7421,876,7503,7492,878,7516,7504,880,7529,7517,882,7540,7535,7536,7537,884,7551,7541,886,7562,7552,888,7573,7563,890,7587,7574,892,7602,7588,894,7617,7603,896,7630,7625,7626,7627,898,7641,7631,900,7652,7642,902,7661,7656,7657,7658,904,7673,7662,908,7718,7694,496,4498,4475,498,4550,4504,128,1985,1980,1979,1975,6,1008,1006,8,1011,1009,748,6404,6392,750,6410,6411,6407,756,6426,6425,6424 

alt 2 via NFA path 2596,2597,2586,2587 

As a result, alternative(s) 2 were disabled for that input 

[12:36:01] Antlr.g:654:4: The following alternatives are unreachable: 2 


code : 
UpperBound 
: SingleConstExpression | 'infinity' 
; 


What can i do to solve that problem?

 

 


	
Verschicken Sie romantische, coole und witzige Bilder per SMS! 
Jetzt bei WEB.DE FreeMail: *http://f.web.de/?mc=021193* [http://f.web.de/?mc=021193] 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060629/73621890/attachment.html
From jose.ventura.roda at gmail.com  Thu Jun 29 01:54:13 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Thu Jun 29 01:54:17 2006
Subject: [antlr-interest] Can it be a bug in antlr 3?
In-Reply-To: <4E9F949D-7F92-4205-BF12-96B5C4B10832@cs.usfca.edu>
References: <e39abda10606270214p43101581kb3180973518f3d7f@mail.gmail.com>
	<OFAFDE1E41.7967FDBB-ONC125719A.003342F0-C125719A.003358A6@Axi.be>
	<e39abda10606270224n615c71e5g884830dd54641a25@mail.gmail.com>
	<e39abda10606270301k7ec0e82ax918594db23b266df@mail.gmail.com>
	<4E9F949D-7F92-4205-BF12-96B5C4B10832@cs.usfca.edu>
Message-ID: <e39abda10606290154h6a19bb9bo5e89951a2789d92e@mail.gmail.com>

Ok, with b1 it work well.

Thank's


On 6/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> oh, actually I think I fixed this...can you try b1?
> Ter
> On Jun 27, 2006, at 3:01 AM, Jose Ventura wrote:
>
> > I think the problem is the EOF token
> >
> > programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+); //this's
> > not ok
> >
> > programa: (sentencia ';')+ -> ^(PROGRAMA sentencia+); //this's ok
> >
> > ---------- Forwarded message ----------
> > From: Jose Ventura < jose.ventura.roda@gmail.com>
> > Date: Jun 27, 2006 11:24 AM
> > Subject: Fwd: [antlr-interest] Can it be a bug in antlr 3?
> > To: antlr-interest@antlr.org
> >
> >
> >
> > No, this is the error detected by java compiler.
> >
> > I think  "list_-1" is a bug in the java code generated by antlr, or
> > an error in my grammar ;-)
> >
> > ---------- Forwarded message ----------
> > From: Michiel Vermandel < Michiel_Vermandel@axi.be>
> > Date: Jun 27, 2006 11:20 AM
> > Subject: Re: [antlr-interest] Can it be a bug in antlr 3?
> > To: Jose Ventura < jose.ventura.roda@gmail.com>
> >
> >
> >
> > Is "list_-1" a valid variable name?
> >
> >
> >
> >
> > "Jose Ventura" <jose.ventura.roda@gmail.com >
> > Sent by: antlr-interest-bounces@antlr.org
> > 27/06/2006 11:14
> >
> > To
> > antlr-interest@antlr.org
> > cc
> > Subject
> > [antlr-interest] Can it be a bug in antlr 3?
> >
> >
> >
> >
> >
> >
> > I don't know if this is a bug or a error in my grammar. This occur
> > in a debug session of antlrworks with these version tools
> > ANTLRWorks 1.0ea9
> > ANTLR 3.0ea10
> > StringTemplate 2.3b7
> > XJLibrary 1.2.6
> > Java 1.5.0_02 (Sun Microsystems Inc.)
> >
> >
> > With this grammar
> >
> > grammar Transformer;
> > options {output=AST;}
> >
> > tokens {PROGRAMA;}
> >
> > programa: (sentencia ';')+ EOF -> ^(PROGRAMA sentencia+);
> > sentencia: setDir;
> > setDir : 'set' 'dir' LITERAL ;
> > LITERAL : '"'(options {greedy=false;}:.)* '"';
> >
> >
> > It generate this error
> >
> > [11:05:51] C:\Documents and Settings\JVR3651A\My Documents\java
> > \Transformer\Transformer.java:65: ';' expected
> > [11:05:51]         List list_-1=new ArrayList();
> > [11:05:51]                   ^
> >
> > because the java code generated is wrong
> >
> > [...]
> >
> >         List list_sentencia=new ArrayList();
> >        List list_-1=new ArrayList();
> >        List list_6=new ArrayList();
> >        Object char_literal2_tree=null;
> >        Object EOF3_tree=null;
> > [...]
> >
> > It's a bug?
> >
> > thank's in advance.
> >
> > Jos? Ventura
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060629/90160f35/attachment.html
From e.papegaaij at student.utwente.nl  Thu Jun 29 02:01:16 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Thu Jun 29 02:33:28 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
Message-ID: <200606291101.16634.e.papegaaij@student.utwente.nl>

Hello,

I'm still working on an ANTLR 3 grammar. However I'm having trouble with 
version b1. In my lexer I've got several tokens that match almost everything. 
These tokens are guarded with semantic predicates. Due to these tokens, I 
have to use filtered mode (else ANTLR will run out of memory trying to 
construct the DFA). This used to work fine, however with b1 my parser seems 
to receive whitespace tokens:

[specification, nodeDecl]: line 1:9 mismatched token: [@1,9:9=' ',<12>,1:9]; 
expecting type L_CURLY

These tokens are sent to channel=99. Disabling filtered mode now gives the 
following error:

tpl2.g:1:10: ANTLR could not analyze this decision in rule Tokens; often this 
is because of recursive rule references visible from the left edge of 
alternatives.  ANTLR will re-analyze the decision with a fixed lookahead of 
k=1.  Consider using "options {k=1;}" for that decision and adding a 
syntactic predicate.
trying decision 8 again with k=1
tpl2.g:1:10: Multiple token rules can match input such as "'a'": T18, 
METHOD_SIG_ACTION, IDENTIFIER, EXPRESSION_ACTION
As a result, tokens(s) METHOD_SIG_ACTION,IDENTIFIER,EXPRESSION_ACTION were 
disabled for that input
tpl2.g:1:10: Multiple token rules can match input such as "'i'": IFACE, 
METHOD_SIG_ACTION, IDENTIFIER, EXPRESSION_ACTION
As a result, tokens(s) METHOD_SIG_ACTION,IDENTIFIER,EXPRESSION_ACTION were 
disabled for that input

I've tried to minimise the grammar preserving the error, but that proves very 
difficult. For example, after removing STRING_LITERAL_ACTION I get the 
following error:

tpl2.g:1:10: Alternative 10: after matching input such 
as '{''{''{''{''\'''\\''\'''\'''}''\'''\\''\'''\'''\'''}''\'''}''\'''}''\'''\\''\'''}''\'''\\''\'''\'''\'''}''\'''{''\'''\\''\'''\'''{''\'''\\''\'''\'''\'''}''\'''\\''\'''\'''\'''{''\'''{''\'''\\''\'''\'''\'''{' 
decision cannot predict what comes next due to recursion overflow to 
NESTED_METHOD_BODY_ACTION from NESTED_METHOD_BODY_ACTION

I've attached the minimised parser and a sample of the input it should parse.

Best regards,
Emond Papegaaij
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tpl2.g
Type: text/x-java
Size: 1318 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060629/97a86dff/tpl2.bin
-------------- next part --------------
Printable {
	attr int[] testAttr = new int[10];

	iface public String getString() {
		return #this.visitStmt(indentation = 0);
	}
}

IndentedConstruct {
	iface protected String writeIndentation(int indentation) {
		String ret = "";
		for (int count=0; count<indentation; count++) {
			ret += "  ";
		}
		return ret;
	}
}
From tbrandonau at gmail.com  Thu Jun 29 02:49:58 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu Jun 29 02:50:03 2006
Subject: [antlr-interest] ANTLR Problem
In-Reply-To: <500230447@web.de>
References: <500230447@web.de>
Message-ID: <ebc876d70606290249m1345e3daie90f546b37c4ff6d@mail.gmail.com>

Firstly I think that message is the ea10 message, upgrade to Antlr 3.0b1 as,
as well as other updates, it also gives more informative messages for some
of these sorts of errors.

There are three different warnings there:
The first warning is that Antlr was unable to analyse your rule due to
ambiguity so it had to switch off its fancy analysis and try to predict the
decision with just one character of lookahead. This indicates either left
recursion or other ambiguities (I haven't quite got a handle on these other
ambiguities).
The second warning is telling you that (with only one character of lookahead
now) Antlr cannot predict which alternative to follow, there are two
possible ways the next character could be 'i': either directly or somehow
through SingleConstExpression (if you look at the syntax diagram for the
rule in AntlrWorks you should be able to see the two possible paths to
'infinity'). As a result Antlr disabled alternative 2 ('infinity') for the
lookahead 'i'.
The third message is saying that now that alternative 2 is disabled there is
no possible input sequence that will lead to the second alternative.

So, you need to find the ambiguity. It may be an error in your grammar as
most languages are designed to be fairly unambiguous, or it could be a true
ambiguity. Maybe someone else can suggest a good method for resolving
ambiguities that break the analysis. From my (limited) experience: try
analysing the syntax diagram\DFA for SingleConstExpression and rules it
calls and look for possible ambiguities. Maybe try commenting out various
bits of those rules until you find the bit that's doing it.
Also you can replace the rule with:
<code>
UpperBound options { k=1; }
    :   ('infinity')=>'infinity'
    |   SingleConstExpression
    ;
</code>
The k=1 option overrides Antlr's analysis with the syntactic predicate
forcing 'infinity' to match. This may resolve the problem or it may produce
other errors which might lead you closer to the underlying issue.
Or, if it's all too much, if you post SingleConstExpression and the rules it
calls then maybe someone can spot the issue.

Tom.
On 6/29/06, J?rg Riedl <Jrydl@web.de> wrote:
>
> Hello.
>
> I have a problem with ANTLR.
> The Consol throws the following exception!
>
> Antlr.g:654:4: ANTLR could not analyze this decision in rule UpperBound
> probably due to a true ambiguity in the grammar or left-recursion problems.
> ANTLR re-analyzed the decision with a fixed lookahead of k=1.
>
> [12:36:01] Antlr.g:654:4: Decision can match input such as "'i'" using
> multiple alternatives:
>
> alt 1 via NFA path
> 2596,2584,860,7423,7421,876,7503,7492,878,7516,7504,880,7529,7517,882,7540,7535,7536,7537,884,7551,7541,886,7562,7552,888,7573,7563,890,7587,7574,892,7602,7588,894,7617,7603,896,7630,7625,7626,7627,898,7641,7631,900,7652,7642,902,7661,7656,7657,7658,904,7673,7662,908,7718,7694,496,4498,4475,498,4550,4504,128,1985,1980,1979,1975,6,1
> 008,1006,8,1011,1009,748,6404,6392,750,6410,6411,6407,756,6426,6425,6424
>
> alt 2 via NFA path 2596,2597,2586,2587
>
> As a result, alternative(s) 2 were disabled for that input
>
> [12:36:01] Antlr.g:654:4: The following alternatives are unreachable: 2
>
>
> code :
> UpperBound
> : SingleConstExpression | 'infinity'
> ;
>
>
> What can i do to solve that problem?
>
>
>
>
>
>
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: *http://f.web.de/?mc=021193*<http://f.web.de/?mc=021193>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060629/627a1086/attachment-0001.html
From parrt at cs.usfca.edu  Thu Jun 29 08:58:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 29 08:57:23 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
In-Reply-To: <200606291101.16634.e.papegaaij@student.utwente.nl>
References: <200606291101.16634.e.papegaaij@student.utwente.nl>
Message-ID: <A51BFFD9-3431-4662-A22A-18DC0F02920C@cs.usfca.edu>


On Jun 29, 2006, at 2:01 AM, Emond Papegaaij wrote:

> Hello,
>
> I'm still working on an ANTLR 3 grammar. However I'm having trouble  
> with
> version b1. In my lexer I've got several tokens that match almost  
> everything.
> These tokens are guarded with semantic predicates. Due to these  
> tokens, I
> have to use filtered mode (else ANTLR will run out of memory trying to
> construct the DFA). This used to work fine, however with b1 my  
> parser seems
> to receive whitespace tokens:
>
> [specification, nodeDecl]: line 1:9 mismatched token: [@1,9:9='  
> ',<12>,1:9];
> expecting type L_CURLY
>
> These tokens are sent to channel=99.

If you print out the tokens, is WS really on channel 99?  If so, then  
something really strange is happening with the token buffer.  Can you  
try a diff on your generated lexer between ea10 and b1?

Ter

From gudnabrsam at yahoo.com  Thu Jun 29 09:26:36 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu Jun 29 09:26:40 2006
Subject: [antlr-interest] antlr3 build.xml
Message-ID: <20060629162636.55779.qmail@web55102.mail.re4.yahoo.com>

Just DLd the beta, was looking at the build.xml . 
It's normal for the default target to perform an
incremental build for speed, so I would recommend that
the "all" target _not_ depend on "clean".  Actually
since "all" depends only on "clean" and "lib", I would
simply remove "all" (until such time as "all" consists
of > 1 thing) and make "lib" the default target. 
Users wanting a clean build can use the command line
'ant clean lib'.  That said, it might be nice to
rename "lib" to "build".  Then a clean build can be
had with 'ant clean build' (isn't that similar to make
convention?).  Finally, if you feel like users really
need a single target to do a clean build, you could
specify a non-default target to depend on "clean" and
"lib" (or "build", or whatever).  You could call it
"clean-build", for example... Apache Harmony uses
"rebuild", which I like fairly well.

br,
Matt

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Thu Jun 29 09:42:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 29 09:41:49 2006
Subject: [antlr-interest] antlr3 build.xml
In-Reply-To: <20060629162636.55779.qmail@web55102.mail.re4.yahoo.com>
References: <20060629162636.55779.qmail@web55102.mail.re4.yahoo.com>
Message-ID: <BE07513D-ED7A-4C77-9638-62CA7E56E1F2@cs.usfca.edu>

Hi Matt, I'm not one with Ant; can you send me your suggested changed  
file?

Ter

From gudnabrsam at yahoo.com  Thu Jun 29 09:41:59 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu Jun 29 09:42:03 2006
Subject: [antlr-interest] antlr3 jar
Message-ID: <20060629164159.62545.qmail@web55102.mail.re4.yahoo.com>

There are some files in the shipped b1 jar I wanted to
ask about:

org/antlr/stringtemplate/StringTemplate$Aggregate.class
org/antlr/stringtemplate/StringTemplate$STAttributeList.class

I'm pretty sure these two don't belong.  They live in
the stringtemplate jar; not sure how they made it into
the release jar.

Other files that appear in the shipped jar but not in
one built by Ant:

org/antlr/codegen/CodeGenTreeWalker.smap
org/antlr/codegen/templates/#ANTLRCore.sti#
org/antlr/codegen/templates/ANTLRCore.sti
org/antlr/codegen/templates/Mantra.template.dependencies.pdf
org/antlr/tool/ANTLRLexer.smap
org/antlr/tool/ANTLRParser.smap
org/antlr/tool/ANTLRTreePrinter.smap
org/antlr/tool/AssignTokenTypesWalker.smap
org/antlr/tool/DefineGrammarItemsWalker.smap

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From gudnabrsam at yahoo.com  Thu Jun 29 09:44:27 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu Jun 29 09:44:29 2006
Subject: [antlr-interest] Fwd: antlr3 jar
Message-ID: <20060629164427.26539.qmail@web55106.mail.re4.yahoo.com>

My mail client freaked out and sent it too soon!

--- Matt Benson <gudnabrsam@yahoo.com> wrote:

> Date: Thu, 29 Jun 2006 09:41:59 -0700 (PDT)
> From: Matt Benson <gudnabrsam@yahoo.com>
> Subject: antlr3 jar
> To: Antlr List <antlr-interest@antlr.org>
> 
> There are some files in the shipped b1 jar I wanted
> to
> ask about:
> 
>
org/antlr/stringtemplate/StringTemplate$Aggregate.class
>
org/antlr/stringtemplate/StringTemplate$STAttributeList.class
> 
> I'm pretty sure these two don't belong.  They live
> in
> the stringtemplate jar; not sure how they made it
> into
> the release jar.
> 
> Other files that appear in the shipped jar but not
> in
> one built by Ant:
> 
> org/antlr/codegen/CodeGenTreeWalker.smap
> org/antlr/codegen/templates/#ANTLRCore.sti#
> org/antlr/codegen/templates/ANTLRCore.sti
>
org/antlr/codegen/templates/Mantra.template.dependencies.pdf
> org/antlr/tool/ANTLRLexer.smap
> org/antlr/tool/ANTLRParser.smap
> org/antlr/tool/ANTLRTreePrinter.smap
> org/antlr/tool/AssignTokenTypesWalker.smap
> org/antlr/tool/DefineGrammarItemsWalker.smap
org/antlr/tool/TreeToNFAConverter.smap

I think the .smaps were added for Scott, for debugging
in the Eclipse plugin?  Don't know if ANTLR's own
smaps need to be in the jar, but if they do, they're
not in the Ant-built jar, and if they don't... they
are.

-Matt

> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam
> protection around 
> http://mail.yahoo.com 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Thu Jun 29 09:45:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 29 09:44:39 2006
Subject: [antlr-interest] antlr3 jar
In-Reply-To: <20060629164159.62545.qmail@web55102.mail.re4.yahoo.com>
References: <20060629164159.62545.qmail@web55102.mail.re4.yahoo.com>
Message-ID: <90B034AB-5E24-4912-A854-F47A51A5FF14@cs.usfca.edu>


On Jun 29, 2006, at 9:41 AM, Matt Benson wrote:

> There are some files in the shipped b1 jar I wanted to
> ask about:
>
> org/antlr/stringtemplate/StringTemplate$Aggregate.class
> org/antlr/stringtemplate/StringTemplate$STAttributeList.class
>
> I'm pretty sure these two don't belong.  They live in
> the stringtemplate jar; not sure how they made it into
> the release jar.

Ah!  My dev env put them there by mistake...

> Other files that appear in the shipped jar but not in
> one built by Ant:

thanks...i'll add a command to remove those during build of release.

Ter

>
> org/antlr/codegen/CodeGenTreeWalker.smap
> org/antlr/codegen/templates/#ANTLRCore.sti#
> org/antlr/codegen/templates/ANTLRCore.sti
> org/antlr/codegen/templates/Mantra.template.dependencies.pdf
> org/antlr/tool/ANTLRLexer.smap
> org/antlr/tool/ANTLRParser.smap
> org/antlr/tool/ANTLRTreePrinter.smap
> org/antlr/tool/AssignTokenTypesWalker.smap
> org/antlr/tool/DefineGrammarItemsWalker.smap
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com

From open.zone at virgin.net  Thu Jun 29 10:22:28 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun 29 10:04:29 2006
Subject: [antlr-interest] ANTLR 3.0b1 is out!
In-Reply-To: <5D7A4E62-4312-4655-AF9C-9DD16CD95B15@cs.usfca.edu>
Message-ID: <014f01c69ba0$99f8a640$c704a8c0@hercules>

Ter,

Nice. Now the internal APIs are stable, I expect pending codegen targets
will make an appearance.

> Get it while it's hot! ;)  Linked to from main download page now:
> 
> A new version of ANTLRWorks containing this beta will be up soon.

Any updates on this?

> A tweaked version of Mantra language example is also posted.
>
> http://www.linguamantra.org/

One suggestion, offer historical versions of mantra with a note stating what
ANTLR v3 version they require. Example:
	mantra-v0.0.1.tar.gz  (requires ANTLR v3 ea1)
	mantra-v0.0.2.tar.gz  (requires ANTLR v3 ea5)
	mantra-v0.2.0.tar.gz  (requires ANTLR v3 b1)
	......

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

From parrt at cs.usfca.edu  Thu Jun 29 10:18:50 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 29 10:17:48 2006
Subject: [antlr-interest] ANTLR 3.0b1 is out!
In-Reply-To: <014f01c69ba0$99f8a640$c704a8c0@hercules>
References: <014f01c69ba0$99f8a640$c704a8c0@hercules>
Message-ID: <0F447DEF-0121-4B4C-AAB1-EC05931AF290@cs.usfca.edu>


On Jun 29, 2006, at 10:22 AM, Micheal J wrote:

> Ter,
>
> Nice. Now the internal APIs are stable, I expect pending codegen  
> targets
> will make an appearance.

Only one thing to think about, which was that autobacktracking mode;  
interestingly, it is a front-end / analysis issue and the backends  
shouldn't be affected.  The "language" I speak to the targets is just  
a DFA predictor (in terms of analysis)...still, I'd wait a week or  
two ;)

>> Get it while it's hot! ;)  Linked to from main download page now:
>>
>> A new version of ANTLRWorks containing this beta will be up soon.
>
> Any updates on this?

Jean will have it out shortly...

>> A tweaked version of Mantra language example is also posted.
>>
>> http://www.linguamantra.org/
>
> One suggestion, offer historical versions of mantra with a note  
> stating what
> ANTLR v3 version they require. Example:
> 	mantra-v0.0.1.tar.gz  (requires ANTLR v3 ea1)
> 	mantra-v0.0.2.tar.gz  (requires ANTLR v3 ea5)
> 	mantra-v0.2.0.tar.gz  (requires ANTLR v3 b1)
> 	......

Oh, good point; though now I can't remember! ;)

Ter

From raj.sisodia at impetus.co.in  Thu Jun 29 11:22:52 2006
From: raj.sisodia at impetus.co.in (raj sisodia)
Date: Thu Jun 29 11:17:42 2006
Subject: [antlr-interest] Want to write a scripting language
Message-ID: <400fb21d75165475.75165475400fb21d@impetus.co.in>

Hi,

I am new to antlr and I am writing a scripting language (in antlr v3) 
which looks similar to java, with simple loop commands, if statement, 
basic type, arrays etc. I am able to write the parser (though facing 
problem at the AST side but I'll figure that out).  

My problem is that, this script would be loosely coupled with another 
application written in java and I would like to use the classes 
written there. So in a way, my script won?t allow the user to 
explicitly call classes but would itself internally use classes from 
the other application as required. Also I do not want the user to 
compile the script, that should happen only at runtime (would love if 
compilation to byte-code can be avoided) and execute the script step 
by step. 

I would also like to develop a simple editor (but with Intellisence) 
for this. Could anyone please provide me little guidance on this? I 
tried searching for material that might help me but failed to find 
much of use (possibly I am looking at wrong places).

Thanks,
Raj

 


From antlr-list at arizona-software.ch  Thu Jun 29 11:32:39 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun 29 11:32:50 2006
Subject: [antlr-interest] ANTLRWorks 1.0ea10 available
Message-ID: <35A67A75-E2A1-45CB-A9DB-2ACB5AC6400B@arizona-software.ch>

Hello!

ANTLRWorks 1.0ea10 is now available:

http://www.antlr.org/works/index.html

This version has a bug fix but, more importantly, includes ANTLR 3.0b1.

Enjoy!

Jean

From walter.schilling at computer.org  Thu Jun 29 20:15:36 2006
From: walter.schilling at computer.org (Walter Schilling)
Date: Thu Jun 29 20:15:40 2006
Subject: [antlr-interest] New User help!
Message-ID: <1151637336.4979.40.camel@localhost>

I'm just starting to use ANTLR and I've got a question that I think
should be obvious but I have yet to see an answer for.  I'm sure I'm
just looking in the wrong spot.  I'm writing a Java analysis tool that
uses the Java ANTLR grammar.  On various occasions in my design, I need
to take the AST that I have generated and translate / walk that back to
the original text.  For example, if I had the java construct:

if ((x==0) && (y==true))

the AST would be represented as :
if
  EXPR
    &&
      ==
        x
        0
      ==
        y
        true
  { 
...

Given that a portion of my data structure is an AST starting with the
EXPR node, is there any easy way I can walk the tree and regenerate my
original text?  I'm thinking this should be something easy and obvious,
but short of hand coding a java recursive loop (which so far has not
achieved quite what I want, I haven't found an easy way to do this.)  It
feels like there should be some way to use the existing tree walked I
have to do this, but I'm thus far drawing a blank.

Thanks for your assistance,

Walt Schilling

-- 
Walter W. Schilling, Jr.
2004 - 2007 Ohio Space Grant Consortium PhD. Fellowship Recipient
University of Toledo PhD Doctoral Candidate
MSES 1998 University of Toledo
BSEE 1997 Ohio Northern University

From tbrandonau at gmail.com  Thu Jun 29 22:32:51 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu Jun 29 22:32:53 2006
Subject: [antlr-interest] ANTLRWorks debugger output
Message-ID: <ebc876d70606292232x4ba8a1aei3a83f17b31a54bb@mail.gmail.com>

Currently AntlrWorks does not echo output from debugged grammars to the
console, and it doesn't appear on the launching console (if any) either.
Thus errors that aren't displayed in the parse\debug tree are not reported
to the user at all. For instance an exception in an action can cause the
debugger to silently terminate the grammar. Also, with larger debug input it
is often hard to see errors in the parse tree. If they were also printed to
the console (or a seperate grammar output console) it would be easy to see
if there were any grammar probvlems. Highlighting them in the parse tree
would also be nice but console output would be better for quick regression
checking.

Tom.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/de23f51b/attachment.html
From tbrandonau at gmail.com  Thu Jun 29 22:38:52 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu Jun 29 22:38:55 2006
Subject: [antlr-interest] Re: ANTLRWorks debugger output
In-Reply-To: <ebc876d70606292232x4ba8a1aei3a83f17b31a54bb@mail.gmail.com>
References: <ebc876d70606292232x4ba8a1aei3a83f17b31a54bb@mail.gmail.com>
Message-ID: <ebc876d70606292238m331f7922p43c3ea9ec8c7d2d3@mail.gmail.com>

Ooops, found the Debug Output, could it flag that there is output there as
for console output so that you know to go there.

Tom.

On 6/30/06, Thomas Brandon <tbrandonau@gmail.com> wrote:
>
> Currently AntlrWorks does not echo output from debugged grammars to the
> console, and it doesn't appear on the launching console (if any) either.
> Thus errors that aren't displayed in the parse\debug tree are not reported
> to the user at all. For instance an exception in an action can cause the
> debugger to silently terminate the grammar. Also, with larger debug input it
> is often hard to see errors in the parse tree. If they were also printed to
> the console (or a seperate grammar output console) it would be easy to see
> if there were any grammar probvlems. Highlighting them in the parse tree
> would also be nice but console output would be better for quick regression
> checking.
>
> Tom.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/bfc5117b/attachment.html
From e.papegaaij at student.utwente.nl  Fri Jun 30 00:03:07 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 30 00:03:11 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
In-Reply-To: <A51BFFD9-3431-4662-A22A-18DC0F02920C@cs.usfca.edu>
References: <200606291101.16634.e.papegaaij@student.utwente.nl>
	<A51BFFD9-3431-4662-A22A-18DC0F02920C@cs.usfca.edu>
Message-ID: <200606300903.07195.e.papegaaij@student.utwente.nl>

On Thursday 29 June 2006 17:58, Terence Parr wrote:
> On Jun 29, 2006, at 2:01 AM, Emond Papegaaij wrote:
> > I'm still working on an ANTLR 3 grammar. However I'm having trouble
> > with
> > version b1. In my lexer I've got several tokens that match almost
> > everything.
> > These tokens are guarded with semantic predicates. Due to these
> > tokens, I
> > have to use filtered mode (else ANTLR will run out of memory trying to
> > construct the DFA). This used to work fine, however with b1 my
> > parser seems
> > to receive whitespace tokens:
> >
> > [specification, nodeDecl]: line 1:9 mismatched token: [@1,9:9='
> > ',<12>,1:9];
> > expecting type L_CURLY
> >
> > These tokens are sent to channel=99.
>
> If you print out the tokens, is WS really on channel 99?  If so, then
> something really strange is happening with the token buffer.  Can you
> try a diff on your generated lexer between ea10 and b1?

I've compared it to the version you sent me last week. The output is 
identical, except for the synpreds. I've also added a println statement in 
the lexer, next to channel = 99. The channel is set correctly. Exactly 12 
messages are printed and 12 WS tokens are visible in the output. It seems 
some other part of ANTLR is responsible for this to stop working.

Best regards,
Emond
From Michiel_Vermandel at axi.be  Fri Jun 30 00:30:35 2006
From: Michiel_Vermandel at axi.be (Michiel Vermandel)
Date: Fri Jun 30 00:30:44 2006
Subject: [antlr-interest] parsing incomplete syntax
Message-ID: <OF1E787C01.152E505D-ONC125719D.0028343F-C125719D.0029409F@Axi.be>

Hi,

We have our own Oracle Designer/developer environment and I have written a 
Sql/Plsql/Forms Plsql code parser which is linked to our repository.
The parser looks up all used objects in the repository. This part works 
just fine.
But ( as in many other dev tools) the user wants to lookup data while 
typing: eg: "select  * from  drtable t where t." and then pressing a key 
combination to lookup the available columns of table drtable.
The problem is that at this point the statement is incomplete and no 
grammer rule can be applied.
What should be the best approach to solve these kinds of issues (not only 
for looking up fields of tables but in general).
If the AST should say (simplified)

select_statement
   select_list
     *
   from
    table_list
       table
         drtable
         t
    where_condition
        t
       dot

then I would be saved.

I need the AST tree completely up to the last token.
(of course other statements can follow this one)

Any suggestions, best practices?
Anyone done this before (in other language)?

Thanks!

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/1a0a8f04/attachment.html
From bans.vglab at gmail.com  Fri Jun 30 06:32:33 2006
From: bans.vglab at gmail.com (Bans VGLab)
Date: Fri Jun 30 06:32:37 2006
Subject: Fwd: [antlr-interest] New User help!
In-Reply-To: <626f78830606300530h1dff7255vb2c4ad6cadff1d03@mail.gmail.com>
References: <1151637336.4979.40.camel@localhost>
	<626f78830606300530h1dff7255vb2c4ad6cadff1d03@mail.gmail.com>
Message-ID: <626f78830606300632t204037c1gccd7589c9c36be7d@mail.gmail.com>

From: Bans VGLab <bans.vglab@gmail.com>
To: Walter Schilling <walter.schilling@computer.org>

Yes.

I think, I'll be able to help you out here.

See, you can easily think of writing-back (or code-generation, in precise
compiler parlance) as tree-traversal, which can be pre-order, post-oder or
in-order. This is a general rule followed.

I you don't understand what are pre-order, post-oder or in-order traversal,
look into any 'datastructures' book :)

In your case, operators "==" and "&&" will be written In-order to generate
the code. The nodes like 'if ' and '{' are to be written pre-order.

Writing Pre-order is simple, you just have to write in the order the tree is
walked.

Writing In-order is a bit tricky because, for instance, you can not print ==
before the operands are printed. So, the usual way is to return the String
form of operands, say for instance, "x" and "0" to the parent node "==" and
then print the concatenation "x==0" in the action block of parent node, that
is "==".

So, if your current tree walker is something like this:

root: #( "==",  op, op)
        {
        }
       ;

op
     : IDENTIFIER
     | LITERAL
     | #(EXPR ....)
     ;



alter it like this (a crude code, just pay attention to the action block):
root returns [String ret]
    : #( "==",  ret1=op, ret2=op)
       {
          ret = ret1 + "==" + ret2;

          // This will print "op1==op2"
          System.out.println(ret);
       }
    ;

op returns [String ret]
     : iden:IDENTIFIER  {ret = iden.getText();}
     | lit:LITERAL {ret = lit.getText();}
     | #(EXPR....)
           {
               /*  write code similar to that in the "root" action block
                *  and return it through the ret.
                */
            }
     ;

--------

Please ask if you have further queries.

Cheers
Sujeet

----------------

On 6/30/06, Walter Schilling <walter.schilling@computer.org> wrote:
>
> I'm just starting to use ANTLR and I've got a question that I think
> should be obvious but I have yet to see an answer for.  I'm sure I'm
> just looking in the wrong spot.  I'm writing a Java analysis tool that
> uses the Java ANTLR grammar.  On various occasions in my design, I need
> to take the AST that I have generated and translate / walk that back to
> the original text.  For example, if I had the java construct:
>
> if ((x==0) && (y==true))
>
> the AST would be represented as :
> if
>   EXPR
>     &&
>       ==
>         x
>         0
>       ==
>         y
>         true
>   {
> ...
>
> Given that a portion of my data structure is an AST starting with the
> EXPR node, is there any easy way I can walk the tree and regenerate my
> original text?  I'm thinking this should be something easy and obvious,
> but short of hand coding a java recursive loop (which so far has not
> achieved quite what I want, I haven't found an easy way to do this.)  It
> feels like there should be some way to use the existing tree walked I
> have to do this, but I'm thus far drawing a blank.
>
> Thanks for your assistance,
>
> Walt Schilling
>
> --
> Walter W. Schilling, Jr.
> 2004 - 2007 Ohio Space Grant Consortium PhD. Fellowship Recipient
> University of Toledo PhD Doctoral Candidate
> MSES 1998 University of Toledo
> BSEE 1997 Ohio Northern University
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/8362406d/attachment.html
From bans.vglab at gmail.com  Fri Jun 30 06:33:57 2006
From: bans.vglab at gmail.com (Bans VGLab)
Date: Fri Jun 30 06:34:04 2006
Subject: Fwd: [antlr-interest] parsing incomplete syntax
In-Reply-To: <626f78830606300628w13803002u3fb04e815a5fe331@mail.gmail.com>
References: <OF1E787C01.152E505D-ONC125719D.0028343F-C125719D.0029409F@Axi.be>
	<626f78830606300628w13803002u3fb04e815a5fe331@mail.gmail.com>
Message-ID: <626f78830606300633m5d82ba10o2220bd6463ed9012@mail.gmail.com>

From: Bans VGLab <bans.vglab@gmail.com>
To: Michiel Vermandel <Michiel_Vermandel@axi.be>

Hello Michiel

I have no definite solution. But I can give some views, which might be of
some help.

For this particular problem of showing columns (of course, this is not
always applicable for a general problem of this kind), We can have a
coarse-grain grammar, that is more forgiving in nature.

For instance, in your case, accept anything that conforms to something like
this:

"SELECT" select_list "FROM" table_list "WHERE" condition

Now, don't force select_list, table_list and condition to conform to their
(respective) exact format. Instead allow them to be a generic string-token.
This will accept any crappy input like:

SELECT  i have a black pen FROM tt pp qq uu WHERE i am good

But you see a good thing about this. That is, you can walk this tree using a
coarse-grain tree-parser and then subject the strings "i have a black pen",
"tt pp qq uu" and "i am good" for further parsing, specific to the form
expected. I'd term this as fine-grained parsing.

The best part of it is, you can now pin-point the error-message to the user.
For example, when you try parsing "i have a black pen" to obtain
column-list, you can easily print an error like:
   "Expecting ',' but found 'a' "

Similarly, when you parse the string "i am good" to obtain the condition
AST, you can easily pin-point the error like:
    "Unexpected token 'am' "

You see, this kind of hierarchical (multi-level parsing, with next lower
level being finer and finer) allows you to parse ahead, even if there is an
error in the beginning.

Now, how can this help you in the problem you have - text-completion? This
can be outlined as:

1. Say the user inputs:
     SELECT * FROM customer T, employee E WHERE T.

2. You can easily parse it using level-1 grammar to obtain strings
       "*",
      "customer T, employee E" and
      "T."

3. parse "*". This is a valid input.

4. parse "customer T, employee E". This is a valid input and parsing results
into two tables aliased as T and E. Now, behind the scenes, you can run a
separate thread to fetch and cache the colums of T and E from their schemas.

5. parse "T.". Now here's the tricky part. You now have the option to build
some AI that looks up the list of tables and their columns. Display the
cached columns of the table T.

Hmmmmm...looks like a very specific solution. But it indeed can be applied
in general to any problem of similar kind.

Another consideration is of performance. Bringing in more hierarchy in
grammar might slow things down, if not programmed with anticipation. Need to
strike a proper deal!

Cheers
Sujeet
---------------------
PS: My real name is Sujeet Banerjee. I can be reached at
sujeet.banerjee@gmail.com
I have deep interest in lexers/parsers. I have worked for BEA systems, in
getting their Liquiddata JDBC driver out in the market. Refer to the
publication:
http://doi.ieeecomputersociety.org/10.1109/ICDE.2006.147
---------------------



On 6/30/06, Michiel Vermandel <Michiel_Vermandel@axi.be> wrote:
>
>
> Hi,
>
> We have our own Oracle Designer/developer environment and I have written a
> Sql/Plsql/Forms Plsql code parser which is linked to our repository.
> The parser looks up all used objects in the repository. This part works
> just fine.
> But ( as in many other dev tools) the user wants to lookup data while
> typing: eg: "select  * from  drtable t where t*.*" and then pressing a key
> combination to lookup the available columns of table drtable.
> The problem is that at this point the statement is incomplete and no
> grammer rule can be applied.
> What should be the best approach to solve these kinds of issues (not only
> for looking up fields of tables but in general).
> If the AST should say (simplified)
>
> select_statement
>    select_list
>      *
>    from
>     table_list
>        table
>          drtable
>          t
>     where_condition
>         t
>        dot
>
> then I would be saved.
>
> I need the AST tree completely up to the last token.
> (of course other statements can follow this one)
>
> Any suggestions, best practices?
> Anyone done this before (in other language)?
>
> Thanks!
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/2e91dd74/attachment-0001.html
From e.papegaaij at student.utwente.nl  Fri Jun 30 07:22:26 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 30 07:22:31 2006
Subject: [antlr-interest] Reuse of tokens and rules
Message-ID: <200606301622.26448.e.papegaaij@student.utwente.nl>

Hello,

I'm working on a project that needs to be able to parse embedded code in a 
selected language. This is similar to actions in ANTLR. The problem with this 
is that to do it right the lexer has to take things such as comments, strings 
and character literals into account. For example when matching code between 
two curly brackets, brackets in a comment or string should be ignored. This 
means the lexer should know when a string or comment starts and ends. However 
not all languages use the same syntax for strings and comments. For example 
Pascal uses '(* ... *)', '{ ... }' and '// ...' for comments, whereas Java 
uses '/* ... */' and '// ...'. With strings it's '...' vs. "...".

In this language I also need to be able to parse constructs such as type names 
and identifiers. These constructs are also specified in the selected 
language. A type name in Java will be different than a type name in Pascal. 
This means I also need different parser rules for various languages.

Is it possible to write small specifications for these constructs and import 
the one needed? These rules are only a small portion of all the rules. I 
don't like the solution of having to maintain the same parser and lexer for 
multiple target languages.

PS. I'm using ANTLR v3.

Best regards,
Emond Papegaaij
From tbrandonau at gmail.com  Fri Jun 30 07:48:28 2006
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri Jun 30 07:48:31 2006
Subject: [antlr-interest] Reuse of tokens and rules
In-Reply-To: <200606301622.26448.e.papegaaij@student.utwente.nl>
References: <200606301622.26448.e.papegaaij@student.utwente.nl>
Message-ID: <ebc876d70606300748x1dc0006ek155baa5f689c91fa@mail.gmail.com>

Check out the island-grammar example in the v3 examples pack. Should give
you the basis for everything you need.

Tom.

On 7/1/06, Emond Papegaaij <e.papegaaij@student.utwente.nl> wrote:
>
> Hello,
>
> I'm working on a project that needs to be able to parse embedded code in a
> selected language. This is similar to actions in ANTLR. The problem with
> this
> is that to do it right the lexer has to take things such as comments,
> strings
> and character literals into account. For example when matching code
> between
> two curly brackets, brackets in a comment or string should be ignored.
> This
> means the lexer should know when a string or comment starts and ends.
> However
> not all languages use the same syntax for strings and comments. For
> example
> Pascal uses '(* ... *)', '{ ... }' and '// ...' for comments, whereas Java
> uses '/* ... */' and '// ...'. With strings it's '...' vs. "...".
>
> In this language I also need to be able to parse constructs such as type
> names
> and identifiers. These constructs are also specified in the selected
> language. A type name in Java will be different than a type name in
> Pascal.
> This means I also need different parser rules for various languages.
>
> Is it possible to write small specifications for these constructs and
> import
> the one needed? These rules are only a small portion of all the rules. I
> don't like the solution of having to maintain the same parser and lexer
> for
> multiple target languages.
>
> PS. I'm using ANTLR v3.
>
> Best regards,
> Emond Papegaaij
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060701/51d91a91/attachment.html
From gudnabrsam at yahoo.com  Fri Jun 30 08:01:56 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri Jun 30 08:01:57 2006
Subject: [antlr-interest] Fwd: Problems 
Message-ID: <20060630150156.14161.qmail@web55114.mail.re4.yahoo.com>

Not sure why this was sent to me personally:

--- J?rg Riedl <Jrydl@web.de> wrote:

> Date: Fri, 30 Jun 2006 07:03:14 +0200
> From: J?rg Riedl <Jrydl@web.de>
> To: Matt Benson <gudnabrsam@yahoo.com>
> Subject: Problems 
> 
> Hello. 
> 
> I have a problem with ANTLR. 
> The Consol throws the following exception! 
> 
> Antlr.g:654:4: ANTLR could not analyze this decision
> in rule UpperBound probably due to a true ambiguity
> in the grammar or left-recursion problems. ANTLR
> re-analyzed the decision with a fixed lookahead of
> k=1. 
> 
> [12:36:01] Antlr.g:654:4: Decision can match input
> such as "'i'" using multiple alternatives: 
> 
> alt 1 via NFA path
>
2596,2584,860,7423,7421,876,7503,7492,878,7516,7504,880,7529,7517,882,7540,7535,7536,7537,884,7551,7541,886,7562,7552,888,7573,7563,890,7587,7574,892,7602,7588,894,7617,7603,896,7630,7625,7626,7627,898,7641,7631,900,7652,7642,902,7661,7656,7657,7658,904,7673,7662,908,7718,7694,496,4498,4475,498,4550,4504,128,1985,1980,1979,1975,6,1008,1006,8,1011,1009,748,6404,6392,750,6410,6411,6407,756,6426,6425,6424
> 
> 
> alt 2 via NFA path 2596,2597,2586,2587 
> 
> As a result, alternative(s) 2 were disabled for that
> input 
> 
> [12:36:01] Antlr.g:654:4: The following alternatives
> are unreachable: 2 
> 
> 
> code : 
> UpperBound 
> : SingleConstExpression | 'infinity' 
> ; 
> 
> 
> 
> 
> 	
> Der WEB.DE SmartSurfer hilft bis zu 70% Ihrer
> Onlinekosten zu sparen! 
>
*http://smartsurfer.web.de/?mc=100071&distributionid=000000000071*
>
[http://smartsurfer.web.de/?mc=100071&distributionid=000000000071]
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Fri Jun 30 08:06:35 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 30 08:06:37 2006
Subject: [antlr-interest] Reuse of tokens and rules
In-Reply-To: <ebc876d70606300748x1dc0006ek155baa5f689c91fa@mail.gmail.com>
References: <200606301622.26448.e.papegaaij@student.utwente.nl>
	<ebc876d70606300748x1dc0006ek155baa5f689c91fa@mail.gmail.com>
Message-ID: <A6FEED46-BA85-4C05-8DE6-17B641FE589D@cs.usfca.edu>


On Jun 30, 2006, at 7:48 AM, Thomas Brandon wrote:

> Check out the island-grammar example in the v3 examples pack.  
> Should give you the basis for everything you need.
>

Note that this one is complicated in that you need to parse really to  
find the end of the embedded string.  If you can easily tell in the  
lexer, then just suck up all char in the embedded chunk and parse  
with the other grammar.  More straightforward.
Ter
From bans.vglab at gmail.com  Fri Jun 30 08:06:44 2006
From: bans.vglab at gmail.com (Bans VGLab)
Date: Fri Jun 30 08:06:49 2006
Subject: Fwd: [antlr-interest] parsing incomplete syntax
In-Reply-To: <OFF9B49904.B920F353-ONC125719D.004B101D-C125719D.004D759C@Axi.be>
References: <626f78830606300633m5d82ba10o2220bd6463ed9012@mail.gmail.com>
	<OFF9B49904.B920F353-ONC125719D.004B101D-C125719D.004D759C@Axi.be>
Message-ID: <626f78830606300806x4861f509xe01df920decb002d@mail.gmail.com>

Hello Michiel

#1
Would you parse "customer T, employee E" as one single token? If so, I guess
at "level 1"  I need to build a Lexer rule consuming anything but literals
(testLiterals)?

Yes.


#2
Would you create a new parser instance to parse these "level 1" strings?
Then these "level 1+" parsers should be very specific for their goal, right?

Yes. In fact, you may not create a different Parser instance. You can write
the rules for L2 grammar in the same Parser. The rules can take args, which
could be the strings passed on from L1 gramar rules. These L2 rules can be
invoked as methods/functions within the action blocks of L1 rules.

You won't have to share the vocab (as you'd do in case of different
parsers). This might bring in some efficiency.

#3
If (a > object1.

Again, you can have something like
    "if" condition
And, in L2 you can have the condition tree, which can make use of
symbol-table (that contains list of Objects visible in the scope of the
block).

Note ANTLR allows you to write rules and you can use them as
argumented-method calls. For instance, in L2 you may need to have some AI to
remove the unwanted stuff. Say for the following string:
   "(((22 *obj1.val)+ obj2."
can be processed to return two information -
     1. List of objects, say, obj1 and obj2
     2. Which of the objects is currently in focus (ie. the position of the
last '.')
These two info should be helpful enough to compute the data needed, or bring
it from a precalculated cache.

Thus, at L2 itself you can have different grammars (set of co-related
rules). Again, they can be clubbed in the same parser instance, and can be
used as utility methods.

So, the generic approach for L1 could be to fragment the input structure
pivoted on the keywords like "IF" ... A "divide and conquer" strategy. Now
at subsequent levels L2, L3...so  on, be more specific.

More levels, more accuracy in pointing errors, and more precise info an be
shown to the users. But slower the processing would be.

Hope this helps. Please do ask question if you need more clarification :)

Cheers
Sujeet

On 6/30/06, Michiel Vermandel <Michiel_Vermandel@axi.be> wrote:
>
>
> Hi Sujeet
>
> Interesting approach!
>
> How do you see a level-2 parse?
> I mean, let's assume we have parsed in a coarse-grain way and thus have
> got the strings
>
>        "*",
>      "customer T, employee E" and
>      "T."
>
> 1) Would you parse "customer T, employee E" as one single token? If so, I
> guess at "level 1"  I need to build a Lexer rule consuming anything but
> literals (testLiterals)?
>
> 2) Would you create a new parser instance to parse these "level 1"
> strings?
> Then these "level 1+" parsers should be very specific for their goal,
> right?
>
> 3) back to "level 1", other example:
>
> If (a > object1.
>
> So now I want a list of methods of object 1.
> Here I have a different case than the select example because even the
> basic structure of the if statement is incomplete.
> How do you see this?
> Should I create my coarse-grain if rule so that it even accepts "if"
> (condition)?
> So without the "then" "end if" literals?
> But then in the end i need to know if the "level 1" rules are complete...
> Seems complecated...
> In the same way you can see the problem in a "level 2" parse:
> " (a > object1."
> This again is not a valid condition...
> So I need a sort of level-2 coarse-grain rule...
> ...
>
> Or... I create two parsers. 1 fine-grain, as I have know, just to see if
> the syntax is complete and  a second coarse-grain parser for the syntax
> completion.
> Might by the way...
> Then when the fine-grain parser failes on an incomplete or malformed
> statement, I try to collect only that statement (text of start of statement
> upto start of next statement) and pass this to the coarse grained parser?!
> Then at max this one will have to parse 1 statement, and only on request
> (when the user wants to have syntax completion).
>
> Well, guess you have pointed me a direction... Isn't 100% clear to me
> though how to build the coarse-grain parser without having to rewrite the
> grammar a second time (maintenance you know...) but I might find something.
>
> Thanks for the direction, any additional ideas are welcome!
>
> Michiel
>
>
>
>
>
>  *"Bans VGLab" <bans.vglab@gmail.com>*
> Sent by: antlr-interest-bounces@antlr.org
>
> 30/06/2006 15:33
>   To
> antlr-interest@antlr.org  cc
>
>  Subject
> Fwd: [antlr-interest] parsing incomplete syntax
>
>
>
>
>
>
>
> From: *Bans VGLab* <*bans.vglab@gmail.com* <bans.vglab@gmail.com>>
> To: Michiel Vermandel <*Michiel_Vermandel@axi.be *<Michiel_Vermandel@axi.be>
> >
>
> Hello Michiel
>
> I have no definite solution. But I can give some views, which might be of
> some help.
>
> For this particular problem of showing columns (of course, this is not
> always applicable for a general problem of this kind), We can have a
> coarse-grain grammar, that is more forgiving in nature.
>
> For instance, in your case, accept anything that conforms to something
> like this:
>
> "SELECT" select_list "FROM" table_list "WHERE" condition
>
> Now, don't force select_list, table_list and condition to conform to their
> (respective) exact format. Instead allow them to be a generic string-token.
> This will accept any crappy input like:
>
> SELECT  i have a black pen FROM tt pp qq uu WHERE i am good
>
> But you see a good thing about this. That is, you can walk this tree using
> a coarse-grain tree-parser and then subject the strings "i have a black
> pen", "tt pp qq uu" and "i am good" for further parsing, specific to the
> form expected. I'd term this as fine-grained parsing.
>
> The best part of it is, you can now pin-point the error-message to the
> user. For example, when you try parsing "i have a black pen" to obtain
> column-list, you can easily print an error like:
>   "Expecting ',' but found 'a' "
>
> Similarly, when you parse the string "i am good" to obtain the condition
> AST, you can easily pin-point the error like:
>    "Unexpected token 'am' "
>
> You see, this kind of hierarchical (multi-level parsing, with next lower
> level being finer and finer) allows you to parse ahead, even if there is an
> error in the beginning.
>
> Now, how can this help you in the problem you have - text-completion? This
> can be outlined as:
>
> 1. Say the user inputs:
>     SELECT * FROM customer T, employee E WHERE T.
>
> 2. You can easily parse it using level-1 grammar to obtain strings
>       "*",
>      "customer T, employee E" and
>      "T."
>
> 3. parse "*". This is a valid input.
>
> 4. parse "customer T, employee E". This is a valid input and parsing
> results into two tables aliased as T and E. Now, behind the scenes, you can
> run a separate thread to fetch and cache the colums of T and E from their
> schemas.
>
> 5. parse "T.". Now here's the tricky part. You now have the option to
> build some AI that looks up the list of tables and their columns. Display
> the cached columns of the table T.
>
> Hmmmmm...looks like a very specific solution. But it indeed can be applied
> in general to any problem of similar kind.
>
> Another consideration is of performance. Bringing in more hierarchy in
> grammar might slow things down, if not programmed with anticipation. Need to
> strike a proper deal!
>
> Cheers
> Sujeet
> ---------------------
> PS: My real name is Sujeet Banerjee. I can be reached at *
> sujeet.banerjee@gmail.com* <sujeet.banerjee@gmail.com>
> I have deep interest in lexers/parsers. I have worked for BEA systems, in
> getting their Liquiddata JDBC driver out in the market. Refer to the
> publication:*
> **http://doi.ieeecomputersociety.org/10.1109/ICDE.2006.147 *<http://doi.ieeecomputersociety.org/10.1109/ICDE.2006.147>
> ---------------------
>
>
>
> On 6/30/06, *Michiel Vermandel* <*Michiel_Vermandel@axi.be *<Michiel_Vermandel@axi.be>>
> wrote:
>
> Hi,
>
> We have our own Oracle Designer/developer environment and I have written a
> Sql/Plsql/Forms Plsql code parser which is linked to our repository.
> The parser looks up all used objects in the repository. This part works
> just fine.
> But ( as in many other dev tools) the user wants to lookup data while
> typing: eg: "select  * from  drtable t where t*.*" and then pressing a key
> combination to lookup the available columns of table drtable.
> The problem is that at this point the statement is incomplete and no
> grammer rule can be applied.
> What should be the best approach to solve these kinds of issues (not only
> for looking up fields of tables but in general).
> If the AST should say (simplified)
>
> select_statement
>   select_list
>     *
>   from
>    table_list
>       table
>         drtable
>         t
>    where_condition
>        t
>       dot
>
> then I would be saved.
>
> I need the AST tree completely up to the last token.
> (of course other statements can follow this one)
>
> Any suggestions, best practices?
> Anyone done this before (in other language)?
>
> Thanks!
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/2b366c29/attachment-0001.html
From parrt at cs.usfca.edu  Fri Jun 30 09:39:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 30 09:38:39 2006
Subject: [antlr-interest] Re: ANTLRWorks debugger output
In-Reply-To: <ebc876d70606292238m331f7922p43c3ea9ec8c7d2d3@mail.gmail.com>
References: <ebc876d70606292232x4ba8a1aei3a83f17b31a54bb@mail.gmail.com>
	<ebc876d70606292238m331f7922p43c3ea9ec8c7d2d3@mail.gmail.com>
Message-ID: <D19924D8-42A7-48A5-B290-94AA467521C2@cs.usfca.edu>


On Jun 29, 2006, at 10:38 PM, Thomas Brandon wrote:

> Ooops, found the Debug Output, could it flag that there is output  
> there as for console output so that you know to go there.

It highlights the "messages in console" link or whatever for me  
usually...
Ter
From parrt at cs.usfca.edu  Fri Jun 30 09:43:32 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 30 09:42:27 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
In-Reply-To: <200606300903.07195.e.papegaaij@student.utwente.nl>
References: <200606291101.16634.e.papegaaij@student.utwente.nl>
	<A51BFFD9-3431-4662-A22A-18DC0F02920C@cs.usfca.edu>
	<200606300903.07195.e.papegaaij@student.utwente.nl>
Message-ID: <7CB66781-F5FE-467F-957F-609513902198@cs.usfca.edu>

On Jun 30, 2006, at 12:03 AM, Emond Papegaaij wrote:
>> If you print out the tokens, is WS really on channel 99?  If so, then
>> something really strange is happening with the token buffer.  Can you
>> try a diff on your generated lexer between ea10 and b1?
>
> I've compared it to the version you sent me last week. The output is
> identical, except for the synpreds. I've also added a println  
> statement in
> the lexer, next to channel = 99. The channel is set correctly.  
> Exactly 12
> messages are printed and 12 WS tokens are visible in the output. It  
> seems
> some other part of ANTLR is responsible for this to stop working.

Hmm...that is very odd...i was thinking the backtracking was  
preventing it.  Are you printing the tokens after they come out of  
the lexer nextToken()?  If those are ok, then something weird changed  
in the parser or more likely tokenstream.

Just looked at the filtering nextToken() method.  Looks fine.   
Hmm...all of my filter tests work, but I don't try to parse with the  
resulting token stream...

Ter
From parrt at cs.usfca.edu  Fri Jun 30 09:47:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 30 09:46:17 2006
Subject: [antlr-interest] 3.0 Tool
In-Reply-To: <ebc876d70606281033q279a9c4dqf41ca094a9369c31@mail.gmail.com>
References: <ebc876d70606281033q279a9c4dqf41ca094a9369c31@mail.gmail.com>
Message-ID: <9CFBF8F6-DF9D-4438-9BEC-F36EF312FF51@cs.usfca.edu>


On Jun 28, 2006, at 10:33 AM, Thomas Brandon wrote:

> Ter,
> I knocked up a quick Eclipse builder for Antlr 3 grammars and while  
> I found it all very nice I had a couple of minor requests.
>
> 1) I capture errors for display in Eclipse, and while this was  
> wonderfully easy with the error listener I ended up writing a regex  
> to seperate the line and file info from the message for display in  
> Eclipse. Am I missing a better way to do this and if not could it  
> be added. Currently the templates add in the line info  
> automatically, perhaps an alternate template (or parameter) could  
> be supplied that didn't include this. And also if line information  
> could be provided in the Message object (or a LinedMessage  
> subclass) that would alleviate the need to specifically deal with  
> all error types just to pull out line info.

Hmm...I wonder what Jean does in AW.

> 2) I was wondering if you could consider trying to optimise the  
> Antlr tool for an IDE environment when you port it to 3.0.  
> Specifically, it would be nice if as much of the Tool as possible  
> could be reused for multiple compilation runs. Also,  This looks  
> like it would require little more than a bit of refactoring of the  
> tool methods but would avoid the need to duplicate Antlr code.

AW uses multiple Tool objects I believe...can u be more specific?

> 3) If there was a GetInputFile method similar to the GetOutputFile  
> method then IDEs could avoid the need to access the grammar through  
> a file path.
>

Added to the list :)
Ter
From e.papegaaij at student.utwente.nl  Fri Jun 30 11:43:32 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri Jun 30 11:43:38 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
In-Reply-To: <7CB66781-F5FE-467F-957F-609513902198@cs.usfca.edu>
References: <200606291101.16634.e.papegaaij@student.utwente.nl>
	<200606300903.07195.e.papegaaij@student.utwente.nl>
	<7CB66781-F5FE-467F-957F-609513902198@cs.usfca.edu>
Message-ID: <200606302043.32598.e.papegaaij@student.utwente.nl>

On Friday 30 June 2006 18:43, Terence Parr wrote:
> On Jun 30, 2006, at 12:03 AM, Emond Papegaaij wrote:
> >> If you print out the tokens, is WS really on channel 99?  If so, then
> >> something really strange is happening with the token buffer.  Can you
> >> try a diff on your generated lexer between ea10 and b1?
> >
> > I've compared it to the version you sent me last week. The output is
> > identical, except for the synpreds. I've also added a println
> > statement in
> > the lexer, next to channel = 99. The channel is set correctly.
> > Exactly 12
> > messages are printed and 12 WS tokens are visible in the output. It
> > seems
> > some other part of ANTLR is responsible for this to stop working.
>
> Hmm...that is very odd...i was thinking the backtracking was
> preventing it.  Are you printing the tokens after they come out of
> the lexer nextToken()?  If those are ok, then something weird changed
> in the parser or more likely tokenstream.
>
> Just looked at the filtering nextToken() method.  Looks fine.
> Hmm...all of my filter tests work, but I don't try to parse with the
> resulting token stream...

I'm printing the tokens (for debugging) before parsing with a simple while 
loop. Maybe this is causing the problem? I've included the Main.java that, 
together with the grammar included in my first mail in this thread, triggers 
the problem.

Best regards
Emond
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main.java
Type: text/x-java
Size: 492 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060630/093accb5/Main.bin
From parrt at cs.usfca.edu  Fri Jun 30 11:51:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 30 11:50:31 2006
Subject: [antlr-interest] Trouble with ANTLR 3 grammar
In-Reply-To: <200606302043.32598.e.papegaaij@student.utwente.nl>
References: <200606291101.16634.e.papegaaij@student.utwente.nl>
	<200606300903.07195.e.papegaaij@student.utwente.nl>
	<7CB66781-F5FE-467F-957F-609513902198@cs.usfca.edu>
	<200606302043.32598.e.papegaaij@student.utwente.nl>
Message-ID: <71B0DEFF-2E0E-414D-BAE1-ED5586E855F4@cs.usfca.edu>


On Jun 30, 2006, at 11:43 AM, Emond Papegaaij wrote:
> I'm printing the tokens (for debugging) before parsing with a  
> simple while
> loop. Maybe this is causing the problem? I've included the  
> Main.java that,
> together with the grammar included in my first mail in this thread,  
> triggers
> the problem.

That should be ok; you can try tokens.toString() but that only prints  
the text by default.

Hmm...so when you print that stuff, the channel shows 99 on the  
whitespace right before going to the parser?

Ter
From raj.sisodia at impetus.co.in  Fri Jun 30 13:19:28 2006
From: raj.sisodia at impetus.co.in (raj sisodia)
Date: Fri Jun 30 13:13:55 2006
Subject: [antlr-interest] RE: Want to write a scripting language
Message-ID: <487c39f4b7e3468.4b7e3468487c39f@impetus.co.in>

Thanks Dominik,

Your suggestion makes sense, though I am doing the project for mostly 
learning purpose I should start with making plug-in for Eclipse. 

But before making an editor I need to complete the script first. Can 
you enlighten me on that part too?

Regards,
Raj

-----------------------------------------------------------------------
-
-

Raj,

One suggestion for your editor: What about developing an Eclipse Plug-
in for your scripting language? Even there is a learning curve of how 
to develop a plugin in Eclipse I think it is worth.

You can find more information here:
http://help.eclipse.org/help31/index.jsp?
topic=/org.eclipse.platform.doc
.user/gettingStarted/qs-02a.htm

Choose the topic 'Platform Plug-in Developer Guide'.

The advantage of using Eclipse is that you don't have to reinvent the 
wheel again for many things.

Good luck with your project!

Regards,
Dominik

