From jean-christophe.lelann at orange.fr  Fri Aug  1 01:48:40 2008
From: jean-christophe.lelann at orange.fr (Le Lann Jean-Christophe)
Date: Fri, 01 Aug 2008 10:48:40 +0200
Subject: [antlr-interest] Problem with tree rewriting in 3.1b2
Message-ID: <4892CDE8.2090206@orange.fr>

Hello !

I am playing with antrl 3.1b2, but I have a problem with tree rewriting.

It seems to me that my rule named 'expression' is not correctly 
generated in java.

java org.antlr.Tool MyGram.g MyGramTree.g
ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
MyGram.g
MyGramTree.g
javac *.java
java Test func.pma
MyGramTree.g: node from line 2:5 no viable alternative at input '>'
MyGramTree.g: node from after line 2:5 no viable alternative at input 'DOWN'

I put in attachment the files required to reproduce the problem.

Any help would be appreciated !

Thx
Jean-Christophe Le Lann

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: func.pma
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/c608b504/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: MyGram.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/c608b504/attachment-0001.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: MyGramTree.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/c608b504/attachment-0002.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.java
Type: text/x-java
Size: 733 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/c608b504/attachment.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Makefile
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/c608b504/attachment-0003.pl 

From feriaman at hotmail.com  Fri Aug  1 04:36:27 2008
From: feriaman at hotmail.com (Feriaman Ole)
Date: Fri, 1 Aug 2008 13:36:27 +0200
Subject: [antlr-interest] Template Rule Help
Message-ID: <BAY132-W363CE0A7FE6017E7EE2EA9D47F0@phx.gbl>

Hi.



Let me introduce myself, i'm Feriaman, coding for a long time, but using AnTLR for a short time.
AnTLR is great and really easier to use than things like Spirit (which i'm familiar with).



Unfortunately, the documentation i could find is not as great as the tool himself.

That's why i try to get help here.
I really apologise if this isn't the right place to ask help.

My question is : is there a way to factorise thoses grammar rules (maybe some template rule) : 
---------------
singleA returns [A value]:
        TOKENA
        i1=ID {$value = Factory.CreateA($i1.text);}
    ;
singleB returns [B value]:

       TOKENB
        i1=ID {$value = Factory.CreateB($i1.text);}

    ;

objectAList returns [List<A> value]:
    first=singleA 
        {
            $value = new List<A>();
            $value.addValue($first.value);
        }
    (
        ','
        next=singleA {$value.addValue($next.value);}
    )*
    ;


objectBList returns [List<B> value]:

    first=singleB 

        {

            $value = new List<B>();

            $value.addValue($first.value);

        }

    (

        ','

        next=singleB {$value.addValue($next.value);}

    )*

    ;
---------------

Of course, generated function objectAList and objectBList should be different, because one returns a List<A> and the orther returnes a List<B>, so i understand i can't have a single rule (or am i wrong ?), but i suppose there is a way to write thoses two rules as a template rule, isn't it ?

Thanks alot ! 
_________________________________________________________________
Plus besoin de cl? usb ! Stockez votre musique en ligne gratuitement !
http://www.windowslive.fr/skydrive/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/486560af/attachment-0001.html 

From jaluber at gmx.de  Fri Aug  1 05:42:14 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 01 Aug 2008 14:42:14 +0200
Subject: [antlr-interest] Tree parser
In-Reply-To: <20080731175819.GKLL1.212898.root@fepweb10>
References: <20080731175819.GKLL1.212898.root@fepweb10>
Message-ID: <489304A6.4080500@gmx.de>

rkevinburton at charter.net schrieb:
> it returns void. The rule in the grammar is:
> 
> program
> 	: statement*
> 	;
> 
> Kevin

I need to look at the grammar itself. Can you send me your version 
privately?

Johannes
> ---- Johannes Luber <jaluber at gmx.de> wrote: 
>> rkevinburton at charter.net schrieb:
>>> There must be some changes to the grammar as well. The lines:
>>>
>>>     	ECMAScriptWalker walker = new ECMAScriptWalker(nodes); 
>>>      	RuleReturnScope rs = walker.program(); 
>>>     	Console.Out.WriteLine(rs.Template.ToString()); 
>>>
>>> It seems that my walker start rule does not return RuleReturnScope.
>>>
>>> Kevin
>> What does program() return then?
>>
>> Johannes
>>> ---- Johannes Luber <jaluber at gmx.de> wrote: 
>>>> rkevinburton at charter.net schrieb:
>>>>> I would like to generate a tree parser. Unfortunateliy the ANTLR book has very little to say of the issue (or I just don't know where to look) and the sample grammars that I see seem to implement the 'walker' different from the way ANTLR does it now. For example in the CSharp grammar there is syntax like (the 'walker grammar names are different):
>>>>>
>>>>>                CSharpwalker = new CSharpWalker();
>>>>>                 walker.setASTFactory(new ASTNodeFactory());
>>>>>                 CSharpParser.initializeASTFactory(walker.getASTFactory());
>>>>>
>>>>> where the constructor for the waler no longer takes '0' arguments. There isn't a method 'setASTFactory' and there also isn't a method 'initializedASTFactory'. If I have a TreeParser grammar how do I integrate it with the parser?
>>>>>
>>>>> Thank you.
>>>>>
>>>>> Kevin
>>>>>
>>>> I don't know where the syntax above comes actually from, but my own tree 
>>>> grammar used a driver like this:
>>>>
>>>> CSharpParser.grammarDef_return r = parser.startRule();
>>>> CommonTree r0 = ((CommonTree) r.tree);
>>>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(r0);
>>>> nodes.TokenStream = tokens;
>>>> CSharpGenerator walker = new CSharpGenerator(nodes);
>>>> RuleReturnScope r1 = walker.startRule();
>>>> Console.Out.WriteLine(r1.Template.ToString());
>>>>
>>>> Hope this helps
> 


From jaluber at gmx.de  Fri Aug  1 07:46:06 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 01 Aug 2008 16:46:06 +0200
Subject: [antlr-interest] Tree parser
In-Reply-To: <489304A6.4080500@gmx.de>
References: <20080731175819.GKLL1.212898.root@fepweb10>
	<489304A6.4080500@gmx.de>
Message-ID: <489321AE.6040003@gmx.de>

Johannes Luber schrieb:
> rkevinburton at charter.net schrieb:
>> it returns void. The rule in the grammar is:
>>
>> program
>>     : statement*
>>     ;
>>
>> Kevin
> 
> I need to look at the grammar itself. Can you send me your version 
> privately?
> 
> Johannes

Found your problem. You need to add "output=AST;" to the options, if you 
want a tree to be returned and not the input simply consumed.

Johannes

>> ---- Johannes Luber <jaluber at gmx.de> wrote:
>>> rkevinburton at charter.net schrieb:
>>>> There must be some changes to the grammar as well. The lines:
>>>>
>>>>         ECMAScriptWalker walker = new ECMAScriptWalker(nodes); 
>>>>          RuleReturnScope rs = walker.program();         
>>>> Console.Out.WriteLine(rs.Template.ToString());
>>>> It seems that my walker start rule does not return RuleReturnScope.
>>>>
>>>> Kevin
>>> What does program() return then?
>>>
>>> Johannes
>>>> ---- Johannes Luber <jaluber at gmx.de> wrote:
>>>>> rkevinburton at charter.net schrieb:
>>>>>> I would like to generate a tree parser. Unfortunateliy the ANTLR 
>>>>>> book has very little to say of the issue (or I just don't know 
>>>>>> where to look) and the sample grammars that I see seem to 
>>>>>> implement the 'walker' different from the way ANTLR does it now. 
>>>>>> For example in the CSharp grammar there is syntax like (the 
>>>>>> 'walker grammar names are different):
>>>>>>
>>>>>>                CSharpwalker = new CSharpWalker();
>>>>>>                 walker.setASTFactory(new ASTNodeFactory());
>>>>>>                 
>>>>>> CSharpParser.initializeASTFactory(walker.getASTFactory());
>>>>>>
>>>>>> where the constructor for the waler no longer takes '0' arguments. 
>>>>>> There isn't a method 'setASTFactory' and there also isn't a method 
>>>>>> 'initializedASTFactory'. If I have a TreeParser grammar how do I 
>>>>>> integrate it with the parser?
>>>>>>
>>>>>> Thank you.
>>>>>>
>>>>>> Kevin
>>>>>>
>>>>> I don't know where the syntax above comes actually from, but my own 
>>>>> tree grammar used a driver like this:
>>>>>
>>>>> CSharpParser.grammarDef_return r = parser.startRule();
>>>>> CommonTree r0 = ((CommonTree) r.tree);
>>>>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(r0);
>>>>> nodes.TokenStream = tokens;
>>>>> CSharpGenerator walker = new CSharpGenerator(nodes);
>>>>> RuleReturnScope r1 = walker.startRule();
>>>>> Console.Out.WriteLine(r1.Template.ToString());
>>>>>
>>>>> Hope this helps
>>
> 


From r_reitzi at cs.uni-kl.de  Fri Aug  1 12:35:14 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Fri, 01 Aug 2008 21:35:14 +0200
Subject: [antlr-interest] Changes don't affect AST but require code
	regenration of tree	parser?
Message-ID: <20080801213514.20966s7oynhj88sg@horde.verrech.net>

Hi all!

Yesterday, I realized that I could spare a parser rule and needed one  
extra possibility in another rule in a rather simple gramar. After the  
changes, however, no other ASTs can be created than before. No more,  
no less.

However, after I generated parser code, even the simplest examples  
won't be accepted anymore. Tree gramar won't read a token it always  
had, stating "No rule viable". I swore and searched and swore and  
despaired - until I reminded myself of the "Clean and rebuild all if  
anything is strange" mantra. I generated all code again, including the  
tree walker. Note that tree gramar never changed! Though, now  
everything works perfectly again.

What happened there? Why did an internal change in parser rules (even  
lexer rules should not have been affected) render the genereated tree  
walker code useless?
I suspect token definitions to have a hand in this, but why should  
they have changed?

Regards

Raphael

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/388a4fdd/attachment.bin 

From florent.teichteil at gmail.com  Fri Aug  1 15:25:36 2008
From: florent.teichteil at gmail.com (Florent Teichteil)
Date: Fri, 1 Aug 2008 18:25:36 -0400
Subject: [antlr-interest] [C target] #define clashes: would it be possible
	to add ANTLR_ prefix to automatically generated macros?
Message-ID: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>

Hi,

I have been using ANTLR C target with success for several months...
until I included a file from the BOOST C++ library set.

One of my ANTLR rule is DOMAIN.
ANTLR lexer (C target) automatically generates the macro "#define DOMAIN 4".
I include a BOOST header file (for hashtable support) after the lexer
header file. Then, I am not able to parse the DOMAIN rule because
BOOST redefines it to 1!

I think BOOST should prefix its macros, but it would be safer if ANTLR
added some prefix to macros it generates in header files.

What do you think about it?

Best,
Florent Teichteil

From dinghao at microsoft.com  Fri Aug  1 16:05:26 2008
From: dinghao at microsoft.com (Dinghao Wu)
Date: Fri, 1 Aug 2008 16:05:26 -0700
Subject: [antlr-interest] [C target] #define clashes: would it be
 possible	to add ANTLR_ prefix to automatically generated macros?
In-Reply-To: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>
References: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>
Message-ID: <2E0F1A336E28714095DED5642BE35BD65E69B2D3E3@NA-EXMSG-C104.redmond.corp.microsoft.com>

It is similar for ANTLR generated code for grammar rules. Once I had rules called "null" and "string". The generated C# code clashes. I think the generated code should add some prefix so that it won't generate a method called null() or string().

Dinghao

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Florent Teichteil
Sent: Friday, August 01, 2008 3:26 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C target] #define clashes: would it be possible to add ANTLR_ prefix to automatically generated macros?

Hi,

I have been using ANTLR C target with success for several months...
until I included a file from the BOOST C++ library set.

One of my ANTLR rule is DOMAIN.
ANTLR lexer (C target) automatically generates the macro "#define DOMAIN 4".
I include a BOOST header file (for hashtable support) after the lexer
header file. Then, I am not able to parse the DOMAIN rule because
BOOST redefines it to 1!

I think BOOST should prefix its macros, but it would be safer if ANTLR
added some prefix to macros it generates in header files.

What do you think about it?

Best,
Florent Teichteil


From antlr at mirality.co.nz  Fri Aug  1 17:02:00 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 02 Aug 2008 12:02:00 +1200
Subject: [antlr-interest] Changes don't affect AST but require code
 regenration of tree	parser?
In-Reply-To: <20080801213514.20966s7oynhj88sg@horde.verrech.net>
References: <20080801213514.20966s7oynhj88sg@horde.verrech.net>
Message-ID: <20080802000209.77E2511EDBB@www.antlr.org>

At 07:35 2/08/2008, Raphael Reitzig wrote:
 >However, after I generated parser code, even the simplest
 >examples won't be accepted anymore. Tree gramar won't read a
 >token it always had, stating "No rule viable". I swore and
 >searched and swore and despaired - until I reminded myself of
 >the "Clean and rebuild all if anything is strange" mantra. I
 >generated all code again, including the tree walker. Note
 >that tree gramar never changed! Though, now everything works
 >perfectly again.
 >
 >What happened there? Why did an internal change in parser rules
 >(even lexer rules should not have been affected) render the
 >genereated tree walker code useless?

Are you sure you didn't change any of the lexer rules?  (And 
remember that if you're using a combined grammar, using a string 
literal in the parser counts as changing the lexer 
rules!)  Reordering the rules without actually changing them will 
have a similar effect (and again, if you've used quoted literals 
then that includes parser rules).

In any event, it sounds like the token definitions changed, so the 
tree parser was working on outdated values.  You need to inform 
your build environment that the YourGrammar.tokens file is an 
input dependency of YourTreeGrammar.g in order to make it realise 
it needs to rebuild the tree grammar in such cases.  (Exactly how 
you do that depends on your platform, language, and build tools of 
choice.)


From jimi at temporal-wave.com  Fri Aug  1 17:03:57 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 01 Aug 2008 17:03:57 -0700
Subject: [antlr-interest] [C target] #define clashes: would it
	be	possible to add ANTLR_ prefix to automatically generated macros?
In-Reply-To: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>
References: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>
Message-ID: <1217635437.10245.21.camel@jimi>

On Fri, 2008-08-01 at 18:25 -0400, Florent Teichteil wrote:

> Hi,
> 
> I have been using ANTLR C target with success for several months...
> until I included a file from the BOOST C++ library set.
> 
> One of my ANTLR rule is DOMAIN.
> ANTLR lexer (C target) automatically generates the macro "#define DOMAIN 4".
> I include a BOOST header file (for hashtable support) after the lexer
> header file. Then, I am not able to parse the DOMAIN rule because
> BOOST redefines it to 1!
> 
> I think BOOST should prefix its macros, but it would be safer if ANTLR
> added some prefix to macros it generates in header files.
> 
> What do you think about it?


Tried it and there are complications to do with code generation. Just do
what I do and prefix token names that clash with K:

KDOMAIN  : 'DOMAIN' ;

boost should prefix it's #defines like ANTLR does really, but the work
around is trivial.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/34a02ac6/attachment.html 

From jimi at temporal-wave.com  Fri Aug  1 17:06:37 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 01 Aug 2008 17:06:37 -0700
Subject: [antlr-interest] [C target] #define clashes: would it
	be	possible	to add ANTLR_ prefix to automatically generated macros?
In-Reply-To: <2E0F1A336E28714095DED5642BE35BD65E69B2D3E3@NA-EXMSG-C104.redmond.corp.microsoft.com>
References: <43c48b360808011525y68c5e44aj83867840aa2de8d0@mail.gmail.com>
	<2E0F1A336E28714095DED5642BE35BD65E69B2D3E3@NA-EXMSG-C104.redmond.corp.microsoft.com>
Message-ID: <1217635597.10245.25.camel@jimi>

On Fri, 2008-08-01 at 16:05 -0700, Dinghao Wu wrote:

> It is similar for ANTLR generated code for grammar rules. Once I had rules called "null" and "string". The generated C# code clashes. I think the generated code should add some prefix so that it won't generate a method called null() or string().


Basically you just don't use keywords in the target language. There is
no way to completely guarantee that things won't clash, even
ANTLR_TOKEN_ and so on. But when you prefix them then you lose the
readability of the source code when debugging. It's obvious what is
happening and easier to change your rule and token names IMO.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080801/21e4658b/attachment.html 

From passionist_81 at yahoo.co.uk  Fri Aug  1 18:07:29 2008
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Sat, 2 Aug 2008 01:07:29 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <60889.54809.qm@web25904.mail.ukl.yahoo.com>

If somebody can plz look at this grammer file and help me finding errors from this file.

I am new to antlr and have to use this grammer file to build a parser using new versio of antlr tool.

many thanx 

faraz .


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/789cb4e5/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dfa.g
Type: application/octet-stream
Size: 18974 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/789cb4e5/attachment-0001.obj 

From mikael.petterson at ericsson.com  Sat Aug  2 01:52:30 2008
From: mikael.petterson at ericsson.com (Mikael Petterson)
Date: Sat, 2 Aug 2008 10:52:30 +0200
Subject: [antlr-interest] Newbie that need to debug lexer and parser file .g
Message-ID: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B578A@esealmw104.eemea.ericsson.se>

Hi,

In my project I got help from a guy to handle output from clearcase. He
used antlr 3.x to do this. Now I am into the stuff of correcting bugs in
the code and need to know why things is not working. Ok enough with
background :-)

I open the grammerfile ( with both lexer and parser in it) in antlrworks
from command line in windows. Then I generate and run debug. Input text
panel opens up and I select my grammar file as input and error as my
'start rule' to debug. I use windows CRLF as line ending since it is
windows :-)

I press OK and I see some operation in progress and after seconds I get
the message:

Cannot launch the debugger and Time-out waiting to connect to remote
parser.

Hmmm what step am I missing out here. I have started my application in
debug mode ( containin the generated files source was the grammar file)
but I still get the same message.

any hints are very much welcome!

cheers,

//mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/8e42e142/attachment.html 

From r_reitzi at cs.uni-kl.de  Sat Aug  2 04:16:49 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sat, 02 Aug 2008 13:16:49 +0200
Subject: [antlr-interest] (no subject)
In-Reply-To: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
Message-ID: <20080802131649.56955us0deddg5s8@horde.verrech.net>

Hi!

Given a gramar this big, you should take the time and explain what  
does not work if you want anyone to have a closer look.

Are those code blocks (class definition?!) really ok with ANTLR 3?

Regards

Raphael

"faraz ahmed" <passionist_81 at yahoo.co.uk> wrote (Sat Aug  2 03:07:29 2008):

> If somebody can plz look at this grammer file and help me finding  
> errors from this file.
>
> I am new to antlr and have to use this grammer file to build a  
> parser using new versio of antlr tool.
>
> many thanx
>
> faraz .
>
>
>       __________________________________________________________
> Not happy with your email address?.
> Get the one you really want - millions of new email addresses  
> available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/4ba1ae9d/attachment.bin 

From r_reitzi at cs.uni-kl.de  Sat Aug  2 04:19:16 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sat, 02 Aug 2008 13:19:16 +0200
Subject: [antlr-interest] Newbie that need to debug lexer and
	parser	file .g
In-Reply-To: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B578A@esealmw104.eemea.ericsson.se>
References: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B578A@esealmw104.eemea.ericsson.se>
Message-ID: <20080802131916.12486plyejv2dmsk@horde.verrech.net>

Hi Mikael!

I experienced something like this as well. Restarting ANTLRWorks  
helped. May be a bug or something we both do not see.

I understand that debugging a tree gramar does need a remote parser. I  
did not get that to work, but you do not seem to need that.

Regards

Raphael

"Mikael Petterson" <mikael.petterson at ericsson.com> wrote (Sat Aug  2  
10:52:30 2008):

> Hi,
>
> In my project I got help from a guy to handle output from clearcase. He
> used antlr 3.x to do this. Now I am into the stuff of correcting bugs in
> the code and need to know why things is not working. Ok enough with
> background :-)
>
> I open the grammerfile ( with both lexer and parser in it) in antlrworks
> from command line in windows. Then I generate and run debug. Input text
> panel opens up and I select my grammar file as input and error as my
> 'start rule' to debug. I use windows CRLF as line ending since it is
> windows :-)
>
> I press OK and I see some operation in progress and after seconds I get
> the message:
>
> Cannot launch the debugger and Time-out waiting to connect to remote
> parser.
>
> Hmmm what step am I missing out here. I have started my application in
> debug mode ( containin the generated files source was the grammar file)
> but I still get the same message.
>
> any hints are very much welcome!
>
> cheers,
>
> //mike
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/b548c74f/attachment.bin 

From r_reitzi at cs.uni-kl.de  Sat Aug  2 04:35:05 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sat, 02 Aug 2008 13:35:05 +0200
Subject: [antlr-interest] Changes don't affect AST but require
	code	regenration of tree	parser?
In-Reply-To: <200808020003.m72027tc024768@mailgw3.uni-kl.de>
References: <20080801213514.20966s7oynhj88sg@horde.verrech.net>
	<200808020003.m72027tc024768@mailgw3.uni-kl.de>
Message-ID: <20080802133505.90987h592frx37ok@horde.verrech.net>

Hi Gavin, Hi Kevin!

I heeded advice coming on over the list and did not use literals in  
parser rules. ;)

I checked out the last version before my changes and checked. What I  
did change was this

***
property
	:	NOT^ property
	| 	prefixed^
	|	OP! property ( ( UNTIL | IMPL )^ property | ((AND | OR)^ property)+ ) CP!
	|	VAR EQ QUOT VAR QUOT -> ^(EQ ^(VARIABLE VAR) ^(VALUE VAR))
	|	term (EQ | NEQ | LES | GRT | LEQ | GEQ)^ term;

prefixed
	:	( ALL | GLOB | SOME | FIN | NEXT)^ ( prefixed | property );
***

to this

***
property
	:	( ALL | GLOB | SOME | FIN | NEXT | NOT)^ property
	|	OP! property ( ( UNTIL | IMPL )^ property | ((AND | OR)^ property)+ ) CP!
	|	((VAR EQ QUOT VAR QUOT) | (QUOT VAR QUOT EQ VAR)) -> ^(EQ  
^(VARIABLE VAR) ^(VALUE VAR))
	|	term (EQ | NEQ | LES | GRT | LEQ | GEQ)^ term;
***

I attach the hole files so can have a look yourself.

I just checked the token file against its old version; it did not change.

Regards

Raphael

"Gavin Lambert" <antlr at mirality.co.nz> wrote (Sat Aug  2 02:02:00 2008):

> At 07:35 2/08/2008, Raphael Reitzig wrote:
>> However, after I generated parser code, even the simplest
>> examples won't be accepted anymore. Tree gramar won't read a
>> token it always had, stating "No rule viable". I swore and
>> searched and swore and despaired - until I reminded myself of
>> the "Clean and rebuild all if anything is strange" mantra. I
>> generated all code again, including the tree walker. Note
>> that tree gramar never changed! Though, now everything works
>> perfectly again.
>>
>> What happened there? Why did an internal change in parser rules
>> (even lexer rules should not have been affected) render the
>> genereated tree walker code useless?
>
> Are you sure you didn't change any of the lexer rules?  (And  
> remember that if you're using a combined grammar, using a string  
> literal in the parser counts as changing the lexer rules!)   
> Reordering the rules without actually changing them will have a  
> similar effect (and again, if you've used quoted literals then that  
> includes parser rules).
>
> In any event, it sounds like the token definitions changed, so the  
> tree parser was working on outdated values.  You need to inform your  
> build environment that the YourGrammar.tokens file is an input  
> dependency of YourTreeGrammar.g in order to make it realise it needs  
> to rebuild the tree grammar in such cases.  (Exactly how you do that  
> depends on your platform, language, and build tools of choice.)
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: files.zip
Type: application/zip
Size: 3101 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/c0eb7b00/attachment.zip 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/c0eb7b00/attachment.bin 

From mikael.petterson at ericsson.com  Sat Aug  2 04:46:05 2008
From: mikael.petterson at ericsson.com (Mikael Petterson)
Date: Sat, 2 Aug 2008 13:46:05 +0200
Subject: [antlr-interest] (no subject)
In-Reply-To: <20080802131649.56955us0deddg5s8@horde.verrech.net>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
Message-ID: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>

Hi,

Thanks for replying. Well AFAIK ( I am annoyed that I accepted the code
, not given by me, generated by antlr without knowing it complex
implications) the grammar file defined is for recognizing clearcase
output. Depending on what clearcase returns the generated code will an
array of information that the rest of the plugin can interpret. The
problem I have is that I want to see why the parser rule 'error' does
not return anything.

Eg when clearcase returns the following:

cleartool: Error: By default won't create a version identical to
predecessor.

I supposed that the grammar file ( attatached) defined ( I don't know if
it is 2.x or 3.x grammar ? Anyone?) to return an ClearcaseElementState
object containing values:

	$elem.text, ClearCase.IS_ELEMENT |
ClearCase.ERROR_IDENTICAL_TO_PREDECESSOR

I have used the regular debugger in eclipse and foud that elements ( see
code below ) does not contain these.

So that is why I wanted to debug antlr generated code.

How can I do that?

cheers,

//mikael




protected ClearCaseElementState[] parserOutput(final String[] result) {
		final StringBuffer display = new StringBuffer();
		for (int i = 0; i < result.length; i++) {
			if (i != 0) {
				display.append("\n");
			}
			display.append(result[i]);
		}
		LOG.finest("parsing:" + display.toString());
		ClearCaseElementState[] res = null;
		try {
			final Reader reader = new
StringReader(display.toString());
			final CleartoolOutputLexer lexer = new
CleartoolOutputLexer(
					new ANTLRReaderStream(reader));
			final CommonTokenStream cts = new
CommonTokenStream(lexer);
			final CleartoolOutputParser parser = new
CleartoolOutputParser(cts);
			final List elements = parser.main();
			res = (ClearCaseElementState[]) elements
					.toArray(new
ClearCaseElementState[elements.size()]);
		} catch (final IOException e) {
			// TODO handle catch block
			e.printStackTrace();
		} catch (final RecognitionException e) {
			// TODO handle catch block
			e.printStackTrace();
		} catch (final Exception e) {
			// TODO handle catch block
			e.printStackTrace();
		}
		
		return res;
	}
-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Raphael Reitzig
Sent: den 2 augusti 2008 13:17
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] (no subject)

Hi!

Given a gramar this big, you should take the time and explain what does
not work if you want anyone to have a closer look.

Are those code blocks (class definition?!) really ok with ANTLR 3?

Regards

Raphael

"faraz ahmed" <passionist_81 at yahoo.co.uk> wrote (Sat Aug  2 03:07:29
2008):

> If somebody can plz look at this grammer file and help me finding 
> errors from this file.
>
> I am new to antlr and have to use this grammer file to build a parser 
> using new versio of antlr tool.
>
> many thanx
>
> faraz .
>
>
>       __________________________________________________________
> Not happy with your email address?.
> Get the one you really want - millions of new email addresses 
> available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: CleartoolOutput.g
Type: application/octet-stream
Size: 5662 bytes
Desc: CleartoolOutput.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/a802b725/attachment-0001.obj 

From mikael.petterson at ericsson.com  Sat Aug  2 05:41:29 2008
From: mikael.petterson at ericsson.com (Mikael Petterson)
Date: Sat, 2 Aug 2008 14:41:29 +0200
Subject: [antlr-interest] Newbie trying to be more precise about antlr debug
	problem
Message-ID: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B57AB@esealmw104.eemea.ericsson.se>

I missed the heading:-)

Hi,

Thanks for replying. Well AFAIK ( I am annoyed that I accepted the code
, not given by me, generated by antlr without knowing it complex
implications) the grammar file defined is for recognizing clearcase
output. Depending on what clearcase returns the generated code will an
array of information that the rest of the plugin can interpret. The
problem I have is that I want to see why the parser rule 'error' does
not return anything.

Eg when clearcase returns the following:

cleartool: Error: By default won't create a version identical to
predecessor.

I supposed that the grammar file ( attatached) defined ( I don't know if
it is 2.x or 3.x grammar ? Anyone?) to return an ClearcaseElementState
object containing values:

	$elem.text, ClearCase.IS_ELEMENT |
ClearCase.ERROR_IDENTICAL_TO_PREDECESSOR

I have used the regular debugger in eclipse and foud that elements ( see
code below ) does not contain these.

So that is why I wanted to debug antlr generated code.

How can I do that?

cheers,

//mikael




protected ClearCaseElementState[] parserOutput(final String[] result) {
		final StringBuffer display = new StringBuffer();
		for (int i = 0; i < result.length; i++) {
			if (i != 0) {
				display.append("\n");
			}
			display.append(result[i]);
		}
		LOG.finest("parsing:" + display.toString());
		ClearCaseElementState[] res = null;
		try {
			final Reader reader = new
StringReader(display.toString());
			final CleartoolOutputLexer lexer = new
CleartoolOutputLexer(
					new ANTLRReaderStream(reader));
			final CommonTokenStream cts = new
CommonTokenStream(lexer);
			final CleartoolOutputParser parser = new
CleartoolOutputParser(cts);
			final List elements = parser.main();
			res = (ClearCaseElementState[]) elements
					.toArray(new
ClearCaseElementState[elements.size()]);
		} catch (final IOException e) {
			// TODO handle catch block
			e.printStackTrace();
		} catch (final RecognitionException e) {
			// TODO handle catch block
			e.printStackTrace();
		} catch (final Exception e) {
			// TODO handle catch block
			e.printStackTrace();
		}
		
		return res;
	}

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/c0623f38/attachment.html 

From jean-christophe.lelann at orange.fr  Sat Aug  2 05:43:33 2008
From: jean-christophe.lelann at orange.fr (Le Lann Jean-Christophe)
Date: Sat, 02 Aug 2008 14:43:33 +0200
Subject: [antlr-interest] Re :  Problem with tree rewriting in 3.1b2
Message-ID: <48945675.1080800@orange.fr>

Hello,

I have found my 'bug' (?) in the tree grammar but I need some explanations.

In MyGram.g the *entry* rule was :
program         : (instruction)* EOF -> ^(PROGRAM instruction*)

while in MyGramTree.g (walker) the *entry* rule was :
program         : ^(PROGRAM instruction*)

That DOES NOT work.

The correct way to write this is :
program         : (PROGRAM instruction*)

i.e without "^". That seems to be the trick.

That seems to be an exception in the recipe suggested when moving from 
parser grammar to tree grammar : here (at the root of the tree) the 
direct copy of the right part  of the parser grammar  does not work (^ 
must be suppressed).

But I'd like to have your comments/approval on this explanation. If it 
is the correct explanation then I would suggest to add some warning in 
the tool (I am using antrl 3.1b2).

Bye!
Jean-Christophe




From sharwell at pixelminegames.com  Sat Aug  2 10:35:12 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 2 Aug 2008 12:35:12 -0500
Subject: [antlr-interest] Bug with "ambiguous rules" check
Message-ID: <86403CA0939415448BCCB83855EFE09A64DF81@Bloodymary.ironwillgames.com>

The following code generates an error, even though the rule is not
ambiguous. As far as I can tell, this rule shouldn't even produce a
warning. If the $ isn't enough to make the code clear (visually; it
already is syntactically), we need a keyword to reference the enclosing
rule (which might not be a bad idea anyway). The error is reported in
codegen.g, and removing the if statement that checks for it let my
grammar compile/work again :)

 

assignment_expression

// left-factoring the assignment expression and conditional_expression
for speed

        :       (       logical_or_expression

                        -> ^(logical_or_expression)

                )

                (       assignment_operator assignment_expression

                        -> ^(assignment_operator $assignment_expression
assignment_expression)

                |       '?' expression ':' assignment_expression

                        -> ^(AST_CONDITIONAL $assignment_expression
expression assignment_expression)

                )?

        |       throw_expression

                -> ^(throw_expression)

        ;

 

ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008

Grammar.g3(6159,29): error 132: reference $assignment_expression is
ambiguous; rule assignment_expression is enclosing rule and referenced
in the production (assuming enclosing rule)

Grammar.g3(6161,25): error 132: reference $assignment_expression is
ambiguous; rule assignment_expression is enclosing rule and referenced
in the production (assuming enclosing rule)

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/6b9eda62/attachment.html 

From parrt at cs.usfca.edu  Sat Aug  2 11:40:30 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Aug 2008 11:40:30 -0700
Subject: [antlr-interest] Bug with "ambiguous rules" check
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64DF81@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64DF81@Bloodymary.ironwillgames.com>
Message-ID: <5E60F6DA-B7B3-4DC2-B14C-1BD43C139FAC@cs.usfca.edu>

Hi Sam,
$r can refer to r reference or enclosing rule r in recursive rules.   
The error is correct I believe.
T
On Aug 2, 2008, at 10:35 AM, Sam Harwell wrote:

> The following code generates an error, even though the rule is not  
> ambiguous. As far as I can tell, this rule shouldn?t even produce a  
> warning. If the $ isn?t enough to make the code clear (visually; it  
> already is syntactically), we need a keyword to reference the  
> enclosing rule (which might not be a bad idea anyway). The error is  
> reported in codegen.g, and removing the if statement that checks for  
> it let my grammar compile/work again :)
>
> assignment_expression
> // left-factoring the assignment expression and  
> conditional_expression for speed
>         :       (       logical_or_expression
>                         -> ^(logical_or_expression)
>                 )
>                 (       assignment_operator assignment_expression
>                         -> ^(assignment_operator  
> $assignment_expression assignment_expression)
>                 |       '?' expression ':' assignment_expression
>                         -> ^(AST_CONDITIONAL $assignment_expression  
> expression assignment_expression)
>                 )?
>         |       throw_expression
>                 -> ^(throw_expression)
>         ;
>
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> Grammar.g3(6159,29): error 132: reference $assignment_expression is  
> ambiguous; rule assignment_expression is enclosing rule and  
> referenced in the production (assuming enclosing rule)
> Grammar.g3(6161,25): error 132: reference $assignment_expression is  
> ambiguous; rule assignment_expression is enclosing rule and  
> referenced in the production (assuming enclosing rule)
>
>


From Austin_Hastings at Yahoo.com  Sat Aug  2 13:29:29 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 02 Aug 2008 15:29:29 -0500
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open file
Message-ID: <4894C3A9.8040907@Yahoo.com>

I'm trying to get the certiv AntlrDT pluging up and running inside 
Eclipse Ganymede. Presently when I try to open a .g3 file, I'm getting 
an exception:

Could not open the editor: org.antlr.runtime.tree.CommonErrorNode cannot 
be cast to net.certiv.antlrdt.core.parser.AstNode

I'm assuming that I've got some kind of configuration problem--maybe 
something in the classpath that shouldn't be, or missing from the 
classpath that should be there. If anyone has any insight, I'm needing it.

The trace looks like:

    at 
net.certiv.antlrdt.core.ast.AntlrModuleDeclaration.acceptAst(Unknown Source)
    at net.certiv.antlrdt.core.parser.AntlrSourceParser.parse(Unknown 
Source)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.getCodeBlocks(AbstractASTFoldingStructureProvider.java:1133)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.getCodeBlocks(AbstractASTFoldingStructureProvider.java:1128)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.computeFoldingStructure(AbstractASTFoldingStructureProvider.java:764)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.computeFoldingStructure(AbstractASTFoldingStructureProvider.java:756)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.update(AbstractASTFoldingStructureProvider.java:688)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.initialize(AbstractASTFoldingStructureProvider.java:652)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.handleProjectionEnabled(AbstractASTFoldingStructureProvider.java:622)
    at 
org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider$ProjectionListener.projectionEnabled(AbstractASTFoldingStructureProvider.java:485)
    at 
org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled(ProjectionViewer.java:480)
    at 
org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection(ProjectionViewer.java:528)
    at 
org.eclipse.dltk.internal.ui.editor.ScriptSourceViewer.setVisibleDocument(ScriptSourceViewer.java:564)
    at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2758)
    at 
org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:541)
    at 
org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:369)
    at 
org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:496)
    at 
org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3807)
    at 
org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3363)
    at 
org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53)
    at 
org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:394)
    at 
org.eclipse.dltk.internal.ui.editor.ScriptEditor.createPartControl(ScriptEditor.java:1876)
    at 
org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)


Thanks,

=Austin


From rkevinburton at charter.net  Sat Aug  2 13:44:37 2008
From: rkevinburton at charter.net (rkevinburton at charter.net)
Date: Sat, 2 Aug 2008 13:44:37 -0700
Subject: [antlr-interest] detecting scope
Message-ID: <20080802164437.KDCNQ.67346.root@mp12>

I would like to implement a grammar that basically does what languages like C++ and C# do. They "know" about the context. For example within a classit is perfectly legal to have a statement like: private 'int a;'. But within a function the 'private' is not allowed. C++ allows 'static' with in a function (local) but C# does not. When defining a function within a class it is just another function (method) unless it is the same name as the enclosing class then it is a constructor. Etc. Using ANTLR how do I "detect" the "context" in which a statement is evaluated in. My first incination would be to define some variable when entering such an environment then recognize using that and the current tokens to fully parse the stream. But I was wondering if there was a better way. Maybe if I knew how to access the AST tree within a custom action I could "walk" up the tree to detect the environment? Any suggestions?

Thank you.

Kevin

From gerald at certiv.net  Sat Aug  2 14:39:56 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sat, 02 Aug 2008 14:39:56 -0700
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open  file
In-Reply-To: <4894C3A9.8040907@Yahoo.com>
References: <4894C3A9.8040907@Yahoo.com>
Message-ID: <200808022139.m72LdrD7003623@zinc.newtechlaw.com>

What version of DLTK are you using?

AntlrDT 0.4 currently requires the 1.0M6 version of DLTK.  A copy is 
available on the AntlrDT download page - the DLTK project does not 
keep prior versions available for download.

FWIW, the Ganymede release version of DLTK was downgraded from 1.0 to 
0.95 just prior to launch with significant API changes (its an 
incubator project, after all).  Unfortunately, some of these changes 
introduced regressions into AntlrDT behavior.  The next version of 
AntlrDT will target Antlr 3.1 (final) and DLTK 1.0 (stable).

AntlrDT does not rely on an external copy of Antlr, so classpath 
should not be an issue.

Let me know if you still have problems.


At 01:29 PM 8/2/2008, Austin Hastings wrote:
>I'm trying to get the certiv AntlrDT pluging up and running inside 
>Eclipse Ganymede. Presently when I try to open a .g3 file, I'm 
>getting an exception:
>
>Could not open the editor: org.antlr.runtime.tree.CommonErrorNode 
>cannot be cast to net.certiv.antlrdt.core.parser.AstNode
>
>I'm assuming that I've got some kind of configuration problem--maybe 
>something in the classpath that shouldn't be, or missing from the 
>classpath that should be there. If anyone has any insight, I'm needing it.


From sharwell at pixelminegames.com  Sat Aug  2 15:34:08 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 2 Aug 2008 17:34:08 -0500
Subject: [antlr-interest] Bug with "ambiguous rules" check
In-Reply-To: <5E60F6DA-B7B3-4DC2-B14C-1BD43C139FAC@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64DF81@Bloodymary.ironwillgames.com>
	<5E60F6DA-B7B3-4DC2-B14C-1BD43C139FAC@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64DF84@Bloodymary.ironwillgames.com>

I think I may confused about a piece of the syntax. As a reference, the
following block is valid:

logical_or_expression
	:	(	logical_and_expression
			-> ^(logical_and_expression)
		)
		(	'||' logical_and_expression
			-> ^(AST_OR $logical_or_expression
logical_and_expression)
		)*
	;

However, if I add a $ to either logical_and_expression in the rewrite
rules, it is an error. The enclosing rule is automatically a label (can
be referenced here as $logical_or_expression), so the only way to have
the $-sign/lack-there-of be ambiguous would be to write something
dreadful such as:

logical_or_expression
	:	(	logical_and_expression
			-> ^(logical_and_expression)
		)
		(	'||'
logical_or_expression=logical_and_expression
			-> ^(AST_OR $logical_or_expression
logical_and_expression)
		)*
	;

Is there another case I'm missing where the rule in my original email is
actually ambiguous?

Sam

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Saturday, August 02, 2008 1:41 PM
To: Sam Harwell
Cc: antlr-interest
Subject: Re: [antlr-interest] Bug with "ambiguous rules" check

Hi Sam,
$r can refer to r reference or enclosing rule r in recursive rules.   
The error is correct I believe.
T
On Aug 2, 2008, at 10:35 AM, Sam Harwell wrote:

> The following code generates an error, even though the rule is not  
> ambiguous. As far as I can tell, this rule shouldn't even produce a  
> warning. If the $ isn't enough to make the code clear (visually; it  
> already is syntactically), we need a keyword to reference the  
> enclosing rule (which might not be a bad idea anyway). The error is  
> reported in codegen.g, and removing the if statement that checks for  
> it let my grammar compile/work again :)
>
> assignment_expression
> // left-factoring the assignment expression and  
> conditional_expression for speed
>         :       (       logical_or_expression
>                         -> ^(logical_or_expression)
>                 )
>                 (       assignment_operator assignment_expression
>                         -> ^(assignment_operator  
> $assignment_expression assignment_expression)
>                 |       '?' expression ':' assignment_expression
>                         -> ^(AST_CONDITIONAL $assignment_expression  
> expression assignment_expression)
>                 )?
>         |       throw_expression
>                 -> ^(throw_expression)
>         ;
>
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> Grammar.g3(6159,29): error 132: reference $assignment_expression is  
> ambiguous; rule assignment_expression is enclosing rule and  
> referenced in the production (assuming enclosing rule)
> Grammar.g3(6161,25): error 132: reference $assignment_expression is  
> ambiguous; rule assignment_expression is enclosing rule and  
> referenced in the production (assuming enclosing rule)
>
>


From javafoust at gmail.com  Sat Aug  2 16:06:15 2008
From: javafoust at gmail.com (Foust)
Date: Sat, 2 Aug 2008 16:06:15 -0700
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
Message-ID: <001e01c8f4f4$5ebab0f0$1c3012d0$@com>

Hi,

 

Do lexer predicates work in v3?

 

I am used to yacc requesting tokens from the lexer as required. But ANTLR
seems to run the lexer in its entirety and gather *all* the tokens first.

 

So any predicates referencing states set in the Parser are effectively
ignored.

                                                                  

Is there any way around this?

 

(Does a particular option cause this? It is strange that this preprocessing
happens for *all* tokens, even those generated by antlr when it sees rules
with literals. Surely a literal in one rule won't become a keyword that
can't be used in any other context?)

 

Brent

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080802/0e15261c/attachment.html 

From javafoust at gmail.com  Sat Aug  2 16:30:42 2008
From: javafoust at gmail.com (Foust)
Date: Sat, 2 Aug 2008 16:30:42 -0700
Subject: [antlr-interest] detecting scope
In-Reply-To: <20080802164437.KDCNQ.67346.root@mp12>
References: <20080802164437.KDCNQ.67346.root@mp12>
Message-ID: <002901c8f4f7$c8cdd050$5a6970f0$@com>

Kevin wrote:
> I would like to implement a grammar that basically does what languages
> like C++ and C# do. They "know" about the context. For example within a
> classit is perfectly legal to have a statement like: private 'int a;'.
> But within a function the 'private' is not allowed. C++ allows 'static'
> with in a function (local) but C# does not. When defining a function
> within a class it is just another function (method) unless it is the
> same name as the enclosing class then it is a constructor. Etc. Using
> ANTLR how do I "detect" the "context" in which a statement is evaluated
> in. My first incination would be to define some variable when entering
> such an environment then recognize using that and the current tokens to
> fully parse the stream. But I was wondering if there was a better way.
> Maybe if I knew how to access the AST tree within a custom action I
> could "walk" up the tree to detect the environment? Any suggestions?

It appears that antlr gathers all the tokens up front, before any parser rules have been processed, so you may not be able to alter the actual tokens generated with a 'state'. 

But it's fairly straightforward to use the grammar to recognize only certain keywords in different contexts. Just have different lists of modifiers

	func_mods : STATIC | ...
	classvar_mods: PRIVATE | ...

and reference the each one in the correct context.

Recognizing a constructor will take a different approach. There is some discussion of using runtime information like that in the DAR (Definitive Antlr Reference). One way would be to keep track of the current class being parsed and preface the constructor rule with a test to check if the name of the current function matches the enclosing class name. You can create your own symbol table to do this, or possibly use the built-in dynamic scoping mechanism (also discussed in the book).

Brent



From javafoust at gmail.com  Sat Aug  2 16:41:50 2008
From: javafoust at gmail.com (Foust)
Date: Sat, 2 Aug 2008 16:41:50 -0700
Subject: [antlr-interest] AntrlWorks Not Connecting to the Debugger
In-Reply-To: <20080802131916.12486plyejv2dmsk@horde.verrech.net>
References: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B578A@esealmw104.eemea.ericsson.se>
	<20080802131916.12486plyejv2dmsk@horde.verrech.net>
Message-ID: <003001c8f4f9$56f749a0$04e5dce0$@com>

> -----Original Message-----
> Sent: Saturday, August 02, 2008 4:19 AM
> Subject: Re: [antlr-interest] Newbie that need to debug lexer and
> 
> Hi Mikael!
> 
> I experienced something like this as well. Restarting ANTLRWorks
> helped. May be a bug or something we both do not see.

I've noticed the same problem. Wish I had the fix to suggest.

It's always worked fine. Then after this latest reboot (and uninstalling Folding at Home beta), AntrlWorks no longer connects to the debugger. No amount of rebooting or shutting down other running programs or changing the timeout or port fixes the problem. So maybe it was some side-effect of the uninstaller? All other network activity still works fine, so it's difficult to say. The code runs fine -- just not under the AntrlWorks debugger (since it can't connect).

Please let us know if you figure out what the problem was.


From antlr at mirality.co.nz  Sat Aug  2 17:45:32 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 03 Aug 2008 12:45:32 +1200
Subject: [antlr-interest] Bug with "ambiguous rules" check
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64DF84@Bloodymary.ironwill
	games.com>
References: <86403CA0939415448BCCB83855EFE09A64DF81@Bloodymary.ironwillgames.com>
	<5E60F6DA-B7B3-4DC2-B14C-1BD43C139FAC@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64DF84@Bloodymary.ironwillgames.com>
Message-ID: <20080803004648.9A8F311ED74@www.antlr.org>

At 10:34 3/08/2008, Sam Harwell wrote:
 >I think I may confused about a piece of the syntax. As a 
reference,
 >the following block is valid:
 >
 >logical_or_expression
 >	:	(	logical_and_expression
 >			-> ^(logical_and_expression)
 >		)
 >		(	'||' logical_and_expression
 >			-> ^(AST_OR $logical_or_expression
 >logical_and_expression)
 >		)*
 >	;

Yes, because you're not re-using anything, so there's no 
ambiguity.

 >> assignment_expression
 >> // left-factoring the assignment expression and
 >> conditional_expression for speed
 >>         :       (       logical_or_expression
 >>                         -> ^(logical_or_expression)
 >>                 )
 >>                 (       assignment_operator
 >>                         assignment_expression
 >>                         -> ^(assignment_operator
 >> $assignment_expression assignment_expression)
 >>                 |       '?' expression ':' 
assignment_expression
 >>                         -> ^(AST_CONDITIONAL
 >> $assignment_expression expression assignment_expression)
 >>                 )?
 >>         |       throw_expression
 >>                 -> ^(throw_expression)
 >>         ;

I think the issue here is that ANTLR is worried that you might 
have typed 'assignment_expression' when you really meant 
'$assignment_expression'.

If you make it more explicit then the warning should go away:

assignment_expression
          :       (       logical_or_expression
                          -> ^(logical_or_expression)
                  )
                  (       assignment_operator
                          a=assignment_expression
                          -> ^(assignment_operator
                              $assignment_expression $a)
                  |       '?' expression ':' 
a=assignment_expression
                          -> ^(AST_CONDITIONAL
                              $assignment_expression expression 
$a)
                  )?
          |       throw_expression
                  -> ^(throw_expression)
          ;

(And incidentally: why are the true-part and the false-part of the 
ternary operator [assuming that's what that is] not using the same 
rule?  Surely anything permitted in one should be permitted in the 
other?)


From javafoust at gmail.com  Sat Aug  2 21:22:28 2008
From: javafoust at gmail.com (Foust)
Date: Sat, 2 Aug 2008 21:22:28 -0700
Subject: [antlr-interest] Rewriting with nodes from sub-rules?
In-Reply-To: <4892262c.0d0c360a.5b43.2824SMTPIN_ADDED@mx.google.com>
References: <48907140.9090300@ecircle.com>
	<003001c8f29d$6f839220$4e8ab660$@com>
	<4892262c.0d0c360a.5b43.2824SMTPIN_ADDED@mx.google.com>
Message-ID: <001001c8f520$8b9474e0$a2bd5ea0$@com>

> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Subject: Re: [antlr-interest] Rewriting with nodes from sub-rules?
> 
> At 11:38 31/07/2008, Foust wrote:
>  >	... -> ^(SET[nameValue.name] ...)
> 
> Have you tried this:
> 
>    -> ^(SET[$nameValue.name] ...)

No, I didn't realize that the $ was required outside of code blocks. Thank
you for the suggestion.

It seems that the first way is working now, so I'm not sure what was happing
before. But I'll try it both ways next time there is a problem.

Thanks again,

B


From antlr at mirality.co.nz  Sat Aug  2 21:30:56 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 03 Aug 2008 16:30:56 +1200
Subject: [antlr-interest] Rewriting with nodes from sub-rules?
In-Reply-To: <001001c8f520$8b9474e0$a2bd5ea0$@com>
References: <48907140.9090300@ecircle.com>
	<003001c8f29d$6f839220$4e8ab660$@com>
	<4892262c.0d0c360a.5b43.2824SMTPIN_ADDED@mx.google.com>
	<001001c8f520$8b9474e0$a2bd5ea0$@com>
Message-ID: <20080803043108.42FA12F4313@www.antlr.org>

At 16:22 3/08/2008, Foust wrote:
 >> Have you tried this:
 >>
 >>    -> ^(SET[$nameValue.name] ...)
 >
 >No, I didn't realize that the $ was required outside of code
 >blocks. Thank you for the suggestion.

Square brackets are *also* code blocks, just used differently 
:)  (They usually turn into parameters or structure members.  But 
either way they represent target language code.)


From antlr at mirality.co.nz  Sat Aug  2 21:39:41 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 03 Aug 2008 16:39:41 +1200
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <001e01c8f4f4$5ebab0f0$1c3012d0$@com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
Message-ID: <20080803043947.822E311ED55@www.antlr.org>

At 11:06 3/08/2008, Foust wrote:
>Do lexer predicates work in v3?

That depends on what you mean.  You can certainly use both 
syntactic and semantic predicates within the lexer, but they can 
only use lexer state.

Also, while I'm not entirely sure about this, I think predicates 
in the lexer can only be used to decide between alts within a 
single lexer rule.  I vaguely recall some trouble when trying to 
use them to decide between multiple lexer rules (at the top 
level).

>I am used to yacc requesting tokens from the lexer as required. 
>But ANTLR seems to run the lexer in its entirety and gather *all* 
>the tokens first.
>
>So any predicates referencing states set in the Parser are 
>effectively ignored.
> 
>
>Is there any way around this?

No, that's just the way that ANTLR works.  Lexing occurs entirely 
separately, in a separate class, and has no access to nor 
knowledge of parser state.

Generally speaking, you should keep your lexer fairly 
straightforward and unambiguous, and defer semantic decisions (and 
ambiguity resolution) until the parsing phase.

It's often easier to remember this separation if you write 
separate lexer and parser grammars, instead of using the combined 
grammar facility.  (Or if you really want to use a combined 
grammar, avoid using quoted literals within parser rules.)


From carter_cheng at yahoo.com  Sun Aug  3 03:16:38 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 3 Aug 2008 03:16:38 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
Message-ID: <741325.58408.qm@web50106.mail.re2.yahoo.com>

Hi,

Yet another beginner's question. I have been having difficulties with a lexing ambiguity and I am curious how one would go about resolving it with ANTLR. The problem I am having is follows. I have a grammar with a standard C like INT FLOAT lexing rules but I also have the ellipsis ... and range .. tokens in the grammar. The difficulty I am having is with this instance string:

1..2

Which the lexer seems to like to lex as two FLOATS as oppose to as INT RANGE INT. In the language in question FLOAT FLOAT is illegal but obviously the lexer cannot know that. Is there a way to resolve this in ANTLR cleanly?

Thanks in advance,

Carter.


      

From r_reitzi at cs.uni-kl.de  Sun Aug  3 03:41:48 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 03 Aug 2008 12:41:48 +0200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <741325.58408.qm@web50106.mail.re2.yahoo.com>
References: <741325.58408.qm@web50106.mail.re2.yahoo.com>
Message-ID: <20080803124148.18672n4iomg61sao@horde.verrech.net>

Hi Carter!

Moving range rule above float rule should do the job. ANTLR chooses  
the first matching rule it discovers, testing bottom down.

Regards

Raphael

"Carter Cheng" <carter_cheng at yahoo.com> wrote (Sun Aug  3 12:16:38 2008):

> Hi,
>
> Yet another beginner's question. I have been having difficulties  
> with a lexing ambiguity and I am curious how one would go about  
> resolving it with ANTLR. The problem I am having is follows. I have  
> a grammar with a standard C like INT FLOAT lexing rules but I also  
> have the ellipsis ... and range .. tokens in the grammar. The  
> difficulty I am having is with this instance string:
>
> 1..2
>
> Which the lexer seems to like to lex as two FLOATS as oppose to as  
> INT RANGE INT. In the language in question FLOAT FLOAT is illegal  
> but obviously the lexer cannot know that. Is there a way to resolve  
> this in ANTLR cleanly?
>
> Thanks in advance,
>
> Carter.
>
>
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/821adb2f/attachment.bin 

From antlr at mirality.co.nz  Sun Aug  3 03:50:24 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 03 Aug 2008 22:50:24 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <741325.58408.qm@web50106.mail.re2.yahoo.com>
References: <741325.58408.qm@web50106.mail.re2.yahoo.com>
Message-ID: <20080803105030.F0F3D11ED0F@www.antlr.org>

At 22:16 3/08/2008, Carter Cheng wrote:
 >1..2
 >
 >Which the lexer seems to like to lex as two FLOATS as oppose to 
as
 >INT RANGE INT. In the language in question FLOAT FLOAT is 
illegal
 >but obviously the lexer cannot know that. Is there a way to 
resolve
 >this in ANTLR cleanly?

Presumably it's splitting it up into FLOAT["1."] FLOAT[".2"]?

For starters, you could declare the former one to be an illegal 
FLOAT -- after all it's a bit odd to have a trailing period with 
no following digits.

But whether you choose to make that illegal or not (and you don't 
*have* to), you'll need to modify the FLOAT rule to look ahead, 
see two periods, and exit without matching either.

Something along these lines ought to do the trick:

fragment DIGIT: '0'..'9';
RANGE: '..';
INT
   : DIGIT+
     ( ('..') => /* RANGE; ignore */
     | '.' DIGIT* { $type = FLOAT; }
     )?
   | ('.' DIGIT) => '.' DIGIT+ { $type = FLOAT; }
   ;

(If you want to make "1." illegal, then changing DIGIT* to DIGIT+ 
on the sixth line ought to do the trick.)

You *might* need to merge the RANGE rule into the INT rule as 
well, but I think the above will work ok as is.


From carter_cheng at yahoo.com  Sun Aug  3 04:01:37 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 3 Aug 2008 04:01:37 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <20080803124148.18672n4iomg61sao@horde.verrech.net>
Message-ID: <818473.87505.qm@web50106.mail.re2.yahoo.com>

Thanks for the reply. I think that will only disambiguate between the .2 and .. cases and not the example I am describing in this case. 

The problem is the entry point into the FSA would be the leading digit and therefore the range rule will not be considered at all. The only thing I can think of but I am not sure how to state it in ANTLR is to use the syntax predicates and do something as follows.

digit+ '...'=> (return an int) /* int followed by ellipsis */
digit+ '..' => (return an int) /* int followed by range */
digit+ '.' => (possible float value) /* float or error */
   
Or is this wrong?

Regards,

Carter.


--- On Sun, 8/3/08, Raphael Reitzig <r_reitzi at cs.uni-kl.de> wrote:

> From: Raphael Reitzig <r_reitzi at cs.uni-kl.de>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: antlr-interest at antlr.org
> Date: Sunday, August 3, 2008, 3:41 AM
> Hi Carter!
> 
> Moving range rule above float rule should do the job. ANTLR
> chooses  
> the first matching rule it discovers, testing bottom down.
> 
> Regards
> 
> Raphael
> 
> "Carter Cheng" <carter_cheng at yahoo.com>
> wrote (Sun Aug  3 12:16:38 2008):
> 
> > Hi,
> >
> > Yet another beginner's question. I have been
> having difficulties  
> > with a lexing ambiguity and I am curious how one would
> go about  
> > resolving it with ANTLR. The problem I am having is
> follows. I have  
> > a grammar with a standard C like INT FLOAT lexing
> rules but I also  
> > have the ellipsis ... and range .. tokens in the
> grammar. The  
> > difficulty I am having is with this instance string:
> >
> > 1..2
> >
> > Which the lexer seems to like to lex as two FLOATS as
> oppose to as  
> > INT RANGE INT. In the language in question FLOAT FLOAT
> is illegal  
> > but obviously the lexer cannot know that. Is there a
> way to resolve  
> > this in ANTLR cleanly?
> >
> > Thanks in advance,
> >
> > Carter.
> >
> >
> >
> >
> 
> 
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging
> Program.


      

From r_reitzi at cs.uni-kl.de  Sun Aug  3 04:21:07 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 03 Aug 2008 13:21:07 +0200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <818473.87505.qm@web50106.mail.re2.yahoo.com>
References: <818473.87505.qm@web50106.mail.re2.yahoo.com>
Message-ID: <20080803132107.20834mvfd2tccxic@horde.verrech.net>

Hi again!

You are probably right and may consider Gavin's response.

But do I understand correctly that in your language '..5' is a valid  
range? What range is that? I only had 'INT..INT' in mind and would  
create a single token if it.

Consider the following:

INT : (0|1|2|3|4|5|6|7|8|9)+;
THREE_DOTS : '...';
TWO_DOTS : '..';
ONE_DOT : '.';

numerical construct :
   a=INT  THREE_DOTS     -> ^(ELLIPSIS $a)
| a=INT  TWO_DOTS b=INT -> ^(RANGE $a $b
| a=INT? ONE_DOT b=INT  -> ^(FLOAT ($a + $b))
| a=INT                 -> ^(INTEGER $a);

I think that may work; more experienced list members will have a say,  
I suppose. In particular, I am not sure about the float rewrite rule.  
You can put two integers as children and deal with conversion to float  
in your target language if it fails.

Regards

Raphael

"Carter Cheng" <carter_cheng at yahoo.com> wrote (Sun Aug  3 13:01:37 2008):

> Thanks for the reply. I think that will only disambiguate between  
> the .2 and .. cases and not the example I am describing in this case.
>
> The problem is the entry point into the FSA would be the leading  
> digit and therefore the range rule will not be considered at all.  
> The only thing I can think of but I am not sure how to state it in  
> ANTLR is to use the syntax predicates and do something as follows.
>
> digit+ '...'=> (return an int) /* int followed by ellipsis */
> digit+ '..' => (return an int) /* int followed by range */
> digit+ '.' => (possible float value) /* float or error */
>
> Or is this wrong?
>
> Regards,
>
> Carter.
>
>
> --- On Sun, 8/3/08, Raphael Reitzig <r_reitzi at cs.uni-kl.de> wrote:
>
>> From: Raphael Reitzig <r_reitzi at cs.uni-kl.de>
>> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
>> To: antlr-interest at antlr.org
>> Date: Sunday, August 3, 2008, 3:41 AM
>> Hi Carter!
>>
>> Moving range rule above float rule should do the job. ANTLR
>> chooses
>> the first matching rule it discovers, testing bottom down.
>>
>> Regards
>>
>> Raphael
>>
>> "Carter Cheng" <carter_cheng at yahoo.com>
>> wrote (Sun Aug  3 12:16:38 2008):
>>
>> > Hi,
>> >
>> > Yet another beginner's question. I have been
>> having difficulties
>> > with a lexing ambiguity and I am curious how one would
>> go about
>> > resolving it with ANTLR. The problem I am having is
>> follows. I have
>> > a grammar with a standard C like INT FLOAT lexing
>> rules but I also
>> > have the ellipsis ... and range .. tokens in the
>> grammar. The
>> > difficulty I am having is with this instance string:
>> >
>> > 1..2
>> >
>> > Which the lexer seems to like to lex as two FLOATS as
>> oppose to as
>> > INT RANGE INT. In the language in question FLOAT FLOAT
>> is illegal
>> > but obviously the lexer cannot know that. Is there a
>> way to resolve
>> > this in ANTLR cleanly?
>> >
>> > Thanks in advance,
>> >
>> > Carter.
>> >
>> >
>> >
>> >
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging
>> Program.
>
>
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/3de62370/attachment.bin 

From r_reitzi at cs.uni-kl.de  Sun Aug  3 04:40:43 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 03 Aug 2008 13:40:43 +0200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <20080803132107.20834mvfd2tccxic@horde.verrech.net>
References: <818473.87505.qm@web50106.mail.re2.yahoo.com>
	<20080803132107.20834mvfd2tccxic@horde.verrech.net>
Message-ID: <20080803134043.32757dq183jf1nok@horde.verrech.net>

I just build something that would at least be eaten by ANTLR ;)

***

grammar test;

options {
	output=AST;
}

tokens {
   ELLIPSIS;
   RANGE;
   FLOAT;
   INTEGER;
}

numericalconstruct :
   a=INT    THREE_DOTS     -> ^(ELLIPSIS $a)
| a=INT    TWO_DOTS b=INT -> ^(RANGE $a $b)
| (a=INT)? ONE_DOT b=INT  -> ^(FLOAT $a $b)
| a=INT                   -> ^(INTEGER $a);

INT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9')+;
THREE_DOTS : '...';
TWO_DOTS : '..';
ONE_DOT : '.';

***

As mentioned in my previous mail, it would be nice to merge the two  
children in the float alternative. I don't know how.

Regards

Raphael

"Raphael Reitzig" <r_reitzi at cs.uni-kl.de> wrote (Sun Aug  3 13:21:07 2008):

> Hi again!
>
> You are probably right and may consider Gavin's response.
>
> But do I understand correctly that in your language '..5' is a valid  
>  range? What range is that? I only had 'INT..INT' in mind and would   
> create a single token if it.
>
> Consider the following:
>
> INT : (0|1|2|3|4|5|6|7|8|9)+;
> THREE_DOTS : '...';
> TWO_DOTS : '..';
> ONE_DOT : '.';
>
> numerical construct :
>   a=INT  THREE_DOTS     -> ^(ELLIPSIS $a)
> | a=INT  TWO_DOTS b=INT -> ^(RANGE $a $b
> | a=INT? ONE_DOT b=INT  -> ^(FLOAT ($a + $b))
> | a=INT                 -> ^(INTEGER $a);
>
> I think that may work; more experienced list members will have a  
> say,  I suppose. In particular, I am not sure about the float  
> rewrite rule.  You can put two integers as children and deal with  
> conversion to float  in your target language if it fails.
>
> Regards
>
> Raphael
>
> "Carter Cheng" <carter_cheng at yahoo.com> wrote (Sun Aug  3 13:01:37 2008):
>
>> Thanks for the reply. I think that will only disambiguate between   
>> the .2 and .. cases and not the example I am describing in this case.
>>
>> The problem is the entry point into the FSA would be the leading   
>> digit and therefore the range rule will not be considered at all.   
>> The only thing I can think of but I am not sure how to state it in   
>> ANTLR is to use the syntax predicates and do something as follows.
>>
>> digit+ '...'=> (return an int) /* int followed by ellipsis */
>> digit+ '..' => (return an int) /* int followed by range */
>> digit+ '.' => (possible float value) /* float or error */
>>
>> Or is this wrong?
>>
>> Regards,
>>
>> Carter.
>>
>>
>> --- On Sun, 8/3/08, Raphael Reitzig <r_reitzi at cs.uni-kl.de> wrote:
>>
>>> From: Raphael Reitzig <r_reitzi at cs.uni-kl.de>
>>> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
>>> To: antlr-interest at antlr.org
>>> Date: Sunday, August 3, 2008, 3:41 AM
>>> Hi Carter!
>>>
>>> Moving range rule above float rule should do the job. ANTLR
>>> chooses
>>> the first matching rule it discovers, testing bottom down.
>>>
>>> Regards
>>>
>>> Raphael
>>>
>>> "Carter Cheng" <carter_cheng at yahoo.com>
>>> wrote (Sun Aug  3 12:16:38 2008):
>>>
>>>> Hi,
>>>>
>>>> Yet another beginner's question. I have been
>>> having difficulties
>>>> with a lexing ambiguity and I am curious how one would
>>> go about
>>>> resolving it with ANTLR. The problem I am having is
>>> follows. I have
>>>> a grammar with a standard C like INT FLOAT lexing
>>> rules but I also
>>>> have the ellipsis ... and range .. tokens in the
>>> grammar. The
>>>> difficulty I am having is with this instance string:
>>>>
>>>> 1..2
>>>>
>>>> Which the lexer seems to like to lex as two FLOATS as
>>> oppose to as
>>>> INT RANGE INT. In the language in question FLOAT FLOAT
>>> is illegal
>>>> but obviously the lexer cannot know that. Is there a
>>> way to resolve
>>>> this in ANTLR cleanly?
>>>>
>>>> Thanks in advance,
>>>>
>>>> Carter.
>>>>
>>>>
>>>>
>>>>
>>>
>>>
>>>
>>> ----------------------------------------------------------------
>>> This message was sent using IMP, the Internet Messaging
>>> Program.
>>
>>
>>
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/7c9da0bc/attachment-0001.bin 

From antlr at mirality.co.nz  Sun Aug  3 05:01:32 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 00:01:32 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <20080803132107.20834mvfd2tccxic@horde.verrech.net>
References: <818473.87505.qm@web50106.mail.re2.yahoo.com>
	<20080803132107.20834mvfd2tccxic@horde.verrech.net>
Message-ID: <20080803120155.9438611EC99@www.antlr.org>

At 23:21 3/08/2008, Raphael Reitzig wrote:
 >But do I understand correctly that in your language '..5' is a
 >valid range? What range is that? I only had 'INT..INT' in mind
 >and would create a single token if it.

The problem is with the FLOAT rule.  Faced with the input "1..5", 
ANTLR will consider the INT rule (matches "1" only) and the FLOAT 
rule (matches "1.") -- so FLOAT will win.  (Once ANTLR sees 
"digits followed by a dot" that's enough for it to reject INT in 
favour of FLOAT -- it doesn't look ahead any further than 
that).  Once it's inside FLOAT, it will consume the dot, then 
encounter another dot after it, say "that's not a digit!" and 
exit.  Now it has input of ".5" to go, so it parses that as 
another FLOAT.

(I'm making some assumptions about the rules in the OP's grammar, 
though, since they weren't actually posted.  But I'm reasonably 
sure they're valid.)

The rules I posted (or minor variations thereof) should resolve 
this kind of ambiguity.

 >numerical construct :
 >   a=INT  THREE_DOTS     -> ^(ELLIPSIS $a)
 >| a=INT  TWO_DOTS b=INT -> ^(RANGE $a $b
 >| a=INT? ONE_DOT b=INT  -> ^(FLOAT ($a + $b))
 >| a=INT                 -> ^(INTEGER $a);

The trouble with doing this kind of thing in the parser is that 
you no longer have single tokens.  In addition to giving extra 
work for the tree walker to deal with, this also means that any 
HIDDEN or off-channel tokens produced by the lexer could have been 
silently inserted.

This isn't always a bad thing -- after all, it will let you parse 
"1./*foo*/5" as if it were "1.5" -- but that might turn out to be 
more confusing than helpful.  And it would similarly parse 
"1.    5" as "1.5" as well, which is usually less 
desirable.  (Assuming that comments and whitespace are being 
hidden.)


From r_reitzi at cs.uni-kl.de  Sun Aug  3 05:15:52 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 03 Aug 2008 14:15:52 +0200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <200808031203.m73C1rf1032532@mailgw3.uni-kl.de>
References: <818473.87505.qm@web50106.mail.re2.yahoo.com>
	<20080803132107.20834mvfd2tccxic@horde.verrech.net>
	<200808031203.m73C1rf1032532@mailgw3.uni-kl.de>
Message-ID: <20080803141552.1728187n2v6z6074@horde.verrech.net>

Hi!

"Gavin Lambert" <antlr at mirality.co.nz> wrote (Sun Aug  3 14:01:32 2008):
> The trouble with doing this kind of thing in the parser is that you  
> no longer have single tokens.  In addition to giving extra work for  
> the tree walker to deal with

I can't see extra work. I rather might save some work, for if lexer  
would give me a RANGE token with text "5..10", to create a proper AST,  
I'd have to split this string. My way, I have the components directly  
at hand. But where is an imagined tree walker affected  by how we  
create the AST?

> this also means that any HIDDEN or off-channel tokens produced by  
> the lexer could have been silently inserted.
>
> This isn't always a bad thing -- after all, it will let you parse  
> "1./*foo*/5" as if it were "1.5" -- but that might turn out to be  
> more confusing than helpful.  And it would similarly parse "1.    5"  
> as "1.5" as well, which is usually less desirable.  (Assuming that  
> comments and whitespace are being hidden.)

This is, of course, true. We don't want another spacecraft explode in midair.
One could get around this not ignoring whitespaces et al. But that, I  
suppose, would lead to far more trouble.


I wonder, anyway, why neither

| (a=INT)? ONE_DOT b=INT  -> ^(FLOAT {new CommonToken(FLOAT, $a.text +  
"." + $b.text)})

nor

| (a=INT)? ONE_DOT b=INT  -> {new CommonTree(new CommonToken(FLOAT,  
$a.text + "." + $b.text))}

would work as page 170 of ANTLR reference proposes.


Regards

Raphael



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/6b7700d5/attachment.bin 

From pcc482719 at gmail.com  Sun Aug  3 10:19:45 2008
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Sun, 03 Aug 2008 13:19:45 -0400
Subject: [antlr-interest] Beginner lexing question.
Message-ID: <4895E8B1.9050105@gmail.com>

I'm building a parser for a C-like language and I've encountered an 
issue that I think has something to do with the order in which ANTLR 
tries to match rules. This situation is this...

In my expression grammar I have a rule

unary_expression
    :   ... various irrelevant alternatives
    |   UNARY_OPERATOR cast_expression;

Where near the bottom of the grammar file I have

UNARY_OPERATOR
    :   ('&' | '*' | '+' | '-' | '~' | '!');

Now when I try to parse '*X' I get a NoViableAltException. However, if I 
replace UNARY_OPERATOR in the unary_expression rule with an explicit 
'*', things work (well... not the other unary operators, of course). 
That is:

unary_expression
    :   ... various irrelevant alternatives
    |   '*' cast_expression;

I have explicit mention of '*' elsewhere in my grammar (in the rule for 
multiplicative expressions) so I thought that perhaps the lexer was 
seeing a '*' on the input and returning the token used in the multiply 
rule instead of a UNARY_OPERATOR token. Note that the multiply rule 
appears above the definition of UNARY_OPERATOR in my grammar file.

However, if I change the definition of UNARY_OPERATOR to just

UNARY_OPERATOR
    :   '*';

It works! I'm at a loss to understand why including additional 
alternatives for UNARY_OPERATOR would cause a problem during the parse 
of '*X'. As a final test I put all the necessary alternatives directly 
in the unary_expression rule like this:

unary_expression
    :   ... various irrelevant alternatives
    |   ('&' | '*' | '+' | '-' | '~' | '!') cast_expression;


This works fine as well (now I get a warning about the UNARY_OPERATOR 
token definition being unreachable, but I understand that). In short 
there is something about the way the lexer rules work that I'm not 
getting. I'm hoping someone here might be able to shed some light on 
this behavior.

Thanks in advance!

Peter


From javafoust at gmail.com  Sun Aug  3 11:34:12 2008
From: javafoust at gmail.com (Foust)
Date: Sun, 3 Aug 2008 11:34:12 -0700
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
Message-ID: <001901c8f597$882c98b0$9885ca10$@com>

> At 9:40pm, August 02, 2008 Gavin wrote:
> 
> At 11:06 3/08/2008, Foust wrote:
> >Do lexer predicates work in v3?
> 
> That depends on what you mean.  You can certainly use both
> syntactic and semantic predicates within the lexer, but they can
> only use lexer state.

That would explain why setting a static flag in the Lexer from the Parser
has no effect -- the Lexer has already run to completion before the parser
receives the first token.

> 
> Also, while I'm not entirely sure about this, I think predicates
> in the lexer can only be used to decide between alts within a
> single lexer rule.  I vaguely recall some trouble when trying to
> use them to decide between multiple lexer rules (at the top
> level).

I'll keep that in mind. I've had nothing but trouble trying to get the Lexer
to return tokens based on context (as best determined by the Parser).


> Generally speaking, you should keep your lexer fairly
> straightforward and unambiguous, and defer semantic decisions (and
> ambiguity resolution) until the parsing phase.

Yes... it started out that way. But to allow spaces to be part of a config
value (read up to EOL), the Lexer needs to honor state. (Place spaces in the
HIDDEN channel for all other cases - outside of a special
config/preprocessor rule).

The parser shouldn't have to go through contortions because of lexer design.
In fact, it seems as though the lexer itself is fine, if only it would get
tokens as required, rather than all at once.

Might I suggest the lexer be endowed with a state mechanism that can be
controlled from the parser?



From mattpalms at gmail.com  Sun Aug  3 11:40:21 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Sun, 3 Aug 2008 19:40:21 +0100
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <001901c8f597$882c98b0$9885ca10$@com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
	<001901c8f597$882c98b0$9885ca10$@com>
Message-ID: <36c8729e0808031140r759531e1ue8d2d76be882c0d7@mail.gmail.com>

I am having similar issues - I'm having to encode the parser state into the
lexer.  This is because I have character sequences that are subsets of one
another, etc.  that should only match in certain places.  The high level
parser rules determine this very nicely - but I have to explicitly push down
those rules into the lexer using predicates.

I was wondering myself if it would be possible to automate this process.

Matt.

On Sun, Aug 3, 2008 at 7:34 PM, Foust <javafoust at gmail.com> wrote:

> > At 9:40pm, August 02, 2008 Gavin wrote:
> >
> > At 11:06 3/08/2008, Foust wrote:
> > >Do lexer predicates work in v3?
> >
> > That depends on what you mean.  You can certainly use both
> > syntactic and semantic predicates within the lexer, but they can
> > only use lexer state.
>
> That would explain why setting a static flag in the Lexer from the Parser
> has no effect -- the Lexer has already run to completion before the parser
> receives the first token.
>
> >
> > Also, while I'm not entirely sure about this, I think predicates
> > in the lexer can only be used to decide between alts within a
> > single lexer rule.  I vaguely recall some trouble when trying to
> > use them to decide between multiple lexer rules (at the top
> > level).
>
> I'll keep that in mind. I've had nothing but trouble trying to get the
> Lexer
> to return tokens based on context (as best determined by the Parser).
>
>
> > Generally speaking, you should keep your lexer fairly
> > straightforward and unambiguous, and defer semantic decisions (and
> > ambiguity resolution) until the parsing phase.
>
> Yes... it started out that way. But to allow spaces to be part of a config
> value (read up to EOL), the Lexer needs to honor state. (Place spaces in
> the
> HIDDEN channel for all other cases - outside of a special
> config/preprocessor rule).
>
> The parser shouldn't have to go through contortions because of lexer
> design.
> In fact, it seems as though the lexer itself is fine, if only it would get
> tokens as required, rather than all at once.
>
> Might I suggest the lexer be endowed with a state mechanism that can be
> controlled from the parser?
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/5d8c7f04/attachment.html 

From carter_cheng at yahoo.com  Sun Aug  3 12:28:28 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 3 Aug 2008 12:28:28 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
Message-ID: <910468.15772.qm@web50108.mail.re2.yahoo.com>

How would you declare the FLOAT rule in this case? 


--- On Sun, 8/3/08, Gavin Lambert <antlr at mirality.co.nz> wrote:

> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> Date: Sunday, August 3, 2008, 3:50 AM
> At 22:16 3/08/2008, Carter Cheng wrote:
>  >1..2
>  >
>  >Which the lexer seems to like to lex as two FLOATS as
> oppose to 
> as
>  >INT RANGE INT. In the language in question FLOAT FLOAT
> is 
> illegal
>  >but obviously the lexer cannot know that. Is there a
> way to 
> resolve
>  >this in ANTLR cleanly?
> 
> Presumably it's splitting it up into
> FLOAT["1."] FLOAT[".2"]?
> 
> For starters, you could declare the former one to be an
> illegal 
> FLOAT -- after all it's a bit odd to have a trailing
> period with 
> no following digits.
> 
> But whether you choose to make that illegal or not (and you
> don't 
> *have* to), you'll need to modify the FLOAT rule to
> look ahead, 
> see two periods, and exit without matching either.
> 
> Something along these lines ought to do the trick:
> 
> fragment DIGIT: '0'..'9';
> RANGE: '..';
> INT
>    : DIGIT+
>      ( ('..') => /* RANGE; ignore */
>      | '.' DIGIT* { $type = FLOAT; }
>      )?
>    | ('.' DIGIT) => '.' DIGIT+ { $type =
> FLOAT; }
>    ;
> 
> (If you want to make "1." illegal, then changing
> DIGIT* to DIGIT+ 
> on the sixth line ought to do the trick.)
> 
> You *might* need to merge the RANGE rule into the INT rule
> as 
> well, but I think the above will work ok as is.


      

From carter_cheng at yahoo.com  Sun Aug  3 13:11:31 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 3 Aug 2008 13:11:31 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <910468.15772.qm@web50108.mail.re2.yahoo.com>
Message-ID: <627368.5660.qm@web50103.mail.re2.yahoo.com>

Thanks for the replies both. I have been trying this and it still does not seem to lex properly. Am I still doing something wrong? This is with ANTLR 3.0.1

Carter.

DOTDOT	: '..'
	;


INT	

	: Digit+ ( ('..') =>
        | '.' Digit* { $type = FLOAT; } )?

	| ( '0' ('x'|'X') ) => '0' ('x'|'X') (Digit|'a'..'f'|'A'..'F')+
        | ('.' Digit+) => '.' Digit+ { $type = FLOAT; }
	;

--- On Sun, 8/3/08, Carter Cheng <carter_cheng at yahoo.com> wrote:

> From: Carter Cheng <carter_cheng at yahoo.com>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: antlr-interest at antlr.org
> Date: Sunday, August 3, 2008, 12:28 PM
> How would you declare the FLOAT rule in this case? 
> 
> 
> --- On Sun, 8/3/08, Gavin Lambert
> <antlr at mirality.co.nz> wrote:
> 
> > From: Gavin Lambert <antlr at mirality.co.nz>
> > Subject: Re: [antlr-interest] Lexing problem I cannot
> resolve
> > To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> > Date: Sunday, August 3, 2008, 3:50 AM
> > At 22:16 3/08/2008, Carter Cheng wrote:
> >  >1..2
> >  >
> >  >Which the lexer seems to like to lex as two
> FLOATS as
> > oppose to 
> > as
> >  >INT RANGE INT. In the language in question FLOAT
> FLOAT
> > is 
> > illegal
> >  >but obviously the lexer cannot know that. Is
> there a
> > way to 
> > resolve
> >  >this in ANTLR cleanly?
> > 
> > Presumably it's splitting it up into
> > FLOAT["1."] FLOAT[".2"]?
> > 
> > For starters, you could declare the former one to be
> an
> > illegal 
> > FLOAT -- after all it's a bit odd to have a
> trailing
> > period with 
> > no following digits.
> > 
> > But whether you choose to make that illegal or not
> (and you
> > don't 
> > *have* to), you'll need to modify the FLOAT rule
> to
> > look ahead, 
> > see two periods, and exit without matching either.
> > 
> > Something along these lines ought to do the trick:
> > 
> > fragment DIGIT: '0'..'9';
> > RANGE: '..';
> > INT
> >    : DIGIT+
> >      ( ('..') => /* RANGE; ignore */
> >      | '.' DIGIT* { $type = FLOAT; }
> >      )?
> >    | ('.' DIGIT) => '.' DIGIT+ {
> $type =
> > FLOAT; }
> >    ;
> > 
> > (If you want to make "1." illegal, then
> changing
> > DIGIT* to DIGIT+ 
> > on the sixth line ought to do the trick.)
> > 
> > You *might* need to merge the RANGE rule into the INT
> rule
> > as 
> > well, but I think the above will work ok as is.


      

From jaluber at gmx.de  Sun Aug  3 13:22:50 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 03 Aug 2008 22:22:50 +0200
Subject: [antlr-interest] Beginner lexing question.
In-Reply-To: <4895E8B1.9050105@gmail.com>
References: <4895E8B1.9050105@gmail.com>
Message-ID: <4896139A.9080304@gmx.de>

Peter C. Chapin schrieb:
> I'm building a parser for a C-like language and I've encountered an 
> issue that I think has something to do with the order in which ANTLR 
> tries to match rules. This situation is this...
> 
> In my expression grammar I have a rule
> 
> unary_expression
>    :   ... various irrelevant alternatives
>    |   UNARY_OPERATOR cast_expression;
> 
> Where near the bottom of the grammar file I have
> 
> UNARY_OPERATOR
>    :   ('&' | '*' | '+' | '-' | '~' | '!');
> 
> Now when I try to parse '*X' I get a NoViableAltException. However, if I 
> replace UNARY_OPERATOR in the unary_expression rule with an explicit 
> '*', things work (well... not the other unary operators, of course). 
> That is:
> 
> unary_expression
>    :   ... various irrelevant alternatives
>    |   '*' cast_expression;
> 
> I have explicit mention of '*' elsewhere in my grammar (in the rule for 
> multiplicative expressions) so I thought that perhaps the lexer was 
> seeing a '*' on the input and returning the token used in the multiply 
> rule instead of a UNARY_OPERATOR token. Note that the multiply rule 
> appears above the definition of UNARY_OPERATOR in my grammar file.
> 
> However, if I change the definition of UNARY_OPERATOR to just
> 
> UNARY_OPERATOR
>    :   '*';
> 
> It works! I'm at a loss to understand why including additional 
> alternatives for UNARY_OPERATOR would cause a problem during the parse 
> of '*X'. As a final test I put all the necessary alternatives directly 
> in the unary_expression rule like this:
> 
> unary_expression
>    :   ... various irrelevant alternatives
>    |   ('&' | '*' | '+' | '-' | '~' | '!') cast_expression;
> 
> 
> This works fine as well (now I get a warning about the UNARY_OPERATOR 
> token definition being unreachable, but I understand that). In short 
> there is something about the way the lexer rules work that I'm not 
> getting. I'm hoping someone here might be able to shed some light on 
> this behavior.
> 
> Thanks in advance!
> 
> Peter
> 
You fell into the trap of combined grammars. Don't use in parser rules 
literals, as those are turned into different lexer rules, even if they 
match the same string. That causes only problems, as you noticed.

Johannes

From jaluber at gmx.de  Sun Aug  3 13:24:46 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 03 Aug 2008 22:24:46 +0200
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <36c8729e0808031140r759531e1ue8d2d76be882c0d7@mail.gmail.com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>	<20080802131649.56955us0deddg5s8@horde.verrech.net>	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>	<001901c8f597$882c98b0$9885ca10$@com>
	<36c8729e0808031140r759531e1ue8d2d76be882c0d7@mail.gmail.com>
Message-ID: <4896140E.60802@gmx.de>

Matt Palmer schrieb:
> I am having similar issues - I'm having to encode the parser state into 
> the lexer.  This is because I have character sequences that are subsets 
> of one another, etc.  that should only match in certain places.  The 
> high level parser rules determine this very nicely - but I have to 
> explicitly push down those rules into the lexer using predicates.
> 
> I was wondering myself if it would be possible to automate this process.
> 
> Matt.

There is an XQuery project which has a lexer which only creates token on 
demand. I don't the project page, but searching the archives should give 
you clues.

Johannes
> 
> On Sun, Aug 3, 2008 at 7:34 PM, Foust <javafoust at gmail.com 
> <mailto:javafoust at gmail.com>> wrote:
> 
>      > At 9:40pm, August 02, 2008 Gavin wrote:
>      >
>      > At 11:06 3/08/2008, Foust wrote:
>      > >Do lexer predicates work in v3?
>      >
>      > That depends on what you mean.  You can certainly use both
>      > syntactic and semantic predicates within the lexer, but they can
>      > only use lexer state.
> 
>     That would explain why setting a static flag in the Lexer from the
>     Parser
>     has no effect -- the Lexer has already run to completion before the
>     parser
>     receives the first token.
> 
>      >
>      > Also, while I'm not entirely sure about this, I think predicates
>      > in the lexer can only be used to decide between alts within a
>      > single lexer rule.  I vaguely recall some trouble when trying to
>      > use them to decide between multiple lexer rules (at the top
>      > level).
> 
>     I'll keep that in mind. I've had nothing but trouble trying to get
>     the Lexer
>     to return tokens based on context (as best determined by the Parser).
> 
> 
>      > Generally speaking, you should keep your lexer fairly
>      > straightforward and unambiguous, and defer semantic decisions (and
>      > ambiguity resolution) until the parsing phase.
> 
>     Yes... it started out that way. But to allow spaces to be part of a
>     config
>     value (read up to EOL), the Lexer needs to honor state. (Place
>     spaces in the
>     HIDDEN channel for all other cases - outside of a special
>     config/preprocessor rule).
> 
>     The parser shouldn't have to go through contortions because of lexer
>     design.
>     In fact, it seems as though the lexer itself is fine, if only it
>     would get
>     tokens as required, rather than all at once.
> 
>     Might I suggest the lexer be endowed with a state mechanism that can be
>     controlled from the parser?
> 
> 
> 


From jaluber at gmx.de  Sun Aug  3 13:34:11 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 03 Aug 2008 22:34:11 +0200
Subject: [antlr-interest] detecting scope
In-Reply-To: <20080802164437.KDCNQ.67346.root@mp12>
References: <20080802164437.KDCNQ.67346.root@mp12>
Message-ID: <48961643.9020604@gmx.de>

rkevinburton at charter.net schrieb:
> I would like to implement a grammar that basically does what languages like C++ and C# do. They "know" about the context. For example within a classit is perfectly legal to have a statement like: private 'int a;'. But within a function the 'private' is not allowed. C++ allows 'static' with in a function (local) but C# does not. When defining a function within a class it is just another function (method) unless it is the same name as the enclosing class then it is a constructor. Etc. Using ANTLR how do I "detect" the "context" in which a statement is evaluated in. My first incination would be to define some variable when entering such an environment then recognize using that and the current tokens to fully parse the stream. But I was wondering if there was a better way. Maybe if I knew how to access the AST tree within a custom action I could "walk" up the tree to detect the environment? Any suggestions?
> 
> Thank you.
> 
> Kevin
> 

Don't try to encode the various options of modifiers for the various 
definitions in the grammar. Assuming C# as language, this causes ANTLR 
only to complain about the ambiguity if "public" belongs to a method or 
a class. After all a class can contain both possiblities. Another 
problem is that classes may be "private" only when nested, but you still 
end up allowing it for unnested classes.

Well, you could work with switches, but at some point you will realize 
that some features can't be solved in a single pass - like referencing a 
method before its definition. The proper solution is create a common 
modifier rule, which contains all valid modifiers, and to use a symbol 
table. Then in the second pass you can look if somewhere an illegal 
modifer is used. An added bonus is to have improved error messages for 
common cases, too.

Johannes

From antlr at mirality.co.nz  Sun Aug  3 13:32:00 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 08:32:00 +1200
Subject: [antlr-interest] Beginner lexing question.
In-Reply-To: <4895E8B1.9050105@gmail.com>
References: <4895E8B1.9050105@gmail.com>
Message-ID: <20080803203208.7A05211ED43@www.antlr.org>

At 05:19 4/08/2008, Peter C. Chapin wrote:
 >UNARY_OPERATOR
 >    :   ('&' | '*' | '+' | '-' | '~' | '!');
 >
 >Now when I try to parse '*X' I get a NoViableAltException. 
However,
 >if I replace UNARY_OPERATOR in the unary_expression rule with an 

 >explicit '*', things work (well... not the other unary 
operators, of
 >course). That is:
 >
 >unary_expression
 >    :   ... various irrelevant alternatives
 >    |   '*' cast_expression;

This is the problem.  By using '*' in a parser rule you have 
created an implicit token similar to this:
   T42 : '*';

Now your lexer is ambiguous between T42 and UNARY_OPERATOR -- so 
on seeing a '*' as input, ANTLR will generate one or the other 
(depending on the order it sees the rules in) and the other will 
never happen, which will break your parser rules.

Ideally, when starting out with ANTLR you should avoid composite 
grammars (or at least avoid using quoted literals in parser 
rules), since they lead to this kind of trap all too easily.

Probably the best thing to do to resolve this specific problem is 
to make separate lexer rules for each operator symbol and then 
change UNARY_OPERATOR into a parser rule.  Another useful rule of 
thumb is that where ambiguity exists, try to avoid assigning 
semantic meaning in the lexer.  (Sometimes it can't be avoided due 
to whitespace-handling issues, but that makes things complicated.)


From antlr at mirality.co.nz  Sun Aug  3 13:39:02 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 08:39:02 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <627368.5660.qm@web50103.mail.re2.yahoo.com>
References: <910468.15772.qm@web50108.mail.re2.yahoo.com>
	<627368.5660.qm@web50103.mail.re2.yahoo.com>
Message-ID: <20080803203908.F178B312966@www.antlr.org>

At 08:11 4/08/2008, Carter Cheng wrote:
 >Thanks for the replies both. I have been trying this and it 
still
 >does not seem to lex properly. Am I still doing something wrong? 

 >This is with ANTLR 3.0.1
[...]
 >INT	
 >	: Digit+ ( ('..') =>
 >        | '.' Digit* { $type = FLOAT; } )?
 >
 >	| ( '0' ('x'|'X') ) => '0' ('x'|'X') (Digit|'a'..'f'|'A'..'F')+
 >        | ('.' Digit+) => '.' Digit+ { $type = FLOAT; }
 >	;

Hmm.  First of all, make sure that the FLOAT rule is a fragment 
rule -- doesn't matter what's in it (since it'll never be called), 
but it must not be a top-level candidate:
   fragment FLOAT: Digit;

If that doesn't help, then you might need to merge the DOTDOT and 
INT rules, as I said before.  But where and how is it failing?

(A useful thing to do here is to try running the lexer in 
isolation and dump the generated tokens to screen/file, so you can 
see what tokens are being generated and what each token contains.)


From antlr at mirality.co.nz  Sun Aug  3 13:45:39 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 08:45:39 +1200
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <001901c8f597$882c98b0$9885ca10$@com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
	<001901c8f597$882c98b0$9885ca10$@com>
Message-ID: <20080803204547.0BD5911ED46@www.antlr.org>

At 06:34 4/08/2008, Foust wrote:
 >Yes... it started out that way. But to allow spaces to be part
 >of a config value (read up to EOL), the Lexer needs to honor
 >state. (Place spaces in the HIDDEN channel for all other cases
 >- outside of a special config/preprocessor rule).

Are you hiding the EOLs as well?  (Usually they're lumped in with 
whitespace.)

If so, then you'll have to match everything in the lexer anyway, 
since the parser won't be able to see the EOL.  As long as you 
have something fairly distinctive to start matching on, this 
shouldn't be hard, and you shouldn't need to do any parser->lexer 
contortions.  See how line and block comments are implemented in 
the examples.

(And if you can modify the language you're parsing, now would be a 
good time to make it use a quoted string or similar instead of 
simply reading to EOL.)


From javafoust at gmail.com  Sun Aug  3 15:28:56 2008
From: javafoust at gmail.com (Foust)
Date: Sun, 3 Aug 2008 15:28:56 -0700
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <489618fb.1d3e400a.3955.3b9aSMTPIN_ADDED@mx.google.com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
	<001901c8f597$882c98b0$9885ca10$@com>
	<489618fb.1d3e400a.3955.3b9aSMTPIN_ADDED@mx.google.com>
Message-ID: <002601c8f5b8$527b0280$f7710780$@com>

On August 03, 2008 1:46 PM, Gavin Lambert wrote:

> 

> At 06:34 4/08/2008, Foust wrote:

>  >Yes... it started out that way. But to allow spaces to be part

>  >of a config value (read up to EOL), the Lexer needs to honor

>  >state. (Place spaces in the HIDDEN channel for all other cases

>  >- outside of a special config/preprocessor rule).

> 

> Are you hiding the EOLs as well?  (Usually they're lumped in with

> whitespace.)

> 

> If so, then you'll have to match everything in the lexer anyway,

> since the parser won't be able to see the EOL.

 

Good point. I had to change the syntax to read up to a parser-visible
terminator to get it to even partially work (but the whitespace was still
missing). Gathering up the tokens with += and calling toString(from, to)
returned a single value, including the original whitespace, but mysteriously
stopped the lexer from returning any more input (the rest of the file seemed
to be discarded), so I abandoned that method altogether:

       /**

        * restores stripped whitespace to a range of tokens 

 * (Only the first and last entries of the input are used).

        * @return String representing given range of tokens with
reconstituted whitespace in between.

        */

       private String concatTokens (List matchedTokens)

       {

              int from = ((CommonToken)
matchedTokens.get(0)).getTokenIndex();

              int to   = ((CommonToken) matchedTokens.get(
matchedTokens.size() - 1)).getTokenIndex();

                     

              return ((CommonTokenStream) input).toString(from, to);

       }

 

 

> As long as you

> have something fairly distinctive to start matching on, this

> shouldn't be hard, and you shouldn't need to do any parser->lexer

> contortions.  See how line and block comments are implemented in

> the examples.

 

Yes, I use something similar, if not identical, to the demos to parse
comments that works quite well:

 

LINE_COMMENT                              : '//' ~('\r' | '\n')* NEWLINE+ {
skip(); };

BLOCK_COMMENT options { greedy = false; } : '/*' .* '*/'                  {
skip(); };

 

> 

> (And if you can modify the language you're parsing, now would be a

> good time to make it use a quoted string or similar instead of

> simply reading to EOL.)

 

Yes, thank you for the suggestion. I did have to resort to changing the
terminator, but even that didn't solve the whitespace problem.

 

I thought the whole point of a Domain Specific Language was to make the task
easy on the user - not on the parser-generator. It seems that the issue is
that what is intuitive to a human may in fact be some chimera of two or more
formal syntaxes. Antlr does not handle this very well, forcing tokens to be
interpreted the same in every context. But since it allows interaction with
the target language, there are likely several ways to solve the problem. 

 

I thought that the cleanest way to read in a free-form config {.} block (not
requiring quotes, or other syntax that might, in fact be intended to be part
of the config setting) is to treat it as a separate language. I want to keep
the syntax as simple as possible and have no possibility of conflicting with
any other part of the language. So I solved this particular problem by:

-    using parser states

-    a predicate on the 'config' rule to only recognize it if in the correct
state

-    Implement a simple parser for just the block in question using regex in
the target language:

 

@members {

/** get any config values specified in the config {} block */

            HashMap<String, String> config = new HashMap<String, String>();

 

            private void parseConfig (String configDefs)

            {

                  String[] lines = configDefs.split("[\\r\\n]+\\s+");

                  for (String line : lines)

                  {

                        String[] part = line.split("\\s*:\\s*");  // split
on colon

                        String name = (part.length > 0) ? part[0] : "";

                        String value = (part.length > 1) ? part[1] : "";

                        config.put(name, value);

                  }

            }

      }

 

The grammar rules to 1) recognize the "config" block first, and 2) make sure
"config" is not a keyword and can be used elsewhere in the grammar, looks
like this:

 

  start     @init {allowConfig = true;}

: config? objectDefinitions EOF ;

 

// only recognize config block before Object Definitions

  config    : {allowConfig &&
input.LT(1).getText().equalsIgnoreCase("config")}?=>   

            NAME '{' configBlockText '}'        // block of config settings
(possibly empty)

            { parseConfig($configBlockText.text); }

            ;

  configBlockText : ~'}'* ;

 

  objectDefinitions @init {allowConfig = false;} // config block (and
keyword) no longer recognized

                .

 

That was a lot simpler than struggling with the Antlr lexer.

 

Brent

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/22c6bfb4/attachment-0001.html 

From jhurstus at gmail.com  Sun Aug  3 16:21:42 2008
From: jhurstus at gmail.com (Joey Hurst)
Date: Sun, 3 Aug 2008 16:21:42 -0700
Subject: [antlr-interest] JavaScript Target - first release
Message-ID: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>

The first release of the ANTLR JavaScript target is now available.
You can download either a pre-compiled version (suggested) or the raw
source:
http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-compiled.zip
http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-src.zip

If you download the source distribution, build instructions can be
found here: http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget

To see the code in action you can open one of the example web pages in
runtime/JavaScript/examples/.  Note that the larger examples run very
slow in Internet Explorer at the moment, so I'd suggest using a faster
browser like FireFox or Safari (I'm working on performance
improvements).  The runtime/JavaScript/tests/functional directory also
has some good examples.

If you have some spare time and know a thing or two about JavaScript
I'd appreciate it if you could take a look and send some feedback
(either to me or the antlr-javascript mailing list -
http://groups.google.com/group/antlr-javascript ).

Although the JS target is passing a large suite of tests at the
moment, I'd still consider this alpha software because the API will
probably change a bit before the first public release.

One final note: the downloads linked above are sync-ed with the 3.1b2
release of the main ANTLR distribution.

Thanks,
Joey Hurst

From parrt at cs.usfca.edu  Sun Aug  3 16:29:44 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 3 Aug 2008 16:29:44 -0700
Subject: [antlr-interest] JavaScript Target - first release
In-Reply-To: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>
References: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>
Message-ID: <8A59C334-19C2-4FDB-BBCA-85EFB6744019@cs.usfca.edu>

Great news, Joey!  Thanks...To make things easier, I just made a daily  
snapshot, which includes all targets:

http://www.antlr.org/download/build/antlr-2008-08-03.16.tar.gz

Ter

On Aug 3, 2008, at 4:21 PM, Joey Hurst wrote:

> The first release of the ANTLR JavaScript target is now available.
> You can download either a pre-compiled version (suggested) or the raw
> source:
> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-compiled.zip
> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-src.zip
>
> If you download the source distribution, build instructions can be
> found here: http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>
> To see the code in action you can open one of the example web pages in
> runtime/JavaScript/examples/.  Note that the larger examples run very
> slow in Internet Explorer at the moment, so I'd suggest using a faster
> browser like FireFox or Safari (I'm working on performance
> improvements).  The runtime/JavaScript/tests/functional directory also
> has some good examples.
>
> If you have some spare time and know a thing or two about JavaScript
> I'd appreciate it if you could take a look and send some feedback
> (either to me or the antlr-javascript mailing list -
> http://groups.google.com/group/antlr-javascript ).
>
> Although the JS target is passing a large suite of tests at the
> moment, I'd still consider this alpha software because the API will
> probably change a bit before the first public release.
>
> One final note: the downloads linked above are sync-ed with the 3.1b2
> release of the main ANTLR distribution.
>
> Thanks,
> Joey Hurst


From parrt at cs.usfca.edu  Sun Aug  3 16:32:45 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 3 Aug 2008 16:32:45 -0700
Subject: [antlr-interest] JavaScript Target - first release
In-Reply-To: <8A59C334-19C2-4FDB-BBCA-85EFB6744019@cs.usfca.edu>
References: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>
	<8A59C334-19C2-4FDB-BBCA-85EFB6744019@cs.usfca.edu>
Message-ID: <85E889C3-04A4-443A-A3DE-35C0C14FAE51@cs.usfca.edu>

Ooops...thatTarget is not built in yet.  Joey, is this one good enough  
to include in the main distribution?

Ter
On Aug 3, 2008, at 4:29 PM, Terence Parr wrote:

> Great news, Joey!  Thanks...To make things easier, I just made a  
> daily snapshot, which includes all targets:
>
> http://www.antlr.org/download/build/antlr-2008-08-03.16.tar.gz
>
> Ter
>
> On Aug 3, 2008, at 4:21 PM, Joey Hurst wrote:
>
>> The first release of the ANTLR JavaScript target is now available.
>> You can download either a pre-compiled version (suggested) or the raw
>> source:
>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-compiled.zip
>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-src.zip
>>
>> If you download the source distribution, build instructions can be
>> found here: http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>>
>> To see the code in action you can open one of the example web pages  
>> in
>> runtime/JavaScript/examples/.  Note that the larger examples run very
>> slow in Internet Explorer at the moment, so I'd suggest using a  
>> faster
>> browser like FireFox or Safari (I'm working on performance
>> improvements).  The runtime/JavaScript/tests/functional directory  
>> also
>> has some good examples.
>>
>> If you have some spare time and know a thing or two about JavaScript
>> I'd appreciate it if you could take a look and send some feedback
>> (either to me or the antlr-javascript mailing list -
>> http://groups.google.com/group/antlr-javascript ).
>>
>> Although the JS target is passing a large suite of tests at the
>> moment, I'd still consider this alpha software because the API will
>> probably change a bit before the first public release.
>>
>> One final note: the downloads linked above are sync-ed with the 3.1b2
>> release of the main ANTLR distribution.
>>
>> Thanks,
>> Joey Hurst
>


From jhurstus at gmail.com  Sun Aug  3 16:44:40 2008
From: jhurstus at gmail.com (Joey Hurst)
Date: Sun, 3 Aug 2008 16:44:40 -0700
Subject: [antlr-interest] JavaScript Target - first release
In-Reply-To: <85E889C3-04A4-443A-A3DE-35C0C14FAE51@cs.usfca.edu>
References: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>
	<8A59C334-19C2-4FDB-BBCA-85EFB6744019@cs.usfca.edu>
	<85E889C3-04A4-443A-A3DE-35C0C14FAE51@cs.usfca.edu>
Message-ID: <eeed9d0b0808031644g4def45c9t1c291b9ee2d728dc@mail.gmail.com>

I think it's ready, but there may be some minor API breakage in future
releases.  Is that ok with you?

Also, if you do decide to include, let me know first.  The links I
sent previously have some tools (jsdoc, jsunit) included in the source
that should be stripped before inclusion in the ANTLR repo.  I can
provide you with the updated version.

In the other targets it appears some include only source while others
also include compiled versions of the runtime.  Is there a preferred
style?

-Joey

On Sun, Aug 3, 2008 at 4:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Ooops...thatTarget is not built in yet.  Joey, is this one good enough to
> include in the main distribution?
>
> Ter
> On Aug 3, 2008, at 4:29 PM, Terence Parr wrote:
>
>> Great news, Joey!  Thanks...To make things easier, I just made a daily
>> snapshot, which includes all targets:
>>
>> http://www.antlr.org/download/build/antlr-2008-08-03.16.tar.gz
>>
>> Ter
>>
>> On Aug 3, 2008, at 4:21 PM, Joey Hurst wrote:
>>
>>> The first release of the ANTLR JavaScript target is now available.
>>> You can download either a pre-compiled version (suggested) or the raw
>>> source:
>>>
>>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-compiled.zip
>>>
>>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-src.zip
>>>
>>> If you download the source distribution, build instructions can be
>>> found here:
>>> http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>>>
>>> To see the code in action you can open one of the example web pages in
>>> runtime/JavaScript/examples/.  Note that the larger examples run very
>>> slow in Internet Explorer at the moment, so I'd suggest using a faster
>>> browser like FireFox or Safari (I'm working on performance
>>> improvements).  The runtime/JavaScript/tests/functional directory also
>>> has some good examples.
>>>
>>> If you have some spare time and know a thing or two about JavaScript
>>> I'd appreciate it if you could take a look and send some feedback
>>> (either to me or the antlr-javascript mailing list -
>>> http://groups.google.com/group/antlr-javascript ).
>>>
>>> Although the JS target is passing a large suite of tests at the
>>> moment, I'd still consider this alpha software because the API will
>>> probably change a bit before the first public release.
>>>
>>> One final note: the downloads linked above are sync-ed with the 3.1b2
>>> release of the main ANTLR distribution.
>>>
>>> Thanks,
>>> Joey Hurst
>>
>
>

From jdn at math.carleton.ca  Sun Aug  3 17:08:29 2008
From: jdn at math.carleton.ca (Jason Nielsen)
Date: Sun, 3 Aug 2008 20:08:29 -0400 (EDT)
Subject: [antlr-interest] Reading from stdin (C backend)
Message-ID: <Pine.LNX.4.64.0808032006230.23977@taz>

Hello all,

Sorry if this question is ridiculously simple but how does one read a 
stream from standard input?

Thanks,
Jason

From javafoust at gmail.com  Sun Aug  3 17:23:14 2008
From: javafoust at gmail.com (Foust)
Date: Sun, 3 Aug 2008 17:23:14 -0700
Subject: [antlr-interest] Reading from stdin (C backend)
In-Reply-To: <Pine.LNX.4.64.0808032006230.23977@taz>
References: <Pine.LNX.4.64.0808032006230.23977@taz>
Message-ID: <002c01c8f5c8$49f50d80$dddf2880$@com>

> Hello all,
> 
> Sorry if this question is ridiculously simple but how does one read a 
> stream from standard input?

It's in the bootstrap code. So where you create the ANTLRxxxStream that you
pass to the Lexer, create an input stream that reads from stdio, instead:

	yourLexer lexer = new YourLexer();
	lexer.setCharStream(new ANTLRInputStream(System.in));
	
Brent


From jimi at temporal-wave.com  Sun Aug  3 17:29:14 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 03 Aug 2008 17:29:14 -0700
Subject: [antlr-interest] Reading from stdin (C backend)
In-Reply-To: <Pine.LNX.4.64.0808032006230.23977@taz>
References: <Pine.LNX.4.64.0808032006230.23977@taz>
Message-ID: <1217809754.8413.30.camel@jimi>

On Sun, 2008-08-03 at 20:08 -0400, Jason Nielsen wrote:

> Hello all,
> 
> Sorry if this question is ridiculously simple but how does one read a 
> stream from standard input?

Because the lexer requires the entire input to work, you need to find
some point in your input stream where you can accumulate packets, then
you can use the standard constructors for in memory input streams and so
on, reset/rebuild the lexer/parser/tree parser combinations for each
'packet'. There is not continuous parsing at the moment, though I have
some ideas on how this might be done (it is not trivial).

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/32afee5f/attachment.html 

From jdn at math.carleton.ca  Sun Aug  3 17:45:30 2008
From: jdn at math.carleton.ca (Jason Nielsen)
Date: Sun, 3 Aug 2008 20:45:30 -0400 (EDT)
Subject: [antlr-interest] Reading from stdin (C backend)
In-Reply-To: <1217809754.8413.30.camel@jimi>
References: <Pine.LNX.4.64.0808032006230.23977@taz>
	<1217809754.8413.30.camel@jimi>
Message-ID: <Pine.LNX.4.64.0808032039110.23977@taz>

On Sun, 3 Aug 2008, Jim Idle wrote:
>
> Because the lexer requires the entire input to work, you need to find
> some point in your input stream where you can accumulate packets, then
> you can use the standard constructors for in memory input streams and so
> on, reset/rebuild the lexer/parser/tree parser combinations for each
> 'packet'. There is not continuous parsing at the moment, though I have
> some ideas on how this might be done (it is not trivial).
>

Thanks Jim,

That makes sense and explains why I was finding this difficult as this 
wasn't clear to me... I was banging my head against the wall since I 
figured this should be trivial.

Cheers,
Jason

From Austin_Hastings at Yahoo.com  Sun Aug  3 18:11:20 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 03 Aug 2008 20:11:20 -0500
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open  file
In-Reply-To: <200808022139.m72LdrD7003623@zinc.newtechlaw.com>
References: <4894C3A9.8040907@Yahoo.com>
	<200808022139.m72LdrD7003623@zinc.newtechlaw.com>
Message-ID: <48965738.6070605@Yahoo.com>

I was using the wrong DLTK. Now I'm using the right one, and I have the 
same problem.

I unpacked the dltk zip into the eclipse directory (actually, into .., 
since the zip included an "eclipse" node). I re-downloaded the antlrdt. 
Unpacked it into eclipse. Still the same exception.
Does antlrdt bundle the antlr libraries?

=Austin


Gerald Rosenberg wrote:
> What version of DLTK are you using?
>
> AntlrDT 0.4 currently requires the 1.0M6 version of DLTK.  A copy is 
> available on the AntlrDT download page - the DLTK project does not 
> keep prior versions available for download.
>
> FWIW, the Ganymede release version of DLTK was downgraded from 1.0 to 
> 0.95 just prior to launch with significant API changes (its an 
> incubator project, after all).  Unfortunately, some of these changes 
> introduced regressions into AntlrDT behavior.  The next version of 
> AntlrDT will target Antlr 3.1 (final) and DLTK 1.0 (stable).
>
> AntlrDT does not rely on an external copy of Antlr, so classpath 
> should not be an issue.
>
> Let me know if you still have problems.
>
>
> At 01:29 PM 8/2/2008, Austin Hastings wrote:
>> I'm trying to get the certiv AntlrDT pluging up and running inside 
>> Eclipse Ganymede. Presently when I try to open a .g3 file, I'm 
>> getting an exception:
>>
>> Could not open the editor: org.antlr.runtime.tree.CommonErrorNode 
>> cannot be cast to net.certiv.antlrdt.core.parser.AstNode
>>
>> I'm assuming that I've got some kind of configuration problem--maybe 
>> something in the classpath that shouldn't be, or missing from the 
>> classpath that should be there. If anyone has any insight, I'm 
>> needing it.
>
>


From paulhanse at gmail.com  Sun Aug  3 21:05:20 2008
From: paulhanse at gmail.com (Paul Hansen)
Date: Sun, 3 Aug 2008 22:05:20 -0600
Subject: [antlr-interest] Help with integrating ANTLR3 with Visual Studio
	2008
Message-ID: <fbb55b900808032105u719deb4bl88e6d042c69d50d@mail.gmail.com>

Hi all -

I am trying (forever, it seems like) to get ANTLR3 and ANTLRWorks to work
with Visual Studio 2008.  My first try was to follow the steps listed on the
following webpage exactly
http://antlr.org/wiki/pages/viewpage.action?pageId=557075

I followed the steps exactly but I get 25 errors!  I am not sure where to go
from here.  ANTLR3 seems like it would be an incredible tool for DSL's but I
can't get it to work?!

I am attaching a zipped version of my project with the 25 errors.  There are
no executables in the attachment.

Thank you for all your help -

-- 
Paul Hansen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/a74c90c8/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrTest.zip
Type: application/zip
Size: 11723 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080803/a74c90c8/attachment-0001.zip 

From gerald at certiv.net  Sun Aug  3 22:41:53 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sun, 03 Aug 2008 22:41:53 -0700
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open file
In-Reply-To: <48965738.6070605@Yahoo.com>
References: <4894C3A9.8040907@Yahoo.com>
	<200808022139.m72LdrD7003623@zinc.newtechlaw.com>
	<48965738.6070605@Yahoo.com>
Message-ID: <200808040543.m745hnID020812@zinc.newtechlaw.com>

At 06:11 PM 8/3/2008, Austin Hastings wrote:
>I was using the wrong DLTK. Now I'm using the right one, and I have 
>the same problem.
>
>I unpacked the dltk zip into the eclipse directory (actually, into 
>.., since the zip included an "eclipse" node). I re-downloaded the 
>antlrdt. Unpacked it into eclipse. Still the same exception.

Would be better to have used the dropins folder.  See, 
http://wiki.eclipse.org/Equinox_p2_Getting_Started  Helps to keep 
third-party plugins separate from the base install.  Still, what you 
did should work.

Check Help->About->Plug-in Details to verify which version of the 
DLTK plugin the workbench is actually using.  Probably need to 
uninstall the 0.95 version and/or restart the workbench with the -clean option.

>Does antlrdt bundle the antlr libraries?

Yes, included for use internal to the AntlrDT plugin to support the 
editor and for code gen.  Eclipse automatically establishes an 
independent classloader for each plugin, so AntlrDT will not be 
affected by any other Antlr jar instances.

>=Austin


From varun.bhargava at carsales.com.au  Sun Aug  3 23:13:31 2008
From: varun.bhargava at carsales.com.au (Varun Bhargava)
Date: Mon, 4 Aug 2008 16:13:31 +1000
Subject: [antlr-interest] Help required with altering the structure of a
	statement
Message-ID: <AE0A511AB227724A912139BAF4BBAC7103FE36CF@cssvrex001.carsales.office>

Hi All,

 

I have a task to substitute some placeholders in a statement with
parameters values that the user can select from a UI. Here's an example
of what I want

 

SELECT id from mytable WHERE (a = 23 AND (b = @PARAM1 OR d = 34) OR e =
44)

 

I need to substitute @PARAM1 with the actual value that the user selects
from a UI and replace it in the WHERE clause, then regenerate the
statement.

 

If @PARAM1 is NULL then I need to remove the comparison clause (b =
@PARAM1) and regenerate the query which should now look like the
following.

 

SELECT id from mytable WHERE (a = 23 AND (d = 34) OR e = 44)

 

 

Here is the pseudocode of what I have thought :

 

1.	Iterate the nodes and when the node is a placeholder, replace it
with the value
2.	If the value that will replace the parameter is NULL then mark
the comparison to be deleted from the tree
3.	Find the dangling instances of ANDs and Ors after NULL
comparison nodes have been deleted 

 

I am an absolute beginner to ANTLR but just can't figure out how to do
the above without using a heap of if's and else's and dirty code. I've
been told this is trivial for ANTLR. Can someone please help me out on
how I can achieve this?

 

Rewrite rules? StringTemplates? I just can't find any good examples to
get me started.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/4aa224d9/attachment.html 

From gerald at certiv.net  Sun Aug  3 23:52:46 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sun, 03 Aug 2008 23:52:46 -0700
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open  file
In-Reply-To: <200808040543.m745hnID020812@zinc.newtechlaw.com>
References: <4894C3A9.8040907@Yahoo.com>
	<200808022139.m72LdrD7003623@zinc.newtechlaw.com>
	<48965738.6070605@Yahoo.com>
	<200808040543.m745hnID020812@zinc.newtechlaw.com>
Message-ID: <200808040653.m746rwLg021235@zinc.newtechlaw.com>

Just posted AntlrDT Version 0.4.5 for Eclipse 3.4 (released) and DLTK 
0.95 (released).

Not sure I got all the API dependent bugs, but may be worth a try 
rather than reverting to DLTK 1.0M6.


From antlr at mirality.co.nz  Mon Aug  4 02:21:31 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 21:21:31 +1200
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <002601c8f5b8$527b0280$f7710780$@com>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
	<001901c8f597$882c98b0$9885ca10$@com>
	<489618fb.1d3e400a.3955.3b9aSMTPIN_ADDED@mx.google.com>
	<002601c8f5b8$527b0280$f7710780$@com>
Message-ID: <20080804092139.27F8611ED46@www.antlr.org>

At 10:28 4/08/2008, Foust wrote:
>I thought the whole point of a Domain Specific 
>Language was to make the task easy on the user ? 
>not on the parser-generator. It seems that the 
>issue is that what is intuitive to a human may 
>in fact be some chimera of two or more formal 
>syntaxes. Antlr does not handle this very well, 
>forcing tokens to be interpreted the same in 
>every context. But since it allows interaction 
>with the target language, there are likely 
>several ways to solve the problem.

The lexer has to generate a single set of tokens, 
yes, but as long as you don't assign too much 
semantic meaning at the lexer level then it's usually ok :)

>I thought that the cleanest way to read in a 
>free-form config {
} block (not requiring 
>quotes, or other syntax that might, in fact be 
>intended to be part of the config setting) is to 
>treat it as a separate language. I want to keep 
>the syntax as simple as possible and have no 
>possibility of conflicting with any other part 
>of the language. So I solved this particular problem by:
>-    using parser states
>-    a predicate on the ?config? rule to only 
>recognize it if in the correct state
>-    Implement a simple parser for just the 
>block in question using regex in the target language:

So this is for a block in some larger file that's 
effectively an entirely different language?  In 
that case, have a look at the "island grammar" examples.

The one included in the example pack shows the 
simplest/best case (where you can detect the 
start and end of the grammar island in the 
lexer); there's also an example in the Wiki 
showing how you can handle it when things are so 
ambiguous you can't work it out until the parser stage.


From antlr at mirality.co.nz  Mon Aug  4 02:41:03 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 21:41:03 +1200
Subject: [antlr-interest] Help with integrating ANTLR3 with Visual
 Studio 2008
In-Reply-To: <fbb55b900808032105u719deb4bl88e6d042c69d50d@mail.gmail.com
 >
References: <fbb55b900808032105u719deb4bl88e6d042c69d50d@mail.gmail.com>
Message-ID: <20080804094113.7162E11ED79@www.antlr.org>

At 16:05 4/08/2008, Paul Hansen wrote:
>I am trying (forever, it seems like) to get ANTLR3 and ANTLRWorks 
>to work with Visual Studio 2008.  My first try was to follow the 
>steps listed on the following webpage exactly 
><http://antlr.org/wiki/pages/viewpage.action?pageId=557075>http://antlr.org/wiki/pages/viewpage.action?pageId=557075

Bear in mind that the instructions on that page assume you're 
going to be doing all your grammar building in ANTLRworks -- if 
you modify the .g file then Visual Studio will *not* be able to 
rebuild the lexer/parser.

If you want to be able to do that, then you need to follow these 
instructions:
   <http://antlr.org/wiki/display/ANTLR3/Integration+with+Development+Environments>

(Something else to watch out for is that if you have the 
lexer/parser .cs files open in Visual Studio then it will 
sometimes compile what's in the window rather than what's on disk, 
so it might be compiling out-of-date files.)

>I followed the steps exactly but I get 25 errors!  I am not sure 
>where to go from here.  ANTLR3 seems like it would be an 
>incredible tool for DSL's but I can't get it to work?!
>
>I am attaching a zipped version of my project with the 25 
>errors.  There are no executables in the attachment.

I don't have a copy of VS2008 handy at the moment.  But...

Something I did notice in passing; you appear to be using ANTLR 
3.1b2 and StringTemplate 3.0.1.  Now, I could easily be wrong 
about this, but I thought that ANTLR 3.1 required a later version 
of StringTemplate?

Also, "protected" on the DIGIT rule is v2 syntax.  For v3, you 
need to use "fragment".

And finally, the most likely problem: the generated code says it 
was built using ANTLR 3.0.1.  This means that the runtime doesn't 
match the generated code, and that just won't work.  If you did 
use ANTLRworks to compile it then you'll need to use a later 
version (or use an older version of the runtime).


From craig at palantir.co.za  Mon Aug  4 02:44:28 2008
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Mon, 04 Aug 2008 11:44:28 +0200
Subject: [antlr-interest] Rewrite separators to root nodes.
Message-ID: <20080804114428.kr65rab94wkkgcs8@webmail.palantir.co.za>

Hi,

I am struggling to rewrite a tree with the separator (and/or in this case) to
come before the rules in the output tree.
I can do it by making root nodes out of the separator but that's not really what
I want. I then have a deep tree that is less practical.

Given the following two productions:
rules:	rule (('and'|'or') rule)*
                ;
rule
:	ROOT xn+=xname (':' xn+=xname)+
	-> ^(ROOT xname*);

I want to use tree rewrites to produce a tree that matches what i have below.

rule:    ^(ROOT 'and' xname*)
        |^(ROOT 'or' xname*)
        |^(ROOT xname*)

At the moment my tree looks like this. This doesn't match properly.
rule:    ^(ROOT *xname 'and') | ^(ROOT xname* 'or') | ^(ROOT xname*);

Unfortunately only the last match is ever made the and/or is not matched in the
tree. By moving them to the front as I have shown above I am pretty sure it
will work.

Does anyone have some pointers?

Regards
Craig.

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From jaluber at gmx.de  Mon Aug  4 02:57:34 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 04 Aug 2008 11:57:34 +0200
Subject: [antlr-interest] JavaScript Target - first release
In-Reply-To: <eeed9d0b0808031644g4def45c9t1c291b9ee2d728dc@mail.gmail.com>
References: <eeed9d0b0808031621t2f4e2b3fw57ba90b2be0153a5@mail.gmail.com>	<8A59C334-19C2-4FDB-BBCA-85EFB6744019@cs.usfca.edu>	<85E889C3-04A4-443A-A3DE-35C0C14FAE51@cs.usfca.edu>
	<eeed9d0b0808031644g4def45c9t1c291b9ee2d728dc@mail.gmail.com>
Message-ID: <4896D28E.9040503@gmx.de>

Joey Hurst schrieb:
> I think it's ready, but there may be some minor API breakage in future
> releases.  Is that ok with you?
> 
> Also, if you do decide to include, let me know first.  The links I
> sent previously have some tools (jsdoc, jsunit) included in the source
> that should be stripped before inclusion in the ANTLR repo.  I can
> provide you with the updated version.
> 
> In the other targets it appears some include only source while others
> also include compiled versions of the runtime.  Is there a preferred
> style?
> 
> -Joey

The preferred style is to include only source files and have a separate 
runtime distribution. The C# target doesn't confirm yet as 3.1 is still 
beta. But for the release the binaries are going to be purged from the 
repository.

Johannes
> 
> On Sun, Aug 3, 2008 at 4:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Ooops...thatTarget is not built in yet.  Joey, is this one good enough to
>> include in the main distribution?
>>
>> Ter
>> On Aug 3, 2008, at 4:29 PM, Terence Parr wrote:
>>
>>> Great news, Joey!  Thanks...To make things easier, I just made a daily
>>> snapshot, which includes all targets:
>>>
>>> http://www.antlr.org/download/build/antlr-2008-08-03.16.tar.gz
>>>
>>> Ter
>>>
>>> On Aug 3, 2008, at 4:21 PM, Joey Hurst wrote:
>>>
>>>> The first release of the ANTLR JavaScript target is now available.
>>>> You can download either a pre-compiled version (suggested) or the raw
>>>> source:
>>>>
>>>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-compiled.zip
>>>>
>>>> http://antlr-javascript.googlecode.com/files/antlr-javascript-0.0.1-src.zip
>>>>
>>>> If you download the source distribution, build instructions can be
>>>> found here:
>>>> http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>>>>
>>>> To see the code in action you can open one of the example web pages in
>>>> runtime/JavaScript/examples/.  Note that the larger examples run very
>>>> slow in Internet Explorer at the moment, so I'd suggest using a faster
>>>> browser like FireFox or Safari (I'm working on performance
>>>> improvements).  The runtime/JavaScript/tests/functional directory also
>>>> has some good examples.
>>>>
>>>> If you have some spare time and know a thing or two about JavaScript
>>>> I'd appreciate it if you could take a look and send some feedback
>>>> (either to me or the antlr-javascript mailing list -
>>>> http://groups.google.com/group/antlr-javascript ).
>>>>
>>>> Although the JS target is passing a large suite of tests at the
>>>> moment, I'd still consider this alpha software because the API will
>>>> probably change a bit before the first public release.
>>>>
>>>> One final note: the downloads linked above are sync-ed with the 3.1b2
>>>> release of the main ANTLR distribution.
>>>>
>>>> Thanks,
>>>> Joey Hurst
>>
> 


From antlr at mirality.co.nz  Mon Aug  4 03:00:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 04 Aug 2008 22:00:30 +1200
Subject: [antlr-interest] Rewrite separators to root nodes.
In-Reply-To: <20080804114428.kr65rab94wkkgcs8@webmail.palantir.co.za>
References: <20080804114428.kr65rab94wkkgcs8@webmail.palantir.co.za>
Message-ID: <20080804100036.8284111EDC0@www.antlr.org>

At 21:44 4/08/2008, craig at palantir.co.za wrote:
 >rules:	rule (('and'|'or') rule)*
 >                ;
 >rule
 >:	ROOT xn+=xname (':' xn+=xname)+
 >	-> ^(ROOT xname*);
 >
 >I want to use tree rewrites to produce a tree that matches what 
i
 >have below.
 >
 >rule:    ^(ROOT 'and' xname*)
 >        |^(ROOT 'or' xname*)
 >        |^(ROOT xname*)

It might be possible to do that, but it'd be much easier to 
generate a slightly different structure.  If you change the 
'rules' rule to this:

rules:	rule (('and'|'or')^ rule)*;

It will produce trees that can be matched like this:

rules
   : ^('or' a=rules b=rules)
   | ^('and' a=rules b=rules)
   | rule
   ;
rule
   : ^(ROOT xname*)
   ;

I think that's much easier to deal with :)


From pcc482719 at gmail.com  Mon Aug  4 07:07:24 2008
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Mon, 04 Aug 2008 10:07:24 -0400
Subject: [antlr-interest] Beginner lexing question.
In-Reply-To: <489615c9.083e400a.2b0d.0279SMTPIN_ADDED@mx.google.com>
References: <4895E8B1.9050105@gmail.com>
	<489615c9.083e400a.2b0d.0279SMTPIN_ADDED@mx.google.com>
Message-ID: <48970D1C.2000002@gmail.com>

Gavin Lambert wrote:

> Now your lexer is ambiguous between T42 and UNARY_OPERATOR -- so on 
> seeing a '*' as input, ANTLR will generate one or the other (depending 
> on the order it sees the rules in) and the other will never happen, 
> which will break your parser rules.
>
> Ideally, when starting out with ANTLR you should avoid composite 
> grammars (or at least avoid using quoted literals in parser rules), 
> since they lead to this kind of trap all too easily.
>
> Probably the best thing to do to resolve this specific problem is to 
> make separate lexer rules for each operator symbol and then change 
> UNARY_OPERATOR into a parser rule.  Another useful rule of thumb is 
> that where ambiguity exists, try to avoid assigning semantic meaning 
> in the lexer.  (Sometimes it can't be avoided due to 
> whitespace-handling issues, but that makes things complicated.)

Thanks for the insight. I understand better what is happening now.  I'll 
take steps to be sure this issue doesn't bite me in the future. Well, I 
hope anyway. :-)

Peter


From rkevinburton at charter.net  Mon Aug  4 07:33:33 2008
From: rkevinburton at charter.net (rkevinburton at charter.net)
Date: Mon, 4 Aug 2008 7:33:33 -0700
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
Message-ID: <20080804103333.OUXQI.96514.root@mp13>

I am checking my grammar and getting the following errors:

[09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
[09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
[09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope

When I look at the lines indicated I don't see a problem. Moreover I don't see a reference to the token that is "unexpected". Would someone with more experience with ANTLR than me please look at the attached grammar and see if you can see what is wrong? 

Thank you.

Kevin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ECMAScript.g
Type: application/octet-stream
Size: 33852 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/c9fd64e9/attachment-0001.obj 

From jaluber at gmx.de  Mon Aug  4 08:13:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 04 Aug 2008 17:13:58 +0200
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <20080804103333.OUXQI.96514.root@mp13>
References: <20080804103333.OUXQI.96514.root@mp13>
Message-ID: <48971CB6.1090107@gmx.de>

rkevinburton at charter.net schrieb:
> I am checking my grammar and getting the following errors:
> 
> [09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
> [09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
> [09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope
> 
> When I look at the lines indicated I don't see a problem. Moreover I don't see a reference to the token that is "unexpected". Would someone with more experience with ANTLR than me please look at the attached grammar and see if you can see what is wrong? 
> 
> Thank you.
> 
> Kevin

I noticed that you use "modifier=(PUBLIC|PRIVATE)". Due to an ANTLR bug 
modifier won't ever receive a value. Either 
"modifier=PUBLIC|modifier=PRIVATE" or creating a new rule for 
"(PUBLIC|PRIVATE)" works. Also $scope and $modifier don't have a ? in 
the rewrite rules.

Testing the input I've discovered that ANTLR doesn't like 
"(scope=STATIC)?" in your grammar. No idea way, as this syntax is 
entirely legal. Seems to be some ANTLR bug.

BTW, do you still need help on that other issue or did you manage to 
solve it yourself? I have looking at it next on my list.

Johannes

From vsubscr at gmail.com  Mon Aug  4 08:11:35 2008
From: vsubscr at gmail.com (Tired Ofsubscriptions)
Date: Mon, 4 Aug 2008 17:11:35 +0200
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <20080804103333.OUXQI.96514.root@mp13>
References: <20080804103333.OUXQI.96514.root@mp13>
Message-ID: <309ee5c90808040811w22b14b0ey2c281806a975b688@mail.gmail.com>

I think there is a problem because 'scope' is a reserved word.

/Vlad

2008/8/4 <rkevinburton at charter.net>

> I am checking my grammar and getting the following errors:
>
> [09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr:
> ECMAScript.g:1530:2: unexpected token: :
> [09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr:
> ECMAScript.g:1548:2: unexpected token: :
> [09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr:
> ECMAScript.g:1555:5: unexpected token: scope
>
> When I look at the lines indicated I don't see a problem. Moreover I don't
> see a reference to the token that is "unexpected". Would someone with more
> experience with ANTLR than me please look at the attached grammar and see if
> you can see what is wrong?
>
> Thank you.
>
> Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/2b08cf83/attachment.html 

From jbb at acm.org  Mon Aug  4 08:19:23 2008
From: jbb at acm.org (John B. Brodie)
Date: Mon, 04 Aug 2008 11:19:23 -0400
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <20080804103333.OUXQI.96514.root@mp13> (rkevinburton@charter.net)
References: <20080804103333.OUXQI.96514.root@mp13>
Message-ID: <E1KQ1qF-00069S-0J@gecko.home.org>

Greetings!

rkevinburton asked:
>I am checking my grammar and getting the following errors:
>
>[09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
>[09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
>[09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope
>
>When I look at the lines indicated I don't see a problem. Moreover I
>don't see a reference to the token that is "unexpected". Would
>someone with more experience with ANTLR than me please look at the
>attached grammar and see if you can see what is wrong?
>
>...attachment snipped...

I have not actually tried processing your grammar with ANTLR.

But I see that at those three lines referenced in the above error
messages that you are using the phrase `(scope=STATIC)?` at the
beginning of those three rules.

So I believe your local variable reference of `scope` clashes with
ANTLR's notion of a dynamic scope, a mechanism for passing information
amongst rules (see chapt 6 of Dr. Parr's book, TDAR), which uses
`scope` as a reserved word to introduce a block of variable
declarations at the beginning of a rule (must appear before the rule's
`:`).

Try picking another name for your local variable.

Hope this helps...
   -jbb

From craig at palantir.co.za  Mon Aug  4 09:01:20 2008
From: craig at palantir.co.za (Craig Main)
Date: Mon, 4 Aug 2008 18:01:20 +0200
Subject: [antlr-interest] Rewrite separators to root nodes.
References: <20080804114428.kr65rab94wkkgcs8@webmail.palantir.co.za> 
Message-ID: <03f001c8f64b$55fb45d0$01f1d170$@co.za>

Hi Gavin,

I did originally have it like this.
I ended up struggling to get the template output to work.
My templates are not also recursing so it get's tricky.

rules
   : ^('or' a=rules b=rules) -> ORTEMPLATE(a.returnvalue,b.returnvalue)
   | ^('and' a=rules b=rules) -> ANDTEMPLATE(a.returnvalue,b.returnvalue)
   | r=rule -> RULETEMPLATE(r.returnvalue)
   ;

Only the highest level precedence template seems to get called (it's obvious
why) and I cannot find an example that recurses using templates?
That's why I tried a simple list rather than a complete tree. If I can get
the tree to work, then fine but it's tricky.

What does the template have to look like to make it recurse as well.

Regards
Craig.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: 04 August 2008 12:01 PM
To: craig at palantir.co.za; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Rewrite separators to root nodes.

At 21:44 4/08/2008, craig at palantir.co.za wrote:
 >rules:	rule (('and'|'or') rule)*
 >                ;
 >rule
 >:	ROOT xn+=xname (':' xn+=xname)+
 >	-> ^(ROOT xname*);
 >
 >I want to use tree rewrites to produce a tree that matches what 
i
 >have below.
 >
 >rule:    ^(ROOT 'and' xname*)
 >        |^(ROOT 'or' xname*)
 >        |^(ROOT xname*)

It might be possible to do that, but it'd be much easier to 
generate a slightly different structure.  If you change the 
'rules' rule to this:

rules:	rule (('and'|'or')^ rule)*;

It will produce trees that can be matched like this:

rules
   : ^('or' a=rules b=rules)
   | ^('and' a=rules b=rules)
   | rule
   ;
rule
   : ^(ROOT xname*)
   ;

I think that's much easier to deal with :)




From jimi at temporal-wave.com  Mon Aug  4 09:12:49 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 04 Aug 2008 09:12:49 -0700
Subject: [antlr-interest] ANTLR on mingw
In-Reply-To: <E1C843E51A1A4D2688CBDB5A5D504796@one>
References: <E1C843E51A1A4D2688CBDB5A5D504796@one>
Message-ID: <1217866369.8413.63.camel@jimi>

On Mon, 2008-08-04 at 03:52 -0400, mp wrote:

> Hello.  I am a new user of ANTLR and I was reading on the newsgroups
> about
> (the lack of) mingw support.  Anyway, the only obstacle I ran into for
> compiling on mingw was the typdefs requiring INT8/INT16/UINT8/UINT16
> in
> 'antlr3defs.h' (around line 82).  I am not sure where microsoft
> typedefs
> these, but they are not defined in any of my headers files (I am
> running
> GCC 4.3.0 20080305), although the 32bit versions are already typedefed
> in
> 'basetsd.h', which gets included by way of winnt.h->windows.h. 

These are all part of the Microsoft basetsd.h file:

typedef signed char         INT8, *PINT8;
typedef signed short        INT16, *PINT16;
typedef signed int          INT32, *PINT32;
typedef signed __int64      INT64, *PINT64;
typedef unsigned char       UINT8, *PUINT8;
typedef unsigned short      UINT16, *PUINT16;
typedef unsigned int        UINT32, *PUINT32;
typedef unsigned __int64    UINT64, *PUINT64;

I have not deliberately excluded mingw from being supported, but as the
Microsoft compilers are freely available in .Net SDKS, then I could not
see the point of anyone using mingw anymore to be honest, so I put it
aside. Mingw should really have those typedefs though - see thousands of
Google hits on people complaining about this.


>  The fix is
> easy; typedef the missing types.  However, I have a suggestion to
> #include
> <stdint.h> and use the standard types defined there: int8_t,
> uint8_t, ...,
> uint64_t, instead of using the windows ones.  If you want, I will even
> do
> this for you.


stdint.h may be supplied with mingw, but it is not a part of the windows
headers. However, I think that Mingw defines: __MINGW32__ if it is the
compiler, so if stdint.h is always present when mingw is the compiler,
which I believe is the case, then I can modify the headers for mingw.

> 
> So anyway, after this one easy thing to fix, everything runs fine with
> mingw.  I used msys to run the configure script. 


I thought that mingw was designed to compile windows code - hence you
need to run configure on cygwin, but not if using mingw as the
antlr3config.h is not required in Windows systems.

I have changed the headers to reflect Mingw support - perhaps you can
ask the people that support mingw to update their typedefs?

Jim




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/abd76c88/attachment.html 

From rkevinburton at charter.net  Mon Aug  4 09:25:28 2008
From: rkevinburton at charter.net (rkevinburton at charter.net)
Date: Mon, 4 Aug 2008 9:25:28 -0700
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <E1KQ1qF-00069S-0J@gecko.home.org>
Message-ID: <20080804122528.CI90M.143150.root@fepweb16>

Thank you that gives me much more to go on. I think now I am looking at a look-ahead problem. I am getting the following error(s):

[11:17:59] Checking Grammar...
[11:17:59] warning(200): ECMAScript.g:1537:14: Decision can match input such as "{FUNCTION, VAR, PRIVATE, PUBLIC, STATIC, RBRACE}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[11:17:59] error(201): ECMAScript.g:1537:14: The following alternatives can never be matched: 2

[11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "STATIC" using multiple alternatives: 1, 2, 3
As a result, alternative(s) 2,3 were disabled for that input
[11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "VAR" using multiple alternatives: 1, 3
As a result, alternative(s) 3 were disabled for that input
[11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "FUNCTION" using multiple alternatives: 2, 3
As a result, alternative(s) 3 were disabled for that input
[11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PRIVATE" using multiple alternatives: 1, 2, 3
As a result, alternative(s) 2,3 were disabled for that input
[11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PUBLIC" using multiple alternatives: 1, 2, 3
As a result, alternative(s) 2,3 were disabled for that input

Feel free to correct me if I am wrong but I think it is complaining that it doesn't know the difference (which path to take) between a static field and a static method. I think this can be solved by allowing look ahead. Can I specify look ahead for just this rule? If so how?

Thanks again.

Kevin
---- "John B. Brodie" <jbb at acm.org> wrote: 
> Greetings!
> 
> rkevinburton asked:
> >I am checking my grammar and getting the following errors:
> >
> >[09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
> >[09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
> >[09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope
> >
> >When I look at the lines indicated I don't see a problem. Moreover I
> >don't see a reference to the token that is "unexpected". Would
> >someone with more experience with ANTLR than me please look at the
> >attached grammar and see if you can see what is wrong?
> >
> >...attachment snipped...
> 
> I have not actually tried processing your grammar with ANTLR.
> 
> But I see that at those three lines referenced in the above error
> messages that you are using the phrase `(scope=STATIC)?` at the
> beginning of those three rules.
> 
> So I believe your local variable reference of `scope` clashes with
> ANTLR's notion of a dynamic scope, a mechanism for passing information
> amongst rules (see chapt 6 of Dr. Parr's book, TDAR), which uses
> `scope` as a reserved word to introduce a block of variable
> declarations at the beginning of a rule (must appear before the rule's
> `:`).
> 
> Try picking another name for your local variable.
> 
> Hope this helps...
>    -jbb
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ECMAScript.g
Type: application/octet-stream
Size: 33828 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/03bce42e/attachment-0001.obj 

From jaluber at gmx.de  Mon Aug  4 09:33:21 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 04 Aug 2008 18:33:21 +0200
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <20080804122528.CI90M.143150.root@fepweb16>
References: <20080804122528.CI90M.143150.root@fepweb16>
Message-ID: <48972F51.6020707@gmx.de>

rkevinburton at charter.net schrieb:
> Thank you that gives me much more to go on. I think now I am looking at a look-ahead problem. I am getting the following error(s):
> 
> [11:17:59] Checking Grammar...
> [11:17:59] warning(200): ECMAScript.g:1537:14: Decision can match input such as "{FUNCTION, VAR, PRIVATE, PUBLIC, STATIC, RBRACE}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [11:17:59] error(201): ECMAScript.g:1537:14: The following alternatives can never be matched: 2
> 
> [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "STATIC" using multiple alternatives: 1, 2, 3
> As a result, alternative(s) 2,3 were disabled for that input
> [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "VAR" using multiple alternatives: 1, 3
> As a result, alternative(s) 3 were disabled for that input
> [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "FUNCTION" using multiple alternatives: 2, 3
> As a result, alternative(s) 3 were disabled for that input
> [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PRIVATE" using multiple alternatives: 1, 2, 3
> As a result, alternative(s) 2,3 were disabled for that input
> [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PUBLIC" using multiple alternatives: 1, 2, 3
> As a result, alternative(s) 2,3 were disabled for that input
> 
> Feel free to correct me if I am wrong but I think it is complaining that it doesn't know the difference (which path to take) between a static field and a static method. I think this can be solved by allowing look ahead. Can I specify look ahead for just this rule? If so how?
> 
> Thanks again.
> 
> Kevin

Try to left-factor the grammar first. Read my tutorial on that here: 
<http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar>.

Johannes
> ---- "John B. Brodie" <jbb at acm.org> wrote: 
>> Greetings!
>>
>> rkevinburton asked:
>>> I am checking my grammar and getting the following errors:
>>>
>>> [09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
>>> [09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
>>> [09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope
>>>
>>> When I look at the lines indicated I don't see a problem. Moreover I
>>> don't see a reference to the token that is "unexpected". Would
>>> someone with more experience with ANTLR than me please look at the
>>> attached grammar and see if you can see what is wrong?
>>>
>>> ...attachment snipped...
>> I have not actually tried processing your grammar with ANTLR.
>>
>> But I see that at those three lines referenced in the above error
>> messages that you are using the phrase `(scope=STATIC)?` at the
>> beginning of those three rules.
>>
>> So I believe your local variable reference of `scope` clashes with
>> ANTLR's notion of a dynamic scope, a mechanism for passing information
>> amongst rules (see chapt 6 of Dr. Parr's book, TDAR), which uses
>> `scope` as a reserved word to introduce a block of variable
>> declarations at the beginning of a rule (must appear before the rule's
>> `:`).
>>
>> Try picking another name for your local variable.
>>
>> Hope this helps...
>>    -jbb


From rkevinburton at charter.net  Mon Aug  4 09:52:33 2008
From: rkevinburton at charter.net (rkevinburton at charter.net)
Date: Mon, 4 Aug 2008 9:52:33 -0700
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <48972F51.6020707@gmx.de>
Message-ID: <20080804125233.MTFY3.3362.root@mp15>

If I left factor the grammar I essentially have

classSourceElement
	: classField
	| classMethod
	| classProperty
	;

classCommon
	:  (s=STATIC)? (modifier=(PUBLIC|PRIVATE))?
	;
		 
classField
	: c=classCommon VAR name=Identifier
	-> ^( CFIELD $c $name )
	| c=classCommon VAR name=Identifier COLON type=Identifier
	-> ^( CFIELD $c $name TYPES $type)
	;

classMethod
	: c=classCommon name=Identifier formalParameterList functionBody
	-> ^( $c formalParameterList functionBody )
	;

But I still have the same errors. I am missing something.

Kevin

---- Johannes Luber <jaluber at gmx.de> wrote: 
> rkevinburton at charter.net schrieb:
> > Thank you that gives me much more to go on. I think now I am looking at a look-ahead problem. I am getting the following error(s):
> > 
> > [11:17:59] Checking Grammar...
> > [11:17:59] warning(200): ECMAScript.g:1537:14: Decision can match input such as "{FUNCTION, VAR, PRIVATE, PUBLIC, STATIC, RBRACE}" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > [11:17:59] error(201): ECMAScript.g:1537:14: The following alternatives can never be matched: 2
> > 
> > [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "STATIC" using multiple alternatives: 1, 2, 3
> > As a result, alternative(s) 2,3 were disabled for that input
> > [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "VAR" using multiple alternatives: 1, 3
> > As a result, alternative(s) 3 were disabled for that input
> > [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "FUNCTION" using multiple alternatives: 2, 3
> > As a result, alternative(s) 3 were disabled for that input
> > [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PRIVATE" using multiple alternatives: 1, 2, 3
> > As a result, alternative(s) 2,3 were disabled for that input
> > [11:17:59] warning(200): ECMAScript.g:1542:2: Decision can match input such as "PUBLIC" using multiple alternatives: 1, 2, 3
> > As a result, alternative(s) 2,3 were disabled for that input
> > 
> > Feel free to correct me if I am wrong but I think it is complaining that it doesn't know the difference (which path to take) between a static field and a static method. I think this can be solved by allowing look ahead. Can I specify look ahead for just this rule? If so how?
> > 
> > Thanks again.
> > 
> > Kevin
> 
> Try to left-factor the grammar first. Read my tutorial on that here: 
> <http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar>.
> 
> Johannes
> > ---- "John B. Brodie" <jbb at acm.org> wrote: 
> >> Greetings!
> >>
> >> rkevinburton asked:
> >>> I am checking my grammar and getting the following errors:
> >>>
> >>> [09:11:21] error(100): ECMAScript.g:1530:2: syntax error: antlr: ECMAScript.g:1530:2: unexpected token: :
> >>> [09:11:21] error(100): ECMAScript.g:1548:2: syntax error: antlr: ECMAScript.g:1548:2: unexpected token: :
> >>> [09:11:21] error(100): ECMAScript.g:1555:5: syntax error: antlr: ECMAScript.g:1555:5: unexpected token: scope
> >>>
> >>> When I look at the lines indicated I don't see a problem. Moreover I
> >>> don't see a reference to the token that is "unexpected". Would
> >>> someone with more experience with ANTLR than me please look at the
> >>> attached grammar and see if you can see what is wrong?
> >>>
> >>> ...attachment snipped...
> >> I have not actually tried processing your grammar with ANTLR.
> >>
> >> But I see that at those three lines referenced in the above error
> >> messages that you are using the phrase `(scope=STATIC)?` at the
> >> beginning of those three rules.
> >>
> >> So I believe your local variable reference of `scope` clashes with
> >> ANTLR's notion of a dynamic scope, a mechanism for passing information
> >> amongst rules (see chapt 6 of Dr. Parr's book, TDAR), which uses
> >> `scope` as a reserved word to introduce a block of variable
> >> declarations at the beginning of a rule (must appear before the rule's
> >> `:`).
> >>
> >> Try picking another name for your local variable.
> >>
> >> Hope this helps...
> >>    -jbb
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ECMAScript.g
Type: application/octet-stream
Size: 33755 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/8d884da3/attachment-0001.obj 

From jimi at temporal-wave.com  Mon Aug  4 10:03:00 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 04 Aug 2008 10:03:00 -0700
Subject: [antlr-interest] ANTLR Grammar error - Illegal token.
In-Reply-To: <20080804125233.MTFY3.3362.root@mp15>
References: <20080804125233.MTFY3.3362.root@mp15>
Message-ID: <1217869380.8689.9.camel@jimi>

On Mon, 2008-08-04 at 09:52 -0700, rkevinburton at charter.net wrote:

> If I left factor the grammar I essentially have


Thsi is not left factored, you have just left factored the first bit of
it.

> 
> classSourceElement
> 	: classField
> 	| classMethod
> 	| classProperty
> 	;
> 
> classCommon
> 	:  (s=STATIC)? (modifier=(PUBLIC|PRIVATE))?
> 	;
> 		 
> classField
> 	: c=classCommon VAR name=Identifier
> 	-> ^( CFIELD $c $name )
> 	| c=classCommon VAR name=Identifier COLON type=Identifier
> 	-> ^( CFIELD $c $name TYPES $type)
> 	;


both of htese have a common prefix classCommon VAR Identifier, left
factor these.

> 
> classMethod
> 	: c=classCommon name=Identifier formalParameterList functionBody
> 	-> ^( $c formalParameterList functionBody )
> 	;


And so does this, 

You want to take all the classCommon stuff and start classSourceElement
with it, then you have classField as:

VAR name=Identifier 
        (    COLON type=Identifier ->^(CFIELD $name TYPES $type)
            | ->^(CFIELD $name)
        )

your classSourceElement the is:

classSourceElement
   : c=classCommon
           ( c1=classField
            | c2=classProperty
           etc.

and you rewrite as ^(TYPEDECL $c $c1? $c2? etc).

You AST walker can then semantically check whether static and so on are
valid for this declaration.
Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/75e9f82b/attachment.html 

From garry.iglesias at gmail.com  Mon Aug  4 10:05:26 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Mon, 4 Aug 2008 13:05:26 -0400
Subject: [antlr-interest] [C Target] Multiple return parameters rule
	generation error.
Message-ID: <f71c56ff0808041005i1a52de3et759ec77259d19cee@mail.gmail.com>

Hi,

Sorry, I've already been reporting this... But it seems it's still there. So
I 'remind it' because it's important as a standard feature
of ANTLR (multiple returning parameters) that doesn't work for the C target.
I got a rule with return parameters :

myProblemRule returns [int i,int bIsRef]
   :  [...]
   ;

 myNoProblemRule returns [int i]
   :  [...]
   ;


When I use it :
myOtherRule
    :  [...]  good=myNoProblemRule  bad=myProblemRule
       {
             int ivar=$good.i;        -> This works...
             ivar=$bad.i;              -> This generates code that doesn't
compile...
             if ($bad.bIsRef)  {      -> This generates code that doesn't
compile...
             }
       }
    ;

Note "myBool" is just a typedef from an int...

So the fact is that ANTLR converts the 'if' into something like :
if (( result != NULL ? result.bIsRef : NULL )) {  [...]  }

Problem is that result is a local instantiated structure, and not a pointer
to a structure.

By the way, ANTLR is a very good tool.

Thanks.

Garry.

PS/ Sorry if my english is wrong as I'm french native.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/4986b288/attachment.html 

From jimi at temporal-wave.com  Mon Aug  4 10:35:29 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 04 Aug 2008 10:35:29 -0700
Subject: [antlr-interest] [C Target] Multiple return parameters
	rule	generation error.
In-Reply-To: <f71c56ff0808041005i1a52de3et759ec77259d19cee@mail.gmail.com>
References: <f71c56ff0808041005i1a52de3et759ec77259d19cee@mail.gmail.com>
Message-ID: <1217871329.8689.17.camel@jimi>

On Mon, 2008-08-04 at 13:05 -0400, Garry Iglesias wrote:
> Hi,
>  
> Sorry, I've already been reporting this... But it seems it's still
> there. So I 'remind it' because it's important as a standard feature
> of ANTLR (multiple returning parameters) that doesn't work for the C
> target.
> I got a rule with return parameters :
>  
> myProblemRule returns [int i,int bIsRef]
>    :  [...]
>    ; 
>  
> myNoProblemRule returns [int i]
>    :  [...]
>    ; 
>  
> 
>  
> When I use it :
> myOtherRule
>     :  [...]  good=myNoProblemRule  bad=myProblemRule 
>        {
>              int ivar=$good.i;        -> This works...
>              ivar=$bad.i;              -> This generates code that
> doesn't compile...
>              if ($bad.bIsRef)  {      -> This generates code that
> doesn't compile...
>              }
>        }
>     ;
>  
> Note "myBool" is just a typedef from an int...
>  
> So the fact is that ANTLR converts the 'if' into something like :
> 
> if (( result != NULL ? result.bIsRef : NULL )) {  [...]  }
>  

This is fixed for the next beta. There was one instance of attribute
referencing where the template was still using the unnecessary guard
code. Note the following about return values:

1) Typedefs and so on are unknown to the code generator, if there places
where such variables must be initialized, then if they are unrecognized,
they are assigned a NULL. The fix for attribute references is to not
assign any default values to rule references, which is now fixed int he
template;
2) The return type of a rule that is not building trees and has only one
return element is the type of the return element;
3) If the rule returns more than one value, or is building trees then
the return type is a typedef'ed struct containing all attributes
including the tree that was generated by that rule and so on. Hence the
return is a struct and you cannot/should not try to embed structs in the
return types as they are not needed. If you need to return a struct, it
should be a pointer to the struct. If you are trying to return a struct
as a composite of return codes, then you don't need to do that as ANTLR
already does it, so just specify the rule as returning each individual
element.
4) You are responsible for free()ing any pointers to memory that you
allocate within the rule of course;

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080804/468d0c26/attachment.html 

From parrt at cs.usfca.edu  Mon Aug  4 10:49:14 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Aug 2008 10:49:14 -0700
Subject: [antlr-interest] Altering static FOLLOW bitsets! fixed
In-Reply-To: <487F4043.5000801@gmx.de>
References: <E77E96B6A3DEE24CB77E4F7130C910DA6BE1816888@NA-EXMSG-C117.redmond.corp.microsoft.com>
	<487F4043.5000801@gmx.de>
Message-ID: <67B0B7CA-5C50-4BFF-B83D-B125508D4B49@cs.usfca.edu>

Hi Guys, yes looks like a problem. I do a remove in 1 place that's  
incorrect:

	public boolean mismatchIsMissingToken(IntStream input, BitSet follow) {

		if ( follow.member(Token.EOR_TOKEN_TYPE) ) {
			if ( state._fsp>=0 ) { // remove EOR if we're not the start symbol
 >>>>>			follow.remove(Token.EOR_TOKEN_TYPE);
			}
			BitSet viableTokensFollowingThisRule =  
computeContextSensitiveRuleFOLLOW();
			follow = follow.or(viableTokensFollowingThisRule);
		}

Easiest thing is to just move the IF below the  
computeContextSensitiveRuleFOLLOW which calls combineFollows which does:

		BitSet followSet = new BitSet();

so it's a set we can modify.

So now it looks like:

		if ( follow.member(Token.EOR_TOKEN_TYPE) ) {
			BitSet viableTokensFollowingThisRule =  
computeContextSensitiveRuleFOLLOW();
			follow = follow.or(viableTokensFollowingThisRule);
             if ( state._fsp>=0 ) { // remove EOR if we're not the  
start symbol
                 follow.remove(Token.EOR_TOKEN_TYPE);
             }
		}

edit //depot/code/antlr/main/CHANGES.txt#82
edit //depot/code/antlr/main/runtime/Java/src/org/antlr/runtime/ 
BaseRecognizer.java#17
Change 5156 submitted.
Ter
On Jul 17, 2008, at 5:51 AM, Johannes Luber wrote:

> Cameron Skinner schrieb:
>> Hello,
>> I?m using the 3.1 beta release, CSharp2 target grammar.
>> I?m seeing different behavior running my parser with a syntax error  
>> the second time run. I?ve tracked it down to where I believe the  
>> problem is, located in BaseRecognizer.cs. The  
>> ?follow.Remove( Token.EOR_TOKEN_TYPE )? logic is being called,  
>> which modifies the state of the static readonly BitSet object found  
>> on the parser. The problem with that is that even though I am  
>> creating a completely different parser instance, the static  
>> variable has been altered for as long as the assembly is in memory.  
>> I?ve copied a simple program to illustrate the problem at the  
>> bottom of this mail.
>> Is this a known problem?
>
> I haven't heard of it yet, but it's a Java target problem, too, so  
> Ter has to say, if removing the static modifier for the BitSet  
> variables in the parser is enough and doesn't affect anything else.
>
> Johannes
>
>> Regards,
>> Cameron
>> public bool MismatchIsMissingToken(IIntStream input, BitSet follow) {
>>                  if (follow == null) {
>>                        // we have no information about the follow;  
>> we can only consume
>>                        // a single token and hope for the best
>>                        return false;
>>                  }
>>                   // compute what can follow this grammar element  
>> reference
>>                  if (follow.Member(Token.EOR_TOKEN_TYPE)) {
>>                        if (state.followingStackPointer >= 0) { //  
>> remove EOR if we're not the start symbol
>>                              follow.Remove(Token.EOR_TOKEN_TYPE);  
>> *<<<<<<<<< THIS IS THE PROBLEM, modifies static variable*
>>                        }
>>                        BitSet viableTokensFollowingThisRule =  
>> ComputeContextSensitiveRuleFOLLOW();
>>                        follow =  
>> follow.Or(viableTokensFollowingThisRule);
>>                  }
>>                   // if current token is consistent with what could  
>> come after set
>>                  // then we know we're missing a token; error  
>> recovery is free to
>>                  // "insert" the missing token
>>                   // BitSet cannot handle negative numbers like -1  
>> (EOF) so I leave EOR
>>                  // in follow set to indicate that the fall of the  
>> start symbol is
>>                  // in the set (EOF can follow).
>>                  if ( follow.Member(input.LA(1)) ||  
>> follow.Member(Token.EOR_TOKEN_TYPE) ) {
>>                        return true;
>>                  }
>>                  return false;
>>            }
>> Simple program that exhibits the fundamental problem of trying to  
>> use a static  readonly member. The state of that member can change,  
>> just not the instance itself:
>> using System;
>> using System.Collections.Generic;
>> using System.Linq;
>> using System.Text;
>> namespace ConsoleApplication2
>> {
>>   class Program
>>   {
>>      static void Main( string[] args )
>>      {
>>         Testing t = new Testing();
>>         Console.WriteLine( Testing.test.isSet );
>>          Testing.test.isSet = true;
>>         Testing x = new Testing();
>>          Console.WriteLine( Testing.test.isSet );
>>      }
>>   }
>>    public class Testing
>>   {
>>      public static readonly Test test = new Test();
>>   }
>>    public class Test
>>   {
>>      public bool isSet = false;
>>   }
>> }
>>
>


From pink at odahoda.de  Mon Aug  4 12:27:05 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 4 Aug 2008 21:27:05 +0200
Subject: [antlr-interest] [antlr-dev] Altering static FOLLOW bitsets!
	fixed
In-Reply-To: <67B0B7CA-5C50-4BFF-B83D-B125508D4B49@cs.usfca.edu>
References: <E77E96B6A3DEE24CB77E4F7130C910DA6BE1816888@NA-EXMSG-C117.redmond.corp.microsoft.com>
	<487F4043.5000801@gmx.de>
	<67B0B7CA-5C50-4BFF-B83D-B125508D4B49@cs.usfca.edu>
Message-ID: <543531490808041227u6d6bf3cbi7e89b22e4e50de0a@mail.gmail.com>

If I understand this correctly, then the Python target shouldn't be
effected (the FOLLOW sets are immutable). Can someone provide a
testcase to verify this?

-Ben

On Mon, Aug 4, 2008 at 7:49 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi Guys, yes looks like a problem. I do a remove in 1 place that's
> incorrect:
>
>        public boolean mismatchIsMissingToken(IntStream input, BitSet follow) {
>
>                if ( follow.member(Token.EOR_TOKEN_TYPE) ) {
>                        if ( state._fsp>=0 ) { // remove EOR if we're not the start symbol
>  >>>>>                  follow.remove(Token.EOR_TOKEN_TYPE);
>                        }
>                        BitSet viableTokensFollowingThisRule =
> computeContextSensitiveRuleFOLLOW();
>                        follow = follow.or(viableTokensFollowingThisRule);
>                }
>
> Easiest thing is to just move the IF below the
> computeContextSensitiveRuleFOLLOW which calls combineFollows which does:
>
>                BitSet followSet = new BitSet();
>
> so it's a set we can modify.
>
> So now it looks like:
>
>                if ( follow.member(Token.EOR_TOKEN_TYPE) ) {
>                        BitSet viableTokensFollowingThisRule =
> computeContextSensitiveRuleFOLLOW();
>                        follow = follow.or(viableTokensFollowingThisRule);
>             if ( state._fsp>=0 ) { // remove EOR if we're not the
> start symbol
>                 follow.remove(Token.EOR_TOKEN_TYPE);
>             }
>                }
>
> edit //depot/code/antlr/main/CHANGES.txt#82
> edit //depot/code/antlr/main/runtime/Java/src/org/antlr/runtime/
> BaseRecognizer.java#17
> Change 5156 submitted.
> Ter
> On Jul 17, 2008, at 5:51 AM, Johannes Luber wrote:
>
>> Cameron Skinner schrieb:
>>> Hello,
>>> I'm using the 3.1 beta release, CSharp2 target grammar.
>>> I'm seeing different behavior running my parser with a syntax error
>>> the second time run. I've tracked it down to where I believe the
>>> problem is, located in BaseRecognizer.cs. The
>>> "follow.Remove( Token.EOR_TOKEN_TYPE )" logic is being called,
>>> which modifies the state of the static readonly BitSet object found
>>> on the parser. The problem with that is that even though I am
>>> creating a completely different parser instance, the static
>>> variable has been altered for as long as the assembly is in memory.
>>> I've copied a simple program to illustrate the problem at the
>>> bottom of this mail.
>>> Is this a known problem?
>>
>> I haven't heard of it yet, but it's a Java target problem, too, so
>> Ter has to say, if removing the static modifier for the BitSet
>> variables in the parser is enough and doesn't affect anything else.
>>
>> Johannes
>>
>>> Regards,
>>> Cameron
>>> public bool MismatchIsMissingToken(IIntStream input, BitSet follow) {
>>>                  if (follow == null) {
>>>                        // we have no information about the follow;
>>> we can only consume
>>>                        // a single token and hope for the best
>>>                        return false;
>>>                  }
>>>                   // compute what can follow this grammar element
>>> reference
>>>                  if (follow.Member(Token.EOR_TOKEN_TYPE)) {
>>>                        if (state.followingStackPointer >= 0) { //
>>> remove EOR if we're not the start symbol
>>>                              follow.Remove(Token.EOR_TOKEN_TYPE);
>>> *<<<<<<<<< THIS IS THE PROBLEM, modifies static variable*
>>>                        }
>>>                        BitSet viableTokensFollowingThisRule =
>>> ComputeContextSensitiveRuleFOLLOW();
>>>                        follow =
>>> follow.Or(viableTokensFollowingThisRule);
>>>                  }
>>>                   // if current token is consistent with what could
>>> come after set
>>>                  // then we know we're missing a token; error
>>> recovery is free to
>>>                  // "insert" the missing token
>>>                   // BitSet cannot handle negative numbers like -1
>>> (EOF) so I leave EOR
>>>                  // in follow set to indicate that the fall of the
>>> start symbol is
>>>                  // in the set (EOF can follow).
>>>                  if ( follow.Member(input.LA(1)) ||
>>> follow.Member(Token.EOR_TOKEN_TYPE) ) {
>>>                        return true;
>>>                  }
>>>                  return false;
>>>            }
>>> Simple program that exhibits the fundamental problem of trying to
>>> use a static  readonly member. The state of that member can change,
>>> just not the instance itself:
>>> using System;
>>> using System.Collections.Generic;
>>> using System.Linq;
>>> using System.Text;
>>> namespace ConsoleApplication2
>>> {
>>>   class Program
>>>   {
>>>      static void Main( string[] args )
>>>      {
>>>         Testing t = new Testing();
>>>         Console.WriteLine( Testing.test.isSet );
>>>          Testing.test.isSet = true;
>>>         Testing x = new Testing();
>>>          Console.WriteLine( Testing.test.isSet );
>>>      }
>>>   }
>>>    public class Testing
>>>   {
>>>      public static readonly Test test = new Test();
>>>   }
>>>    public class Test
>>>   {
>>>      public bool isSet = false;
>>>   }
>>> }
>>>
>>
>
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
>

From carter_cheng at yahoo.com  Mon Aug  4 13:45:11 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Mon, 4 Aug 2008 13:45:11 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <568176.78311.qm@web50108.mail.re2.yahoo.com>

Thanks everyone for the help thus far. This is likely another beginners question concerning the behavior of the lexer/parser interactions in ANTLRv3. The question I have is are the tokens requested by the parser context dependent? i.e. is a different (N)DFA constructed depending on which tokens the parser expects to see in the stream or is there only 1 N(DFA) with a series of stop states.

I ask this question because of the following ambiguity that arises from a grammar I am working on which attempts to be compatible with an existing language.

(a[1]); // lookup the index 1 in the variable array a

([ 1 : 2 ]); // construct a mapping value with key : value in this case 1 : 2

The question I have is how can ANTLRv3 know whether ]) is a single token or two tokens?

Thanks in advance,

Carter.


      

From rmann at latencyzero.com  Mon Aug  4 14:05:40 2008
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 4 Aug 2008 14:05:40 -0700
Subject: [antlr-interest] Creating a templating engine
Message-ID: <76A6D755-1191-4469-9D05-8C1FAEF51F8E@latencyzero.com>

I'd like to create a template language like Velocity for generating  
text from input templates. Velocity has two primary constructs:  
directives and references. A directive takes the form of a '#' at the  
start of a line, followed by keywords and expressions. A reference  
looks like '${' ID '}'. References are replaced with a string  
representation of the value to which they refer. Anything else in the  
file is passed through unchanged. Directives can demarcate multiple  
lines and conditionally or repeatedly emit the lines they contain.

Can someone give me some terminology for what this type of grammar/ 
parser is, so I can better determine where to look? Is it a filter/ 
fuzzy grammar? I don't want to discard the text found between  
references or directives, but rather accumulate it into a variable I  
can then reference (inside my parser). It seems that a filter would  
discard that.

I have the Definitive Guide, but don't really know where to look  
within it.

Are there any examples of a grammar like this that I can study?

Thanks a lot!

-- 
Rick


From rschulz at sonic.net  Mon Aug  4 14:10:28 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 4 Aug 2008 14:10:28 -0700
Subject: [antlr-interest] Creating a templating engine
In-Reply-To: <76A6D755-1191-4469-9D05-8C1FAEF51F8E@latencyzero.com>
References: <76A6D755-1191-4469-9D05-8C1FAEF51F8E@latencyzero.com>
Message-ID: <200808041410.28401.rschulz@sonic.net>

On Monday 04 August 2008 14:05, Rick Mann wrote:
> I'd like to create a template language like Velocity for generating
> text from input templates.

Is your interest the end result, the template system itself, or is it 
the task of creating a templating system?

Because if it's the former, there are plenty to choose from, and these 
are not trivial systems. I use FreeMarker.


> ...


Randall Schulz

From rmann at latencyzero.com  Mon Aug  4 14:23:37 2008
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 4 Aug 2008 14:23:37 -0700
Subject: [antlr-interest] Creating a templating engine
In-Reply-To: <200808041410.28401.rschulz@sonic.net>
References: <76A6D755-1191-4469-9D05-8C1FAEF51F8E@latencyzero.com>
	<200808041410.28401.rschulz@sonic.net>
Message-ID: <1883E24C-3263-46A9-B211-66D042433F6A@latencyzero.com>


On Aug 4, 2008, at 14:10:28, Randall R Schulz wrote:

> Is your interest the end result, the template system itself, or is it
> the task of creating a templating system?
>
> Because if it's the former, there are plenty to choose from, and these
> are not trivial systems. I use FreeMarker.


I omitted one important detail: the resulting engine needs to be in C  
or C++.

I guess I should look around for solutions first, but I admit to a  
certain inane desire to write the grammar and engine from scratch.  
Partly to ensure it fits in with our existing web server code, and  
partly to make sure we have no code license issues, and partly because  
I enjoy punishing myself.

-- 
Rick


From antlr at mirality.co.nz  Mon Aug  4 14:31:41 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 05 Aug 2008 09:31:41 +1200
Subject: [antlr-interest] Rewrite separators to root nodes.
In-Reply-To: <03f001c8f64b$55fb45d0$01f1d170$@co.za>
References: <20080804114428.kr65rab94wkkgcs8@webmail.palantir.co.za>
	<03f001c8f64b$55fb45d0$01f1d170$@co.za>
Message-ID: <20080804213147.F0CFC11E9DB@www.antlr.org>

At 04:01 5/08/2008, Craig Main wrote:
 >I did originally have it like this.
 >I ended up struggling to get the template output to work.
 >My templates are not also recursing so it get's tricky.
 >
 >rules
 >   : ^('or' a=rules b=rules) ->
 >ORTEMPLATE(a.returnvalue,b.returnvalue)
 >   | ^('and' a=rules b=rules) ->
 >ANDTEMPLATE(a.returnvalue,b.returnvalue)
 >   | r=rule -> RULETEMPLATE(r.returnvalue)
 >   ;

This is just a wild stab in the dark (because I've never actually 
used StringTemplate myself), but try this instead:

rules
    : ^('or' a=rules b=rules)
      -> ORTEMPLATE(a.st,b.st)
    | ^('and' a=rules b=rules)
      -> ANDTEMPLATE(a.st,b.st)
    | r=rule -> RULETEMPLATE(r.returnvalue)
    ;

If that doesn't work, then maybe someone else will be able to help 
you more :)


From antlr at mirality.co.nz  Mon Aug  4 14:37:52 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 05 Aug 2008 09:37:52 +1200
Subject: [antlr-interest] ANTLR on mingw
In-Reply-To: <1217866369.8413.63.camel@jimi>
References: <E1C843E51A1A4D2688CBDB5A5D504796@one>
	<1217866369.8413.63.camel@jimi>
Message-ID: <20080804213759.4864D2F4319@www.antlr.org>

At 04:12 5/08/2008, Jim Idle wrote:
>>The fix is
>>easy; typedef the missing types. However, I have a suggestion to 
>>#include
>><stdint.h> and use the standard types defined there: int8_t, 
>>uint8_t, ...,
>>uint64_t, instead of using the windows ones. If you want, I will 
>>even do
>>this for you.
>
>stdint.h may be supplied with mingw, but it is not a part of the 
>windows headers. However, I think that Mingw defines: __MINGW32__ 
>if it is the compiler, so if stdint.h is always present when 
>mingw is the compiler, which I believe is the case, then I can 
>modify the headers for mingw.

http://en.wikipedia.org/wiki/Stdint.h

It's part of C99, so it should be present in all recent versions 
of compilers.  (MSVC being the exception, because it's pretty slow 
to adopt standards.  The Wikipedia page lists some alternative 
implementations, but care needs to be taken in their use since you 
can't mix them in the same compilation unit.)


From antlr at mirality.co.nz  Mon Aug  4 14:45:09 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 05 Aug 2008 09:45:09 +1200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <568176.78311.qm@web50108.mail.re2.yahoo.com>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
Message-ID: <20080804214517.AF7E22F4319@www.antlr.org>

At 08:45 5/08/2008, Carter Cheng wrote:
 >Thanks everyone for the help thus far. This is likely another
 >beginners question concerning the behavior of the lexer/parser
 >interactions in ANTLRv3. The question I have is are the tokens
 >requested by the parser context dependent? i.e. is a different
 >(N)DFA constructed depending on which tokens the parser expects 
to
 >see in the stream or is there only 1 N(DFA) with a series of 
stop
 >states.

Lexing is all done up front with no input from the parser at all.

 >(a[1]); // lookup the index 1 in the variable array a
 >
 >([ 1 : 2 ]); // construct a mapping value with key : value in 
this
 >case 1 : 2
 >
 >The question I have is how can ANTLRv3 know whether ]) is a 
single
 >token or two tokens?

Depends on how you've defined the lexer rules :)  But normally 
you'd want to define it as two tokens.


From carter_cheng at yahoo.com  Mon Aug  4 15:05:14 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Mon, 4 Aug 2008 15:05:14 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <363261.65987.qm@web50102.mail.re2.yahoo.com>

The difficulty is with the language I am working with in the first case it should be two tokens ']' ')' but the second case it should be one token '])' without intervening whitespace between the ']' and ')'. 

The only way I can see of solving this problem is to make white space explicit in the grammar. I.e. litter my rules with whitespace tokens and omit a whitespace token in the case when i expect a '])'. Is this the correct way to do this with ANTLRv3?

Regards,

Carter.


--- On Mon, 8/4/08, Gavin Lambert <antlr at mirality.co.nz> wrote:

> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] Another parsing question
> To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> Date: Monday, August 4, 2008, 2:45 PM
> At 08:45 5/08/2008, Carter Cheng wrote:
>  >Thanks everyone for the help thus far. This is likely
> another
>  >beginners question concerning the behavior of the
> lexer/parser
>  >interactions in ANTLRv3. The question I have is are
> the tokens
>  >requested by the parser context dependent? i.e. is a
> different
>  >(N)DFA constructed depending on which tokens the
> parser expects 
> to
>  >see in the stream or is there only 1 N(DFA) with a
> series of 
> stop
>  >states.
> 
> Lexing is all done up front with no input from the parser
> at all.
> 
>  >(a[1]); // lookup the index 1 in the variable array a
>  >
>  >([ 1 : 2 ]); // construct a mapping value with key :
> value in 
> this
>  >case 1 : 2
>  >
>  >The question I have is how can ANTLRv3 know whether ])
> is a 
> single
>  >token or two tokens?
> 
> Depends on how you've defined the lexer rules :)  But
> normally 
> you'd want to define it as two tokens.


      

From jaluber at gmx.de  Mon Aug  4 15:12:38 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Aug 2008 00:12:38 +0200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <363261.65987.qm@web50102.mail.re2.yahoo.com>
References: <363261.65987.qm@web50102.mail.re2.yahoo.com>
Message-ID: <48977ED6.10209@gmx.de>

Carter Cheng schrieb:
> The difficulty is with the language I am working with in the first case it should be two tokens ']' ')' but the second case it should be one token '])' without intervening whitespace between the ']' and ')'. 
> 
> The only way I can see of solving this problem is to make white space explicit in the grammar. I.e. litter my rules with whitespace tokens and omit a whitespace token in the case when i expect a '])'. Is this the correct way to do this with ANTLRv3?
> 
> Regards,
> 
> Carter.

You can check manually, if the indizes of the two tokens differ by only 
one. In that case no whitespace/comment/etc. is between them. 
$RBRACKET.index == $RPAREN.index -1 should work (replace the token names 
with the ones, you used).

Johannes
> 
> 
> --- On Mon, 8/4/08, Gavin Lambert <antlr at mirality.co.nz> wrote:
> 
>> From: Gavin Lambert <antlr at mirality.co.nz>
>> Subject: Re: [antlr-interest] Another parsing question
>> To: carter_cheng at yahoo.com, antlr-interest at antlr.org
>> Date: Monday, August 4, 2008, 2:45 PM
>> At 08:45 5/08/2008, Carter Cheng wrote:
>>  >Thanks everyone for the help thus far. This is likely
>> another
>>  >beginners question concerning the behavior of the
>> lexer/parser
>>  >interactions in ANTLRv3. The question I have is are
>> the tokens
>>  >requested by the parser context dependent? i.e. is a
>> different
>>  >(N)DFA constructed depending on which tokens the
>> parser expects 
>> to
>>  >see in the stream or is there only 1 N(DFA) with a
>> series of 
>> stop
>>  >states.
>>
>> Lexing is all done up front with no input from the parser
>> at all.
>>
>>  >(a[1]); // lookup the index 1 in the variable array a
>>  >
>>  >([ 1 : 2 ]); // construct a mapping value with key :
>> value in 
>> this
>>  >case 1 : 2
>>  >
>>  >The question I have is how can ANTLRv3 know whether ])
>> is a 
>> single
>>  >token or two tokens?
>>
>> Depends on how you've defined the lexer rules :)  But
>> normally 
>> you'd want to define it as two tokens.
> 
> 
>       
> 


From passionist_81 at yahoo.co.uk  Mon Aug  4 17:20:29 2008
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Tue, 5 Aug 2008 00:20:29 +0000 (GMT)
Subject: [antlr-interest] problem in this grammer file:-
Message-ID: <469032.55676.qm@web25906.mail.ukl.yahoo.com>

Hi i am new to antlr .i have to use this grammer file produced by
somebody else . i am trying to run it.can somebody plz check those
errors in this grammer.

the errors it is giving are 

ANTLR Parser Generator? Version 3.1b1 (May 20, 2008)? 1989-2008

error(100): Dfa.g:4:1: syntax error: antlr: Dfa.g:4:1: unexpected token: 

? import java.io.*;

? import antlr.*;

? import uk.ac.sheffield.dcs.dfa.*;

? import uk.ac.sheffield.dcs.dfa.spec.*;



warning(149): Dfa.g:0:0: rewrite syntax or operator with no output option; setting output=AST

error(150):? grammar file Dfa.g has no rules

error(100): Dfa.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected end of subtree

error(100): Dfa.g:0:0: syntax error: define: <AST>:0:0: unexpected end of subtree

grammer file is attached with this e-mail.

thanking you,

faraz







      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/9a6a2339/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dfa.g
Type: application/octet-stream
Size: 18974 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/9a6a2339/attachment.obj 

From jbb at acm.org  Mon Aug  4 17:38:53 2008
From: jbb at acm.org (John B. Brodie)
Date: Mon, 04 Aug 2008 20:38:53 -0400
Subject: [antlr-interest] Another parsing question
In-Reply-To: <363261.65987.qm@web50102.mail.re2.yahoo.com> (message from
	Carter Cheng on Mon, 4 Aug 2008 15:05:14 -0700 (PDT))
References: <363261.65987.qm@web50102.mail.re2.yahoo.com>
Message-ID: <E1KQAZh-0007w1-K9@gecko.home.org>

Greetings!

Carter Cheng continued an ongoing thread by writting:
>The difficulty is with the language I am working with in the first
>case it should be two tokens ']' ')' but the second case it should be
>one token '])' without intervening whitespace between the ']' and
>')'.
>
>The only way I can see of solving this problem is to make white space
>explicit in the grammar. I.e. litter my rules with whitespace tokens
>and omit a whitespace token in the case when i expect a '])'. Is this
>the correct way to do this with ANTLRv3?
>

Perhaps making Whitespace significant to the parser is your only
choice, but I am sure your grammar will get really ugly and probably
be ambiguous requiring lots of expensive lookahead in predicates.

But...

Are the `([` `])` and `[` `]` (and maybe `(` `)` ) tokens properly
nested in your language?

e.g. is `([` .. `[` .. `])` .. `]` legal (where the .. is some
other legal construct)?

if not, ie these things do follow a proper (usual?) nested stucture,
then I think you can keep a state within the lexer itself regarding
how to interpret the `])` pair of characters.

so, depending on your answer to this nesting question, the rest of
this message may be helpful or may be just a bunch of junk.
(maybe it is just a bunch of junk always ;-)

under the requirement of proper nesting I believe you could create a
stack of expected closing brackets inside the lexer.

when you lex a `[` you push a `]` on the to expect closing form stack.

when you lex a `([` you push a `])` on the to expect closing form stack.

when you lex a `(` you push a `)` on the to expect closing form stack.
and possibly any other bracketing pair your language has ( `{` `}` ?).

and then when you encounter a `]` you can examine the top of the stack
in order to decide whether or not a `)` immediately following that `]`
should be treated as the `])` or not; and then, of course, pop the
stack.

so I think the above sketch will work for sentences in your language
that have correct syntax.

I am not so sure about how well the above will work for sentences that
contain syntax errors.

if the user enters something like `([` .. `)` (ie. forgetting the `]`)
then you can use what is on the stack to provide a better error
message?

but if the user enters something similar to `(` .. `([` .. `]` .. `)`
-- not sure the above will recover from these kinds of syntax
errors. Might have to peek below the top of the stack to try to
resolve, and having all the bracketing forms push/pop the stack may be
necessary for that...

But, anyway, hope this may help lead to a proper solution.
   -jbb

From lgcraymer at yahoo.com  Mon Aug  4 19:08:49 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 4 Aug 2008 19:08:49 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <5822.21889.qm@web55911.mail.re3.yahoo.com>

Better is to use a sempred to look for whitespace on hidden channels.  That requires subclassing CommonTokenStream to get access to channel (or add a method to look for "next token" on a specific channel).

--Loring



----- Original Message ----
> From: John B. Brodie <jbb at acm.org>
> To: carter_cheng at yahoo.com
> Cc: antlr-interest at antlr.org
> Sent: Monday, August 4, 2008 5:38:53 PM
> Subject: Re: [antlr-interest] Another parsing question
> 
> Greetings!
> 
> Carter Cheng continued an ongoing thread by writting:
> >The difficulty is with the language I am working with in the first
> >case it should be two tokens ']' ')' but the second case it should be
> >one token '])' without intervening whitespace between the ']' and
> >')'.
> >
> >The only way I can see of solving this problem is to make white space
> >explicit in the grammar. I.e. litter my rules with whitespace tokens
> >and omit a whitespace token in the case when i expect a '])'. Is this
> >the correct way to do this with ANTLRv3?
> >
> 
> Perhaps making Whitespace significant to the parser is your only
> choice, but I am sure your grammar will get really ugly and probably
> be ambiguous requiring lots of expensive lookahead in predicates.
> 
> But...
> 
> Are the `([` `])` and `[` `]` (and maybe `(` `)` ) tokens properly
> nested in your language?
> 
> e.g. is `([` .. `[` .. `])` .. `]` legal (where the .. is some
> other legal construct)?
> 
> if not, ie these things do follow a proper (usual?) nested stucture,
> then I think you can keep a state within the lexer itself regarding
> how to interpret the `])` pair of characters.
> 
> so, depending on your answer to this nesting question, the rest of
> this message may be helpful or may be just a bunch of junk.
> (maybe it is just a bunch of junk always ;-)
> 
> under the requirement of proper nesting I believe you could create a
> stack of expected closing brackets inside the lexer.
> 
> when you lex a `[` you push a `]` on the to expect closing form stack.
> 
> when you lex a `([` you push a `])` on the to expect closing form stack.
> 
> when you lex a `(` you push a `)` on the to expect closing form stack.
> and possibly any other bracketing pair your language has ( `{` `}` ?).
> 
> and then when you encounter a `]` you can examine the top of the stack
> in order to decide whether or not a `)` immediately following that `]`
> should be treated as the `])` or not; and then, of course, pop the
> stack.
> 
> so I think the above sketch will work for sentences in your language
> that have correct syntax.
> 
> I am not so sure about how well the above will work for sentences that
> contain syntax errors.
> 
> if the user enters something like `([` .. `)` (ie. forgetting the `]`)
> then you can use what is on the stack to provide a better error
> message?
> 
> but if the user enters something similar to `(` .. `([` .. `]` .. `)`
> -- not sure the above will recover from these kinds of syntax
> errors. Might have to peek below the top of the stack to try to
> resolve, and having all the bracketing forms push/pop the stack may be
> necessary for that...
> 
> But, anyway, hope this may help lead to a proper solution.
>    -jbb



      


From david.benn at astc-design.com  Mon Aug  4 21:03:48 2008
From: david.benn at astc-design.com (David Benn)
Date: Tue, 05 Aug 2008 13:33:48 +0930
Subject: [antlr-interest] Overriding error reporting in ANTLR3 C runtime
Message-ID: <4897D124.7080307@astc-design.com>

On the Wiki, there's a section describing how to  override the 

displayRecognitionError()

method for Java 
(http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery).

Is it possible to do the same thing for translators targetting the C 
runtime?

Rgds,

DJB

-- 
David Benn
Australian Semiconductor Technology Company (ASTC) Pty Ltd
76 Waymouth Street
Adelaide 5000, South Australia
ABN:   18 117 392 784
Tel:   +61 8 8231 2782
Mob:   +61 407 261163
Email: david.benn at astc-design.com
Web:   www.astc-design.com


From mikael.petterson at ericsson.com  Mon Aug  4 22:47:31 2008
From: mikael.petterson at ericsson.com (Mikael Petterson)
Date: Tue, 5 Aug 2008 07:47:31 +0200
Subject: [antlr-interest] newbie needs help to define parser grammar
Message-ID: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B6089@esealmw104.eemea.ericsson.se>

Hi,

In my grammar file I have the following parser for handling error
messages from versioning tool ( clearcase).

error returns [ClearCaseElementState el]
	: {int exceptionCode = 0;}
	  {boolean throwException = false;}
	'cleartool: Error:' ('Entry' 'named' elem=STRING 'already'
'exists.' {throwException = true; exceptionCode |=
ClearCase.ERROR_ALREADY_ADDED;}
	| 'Element' elem=STRING 'has' 'checkouts.' {throwException =
true; exceptionCode |= ClearCase.ERROR_ALREADY_CHECKED_OUT;}
	| 'Element' elem=STRING 'is' 'already' 'checked' 'out' 'to'
'view' STRING DOT {el = new ClearCaseElementState($elem.text,
ClearCase.IS_ELEMENT | ClearCase.ERROR_ALREADY_CHECKED_OUT);}
	| 'Can\u0027t' 'modify' 'directory' elem=STRING 'because' 'it'
'is' 'not' 'checked' 'out.' {throwException = true; exceptionCode |=
ClearCase.ERROR_DIR_IS_NOT_CHECKED_OUT;}
	| 'Unable' 'to' 'access' elem=STRING ':' 'No' 'such' 'file' 'or'
'directory.' {throwException = true; exceptionCode |=
ClearCase.ERROR_NOT_ACCESSIBLE;}
	| 'By' 'default' COMMA 'won\u0027t' 'create' 'version' 'with'
'data' 'identical' 'to' 'predecessor.'{throwException = true;
exceptionCode |= ClearCase.ERROR_PREDECESSOR_IS_IDENTICAL;}
	| (LITERAL | STRING | DOT)+)
	{if (throwException) throw new ClearCaseException(exceptionCode,
new String[]{$elem.text}, null);};


The output from clearcase that I need to parse is:

"cleartool: Error: By default, won't create version with data identical
to predecessor.\r\n"+
						"cleartool: Error:
Unable to check in
\"M:\\eraonel_testa\\mbv_admin\\testarea\\productsample\\com\\sample\\pr
oduct\\ProductC.java\".\r\n");

As it it is now I am missing parsing of the second line and element name
in the String [] becomes null.

I cannot only parse the second line since there could be numerous
reasons for unable to check in. So I need help on how to parse both
lines ( as a unit) and then throw the expection).

Any ideas on how I can solve this?

cheers,

//mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/7a045458/attachment.html 

From mikael.petterson at ericsson.com  Mon Aug  4 23:37:47 2008
From: mikael.petterson at ericsson.com (Mikael Petterson)
Date: Tue, 5 Aug 2008 08:37:47 +0200
Subject: [antlr-interest] newbie needs help to define parser grammar
In-Reply-To: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B6089@esealmw104.eemea.ericsson.se>
References: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B6089@esealmw104.eemea.ericsson.se>
Message-ID: <8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B60D0@esealmw104.eemea.ericsson.se>

Hi,
 
I tried the following grammar:
 
rror returns [ClearCaseElementState el]
 : {int exceptionCode = 0;}
   {boolean throwException = false;}
 'cleartool: Error:' ('Entry' 'named' elem=STRING 'already' 'exists.'
{throwException = true; exceptionCode |= ClearCase.ERROR_ALREADY_ADDED;}
 | 'Element' elem=STRING 'has' 'checkouts.' {throwException = true;
exceptionCode |= ClearCase.ERROR_ALREADY_CHECKED_OUT;}
 | 'Element' elem=STRING 'is' 'already' 'checked' 'out' 'to' 'view'
STRING DOT {el = new ClearCaseElementState($elem.text,
ClearCase.IS_ELEMENT | ClearCase.ERROR_ALREADY_CHECKED_OUT);}
 | 'Can\u0027t' 'modify' 'directory' elem=STRING 'because' 'it' 'is'
'not' 'checked' 'out.' {throwException = true; exceptionCode |=
ClearCase.ERROR_DIR_IS_NOT_CHECKED_OUT;}
 | 'Unable' 'to' 'access' elem=STRING ':' 'No' 'such' 'file' 'or'
'directory.' {throwException = true; exceptionCode |=
ClearCase.ERROR_NOT_ACCESSIBLE;}
 | 'By' 'default' COMMA 'won\u0027t' 'create' 'version' 'with' 'data'
'identical' 'to' 'predecessor.' NEWLINE 'cleartool: Error:' 'Unable'
'to' 'check' 'in' elem=STRING DOT  {throwException = true; exceptionCode
|= ClearCase.ERROR_PREDECESSOR_IS_IDENTICAL;}
 | (LITERAL | STRING | DOT)+)
 {if (throwException) throw new ClearCaseException(exceptionCode, new
String[]{$elem.text}, null);};
 
 
I get the following error:
 
BR.recoverFromMismatchedToken

line 2:28 mismatched input 'check' expecting 'check'

I cannot quite figure out what is meant.

 

Any ideas?

cheers,

//mikael


________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mikael Petterson
Sent: den 5 augusti 2008 07:48
To: antlr-interest
Subject: [antlr-interest] newbie needs help to define parser grammar



Hi, 

In my grammar file I have the following parser for handling error
messages from versioning tool ( clearcase). 

error returns [ClearCaseElementState el] 
        : {int exceptionCode = 0;} 
          {boolean throwException = false;} 
        'cleartool: Error:' ('Entry' 'named' elem=STRING 'already'
'exists.' {throwException = true; exceptionCode |=
ClearCase.ERROR_ALREADY_ADDED;}

        | 'Element' elem=STRING 'has' 'checkouts.' {throwException =
true; exceptionCode |= ClearCase.ERROR_ALREADY_CHECKED_OUT;}

        | 'Element' elem=STRING 'is' 'already' 'checked' 'out' 'to'
'view' STRING DOT {el = new ClearCaseElementState($elem.text,
ClearCase.IS_ELEMENT | ClearCase.ERROR_ALREADY_CHECKED_OUT);}

        | 'Can\u0027t' 'modify' 'directory' elem=STRING 'because' 'it'
'is' 'not' 'checked' 'out.' {throwException = true; exceptionCode |=
ClearCase.ERROR_DIR_IS_NOT_CHECKED_OUT;}

        | 'Unable' 'to' 'access' elem=STRING ':' 'No' 'such' 'file' 'or'
'directory.' {throwException = true; exceptionCode |=
ClearCase.ERROR_NOT_ACCESSIBLE;}

        | 'By' 'default' COMMA 'won\u0027t' 'create' 'version' 'with'
'data' 'identical' 'to' 'predecessor.'{throwException = true;
exceptionCode |= ClearCase.ERROR_PREDECESSOR_IS_IDENTICAL;}

        | (LITERAL | STRING | DOT)+) 
        {if (throwException) throw new ClearCaseException(exceptionCode,
new String[]{$elem.text}, null);}; 


The output from clearcase that I need to parse is: 

"cleartool: Error: By default, won't create version with data identical
to predecessor.\r\n"+ 
                                                "cleartool: Error:
Unable to check in
\"M:\\eraonel_testa\\mbv_admin\\testarea\\productsample\\com\\sample\\pr
oduct\\ProductC.java\".\r\n");

As it it is now I am missing parsing of the second line and element name
in the String [] becomes null. 

I cannot only parse the second line since there could be numerous
reasons for unable to check in. So I need help on how to parse both
lines ( as a unit) and then throw the expection).

Any ideas on how I can solve this? 

cheers, 

//mike 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/406dcb53/attachment-0001.html 

From mah at oticon.dk  Mon Aug  4 23:45:20 2008
From: mah at oticon.dk (Martin Hans)
Date: Tue, 5 Aug 2008 08:45:20 +0200
Subject: [antlr-interest] [C target] #define clashes: would
	itbe	possible	to add ANTLR_ prefix to automatically generated
	macros?
In-Reply-To: <1217635597.10245.25.camel@jimi>
Message-ID: <8CC17F724B8992438D91F16D2EF784D92B7CD4@KBNNT70.emea.demant.com>

Hi,

I think ANTLR could be more helpful than it is in this situation, simply
by issuing an clear error message if the grammar uses a reserved word.
It took me a while to figure out that "match" is reserved when using the
python target because the parser base class uses that method name for
something else. Without the error message we are left to debugging the
name clashes from obscure syntax errors or parsers that don't work as
expected.

 

As a newbie this was the largest hurdle in getting started with ANTLR.

 

Martin 

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Saturday, August 02, 2008 2:07 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [C target] #define clashes: would itbe
possible to add ANTLR_ prefix to automatically generated macros?

 

On Fri, 2008-08-01 at 16:05 -0700, Dinghao Wu wrote: 

 
It is similar for ANTLR generated code for grammar rules. Once I had
rules called "null" and "string". The generated C# code clashes. I think
the generated code should add some prefix so that it won't generate a
method called null() or string().


Basically you just don't use keywords in the target language. There is
no way to completely guarantee that things won't clash, even
ANTLR_TOKEN_ and so on. But when you prefix them then you lose the
readability of the source code when debugging. It's obvious what is
happening and easier to change your rule and token names IMO.

Jim 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/03baafc8/attachment.html 

From Ramon.Verbruggen at quintiq.com  Mon Aug  4 23:46:49 2008
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Tue, 05 Aug 2008 08:46:49 +0200
Subject: [antlr-interest] Overriding error reporting in ANTLR3 C	runtime
In-Reply-To: <4897D124.7080307@astc-design.com>
References: <4897D124.7080307@astc-design.com>
Message-ID: <48981378.BB97.0087.0@quintiq.com>

>From the C API documentation on http://www.antlr.org/api/C => Using the ANTLR3 C Target:

Implementing Customized Methods
Unless you wish to create your own tree structures using the built in ANTLR AST rewriting notation, you will rarely need to override the default implementation of runtime methods. The exception to this will be the syntax err reporting method, which is essentially a stub function that you will usually want to provide your own implementation for. You should consider the built in function displayRecognitionError() as an example of where to start as there can be no really useful generic error message display. 

I hope this helps,

Ramon

>>> David Benn <david.benn at astc-design.com> wrote:
> On the Wiki, there's a section describing how to  override the 
> 
> displayRecognitionError()
> 
> method for Java 
> (http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery).
> 
> Is it possible to do the same thing for translators targetting the C 
> runtime?
> 
> Rgds,
> 
> DJB


This message contains information that may be privileged or confidential and is the property of Quintiq. It is only intended for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to read, print, retain, copy, disseminate, distribute or use this message or any part thereof. If you have received this message in error, please notify the sender immediately and delete all copies of this message. Please note that e-mails are susceptible to change, therefore they are not binding.

From varun.bhargava at carsales.com.au  Mon Aug  4 23:50:07 2008
From: varun.bhargava at carsales.com.au (Varun Bhargava)
Date: Tue, 5 Aug 2008 16:50:07 +1000
Subject: [antlr-interest] ANTLR3 - Find the parent node in an AST
Message-ID: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>

Hi All,

 

I'm using ANTLR3 and C# as my target language.

 

When I go through my tree, I noticed that the CommonTree class does not
have a reference to its parent node. How can I achieve this
functionality?

 

Thanks

Varun

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/df743e63/attachment.html 

From laurent.caillette at gmail.com  Tue Aug  5 00:51:13 2008
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Tue, 5 Aug 2008 09:51:13 +0200
Subject: [antlr-interest] ANTLRWorks getting confused with import
Message-ID: <3b7c64070808050051r6d0061e8jdb3cb8278acc808d@mail.gmail.com>

Hi all,

There is a strange behavior happening with ANTLRWorks-1.2b5 on MacOsX
10.4 (Intel) and import feature. I've got a big grammar to split in
many parts. The two grammars I've trouble with should be imported in
some other grammar files, so I can't use combined grammars here
because combined grammars (lexer + parser if I'm exact) can't import
combined grammars. At least that's what TestCompositeGrammars.java
says in ANTLR sources.

You can take a look at the big grammar file if you're curious but it's
not the point.
http://github.com/caillette/novelang/tree/master%2Fsrc%2Fantlr%2FNovelang.g?raw=true

Here is how I get the error. It seems that ANTLRWorks gets confused
between the two files.

I'm opening Symbol.g in ANTLRWorks and I launch "Generate code". There
is an error dialog showing me I'm wrong to use lexer rules in a parser
grammar and the error appears at line 24 of Token.g. That's weird
because Token.g is a lexer grammar. Looking at the console dump for
both files it seems the errors don't correspond.

I hope I've shipped everything to reproduce this behavior.

Regards,

c.





Console dump for Symbol.g:
<<<
[09:31:02] java.lang.NullPointerException
	at org.antlr.tool.GrammarSanity.traceStatesLookingForLeftRecursion(GrammarSanity.java:91)
	at org.antlr.tool.GrammarSanity.checkAllRulesForLeftRecursion(GrammarSanity.java:66)
	at org.antlr.tool.Grammar.checkAllRulesForLeftRecursion(Grammar.java:1852)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(Unknown Source)
	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(Unknown Source)
	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:637)
>>> (end of console dump for Symbol.g)


Console dump for Token.g :
<<<

[09:31:03] error(103): Token.g:24:0: parser rule anySymbol not allowed in lexer
[09:31:03] error(103): Token.g:29:0: parser rule
anySymbolExceptGreaterthansign not allowed in lexer
[09:31:03] error(103): Token.g:34:0: parser rule
anySymbolExceptGraveAccent not allowed in lexer
[09:31:03] error(103): Token.g:39:0: parser rule
anySymbolExceptGreaterthansignAndGraveAccent not allowed in lexer
[09:31:03] error(103): Token.g:80:0: parser rule digit not allowed in lexer
[09:31:03] error(103): Token.g:84:0: parser rule letters not allowed in lexer
[09:31:03] error(103): Token.g:86:0: parser rule hexLetter not allowed in lexer
[09:31:03] error(103): Token.g:88:0: parser rule nonHexLetter not
allowed in lexer
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:20:0: lexer rule
SOFTBREAK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:21:0: lexer rule
WHITESPACE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:26:0: lexer rule
AMPERSAND not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:27:0: lexer rule
APOSTROPHE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:28:0: lexer rule
ASTERISK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:29:0: lexer rule
CIRCUMFLEX_ACCENT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:30:0: lexer rule
COLON not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:31:0: lexer rule
COMMA not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:32:0: lexer rule
COMMERCIAL_AT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:33:0: lexer rule
DEGREE_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:34:0: lexer rule
DOLLAR_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:35:0: lexer rule
DOUBLE_QUOTE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:36:0: lexer rule
ELLIPSIS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:37:0: lexer rule
EQUALS_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:38:0: lexer rule
EXCLAMATION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:39:0: lexer rule
FULL_STOP not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:40:0: lexer rule
GRAVE_ACCENT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:41:0: lexer rule
GREATER_THAN_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:42:0: lexer rule
HYPHEN_MINUS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:43:0: lexer rule
LEFT_CURLY_BRACKET not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:44:0: lexer rule
LEFT_PARENTHESIS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:45:0: lexer rule
LEFT_SQUARE_BRACKET not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:46:0: lexer rule
LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:47:0: lexer rule
LESS_THAN_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:48:0: lexer rule
LOW_LINE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:49:0: lexer rule
NUMBER_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:50:0: lexer rule
PLUS_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:51:0: lexer rule
PERCENT_SIGN not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:52:0: lexer rule
QUESTION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:53:0: lexer rule
REVERSE_SOLIDUS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:54:0: lexer rule
RIGHT_CURLY_BRACKET not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:55:0: lexer rule
RIGHT_PARENTHESIS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:56:0: lexer rule
RIGHT_SQUARE_BRACKET not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:57:0: lexer rule
RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:58:0: lexer rule
SEMICOLON not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:59:0: lexer rule
SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:60:0: lexer rule
SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:61:0: lexer rule
SOLIDUS not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:62:0: lexer rule
TILDE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:63:0: lexer rule
VERTICAL_LINE not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:65:0: lexer rule
DIGIT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:67:0: lexer rule
HEX_LETTER not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:72:0: lexer rule
NON_HEX_LETTER not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:135:0: lexer rule
BLOCK_COMMENT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:141:0: lexer rule
LINE_COMMENT not allowed in parser
[09:31:03] error(102):
/Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:1:0: lexer rule
Tokens not allowed in parser

>>> (end of console dump for Token.g)


<<<
parser grammar Symbol ;

import Token ;

anySymbol
  : anySymbolExceptGreaterthansign
  | GREATER_THAN_SIGN
  ;

anySymbolExceptGreaterthansign
  : anySymbolExceptGreaterthansignAndGraveAccent
  | GRAVE_ACCENT
  ;

anySymbolExceptGraveAccent
  : anySymbolExceptGreaterthansignAndGraveAccent
  | GREATER_THAN_SIGN
  ;

anySymbolExceptGreaterthansignAndGraveAccent
  :     digit
      | hexLetter
      | nonHexLetter
      | AMPERSAND
      | APOSTROPHE
      | ASTERISK
      | CIRCUMFLEX_ACCENT
      | COLON
      | COMMA
      | COMMERCIAL_AT
      | DOLLAR_SIGN
      | DOUBLE_QUOTE
      | ELLIPSIS
      | EQUALS_SIGN
      | EXCLAMATION_MARK
      | FULL_STOP
//      | GRAVE_ACCENT
//      | GREATER_THAN_SIGN
      | HYPHEN_MINUS
      | LEFT_CURLY_BRACKET
      | LEFT_PARENTHESIS
      | LEFT_SQUARE_BRACKET
      | LESS_THAN_SIGN
      | LOW_LINE
      | NUMBER_SIGN
      | PLUS_SIGN
      | PERCENT_SIGN
      | QUESTION_MARK
      | RIGHT_CURLY_BRACKET
      | RIGHT_PARENTHESIS
      | RIGHT_SQUARE_BRACKET
      | SEMICOLON
      | SOLIDUS
      | TILDE
      | VERTICAL_LINE
  ;


digit : DIGIT ;

letters : ( hexLetter | nonHexLetter )+ ;

hexLetter : HEX_LETTER ;

nonHexLetter : NON_HEX_LETTER ;

>>> (end of Symbol.g)




<<<
lexer grammar Token ;

SOFTBREAK : ( '\r' '\n' ? ) | '\n' ;
WHITESPACE : ( ' ' | '\t' )+ ;

// All namings respect Unicode standard.
// http://www.fileformat.info/info/unicode

AMPERSAND : '&' ;
APOSTROPHE : '\'' ;
ASTERISK : '*' ;
CIRCUMFLEX_ACCENT : '^' ;
COLON : ':' ;
COMMA : ',' ;
COMMERCIAL_AT : '@' ;
DEGREE_SIGN : '?' ;
DOLLAR_SIGN : '$' ;
DOUBLE_QUOTE : '\"' ;
ELLIPSIS : '...' ;
EQUALS_SIGN : '=' ;
EXCLAMATION_MARK : '!' ;
FULL_STOP : '.' ;
GRAVE_ACCENT : '`' ;
GREATER_THAN_SIGN : '>' ;
HYPHEN_MINUS : '-' ;
LEFT_CURLY_BRACKET : '{' ;
LEFT_PARENTHESIS : '(' ;
LEFT_SQUARE_BRACKET : '[' ;
LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK : '\u00ab' ;
LESS_THAN_SIGN : '<' ;
LOW_LINE : '_' ;
NUMBER_SIGN : '#' ;
PLUS_SIGN : '+' ;
PERCENT_SIGN : '%' ;
QUESTION_MARK : '?' ;
REVERSE_SOLIDUS : '\\' ;
RIGHT_CURLY_BRACKET : '}' ;
RIGHT_PARENTHESIS : ')' ;
RIGHT_SQUARE_BRACKET : ']' ;
RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK : '\u00bb' ;
SEMICOLON : ';' ;
SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK : '\u2039' ;
SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK : '\u203a' ;
SOLIDUS : '/' ;
TILDE : '~' ;
VERTICAL_LINE : '|' ;

DIGIT : '0'..'9' ;

HEX_LETTER
  : 'a' | 'b' | 'c' | 'd' | 'e' | 'f'
  | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'
  ;

NON_HEX_LETTER
  : 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p'
  | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'
  | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P'
  | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'

  | '\u00e0' // LATIN SMALL LETTER A WITH GRAVE
  | '\u00c0' // LATIN CAPITAL LETTER A WITH GRAVE

  | '\u00e2' // LATIN SMALL LETTER A WITH CIRCUMFLEX (&acirc;)
  | '\u00c2' // LATIN CAPITAL LETTER A WITH CIRCUMFLEX (&Acirc;)

  | '\u00e4' // LATIN SMALL LETTER A WITH DIAERESIS (&auml;)
  | '\u00c4' // LATIN CAPITAL LETTER A WITH DIAERESIS (&Auml;)

  | '\u00e6' // LATIN SMALL LETTER AE
  | '\u00c6' // LATIN CAPITAL LETTER AE

  | '\u00e7' // LATIN SMALL LETTER C WITH CEDILLA (&ccedil;)
  | '\u00c7' // LATIN CAPITAL LETTER C WITH CEDILLA (&Ccedil;)

  | '\u00e8' // LATIN SMALL LETTER E WITH GRAVE (&egrave;)
  | '\u00c8' // LATIN CAPITAL LETTER E WITH GRAVE (&Egrave;)

  | '\u00e9' // LATIN SMALL LETTER E WITH ACUTE
  | '\u00c9' // LATIN CAPITAL LETTER E WITH ACUTE

  | '\u00ea' // LATIN SMALL LETTER E WITH CIRCUMFLEX (&ecirc;)
  | '\u00ca' // LATIN CAPITAL LETTER E WITH CIRCUMFLEX (&Ecirc;)

  | '\u00eb' // LATIN SMALL LETTER E WITH DIAERESIS (&euml;)
  | '\u00cb' // LATIN CAPITAL LETTER E WITH DIAERESIS (&Euml;)

  | '\u00ee' // LATIN SMALL LETTER I WITH CIRCUMFLEX (&icirc;)
  | '\u00ce' // LATIN SMALL LETTER I WITH CIRCUMFLEX (&icirc;)

  | '\u00ef' // LATIN SMALL LETTER I WITH DIAERESIS (&iuml;)
  | '\u00cf' // LATIN CAPITAL LETTER I WITH DIAERESIS (&Iuml;)

  | '\u00f4' // LATIN SMALL LETTER O WITH CIRCUMFLEX (&ocirc;)
  | '\u00d4' // LATIN CAPITAL LETTER O WITH CIRCUMFLEX (&Ocirc;)

  | '\u00f6' // LATIN SMALL LETTER O WITH DIAERESIS (&ouml;)
  | '\u00d6' // LATIN CAPITAL LETTER O WITH DIAERESIS (&Ouml;)

  | '\u00f9' // LATIN SMALL LETTER U WITH GRAVE (&ugrave;)
  | '\u00d9' // LATIN CAPITAL LETTER U WITH GRAVE (&Ugrave;)

  | '\u00fb' // LATIN SMALL LETTER U WITH CIRCUMFLEX (&ucirc;)
  | '\u00db' // LATIN CAPITAL LETTER U WITH CIRCUMFLEX (&Ucirc;)

  | '\u00fc' // LATIN SMALL LETTER U WITH DIAERESIS (&uuml;)
  | '\u00dc' // LATIN CAPITAL LETTER U WITH DIAERESIS (&Uuml;)

  | '\u0153' // LATIN SMALL LIGATURE OE
  | '\u0152' // LATIN CAPITAL LIGATURE OE

  ;



// From Java 5 grammar http://www.antlr.org/grammar/1152141644268/Java.g

/** We can't use '/*' because it gets confused with wildcards in file names.
 */
BLOCK_COMMENT
  : '{{' ( options { greedy = false ; } : . )* '}}' { $channel = HIDDEN ; }
  ;

/** As we don't support '/*' we avoid confusion by not supporting
 * usually-associated '//', also used for italics.
 */
LINE_COMMENT
  : '%%' ~('\n'|'\r')* '\r'? '\n' { $channel=HIDDEN ; }
  ;
>>> (end of Symbol.g)

From anders at globe-trotter.us  Tue Aug  5 01:46:30 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Tue, 05 Aug 2008 16:46:30 +0800
Subject: [antlr-interest] =?iso-8859-1?q?_ANTLR_C++_target?=
Message-ID: <20080805084630.12208.qmail@station198.com>

Hi

I read some weeks back about a release for C++, we would be very interested in this as well.

Not directly for the exceptions but to the interaction with the parser a bit more friendly e.g. type handling
and OO concept - I had a bit of a struggle to figure out how the type hierarchy at first when doing a C target
which I think would have been more intuitive if it were C++ objects I was working with.

In addition another advantage as I see it (just to motivate you further Jim :-) is that we don't have to
have any extern "C" linking - passing structures/objects between C and C++ isn't so "fun".

Is there any release date for 3.2 ? (sorry for being pushy :-)

Best regards
Anders Karlsson 

From jaluber at gmx.de  Tue Aug  5 03:16:56 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Aug 2008 12:16:56 +0200
Subject: [antlr-interest] ANTLR3 - Find the parent node in an AST
In-Reply-To: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>
References: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>
Message-ID: <48982898.2040806@gmx.de>

Varun Bhargava schrieb:
> Hi All,
> 
>  
> 
> I?m using ANTLR3 and C# as my target language.
> 
>  
> 
> When I go through my tree, I noticed that the CommonTree class does not 
> have a reference to its parent node. How can I achieve this functionality?

You could derive another class from CommonTree which does store a 
reference to its parent and use it instead of CommonTree. Then you have 
to find the places where the CommonTree instances are created and modify 
those to include the parent reference. The easiest way to find all those 
instances is to enforce the use of this parameter as the compiler will 
complain about the missing argument. Possibly you have to modify the 
template files, too, which means you have to recompile the ANTLR tool 
yourself.

Johannes
> 
>  
> 
> Thanks
> 
> Varun
> 


From johan.grande at crans.org  Tue Aug  5 03:14:41 2008
From: johan.grande at crans.org (Johan Grande)
Date: Tue, 05 Aug 2008 12:14:41 +0200
Subject: [antlr-interest] tree construction, associative operators,
	NullPointerException
Message-ID: <48982811.90600@crans.org>

Hi,

I work with ANTLR v3.1b2 on the Java grammar made by Terence Parr
(http://antlr.org/grammar/1152141644268/Java.g), and I try to construct
ASTs using rewrite rules.

I get runtime errors when I try to construct a binary tree for an
expression with an associative operator.


I try to parse the following code :
,--
| class Test {
|   boolean titi = true & false;
| }
`--


When I try construct an operand list under the '&' operator, with the
'&' rule like this :
,--
| andExpression
|     :   equalityExpression ( '&' equalityExpression )*
|         -> ^(AssociativeOperation And ^(ExpressionList
equalityExpression+))
|     ;
`--
everything works fine.


But when I try to construct a binary tree, as shown at the beginning of
this page : http://www.antlr.org/wiki/display/ANTLR3/Tree+construction ,
with the '&' rule like this :
,--
| andExpression
|     :   (a=equalityExpression -> $a)
|         ( '&' b=equalityExpression -> ^(Cons And $andExpression $b) )*
|    ;
`--
(the other rules are unchanged), I get a NullPointerException.

The problem comes from "$andExpression" : if I replace it by
"EmptyExpression", it runs.


The imaginary tokens I use and the corresponding classes are generated
by GOM (http://tom.loria.fr), from an abstract data structure
description, with a syntax like this :
--------
Expression =
    | AssociativeOperation( nop:AssociativeOperator,
operands:ExpressionList )
    | Cons( nop:AssociativeOperator, lhs:Expression, rhs:Expression )
    | UnaryOperation( uop:UnaryOperator, operand:Expression )
    | EmptyExpression()
// [...]
--------


Here is the complete stack trace :
--------------------------------------------------------------------------------
java.lang.NullPointerException
           at
parser.ast.types.expressionlist.ConsExpressionList.hashFunction(Unknown
Source)
           at
parser.ast.types.expressionlist.ConsExpressionList.initHashCode(Unknown
Source)
           at
parser.ast.types.expressionlist.ConsExpressionList.make(Unknown Source)
           at
parser.ast.types.expressionlist.ExpressionList.append(Unknown Source)
           at parser.ast.AstTree.addChild(Unknown Source)
           at
org.antlr.runtime.tree.BaseTreeAdaptor.addChild(BaseTreeAdaptor.java:104)
           at parser.JavaParser.exclusiveOrExpression(Unknown Source)
           at parser.JavaParser.inclusiveOrExpression(Unknown Source)
           at parser.JavaParser.conditionalAndExpression(Unknown Source)
           at parser.JavaParser.conditionalOrExpression(Unknown Source)
           at parser.JavaParser.conditionalExpression(Unknown Source)
           at parser.JavaParser.expression(Unknown Source)
           at parser.JavaParser.variableInitializer(Unknown Source)
           at parser.JavaParser.variableDeclarator(Unknown Source)
           at parser.JavaParser.variableDeclarators(Unknown Source)
           at parser.JavaParser.fieldDeclaration(Unknown Source)
           at parser.JavaParser.memberDeclaration(Unknown Source)
           at parser.JavaParser.memberDecl(Unknown Source)
           at parser.JavaParser.classBodyDeclaration(Unknown Source)
           at parser.JavaParser.classBody(Unknown Source)
           at parser.JavaParser.normalClassDeclaration(Unknown Source)
           at parser.JavaParser.classDeclaration(Unknown Source)
           at parser.JavaParser.classOrInterfaceDeclaration(Unknown Source)
           at parser.JavaParser.typeDeclaration(Unknown Source)
           at parser.JavaParser.compilationUnit(Unknown Source)
           at Main.main(Unknown Source)
--------------------------------------------------------------------------------

Here you can find the complete grammar ('&' rule line 1043), and some 
GOM-generated classes : http://perso.crans.org/~grande/antlr/ .


Thank you for your help,
Johan




From jaluber at gmx.de  Tue Aug  5 03:29:40 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Aug 2008 12:29:40 +0200
Subject: [antlr-interest] problem in this grammer file:-
In-Reply-To: <469032.55676.qm@web25906.mail.ukl.yahoo.com>
References: <469032.55676.qm@web25906.mail.ukl.yahoo.com>
Message-ID: <48982B94.9080006@gmx.de>

faraz ahmed schrieb:
> Hi i am new to antlr .i have to use this grammer file produced by 
> somebody else . i am trying to run it.can somebody plz check those 
> errors in this grammer.
> the errors it is giving are
> ANTLR Parser Generator  Version 3.1b1 (May 20, 2008)  1989-2008
> error(100): Dfa.g:4:1: syntax error: antlr: Dfa.g:4:1: unexpected token:
>   import java.io.*;
>   import antlr.*;
>   import uk.ac.sheffield.dcs.dfa.*;
>   import uk.ac.sheffield.dcs.dfa.spec.*;
> 
> warning(149): Dfa.g:0:0: rewrite syntax or operator with no output 
> option; setting output=AST
> error(150):  grammar file Dfa.g has no rules
> error(100): Dfa.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected 
> end of subtree
> error(100): Dfa.g:0:0: syntax error: define: <AST>:0:0: unexpected end 
> of subtree
> grammer file is attached with this e-mail.
> thanking you,
> faraz

The problem is that you are using a grammar for ANTLR 2.7.7 with ANTLR 
3.x. The syntax for grammars has been changed so that you have to use 
2.7.7 or to rewrite the grammar in the new syntax. There is a tool on 
the download page, which eases the effort somewhat. I believe it is 
named v2tov3 or similar.

Johannes

From jimi at temporal-wave.com  Tue Aug  5 10:15:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 05 Aug 2008 10:15:20 -0700
Subject: [antlr-interest] Overriding error reporting in ANTLR3 C runtime
In-Reply-To: <4897D124.7080307@astc-design.com>
References: <4897D124.7080307@astc-design.com>
Message-ID: <1217956520.8689.57.camel@jimi>

On Tue, 2008-08-05 at 13:33 +0930, David Benn wrote:

> On the Wiki, there's a section describing how to  override the 
> 
> displayRecognitionError()
> 
> method for Java 
> (http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery).
> 
> Is it possible to do the same thing for translators targetting the C 
> runtime?


http://antlr.org/api/C/group__apistructures.html

This needs a better link from the main API docs and adding to the FAQ,
but I will do this after 3.1 is released (very shortly).

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/7226d73f/attachment.html 

From jimi at temporal-wave.com  Tue Aug  5 10:22:51 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 05 Aug 2008 10:22:51 -0700
Subject: [antlr-interest] [C target] #define clashes:
	would	itbe	possible	to add ANTLR_ prefix to automatically
	generated macros?
In-Reply-To: <8CC17F724B8992438D91F16D2EF784D92B7CD4@KBNNT70.emea.demant.com>
References: <8CC17F724B8992438D91F16D2EF784D92B7CD4@KBNNT70.emea.demant.com>
Message-ID: <1217956971.8689.64.camel@jimi>

On Tue, 2008-08-05 at 08:45 +0200, Martin Hans wrote:
> Hi,
> 
> I think ANTLR could be more helpful than it is in this situation,
> simply by issuing an clear error message if the grammar uses a
> reserved word. 

Well, that would mean that the the target independent code generator
would have to cal the target code generator to ask about keywords, but
as this is sometimes context sensitive it would be bound to get it wrong
sometimes. We need to document this more clearly. The C compiler usually
gives you a strong hint as to what is going on, but other compilers may
not be so good. 


> It took me a while to figure out that ?match? is reserved when using
> the python target because the parser base class uses that method name
> for something else. Without the error message we are left to debugging
> the name clashes from obscure syntax errors or parsers that don?t work
> as expected.
> 
>  
> 
> As a newbie this was the largest hurdle in getting started with ANTLR.


This needs to go into the getting started docs basically, because
everybody reads those right? ;-)

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/3d75c570/attachment.html 

From Fred.Brisard at ca.com  Tue Aug  5 11:03:47 2008
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Tue, 5 Aug 2008 14:03:47 -0400
Subject: [antlr-interest] Novice Question - Token for all characters from a
	given point to End of Line
Message-ID: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>

I have a keyword style grammar and have the need to accept all the
characters until the end of line to be accepted as a single token.  

For example, I have a statement that is of the following type

Command multiple arguments (EOL)

Where Command can be a command name and the multiple arguments are one
or more arguments.  There can be from 1 to many arguments - each
argument does not have a fixed content - it may be an integer, a string,
a quoted string.  The characters in the string can be most anything.

I was looking for something similar to the multiple line comment
technique using the greedy=false option.  Collect all the characters
following the Command into a single token.

Any ideas or suggestions are appreciated.

Regards, Fred



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/fff7f05e/attachment.html 

From parrt at cs.usfca.edu  Tue Aug  5 11:05:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Aug 2008 11:05:07 -0700
Subject: [antlr-interest] ANTLRWorks getting confused with import
In-Reply-To: <3b7c64070808050051r6d0061e8jdb3cb8278acc808d@mail.gmail.com>
References: <3b7c64070808050051r6d0061e8jdb3cb8278acc808d@mail.gmail.com>
Message-ID: <1B49A512-7EEC-4818-BD7C-FA2A0B821E12@cs.usfca.edu>

hi i noticed an issue also.
Ter
On Aug 5, 2008, at 12:51 AM, Laurent Caillette wrote:

> Hi all,
>
> There is a strange behavior happening with ANTLRWorks-1.2b5 on MacOsX
> 10.4 (Intel) and import feature. I've got a big grammar to split in
> many parts. The two grammars I've trouble with should be imported in
> some other grammar files, so I can't use combined grammars here
> because combined grammars (lexer + parser if I'm exact) can't import
> combined grammars. At least that's what TestCompositeGrammars.java
> says in ANTLR sources.
>
> You can take a look at the big grammar file if you're curious but it's
> not the point.
> http://github.com/caillette/novelang/tree/master%2Fsrc%2Fantlr%2FNovelang.g?raw=true
>
> Here is how I get the error. It seems that ANTLRWorks gets confused
> between the two files.
>
> I'm opening Symbol.g in ANTLRWorks and I launch "Generate code". There
> is an error dialog showing me I'm wrong to use lexer rules in a parser
> grammar and the error appears at line 24 of Token.g. That's weird
> because Token.g is a lexer grammar. Looking at the console dump for
> both files it seems the errors don't correspond.
>
> I hope I've shipped everything to reproduce this behavior.
>
> Regards,
>
> c.
>
>
>
>
>
> Console dump for Symbol.g:
> <<<
> [09:31:02] java.lang.NullPointerException
> 	at  
> org 
> .antlr 
> .tool 
> .GrammarSanity.traceStatesLookingForLeftRecursion(GrammarSanity.java: 
> 91)
> 	at  
> org 
> .antlr 
> .tool.GrammarSanity.checkAllRulesForLeftRecursion(GrammarSanity.java: 
> 66)
> 	at  
> org.antlr.tool.Grammar.checkAllRulesForLeftRecursion(Grammar.java: 
> 1852)
> 	at  
> org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(Unknown  
> Source)
> 	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(Unknown  
> Source)
> 	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> 	at java.lang.Thread.run(Thread.java:637)
>>>> (end of console dump for Symbol.g)
>
>
> Console dump for Token.g :
> <<<
>
> [09:31:03] error(103): Token.g:24:0: parser rule anySymbol not  
> allowed in lexer
> [09:31:03] error(103): Token.g:29:0: parser rule
> anySymbolExceptGreaterthansign not allowed in lexer
> [09:31:03] error(103): Token.g:34:0: parser rule
> anySymbolExceptGraveAccent not allowed in lexer
> [09:31:03] error(103): Token.g:39:0: parser rule
> anySymbolExceptGreaterthansignAndGraveAccent not allowed in lexer
> [09:31:03] error(103): Token.g:80:0: parser rule digit not allowed  
> in lexer
> [09:31:03] error(103): Token.g:84:0: parser rule letters not allowed  
> in lexer
> [09:31:03] error(103): Token.g:86:0: parser rule hexLetter not  
> allowed in lexer
> [09:31:03] error(103): Token.g:88:0: parser rule nonHexLetter not
> allowed in lexer
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:20:0: lexer rule
> SOFTBREAK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:21:0: lexer rule
> WHITESPACE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:26:0: lexer rule
> AMPERSAND not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:27:0: lexer rule
> APOSTROPHE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:28:0: lexer rule
> ASTERISK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:29:0: lexer rule
> CIRCUMFLEX_ACCENT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:30:0: lexer rule
> COLON not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:31:0: lexer rule
> COMMA not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:32:0: lexer rule
> COMMERCIAL_AT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:33:0: lexer rule
> DEGREE_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:34:0: lexer rule
> DOLLAR_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:35:0: lexer rule
> DOUBLE_QUOTE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:36:0: lexer rule
> ELLIPSIS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:37:0: lexer rule
> EQUALS_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:38:0: lexer rule
> EXCLAMATION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:39:0: lexer rule
> FULL_STOP not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:40:0: lexer rule
> GRAVE_ACCENT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:41:0: lexer rule
> GREATER_THAN_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:42:0: lexer rule
> HYPHEN_MINUS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:43:0: lexer rule
> LEFT_CURLY_BRACKET not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:44:0: lexer rule
> LEFT_PARENTHESIS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:45:0: lexer rule
> LEFT_SQUARE_BRACKET not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:46:0: lexer rule
> LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:47:0: lexer rule
> LESS_THAN_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:48:0: lexer rule
> LOW_LINE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:49:0: lexer rule
> NUMBER_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:50:0: lexer rule
> PLUS_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:51:0: lexer rule
> PERCENT_SIGN not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:52:0: lexer rule
> QUESTION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:53:0: lexer rule
> REVERSE_SOLIDUS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:54:0: lexer rule
> RIGHT_CURLY_BRACKET not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:55:0: lexer rule
> RIGHT_PARENTHESIS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:56:0: lexer rule
> RIGHT_SQUARE_BRACKET not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:57:0: lexer rule
> RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:58:0: lexer rule
> SEMICOLON not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:59:0: lexer rule
> SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:60:0: lexer rule
> SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:61:0: lexer rule
> SOLIDUS not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:62:0: lexer rule
> TILDE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:63:0: lexer rule
> VERTICAL_LINE not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:65:0: lexer rule
> DIGIT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:67:0: lexer rule
> HEX_LETTER not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:72:0: lexer rule
> NON_HEX_LETTER not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:135:0: lexer rule
> BLOCK_COMMENT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:141:0: lexer rule
> LINE_COMMENT not allowed in parser
> [09:31:03] error(102):
> /Users/Shared/Scratch/Novelang/src/antlr/Symbol.g:1:0: lexer rule
> Tokens not allowed in parser
>
>>>> (end of console dump for Token.g)
>
>
> <<<
> parser grammar Symbol ;
>
> import Token ;
>
> anySymbol
>  : anySymbolExceptGreaterthansign
>  | GREATER_THAN_SIGN
>  ;
>
> anySymbolExceptGreaterthansign
>  : anySymbolExceptGreaterthansignAndGraveAccent
>  | GRAVE_ACCENT
>  ;
>
> anySymbolExceptGraveAccent
>  : anySymbolExceptGreaterthansignAndGraveAccent
>  | GREATER_THAN_SIGN
>  ;
>
> anySymbolExceptGreaterthansignAndGraveAccent
>  :     digit
>      | hexLetter
>      | nonHexLetter
>      | AMPERSAND
>      | APOSTROPHE
>      | ASTERISK
>      | CIRCUMFLEX_ACCENT
>      | COLON
>      | COMMA
>      | COMMERCIAL_AT
>      | DOLLAR_SIGN
>      | DOUBLE_QUOTE
>      | ELLIPSIS
>      | EQUALS_SIGN
>      | EXCLAMATION_MARK
>      | FULL_STOP
> //      | GRAVE_ACCENT
> //      | GREATER_THAN_SIGN
>      | HYPHEN_MINUS
>      | LEFT_CURLY_BRACKET
>      | LEFT_PARENTHESIS
>      | LEFT_SQUARE_BRACKET
>      | LESS_THAN_SIGN
>      | LOW_LINE
>      | NUMBER_SIGN
>      | PLUS_SIGN
>      | PERCENT_SIGN
>      | QUESTION_MARK
>      | RIGHT_CURLY_BRACKET
>      | RIGHT_PARENTHESIS
>      | RIGHT_SQUARE_BRACKET
>      | SEMICOLON
>      | SOLIDUS
>      | TILDE
>      | VERTICAL_LINE
>  ;
>
>
> digit : DIGIT ;
>
> letters : ( hexLetter | nonHexLetter )+ ;
>
> hexLetter : HEX_LETTER ;
>
> nonHexLetter : NON_HEX_LETTER ;
>
>>>> (end of Symbol.g)
>
>
>
>
> <<<
> lexer grammar Token ;
>
> SOFTBREAK : ( '\r' '\n' ? ) | '\n' ;
> WHITESPACE : ( ' ' | '\t' )+ ;
>
> // All namings respect Unicode standard.
> // http://www.fileformat.info/info/unicode
>
> AMPERSAND : '&' ;
> APOSTROPHE : '\'' ;
> ASTERISK : '*' ;
> CIRCUMFLEX_ACCENT : '^' ;
> COLON : ':' ;
> COMMA : ',' ;
> COMMERCIAL_AT : '@' ;
> DEGREE_SIGN : '?' ;
> DOLLAR_SIGN : '$' ;
> DOUBLE_QUOTE : '\"' ;
> ELLIPSIS : '...' ;
> EQUALS_SIGN : '=' ;
> EXCLAMATION_MARK : '!' ;
> FULL_STOP : '.' ;
> GRAVE_ACCENT : '`' ;
> GREATER_THAN_SIGN : '>' ;
> HYPHEN_MINUS : '-' ;
> LEFT_CURLY_BRACKET : '{' ;
> LEFT_PARENTHESIS : '(' ;
> LEFT_SQUARE_BRACKET : '[' ;
> LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK : '\u00ab' ;
> LESS_THAN_SIGN : '<' ;
> LOW_LINE : '_' ;
> NUMBER_SIGN : '#' ;
> PLUS_SIGN : '+' ;
> PERCENT_SIGN : '%' ;
> QUESTION_MARK : '?' ;
> REVERSE_SOLIDUS : '\\' ;
> RIGHT_CURLY_BRACKET : '}' ;
> RIGHT_PARENTHESIS : ')' ;
> RIGHT_SQUARE_BRACKET : ']' ;
> RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK : '\u00bb' ;
> SEMICOLON : ';' ;
> SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK : '\u2039' ;
> SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK : '\u203a' ;
> SOLIDUS : '/' ;
> TILDE : '~' ;
> VERTICAL_LINE : '|' ;
>
> DIGIT : '0'..'9' ;
>
> HEX_LETTER
>  : 'a' | 'b' | 'c' | 'd' | 'e' | 'f'
>  | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'
>  ;
>
> NON_HEX_LETTER
>  : 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p'
>  | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'
>  | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P'
>  | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'
>
>  | '\u00e0' // LATIN SMALL LETTER A WITH GRAVE
>  | '\u00c0' // LATIN CAPITAL LETTER A WITH GRAVE
>
>  | '\u00e2' // LATIN SMALL LETTER A WITH CIRCUMFLEX (&acirc;)
>  | '\u00c2' // LATIN CAPITAL LETTER A WITH CIRCUMFLEX (&Acirc;)
>
>  | '\u00e4' // LATIN SMALL LETTER A WITH DIAERESIS (&auml;)
>  | '\u00c4' // LATIN CAPITAL LETTER A WITH DIAERESIS (&Auml;)
>
>  | '\u00e6' // LATIN SMALL LETTER AE
>  | '\u00c6' // LATIN CAPITAL LETTER AE
>
>  | '\u00e7' // LATIN SMALL LETTER C WITH CEDILLA (&ccedil;)
>  | '\u00c7' // LATIN CAPITAL LETTER C WITH CEDILLA (&Ccedil;)
>
>  | '\u00e8' // LATIN SMALL LETTER E WITH GRAVE (&egrave;)
>  | '\u00c8' // LATIN CAPITAL LETTER E WITH GRAVE (&Egrave;)
>
>  | '\u00e9' // LATIN SMALL LETTER E WITH ACUTE
>  | '\u00c9' // LATIN CAPITAL LETTER E WITH ACUTE
>
>  | '\u00ea' // LATIN SMALL LETTER E WITH CIRCUMFLEX (&ecirc;)
>  | '\u00ca' // LATIN CAPITAL LETTER E WITH CIRCUMFLEX (&Ecirc;)
>
>  | '\u00eb' // LATIN SMALL LETTER E WITH DIAERESIS (&euml;)
>  | '\u00cb' // LATIN CAPITAL LETTER E WITH DIAERESIS (&Euml;)
>
>  | '\u00ee' // LATIN SMALL LETTER I WITH CIRCUMFLEX (&icirc;)
>  | '\u00ce' // LATIN SMALL LETTER I WITH CIRCUMFLEX (&icirc;)
>
>  | '\u00ef' // LATIN SMALL LETTER I WITH DIAERESIS (&iuml;)
>  | '\u00cf' // LATIN CAPITAL LETTER I WITH DIAERESIS (&Iuml;)
>
>  | '\u00f4' // LATIN SMALL LETTER O WITH CIRCUMFLEX (&ocirc;)
>  | '\u00d4' // LATIN CAPITAL LETTER O WITH CIRCUMFLEX (&Ocirc;)
>
>  | '\u00f6' // LATIN SMALL LETTER O WITH DIAERESIS (&ouml;)
>  | '\u00d6' // LATIN CAPITAL LETTER O WITH DIAERESIS (&Ouml;)
>
>  | '\u00f9' // LATIN SMALL LETTER U WITH GRAVE (&ugrave;)
>  | '\u00d9' // LATIN CAPITAL LETTER U WITH GRAVE (&Ugrave;)
>
>  | '\u00fb' // LATIN SMALL LETTER U WITH CIRCUMFLEX (&ucirc;)
>  | '\u00db' // LATIN CAPITAL LETTER U WITH CIRCUMFLEX (&Ucirc;)
>
>  | '\u00fc' // LATIN SMALL LETTER U WITH DIAERESIS (&uuml;)
>  | '\u00dc' // LATIN CAPITAL LETTER U WITH DIAERESIS (&Uuml;)
>
>  | '\u0153' // LATIN SMALL LIGATURE OE
>  | '\u0152' // LATIN CAPITAL LIGATURE OE
>
>  ;
>
>
>
> // From Java 5 grammar http://www.antlr.org/grammar/1152141644268/Java.g
>
> /** We can't use '/*' because it gets confused with wildcards in  
> file names.
> */
> BLOCK_COMMENT
>  : '{{' ( options { greedy = false ; } : . )* '}}' { $channel =  
> HIDDEN ; }
>  ;
>
> /** As we don't support '/*' we avoid confusion by not supporting
> * usually-associated '//', also used for italics.
> */
> LINE_COMMENT
>  : '%%' ~('\n'|'\r')* '\r'? '\n' { $channel=HIDDEN ; }
>  ;
>>>> (end of Symbol.g)


From mattpalms at gmail.com  Tue Aug  5 11:22:07 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Tue, 5 Aug 2008 19:22:07 +0100
Subject: [antlr-interest] Novice Question - Token for all characters
	from a given point to End of Line
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
Message-ID: <36c8729e0808051122m3c27af8en63eed43292fe1897@mail.gmail.com>

Hi Fred,

You should be able to use predicates, something like this:

COMMAND
      : 'create' | 'delete'                     { inCommand = true; }
      ;

COMMAND_TOKEN
      : {inCommand}?=>
          (options{greedy=false;} : . ) NEW_LINE  { inCommand = false; }
         ;

Matt.

On Tue, Aug 5, 2008 at 7:03 PM, Brisard, Fred D <Fred.Brisard at ca.com> wrote:

>  I have a keyword style grammar and have the need to accept all the
> characters until the end of line to be accepted as a single token.
>
> For example, I have a statement that is of the following type
>
> Command multiple arguments (EOL)
>
> Where Command can be a command name and the multiple arguments are one or
> more arguments.  There can be from 1 to many arguments ? each argument
> does not have a fixed content ? it may be an integer, a string, a quoted
> string.  The characters in the string can be most anything.
>
> I was looking for something similar to the multiple line comment technique
> using the greedy=false option.  Collect all the characters following the
> Command into a single token.
>
> Any ideas or suggestions are appreciated.
>
> Regards, Fred
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/0d394d14/attachment.html 

From javafoust at gmail.com  Tue Aug  5 12:44:24 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 5 Aug 2008 12:44:24 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <20080804214517.AF7E22F4319@www.antlr.org>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<20080804214517.AF7E22F4319@www.antlr.org>
Message-ID: <001e01c8f733$abafd840$030f88c0$@com>

> 
> Lexing is all done up front with no input from the parser at all.
> 

Why was that done? Is it the price you pay for infinite lookahead?

Brent


From javafoust at gmail.com  Tue Aug  5 12:46:22 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 5 Aug 2008 12:46:22 -0700
Subject: [antlr-interest] Novice Question - Token for all
	characters	from a given point to End of Line
In-Reply-To: <36c8729e0808051122m3c27af8en63eed43292fe1897@mail.gmail.com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
	<36c8729e0808051122m3c27af8en63eed43292fe1897@mail.gmail.com>
Message-ID: <001f01c8f733$f199cb40$d4cd61c0$@com>

?  (options{greedy=false;} : . ) NEW_LINE 

 

Did you mean:

 

                                .*

?

 

Brent

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Matt Palmer
Sent: Tuesday, August 05, 2008 11:22 AM
To: Brisard, Fred D
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Novice Question - Token for all characters
from a given point to End of Line

 

Hi Fred,

You should be able to use predicates, something like this:

COMMAND 
      : 'create' | 'delete'                     { inCommand = true; } 
      ;

COMMAND_TOKEN 
      : {inCommand}?=>
          (options{greedy=false;} : . ) NEW_LINE  { inCommand = false; }
         ;

Matt.

On Tue, Aug 5, 2008 at 7:03 PM, Brisard, Fred D <Fred.Brisard at ca.com> wrote:

I have a keyword style grammar and have the need to accept all the
characters until the end of line to be accepted as a single token.  

For example, I have a statement that is of the following type

Command multiple arguments (EOL)

Where Command can be a command name and the multiple arguments are one or
more arguments.  There can be from 1 to many arguments ? each argument does
not have a fixed content ? it may be an integer, a string, a quoted string.
The characters in the string can be most anything.

I was looking for something similar to the multiple line comment technique
using the greedy=false option.  Collect all the characters following the
Command into a single token.

Any ideas or suggestions are appreciated.

Regards, Fred

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/569520ca/attachment.html 

From mattpalms at gmail.com  Tue Aug  5 12:49:45 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Tue, 5 Aug 2008 20:49:45 +0100
Subject: [antlr-interest] Novice Question - Token for all characters
	from a given point to End of Line
In-Reply-To: <001f01c8f733$f199cb40$d4cd61c0$@com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
	<36c8729e0808051122m3c27af8en63eed43292fe1897@mail.gmail.com>
	<001f01c8f733$f199cb40$d4cd61c0$@com>
Message-ID: <36c8729e0808051249u45c33aebr515126623a8ac906@mail.gmail.com>

Ooops!  I guess so :)

Matt

On Tue, Aug 5, 2008 at 8:46 PM, Foust <javafoust at gmail.com> wrote:

>  ?  (options{greedy=false;} : . ) NEW_LINE
>
>
>
> Did you mean:
>
>
>
>                                 .*
>
> ?
>
>
>
> Brent
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Matt Palmer
> *Sent:* Tuesday, August 05, 2008 11:22 AM
> *To:* Brisard, Fred D
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Novice Question - Token for all characters
> from a given point to End of Line
>
>
>
> Hi Fred,
>
> You should be able to use predicates, something like this:
>
> COMMAND
>       : 'create' | 'delete'                     { inCommand = true; }
>       ;
>
> COMMAND_TOKEN
>       : {inCommand}?=>
>           (options{greedy=false;} : . ) NEW_LINE  { inCommand = false; }
>          ;
>
> Matt.
>
> On Tue, Aug 5, 2008 at 7:03 PM, Brisard, Fred D <Fred.Brisard at ca.com>
> wrote:
>
> I have a keyword style grammar and have the need to accept all the
> characters until the end of line to be accepted as a single token.
>
> For example, I have a statement that is of the following type
>
> Command multiple arguments (EOL)
>
> Where Command can be a command name and the multiple arguments are one or
> more arguments.  There can be from 1 to many arguments ? each argument
> does not have a fixed content ? it may be an integer, a string, a quoted
> string.  The characters in the string can be most anything.
>
> I was looking for something similar to the multiple line comment technique
> using the greedy=false option.  Collect all the characters following the
> Command into a single token.
>
> Any ideas or suggestions are appreciated.
>
> Regards, Fred
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/4af81abb/attachment.html 

From mattpalms at gmail.com  Tue Aug  5 13:00:43 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Tue, 5 Aug 2008 21:00:43 +0100
Subject: [antlr-interest] Novice Question - Token for all characters
	from a given point to End of Line
In-Reply-To: <36c8729e0808051249u45c33aebr515126623a8ac906@mail.gmail.com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
	<36c8729e0808051122m3c27af8en63eed43292fe1897@mail.gmail.com>
	<001f01c8f733$f199cb40$d4cd61c0$@com>
	<36c8729e0808051249u45c33aebr515126623a8ac906@mail.gmail.com>
Message-ID: <36c8729e0808051300m23cdf920ia8634d3ac65596@mail.gmail.com>

Actually, I think it should be:

(options{greedy=false;} : . )* NEW_LINE

Matt

On Tue, Aug 5, 2008 at 8:49 PM, Matt Palmer <mattpalms at gmail.com> wrote:

> Ooops!  I guess so :)
>
> Matt
>
>
> On Tue, Aug 5, 2008 at 8:46 PM, Foust <javafoust at gmail.com> wrote:
>
>>  ?  (options{greedy=false;} : . ) NEW_LINE
>>
>>
>>
>> Did you mean:
>>
>>
>>
>>                                 .*
>>
>> ?
>>
>>
>>
>> Brent
>>
>> *From:* antlr-interest-bounces at antlr.org [mailto:
>> antlr-interest-bounces at antlr.org] *On Behalf Of *Matt Palmer
>> *Sent:* Tuesday, August 05, 2008 11:22 AM
>> *To:* Brisard, Fred D
>> *Cc:* antlr-interest at antlr.org
>> *Subject:* Re: [antlr-interest] Novice Question - Token for all
>> characters from a given point to End of Line
>>
>>
>>
>> Hi Fred,
>>
>> You should be able to use predicates, something like this:
>>
>> COMMAND
>>       : 'create' | 'delete'                     { inCommand = true; }
>>       ;
>>
>> COMMAND_TOKEN
>>       : {inCommand}?=>
>>           (options{greedy=false;} : . ) NEW_LINE  { inCommand = false; }
>>          ;
>>
>> Matt.
>>
>> On Tue, Aug 5, 2008 at 7:03 PM, Brisard, Fred D <Fred.Brisard at ca.com>
>> wrote:
>>
>> I have a keyword style grammar and have the need to accept all the
>> characters until the end of line to be accepted as a single token.
>>
>> For example, I have a statement that is of the following type
>>
>> Command multiple arguments (EOL)
>>
>> Where Command can be a command name and the multiple arguments are one or
>> more arguments.  There can be from 1 to many arguments ? each argument
>> does not have a fixed content ? it may be an integer, a string, a quoted
>> string.  The characters in the string can be most anything.
>>
>> I was looking for something similar to the multiple line comment technique
>> using the greedy=false option.  Collect all the characters following the
>> Command into a single token.
>>
>> Any ideas or suggestions are appreciated.
>>
>> Regards, Fred
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/7b46387b/attachment-0001.html 

From jaluber at gmx.de  Tue Aug  5 13:06:10 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Aug 2008 22:06:10 +0200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <001e01c8f733$abafd840$030f88c0$@com>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>	<20080804214517.AF7E22F4319@www.antlr.org>
	<001e01c8f733$abafd840$030f88c0$@com>
Message-ID: <4898B2B2.8050604@gmx.de>

Foust schrieb:
>> Lexing is all done up front with no input from the parser at all.
>>
> 
> Why was that done? Is it the price you pay for infinite lookahead?
> 
> Brent
> 
I suppose it was merely the most convenient way to implement a lexer. 
Infinite lookahead with lexer states will complicate the implementation, 
but it should be nonetheless possible.

Johannes

From antlr at mirality.co.nz  Tue Aug  5 13:55:48 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 08:55:48 +1200
Subject: [antlr-interest] ANTLR3 - Find the parent node in an AST
In-Reply-To: <48982898.2040806@gmx.de>
References: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>
	<48982898.2040806@gmx.de>
Message-ID: <20080805205558.D8D4F11EDF2@www.antlr.org>

At 22:16 5/08/2008, Johannes Luber wrote:
 >You could derive another class from CommonTree which does store 
a
 >reference to its parent and use it instead of CommonTree. Then 
you
 >have to find the places where the CommonTree instances are 
created
 >and modify those to include the parent reference. The easiest 
way
 >to find all those instances is to enforce the use of this 
parameter
 >as the compiler will complain about the missing argument. 
Possibly
 >you have to modify the template files, too, which means you have 
to
 >recompile the ANTLR tool yourself.

You shouldn't need to go that far.  That's what the TreeAdaptor is 
for -- to abstract the creation and modification of the AST, so 
you can use any type you feel like.

I'm surprised that the CommonTree wouldn't have a reference to its 
parent, though.  That just seems like it should be automatic for 
any tree structure.


From antlr at mirality.co.nz  Tue Aug  5 14:00:18 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 09:00:18 +1200
Subject: [antlr-interest] Novice Question - Token for all characters
 from a given point to End of Line
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
Message-ID: <20080805210023.A864F11EDF2@www.antlr.org>

At 06:03 6/08/2008, Brisard, Fred D wrote:

>I have a keyword style grammar and have the need 
>to accept all the characters until the end of 
>line to be accepted as a single token.
>
>For example, I have a statement that is of the following type
>
>Command multiple arguments (EOL)
>
>Where Command can be a command name and the 
>multiple arguments are one or more 
>arguments.  There can be from 1 to many 
>arguments ? each argument does not have a fixed 
>content ? it may be an integer, a string, a 
>quoted string.  The characters in the string can be most anything.
>
>I was looking for something similar to the 
>multiple line comment technique using the 
>greedy=false option.  Collect all the characters 
>following the Command into a single token.

Do you really *really* need everything to be one 
token?  I would have thought it'd be more useful 
to lex each argument as a separate token (making 
the best guess as to content type as is 
possible), and then sort it out into command vs. 
arguments at the parser level.  (Of course, to do 
that you'll need to make sure the EOL is not 
hidden from the parser.)


From parrt at cs.usfca.edu  Tue Aug  5 14:22:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Aug 2008 14:22:08 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <001e01c8f733$abafd840$030f88c0$@com>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<20080804214517.AF7E22F4319@www.antlr.org>
	<001e01c8f733$abafd840$030f88c0$@com>
Message-ID: <A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>


On Aug 5, 2008, at 12:44 PM, Foust wrote:

>>
>> Lexing is all done up front with no input from the parser at all.
>>
>
> Why was that done? Is it the price you pay for infinite lookahead?

Speed of access for ith char / token.  Will build a lazy version. :)
Ter

From Fred.Brisard at ca.com  Tue Aug  5 14:24:55 2008
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Tue, 5 Aug 2008 17:24:55 -0400
Subject: [antlr-interest] Novice Question - Token for all characters
	from a given point to End of Line
In-Reply-To: <20080805210023.A864F11EDF2@www.antlr.org>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
	<20080805210023.A864F11EDF2@www.antlr.org>
Message-ID: <7D50572C73BC634F92EE211BFF16F4A10653CB13@USILMS12.ca.com>

Hi Gavin,

Thanks for your suggestion.

I am currently collecting each "word" (separated by WS) for the length
of the line and identifying them separately.  I really just need to get
all the words as a single token - at least, that's what I think I want
to do.

I should describe more of what I'm doing.  I'm creating a parser that
parses a "language" and then provides the ability to display the
information in a form-based view for editing.  I will then let the user
modify any of the values as well as create or remove statements for the
language or any of the operands.  I then plan to rewrite the modified
program source while maintaining as much of the original formatting as
possible.  ANTLR's features solve many of these requirements but it also
needs some coaxing (at least I think it does) for some of my needs.

I have some issues working with ANTLR (probably mostly due to my lack of
skills).

The language is keyword oriented - no reserve words
The language is case-insensitive.
The language was originally based on the IBM TSO command processor
syntax where the individual commands have the following syntax --

Command <positional parameters> <keyword parameters>

The positional parameters are specified for a given command.  If the
command has 4 positional parameters then the user can specify 0-4
parameters.  

The keyword parameters are keyword( keyvalue ).  The key values can be
multiple parameters.  Any number of keyword parameters can be specified.

In addition, the command name and keyword values have implied
abbreviations.  So if you have 2 keywords - before and after, then b and
a are sufficient to discriminate between them.

Finally there is the concept of continuation - a statement can be
continued by the last character on a line being a + or -.  The - is used
when whitespace at the beginning of the subsequent line is significant;
+ just ignores any whitespace at the beginning of the subsequent line.

I've received several suggestions for handling some of the above issues.
I still haven't handled the abbreviation problem nor this concept of
treating the text remaining on a line as a single token.

I just have this uneasy feeling that I'm not really using the
capabilities of ANTLR to solve my problem in an elegant way.  I think
I'm just "hacking" a solution.


Thanks again, Fred


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Tuesday, August 05, 2008 5:00 PM
To: Brisard, Fred D; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Novice Question - Token for all characters
from a given point to End of Line

At 06:03 6/08/2008, Brisard, Fred D wrote:

>I have a keyword style grammar and have the need 
>to accept all the characters until the end of 
>line to be accepted as a single token.
>
>For example, I have a statement that is of the following type
>
>Command multiple arguments (EOL)
>
>Where Command can be a command name and the 
>multiple arguments are one or more 
>arguments.  There can be from 1 to many 
>arguments - each argument does not have a fixed 
>content - it may be an integer, a string, a 
>quoted string.  The characters in the string can be most anything.
>
>I was looking for something similar to the 
>multiple line comment technique using the 
>greedy=false option.  Collect all the characters 
>following the Command into a single token.

Do you really *really* need everything to be one 
token?  I would have thought it'd be more useful 
to lex each argument as a separate token (making 
the best guess as to content type as is 
possible), and then sort it out into command vs. 
arguments at the parser level.  (Of course, to do 
that you'll need to make sure the EOL is not 
hidden from the parser.)



From jmcgrew at gmail.com  Tue Aug  5 14:25:46 2008
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Tue, 5 Aug 2008 14:25:46 -0700
Subject: [antlr-interest] Internal error in 3.1;
	also, context-sensitive keyword sets
Message-ID: <407c840e0808051425wf9206afu10ad50cddc62a34e@mail.gmail.com>

(1) When moving my work in progress from 3.0 to 3.1 (ANTLRWorks
1.2b5), I encountered an internal error. The grammar passes the Ctrl+R
check, but I get this exception when generating code for the parser:

java.lang.NullPointerException
org.antlr.analysis.NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1601)
org.antlr.analysis.NFAToDFAConverter.tryToResolveWithSemanticPredicates(NFAToDFAConverter.java:1357)
org.antlr.analysis.NFAToDFAConverter.resolveNonDeterminisms(NFAToDFAConverter.java:1221)
org.antlr.analysis.NFAToDFAConverter.addDFAStateToWorkList(NFAToDFAConverter.java:968)
org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransitions(NFAToDFAConverter.java:307)
org.antlr.analysis.NFAToDFAConverter.convert(NFAToDFAConverter.java:111)
org.antlr.analysis.DFA.<init>(DFA.java:233)
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1206)
org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:970)
org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:920)
org.antlr.codegen.Target.performGrammarAnalysis(Target.java:114)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:293)
org.antlr.Tool.generateRecognizer(Tool.java:419)
org.antlr.Tool.process(Tool.java:286)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

>From the source, the cause of this NullPointerException looks like a
simple typo: && instead of ||. However, without that typo, I would
still get an internal error "no AST/token for nonepsilon target w/o
predicate", and I'm not sure what that would mean. (My grammar is at
http://hansprestige.com/inform/antlr/buggy-080508.zip if that helps.)

The language I'm trying to parse is fraught with ambiguity, so I
expect an uphill battle - I'm trying 3.1 because 3.0 kept freezing
whenever I introduced a problem.

(2) In this same grammar, there are around 100 keywords, grouped into
sets which the original hand-coded parser turns on and off depending
on context. Moreover, some keywords are part of more than one set, and
each set can be enabled independently. My implementation matches every
keyword as a token, then uses parser rules to group them into 16
unique sets and combine the groups into various identifier contexts.
For example, here's the rule for an identifier in a context where only
statement and condition keywords are reserved:

statementConditionID
	:	ID | OPCODE | directiveKeywords | traceKeywords |
		directiveSubKeywords | miscKeywords |
		directiveOrTraceKeywords | traceOrMiscKeywords |
		directiveOrSubKeywords | directiveOrMiscKeywords |
		directiveSubOrSegmentKeywords |
		directiveSubOrMiscKeywords | directiveOrSubOrSegmentKeywords;

In this case, I'm excluding statementKeywords,
directiveOrStatementKeywords, directiveOrStatementOrMiscKeywords,
conditionKeywords, and directiveSubOrSegmentOrConditionKeywords. This
feels pretty silly. Is there a more sensible way to do it?

Jesse

From rschulz at sonic.net  Tue Aug  5 14:35:36 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 5 Aug 2008 14:35:36 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<001e01c8f733$abafd840$030f88c0$@com>
	<A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>
Message-ID: <200808051435.36093.rschulz@sonic.net>

On Tuesday 05 August 2008 14:22, Terence Parr wrote:
> On Aug 5, 2008, at 12:44 PM, Foust wrote:
> >> Lexing is all done up front with no input from the parser at all.
> >
> > Why was that done? Is it the price you pay for infinite lookahead?
>
> Speed of access for ith char / token.  Will build a lazy version. :)

That's probably a good idea, but will you preserve the current 
semantics, making the lazy version simply a performance variant, or 
will you allow the parser to influence the behavior of the lexer, as so 
many people initially believe to be possible when the come to ANTLR?


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Tue Aug  5 14:52:33 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Aug 2008 14:52:33 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <200808051435.36093.rschulz@sonic.net>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<001e01c8f733$abafd840$030f88c0$@com>
	<A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>
	<200808051435.36093.rschulz@sonic.net>
Message-ID: <E2BF9A00-B843-4091-9544-06FC23B9CEFF@cs.usfca.edu>


On Aug 5, 2008, at 2:35 PM, Randall R Schulz wrote:

> On Tuesday 05 August 2008 14:22, Terence Parr wrote:
>> On Aug 5, 2008, at 12:44 PM, Foust wrote:
>>>> Lexing is all done up front with no input from the parser at all.
>>>
>>> Why was that done? Is it the price you pay for infinite lookahead?
>>
>> Speed of access for ith char / token.  Will build a lazy version. :)
>
> That's probably a good idea, but will you preserve the current
> semantics, making the lazy version simply a performance variant, or
> will you allow the parser to influence the behavior of the lexer, as  
> so
> many people initially believe to be possible when the come to ANTLR?

Nope...the infinite lookahead makes comm between the two impossible.   
It will simply consume less memory and allow interactive parsers.

Ter

From rschulz at sonic.net  Tue Aug  5 15:45:12 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 5 Aug 2008 15:45:12 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <E2BF9A00-B843-4091-9544-06FC23B9CEFF@cs.usfca.edu>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<200808051435.36093.rschulz@sonic.net>
	<E2BF9A00-B843-4091-9544-06FC23B9CEFF@cs.usfca.edu>
Message-ID: <200808051545.12576.rschulz@sonic.net>

On Tuesday 05 August 2008 14:52, Terence Parr wrote:
> On Aug 5, 2008, at 2:35 PM, Randall R Schulz wrote:
> > On Tuesday 05 August 2008 14:22, Terence Parr wrote:
> >> ...
> >>
> >> ...  Will build a lazy version.  :)
> >
> > That's probably a good idea, but will you preserve the current
> > semantics, making the lazy version simply a performance variant, or
> > will you allow the parser to influence the behavior of the lexer,
> > as so many people initially believe to be possible when they come to
> > ANTLR?
>
> Nope...the infinite lookahead makes comm between the two impossible.
> It will simply consume less memory and allow interactive parsers.

Good. I'm all for it. One common test suite in my world specifically 
tries to choke the input processor with enormous input files. (And if 
you can parse it, then it tries to choke the part that does the real 
work, but that's a separate problem.)


> Ter


Randall Schulz

From garry.iglesias at gmail.com  Tue Aug  5 16:02:20 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Tue, 5 Aug 2008 19:02:20 -0400
Subject: [antlr-interest] [C Target] Filter lexer...
Message-ID: <f71c56ff0808051602n7408b2b6t7048ce23e5e7d78c@mail.gmail.com>

Hi Jim,

  Thanks for your answer, sorry I'm not used with mailing list and don't
know how to answer below the previous messages. Anyway thanks for your
answer about the multiple return parameters.

  Now I have (again :) ) other suggestions/remarks....

  * I use a lot of 'filter lexer grammars' and I had problems to find the
information you just sent about overriding the error message. So I tried
your snippet but changing parser by lexer :

  Problem is that the macro 'RECOGNIZER' develops as 'ctx->pLexer->rec'
whereas it should expand to 'lexCtx->pLexer->rec' (or the local 'lexCtx'
might be renamed ctx maybe ?). This happen in the
  ANTLR3_API pMYLEXER MYLEXERNewSSD
 (pANTLR3_INPUT_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE state)
{ ... }

  Another macro for the lexer is alright, but as the macro scope is the
'compilation unit' (defined in top of the .c file) it can be the same for
lexer and parser (and the recognizer anyway is the same component so using
the same macro makes sense...).

  Anyway for now I just don't use the macro and I'm doing it 'by hand'...

  * Also I just noticed that antlr returned error messages had wrong line
numbers, and I suspect the multiline preprocessor macros definitions in my
.g that use '\' (the C preprocessor split line character). I may be wrong
because I haven't tested the case separatedly but it might be a reason for
the wrong line number I see (it's visually credible...).

  * About ANTLR : the antlr compiler tries to replace the '$identifiers'
even when they are inside comments (ok it's target code specific so maybe
it's hard to say for the antlr generic part to know how to 'avoid target
language comments' but if the information could be used in a way or another
that would be helpfull too....).

  * General remarks about tests cases : on my point of view, lacks of 'lexer
filter' samples. Also some sample grammars doesn't parse what they should as
the 'input data' doesn't use the whole grammar... I'm not blocked anymore
but spend a lot of time to try to use the official :
   C_COMMENT : '/*' .* '*/' that doesn't work (greedy or not) and which is
also used in the C.g grammar, and I thought it *should* work until I saw the
input data doesn't contains any multiline comment (as it is itself a
preprocessed file result and comments have already been removed...)... At
the end I just used a good old regexp rule of the dragon book ages and it
works well... It's just that I spend a lots of time scratching my last hair
because I trusted the samples and the documentation with too much faith
:)...

  By the way, I post to send remarks, because I USE this nice tool, and I
use it because I like it, so sorry to manifest myself again only to
complains... :).

  I wish everybody a nice day. Because despite the remarks, ANTLR makes my
day more beautifull everyday ;).

  Thanks all for the nice job !

Regards

Garry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/bf43eed1/attachment-0001.html 

From varun.bhargava at carsales.com.au  Tue Aug  5 16:15:00 2008
From: varun.bhargava at carsales.com.au (Varun Bhargava)
Date: Wed, 6 Aug 2008 09:15:00 +1000
Subject: [antlr-interest] ANTLR3 - Find the parent node in an AST
In-Reply-To: <CSSVREX001GmoZ7fpld0001ce2f@cssvrex001.carsales.office>
References: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>
	<48982898.2040806@gmx.de>
	<CSSVREX001GmoZ7fpld0001ce2f@cssvrex001.carsales.office>
Message-ID: <AE0A511AB227724A912139BAF4BBAC710411CF00@cssvrex001.carsales.office>

Thanks guys. I'll try out the TreeAdaptor method.

Apparently, from the fisheye source tree, looks like the next version
3.1 will have a reference back to the parent node.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Wednesday, 6 August 2008 06:56
To: Johannes Luber; Varun Bhargava
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR3 - Find the parent node in an AST

At 22:16 5/08/2008, Johannes Luber wrote:
 >You could derive another class from CommonTree which does store 
a
 >reference to its parent and use it instead of CommonTree. Then 
you
 >have to find the places where the CommonTree instances are 
created
 >and modify those to include the parent reference. The easiest 
way
 >to find all those instances is to enforce the use of this 
parameter
 >as the compiler will complain about the missing argument. 
Possibly
 >you have to modify the template files, too, which means you have 
to
 >recompile the ANTLR tool yourself.

You shouldn't need to go that far.  That's what the TreeAdaptor is 
for -- to abstract the creation and modification of the AST, so 
you can use any type you feel like.

I'm surprised that the CommonTree wouldn't have a reference to its 
parent, though.  That just seems like it should be automatic for 
any tree structure.


From parrt at cs.usfca.edu  Tue Aug  5 16:31:41 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Aug 2008 16:31:41 -0700
Subject: [antlr-interest] ANTLR3 - Find the parent node in an AST
In-Reply-To: <AE0A511AB227724A912139BAF4BBAC710411CF00@cssvrex001.carsales.office>
References: <AE0A511AB227724A912139BAF4BBAC710411CCF7@cssvrex001.carsales.office>
	<48982898.2040806@gmx.de>
	<CSSVREX001GmoZ7fpld0001ce2f@cssvrex001.carsales.office>
	<AE0A511AB227724A912139BAF4BBAC710411CF00@cssvrex001.carsales.office>
Message-ID: <DCE13877-4266-489A-916D-BE6D26D0A37C@cs.usfca.edu>


On Aug 5, 2008, at 4:15 PM, Varun Bhargava wrote:

> Thanks guys. I'll try out the TreeAdaptor method.
>
> Apparently, from the fisheye source tree, looks like the next version
> 3.1 will have a reference back to the parent node.

Yeah, parent is just tooooo useful.
Ter

From jimi at temporal-wave.com  Tue Aug  5 19:35:23 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 05 Aug 2008 19:35:23 -0700
Subject: [antlr-interest] [C Target] Filter lexer...
In-Reply-To: <f71c56ff0808051602n7408b2b6t7048ce23e5e7d78c@mail.gmail.com>
References: <f71c56ff0808051602n7408b2b6t7048ce23e5e7d78c@mail.gmail.com>
Message-ID: <1217990123.8689.150.camel@jimi>

On Tue, 2008-08-05 at 19:02 -0400, Garry Iglesias wrote:
> Hi Jim,
>  
>   Thanks for your answer, sorry I'm not used with mailing list and
> don't know how to answer below the previous messages. Anyway thanks
> for your answer about the multiple return parameters.
>  
>   Now I have (again :) ) other suggestions/remarks....
>  
>   * I use a lot of 'filter lexer grammars' and I had problems to find
> the information you just sent about overriding the error message. So I
> tried your snippet but changing parser by lexer :
>  
>   Problem is that the macro 'RECOGNIZER' develops as
> 'ctx->pLexer->rec' whereas it should expand to
> 'lexCtx->pLexer->rec' (or the local 'lexCtx' might be renamed ctx
> maybe ?).


Hmm - I think that everythign shoudl be ctx now - maybe this was missed
in filtering lexers...ah yes, it is because the constructor is using a
local varibel and it has been called lexCtx. I wiull change this to ctx
so that it is consistent everywhere....fixed.

By the way, rather than override error messages in a lexer, it is best
to construct it so it cannot throw errors. Have say:   BADCHAR : . ;  as
the last rule. In a filtering lexer then this should not be necessary of
course.

>  This happen in the 
>   ANTLR3_API pMYLEXER MYLEXERNewSSD         
>  (pANTLR3_INPUT_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE
> state) { ... }
>  
>   Another macro for the lexer is alright, but as the macro scope is
> the 'compilation unit' (defined in top of the .c file) it can be the
> same for lexer and parser (and the recognizer anyway is the same
> component so using the same macro makes sense...).
>  
>   Anyway for now I just don't use the macro and I'm doing it 'by
> hand'...
>  
>   * Also I just noticed that antlr returned error messages had wrong
> line numbers, and I suspect the multiline preprocessor macros
> definitions in my .g that use '\' (the C preprocessor split line
> character). I may be wrong because I haven't tested the case
> separatedly but it might be a reason for the wrong line number I see
> (it's visually credible...).

The lexer should auto-increment the line number when it sees '\n' (by
default) - you can change the trigger character or if EOL is something
more complicated you can track it with your own counter. It could be
your multiline lexing comment, but I don't think so. I can check this
though.

>   
>   * About ANTLR : the antlr compiler tries to replace the
> '$identifiers' even when they are inside comments (ok it's target code
> specific so maybe it's hard to say for the antlr generic part to know
> how to 'avoid target language comments' but if the information could
> be used in a way or another that would be helpfull too....).


ANTLR does not know what comments are for the target language, hence it
just replaces any $ reference anywhere. I think you can use \$ to not do
that.
>  
>   * General remarks about tests cases : on my point of view, lacks of
> 'lexer filter' samples. Also some sample grammars doesn't parse what
> they should as the 'input data' doesn't use the whole grammar... I'm
> not blocked anymore but spend a lot of time to try to use the
> official :
>    C_COMMENT : '/*' .* '*/' that doesn't work (greedy or not) and
> which is also used in the C.g grammar, and I thought it *should* work
> until I saw the input data doesn't contains any multiline comment (as
> it is itself a preprocessed file result and comments have already been
> removed...)... At the end I just used a good old regexp rule of the
> dragon book ages and it works well... It's just that I spend a lots of
> time scratching my last hair because I trusted the samples and the
> documentation with too much faith :)...

I think you have something not installed correctly - all the examples
work as advertized if you ahve the correct runtime and correct antlr jar
AND the correct versions of the examples for the correct version of
ANTLR ;-). 3.1 will be released very shortly and all this will become
neat and tidy again unless you are trying to use the next beta :-)
>  
>   By the way, I post to send remarks, because I USE this nice tool,
> and I use it because I like it, so sorry to manifest myself again only
> to complains... :).


No problem. No one has any problem with people pointing out bugs/errors
or suggesting improvements. It is only the WAY that they are phrased
that matters. If people play nice then Je m'en fous.

So, first make sure that you have the current version of all the jars
(best to use 3.1 beta 2 now to be honest as it is so close to release.
You can update to the released versions in a few days (hopefully) time.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/9d083cfd/attachment.html 

From carter_cheng at yahoo.com  Tue Aug  5 20:06:28 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Tue, 5 Aug 2008 20:06:28 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
Message-ID: <403761.95112.qm@web50109.mail.re2.yahoo.com>

I apologize for the delayed reply here but I have been trying various things to try to get this to work without much luck. I have a simpler case which is a part of my grammar which is-

[1..]

now: 

[1 .. ]  

parses properly but the previous rule gives a no valid alts error on the '.' which makes me believe it's still parsing it as a float. The rule I am currently using is this-

INTEGER_V	

	: Digit+ ( ('..') => | '.' Digit* { $type = FLOAT_V; } )  

//	| ( '0' ('x'|'X') ) => '0' ('x'|'X') (Digit|'a'..'f'|'A'..'F')+
//        | ('.' Digit+) => '.' Digit+ { $type = FLOAT_V; }
	;

I am not sure how merging in the '..' would help here. Since I expect that would only possibly be of use disambiguating '..' from '.' Digit+.

Thanks again,

Carter.


--- On Sun, 8/3/08, Gavin Lambert <antlr at mirality.co.nz> wrote:

> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> Date: Sunday, August 3, 2008, 1:39 PM
> At 08:11 4/08/2008, Carter Cheng wrote:
>  >Thanks for the replies both. I have been trying this
> and it 
> still
>  >does not seem to lex properly. Am I still doing
> something wrong? 
> 
>  >This is with ANTLR 3.0.1
> [...]
>  >INT	
>  >	: Digit+ ( ('..') =>
>  >        | '.' Digit* { $type = FLOAT; } )?
>  >
>  >	| ( '0' ('x'|'X') ) =>
> '0' ('x'|'X')
> (Digit|'a'..'f'|'A'..'F')+
>  >        | ('.' Digit+) => '.'
> Digit+ { $type = FLOAT; }
>  >	;
> 
> Hmm.  First of all, make sure that the FLOAT rule is a
> fragment 
> rule -- doesn't matter what's in it (since
> it'll never be called), 
> but it must not be a top-level candidate:
>    fragment FLOAT: Digit;
> 
> If that doesn't help, then you might need to merge the
> DOTDOT and 
> INT rules, as I said before.  But where and how is it
> failing?
> 
> (A useful thing to do here is to try running the lexer in 
> isolation and dump the generated tokens to screen/file, so
> you can 
> see what tokens are being generated and what each token
> contains.)


      

From carter_cheng at yahoo.com  Tue Aug  5 20:09:08 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Tue, 5 Aug 2008 20:09:08 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
In-Reply-To: <48977ED6.10209@gmx.de>
Message-ID: <490101.27886.qm@web50101.mail.re2.yahoo.com>

Thanks this seems to work.


--- On Mon, 8/4/08, Johannes Luber <jaluber at gmx.de> wrote:

> From: Johannes Luber <jaluber at gmx.de>
> Subject: Re: [antlr-interest] Another parsing question
> To: carter_cheng at yahoo.com
> Cc: antlr-interest at antlr.org
> Date: Monday, August 4, 2008, 3:12 PM
> Carter Cheng schrieb:
> > The difficulty is with the language I am working with
> in the first case it should be two tokens ']'
> ')' but the second case it should be one token
> '])' without intervening whitespace between the
> ']' and ')'. 
> > 
> > The only way I can see of solving this problem is to
> make white space explicit in the grammar. I.e. litter my
> rules with whitespace tokens and omit a whitespace token in
> the case when i expect a '])'. Is this the correct
> way to do this with ANTLRv3?
> > 
> > Regards,
> > 
> > Carter.
> 
> You can check manually, if the indizes of the two tokens
> differ by only 
> one. In that case no whitespace/comment/etc. is between
> them. 
> $RBRACKET.index == $RPAREN.index -1 should work (replace
> the token names 
> with the ones, you used).
> 
> Johannes
> > 
> > 
> > --- On Mon, 8/4/08, Gavin Lambert
> <antlr at mirality.co.nz> wrote:
> > 
> >> From: Gavin Lambert <antlr at mirality.co.nz>
> >> Subject: Re: [antlr-interest] Another parsing
> question
> >> To: carter_cheng at yahoo.com,
> antlr-interest at antlr.org
> >> Date: Monday, August 4, 2008, 2:45 PM
> >> At 08:45 5/08/2008, Carter Cheng wrote:
> >>  >Thanks everyone for the help thus far. This
> is likely
> >> another
> >>  >beginners question concerning the behavior of
> the
> >> lexer/parser
> >>  >interactions in ANTLRv3. The question I have
> is are
> >> the tokens
> >>  >requested by the parser context dependent?
> i.e. is a
> >> different
> >>  >(N)DFA constructed depending on which tokens
> the
> >> parser expects 
> >> to
> >>  >see in the stream or is there only 1 N(DFA)
> with a
> >> series of 
> >> stop
> >>  >states.
> >>
> >> Lexing is all done up front with no input from the
> parser
> >> at all.
> >>
> >>  >(a[1]); // lookup the index 1 in the variable
> array a
> >>  >
> >>  >([ 1 : 2 ]); // construct a mapping value
> with key :
> >> value in 
> >> this
> >>  >case 1 : 2
> >>  >
> >>  >The question I have is how can ANTLRv3 know
> whether ])
> >> is a 
> >> single
> >>  >token or two tokens?
> >>
> >> Depends on how you've defined the lexer rules
> :)  But
> >> normally 
> >> you'd want to define it as two tokens.
> > 
> > 
> >       
> >


      

From javafoust at gmail.com  Tue Aug  5 22:17:25 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 5 Aug 2008 22:17:25 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <E2BF9A00-B843-4091-9544-06FC23B9CEFF@cs.usfca.edu>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>	<001e01c8f733$abafd840$030f88c0$@com>	<A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>	<200808051435.36093.rschulz@sonic.net>
	<E2BF9A00-B843-4091-9544-06FC23B9CEFF@cs.usfca.edu>
Message-ID: <000c01c8f783$b83e0d70$28ba2850$@com>

RE: a lazy token evaluator, Ter wrote:

> the infinite lookahead makes comm between the two impossible.

> It will simply consume less memory and allow interactive parsers.

 

Backtracking would certainly be slower, but isn't there *some* method that
would allow both infinite lookahead *and* lexer states, in theory?

 

What do you think about keeping multiple lookahead buffers, one per state?

 

1.  The position in the input stream is saved before every rule, in case the
parser sets a state (using a provided API, so that the lexer will be able to
handle the housekeeping)

 

2.  The parser asks the lexer for the next token (on demand -- if it needs
more while looking at that rule, it asks for more, up to the rest of the
tokens in the file, for an LL(*) parse)

 

3.  These tokens are buffered, just as they are now, so they can be reused
for backtracking, but each lexer state has its own buffer of lookahead
tokens.

 

4.  If a parser rule alters the lexer state, housekeeping is performed to
switch to that state's buffer and reset the input stream's current position
appropriately

 

5.  Whenever a rule is chosen, lookahead buffers for all other lexer states
are invalidated.

(This is required because tokens in different states could easily overlap.
For example, in one state, an entire line, or the contents of an entire
block could be returned as a single token.)

 

6.  Whenever a rule that changed state is exited, the previous state is
restored, if int Lexer.pushState(int) was called, instead of
Lexer.setState(int), which would leave the state unchanged, until called
again.

 

Brent

 

> -----Original Message-----

> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-

> bounces at antlr.org] On Behalf Of Terence Parr

> Sent: Tuesday, August 05, 2008 2:53 PM

> To: Randall R Schulz

> Cc: antlr-interest at antlr.org

> Subject: Re: [antlr-interest] Another parsing question

> 

> 

> On Aug 5, 2008, at 2:35 PM, Randall R Schulz wrote:

> 

> > On Tuesday 05 August 2008 14:22, Terence Parr wrote:

> >> On Aug 5, 2008, at 12:44 PM, Foust wrote:

> >>>> Lexing is all done up front with no input from the parser at all.

> >>>

> >>> Why was that done? Is it the price you pay for infinite lookahead?

> >>

> >> Speed of access for ith char / token.  Will build a lazy version. :)

> >

> > That's probably a good idea, but will you preserve the current

> > semantics, making the lazy version simply a performance variant, or

> > will you allow the parser to influence the behavior of the lexer, as

> > so

> > many people initially believe to be possible when the come to ANTLR?

> 

> Nope...the infinite lookahead makes comm between the two impossible.

> It will simply consume less memory and allow interactive parsers.

> 

> Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080805/257afe4a/attachment-0001.html 

From jmcgrew at gmail.com  Tue Aug  5 23:58:15 2008
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Tue, 5 Aug 2008 23:58:15 -0700
Subject: [antlr-interest] Internal error in 3.1;
	also, context-sensitive keyword sets
In-Reply-To: <407c840e0808051425wf9206afu10ad50cddc62a34e@mail.gmail.com>
References: <407c840e0808051425wf9206afu10ad50cddc62a34e@mail.gmail.com>
Message-ID: <407c840e0808052358j73ff3421x4f3cbd9a99b27fe9@mail.gmail.com>

On Tue, Aug 5, 2008 at 2:25 PM, Jesse McGrew <jmcgrew at gmail.com> wrote:
> java.lang.NullPointerException
> org.antlr.analysis.NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1601)
...

I've narrowed down the code that causes this internal error:

======================================
grammar FrankBug;

options
{
	output = AST;
}

ID	:	('a'..'z' | 'A'..'Z')+;
	
normalExpr
	:	expression;

expression
	:	functionExpression
			({!noComma}?	(',' functionExpression)* )?
	;

functionExpression
	:	ID
			({!noFuncCall}?	('(' expression ')')? )?
	;
======================================

If I remove either of the semantic predicates, or the normalExpr rule,
the exception goes away.

Jesse

From javafoust at gmail.com  Wed Aug  6 01:50:15 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 6 Aug 2008 01:50:15 -0700
Subject: [antlr-interest] Tree Grammar Syntax?
Message-ID: <000001c8f7a1$73d567a0$5b8036e0$@com>

The DAR is pretty sparse about the details of using a tree grammar for more
than anything but the simplest cases of printing some nodes. 

 

(1)    Can subtrees be matched optionally? (Like the T_MODIFIERS subtree
below)

 

stmt       : ^(T_REFERENCE  IDENTIFIER param? ^(T_MODIFIERS modifiers)?
n+=IDENTIFIER*) ;

 

or is this explicitly forbidden, requiring the subtree expression to be
broken out into a separate rule?

 

(2)    How are the * and + expressions accessed? Is the += operator used to
turn them into an ArrayList, just like in the parser?

 

Brent

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/2ca1be02/attachment.html 

From craig at palantir.co.za  Wed Aug  6 02:30:14 2008
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Wed, 06 Aug 2008 11:30:14 +0200
Subject: [antlr-interest] Recursive conditional template output.
Message-ID: <20080806113014.x1x4bdfc0k8s0ow0@webmail.palantir.co.za>

Hi,

I am struggling to arrange tree template output so that a particular construct
can be processed in two different ways by the template.
I cannot find a suitable example.
I want to iterate the template once for header output, and once for body output
using the set of paths for each.

I have a very simple tree grammar as follows.

query
        : declarations+=declaration+ paths+=path+
        -> output(paths={$paths})
        ;

path
        : ^('and' p1=path p2=path) -> and(lvalue={$p1.st}, rvalue={$p2.st})
        | ^('or'  p1=path p2=path) -> or(lvalue={$p1.st}, rvalue={$p2.st})
        | ^(ROOT xs=xname*) -> item(lvalue={$names},
indexed={IsIndexed($names)})
        ;

in the template I have

output(paths) ::= <<
<paths> (Want to process the paths one way with one template)
<paths> (Process them again, with different template output).
>>

and(lvalue, rvalue) ::= <<AND <lvalue> <rvalue> >>
or(lvalue, rvalue) ::= <<OR <lvalue> <rvalue> >>

item(lvalue, indexed) ::= << Do something specific depending on paths:1 or
paths:2 >>

I am happy to recurse manually calling
<paths:{p|<dosomething(p)>}>

But I cannot understand how to get the template to work as the recursion is
implicit in the tree grammar, and 'item' is preempted from there, and not from
the template. I need to iterate that section of the template twice, once for
header output, and once for body output. Maybe dosomething(p) is not the right
approach.

What is the correct pattern for this. It is very simple when you are dealing
with a list of items, because you can just iterate the list using the template
and do one thing or another. When its' a tree it becomes rather difficult to
iterate using the template.



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From r_reitzi at cs.uni-kl.de  Wed Aug  6 03:12:20 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Wed, 06 Aug 2008 12:12:20 +0200
Subject: [antlr-interest] Lexer Predicates?
In-Reply-To: <20080804092139.27F8611ED46@www.antlr.org>
References: <60889.54809.qm@web25904.mail.ukl.yahoo.com>
	<20080802131649.56955us0deddg5s8@horde.verrech.net>
	<8E9F9F4EE1FBD34FBEDD7EC2360AFD99013B579C@esealmw104.eemea.ericsson.se>
	<001e01c8f4f4$5ebab0f0$1c3012d0$@com>
	<48953694.1e2d400a.7f34.ffff822fSMTPIN_ADDED@mx.google.com>
	<001901c8f597$882c98b0$9885ca10$@com>
	<489618fb.1d3e400a.3955.3b9aSMTPIN_ADDED@mx.google.com>
	<002601c8f5b8$527b0280$f7710780$@com>
	<20080804092139.27F8611ED46@www.antlr.org>
Message-ID: <20080806121220.74334gbbvdom4hs0@horde.verrech.net>

"Gavin Lambert" <antlr at mirality.co.nz> wrote (Mon Aug  4 11:21:31 2008):

> The lexer has to generate a single set of tokens, yes, but as long  
> as you don't assign too much semantic meaning at the lexer level  
> then it's usually ok :)

I think Gavin means: Let your lexer disintegrate your input in so  
"small" pieces (= tokens) that no conflicts occur. That means,  
abstract. Do not try to create as "large" tokens as possible, each  
carrying rich syntactic and/or even semantic information. Do not think  
in terms of "value" or "identifier", but of "an arbitrary string  
starting with a lowercase letter". Put similarities of choices in one  
token.
Put the pieces together again at your parser. Finding a lot of little  
pieces, you should be able to extract the context you need. If I find  
a token QUOT before my token LOWERCASE_STARTED_STRING, it is a value.  
If not, an identifier.

Regards

Raphael

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/ca50a2e1/attachment.bin 

From markwright at internode.on.net  Wed Aug  6 03:20:45 2008
From: markwright at internode.on.net (Mark Wright)
Date: Wed, 6 Aug 2008 20:20:45 +1000
Subject: [antlr-interest] Recursive conditional template output.
In-Reply-To: <20080806113014.x1x4bdfc0k8s0ow0@webmail.palantir.co.za>
References: <20080806113014.x1x4bdfc0k8s0ow0@webmail.palantir.co.za>
Message-ID: <20080806202045.000012e6@goanna>

Hello Craig,

An alternative idea is for the template to just
output it once, with the output like:

- a specal character sequence with the file name of the header
- header output
- a specal character sequence with the file name of the body
- body output

And then iterate over the template output, splitting it up,
and writing it to the header and body files.

Regards, Mark

-- 

From craig at palantir.co.za  Wed Aug  6 03:44:13 2008
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Wed, 06 Aug 2008 12:44:13 +0200
Subject: [antlr-interest]  Recursive conditional template output.
Message-ID: <20080806124413.tstfxlmc00co4c8k@webmail.palantir.co.za>

Hi Mark,

I am outputting a sql statement with the header portion as the select and the
body as the where. I am not outputting two files.

Does the template really not work this way?
Surely using groups or recursion would solve this somehow?

I am probably just not understanding how these things are typically used.

>> Hello Craig,
>>
>> An alternative idea is for the template to just
>> output it once, with the output like:
>>
>> - a specal character sequence with the file name of the header
>> - header output
>> - a specal character sequence with the file name of the body
>> - body output
>>
>> And then iterate over the template output, splitting it up,
>> and writing it to the header and body files.
>>
>> Regards, Mark

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From g.vandeglind at beinformed.nl  Wed Aug  6 03:50:00 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Wed, 6 Aug 2008 12:50:00 +0200
Subject: [antlr-interest] how to modify an AST after it has been constructed
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>

Hi all,

Is it possible to modify an AST after it has been constructed?
And what is the best way to do it?

Thanks, Gerard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/063a5b50/attachment.html 

From r_reitzi at cs.uni-kl.de  Wed Aug  6 04:05:22 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Wed, 06 Aug 2008 13:05:22 +0200
Subject: [antlr-interest] how to modify an AST after it has
	been	constructed
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
Message-ID: <20080806130522.6387749wed0mujs4@horde.verrech.net>

Hi!

I suppose you can write a tree gramar, walk and rewrite it.

Regards

Raphael

"Gerard van de Glind" <g.vandeglind at beinformed.nl> wrote (Wed Aug  6  
12:50:00 2008):

> Hi all,
>
> Is it possible to modify an AST after it has been constructed?
> And what is the best way to do it?
>
> Thanks, Gerard
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/18d56c6d/attachment.bin 

From antlr at mirality.co.nz  Wed Aug  6 04:13:08 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 23:13:08 +1200
Subject: [antlr-interest] Novice Question - Token for all characters
 from a given point to End of Line
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A10653CB13@USILMS12.ca.com>
References: <7D50572C73BC634F92EE211BFF16F4A10653C90B@USILMS12.ca.com>
	<20080805210023.A864F11EDF2@www.antlr.org>
	<7D50572C73BC634F92EE211BFF16F4A10653CB13@USILMS12.ca.com>
Message-ID: <20080806111316.D46453D147F@www.antlr.org>

At 09:24 6/08/2008, Brisard, Fred D wrote:
 >I am currently collecting each "word" (separated by WS) for the
 >length of the line and identifying them separately.  I really
 >just need to get all the words as a single token - at least,
 >that's what I think I want to do.

I still don't see why you would want that.  That would just make 
the job of figuring out what it all means much harder.

 >I should describe more of what I'm doing.  I'm creating a parser 

 >that parses a "language" and then provides the ability to 
display the
 >information in a form-based view for editing.  I will then let 
the
[...]
 >In addition, the command name and keyword values have implied
 >abbreviations.  So if you have 2 keywords - before and after, 
then
 >b and a are sufficient to discriminate between them.

All of this stuff is best handled in the parser -- just create 
simple tokens eg. WORD, NUMBER, QUOTED_STRING, OPEN_BRACKET, etc, 
and work out what they actually mean at the parser level.

 >Finally there is the concept of continuation - a statement can 
be
 >continued by the last character on a line being a + or -.  The - 
is
 >used when whitespace at the beginning of the subsequent line is
 >significant; + just ignores any whitespace at the beginning of 
the
 >subsequent line.

This one you should handle in the lexer; you can swallow up the 
intervening EOL and whitespace to hide it from the parser that 
way, so it just sees a single continuous statement.


From antlr at mirality.co.nz  Wed Aug  6 04:23:44 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 23:23:44 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <403761.95112.qm@web50109.mail.re2.yahoo.com>
References: <403761.95112.qm@web50109.mail.re2.yahoo.com>
Message-ID: <20080806112350.A78213522B7@www.antlr.org>

At 15:06 6/08/2008, Carter Cheng wrote:
 >I apologize for the delayed reply here but I have been trying
 >various things to try to get this to work without much luck. I 
have
 >a simpler case which is a part of my grammar which is-
[...]
 >INTEGER_V	
 >	: Digit+ ( ('..') => | '.' Digit* { $type = FLOAT_V; } )
 >	;

You're missing a ?.  Right at the end of the rule you need a ? 
after the closing parenthesis, since Digits are not necessarily 
followed by any kind of dot.

INTEGER_V	
   : Digit+ ( ('..') => | '.' Digit* { $type = FLOAT_V; } )?
   ;

Follow through each part of that and you should see how it works:
   - first match a sequence of one or more Digits
   - optionally followed by one of:
     - if you see two dots in lookahead: nothing
     - otherwise, match a dot and zero or more Digits and call it 
a FLOAT_V

Without the ?, ANTLR will complain if it can't see a dot following 
the initial Digits, since it doesn't have anywhere else to go.


From jaluber at gmx.de  Wed Aug  6 04:28:23 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Aug 2008 13:28:23 +0200
Subject: [antlr-interest] how to modify an AST after it
	has	been	constructed
In-Reply-To: <20080806130522.6387749wed0mujs4@horde.verrech.net>
References: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
	<20080806130522.6387749wed0mujs4@horde.verrech.net>
Message-ID: <48998AD7.9020304@gmx.de>

Raphael Reitzig schrieb:
> Hi!
> 
> I suppose you can write a tree gramar, walk and rewrite it.
> 
> Regards
> 
> Raphael

While this is correct, you need ANTLR 3.1 (or at least a beta) to be 
able to rewrite trees.

Johannes
> 
> "Gerard van de Glind" <g.vandeglind at beinformed.nl> wrote (Wed Aug  6 
> 12:50:00 2008):
> 
>> Hi all,
>>
>> Is it possible to modify an AST after it has been constructed?
>> And what is the best way to do it?
>>
>> Thanks, Gerard
>>
>>
> 
> 
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 


From antlr at mirality.co.nz  Wed Aug  6 04:33:08 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 23:33:08 +1200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <200808051435.36093.rschulz@sonic.net>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<001e01c8f733$abafd840$030f88c0$@com>
	<A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>
	<200808051435.36093.rschulz@sonic.net>
Message-ID: <20080806113315.F42173522D7@www.antlr.org>

At 09:35 6/08/2008, Randall R Schulz wrote:
 >That's probably a good idea, but will you preserve the
 >current semantics, making the lazy version simply a
 >performance variant, or will you allow the parser to
 >influence the behavior of the lexer, as so many people
 >initially believe to be possible when the come to
 >ANTLR?

I'm somewhat interested in the idea of making a lexer-less parser 
(basically a parser-only grammar that matches individual 
characters instead of tokens).  I mean, I expect the performance 
will be significantly worse than the present design, but it would 
permit more flexibility, and in some applications that's more 
important than speed.

You could probably almost do it by making a stub lexer that 
generates single-character tokens; the trouble with that idea of 
course (other than being a bit kludgy) is that if you're expecting 
full Unicode-range input then that's a *massive* amount of 
possible tokens (and no doubt the Java compiler at least would 
have a fit if you generated the token identifiers the same way as 
at present).  :)


From g.vandeglind at beinformed.nl  Wed Aug  6 04:37:55 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Wed, 6 Aug 2008 13:37:55 +0200
Subject: [antlr-interest] how to modify an AST after it has been
 constructed
In-Reply-To: <48998AD7.9020304@gmx.de>
References: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
	<20080806130522.6387749wed0mujs4@horde.verrech.net>
	<48998AD7.9020304@gmx.de>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A27BC@apbiex01.beinformed.nl>

Thanks Raphael and Johannes,

I am currently using version 3.0 of ANTLR.
If I am correct 3.1 is not released yet?! (3.1b2 is the most recent beta)

So, with my current version it is impossible to rewrite trees after construction?

Regards, Gerard


Raphael Reitzig schrieb:
> Hi!
>
> I suppose you can write a tree gramar, walk and rewrite it.
>
> Regards
>
> Raphael

While this is correct, you need ANTLR 3.1 (or at least a beta) to be
able to rewrite trees.

Johannes
>
> "Gerard van de Glind" <g.vandeglind at beinformed.nl> wrote (Wed Aug  6
> 12:50:00 2008):
>
>> Hi all,
>>
>> Is it possible to modify an AST after it has been constructed?
>> And what is the best way to do it?
>>
>> Thanks, Gerard
>>
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>


From antlr at mirality.co.nz  Wed Aug  6 04:40:03 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Aug 2008 23:40:03 +1200
Subject: [antlr-interest] Recursive conditional template output.
In-Reply-To: <20080806113014.x1x4bdfc0k8s0ow0@webmail.palantir.co.za>
References: <20080806113014.x1x4bdfc0k8s0ow0@webmail.palantir.co.za>
Message-ID: <20080806114010.4A4AD11E9DC@www.antlr.org>

At 21:30 6/08/2008, craig at palantir.co.za wrote:
 >I want to iterate the template once for header output, and
 >once for body output using the set of paths for each.
[...]
 >But I cannot understand how to get the template to work as
 >the recursion is implicit in the tree grammar, and 'item' is
 >preempted from there, and not from the template. I need to
 >iterate that section of the template twice, once for header
 >output, and once for body output. Maybe dosomething(p) is
 >not the right approach.

Something that I've seen used before when the entire tree needs 
two different representations is to pass the same tree to two 
separate tree grammars (or alternatively, the same grammar but 
with different template expansions loaded).  I think this was used 
to eg. have one generate a .cpp and the other generate the .h.

On a smaller scale, I *think* you can switch the loaded template 
expansions at runtime (within the grammar, with a bit of code), 
which ought to do what you want.  Unfortunately I can't give you 
any specifics since I've never really used StringTemplate myself, 
but hopefully this'll give you an idea of what to look for :)


From jaluber at gmx.de  Wed Aug  6 04:48:28 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Aug 2008 13:48:28 +0200
Subject: [antlr-interest] how to modify an AST after it has been
	constructed
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A27BC@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>	<20080806130522.6387749wed0mujs4@horde.verrech.net>	<48998AD7.9020304@gmx.de>
	<07DC8905ABA90249A64135D427E2F70F03273A27BC@apbiex01.beinformed.nl>
Message-ID: <48998F8C.90006@gmx.de>

Gerard van de Glind schrieb:
> Thanks Raphael and Johannes,
> 
> I am currently using version 3.0 of ANTLR.
> If I am correct 3.1 is not released yet?! (3.1b2 is the most recent beta)
> 
> So, with my current version it is impossible to rewrite trees after construction?
> 
> Regards, Gerard

Yep. 3.1 should be released soon, though I have to fix one particular 
bug yet and sync the C# target with Java, too.

Johannes
> 
> 
> Raphael Reitzig schrieb:
>> Hi!
>>
>> I suppose you can write a tree gramar, walk and rewrite it.
>>
>> Regards
>>
>> Raphael
> 
> While this is correct, you need ANTLR 3.1 (or at least a beta) to be
> able to rewrite trees.
> 
> Johannes
>> "Gerard van de Glind" <g.vandeglind at beinformed.nl> wrote (Wed Aug  6
>> 12:50:00 2008):
>>
>>> Hi all,
>>>
>>> Is it possible to modify an AST after it has been constructed?
>>> And what is the best way to do it?
>>>
>>> Thanks, Gerard
>>>
>>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>>
> 


From mattpalms at gmail.com  Wed Aug  6 04:52:50 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Wed, 6 Aug 2008 12:52:50 +0100
Subject: [antlr-interest] Another parsing question
In-Reply-To: <20080806113315.F42173522D7@www.antlr.org>
References: <568176.78311.qm@web50108.mail.re2.yahoo.com>
	<001e01c8f733$abafd840$030f88c0$@com>
	<A0FF736D-EEA1-4DAF-A861-6D525FAA5B2D@cs.usfca.edu>
	<200808051435.36093.rschulz@sonic.net>
	<20080806113315.F42173522D7@www.antlr.org>
Message-ID: <36c8729e0808060452y590eaae2vd2dc711e1a1926db@mail.gmail.com>

I believe you are talking about Parsing Expression Grammars

http://en.wikipedia.org/wiki/Parsing_expression_grammar

In fact, ANTLR supports many features of PEGs - but it retains the
separation of lexer and parser.

Matt

On Wed, Aug 6, 2008 at 12:33 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 09:35 6/08/2008, Randall R Schulz wrote:
> >That's probably a good idea, but will you preserve the
> >current semantics, making the lazy version simply a
> >performance variant, or will you allow the parser to
> >influence the behavior of the lexer, as so many people
> >initially believe to be possible when the come to
> >ANTLR?
>
> I'm somewhat interested in the idea of making a lexer-less parser
> (basically a parser-only grammar that matches individual characters instead
> of tokens).  I mean, I expect the performance will be significantly worse
> than the present design, but it would permit more flexibility, and in some
> applications that's more important than speed.
>
> You could probably almost do it by making a stub lexer that generates
> single-character tokens; the trouble with that idea of course (other than
> being a bit kludgy) is that if you're expecting full Unicode-range input
> then that's a *massive* amount of possible tokens (and no doubt the Java
> compiler at least would have a fit if you generated the token identifiers
> the same way as at present).  :)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/eef85721/attachment.html 

From atlan at gmx.li  Wed Aug  6 05:49:26 2008
From: atlan at gmx.li (Marc Bischof)
Date: Wed, 6 Aug 2008 14:49:26 +0200
Subject: [antlr-interest] 'any order' operator in ANTLR?
Message-ID: <200808061449.26452.atlan@gmx.li>

Hello List,

I question if an 'any order' operator makes sense in grammar development.
Do you already considered this?

I will explain what I mean in a short example:

You want to model a rule S with 3 optional nonterminals (call them A B and C) 
where the order of occurrence is not relevant.

So far without too much overhead you will model that like this (forcing a 
fixed order):

S : A? B? C?

To omit overhead, I think that for such cases it might be more clear to have 
an 'any order' operator (called  '~' here).
With that operator one can say:

S : (A? B? C?)~

What do you think? Did I miss s.th.? Is it already possible with ANTLR?

Cheers Marc

From laurent.caillette at gmail.com  Wed Aug  6 06:12:42 2008
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 6 Aug 2008 15:12:42 +0200
Subject: [antlr-interest] ANTLRWorks getting confused with import
In-Reply-To: <1B49A512-7EEC-4818-BD7C-FA2A0B821E12@cs.usfca.edu>
References: <3b7c64070808050051r6d0061e8jdb3cb8278acc808d@mail.gmail.com>
	<1B49A512-7EEC-4818-BD7C-FA2A0B821E12@cs.usfca.edu>
Message-ID: <3b7c64070808060612u3c377bdfp3f23ad6686bfc8ab@mail.gmail.com>

Hi Terence,

Thanks, it helps me to know I did nothing wrong.
As import was my primary reason to migrate to 3.1 I'll stick to 3.0.1
until the fix. Is there some Jira issue I can watch for this?

Thanks for ANTLR and ANTLRWorks, as a software product it's one my
best surprises this last year.

c.

On Tue, Aug 5, 2008 at 8:05 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi i noticed an issue also.
> Ter

From r_reitzi at cs.uni-kl.de  Wed Aug  6 06:26:52 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Wed, 06 Aug 2008 15:26:52 +0200
Subject: [antlr-interest] 'any order' operator in ANTLR?
In-Reply-To: <200808061449.26452.atlan@gmx.li>
References: <200808061449.26452.atlan@gmx.li>
Message-ID: <20080806152652.19777j1h60ujibog@horde.verrech.net>

Hi!

I don't know of such a thing yet. I think that would be a nice  
extension. Maybe, it could be implemented as syntactic sugar, thus being
(A B C)# (# an operator; ~ is already taken, I think)
a shortcut for
(A B C)|(A C B)|(B A C)|(B C A)|(C A B)|(C B A)

One could argue that this naive solution would introduce one operator  
which would create exponential loads of code with just one character.  
Furthermore, it hides a lot detail and may lead to further  
understandability issues and confusions.

I do not know wether such an idea can be introduced to the algorithm  
itself, which would be a cleaner way. "If you find A, B and C in the  
following without any disturbances, normalize the permutation found to  
ABC and proceed (means: match)." I wonder what (joggled) recursion  
would do to this...

Regards

Raphaelo


"Marc Bischof" <atlan at gmx.li> wrote (Wed Aug  6 14:49:26 2008):

> Hello List,
>
> I question if an 'any order' operator makes sense in grammar development.
> Do you already considered this?
>
> I will explain what I mean in a short example:
>
> You want to model a rule S with 3 optional nonterminals (call them A B and C)
> where the order of occurrence is not relevant.
>
> So far without too much overhead you will model that like this (forcing a
> fixed order):
>
> S : A? B? C?
>
> To omit overhead, I think that for such cases it might be more clear to have
> an 'any order' operator (called  '~' here).
> With that operator one can say:
>
> S : (A? B? C?)~
>
> What do you think? Did I miss s.th.? Is it already possible with ANTLR?
>
> Cheers Marc
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/a8cb0c2b/attachment-0001.bin 

From lgcraymer at yahoo.com  Wed Aug  6 07:10:44 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 6 Aug 2008 07:10:44 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <281664.51472.qm@web55915.mail.re3.yahoo.com>

Lexer states do not depend on communication between parser and lexer and are invisible to the parser--you just see different token types--and the lexer only uses lookahead to find token boundaries.  You switch lexer states between tokens.


I think that much of this discussion would be moot if ANTLR 3 lexers had the capabilities of ANTLR  2 lexers; unfortunately, that requires an efficient way of doing FOLLOW sets for unicode ranges--and no solution has yet presented itself for that.

--Loring


----- Original Message ----
From: Foust <javafoust at gmail.com>
To: Terence Parr <parrt at cs.usfca.edu>; antlr-interest at antlr.org
Sent: Tuesday, August 5, 2008 10:17:25 PM
Subject: Re: [antlr-interest] Another parsing question

 
RE: a lazy token evaluator, Ter wrote:
> the infinite lookahead makes comm between the two
impossible.
> It will simply consume less memory and allow
interactive parsers.
 
Backtracking would certainly be slower, but isn?t
there *some* method that would allow both infinite lookahead *and*
lexer states, in theory?
 
What do you think about keeping multiple lookahead
buffers, one per state?
 
1.  The
position in the input stream is saved before every rule, in case the parser
sets a state (using a provided API, so that the lexer will be able to handle the
housekeeping)
 
2.  The
parser asks the lexer for the next token (on demand -- if it needs more while
looking at that rule, it asks for more, up to the rest of the tokens in the
file, for an LL(*) parse)
 
3.  These
tokens are buffered, just as they are now, so they can be reused for
backtracking, but each lexer state has its own buffer of lookahead tokens.
 
4.  If
a parser rule alters the lexer state, housekeeping is performed to switch to
that state?s buffer and reset the input stream?s current position
appropriately
 
5.  Whenever
a rule is chosen, lookahead buffers for all other lexer states are invalidated.
(This is required because tokens
in different states could easily overlap. For example, in one state, an entire
line, or the contents of an entire block could be returned as a single token.)
 
6.  Whenever
a rule that changed state is exited, the previous state is restored, if int Lexer.pushState(int) was called, instead of Lexer.setState(int),
which would leave the state unchanged, until called again.
 
Brent
 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, August 05, 2008 2:53 PM
> To: Randall R Schulz
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Another parsing
question
> 
> 
> On Aug 5, 2008, at 2:35 PM, Randall R Schulz wrote:
> 
> > On Tuesday 05 August 2008 14:22, Terence Parr
wrote:
> >> On Aug 5, 2008, at 12:44 PM, Foust wrote:
> >>>> Lexing is all done up front with no
input from the parser at all.
> >>>
> >>> Why was that done? Is it the price you
pay for infinite lookahead?
> >>
> >> Speed of access for ith char / token. 
Will build a lazy version. :)
> >
> > That's probably a good idea, but will you
preserve the current
> > semantics, making the lazy version simply a
performance variant, or
> > will you allow the parser to influence the
behavior of the lexer, as
> > so
> > many people initially believe to be possible
when the come to ANTLR?
> 
> Nope...the infinite lookahead makes comm between the
two impossible.
> It will simply consume less memory and allow
interactive parsers.
> 
> Ter


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/0e406fc7/attachment.html 

From tbrandonau at gmail.com  Wed Aug  6 07:19:49 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Aug 2008 00:19:49 +1000
Subject: [antlr-interest] 'any order' operator in ANTLR?
In-Reply-To: <200808061449.26452.atlan@gmx.li>
References: <200808061449.26452.atlan@gmx.li>
Message-ID: <ebc876d70808060719g75727fbh3cccf131b7188de9@mail.gmail.com>

The alternate is to simply recognise (A|B|C)+ and detect duplicates in
either a code block or a subsequent analysis phase. An advantage of
this approach is you can imeadiately provide better error reporting. A
syntactic solution would likely require you to also add error handling
code to sensibly report the error to the user. And probably requires
ANTLR (or yourself) to generate correct output to allow subsequent
processing to continue. The disadvantage is the requirement of target
specific code. Though I suspect in all but the simplest real world
solution there would be many such constraints not specifiable in ANTLR
so one more makes little difference and it is in fact cleaner to.keep
them all together outside of the grammar.
It also occurs that the presence of such productions in a lexer
(assuming that was intentional) is somewhat odd and perhaps indicates
nonoptimal seperation of lexer and parser duties.

Tom.
On Wed, Aug 6, 2008 at 10:49 PM, Marc Bischof <atlan at gmx.li> wrote:
> Hello List,
>
> I question if an 'any order' operator makes sense in grammar development.
> Do you already considered this?
>
> I will explain what I mean in a short example:
>
> You want to model a rule S with 3 optional nonterminals (call them A B and C)
> where the order of occurrence is not relevant.
>
> So far without too much overhead you will model that like this (forcing a
> fixed order):
>
> S : A? B? C?
>
> To omit overhead, I think that for such cases it might be more clear to have
> an 'any order' operator (called  '~' here).
> With that operator one can say:
>
> S : (A? B? C?)~
>
> What do you think? Did I miss s.th.? Is it already possible with ANTLR?
>
> Cheers Marc
>

From lgcraymer at yahoo.com  Wed Aug  6 07:30:25 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 6 Aug 2008 07:30:25 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <615313.5930.qm@web55908.mail.re3.yahoo.com>

Randall--

Interaction between parser and lexer would only be feasible at LL(1) decision points in the parser, and that would make the resulting grammars very fragile--tweak the grammar to add an alternative (perhaps elsewhere), and that decision goes from LL(1) to LL(2).  The problem with ANTLR 3 is that Ter deliberately introduced combined grammars to mimic the appearance of scannerless parsers; I thought that that was a mistake at the time and still do.  I also find it annoying that separation of parser and lexer into different grammars is inconvenient, to say the least, and the scannerless appearance of combined grammars catches a very high percentage of newbies.

I think that what is really needed instead of parser/lexer communication is a solution to the lexer FOLLOW set problem, possibly coupled with lexer states; that would bring back the ANTLR 2 lexing capabilities which were pretty amazing.

--Loring




----- Original Message ----
> From: Randall R Schulz <rschulz at sonic.net>
> To: antlr-interest at antlr.org
> Sent: Tuesday, August 5, 2008 2:35:36 PM
> Subject: Re: [antlr-interest] Another parsing question
> 
> On Tuesday 05 August 2008 14:22, Terence Parr wrote:
> > On Aug 5, 2008, at 12:44 PM, Foust wrote:
> > >> Lexing is all done up front with no input from the parser at all.
> > >
> > > Why was that done? Is it the price you pay for infinite lookahead?
> >
> > Speed of access for ith char / token.  Will build a lazy version. :)
> 
> That's probably a good idea, but will you preserve the current 
> semantics, making the lazy version simply a performance variant, or 
> will you allow the parser to influence the behavior of the lexer, as so 
> many people initially believe to be possible when the come to ANTLR?
> 
> 
> > Ter
> 
> 
> Randall Schulz



      

From potrto at centrum.cz  Wed Aug  6 07:47:28 2008
From: potrto at centrum.cz (Tomas Potrusil)
Date: Wed, 6 Aug 2008 16:47:28 +0200
Subject: [antlr-interest] Adaptors in C
Message-ID: <af7c90190808060747j6ca1a80g1fd5f7de2d74f67b@mail.gmail.com>

I've noticed that Jimi just updated the adaptors for C. Great! Thank
you very much! His changeset comment is nice - he says there that it's
useless in his opinion. Well, for me it is useful - I don't want any
pANTLR3_BASE_TREE in my classes and adaptors are the right hammer here
- decoupling of ANTLR stuff from the rest is much better... Also
thanks for new saying (Je m'en fous) ;-)

Tom

From carter_cheng at yahoo.com  Wed Aug  6 08:37:54 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Wed, 6 Aug 2008 08:37:54 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
Message-ID: <594713.19090.qm@web50109.mail.re2.yahoo.com>

Thanks for the reply. You are quite correct I added the ? to the lexer rule. Unfortunately it still complains of a no viable alt exception on the '.'. I reduced the grammar to this to try to locate the problem. I ran it through AntlrWorks and still seems to return a FLOAT token for "1..". Hopefully I am still in error here somehow :-).

Thanks again,

Carter.



--- On Wed, 8/6/08, Gavin Lambert <antlr at mirality.co.nz> wrote:

> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> Date: Wednesday, August 6, 2008, 4:23 AM
> At 15:06 6/08/2008, Carter Cheng wrote:
>  >I apologize for the delayed reply here but I have been
> trying
>  >various things to try to get this to work without much
> luck. I 
> have
>  >a simpler case which is a part of my grammar which is-
> [...]
>  >INTEGER_V	
>  >	: Digit+ ( ('..') => | '.' Digit*
> { $type = FLOAT_V; } )
>  >	;
> 
> You're missing a ?.  Right at the end of the rule you
> need a ? 
> after the closing parenthesis, since Digits are not
> necessarily 
> followed by any kind of dot.
> 
> INTEGER_V	
>    : Digit+ ( ('..') => | '.' Digit* {
> $type = FLOAT_V; } )?
>    ;
> 
> Follow through each part of that and you should see how it
> works:
>    - first match a sequence of one or more Digits
>    - optionally followed by one of:
>      - if you see two dots in lookahead: nothing
>      - otherwise, match a dot and zero or more Digits and
> call it 
> a FLOAT_V
> 
> Without the ?, ANTLR will complain if it can't see a
> dot following 
> the initial Digits, since it doesn't have anywhere else
> to go.


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.g
Type: application/octet-stream
Size: 278 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/83b17f53/attachment.obj 

From jimi at temporal-wave.com  Wed Aug  6 08:46:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 06 Aug 2008 08:46:10 -0700
Subject: [antlr-interest] Adaptors in C
In-Reply-To: <af7c90190808060747j6ca1a80g1fd5f7de2d74f67b@mail.gmail.com>
References: <af7c90190808060747j6ca1a80g1fd5f7de2d74f67b@mail.gmail.com>
Message-ID: <1218037570.16247.3.camel@jimi>

On Wed, 2008-08-06 at 16:47 +0200, Tomas Potrusil wrote:

> I've noticed that Jimi just updated the adaptors for C. Great! Thank
> you very much! His changeset comment is nice - he says there that it's
> useless in his opinion. Well, for me it is useful - I don't want any
> pANTLR3_BASE_TREE in my classes and adaptors are the right hammer here
> - decoupling of ANTLR stuff from the rest is much better... Also
> thanks for new saying (Je m'en fous) ;-)


The fact that I think my original way was better from a work point of
view, will not stop me giving everyone enough of their own rope if I
can ;-) This is not extensively tested yet - first I need to verify that
I did not break the standard adaptor, then I need to make sure that
installation of a custom adaptor is easy. But I think I have escaped
being the last one to finish 3.1 - it looks like there will be a day or
so for me to improve things. In this release, you will find that AST
building is upwards of 10X faster than before too, depending on just
what you are building.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/9aa01ad3/attachment-0001.html 

From bergschloss at ukr.net  Wed Aug  6 09:09:25 2008
From: bergschloss at ukr.net (=?WINDOWS-1251?Q?_=D1=E5=F0=E3=B3=E9_=CA=E0=F0=EF=E5=ED=EA=EE?=)
Date: Wed, 06 Aug 2008 19:09:25 +0300
Subject: [antlr-interest] Non whitespace symbols
Message-ID: <E1KQlZl-000Kiy-JR@ffe8.ukr.net>

Hi all.    
There is a point. How make a?rule?for?any?non?whitespace?character.?For?any?char?set?(english,?russian,?arabic?etc).    
????WORD: ('\u0400'..'\u04FF' | 'a'..'z' | 'A'..'Z' |'0'..'9')+;    
is not a case.?    
    
Thanks.    
    
    
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/fb97a1c8/attachment.html 

From mattpalms at gmail.com  Wed Aug  6 09:15:04 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Wed, 6 Aug 2008 17:15:04 +0100
Subject: [antlr-interest] Non whitespace symbols
In-Reply-To: <E1KQlZl-000Kiy-JR@ffe8.ukr.net>
References: <E1KQlZl-000Kiy-JR@ffe8.ukr.net>
Message-ID: <36c8729e0808060915v6eac1bas288481b650114848@mail.gmail.com>

Would this roughly do what you want?

WORD: NOT_WHITE_SPACE+;
fragment NOT_WHITE_SPACE: ~WS;
fragment WS: ' ' | '\u0009' | '\u000A';

Matt

On Wed, Aug 6, 2008 at 5:09 PM, ?????? ???????? <bergschloss at ukr.net> wrote:

>  Hi all.
> There is a point. How make
> a rule for any non whitespace character. For any char set (english, russian, arabic etc).
>
>     WORD: ('\u0400'..'\u04FF' | 'a'..'z' | 'A'..'Z' |'0'..'9')+;
> is not a case.
>
> Thanks.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/097aab2a/attachment.html 

From lgcraymer at yahoo.com  Wed Aug  6 10:18:03 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 6 Aug 2008 10:18:03 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
Message-ID: <106995.28193.qm@web55910.mail.re3.yahoo.com>

Try
fragment DIGIT: '0'..'9';
fragment DOTDOT : '..' ;
RANGE: DOTDOT ;
INT
   : DIGIT+ 
    (     (DOTDOT) => |
          ( '.' DIGIT* { $type = FLOAT; } )? )
   ;
   
fragment FLOAT : DIGIT;     

and then editing to see how close you can get to the original.  The DOTDOT takes advantage of ANTLR 3's lack of FOLLOW sets (INT does not look for a '.' when evaluating the synpred).  Otherwise, your last version is technically correct.

--Loring



----- Original Message ----
> From: Carter Cheng <carter_cheng at yahoo.com>
> To: antlr-interest at antlr.org
> Sent: Wednesday, August 6, 2008 8:37:54 AM
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> 
> Thanks for the reply. You are quite correct I added the ? to the lexer rule. 
> Unfortunately it still complains of a no viable alt exception on the '.'. I 
> reduced the grammar to this to try to locate the problem. I ran it through 
> AntlrWorks and still seems to return a FLOAT token for "1..". Hopefully I am 
> still in error here somehow :-).
> 
> Thanks again,
> 
> Carter.
> 
> 
> 
> --- On Wed, 8/6/08, Gavin Lambert wrote:
> 
> > From: Gavin Lambert 
> > Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> > To: carter_cheng at yahoo.com, antlr-interest at antlr.org
> > Date: Wednesday, August 6, 2008, 4:23 AM
> > At 15:06 6/08/2008, Carter Cheng wrote:
> >  >I apologize for the delayed reply here but I have been
> > trying
> >  >various things to try to get this to work without much
> > luck. I 
> > have
> >  >a simpler case which is a part of my grammar which is-
> > [...]
> >  >INTEGER_V    
> >  >    : Digit+ ( ('..') => | '.' Digit*
> > { $type = FLOAT_V; } )
> >  >    ;
> > 
> > You're missing a ?.  Right at the end of the rule you
> > need a ? 
> > after the closing parenthesis, since Digits are not
> > necessarily 
> > followed by any kind of dot.
> > 
> > INTEGER_V    
> >    : Digit+ ( ('..') => | '.' Digit* {
> > $type = FLOAT_V; } )?
> >    ;
> > 
> > Follow through each part of that and you should see how it
> > works:
> >    - first match a sequence of one or more Digits
> >    - optionally followed by one of:
> >      - if you see two dots in lookahead: nothing
> >      - otherwise, match a dot and zero or more Digits and
> > call it 
> > a FLOAT_V
> > 
> > Without the ?, ANTLR will complain if it can't see a
> > dot following 
> > the initial Digits, since it doesn't have anywhere else
> > to go.



      


From jc.lelann at gmail.com  Wed Aug  6 10:42:47 2008
From: jc.lelann at gmail.com (Jean-Christophe Le Lann)
Date: Wed, 6 Aug 2008 19:42:47 +0200
Subject: [antlr-interest] Is this code correct (V3.1) ?
In-Reply-To: <f39e67740808061016t5d4ee24co7c05bcf10cd32f38@mail.gmail.com>
References: <f39e67740808061016t5d4ee24co7c05bcf10cd32f38@mail.gmail.com>
Message-ID: <f39e67740808061042x357b4a81ued97cd03e97b3f94@mail.gmail.com>

Hello,

I would like to know whether this code is correct in v3.1. I am using
v3.1b2.

expr returns [Expr e]
{
Expr a, b;
e = null;
}
: ^(OR a=expr b=expr { e = new Or(a, b); } )
| etc...


or do I need to use Or($a.e, $b.e) ??

In V2 that seemed to be different...Am I right ?

Thanks for your help
Jean-Christophe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/6e4d56bc/attachment.html 

From gudnabrsam at yahoo.com  Wed Aug  6 11:30:37 2008
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Wed, 6 Aug 2008 11:30:37 -0700 (PDT)
Subject: [antlr-interest] we need a name for a new rewriting tool
In-Reply-To: <1AECD02C-E2AD-4801-B50D-A40B3CE51910@cs.usfca.edu>
Message-ID: <59078.5446.qm@web55107.mail.re4.yahoo.com>

Sorry for having been off-list for some time, but may
I strongly anti-suggest the unadorned word Morph? 
Disregarding the "ANTLR" namespace, this is a direct
clash with http://morph.sourceforge.net, a great Java
project with which I am pleased to be associated. 
Morph is fairly low-profile at present, but there have
been rumblings about its being brought to the Apache
Commons, which would significantly raise said profile.
 Such a naming conflict might harm both projects IMO.

Regards,
Matt

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> Yep, I'm thinking ANTLR Morph, or morph for short in
> we know what  
> we're talking about otherwise fully ANTLR Morph :) 
> Gotta use the  
> brand awareness.  Leon like Morph also.
> 
> Ter
> On Jul 23, 2008, at 3:06 PM, Gavin Lambert wrote:
> 
> > At 09:25 24/07/2008, Simos Xenitellis wrote:
> > >An option is "anamorph".
> > [...]
> > >anamorph: (v) 1. give a new, enhanced form. For
> example, when you
> > >make the educational system better. 2. when you
> make better the
> > >behaviour of someone, such as a young person.
> >
> > "Antlrmorph" or even "Antlamorph" sounds good to
> me.
> >
> > Or maybe, to get the "rewrite" term in there,
> something like  
> > "ANTLRewrite" or "ANTLRwrite"?
> >
> 
> 



      

From sharwell at pixelminegames.com  Wed Aug  6 11:34:36 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 6 Aug 2008 13:34:36 -0500
Subject: [antlr-interest] Possible bug in (not) setting TokenStartIndex and
	TokenStopIndex during AST rewrites
Message-ID: <86403CA0939415448BCCB83855EFE09A64E001@Bloodymary.ironwillgames.com>

If you take the following rule:

postfix_expression
	:	(	IDENTIFIER
			-> ^(IDENTIFIER)
		)
		(	'.' IDENTIFIER
			-> ^(AST_DIRECT_MEMBER $postfix_expression
IDENTIFIER)
		)*
	;


And run it on the following input:

a.b.c

You get the following AST:

AST_DIRECT_MEMBER /* has Token Start/Stop Info set */
- AST_DIRECT_MEMBER /* DOES NOT have Token Start/Stop Info set! */
-- a /* has Token Start/Stop Info set */
-- b /* has Token Start/Stop Info set */
- c /* has Token Start/Stop Info set */



From carter_cheng at yahoo.com  Wed Aug  6 12:07:32 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Wed, 6 Aug 2008 12:07:32 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <106995.28193.qm@web55910.mail.re3.yahoo.com>
Message-ID: <683411.71377.qm@web50104.mail.re2.yahoo.com>

I tried this variant too but it does not seem to parse correctly(see attached). It still thinks that the 1. is a FLOAT token. Perhaps I have run afoul of some bug in 3.0.1?

Regards,

Carter.

--- On Wed, 8/6/08, Loring Craymer <lgcraymer at yahoo.com> wrote:

> From: Loring Craymer <lgcraymer at yahoo.com>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: "Carter Cheng" <carter_cheng at yahoo.com>, antlr-interest at antlr.org
> Date: Wednesday, August 6, 2008, 10:18 AM
> Try
> fragment DIGIT: '0'..'9';
> fragment DOTDOT : '..' ;
> RANGE: DOTDOT ;
> INT
>    : DIGIT+ 
>     (     (DOTDOT) => |
>           ( '.' DIGIT* { $type = FLOAT; } )? )
>    ;
>    
> fragment FLOAT : DIGIT;     
> 
> and then editing to see how close you can get to the
> original.  The DOTDOT takes advantage of ANTLR 3's lack
> of FOLLOW sets (INT does not look for a '.' when
> evaluating the synpred).  Otherwise, your last version is
> technically correct.
> 
> --Loring
> 
> 
> 
> ----- Original Message ----
> > From: Carter Cheng <carter_cheng at yahoo.com>
> > To: antlr-interest at antlr.org
> > Sent: Wednesday, August 6, 2008 8:37:54 AM
> > Subject: Re: [antlr-interest] Lexing problem I cannot
> resolve
> > 
> > Thanks for the reply. You are quite correct I added
> the ? to the lexer rule. 
> > Unfortunately it still complains of a no viable alt
> exception on the '.'. I 
> > reduced the grammar to this to try to locate the
> problem. I ran it through 
> > AntlrWorks and still seems to return a FLOAT token for
> "1..". Hopefully I am 
> > still in error here somehow :-).
> > 
> > Thanks again,
> > 
> > Carter.
> > 
> > 
> > 
> > --- On Wed, 8/6/08, Gavin Lambert wrote:
> > 
> > > From: Gavin Lambert 
> > > Subject: Re: [antlr-interest] Lexing problem I
> cannot resolve
> > > To: carter_cheng at yahoo.com,
> antlr-interest at antlr.org
> > > Date: Wednesday, August 6, 2008, 4:23 AM
> > > At 15:06 6/08/2008, Carter Cheng wrote:
> > >  >I apologize for the delayed reply here but I
> have been
> > > trying
> > >  >various things to try to get this to work
> without much
> > > luck. I 
> > > have
> > >  >a simpler case which is a part of my grammar
> which is-
> > > [...]
> > >  >INTEGER_V    
> > >  >    : Digit+ ( ('..') => |
> '.' Digit*
> > > { $type = FLOAT_V; } )
> > >  >    ;
> > > 
> > > You're missing a ?.  Right at the end of the
> rule you
> > > need a ? 
> > > after the closing parenthesis, since Digits are
> not
> > > necessarily 
> > > followed by any kind of dot.
> > > 
> > > INTEGER_V    
> > >    : Digit+ ( ('..') => | '.'
> Digit* {
> > > $type = FLOAT_V; } )?
> > >    ;
> > > 
> > > Follow through each part of that and you should
> see how it
> > > works:
> > >    - first match a sequence of one or more Digits
> > >    - optionally followed by one of:
> > >      - if you see two dots in lookahead: nothing
> > >      - otherwise, match a dot and zero or more
> Digits and
> > > call it 
> > > a FLOAT_V
> > > 
> > > Without the ?, ANTLR will complain if it
> can't see a
> > > dot following 
> > > the initial Digits, since it doesn't have
> anywhere else
> > > to go.


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.g
Type: application/octet-stream
Size: 529 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/011140ba/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.s
Type: application/octet-stream
Size: 4 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/011140ba/attachment-0001.obj 

From hjrnunes at student.dei.uc.pt  Wed Aug  6 12:11:42 2008
From: hjrnunes at student.dei.uc.pt (Henrique)
Date: Wed, 6 Aug 2008 20:11:42 +0100
Subject: [antlr-interest] OutOfMemoryError: Java Heap Space
Message-ID: <ac8968760808061211p31af38ecr2734fcec0c1b6814@mail.gmail.com>

Hi guys!
I'm trying to write a parser for the Context Free Art tool but I don't want
to use yacc so I tried converting their grammar to antlr. It's quite simple
but I'm getting an OutOfMemoryError when I try to run my test rig with a
test file. ANTLRworks checks it ok but doesn't debug - gives timeout error.
Here's the stack trace:

Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
    at java.util.Arrays.copyOf(Unknown Source)
    at java.util.Arrays.copyOf(Unknown Source)
    at java.util.ArrayList.ensureCapacity(Unknown Source)
    at java.util.ArrayList.add(Unknown Source)
    at
org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:116)
    at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
    at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
    at cfdgParser.cfdg(cfdgParser.java:68)
    at TestRig.main(TestRig.java:25)

check the grammar here <http://hjrnunes.googlepages.com/antlrgrammar>.
I think I solved the left recursions right but I maybe missing something...
Please advise.
Thanks,

Henrique Nunes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/374c3945/attachment.html 

From tbrandonau at gmail.com  Wed Aug  6 12:27:12 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Aug 2008 05:27:12 +1000
Subject: [antlr-interest] OutOfMemoryError: Java Heap Space
In-Reply-To: <ac8968760808061211p31af38ecr2734fcec0c1b6814@mail.gmail.com>
References: <ac8968760808061211p31af38ecr2734fcec0c1b6814@mail.gmail.com>
Message-ID: <ebc876d70808061227q391f9379ib2aad79ce33ad6dd@mail.gmail.com>

Your whitespace rule matches an empty sequence. It should be:
WHITESPACE
    :    ('\n'|'\t'|'\r'|'\f')+;
not
WHITESPACE
    :    ('\n'|'\t'|'\r'|'\f')*;

Tom.

On Thu, Aug 7, 2008 at 5:11 AM, Henrique <hjrnunes at student.dei.uc.pt> wrote:
> Hi guys!
> I'm trying to write a parser for the Context Free Art tool but I don't want
> to use yacc so I tried converting their grammar to antlr. It's quite simple
> but I'm getting an OutOfMemoryError when I try to run my test rig with a
> test file. ANTLRworks checks it ok but doesn't debug - gives timeout error.
> Here's the stack trace:
>
> Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
>     at java.util.Arrays.copyOf(Unknown Source)
>     at java.util.Arrays.copyOf(Unknown Source)
>     at java.util.ArrayList.ensureCapacity(Unknown Source)
>     at java.util.ArrayList.add(Unknown Source)
>     at
> org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:116)
>     at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
>     at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
>     at cfdgParser.cfdg(cfdgParser.java:68)
>     at TestRig.main(TestRig.java:25)
>
> check the grammar here.
> I think I solved the left recursions right but I maybe missing something...
> Please advise.
> Thanks,
>
> Henrique Nunes
>

From jbb at acm.org  Wed Aug  6 12:39:04 2008
From: jbb at acm.org (John B. Brodie)
Date: Wed, 06 Aug 2008 15:39:04 -0400
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <683411.71377.qm@web50104.mail.re2.yahoo.com> (message from
	Carter Cheng on Wed, 6 Aug 2008 12:07:32 -0700 (PDT))
References: <683411.71377.qm@web50104.mail.re2.yahoo.com>
Message-ID: <E1KQoqe-00083J-Mu@gecko.home.org>

Carter Cheng continued a long thread by saying:
>I tried this variant too but it does not seem to parse correctly(see
>attached). It still thinks that the 1. is a FLOAT token. Perhaps I
>have run afoul of some bug in 3.0.1?
>
>Regards,
>
>Carter.
>
>--- On Wed, 8/6/08, Loring Craymer <lgcraymer at yahoo.com> wrote:
>
>> From: Loring Craymer <lgcraymer at yahoo.com>
>> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
>> To: "Carter Cheng" <carter_cheng at yahoo.com>, antlr-interest at antlr.org
>> Date: Wednesday, August 6, 2008, 10:18 AM
>> Try
>> fragment DIGIT: '0'..'9';
>> fragment DOTDOT : '..' ;
>> RANGE: DOTDOT ;
>> INT
>>    : DIGIT+ 
>>     (     (DOTDOT) => |
>>           ( '.' DIGIT* { $type = FLOAT; } )? )
>>    ;
>>    
>> fragment FLOAT : DIGIT;     
>> 
....remainder snipped....

well Loring's rule, and all of the vesions of it posted in the message
Loring replied to, permit 0 or more DIGITs after the single decimal
point.

Notice the `*` on the DIGIT after the `.`.

so if you do not want `1.` to be a FLOAT then change the `*` to a `+`.

Hope this helps
   -jbb

From kurtotte at gmail.com  Wed Aug  6 12:43:27 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Wed, 6 Aug 2008 13:43:27 -0600
Subject: [antlr-interest] Issues Remote Debugging when using C Target and
	ASTs
In-Reply-To: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
References: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
Message-ID: <27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>

I am new to antlr so maybe these are known issues, but I am running
into trouble trying to get AntlrWorks to remote debug a grammar which
is targeted at C and generates ASTs.  I have found several issues
which I wondered if anyone had some thoughts on how to resolve.


#1 - It appears that code generation with the C target and ASTs
enabled is broken if the debug option is set.
For example, with a simple example like this (foo.g)

    grammar foo;

    options
    {
      output=AST;
      language = C;
    }

    bar : 'A'..'Z' ;

I get the following error

    java org.antlr.Tool -debug foo.g

    ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008

    Generating fooParser.c
    error(10):  internal error: foo.g :
java.lang.IllegalArgumentException: Can't find template
parserCtorBody.st; group hierarchy is [C]
    org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
    org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
    org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
    org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
    org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
    org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
    ...

Debugging this a bit, I found that 'parserCtorBody() ::= <<   >>' is
missing from the file C.stg.  I am not sure if this is where it is
expected to be found it in the C code generation case, but I notice it
was defined there for java.  If I stub out this section in the C.stg
file with a blank section for parserCtorBody(), the error goes away
but I don't know enough about the code to propose a proper fix.


#2 ? If I disable AST generation, I can get the grammar to generate
and compile in my C app.  This app will launch and hang waiting on the
debugger as it is supposed to.  Then when I try to connect the
debugger, it claims the source has changed.  An easy way to replicate
this error is to take the 'C' example in the examples-v3/C directory
and compile it with ?debug enabled.  Then try to connect ANTLRWorks to
it.  When I do this, I get this error:  'Warning: the grammar used by
the remote parser is not the same (C.g")'.  Is this maybe a problem
with picking up an extra quote in the file name?  I have tried several
examples and so far I am unable to anything to remote connect.


#3 ? I seems the default remote debug port in C is different than the
ANTLRWorks default.  It took me some digging through the code to find
it, but I guess C expects the port to be 4100
(antlr3debugeventlistener.h:  #define DEFAULT_DEBUGGER_PORT   0xBFCC)
and AltlrWorks expects it to be 49153
(http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554898).  I
am not sure if makes since to line these up or update the docs, but I
thought I would pass it along for the next guy since it took some time
to track down.


Any thoughts on how to fix or work around these issues would be much
appreciated.


Thanks,

Kurt

From tbrandonau at gmail.com  Wed Aug  6 12:51:34 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Aug 2008 05:51:34 +1000
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <683411.71377.qm@web50104.mail.re2.yahoo.com>
References: <106995.28193.qm@web55910.mail.re3.yahoo.com>
	<683411.71377.qm@web50104.mail.re2.yahoo.com>
Message-ID: <ebc876d70808061251j24c6e5f6g405ffe331a8f2ecc@mail.gmail.com>

The grammar below parses the lines of the input (Note the final line
is required given the grammar):
1
1.0
1.
.1
1..0

as INT, FLOAT, FLOAT, FLOAT and INT RANGE INT respectively. You should
bea ble to get what you want out of that. Tested under ANTLR 3.0.1.


Grammar:
grammar test;

test
	:(	(	int1
		|	float1
		|	range
		) NL
	)+ EOF
	;

int1	:	INT;

float1
	:	FLOAT;

range
	:	INT RANGE INT;

fragment DIGIT: '0'..'9';

RANGE: '..' ;

INT
  	:	DIGIT+ ( ('.' ~'.')=> '.' DIGIT* {$type=FLOAT;} )?
  	;

FLOAT:	'.' DIGIT+;

NL	:	('\n'|'\r')+;


Tom.

On Thu, Aug 7, 2008 at 5:07 AM, Carter Cheng <carter_cheng at yahoo.com> wrote:
> I tried this variant too but it does not seem to parse correctly(see attached). It still thinks that the 1. is a FLOAT token. Perhaps I have run afoul of some bug in 3.0.1?
>
> Regards,
>
> Carter.
>

From antlr at mirality.co.nz  Wed Aug  6 12:58:42 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 07 Aug 2008 07:58:42 +1200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <281664.51472.qm@web55915.mail.re3.yahoo.com>
References: <281664.51472.qm@web55915.mail.re3.yahoo.com>
Message-ID: <20080806195849.A53782F4333@www.antlr.org>

At 02:10 7/08/2008, Loring Craymer wrote:
>I think that much of this discussion would be moot if ANTLR 3 
>lexers had the capabilities of ANTLR  2 lexers; unfortunately, 
>that requires an efficient way of doing FOLLOW sets for unicode 
>ranges--and no solution has yet presented itself for that.

Can't you just use an algorithmic test (similar to how sempreds 
work)?  Obviously the standard table/bitset-based solution won't 
work for Unicode (at least not without generating very large 
bitsets [and by "very large" I mean that to represent the full 
UTF-32 range would require a bitset taking 512MB... and that's 
just a single follow set])  Whereas expressing the same thing in 
code should be much more compact, since there are likely to be 
large contiguous ranges.  And it'd have the added bonus of being 
more readable, too.

(Of course, ANTLR might still need to hold that 512MB bitset in 
memory while compiling the grammar, depending on how it works the 
set out -- and possibly more than one.  But this should be less of 
a burden than trying to do it at runtime for every rule.) 


From antlr at mirality.co.nz  Wed Aug  6 13:09:11 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 07 Aug 2008 08:09:11 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <683411.71377.qm@web50104.mail.re2.yahoo.com>
References: <106995.28193.qm@web55910.mail.re3.yahoo.com>
	<683411.71377.qm@web50104.mail.re2.yahoo.com>
Message-ID: <20080806200919.547E611EE51@www.antlr.org>

At 07:07 7/08/2008, Carter Cheng wrote:
 >I tried this variant too but it does not seem to parse
 >correctly(see attached). It still thinks that the 1. is a FLOAT
 >token. Perhaps I have run afoul of some bug in 3.0.1?

I did say that it would do that, since that's what you seemed to 
be wanting.

"1" should be an INT, "1." should be a FLOAT, ".2" should be a 
FLOAT, "1.2" should be a FLOAT, and "1..2" should be an INT RANGE 
INT.

If you want to disallow "1." as a FLOAT, then you need to change 
the DIGIT* to a DIGIT+ as I originally suggested; though you might 
also need to add additional lookahead.


From antlr at jazillian.com  Wed Aug  6 13:40:35 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 06 Aug 2008 16:40:35 -0400
Subject: [antlr-interest] how to modify an AST after it has been
	constructed
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A27AE@apbiex01.beinformed.nl>
Message-ID: <489A0C43.5020208@jazillian.com>

Gerard van de Glind wrote:

> Is it possible to modify an AST after it has been constructed?
> 
> And what is the best way to do it?

The AST is just a data structure, so you can easily modify it in your
code. For example, if you're using C, here's the documentation for
BaseTree:  http://www.antlr.org/api/C/struct_a_n_t_l_r3___b_a_s_e___t_r_e_e__struct.html
For Java, it's here: http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1tree_1_1_base_tree.html
Start out here: http://www.antlr.org/api/index.html

If you're using Java, the Javadoc for ANTLR3 runtime is still missing here: 
http://www.antlr.org/wiki/display/ANTLR3/Java+runtime
...but you can generate it yourself by going to the
runtime/Java/src directory and running:
 
   javadoc -d api org.antlr org.antlr.runtime org.antlr.runtime.debug org.antlr.runtime.misc org.antlr.runtime.tree

Andy

From javafoust at gmail.com  Wed Aug  6 13:43:24 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 6 Aug 2008 13:43:24 -0700
Subject: [antlr-interest] Generator Bug: Expands $ within Comments
Message-ID: <001901c8f805$137b1ee0$3a715ca0$@com>

The latest beta (from 08/03/2008) expands parser variables within comments:

 

statement                           : ^(T_STMT expr?)

                                                {

 
System.out.println("STMT: ");// + $expr.text);

                                                }

 

It wouldn't be such an issue, except there are cases (like this one) where
the expansion extends over multiple lines, so temporarily-commenting out a
portion of a line using a line comment as above causes a compilation problem
in the target language:

 

   System.out.println("STMT: ");
//(object1!=null?(input.getTokenStream().toString(

           input.getTreeAdaptor().getTokenStartIndex(object1.start),

           input.getTreeAdaptor().getTokenStopIndex(object1.start))):null));

 

 

Brent

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/731ac94a/attachment.html 

From javafoust at gmail.com  Wed Aug  6 13:43:24 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 6 Aug 2008 13:43:24 -0700
Subject: [antlr-interest] Is this code correct (V3.1) ?
In-Reply-To: <f39e67740808061042x357b4a81ued97cd03e97b3f94@mail.gmail.com>
References: <f39e67740808061016t5d4ee24co7c05bcf10cd32f38@mail.gmail.com>
	<f39e67740808061042x357b4a81ued97cd03e97b3f94@mail.gmail.com>
Message-ID: <002101c8f805$14e1dad0$3ea59070$@com>

Jean-Christophe,

 

I believe it would be closer to:

 

expr returns[Expr e]

@init {

Expr a, b;

e = null;

}

: ^(OR a=expr b=expr { $e = new Or($a, $b); } )

 

(Not sure about how you've defined "Expr" or "Or" - hopefully Or is a
subtype of Expr?)

 

Brent

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jean-Christophe Le
Lann
Sent: Wednesday, August 06, 2008 10:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Is this code correct (V3.1) ?

 

Hello,


I would like to know whether this code is correct in v3.1. I am using
v3.1b2.

expr returns [Expr e]
{
Expr a, b;
e = null;
}
: ^(OR a=expr b=expr { e = new Or(a, b); } )
| etc...


or do I need to use Or($a.e, $b.e) ??

In V2 that seemed to be different...Am I right ?

Thanks for your help
Jean-Christophe

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/2afd8ba0/attachment.html 

From lgcraymer at yahoo.com  Wed Aug  6 14:00:37 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 6 Aug 2008 14:00:37 -0700 (PDT)
Subject: [antlr-interest] Another parsing question
Message-ID: <593786.81155.qm@web55907.mail.re3.yahoo.com>

Yes, but that has performance problems since a collection range tests look like
   if (foo > 1 && foo < 10 )
       <do something>
   else if (foo == 13)
       <do something else>
   else ...

and that can get very slow when you have to do all of the tests to find out that a character is not in the set.  It is possible to use a 64KB array to map characters into bytes (there is text where there are more than 256 useful characters, but that requires a mix of languages), but that layer of indirection is also undesirable.

I suspect that there is a clever solution, but I haven't thought of one.

--Loring



----- Original Message ----
> From: Gavin Lambert <antlr at mirality.co.nz>
> To: Loring Craymer <lgcraymer at yahoo.com>; Terence Parr <parrt at cs.usfca.edu>; antlr-interest at antlr.org
> Sent: Wednesday, August 6, 2008 12:58:42 PM
> Subject: Re: [antlr-interest] Another parsing question
> 
> At 02:10 7/08/2008, Loring Craymer wrote:
> >I think that much of this discussion would be moot if ANTLR 3 
> >lexers had the capabilities of ANTLR  2 lexers; unfortunately, 
> >that requires an efficient way of doing FOLLOW sets for unicode 
> >ranges--and no solution has yet presented itself for that.
> 
> Can't you just use an algorithmic test (similar to how sempreds 
> work)?  Obviously the standard table/bitset-based solution won't 
> work for Unicode (at least not without generating very large 
> bitsets [and by "very large" I mean that to represent the full 
> UTF-32 range would require a bitset taking 512MB... and that's 
> just a single follow set])  Whereas expressing the same thing in 
> code should be much more compact, since there are likely to be 
> large contiguous ranges.  And it'd have the added bonus of being 
> more readable, too.
> 
> (Of course, ANTLR might still need to hold that 512MB bitset in 
> memory while compiling the grammar, depending on how it works the 
> set out -- and possibly more than one.  But this should be less of 
> a burden than trying to do it at runtime for every rule.) 



      


From javafoust at gmail.com  Wed Aug  6 14:17:36 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 6 Aug 2008 14:17:36 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <20080806195849.A53782F4333@www.antlr.org>
References: <281664.51472.qm@web55915.mail.re3.yahoo.com>
	<20080806195849.A53782F4333@www.antlr.org>
Message-ID: <002601c8f809$dabef180$903cd480$@com>

Could you implement FOLLOW using a hybrid approach?
  (BitSets for non-UNICODE ranges + algorithmic tests for data 
   outside that range? Many DSLs are still non-UNICODE, other
   than strings, which use ASCII delimiters.)

B

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Wednesday, August 06, 2008 12:59 PM
> To: Loring Craymer; Terence Parr; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Another parsing question
> 
> At 02:10 7/08/2008, Loring Craymer wrote:
> >I think that much of this discussion would be moot if ANTLR 3
> >lexers had the capabilities of ANTLR  2 lexers; unfortunately,
> >that requires an efficient way of doing FOLLOW sets for unicode
> >ranges--and no solution has yet presented itself for that.
> 
> Can't you just use an algorithmic test (similar to how sempreds
> work)?  Obviously the standard table/bitset-based solution won't
> work for Unicode (at least not without generating very large
> bitsets [and by "very large" I mean that to represent the full
> UTF-32 range would require a bitset taking 512MB... and that's
> just a single follow set])  Whereas expressing the same thing in
> code should be much more compact, since there are likely to be
> large contiguous ranges.  And it'd have the added bonus of being
> more readable, too.
> 
> (Of course, ANTLR might still need to hold that 512MB bitset in
> memory while compiling the grammar, depending on how it works the
> set out -- and possibly more than one.  But this should be less of
> a burden than trying to do it at runtime for every rule.)


From rschulz at sonic.net  Wed Aug  6 14:32:54 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 6 Aug 2008 14:32:54 -0700
Subject: [antlr-interest] Another parsing question
In-Reply-To: <593786.81155.qm@web55907.mail.re3.yahoo.com>
References: <593786.81155.qm@web55907.mail.re3.yahoo.com>
Message-ID: <200808061432.54739.rschulz@sonic.net>

On Wednesday 06 August 2008 14:00, Loring Craymer wrote:
> Yes, but that has performance problems since a collection range tests
> look like if (foo > 1 && foo < 10 )
>        <do something>
>    else if (foo == 13)
>        <do something else>
>    else ...
>
> and that can get very slow when you have to do all of the tests to
> find out that a character is not in the set.

Prove it.

Anyway, why not just use a regular hashed set? The Trove4J library has 
native collections, too.


> ...
>
> --Loring


Randall Schulz

From jimi at temporal-wave.com  Wed Aug  6 14:47:14 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 06 Aug 2008 14:47:14 -0700
Subject: [antlr-interest] Issues Remote Debugging when using C
	Target	and ASTs
In-Reply-To: <27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
References: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
	<27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
Message-ID: <1218059234.16247.53.camel@jimi>

On Wed, 2008-08-06 at 13:43 -0600, Kurt Otte wrote:

> I am new to antlr so maybe these are known issues, but I am running
> into trouble trying to get AntlrWorks to remote debug a grammar which
> is targeted at C and generates ASTs.  I have found several issues
> which I wondered if anyone had some thoughts on how to resolve.

Remote C debugging only works with the very latest 3.1beta 2. However, I
have not done any testing (yet) with the tree grammar debugging I am
afraid. This bug may well still be present. I am glad you raised this
though as it had dropped off my radar. There is always just one more
last  thing to do!

Jim

> 
> 
> #1 - It appears that code generation with the C target and ASTs
> enabled is broken if the debug option is set.
> For example, with a simple example like this (foo.g)
> 
>     grammar foo;
> 
>     options
>     {
>       output=AST;
>       language = C;
>     }
> 
>     bar : 'A'..'Z' ;
> 
> I get the following error
> 
>     java org.antlr.Tool -debug foo.g
> 
>     ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> 
>     Generating fooParser.c
>     error(10):  internal error: foo.g :
> java.lang.IllegalArgumentException: Can't find template
> parserCtorBody.st; group hierarchy is [C]
>     org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
>     org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
>     org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
>     org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
>     org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
>     org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
>     ...
> 
> Debugging this a bit, I found that 'parserCtorBody() ::= <<   >>' is
> missing from the file C.stg.  I am not sure if this is where it is
> expected to be found it in the C code generation case, but I notice it
> was defined there for java.  If I stub out this section in the C.stg
> file with a blank section for parserCtorBody(), the error goes away
> but I don't know enough about the code to propose a proper fix.
> 
> 
> #2 ? If I disable AST generation, I can get the grammar to generate
> and compile in my C app.  This app will launch and hang waiting on the
> debugger as it is supposed to.  Then when I try to connect the
> debugger, it claims the source has changed.  An easy way to replicate
> this error is to take the 'C' example in the examples-v3/C directory
> and compile it with ?debug enabled.  Then try to connect ANTLRWorks to
> it.  When I do this, I get this error:  'Warning: the grammar used by
> the remote parser is not the same (C.g")'.  Is this maybe a problem
> with picking up an extra quote in the file name?  I have tried several
> examples and so far I am unable to anything to remote connect.
> 
> 
> #3 ? I seems the default remote debug port in C is different than the
> ANTLRWorks default.  It took me some digging through the code to find
> it, but I guess C expects the port to be 4100
> (antlr3debugeventlistener.h:  #define DEFAULT_DEBUGGER_PORT   0xBFCC)
> and AltlrWorks expects it to be 49153
> (http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554898).  I
> am not sure if makes since to line these up or update the docs, but I
> thought I would pass it along for the next guy since it took some time
> to track down.
> 
> 
> Any thoughts on how to fix or work around these issues would be much
> appreciated.
> 
> 
> Thanks,
> 
> Kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/d965ca49/attachment-0001.html 

From jimi at temporal-wave.com  Wed Aug  6 14:54:45 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 06 Aug 2008 14:54:45 -0700
Subject: [antlr-interest] Issues Remote Debugging when using C
	Target	and ASTs
In-Reply-To: <27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
References: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
	<27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
Message-ID: <1218059685.16247.56.camel@jimi>

On Wed, 2008-08-06 at 13:43 -0600, Kurt Otte wrote:

> I am new to antlr so maybe these are known issues, but I am running
> into trouble trying to get AntlrWorks to remote debug a grammar which
> is targeted at C and generates ASTs.  I have found several issues
> which I wondered if anyone had some thoughts on how to resolve.



> #3 ? I seems the default remote debug port in C is different than the
> ANTLRWorks default.  It took me some digging through the code to find
> it, but I guess C expects the port to be 4100
> (antlr3debugeventlistener.h:  #define DEFAULT_DEBUGGER_PORT   0xBFCC)
> and AltlrWorks expects it to be 49153
> (http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554898).  I
> am not sure if makes since to line these up or update the docs, but I
> thought I would pass it along for the next guy since it took some time
> to track down.

What version of ANTLRWorks are you using?  These ports are supposedly
aligned now. We changed it because the previous default was in conflict
with something that runs on most Vista systems.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/250d10c8/attachment.html 

From kurtotte at gmail.com  Wed Aug  6 15:04:24 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Wed, 6 Aug 2008 16:04:24 -0600
Subject: [antlr-interest] Issues Remote Debugging when using C Target
	and ASTs
In-Reply-To: <1218059234.16247.53.camel@jimi>
References: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
	<27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
	<1218059234.16247.53.camel@jimi>
Message-ID: <27766db30808061504t6b6d07ama564ec3031690751@mail.gmail.com>

Jim,

I am using 3.1b2 with a regular (not a tree) grammar when I am seeing
these issues.

    ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008

Is there a newer beta I should grab?  Remote debugging of a regular
grammar is supported, right?

I am have tried antlrworks-1.1.7.jar and antlrworks-1.2b5.jar.  They
both show the same issues.

Thanks,

Kurt



On Wed, Aug 6, 2008 at 3:47 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Wed, 2008-08-06 at 13:43 -0600, Kurt Otte wrote:
>
> I am new to antlr so maybe these are known issues, but I am running
> into trouble trying to get AntlrWorks to remote debug a grammar which
> is targeted at C and generates ASTs.  I have found several issues
> which I wondered if anyone had some thoughts on how to resolve.
>
> Remote C debugging only works with the very latest 3.1beta 2. However, I
> have not done any testing (yet) with the tree grammar debugging I am afraid.
> This bug may well still be present. I am glad you raised this though as it
> had dropped off my radar. There is always just one more last  thing to do!
>
> Jim
>
> #1 - It appears that code generation with the C target and ASTs
> enabled is broken if the debug option is set.
> For example, with a simple example like this (foo.g)
>
>     grammar foo;
>
>     options
>     {
>       output=AST;
>       language = C;
>     }
>
>     bar : 'A'..'Z' ;
>
> I get the following error
>
>     java org.antlr.Tool -debug foo.g
>
>     ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
>
>     Generating fooParser.c
>     error(10):  internal error: foo.g :
> java.lang.IllegalArgumentException: Can't find template
> parserCtorBody.st; group hierarchy is [C]
>
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
>
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
>     ...
>
> Debugging this a bit, I found that 'parserCtorBody() ::= <<   >>' is
> missing from the file C.stg.  I am not sure if this is where it is
> expected to be found it in the C code generation case, but I notice it
> was defined there for java.  If I stub out this section in the C.stg
> file with a blank section for parserCtorBody(), the error goes away
> but I don't know enough about the code to propose a proper fix.
>
>
> #2 ? If I disable AST generation, I can get the grammar to generate
> and compile in my C app.  This app will launch and hang waiting on the
> debugger as it is supposed to.  Then when I try to connect the
> debugger, it claims the source has changed.  An easy way to replicate
> this error is to take the 'C' example in the examples-v3/C directory
> and compile it with ?debug enabled.  Then try to connect ANTLRWorks to
> it.  When I do this, I get this error:  'Warning: the grammar used by
> the remote parser is not the same (C.g")'.  Is this maybe a problem
> with picking up an extra quote in the file name?  I have tried several
> examples and so far I am unable to anything to remote connect.
>
>
> #3 ? I seems the default remote debug port in C is different than the
> ANTLRWorks default.  It took me some digging through the code to find
> it, but I guess C expects the port to be 4100
> (antlr3debugeventlistener.h:  #define DEFAULT_DEBUGGER_PORT   0xBFCC)
> and AltlrWorks expects it to be 49153
> (http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554898).  I
> am not sure if makes since to line these up or update the docs, but I
> thought I would pass it along for the next guy since it took some time
> to track down.
>
>
> Any thoughts on how to fix or work around these issues would be much
> appreciated.
>
>
> Thanks,
>
> Kurt
>

From jimi at temporal-wave.com  Wed Aug  6 15:10:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 06 Aug 2008 15:10:50 -0700
Subject: [antlr-interest] Issues Remote Debugging when using C
	Target	and ASTs
In-Reply-To: <27766db30808061504t6b6d07ama564ec3031690751@mail.gmail.com>
References: <27766db30808061237x5aa4d05dp1f92d64249ce740d@mail.gmail.com>
	<27766db30808061243k459ddcd2wf97b845515599da6@mail.gmail.com>
	<1218059234.16247.53.camel@jimi>
	<27766db30808061504t6b6d07ama564ec3031690751@mail.gmail.com>
Message-ID: <1218060650.16247.66.camel@jimi>

On Wed, 2008-08-06 at 16:04 -0600, Kurt Otte wrote:

> Jim,
> 
> I am using 3.1b2 with a regular (not a tree) grammar when I am seeing
> these issues.
> 
>     ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> 
> Is there a newer beta I should grab?  Remote debugging of a regular
> grammar is supported, right?
> 
> I am have tried antlrworks-1.1.7.jar and antlrworks-1.2b5.jar.  They
> both show the same issues.


OK - it must be something I have re-introduced by accident as that was
all working. I will get to it later. Working on a few other fixes for
3.1 release at the moment,

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/fa5e9f41/attachment.html 

From oren at ben-kiki.org  Wed Aug  6 15:23:17 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Wed, 6 Aug 2008 15:23:17 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
Message-ID: <200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>

The attached .g file causes ANTLR version 3.0.1 to generate invalid
Java (also attached, gzipped).

See for example line 1758 - where is the "n" rule parameter variable
supposed to come from? Could it be that back-tracking and rule
parameters don't mix?

There are also some pretty weird if statements - see line 597 for an
extreme example.

Any ideas?

Thanks,

  Oren Ben-Kiki
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Yaml.g
Type: application/octet-stream
Size: 3103 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/160dadde/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: YamlParser.java.gz
Type: application/x-gzip
Size: 8581 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080806/160dadde/attachment-0001.gz 

From passionist_81 at yahoo.co.uk  Wed Aug  6 17:36:44 2008
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Thu, 7 Aug 2008 00:36:44 +0000 (GMT)
Subject: [antlr-interest] convert an old ANTLR v2 grammar to ANTLR v3:-
Message-ID: <137840.10905.qm@web25902.mail.ukl.yahoo.com>

I'm struggling to convert an old ANTLR v2 grammar to ANTLR v3. ?I'm a?newbie .ANTLR reports errors:-
could any body help me to fix those errors:-
ANTLR Parser Generator? Version 3.1b1 (May 20, 2008)? 1989-2008
error(100): ANTLRSyntax100.g:3:1: syntax error: antlr: ANTLRSyntax100.g:3:1: unexpected token: 
? import java.io.*;
? import antlr.*;
? import uk.ac.sheffield.dcs.dfa.*;
? import uk.ac.sheffield.dcs.dfa.spec.*;
warning(149): ANTLRSyntax100.g:0:0: rewrite syntax or operator with no output option; setting output=AST
error(150):? grammar file ANTLRSyntax100.g has no rules
error(100): ANTLRSyntax100.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected end of subtree
error(100): ANTLRSyntax100.g:0:0: syntax error: define: <AST>:0:0: unexpected end of subtree
?
I can't understand what ANTLR doesn't like. ?The grammar is ? 
attached. ?Any help appreciated! 
faraz


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/dfcb9a71/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ANTLRSyntax100.g
Type: application/octet-stream
Size: 18920 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/dfcb9a71/attachment.obj 

From jalil_hassan at yahoo.co.uk  Wed Aug  6 17:46:51 2008
From: jalil_hassan at yahoo.co.uk (jalil hassan)
Date: Thu, 7 Aug 2008 00:46:51 +0000 (GMT)
Subject: [antlr-interest] Migrating from ANTLR 2 to ANTLR 3 :-
Message-ID: <149820.88598.qm@web23302.mail.ird.yahoo.com>

Can any body help on Terence built a tool? ANTLR 2 to ANTLR 3 how to use it .i?have to convert a grammer built using ANTLR V2.
thanking u , 
hassan.


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/f26d42e4/attachment-0001.html 

From gaochunguang at 163.com  Wed Aug  6 19:06:26 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Thu, 7 Aug 2008 10:06:26 +0800
Subject: [antlr-interest] why warp does not work? (String Template)
References: <mailman.23886.1218070013.2486.antlr-interest@antlr.org>
Message-ID: <000401c8f832$33a60270$1300a8c0@alien>

  StringTemplate st = new StringTemplate("<chars; wrap>", AngleBracketTemplateLexer.class);
  st.setAttribute("chars", "a,b,c,d,e,f,g,h,i,j,k");
  System.out.println(st.toString(5));

ouput is "a,b,c,d,e,f,g,h,i,j,k". why "warp" does not work?

From jalil_hassan at yahoo.co.uk  Wed Aug  6 19:06:37 2008
From: jalil_hassan at yahoo.co.uk (jalil hassan)
Date: Thu, 7 Aug 2008 02:06:37 +0000 (GMT)
Subject: [antlr-interest] Migrating from ANTLR 2 to ANTLR 3 :-
Message-ID: <578877.34131.qm@web23305.mail.ird.yahoo.com>

I am working on the grammer file which has been made using antlr v2.I hava to convert it into v3 .I am new to antlr if somebody can help me in understanding and fixing these errors given by antlr tool.
?
ANTLR Parser Generator? Version 3.1b1 (May 20, 2008)? 1989-2008
error(100): new.g:32:6: syntax error: antlr: new.g:32:6: unexpected token: 
int CurrentType = 0;
error(100): new.g:35:17: syntax error: antlr: new.g:35:17: unexpected token:? CurrentType = PRNPROC;
error(100): new.g:36:17: syntax error: antlr: new.g:36:17: unexpected token: CurrentType = PRNCHAN;
error(100): new.g:37:17: syntax error: antlr: new.g:37:17: unexpected token: CurrentType = PRNACT;
error(100): new.g:38:17: syntax error: antlr: new.g:38:17: unexpected token: CurrentType = PRNSEQ;
error(100): new.g:41:17: syntax error: antlr: new.g:41:17: unexpected token: CurrentType = PRNINT;
error(100): new.g:44:5: syntax error: antlr: new.g:44:5: unexpected token: ;
error(100): new.g:48:20: syntax error: antlr: new.g:48:20: unexpected token: A
error(100): new.g:53:11: syntax error: antlr: new.g:53:11: unexpected token: A
error(100): new.g:53:18: syntax error: antlr: new.g:53:18: unexpected token: B
error(100): new.g:73:11: syntax error: antlr: new.g:73:11: unexpected token: A
error(100): new.g:73:39: syntax error: antlr: new.g:73:39: unexpected token: B
error(100): new.g:78:11: syntax error: antlr: new.g:78:11: unexpected token: A
error(100): new.g:78:31: syntax error: antlr: new.g:78:31: unexpected token: B
error(100): new.g:80:11: syntax error: antlr: new.g:80:11: unexpected token: C
error(100): new.g:86:28: syntax error: antlr: new.g:86:28: unexpected token: A
error(100): new.g:86:46: syntax error: antlr: new.g:86:46: unexpected token: B
error(100): new.g:86:63: syntax error: antlr: new.g:86:63: unexpected token: C
error(100): new.g:88:27: syntax error: antlr: new.g:88:27: unexpected token: D
error(100): new.g:88:44: syntax error: antlr: new.g:88:44: unexpected token: E
error(100): new.g:90:9: syntax error: antlr: new.g:90:9: unexpected token: F
error(100): new.g:108:9: syntax error: antlr: new.g:108:9: unexpected token: A
error(100): new.g:131:19: syntax error: antlr: new.g:131:19: unexpected token: A
error(100): new.g:176:9: syntax error: antlr: new.g:176:9: unexpected token: A
error(100): new.g:176:41: syntax error: antlr: new.g:176:41: unexpected token: B
error(100): new.g:176:70: syntax error: antlr: new.g:176:70: unexpected token: C
error(100): new.g:241:20: syntax error: antlr: new.g:241:20: unexpected token: A
error(100): new.g:270:9: syntax error: antlr: new.g:270:9: unexpected token: A
error(100): new.g:287:33: syntax error: antlr: new.g:287:33: unexpected token: A
error(100): new.g:287:40: syntax error: antlr: new.g:287:40: unexpected token: B
error(100): new.g:296:25: syntax error: antlr: new.g:296:25: unexpected token: C
error(100): new.g:296:32: syntax error: antlr: new.g:296:32: unexpected token: D
error(100): new.g:304:18: syntax error: antlr: new.g:304:18: unexpected token: E
error(100): new.g:308:15: syntax error: antlr: new.g:308:15: unexpected token: A
error(100): new.g:322:13: syntax error: antlr: new.g:322:13: unexpected token: A
error(100): new.g:334:15: syntax error: antlr: new.g:334:15: unexpected token: A
error(10):? internal error: Exception new.g:760:1: expecting '}', found '<EOF>'@org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:333): unexpected stream error from parsing new.g 
warning(149): new.g:0:0: rewrite syntax or operator with no output option; setting output=AST
error(150):? grammar file new.g has no rules
error(100): new.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected end of subtree
error(100): new.g:0:0: syntax error: define: <AST>:0:0: unexpected end of subtree
??
My grammer file is attached with 
thanking ,
hassan


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/441efdd3/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: nn.g
Type: application/octet-stream
Size: 16678 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/441efdd3/attachment-0001.obj 

From tbrandonau at gmail.com  Wed Aug  6 19:27:49 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Aug 2008 12:27:49 +1000
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <20080806200919.547E611EE51@www.antlr.org>
References: <106995.28193.qm@web55910.mail.re3.yahoo.com>
	<683411.71377.qm@web50104.mail.re2.yahoo.com>
	<20080806200919.547E611EE51@www.antlr.org>
Message-ID: <ebc876d70808061927m7df68f67q25f7ac7461788466@mail.gmail.com>

On Thu, Aug 7, 2008 at 6:09 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 07:07 7/08/2008, Carter Cheng wrote:
>>I tried this variant too but it does not seem to parse
>>correctly(see attached). It still thinks that the 1. is a FLOAT
>>token. Perhaps I have run afoul of some bug in 3.0.1?
>
> I did say that it would do that, since that's what you seemed to be wanting.
>
> "1" should be an INT, "1." should be a FLOAT, ".2" should be a FLOAT, "1.2"
> should be a FLOAT, and "1..2" should be an INT RANGE INT.
>
> If you want to disallow "1." as a FLOAT, then you need to change the DIGIT*
> to a DIGIT+ as I originally suggested; though you might also need to add
> additional lookahead.
>
>
I think he means regardless of what follows, 1. forces ANTLR onto the
FLOAT path. So 1..0 matches 1. as a FLOAT and then errors.
The portion ( (DOTDOT) => | ( '.' DIGIT* { $type = FLOAT; } )? )
produces the code like (under 3.1b2 and similar under 3.0.1):
if ( (LA4_0=='.') ) {
    alt4=2;
}
else if ( (synpred1_test()) ) {
    alt4=1;
}
I gather due to ANTLR trying to only inserts predicates when there is
syntactic ambiguity. Changing it to ( ('.' ~'.')=> '.' DIGIT*
{$type=FLOAT;} )? fixes this. Or ('.' DIGIT)=> '.' DIGIT+
{$type=FLOAT;} )? if you don' want to allow 1. as a FLOAT.
IIRC there were some changes to synpred handling post b2 so this might
be fixed in the latest snapshot.

Tom.

From carter_cheng at yahoo.com  Wed Aug  6 20:33:35 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Wed, 6 Aug 2008 20:33:35 -0700 (PDT)
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <ebc876d70808061927m7df68f67q25f7ac7461788466@mail.gmail.com>
Message-ID: <721504.80352.qm@web50105.mail.re2.yahoo.com>

Thanks everyone for the help. Thomas's solution seems to resolve the issue.     I thought it might have something to do with the synpred not being checked for some reason since it seems to fall through and yes I was hoping that 1.. would be parsed as INT RANGE as opposed to FLOAT PERIOD which was what was occurring.

Regards,

Carter.


--- On Wed, 8/6/08, Thomas Brandon <tbrandonau at gmail.com> wrote:

> From: Thomas Brandon <tbrandonau at gmail.com>
> Subject: Re: [antlr-interest] Lexing problem I cannot resolve
> To: "Gavin Lambert" <antlr at mirality.co.nz>
> Cc: "Carter Cheng" <carter_cheng at yahoo.com>, antlr-interest at antlr.org
> Date: Wednesday, August 6, 2008, 7:27 PM
> On Thu, Aug 7, 2008 at 6:09 AM, Gavin Lambert
> <antlr at mirality.co.nz> wrote:
> > At 07:07 7/08/2008, Carter Cheng wrote:
> >>I tried this variant too but it does not seem to
> parse
> >>correctly(see attached). It still thinks that the
> 1. is a FLOAT
> >>token. Perhaps I have run afoul of some bug in
> 3.0.1?
> >
> > I did say that it would do that, since that's what
> you seemed to be wanting.
> >
> > "1" should be an INT, "1." should
> be a FLOAT, ".2" should be a FLOAT,
> "1.2"
> > should be a FLOAT, and "1..2" should be an
> INT RANGE INT.
> >
> > If you want to disallow "1." as a FLOAT,
> then you need to change the DIGIT*
> > to a DIGIT+ as I originally suggested; though you
> might also need to add
> > additional lookahead.
> >
> >
> I think he means regardless of what follows, 1. forces
> ANTLR onto the
> FLOAT path. So 1..0 matches 1. as a FLOAT and then errors.
> The portion ( (DOTDOT) => | ( '.' DIGIT* { $type
> = FLOAT; } )? )
> produces the code like (under 3.1b2 and similar under
> 3.0.1):
> if ( (LA4_0=='.') ) {
>     alt4=2;
> }
> else if ( (synpred1_test()) ) {
>     alt4=1;
> }
> I gather due to ANTLR trying to only inserts predicates
> when there is
> syntactic ambiguity. Changing it to ( ('.'
> ~'.')=> '.' DIGIT*
> {$type=FLOAT;} )? fixes this. Or ('.' DIGIT)=>
> '.' DIGIT+
> {$type=FLOAT;} )? if you don' want to allow 1. as a
> FLOAT.
> IIRC there were some changes to synpred handling post b2 so
> this might
> be fixed in the latest snapshot.
> 
> Tom.


      

From oren at ben-kiki.org  Wed Aug  6 20:34:03 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Wed, 6 Aug 2008 20:34:03 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
Message-ID: <200e06280808062034j5495cd94kc58ce6dc44fdddeb@mail.gmail.com>

FWIW, the same things happen in version 3.1b.

On 8/6/08, Oren Ben-Kiki <oren at ben-kiki.org> wrote:
> The attached .g file causes ANTLR version 3.0.1 to generate invalid
> Java (also attached, gzipped).
>
> See for example line 1758 - where is the "n" rule parameter variable
> supposed to come from? Could it be that back-tracking and rule
> parameters don't mix?
>
> There are also some pretty weird if statements - see line 597 for an
> extreme example.
>
> Any ideas?
>
> Thanks,
>
>   Oren Ben-Kiki
>

From anders at globe-trotter.us  Wed Aug  6 21:43:56 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Thu, 07 Aug 2008 12:43:56 +0800
Subject: [antlr-interest] =?iso-8859-1?q?ANTLR_v2=2Cv3?=
Message-ID: <20080807044356.18333.qmail@station198.com>

Hi

Is there a detailed list with grammar changes from v2 to v3. I have one big 140K v2 grammar to convert and I am really struggling so it would help with such a list. I have the book ANTLR3 ref however there seems to be no helpful summary with the changes. e.g. in v2 you can write a:'t' to get an alias for 't' in v3 you have to write a='t' (if even true).

I am not so familiar with the v2 grammar and was hoping not having to learn that dialect first when converting.

Running the v2v3 just doesn't do it. The original grammar contains lots of sprinkled in C++ code and generates its own AST tree.  

I have also noticed that the ANTRLWorks1.1.7 crashes when the grammar is big, it suddenly stops updating the screen. Is this a known problem? It happens when I do "Generate code".

TIA
Anders Karlsson.

From pink at odahoda.de  Thu Aug  7 00:33:59 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 7 Aug 2008 09:33:59 +0200
Subject: [antlr-interest] Generator Bug: Expands $ within Comments
In-Reply-To: <001901c8f805$137b1ee0$3a715ca0$@com>
References: <001901c8f805$137b1ee0$3a715ca0$@com>
Message-ID: <543531490808070033l12f2be46jdfbbab0a75b7f45e@mail.gmail.com>

Hi Brent,

this is by design. ANTLR doesn't know about the syntax of the target
language, including how comments look like.

-Ben


On Wed, Aug 6, 2008 at 10:43 PM, Foust <javafoust at gmail.com> wrote:
> The latest beta (from 08/03/2008) expands parser variables within comments:
>
>
>
> statement                           : ^(T_STMT expr?)
>
>                                                 {
>
>
> System.out.println("STMT: ");// + $expr.text);
>
>                                                 }
>
>
>
> It wouldn't be such an issue, except there are cases (like this one) where
> the expansion extends over multiple lines, so temporarily-commenting out a
> portion of a line using a line comment as above causes a compilation problem
> in the target language:
>
>
>
>    System.out.println("STMT: ");
> //(object1!=null?(input.getTokenStream().toString(
>
>            input.getTreeAdaptor().getTokenStartIndex(object1.start),
>
>            input.getTreeAdaptor().getTokenStopIndex(object1.start))):null));
>
>
>
>
>
> Brent
>
>

From tbrandonau at gmail.com  Thu Aug  7 01:10:35 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Aug 2008 18:10:35 +1000
Subject: [antlr-interest] Generator Bug: Expands $ within Comments
In-Reply-To: <543531490808070033l12f2be46jdfbbab0a75b7f45e@mail.gmail.com>
References: <001901c8f805$137b1ee0$3a715ca0$@com>
	<543531490808070033l12f2be46jdfbbab0a75b7f45e@mail.gmail.com>
Message-ID: <ebc876d70808070110j4bef0870y651061657ade387c@mail.gmail.com>

Actually ANTLR does assume that target languages use C style comments
to allow unmatched action block and string delimiters in comments. But
this is only in ANTLR.g not in the seperate action parser. Though the
action parser does allow escaping (\$) to get around the problem here.
This means using unmatched delimiters in python single line comments
will cause problems. Multi line comments are handled by the string
handling, though an unmatched " here will cause problems. Delimiting
is not handled in ANTLR.g so there is currently no way to get around
this.
Probably a good idea to standardise and allow delimiting in both.
Possibly also keeping the current comment\string handling, with target
control, to make it easier for users.

Tom.
On Thu, Aug 7, 2008 at 5:33 PM, Benjamin Niemann <pink at odahoda.de> wrote:
> Hi Brent,
>
> this is by design. ANTLR doesn't know about the syntax of the target
> language, including how comments look like.
>
> -Ben
>
>
> On Wed, Aug 6, 2008 at 10:43 PM, Foust <javafoust at gmail.com> wrote:
>> The latest beta (from 08/03/2008) expands parser variables within comments:
>>
>>
>>
>> statement                           : ^(T_STMT expr?)
>>
>>                                                 {
>>
>>
>> System.out.println("STMT: ");// + $expr.text);
>>
>>                                                 }
>>
>>
>>
>> It wouldn't be such an issue, except there are cases (like this one) where
>> the expansion extends over multiple lines, so temporarily-commenting out a
>> portion of a line using a line comment as above causes a compilation problem
>> in the target language:
>>
>>
>>
>>    System.out.println("STMT: ");
>> //(object1!=null?(input.getTokenStream().toString(
>>
>>            input.getTreeAdaptor().getTokenStartIndex(object1.start),
>>
>>            input.getTreeAdaptor().getTokenStopIndex(object1.start))):null));
>>
>>
>>
>>
>>
>> Brent
>>
>>
>

From julien.furet at gmail.com  Thu Aug  7 02:01:04 2008
From: julien.furet at gmail.com (Julien FURET)
Date: Thu, 7 Aug 2008 11:01:04 +0200
Subject: [antlr-interest] Weird execution / debugging problem
Message-ID: <bf41c7a60808070201u694423cev637856bda70a68fe@mail.gmail.com>

Hi,

I'd really appreciate some help about a strange problem I have been facing
for a few days now, and I will try to be as clear as possible about it.

I am working with Antlr 2.7.7. Last week, I had some NullPointer exception
when executing my file parser after adding a new rule to my grammar. When
trying to debug it (into Eclipse 3.2), the debugger was kind of "lost" in
the Parser.java file (the announced line was not the good one, step by step
debugging missed some lines, ...). I thought I had reached some limit there,
concerning either Antlr or Eclipse.

That's why I tried with a new version of Eclipse (3.4). After importing the
project, it worked for several days, until the day before yesterday.
Yesterday morning, same problem : NullPointers when trying to parse files
and debugger lost in lines...

I transferred my work on a colleague's computer (running Eclipse 3.3) and I
worked perfectly all the day of yesterday.

But this morning, same problem... I am turning mad !

Would you have any idea about the possible origin of this problem ? I am
stuck...

Thanks in advance...

Julien
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/35a3b7b7/attachment.html 

From javafoust at gmail.com  Thu Aug  7 02:37:36 2008
From: javafoust at gmail.com (Foust)
Date: Thu, 7 Aug 2008 02:37:36 -0700
Subject: [antlr-interest] Variable Expansion Code Generation Bug (3.1b)
Message-ID: <006101c8f871$3af9a010$b0ece030$@com>

tree grammar X;

 

statement : ^(T_STMT expr?)

                {

                                System.out.println("STMT: " + ((expr ==
null) ? "" : $ expr.text));

                }

 

Generates the code:

System.out.println("STMT: " + ((expr == null) ? "" :
(expr1!=null?(input.getTokenStream().toString(

                input.getTreeAdaptor().getTokenStartIndex(expr1.start),

 
input.getTreeAdaptor().getTokenStopIndex(expr1.start))):null)));

 

a)      Which doesn't compile, since the rule "expr" was not converted to
"expr1". 

 

b)      If "$expr" is used, instead, ANTLR won't compile the grammar,
complaining that a attribute must be referenced.

 

 

This similar code does, in fact, compile:

 

statement : ^(T_STMT e=expr?)

                {

                                System.out.println("STMT: " + ((e == null) ?
"" : $ e.text));

                }

 

And generates the following correct Java code:

System.out.println("STMT: " + ((e  == null) ? "" :
(e!=null?(input.getTokenStream().toString(

                input.getTreeAdaptor().getTokenStartIndex(e.start),

                input.getTreeAdaptor().getTokenStopIndex(e.start))):null)));

 

Brent

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/325e971e/attachment-0001.html 

From jaluber at gmx.de  Thu Aug  7 03:44:14 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Aug 2008 12:44:14 +0200
Subject: [antlr-interest] convert an old ANTLR v2 grammar to ANTLR v3:-
In-Reply-To: <137840.10905.qm@web25902.mail.ukl.yahoo.com>
References: <137840.10905.qm@web25902.mail.ukl.yahoo.com>
Message-ID: <489AD1FE.9060106@gmx.de>

faraz ahmed schrieb:
> I'm struggling to convert an old ANTLR v2 grammar to ANTLR v3.  I'm 
> a newbie .ANTLR reports errors:-
> could any body help me to fix those errors:-
> ANTLR Parser Generator  Version 3.1b1 (May 20, 2008)  1989-2008
> error(100): ANTLRSyntax100.g:3:1: syntax error: antlr: 
> ANTLRSyntax100.g:3:1: unexpected token:
>   import java.io.*;
>   import antlr.*;
>   import uk.ac.sheffield.dcs.dfa.*;
>   import uk.ac.sheffield.dcs.dfa.spec.*;
> warning(149): ANTLRSyntax100.g:0:0: rewrite syntax or operator with no 
> output option; setting output=AST
> error(150):  grammar file ANTLRSyntax100.g has no rules
> error(100): ANTLRSyntax100.g:0:0: syntax error: assign.types: <AST>:0:0: 
> unexpected end of subtree
> error(100): ANTLRSyntax100.g:0:0: syntax error: define: <AST>:0:0: 
> unexpected end of subtree
>  
> I can't understand what ANTLR doesn't like.  The grammar is  
> attached.  Any help appreciated!
> faraz

ANTLR requires now to mark certain sections with keywords, unlike its 
predecessor (also they have to come in a specific order). Please refer 
to the wiki documentation or the ANTLR book regarding the specifics. 
Reading the book is a good idea if you are unfamiliar with compilers and 
compiler generators in general. I've also added a tokenVocab option, 
which you have to adapt to the used lexer grammar (e.g. lexer grammar is 
MyLexer.g, then tokenVocab=MyLexer;). Otherwise ANTLR will complain 
about missing rules.

Johannes
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLRSyntax100.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/a112ba94/attachment.pl 

From jaluber at gmx.de  Thu Aug  7 03:57:39 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Aug 2008 12:57:39 +0200
Subject: [antlr-interest] Migrating from ANTLR 2 to ANTLR 3 :-
In-Reply-To: <578877.34131.qm@web23305.mail.ird.yahoo.com>
References: <578877.34131.qm@web23305.mail.ird.yahoo.com>
Message-ID: <489AD523.8000100@gmx.de>

jalil hassan schrieb:
> I am working on the grammer file which has been made using antlr v2.I 
> hava to convert it into v3 .I am new to antlr if somebody can help me in 
> understanding and fixing these errors given by antlr tool.

I have never used v2, so I can't solve every problem, but there are at 
least two problems in the conversion process. First, strings like 
"A:type" aren't converted in "A=type", which is the new v3 syntax to 
create labels. The second problem is that strings are still delimited by 
" and not by '.

I've also seen ! used after the rule name at its own definition (e.g. 
type! : def;), but I don't know the meaning of it. In v3 it isn't legal 
to put a ! there. Also I don't believe that v3 doesn't support a 
paraphrase option, but I'm fuzzy about error recovery.

I'd recommend to read at least the wiki articles or even to buy the 
ANTLR book, as there are the basic concepts explained, as well with many 
examples.

Johannes

>  
> ANTLR Parser Generator  Version 3.1b1 (May 20, 2008)  1989-2008
> error(100): new.g:32:6: syntax error: antlr: new.g:32:6: unexpected token:
> int CurrentType = 0;
> error(100): new.g:35:17: syntax error: antlr: new.g:35:17: unexpected 
> token:  CurrentType = PRNPROC;
> error(100): new.g:36:17: syntax error: antlr: new.g:36:17: unexpected 
> token: CurrentType = PRNCHAN;
> error(100): new.g:37:17: syntax error: antlr: new.g:37:17: unexpected 
> token: CurrentType = PRNACT;
> error(100): new.g:38:17: syntax error: antlr: new.g:38:17: unexpected 
> token: CurrentType = PRNSEQ;
> error(100): new.g:41:17: syntax error: antlr: new.g:41:17: unexpected 
> token: CurrentType = PRNINT;
> error(100): new.g:44:5: syntax error: antlr: new.g:44:5: unexpected token: ;
> error(100): new.g:48:20: syntax error: antlr: new.g:48:20: unexpected 
> token: A
> error(100): new.g:53:11: syntax error: antlr: new.g:53:11: unexpected 
> token: A
> error(100): new.g:53:18: syntax error: antlr: new.g:53:18: unexpected 
> token: B
> error(100): new.g:73:11: syntax error: antlr: new.g:73:11: unexpected 
> token: A
> error(100): new.g:73:39: syntax error: antlr: new.g:73:39: unexpected 
> token: B
> error(100): new.g:78:11: syntax error: antlr: new.g:78:11: unexpected 
> token: A
> error(100): new.g:78:31: syntax error: antlr: new.g:78:31: unexpected 
> token: B
> error(100): new.g:80:11: syntax error: antlr: new.g:80:11: unexpected 
> token: C
> error(100): new.g:86:28: syntax error: antlr: new.g:86:28: unexpected 
> token: A
> error(100): new.g:86:46: syntax error: antlr: new.g:86:46: unexpected 
> token: B
> error(100): new.g:86:63: syntax error: antlr: new.g:86:63: unexpected 
> token: C
> error(100): new.g:88:27: syntax error: antlr: new.g:88:27: unexpected 
> token: D
> error(100): new.g:88:44: syntax error: antlr: new.g:88:44: unexpected 
> token: E
> error(100): new.g:90:9: syntax error: antlr: new.g:90:9: unexpected token: F
> error(100): new.g:108:9: syntax error: antlr: new.g:108:9: unexpected 
> token: A
> error(100): new.g:131:19: syntax error: antlr: new.g:131:19: unexpected 
> token: A
> error(100): new.g:176:9: syntax error: antlr: new.g:176:9: unexpected 
> token: A
> error(100): new.g:176:41: syntax error: antlr: new.g:176:41: unexpected 
> token: B
> error(100): new.g:176:70: syntax error: antlr: new.g:176:70: unexpected 
> token: C
> error(100): new.g:241:20: syntax error: antlr: new.g:241:20: unexpected 
> token: A
> error(100): new.g:270:9: syntax error: antlr: new.g:270:9: unexpected 
> token: A
> error(100): new.g:287:33: syntax error: antlr: new.g:287:33: unexpected 
> token: A
> error(100): new.g:287:40: syntax error: antlr: new.g:287:40: unexpected 
> token: B
> error(100): new.g:296:25: syntax error: antlr: new.g:296:25: unexpected 
> token: C
> error(100): new.g:296:32: syntax error: antlr: new.g:296:32: unexpected 
> token: D
> error(100): new.g:304:18: syntax error: antlr: new.g:304:18: unexpected 
> token: E
> error(100): new.g:308:15: syntax error: antlr: new.g:308:15: unexpected 
> token: A
> error(100): new.g:322:13: syntax error: antlr: new.g:322:13: unexpected 
> token: A
> error(100): new.g:334:15: syntax error: antlr: new.g:334:15: unexpected 
> token: A
> error(10):  internal error: Exception new.g:760:1: expecting '}', found 
> '<EOF>'@org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:333): 
> unexpected stream error from parsing new.g
> warning(149): new.g:0:0: rewrite syntax or operator with no output 
> option; setting output=AST
> error(150):  grammar file new.g has no rules
> error(100): new.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected 
> end of subtree
> error(100): new.g:0:0: syntax error: define: <AST>:0:0: unexpected end 
> of subtree
>   
> My grammer file is attached with
> thanking ,
> hassan
> 
> 
> ------------------------------------------------------------------------
> Not happy with your email address?
> Get the one you really want <http://uk.docs.yahoo.com/ymail/new.html> - 
> millions of new email addresses available now at Yahoo! 
> <http://uk.docs.yahoo.com/ymail/new.html>


From jaluber at gmx.de  Thu Aug  7 05:08:35 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Aug 2008 14:08:35 +0200
Subject: [antlr-interest] ANTLR v2,v3
In-Reply-To: <20080807044356.18333.qmail@station198.com>
References: <20080807044356.18333.qmail@station198.com>
Message-ID: <489AE5C3.3040203@gmx.de>

Anders Karlsson schrieb:
> Hi
> 
> Is there a detailed list with grammar changes from v2 to v3. I have one big 140K v2 grammar to convert and I am really struggling so it would help with such a list. I have the book ANTLR3 ref however there seems to be no helpful summary with the changes. e.g. in v2 you can write a:'t' to get an alias for 't' in v3 you have to write a='t' (if even true).

Does <http://www.antlr.org/wiki/pages/viewpage.action?pageId=719> help?
> 
> I am not so familiar with the v2 grammar and was hoping not having to learn that dialect first when converting.
> 
> Running the v2v3 just doesn't do it. The original grammar contains lots of sprinkled in C++ code and generates its own AST tree.  
> 
> I have also noticed that the ANTRLWorks1.1.7 crashes when the grammar is big, it suddenly stops updating the screen. Is this a known problem? It happens when I do "Generate code".

I noticed this behaviour myself, but Jean couldn't reproduce it, I 
believe. Send him a bug report with the grammar and generate the grammar 
on the command line.

Johannes
> 
> TIA
> Anders Karlsson.
> 


From antlr at mirality.co.nz  Thu Aug  7 05:34:48 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 00:34:48 +1200
Subject: [antlr-interest] Another parsing question
In-Reply-To: <200808061432.54739.rschulz@sonic.net>
References: <593786.81155.qm@web55907.mail.re3.yahoo.com>
	<200808061432.54739.rschulz@sonic.net>
Message-ID: <20080807123503.575FC11EE99@www.antlr.org>

At 09:32 7/08/2008, Randall R Schulz wrote:
 > On Wednesday 06 August 2008 14:00, Loring Craymer wrote:
 >> and that can get very slow when you have to do all of
 >> the tests to find out that a character is not in the set.

I did say it'd likely be slower, but I doubt it'd be significantly 
so.  (Looking for presence/absence in a BitSet is an O(1) 
operation, but so is this kind of conditional tree -- and at worst 
case it's only O(n).)

Besides which, small sets could be rendered as switch blocks or a 
simple logical-or expression, which are probably even faster than 
using a BitSet.

 >Prove it.

Indeed.

 >Anyway, why not just use a regular hashed set? The Trove4J 
library
 >has native collections, too.

Some kind of sparse boolean collection would work well (or even 
something more fancy, if you want to indicate the possible 
following rules at end-of-token as well).

But you'll also need some way of specifying whether it's an 
"include" collection or an "exclude" one, so that you only need to 
populate the smaller of the two.  In other words, ~('a' | 'b') 
should be recorded as an "exclude" set of 'a' and 'b', not as an 
"include" set of every character except for 'a' and 'b' (as ANTLR 
v2 did) :)

Although I still think just generating the matching code will end 
up simpler than futzing around with collections.  (The compiler 
itself will need a collection, of course.  But I don't see why the 
runtime lexer would.)


From antlr at mirality.co.nz  Thu Aug  7 05:39:15 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 00:39:15 +1200
Subject: [antlr-interest] Lexing problem I cannot resolve
In-Reply-To: <ebc876d70808061927m7df68f67q25f7ac7461788466@mail.gmail.co
 m>
References: <106995.28193.qm@web55910.mail.re3.yahoo.com>
	<683411.71377.qm@web50104.mail.re2.yahoo.com>
	<20080806200919.547E611EE51@www.antlr.org>
	<ebc876d70808061927m7df68f67q25f7ac7461788466@mail.gmail.com>
Message-ID: <20080807123929.8678F3D148F@www.antlr.org>

At 14:27 7/08/2008, Thomas Brandon wrote:
 >The portion ( (DOTDOT) => | ( '.' DIGIT* { $type = FLOAT; } )? )
 >produces the code like (under 3.1b2 and similar under 3.0.1):
 >if ( (LA4_0=='.') ) {
 >    alt4=2;
 >}
 >else if ( (synpred1_test()) ) {
 >    alt4=1;
 >}
 >I gather due to ANTLR trying to only inserts predicates when 
there
 >is syntactic ambiguity. Changing it to ( ('.' ~'.')=> '.' DIGIT*
 >{$type=FLOAT;} )? fixes this. Or ('.' DIGIT)=> '.' DIGIT+
 >{$type=FLOAT;} )? if you don' want to allow 1. as a FLOAT.

Ah, yes, you're right.  I keep forgetting about that little quirk 
:)


From antlr at mirality.co.nz  Thu Aug  7 05:47:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 00:47:26 +1200
Subject: [antlr-interest] Variable Expansion Code Generation Bug (3.1b)
In-Reply-To: <006101c8f871$3af9a010$b0ece030$@com>
References: <006101c8f871$3af9a010$b0ece030$@com>
Message-ID: <20080807124738.40D943D14B3@www.antlr.org>

At 21:37 7/08/2008, Foust wrote:
>statement : ^(T_STMT expr?)
>                 {
>                                 System.out.println("STMT: " + 
> ((expr == null) ? "" : $ expr.text));
>                 }
>
>Generates the code:
>System.out.println("STMT: " + ((expr == null) ? "" : 
>(expr1!=null?(input.getTokenStream().toString(
> 
>input.getTreeAdaptor().getTokenStartIndex(expr1.start),
> 
>input.getTreeAdaptor().getTokenStopIndex(expr1.start))):null)));
>
>a)      Which doesn't compile, since the rule "expr" was not 
>converted to "expr1".

Because you didn't use a $ :)

>b)      If "$expr" is used, instead, ANTLR won't compile the 
>grammar, complaining that a attribute must be referenced.
>
>
>This similar code does, in fact, compile:
>
>statement : ^(T_STMT e=expr?)
>                 {
>                                 System.out.println("STMT: " + 
> ((e == null) ? "" : $ e.text));
>                 }
>
>And generates the following correct Java code:
>System.out.println("STMT: " + ((e  == null) ? "" : 
>(e!=null?(input.getTokenStream().toString(
> 
>input.getTreeAdaptor().getTokenStartIndex(e.start),
> 
>input.getTreeAdaptor().getTokenStopIndex(e.start))):null)));

If you take a closer look at both sets of generated code, you'll 
see that $expr.text and $e.text are already being null protected 
anyway, so your extra null protection is (almost) unnecessary:

statement : ^(T_STMT expr?)
     {
          String text = $expr.text;
          System.out.println("STMT: " + ((text == null) ? "" : 
text));
     }

(You could put this all on one line and ditch the extra variable 
if you don't mind it printing a null instead of an empty string.)


From johan.grande at crans.org  Thu Aug  7 06:39:22 2008
From: johan.grande at crans.org (Johan Grande)
Date: Thu, 07 Aug 2008 15:39:22 +0200
Subject: [antlr-interest] tree construction, associative operators,
	NullPointerException
In-Reply-To: <48982811.90600@crans.org>
References: <48982811.90600@crans.org>
Message-ID: <489AFB0A.6020506@crans.org>

Hello,

Perhaps it is because I didn't ask the question : doesn't anybody see to 
what is due this problem / how I can do what I want to do ?

The solution I use until now (non binary trees) is not at all 
satisfying, because not only I would have binary trees, but my 
"solution" doesn't work for rules with more than one operator, for example :
,----
| equalityExpression
|     :   instanceOfExpression ( ('==' | '!=') instanceOfExpression )*
|     ;
`----

Or is there something useful I didn't provide ?

Thank you for your help,
Johan



Johan Grande a ?crit :
> Hi,
> 
> I work with ANTLR v3.1b2 on the Java grammar made by Terence Parr
> (http://antlr.org/grammar/1152141644268/Java.g), and I try to construct
> ASTs using rewrite rules.
> 
> I get runtime errors when I try to construct a binary tree for an
> expression with an associative operator.
> 
> 
> I try to parse the following code :
> ,--
> | class Test {
> |   boolean titi = true & false;
> | }
> `--
> 
> 
> When I try construct an operand list under the '&' operator, with the
> '&' rule like this :
> ,--
> | andExpression
> |     :   equalityExpression ( '&' equalityExpression )*
> |         -> ^(AssociativeOperation And ^(ExpressionList
> equalityExpression+))
> |     ;
> `--
> everything works fine.
> 
> 
> But when I try to construct a binary tree, as shown at the beginning of
> this page : http://www.antlr.org/wiki/display/ANTLR3/Tree+construction ,
> with the '&' rule like this :
> ,--
> | andExpression
> |     :   (a=equalityExpression -> $a)
> |         ( '&' b=equalityExpression -> ^(Cons And $andExpression $b) )*
> |    ;
> `--
> (the other rules are unchanged), I get a NullPointerException.
> 
> The problem comes from "$andExpression" : if I replace it by
> "EmptyExpression", it runs.
> 
> 
> The imaginary tokens I use and the corresponding classes are generated
> by GOM (http://tom.loria.fr), from an abstract data structure
> description, with a syntax like this :
> --------
> Expression =
>    | AssociativeOperation( nop:AssociativeOperator,
> operands:ExpressionList )
>    | Cons( nop:AssociativeOperator, lhs:Expression, rhs:Expression )
>    | UnaryOperation( uop:UnaryOperator, operand:Expression )
>    | EmptyExpression()
> // [...]
> --------
> 
> 
> Here is the complete stack trace :
> -------------------------------------------------------------------------------- 
> 
> java.lang.NullPointerException
>           at
> parser.ast.types.expressionlist.ConsExpressionList.hashFunction(Unknown
> Source)
>           at
> parser.ast.types.expressionlist.ConsExpressionList.initHashCode(Unknown
> Source)
>           at
> parser.ast.types.expressionlist.ConsExpressionList.make(Unknown Source)
>           at
> parser.ast.types.expressionlist.ExpressionList.append(Unknown Source)
>           at parser.ast.AstTree.addChild(Unknown Source)
>           at
> org.antlr.runtime.tree.BaseTreeAdaptor.addChild(BaseTreeAdaptor.java:104)
>           at parser.JavaParser.exclusiveOrExpression(Unknown Source)
>           at parser.JavaParser.inclusiveOrExpression(Unknown Source)
>           at parser.JavaParser.conditionalAndExpression(Unknown Source)
>           at parser.JavaParser.conditionalOrExpression(Unknown Source)
>           at parser.JavaParser.conditionalExpression(Unknown Source)
>           at parser.JavaParser.expression(Unknown Source)
>           at parser.JavaParser.variableInitializer(Unknown Source)
>           at parser.JavaParser.variableDeclarator(Unknown Source)
>           at parser.JavaParser.variableDeclarators(Unknown Source)
>           at parser.JavaParser.fieldDeclaration(Unknown Source)
>           at parser.JavaParser.memberDeclaration(Unknown Source)
>           at parser.JavaParser.memberDecl(Unknown Source)
>           at parser.JavaParser.classBodyDeclaration(Unknown Source)
>           at parser.JavaParser.classBody(Unknown Source)
>           at parser.JavaParser.normalClassDeclaration(Unknown Source)
>           at parser.JavaParser.classDeclaration(Unknown Source)
>           at parser.JavaParser.classOrInterfaceDeclaration(Unknown Source)
>           at parser.JavaParser.typeDeclaration(Unknown Source)
>           at parser.JavaParser.compilationUnit(Unknown Source)
>           at Main.main(Unknown Source)
> -------------------------------------------------------------------------------- 
> 
> 
> Here you can find the complete grammar ('&' rule line 1043), and some 
> GOM-generated classes : http://perso.crans.org/~grande/antlr/ .
> 
> 
> Thank you for your help,
> Johan
> 
> 
> 

From dbenn at computer.org  Thu Aug  7 08:37:44 2008
From: dbenn at computer.org (David Benn)
Date: Fri, 8 Aug 2008 01:07:44 +0930
Subject: [antlr-interest] Building v3 csharp examples with antlr-3.1b2
Message-ID: <A99CE516-8BF4-41C2-9ED3-E8AC83DF8141@computer.org>

Hi all

I'm trying to build the v3 csharp examples (from the 3,1 downloads  
page) with antlr-3.1b2, having stored the files in _SharedLibs/ 
mono-2.0 as per the csharp/README.txt

I'm doing this under Mac OS 10.5.4 with mono 1.9.1(_3) and from nant I  
see this:

---
NAnt 0.86 (Build 0.86.2898.0; beta1; 8/12/2007)
Copyright (C) 2001-2007 Gerry Shaw
http://nant.sourceforge.net


BUILD FAILED

Failed to initialize the 'Mono 3.5 Profile' (mono-3.5) target framework.

     Unable to locate 'mono' module using pkg-config. Download the  
Mono development packages from http://www.mono-project.com/downloads/.

For more information regarding the cause of the build failure, run the  
build again in debug mode.

Try 'nant -help' for more information
---

I have tried looking for solutions on the Nant FAQ etc and am not  
getting anywhere.

Using -debug doesn't shed too much more light on this.

I note that I have:

/Library/Frameworks/Mono.framework/Versions/1.9.1/share/NAnt/bin/lib/ 
mono/2.0
/Library/Frameworks/Mono.framework/Versions/1.9.1/share/NAnt/bin/lib/ 
net/2.0

but certainly no 3.5

Any suggestions would be most welcome.

I am not an ANTLR3 novice, but am new to the csharp runtime.

Regards,

David Benn
dbenn at computer.org
0407 261163

"The real voyage of discovery consists not in seeking new landscapes  
but in having new eyes." (Marcel Proust)





From jaluber at gmx.de  Thu Aug  7 09:34:10 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Aug 2008 18:34:10 +0200
Subject: [antlr-interest] Building v3 csharp examples with antlr-3.1b2
In-Reply-To: <A99CE516-8BF4-41C2-9ED3-E8AC83DF8141@computer.org>
References: <A99CE516-8BF4-41C2-9ED3-E8AC83DF8141@computer.org>
Message-ID: <489B2402.2060402@gmx.de>

David Benn schrieb:
> Hi all
> 
> I'm trying to build the v3 csharp examples (from the 3,1 downloads page) 
> with antlr-3.1b2, having stored the files in _SharedLibs/mono-2.0 as per 
> the csharp/README.txt
> 
> I'm doing this under Mac OS 10.5.4 with mono 1.9.1(_3) and from nant I 
> see this:
> 
> ---
> NAnt 0.86 (Build 0.86.2898.0; beta1; 8/12/2007)
> Copyright (C) 2001-2007 Gerry Shaw
> http://nant.sourceforge.net
> 
> 
> BUILD FAILED
> 
> Failed to initialize the 'Mono 3.5 Profile' (mono-3.5) target framework.
> 
>     Unable to locate 'mono' module using pkg-config. Download the Mono 
> development packages from http://www.mono-project.com/downloads/.
> 
> For more information regarding the cause of the build failure, run the 
> build again in debug mode.
> 
> Try 'nant -help' for more information
> ---
> 
> I have tried looking for solutions on the Nant FAQ etc and am not 
> getting anywhere.
> 
> Using -debug doesn't shed too much more light on this.
> 
> I note that I have:
> 
> /Library/Frameworks/Mono.framework/Versions/1.9.1/share/NAnt/bin/lib/mono/2.0 
> 
> /Library/Frameworks/Mono.framework/Versions/1.9.1/share/NAnt/bin/lib/net/2.0 
> 
> 
> but certainly no 3.5
> 
> Any suggestions would be most welcome.

This looks like as if nant loads the incorrect profile. Unfortunately 
I'm not that familiar to nant. Does using -t:mono-2.0 or -k:mono-2.0 
help? Otherwise ask on the Nant mailing list for further instructions as 
for me "nant build" works as advertised.

Johannes
> 
> I am not an ANTLR3 novice, but am new to the csharp runtime.
> 
> Regards,
> 
> David Benn
> dbenn at computer.org
> 0407 261163
> 
> "The real voyage of discovery consists not in seeking new landscapes but 
> in having new eyes." (Marcel Proust)
> 
> 
> 
> 


From himmy070 at gmail.com  Thu Aug  7 09:44:29 2008
From: himmy070 at gmail.com (mark twain)
Date: Thu, 7 Aug 2008 12:44:29 -0400
Subject: [antlr-interest] printing of tokens and output of parser!!
Message-ID: <41fde820808070944y643bdb43q3216f6a9cc4762cd@mail.gmail.com>

Hi,

I am new-bie to ANTLR, so just trying to run example: SimpleCalc code. I am
bit confused as which C runtime library function to use for print the token
stream

    tokens = antlr3CommonTokenStreamSourceNew  (ANTLR3_SIZE_HINT,
                                                    lex->pLexer->tokSource);

     /* Here I want to print the stream of token produced by lexer: what API
Code shoud I use??*/

     parser = SimpleCalcParserNew               (tokens);

     parser  ->expr(parser);

   /* Here I want to print the output of parser, say for addition(3+5)  I
want to see parser ouput:
    what API should I use?? */

Similary, if I take any example grammar for generating AST using C runtime,
please let me know how to display nodes of AST....
Sorry for such stupid doubts but I would be extremely thankful!!

Cheers:)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/190e9074/attachment-0001.html 

From jimi at temporal-wave.com  Thu Aug  7 10:12:51 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 10:12:51 -0700
Subject: [antlr-interest] ANTLR v2,v3
In-Reply-To: <489AE5C3.3040203@gmx.de>
References: <20080807044356.18333.qmail@station198.com>
	<489AE5C3.3040203@gmx.de>
Message-ID: <1218129171.27639.13.camel@jimi>

On Thu, 2008-08-07 at 14:08 +0200, Johannes Luber wrote:

> Anders Karlsson schrieb:
> > Hi
> > 
> > Is there a detailed list with grammar changes from v2 to v3. I have one big 140K v2 grammar to convert and I am really struggling so it would help with such a list. I have the book ANTLR3 ref however there seems to be no helpful summary with the changes. e.g. in v2 you can write a:'t' to get an alias for 't' in v3 you have to write a='t' (if even true).
> 
> Does <http://www.antlr.org/wiki/pages/viewpage.action?pageId=719> help?
> > 
> > I am not so familiar with the v2 grammar and was hoping not having to learn that dialect first when converting.
> > 
> > Running the v2v3 just doesn't do it. The original grammar contains lots of sprinkled in C++ code and generates its own AST tree.  
> > 
> > I have also noticed that the ANTRLWorks1.1.7 crashes when the grammar is big, it suddenly stops updating the screen. Is this a known problem? It happens when I do "Generate code".
> 
> I noticed this behaviour myself, but Jean couldn't reproduce it, I 
> believe. Send him a bug report with the grammar and generate the grammar 
> on the command line.


I think that this happens when the grammar is so far away from being a
good one that the parsers are giving up all the time. Also, turn off the
syntax autoupdate until the grammar is more like a v3 one.

BTW - there are plenty of people that will convert your grammar for a
fee, including me. If you are converting a C++ grammar, then all the
actions (which should really be doing minimum work in actions and
calling external code) will need to be changed. If you know neither the
original C++ model in 2.7, nor the 3.1 C/C++ model, then you will be
doing this conversion for a long time I suspect.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/a2072d52/attachment.html 

From louis at cs.york.ac.uk  Thu Aug  7 10:25:42 2008
From: louis at cs.york.ac.uk (Louis Rose)
Date: Thu, 07 Aug 2008 18:25:42 +0100
Subject: [antlr-interest] gUnit and Error Recovery
Message-ID: <489B3016.4060607@cs.york.ac.uk>

Hi all,

I'm currently considering migrating a large number of unit tests to 
gUnit. I have a query about the way gUnit works with ANTLR's error 
recovery capabilities.

Here's a fragment from an ANTLR grammar that I wish to test:

pkg: NAME^ LBRACKET! (cls)* RBRACKET!;

LBRACKET     : '{';
RBRACKET     : '}';
NAME         : ID_START_LETTER (ID_LETTER)*;

fragment
ID_START_LETTER
     :    '_'
     |    'a'..'z'
     |    'A'..'Z'
     |    '@'
     ;

fragment
ID_LETTER
     :    ID_START_LETTER
     |    '0'..'9'
     |    '-'
     ;


I have the following gUnit tests:

pkg:
     "Families {}" -> "Families"
     "Families {"    FAIL

I would expect the second test to verify that a terminating right 
bracket is required. (i.e. parsing would fail). In fact, the parser 
successfully recognises the input from the second test:

1 failures found:
test2 (pkg, line6) -
expected: FAIL
actual: OK

Tests run: 2, Failures: 1


Is this working as intended? How can I test that all uses of pkg should 
be terminated with a closing bracket?

Many thanks,
Louis Rose.


From jimi at temporal-wave.com  Thu Aug  7 10:32:14 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 10:32:14 -0700
Subject: [antlr-interest] printing of tokens and output of parser!!
In-Reply-To: <41fde820808070944y643bdb43q3216f6a9cc4762cd@mail.gmail.com>
References: <41fde820808070944y643bdb43q3216f6a9cc4762cd@mail.gmail.com>
Message-ID: <1218130334.27639.21.camel@jimi>

On Thu, 2008-08-07 at 12:44 -0400, mark twain wrote:
> Hi, 
>  
> I am new-bie to ANTLR, so just trying to run example: SimpleCalc code.
> I am bit confused as which C runtime library function to use for print
> the token stream
>  
>     tokens = antlr3CommonTokenStreamSourceNew  (ANTLR3_SIZE_HINT, 
> 
> lex->pLexer->tokSource);

Please see the 3.1 examples - this is not the way to access the token
streams any more.
>  
>      /* Here I want to print the stream of token produced by lexer:
> what API Code shoud I use??*/
>  
>      parser = SimpleCalcParserNew               (tokens);
> 
>      parser  ->expr(parser);
>  
>    /* Here I want to print the output of parser, say for addition(3+5)
> I want to see parser ouput:
>     what API should I use?? */
>  
> Similary, if I take any example grammar for generating AST using C
> runtime, please let me know how to display nodes of AST....
> Sorry for such stupid doubts but I would be extremely thankful!


If you use the 3.1 examples, rather than the 3.0 examples you will see
that there are examples of printing the tree and also that the Java
main.c talks about consuming the token stream. I will be adding more
examples in the API docs (please read these) over the next few weeks as
3.1 C runtime is now finished (with some known bugs such as teh debugger
that I might be able to fix before official release).

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/069e580b/attachment.html 

From hjrnunes at student.dei.uc.pt  Thu Aug  7 10:40:38 2008
From: hjrnunes at student.dei.uc.pt (Henrique)
Date: Thu, 7 Aug 2008 18:40:38 +0100
Subject: [antlr-interest] Grammar Problem
Message-ID: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>

Hi guys!
I'm having some trouble with my grammar for parsing CFA files... As I posted
before, I'm trying to convert their Yacc grammar to ANTLR and now I'm having
some trouble. I suspect it's the left recursions or rather the way I got
ridden of them.
The grammar is attached and can also be seen
here<http://hjrnunes.googlepages.com/antlrgrammar>
.

here's the rules I'm having trouble with:

rule    :    RULE USER_STRING LEFTBRACKET buncha_replacements? RIGHTBRACKET
    |    RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements?
RIGHTBRACKET
    ;

buncha_replacements
    :    (replacement)+
    ;

replacement
    :    USER_STRING modification
    |    USER_STRING STAR modification USER_STRING modification
    ;

Here's an example of what it should parse:

rule Foo {
    CIRCLE { b 1 }
    CIRCLE {}
}

Now I'm getting a MismatchedTokenException: mismatched input 'CIRCLE'
expecting RIGHTBRACKET in the first alternative.
Here are the relevant original YACC rules:

rule:
        RULE USER_STRING LEFTBRACKET buncha_replacements RIGHTBRACKET
        |
        RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements
RIGHTBRACKET
        ;

buncha_replacements:
        buncha_replacements replacement
        |
        ;

The strange thing - at least for me is that the background rule that is
quite similar works like a charm:

background
    :    BACKGROUND LEFTBRACKET buncha_color_adjustments? RIGHTBRACKET
    ;

buncha_color_adjustments
    :    (color_adjustment)+
    ;

It should work almost similarly...
What would be the right way to convert such left recursive rules into
something appropriate for ANTLR?
I hope you guys can shed some insight on this... I'm somewhat of a newbie
concerning parsing and ANTLR.
Thanks!

Henrique Nunes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/f4cad9e6/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cfdg.g
Type: application/octet-stream
Size: 3277 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/f4cad9e6/attachment.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/f4cad9e6/attachment.txt 

From jaluber at gmx.de  Thu Aug  7 10:47:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Aug 2008 19:47:58 +0200
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
Message-ID: <489B354E.8000801@gmx.de>

Henrique schrieb:
> Hi guys!
> I'm having some trouble with my grammar for parsing CFA files... As I 
> posted before, I'm trying to convert their Yacc grammar to ANTLR and now 
> I'm having some trouble. I suspect it's the left recursions or rather 
> the way I got ridden of them.
> The grammar is attached and can also be seen here 
> <http://hjrnunes.googlepages.com/antlrgrammar>.
> 
> here's the rules I'm having trouble with:
> 
> rule    :    RULE USER_STRING LEFTBRACKET buncha_replacements? RIGHTBRACKET
>     |    RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements? 
> RIGHTBRACKET
>     ;
> 
> buncha_replacements
>     :    (replacement)+
>     ;
>    
> replacement
>     :    USER_STRING modification
>     |    USER_STRING STAR modification USER_STRING modification
>     ;
> 
> Here's an example of what it should parse:
> 
> rule Foo {
>     CIRCLE { b 1 }
>     CIRCLE {}
> }
> 
> Now I'm getting a MismatchedTokenException: mismatched input 'CIRCLE' 
> expecting RIGHTBRACKET in the first alternative.
> Here are the relevant original YACC rules:
> 
> rule:
>         RULE USER_STRING LEFTBRACKET buncha_replacements RIGHTBRACKET
>         |
>         RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements 
> RIGHTBRACKET
>         ;
> 
> buncha_replacements:
>         buncha_replacements replacement
>         |
>         ;
> 
> The strange thing - at least for me is that the background rule that is 
> quite similar works like a charm:
> 
> background
>     :    BACKGROUND LEFTBRACKET buncha_color_adjustments? RIGHTBRACKET
>     ;
> 
> buncha_color_adjustments
>     :    (color_adjustment)+
>     ;
> 
> It should work almost similarly...
> What would be the right way to convert such left recursive rules into 
> something appropriate for ANTLR?
> I hope you guys can shed some insight on this... I'm somewhat of a 
> newbie concerning parsing and ANTLR.
> Thanks!
> 
> Henrique Nunes
> 
Did you use the approach outlined in 
<http://antlr.org/wiki/display/ANTLR3/Left-Recursion+Removal>?

Johannes

From jimi at temporal-wave.com  Thu Aug  7 10:53:56 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 10:53:56 -0700
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
Message-ID: <1218131636.27639.39.camel@jimi>

On Thu, 2008-08-07 at 18:40 +0100, Henrique wrote:
> Hi guys!
> I'm having some trouble with my grammar for parsing CFA files... As I
> posted before, I'm trying to convert their Yacc grammar to ANTLR and
> now I'm having some trouble. I suspect it's the left recursions or
> rather the way I got ridden of them.
> The grammar is attached and can also be seen here.
> 
> here's the rules I'm having trouble with:
> 
> rule    :    RULE USER_STRING LEFTBRACKET buncha_replacements?
> RIGHTBRACKET
>     |    RULE USER_STRING USER_RATIONAL LEFTBRACKET
> buncha_replacements? RIGHTBRACKET
>     ;


Try

rule: RULE USER_STRING (USER_RATIONAL {set flag to say this is here or
something} )? LEFTBRACKET buncha_replacements? RIGHTBRACKET;

     Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/83b7d817/attachment.html 

From parrt at cs.usfca.edu  Thu Aug  7 11:11:05 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 11:11:05 -0700
Subject: [antlr-interest] Tree Grammar Syntax?
In-Reply-To: <000001c8f7a1$73d567a0$5b8036e0$@com>
References: <000001c8f7a1$73d567a0$5b8036e0$@com>
Message-ID: <AC731741-F157-4765-9801-6AECA7FF408B@cs.usfca.edu>

yes, but must use subrule at moment not tree ( ^(...) )?
Ter
On Aug 6, 2008, at 1:50 AM, Foust wrote:

> The DAR is pretty sparse about the details of using a tree grammar  
> for more than anything but the simplest cases of printing some nodes.
>
> (1)    Can subtrees be matched optionally? (Like the T_MODIFIERS  
> subtree below)
>
> stmt       : ^(T_REFERENCE  IDENTIFIER param? ^(T_MODIFIERS  
> modifiers)? n+=IDENTIFIER*) ;
>
> or is this explicitly forbidden, requiring the subtree expression to  
> be broken out into a separate rule?
>
> (2)    How are the * and + expressions accessed? Is the += operator  
> used to turn them into an ArrayList, just like in the parser?
>
> Brent
>


From parrt at cs.usfca.edu  Thu Aug  7 11:11:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 11:11:55 -0700
Subject: [antlr-interest] ANTLRWorks getting confused with import
In-Reply-To: <3b7c64070808060612u3c377bdfp3f23ad6686bfc8ab@mail.gmail.com>
References: <3b7c64070808050051r6d0061e8jdb3cb8278acc808d@mail.gmail.com>
	<1B49A512-7EEC-4818-BD7C-FA2A0B821E12@cs.usfca.edu>
	<3b7c64070808060612u3c377bdfp3f23ad6686bfc8ab@mail.gmail.com>
Message-ID: <08332790-5013-4C07-B84A-DCEE052E1D47@cs.usfca.edu>

I'll beWorking on AW with Jean and a student this fall. Not sure when  
AW we'll be ready, but soon I hope.
Ter
On Aug 6, 2008, at 6:12 AM, Laurent Caillette wrote:

> Hi Terence,
>
> Thanks, it helps me to know I did nothing wrong.
> As import was my primary reason to migrate to 3.1 I'll stick to 3.0.1
> until the fix. Is there some Jira issue I can watch for this?
>
> Thanks for ANTLR and ANTLRWorks, as a software product it's one my
> best surprises this last year.
>
> c.
>
> On Tue, Aug 5, 2008 at 8:05 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> hi i noticed an issue also.
>> Ter


From parrt at cs.usfca.edu  Thu Aug  7 11:15:38 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 11:15:38 -0700
Subject: [antlr-interest] Possible bug in (not) setting TokenStartIndex
	and TokenStopIndex during AST rewrites
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E001@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E001@Bloodymary.ironwillgames.com>
Message-ID: <9E6FD44E-D729-4EBE-A454-14569A49169B@cs.usfca.edu>

Interesting. I think I only set the start and stop information at the  
root for rule because that is the only information I have tracked.
Ter
On Aug 6, 2008, at 11:34 AM, Sam Harwell wrote:

> If you take the following rule:
>
> postfix_expression
> 	:	(	IDENTIFIER
> 			-> ^(IDENTIFIER)
> 		)
> 		(	'.' IDENTIFIER
> 			-> ^(AST_DIRECT_MEMBER $postfix_expression
> IDENTIFIER)
> 		)*
> 	;
>
>
> And run it on the following input:
>
> a.b.c
>
> You get the following AST:
>
> AST_DIRECT_MEMBER /* has Token Start/Stop Info set */
> - AST_DIRECT_MEMBER /* DOES NOT have Token Start/Stop Info set! */
> -- a /* has Token Start/Stop Info set */
> -- b /* has Token Start/Stop Info set */
> - c /* has Token Start/Stop Info set */
>
>


From parrt at cs.usfca.edu  Thu Aug  7 11:17:00 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 11:17:00 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
Message-ID: <A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>


On Aug 6, 2008, at 3:23 PM, Oren Ben-Kiki wrote:

> The attached .g file causes ANTLR version 3.0.1 to generate invalid
> Java (also attached, gzipped).
>
> See for example line 1758 - where is the "n" rule parameter variable
> supposed to come from? Could it be that back-tracking and rule
> parameters don't mix?

yep.  youHave to be careful; some discussions about this in the  
archives or in the book.
Ter

From parrt at cs.usfca.edu  Thu Aug  7 11:17:48 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 11:17:48 -0700
Subject: [antlr-interest] why warp does not work? (String Template)
In-Reply-To: <000401c8f832$33a60270$1300a8c0@alien>
References: <mailman.23886.1218070013.2486.antlr-interest@antlr.org>
	<000401c8f832$33a60270$1300a8c0@alien>
Message-ID: <0AE4EC27-0EA8-4F73-86A7-F33136E5E7FD@cs.usfca.edu>

ST does not split individual attributes if I remember correctly.
Ter
On Aug 6, 2008, at 7:06 PM, gaochunguang wrote:

>  StringTemplate st = new StringTemplate("<chars; wrap>",  
> AngleBracketTemplateLexer.class);
>  st.setAttribute("chars", "a,b,c,d,e,f,g,h,i,j,k");
>  System.out.println(st.toString(5));
>
> ouput is "a,b,c,d,e,f,g,h,i,j,k". why "warp" does not work?


From hjrnunes at student.dei.uc.pt  Thu Aug  7 11:20:20 2008
From: hjrnunes at student.dei.uc.pt (Henrique)
Date: Thu, 7 Aug 2008 19:20:20 +0100
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <1218131636.27639.39.camel@jimi>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
	<1218131636.27639.39.camel@jimi>
Message-ID: <ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.com>

Thanks for your replies guys!
Jim, I tried your suggestion but I get the same error...
Johannes, I believe I followed the approach suggested but the thing is I
need buncha_replacements optional...
Furthermore, when I try to parse this:

rule Foo {
    CIRCLE {}
}

I works good. So I'm guessing it's got something to do with me not making
buncha_adjustments optional the right way:

rule    : RULE USER_STRING (USER_RATIONAL)? LEFTBRACKET buncha_replacements?
RIGHTBRACKET;


buncha_replacements
    :    (replacement)+
    ;

replacement
    :    USER_STRING modification
    |    USER_STRING STAR modification USER_STRING modification
    ;

modification
    :    LEFTBRACKET buncha_adjustments? RIGHTBRACKET
    |    LEFTBRACE buncha_adjustments? RIGHTBRACE
    ;

buncha_adjustments
    :    (adjustment)+
    ;

Any more suggestions?
Thanks!

Henrique Nunes


On Thu, Aug 7, 2008 at 6:53 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  On Thu, 2008-08-07 at 18:40 +0100, Henrique wrote:
>
> Hi guys!
> I'm having some trouble with my grammar for parsing CFA files... As I
> posted before, I'm trying to convert their Yacc grammar to ANTLR and now I'm
> having some trouble. I suspect it's the left recursions or rather the way I
> got ridden of them.
> The grammar is attached and can also be seen here<http://hjrnunes.googlepages.com/antlrgrammar>
> .
>
> here's the rules I'm having trouble with:
>
> rule    :    RULE USER_STRING LEFTBRACKET buncha_replacements? RIGHTBRACKET
>     |    RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements?
> RIGHTBRACKET
>     ;
>
>
> Try
>
> rule: RULE USER_STRING (USER_RATIONAL {set flag to say this is here or
> something} )? LEFTBRACKET buncha_replacements? RIGHTBRACKET;
>
>      Jim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/e613cdfc/attachment.html 

From vitaka at gmail.com  Thu Aug  7 11:26:45 2008
From: vitaka at gmail.com (=?ISO-8859-1?Q?V=EDctor_Manuel_S=E1nchez_Cartagena?=)
Date: Thu, 7 Aug 2008 20:26:45 +0200
Subject: [antlr-interest] Bug in ANTLRv3.g
In-Reply-To: <08C59DF2-A769-43FD-A6CA-CED2121A13E3@cs.usfca.edu>
References: <e77e34270807291053l4349c4f1jd46a2452583f707c@mail.gmail.com>
	<EBBA3754-3090-4FFD-87DF-0DB68565D060@cs.usfca.edu>
	<e77e34270807291433h29e75d4eqa105f002d35101e6@mail.gmail.com>
	<08C59DF2-A769-43FD-A6CA-CED2121A13E3@cs.usfca.edu>
Message-ID: <e77e34270808071126g31c2b95co55dbc03c9918adf2@mail.gmail.com>

Thanks Terr. I modified the grammar as you suggested and it doesn't fail
now.
But I discovered a new bug:

If I add a "header" action with a comment inside, I get the following error:

BR.recoverFromMismatchedToken
line 6:0 mismatched input '@' expecting ACTION

But if I remove the comment, I get no errors.

This is the grammar:
grammar plp2;
@header
{    //comment
    import java.lang.String;
}
@members {
  public String refactor_rename_this;
  public String refactor_rename_to;
}
s returns [String value]
    :
                c[""]
    ;
c[String ambito] returns [String value]
    :    'class' ID
        {
                      $value= "class " + $ID.text + " n;" + "} n";
                }
    ;
ID    :    ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')*
    ;
ENTERO    :    ('0'..'9')+
    ;

2008/7/30 Terence Parr <parrt at cs.usfca.edu>

> ooops. try this:
>
> ragment
> NESTED_ACTION :
>        '{'
>        (       options {greedy=false; k=2;}
>        :       NESTED_ACTION
>        |       SL_COMMENT
>        |       ML_COMMENT
>        |       ACTION_STRING_LITERAL
>        |       ACTION_CHAR_LITERAL
>        |       .
>        )*
>        '}'
>   ;
> Ter
>
> On Jul 29, 2008, at 2:33 PM, V?ctor Manuel S?nchez Cartagena wrote:
>
>  Thank you very much. I changed the rule and now it doesn't fail in: c[""]
>> But it still fails in: $value= "class " + $ID.text + " n;" + "}n";
>>
>> In fact, ANTLR gives an error in every string that starts with }.
>>
>> In this case, I get the following output:
>>
>> line 26:0 mismatched character '<EOF>' expecting '"'
>> line 19:62 no viable alternative at input 'n'
>> BR.recoverFromMismatchedToken
>>
>>
>> 2008/7/29 Terence Parr <parrt at cs.usfca.edu>
>> Ooops. change rule
>>
>> fragment
>> ACTION_STRING_LITERAL
>>       :       '"' (ACTION_ESC|~('\\'|'"'))* '"'
>>       ;
>>
>> + to *
>>
>> Ter
>>
>>
>> On Jul 29, 2008, at 10:53 AM, V?ctor Manuel S?nchez Cartagena wrote:
>>
>> I think I have found a bug in the ANTLRv3.g grammar.
>> I build the lexer and the parser with ANTLR, and when I try to parse the
>>  following grammar, it fails, although the grammar is correct.
>>
>> grammar plp2;
>> @members {
>>  public String refactor_rename_this;
>>  public String refactor_rename_to;
>> }
>> s returns [String value]
>>   :
>>               // It doesn't fail:
>>                c["aa"]
>>               // It fails:
>>               //c[""]
>>   ;
>> c[String ambito] returns [String value]
>>   :    'class' ID
>>       {
>>                    // It doesn't fail:
>>                     $value= "class " + $ID.text + " n;" + "{}n";
>>                    // It fails:
>>                    // $value= "class " + $ID.text + " n;" + "}n";
>>               }
>>   ;
>> ID    :    ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')*
>>   ;
>> ENTERO    :    ('0'..'9')+
>>   ;
>>
>> Could anyone help me to find out what's wrong in ANTLRv3.g?
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/0fa20bd8/attachment-0001.html 

From leon.antlr at mac.com  Thu Aug  7 11:33:30 2008
From: leon.antlr at mac.com (Leon Su)
Date: Thu, 07 Aug 2008 11:33:30 -0700
Subject: [antlr-interest] gUnit and Error Recovery
In-Reply-To: <489B3016.4060607@cs.york.ac.uk>
References: <489B3016.4060607@cs.york.ac.uk>
Message-ID: <5002B7E9-A631-4788-9DDB-9C5A582A47EF@mac.com>

Hi Louis,

I just quickly tested the grammar fragment you provided:
remove (cls)* from pkg, and add WS:( ' ' | '\t' | '\r' | '\n' )+  
{$channel = HIDDEN;};

tested by gUnit1.0.2+ANTLR3.1b2 and gUnit-1.0.1+ANTLR3.0.1
and both got the failed 2nd test as we expected ( and received the  
error msg from ANTLR: line 0:-1 missing RBRACKET at '<EOF>' )

If you're using gunit-1.0.1 currently, don't forget to download the  
updated gunit-1.0.1.jar Version2 on the wiki page.
Please let me know if you any problem.

Leon

On Aug 7, 2008, at 10:25 AM, Louis Rose wrote:

> Hi all,
>
> I'm currently considering migrating a large number of unit tests to  
> gUnit. I have a query about the way gUnit works with ANTLR's error  
> recovery capabilities.
>
> Here's a fragment from an ANTLR grammar that I wish to test:
>
> pkg: NAME^ LBRACKET! (cls)* RBRACKET!;
>
> LBRACKET     : '{';
> RBRACKET     : '}';
> NAME         : ID_START_LETTER (ID_LETTER)*;
>
> fragment
> ID_START_LETTER
>     :    '_'
>     |    'a'..'z'
>     |    'A'..'Z'
>     |    '@'
>     ;
>
> fragment
> ID_LETTER
>     :    ID_START_LETTER
>     |    '0'..'9'
>     |    '-'
>     ;
>
>
> I have the following gUnit tests:
>
> pkg:
>     "Families {}" -> "Families"
>     "Families {"    FAIL
>
> I would expect the second test to verify that a terminating right  
> bracket is required. (i.e. parsing would fail). In fact, the parser  
> successfully recognises the input from the second test:
>
> 1 failures found:
> test2 (pkg, line6) -
> expected: FAIL
> actual: OK
>
> Tests run: 2, Failures: 1
>
>
> Is this working as intended? How can I test that all uses of pkg  
> should be terminated with a closing bracket?
>
> Many thanks,
> Louis Rose.
>


From parrt at cs.usfca.edu  Thu Aug  7 12:25:59 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 12:25:59 -0700
Subject: [antlr-interest] Internal error in 3.1;
	also, context-sensitive keyword sets
In-Reply-To: <407c840e0808052358j73ff3421x4f3cbd9a99b27fe9@mail.gmail.com>
References: <407c840e0808051425wf9206afu10ad50cddc62a34e@mail.gmail.com>
	<407c840e0808052358j73ff3421x4f3cbd9a99b27fe9@mail.gmail.com>
Message-ID: <F961DEC9-36D4-4F8D-82C1-AC565DF236F5@cs.usfca.edu>

Fixed.
Ter
On Aug 5, 2008, at 11:58 PM, Jesse McGrew wrote:

> On Tue, Aug 5, 2008 at 2:25 PM, Jesse McGrew <jmcgrew at gmail.com>  
> wrote:
>> java.lang.NullPointerException
>> org 
>> .antlr 
>> .analysis 
>> .NFAToDFAConverter 
>> .getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1601)
> ...
>
> I've narrowed down the code that causes this internal error:
>
> ======================================
> grammar FrankBug;
>
> options
> {
> 	output = AST;
> }
>
> ID	:	('a'..'z' | 'A'..'Z')+;
> 	
> normalExpr
> 	:	expression;
>
> expression
> 	:	functionExpression
> 			({!noComma}?	(',' functionExpression)* )?
> 	;
>
> functionExpression
> 	:	ID
> 			({!noFuncCall}?	('(' expression ')')? )?
> 	;
> ======================================
>
> If I remove either of the semantic predicates, or the normalExpr rule,
> the exception goes away.
>
> Jesse


From oren at ben-kiki.org  Thu Aug  7 12:37:54 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Thu, 7 Aug 2008 12:37:54 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
Message-ID: <200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>

On Thu, Aug 7, 2008 at 11:17 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> On Aug 6, 2008, at 3:23 PM, Oren Ben-Kiki wrote:
>> See for example line 1758 - where is the "n" rule parameter variable
>> supposed to come from? Could it be that back-tracking and rule
>> parameters don't mix?
>
> yep.  youHave to be careful; some discussions about this in the archives or
> in the book.
> Ter

I didn't see this warning in the book... Now that I am aware of it, I
can avoid the problem by turning of auto-backtracking and manually
adding syntactic predicates. Thanks!

There's still the question of the huge redundant "if" statements. It
seems like some sort of exponential explosion of combinations of
semantic predicates... that is, (T1 || T2 || ..) where each T<i> is
(S1 && S2 && ...) for some semantic predicates S<i>.

The resulting "if" statement is *huge*. There are 1916 T<i> tests in
this "if", but they are all repetitions of only 6 unique tests. And of
these six, two are redundant, where T<i> == (T<j> && <more stuff>).
Also all the T<i> tests contain the same last S<j> test, which could
have been factored out. So we are talking 84K bytes of source code to
perform 4 simple tests that could be coded in 130 bytes. Yikes! In
theory the optimizer/JIT should be able to make this go away, but
given one of the semantic tests is a function call... well...

Is this also a "known" problem? Is there anything I can do to avoid
this explosion?

Thanks,

   Oren Ben-Kiki

From oren at ben-kiki.org  Thu Aug  7 12:54:49 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Thu, 7 Aug 2008 12:54:49 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
Message-ID: <200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>

On Thu, Aug 7, 2008 at 12:37 PM, Oren Ben-Kiki <oren at ben-kiki.org> wrote:
> I didn't see this warning in the book... Now that I am aware of it, I
> can avoid the problem by turning of auto-backtracking and manually
> adding syntactic predicates. Thanks!

I spoke in haste... it seems it is not possible to use rule parameters
in syntactic predicates :-(
It seems as though parameters were envisioned as carrying context only
to actions;
the rules themselves (that is, the valid input syntax) is not expected
to be affected by them.
This means I am SOL - my syntax _does_ depend on the value of the parameters.
Is this really the case?

Oren.

From parrt at cs.usfca.edu  Thu Aug  7 13:10:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 13:10:24 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
Message-ID: <A02327CD-0A57-435D-A0EA-918F58CDCDC9@cs.usfca.edu>


On Aug 7, 2008, at 12:37 PM, Oren Ben-Kiki wrote:

> On Thu, Aug 7, 2008 at 11:17 AM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> On Aug 6, 2008, at 3:23 PM, Oren Ben-Kiki wrote:
>>> See for example line 1758 - where is the "n" rule parameter variable
>>> supposed to come from? Could it be that back-tracking and rule
>>> parameters don't mix?
>>
>> yep.  youHave to be careful; some discussions about this in the  
>> archives or
>> in the book.
>> Ter
>
> I didn't see this warning in the book... Now that I am aware of it, I
> can avoid the problem by turning of auto-backtracking and manually
> adding syntactic predicates. Thanks!
>
> There's still the question of the huge redundant "if" statements. It
> seems like some sort of exponential explosion of combinations of
> semantic predicates... that is, (T1 || T2 || ..) where each T<i> is
> (S1 && S2 && ...) for some semantic predicates S<i>.

Yeah,That happens also... I have to optimize. would love to see a very  
small example that generated an efficient predicate tests.

Ter

From parrt at cs.usfca.edu  Thu Aug  7 13:11:10 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 13:11:10 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
Message-ID: <0FC93044-619D-4320-AC5A-4DCF80BEC341@cs.usfca.edu>

TheProblem is that predicates can be hoisted out of their original  
rule...  If you put a {} blank action in front of the predicate, it  
will not be hoistd.
T
On Aug 7, 2008, at 12:54 PM, Oren Ben-Kiki wrote:

> On Thu, Aug 7, 2008 at 12:37 PM, Oren Ben-Kiki <oren at ben-kiki.org>  
> wrote:
>> I didn't see this warning in the book... Now that I am aware of it, I
>> can avoid the problem by turning of auto-backtracking and manually
>> adding syntactic predicates. Thanks!
>
> I spoke in haste... it seems it is not possible to use rule parameters
> in syntactic predicates :-(
> It seems as though parameters were envisioned as carrying context only
> to actions;
> the rules themselves (that is, the valid input syntax) is not expected
> to be affected by them.
> This means I am SOL - my syntax _does_ depend on the value of the  
> parameters.
> Is this really the case?
>
> Oren.


From canjren at yahoo.com  Thu Aug  7 13:57:43 2008
From: canjren at yahoo.com (Can Zhen)
Date: Thu, 7 Aug 2008 13:57:43 -0700 (PDT)
Subject: [antlr-interest] Can antlr-3.0.1 work with stringtemplate-3.2?
Message-ID: <867421.78902.qm@web39701.mail.mud.yahoo.com>

Can antlr-3.0.1 work with stringtemplate-3.2 instead of stringtemplate-3.1b1?
?
Thanks!


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/4da25b1c/attachment.html 

From parrt at cs.usfca.edu  Thu Aug  7 14:08:38 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Aug 2008 14:08:38 -0700
Subject: [antlr-interest] Can antlr-3.0.1 work with stringtemplate-3.2?
In-Reply-To: <867421.78902.qm@web39701.mail.mud.yahoo.com>
References: <867421.78902.qm@web39701.mail.mud.yahoo.com>
Message-ID: <AB54885A-099F-4B2C-A71D-5C3E24724183@cs.usfca.edu>

should work.
Ter
On Aug 7, 2008, at 1:57 PM, Can Zhen wrote:

> Can antlr-3.0.1 work with stringtemplate-3.2 instead of  
> stringtemplate-3.1b1?
>
> Thanks!
>


From antlr at mirality.co.nz  Thu Aug  7 14:25:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 09:25:05 +1200
Subject: [antlr-interest] tree construction, associative operators,
 NullPointerException
In-Reply-To: <489AFB0A.6020506@crans.org>
References: <48982811.90600@crans.org>
 <489AFB0A.6020506@crans.org>
Message-ID: <20080807212517.022EA11EB01@www.antlr.org>

At 01:39 8/08/2008, Johan Grande wrote:
 >The solution I use until now (non binary trees) is not at all
 >satisfying, because not only I would have binary trees, but my
 >"solution" doesn't work for rules with more than one operator, 
for
 >example :
 >,----
 >| equalityExpression
 >|     :   instanceOfExpression ( ('==' | '!=') 
instanceOfExpression
 >)*
 >|     ;
 >`----

If you change that to use ('==' | '!=')^ (note the extra caret) 
then the operator will become the root node -- this will also 
automatically produce a left-associative binary tree.


From antlr at mirality.co.nz  Thu Aug  7 14:39:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 09:39:05 +1200
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.co
 m>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
	<1218131636.27639.39.camel@jimi>
	<ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.com>
Message-ID: <20080807213915.A8FB011ED49@www.antlr.org>

At 06:20 8/08/2008, Henrique wrote:
>rule    : RULE USER_STRING (USER_RATIONAL)? LEFTBRACKET 
>buncha_replacements? RIGHTBRACKET;
>
>buncha_replacements
>     :    (replacement)+
>     ;
>
>replacement
>     :    USER_STRING modification
>     |    USER_STRING STAR modification USER_STRING modification
>     ;
>
>modification
>     :    LEFTBRACKET buncha_adjustments? RIGHTBRACKET
>     |    LEFTBRACE buncha_adjustments? RIGHTBRACE
>     ;
>
>buncha_adjustments
>     :    (adjustment)+
>     ;

There is one remaining point of left-side ambiguity -- both alts 
in the 'replacement' rule start with the same token.  ANTLR should 
be able to cope with this just fine, but it wouldn't hurt to help 
it out a little:

replacement
     :    USER_STRING
          (    modification
          |    STAR modification USER_STRING modification
          )
     ;

Also: are 'buncha_replacements' and 'buncha_adjustments' *always* 
optional?  If so, then you could replace the + in those rules with 
a * and then remove all the ?s.  Shouldn't make any actual 
difference to parsing, but you might find it tidier.

But getting back to the mismatch errors you're getting -- the most 
likely candidate here is that the input token stream isn't what 
you're expecting.  Try dumping the tokens that the lexer is 
generating and make sure that they make sense, first of all. 


From jimi at temporal-wave.com  Thu Aug  7 14:47:58 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 14:47:58 -0700
Subject: [antlr-interest] Possible bug in (not) setting
	TokenStartIndex	and TokenStopIndex during AST rewrites
In-Reply-To: <9E6FD44E-D729-4EBE-A454-14569A49169B@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E001@Bloodymary.ironwillgames.com>
	<9E6FD44E-D729-4EBE-A454-14569A49169B@cs.usfca.edu>
Message-ID: <1218145678.6138.21.camel@jimi>

On Thu, 2008-08-07 at 11:15 -0700, Terence Parr wrote:

> Interesting. I think I only set the start and stop information at the  
> root for rule because that is the only information I have tracked.


YEs. I usually throw the subsequent '.' xxx etc into a subrule, which
causes the subrule to set the boundaries. However, I don't usually code
this type of construct in a serial fashion like this - it makes it no
easier to handle, even if it is easier to see. So, is there a reason you
cannot do:


pe: IDENTIFIER (DOT^ IDENTIFIER)*
 ;

This gives a natural progress down a tree adn lets you accumulate symbol
table references as you descend it. The tokens then all keep their
locations too.

Jim

> Ter
> On Aug 6, 2008, at 11:34 AM, Sam Harwell wrote:
> 
> > If you take the following rule:
> >
> > postfix_expression
> > 	:	(	IDENTIFIER
> > 			-> ^(IDENTIFIER)
> > 		)
> > 		(	'.' IDENTIFIER
> > 			-> ^(AST_DIRECT_MEMBER $postfix_expression
> > IDENTIFIER)
> > 		)*
> > 	;
> >
> >
> > And run it on the following input:
> >
> > a.b.c
> >
> > You get the following AST:
> >
> > AST_DIRECT_MEMBER /* has Token Start/Stop Info set */
> > - AST_DIRECT_MEMBER /* DOES NOT have Token Start/Stop Info set! */
> > -- a /* has Token Start/Stop Info set */
> > -- b /* has Token Start/Stop Info set */
> > - c /* has Token Start/Stop Info set */
> >
> >
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/49f4caeb/attachment-0001.html 

From jimi at temporal-wave.com  Thu Aug  7 14:52:35 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 14:52:35 -0700
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.com>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
	<1218131636.27639.39.camel@jimi>
	<ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.com>
Message-ID: <1218145955.6138.25.camel@jimi>

On Thu, 2008-08-07 at 19:20 +0100, Henrique wrote:
> Thanks for your replies guys!
> Jim, I tried your suggestion but I get the same error...
> Johannes, I believe I followed the approach suggested but the thing is
> I need buncha_replacements optional...
> Furthermore, when I try to parse this:


Would probably need to see your whole grammar and sample input then to
be honest.

Jim

> 
> rule Foo {
>     CIRCLE {}
> }
> 
> I works good. So I'm guessing it's got something to do with me not
> making buncha_adjustments optional the right way:
> 
> rule    : RULE USER_STRING (USER_RATIONAL)? LEFTBRACKET
> buncha_replacements? RIGHTBRACKET;
> 
> 
> 
>     
> buncha_replacements
>     :    (replacement)+
>     ;
>     
> replacement
>     :    USER_STRING modification
>     |    USER_STRING STAR modification USER_STRING modification
>     ;
>     
> 
> 
> modification
>     :    LEFTBRACKET buncha_adjustments? RIGHTBRACKET
>     |    LEFTBRACE buncha_adjustments? RIGHTBRACE
>     ;
>     
> buncha_adjustments
>     :    (adjustment)+
>     ;
> 
> Any more suggestions?
> Thanks!
> 
> Henrique Nunes
> 
> 
> 
> On Thu, Aug 7, 2008 at 6:53 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> 
>         On Thu, 2008-08-07 at 18:40 +0100, Henrique wrote: 
>         
>         > Hi guys!
>         > I'm having some trouble with my grammar for parsing CFA
>         > files... As I posted before, I'm trying to convert their
>         > Yacc grammar to ANTLR and now I'm having some trouble. I
>         > suspect it's the left recursions or rather the way I got
>         > ridden of them.
>         > The grammar is attached and can also be seen here.
>         > 
>         > here's the rules I'm having trouble with:
>         > 
>         > rule    :    RULE USER_STRING LEFTBRACKET
>         > buncha_replacements? RIGHTBRACKET
>         >     |    RULE USER_STRING USER_RATIONAL LEFTBRACKET
>         > buncha_replacements? RIGHTBRACKET
>         >     ;
>         
>         
>         
>         
>         Try
>         
>         rule: RULE USER_STRING (USER_RATIONAL {set flag to say this is
>         here or something} )? LEFTBRACKET buncha_replacements?
>         RIGHTBRACKET;
>         
>              Jim
> 
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/3b3ceace/attachment.html 

From jimi at temporal-wave.com  Thu Aug  7 14:58:27 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 07 Aug 2008 14:58:27 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <0FC93044-619D-4320-AC5A-4DCF80BEC341@cs.usfca.edu>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<0FC93044-619D-4320-AC5A-4DCF80BEC341@cs.usfca.edu>
Message-ID: <1218146307.6138.28.camel@jimi>

On Thu, 2008-08-07 at 13:11 -0700, Terence Parr wrote:

> TheProblem is that predicates can be hoisted out of their original  
> rule...  If you put a {} blank action in front of the predicate, it  
> will not be hoistd.



You can also use scopes rather than rule parameters. Scopes are globally aaviable to the parser.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/cf0541bd/attachment.html 

From dbenn at computer.org  Thu Aug  7 15:45:35 2008
From: dbenn at computer.org (David Benn)
Date: Fri, 8 Aug 2008 08:15:35 +0930
Subject: [antlr-interest] Building v3 csharp examples with antlr-3.1b2
In-Reply-To: <489B2402.2060402@gmx.de>
References: <A99CE516-8BF4-41C2-9ED3-E8AC83DF8141@computer.org>
	<489B2402.2060402@gmx.de>
Message-ID: <4789A200-5FBE-4D8C-A95C-507158709DE9@computer.org>

Hi Johannes

Thanks for your reply. No, -k:mono-2.0 or -t:mono-2.0 have no effect.  
I guess I'll ask on the nant list. I would have thought this was not  
an uncommon problem.

Regards,

David

On 08/08/2008, at 2:04 AM, Johannes Luber wrote:

> David Benn schrieb:
>> Hi all
>> I'm trying to build the v3 csharp examples (from the 3,1 downloads  
>> page) with antlr-3.1b2, having stored the files in _SharedLibs/ 
>> mono-2.0 as per the csharp/README.txt
>> I'm doing this under Mac OS 10.5.4 with mono 1.9.1(_3) and from  
>> nant I see this:
>> ---
>> NAnt 0.86 (Build 0.86.2898.0; beta1; 8/12/2007)
>> Copyright (C) 2001-2007 Gerry Shaw
>> http://nant.sourceforge.net
>> BUILD FAILED
>> Failed to initialize the 'Mono 3.5 Profile' (mono-3.5) target  
>> framework.
>>    Unable to locate 'mono' module using pkg-config. Download the  
>> Mono development packages from http://www.mono-project.com/ 
>> downloads/.
>> For more information regarding the cause of the build failure, run  
>> the build again in debug mode.
>> Try 'nant -help' for more information
>> ---
>> I have tried looking for solutions on the Nant FAQ etc and am not  
>> getting anywhere.
>> Using -debug doesn't shed too much more light on this.
>> I note that I have:
>> /Library/Frameworks/Mono.framework/Versions/1.9.1/share/NAnt/bin/ 
>> lib/mono/2.0 /Library/Frameworks/Mono.framework/Versions/1.9.1/ 
>> share/NAnt/bin/lib/net/2.0 but certainly no 3.5
>> Any suggestions would be most welcome.
>
> This looks like as if nant loads the incorrect profile.  
> Unfortunately I'm not that familiar to nant. Does using -t:mono-2.0  
> or -k:mono-2.0 help? Otherwise ask on the Nant mailing list for  
> further instructions as for me "nant build" works as advertised.
>
> Johannes
>> I am not an ANTLR3 novice, but am new to the csharp runtime.
>> Regards,
>> David Benn
>> dbenn at computer.org
>> 0407 261163
>> "The real voyage of discovery consists not in seeking new  
>> landscapes but in having new eyes." (Marcel Proust)
>

Regards,

David Benn
dbenn at computer.org
0407 261163

"The real voyage of discovery consists not in seeking new landscapes  
but in having new eyes." (Marcel Proust)





From varun.bhargava at carsales.com.au  Thu Aug  7 16:07:14 2008
From: varun.bhargava at carsales.com.au (Varun Bhargava)
Date: Fri, 8 Aug 2008 09:07:14 +1000
Subject: [antlr-interest] StringTemplate question
Message-ID: <AE0A511AB227724A912139BAF4BBAC71041FA152@cssvrex001.carsales.office>

Hi All,

 

I have the following rule in my grammar:

 

A : B (('AND' | 'OR') B)* ;

 

B : C '=' D

 

Where C is an identifier and D is a string literal

 

If D is an empty string, I do not want to output the the B rule at all
and also want to get rid of the dangling 'AND' or 'OR'.

 

So for example if my expressions is

 

Var1 = 'val1' AND Var2 = '' 

 

I want to output

 

Var1 = 'val1'

 

How can this be achieved using stringtemplate?

 

Thanks

Varun

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/20b92e6a/attachment.html 

From johan.grande at crans.org  Thu Aug  7 16:21:19 2008
From: johan.grande at crans.org (Johan Grande)
Date: Fri, 08 Aug 2008 01:21:19 +0200
Subject: [antlr-interest] tree construction, associative operators,
	NullPointerException
In-Reply-To: <20080807212522.D8974805B@rouge.crans.org>
References: <48982811.90600@crans.org> <489AFB0A.6020506@crans.org>
	<20080807212522.D8974805B@rouge.crans.org>
Message-ID: <489B836F.7000800@crans.org>

Gavin Lambert a ?crit :
> At 01:39 8/08/2008, Johan Grande wrote:
>  >The solution I use until now (non binary trees) is not at all
>  >satisfying, because not only I would have binary trees, but my
>  >"solution" doesn't work for rules with more than one operator, for
>  >example :
>  >,----
>  >| equalityExpression
>  >|     :   instanceOfExpression ( ('==' | '!=') instanceOfExpression
>  >)*
>  >|     ;
>  >`----
> 
> If you change that to use ('==' | '!=')^ (note the extra caret) then the 
> operator will become the root node -- this will also automatically 
> produce a left-associative binary tree.
> 
Actually, this is the first possibility showed in the documentation, and 
not exactly what I want to do.

The idea is to have a set of classes generated by TOM and to construct a 
tree only with it, in order to be able to use tree manipulation tools 
(the main goal of TOM), pattern matching in particular.

TOM generates 3 files (AstAdaptor.java, AstTokenList.txt, AstTree.java) 
which are meant to make antlr able to construct trees using the classes 
TOM generates.
(here they are : http://perso.crans.org/~grande/antlr/)


The tree construction page gives this possibility :
,----
| additiveExpression
| 	:	(a=multiplicativeExpression->$a)
|                 (    '+' b=multiplicativeExpression
|                      -> ^('+' $additiveExpression $b)
|                 )*
| 	;
`----

So I tried to replace the " ^('+' " by " ^(Cons And ", where Cons and 
And are 2 classes generated by TOM from a description I wrote (Ast.gom, 
available at the address given above (interesting things lines >840)) :
,----
| andExpression
|     :   (a=equalityExpression -> $a)
|         ( '&' b=equalityExpression -> ^(Cons And $andExpression $b) )*
|    ;
`----
(I tried the designs ^(Cons And lhs rhs) ^(And lhs rhs), but none works.)
Shouldn't that be possible ?
I'm expert neither in Antlr nor in TOM, but as far as I know TOM just 
implements the possibility given by Antlr to build trees using 
separately defined classes.
If it is sure it should, then maybe there is a bug in the TOM Antlr 
adaptor generator. I just want to know if my code is correct, and if 
there is no bug in Antlr.


Thank you for your help,
Johan


From hjrnunes at student.dei.uc.pt  Thu Aug  7 18:02:39 2008
From: hjrnunes at student.dei.uc.pt (Henrique)
Date: Fri, 8 Aug 2008 02:02:39 +0100
Subject: [antlr-interest] Grammar Problem
In-Reply-To: <ac8968760808071742i7ed82ed7ld4c37bd624a792a1@mail.gmail.com>
References: <ac8968760808071040h35c2fd7dm78e688bac61b90dc@mail.gmail.com>
	<1218131636.27639.39.camel@jimi>
	<ac8968760808071120h3f63fe33pf2f706ecf780f21b@mail.gmail.com>
	<1218145955.6138.25.camel@jimi>
	<ac8968760808071741n666e44d2te8d30d1d335f68aa@mail.gmail.com>
	<ac8968760808071742i7ed82ed7ld4c37bd624a792a1@mail.gmail.com>
Message-ID: <ac8968760808071802t5f241274m5c91e6a1e41fa482@mail.gmail.com>

Hi guys!
Thanks for your help. I'm gonna dump the tokens then and see if anything's
wrong...
Jim, you can see the grammar
here<http://hjrnunes.googlepages.com/antlrgrammar>and I'm attaching
it.


Henrique Nunes
>
>
>>
>> On Thu, Aug 7, 2008 at 10:52 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>
>>>  On Thu, 2008-08-07 at 19:20 +0100, Henrique wrote:
>>>
>>> Thanks for your replies guys!
>>> Jim, I tried your suggestion but I get the same error...
>>> Johannes, I believe I followed the approach suggested but the thing is I
>>> need buncha_replacements optional...
>>> Furthermore, when I try to parse this:
>>>
>>>
>>> Would probably need to see your whole grammar and sample input then to be
>>> honest.
>>>
>>> Jim
>>>
>>>
>>> rule Foo {
>>>     CIRCLE {}
>>> }
>>>
>>> I works good. So I'm guessing it's got something to do with me not making
>>> buncha_adjustments optional the right way:
>>>
>>> rule    : RULE USER_STRING (USER_RATIONAL)? LEFTBRACKET
>>> buncha_replacements? RIGHTBRACKET;
>>>
>>>
>>>
>>>
>>> buncha_replacements
>>>     :    (replacement)+
>>>     ;
>>>
>>> replacement
>>>     :    USER_STRING modification
>>>     |    USER_STRING STAR modification USER_STRING modification
>>>     ;
>>>
>>>
>>>  modification
>>>     :    LEFTBRACKET buncha_adjustments? RIGHTBRACKET
>>>     |    LEFTBRACE buncha_adjustments? RIGHTBRACE
>>>     ;
>>>
>>> buncha_adjustments
>>>     :    (adjustment)+
>>>     ;
>>>
>>> Any more suggestions?
>>> Thanks!
>>>
>>> Henrique Nunes
>>>
>>>
>>>  On Thu, Aug 7, 2008 at 6:53 PM, Jim Idle <jimi at temporal-wave.com>
>>> wrote:
>>>
>>>  On Thu, 2008-08-07 at 18:40 +0100, Henrique wrote:
>>>
>>> Hi guys!
>>> I'm having some trouble with my grammar for parsing CFA files... As I
>>> posted before, I'm trying to convert their Yacc grammar to ANTLR and now I'm
>>> having some trouble. I suspect it's the left recursions or rather the way I
>>> got ridden of them.
>>> The grammar is attached and can also be seen here<http://hjrnunes.googlepages.com/antlrgrammar>
>>> .
>>>
>>> here's the rules I'm having trouble with:
>>>
>>> rule    :    RULE USER_STRING LEFTBRACKET buncha_replacements?
>>> RIGHTBRACKET
>>>     |    RULE USER_STRING USER_RATIONAL LEFTBRACKET buncha_replacements?
>>> RIGHTBRACKET
>>>     ;
>>>
>>>
>>>
>>>   Try
>>>
>>> rule: RULE USER_STRING (USER_RATIONAL {set flag to say this is here or
>>> something} )? LEFTBRACKET buncha_replacements? RIGHTBRACKET;
>>>
>>>      Jim
>>>
>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/bfd8a491/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cfdg.g
Type: application/octet-stream
Size: 3374 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/bfd8a491/attachment-0001.obj 

From anders at globe-trotter.us  Thu Aug  7 18:04:49 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Fri, 08 Aug 2008 09:04:49 +0800
Subject: [antlr-interest] =?iso-8859-1?q?ANTLR_v2=2Cv3?=
Message-ID: <20080808010449.27035.qmail@station198.com>




>  --------------------
>  TO: Johannes Luber <jaluber at gmx.de>
>  DATE: Thu, 07 Aug 2008 10:12:51 -0700
>  SUBJECT: Re: [antlr-interest] ANTLR v2,v3
>  
>  On Thu, 2008-08-07 at 14:08 +0200, Johannes Luber wrote:
>  
>  Anders Karlsson schrieb: > Hi >  > Is there a detailed list with grammar
>  changes from v2 to v3. I have one big 140K v2 grammar to convert and I am
>  really struggling so it would help with such a list. I have the book ANTLR3
>  ref however there seems to be no helpful summary with the changes. e.g. in
>  v2 you can write a:'t' to get an alias for 't' in v3 you have to write
>  a='t' (if even true).  Does <[LINK:
>  http://www.antlr.org/wiki/pages/viewpage.action?pageId=719]
>  http://www.antlr.org/wiki/pages/viewpage.action?pageId=719> help? >  > I am
>  not so familiar with the v2 grammar and was hoping not having to learn that
>  dialect first when converting. >  > Running the v2v3 just doesn't do it.
>  The original grammar contains lots of sprinkled in C++ code and generates
>  its own AST tree.   >  > I have also noticed that the ANTRLWorks1.1.7
>  crashes when the grammar is big, it suddenly stops updating the screen. Is
>  this a known problem? It happens when I do "Generate code".  I noticed this
>  behaviour myself, but Jean couldn't reproduce it, I  believe. Send him a
>  bug report with the grammar and generate the grammar  on the command line.
>  
>  I think that this happens when the grammar is so far away from being a
>  good one that the parsers are giving up all the time. Also, turn off the
>  syntax autoupdate until the grammar is more like a v3 one.
>  
>  BTW - there are plenty of people that will convert your grammar for a
>  fee, including me. If you are converting a C++ grammar, then all the
>  actions (which should really be doing minimum work in actions and calling
>  external code) will need to be changed. If you know neither the original
>  C++ model in 2.7, nor the 3.1 C/C++ model, then you will be doing this
>  conversion for a long time I suspect.
>  
>  Jim

Hi thanks for the update, I will try and turn off the auto-update. Unfortunately I cannot give out the grammar for troubleshooting due to company policy.

Thanks for your offer but I think this is something I myself need to do since it is part of my job. I don't currently have any firm requirement to convert to v3 but it will come next year so I was just investigating how much work it would be by some hands-on research. 

Do you have any tips in how to approach the problem of converting a grammar, would be grateful for any pointers there. e.g. starting with this then doing that :)

Best regards
Anders

From anders at globe-trotter.us  Thu Aug  7 18:17:54 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Fri, 08 Aug 2008 09:17:54 +0800
Subject: [antlr-interest] =?iso-8859-1?q?ANTLR_v2=2Cv3?=
Message-ID: <20080808011754.4312.qmail@station198.com>





>  --------------------
>  FROM: Johannes Luber <jaluber at gmx.de>
>  TO: Anders Karlsson <anders at globe-trotter.us>
>  DATE: Thu, 07 Aug 2008 14:08:35 +0200
>  SUBJECT: Re: [antlr-interest] ANTLR v2,v3
>  
>  Anders Karlsson schrieb:
>  > Hi
>  >
>  > Is there a detailed list with grammar changes from v2 to v3. I have one
>  big 140K v2 grammar to convert and I am really struggling so it would help
>  with such a list. I have the book ANTLR3 ref however there seems to be no
>  helpful summary with the changes. e.g. in v2 you can write a:'t' to get an
>  alias for 't' in v3 you have to write a='t' (if even true).
>  
>  Does <[LINK: http://www.antlr.org/wiki/pages/viewpage.action?pageId=719]
>  http://www.antlr.org/wiki/pages/viewpage.action?pageId=719> help?
>  >
>  > I am not so familiar with the v2 grammar and was hoping not having to
>  learn that dialect first when converting.
>  >
>  > Running the v2v3 just doesn't do it. The original grammar contains lots
>  of sprinkled in C++ code and generates its own AST tree.
>  >
>  > I have also noticed that the ANTRLWorks1.1.7 crashes when the grammar
>  is big, it suddenly stops updating the screen. Is this a known problem? It
>  happens when I do "Generate code".
>  
>  I noticed this behaviour myself, but Jean couldn't reproduce it, I
>  believe. Send him a bug report with the grammar and generate the grammar
>  on the command line.
>  
>  Johannes

Vielen dank for the link Johannes, yes that helped!

BR/Anders.

From iank at bearcave.com  Thu Aug  7 19:41:35 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Thu, 7 Aug 2008 19:41:35 -0700
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the horror,
	the horror)
In-Reply-To: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
Message-ID: <7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>

  As part of a research project at the Lawrence Livermore National Lab, I
have implemented a graph database query language parser using ANTLR (my
personal motto is "Death to SPARQL").  The ANTLR 2.X parser consists of an
ANTLR lexer (scanner) and and ANTLR grammar rules with semantic actions
(Java code) that builds data structures as a result of the parse.  The
language is simple enough that abstract syntax trees are not really
necessary.

  I have long been a fan of ANTLR and when Terence's book came out, I bought
a copy.  I spent most of the day struggling to convert about 2,000 lines of
comments and grammar for the query language from 2.X to 3.X.  It has been a
frustrating experience.  I have poured over the book and any documentation
that I can find on antlr.org.  My initial impression was that there were not
that many differences between ANTLR 2.X and 3.X.  This does not seem to be
the case, at least for my grammar which consists of a lot of embedded Java.

  More examples which semantic actions (Java code) would be very helpful.
It took me some time, for example, to understand that the

  @init{
  }
  @after{
   }

  Blocks follow each other (I do note the example on page 144 of the book).


  My 2.X code has syntax like this:

      t:TOKEN   (for example t:LPAREN)

  I then reference t.getFile(), t.getLine() and t.getColumn() in my Java
code.  I have not figured out yet how to do this in 3.X.  I'd be grateful
for any pointers.

  My 2.X code also had grammar like

  tokens {
     ADJACENCY = "adjacency";
    PATTERN = "pattern";
  }

  These are reserved words in the query language.  I really don't like the
habit in the example code of using quoted strings like 'adjacency' in the
grammar rules.

   I actually found what seemed to be 3.X examples using the above tokens
syntax.  However, it doesn't seem to work.  The proper form seems to be:

  tokens {
      ADJACENCY : 'adjacency';
     PATTERN : 'pattern';
  }

  As noted in the 2.X to 3.X documentation, there's no built in way to
create case insensitivity without overriding the scanner input stream.

  The good news is that there's documentation, but for some reason with
ANTLR there never seems to be enough documentation to make the initial
learning curve anything but painful.

  I noticed that the person who maintains the 2.X C++ grammar is looking for
someone to take it over since they don't want to deal with the conversion to
ANTLR 3.X.  I can't say I blame them.   My grammar is a lot smaller and it's
going to be at least a two day slog with a fair amount of frustration.

  In addition to the fact that the 2.X grammar is obsolete, I'm doing the
conversion because I am hoping that the LL(*) will avoid left factoring my
grammar into a less clear form.  I hope that I am not disappointed.

  Ian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/2e6dc04e/attachment.html 

From g.vandeglind at beinformed.nl  Fri Aug  8 03:02:11 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Fri, 8 Aug 2008 12:02:11 +0200
Subject: [antlr-interest] how to access rule attributes in a tree grammar in
	release 3.1
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>

Hey hello,

I updated to the ANTLR 3.1b2 release to try it out for the upcoming 3.1 release. Btw when will 3.1 be released, is that already known?

It seems that quite a lot has changed since the 3.0 release. Also, I get a lot of errors now when I generate Java code from my grammar.

In the Changes.txt I read the following:
match() returns Object matched now (parser, tree parser) so we can set labels
on token refs properly after single token ins/del error recovery.

And a close examination of the generated Java code reveals that many things have now become a direct instance of class Object.

However, this causes problems if I want to access the predefined ANTLR attributes (see 6.4 of the Definitive ANTLR Reference).
Is there a new notation to access these?

Thanks a lot!

Regards, Gerard




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/7aa4a9f2/attachment.html 

From jaluber at gmx.de  Fri Aug  8 03:26:32 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 08 Aug 2008 12:26:32 +0200
Subject: [antlr-interest] how to access rule attributes in a tree
 grammar in	release 3.1
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>
Message-ID: <489C1F58.40102@gmx.de>

Gerard van de Glind schrieb:
> Hey hello,
> 
> I updated to the ANTLR 3.1b2 release to try it out for the upcoming 3.1 
> release. Btw when will 3.1 be released, is that already known?
> 
> It seems that quite a lot has changed since the 3.0 release. Also, I get 
> a lot of errors now when I generate Java code from my grammar.
> 
> In the Changes.txt I read the following:
> 
> match() returns Object matched now (parser, tree parser) so we can set 
> labels on token refs properly after single token ins/del error recovery.
> 
> And a close examination of the generated Java code reveals that many 
> things have now become a direct instance of class Object.
> 
> However, this causes problems if I want to access the predefined ANTLR 
> attributes (see 6.4 of the Definitive ANTLR Reference).
> 
> Is there a new notation to access these?
> 
> Thanks a lot!
> 
> Regards, Gerard

Can't you simply downcast the Object to the correct type?

Johannes

From g.vandeglind at beinformed.nl  Fri Aug  8 03:43:39 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Fri, 8 Aug 2008 12:43:39 +0200
Subject: [antlr-interest] how to access rule attributes in a tree
 grammar in	release 3.1
In-Reply-To: <489C1F58.40102@gmx.de>
References: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>
	<489C1F58.40102@gmx.de>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A293A@apbiex01.beinformed.nl>

Hi Johannes and all,

That would mean that I have to cast everything in the code blocks of my grammar, right?
(Drawbacks: I have to know to which class to cast and my grammar get's tied to the implementation of ANTLR).

Or I have to adjust the generated Java code, which is even more ugly.
Is there no other solution to access attributes in 3.1 (see also the little example that used to work)?

Regards, Gerard

PS Example (see text attribute):

| ^(BOOLEAN_IDENTIFIER IDENTIFIER)
        {
        String strKey   = $IDENTIFIER.text;
                ...
        }


Gerard van de Glind schrieb:
> Hey hello,
>
> I updated to the ANTLR 3.1b2 release to try it out for the upcoming 3.1
> release. Btw when will 3.1 be released, is that already known?
>
> It seems that quite a lot has changed since the 3.0 release. Also, I get
> a lot of errors now when I generate Java code from my grammar.
>
> In the Changes.txt I read the following:
>
> match() returns Object matched now (parser, tree parser) so we can set
> labels on token refs properly after single token ins/del error recovery.
>
> And a close examination of the generated Java code reveals that many
> things have now become a direct instance of class Object.
>
> However, this causes problems if I want to access the predefined ANTLR
> attributes (see 6.4 of the Definitive ANTLR Reference).
>
> Is there a new notation to access these?
>
> Thanks a lot!
>
> Regards, Gerard

Can't you simply downcast the Object to the correct type?

Johannes

From markwright at internode.on.net  Fri Aug  8 03:50:41 2008
From: markwright at internode.on.net (Mark Wright)
Date: Fri, 8 Aug 2008 20:50:41 +1000
Subject: [antlr-interest] how to access rule attributes in a tree
 grammar in	release 3.1
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A293A@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>
	<489C1F58.40102@gmx.de>
	<07DC8905ABA90249A64135D427E2F70F03273A293A@apbiex01.beinformed.nl>
Message-ID: <20080808205041.00005bb2@goanna>

Hi Gerard, Johannes,

It seems to work, maybe ASTLabelType=CommonTree might help.
Something like:

tree grammar mytreegrammar;
options {
   tokenVocab = mygrammar;
   ASTLabelType=CommonTree;
   output=template;
}

Regards, Mark

On Fri, 8 Aug 2008 12:43:39 +0200
Gerard van de Glind <g.vandeglind at beinformed.nl> wrote:

> Hi Johannes and all,
> 
> That would mean that I have to cast everything in the code blocks of
> my grammar, right? (Drawbacks: I have to know to which class to cast
> and my grammar get's tied to the implementation of ANTLR).
> 
> Or I have to adjust the generated Java code, which is even more ugly.
> Is there no other solution to access attributes in 3.1 (see also the
> little example that used to work)?
> 
> Regards, Gerard
> 
> PS Example (see text attribute):
> 
> | ^(BOOLEAN_IDENTIFIER IDENTIFIER)
>         {
>         String strKey   = $IDENTIFIER.text;
>                 ...
>         }
> 
> 
> Gerard van de Glind schrieb:
> > Hey hello,
> >
> > I updated to the ANTLR 3.1b2 release to try it out for the upcoming
> > 3.1 release. Btw when will 3.1 be released, is that already known?
> >
> > It seems that quite a lot has changed since the 3.0 release. Also,
> > I get a lot of errors now when I generate Java code from my grammar.
> >
> > In the Changes.txt I read the following:
> >
> > match() returns Object matched now (parser, tree parser) so we can
> > set labels on token refs properly after single token ins/del error
> > recovery.
> >
> > And a close examination of the generated Java code reveals that many
> > things have now become a direct instance of class Object.
> >
> > However, this causes problems if I want to access the predefined
> > ANTLR attributes (see 6.4 of the Definitive ANTLR Reference).
> >
> > Is there a new notation to access these?
> >
> > Thanks a lot!
> >
> > Regards, Gerard
> 
> Can't you simply downcast the Object to the correct type?
> 
> Johannes


-- 

From g.vandeglind at beinformed.nl  Fri Aug  8 04:12:24 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Fri, 8 Aug 2008 13:12:24 +0200
Subject: [antlr-interest] how to access rule attributes in a tree
 grammar in	release 3.1
In-Reply-To: <20080808205041.00005bb2@goanna>
References: <07DC8905ABA90249A64135D427E2F70F03273A2926@apbiex01.beinformed.nl>
	<489C1F58.40102@gmx.de>
	<07DC8905ABA90249A64135D427E2F70F03273A293A@apbiex01.beinformed.nl>
	<20080808205041.00005bb2@goanna>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A2940@apbiex01.beinformed.nl>

Hi Mark, Johannes and all,

Thanks Mark that fixed most of my problems!
With the transition from 3.0 to 3.1 I lost that option somehow :-( My fault, sorry!

Regards, Gerard


Hi Gerard, Johannes,

It seems to work, maybe ASTLabelType=CommonTree might help.
Something like:

tree grammar mytreegrammar;
options {
   tokenVocab = mygrammar;
   ASTLabelType=CommonTree;
   output=template;
}

Regards, Mark

On Fri, 8 Aug 2008 12:43:39 +0200
Gerard van de Glind <g.vandeglind at beinformed.nl> wrote:

> Hi Johannes and all,
>
> That would mean that I have to cast everything in the code blocks of
> my grammar, right? (Drawbacks: I have to know to which class to cast
> and my grammar get's tied to the implementation of ANTLR).
>
> Or I have to adjust the generated Java code, which is even more ugly.
> Is there no other solution to access attributes in 3.1 (see also the
> little example that used to work)?
>
> Regards, Gerard
>
> PS Example (see text attribute):
>
> | ^(BOOLEAN_IDENTIFIER IDENTIFIER)
>         {
>         String strKey   = $IDENTIFIER.text;
>                 ...
>         }
>
>
> Gerard van de Glind schrieb:
> > Hey hello,
> >
> > I updated to the ANTLR 3.1b2 release to try it out for the upcoming
> > 3.1 release. Btw when will 3.1 be released, is that already known?
> >
> > It seems that quite a lot has changed since the 3.0 release. Also,
> > I get a lot of errors now when I generate Java code from my grammar.
> >
> > In the Changes.txt I read the following:
> >
> > match() returns Object matched now (parser, tree parser) so we can
> > set labels on token refs properly after single token ins/del error
> > recovery.
> >
> > And a close examination of the generated Java code reveals that many
> > things have now become a direct instance of class Object.
> >
> > However, this causes problems if I want to access the predefined
> > ANTLR attributes (see 6.4 of the Definitive ANTLR Reference).
> >
> > Is there a new notation to access these?
> >
> > Thanks a lot!
> >
> > Regards, Gerard
>
> Can't you simply downcast the Object to the correct type?
>
> Johannes


--

From louis at cs.york.ac.uk  Fri Aug  8 04:12:57 2008
From: louis at cs.york.ac.uk (Louis Rose)
Date: Fri, 08 Aug 2008 12:12:57 +0100
Subject: [antlr-interest] gUnit and Error Recovery
In-Reply-To: <5002B7E9-A631-4788-9DDB-9C5A582A47EF@mac.com>
References: <489B3016.4060607@cs.york.ac.uk>
	<5002B7E9-A631-4788-9DDB-9C5A582A47EF@mac.com>
Message-ID: <489C2A39.1050109@cs.york.ac.uk>

Hi Leon,

Many thanks for your help.

After a little more investigating, I now believe this is an issue with 
error reporting.

The grammar that I'm using generates a parser which extend a base class, 
BaseParser. The BaseParser class overrides the displayRecognitionError 
method, and redirects the output (to an Eclipse console).

Does gUnit require errors to be reported to System.err? If so, I'll find 
a way to change BaseParser to allow this.

Cheers,
Louis.

Leon Su wrote:
> Hi Louis,
> 
> I just quickly tested the grammar fragment you provided:
> remove (cls)* from pkg, and add WS:( ' ' | '\t' | '\r' | '\n' )+ 
> {$channel = HIDDEN;};
> 
> tested by gUnit1.0.2+ANTLR3.1b2 and gUnit-1.0.1+ANTLR3.0.1
> and both got the failed 2nd test as we expected ( and received the error 
> msg from ANTLR: line 0:-1 missing RBRACKET at '<EOF>' )
> 
> If you're using gunit-1.0.1 currently, don't forget to download the 
> updated gunit-1.0.1.jar Version2 on the wiki page.
> Please let me know if you any problem.
> 
> Leon
> 
> On Aug 7, 2008, at 10:25 AM, Louis Rose wrote:
> 
>> Hi all,
>>
>> I'm currently considering migrating a large number of unit tests to 
>> gUnit. I have a query about the way gUnit works with ANTLR's error 
>> recovery capabilities.
>>
>> Here's a fragment from an ANTLR grammar that I wish to test:
>>
>> pkg: NAME^ LBRACKET! (cls)* RBRACKET!;
>>
>> LBRACKET     : '{';
>> RBRACKET     : '}';
>> NAME         : ID_START_LETTER (ID_LETTER)*;
>>
>> fragment
>> ID_START_LETTER
>>     :    '_'
>>     |    'a'..'z'
>>     |    'A'..'Z'
>>     |    '@'
>>     ;
>>
>> fragment
>> ID_LETTER
>>     :    ID_START_LETTER
>>     |    '0'..'9'
>>     |    '-'
>>     ;
>>
>>
>> I have the following gUnit tests:
>>
>> pkg:
>>     "Families {}" -> "Families"
>>     "Families {"    FAIL
>>
>> I would expect the second test to verify that a terminating right 
>> bracket is required. (i.e. parsing would fail). In fact, the parser 
>> successfully recognises the input from the second test:
>>
>> 1 failures found:
>> test2 (pkg, line6) -
>> expected: FAIL
>> actual: OK
>>
>> Tests run: 2, Failures: 1
>>
>>
>> Is this working as intended? How can I test that all uses of pkg 
>> should be terminated with a closing bracket?
>>
>> Many thanks,
>> Louis Rose.
>>
> 

From antlr at mirality.co.nz  Fri Aug  8 04:42:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Aug 2008 23:42:19 +1200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the
 horror, the horror)
In-Reply-To: <7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.co
 m>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
Message-ID: <20080808114234.C9D5931296C@www.antlr.org>

At 14:41 8/08/2008, Ian Kaplan wrote:
>   My 2.X code has syntax like this:
>
>       t:TOKEN   (for example t:LPAREN)
>
>   I then reference t.getFile(), t.getLine() and t.getColumn() in 
> my Java code.  I have not figured out yet how to do this in 
> 3.X.  I'd be grateful for any pointers.

The token labels are now all done using = instead of : (IIRC you 
could use either in v2, but : was more common for some reason).

As for the values themselves:
   - t.getFile() : no equivalent AFAIK.  You'll have to track this 
yourself.
   - t.getLine() => $t.line
   - t.getColumn() => $t.pos
(see: 
http://www.antlr.org/wiki/display/ANTLR3/Attribute+and+Dynamic+Scopes)

You might find it useful to look through the examples in the wiki:
   http://www.antlr.org/wiki/display/ANTLR3/Examples
(As well as the downloadable ones, of course.)

>   My 2.X code also had grammar like
>
>   tokens {
>      ADJACENCY = "adjacency";
>     PATTERN = "pattern";
>   }
[...]
>    I actually found what seemed to be 3.X examples using the 
> above tokens syntax.  However, it doesn't seem to work.  The 
> proper form seems to be:
>
>   tokens {
>       ADJACENCY : 'adjacency';
>      PATTERN : 'pattern';
>   }

Actually you were right the first time (except you do need single 
quotes).  However, ANTLR is a bit sensitive as to where you put it 
-- it has to appear after the options block (if present) but 
before any rules and before any @something blocks.  Also, for some 
weird reason you get errors if you use it in a lexer-only grammar; 
to work around that you'll need to define regular rules instead 
(which is exactly like your second example except removing the 
surrounding 'tokens { }' bit).

>   These are reserved words in the query language.  I really 
> don't like the habit in the example code of using quoted strings 
> like 'adjacency' in the grammar rules.

Good.  You hang on to that dislike -- it will serve you well.

>   As noted in the 2.X to 3.X documentation, there's no built in 
> way to create case insensitivity without overriding the scanner 
> input stream.

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782

>   The good news is that there's documentation, but for some 
> reason with ANTLR there never seems to be enough documentation 
> to make the initial learning curve anything but painful.

Yep.  But there's all these helpful people around :)  (And hey, I 
manage to get by without even reading the ANTLR book, so it can't 
be all that bad.)

>   I noticed that the person who maintains the 2.X C++ grammar is 
> looking for someone to take it over since they don't want to 
> deal with the conversion to ANTLR 3.X.  I can't say I blame 
> them.   My grammar is a lot smaller and it's going to be at 
> least a two day slog with a fair amount of frustration.

Jim Idle has mentioned that he plans to build a C++ target at some 
point soon.  Although it's hard to say whether it's going to be a 
separate library or whether it will simply wrap the existing C 
runtime.  (He's announced both as possibilities at various points, 
IIRC.)

>   In addition to the fact that the 2.X grammar is obsolete, I'm 
> doing the conversion because I am hoping that the LL(*) will 
> avoid left factoring my grammar into a less clear form.  I hope 
> that I am not disappointed.

You might be.  Left factoring is critically important -- perhaps 
even more so in v3 than it was in v2.  The v3 lexer is much weaker 
(in my opinion) and needs more hand-holding than the v2 one did, 
despite its newfound Unicode support.

Having said that, for the most part the v3 grammars that I've seen 
just seem a bit "tidier" than their v2 counterparts.  But that's 
just a subjective thing :)


From tbrandonau at gmail.com  Fri Aug  8 05:18:06 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 8 Aug 2008 22:18:06 +1000
Subject: [antlr-interest] Another parsing question
In-Reply-To: <20080807123503.575FC11EE99@www.antlr.org>
References: <593786.81155.qm@web55907.mail.re3.yahoo.com>
	<200808061432.54739.rschulz@sonic.net>
	<20080807123503.575FC11EE99@www.antlr.org>
Message-ID: <ebc876d70808080518q42d9e2awf44147117bd39c89@mail.gmail.com>

Perhaps you could employ a hybrid approach. Use the current
implementation for the ASCII range with a tree\list for non-ASCII.
This should lead to minimal impact for the common cases where
non-ASCII characters are either all accepted or rejected.

Tom.

From bergschloss at ukr.net  Fri Aug  8 07:10:55 2008
From: bergschloss at ukr.net (=?WINDOWS-1251?Q?_=D1=E5=F0=E3=B3=E9_=CA=E0=F0=EF=E5=ED=EA=EE?=)
Date: Fri, 08 Aug 2008 17:10:55 +0300
Subject: [antlr-interest] Same symbols, but two parsed terms
Message-ID: <E1KRSgB-000C4h-Tu@ffe1.ukr.net>

Hi, all.    
    
For example, we have an expression ?"--". ??It must be parsed as NOT '-'-symbol.    
    
And we have a gramar:    
    
??expr : NOT? WORD+;    
??NOT : '-';    
??WORD: '-'+;    
    
input string is "--"    
    
result is "--" term.    
    
Warious combinations of?parenthesis?didnt?help.    
    
Thanks.    
    
    
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/f8c93770/attachment.html 

From himmy070 at gmail.com  Fri Aug  8 08:20:08 2008
From: himmy070 at gmail.com (mark twain)
Date: Fri, 8 Aug 2008 11:20:08 -0400
Subject: [antlr-interest] Doubt Regarding TreeWalker Error!!
Message-ID: <41fde820808080820x301b55cdna948702aea7084ae@mail.gmail.com>

Hi,

I was trying to run one of the example code <simplecTreeParser> and when I
execute the following command :

 treePsr->program(treePsr);

I am getting the following error :
=================================
./input(1)  : error 10 : Unexpected node, at offset 0, near <missing
<invalid>> : Missing <invalid>
./input(2)  : error 10 : Unexpected node, at offset 0, near <missing
<invalid>> : Missing <invalid>
 =================================

My input file is :

int x;

void bar(int x);

int foo(int y, char d) {
  int i;
  for (i=0; i<3; i=i+1) {
    x=3;
    y=5;
  }
}
=========================================

I have not made any changes from example code and tried to run using C
runtime library(antlr-3.1b2).

Any pointers what I am missing.

Cheers:)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/97852eff/attachment.html 

From jimi at temporal-wave.com  Fri Aug  8 10:20:44 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 10:20:44 -0700
Subject: [antlr-interest] Doubt Regarding TreeWalker Error!!
In-Reply-To: <41fde820808080820x301b55cdna948702aea7084ae@mail.gmail.com>
References: <41fde820808080820x301b55cdna948702aea7084ae@mail.gmail.com>
Message-ID: <1218216044.6138.62.camel@jimi>

On Fri, 2008-08-08 at 11:20 -0400, mark twain wrote:
> Hi, 
>  
> I was trying to run one of the example code <simplecTreeParser> and
> when I execute the following command :
>  
>  treePsr->program(treePsr);
>  
> I am getting the following error :
> =================================
> ./input(1)  : error 10 : Unexpected node, at offset 0, near <missing
> <invalid>> : Missing <invalid> 
> ./input(2)  : error 10 : Unexpected node, at offset 0, near <missing
> <invalid>> : Missing <invalid>
> =================================
>  
> My input file is :
> int x;
> 
> void bar(int x);
> 
> int foo(int y, char d) {
>   int i;
>   for (i=0; i<3; i=i+1) {
>     x=3;
>     y=5;
>   }
> }
> =========================================
> 
> I have not made any changes from example code and tried to run using C
> runtime library(antlr-3.1b2).
> 
> Any pointers what I am missing.


yes - The released version ;-). I fixed this issue a couple of days ago
and the runtime fix is in the current tgz which is now just 3.1 and not
3.1bn, although it isn't officially released yet because the c# runtime
still needs a day or twos more work. I may take advantage of this to fix
a few things with debugging and so on.

I think that there is a new snapshot of the antlr jars too - use those
with the latest C runtime.

Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/265452ec/attachment.html 

From titech at metaorb.com  Fri Aug  8 11:54:26 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 8 Aug 2008 11:54:26 -0700 (PDT)
Subject: [antlr-interest] How to Match a Double-Quote Character
Message-ID: <629243.5324.qm@web82301.mail.mud.yahoo.com>

Suppose I
want to match the double quote character in this input:
 
(parser
  
(string_quote ?)
)
 
The
following lexer rule fails to match this (but succeeds if I change the input to
contain a single quote instead.
 
ANYCHAR       
:           '\'' | '"' |
~(' ' | '\t' | '\r' | '\n');
 
Is this a
bug in 3.1b2, or am I doing something wrong?
 
Regards,
--Mike
 
Mike
Allbright
DLP
Products
Texas
Instruments, Inc.

From jaluber at gmx.de  Fri Aug  8 11:59:25 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 08 Aug 2008 20:59:25 +0200
Subject: [antlr-interest] How to Match a Double-Quote Character
In-Reply-To: <629243.5324.qm@web82301.mail.mud.yahoo.com>
References: <629243.5324.qm@web82301.mail.mud.yahoo.com>
Message-ID: <489C978D.2070300@gmx.de>

titech at metaorb.com schrieb:
> Suppose I
> want to match the double quote character in this input:
>  
> (parser
>   
> (string_quote ?)
> )
>  
> The
> following lexer rule fails to match this (but succeeds if I change the input to
> contain a single quote instead.
>  
> ANYCHAR       
> :           '\'' | '"' |
> ~(' ' | '\t' | '\r' | '\n');
>  
> Is this a
> bug in 3.1b2, or am I doing something wrong?
>  
> Regards,
> --Mike

Try '\"'.

Johannes

From titech at metaorb.com  Fri Aug  8 12:01:13 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 8 Aug 2008 12:01:13 -0700 (PDT)
Subject: [antlr-interest] How to Match a Double-Quote Character
Message-ID: <691635.75932.qm@web82305.mail.mud.yahoo.com>



Sorry, that should have been a regular double-quote--Outlook decided it knew better and substituted the back-double-quote for me the first time around...

  
(parser
 (string_quote ")
)


--Mike

From himmy070 at gmail.com  Fri Aug  8 12:21:13 2008
From: himmy070 at gmail.com (mark twain)
Date: Fri, 8 Aug 2008 15:21:13 -0400
Subject: [antlr-interest] Doubt Regarding TreeWalker Error!!
In-Reply-To: <1218216044.6138.62.camel@jimi>
References: <41fde820808080820x301b55cdna948702aea7084ae@mail.gmail.com>
	<1218216044.6138.62.camel@jimi>
Message-ID: <41fde820808081221y7d6b0f1nb5724a9cf02065d4@mail.gmail.com>

Hi Jim,

I just tried to incorporate some of your minor code changes and I tried
using following statement from one of your code snippet:
"   printf("Tree : %s\n",
SimpleCAST.tree->toStringTree(SimpleCAST.tree)->chars);"
================================
and gets the following output:
Tree : (VAR_DEF char c) (VAR_DEF int x) (FUNC_DECL (FUNC_HDR void bar
(ARG_DEF int x))) (FUNC_DEF (FUNC_HDR int foo (ARG_DEF int y) (ARG_DEF char
d)) (BLOCK (VAR_DEF int i) (for (= i 0) (< i 3) (= i (+ i 1)) (BLOCK (= x 3)
(= y 5)))))

I have a very silly question to ask, so please dont mind :-)
Is it the output Tree, that I am getting above is Parse tree or AST?
Actually , I gone though lot of online documentation but still
couldnt convince myself the exact difference between parse tree and AST.
Some article says that Parse tree is a syntactic structure of string where
interior nodes are non-terminals of grammar and leaf nodes are terminals
whereas AST has no rule nodes and has only token nodes.

So by this definition is it correct to say, above output is Parse Tree and
not AST as it has rules also?? I would be extremely thankful if you could
please explain or send me some link to understand the exact
difference illustrated with example

Actually i need to write to some grammar for my intern project within time
frame of  2 weeks and first step towards that project is to generate AST and
output  for all basic mathematical operations(kind of calculator as in your
example codes)

Cheers:)

On 8/8/08, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  On Fri, 2008-08-08 at 11:20 -0400, mark twain wrote:
>
> Hi,
>
>
>
> I was trying to run one of the example code <simplecTreeParser> and when I
> execute the following command :
>
>
>
>  treePsr->program(treePsr);
>
>
>
> I am getting the following error :
>
> =================================
>
> ./input(1)  : error 10 : Unexpected node, at offset 0, near <missing
> <invalid>> : Missing <invalid>
> ./input(2)  : error 10 : Unexpected node, at offset 0, near <missing
> <invalid>> : Missing <invalid>
>
> =================================
>
>
>
> My input file is :
>
> int x;
>
> void bar(int x);
>
> int foo(int y, char d) {
>   int i;
>   for (i=0; i<3; i=i+1) {
>     x=3;
>     y=5;
>   }
> }
> =========================================
>
> I have not made any changes from example code and tried to run using C
> runtime library(antlr-3.1b2).
>
> Any pointers what I am missing.
>
>
> yes - The released version ;-). I fixed this issue a couple of days ago and
> the runtime fix is in the current tgz which is now just 3.1 and not 3.1bn,
> although it isn't officially released yet because the c# runtime still needs
> a day or twos more work. I may take advantage of this to fix a few things
> with debugging and so on.
>
> I think that there is a new snapshot of the antlr jars too - use those with
> the latest C runtime.
>
> Jim
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/cddac2fe/attachment.html 

From wiggjd at bcs.org.uk  Fri Aug  8 12:33:24 2008
From: wiggjd at bcs.org.uk (David Wigg)
Date: Fri, 8 Aug 2008 20:33:24 +0100
Subject: [antlr-interest] Antlr2.0 to Antlr3.0
Message-ID: <c34954d70808081233x55bbc73cs87d5e966b655ca3c@mail.gmail.com>

As the latest author of the C++ parser I sympathise with the frustration
expressed by Ian.

Having struggled against inadequate documentation to convert the grammar
from PCCTS to Antlr1.0 and then again to use Antlr2.0 I had hoped Antlr3.0
would be easier especially as there was the Book, but no, it's just as
difficult.

I am still trying to give a helping hand to help a brave soul to convert the
C++ grammar to Antlr3.0 so as not waste all those past hours but it is a
desperate business. I just don't have those spare hours any more.

David.

Message: 3
Date: Thu, 7 Aug 2008 19:41:35 -0700
From: "Ian Kaplan" <iank at bearcave.com>
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the
       horror, the horror)
To: antlr-interest at antlr.org
Message-ID:
       <7f8924df0808071941x52edecf1mbaf44a1e0ad8b076 at mail.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"
 As part of a research project at the Lawrence Livermore National Lab, I
have implemented a graph database query language parser using ANTLR (my
personal motto is "Death to SPARQL").  The ANTLR 2.X parser consists of an
ANTLR lexer (scanner) and and ANTLR grammar rules with semantic actions
(Java code) that builds data structures as a result of the parse.  The
language is simple enough that abstract syntax trees are not really
necessary.
 I have long been a fan of ANTLR and when Terence's book came out, I bought
a copy.  I spent most of the day struggling to convert about 2,000 lines of
comments and grammar for the query language from 2.X to 3.X.  It has been a
frustrating experience.  I have poured over the book and any documentation
that I can find on antlr.org.  My initial impression was that there were not
that many differences between ANTLR 2.X and 3.X.  This does not seem to be
the case, at least for my grammar which consists of a lot of embedded Java.
 More examples which semantic actions (Java code) would be very helpful.
It took me some time, for example, to understand that the
 @init{
 }
 @after{
  }
 Blocks follow each other (I do note the example on page 144 of the book).

 My 2.X code has syntax like this:
     t:TOKEN   (for example t:LPAREN)
 I then reference t.getFile(), t.getLine() and t.getColumn() in my Java
code.  I have not figured out yet how to do this in 3.X.  I'd be grateful
for any pointers.
 My 2.X code also had grammar like
 tokens {
    ADJACENCY = "adjacency";
   PATTERN = "pattern";
 }
 These are reserved words in the query language.  I really don't like the
habit in the example code of using quoted strings like 'adjacency' in the
grammar rules.
  I actually found what seemed to be 3.X examples using the above tokens
syntax.  However, it doesn't seem to work.  The proper form seems to be:
 tokens {
     ADJACENCY : 'adjacency';
    PATTERN : 'pattern';
 }
 As noted in the 2.X to 3.X documentation, there's no built in way to
create case insensitivity without overriding the scanner input stream.
 The good news is that there's documentation, but for some reason with
ANTLR there never seems to be enough documentation to make the initial
learning curve anything but painful.
 I noticed that the person who maintains the 2.X C++ grammar is looking for
someone to take it over since they don't want to deal with the conversion to
ANTLR 3.X.  I can't say I blame them.   My grammar is a lot smaller and it's
going to be at least a two day slog with a fair amount of frustration.
 In addition to the fact that the 2.X grammar is obsolete, I'm doing the
conversion because I am hoping that the LL(*) will avoid left factoring my
grammar into a less clear form.  I hope that I am not disappointed.
 Ian
-------------- next part --------------
An HTML attachment was scrubbed...
URL:
http://www.antlr.org/pipermail/antlr-interest/attachments/20080807/2e6dc04e/attachment-0001.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/c3fb36eb/attachment.html 

From titech at metaorb.com  Fri Aug  8 12:51:21 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 8 Aug 2008 12:51:21 -0700 (PDT)
Subject: [antlr-interest] How to Match a Double-Quote Character
Message-ID: <74790.53787.qm@web82303.mail.mud.yahoo.com>

Johannes,

Thanks!

I very nearly replied with "nope,
didn't work", but then I realized that the period might be part of the
rule (not just the end of your sentence).  I tried it and, sure enough,
it worked!

But why?  Doesn't this say you want to match a
double-quote followed by any character?  And why the \ before the
double-quote--lots of examples show the double quote within single
quotes (no \)?

Regards,
--Mike



>> Try '\"'.

From javafoust at gmail.com  Fri Aug  8 13:07:01 2008
From: javafoust at gmail.com (Foust)
Date: Fri, 8 Aug 2008 13:07:01 -0700
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the
	horror, the horror)
In-Reply-To: <7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
Message-ID: <002201c8f992$53314b20$f993e160$@com>

 

 

Ian Kaplan wrote:

> More examples which semantic actions (Java code) would be very helpful. 

> It took me some time, for example, to understand that the blocks follow
each other.

> 

>  @init{

>  }

>  @after{

>   }

 

Yes, it is not obvious whether tags like this should go before or after the
colon and that order would matter so much. The order of the options, tokens,
header, members tags is also rigid with confusing error messages when they
are out of order, making it seem as though the tag itself is invalid.

 

 

> As noted in the 2.X to 3.X documentation, there's no built in way to

> create case insensitivity without overriding the scanner input stream.

 

It may be noted, but no good solution is. Case-insensitive keywords is such
a common feature that it's difficult to believe that a straightforward
solution is not provided.

 

 

> The good news is that there's documentation, but for some reason with
ANTLR

> there never seems to be enough documentation to make the initial learning

> curve anything but painful.

 

Exactly.

 

It's free. It's powerful. There are some great people actively improving the
tool. All this is not taken for granted. But it doesn't change the fact that
even with the DAR (Definitive Antlr Reference), getting it to do what you
want is a frustrating experience. It seems fine once you've gone through the
multi-day learning experience. But the syntax is varied enough and methods
different enough that there will still be some struggling.

 

A v3.1 "gotchas" page, along with an Antlr Cookbook would probably go a long
way toward helping those new to v3 specifically, and ANTLR in general.

 

 

>  I noticed that the person who maintains the 2.X C++ grammar is looking
for someone 

> to take it over since they don't want to deal with the conversion to ANTLR
3.X.  I can't

> say I blame them.   My grammar is a lot smaller and it's going to be at
least a two day 

> slog with a fair amount of frustration.

 

Likely more than that.

 

 

> In addition to the fact that the 2.X grammar is obsolete, I'm doing the
conversion 

> because I am hoping that the LL(*) will avoid left factoring my grammar
into a less 

> clear form.  I hope that I am not disappointed.

 

I don't know that LL(*) will solve all of your left-factoring woes, but the
backtracking does help you make your grammar more readable (and therefore
maintainable). It adds some parsing overhead, but it's worth it. (How many
times have we wished an LALR parser generator would just "figure it out"?)
And it can be localized to just the rules you need, once you get it working,
by turning off backtracking at the global level and adding it to individual
rules that are ambiguous to the LL(k) algorithm:

 

stmt  options {backtrack=true; memoize=true;}

      :  expr .

      ;

 

 

Brent

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/c18e1930/attachment-0001.html 

From jimi at temporal-wave.com  Fri Aug  8 13:20:17 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 13:20:17 -0700
Subject: [antlr-interest] Doubt Regarding TreeWalker Error!!
In-Reply-To: <41fde820808081221y7d6b0f1nb5724a9cf02065d4@mail.gmail.com>
References: <41fde820808080820x301b55cdna948702aea7084ae@mail.gmail.com>
	<1218216044.6138.62.camel@jimi>
	<41fde820808081221y7d6b0f1nb5724a9cf02065d4@mail.gmail.com>
Message-ID: <1218226817.6138.82.camel@jimi>

On Fri, 2008-08-08 at 15:21 -0400, mark twain wrote:
> Hi Jim,
>  
> I just tried to incorporate some of your minor code changes and I
> tried using following statement from one of your code snippet:
> "   printf("Tree : %s\n",
> SimpleCAST.tree->toStringTree(SimpleCAST.tree)->chars);"
> ================================
> and gets the following output:
> Tree : (VAR_DEF char c) (VAR_DEF int x) (FUNC_DECL (FUNC_HDR void bar
> (ARG_DEF int x))) (FUNC_DEF (FUNC_HDR int foo (ARG_DEF int y) (ARG_DEF
> char d)) (BLOCK (VAR_DEF int i) (for (= i 0) (< i 3) (= i (+ i 1))
> (BLOCK (= x 3) (= y 5)))))
>  
> I have a very silly question to ask, so please dont mind :-)
> Is it the output Tree, that I am getting above is Parse tree or AST? 


It is the AST - the tree built by the rewrite rules. The parse tree is
rarely useful.


> Actually , I gone though lot of online documentation but still couldnt
> convince myself the exact difference between parse tree and AST. Some
> article says that Parse tree is a syntactic structure of string where
> interior nodes are non-terminals of grammar and leaf nodes are
> terminals whereas AST has no rule nodes and has only token nodes.

The parse tree is how the parser traversed the input. The AST is what
you build to represent the input for further processing. You can see the
parse tree if you use the JAva version of the example with ANTLRWorks in
debug mode.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/ca10aed3/attachment.html 

From leon.antlr at mac.com  Fri Aug  8 13:21:52 2008
From: leon.antlr at mac.com (Leon Su)
Date: Fri, 08 Aug 2008 13:21:52 -0700
Subject: [antlr-interest] gUnit and Error Recovery
In-Reply-To: <489C2A39.1050109@cs.york.ac.uk>
References: <489B3016.4060607@cs.york.ac.uk>
	<5002B7E9-A631-4788-9DDB-9C5A582A47EF@mac.com>
	<489C2A39.1050109@cs.york.ac.uk>
Message-ID: <5BF82E1E-26DD-480C-BBBA-3CD13279411D@mac.com>

Hi Louis,

gUnit indeed requires ANTLR error messages to be directed to stderr  
ouput which is by default set up in the emitErrorMessage called by  
displayRecognitionError.
Then, gUnit determines  whether a test succeeds or not based on the  
output from stderr.
Thanks for your investigation and please let me know if you have any  
question.

Leon

On Aug 8, 2008, at 4:12 AM, Louis Rose wrote:

> Hi Leon,
>
> Many thanks for your help.
>
> After a little more investigating, I now believe this is an issue  
> with error reporting.
>
> The grammar that I'm using generates a parser which extend a base  
> class, BaseParser. The BaseParser class overrides the  
> displayRecognitionError method, and redirects the output (to an  
> Eclipse console).
>
> Does gUnit require errors to be reported to System.err? If so, I'll  
> find a way to change BaseParser to allow this.
>
> Cheers,
> Louis.
>
> Leon Su wrote:
>> Hi Louis,
>> I just quickly tested the grammar fragment you provided:
>> remove (cls)* from pkg, and add WS:( ' ' | '\t' | '\r' | '\n' )+  
>> {$channel = HIDDEN;};
>> tested by gUnit1.0.2+ANTLR3.1b2 and gUnit-1.0.1+ANTLR3.0.1
>> and both got the failed 2nd test as we expected ( and received the  
>> error msg from ANTLR: line 0:-1 missing RBRACKET at '<EOF>' )
>> If you're using gunit-1.0.1 currently, don't forget to download  
>> the updated gunit-1.0.1.jar Version2 on the wiki page.
>> Please let me know if you any problem.
>> Leon
>> On Aug 7, 2008, at 10:25 AM, Louis Rose wrote:
>>> Hi all,
>>>
>>> I'm currently considering migrating a large number of unit tests  
>>> to gUnit. I have a query about the way gUnit works with ANTLR's  
>>> error recovery capabilities.
>>>
>>> Here's a fragment from an ANTLR grammar that I wish to test:
>>>
>>> pkg: NAME^ LBRACKET! (cls)* RBRACKET!;
>>>
>>> LBRACKET     : '{';
>>> RBRACKET     : '}';
>>> NAME         : ID_START_LETTER (ID_LETTER)*;
>>>
>>> fragment
>>> ID_START_LETTER
>>>     :    '_'
>>>     |    'a'..'z'
>>>     |    'A'..'Z'
>>>     |    '@'
>>>     ;
>>>
>>> fragment
>>> ID_LETTER
>>>     :    ID_START_LETTER
>>>     |    '0'..'9'
>>>     |    '-'
>>>     ;
>>>
>>>
>>> I have the following gUnit tests:
>>>
>>> pkg:
>>>     "Families {}" -> "Families"
>>>     "Families {"    FAIL
>>>
>>> I would expect the second test to verify that a terminating right  
>>> bracket is required. (i.e. parsing would fail). In fact, the  
>>> parser successfully recognises the input from the second test:
>>>
>>> 1 failures found:
>>> test2 (pkg, line6) -
>>> expected: FAIL
>>> actual: OK
>>>
>>> Tests run: 2, Failures: 1
>>>
>>>
>>> Is this working as intended? How can I test that all uses of pkg  
>>> should be terminated with a closing bracket?
>>>
>>> Many thanks,
>>> Louis Rose.
>>>


From titech at metaorb.com  Fri Aug  8 13:23:51 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 8 Aug 2008 13:23:51 -0700 (PDT)
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
Message-ID: <916359.60752.qm@web82308.mail.mud.yahoo.com>

>From the docs I've seen, it seems that the tokenVocab option should work in a parser grammar, but this doesn't seem to work in 3.1b2.

The docs seem to imply that you'd only be interested in doing this in a tree grammar, but I don't see why.

Regards,
--Mike


Mike 
Allbright
DLP 
Products
Texas Instruments, 
Inc.


From oren at ben-kiki.org  Fri Aug  8 13:32:52 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Fri, 8 Aug 2008 13:32:52 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
Message-ID: <200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>

It _almost_ works.

The problem is that even with @synpredicate { true }, ANTLR ignores
@init/@after actions for rules inside syntactic predicates; it inlines
("hoists"?) the rule without them. It does preserve the semantic
predicates in such rules, but in my case these semantic predicates can
not function without the supporting @init action :-(

Is there a way to force @init/@after actions to be executed even when
backtracking>0 ?

On an unrelated note - is it possible to completely disable WS?

Thanks,

    Oren.

On Thu, Aug 7, 2008 at 8:13 PM, Oren Ben-Kiki <oren at ben-kiki.org> wrote:
> Scopes, as of themselves, don't solve my problem. I had to throw in
> @synpredicate { true } so I'd be able to perform actions to update the
> variables even when inside a syntactic predicate, and of course
> protect the "real" actions manually with if (backtracking == 0). I
> ended up using a global stack for the parameter in question - this way
> I don't need to know which "parent" rule set it, and most of the time
> it is passed unchanged anyway so I can just not touch the stack.
> Pretty it ain't, but it works. I think.

From jimi at temporal-wave.com  Fri Aug  8 13:47:55 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 13:47:55 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <916359.60752.qm@web82308.mail.mud.yahoo.com>
References: <916359.60752.qm@web82308.mail.mud.yahoo.com>
Message-ID: <1218228475.6138.107.camel@jimi>

On Fri, 2008-08-08 at 13:23 -0700, titech at metaorb.com wrote:

> >From the docs I've seen, it seems that the tokenVocab option should work in a parser grammar, but this doesn't seem to work in 3.1b2.


You don't need it for a combined grammar, but you DO need it for a
separate parser grammar and lexer grammar.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/f49e7a32/attachment.html 

From jimi at temporal-wave.com  Fri Aug  8 13:51:09 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 13:51:09 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
Message-ID: <1218228669.6138.111.camel@jimi>

On Fri, 2008-08-08 at 13:32 -0700, Oren Ben-Kiki wrote:

> It _almost_ works.
> 
> The problem is that even with @synpredicate { true }, ANTLR ignores
> @init/@after actions for rules inside syntactic predicates; it inlines
> ("hoists"?) the rule without them. It does preserve the semantic
> predicates in such rules, but in my case these semantic predicates can
> not function without the supporting @init action :-(
> 
> Is there a way to force @init/@after actions to be executed even when
> backtracking>0 ?
> 
> On an unrelated note - is it possible to completely disable WS?


Not sure what yo umean here. If you mean you just want the lexer to eat
WS then just use:

WS : (' ' | '\t')+ { skip(); }

But your yaml language seems to be using space indent for structural
meaning (not a good idea if you ask me), so if you just throw it away
you won't have context. Having looked at the specs for Yaml, I am not
convinced that ANTLR is the correct tool for you to use to be honest.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/5055fd6a/attachment.html 

From sharwell at pixelminegames.com  Fri Aug  8 14:11:08 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 8 Aug 2008 16:11:08 -0500
Subject: [antlr-interest] C# target: .NET Framework bug causing
	NullReferenceException, must use this workaround
Message-ID: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>

Here is the bug report I filed with MS:
https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?Fe
edbackID=361125

The error occurs in
Antlr.Runtime.BaseRecognizer.GetErrorMessage(RecognitionException e,
string[] tokenNames):

msg = "mismatched tree node: " + mtne.Node + " expecting " + tokenName;

This line must be changed to:

string mismatchedNode = null;
if ( mtne.Node != null )
{
	mismatchedNode = mtne.Node.ToString();
}
msg = "mismatched tree node: " + mismatchedNode + " expecting " +
tokenName;

According to ECMA-334, it is fine if mismatchedNode is null at the time
of concatenation.

Sam

From oren at ben-kiki.org  Fri Aug  8 14:11:41 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Fri, 8 Aug 2008 14:11:41 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <1218228669.6138.111.camel@jimi>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
Message-ID: <200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>

> ... your yaml language seems to be using space indent for structural meaning
> (not a good idea if you ask me),

Be that as it may... the idea was to have ANTLR *not* do anything
special with white space - just leave it alone and let it be parsed
like any other character. Possible?

> so if you just throw it away you won't have
> context. Having looked at the specs for Yaml, I am not convinced that ANTLR
> is the correct tool for you to use to be honest.

Yes, YAML syntax is hairy - almost as bad as Perl's :-) Still, it
would be nice to use ANTLR for it, since it should allow retargeting
the parser to diferrent platforms...

Oren.

From jimi at temporal-wave.com  Fri Aug  8 14:42:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 14:42:12 -0700
Subject: [antlr-interest] ANTLR generating invalid Java
In-Reply-To: <200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
	<200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
Message-ID: <1218231732.6138.128.camel@jimi>

On Fri, 2008-08-08 at 14:11 -0700, Oren Ben-Kiki wrote:

> > ... your yaml language seems to be using space indent for structural meaning
> > (not a good idea if you ask me),
> 
> Be that as it may... the idea was to have ANTLR *not* do anything
> special with white space - just leave it alone and let it be parsed
> like any other character. Possible?


OK - I am still not following you exactly here. Do you mean that you
want the spaces and tabs to come back to the parser as individual
tokens? In which case you just specify them as part of lexer rules or in
their own lexer rule and they will come back as their own tokens.
Whitespace has no special meaning to ANTLR unless you make it so.

So you can say:

SPACE : ' ';
TAB : '\t';

or even:
TAB : '\t';

SPACE : ' ' (('   ')=>'   ' { $type = TAB; })? ;

And the parser can say:

rule : indent DATA;

indent : (SPACE|TAB)* ;



> > so if you just throw it away you won't have
> > context. Having looked at the specs for Yaml, I am not convinced that ANTLR
> > is the correct tool for you to use to be honest.
> 
> Yes, YAML syntax is hairy - almost as bad as Perl's :-) Still, it
> would be nice to use ANTLR for it, since it should allow retargeting
> the parser to diferrent platforms...


Sure. It might not be the best way to parse it but there will be nothing
wrong with an ANTLR parser that does it, but the hairyness is what is
causing all your semantic predicates to be be necessary of course and
when they are combined in the generated code, they are causing all your
complicated if statements. The predicates are in the target language and
ANTLR does not really knwo what they are other than they are something
that can be used to give boolean true or false. 

We can see that:
:
{ A }?
{ !A} ?
;

Covers all cases and there is no need to ask if (A && !A) then if (A)
else if (!A), but ANTLR does not know this. Of course, it is also
generating too many repeats of some of these things, as you surmise.

I wonder if you are trying to do too much in the parser and what you
really need is for the parer to pick up anything that looks like valid
syntax, and have it produce a tree, which you then walk and match up
indent levels and so on?

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/179f403f/attachment-0001.html 

From Larry.Jones at aspentech.com  Fri Aug  8 15:15:11 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Fri, 8 Aug 2008 17:15:11 -0500
Subject: [antlr-interest] Compile Error When Rewriting Token Buffer in C#
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FBC@houmail3.corp.aspentech.com>

I was attempting to rewrite the token buffer in-place using C#
 
My grammar is:
 
grammar Rewrite;
 

options {
  language=CSharp2;
  output=template;
  rewrite=true;
}
 
// Match 'call foo;'
r  : 'call' ID ';' ->
   template(call={ $text }) "'<call>"
  ;
ID : 'a'..'z'+ ;
WS : (' ' | '\t' | '\r' | '\n')+ { $channel=HIDDEN; } ;

My driver program is:
 
using System;
 
using Antlr.Runtime;
 
namespace Rewrite {
 class Program {
  static void Main(string[] args) {
   ANTLRStringStream input = new ANTLRReaderStream(Console.In);
   RewriteLexer scanner = new RewriteLexer(input);
   TokenRewriteStream tokens = new TokenRewriteStream(scanner);
    RewriteParser parser = new RewriteParser(tokens); 
    parser.r();
    Console.WriteLine("{0}", tokens.ToString());
  }
 }
}

When I compile the program, the compiler generates the following errors:
 
c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser
.cs(113,45): error CS1502: The best overloaded method match for
'Antlr.Runtime.ITokenStream.ToString(int, int)' has some invalid
arguments
c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser
.cs(113,60): error CS1503: Argument '1': cannot convert from 'object' to
'int'
c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser
.cs(113,73): error CS1503: Argument '2': cannot convert from
'Antlr.Runtime.IToken' to 'int'

I verified that this behavior occurs in the C# translation of the
example from _The Definitive ANTLR Reference_
(templates/rewriter/1pass/CMinus); however, the error does NOT occur in
the simpler example grammars/rewrite/T.g. The only difference I could
see between the two is that the latter uses a "constant" template;
whereas the former actually uses template parameters.
 
What am I doing wrong?
 
Thanks.
 
--

Lawrence Allan Jones
Senior Developer / Technical Advisor
Aspen Technology, Inc.
2500 CityWest Blvd. Suite 1500
Houston, Texas 77042
USA
281-504-3324 (work)
281-504-3395 (fax)
larry.jones at aspentech.com
www.aspentech.com <http://www.aspentech.com/> 

 
 	
 

This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/bda588c5/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 2078 bytes
Desc: email_2_03.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/bda588c5/attachment.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 200 bytes
Desc: email_2_04.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/bda588c5/attachment-0001.gif 

From jaluber at gmx.de  Fri Aug  8 15:34:35 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 09 Aug 2008 00:34:35 +0200
Subject: [antlr-interest] Compile Error When Rewriting Token Buffer in C#
In-Reply-To: <690A62A322DBE24FAD5208C158E5DF2E013A6FBC@houmail3.corp.aspentech.com>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FBC@houmail3.corp.aspentech.com>
Message-ID: <489CC9FB.7030900@gmx.de>

Jones, Larry schrieb:
> I was attempting to rewrite the token buffer in-place using C#
>  
> My grammar is:
>  
> grammar Rewrite;
>  
> 
> options {
>   language=CSharp2;
>   output=template;
>   rewrite=true;
> }
>  
> // Match 'call foo;'
> r  : 'call' ID ';' ->
>    template(call={ $text }) "'<call>"
>   ;
> ID : 'a'..'z'+ ;
> WS : (' ' | '\t' | '\r' | '\n')+ { $channel=HIDDEN; } ;
> My driver program is:
>  
> using System;
>  
> using Antlr.Runtime;
>  
> namespace Rewrite {
>  class Program {
>   static void Main(string[] args) {
>    ANTLRStringStream input = new ANTLRReaderStream(Console.In);
>    RewriteLexer scanner = new RewriteLexer(input);
>    TokenRewriteStream tokens = new TokenRewriteStream(scanner);
>     RewriteParser parser = new RewriteParser(tokens);
>     parser.r();
>     Console.WriteLine("{0}", tokens.ToString());
>   }
>  }
> }
> When I compile the program, the compiler generates the following errors:
>  
> c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser.cs(113,45): 
> error CS1502: The best overloaded method match for 
> 'Antlr.Runtime.ITokenStream.ToString(int, int)' has some invalid arguments
> c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser.cs(113,60): 
> error CS1503: Argument '1': cannot convert from 'object' to 'int'
> c:\home\jonesl\professional\projects\scratch-antlr\rewrite\RewriteParser.cs(113,73): 
> error CS1503: Argument '2': cannot convert from 'Antlr.Runtime.IToken' 
> to 'int'
> I verified that this behavior occurs in the C# translation of the 
> example from _The Definitive ANTLR Reference_ 
> (templates/rewriter/1pass/CMinus); however, the error does NOT occur in 
> the simpler example grammars/rewrite/T.g. The only difference I could 
> see between the two is that the latter uses a "constant" template; 
> whereas the former actually uses template parameters.
>  
> What am I doing wrong?
>  
> Thanks.

Possibly it is a bug. Please send me a mail with both mentioned grammars 
attached, along with test input, so I can verify the cause.

Johannes

From antlr at mirality.co.nz  Fri Aug  8 15:47:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 09 Aug 2008 10:47:30 +1200
Subject: [antlr-interest] Same symbols, but two parsed terms
In-Reply-To: <E1KRSgB-000C4h-Tu@ffe1.ukr.net>
References: <E1KRSgB-000C4h-Tu@ffe1.ukr.net>
Message-ID: <20080808224755.E511D3522DC@www.antlr.org>

At 02:10 9/08/2008, ?????? ???????? wrote:
>For example, we have an expression  "--".   It 
>must be parsed as NOT '-'-symbol.
>
>And we have a gramar:
>
>   expr : NOT? WORD+;
>   NOT : '-';
>   WORD: '-'+;
>
>input string is "--"
>
>result is "--" term.

This is similar to the recent discussion on 
getting "1..2" to be treated as "INT[1] RANGE[..] 
INT[2]" instead of "FLOAT[1.] FLOAT[.2]".

Basically, the problem here is that your tokens 
are left-ambiguous -- when seeing "--" as input, 
ANTLR needs to choose between multiple 
alternatives: "NOT[-] NOT[-]", "NOT[-] WORD[-]", 
or "WORD[--]".  The latter will always win, since 
a single token always wins against multiple tokens.

You can normally resolve this sort of thing by 
merging the rules and adding predicates to decide 
between the alternatives (thereby resolving the 
ambiguity by giving ANTLR more decision-making context).

However there's an added complication here in 
that you want to match any number of '-'s 
afterwards as a WORD.  That gets a bit tricky.

The first thing you need to do is to convert the 
NOT rule into a fragment (so that it still 
defines the token name but never tries to 
directly output it).  Then you need to modify the 
WORD rule to handle emitting a NOT sometimes.

One way to do it would be to use the modification 
discussed on the Wiki that permits you to emit 
multiple tokens from one rule.  Then, when you 
encounter a '-' as the first character in your 
WORD you can emit a NOT and then emit everything else as a WORD.

Another option is to use a semantic predicate to 
do the same sort of thing -- but this time, if 
you detect that you're processing the first 
character of the WORD (either by checking a flag 
or by checking input.LA(0) [previous character]) 
then emit a NOT and exit, letting ANTLR re-enter 
the WORD rule and generate a WORD the next 
time.  This requires a bit more care (since you 
want to avoid "---" coming out as "NOT NOT NOT"), but it's doable.


From antlr at mirality.co.nz  Fri Aug  8 15:58:02 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 09 Aug 2008 10:58:02 +1200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the
 horror, the horror)
In-Reply-To: <002201c8f992$53314b20$f993e160$@com>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
Message-ID: <20080808225815.1158D11EAD1@www.antlr.org>

At 08:07 9/08/2008, Foust wrote:
>A v3.1 "gotchas" page, along with an Antlr Cookbook would 
>probably go a long way toward helping those new to v3 
>specifically, and ANTLR in general.

While the pain is fresh in your memory, you could always write 
such a page yourself :)  (It is a wiki, after all.)

It's much harder for people who are familiar with a product to 
realise the traps that people get into when they're just learning 
it. 


From oren at ben-kiki.org  Fri Aug  8 16:10:07 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Fri, 8 Aug 2008 16:10:07 -0700
Subject: [antlr-interest] Fwd:  ANTLR generating invalid Java
In-Reply-To: <200e06280808081609h2834dbdck8eaa61471342f27e@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
	<200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
	<1218231732.6138.128.camel@jimi>
	<200e06280808081609h2834dbdck8eaa61471342f27e@mail.gmail.com>
Message-ID: <200e06280808081610x34523f93g9553bf0ca8bc8406@mail.gmail.com>

On Fri, Aug 8, 2008 at 2:42 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> OK - I am still not following you exactly here. Do you mean that you want
> the spaces and tabs to come back to the parser as individual tokens? In
> which case you just specify them as part of lexer rules or in their own
> lexer rule and they will come back as their own tokens. Whitespace has no
> special meaning to ANTLR unless you make it so.

Yes, that's what I'm doing. However the parser still contains an
attempt to invoke WS if none of the other lexical rules match; I added
a { false }? semantic predicate there so it will always fail, which is
a bit of a kludge (the error message returned is not optimal). It
isn't a big deal.

> I wonder if you are trying to do too much in the parser and what you really
> need is for the parer to pick up anything that looks like valid syntax, and
> have it produce a tree, which you then walk and match up indent levels and
> so on?

It isn't that simple... YAML is _very_ context sensitive, so that
doesn't really work, unless it were possible to set up a two-way
communication channel between the parser and the lexer, in effect
merging them. The model is very different than that used by
"programming languages", which ANTLR is superbly adapted to.

There are several hand-coded parsers for YAML, and I'm working on two
approaches in parallel. One is using ANTLR, and the other is
machine-processing the YAML productions to a simplified
recursive-state-machine form, with some special instructions such as
"push_N", "pop_N", and "repeat_N". A run-time that executes these
instructions is relatively easy to create, and even retarget. The
problem is that it would be 100% backtracking (barring any
pre-computed optimization to the instructions). I was hoping to
leverage ANTLR's N/DFA capabilities...

Oren.

From titech at metaorb.com  Fri Aug  8 16:22:18 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 8 Aug 2008 16:22:18 -0700 (PDT)
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
Message-ID: <163911.37818.qm@web82303.mail.mud.yahoo.com>

Jim,


>> On Fri, 2008-08-08 at 13:23 -0700, titech at metaorb.com wrote:

>>>   
>From the docs I've seen, it seems that the tokenVocab option should
work in a parser grammar, but this doesn't seem to work in 3.1b2.

>> 
>> You don't need it for a combined grammar, but you DO need 
it for a separate parser grammar and lexer grammar.
>>
>> Jim


If that's the case, then this might be a bug, because, as far as I can tell, it doesn't work with 3.1b2--unless I'm just using the wrong syntax.

Here's what I've got:

Parse.g:
        parser grammar dsn_hdr;

        options
        {
          tokenVocab=Lex;
        }
       
       /* Parser Rules */


Lex.g:
        lexer grammar Lex;


        /* Lexer Rules */


Of course this all works if I copy the lexer rules to the parser.  Is this the correct syntax? 



Regards,
--Mike


Mike 
Allbright
DLP 
Products
Texas Instruments, 
Inc.

From antlr at mirality.co.nz  Fri Aug  8 16:25:22 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 09 Aug 2008 11:25:22 +1200
Subject: [antlr-interest] Fwd:  ANTLR generating invalid Java
In-Reply-To: <200e06280808081610x34523f93g9553bf0ca8bc8406@mail.gmail.co
 m>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808061523s931f01bsaa20b098b2746afb@mail.gmail.com>
	<A310CBC0-60E6-4973-9443-4AE6D6A8E7A3@cs.usfca.edu>
	<200e06280808071237h29b51852ma662ef1b1c472df1@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
	<200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
	<1218231732.6138.128.camel@jimi>
	<200e06280808081609h2834dbdck8eaa61471342f27e@mail.gmail.com>
	<200e06280808081610x34523f93g9553bf0ca8bc8406@mail.gmail.com>
Message-ID: <20080808232531.7F6983522D5@www.antlr.org>

At 11:10 9/08/2008, Oren Ben-Kiki wrote:
 >Yes, that's what I'm doing. However the parser still contains an
 >attempt to invoke WS if none of the other lexical rules match; I 

 >added a { false }? semantic predicate there so it will always
 >fail, which is a bit of a kludge (the error message returned is
 >not optimal). It isn't a big deal.

What?  The WS rule is a rule in your grammar, so you can do 
whatever you want with it.  And you *want* it to match WS, you 
just don't want it to hide them.  So just make sure it's not 
hiding or skipping the WS tokens and you're golden.


From jimi at temporal-wave.com  Fri Aug  8 17:04:57 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 08 Aug 2008 17:04:57 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <163911.37818.qm@web82303.mail.mud.yahoo.com>
References: <163911.37818.qm@web82303.mail.mud.yahoo.com>
Message-ID: <1218240297.6138.141.camel@jimi>

On Fri, 2008-08-08 at 16:22 -0700, titech at metaorb.com wrote:

> Jim,
> 
> 
> >> On Fri, 2008-08-08 at 13:23 -0700, titech at metaorb.com wrote:
> 
> >>>   
> >From the docs I've seen, it seems that the tokenVocab option should
> work in a parser grammar, but this doesn't seem to work in 3.1b2.
> 
> >> 
> >> You don't need it for a combined grammar, but you DO need 
> it for a separate parser grammar and lexer grammar.
> >>
> >> Jim
> 
> 
> If that's the case, then this might be a bug, because, as far as I can tell, it doesn't work with 3.1b2--unless I'm just using the wrong syntax.
> 
> Here's what I've got:
> 
> Parse.g:
>         parser grammar dsn_hdr;
> 
>         options
>         {
>           tokenVocab=Lex;
>         }
>        
>        /* Parser Rules */
> 
> 
> Lex.g:
>         lexer grammar Lex;
> 
> 
>         /* Lexer Rules */
> 
> 
> Of course this all works if I copy the lexer rules to the parser.  Is this the correct syntax? 


Yes, it is the correct syntax and I verified that it works on b2 on my
local machine. Are you generating the lexer first and is it in the same
directory as the parser? What error message are you getting? Your parser
grammar name needs to be the same as the file name by the way. 

Example:
parser grammar Parse;

options
{
	tokenVocab = Lex;
}

rule : FRED+ EOF;

lexer grammar Lex;

FRED : 'FRED';
WS : (' ' | '\t')+ { skip(); } ;

$ a3 Lex.g
ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008

$ a3 Parse.g
ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008

$ grep FRED *.java

$ grep FRED *.java
Lex.java:    public static final int FRED=4;
..
Parse.java:        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "FRED", "WS"
Parse.java:    public static final int FRED=4;
...





Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/dfd51bc7/attachment.html 

From oren at ben-kiki.org  Fri Aug  8 18:16:14 2008
From: oren at ben-kiki.org (Oren Ben-Kiki)
Date: Fri, 8 Aug 2008 18:16:14 -0700
Subject: [antlr-interest] Fwd:  Fwd: ANTLR generating invalid Java
In-Reply-To: <200e06280808081815o772bcf2vbfc3f4186e20e63b@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
	<200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
	<1218231732.6138.128.camel@jimi>
	<200e06280808081609h2834dbdck8eaa61471342f27e@mail.gmail.com>
	<200e06280808081610x34523f93g9553bf0ca8bc8406@mail.gmail.com>
	<489cd5eb.0906c00a.3fe6.6b2aSMTPIN_ADDED@mx.google.com>
	<200e06280808081815o772bcf2vbfc3f4186e20e63b@mail.gmail.com>
Message-ID: <200e06280808081816i41356577kbfeea2591a7e2838@mail.gmail.com>

On Fri, Aug 8, 2008 at 4:25 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> What?  The WS rule is a rule in your grammar, so you can do whatever you
> want with it.  And you *want* it to match WS, you just don't want it to hide
> them.  So just make sure it's not hiding or skipping the WS tokens and
> you're golden.

<smack self on head> Now why didn't I think of that? :-)
Just because my rules have a naming convention doesn't mean I can't
make use of a "WS" rule...
Just tested this and it works like a charm.

I'm still stumped by the inability to performing actions during
lookahead though...

Oren.

From iank at bearcave.com  Fri Aug  8 18:57:25 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Fri, 8 Aug 2008 18:57:25 -0700
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X (the
	horror, the horror)
In-Reply-To: <489ccf86.0504c00a.4665.ffffbe83SMTPIN_ADDED@mx.google.com>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
	<489ccf86.0504c00a.4665.ffffbe83SMTPIN_ADDED@mx.google.com>
Message-ID: <7f8924df0808081857v45cbec93j7fae3509ac87dbfc@mail.gmail.com>

  Actually, I'm going to see if I can get Lawrence Livermore to give me
permission to publish the query language grammar and Java support code
(although perhaps not the database/SQL generation layer).  I think that it
would make a useful ANTLR example.  Also, I loath SPARQL (the other graph
database query language) and it would be nice to get another example out
there that people could see.

  I really appreciate all of the helpful replies.  Terence and the ANTLR
community rocks!

  Best,

  Ian


On Fri, Aug 8, 2008 at 3:58 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 08:07 9/08/2008, Foust wrote:
>
>> A v3.1 "gotchas" page, along with an Antlr Cookbook would probably go a
>> long way toward helping those new to v3 specifically, and ANTLR in general.
>>
>
> While the pain is fresh in your memory, you could always write such a page
> yourself :)  (It is a wiki, after all.)
>
> It's much harder for people who are familiar with a product to realise the
> traps that people get into when they're just learning it.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080808/dee106e7/attachment.html 

From r_reitzi at cs.uni-kl.de  Sat Aug  9 04:07:40 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sat, 09 Aug 2008 13:07:40 +0200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X
	(the	horror, the horror)
In-Reply-To: <20080808225815.1158D11EAD1@www.antlr.org>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
	<20080808225815.1158D11EAD1@www.antlr.org>
Message-ID: <20080809130740.19377g0tyst5eo4k@horde.verrech.net>

Although I am neither an expert nor long on this list, I observe that  
some simple questions come up very often. Literals in parser rules,  
implicit setup through ordering, Lexer/Parser concept (who does what  
when?) - those are issues confusing many.

I think the problem often lies with ANTLRs approachability. It is very  
easy to write down a grammar in common EBNF, push some things around  
("Oww, if I write this rule name in capitals, it works!") and get, for  
easy examples, what you want. Then, you think yourself a rather  
experienced user and proceed to your real problem, that which brought  
you to ANTLR. You fuck up. There is much to know about the tool and  
about grammars in general (you have to know what ambiguity _is_ before  
you can care about it) before you can be really productive. But ANTLR  
itself, exspecially with great ANTLRWorks, tends to suggest "Just do  
it!", what is not the case today.

Regards

Raphael

"Gavin Lambert" <antlr at mirality.co.nz> wrote (Sat Aug  9 00:58:02 2008):

> At 08:07 9/08/2008, Foust wrote:
>> A v3.1 "gotchas" page, along with an Antlr Cookbook would probably  
>> go a long way toward helping those new to v3 specifically, and  
>> ANTLR in general.
>
> While the pain is fresh in your memory, you could always write such  
> a page yourself :)  (It is a wiki, after all.)
>
> It's much harder for people who are familiar with a product to  
> realise the traps that people get into when they're just learning it.



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080809/4da47186/attachment.bin 

From r_reitzi at cs.uni-kl.de  Sat Aug  9 04:16:53 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sat, 09 Aug 2008 13:16:53 +0200
Subject: [antlr-interest] How to Match a Double-Quote Character
In-Reply-To: <74790.53787.qm@web82303.mail.mud.yahoo.com>
References: <74790.53787.qm@web82303.mail.mud.yahoo.com>
Message-ID: <20080809131653.20863jjg1b1fdko4@horde.verrech.net>

Hi Mike!

You generate Java code (?). In Java, you need to escape ".

Regards

Raphael

"titech at metaorb.com" <titech at metaorb.com> wrote (Fri Aug  8 21:51:21 2008):

> Johannes,
>
> Thanks!
>
> I very nearly replied with "nope,
> didn't work", but then I realized that the period might be part of the
> rule (not just the end of your sentence).  I tried it and, sure enough,
> it worked!
>
> But why?  Doesn't this say you want to match a
> double-quote followed by any character?  And why the \ before the
> double-quote--lots of examples show the double quote within single
> quotes (no \)?
>
> Regards,
> --Mike
>
>
>
>>> Try '\"'.
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080809/f1c0945b/attachment.bin 

From markwright at internode.on.net  Sat Aug  9 05:19:52 2008
From: markwright at internode.on.net (Mark Wright)
Date: Sat, 9 Aug 2008 22:19:52 +1000
Subject: [antlr-interest] Fwd:  Fwd: ANTLR generating invalid Java
In-Reply-To: <200e06280808081816i41356577kbfeea2591a7e2838@mail.gmail.com>
References: <200e06280808061521sfd45967i6b9e305fd7f9ffc7@mail.gmail.com>
	<200e06280808071254k4d223507t47e41009588e41cb@mail.gmail.com>
	<200e06280808081332w573a29dfq9eb4b533266c8cc0@mail.gmail.com>
	<1218228669.6138.111.camel@jimi>
	<200e06280808081411w3e6b306cla80a620123276f66@mail.gmail.com>
	<1218231732.6138.128.camel@jimi>
	<200e06280808081609h2834dbdck8eaa61471342f27e@mail.gmail.com>
	<200e06280808081610x34523f93g9553bf0ca8bc8406@mail.gmail.com>
	<489cd5eb.0906c00a.3fe6.6b2aSMTPIN_ADDED@mx.google.com>
	<200e06280808081815o772bcf2vbfc3f4186e20e63b@mail.gmail.com>
	<200e06280808081816i41356577kbfeea2591a7e2838@mail.gmail.com>
Message-ID: <20080809221952.0000251e@goanna>

On Fri, 8 Aug 2008 18:16:14 -0700
"Oren Ben-Kiki" <oren at ben-kiki.org> wrote:

> I'm still stumped by the inability to performing actions during
> lookahead though...

Please see the 3.1 release notes, section "Miscellaneous", where it
says:

Added

{{...}}

forced action that is executed even during backtracking. Useful for
managing a symbol table even when backtracking; those actions cannot be
turned off because the results of symbol table lookups direct the parse
often.

Regards, Mark

-- 

From jaluber at gmx.de  Sat Aug  9 06:01:09 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 09 Aug 2008 15:01:09 +0200
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <1218240297.6138.141.camel@jimi>
References: <163911.37818.qm@web82303.mail.mud.yahoo.com>
	<1218240297.6138.141.camel@jimi>
Message-ID: <489D9515.7090300@gmx.de>

Jim Idle schrieb:
> On Fri, 2008-08-08 at 16:22 -0700, titech at metaorb.com wrote:
>> Jim,
>>
>>
>> >> On Fri, 2008-08-08 at 13:23 -0700, titech at metaorb.com <mailto:titech at metaorb.com> wrote:
>>
>> >>>   
>> >From the docs I've seen, it seems that the tokenVocab option should
>> work in a parser grammar, but this doesn't seem to work in 3.1b2.
>>
>> >> 
>> >> You don't need it for a combined grammar, but you DO need 
>> it for a separate parser grammar and lexer grammar.
>> >>
>> >> Jim
>>
>>
>> If that's the case, then this might be a bug, because, as far as I can tell, it doesn't work with 3.1b2--unless I'm just using the wrong syntax.
>>
>> Here's what I've got:
>>
>> Parse.g:
>>         parser grammar dsn_hdr;
>>
>>         options
>>         {
>>           tokenVocab=Lex;
>>         }
>>        
>>        /* Parser Rules */
>>
>>
>> Lex.g:
>>         lexer grammar Lex;
>>
>>
>>         /* Lexer Rules */
>>
>>
>> Of course this all works if I copy the lexer rules to the parser.  Is this the correct syntax? 
> 
> Yes, it is the correct syntax and I verified that it works on b2 on my 
> local machine. Are you generating the lexer first and is it in the same 
> directory as the parser? What error message are you getting? Your parser 
> grammar name needs to be the same as the file name by the way.

It should be mentioned that the tokenVocab-option requires the use of 
the tokens file, which must be in the same directory as the grammar 
which uses the tokenVocab-option. There is -o option for ANTLR which 
moves all the output files into another directory, included the 
generated source code files. If that doesn't work for you and you don't 
want merge the directories containing the grammar files, you have to 
include a file copy in your build setup.

Johannes

> 
> Example:
> parser grammar Parse;
> 
> options
> {
> tokenVocab = Lex;
> }
> 
> rule : FRED+ EOF;
> 
> lexer grammar Lex;
> 
> FRED : 'FRED';
> WS : (' ' | '\t')+ { skip(); } ;
> 
> $ a3 Lex.g
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> 
> $ a3 Parse.g
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> 
> $ grep FRED *.java
> 
> $ grep FRED *.java
> Lex.java:    public static final int FRED=4;
> ..
> Parse.java:        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "FRED", "WS"
> Parse.java:    public static final int FRED=4;
> ...
> 
> 
> 
> 
> 
> Jim
> 
> 


From jaluber at gmx.de  Sat Aug  9 06:05:17 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 09 Aug 2008 15:05:17 +0200
Subject: [antlr-interest] C# target: .NET Framework bug
 causing	NullReferenceException, must use this workaround
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>
Message-ID: <489D960D.6010901@gmx.de>

Sam Harwell schrieb:
> Here is the bug report I filed with MS:
> https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?Fe
> edbackID=361125
> 
> The error occurs in
> Antlr.Runtime.BaseRecognizer.GetErrorMessage(RecognitionException e,
> string[] tokenNames):
> 
> msg = "mismatched tree node: " + mtne.Node + " expecting " + tokenName;
> 
> This line must be changed to:
> 
> string mismatchedNode = null;
> if ( mtne.Node != null )
> {
> 	mismatchedNode = mtne.Node.ToString();
> }
> msg = "mismatched tree node: " + mismatchedNode + " expecting " +
> tokenName;
> 
> According to ECMA-334, it is fine if mismatchedNode is null at the time
> of concatenation.
> 
> Sam
> 
Can you tell me in which section ECMA 334 defines this behaviour, too? I 
just like to read it myself. And did you sign the ANTLR Contribution 
License? Otherwise I can't use your bugfix.

Johannes

From kroepke at classdump.org  Sat Aug  9 08:19:21 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 9 Aug 2008 17:19:21 +0200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version 3.X
	(the	horror, the horror)
In-Reply-To: <20080809130740.19377g0tyst5eo4k@horde.verrech.net>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
	<20080808225815.1158D11EAD1@www.antlr.org>
	<20080809130740.19377g0tyst5eo4k@horde.verrech.net>
Message-ID: <EB2A9CBD-B4B8-48EA-B468-0F83F5ADBCF3@classdump.org>

Hi!

On Aug 9, 2008, at 1:07 PM, Raphael Reitzig wrote:

> I think the problem often lies with ANTLRs approachability. It is  
> very easy to write down a grammar in common EBNF, push some things  
> around ("Oww, if I write this rule name in capitals, it works!") and  
> get, for easy examples, what you want. Then, you think yourself a  
> rather experienced user and proceed to your real problem, that which  
> brought you to ANTLR. You fuck up. There is much to know about the  
> tool and about grammars in general (you have to know what ambiguity  
> _is_ before you can care about it) before you can be really  
> productive. But ANTLR itself, exspecially with great ANTLRWorks,  
> tends to suggest "Just do it!", what is not the case today.


I think the main problem is that when programmers realize they need to  
parse something, they often want to parse very ambiguous and ill- 
defined languages. Creating something that "just works" is hard for  
those types of languages, hence the fuck-up part.

However, if you turn on backtracking (and memoize) you generally will  
end up with a working solution, but the programmers (being  
professionals after all) don't like the incurred overhead. That's the  
point when people go "uhhh, what an ugly tool, it's so slow and hard  
to learn". Only that the tool is not that hard to learn (there are  
really only a couple of rules (no pun) you need to follow) but the  
problem domain can be a tough one. Throw in keywords-as-identifiers,  
case insensitivity (in many cases only partly case-insensitive), and  
bona fide ambiguous constructs it is a pain to write parsers.

Often I wonder if people new to ANTLR even bother to check out the  
"getting started" page on the wiki. It's quite disturbing to me to  
think they do not, because when I'm new to a tool I might start  
playing with it as well without reading anything about it, but once I  
don't understand something, I turn to articles or blogs. Looking at http://antlr.org/wiki/display/ANTLR3/FAQ+-+Getting+Started 
  and following one or two links to the excellent intro by Mark  
Volkmann (for example) you should be up and running within a day or  
two, provided you accept the fact that you have to learn new stuff.  
(The "you" is of course not meant to be "you", Raphael :))

Having said that, yeah sure there's room for improvement as with every  
tool out there.

I just realize that probably the biggest source of confusion are  
combined grammars. If a beginner does not grasp the important  
distinction between lexer and parser rules, it's probably best to  
start out with separate grammars for those. Then, all of a sudden,  
realization comes when you see that separation into two files. :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From gaochunguang at 163.com  Sat Aug  9 08:32:28 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Sat, 9 Aug 2008 23:32:28 +0800
Subject: [antlr-interest] About Template Call (String Template)
References: <mailman.1.1218222002.19639.antlr-interest@antlr.org>
Message-ID: <000c01c8fa35$221ff6f0$6401a8c0@alien>

String Template3.1 for .net

when my group file is :
parser(name) ::= "<type(name=\"gao\")>";
type(name) ::= "type <name>"

output is 
 type gao. 

but if my group file is :

parser(name) ::= <<
 <type(name=\"gao\")>";
>>
type(name) ::= "type <name>"
output is nothing. why multi line template cannot work?



From parrt at cs.usfca.edu  Sat Aug  9 08:35:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Aug 2008 08:35:55 -0700
Subject: [antlr-interest] About Template Call (String Template)
In-Reply-To: <000c01c8fa35$221ff6f0$6401a8c0@alien>
References: <mailman.1.1218222002.19639.antlr-interest@antlr.org>
	<000c01c8fa35$221ff6f0$6401a8c0@alien>
Message-ID: <5E9A9106-D903-4D78-B146-9B0CCB57F3E1@cs.usfca.edu>

don't escape " unless you need to.  name="gao"
Ter
On Aug 9, 2008, at 8:32 AM, gaochunguang wrote:

> String Template3.1 for .net
>
> when my group file is :
> parser(name) ::= "<type(name=\"gao\")>";
> type(name) ::= "type <name>"
>
> output is
> type gao.
>
> but if my group file is :
>
> parser(name) ::= <<
> <type(name=\"gao\")>";
>>>
> type(name) ::= "type <name>"
> output is nothing. why multi line template cannot work?
>
>


From jimi at temporal-wave.com  Sat Aug  9 09:22:27 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 09 Aug 2008 09:22:27 -0700
Subject: [antlr-interest] C# target: .NET Framework
	bug	causing	NullReferenceException, must use this workaround
In-Reply-To: <489D960D.6010901@gmx.de>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>
	<489D960D.6010901@gmx.de>
Message-ID: <1218298947.6138.164.camel@jimi>

On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign
the ANTLR Contribution 

> License? Otherwise I can't use your bugfix.


I don't think that is true - it is a few lines that you are going to
type in yourself, probably fairly differently. Hence this is covered by
your own signature I should think. I rarely (ok, never) type in a bug
fix that someone sends in, I just use it as an example of HOW something
MIGHT be fixed IF the behavior it purports to fix IS in fact the
behavior that is wrong ;-)

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080809/0a664d3f/attachment.html 

From Austin_Hastings at Yahoo.com  Sat Aug  9 09:48:47 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 09 Aug 2008 11:48:47 -0500
Subject: [antlr-interest] About Template Call (String Template)
In-Reply-To: <000c01c8fa35$221ff6f0$6401a8c0@alien>
References: <mailman.1.1218222002.19639.antlr-interest@antlr.org>
	<000c01c8fa35$221ff6f0$6401a8c0@alien>
Message-ID: <489DCA6F.2030608@Yahoo.com>

You have escaped your quotes in the second instance, but they don't need 
to be escaped because the template is surrounded by << and >> instead of ".

The result is that your call to <type()> gets a long argument called 
name=\"gao\" instead of an argument called name with a value of "gao".

Get rid of the backslashes in \"gao\" and try again.

=Austin

gaochunguang wrote:
> String Template3.1 for .net
>
> when my group file is :
> parser(name) ::= "<type(name=\"gao\")>";
> type(name) ::= "type <name>"
>
> output is 
>  type gao. 
>
> but if my group file is :
>
> parser(name) ::= <<
>  <type(name=\"gao\")>";
>   
> type(name) ::= "type <name>"
> output is nothing. why multi line template cannot work?
>
>
>   


From francis.andre.kampbell at orange.fr  Sat Aug  9 10:16:46 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sat, 09 Aug 2008 19:16:46 +0200
Subject: [antlr-interest] ANTLRV3: internal error:
 org.antlr.tool.Message.toString(Message.java:124): Assertion failed!
 Message ID 10 created but is not present in errorMsgIDs or warningMsgIDs.
Message-ID: <489DD0FE.6020309@orange.fr>

Hi ANTLRs

Got an internal error in ANTLRWorks 1.1.7 as

[19:13:23] error(10):  internal error: 
org.antlr.tool.Message.toString(Message.java:124): Assertion failed! 
Message ID 10 created but is not present in errorMsgIDs or warningMsgIDs.


Any idea how to bypass this error??

TIA

FA


From parrt at cs.usfca.edu  Sat Aug  9 12:55:41 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Aug 2008 12:55:41 -0700
Subject: [antlr-interest] C# target: .NET Framework
	bug	causing	NullReferenceException, must use this workaround
In-Reply-To: <1218298947.6138.164.camel@jimi>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>
	<489D960D.6010901@gmx.de> <1218298947.6138.164.camel@jimi>
Message-ID: <2DBDE857-022C-4B54-8FCF-779C6A7708D1@cs.usfca.edu>

They can also send via feedback link which has a click-wrap license.
Ter
On Aug 9, 2008, at 9:22 AM, Jim Idle wrote:

> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you  
> sign the ANTLR Contribution
>>
>> License? Otherwise I can't use your bugfix.
>
> I don't think that is true - it is a few lines that you are going to  
> type in yourself, probably fairly differently. Hence this is covered  
> by your own signature I should think. I rarely (ok, never) type in a  
> bug fix that someone sends in, I just use it as an example of HOW  
> something MIGHT be fixed IF the behavior it purports to fix IS in  
> fact the behavior that is wrong ;-)
>
> Jim


From parrt at cs.usfca.edu  Sat Aug  9 12:56:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Aug 2008 12:56:17 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <489D9515.7090300@gmx.de>
References: <163911.37818.qm@web82303.mail.mud.yahoo.com>
	<1218240297.6138.141.camel@jimi> <489D9515.7090300@gmx.de>
Message-ID: <FB9DD806-51E7-4AE4-8ADA-3E238DFF83C0@cs.usfca.edu>


On Aug 9, 2008, at 6:01 AM, Johannes Luber wrote:

>>> Of course this all works if I copy the lexer rules to the parser.   
>>> Is this the correct syntax?
>> Yes, it is the correct syntax and I verified that it works on b2 on  
>> my local machine. Are you generating the lexer first and is it in  
>> the same directory as the parser? What error message are you  
>> getting? Your parser grammar name needs to be the same as the file  
>> name by the way.
>
> It should be mentioned that the tokenVocab-option requires the use  
> of the tokens file, which must be in the same directory as the  
> grammar which uses the tokenVocab-option. There is -o option for  
> ANTLR which moves all the output files into another directory,  
> included the generated source code files. If that doesn't work for  
> you and you don't want merge the directories containing the grammar  
> files, you have to include a file copy in your build setup.

I think ANTLR looks in -lib too for .tokens files.
Ter

From sharwell at pixelminegames.com  Sat Aug  9 12:59:08 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 9 Aug 2008 14:59:08 -0500
Subject: [antlr-interest] C# target: .NET
	Frameworkbug	causing	NullReferenceException,
	must use this workaround
In-Reply-To: <1218298947.6138.164.camel@jimi>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>
	<1218298947.6138.164.camel@jimi>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>

I?m with Jim on this ? if I had only sent you a link to the bug report at MS you would have figured out something similar to what I wrote anyway. When you make the change, make sure to comment that you?re working around anti-documented behavior so no one wants to change it later.

 

The standard says this at the end of page 201 (section 14.7.4 Addition operator):

?If an operand of string concatenation is null, an empty string is substituted.?

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Saturday, August 09, 2008 11:22 AM
To: antlr-interest
Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround

 

On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign the ANTLR Contribution 

 
License? Otherwise I can't use your bugfix.


I don't think that is true - it is a few lines that you are going to type in yourself, probably fairly differently. Hence this is covered by your own signature I should think. I rarely (ok, never) type in a bug fix that someone sends in, I just use it as an example of HOW something MIGHT be fixed IF the behavior it purports to fix IS in fact the behavior that is wrong ;-)

Jim 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080809/e7cb9974/attachment.html 

From jaluber at gmx.de  Sat Aug  9 13:09:44 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 09 Aug 2008 22:09:44 +0200
Subject: [antlr-interest] C# target:
 .NET	Frameworkbug	causing	NullReferenceException, must use this workaround
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>	<1218298947.6138.164.camel@jimi>
	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>
Message-ID: <489DF988.6020505@gmx.de>

Sam Harwell schrieb:
> I?m with Jim on this ? if I had only sent you a link to the bug report 
> at MS you would have figured out something similar to what I wrote 
> anyway. When you make the change, make sure to comment that you?re 
> working around anti-documented behavior so no one wants to change it later.

I decided to use a ternary operator here, because I find it strange that 
a string null is handled differently than an object null (as shown in 
the bugfix which Sam posted). That way I'm safe regarding this bug and 
any possible problem regarding the lack of the license.

Johannes
> 
>  
> 
> The standard says this at the end of page 201 (section 14.7.4 Addition 
> operator):
> 
> ?If an operand of string concatenation is null, an empty string is 
> substituted.?
> 
>  
> 
> Sam
> 
>  
> 
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
> *Sent:* Saturday, August 09, 2008 11:22 AM
> *To:* antlr-interest
> *Subject:* Re: [antlr-interest] C# target: .NET Frameworkbug causing 
> NullReferenceException, must use this workaround
> 
>  
> 
> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign 
> the ANTLR Contribution
> 
>  
> 
> License? Otherwise I can't use your bugfix.
> 
> 
> I don't think that is true - it is a few lines that you are going to 
> type in yourself, probably fairly differently. Hence this is covered by 
> your own signature I should think. I rarely (ok, never) type in a bug 
> fix that someone sends in, I just use it as an example of HOW something 
> MIGHT be fixed IF the behavior it purports to fix IS in fact the 
> behavior that is wrong ;-)
> 
> Jim
> 


From pink at odahoda.de  Sat Aug  9 14:16:56 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 9 Aug 2008 23:16:56 +0200
Subject: [antlr-interest] Runtime backwards compatibility
Message-ID: <543531490808091416r51f43a3bmd041dfd46589294@mail.gmail.com>

Hello ANTLR maniacs,

here's an issue that's been wandering around in my mind for quite a while now:
The runtime for 3.1 breaks compatibility with recognizers generated by
3.0.x - at least for Java and Python, but I assume that the other
targets are affected as well. This conflicts with the way applications
are packaged on many systems, i.e. they handle the runtime library as
separate package that will be updated independently of the main app.
Perhaps some targets don't suffer from this problem, when they have
some versioned import schema, but at least for Python there can be
only one 'antlr3' package installed globally.

I see the following possibilities:

1) The ANTLR 3.x line is not yet mature enough to worry about things
like this. Let's wait until the API has stabilized enough to justify
the extra effort and talk about this later.
2) Application devs are supposed to package the correct runtime with
their application. But they loose the advantage of fine grained
package management systems, i.e. their apps don't benefit
automagically from fixes and improvements of the runtime - even if it
wouldn't break compatibility. That's what they have to do now, even if
1) is true.
3) Make sure that incompatible versions can be installed
simultaneously on a system, e.g. rename the Python package to
'antlr3_1'.
4) Ooops, that's a problem, I haven't thought about this yet.

What are your thoughts?

-Ben

From jaluber at gmx.de  Sat Aug  9 14:30:05 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 09 Aug 2008 23:30:05 +0200
Subject: [antlr-interest] Runtime backwards compatibility
In-Reply-To: <543531490808091416r51f43a3bmd041dfd46589294@mail.gmail.com>
References: <543531490808091416r51f43a3bmd041dfd46589294@mail.gmail.com>
Message-ID: <489E0C5D.6060701@gmx.de>

Benjamin Niemann schrieb:
> Hello ANTLR maniacs,
> 
> here's an issue that's been wandering around in my mind for quite a while now:
> The runtime for 3.1 breaks compatibility with recognizers generated by
> 3.0.x - at least for Java and Python, but I assume that the other
> targets are affected as well. This conflicts with the way applications
> are packaged on many systems, i.e. they handle the runtime library as
> separate package that will be updated independently of the main app.
> Perhaps some targets don't suffer from this problem, when they have
> some versioned import schema, but at least for Python there can be
> only one 'antlr3' package installed globally.
> 
> I see the following possibilities:
> 
> 1) The ANTLR 3.x line is not yet mature enough to worry about things
> like this. Let's wait until the API has stabilized enough to justify
> the extra effort and talk about this later.
> 2) Application devs are supposed to package the correct runtime with
> their application. But they loose the advantage of fine grained
> package management systems, i.e. their apps don't benefit
> automagically from fixes and improvements of the runtime - even if it
> wouldn't break compatibility. That's what they have to do now, even if
> 1) is true.
> 3) Make sure that incompatible versions can be installed
> simultaneously on a system, e.g. rename the Python package to
> 'antlr3_1'.
> 4) Ooops, that's a problem, I haven't thought about this yet.
> 
> What are your thoughts?

For C#, the GAC handles multiple versions of the runtime (however one 
does install assemblies in the GAC...). Breaking API changes aren't thus 
propagated to users of earlier versions - at least that's I've heard, 
.NET should work. Never used that feature myself before, so, more 
knowledgeable people, correct me if I'm wrong.

Otherwise, I do consider ANTLR not stable yet. There are too many 
missing features, too many possible changes to declare ANTLR done. How 
much the targets are affected, is another question. But at earliest 3.2 
will have the features and general maturity to be called by me as the 
real first version which fulfills the promises of Ter.

Johannes
> 
> -Ben
> 


From antlr at mirality.co.nz  Sat Aug  9 19:23:27 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 10 Aug 2008 14:23:27 +1200
Subject: [antlr-interest] C# target: .NET Framework bug causing
 NullReferenceException, must use this workaround
In-Reply-To: <489DF988.6020505@gmx.de>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com>
	<489D960D.6010901@gmx.de> <1218298947.6138.164.camel@jimi>
	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>
	<489DF988.6020505@gmx.de>
Message-ID: <20080810022335.B9E163522B9@www.antlr.org>

At 08:09 10/08/2008, Johannes Luber wrote:
 >I decided to use a ternary operator here, because I find it
 >strange that a string null is handled differently than an object 

 >null (as shown in the bugfix which Sam posted). That way I'm
 >safe regarding this bug and any possible problem regarding the
 >lack of the license.

According to the .NET documentation (I didn't look at the ECMA 
standard, but MS's own docs at 
http://msdn.microsoft.com/en-us/library/system.string.concat.aspx 
says the same thing), they are *supposed* to be handled exactly 
the same (not throwing the exception), but it's evident that the 
implementation doesn't agree :)


From antlr at mirality.co.nz  Sat Aug  9 19:33:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 10 Aug 2008 14:33:54 +1200
Subject: [antlr-interest] Runtime backwards compatibility
In-Reply-To: <489E0C5D.6060701@gmx.de>
References: <543531490808091416r51f43a3bmd041dfd46589294@mail.gmail.com>
	<489E0C5D.6060701@gmx.de>
Message-ID: <20080810023406.72AE23522B9@www.antlr.org>

At 09:30 10/08/2008, Johannes Luber wrote:
 >For C#, the GAC handles multiple versions of the runtime 
(however
 >one does install assemblies in the GAC...). Breaking API changes 

 >aren't thus propagated to users of earlier versions - at least
 >that's I've heard, .NET should work. Never used that feature
 >myself before, so, more knowledgeable people, correct me if
 >I'm wrong.

That's my understanding of how it works (at least as long as the 
assembly is strong-named, which is a requirement to be put into 
the GAC), but I've never availed myself of this either, except to 
note that multiple versions of the .NET Framework itself can be 
installed side-by-side, and if they are then applications will 
continue to run with the versions they were built with instead of 
the latest ones.  (However they *can* use later versions in the 
absence of their desired ones -- but I think that's not automatic, 
but instead because MS attach a manifest to the framework 
explicitly permitting such use.)

In the case of the ANTLR runtimes, I've usually considered them to 
be the sort that you'd deploy privately with the application 
(whether as a .dll next to the app or statically linked to them), 
rather than the sort that'd be centrally managed.

And I'm not convinced that centrally managed runtimes are all that 
commonly flexible either -- in my (admittedly limited) experience 
I've seen a number of programs in the Linux world refuse to work 
with later versions of the CRT and other runtimes until they are 
upgraded themselves.

 >But at earliest 3.2 will have the features and general maturity
 >to be called by me as the real first version which fulfills the
 >promises of Ter.

Not until the lexer's been "fixed" :)  (I know, I know, I do go on 
about that.)


From kroepke at classdump.org  Sun Aug 10 04:53:56 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 13:53:56 +0200
Subject: [antlr-interest] ANTLRV3: internal error:
	org.antlr.tool.Message.toString(Message.java:124): Assertion
	failed! Message ID 10 created but is not present in
	errorMsgIDs or warningMsgIDs.
In-Reply-To: <489DD0FE.6020309@orange.fr>
References: <489DD0FE.6020309@orange.fr>
Message-ID: <860DA971-A2BE-45C8-8D3C-F03AC88093CD@classdump.org>

Hi!

On Aug 9, 2008, at 7:16 PM, Francis ANDRE wrote:

> Got an internal error in ANTLRWorks 1.1.7 as
>
> [19:13:23] error(10):  internal error:  
> org.antlr.tool.Message.toString(Message.java:124): Assertion failed!  
> Message ID 10 created but is not present in errorMsgIDs or  
> warningMsgIDs.
> Any idea how to bypass this error??


This is a bug in one of the error reporting methods of ANTLR. Other  
than finding the place where an error is not being registered in the  
errors bitset, you can't do anything about the failed assertion. So  
far I've been unable to locate the code that causes it.

Looking at the usages in ANTLR, the most likely cause is a wrongly  
specified template action (something like %foo(a={...}) in an action  
of yours). Otherwise it's being used for file errors, and internal  
things that really shouldn't go wrong (DFA construction errors for  
example). Take a look at your template actions, to see if you've made  
a typo somewhere.
If you are not using templates, could you post a small grammar that  
exhibits the problem, please? Then we should be able to pinpoint the  
missing bitset add.

thanks,
-k

-- 
Kay R?pke
http://classdump.org/







From francis.andre.kampbell at orange.fr  Sun Aug 10 05:25:56 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 14:25:56 +0200
Subject: [antlr-interest] ANTLRV3: internal error:
 org.antlr.tool.Message.toString(Message.java:124): Assertion failed!
 Message ID 10 created but is not present in errorMsgIDs or warningMsgIDs.
In-Reply-To: <860DA971-A2BE-45C8-8D3C-F03AC88093CD@classdump.org>
References: <489DD0FE.6020309@orange.fr>
	<860DA971-A2BE-45C8-8D3C-F03AC88093CD@classdump.org>
Message-ID: <489EDE54.4020908@orange.fr>

Hi

Here is the error message
[14:24:16] error(10):  internal error: 
org.antlr.tool.Message.toString(Message.java:124): Assertion failed! 
Message ID 100 created but is not present in errorMsgIDs or warningMsgIDs.

I got it when declaring a empty tokens block as

grammar Foo;

tokens {
}

@header {
    package pippo;
}
...
...

Kay R?pke a ?crit :
>
> Hi!
>
> On Aug 9, 2008, at 7:16 PM, Francis ANDRE wrote:
>
>> Got an internal error in ANTLRWorks 1.1.7 as
>>
>> [19:13:23] error(10):  internal error: 
>> org.antlr.tool.Message.toString(Message.java:124): Assertion failed! 
>> Message ID 10 created but is not present in errorMsgIDs or 
>> warningMsgIDs.
>> Any idea how to bypass this error??
>
>
> This is a bug in one of the error reporting methods of ANTLR. Other 
> than finding the place where an error is not being registered in the 
> errors bitset, you can't do anything about the failed assertion. So 
> far I've been unable to locate the code that causes it.
>
> Looking at the usages in ANTLR, the most likely cause is a wrongly 
> specified template action (something like %foo(a={...}) in an action 
> of yours). Otherwise it's being used for file errors, and internal 
> things that really shouldn't go wrong (DFA construction errors for 
> example). Take a look at your template actions, to see if you've made 
> a typo somewhere.
> If you are not using templates, could you post a small grammar that 
> exhibits the problem, please? Then we should be able to pinpoint the 
> missing bitset add.
>
> thanks,
> -k
>



From francis.andre.kampbell at orange.fr  Sun Aug 10 05:45:43 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 14:45:43 +0200
Subject: [antlr-interest] ANTLRWorks: unable to quit when no grammar is open
Message-ID: <489EE2F7.5090807@orange.fr>

Hi

A small point on ANTLRworks: on cannot quit it when no grammar is open 
while one should be able to.

FA


From francis.andre.kampbell at orange.fr  Sun Aug 10 08:05:09 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 17:05:09 +0200
Subject: [antlr-interest] ANTLRv3: How to get the parser traces as in ANTLR
 v2.X without using the DEbugSocketProxxy??
Message-ID: <489F03A5.1000409@orange.fr>

Hi

I am using ANTLR generated parser/lexer under Eclipse.

How can I run a parser with the old ANTLR V2 traces that were quite ok 
for a debugging under Eclipse??? (when compiling ANTLRv3 with the -debug 
option, I am stacked on the DebugEventSocketProxy...)

Cheers

FA


From kroepke at classdump.org  Sun Aug 10 08:13:37 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 17:13:37 +0200
Subject: [antlr-interest] ANTLRV3: internal error:
	org.antlr.tool.Message.toString(Message.java:124): Assertion
	failed! Message ID 10 created but is not present in
	errorMsgIDs or warningMsgIDs.
In-Reply-To: <489EDE54.4020908@orange.fr>
References: <489DD0FE.6020309@orange.fr>
	<860DA971-A2BE-45C8-8D3C-F03AC88093CD@classdump.org>
	<489EDE54.4020908@orange.fr>
Message-ID: <F5DEE1C3-5AC6-46CF-9C48-03E16726AB8C@classdump.org>

Hi!

On Aug 10, 2008, at 2:25 PM, Francis ANDRE wrote:

> Here is the error message
> [14:24:16] error(10):  internal error:  
> org.antlr.tool.Message.toString(Message.java:124): Assertion failed!  
> Message ID 100 created but is not present in errorMsgIDs or  
> warningMsgIDs.
>
> I got it when declaring a empty tokens block as
>
> grammar Foo;
>
> tokens {
> }
>
> @header {
>   package pippo;
> }


This seems to be fixed in at least 3.1b1:

classdump:tmp kroepke$ antlr31 Foo.g
ANTLR Parser Generator  Version 3.1b1 (May 20, 2008)  1989-2008
error(100): Foo.g:4:1: syntax error: antlr: Foo.g:4:1: unexpected  
token: }

you might want to get ANTLRWorks 1.2 beta and ANTLR 3.1b2.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Sun Aug 10 08:25:23 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 17:25:23 +0200
Subject: [antlr-interest] ANTLRv3: How to get the parser traces as in
	ANTLR v2.X without using the DEbugSocketProxxy??
In-Reply-To: <489F03A5.1000409@orange.fr>
References: <489F03A5.1000409@orange.fr>
Message-ID: <FFE31AF2-8E5F-4EF6-8515-079F82BF3BC1@classdump.org>

Hi!

On Aug 10, 2008, at 5:05 PM, Francis ANDRE wrote:

> I am using ANTLR generated parser/lexer under Eclipse.
>
> How can I run a parser with the old ANTLR V2 traces that were quite  
> ok for a debugging under Eclipse??? (when compiling ANTLRv3 with the  
> -debug option, I am stacked on the DebugEventSocketProxy...)


AFAIK there's no option to directly turn traces on in v3.
However, take a look at http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760 
  on how to build a parse tree.
Alternatively you can make a subclass of  
org.antlr.runtime.debug.BlankDebugEventListener and print out rules as  
you enter/exit them. With tracking nesting levels you can easily print  
out a parse trace. The interface you need to override is minimal,  
though most likely the ParseTreeBuilder already gives you enough  
information to work with.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From o.b.fischer at gmx.de  Sun Aug 10 09:11:08 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Sun, 10 Aug 2008 18:11:08 +0200
Subject: [antlr-interest] Syntaxerror not found if first symbol is wrong
Message-ID: <489F131C.1090601@gmx.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

my grammar is not able to recognize an syntax error if already the first
~ symbol found is not an expected one:

My grammar looks like this:

INT : 'int' ;

ID : ('a'..'z')+ ;

WS : (' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; };

program : (a b ';')+ ;

a : INT ;

b : ID ;

So, any valid input must start with 'int', but if the first symbol found
by the lexer is an ID, the generated parser does not recognize the error.

ANTLR generates the following code:
public final void program() throws RecognitionException {
~  try {
~    {
~      int cnt1 = 0;
~      loop1:
~      do {
~        int alt1 = 2;
~        int LA1_0 = input.LA(1);

~        if ((LA1_0 == INT)) {
~          alt1 = 1;
~        }


~        switch (alt1) {
~          case 1: {
~            pushFollow(FOLLOW_a_in_program154);
~            a();
~            _fsp--;

~            pushFollow(FOLLOW_b_in_program156);
~            b();
~            _fsp--;

~            match(input, SEM, FOLLOW_SEM_in_program158);

~          }
~          break;

~          default:
~            if (cnt1 >= 1) break loop1;
~            EarlyExitException eee =
~                    new EarlyExitException(1, input);
~            throw eee;
~        }
~        cnt1++;
~      } while (true);


~    }

~  }

~  catch (RecognitionException e) {
~    throw e;
~  }
~  finally {
~  }
~  return;
}

So, the ID token falls through the switch-statement. How can I avoid this?

Thank you for your help!

Bye

Oliver



- --
Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
Tel. +49 30 44793251, Mobil: +49 178 7903538
Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.8 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkifExsACgkQbyc4N0PdoAxl+wCgnsLC4BF3d8+BJP049F7w0KoT
F78AoM3aS4yRPVvnVNLTas0ynMXQ1Ul+
=4EvS
-----END PGP SIGNATURE-----

From r_reitzi at cs.uni-kl.de  Sun Aug 10 09:19:46 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 10 Aug 2008 18:19:46 +0200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version
	3.X	(the	horror, the horror)
In-Reply-To: <EB2A9CBD-B4B8-48EA-B468-0F83F5ADBCF3@classdump.org>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
	<20080808225815.1158D11EAD1@www.antlr.org>
	<20080809130740.19377g0tyst5eo4k@horde.verrech.net>
	<EB2A9CBD-B4B8-48EA-B468-0F83F5ADBCF3@classdump.org>
Message-ID: <20080810181946.31856918fm09w408@horde.verrech.net>

Hi!

"Kay R?pke" <kroepke at classdump.org> wrote (Sat Aug  9 17:19:21 2008):

> I think the main problem is that when programmers realize they need  
> to parse something, they often want to parse very ambiguous and  
> ill-defined languages. Creating something that "just works" is hard  
> for those types of languages, hence the fuck-up part.
That, of course, is a hindrance no tool can feature away. I vote for  
language theory for everyone!
("Bah, what do I need computer scientists for? I can program well  
enough myself!" a friend of mine, astrophysicist)

> Often I wonder if people new to ANTLR even bother to check out the  
> "getting started" page on the wiki. It's quite disturbing to me to  
> think they do not, because when I'm new to a tool I might start  
> playing with it as well without reading anything about it, but once  
> I don't understand something, I turn to articles or blogs.
Personally, I did not follow the guidelines very closely. I began  
directly with my original problem (it's not that hard). But I realized  
soon I produced a mess. I then took the old-school path and ordered  
The Book. I hope that Book >= Wiki holds? If not, future editions  
should contain some stuff from there.

> I just realize that probably the biggest source of confusion are  
> combined grammars. If a beginner does not grasp the important  
> distinction between lexer and parser rules, it's probably best to  
> start out with separate grammars for those. Then, all of a sudden,  
> realization comes when you see that separation into two files. :)
I do not understand why combined gramars exist at all. If the only way  
to work with them properly is to separate parser and lexer rules  
completely, well, then it doesn't matter if I have one ore two files.
Given, of course, that ANTLRWorks interprets and debugs as smoothly as  
with combined gramars with separated ones.

Greetings

Raphael

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080810/9a9e3fa0/attachment.bin 

From r_reitzi at cs.uni-kl.de  Sun Aug 10 09:56:03 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 10 Aug 2008 18:56:03 +0200
Subject: [antlr-interest] ANTLRWorks: unable to quit when no grammar
	is	open
In-Reply-To: <489EE2F7.5090807@orange.fr>
References: <489EE2F7.5090807@orange.fr>
Message-ID: <20080810185603.17042fhuqccxz9wk@horde.verrech.net>

Hi!

Works for me (1.1.7).

Raphael

"Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Sun Aug 10  
14:45:43 2008):

> Hi
>
> A small point on ANTLRworks: on cannot quit it when no grammar is  
> open while one should be able to.
>
> FA
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080810/cb81ce1a/attachment.bin 

From francis.andre.kampbell at orange.fr  Sun Aug 10 10:14:47 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 19:14:47 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
Message-ID: <489F2207.2030101@orange.fr>

Hi

When parsing the following program with my grammar:
12345678901234567890
--------------------------
222-AAA = .2 + +3.4.

i got the error message: line 1:3 mismatched character '-' expecting set 
null
The erroneous character is in column 4 and not 3 as posted.

cheers

FA




From pink at odahoda.de  Sun Aug 10 10:53:47 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 10 Aug 2008 19:53:47 +0200
Subject: [antlr-interest] Syntaxerror not found if first symbol is wrong
In-Reply-To: <489F131C.1090601@gmx.de>
References: <489F131C.1090601@gmx.de>
Message-ID: <543531490808101053t27d05390k2684332d0799b278@mail.gmail.com>

Hi Oliver,

If the very first token is an ID, the code will throw an
EarlyExitException - doesn't it? (alt1 sticks to its default value 2,
which is handled by the default case in the switch, which in turn will
raise the exception, because cnt1 is 0)

If you have a sequence INT ID ';' ID, then the loop will exit after
the semicolon, and the parser will not complain about the dangling ID.
If that's what the problem is, then you can solve it by using

program : (a b ';')+  EOF;

-Ben

On Sun, Aug 10, 2008 at 6:11 PM, Oliver B. Fischer <o.b.fischer at gmx.de> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hello,
>
> my grammar is not able to recognize an syntax error if already the first
> ~ symbol found is not an expected one:
>
> My grammar looks like this:
>
> INT : 'int' ;
>
> ID : ('a'..'z')+ ;
>
> WS : (' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; };
>
> program : (a b ';')+ ;
>
> a : INT ;
>
> b : ID ;
>
> So, any valid input must start with 'int', but if the first symbol found
> by the lexer is an ID, the generated parser does not recognize the error.
>
> ANTLR generates the following code:
> public final void program() throws RecognitionException {
> ~  try {
> ~    {
> ~      int cnt1 = 0;
> ~      loop1:
> ~      do {
> ~        int alt1 = 2;
> ~        int LA1_0 = input.LA(1);
>
> ~        if ((LA1_0 == INT)) {
> ~          alt1 = 1;
> ~        }
>
>
> ~        switch (alt1) {
> ~          case 1: {
> ~            pushFollow(FOLLOW_a_in_program154);
> ~            a();
> ~            _fsp--;
>
> ~            pushFollow(FOLLOW_b_in_program156);
> ~            b();
> ~            _fsp--;
>
> ~            match(input, SEM, FOLLOW_SEM_in_program158);
>
> ~          }
> ~          break;
>
> ~          default:
> ~            if (cnt1 >= 1) break loop1;
> ~            EarlyExitException eee =
> ~                    new EarlyExitException(1, input);
> ~            throw eee;
> ~        }
> ~        cnt1++;
> ~      } while (true);
>
>
> ~    }
>
> ~  }
>
> ~  catch (RecognitionException e) {
> ~    throw e;
> ~  }
> ~  finally {
> ~  }
> ~  return;
> }
>
> So, the ID token falls through the switch-statement. How can I avoid this?
>
> Thank you for your help!
>
> Bye
>
> Oliver
>
>
>
> - --
> Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
> Tel. +49 30 44793251, Mobil: +49 178 7903538
> Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.8 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iEYEARECAAYFAkifExsACgkQbyc4N0PdoAxl+wCgnsLC4BF3d8+BJP049F7w0KoT
> F78AoM3aS4yRPVvnVNLTas0ynMXQ1Ul+
> =4EvS
> -----END PGP SIGNATURE-----
>

From r_reitzi at cs.uni-kl.de  Sun Aug 10 11:18:59 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 10 Aug 2008 20:18:59 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
	a	mismatch character error message.
In-Reply-To: <489F2207.2030101@orange.fr>
References: <489F2207.2030101@orange.fr>
Message-ID: <20080810201859.19324wblw9hjhyq8@horde.verrech.net>

Hi!

As computer scientist, Ter counts from zero. Intuitively.

Raphael

"Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Sun Aug 10  
19:14:47 2008):

> Hi
>
> When parsing the following program with my grammar:
> 12345678901234567890
> --------------------------
> 222-AAA = .2 + +3.4.
>
> i got the error message: line 1:3 mismatched character '-' expecting set null
> The erroneous character is in column 4 and not 3 as posted.
>
> cheers
>
> FA
>
>
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080810/424cff36/attachment.bin 

From francis.andre.kampbell at orange.fr  Sun Aug 10 12:14:55 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 21:14:55 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
 in	a	mismatch character error message.
In-Reply-To: <20080810201859.19324wblw9hjhyq8@horde.verrech.net>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
Message-ID: <489F3E2F.6030706@orange.fr>

This is incoherent....  The reported erroneous  line starts at 1 while 
column starts at 0!!

BTW, the common user (the one not scientist but simply middle average 
Cobol programmer) start each column at 1. So how can this could be changed??


Raphael Reitzig a ?crit :
> Hi!
>
> As computer scientist, Ter counts from zero. Intuitively.
>
> Raphael
>
> "Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Sun Aug 10 
> 19:14:47 2008):
>
>> Hi
>>
>> When parsing the following program with my grammar:
>> 12345678901234567890
>> --------------------------
>> 222-AAA = .2 + +3.4.
>>
>> i got the error message: line 1:3 mismatched character '-' expecting 
>> set null
>> The erroneous character is in column 4 and not 3 as posted.
>>
>> cheers
>>
>> FA
>>
>>
>>
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>



From kroepke at classdump.org  Sun Aug 10 13:08:15 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 22:08:15 +0200
Subject: [antlr-interest] ANTLR version 2.X to ANTLR version
	3.X	(the	horror, the horror)
In-Reply-To: <20080810181946.31856918fm09w408@horde.verrech.net>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<7f8924df0808071941x52edecf1mbaf44a1e0ad8b076@mail.gmail.com>
	<002201c8f992$53314b20$f993e160$@com>
	<20080808225815.1158D11EAD1@www.antlr.org>
	<20080809130740.19377g0tyst5eo4k@horde.verrech.net>
	<EB2A9CBD-B4B8-48EA-B468-0F83F5ADBCF3@classdump.org>
	<20080810181946.31856918fm09w408@horde.verrech.net>
Message-ID: <D3EB1AD0-D2C9-4EBD-9EDF-24BE9F4E24A5@classdump.org>

On Aug 10, 2008, at 6:19 PM, Raphael Reitzig wrote:

> "Kay R?pke" <kroepke at classdump.org> wrote (Sat Aug  9 17:19:21 2008):
>
>> I think the main problem is that when programmers realize they need  
>> to parse something, they often want to parse very ambiguous and ill- 
>> defined languages. Creating something that "just works" is hard for  
>> those types of languages, hence the fuck-up part.
> That, of course, is a hindrance no tool can feature away. I vote for  
> language theory for everyone!
> ("Bah, what do I need computer scientists for? I can program well  
> enough myself!" a friend of mine, astrophysicist)

Aah, the physical sciences ;) Oddly enough, I remember that sentence...

>> Often I wonder if people new to ANTLR even bother to check out the  
>> "getting started" page on the wiki. It's quite disturbing to me to  
>> think they do not, because when I'm new to a tool I might start  
>> playing with it as well without reading anything about it, but once  
>> I don't understand something, I turn to articles or blogs.
> Personally, I did not follow the guidelines very closely. I began  
> directly with my original problem (it's not that hard). But I  
> realized soon I produced a mess. I then took the old-school path and  
> ordered The Book. I hope that Book >= Wiki holds? If not, future  
> editions should contain some stuff from there.

The book is a definite must-have, IMHO. However, many people  
complained about the lack of (free) documentation, but almost anything  
I was able to find either on the wiki or in the list archives.  
Granted, getting started with a new tool can be tough, but I think  
there's enough information out there to jump start people, even if  
they haven't got the book (yet).

>> I just realize that probably the biggest source of confusion are  
>> combined grammars. If a beginner does not grasp the important  
>> distinction between lexer and parser rules, it's probably best to  
>> start out with separate grammars for those. Then, all of a sudden,  
>> realization comes when you see that separation into two files. :)
> I do not understand why combined gramars exist at all. If the only  
> way to work with them properly is to separate parser and lexer rules  
> completely, well, then it doesn't matter if I have one ore two files.

I'm lazy, thus I like to actually have them in one file so I can "jump  
to definition". Other than that, I don't think there's any reason for  
it. Internally of course, they are two files :)

> Given, of course, that ANTLRWorks interprets and debugs as smoothly  
> as with combined gramars with separated ones.


It does, though I think you need to use "Debug Remote" and write the  
main class yourself. Then again, if you are not working in Java,  
that's a moot point anyway.
I tend to use "debug remote" all the time, except for the most  
simplistic grammars, because in one way or another those grammars are  
tied to my applications.
Ok, that's not entirely correct: For the latest one, I modified the  
glue code template ANTLRWorks uses, to be able to provide a case  
insensitive character stream.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From francis.andre.kampbell at orange.fr  Sun Aug 10 13:11:53 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 22:11:53 +0200
Subject: [antlr-interest] ANTLRWorks 1.1.7: NPE at
	org.antlr.tool.AssignTokenTypesWalker.aliasTokenIDsAndLiterals(AssignTokenTypesWalker.java:257)
Message-ID: <489F4B89.4090402@orange.fr>

Hi

In ANTLRWorks, with a grammar with a huge number of tokens, got a NPE in 
AssignTokenTypesWalker...

[22:09:04] java.lang.NullPointerException
    at 
org.antlr.tool.AssignTokenTypesWalker.aliasTokenIDsAndLiterals(AssignTokenTypesWalker.java:257)
    at 
org.antlr.tool.AssignTokenTypesWalker.assignTypes(AssignTokenTypesWalker.java:211)
    at 
org.antlr.tool.AssignTokenTypesWalker.grammar(AssignTokenTypesWalker.java:375)
    at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:547)
    at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
    at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown 
Source)
    at org.antlr.works.grammar.EngineGrammar.createParserGrammar(Unknown 
Source)
    at 
org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown Source)
    at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
    at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
    at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)

Any ideas how to bypass the exception??

Cheers

FA



From r_reitzi at cs.uni-kl.de  Sun Aug 10 13:12:15 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 10 Aug 2008 22:12:15 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character
	column	in	a	mismatch character error message.
In-Reply-To: <489F3E2F.6030706@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
Message-ID: <20080810221215.63334cfeuhsxogow@horde.verrech.net>

Cobol does have arrays, doesn't it? Every array I have seen so far has  
been indexed from 0 onwards. This is quite naturally, for first  
element is saved at array adress + 0 times element size Bit.

I wonder why line count starts with 1, though o.o Consistency'd be nice.

Raphael

"Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Sun Aug 10  
21:14:55 2008):

> This is incoherent....  The reported erroneous  line starts at 1  
> while column starts at 0!!
>
> BTW, the common user (the one not scientist but simply middle  
> average Cobol programmer) start each column at 1. So how can this  
> could be changed??
>
>
> Raphael Reitzig a ?crit :
>> Hi!
>>
>> As computer scientist, Ter counts from zero. Intuitively.
>>
>> Raphael
>>
>> "Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Sun Aug  
>> 10 19:14:47 2008):
>>
>>> Hi
>>>
>>> When parsing the following program with my grammar:
>>> 12345678901234567890
>>> --------------------------
>>> 222-AAA = .2 + +3.4.
>>>
>>> i got the error message: line 1:3 mismatched character '-'  
>>> expecting set null
>>> The erroneous character is in column 4 and not 3 as posted.
>>>
>>> cheers
>>>
>>> FA
>>>
>>>
>>>
>>>
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>>
>
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080810/4e1db728/attachment.bin 

From kroepke at classdump.org  Sun Aug 10 13:13:17 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 22:13:17 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <489F3E2F.6030706@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
Message-ID: <A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>

Hi!

On Aug 10, 2008, at 9:14 PM, Francis ANDRE wrote:

> This is incoherent....  The reported erroneous  line starts at 1  
> while column starts at 0!!

well. call it convention.

> BTW, the common user (the one not scientist but simply middle  
> average Cobol programmer) start each column at 1. So how can this  
> could be changed??


off the top of my head, i know two languages that start counting at 1:  
pascal and lua. since i've forced myself to forget all the cobol i  
ever knew, i simply accept that cobol is among those.
changing it: you can override the error reporting methods in your  
generated parser and simply add 1 to the column (charPositionInLine).  
does that sound helpful?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From francis.andre.kampbell at orange.fr  Sun Aug 10 13:33:25 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sun, 10 Aug 2008 22:33:25 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
 in	a	mismatch character error message.
In-Reply-To: <A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
Message-ID: <489F5095.7020602@orange.fr>

 >> column (charPositionInLine). does that sound helpful?
Yes, indeed... but my request was more a change request to ANTLR than a 
user fix..

 >> off the top of my head, i know two languages that start counting at 
1: pascal and lua. since i've forced myself to forget all the cobol i 
ever knew, i simply accept that cobol is among those.

This has little to do with language or array definition and 
references... It is more related to literature in general. In books, 
there is no page 0, no line 0 and no column 0....  All coordinates are 
(1,1) based..and when producing a listing reporting errors, it should 
use also (1,1) coordinate for the common sense....

By the way... I think there is overusage of (0,0) based coordinate in 
computer language... In effect, array indices should always start at 1. 
It is an implementor's problem to adjust the indice by -1 to get an 
indexes... because the first element of a vector is located at the 
address 0... So to avoid this adjustment, computer language's designer 
choose the easiest way for them (which is IMHO a bad side side effect 
between the langage definitionand its implementation)!

So, IMHO, Pascal, Cobol, LUA, Algol, PL/1 are all using the right 
indices way...
>
> Hi!
>
> On Aug 10, 2008, at 9:14 PM, Francis ANDRE wrote:
>
>> This is incoherent....  The reported erroneous  line starts at 1 
>> while column starts at 0!!
>
> well. call it convention.
>
>> BTW, the common user (the one not scientist but simply middle average 
>> Cobol programmer) start each column at 1. So how can this could be 
>> changed??
>
>
> off the top of my head, i know two languages that start counting at 1: 
> pascal and lua. since i've forced myself to forget all the cobol i 
> ever knew, i simply accept that cobol is among those.
> changing it: you can override the error reporting methods in your 
> generated parser and simply add 1 to the column (charPositionInLine). 
> does that sound helpful?
>
> cheers,
> -k



From r_reitzi at cs.uni-kl.de  Sun Aug 10 13:34:01 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 10 Aug 2008 22:34:01 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character
	column	in	a	mismatch character error message.
In-Reply-To: <A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
Message-ID: <20080810223401.17863yyo9o0qm2m8@horde.verrech.net>

> off the top of my head, i know two languages that start counting at  
> 1: pascal and lua.

Such heresy actually exists? *gasp*

Sorry for OT :>

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080810/cd03412f/attachment.bin 

From rschulz at sonic.net  Sun Aug 10 13:41:13 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 10 Aug 2008 13:41:13 -0700
Subject: [antlr-interest]
	=?iso-8859-1?q?ANTLR_version_2=2EX_to_ANTLR_vers?=
	=?iso-8859-1?q?ion_3=2EX_=28_the=09horror_=2C_the_horror=29?=
In-Reply-To: <D3EB1AD0-D2C9-4EBD-9EDF-24BE9F4E24A5@classdump.org>
References: <7f8924df0808071938m24cf66a2p21edbed43e5a9f04@mail.gmail.com>
	<20080810181946.31856918fm09w408@horde.verrech.net>
	<D3EB1AD0-D2C9-4EBD-9EDF-24BE9F4E24A5@classdump.org>
Message-ID: <200808101341.13267.rschulz@sonic.net>

On Sunday 10 August 2008 13:08, Kay R?pke wrote:
> ...
>
> The book is a definite must-have, IMHO. However, many people
> complained about the lack of (free) documentation,

This is where I'd draw the line at accommodating users of open-source 
software.

I really don't believe it's the user's responsibility to create 
documentation (as I occasionally hear suggested, not necessarily on 
this project, when requests or demands for documentation are heard). 
Nor do I believe that users should be expected to read the source code 
and reverse engineer the unspecified details of its operations. And 
black-box experimentation to the same end is no better (perhaps worse).

However, I think users of open-source projects for which no licensing 
fees are required even for use in commercial applications should be 
willing to shell out a few tens of dollars for good documentation 
written by principals or others with deep, wide and accurate knowledge 
of the software they're using.

But them, I'm a sucker for books...


> ...
>
> cheers,
> -k


Randall Schulz

From kroepke at classdump.org  Sun Aug 10 14:39:33 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 10 Aug 2008 23:39:33 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <489F5095.7020602@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
Message-ID: <C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>

Hi!

On Aug 10, 2008, at 10:33 PM, Francis ANDRE wrote:

> >> column (charPositionInLine). does that sound helpful?
> Yes, indeed... but my request was more a change request to ANTLR  
> than a user fix..

I don't think it should change, because it would be an incompatible  
change, in the sense that it would directly affect user code (esp. for  
syntax highlighters etc, and of course error handling).
Since it's very easy to override, my vote would be to leave it alone.
As for the inconsistency argument, yes, it's inconsistent, but I  
frankly I don't think it makes that much of a difference.

> >> off the top of my head, i know two languages that start counting  
> at 1: pascal and lua. since i've forced myself to forget all the  
> cobol i ever knew, i simply accept that cobol is among those.
>
> This has little to do with language or array definition and  
> references... It is more related to literature in general. In books,  
> there is no page 0, no line 0 and no column 0....  All coordinates  
> are (1,1) based..and when producing a listing reporting errors, it  
> should use also (1,1) coordinate for the common sense....

In computer science the majority of systems are 0-based. Although that  
stems from a time which is long in the past, it has carried over, so  
we simply have to deal with it. At least that's my opinion.

> By the way... I think there is overusage of (0,0) based coordinate  
> in computer language... In effect, array indices should always start  
> at 1. It is an implementor's problem to adjust the indice by -1 to  
> get an indexes... because the first element of a vector is located  
> at the address 0... So to avoid this adjustment, computer language's  
> designer choose the easiest way for them (which is IMHO a bad side  
> side effect between the langage definitionand its implementation)!
>
> So, IMHO, Pascal, Cobol, LUA, Algol, PL/1 are all using the right  
> indices way...


I didn't know that this helpful page existed: http://en.wikipedia.org/wiki/Comparison_of_programming_languages_%28array%29#Array_system_cross-reference_list
Clearly, the languages in major use today are favoring 0-based  
indices. And since I have to switch between 0 and 1-based languages  
very often, I'd wish Lua would just do away with the 1-based approach.  
It might be more "intuitive" if you read it as "the first element of  
the array" but I always think of a[n] as the "element n places from  
the beginning", so that's "intuitive" for me. Call me rotten by C ;)

Enough babbling, however. This is an argument neither side can "win",  
simply because there's no correct answer. For the reason given above,  
I think ANTLR should not change its behavior at this point.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From titech at metaorb.com  Sun Aug 10 15:11:03 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Sun, 10 Aug 2008 15:11:03 -0700 (PDT)
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
Message-ID: <32701.2947.qm@web82306.mail.mud.yahoo.com>

I retested with the simple grammar files below.? The combined grammar works fine, but the separate parse file causes an error regarding the literals (error text below).? Do separate parse files require that all literals have associated lexer rules?
?
BTW I just got your book--great stuff, wish I'd looked into ANTLR a long time ago!
?
Thanks,
--Mike
?
?
Parse.g
-----------------------------------------------
parser grammar Parse;
?
options
{
? tokenVocab = Lex;
}
?
rule :???? '(' INT ')' ;
?
?
Lex.g
-----------------------------------------------
lexer grammar Lex;
?
INT: '0' | SIGN? '1'..'9' '0'..'9'*;
?
fragment SIGN: '+' | '-';
?
?
plex.g
-----------------------------------------------
grammar plex;
?
rule :???? '(' INT ')' ;
?
?
INT: '0' | SIGN? '1'..'9' '0'..'9'*;
?
fragment SIGN: '+' | '-';
?
?
?
-----------------------------------------------
>> java org.antlr.Tool Parse.g
ANTLR Parser Generator? Version 3.0.1 (August 13, 2007)? 1989-2007
error(107): Parse.g:8:10: literal has no associated lexer rule: '('
error(107): Parse.g:8:18: literal has no associated lexer rule: ')'
?
?
?
?
?
>On Aug 9, 2008, at 6:01 AM, Johannes Luber wrote:
?
>>>> Of course this all works if I copy the lexer rules to the parser.?? 
>>>> Is this the correct syntax?
>>> Yes, it is the correct syntax and I verified that it works on b2 on? 
>>> my local machine. Are you generating the lexer first and is it in? 
>>> the same directory as the parser? What error message are you? 
>>> getting? Your parser grammar name needs to be the same as the file? 
>>> name by the way.
>>
?
>> It should be mentioned that the tokenVocab-option requires the use? 
>> of the tokens file, which must be in the same directory as the? 
>> grammar which uses the tokenVocab-option. There is -o option for? 
>> ANTLR which moves all the output files into another directory,? 
>> included the generated source code files. If that doesn't work for? 
>> you and you don't want merge the directories containing the grammar? 
>> files, you have to include a file copy in your build setup.
?
>I think ANTLR looks in -lib too for .tokens files.
>Ter

From david.benn at astc-design.com  Sun Aug 10 21:27:44 2008
From: david.benn at astc-design.com (David Benn)
Date: Mon, 11 Aug 2008 13:57:44 +0930
Subject: [antlr-interest] [bug] C Runtime #pragma error in antlr3cyclicdfa.h
Message-ID: <489FBFC0.4080001@astc-design.com>

A colleague discovered that the pop #pragma in antlr3cyclicdfa.h should 
be wrapped in an ANTLR3_WINDOWS #ifdef. Here are the details:

line 63 of antlr3cyclicdfa.h:

#pragma warning (pop)

needs to be replaced with:

#ifdef ANTLR3_WINDOWS
#pragma warning (pop)
#endif

This will ensure no compile warnings/errors with an unmatched warning 
pragma.

Regards,

David

-- 
David Benn
Australian Semiconductor Technology Company (ASTC) Pty Ltd
76 Waymouth Street
Adelaide 5000, South Australia
ABN:   18 117 392 784
Tel:   +61 8 8231 2782
Mob:   +61 407 261163
Email: david.benn at astc-design.com
Web:   www.astc-design.com


From francis.andre.kampbell at orange.fr  Sun Aug 10 23:42:01 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Mon, 11 Aug 2008 08:42:01 +0200
Subject: [antlr-interest] ANTLRv3.1b2: Illegal output option on imported
	lexer grammar??
Message-ID: <489FDF39.9060802@orange.fr>

Hi

With the starting composite grammar Cobol.g
grammar Cobol;
import identificationDivision=IdentificationDivision, 
cobolLexer=CobolLexerRules;


I got an illegal option output while the only output option in the 
CobolLexerRules.g is
lexer grammar CobolLexerRules;
options {
    k=2;
}


Here the ANTLR errput:
ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
warning(149): CobolLexerRules.g:0:0: rewrite syntax or operator with no 
output option; setting output=AST
error(133): CobolLexerRules.g:0:0: illegal option output

What should be the options for the lexer grammar??

cheers

FA



From g.vandeglind at beinformed.nl  Sun Aug 10 23:56:57 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Mon, 11 Aug 2008 08:56:57 +0200
Subject: [antlr-interest] EOF in ANTLR 3.1
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A29B4@apbiex01.beinformed.nl>

Hi all,

I am testing my grammar with the upcomming ANTLR 3.1 release (using the latest beta 3.1b2).
This transition causes problems with the EOF token recognition. With the latest 3.1 beta my grammar has become less strict.
It doesn't seem to look for the EOF token anymore. Has something changed with regards to the EOF token?

Regards, Gerard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/77e405c3/attachment.html 

From david.benn at astc-design.com  Mon Aug 11 01:13:49 2008
From: david.benn at astc-design.com (David Benn)
Date: Mon, 11 Aug 2008 17:43:49 +0930
Subject: [antlr-interest] [bug?] commented scope error
Message-ID: <489FF4BD.4020101@astc-design.com>

If you have a commented line containing a scope symbol reference, e.g.

// $foo::bar = 42;
...
foo :
// scope {
//    int bar;
//}
...
;

ANTLR 3.1b1 still complains that 'bar' does not exist.

This was noticed when the using C Runtime, but I imagine this is 
independent of runtime.

Apologies if this is a known problem.

Regards,

David

-- 
David Benn
Australian Semiconductor Technology Company (ASTC) Pty Ltd
76 Waymouth Street
Adelaide 5000, South Australia
ABN:   18 117 392 784
Tel:   +61 8 8231 2782
Mob:   +61 407 261163
Email: david.benn at astc-design.com
Web:   www.astc-design.com


From antlr at mirality.co.nz  Mon Aug 11 03:04:41 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 11 Aug 2008 22:04:41 +1200
Subject: [antlr-interest] [bug?] commented scope error
In-Reply-To: <489FF4BD.4020101@astc-design.com>
References: <489FF4BD.4020101@astc-design.com>
Message-ID: <20080811100452.A4CE02F431B@www.antlr.org>

At 20:13 11/08/2008, David Benn wrote:
 >If you have a commented line containing a scope symbol 
reference,
 >e.g.
 >
 >// $foo::bar = 42;
 >...
 >foo :
 >// scope {
 >//    int bar;
 >//}
 >...
 >;
 >
 >ANTLR 3.1b1 still complains that 'bar' does not exist.

If that first comment is within a target code block, then this is 
expected behaviour.  ANTLR doesn't know the syntax of target code 
comments, so it will try to perform the substitution regardless.


From jaluber at gmx.de  Mon Aug 11 03:13:21 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 12:13:21 +0200
Subject: [antlr-interest] EOF in ANTLR 3.1
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03273A29B4@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03273A29B4@apbiex01.beinformed.nl>
Message-ID: <48A010C1.90308@gmx.de>

Gerard van de Glind schrieb:
> Hi all,
> 
> I am testing my grammar with the upcomming ANTLR 3.1 release (using the 
> latest beta 3.1b2).
> 
> This transition causes problems with the EOF token recognition. With the 
> latest 3.1 beta my grammar has become less strict.
> 
> It doesn?t seem to look for the EOF token anymore. Has something changed 
> with regards to the EOF token?
> 
> Regards, Gerard
> 

Do you have a start rule with EOF at its end? Or did you remove EOF?

Johannes

From g.vandeglind at beinformed.nl  Mon Aug 11 03:31:53 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Mon, 11 Aug 2008 12:31:53 +0200
Subject: [antlr-interest] EOF in ANTLR 3.1
In-Reply-To: <48A010C1.90308@gmx.de>
References: <07DC8905ABA90249A64135D427E2F70F03273A29B4@apbiex01.beinformed.nl>
	<48A010C1.90308@gmx.de>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A2A5B@apbiex01.beinformed.nl>

> Hi all,
>
> I am testing my grammar with the upcomming ANTLR 3.1 release (using the
> latest beta 3.1b2).
>
> This transition causes problems with the EOF token recognition. With the
> latest 3.1 beta my grammar has become less strict.
>
> It doesn't seem to look for the EOF token anymore. Has something changed
> with regards to the EOF token?
>
> Regards, Gerard
>

Do you have a start rule with EOF at its end? Or did you remove EOF?

Johannes


Hi Johannes and all,

I have a start rule with EOF at each alternative, as follows:

expression
 options { backtrack = true; }
  : formula             EOF!
  | condition   EOF!
  | dateAtom    EOF!
  | stringAtom  EOF!
  ;

Does the backtrack option cause problems?

Regards, Gerard



From francis.andre.kampbell at orange.fr  Mon Aug 11 06:22:34 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Mon, 11 Aug 2008 15:22:34 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
 in	a	mismatch character error message.
In-Reply-To: <C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
Message-ID: <48A03D1A.6030807@orange.fr>

Hi Kay

 >>Enough babbling, however.
 >> This is an argument neither side can "win", simply because there's 
no correct answer.
Think so... the correct answer is the closest to the common sense and 
natural location: that is the (1,1) based coordinate...

BTW, in PL/1, you can declare an vector/array with fixed lower bound and 
higher bound as

DECLARE FOO (10::20) FIXED BIN(15);

and while the FOO vector is allocated from address 0 up to address 9, 
all the references as FOO(NO) will be checked against 10 <= NO <= 20)


 >>For the reason given above, I think ANTLR should not change its 
behavior at this point.
ANTLR has already changed... ANTLR v2 column/line is (1,1) based...  (so 
think about all people moving their grammar from V2 to V3...) So I would 
like ANTLR v3 to use also the (1,1) coordinate...


Kay R?pke a ?crit :
>
> Hi!
>
> On Aug 10, 2008, at 10:33 PM, Francis ANDRE wrote:
>
>> >> column (charPositionInLine). does that sound helpful?
>> Yes, indeed... but my request was more a change request to ANTLR than 
>> a user fix..
>
> I don't think it should change, because it would be an incompatible 
> change, in the sense that it would directly affect user code (esp. for 
> syntax highlighters etc, and of course error handling).
> Since it's very easy to override, my vote would be to leave it alone.
> As for the inconsistency argument, yes, it's inconsistent, but I 
> frankly I don't think it makes that much of a difference.
>
>> >> off the top of my head, i know two languages that start counting 
>> at 1: pascal and lua. since i've forced myself to forget all the 
>> cobol i ever knew, i simply accept that cobol is among those.
>>
>> This has little to do with language or array definition and 
>> references... It is more related to literature in general. In books, 
>> there is no page 0, no line 0 and no column 0....  All coordinates 
>> are (1,1) based..and when producing a listing reporting errors, it 
>> should use also (1,1) coordinate for the common sense....
>
> In computer science the majority of systems are 0-based. Although that 
> stems from a time which is long in the past, it has carried over, so 
> we simply have to deal with it. At least that's my opinion.
>
>> By the way... I think there is overusage of (0,0) based coordinate in 
>> computer language... In effect, array indices should always start at 
>> 1. It is an implementor's problem to adjust the indice by -1 to get 
>> an indexes... because the first element of a vector is located at the 
>> address 0... So to avoid this adjustment, computer language's 
>> designer choose the easiest way for them (which is IMHO a bad side 
>> side effect between the langage definitionand its implementation)!
>>
>> So, IMHO, Pascal, Cobol, LUA, Algol, PL/1 are all using the right 
>> indices way...
>
>
> I didn't know that this helpful page existed: 
> http://en.wikipedia.org/wiki/Comparison_of_programming_languages_%28array%29#Array_system_cross-reference_list 
>
> Clearly, the languages in major use today are favoring 0-based 
> indices. And since I have to switch between 0 and 1-based languages 
> very often, I'd wish Lua would just do away with the 1-based approach. 
> It might be more "intuitive" if you read it as "the first element of 
> the array" but I always think of a[n] as the "element n places from 
> the beginning", so that's "intuitive" for me. Call me rotten by C ;)
>
> Enough babbling, however. This is an argument neither side can "win", 
> simply because there's no correct answer. For the reason given above, 
> I think ANTLR should not change its behavior at this point.
>
> cheers,
> -k



From jaluber at gmx.de  Mon Aug 11 07:20:04 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 16:20:04 +0200
Subject: [antlr-interest] Simple request for help with the C# target
Message-ID: <48A04A94.7060901@gmx.de>

Hi!

Currently only a bug in the template files stops me from releasing the 
C# target, so I'm preparing the runtime distribution already. But I 
noticed that I can't create the .NET 1.1. assemblies myself, as I don't 
have a VS 2003 installation. So can anyone help me out with it? The repo 
contains the current runtime files, but I can also send them via email, too.

The required files are:

- The VS 2003 project file. It requires some files to be added - 
UnwantedTokenException.cs and MissingTokenException.cs to the 
"Antlr.Runtime" directory of the Antlr3.Runtime project (they are in the 
associated directory) and CommonErrorNode.cs to the "Antlr.Runtime.Tree" 
directory. I want to put a working project file into the repository.

- The assemblies Antlr3.Runtime.dll and Antlr3.Utility.dll generated via 
release mode.

- The associated .pdb and .xml files for stack traces and intellisense.

- If possible, also the .chm file. I don't know if VS 2003 includes the 
capability to create them, but in the worst case, I'll use the VS 2008 
one (which will be a bit different), once I find the required option in 
the IDE.

Thanks in advance!
Johannes

From sharwell at pixelminegames.com  Mon Aug 11 08:08:14 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 11 Aug 2008 10:08:14 -0500
Subject: [antlr-interest] C# target update (CL#5191) broke my tree parsers
Message-ID: <86403CA0939415448BCCB83855EFE09A64E05A@Bloodymary.ironwillgames.com>

In TreeParser.cs, GetCurrentInputSymbol was changed to return null, so
rules like the following don't work anymore:

 

rule

:               ^(SOMETHING (item=A | item=B) somethingElse?)

                {

                                HandleItem( item.Token ); // now throws
NullReferenceException

                }

;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/c7aee98b/attachment.html 

From kroepke at classdump.org  Mon Aug 11 08:41:25 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 11 Aug 2008 17:41:25 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <48A03D1A.6030807@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
Message-ID: <7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>

Hi!

On Aug 11, 2008, at 3:22 PM, Francis ANDRE wrote:

> >>Enough babbling, however.
> >> This is an argument neither side can "win", simply because  
> there's no correct answer.
> Think so... the correct answer is the closest to the common sense  
> and natural location: that is the (1,1) based coordinate...

This is a statement of opinion, not truth. Like my statement was one  
of opinion, not truth.

> BTW, in PL/1, you can declare an vector/array with fixed lower bound  
> and higher bound as
>
> DECLARE FOO (10::20) FIXED BIN(15);
>
> and while the FOO vector is allocated from address 0 up to address  
> 9, all the references as FOO(NO) will be checked against 10 <= NO <=  
> 20)

And I see the value in that, don't get me wrong. IIRC Pascal has  
something similar (the index set could be of some specific type, if my  
memory doesn't fail me). OTOH many languages don't have it and that's  
for a reason as well.

> >>For the reason given above, I think ANTLR should not change its  
> behavior at this point.
> ANTLR has already changed... ANTLR v2 column/line is (1,1) based...   
> (so think about all people moving their grammar from V2 to V3...) So  
> I would like ANTLR v3 to use also the (1,1) coordinate...


So many things changed from v2 to v3 (syntax, capabilities, runtime  
library API). And this changed, too, we've had a final release and  
number of beta releases so far, so I think it should not change back  
all of a sudden, especially given that it is so simple to change back  
to 1 in user code (and quite frankly that's probably just a couple of  
lines to write once).

I think we should put this to rest, unless Ter wants to chime in and  
make a decision.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From parrt at cs.usfca.edu  Mon Aug 11 08:44:23 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Aug 2008 08:44:23 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
Message-ID: <D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>

Havent seen the thread but are we talking about lines 1... and char  
position 0... ?  If so, char position is not column so I went with C- 
derivative language indexing as it is the relative position from start  
of line not the column.  Columns start with 1.

Ter

From jaluber at gmx.de  Mon Aug 11 09:03:18 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 18:03:18 +0200
Subject: [antlr-interest] C# target update (CL#5191) broke my tree
	parsers
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E05A@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E05A@Bloodymary.ironwillgames.com>
Message-ID: <48A062C6.6080709@gmx.de>

Sam Harwell schrieb:
> In TreeParser.cs, GetCurrentInputSymbol was changed to return null, so 
> rules like the following don?t work anymore:
> 
> rule
> :               ^(SOMETHING (item=A | item=B) somethingElse?)
>                 {
>                                 HandleItem( item.Token ); // now throws 
> NullReferenceException
>                 }
> ;

Changed that back to original version in CL 5194. Does it work now for you?

Johannes

From sharwell at pixelminegames.com  Mon Aug 11 09:01:57 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 11 Aug 2008 11:01:57 -0500
Subject: [antlr-interest] C# target update (CL#5191) broke my tree
	parsers
In-Reply-To: <48A062C6.6080709@gmx.de>
References: <86403CA0939415448BCCB83855EFE09A64E05A@Bloodymary.ironwillgames.com>
	<48A062C6.6080709@gmx.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E05E@Bloodymary.ironwillgames.com>

I made that single change locally this morning to verify that it was the
cause of the problems I was seeing. We're back in business :)

Sam

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Monday, August 11, 2008 11:03 AM
To: Sam Harwell
Cc: antlr-interest
Subject: Re: [antlr-interest] C# target update (CL#5191) broke my tree
parsers

Sam Harwell schrieb:
> In TreeParser.cs, GetCurrentInputSymbol was changed to return null, so

> rules like the following don't work anymore:
> 
> rule
> :               ^(SOMETHING (item=A | item=B) somethingElse?)
>                 {
>                                 HandleItem( item.Token ); // now
throws 
> NullReferenceException
>                 }
> ;

Changed that back to original version in CL 5194. Does it work now for
you?

Johannes

From jimi at temporal-wave.com  Mon Aug 11 10:10:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 11 Aug 2008 10:10:03 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character
	column	in	a	mismatch character error message.
In-Reply-To: <489F5095.7020602@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
Message-ID: <1218474603.6138.251.camel@jimi>

On Sun, 2008-08-10 at 22:33 +0200, Francis ANDRE wrote:

> >> column (charPositionInLine). does that sound helpful?
> Yes, indeed... but my request was more a change request to ANTLR than a 
> user fix..
> 
>  >> off the top of my head, i know two languages that start counting at 
> 1: pascal and lua. since i've forced myself to forget all the cobol i 
> ever knew, i simply accept that cobol is among those.
> 
> This has little to do with language or array definition and 
> references... It is more related to literature in general. In books, 
> there is no page 0, no line 0 and no column 0....  All coordinates are 
> (1,1) based..and when producing a listing reporting errors, it should 
> use also (1,1) coordinate for the common sense....
> 
> By the way... I think there is overusage of (0,0) based coordinate in 
> computer language... In effect, array indices should always start at 1. 
> It is an implementor's problem to adjust the indice by -1 to get an 
> indexes... because the first element of a vector is located at the 
> address 0... So to avoid this adjustment, computer language's designer 
> choose the easiest way for them (which is IMHO a bad side side effect 
> between the langage definitionand its implementation)!
> 
> So, IMHO, Pascal, Cobol, LUA, Algol, PL/1 are all using the right 
> indices way...


Suffice it to say that there is lots of literature on this and despite a
few dissenting voices, there are many reasons to use 0. Humans don't
necessarily do so because we are not taught to do that, though we
probably should be. A good article on why, by someone well
respected ;-), is here:

http://www.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html

However, 2 minutes of overriding the reporting function (which is really
only for grammar developers doing debugging anyway), and you can make it
be 10 based if you like ;-)

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/f6556d72/attachment.html 

From jimi at temporal-wave.com  Mon Aug 11 10:17:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 11 Aug 2008 10:17:43 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <32701.2947.qm@web82306.mail.mud.yahoo.com>
References: <32701.2947.qm@web82306.mail.mud.yahoo.com>
Message-ID: <1218475063.6138.254.camel@jimi>

On Sun, 2008-08-10 at 15:11 -0700, titech at metaorb.com wrote:

> I retested with the simple grammar files below.  The combined grammar works fine, but the separate parse file causes an error regarding the literals (error text below).  Do separate parse files require that all literals have associated lexer rules?


Yeah - you can't use literals in the parser unless you are using a
combined grammar. My advice to you is not to use literals in the parser,
at least not when starting out, as it can greatly confuse you as to
where the literals are being matched (it is always in the lexer).

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/09442256/attachment.html 

From jimi at temporal-wave.com  Mon Aug 11 10:24:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 11 Aug 2008 10:24:43 -0700
Subject: [antlr-interest] [bug] C Runtime #pragma error
	in	antlr3cyclicdfa.h
In-Reply-To: <489FBFC0.4080001@astc-design.com>
References: <489FBFC0.4080001@astc-design.com>
Message-ID: <1218475483.6138.256.camel@jimi>

On Mon, 2008-08-11 at 13:57 +0930, David Benn wrote:

> A colleague discovered that the pop #pragma in antlr3cyclicdfa.h should 
> be wrapped in an ANTLR3_WINDOWS #ifdef. Here are the details:


Indeed it should, and in fact, now does ;-).

Cheers,

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/d90f04a8/attachment.html 

From titech at metaorb.com  Mon Aug 11 10:26:50 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Mon, 11 Aug 2008 10:26:50 -0700 (PDT)
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
Message-ID: <998954.9217.qm@web82303.mail.mud.yahoo.com>

Jim,
Is it possible to use a combined grammar and ?import? some of the lexer rules?I?ve got a common subset of rules that I?d have to copy over and over, but I?d hate to have to make lexer rules for every literal.
Thanks,
--Mike
Mike Allbright
DLP Products
Texas Instruments, Inc.
>On Sun, 2008-08-10 at 15:11 -0700, titech at metaorb.com wrote: 
>I retested with the simple grammar files below.? The combined grammar works fine, 
>but the separate parse file causes an error regarding the literals (error text 
>below).? Do separate parse files require that all literals have associated lexer 
>rules?
>
>Yeah - you can't use literals in the parser unless you are using a combined grammar. My advice to you is 
>not to use literals in the parser, at least not when starting out, as it can greatly confuse you as to where the 
>literals are being matched (it is always in the lexer).
>
>Jim


From jaluber at gmx.de  Mon Aug 11 10:32:33 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 19:32:33 +0200
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <998954.9217.qm@web82303.mail.mud.yahoo.com>
References: <998954.9217.qm@web82303.mail.mud.yahoo.com>
Message-ID: <48A077B1.5060307@gmx.de>

titech at metaorb.com schrieb:
> Jim,
> Is it possible to use a combined grammar and ?import? some of the lexer rules?I?ve got a common subset of rules that I?d have to copy over and over, but I?d hate to have to make lexer rules for every literal.
> Thanks,
> --Mike

Maybe one can import lexer grammars in lexer grammars?

Johannes

> Mike Allbright
> DLP Products
> Texas Instruments, Inc.
>> On Sun, 2008-08-10 at 15:11 -0700, titech at metaorb.com wrote: 
>> I retested with the simple grammar files below.  The combined grammar works fine, 
>> but the separate parse file causes an error regarding the literals (error text 
>> below).  Do separate parse files require that all literals have associated lexer 
>> rules?
>>
>> Yeah - you can't use literals in the parser unless you are using a combined grammar. My advice to you is 
>> not to use literals in the parser, at least not when starting out, as it can greatly confuse you as to where the 
>> literals are being matched (it is always in the lexer).
>>
>> Jim
> 
> 


From jimi at temporal-wave.com  Mon Aug 11 10:57:21 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 11 Aug 2008 10:57:21 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <998954.9217.qm@web82303.mail.mud.yahoo.com>
References: <998954.9217.qm@web82303.mail.mud.yahoo.com>
Message-ID: <1218477441.6138.280.camel@jimi>

On Mon, 2008-08-11 at 10:26 -0700, titech at metaorb.com wrote:

> Jim,
> Is it possible to use a combined grammar and ?import? some of the lexer rules?I?ve got a common subset of rules that I?d have to copy over and over, but I?d hate to have to make lexer rules for every literal.
> Thanks,
> --Mike

It should be possible if you are using the latest and greatest (see the
polydiff example). But it won't take you too long to make the lexer
rules with ANTLRWorks as it has a tool (right click) that will do this
for you I believe.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/ff49a9f3/attachment.html 

From antlr at mirality.co.nz  Mon Aug 11 12:56:39 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 12 Aug 2008 07:56:39 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
 a	mismatch character error message.
In-Reply-To: <D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
Message-ID: <20080811195652.6FC8E312968@www.antlr.org>

At 03:44 12/08/2008, Terence Parr wrote:
 >Havent seen the thread but are we talking about lines 1... and
 >char position 0... ?  If so, char position is not column so I
 >went with C-derivative language indexing as it is the relative
 >position from start of line not the column.  Columns start with 
1.

Yes, and the issue being discussed is that when printing error 
messages ANTLR seems to display the char position in a format 
where you're expecting to see the column.

Contrary to some other dissenting votes on the list, I think this 
does need to be changed -- however, if you're worried about 
breaking uses of it (which I doubt will affect anyone, except 
possibly ANTLRworks) then maybe it could be deferred until 3.2.


From carter_cheng at yahoo.com  Mon Aug 11 13:29:27 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Mon, 11 Aug 2008 13:29:27 -0700 (PDT)
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
Message-ID: <858634.12553.qm@web50105.mail.re2.yahoo.com>

I have been working on a compiler system for a dialect of an existing language and so far I have been using the ^() syntax to generate the "AST" using ANTLR's tree construction routines. 

The difficulty I have been facing is how best to manipulate these trees during subsequent passed through them especially if multiple passes are needed to check for various properties, construct the symbol table and for type checking. Would this entail using multiple tree grammar files one for each pass?

It seems that it might be easier at present to DIY the AST construction using a tailored representation to the grammar in question as would be done if I was using something like YACC. 

Is this really the case or are there compelling reasons for using the ^() syntax? 

Thanks in advance,

Carter.


      

From francis.andre.kampbell at orange.fr  Mon Aug 11 13:50:37 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Mon, 11 Aug 2008 22:50:37 +0200
Subject: [antlr-interest] ANTLR v3.0.1: Regression from ANTLR v2:?? left
 recusrsive grammar detected while it's not.
Message-ID: <48A0A61D.7070608@orange.fr>

Hi ANTLR's

Upon migration from ANTLR v2 to ANTLR v3 on the following snippet

grammar Cobol;
tokens {  DOT='DOT';    SECTION='SECTION';    IDENT='IDENT';}
debut    :    section;

section returns[PROCEDURE_SECTION section = null]
@init {String s;}  :  section = sectionHeader DOT ;

sectionHeader returns[PROCEDURE_SECTION section = null]
    :    IDENT SECTION    { section = $IDENT.getText(); };
 

got this error: [17:39:46] error(211): Cobol.g:2941:6: [fatal] rule 
section has non-LL(*) decision due to recursive rule invocations 
reachable from alts 1,2.  Resolve by left-factoring or using syntactic 
predicates or using backtrack=true option.

IMHO,  in no way the 'section = ' is a left recursive invocation of the 
section rule, but just the assignment if the result of sectionHeader to 
the PROCEDURE_SECTION section.

What's yours?

FA





From francis.andre.kampbell at orange.fr  Mon Aug 11 13:52:37 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Mon, 11 Aug 2008 22:52:37 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
 a	mismatch character error message.
In-Reply-To: <20080811195652.6FC8E312968@www.antlr.org>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
Message-ID: <48A0A695.8020301@orange.fr>

  Ter

The point is how do you interpret this error message  :line 1:3 
mismatched character '-' expecting set null
on parsing the text below that starts at line 1, column 1.
222-AAA = .2 + +3.4.

Cobol programmer's are used to think in term of line/column (the 
indicator is in column 7 for example) and thus 'line1:3' will be 
interpreted as line 1, column 3 and not line 1, pos 3(with the C 
indexing convention)

So my request is to just to make the error message not subject to 
misinterpretation(even for non cobol error messages)...
and from my point of view: line1:col 4 is better than line 1:pos 3. This 
does not require any change in the indexing or whatsoever...just in the 
message..




Gavin Lambert a ?crit :
>
> At 03:44 12/08/2008, Terence Parr wrote:
> >Havent seen the thread but are we talking about lines 1... and
> >char position 0... ?  If so, char position is not column so I
> >went with C-derivative language indexing as it is the relative
> >position from start of line not the column.  Columns start with 1.
>
> Yes, and the issue being discussed is that when printing error 
> messages ANTLR seems to display the char position in a format where 
> you're expecting to see the column.
>
> Contrary to some other dissenting votes on the list, I think this does 
> need to be changed -- however, if you're worried about breaking uses 
> of it (which I doubt will affect anyone, except possibly ANTLRworks) 
> then maybe it could be deferred until 3.2.
>
>
>



From jaluber at gmx.de  Mon Aug 11 13:59:48 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 22:59:48 +0200
Subject: [antlr-interest] ANTLR v3.0.1: Regression from ANTLR v2:?? left
 recusrsive grammar detected while it's not.
In-Reply-To: <48A0A61D.7070608@orange.fr>
References: <48A0A61D.7070608@orange.fr>
Message-ID: <48A0A844.8050100@gmx.de>

Francis ANDRE schrieb:
> Hi ANTLR's
> 
> Upon migration from ANTLR v2 to ANTLR v3 on the following snippet
> 
> grammar Cobol;
> tokens {  DOT='DOT';    SECTION='SECTION';    IDENT='IDENT';}
> debut    :    section;
> 
> section returns[PROCEDURE_SECTION section = null]
> @init {String s;}  :  section = sectionHeader DOT ;

You have three section-s here - one for the rule, one for return and one 
as label. ANTLR gets confused there. Rename at least the label and the 
return parameter.

Johannes
> 
> sectionHeader returns[PROCEDURE_SECTION section = null]
>    :    IDENT SECTION    { section = $IDENT.getText(); };
> 
> 
> got this error: [17:39:46] error(211): Cobol.g:2941:6: [fatal] rule 
> section has non-LL(*) decision due to recursive rule invocations 
> reachable from alts 1,2.  Resolve by left-factoring or using syntactic 
> predicates or using backtrack=true option.
> 
> IMHO,  in no way the 'section = ' is a left recursive invocation of the 
> section rule, but just the assignment if the result of sectionHeader to 
> the PROCEDURE_SECTION section.
> 
> What's yours?
> 
> FA
> 
> 
> 
> 


From francis.andre.kampbell at orange.fr  Mon Aug 11 14:29:02 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Mon, 11 Aug 2008 23:29:02 +0200
Subject: [antlr-interest] ANTLR v3.0.1: Regression from ANTLR v2:?? left
 recusrsive grammar detected while it's not.
In-Reply-To: <48A0A844.8050100@gmx.de>
References: <48A0A61D.7070608@orange.fr> <48A0A844.8050100@gmx.de>
Message-ID: <48A0AF1E.1010300@orange.fr>

 >>You have three section-s here - one for the rule, one for return and 
one as label. ANTLR gets confused there. Rename at least the label and 
the return parameter.
Yes, I know.. it was done on purpose and works fine in ANTLR v2.. And as 
the grammar has a more than 300 rules and 600 tokens, I would prefer to 
let them as is
Since ANTLR knows perfectly this is an assignment from a returned value 
to a target language variable, IMHO, "section = " could be corrected as 
a reference to the section variable and not an invocation of the 
'section' rule.

Cheers

FA

Johannes Luber a ?crit :
>
> Francis ANDRE schrieb:
>> Hi ANTLR's
>>
>> Upon migration from ANTLR v2 to ANTLR v3 on the following snippet
>>
>> grammar Cobol;
>> tokens {  DOT='DOT';    SECTION='SECTION';    IDENT='IDENT';}
>> debut    :    section;
>>
>> section returns[PROCEDURE_SECTION section = null]
>> @init {String s;}  :  section = sectionHeader DOT ;
>
> You have three section-s here - one for the rule, one for return and 
> one as label. ANTLR gets confused there. Rename at least the label and 
> the return parameter.
>
> Johannes
>>
>> sectionHeader returns[PROCEDURE_SECTION section = null]
>>    :    IDENT SECTION    { section = $IDENT.getText(); };
>>
>>
>> got this error: [17:39:46] error(211): Cobol.g:2941:6: [fatal] rule 
>> section has non-LL(*) decision due to recursive rule invocations 
>> reachable from alts 1,2.  Resolve by left-factoring or using 
>> syntactic predicates or using backtrack=true option.
>>
>> IMHO,  in no way the 'section = ' is a left recursive invocation of 
>> the section rule, but just the assignment if the result of 
>> sectionHeader to the PROCEDURE_SECTION section.
>>
>> What's yours?
>>
>> FA
>>
>>
>>
>>
>
>
>



From parrt at cs.usfca.edu  Mon Aug 11 14:31:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Aug 2008 14:31:55 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
	a	mismatch character error message.
In-Reply-To: <20080811195652.6FC8E312968@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
Message-ID: <582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>


On Aug 11, 2008, at 12:56 PM, Gavin Lambert wrote:

> At 03:44 12/08/2008, Terence Parr wrote:
> >Havent seen the thread but are we talking about lines 1... and
> >char position 0... ?  If so, char position is not column so I
> >went with C-derivative language indexing as it is the relative
> >position from start of line not the column.  Columns start with 1.
>
> Yes, and the issue being discussed is that when printing error  
> messages ANTLR seems to display the char position in a format where  
> you're expecting to see the column.

oh, right.  Well, yeah, people expect column...problem is what to do  
with tabs etc...can override message handler though

Ter

From jaluber at gmx.de  Mon Aug 11 14:37:45 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Aug 2008 23:37:45 +0200
Subject: [antlr-interest] ANTLR v3.0.1: Regression from ANTLR v2:?? left
 recusrsive grammar detected while it's not.
In-Reply-To: <48A0AF1E.1010300@orange.fr>
References: <48A0A61D.7070608@orange.fr> <48A0A844.8050100@gmx.de>
	<48A0AF1E.1010300@orange.fr>
Message-ID: <48A0B129.70700@gmx.de>

Francis ANDRE schrieb:
>  >>You have three section-s here - one for the rule, one for return and 
> one as label. ANTLR gets confused there. Rename at least the label and 
> the return parameter.
> Yes, I know.. it was done on purpose and works fine in ANTLR v2.. And as 
> the grammar has a more than 300 rules and 600 tokens, I would prefer to 
> let them as is
> Since ANTLR knows perfectly this is an assignment from a returned value 
> to a target language variable, IMHO, "section = " could be corrected as 
> a reference to the section variable and not an invocation of the 
> 'section' rule.

The "Since ANTLR knows perfectly this is an assignment from a returned
value to a target language variable" part can be debated, but I don't
know if a label can point to a return value anyway. Also I don't think
it is a good idea to allow the redefinition of names - people can be
easily confused.

Johannes
> Cheers
> 
> FA
> 
> Johannes Luber a ?crit :
>>
>> Francis ANDRE schrieb:
>>> Hi ANTLR's
>>>
>>> Upon migration from ANTLR v2 to ANTLR v3 on the following snippet
>>>
>>> grammar Cobol;
>>> tokens {  DOT='DOT';    SECTION='SECTION';    IDENT='IDENT';}
>>> debut    :    section;
>>>
>>> section returns[PROCEDURE_SECTION section = null]
>>> @init {String s;}  :  section = sectionHeader DOT ;
>>
>> You have three section-s here - one for the rule, one for return and 
>> one as label. ANTLR gets confused there. Rename at least the label and 
>> the return parameter.
>>
>> Johannes
>>>
>>> sectionHeader returns[PROCEDURE_SECTION section = null]
>>>    :    IDENT SECTION    { section = $IDENT.getText(); };
>>>
>>>
>>> got this error: [17:39:46] error(211): Cobol.g:2941:6: [fatal] rule 
>>> section has non-LL(*) decision due to recursive rule invocations 
>>> reachable from alts 1,2.  Resolve by left-factoring or using 
>>> syntactic predicates or using backtrack=true option.
>>>
>>> IMHO,  in no way the 'section = ' is a left recursive invocation of 
>>> the section rule, but just the assignment if the result of 
>>> sectionHeader to the PROCEDURE_SECTION section.
>>>
>>> What's yours?
>>>
>>> FA
>>>
>>>
>>>
>>>
>>
>>
>>
> 
> 


From javafoust at gmail.com  Mon Aug 11 14:44:34 2008
From: javafoust at gmail.com (Foust)
Date: Mon, 11 Aug 2008 14:44:34 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <858634.12553.qm@web50105.mail.re2.yahoo.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
Message-ID: <000301c8fbfb$73495d10$59dc1730$@com>

> Carter Cheng wrote:
> The difficulty I have been facing is how best to manipulate these trees
> during subsequent passed through them especially if multiple passes are
> needed to check for various properties, construct the symbol table and
> for type checking. Would this entail using multiple tree grammar files
> one for each pass?
> 
> It seems that it might be easier at present to DIY the AST construction
> using a tailored representation to the grammar in question as would be
> done if I was using something like YACC.

You could use the same tree walker (generated from one tree grammar file),
but just call it several times with a different action object for the pass
that you want it to execute. That part isn't automatic, but at least you
wouldn't have to duplicate your tree grammar for each pass. Just as a
homegrown walker could be written to be re-used by multiple passes, so could
the Antlr-generated one.

Otherwise, you'd have to duplicate your tree grammar (maybe with a few small
variations in the patterns being looked at) which seems like it could be a
maintenance headache. 

> 
> Is this really the case or are there compelling reasons for using the
> ^() syntax?

In theory, a tree grammar allows you to specify patterns you want matched in
a terse, easy-to-read manner; then it generates the tree walker for you,
executing any custom actions specified.

In practice, it may be a little time-consuming getting the grammar just
right and tracking down issues with what gets matched in what order and how
to manipulate the underlying tree. It feels more brittle than just placing
the actions right in the grammar, like is typically done with yacc, because
when the grammar changes, the tree grammar may have to be updated, too, to
keep functioning. But since your custom tree walker would have to be updated
in the same manner, a text representation of your tree walker is probably
easier to maintain. And since it allows EBNF notation, it's a lot easier to
write in the first place.
 
Brent


From r_reitzi at cs.uni-kl.de  Mon Aug 11 14:57:57 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 11 Aug 2008 23:57:57 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <48A0A695.8020301@orange.fr>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org> <48A0A695.8020301@orange.fr>
Message-ID: <20080811235757.21622s4euwkx2b6s@horde.verrech.net>

I don't get why you insist on your point "for COBOL programers it's  
like that...". Man, who cares? This tool is written in Java, it's main  
target language is Java. So, personally, I would expect it to be  
consistent with Java conventions, not any other language. Java  
conventions are even documented by SUN, unlike those of other languages.
Is there even a COBOL target for ANTLR?

This argument does, of course, not disturb rest of discussion about  
error message style.

Regards

Raphael

"Francis ANDRE" <francis.andre.kampbell at orange.fr> wrote (Mon Aug 11  
22:52:37 2008):

>  Ter
>
> The point is how do you interpret this error message  :line 1:3  
> mismatched character '-' expecting set null
> on parsing the text below that starts at line 1, column 1.
> 222-AAA = .2 + +3.4.
>
> Cobol programmer's are used to think in term of line/column (the  
> indicator is in column 7 for example) and thus 'line1:3' will be  
> interpreted as line 1, column 3 and not line 1, pos 3(with the C  
> indexing convention)
>
> So my request is to just to make the error message not subject to  
> misinterpretation(even for non cobol error messages)...
> and from my point of view: line1:col 4 is better than line 1:pos 3.  
> This does not require any change in the indexing or  
> whatsoever...just in the message..
>
>
>
>
> Gavin Lambert a ?crit :
>>
>> At 03:44 12/08/2008, Terence Parr wrote:
>>> Havent seen the thread but are we talking about lines 1... and
>>> char position 0... ?  If so, char position is not column so I
>>> went with C-derivative language indexing as it is the relative
>>> position from start of line not the column.  Columns start with 1.
>>
>> Yes, and the issue being discussed is that when printing error  
>> messages ANTLR seems to display the char position in a format where  
>> you're expecting to see the column.
>>
>> Contrary to some other dissenting votes on the list, I think this  
>> does need to be changed -- however, if you're worried about  
>> breaking uses of it (which I doubt will affect anyone, except  
>> possibly ANTLRworks) then maybe it could be deferred until 3.2.
>>
>>
>>
>
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/b43d31bf/attachment-0001.bin 

From gerald at certiv.net  Mon Aug 11 22:12:12 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Mon, 11 Aug 2008 22:12:12 -0700
Subject: [antlr-interest] Possible problem with AntlrV3.g
Message-ID: <200808120512.m7C5CNfw003730@zinc.newtechlaw.com>

In the "rule" rule in AntlrV3.g of the Antlr-3.1b2 distribution, does 
not appear as if the "modifier" label gets set and, therefore, is 
never re-written to the AST.

         ( modifier=('protected'|'public'|'private'|'fragment') )?
should be
         ( 
(modifier='protected'|modifier='public'|modifier='private'|modifier='fragment') 
)?

and

     -> ^( RULE id {modifier!=null?adaptor.create(modifier):null} 
^(ARG $arg)? ^(RET $rt)?
should (likely) be
     -> ^( RULE id {$modifier!=null?adaptor.create($modifier):null} 
^(ARG $arg)? ^(RET $rt)?

FWIW, does not seem that the absence of the "$" operator in the 
rewrite phrase affects the generated code: what is generated still 
appears correct.


The original rule is:

rule
         scope {
                 String name;
         }
         :DOC_COMMENT?
         ( modifier=('protected'|'public'|'private'|'fragment') )?
         id {$rule::name = $id.text;}
         '!'?
         ( arg=ARG_ACTION )?
         ( 'returns' rt=ARG_ACTION  )?
         throwsSpec? optionsSpec? ruleScopeSpec? ruleAction*
         ':'altList';'
         exceptionGroup?
             -> ^( RULE id 
{modifier!=null?adaptor.create(modifier):null} ^(ARG $arg)? ^(RET $rt)?
          optionsSpec? ruleScopeSpec? ruleAction*
               altList
               exceptionGroup?
               EOR["EOR"]
             )
         ; 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080811/007e3aad/attachment.html 

From r.a.niemeijer at tue.nl  Tue Aug 12 02:56:41 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Tue, 12 Aug 2008 11:56:41 +0200
Subject: [antlr-interest] How to get a list of all valid options for the
	next token?
Message-ID: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>

Hello everyone,

 

I'm making a program where users construct short sentences by combining
puzzle pieces. This series of puzzle pieces is then converted to text
and parsed by Antlr. Currently the user has access to all the different
pieces at any point in the sentence, even if the grammar would not be
able to parse this. I want to disable all the pieces that cannot come at
that point in the sentence.

My idea was to do this with the help of the exceptions the parser
generates. For example, when it throws a MismatchedTokenException I can
find the expected token through the Expecting property of the exception.
Unfortunately this only works when there's only one possibility. When
there are multiple it instead throws a NoViableAltException or a
MismatchedSetException. I haven't been able to find a list of valid
following tokens in their properties.

 

Can anyone tell me if there is any way of determining the list of valid
tokens after the current token in the sentence?

 

Thanks in advance.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/75342f6f/attachment.html 

From louis at cs.york.ac.uk  Tue Aug 12 05:57:47 2008
From: louis at cs.york.ac.uk (Louis Rose)
Date: Tue, 12 Aug 2008 13:57:47 +0100
Subject: [antlr-interest] Concatenation in Tree Rewriting
Message-ID: <48A188CB.9040001@cs.york.ac.uk>

Hi all,

I was wondering if there's a more elegant way to write the intentions of 
the following grammar rule:

adjective
       :   ADJECTIVE_PREFIX? NAME -> {new CommonTree(new 
CommonToken(ADJECTIVE, ($ADJECTIVE_PREFIX.text == null ? $NAME.text : 
$prefix.text + $NAME.text)))}
       ;

The ADJECTIVE token type is an imaginary token, and has been defined in 
the tokens {} block.

Cheers,
Louis.

From kroepke at classdump.org  Tue Aug 12 08:34:55 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Tue, 12 Aug 2008 17:34:55 +0200
Subject: [antlr-interest] Concatenation in Tree Rewriting
In-Reply-To: <48A188CB.9040001@cs.york.ac.uk>
References: <48A188CB.9040001@cs.york.ac.uk>
Message-ID: <6FBB5E80-F17A-4064-83F2-D09C6658CF85@classdump.org>


On Aug 12, 2008, at 2:57 PM, Louis Rose wrote:

> Hi all,
>
> I was wondering if there's a more elegant way to write the  
> intentions of the following grammar rule:
>
> adjective
>      :   ADJECTIVE_PREFIX? NAME -> {new CommonTree(new  
> CommonToken(ADJECTIVE, ($ADJECTIVE_PREFIX.text == null ?  
> $NAME.text : $prefix.text + $NAME.text)))}
>      ;
>
> The ADJECTIVE token type is an imaginary token, and has been defined  
> in the tokens {} block.


Not directly, I think.

To avoid having the action in the rewrite rule, you could build up the  
prefix-name combination in a separate string.

grammar Imag;

options { output=AST; }
tokens { IMAG; }

PREFIX:	'foo::';
NAME:	'name';

rule
@init {
String name = new String();
}
	:	(PREFIX {name = $PREFIX.text;})? NAME {name += $NAME.text;} ->  
^(IMAG[name])
	;

Or even:

rule
	:	PREFIX? NAME -> ^(IMAG[($PREFIX.text == null ? "" : $PREFIX.text) +  
$NAME.text])
	;

Which I'm surprised is working :P The first  ?: is to work around  
having null turn to "null" when toString is called on it.
I would exactly do it, because it looks really ugly, but it works. I  
prefer the first version.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From troy.daniels at baesystems.com  Tue Aug 12 08:45:20 2008
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Tue, 12 Aug 2008 11:45:20 -0400
Subject: [antlr-interest] Concatenation in Tree Rewriting
Message-ID: <73kku8$eg0j@dmzms99901.na.baesystems.com>

I would think something like this would work

 adjective
        : 
 { String name = ""; } 
    (ADJECTIVE_PREFIX 
      { name += $prefix.text; } )? 
    (NAME
      {name += $NAME.text}) -> 
    {new CommonTree(new CommonToken(ADJECTIVE, name)))}
        ;
 
Basically, you build up name as you go.

I haven't tested this, but it seems like it should work and be clearer.

Troy

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Louis Rose
> Sent: Tuesday, August 12, 2008 8:58 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Concatenation in Tree Rewriting
> 
> Hi all,
> 
> I was wondering if there's a more elegant way to write the 
> intentions of the following grammar rule:
> 
> adjective
>        :   ADJECTIVE_PREFIX? NAME -> {new CommonTree(new 
> CommonToken(ADJECTIVE, ($ADJECTIVE_PREFIX.text == null ? $NAME.text : 
> $prefix.text + $NAME.text)))}
>        ;
> 
> The ADJECTIVE token type is an imaginary token, and has been 
> defined in the tokens {} block.
> 
> Cheers,
> Louis.
> 

From parrt at cs.usfca.edu  Tue Aug 12 10:58:30 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 10:58:30 -0700
Subject: [antlr-interest] Possible problem with AntlrV3.g
In-Reply-To: <200808120512.m7C5CNfw003730@zinc.newtechlaw.com>
References: <200808120512.m7C5CNfw003730@zinc.newtechlaw.com>
Message-ID: <5A02EE61-E277-4684-A850-54EC87C4494F@cs.usfca.edu>


On Aug 11, 2008, at 10:12 PM, Gerald Rosenberg wrote:

> In the "rule" rule in AntlrV3.g of the Antlr-3.1b2 distribution,  
> does not appear as if the "modifier" label gets set and, therefore,  
> is never re-written to the AST.

Yep, got a bug in on that one.
Ter
>
>
>         ( modifier=( 'protected'| 'public' | 'private' |  
> 'fragment' ) )?
> should be
>         ( (modifier= 'protected'|modifier= 'public' |modifier=  
> 'private' |modifier= 'fragment' ) )?
>
> and
>
>     -> ^( RULE id {modifier!=null?adaptor.create(modifier):null}  
> ^(ARG $arg)? ^(RET $rt)?
> should (likely) be
>     -> ^( RULE id {$modifier!=null?adaptor.create($modifier):null}  
> ^(ARG $arg)? ^(RET $rt)?
>
> FWIW, does not seem that the absence of the "$" operator in the  
> rewrite phrase affects the generated code: what is generated still  
> appears correct.
>
>
> The original rule is:
>
> rule
>         scope {
>                  String name;
>         }
>         :DOC_COMMENT?
>         ( modifier=( 'protected'| 'public' | 'private' |  
> 'fragment' ) )?
>         id {$rule::name = $id.text;}
>         '!' ?
>         ( arg=ARG_ACTION )?
>         ( 'returns' rt=ARG_ACTION  )?
>          throwsSpec? optionsSpec? ruleScopeSpec? ruleAction*
>         ':' altList ';'
>          exceptionGroup?
>              -> ^( RULE id {modifier!=null? 
> adaptor.create(modifier):null} ^(ARG $arg)? ^(RET $rt)?
>          optionsSpec? ruleScopeSpec? ruleAction*
>                altList
>                exceptionGroup?
>                EOR["EOR"]
>              )
>         ;


From javafoust at gmail.com  Tue Aug 12 13:00:37 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 12 Aug 2008 13:00:37 -0700
Subject: [antlr-interest] Possible problem with AntlrV3.g
In-Reply-To: <200808120512.m7C5CNfw003730@zinc.newtechlaw.com>
References: <200808120512.m7C5CNfw003730@zinc.newtechlaw.com>
Message-ID: <001601c8fcb6$18c2dbd0$4a489370$@com>

Gerald Rosenberg  wrote:

>  FWIW, does not seem that the absence of the "$" operator 

> in the rewrite phrase affects the generated code: what 

> is generated still appears correct.

 

Unlike for rule references, the Java code generator uses the exact label
name as the local variable name, so $label, currently expands to just
"label". This is not the case for $TOKEN or $rule.

 

Brent

 

Subject: [antlr-interest] Possible problem with AntlrV3.g

 

In the "rule" rule in AntlrV3.g of the Antlr-3.1b2 distribution, does not
appear as if the "modifier" label gets set and, therefore, is never
re-written to the AST.  

        ( modifier=( 'protected'| 'public' | 'private' | 'fragment' ) )?
should be
        ( (modifier= 'protected'|modifier= 'public' |modifier= 'private'
|modifier= 'fragment' ) )?

and

    -> ^( RULE id {modifier!=null?adaptor.create(modifier):null} ^(ARG
$arg)? ^(RET $rt)?
should (likely) be
    -> ^( RULE id {$modifier!=null?adaptor.create($modifier):null} ^(ARG
$arg)? ^(RET $rt)?

FWIW, does not seem that the absence of the "$" operator in the rewrite
phrase affects the generated code: what is generated still appears correct.


The original rule is:

rule
        scope {
                 String name;
        }
        :DOC_COMMENT?
        ( modifier=( 'protected'| 'public' | 'private' | 'fragment' ) )?
        id {$rule::name = $id.text;}
        '!' ?
        ( arg=ARG_ACTION )?
        ( 'returns' rt=ARG_ACTION  )?
         throwsSpec? optionsSpec? ruleScopeSpec? ruleAction*
        ':' altList ';'
         exceptionGroup?
             -> ^( RULE id {modifier!=null?adaptor.create(modifier):null}
^(ARG $arg)? ^(RET $rt)?
         optionsSpec? ruleScopeSpec? ruleAction*
               altList
               exceptionGroup?
               EOR["EOR"]
             )
        ; 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/91f25c7c/attachment.html 

From parrt at cs.usfca.edu  Tue Aug 12 13:08:25 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 13:08:25 -0700
Subject: [antlr-interest] ANTLR v3.1 released!
Message-ID: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>

Get it while it's hot!

http://www.antlr.org/download.html

Thanks to all the target developers for there hard work!!!

http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets

Release notes:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes

API doc:

http://www.antlr.org/api/

Ter

From antlr at mirality.co.nz  Tue Aug 12 14:37:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 13 Aug 2008 09:37:54 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
 a	mismatch character error message.
In-Reply-To: <582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
Message-ID: <20080812213804.4BEA411ED00@www.antlr.org>

At 09:31 12/08/2008, Terence Parr wrote:
 >oh, right.  Well, yeah, people expect column...problem is what 
to
 >do with tabs etc...can override message handler though

True, tabs could get tricky.

Still, couldn't the lexer have a setTabSize() method or 
something?  Default it to 8, since that's the official standard 
tab size (even though most people usually reduce it), and let the 
driver code (or ANTLRworks) modify as needed.  Then ANTLR can 
generate errors using the "true" column number instead of the char 
position, which is fairly meaningless to an end user.

And yes, the handler can be overridden.  But if it behaves as 
people expect out of the box then it'll lead to less confusion, 
especially for ANTLR newbies.  And I think there's already enough 
things to confuse newbies as it is ;)

I guess this means that the token would have to track both column 
number and char position, though, since one cannot be simply 
derived from the other.  (Actually, on that note: does it also 
track the absolute position in the char stream, instead of that 
relative to the start of line?  That could also be useful, if not.)


From parrt at cs.usfca.edu  Tue Aug 12 14:50:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 14:50:27 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
	a	mismatch character error message.
In-Reply-To: <20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
Message-ID: <8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>


On Aug 12, 2008, at 2:37 PM, Gavin Lambert wrote:

> At 09:31 12/08/2008, Terence Parr wrote:
> >oh, right.  Well, yeah, people expect column...problem is what to
> >do with tabs etc...can override message handler though
>
> True, tabs could get tricky.
>
> Still, couldn't the lexer have a setTabSize() method or something?   
> Default it to 8, since that's the official standard tab size (even  
> though most people usually reduce it), and let the driver code (or  
> ANTLRworks) modify as needed.

that was how v2 worked I think...still was trouble ;)

Ter

From javafoust at gmail.com  Tue Aug 12 15:23:46 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 12 Aug 2008 15:23:46 -0700
Subject: [antlr-interest] Expr.text null?
Message-ID: <000701c8fcca$17bec230$473c4690$@com>

Does it make sense that a matched sub-rule returns null for its text
attribute?

 

That is, the following rule matches the input AST just fine.

 

tree grammar;

expr : a? b;

 

a : ^(SOME_TOKEN someargs)

b: ^(etc.)

 

 

But when the text of a is desired, it always returns null, whether in the
rule action, or in a sub-rule action, as below:

 

expr : (a {System.out.println($a.text); } )?  b  ;

 

prints "null".

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/a75c8e84/attachment.html 

From parrt at cs.usfca.edu  Tue Aug 12 15:31:39 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 15:31:39 -0700
Subject: [antlr-interest] Expr.text null?
In-Reply-To: <000701c8fcca$17bec230$473c4690$@com>
References: <000701c8fcca$17bec230$473c4690$@com>
Message-ID: <4F61D77D-FBCC-444F-80B0-0E5A810A647F@cs.usfca.edu>

should work.  java target right?  did you setTokenStream on the node  
stream?
Ter
On Aug 12, 2008, at 3:23 PM, Foust wrote:

> Does it make sense that a matched sub-rule returns null for its text  
> attribute?
>
> That is, the following rule matches the input AST just fine.
>
> tree grammar;
> expr : a? b;
>
> a : ^(SOME_TOKEN someargs)
> b: ^(etc?)
>
>
> But when the text of a is desired, it always returns null, whether  
> in the rule action, or in a sub-rule action, as below:
>
> expr : (a {System.out.println($a.text); } )?  b  ;
>
> prints ?null?.
>
>


From jimi at temporal-wave.com  Tue Aug 12 15:51:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 12 Aug 2008 15:51:54 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <20080812213804.4BEA411ED00@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213804.4BEA411ED00@www.antlr.org>
Message-ID: <1218581514.6138.408.camel@jimi>

On Wed, 2008-08-13 at 09:37 +1200, Gavin Lambert wrote:

> At 09:31 12/08/2008, Terence Parr wrote:
>  >oh, right.  Well, yeah, people expect column...problem is what 
> to
>  >do with tabs etc...can override message handler though
> 
> True, tabs could get tricky.
> 
> Still, couldn't the lexer have a setTabSize() method or 
> something?  Default it to 8, since that's the official standard 
> tab size (even though most people usually reduce it), and let the 
> driver code (or ANTLRworks) modify as needed.  Then ANTLR can 
> generate errors using the "true" column number instead of the char 
> position, which is fairly meaningless to an end user.
> 
> And yes, the handler can be overridden.  But if it behaves as 
> people expect out of the box then it'll lead to less confusion, 
> especially for ANTLR newbies.  And I think there's already enough 
> things to confuse newbies as it is ;)
> 
> I guess this means that the token would have to track both column 
> number and char position, though, since one cannot be simply 
> derived from the other.  (Actually, on that note: does it also 
> track the absolute position in the char stream, instead of that 
> relative to the start of line?  That could also be useful, if not.)


Once you start adding all these traces then you find the lexers generate
3 tokens a minute. The base information is all there and I think FAQ #1
just needs to be: "Why you need your own error message printing
function."

The C runtime does track the absolute address of the start of the line
that the token exists on though as this is very useful for error message
printers and is just a sinlge assignment at a strategic place. Absolute
position is already tracked in all runtimes.

Jim

> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/3a06cc5c/attachment-0001.html 

From jimi at temporal-wave.com  Tue Aug 12 15:58:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 12 Aug 2008 15:58:43 -0700
Subject: [antlr-interest] Antlr C target and Objective-c
In-Reply-To: <00F2B120-43CD-4C3B-A6EC-806DCDB2B796@hogbaysoftware.com>
References: <D7707F3B-BF97-42A4-B89D-3F125E20E7D6@hogbaysoftware.com>
	<1217785242.8413.26.camel@jimi>
	<00F2B120-43CD-4C3B-A6EC-806DCDB2B796@hogbaysoftware.com>
Message-ID: <1218581923.6138.415.camel@jimi>

On Tue, 2008-08-12 at 18:44 -0400, Jesse Grosjean wrote:

> Jim,
> 
> Not sure if I should ask report these to you directly, or post to  
> antlr-interest. Please let me know.


Copied to list as this concerns everyone using the C target.

> 
> I just downloaded 3.1 and generated my AST grammar for the C target.  
> It appears that there is a problem with the generation template. For  
> example here's what I got in my parser.h file:
> 
> typedef struct TPQParser_statements_return_struct
> {
>      /** Generic return elements for ANTLR3 rules that are not in tree  
> parsers or returning trees
>       */
>      pANTLR3_COMMON_TOKEN    start;
>      pANTLR3_COMMON_TOKEN    stop;
>            tree;
> }


You need to set the option:

option
{
    ASTLabelType = pANTLR3_BASE_TREE;
}

in your grammar files. It should default in string template but does not
seem to in some places.

> 
> Not the "tree'" doesn't have an associated type, and so the generated  
> file won't compile. Replacing that line with:
> 
>      pANTLR3_BASE_TREE	    tree;
> 
> Seems to fix the problem.
> 
> Second issue, probably just OS X related, but when I run autoconf to  
> build the runtime I get this error on a vanilla OS X Leopard:
> 
> $ autoconf
> configure.ac:49: error: possibly undefined macro: AM_INIT_AUTOMAKE
>        If this token and others are legitimate, please use
> m4_pattern_allow.
>        See the Autoconf documentation.
> configure.ac:52: error: possibly undefined macro: AM_MAINTAINER_MODE
> configure.ac:53: error: possibly undefined macro: AM_PROG_LIBTOOL


These are known issues with autoconf, but you don't need to run
autoconf, that is just for me to run to produce teh configure and
makefile stubs. You need to unpack the tar.gz in the dist subdiretory
(or now, the official C runtime download) and just run:

./configure. 

Besides, when using a different version of autoconf you first have to
use autoreconf -i --force   

> 
> For now I'm just including the sources in my Xcode project and  
> compiling that way. But it would probably be good to have it build out  
> of the box on OS X from the command line... unfortunately I don't  
> really know what needs to be changed to make it work. But at least you  
> know it's a problem :)


I know it's your problem ;-P. Please read the API docs where it tells
you how to build the runtime libraries. The link "BUilding from source
will show you how".

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/87acc334/attachment.html 

From varun.bhargava at carsales.com.au  Tue Aug 12 16:08:04 2008
From: varun.bhargava at carsales.com.au (Varun Bhargava)
Date: Wed, 13 Aug 2008 09:08:04 +1000
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
Message-ID: <AE0A511AB227724A912139BAF4BBAC71042A0949@cssvrex001.carsales.office>

You guys rock!!! Just in time for when I needed it :)

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, 13 August 2008 06:08
To: antlr ANTLR
Subject: [antlr-interest] ANTLR v3.1 released!

Get it while it's hot!

http://www.antlr.org/download.html

Thanks to all the target developers for there hard work!!!

http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets

Release notes:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes

API doc:

http://www.antlr.org/api/

Ter

From javafoust at gmail.com  Tue Aug 12 16:34:24 2008
From: javafoust at gmail.com (Foust)
Date: Tue, 12 Aug 2008 16:34:24 -0700
Subject: [antlr-interest] Expr.text null?
In-Reply-To: <4F61D77D-FBCC-444F-80B0-0E5A810A647F@cs.usfca.edu>
References: <000701c8fcca$17bec230$473c4690$@com>
	<4F61D77D-FBCC-444F-80B0-0E5A810A647F@cs.usfca.edu>
Message-ID: <000601c8fcd3$f58f08f0$e0ad1ad0$@com>

> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> Sent: Tuesday, August 12, 2008 3:32 PM
> To: Foust
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Expr.text null?
> 
> should work.  java target right?  did you setTokenStream on the node
> stream?
> Ter

Yes, Java target, ASTLabelType set like this:

  tree grammar RunModl;
  options {
	tokenVocab=Modl;
	ASTLabelType=CommonTree;
  }

And the rule is just a little more complicated, in that
	expr: a? b;

is actually more like:
	
	expr: ^(EXPR_TOKEN a? b)
		{ $a.text is also null here }

	a   options {backtrack=true; memoize=true;}	
	   : ^(PART1_TOKEN IDENT ...)
		{ $IDENT.text is correct here }


I'm wondering if the backtrack on that single rule in the tree grammar might
be causing the strangeness?

Anyway, the generated calls to get the text both return -1:

	input.getTreeAdaptor().getTokenStartIndex(a.start), and
	input.getTreeAdaptor().getTokenStopIndex(a.start)

Where "a" is the actual Java variable generated for expression "a".

I think I'm going to just have to use a return parameter on the subrule to
get the proper text.

Note:
	1. $b.text works fine in rule "expr", while:

	2. $a.text returns null

	3. Both rule "a" and "b" are actually matching identical subtrees
	   (using a different parent node token)

		subRuleA : (^SUB_TOKENA identifier)
		subRuleB : (^SUB_TOKENB identifier)

	4. differences:
		"a" is optional in "expr" (uses a closure)
		rule "a" uses a backtrack option (the only one in the file)

	5. if subrule "a" returns its subrule's text as a return parameter,
then "expr" sees it just fine.

	   subRuleA : returns [String name]
			  (^SUB_TOKENA identifier)
			  { $subRuleA.name = $identifier.text; } // this
works!

	  Now, although "expr" cannot see $subRuleA.text (null), it can see
$subRuleA.name.

Brent


> On Aug 12, 2008, at 3:23 PM, Foust wrote:
> 
> > Does it make sense that a matched sub-rule returns null for its text
> > attribute?
> >
> > That is, the following rule matches the input AST just fine.
> >
> > tree grammar;
> > expr : a? b;
> >
> > a : ^(SOME_TOKEN someargs)
> > b: ^(etc.)
> >
> >
> > But when the text of a is desired, it always returns null, whether
> > in the rule action, or in a sub-rule action, as below:
> >
> > expr : (a {System.out.println($a.text); } )?  b  ;
> >
> > prints "null".
> >
> >


From parrt at cs.usfca.edu  Tue Aug 12 16:39:02 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 16:39:02 -0700
Subject: [antlr-interest] Expr.text null?
In-Reply-To: <000601c8fcd3$f58f08f0$e0ad1ad0$@com>
References: <000701c8fcca$17bec230$473c4690$@com>
	<4F61D77D-FBCC-444F-80B0-0E5A810A647F@cs.usfca.edu>
	<000601c8fcd3$f58f08f0$e0ad1ad0$@com>
Message-ID: <23A13681-1114-4CC5-AED8-62AA1B9655A0@cs.usfca.edu>


On Aug 12, 2008, at 4:34 PM, Foust wrote:

>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
>> Sent: Tuesday, August 12, 2008 3:32 PM
>> To: Foust
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Expr.text null?
>>
>> should work.  java target right?  did you setTokenStream on the node
>> stream?
>> Ter
>
> Yes, Java target, ASTLabelType set like this:
>
>  tree grammar RunModl;
>  options {
> 	tokenVocab=Modl;
> 	ASTLabelType=CommonTree;
>  }
>
> And the rule is just a little more complicated, in that
> 	expr: a? b;
>
> is actually more like:
> 	
> 	expr: ^(EXPR_TOKEN a? b)
> 		{ $a.text is also null here }
>
> 	a   options {backtrack=true; memoize=true;}	
> 	   : ^(PART1_TOKEN IDENT ...)
> 		{ $IDENT.text is correct here }

Likely PART1_TOKEN has no token indexes set.

Do you create PART1_TOKEN as a root of a rule in parser?  If not,  
indexes probably not set.
Ter

From espina.edgar at gmail.com  Tue Aug 12 17:48:54 2008
From: espina.edgar at gmail.com (Edgar Espina)
Date: Tue, 12 Aug 2008 21:48:54 -0300
Subject: [antlr-interest] ANTLR IDE 1.0.0 released!!!
Message-ID: <92b42db60808121748q179f1cebu45760ced7de29586@mail.gmail.com>

hi guys,

 ANTLR IDE 1.0.0 (Production/Stable) available for download (
http://antlrv3ide.sourceforge.net/)

Features
- Support for ANTLR 3.1(release) /3.0
- Automatically generate resources (Ctrl+Shift+G)
- Problem markers for errors and warnings in grammar files
- Advanced text editor, code selection (F3) and code completion (Ctrl+Space)
- Simple syntax highlighting for target language (action code)
- Outline and quick outline (Ctrl + O) views for options, tokens, scopes,
actions and rules
- Search rules references
- Mark generated resources as derived

New Features:
 -2025384- Configuration option for conversion timeout
Bugs Fixed:
- 2028633- Infinite loop on import grammar
- 2028647/2028648-NPE on invalid grammar
- 2030387-StackOverflow on importing grammar


cheers,

edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/537fa9f0/attachment.html 

From titech at metaorb.com  Tue Aug 12 17:51:22 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Tue, 12 Aug 2008 17:51:22 -0700 (PDT)
Subject: [antlr-interest] Latest 3.1 docs?
Message-ID: <811382.11478.qm@web82305.mail.mud.yahoo.com>

Where are the latest 3.1 docs?
I'm interested in the grammar import feature, but I can't find any info.
Thanks,
--Mike
Mike Allbright
DLP Products
Texas Instruments, Inc.


From parrt at cs.usfca.edu  Tue Aug 12 17:52:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 17:52:08 -0700
Subject: [antlr-interest] Latest 3.1 docs?
In-Reply-To: <811382.11478.qm@web82305.mail.mud.yahoo.com>
References: <811382.11478.qm@web82305.mail.mud.yahoo.com>
Message-ID: <EE7D38CF-DE61-45C7-A5EB-0B1DDB9E2AB2@cs.usfca.edu>

http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars
Ter
On Aug 12, 2008, at 5:51 PM, titech at metaorb.com wrote:

> Where are the latest 3.1 docs?
> I'm interested in the grammar import feature, but I can't find any  
> info.
> Thanks,
> --Mike
> Mike Allbright
> DLP Products
> Texas Instruments, Inc.
>


From cieslewski at hcs.ufl.edu  Tue Aug 12 18:10:00 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Tue, 12 Aug 2008 21:10:00 -0400
Subject: [antlr-interest] Possible problem with lists after upgrade to 3.1
Message-ID: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>

Hi,

In 3.1b2 (as included in antlrworks 1.2b5) the following seem to work:

Case1:
(listA+=number | listA+=id)+ -> ^(EXPR $listA+)

On the other hand this syntax properly compiles but crashes on runtime
Case2:
(listA+=(number | id))+ -> ^(EXPR $listA+)
Exception in thread "main" org.antlr.runtime.tree.RewriteEarlyExitException
	at G4Parser.expr(G4Parser.java:238)
	at __Test__.main(__Test__.java:14)

When compiled with 3.1 I get errors:
In Case1:
ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
G4Parser.java:88: incompatible types
found   : G4Parser.number_return
required: G4Parser.id_return
            	    listA=number();
            	                ^
Note: G4Parser.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 error

In Case2:
It compiles but still crashes at runtime:
Exception in thread "main" org.antlr.runtime.tree.RewriteEarlyExitException
	at G4Parser.expr(G4Parser.java:171)
	at Main4.main(Main4.java:13)


I have been out of the loop for couple months.
Has the syntax changed?
Is what I am trying to do not allowed?
Is there a better way of doing such operation?

I am little desperate since upgrade to 3.1 fixed some of my problems
but created new ones :)
I appreciate any and all help!

Greg

P.S. I did little investigating on Case1 and it seems that the way
that the listA is declared changed
from:
RuleReturnScope listA = null;
to:
G4Parser.id_return listA = null;
Which seems to be causing the problem.

As to why Case2 does not work I am clueless


-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From parrt at cs.usfca.edu  Tue Aug 12 18:17:51 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Aug 2008 18:17:51 -0700
Subject: [antlr-interest] Possible problem with lists after upgrade to
	3.1
In-Reply-To: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
Message-ID: <7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>


On Aug 12, 2008, at 6:10 PM, Grzegorz Cieslewski wrote:

> Hi,
>
> In 3.1b2 (as included in antlrworks 1.2b5) the following seem to work:
>
> Case1:
> (listA+=number | listA+=id)+ -> ^(EXPR $listA+)
>
> On the other hand this syntax properly compiles but crashes on runtime
> Case2:
> (listA+=(number | id))+ -> ^(EXPR $listA+)
> Exception in thread "main"  
> org.antlr.runtime.tree.RewriteEarlyExitException
> 	at G4Parser.expr(G4Parser.java:238)
> 	at __Test__.main(__Test__.java:14)

Weird...i thought sets were always broken (still)...hmm...oh, syntax  
is ok but runtime not yet.

so, for now, manually add to list :(

>
>
> When compiled with 3.1 I get errors:
> In Case1:
> ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
> G4Parser.java:88: incompatible types
> found   : G4Parser.number_return
> required: G4Parser.id_return
>            	    listA=number();

Oh shit...i changed that to be more specific but now it's tied to what  
rule you call; for += you actually only care it's a rule. crap!  That  
is an issue.

Ter

From cieslewski at hcs.ufl.edu  Tue Aug 12 19:15:22 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Tue, 12 Aug 2008 22:15:22 -0400
Subject: [antlr-interest] Possible problem with lists after upgrade to
	3.1
In-Reply-To: <7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
	<7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
Message-ID: <7aa837f80808121915x28b5101fmca100f29f1e4db6d@mail.gmail.com>

I guess a temporary workaround could be creating an intermediate rule like:

expr
	: (listA+=exprInter)+ -> ^(EXPR $listA+)
	;
	
exprInter
	: (number | id)
	;
It seems to work like that.

Also how do I add it manually to the list ?

Greg

On Tue, Aug 12, 2008 at 9:17 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Aug 12, 2008, at 6:10 PM, Grzegorz Cieslewski wrote:
>
>> Hi,
>>
>> In 3.1b2 (as included in antlrworks 1.2b5) the following seem to work:
>>
>> Case1:
>> (listA+=number | listA+=id)+ -> ^(EXPR $listA+)
>>
>> On the other hand this syntax properly compiles but crashes on runtime
>> Case2:
>> (listA+=(number | id))+ -> ^(EXPR $listA+)
>> Exception in thread "main"
>> org.antlr.runtime.tree.RewriteEarlyExitException
>>        at G4Parser.expr(G4Parser.java:238)
>>        at __Test__.main(__Test__.java:14)
>
> Weird...i thought sets were always broken (still)...hmm...oh, syntax is ok
> but runtime not yet.
>
> so, for now, manually add to list :(
>
>>
>>
>> When compiled with 3.1 I get errors:
>> In Case1:
>> ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
>> G4Parser.java:88: incompatible types
>> found   : G4Parser.number_return
>> required: G4Parser.id_return
>>                    listA=number();
>
> Oh shit...i changed that to be more specific but now it's tied to what rule
> you call; for += you actually only care it's a rule. crap!  That is an
> issue.
>
> Ter
>



-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From iank at bearcave.com  Tue Aug 12 19:50:57 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Tue, 12 Aug 2008 19:50:57 -0700
Subject: [antlr-interest] A throws clause on a grammar rule doesn't add a
	throws clause in the generated function
Message-ID: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>

  Looking back in the Antlr-interest archives I see that a few people have
discovered what I did today: Adding a throws clause to a grammar rule
doesn't result in a throws clause being added to the generated function in
the parser.  Someone suggested throwing a RuntimeException, which is not
checked.  But a better alternative occurred to me (and probably has to
others).  A "throws RecognitionException" clause is always created for a
function generated by a grammar rule.  If you want to throw a special
exception, for example, a SemanticErrorException for a semantic problem
identified during parsing, you can simply extend RecognitionException:

    public class SemanticErrorException extends RecognitionException
   {
           public SemanticErrorException( final String message )
          {
                 super();
                 ....
           }

           @Override
            public String toString()...
   }

  I installed ANTLR 3.1 today in the hope that it would have a fix for this
problem.  However, that's not the case.  This seems to be a simple thing to
fix.  The "throws" clause is supported by ANTLR, but it has not done
anything for some time.  I don't understand why this hasn't been fixed.  Or,
if it's not going to be fixed, why the "throws" is not just removed from the
ANTLR grammar grammar.

  Ian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080812/459cd691/attachment.html 

From Austin_Hastings at Yahoo.com  Tue Aug 12 21:26:59 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 12 Aug 2008 23:26:59 -0500
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open  file
In-Reply-To: <200808040653.m746rwLg021235@zinc.newtechlaw.com>
References: <4894C3A9.8040907@Yahoo.com>
	<200808022139.m72LdrD7003623@zinc.newtechlaw.com>
	<48965738.6070605@Yahoo.com>
	<200808040543.m745hnID020812@zinc.newtechlaw.com>
	<200808040653.m746rwLg021235@zinc.newtechlaw.com>
Message-ID: <48A26293.60509@Yahoo.com>

Thanks for that. I've got it somewhat working. An exception occurs when 
I try to open either of the Template pages under the AntlrDT Preferences.

Also, it would be nice if the output path could make use of the standard 
variables. Because I'm using maven, I want to the output into 
${build_project}/target/generated-blah-blah-blah/<source-path-hierarchy>/*.java. 


=Austin


Gerald Rosenberg wrote:
> Just posted AntlrDT Version 0.4.5 for Eclipse 3.4 (released) and DLTK 
> 0.95 (released).
>
> Not sure I got all the API dependent bugs, but may be worth a try 
> rather than reverting to DLTK 1.0M6.
>
>


From phulsmeijer at xebic.com  Tue Aug 12 23:34:34 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Wed, 13 Aug 2008 08:34:34 +0200
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC6212649AC@srvxdcex.xebic.com>

Great, thanks!
Now let's try some of that cool new stuff.

Gr, patrick.


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: dinsdag 12 augustus 2008 22:08
To: antlr ANTLR
Subject: [antlr-interest] ANTLR v3.1 released!

Get it while it's hot!

http://www.antlr.org/download.html

Thanks to all the target developers for there hard work!!!

http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets

Release notes:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes

API doc:

http://www.antlr.org/api/

Ter

From g.vandeglind at beinformed.nl  Tue Aug 12 23:54:03 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Wed, 13 Aug 2008 08:54:03 +0200
Subject: [antlr-interest] ANTLR IDE 1.0.0 released!!!
In-Reply-To: <92b42db60808121748q179f1cebu45760ced7de29586@mail.gmail.com>
References: <92b42db60808121748q179f1cebu45760ced7de29586@mail.gmail.com>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03273A2C31@apbiex01.beinformed.nl>

Hi Edgar,

I have just installed the newest ANTLR IDE by using eclipse's update site.
But I get a NullPointerException when opening a grammar file.
The previous version worked like a charm.

It happens also with a new created grammar file.

This is the stack-trace that I get:
java.lang.NullPointerException
                at org.deved.antlride.internal.core.parser.AntlrSourceParser.parse(AntlrSourceParser.java:43)
                at org.eclipse.dltk.core.SourceParserUtil.getModuleDeclaration(SourceParserUtil.java:96)
                at org.eclipse.dltk.core.SourceParserUtil.getModuleDeclaration(SourceParserUtil.java:48)
                at org.eclipse.dltk.core.SourceParserUtil.getModuleDeclaration(SourceParserUtil.java:24)
                at org.deved.antlride.internal.core.parser.AntlrSourceElementParser.getGrammar(AntlrSourceElementParser.java:97)
                at org.deved.antlride.internal.core.parser.AntlrSourceElementParser.parseModule(AntlrSourceElementParser.java:102)
                at org.deved.antlride.internal.ui.text.folding.AntlrFoldingStructureProvider.getCodeBlocks(AntlrFoldingStructureProvider.java:83)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.getCodeBlocks(AbstractASTFoldingStructureProvider.java:1128)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.computeFoldingStructure(AbstractASTFoldingStructureProvider.java:764)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.computeFoldingStructure(AbstractASTFoldingStructureProvider.java:756)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.update(AbstractASTFoldingStructureProvider.java:688)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.initialize(AbstractASTFoldingStructureProvider.java:652)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider.handleProjectionEnabled(AbstractASTFoldingStructureProvider.java:622)
                at org.eclipse.dltk.ui.text.folding.AbstractASTFoldingStructureProvider$ProjectionListener.projectionEnabled(AbstractASTFoldingStructureProvider.java:485)
                at org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled(ProjectionViewer.java:481)
                at org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection(ProjectionViewer.java:529)
                at org.eclipse.dltk.internal.ui.editor.ScriptSourceViewer.setVisibleDocument(ScriptSourceViewer.java:564)
                at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2729)
                at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:518)
                at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:370)
                at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:473)
                at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3786)
                at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3332)
                at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53)
                at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:378)
                at org.eclipse.dltk.internal.ui.editor.ScriptEditor.createPartControl(ScriptEditor.java:1876)
                at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)
                at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)
                at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)
                at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:263)
                at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2739)
                at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651)
                at org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
                at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
                at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
                at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
                at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
                at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:340)
                at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:328)
                at org.eclipse.ui.actions.OpenWithMenu$3.handleEvent(OpenWithMenu.java:226)
                at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
                at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
                at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
                at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
                at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
                at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
                at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
                at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
                at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
                at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
                at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
                at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
                at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
                at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
                at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
                at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
                at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
                at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
                at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
                at java.lang.reflect.Method.invoke(Unknown Source)
                at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
                at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
                at org.eclipse.equinox.launcher.Main.run(Main.java:1173)

Regards, Gerard

hi guys,

 ANTLR IDE 1.0.0 (Production/Stable) available for download (http://antlrv3ide.sourceforge.net/)

Features
- Support for ANTLR 3.1(release) /3.0
- Automatically generate resources (Ctrl+Shift+G)
- Problem markers for errors and warnings in grammar files
- Advanced text editor, code selection (F3) and code completion (Ctrl+Space)
- Simple syntax highlighting for target language (action code)
- Outline and quick outline (Ctrl + O) views for options, tokens, scopes, actions and rules
- Search rules references
- Mark generated resources as derived

New Features:
 -2025384- Configuration option for conversion timeout
Bugs Fixed:
- 2028633- Infinite loop on import grammar
- 2028647/2028648-NPE on invalid grammar
- 2030387-StackOverflow on importing grammar


cheers,

edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/b46cfd7c/attachment-0001.html 

From r.a.niemeijer at tue.nl  Wed Aug 13 00:12:40 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Wed, 13 Aug 2008 09:12:40 +0200
Subject: [antlr-interest] How to get a list of all valid options for
	the	next token?
In-Reply-To: <001b01c8fcb7$f3461410$d9d23c30$@com>
References: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>
	<001b01c8fcb7$f3461410$d9d23c30$@com>
Message-ID: <A8F615EE446C9B4D837FB67447C0D9970253A1D9@EXCHANGE3.campus.tue.nl>

Hello Brent,

 

It seems my question wasn't clear enough. I have no intention of having
a dynamic grammar. What I meant by disabling puzzle pieces is this: on
the left side of the screen there is a list of all the possible puzzle
pieces, a library if you will. From there the user drags pieces to the
right side of the screen to form sequences of puzzle pieces. What I want
to do is disable the pieces in the library. An alternative way of
looking at it is seeing it as Intellisense/code completion. While the
user is typing (dragging pieces), I want to display a popup list of all
the possible words (pieces) that can come at the current position in the
sentence. The grammar itself is completely fixed, just like the grammar
of programming languages that allow code completion.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: dinsdag 12 augustus 2008 22:14
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

> I want to disable all the pieces that cannot come at that point in the
sentence.

> I want to disable all the pieces that cannot come at that point in the
sentence.

 

My guess is that this will be pretty difficult to implement using even
an augmented context-free grammar. Usually, you would parse any valid
sentence (a list of puzzle pieces, in your case), then do the semantic
analysis as a later pass (iterate over the actual puzzle pieces entered
and check each one for validity). 

 

Multiple passes should make the code easier to write (as well as
maintain). And error reporting should be more intuitive. It's pretty
difficult to enforce all semantic meaning at the parse phase and still
output meaningful error messages.

 

If you really want to experiment with changing the grammar dynamically,
though, you could generate an AST in your parser for any valid sentence,
and then use semantic predicates in your tree grammar to turn on and off
certain rules. But I think you'll find that just adding validity checks
in your tree grammar actions will be the most straightforward, providing
all the advantages of a multi-pass interpreter.

 

Brent

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
Sent: Tuesday, August 12, 2008 2:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to get a list of all valid options for the
next token?

 

Hello everyone,

 

I'm making a program where users construct short sentences by combining
puzzle pieces. This series of puzzle pieces is then converted to text
and parsed by Antlr. Currently the user has access to all the different
pieces at any point in the sentence, even if the grammar would not be
able to parse this. I want to disable all the pieces that cannot come at
that point in the sentence.

My idea was to do this with the help of the exceptions the parser
generates. For example, when it throws a MismatchedTokenException I can
find the expected token through the Expecting property of the exception.
Unfortunately this only works when there's only one possibility. When
there are multiple it instead throws a NoViableAltException or a
MismatchedSetException. I haven't been able to find a list of valid
following tokens in their properties.

 

Can anyone tell me if there is any way of determining the list of valid
tokens after the current token in the sentence?

 

Thanks in advance.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/411a2dee/attachment.html 

From antlr at mirality.co.nz  Wed Aug 13 01:26:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 13 Aug 2008 20:26:54 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
 a	mismatch character error message.
In-Reply-To: <8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
Message-ID: <20080813082704.903D911EC21@www.antlr.org>

[Merging thread branches a bit...]

At 09:50 13/08/2008, Terence Parr wrote:
 >> Still, couldn't the lexer have a setTabSize() method or
 >> something?  Default it to 8, since that's the official
 >> standard tab size (even though most people usually reduce
 >> it), and let the driver code (or ANTLRworks) modify as
 >> needed.
 >
 >that was how v2 worked I think...still was trouble ;)

Yeah, but v2 *only* did that.  I think v3 should still keep the 
line position (that's still useful) -- but it should have the 
column as well.  It's not that much more work and it'd be handy 
whether for the default or for custom error handlers.  (Might even 
be useful for some kinds of syntax highlighting too.)


At 10:51 13/08/2008, Jim Idle wrote:
>Once you start adding all these traces then you find the lexers 
>generate 3 tokens a minute. The base information is all there and 
>I think FAQ #1 just needs to be: "Why you need your own error 
>message printing function."

Hardly.  One or two extra ints containing information that's 
basically already known at token generation time?  I doubt that'd 
leave a noticeable dent.  (Well, ok, I guess the stream position 
might have to be a longlong, or fpos_t, or whatever.  Still.)

And even if you do implement your own error handling function -- 
why force it to do all the work of scanning the characters on the 
line looking for and expanding tabs just to get a column number, 
when the lexer already had to pass those same tabs in order to 
generate the error in the first place?

At minimum there should be a function in the runtime you can call 
to do this for you.  I don't see why each driver program needs to 
re-invent the wheel.


From e.mortoray at ecircle.com  Wed Aug 13 01:33:16 2008
From: e.mortoray at ecircle.com (edA-qa mort-ora-y)
Date: Wed, 13 Aug 2008 10:33:16 +0200
Subject: [antlr-interest] error handling in Python, nothing reported
Message-ID: <48A29C4C.40903@ecircle.com>

How do get the default error handling enabled in Python?  The book seems
to indicate that if I do nothing then the default error handling should
be enabled, but nothing is ever output for me -- the parser simply
sticks an error node in the tree and continues.

My options block looks like this:

options
{
    output=AST;
    language=Python;
    ASTLabelType=CommonTree;
}


ANTLR 3.0.1

-- 
edA-qa mort-ora-y
Director Quality Assurance
______________________________________________________
eCircle AG - Inside Digital Marketing
Nymphenburger Str. 86
80636 M?nchen

Tel    +49-89-12009-773
Fax    +49-89-12009-750

E-Mail mailto:e.mort-ora-y at ecircle.com
Web    http://www.ecircle.com

______________________________________________________
Aktuelles
"Inside Digital Marketing" - der Newsletter f?r die
Online-Branche von eCircle. Jeden Monat neu & voll
mit aktuellen Fallstudien und hilfreichen Tipps!
Jetzt kostenlos abonnieren:

http://www.ecircle.com/de/newsletter
______________________________________________________

eCircle AG, HRB 136 334, Handelsregister M?nchen
Vorstand:  Lothar Lanz, Volker Wiewer (Vorsitzende), 
Thomas Wilke, Lars W?ssner, Alexander Meyer
Vorsitzender des Aufsichtsrates: Dr. Mark W?ssner


From antlr at mirality.co.nz  Wed Aug 13 01:33:35 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 13 Aug 2008 20:33:35 +1200
Subject: [antlr-interest] A throws clause on a grammar rule doesn't add
 a throws clause in the generated function
In-Reply-To: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.co
 m>
References: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>
Message-ID: <20080813083345.3563711ED0E@www.antlr.org>

At 14:50 13/08/2008, Ian Kaplan wrote:
>   I installed ANTLR 3.1 today in the hope that it would have a 
> fix for this problem.  However, that's not the case.  This seems 
> to be a simple thing to fix.  The "throws" clause is supported 
> by ANTLR, but it has not done anything for some time.  I don't 
> understand why this hasn't been fixed.  Or, if it's not going to 
> be fixed, why the "throws" is not just removed from the ANTLR 
> grammar grammar.

There's a few "placeholders" like that around at the moment -- 
stuff that's (presumably) intended to be implemented sometime 
later on.

Another one is the public/protected/private against a 
rule.  Doesn't do anything at present, but it's accepted.  (And it 
sometimes trips people up when porting from v2, since 'protected' 
meant something different there.)


From kroepke at classdump.org  Wed Aug 13 02:22:46 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 13 Aug 2008 11:22:46 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
	a	mismatch character error message.
In-Reply-To: <20080813082704.903D911EC21@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
Message-ID: <2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>

Hi!

On Aug 13, 2008, at 10:26 AM, Gavin Lambert wrote:

> At 10:51 13/08/2008, Jim Idle wrote:
>> Once you start adding all these traces then you find the lexers  
>> generate 3 tokens a minute. The base information is all there and I  
>> think FAQ #1 just needs to be: "Why you need your own error message  
>> printing function."
>
> Hardly.  One or two extra ints containing information that's  
> basically already known at token generation time?  I doubt that'd  
> leave a noticeable dent.  (Well, ok, I guess the stream position  
> might have to be a longlong, or fpos_t, or whatever.  Still.)

It adds up, as simple as that. The more you store, the greater your  
memory footprint is, the more pages it has to touch, the slower it  
gets. Especially if you are parsing huge input it makes a noticeable  
difference (and in most target languages the footprint of an int is  
not 4 or 8 bytes, it's much larger for all those managed languages).

> And even if you do implement your own error handling function -- why  
> force it to do all the work of scanning the characters on the line  
> looking for and expanding tabs just to get a column number, when the  
> lexer already had to pass those same tabs in order to generate the  
> error in the first place?

If you absolutely need the column information in terms of expanded  
tabs, then just create more than one whitespace token: WS_SPACE,  
WS_TAB, WS_NEWLINE and check the hidden channel when expanding it.  
That way you can easily adapt it to the tabwidth you (or the user  
wants to have).
I think the runtime should be minimal, because it's much easier to add  
functionality than to remove it - most ANTLR users are not keen on  
modifying their ANTLR version.

> At minimum there should be a function in the runtime you can call to  
> do this for you.  I don't see why each driver program needs to re- 
> invent the wheel.


I disagree here, for the above reasons. There's a good way to  
implement it today and it doesn't require much code at all. It's even  
nicely contained so you can reuse it for other projects.
Re-inventing: No one stops you from writing it once (for your  
preferred runtime, I guess) and then put it on the wiki or whereever.  
If it comes with a liberal/open license there's no need to re-invent  
anything. :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From javafoust at gmail.com  Wed Aug 13 02:29:33 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 02:29:33 -0700
Subject: [antlr-interest] Labels Expanded w/in Action Comments
In-Reply-To: <20080813083345.3563711ED0E@www.antlr.org>
References: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>
	<20080813083345.3563711ED0E@www.antlr.org>
Message-ID: <000901c8fd27$1989c3f0$4c9d4bd0$@com>

$references are being expanded within action code comments.

Did this issue get added to the bug database?

I received some responses that this is the intended behavior, but surely you
don't expect people to delete their action code when debugging, rather than
just commenting it out?

The issue here is the line comment (//), since some attribute references
(like 'text') are expanded to several lines, making the resultant code not
compilable.

I'm sure that there are several possible solutions, but one would be to
directly support the C/C++/Java line comment in Antlr, unless turned off by
an option. Another solution would be to allow language specific definition
of line and block comments. Good editors do this.

Brent



From javafoust at gmail.com  Wed Aug 13 02:51:09 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 02:51:09 -0700
Subject: [antlr-interest] $ Expansion Conflict w/ Class Name
Message-ID: <000a01c8fd2a$1e3ee030$5abca090$@com>

Although Java allows class names beginning with $, ANTLR does not.

 

Is there a known workaround besides:

 

1.  renaming the class (if you have the source code)

 

2.  Writing an adaptor (if you don't)

(This is not always straightforward.)

 

?

 

Brent

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/4348a13c/attachment.html 

From jaluber at gmx.de  Wed Aug 13 03:04:19 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Aug 2008 12:04:19 +0200
Subject: [antlr-interest] A throws clause on a grammar rule doesn't add
 a	throws clause in the generated function
In-Reply-To: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>
References: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>
Message-ID: <48A2B1A3.7020101@gmx.de>

Ian Kaplan schrieb:
...
>   I installed ANTLR 3.1 today in the hope that it would have a fix for 
> this problem.  However, that's not the case.  This seems to be a simple 
> thing to fix.  The "throws" clause is supported by ANTLR, but it has not 
> done anything for some time.  I don't understand why this hasn't been 
> fixed.  Or, if it's not going to be fixed, why the "throws" is not just 
> removed from the ANTLR grammar grammar.
> 
>   Ian
> 

There are lots of things which Ter intends to support in ANTLR and are 
missing in 3.0. But he can't work on all at once, which results in 
prioritisation of the features. As only Java has a need for this throws 
clause (which is ironic as Ter is the maintainer of the Java target :), 
it isn't a pressing matter. But Ter could do bug triaging a bit 
different for 3.2 - namely also taking into account how long a bug is in 
JIRA already.

Johannes

From r.a.niemeijer at tue.nl  Wed Aug 13 03:06:22 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Wed, 13 Aug 2008 12:06:22 +0200
Subject: [antlr-interest] How to get a list of all valid options for the
	next token?
In-Reply-To: <000f01c8fd2b$1c59fe20$550dfa60$@com>
References: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>
	<001b01c8fcb7$f3461410$d9d23c30$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A1D9@EXCHANGE3.campus.tue.nl>
	<000f01c8fd2b$1c59fe20$550dfa60$@com>
Message-ID: <A8F615EE446C9B4D837FB67447C0D9970253A26A@EXCHANGE3.campus.tue.nl>

Yes, it's certainly possible to make my own check. However, that means
I'm basically duplicating my grammar, which makes it more difficult to
maintain. The reason I wanted to get the information from Antlr is that
it should already know all the possible token combinations.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 11:58
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

Yes, I didn't understand exactly what you're trying to do (and probably
still don't). If you're thinking of it like an Intellisense problem,
then there are other ways of solving that kind of problem without using
a parser-generator like Antlr. Have you already considered those? 

 

It sounds like your problem is a bit different than the code editor's -
simpler, actually. Whatever rules you use to decide what pieces can go
where may be more easily expressed with a custom solution.  You could
use Antlr to parse any text input, but call custom code to make sense of
it and decide what the set of following pieces is. This would not only
be more efficient, but would be far less frustrating to develop, since
you have full control over the decision mechanism and can customize the
underlying data structures to fit the task. Depending upon how simple
your sequencing rules are, you might even be able to use a regular
expression solution, if you can choose the text representation of the
pieces.

 

Brent   

 

From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 12:13 AM
To: Foust
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

Hello Brent,

 

It seems my question wasn't clear enough. I have no intention of having
a dynamic grammar. What I meant by disabling puzzle pieces is this: on
the left side of the screen there is a list of all the possible puzzle
pieces, a library if you will. From there the user drags pieces to the
right side of the screen to form sequences of puzzle pieces. What I want
to do is disable the pieces in the library. An alternative way of
looking at it is seeing it as Intellisense/code completion. While the
user is typing (dragging pieces), I want to display a popup list of all
the possible words (pieces) that can come at the current position in the
sentence. The grammar itself is completely fixed, just like the grammar
of programming languages that allow code completion.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: dinsdag 12 augustus 2008 22:14
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

> I want to disable all the pieces that cannot come at that point in the
sentence.

> I want to disable all the pieces that cannot come at that point in the
sentence.

 

My guess is that this will be pretty difficult to implement using even
an augmented context-free grammar. Usually, you would parse any valid
sentence (a list of puzzle pieces, in your case), then do the semantic
analysis as a later pass (iterate over the actual puzzle pieces entered
and check each one for validity). 

 

Multiple passes should make the code easier to write (as well as
maintain). And error reporting should be more intuitive. It's pretty
difficult to enforce all semantic meaning at the parse phase and still
output meaningful error messages.

 

If you really want to experiment with changing the grammar dynamically,
though, you could generate an AST in your parser for any valid sentence,
and then use semantic predicates in your tree grammar to turn on and off
certain rules. But I think you'll find that just adding validity checks
in your tree grammar actions will be the most straightforward, providing
all the advantages of a multi-pass interpreter.

 

Brent

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
Sent: Tuesday, August 12, 2008 2:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to get a list of all valid options for the
next token?

 

Hello everyone,

 

I'm making a program where users construct short sentences by combining
puzzle pieces. This series of puzzle pieces is then converted to text
and parsed by Antlr. Currently the user has access to all the different
pieces at any point in the sentence, even if the grammar would not be
able to parse this. I want to disable all the pieces that cannot come at
that point in the sentence.

My idea was to do this with the help of the exceptions the parser
generates. For example, when it throws a MismatchedTokenException I can
find the expected token through the Expecting property of the exception.
Unfortunately this only works when there's only one possibility. When
there are multiple it instead throws a NoViableAltException or a
MismatchedSetException. I haven't been able to find a list of valid
following tokens in their properties.

 

Can anyone tell me if there is any way of determining the list of valid
tokens after the current token in the sentence?

 

Thanks in advance.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/da55ad4f/attachment.html 

From jaluber at gmx.de  Wed Aug 13 03:14:13 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Aug 2008 12:14:13 +0200
Subject: [antlr-interest] Labels Expanded w/in Action Comments
In-Reply-To: <000901c8fd27$1989c3f0$4c9d4bd0$@com>
References: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>	<20080813083345.3563711ED0E@www.antlr.org>
	<000901c8fd27$1989c3f0$4c9d4bd0$@com>
Message-ID: <48A2B3F5.4070801@gmx.de>

Foust schrieb:
> $references are being expanded within action code comments.
> 
> Did this issue get added to the bug database?
> 
> I received some responses that this is the intended behavior, but surely you
> don't expect people to delete their action code when debugging, rather than
> just commenting it out?
> 
> The issue here is the line comment (//), since some attribute references
> (like 'text') are expanded to several lines, making the resultant code not
> compilable.
> 
> I'm sure that there are several possible solutions, but one would be to
> directly support the C/C++/Java line comment in Antlr, unless turned off by
> an option. Another solution would be to allow language specific definition
> of line and block comments. Good editors do this.
> 
> Brent

Well, it is possible to fix this behaviour, but ANTLR has to be 
bootstrapped first. Currently the tool is maintained in a ANTLR 2 
grammar, which has some limitations. Only if we have an ANTLR in an 
ANTLR 3 grammar, we can use grammar inheritance to adapt the target code 
recognition to recognize the comments correctly. I don't know when Ter 
will finish this task, but he said it was too much work to include it in 
3.1. Maybe he finishes it for 3.2?

Johannes

P.S.: Please don't use another email to create a reply email and change 
the subject line to something different. There are people who use 
mailing list threading to order related emails in handy trees and not 
creating a an entirely new email for new subjects screws that up. Any 
good email client should allow to create a new email from any email 
address - Thunderbird can do this over a context menu.

From jaluber at gmx.de  Wed Aug 13 03:21:03 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Aug 2008 12:21:03 +0200
Subject: [antlr-interest] $ Expansion Conflict w/ Class Name
In-Reply-To: <000a01c8fd2a$1e3ee030$5abca090$@com>
References: <000a01c8fd2a$1e3ee030$5abca090$@com>
Message-ID: <48A2B58F.4060904@gmx.de>

Foust schrieb:
> Although Java allows class names beginning with $, ANTLR does not.
> 
> Is there a known workaround besides:
> 
> 1.  renaming the class (if you have the source code)
> 
> 2.  Writing an adaptor (if you don?t)
> 
> (This is not always straightforward.)
> 
> ?
> 
> Brent
> 

Are you referring to create a class with $ as an ANTLR parser or do you 
want to to reference another class? In the latter case maybe using \$ 
may work. Although I have no idea, what classes with $ are supposed to 
accomplish anyway.

Johannes

From r.a.niemeijer at tue.nl  Wed Aug 13 04:02:41 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Wed, 13 Aug 2008 13:02:41 +0200
Subject: [antlr-interest] How to get a list of all valid options for the
	next token?
In-Reply-To: <001a01c8fd31$7879c450$696d4cf0$@com>
References: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>
	<001b01c8fcb7$f3461410$d9d23c30$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A1D9@EXCHANGE3.campus.tue.nl>
	<000f01c8fd2b$1c59fe20$550dfa60$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A26A@EXCHANGE3.campus.tue.nl>
	<001a01c8fd31$7879c450$696d4cf0$@com>
Message-ID: <A8F615EE446C9B4D837FB67447C0D9970253A290@EXCHANGE3.campus.tue.nl>

No problem, thanks anyway.

 

Does anyone else have any idea how to do this?

 

Thanks in advance.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 12:44
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

> Yes, it's certainly possible to make my own check. However, that means
I'm basically duplicating 

> my grammar, which makes it more difficult to maintain. The reason I
wanted to get the information 

> from Antlr is that it should already know all the possible token
combinations.

 

OK, well it sounds like you know what you're doing. 

 

Sorry I wasn't able to help more,

 

Brent

 

From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 3:06 AM
To: Foust
Cc: 
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

Yes, it's certainly possible to make my own check. However, that means
I'm basically duplicating my grammar, which makes it more difficult to
maintain. The reason I wanted to get the information from Antlr is that
it should already know all the possible token combinations.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 11:58
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

Yes, I didn't understand exactly what you're trying to do (and probably
still don't). If you're thinking of it like an Intellisense problem,
then there are other ways of solving that kind of problem without using
a parser-generator like Antlr. Have you already considered those? 

 

It sounds like your problem is a bit different than the code editor's -
simpler, actually. Whatever rules you use to decide what pieces can go
where may be more easily expressed with a custom solution.  You could
use Antlr to parse any text input, but call custom code to make sense of
it and decide what the set of following pieces is. This would not only
be more efficient, but would be far less frustrating to develop, since
you have full control over the decision mechanism and can customize the
underlying data structures to fit the task. Depending upon how simple
your sequencing rules are, you might even be able to use a regular
expression solution, if you can choose the text representation of the
pieces.

 

Brent   

 

From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 12:13 AM
To: Foust
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

Hello Brent,

 

It seems my question wasn't clear enough. I have no intention of having
a dynamic grammar. What I meant by disabling puzzle pieces is this: on
the left side of the screen there is a list of all the possible puzzle
pieces, a library if you will. From there the user drags pieces to the
right side of the screen to form sequences of puzzle pieces. What I want
to do is disable the pieces in the library. An alternative way of
looking at it is seeing it as Intellisense/code completion. While the
user is typing (dragging pieces), I want to display a popup list of all
the possible words (pieces) that can come at the current position in the
sentence. The grammar itself is completely fixed, just like the grammar
of programming languages that allow code completion.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: dinsdag 12 augustus 2008 22:14
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?

 

> I want to disable all the pieces that cannot come at that point in the
sentence.

> I want to disable all the pieces that cannot come at that point in the
sentence.

 

My guess is that this will be pretty difficult to implement using even
an augmented context-free grammar. Usually, you would parse any valid
sentence (a list of puzzle pieces, in your case), then do the semantic
analysis as a later pass (iterate over the actual puzzle pieces entered
and check each one for validity). 

 

Multiple passes should make the code easier to write (as well as
maintain). And error reporting should be more intuitive. It's pretty
difficult to enforce all semantic meaning at the parse phase and still
output meaningful error messages.

 

If you really want to experiment with changing the grammar dynamically,
though, you could generate an AST in your parser for any valid sentence,
and then use semantic predicates in your tree grammar to turn on and off
certain rules. But I think you'll find that just adding validity checks
in your tree grammar actions will be the most straightforward, providing
all the advantages of a multi-pass interpreter.

 

Brent

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
Sent: Tuesday, August 12, 2008 2:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to get a list of all valid options for the
next token?

 

Hello everyone,

 

I'm making a program where users construct short sentences by combining
puzzle pieces. This series of puzzle pieces is then converted to text
and parsed by Antlr. Currently the user has access to all the different
pieces at any point in the sentence, even if the grammar would not be
able to parse this. I want to disable all the pieces that cannot come at
that point in the sentence.

My idea was to do this with the help of the exceptions the parser
generates. For example, when it throws a MismatchedTokenException I can
find the expected token through the Expecting property of the exception.
Unfortunately this only works when there's only one possibility. When
there are multiple it instead throws a NoViableAltException or a
MismatchedSetException. I haven't been able to find a list of valid
following tokens in their properties.

 

Can anyone tell me if there is any way of determining the list of valid
tokens after the current token in the sentence?

 

Thanks in advance.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/d5088784/attachment.html 

From Vitaliy at dbsophic.com  Wed Aug 13 05:52:29 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Wed, 13 Aug 2008 15:52:29 +0300
Subject: [antlr-interest] Preserving comments
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>

Hi All,



I went through the docs & archives,

But failed to find a good-enough way to preserve comments.



Let me explain what I mean by good-enough:

In the language I parse, comments can appear anywhere.

The grammar I've written for this language is pretty big - around 300 rules.

Whenever a comment is encountered in the input, some specific action must be executed for it.



I understand that I can use a special channel for comments,

But this would require me in each rule I've got, to check that channel for relevant comments.

Moreover, If I want to be precise, I would have to execute the action right after the comment, and not after the rule.



Is there any better way to do this?



Many thanks,

Vitaliy

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/377023f5/attachment-0001.html 

From chris at lambrou.net  Wed Aug 13 04:52:42 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Wed, 13 Aug 2008 12:52:42 +0100
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <C3525AF49F7D374D8E4D3C46ED4BC6212649AC@srvxdcex.xebic.com>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
	<C3525AF49F7D374D8E4D3C46ED4BC6212649AC@srvxdcex.xebic.com>
Message-ID: <70bbae280808130452x5721b173qa48ba3bcb8bbb963@mail.gmail.com>

Well done to everyone involved for getting 3.1 released.

I just have one problem - what happened to the source code for the runtimes
in the source distribution?  I've been using the .NET runtime from the 3.1b1
release for some time now, and I was looking forward to updating to the full
release when it became available. However, it appears that both the 3.1b2
and the 3.1 releases are missing the source code for the runtimes.

Chris


2008/8/13 Patrick Hulsmeijer <phulsmeijer at xebic.com>

> Great, thanks!
> Now let's try some of that cool new stuff.
>
> Gr, patrick.
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: dinsdag 12 augustus 2008 22:08
> To: antlr ANTLR
> Subject: [antlr-interest] ANTLR v3.1 released!
>
> Get it while it's hot!
>
> http://www.antlr.org/download.html
>
> Thanks to all the target developers for there hard work!!!
>
> http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
>
> Release notes:
>
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes
>
> API doc:
>
> http://www.antlr.org/api/
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/ec3d39f8/attachment.html 

From jaluber at gmx.de  Wed Aug 13 05:01:01 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Aug 2008 14:01:01 +0200
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <70bbae280808130452x5721b173qa48ba3bcb8bbb963@mail.gmail.com>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>	<C3525AF49F7D374D8E4D3C46ED4BC6212649AC@srvxdcex.xebic.com>
	<70bbae280808130452x5721b173qa48ba3bcb8bbb963@mail.gmail.com>
Message-ID: <48A2CCFD.2080006@gmx.de>

Chris Lambrou schrieb:
> Well done to everyone involved for getting 3.1 released.
> 
> I just have one problem - what happened to the source code for the 
> runtimes in the source distribution?  I've been using the .NET runtime 
> from the 3.1b1 release for some time now, and I was looking forward to 
> updating to the full release when it became available. However, it 
> appears that both the 3.1b2 and the 3.1 releases are missing the source 
> code for the runtimes.
> 
> Chris

Huh? The source code should be under the runtime/csharp directory. Or do 
you mean the binaries? Those have been extracted into a different download.

Johannes
> 
> 
> 2008/8/13 Patrick Hulsmeijer <phulsmeijer at xebic.com 
> <mailto:phulsmeijer at xebic.com>>
> 
>     Great, thanks!
>     Now let's try some of that cool new stuff.
> 
>     Gr, patrick.
> 
> 
>     -----Original Message-----
>     From: antlr-interest-bounces at antlr.org
>     <mailto:antlr-interest-bounces at antlr.org>
>     [mailto:antlr-interest-bounces at antlr.org
>     <mailto:antlr-interest-bounces at antlr.org>] On Behalf Of Terence Parr
>     Sent: dinsdag 12 augustus 2008 22:08
>     To: antlr ANTLR
>     Subject: [antlr-interest] ANTLR v3.1 released!
> 
>     Get it while it's hot!
> 
>     http://www.antlr.org/download.html
> 
>     Thanks to all the target developers for there hard work!!!
> 
>     http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
> 
>     Release notes:
> 
>     http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes
> 
>     API doc:
> 
>     http://www.antlr.org/api/
> 
>     Ter
> 
> 


From rusinskystanislas at yahoo.fr  Wed Aug 13 05:42:11 2008
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Wed, 13 Aug 2008 12:42:11 +0000 (GMT)
Subject: [antlr-interest] Re : How to get a list of all valid options for
	the next token?
Message-ID: <707137.75586.qm@web26508.mail.ukl.yahoo.com>

I have found one series of 3 articles that might be interesting for such situation: 

http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide

But I don't know if you could achieve that easily (if someone knows a way or tool I
would be interested too in knowing it). ANTLR parsers generated
from grammars are not 'self-aware' if I understood correctly: they are LR parsers but don't hold as such a graph based on the grammar that could determine the next allowed token.

Yours sincerely,

Stanislas Herman.



----- Message d'origine ----
De : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
? : Foust <javafoust at gmail.com>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 13h02mn 41s
Objet : Re: [antlr-interest] How to get a list of all valid options for the next token?

 
No problem, thanks anyway.
 
Does anyone else have any idea
how to do this?
 
Thanks in advance.
 
From:Foust
[mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 12:44
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?
 
> Yes, it?s certainly
possible to make my own check. However, that means I?m basically duplicating 
> my grammar, which makes it
more difficult to maintain. The reason I wanted to get the information 
> from Antlr is that it
should already know all the possible token combinations.
 
OK, well it sounds like you know
what you?re doing. 
 
Sorry I wasn?t able to help
more,
 
Brent
 
From:Niemeijer, R.A.
[mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 3:06 AM
To: Foust
Cc: 
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?
 
Yes, it?s certainly possible to
make my own check. However, that means I?m basically duplicating my grammar,
which makes it more difficult to maintain. The reason I wanted to get the information
from Antlr is that it should already know all the possible token combinations.
 
From:Foust
[mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 11:58
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?
 
Yes, I didn?t understand exactly
what you?re trying to do (and probably still don?t). If you?re thinking of it
like an Intellisense problem, then there are other ways of solving that kind of
problem without using a parser-generator like Antlr. Have you already
considered those? 
 
It sounds like your problem is a
bit different than the code editor?s ? simpler, actually. Whatever rules you
use to decide what pieces can go where may be more easily expressed with a
custom solution.  You could use Antlr to parse any text input, but call
custom code to make sense of it and decide what the set of following pieces is.
This would not only be more efficient, but would be far less frustrating to
develop, since you have full control over the decision mechanism and can
customize the underlying data structures to fit the task. Depending upon how
simple your sequencing rules are, you might even be able to use a regular
expression solution, if you can choose the text representation of the pieces.
 
Brent   
 
From:Niemeijer, R.A.
[mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 12:13 AM
To: Foust
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?
 
Hello Brent,
 
It seems my question wasn?t
clear enough. I have no intention of having a dynamic grammar. What I meant by
disabling puzzle pieces is this: on the left side of the screen there is a list
of all the possible puzzle pieces, a library if you will. From there the user
drags pieces to the right side of the screen to form sequences of puzzle
pieces. What I want to do is disable the pieces in the library. An alternative
way of looking at it is seeing it as Intellisense/code completion. While the
user is typing (dragging pieces), I want to display a popup list of all the
possible words (pieces) that can come at the current position in the sentence.
The grammar itself is completely fixed, just like the grammar of programming
languages that allow code completion.
 
From:Foust [mailto:javafoust at gmail.com] 
Sent: dinsdag 12 augustus 2008 22:14
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for
the next token?
 
> I want to disable
all the pieces that cannot come at that point in the sentence.
> I want to disable all the pieces that cannot come at
that point in the sentence.
 
My guess is that this will be
pretty difficult to implement using even an augmented context-free grammar.
Usually, you would parse any valid sentence (a list of puzzle pieces, in
your case), then do the semantic analysis as a later pass (iterate over the
actual puzzle pieces entered and check each one for validity). 
 
Multiple passes should make the
code easier to write (as well as maintain). And error reporting should be more
intuitive. It?s pretty difficult to enforce all semantic meaning at the parse
phase and still output meaningful error messages.
 
If you really want to experiment
with changing the grammar dynamically, though, you could generate an AST in
your parser for any valid sentence, and then use semantic predicates in your
tree grammar to turn on and off certain rules. But I think you?ll find that
just adding validity checks in your tree grammar actions will be the most
straightforward, providing all the advantages of a multi-pass interpreter.
 
Brent
 
From:antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On
Behalf Of Niemeijer, R.A.
Sent: Tuesday, August 12, 2008 2:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to get a list of all valid options for the
next token?
 
Hello everyone,
 
I?m making a program where users construct short sentences
by combining puzzle pieces. This series of puzzle pieces is then converted to
text and parsed by Antlr. Currently the user has access to all the different
pieces at any point in the sentence, even if the grammar would not be able to
parse this. I want to disable all the pieces that cannot come at that point in
the sentence.
My idea was to do this with the help of the exceptions the
parser generates. For example, when it throws a MismatchedTokenException I can
find the expected token through the Expecting property of the exception.
Unfortunately this only works when there?s only one possibility. When there are
multiple it instead throws a NoViableAltException or a MismatchedSetException.
I haven?t been able to find a list of valid following tokens in their
properties.
 
Can anyone tell me if there is any way of determining the
list of valid tokens after the current token in the sentence?
 
Thanks in advance.


      _____________________________________________________________________________ 
Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/643a71ea/attachment-0001.html 

From r.a.niemeijer at tue.nl  Wed Aug 13 05:48:52 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Wed, 13 Aug 2008 14:48:52 +0200
Subject: [antlr-interest] Re : How to get a list of all valid options
	for the next token?
In-Reply-To: <707137.75586.qm@web26508.mail.ukl.yahoo.com>
References: <707137.75586.qm@web26508.mail.ukl.yahoo.com>
Message-ID: <A8F615EE446C9B4D837FB67447C0D9970253A2D3@EXCHANGE3.campus.tue.nl>

Well, so much for that idea then :(

Guess the only way to do this then is to indeed duplicate the knowledge inherent in the parser to a different checker. Oh well.

 

From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr] 
Sent: woensdag 13 augustus 2008 14:42
To: Niemeijer, R.A.; Foust
Cc: antlr-interest at antlr.org
Subject: Re : [antlr-interest] How to get a list of all valid options for the next token?

 

I have found one series of 3 articles that might be interesting for such situation: 

http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide

But I don't know if you could achieve that easily (if someone knows a way or tool I would be interested too in knowing it). ANTLR parsers generated from grammars are not 'self-aware' if I understood correctly: they are LR parsers but don't hold as such a graph based on the grammar that could determine the next allowed token.

Yours sincerely,

Stanislas Herman.

 

----- Message d'origine ----
De : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
? : Foust <javafoust at gmail.com>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 13h02mn 41s
Objet : Re: [antlr-interest] How to get a list of all valid options for the next token?

No problem, thanks anyway.

 

Does anyone else have any idea how to do this?

 

Thanks in advance.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 12:44
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for the next token?

 

> Yes, it?s certainly possible to make my own check. However, that means I?m basically duplicating 

> my grammar, which makes it more difficult to maintain. The reason I wanted to get the information 

> from Antlr is that it should already know all the possible token combinations.

 

OK, well it sounds like you know what you?re doing. 

 

Sorry I wasn?t able to help more,

 

Brent

 

From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 3:06 AM
To: Foust
Cc: 
Subject: RE: [antlr-interest] How to get a list of all valid options for the next token?

 

Yes, it?s certainly possible to make my own check. However, that means I?m basically duplicating my grammar, which makes it more difficult to maintain. The reason I wanted to get the information from Antlr is that it should already know all the possible token combinations.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: woensdag 13 augustus 2008 11:58
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for the next token?

 

Yes, I didn?t understand exactly what you?re trying to do (and probably still don?t). If you?re thinking of it like an Intellisense problem, then there are other ways of solving that kind of problem without using a parser-generator like Antlr. Have you already considered those? 

 

It sounds like your problem is a bit different than the code editor?s ? simpler, actually. Whatever rules you use to decide what pieces can go where may be more easily expressed with a custom solution.  You could use Antlr to parse any text input, but call custom code to make sense of it and decide what the set of following pieces is. This would not only be more efficient, but would be far less frustrating to develop, since you have full control over the decision mechanism and can customize the underlying data structures to fit the task. Depending upon how simple your sequencing rules are, you might even be able to use a regular expression solution, if you can choose the text representation of the pieces.

 

Brent   

 

From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl] 
Sent: Wednesday, August 13, 2008 12:13 AM
To: Foust
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] How to get a list of all valid options for the next token?

 

Hello Brent,

 

It seems my question wasn?t clear enough. I have no intention of having a dynamic grammar. What I meant by disabling puzzle pieces is this: on the left side of the screen there is a list of all the possible puzzle pieces, a library if you will. From there the user drags pieces to the right side of the screen to form sequences of puzzle pieces. What I want to do is disable the pieces in the library. An alternative way of looking at it is seeing it as Intellisense/code completion. While the user is typing (dragging pieces), I want to display a popup list of all the possible words (pieces) that can come at the current position in the sentence. The grammar itself is completely fixed, just like the grammar of programming languages that allow code completion.

 

From: Foust [mailto:javafoust at gmail.com] 
Sent: dinsdag 12 augustus 2008 22:14
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] How to get a list of all valid options for the next token?

 

> I want to disable all the pieces that cannot come at that point in the sentence.

> I want to disable all the pieces that cannot come at that point in the sentence.

 

My guess is that this will be pretty difficult to implement using even an augmented context-free grammar. Usually, you would parse any valid sentence (a list of puzzle pieces, in your case), then do the semantic analysis as a later pass (iterate over the actual puzzle pieces entered and check each one for validity). 

 

Multiple passes should make the code easier to write (as well as maintain). And error reporting should be more intuitive. It?s pretty difficult to enforce all semantic meaning at the parse phase and still output meaningful error messages.

 

If you really want to experiment with changing the grammar dynamically, though, you could generate an AST in your parser for any valid sentence, and then use semantic predicates in your tree grammar to turn on and off certain rules. But I think you?ll find that just adding validity checks in your tree grammar actions will be the most straightforward, providing all the advantages of a multi-pass interpreter.

 

Brent

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
Sent: Tuesday, August 12, 2008 2:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to get a list of all valid options for the next token?

 

Hello everyone,

 

I?m making a program where users construct short sentences by combining puzzle pieces. This series of puzzle pieces is then converted to text and parsed by Antlr. Currently the user has access to all the different pieces at any point in the sentence, even if the grammar would not be able to parse this. I want to disable all the pieces that cannot come at that point in the sentence.

My idea was to do this with the help of the exceptions the parser generates. For example, when it throws a MismatchedTokenException I can find the expected token through the Expecting property of the exception. Unfortunately this only works when there?s only one possibility. When there are multiple it instead throws a NoViableAltException or a MismatchedSetException. I haven?t been able to find a list of valid following tokens in their properties.

 

Can anyone tell me if there is any way of determining the list of valid tokens after the current token in the sentence?

 

Thanks in advance.

 

________________________________

Envoy? avec Yahoo! Mail <http://us.rd.yahoo.com/mailuk/taglines/isp/control/*http:/us.rd.yahoo.com/evt=52423/*http:/fr.docs.yahoo.com/mail/overview/index.html> .
Une boite mail plus intelligente. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/b8e0ae32/attachment-0001.html 

From Robert.Kausch at ottogroup.com  Wed Aug 13 06:34:16 2008
From: Robert.Kausch at ottogroup.com (Kausch, Robert)
Date: Wed, 13 Aug 2008 15:34:16 +0200
Subject: [antlr-interest] ANTLR 3.1: Decision analysis timeout seems too low
Message-ID: <32B1A3CA449DFB459518E2B1B7FFBAB80AA591@ntovmail02.ad.otto.de>

Hi,

I'm working on an ANTLR grammar for ABAP which, due to the size of that
language, is steadily becoming really huge.

Now I reached a point where ANTLR sometimes gives me the following error
message while processing the parser grammar:

error(10):  internal error:
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could not
even do k=1 for decision 103; reason: timed out (>1000ms)

I can trigger this error by taking away CPU time from ANTLR while it is
processing the parser grammar (e.g. by browsing the web, starting a
program etc.). If I just sit still and do nothing during the ANTLR run,
it processes everything just fine. However, adding one more rule to my
grammar triggers the error all the time.

I figure increasing the value for MAX_TIME_PER_DFA_CREATION in DFA.java
would solve the problem. But maybe it would be better to add a command
line option for setting the timeout value.

I tried setting the timeout to 5000, but that caused the same problem
followed by a Java heap space out of memory error. A value of 2000
finally worked for me.

Greetings,
Robert

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/c3bd1ea2/attachment.html 

From markwright at internode.on.net  Wed Aug 13 06:55:21 2008
From: markwright at internode.on.net (Mark Wright)
Date: Wed, 13 Aug 2008 23:55:21 +1000
Subject: [antlr-interest] ANTLR 3.1: Decision analysis timeout seems too
 low
In-Reply-To: <32B1A3CA449DFB459518E2B1B7FFBAB80AA591@ntovmail02.ad.otto.de>
References: <32B1A3CA449DFB459518E2B1B7FFBAB80AA591@ntovmail02.ad.otto.de>
Message-ID: <20080813235521.00005254@goanna>

Hi,

You could try something like:

java -Xmx512m -classpath $(MY_CLASSPATH) org.antlr.Tool -Xconversiontimeout 1200000 -report mygrammar.g

on my grammar it only takes about 20 or 30 seconds for
antlr to generate the 2.8MB .java parser on a
dual 2.8GHz opteron box.  Which is great, antlr 3.1
is really fast.  It is normal to have to increase the
heap size and conversion timeout on large grammars.

Regards, Mark

On Wed, 13 Aug 2008 15:34:16 +0200
"Kausch, Robert" <Robert.Kausch at ottogroup.com> wrote:

> Hi,
> 
> I'm working on an ANTLR grammar for ABAP which, due to the size of
> that language, is steadily becoming really huge.
> 
> Now I reached a point where ANTLR sometimes gives me the following
> error message while processing the parser grammar:
> 
> error(10):  internal error:
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could
> not even do k=1 for decision 103; reason: timed out (>1000ms)
> 
> I can trigger this error by taking away CPU time from ANTLR while it
> is processing the parser grammar (e.g. by browsing the web, starting a
> program etc.). If I just sit still and do nothing during the ANTLR
> run, it processes everything just fine. However, adding one more rule
> to my grammar triggers the error all the time.
> 
> I figure increasing the value for MAX_TIME_PER_DFA_CREATION in
> DFA.java would solve the problem. But maybe it would be better to add
> a command line option for setting the timeout value.
> 
> I tried setting the timeout to 5000, but that caused the same problem
> followed by a Java heap space out of memory error. A value of 2000
> finally worked for me.
> 
> Greetings,
> Robert
> 


-- 

From o.b.fischer at gmx.de  Wed Aug 13 07:27:50 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Wed, 13 Aug 2008 16:27:50 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
Message-ID: <48A2EF66.7030201@gmx.de>

Dear all,

I would like to use labels in the actions of my tree parser to have an 
alternative way to access the tree nodes. Unfortunately ANTLR reports an 
error I can't understand.

Here is my action definition:


term returns [DataType rt]
   : factor { $rt = $factor.rt; }
     -> template(f={$factor.st})"<f>"
   | ^(ASTERISK t1=term t2=term)
   | ^(SLASH t1=term t2=term)
   | ^(AND t=term term)
     { System.out.println($t); }
   ;

And this is the error:

ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
error(117):
C:\javaproj\c1compiler.trunk\build\gensrc\de\fischer\c1compiler\antlr\C1Tree.g:243:5:
missing attribute access on rule scope: t

My someone of you can explain the reason for this error to me?

BYe

Oliver




From tbrandonau at gmail.com  Wed Aug 13 07:32:28 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 14 Aug 2008 00:32:28 +1000
Subject: [antlr-interest] Re : How to get a list of all valid options
	for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D9970253A2D3@EXCHANGE3.campus.tue.nl>
References: <707137.75586.qm@web26508.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D9970253A2D3@EXCHANGE3.campus.tue.nl>
Message-ID: <ebc876d70808130732i14e05d60xa249e0d925b92bc4@mail.gmail.com>

ANTLR grammars are LL not LR, but they are recursive descent and thus
don't use an explicit internal representation of the grammar to
control parse decisions. They do however have follow sets available at
parse time, used for error recovery and reporting. See the various
FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
may be able to get what you need from them. Though as they only
support a limited purpose they may collapse alternatives you need to
keep distinct.
Another option would be to create a custom generator that would then
have the richer information ANTLR uses at generation time.

Tom.

On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> Well, so much for that idea then :(
>
> Guess the only way to do this then is to indeed duplicate the knowledge
> inherent in the parser to a different checker. Oh well.
>
>
>
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 14:42
> To: Niemeijer, R.A.; Foust
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> I have found one series of 3 articles that might be interesting for such
> situation:
>
> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>
> But I don't know if you could achieve that easily (if someone knows a way or
> tool I would be interested too in knowing it). ANTLR parsers generated from
> grammars are not 'self-aware' if I understood correctly: they are LR parsers
> but don't hold as such a graph based on the grammar that could determine the
> next allowed token.
>
> Yours sincerely,
>
> Stanislas Herman.
>

From Robert.Kausch at ottogroup.com  Wed Aug 13 07:33:39 2008
From: Robert.Kausch at ottogroup.com (Kausch, Robert)
Date: Wed, 13 Aug 2008 16:33:39 +0200
Subject: [antlr-interest] ANTLR 3.1: Decision analysis timeout seems too
	low
Message-ID: <32B1A3CA449DFB459518E2B1B7FFBAB80AA593@ntovmail02.ad.otto.de>

That helped a lot! Thanks!

However, with conversiontimeout set to 1200000 ANTLR just used all the memory and then crashed. I now set it to 5000 which works fine for me.

Robert

-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Mark Wright
Gesendet: Mittwoch, 13. August 2008 15:55
An: Kausch, Robert
Cc: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] ANTLR 3.1: Decision analysis timeout seems too low


Hi,

You could try something like:

java -Xmx512m -classpath $(MY_CLASSPATH) org.antlr.Tool -Xconversiontimeout 1200000 -report mygrammar.g

on my grammar it only takes about 20 or 30 seconds for
antlr to generate the 2.8MB .java parser on a
dual 2.8GHz opteron box.  Which is great, antlr 3.1
is really fast.  It is normal to have to increase the
heap size and conversion timeout on large grammars.

Regards, Mark

On Wed, 13 Aug 2008 15:34:16 +0200
"Kausch, Robert" <Robert.Kausch at ottogroup.com> wrote:

> Hi,
>
> I'm working on an ANTLR grammar for ABAP which, due to the size of 
> that language, is steadily becoming really huge.
>
> Now I reached a point where ANTLR sometimes gives me the following 
> error message while processing the parser grammar:
>
> error(10):  internal error:
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could 
> not even do k=1 for decision 103; reason: timed out (>1000ms)
>
> I can trigger this error by taking away CPU time from ANTLR while it 
> is processing the parser grammar (e.g. by browsing the web, starting a 
> program etc.). If I just sit still and do nothing during the ANTLR 
> run, it processes everything just fine. However, adding one more rule 
> to my grammar triggers the error all the time.
>
> I figure increasing the value for MAX_TIME_PER_DFA_CREATION in 
> DFA.java would solve the problem. But maybe it would be better to add 
> a command line option for setting the timeout value.
>
> I tried setting the timeout to 5000, but that caused the same problem 
> followed by a Java heap space out of memory error. A value of 2000 
> finally worked for me.
>
> Greetings,
> Robert
>


--

From markwright at internode.on.net  Wed Aug 13 07:43:30 2008
From: markwright at internode.on.net (Mark Wright)
Date: Thu, 14 Aug 2008 00:43:30 +1000
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A2EF66.7030201@gmx.de>
References: <48A2EF66.7030201@gmx.de>
Message-ID: <20080814004330.000007ca@goanna>

Hi,

Maybe in the action you could try .text on the end like:

      { System.out.println($t.text); }

Regards, Mark

-- 

From kroepke at classdump.org  Wed Aug 13 07:47:50 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 13 Aug 2008 16:47:50 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A2EF66.7030201@gmx.de>
References: <48A2EF66.7030201@gmx.de>
Message-ID: <33A7B308-A895-4FB9-94AB-C671678A28CF@classdump.org>


On Aug 13, 2008, at 4:27 PM, Oliver B. Fischer wrote:

> Dear all,
>
> I would like to use labels in the actions of my tree parser to have  
> an alternative way to access the tree nodes. Unfortunately ANTLR  
> reports an error I can't understand.
>
> Here is my action definition:
>
>
> term returns [DataType rt]
>  : factor { $rt = $factor.rt; }
>    -> template(f={$factor.st})"<f>"
>  | ^(ASTERISK t1=term t2=term)
>  | ^(SLASH t1=term t2=term)
>  | ^(AND t=term term)
>    { System.out.println($t); }
>  ;
>
> And this is the error:
>
> ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
> error(117):
> C:\javaproj\c1compiler.trunk\build\gensrc\de\fischer\c1compiler\antlr 
> \C1Tree.g:243:5:
> missing attribute access on rule scope: t
>
> My someone of you can explain the reason for this error to me?

Sure,

ANTLR requires you to access some know attribute of `term` (via label  
t), i.e. accessing a plain rule reference is not allowed in parser or  
tree parser grammars.
IIRC this is because it would be ambiguous with respect to dynamic  
scopes (where it is permissible to write $term, but that gives you the  
Stack object for the rule scope).

For tokens it should work.

Try printing $t.st or $t.rt (if that has a toString() method).

cheers,
-k


-- 
Kay R?pke
http://classdump.org/







From jimi at temporal-wave.com  Wed Aug 13 09:22:51 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Aug 2008 09:22:51 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <20080813082502.C01751187EC5@msf1.dnsmadeeasy.com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082502.C01751187EC5@msf1.dnsmadeeasy.com>
Message-ID: <1218644571.6138.438.camel@jimi>

On Wed, 2008-08-13 at 20:26 +1200, Gavin Lambert wrote:


> At 10:51 13/08/2008, Jim Idle wrote:
> >Once you start adding all these traces then you find the lexers 
> >generate 3 tokens a minute. The base information is all there and 
> >I think FAQ #1 just needs to be: "Why you need your own error 
> >message printing function."
> 
> Hardly.  One or two extra ints containing information that's 
> basically already known at token generation time?  I doubt that'd 
> leave a noticeable dent.  (Well, ok, I guess the stream position 
> might have to be a longlong, or fpos_t, or whatever.  Still.)

You have to add this information for each token, so you are increasing
the memory usage for everyone in the vague hope that the information,
which can be calculated anyway, is useful in certain situations. If
there are things that cannot be easily calculated, I would be all for
adding them.

> 
> And even if you do implement your own error handling function -- 
> why force it to do all the work of scanning the characters on the 
> line looking for and expanding tabs just to get a column number, 
> when the lexer already had to pass those same tabs in order to 
> generate the error in the first place?


Because there is no way to know what the tabs mean. We went through all
of this in v2 - sometimes the user has to do it themselves to get it
accurate.

> 
> At minimum there should be a function in the runtime you can call 
> to do this for you.  I don't see why each driver program needs to 
> re-invent the wheel.

It's not a difficult piece of code to write, but any generic
implementation just won't be useful enough I think. I might put
something in the C runtime, but if one cannot code this in a few
minutes, then it is unlikely one would have got that far ;-)

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/ae5e1e10/attachment.html 

From cieslewski at hcs.ufl.edu  Wed Aug 13 09:30:59 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Wed, 13 Aug 2008 12:30:59 -0400
Subject: [antlr-interest] Possible problem with lists after upgrade to
	3.1
In-Reply-To: <7aa837f80808121915x28b5101fmca100f29f1e4db6d@mail.gmail.com>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
	<7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
	<7aa837f80808121915x28b5101fmca100f29f1e4db6d@mail.gmail.com>
Message-ID: <7aa837f80808130930s5eca7ffbt654b703732de80ae@mail.gmail.com>

Ter,

One quick question.  I am on a tight schedule, will you be able to fix
this issue soon or should I change my grammars to use an intermediate
rule?

Greg

P.S. Either is fine with me, I just need to know how to proceed.


On Tue, Aug 12, 2008 at 10:15 PM, Grzegorz Cieslewski
<cieslewski at hcs.ufl.edu> wrote:
> I guess a temporary workaround could be creating an intermediate rule like:
>
> expr
>        : (listA+=exprInter)+ -> ^(EXPR $listA+)
>        ;
>
> exprInter
>        : (number | id)
>        ;
> It seems to work like that.
>
> Also how do I add it manually to the list ?
>
> Greg
>
> On Tue, Aug 12, 2008 at 9:17 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> On Aug 12, 2008, at 6:10 PM, Grzegorz Cieslewski wrote:
>>
>>> Hi,
>>>
>>> In 3.1b2 (as included in antlrworks 1.2b5) the following seem to work:
>>>
>>> Case1:
>>> (listA+=number | listA+=id)+ -> ^(EXPR $listA+)
>>>
>>> On the other hand this syntax properly compiles but crashes on runtime
>>> Case2:
>>> (listA+=(number | id))+ -> ^(EXPR $listA+)
>>> Exception in thread "main"
>>> org.antlr.runtime.tree.RewriteEarlyExitException
>>>        at G4Parser.expr(G4Parser.java:238)
>>>        at __Test__.main(__Test__.java:14)
>>
>> Weird...i thought sets were always broken (still)...hmm...oh, syntax is ok
>> but runtime not yet.
>>
>> so, for now, manually add to list :(
>>
>>>
>>>
>>> When compiled with 3.1 I get errors:
>>> In Case1:
>>> ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
>>> G4Parser.java:88: incompatible types
>>> found   : G4Parser.number_return
>>> required: G4Parser.id_return
>>>                    listA=number();
>>
>> Oh shit...i changed that to be more specific but now it's tied to what rule
>> you call; for += you actually only care it's a rule. crap!  That is an
>> issue.
>>
>> Ter
>>
>
>
>
> --
> =====================================================
> Grzegorz Cieslewski
> Research Assistant
> High-performance Computing & Simulation (HCS) Research Laboratory
> University of Florida, Dept. of Electrical and Computer Engineering
> 330 Benton Hall, Gainesville, FL, 32611-6200
> Phone: (352) 392-9041
> Email: cieslewski at hcs.ufl.edu
> Web: www.hcs.ufl.edu
> =====================================================
>



-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From brent.yates at gmail.com  Wed Aug 13 09:33:32 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Wed, 13 Aug 2008 12:33:32 -0400
Subject: [antlr-interest] Preserving comments
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
Message-ID: <6edc6c380808130933i63ed7d07k14a96eec72091627@mail.gmail.com>

Vitaliy,

Are the comment actions specific to the context they are detected in?  Is
so, then you may have issues (beyond parsing) in associating the comments
with the appropriate language structures.  There are many academic papers
which discuss this difficult problem.

On the other hand, if the comment actions are not context sensitive, then
you should be able to add the action to the comment rule and still mark the
comment as hidden so that it doesn't mess up your other rules.

Brent
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/21b8d1ba/attachment.html 

From parrt at cs.usfca.edu  Wed Aug 13 10:07:16 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 10:07:16 -0700
Subject: [antlr-interest] Possible problem with lists after upgrade to
	3.1
In-Reply-To: <7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
	<7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
Message-ID: <605A2C1A-4251-4DB2-B589-43EC7051F843@cs.usfca.edu>

Grab new antlr daily build:

antlr-2008-08-13.10.tar.gz

Fixed.

Ter

From parrt at cs.usfca.edu  Wed Aug 13 10:13:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 10:13:55 -0700
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <48A2CCFD.2080006@gmx.de>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>	<C3525AF49F7D374D8E4D3C46ED4BC6212649AC@srvxdcex.xebic.com>
	<70bbae280808130452x5721b173qa48ba3bcb8bbb963@mail.gmail.com>
	<48A2CCFD.2080006@gmx.de>
Message-ID: <9F3A4F86-708D-44D2-B654-CCF020A8AA9D@cs.usfca.edu>

I see the source in the dir I used to build tarball under runtime/ 
CSharp/Sources
T
On Aug 13, 2008, at 5:01 AM, Johannes Luber wrote:

> Chris Lambrou schrieb:
>> Well done to everyone involved for getting 3.1 released.
>> I just have one problem - what happened to the source code for the  
>> runtimes in the source distribution?  I've been using the .NET  
>> runtime from the 3.1b1 release for some time now, and I was looking  
>> forward to updating to the full release when it became available.  
>> However, it appears that both the 3.1b2 and the 3.1 releases are  
>> missing the source code for the runtimes.
>> Chris
>
> Huh? The source code should be under the runtime/csharp directory.  
> Or do you mean the binaries? Those have been extracted into a  
> different download.
>
> Johannes
>> 2008/8/13 Patrick Hulsmeijer <phulsmeijer at xebic.com <mailto:phulsmeijer at xebic.com 
>> >>
>>    Great, thanks!
>>    Now let's try some of that cool new stuff.
>>    Gr, patrick.
>>    -----Original Message-----
>>    From: antlr-interest-bounces at antlr.org
>>    <mailto:antlr-interest-bounces at antlr.org>
>>    [mailto:antlr-interest-bounces at antlr.org
>>    <mailto:antlr-interest-bounces at antlr.org>] On Behalf Of Terence  
>> Parr
>>    Sent: dinsdag 12 augustus 2008 22:08
>>    To: antlr ANTLR
>>    Subject: [antlr-interest] ANTLR v3.1 released!
>>    Get it while it's hot!
>>    http://www.antlr.org/download.html
>>    Thanks to all the target developers for there hard work!!!
>>    http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
>>    Release notes:
>>    http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes
>>    API doc:
>>    http://www.antlr.org/api/
>>    Ter
>


From rusinskystanislas at yahoo.fr  Wed Aug 13 10:26:56 2008
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Wed, 13 Aug 2008 17:26:56 +0000 (GMT)
Subject: [antlr-interest] Re : Re : How to get a list of all valid options
	for the next token?
Message-ID: <459492.52880.qm@web26504.mail.ukl.yahoo.com>

oops, when making such attention mistakes I feel like hiding under the table :) they are LL of course

Mr. Niemeijer, could you please keep me informed if you reach a satisfactory solution with the "FOLLOW_" hint? I am interested too in that topic.

Stanislas.



----- Message d'origine ----
De : Thomas Brandon <tbrandonau at gmail.com>
? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
Objet : Re: [antlr-interest] Re : How to get a list of all valid options for the next token?

ANTLR grammars are LL not LR, but they are recursive descent and thus
don't use an explicit internal representation of the grammar to
control parse decisions. They do however have follow sets available at
parse time, used for error recovery and reporting. See the various
FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
may be able to get what you need from them. Though as they only
support a limited purpose they may collapse alternatives you need to
keep distinct.
Another option would be to create a custom generator that would then
have the richer information ANTLR uses at generation time.

Tom.

On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> Well, so much for that idea then :(
>
> Guess the only way to do this then is to indeed duplicate the knowledge
> inherent in the parser to a different checker. Oh well.
>
>
>
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 14:42
> To: Niemeijer, R.A.; Foust
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> I have found one series of 3 articles that might be interesting for such
> situation:
>
> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>
> But I don't know if you could achieve that easily (if someone knows a way or
> tool I would be interested too in knowing it). ANTLR parsers generated from
> grammars are not 'self-aware' if I understood correctly: they are LR parsers
> but don't hold as such a graph based on the grammar that could determine the
> next allowed token.
>
> Yours sincerely,
>
> Stanislas Herman.
>



      _____________________________________________________________________________ 
Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr

From jimi at temporal-wave.com  Wed Aug 13 10:29:28 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Aug 2008 10:29:28 -0700
Subject: [antlr-interest] [antlr-dev] Possible ANTLR 3.0/3.1 lexer
	generation bug
In-Reply-To: <op.uft1ah0ro521jq@tg01pc02.europe.root.pri>
References: <op.uft1ah0ro521jq@tg01pc02.europe.root.pri>
Message-ID: <1218648568.6138.461.camel@jimi>

On Wed, 2008-08-13 at 16:57 +0100, Ned Gill wrote:

> I think I've found a problem with ANTLR's lexer generation. Here's a small  
> example that shows the problem:
> 
> grammar Problem;
> 
> EOL    : '\n' ;
> BAB    : 'BAB' ;
> 
> SYMBOL : 'A'|'B' ;
> 
> line
>      : SYMBOL* EOL
>      ;
> 
> script
>      :
>      ( line
>          {
>              System.out.print($line.text);
>          }
>      )*
>      ;
> 

Rework this:

BAB : 'B'
      (   'AB')=>'AB'
        | {$type = SYMBOL; }
      )
    ;

SYMBOL : 'A';


Jim

PS: this is for the antlr-interest group rather than antlr-dev.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/824b3ad3/attachment.html 

From cieslewski at hcs.ufl.edu  Wed Aug 13 10:51:46 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Wed, 13 Aug 2008 13:51:46 -0400
Subject: [antlr-interest] Possible problem with lists after upgrade to
	3.1
In-Reply-To: <605A2C1A-4251-4DB2-B589-43EC7051F843@cs.usfca.edu>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>
	<7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
	<605A2C1A-4251-4DB2-B589-43EC7051F843@cs.usfca.edu>
Message-ID: <7aa837f80808131051o1b225871u989f7b27da6c2f8f@mail.gmail.com>

Big Thanks!

On Wed, Aug 13, 2008 at 1:07 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Grab new antlr daily build:
>
> antlr-2008-08-13.10.tar.gz
>
> Fixed.
>
> Ter
>



-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From parrt at cs.usfca.edu  Wed Aug 13 11:27:13 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 11:27:13 -0700
Subject: [antlr-interest] Is tokenVocab an Option for Parser Grammars?
In-Reply-To: <32701.2947.qm@web82306.mail.mud.yahoo.com>
References: <32701.2947.qm@web82306.mail.mud.yahoo.com>
Message-ID: <BE4FF731-5A61-4C41-B538-9CEAE4A81CD5@cs.usfca.edu>


On Aug 10, 2008, at 3:11 PM, titech at metaorb.com wrote:

> I retested with the simple grammar files below.  The combined  
> grammar works fine, but the separate parse file causes an error  
> regarding the literals (error text below).  Do separate parse files  
> require that all literals have associated lexer rules?
>
> BTW I just got your book--great stuff, wish I'd looked into ANTLR a  
> long time ago!

Great!

Ok,  yourIssue is that your Lex.g is not defined '(' and ')' so ANTLR  
complains you are using symbols that have no lexical definition in  
Parse.g

Ter
>
>
> Thanks,
> --Mike
>
>
> Parse.g
> -----------------------------------------------
> parser grammar Parse;
>
> options
> {
>   tokenVocab = Lex;
> }
>
> rule :     '(' INT ')' ;
>
>
> Lex.g
> -----------------------------------------------
> lexer grammar Lex;
>
> INT: '0' | SIGN? '1'..'9' '0'..'9'*;
>
> fragment SIGN: '+' | '-';
>
>
> plex.g
> -----------------------------------------------
> grammar plex;
>
> rule :     '(' INT ')' ;
>
>
> INT: '0' | SIGN? '1'..'9' '0'..'9'*;
>
> fragment SIGN: '+' | '-';
>
>
>
> -----------------------------------------------
>>> java org.antlr.Tool Parse.g
> ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
> error(107): Parse.g:8:10: literal has no associated lexer rule: '('
> error(107): Parse.g:8:18: literal has no associated lexer rule: ')'
>
>
>
>
>
>> On Aug 9, 2008, at 6:01 AM, Johannes Luber wrote:
>
>>>>> Of course this all works if I copy the lexer rules to the parser.
>>>>> Is this the correct syntax?
>>>> Yes, it is the correct syntax and I verified that it works on b2 on
>>>> my local machine. Are you generating the lexer first and is it in
>>>> the same directory as the parser? What error message are you
>>>> getting? Your parser grammar name needs to be the same as the file
>>>> name by the way.
>>>
>
>>> It should be mentioned that the tokenVocab-option requires the use
>>> of the tokens file, which must be in the same directory as the
>>> grammar which uses the tokenVocab-option. There is -o option for
>>> ANTLR which moves all the output files into another directory,
>>> included the generated source code files. If that doesn't work for
>>> you and you don't want merge the directories containing the grammar
>>> files, you have to include a file copy in your build setup.
>
>> I think ANTLR looks in -lib too for .tokens files.
>> Ter


From lgcraymer at yahoo.com  Wed Aug 13 11:45:13 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 13 Aug 2008 11:45:13 -0700 (PDT)
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
Message-ID: <25555.13893.qm@web55914.mail.re3.yahoo.com>

As far as tabs go, if it matters, it makes more sense to track tab count and position in line; the user can do that by having a
TAB : '\t'? { tabs++; } ;
rule (or something similar; I don't use ANTLR 3 action?syntax) and supporting a column() method that looks like
int column() {
?????return charPositionInLine - tabs + tabs * tabsize;
}
to the AST node type.
--Loring



----- Original Message ----
> From: Gavin Lambert <antlr at mirality.co.nz>
> To: Terence Parr <parrt at cs.usfca.edu>; Jim Idle <jimi at temporal-wave.com>
> Cc: antlr-interest at antlr.org
> Sent: Wednesday, August 13, 2008 1:26:54 AM
> Subject: Re: [antlr-interest] ANTLR 3.0.1: invalid character column in a mismatch character error message.
> 
> [Merging thread branches a bit...]
> 
> At 09:50 13/08/2008, Terence Parr wrote:
> >> Still, couldn't the lexer have a setTabSize() method or
> >> something?? Default it to 8, since that's the official
> >> standard tab size (even though most people usually reduce
> >> it), and let the driver code (or ANTLRworks) modify as
> >> needed.
> >
> >that was how v2 worked I think...still was trouble ;)
> 
> Yeah, but v2 *only* did that.? I think v3 should still keep the 
> line position (that's still useful) -- but it should have the 
> column as well.? It's not that much more work and it'd be handy 
> whether for the default or for custom error handlers.? (Might even 
> be useful for some kinds of syntax highlighting too.)
> 
> 
> At 10:51 13/08/2008, Jim Idle wrote:
> >Once you start adding all these traces then you find the lexers 
> >generate 3 tokens a minute. The base information is all there and 
> >I think FAQ #1 just needs to be: "Why you need your own error 
> >message printing function."
> 
> Hardly.? One or two extra ints containing information that's 
> basically already known at token generation time?? I doubt that'd 
> leave a noticeable dent.? (Well, ok, I guess the stream position 
> might have to be a longlong, or fpos_t, or whatever..? Still.)
> 
> And even if you do implement your own error handling function -- 
> why force it to do all the work of scanning the characters on the 
> line looking for and expanding tabs just to get a column number, 
> when the lexer already had to pass those same tabs in order to 
> generate the error in the first place?
> 
> At minimum there should be a function in the runtime you can call 
> to do this for you.? I don't see why each driver program needs to 
> re-invent the wheel.



      


From sharwell at pixelminegames.com  Wed Aug 13 12:03:31 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 13 Aug 2008 14:03:31 -0500
Subject: [antlr-interest] Keyword for referencing the enclosing rule in
	rewrite scope?
Message-ID: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwillgames.com>

As I mentioned before, this construct as it exists in v3.1 will give a
compile error even when a label reference is unambiguous according to
the language rules. The error's purpose is solely to alert the user to
the possibility they meant something other than what they wrote (could
be a warning?). To prevent the problem, I propose adding a special
keyword to consistently designate the enclosing rule's label in the
rewrite scope.

 

Right now, I write the following, and have a local change to suppress
the compile error.

 

rule

:               (              ID

                                -> ^(ID)

                )

                (              NUMBER rule

                                ->            ^(NUMBER $rule rule)

                                )?

                ;

 

I propose writing the following instead.

 

rule

:               (              ID

                                -> ^(ID)

                )

                (              NUMBER rule

                                ->            ^(NUMBER $this rule)

                                )?

                ;

 

Sam

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/007c43ae/attachment.html 

From jhking at airmail.net  Wed Aug 13 12:25:16 2008
From: jhking at airmail.net (jhking at airmail.net)
Date: Wed, 13 Aug 2008 14:25:16 -0500
Subject: [antlr-interest] bridging the gap
Message-ID: <45190.1218655516@airmail.net>

I have the "Definitive Guide..." book and have learned quite a bit from it.  What
I'm looking for (and this may be a "how to parse" question not an ANTLR question
is something more involved than the calc example that's explained.
I'm an MIS not CS guy so never got formal parser/language generation training but
have several itches that I think Antlr can help me scratch.

Our primary environment is PL/SQL (which looks a lot like Ada-83 + sql elements)
and I want to build two things:
1)  A comparison utility that compares parse trees or something that can ignore
insignificant changes.  PL/SQL is case-insensitive except within quoted strings
and its a bear to get a file comparison utility to deal with that.
2)  A pl/sql to java conversion utility, this is a long way off but I think if I
can learn enough to do #1 then I'm better than half-way to this.

I see example pl/sql grammars and I want to utilize those but at this point I
don't know enough to fully understand them, which means I'll have a hard time
extending them or understanding the errors if the pl/sql source I'm parsing has
features not yet in the example grammars.

I'm not asking anybody to do either of these things for me (that would be a
professional engagement worth more money than I can afford) I just need some kind
of a "parsers for dummies" book to get me further along.

Thanks for your kind attention.
---- Msg sent via Internet America Webmail - www.internetamerica.com

From parrt at cs.usfca.edu  Wed Aug 13 13:10:15 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 13:10:15 -0700
Subject: [antlr-interest] Keyword for referencing the enclosing rule in
	rewrite scope?
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwillgames.com>
Message-ID: <1983860E-F572-41F1-A809-E6F2EB9F6B01@cs.usfca.edu>

The ambig is a warning I think in antlr.  Just add a label to  
disambig...no need for a keyword.
Ter
On Aug 13, 2008, at 12:03 PM, Sam Harwell wrote:

> As I mentioned before, this construct as it exists in v3.1 will give  
> a compile error even when a label reference is unambiguous according  
> to the language rules. The error?s purpose is solely to alert the  
> user to the possibility they meant something other than what they  
> wrote (could be a warning?). To prevent the problem, I propose  
> adding a special keyword to consistently designate the enclosing  
> rule?s label in the rewrite scope.
>
> Right now, I write the following, and have a local change to  
> suppress the compile error.
>
> rule
> :               (              ID
>                                 -> ^(ID)
>                 )
>                 (              NUMBER rule
>                                 ->            ^(NUMBER $rule rule)
>                                 )?
>                 ;
>
> I propose writing the following instead.
>
> rule
> :               (              ID
>                                 -> ^(ID)
>                 )
>                 (              NUMBER rule
>                                 ->            ^(NUMBER $this rule)
>                                 )?
>                 ;
>
> Sam
>


From antlr at mirality.co.nz  Wed Aug 13 13:19:07 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Aug 2008 08:19:07 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <25555.13893.qm@web55914.mail.re3.yahoo.com>
References: <25555.13893.qm@web55914.mail.re3.yahoo.com>
Message-ID: <20080813201919.7F09911EDC1@www.antlr.org>

At 06:45 14/08/2008, Loring Craymer wrote:
 >As far as tabs go, if it matters, it makes more sense to track 
tab
 >count and position in line; the user can do that by having a
 >TAB : '\t'  { tabs++; } ;
 >rule (or something similar; I don't use ANTLR 3 action syntax) 
and
 >supporting a column() method that looks like
 >int column() {
 >     return charPositionInLine - tabs + tabs * tabsize;
 >}
 >to the AST node type.

No, that wouldn't work.

With a tab size of 4 characters:
   TAB TAB SPACE X => X at column 10
   TAB SPACE TAB X => X at column 9
   SPACE TAB SPACE TAB X => X at column 9

The order matters; the *only* way to work this out after the fact 
is to examine each individual character between the start of line 
and the desired character position.  You can only do this if you 
know the absolute position of the start of the line in the 
character stream (or you can at least seek back to where it would 
have been from some other known point) -- and if you still have 
access to the character stream!

That's not a big deal for the lexer, but by the time you're in the 
parser or tree parser you can't always get that information any 
more.  It seems ludicrous to me that this information is not 
available when it's so critical to reporting decent error messages 
to the user.  (Not even the default error handler can get it right 
at present.)

You *could* hack this up by extending the token type and adding 
some special handling to the WS rule for tabs, yes.  (Similar in a 
way to how v2 required you to tell it where the newlines 
were.)  But this just seems like such a universally useful thing 
that it really belongs as standard.


From javafoust at gmail.com  Wed Aug 13 13:22:08 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 13:22:08 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>	<20080811195652.6FC8E312968@www.antlr.org>	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
Message-ID: <002201c8fd82$441dd240$cc5976c0$@com>

Kay,

>Kay R?pke wrote:
> On Aug 13, 2008, at 12:33 PM, Foust wrote:
> 
> > Kay wrote:
> >> It adds up, as simple as that. The more you store, the greater your
> >> memory footprint is, the more pages it has to touch, the slower it
> >> gets. Especially if you are parsing huge input it makes a noticeable
> >> difference (and in most target languages the footprint of an int is
> >> not 4 or 8 bytes, it's much larger for all those managed languages).
> >
> > We could make that argument for any of Antlr's features, most of
> > which take
> > a lot more processing and memory than just a couple of ints. If
> > speed is the
> > only reason for not providing the intuitive functionality, then
> > there are
> > ways to architect it so that it only gets invoked for users who need
> > the
> > functionality (IoC is one, but there are others).
> 
> Which features are there that take a lot of memory based on the input?
> Apart from line information (which most of the time I don't "really"
> need to have stored, I can re-lex on error to produce the necessary
> information because an error will be expensive anyway), all I can see
> in CommonToken (for Java now) is necessary housekeeping information.
> E.g. the start/stop indices are used to grab the actual text from the
> input stream, rather than copying strings around.
> 
> I'm just saying that adding a column and the tab-width handling
> doesn't make that much sense, because it's not something you generally
> need. If you do need it, it's almost trivial to add.
> 
> >
> > Even in managed languages, an integer field only takes 4 or 8 bytes.
> > (There
> > is no need to allocate an entirely separate object for each character
> > position.)
> 
> That's certainly not the case for reference counted (and weakly typed)
> languages like Perl. I believe Python uses the same approach as Perl
> (opaque structs that store multiple representations of their value
> internally, converting when necessary).
> At least Perl uses way more than 4 bytes per int on a 32bit machine.
> 
> BTW, I meant tokens not characters here. I agree it would be silly to
> wrap each char in an object. But if you have a huge number of short
> tokens, this get's noticeable.
> Of course, for short input it hardly makes any sense to even think
> about it...
> 
> >> I think the runtime should be minimal, because it's much easier to
> >> add
> >> functionality than to remove it
> >
> > That's a valid point.
> >
> > And what Antlr already provides (an accurate line and character pos)
> > is already good. But most editors display a 1-based column number. So
> > if the intent is to provide the grammar developer accurate feedback in
> > order to quickly locate the problem, then an accurate 1-based column
number
> > should be provided.
> 
> The problem is tab handling, otherwise I'd not argue about 0 vs 1.
> Letting it start at 1 kinda implies that we are telling the "column"
> even when we are not. It's not a column and can't be in the presence
> of tabs. Hence my fierce arguments ;)

I see.


> 
> > When using Vi, it is easy to go to a line#/character offset. But
> > Eclipse
> > (without the Vi plugin) doesn't allow you to move the right n
> > characters. It
> > just displays the column number, which varies with the spaces-per-tab
> > setting. Editor plugins, such as AntlrDT probably already take this
> > into
> > account.
> >
> > But most users probably think that column #1 means the first
> > character, not
> > the 2nd.
> 
> If I talk about column 1, then yes, I mean the first character. I'm
> human after all.
> But when I see charPosInLine, I think index (in c-speak).

Yes. Whereas vertical tabs are no longer used, the Antlr "line" attribute is
1-based, but the horizontal coordinate, "charPosInLine" is 0-based (for
reasons you've described in detail). Maybe it would have been clearer with a
name like "charIndex".

Nevertheless, the question seems to be one of whether it is worthwhile to
handle tabs as a special case, and I hear you voting, "no."


> Actually, I think we need better error messages in the default
> implementation, then the problem goes away.
> Naturally this won't happen in 3.1 (as it's been released! hooray!),
> but maybe we can cook up something for 3.2.
> Note: I'm not talking about solving the tab problem, but displaying a
> short portion of the input (whether charstream or tokenstream) with an
> indicator where the offending char/token was. That should make it easy
> to find the error, even if we can't provide column-accurate position
> info out of the box.
> That above plan applies to other error messages as well:
> 
> warning(200): MySQL51.g:1610:74: Decision can match input such as
> "MINUS" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input

Yes. You're right. Cut to the chase and just give the offending input,
rather than make the user go search for it.


> 
> I'd like to see more verbose information about which alternatives were
> involved because counting them in the input grammar can be really
> tiring (if the alts are 15,34 for example).

Again, excellent suggestion.


> ANTLRWorks helps here, but sometimes I want to see it in the actual
> output. Shouldn't be hard to add in any case.

AntlrWorks has it's issues. It's difficult to rely on it, unless it is being
actively supported. (Are bugs being actively addressed in AntlrWorks?) 

I agree with you that more descriptive error messages are needed and would
probably solve most issues without resorting to character counting, anyway.

Brent


From antlr at mirality.co.nz  Wed Aug 13 13:25:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Aug 2008 08:25:43 +1200
Subject: [antlr-interest] Keyword for referencing the enclosing rule in
 rewrite scope?
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwill
	games.com>
References: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwillgames.com>
Message-ID: <20080813202554.A8D0311EAFD@www.antlr.org>

At 07:03 14/08/2008, Sam Harwell wrote:
>As I mentioned before, this construct as it exists in v3.1 will 
>give a compile error even when a label reference is unambiguous 
>according to the language rules. The error's purpose is solely to 
>alert the user to the possibility they meant something other than 
>what they wrote (could be a warning?). To prevent the problem, I 
>propose adding a special keyword to consistently designate the 
>enclosing rule's label in the rewrite scope.

It's not '$rule' that's ambiguous, it's the 'rule' in the tree 
rewrite.  So the reference *is* ambiguous according to the 
language rules.

>rule
>:               (              ID
>                                 -> ^(ID)
>                 )
>                 (              NUMBER rule
>                                 ->            ^(NUMBER $rule 
> rule)
>                                 )?
>                 ;

If I recall a previous discussion on this correctly, ANTLR 
produces a warning and also different behaviour than what you 
might be expecting ('rule' is treated equivalent to '$rule' in 
that context, IIRC).

Adding a new keyword like you propose might be useful in other 
cases, but it still wouldn't remove this ambiguity.  As Ter said, 
the right thing to do here is to add a label to your use of 'rule' 
as a subrule and use that in the tree construction instead.


From jaluber at gmx.de  Wed Aug 13 13:29:05 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Aug 2008 22:29:05 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character
 column	in	a	mismatch character error message.
In-Reply-To: <002201c8fd82$441dd240$cc5976c0$@com>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>	<20080811195652.6FC8E312968@www.antlr.org>	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>	<20080813082704.903D911EC21@www.antlr.org>	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>	<001701c8fd30$145bfed0$3d13fc70$@com>	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
Message-ID: <48A34411.1000702@gmx.de>

Foust schrieb:
...
> AntlrWorks has it's issues. It's difficult to rely on it, unless it is being
> actively supported. (Are bugs being actively addressed in AntlrWorks?) 

ANTLRworks is actively supported by Jean Bovet.

Johannes

From javafoust at gmail.com  Wed Aug 13 13:36:08 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 13:36:08 -0700
Subject: [antlr-interest] $ Expansion Conflict w/ Class Name
In-Reply-To: <48A2B58F.4060904@gmx.de>
References: <000a01c8fd2a$1e3ee030$5abca090$@com> <48A2B58F.4060904@gmx.de>
Message-ID: <002401c8fd84$3827c520$a8774f60$@com>

Johannes Luber wrote:
> Foust wrote:
> > Although Java allows class names beginning with $, ANTLR does not.
> >
> > Is there a known workaround?
> 
> \$ may work.

Yes. That works (since Antlr processes the actions as strings).

Brent


From sharwell at pixelminegames.com  Wed Aug 13 13:37:34 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 13 Aug 2008 15:37:34 -0500
Subject: [antlr-interest] Keyword for referencing the enclosing rule in
	rewrite scope?
In-Reply-To: <BLOODYMARYfM7QugGly00001d59@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E0E6@Bloodymary.ironwillgames.com>
	<BLOODYMARYfM7QugGly00001d59@Bloodymary.ironwillgames.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E0F3@Bloodymary.ironwillgames.com>

That would imply that the following would be allowed, but it isn't:

rule
	:	(	ID
			-> ^(ID)
		)
		(	NUMBER
			-> ^(NUMBER rule)
		)?
	;

error 136: reference to rewrite element rule without reference on left
of ->

Also, you get an error 119 if you try to make a label whose name matches
another rule, like this:

rule
	:	ID
	; 

rule2
	:	ID
	; 

rule3
	:	rule=rule2 // error 119
	;

So the only thing $rule could ever mean inside a rewrite rule is the
enclosing rule, and the only thing rule could ever mean inside a rewrite
rule is a reference on the left of -> that is not the enclosing rule.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Wednesday, August 13, 2008 3:26 PM
To: Sam Harwell; antlr-interest
Subject: Re: [antlr-interest] Keyword for referencing the enclosing rule
in rewrite scope?

At 07:03 14/08/2008, Sam Harwell wrote:
>As I mentioned before, this construct as it exists in v3.1 will 
>give a compile error even when a label reference is unambiguous 
>according to the language rules. The error's purpose is solely to 
>alert the user to the possibility they meant something other than 
>what they wrote (could be a warning?). To prevent the problem, I 
>propose adding a special keyword to consistently designate the 
>enclosing rule's label in the rewrite scope.

It's not '$rule' that's ambiguous, it's the 'rule' in the tree 
rewrite.  So the reference *is* ambiguous according to the 
language rules.

>rule
>:               (              ID
>                                 -> ^(ID)
>                 )
>                 (              NUMBER rule
>                                 ->            ^(NUMBER $rule 
> rule)
>                                 )?
>                 ;

If I recall a previous discussion on this correctly, ANTLR 
produces a warning and also different behaviour than what you 
might be expecting ('rule' is treated equivalent to '$rule' in 
that context, IIRC).

Adding a new keyword like you propose might be useful in other 
cases, but it still wouldn't remove this ambiguity.  As Ter said, 
the right thing to do here is to add a label to your use of 'rule' 
as a subrule and use that in the tree construction instead.


From javafoust at gmail.com  Wed Aug 13 13:38:35 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 13:38:35 -0700
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A2EF66.7030201@gmx.de>
References: <48A2EF66.7030201@gmx.de>
Message-ID: <002501c8fd84$90b376d0$b21a6470$@com>

> missing attribute access on rule scope: t

You cannot print the node, but must access its fields (attributes translated
by Antlr). Try:

	$t.text

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Oliver B. Fischer
> Sent: Wednesday, August 13, 2008 7:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Using labels in actions of a tree parser
> 
> Dear all,
> 
> I would like to use labels in the actions of my tree parser to have an
> alternative way to access the tree nodes. Unfortunately ANTLR reports
> an
> error I can't understand.
> 
> Here is my action definition:
> 
> 
> term returns [DataType rt]
>    : factor { $rt = $factor.rt; }
>      -> template(f={$factor.st})"<f>"
>    | ^(ASTERISK t1=term t2=term)
>    | ^(SLASH t1=term t2=term)
>    | ^(AND t=term term)
>      { System.out.println($t); }
>    ;
> 
> And this is the error:
> 
> ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
> error(117):
> C:\javaproj\c1compiler.trunk\build\gensrc\de\fischer\c1compiler\antlr\C
> 1Tree.g:243:5:
> missing attribute access on rule scope: t
> 
> My someone of you can explain the reason for this error to me?
> 
> BYe
> 
> Oliver
> 



From antlr at mirality.co.nz  Wed Aug 13 13:48:35 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Aug 2008 08:48:35 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <002201c8fd82$441dd240$cc5976c0$@com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
Message-ID: <20080813204905.22D172F4315@www.antlr.org>

[Ok, I'm mostly responding to Kay here, but I had 
to do it indirectly since I didn't get the original message.]

At 08:22 14/08/2008, Foust wrote:
 >>Kay R?pke wrote:
 >> I'm just saying that adding a column and the 
tab-width handling
 >> doesn't make that much sense, because it's not something you
 >> generally need. If you do need it, it's almost trivial to add.

You need it to produce any kind of useful error 
message when the input file contains tabs.  I 
guess you could work around this by 
pre-converting all tabs to spaces before passing 
it to ANTLR, but that's effectively a whole 
'nother lexing step, which seems like a 
waste.  And the error message would *still* be 
misleading, since it reports the zero-based 
character offset as if it were a one-based column number.

 >> If I talk about column 1, then yes, I mean 
the first character.
 >> I'm human after all.
 >> But when I see charPosInLine, I think index (in c-speak).

That's fine, if you're dealing with the object 
model.  But often you're not -- the token 
attribute, for example, is simply called 
'$X.position', which could be read either 
way.  And the error messages simply dump the 
charPosInLine *as if it were a column*.  _That_ 
is what I object to, not the zero-based-ness of 
the charPosInLine (I agree that this makes the most sense).

 >> Note: I'm not talking about solving the tab problem, but
 >> displaying a short portion of the input (whether charstream
 >> or tokenstream) with an indicator where the offending
 >> char/token was. That should make it easy to find the error,
 >> even if we can't provide column-accurate position
 >> info out of the box.

While I think this is an excellent idea... how 
exactly are you going to position the indicator 
if you don't know the column position?  You can't 
rely on outputting tabs for positioning because 
the tabs in the input stream and the tabs on the 
console/output stream may not have the same width.


And I *still* haven't heard a convincing argument 
for why column tracking can't be implemented 
correctly out of the box, at least for input 
sources that use constant-spacing tabs (which is 
probably at least 90% of cases).  The extra 
per-token overhead seems trivial and it'd be much 
simpler to track the column as it's parsed rather 
than after the fact.

 >Yes. You're right. Cut to the chase and just give the offending
 >input, rather than make the user go search for it.

You still need to give line/column information, 
so that IDEs can jump straight to the location of 
the error themselves.  (I'm assuming here that 
the IDE is separate from ANTLR and can't access 
its internal structures -- and most IDEs expect 
errors to have a line:column format.)


From javafoust at gmail.com  Wed Aug 13 13:57:58 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 13:57:58 -0700
Subject: [antlr-interest] bridging the gap
In-Reply-To: <45190.1218655516@airmail.net>
References: <45190.1218655516@airmail.net>
Message-ID: <002601c8fd87$45b12a30$d1137e90$@com>

jhking wrote:
> I have the "Definitive Guide..." book and have learned quite a bit from
> it.  What I'm looking for (and this may be a "how to parse" question not an ANTLR
> question
> is something more involved than the calc example that's explained.
> I'm an MIS not CS guy so never got formal parser/language generation
> training [...]
> I just need some kind of a "parsers for dummies" book to get me further along.

The Definitive Antlr Reference is that book. There are others that contain more theory, but they often concentrate on LR parsers and would take some time to digest.

If you've already absorbed the first few chapters of the DAR, then you might try looking at Terance's Mantra grammar for a more-involved example than the calc example. That illustrates both the parser, and the tree grammar for walking the parser output.

Brent


From kroepke at classdump.org  Wed Aug 13 13:59:01 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 13 Aug 2008 22:59:01 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column
	in	a	mismatch character error message.
In-Reply-To: <002201c8fd82$441dd240$cc5976c0$@com>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>	<20080811195652.6FC8E312968@www.antlr.org>	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
Message-ID: <7BE9343F-2EBE-4722-A0E3-2C77C9AEB2AA@classdump.org>

Hi!

On Aug 13, 2008, at 10:22 PM, Foust wrote:

>>> But most users probably think that column #1 means the first
>>> character, not
>>> the 2nd.
>>
>> If I talk about column 1, then yes, I mean the first character. I'm
>> human after all.
>> But when I see charPosInLine, I think index (in c-speak).
>
> Yes. Whereas vertical tabs are no longer used, the Antlr "line"  
> attribute is
> 1-based, but the horizontal coordinate, "charPosInLine" is 0-based  
> (for
> reasons you've described in detail). Maybe it would have been  
> clearer with a
> name like "charIndex".

yeah, maybe that's a better name for it. i guess we have to live with  
it now, but it's not that crucial, i think.

> Nevertheless, the question seems to be one of whether it is  
> worthwhile to
> handle tabs as a special case, and I hear you voting, "no."

right. for handling tabs, i think it's just not worth the effort,  
because essentially what we are talking about here is to _expand_ tabs  
to spaces, something i wouldn't get into.
As Gavin pointed out, it's not as simple as counting the tabs,  
multiplying that number by tabwidth and substracting the number of  
tabs, the actual column will depend on the order of spaces and tabs.
And since we are not in the business of creating an editor, but a  
parser generator, I think we should not touch that subject at all.

If fact, I strongly believe tabs to be supremely evil and they should  
be first up against the wall when the revolution comes ;)

Seriously though, ANTLR correctly reports the _character_ position  
(disregarding the 0 vs 1 debate for the moment), because a \t is _one_  
character. When you are dealing with text in any UI library I've seen,  
tabs are represented as one character in the underlying text storage,  
to avoid having you to deal with all this trouble of what the effect  
of tabs on the screen is. It's up to other layers to figure out the  
actual layout. We should do likewise.

I already see the next guy writing a syntax highlighter coming along  
and complain about ANTLR expanding tabs to spaces so that for input  
like "\tID" we report the start index of token ID as being 8 (or 9 if  
someone insists on charPosInLine to be 1-based), assuming that  
"standard tab width" is 8. If written in sloppy C that could easily  
crash his application, and in any other language it would at least  
cause an exception of some sort.
That's the fundamental reason I'm so strongly against handling tabs in  
any special way.

The grammar author is of course free to generate special whitespace  
tokens for different kind of whitespace in case he needs to somehow  
disambiguate them later on.

>> ANTLRWorks helps here, but sometimes I want to see it in the actual
>> output. Shouldn't be hard to add in any case.
>
> AntlrWorks has it's issues. It's difficult to rely on it, unless it  
> is being
> actively supported. (Are bugs being actively addressed in AntlrWorks?)

Yes, although Jean is on vaction, I hear ;)
If there is anything not working, please write an email to the list  
and someone will enter it into JIRA ( http://www.antlr.org:8888/browse/AW 
  ).
I have some local changes regarding improved composite grammar  
support, which we will sort out when he is back, for example.

> I agree with you that more descriptive error messages are needed and  
> would
> probably solve most issues without resorting to character counting,  
> anyway.


Yep. I think a different style of reporting and maybe some ANTLRWorks  
improvements in that area could help with these issues.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From o.b.fischer at gmx.de  Wed Aug 13 14:04:22 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Wed, 13 Aug 2008 23:04:22 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A2EF66.7030201@gmx.de>
References: <48A2EF66.7030201@gmx.de>
Message-ID: <48A34C56.10000@gmx.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

But is there a way to get access to the tree node itself? I tried to use
the ".tree" attribute, but it leads to an compile error, since .tree
isn't translated to ".getTree()".

So, what can I do to get the tree node?

Bye

Oliver

Oliver B. Fischer schrieb:
| Dear all,
|
| I would like to use labels in the actions of my tree parser to have an
| alternative way to access the tree nodes. Unfortunately ANTLR reports an
| error I can't understand.
|
| Here is my action definition:
|
|
| term returns [DataType rt]
|   : factor { $rt = $factor.rt; }
|     -> template(f={$factor.st})"<f>"
|   | ^(ASTERISK t1=term t2=term)
|   | ^(SLASH t1=term t2=term)
|   | ^(AND t=term term)
|     { System.out.println($t); }
|   ;
|


- --
Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
Tel. +49 30 44793251, Mobil: +49 178 7903538
Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.8 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkijTFYACgkQbyc4N0PdoAzBFwCgzYfQHP9luDnCwF8/doZXw+w8
McgAn3TiHdDJ6sPO/UDbOFbuXcEBjvLh
=uzjK
-----END PGP SIGNATURE-----

From javafoust at gmail.com  Wed Aug 13 14:05:46 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 14:05:46 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <20080813204905.22D172F4315@www.antlr.org>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>	<20080811195652.6FC8E312968@www.antlr.org>	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>	<20080813082704.903D911EC21@www.antlr.org>	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>	<001701c8fd30$145bfed0$3d13fc70$@com>	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
Message-ID: <002701c8fd88$5c04b0d0$140e1270$@com>

Gavin wrote: 
> You still need to give line/column information,
> so that IDEs can jump straight to the location of
> the error themselves.  (I'm assuming here that
> the IDE is separate from ANTLR and can't access
> its internal structures -- and most IDEs expect
> errors to have a line:column format.)

Is that true? The popular IDEs don't take line + character offset?

If so, then you have a compelling argument to add Tab translation support.
You may, anyway. But with regard to what IDEs expect, it's difficult to
believe that they'd want anything other than the line# and raw number of
characters from the beginning of the line. Do you think C++ compilers are
really doing character -> column# translations (with Tab translation) before
outputting syntax errors?

Brent


From kroepke at classdump.org  Wed Aug 13 14:08:07 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 13 Aug 2008 23:08:07 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A348B6.1070502@gmx.de>
References: <48A2EF66.7030201@gmx.de>
	<33A7B308-A895-4FB9-94AB-C671678A28CF@classdump.org>
	<48A348B6.1070502@gmx.de>
Message-ID: <8E9D5783-A23A-4E44-AA15-3620E1A6DB8D@classdump.org>

Hi!

(shamelessly copying the list because it's of general interest)

On Aug 13, 2008, at 10:48 PM, Oliver B. Fischer wrote:

> Kay R?pke schrieb:
> | ANTLR requires you to access some know attribute of `term` (via  
> label
> | t), i.e. accessing a plain rule reference is not allowed in parser  
> or
> | tree parser grammars.
> | IIRC this is because it would be ambiguous with respect to dynamic
> | scopes (where it is permissible to write $term, but that gives you  
> the
> | Stack object for the rule scope).
>
> But is there a way to get access to the tree node itself? I tried to  
> use
> the ".tree" attribute, but it leads to an compile error, since .tree
> isn't translated to ".getTree()".
>
> So, what can I do to get the tree node?


The problem here is that there's not one tree node, since rules can  
match 0 or more nodes.
To access the first node matched (or the first node potentially  
matched if none was matched in reality) you can use $term.start, which  
will give you the corresponding node.
I don't really know what you are trying to accomplish, so that may or  
may not be what you want.

Three attributes are predefined for tree grammar rules: .text, .start  
and .st. Additionally of course the return values you specify.
.tree isn't there, because the only thing that makes sense is .start  
(which is a better name for it anyway). Although one could argue that  
maybe .tree should be the same as .start here. mmh. Have to think  
about that one.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From o.b.fischer at gmx.de  Wed Aug 13 14:12:28 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Wed, 13 Aug 2008 23:12:28 +0200
Subject: [antlr-interest] Syntaxerror not found if first symbol is wrong
In-Reply-To: <543531490808101053t27d05390k2684332d0799b278@mail.gmail.com>
References: <489F131C.1090601@gmx.de>
	<543531490808101053t27d05390k2684332d0799b278@mail.gmail.com>
Message-ID: <48A34E3C.509@gmx.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Ben,

I am reading the input from ANTLRStringStream, so I don't get an EOF.
How to fix this?

Bye

Oliver

Benjamin Niemann schrieb:
| Hi Oliver,
|
| If the very first token is an ID, the code will throw an
| EarlyExitException - doesn't it? (alt1 sticks to its default value 2,
| which is handled by the default case in the switch, which in turn will
| raise the exception, because cnt1 is 0)
|
| If you have a sequence INT ID ';' ID, then the loop will exit after
| the semicolon, and the parser will not complain about the dangling ID.
| If that's what the problem is, then you can solve it by using
|
| program : (a b ';')+  EOF;
|
| -Ben
|
| On Sun, Aug 10, 2008 at 6:11 PM, Oliver B. Fischer
<o.b.fischer at gmx.de> wrote:
| Hello,
|
| my grammar is not able to recognize an syntax error if already the first
| ~ symbol found is not an expected one:
|
| My grammar looks like this:
|
| INT : 'int' ;
|
| ID : ('a'..'z')+ ;
|
| WS : (' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; };
|
| program : (a b ';')+ ;
|
| a : INT ;
|
| b : ID ;
|
| So, any valid input must start with 'int', but if the first symbol found
| by the lexer is an ID, the generated parser does not recognize the error.
|
| ANTLR generates the following code:
| public final void program() throws RecognitionException {
| ~  try {
| ~    {
| ~      int cnt1 = 0;
| ~      loop1:
| ~      do {
| ~        int alt1 = 2;
| ~        int LA1_0 = input.LA(1);
|
| ~        if ((LA1_0 == INT)) {
| ~          alt1 = 1;
| ~        }
|
|
| ~        switch (alt1) {
| ~          case 1: {
| ~            pushFollow(FOLLOW_a_in_program154);
| ~            a();
| ~            _fsp--;
|
| ~            pushFollow(FOLLOW_b_in_program156);
| ~            b();
| ~            _fsp--;
|
| ~            match(input, SEM, FOLLOW_SEM_in_program158);
|
| ~          }
| ~          break;
|
| ~          default:
| ~            if (cnt1 >= 1) break loop1;
| ~            EarlyExitException eee =
| ~                    new EarlyExitException(1, input);
| ~            throw eee;
| ~        }
| ~        cnt1++;
| ~      } while (true);
|
|
| ~    }
|
| ~  }
|
| ~  catch (RecognitionException e) {
| ~    throw e;
| ~  }
| ~  finally {
| ~  }
| ~  return;
| }
|
| So, the ID token falls through the switch-statement. How can I avoid this?
|
| Thank you for your help!
|
| Bye
|
| Oliver
|
|
|
|>

- --
Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
Tel. +49 30 44793251, Mobil: +49 178 7903538
Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.8 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkijTjwACgkQbyc4N0PdoAzGWQCgw8ShlojJ5SoEgBoTbOaeU3Sv
jbkAn0HCJsHYUXdBSdvj9bgjjdL8mNPv
=wH8y
-----END PGP SIGNATURE-----

From javafoust at gmail.com  Wed Aug 13 14:15:14 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 14:15:14 -0700
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A34C56.10000@gmx.de>
References: <48A2EF66.7030201@gmx.de> <48A34C56.10000@gmx.de>
Message-ID: <002801c8fd89$af878420$0e968c60$@com>

Oliver,

> But is there a way to get access to the tree node itself? I tried to
> use the ".tree" attribute, but it leads to an compile error, since .tree
> isn't translated to ".getTree()".
> 
> So, what can I do to get the tree node?

Although it's counter-intuitive, there is no ".tree" attribute on nodes of a
tree grammar (only in the parser). See p. 132. Although $t does represent
your 'term' tree node, only "text", "start", and "st" are defined.

Brent

---------

> 
> Oliver B. Fischer schrieb:
> | Dear all,
> |
> | I would like to use labels in the actions of my tree parser to have
> an
> | alternative way to access the tree nodes. Unfortunately ANTLR reports
> an
> | error I can't understand.
> |
> | Here is my action definition:
> |
> |
> | term returns [DataType rt]
> |   : factor { $rt = $factor.rt; }
> |     -> template(f={$factor.st})"<f>"
> |   | ^(ASTERISK t1=term t2=term)
> |   | ^(SLASH t1=term t2=term)
> |   | ^(AND t=term term)
> |     { System.out.println($t); }
> |   ;
> |
> 
> 
> - --
> Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
> Tel. +49 30 44793251, Mobil: +49 178 7903538
> Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.8 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
> 
> iEYEARECAAYFAkijTFYACgkQbyc4N0PdoAzBFwCgzYfQHP9luDnCwF8/doZXw+w8
> McgAn3TiHdDJ6sPO/UDbOFbuXcEBjvLh
> =uzjK
> -----END PGP SIGNATURE-----


From brent.yates at gmail.com  Wed Aug 13 14:15:34 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Wed, 13 Aug 2008 17:15:34 -0400
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <002701c8fd88$5c04b0d0$140e1270$@com>
References: <489F2207.2030101@orange.fr>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
Message-ID: <6edc6c380808131415k3bdb21f6of9b08c99f43d530c@mail.gmail.com>

I use SlickEdit and it wants line:column.  Before that I used CodeWright and
it also wanted line:column.  In both cases the first line and first column
is 1.  I am currently adding an ANTLR driven parser to SlickEdit to handle
Verilog and I have to track tabs manually (for error messages) since the
ANTLR lexer does not.  I have not seen an editor that wants line:char
offset, but I'm sure they exist.

byates

On Wed, Aug 13, 2008 at 5:05 PM, Foust <javafoust at gmail.com> wrote:

> Gavin wrote:
> > You still need to give line/column information,
> > so that IDEs can jump straight to the location of
> > the error themselves.  (I'm assuming here that
> > the IDE is separate from ANTLR and can't access
> > its internal structures -- and most IDEs expect
> > errors to have a line:column format.)
>
> Is that true? The popular IDEs don't take line + character offset?
>
> If so, then you have a compelling argument to add Tab translation support.
> You may, anyway. But with regard to what IDEs expect, it's difficult to
> believe that they'd want anything other than the line# and raw number of
> characters from the beginning of the line. Do you think C++ compilers are
> really doing character -> column# translations (with Tab translation)
> before
> outputting syntax errors?
>
> Brent
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/7abf36a8/attachment.html 

From antlr at mirality.co.nz  Wed Aug 13 14:21:41 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Aug 2008 09:21:41 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <7BE9343F-2EBE-4722-A0E3-2C77C9AEB2AA@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<7BE9343F-2EBE-4722-A0E3-2C77C9AEB2AA@classdump.org>
Message-ID: <20080813212153.AD9EF312963@www.antlr.org>

At 08:59 14/08/2008, Kay R?pke wrote:
 >I already see the next guy writing a syntax highlighter coming
 >along and complain about ANTLR expanding tabs to spaces so that
 >for input like "\tID" we report the start index of token ID as
 >being 8 (or 9 if someone insists on 
charPosInLine to be 1-based),
 >assuming that "standard tab width" is 8. If written in sloppy C
 >that could easily crash his application, and in any other
 >language it would at least cause an exception of some sort.
 >That's the fundamental reason I'm so strongly against handling
 >tabs in any special way.

Only if you *replace* the current position 
information, which I never advocated.  I think 
ANTLR should track *both*.  It's not as hard as 
you seem to be making out.  (At least not as far as I can see.)

(Well, ok, I *did* advocate replacing the char 
position shown in the error message dumped to the 
console with the column number.  But that just 
makes sense to me, and won't affect the 
syntax-highlighters or others who are using the 
object model directly anyway.)


From antlr at mirality.co.nz  Wed Aug 13 14:28:58 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Aug 2008 09:28:58 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <002701c8fd88$5c04b0d0$140e1270$@com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
Message-ID: <20080813212908.B1F12312963@www.antlr.org>

At 09:05 14/08/2008, Foust wrote:
 >Is that true? The popular IDEs don't take line + character 
offset?

I've yet to see one that does.  (Maybe they do internally, but 
internal calls are irrelevant to the point I'm trying to make, 
since you'll have access to the ANTLR-generated object model and 
can use whatever makes sense there.)

See:
   <http://blogs.msdn.com/msbuild/archive/2006/11/03/msbuild-visual-studio-aware-error-messages-and-message-formats.aspx>
   <http://www.gnu.org/prep/standards/standards.html#Errors>

 >Do you think C++ compilers are really doing character ->
 >column# translations (with Tab translation) before
 >outputting syntax errors?

Yes, I do.


From parrt at cs.usfca.edu  Wed Aug 13 14:35:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 14:35:24 -0700
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <002801c8fd89$af878420$0e968c60$@com>
References: <48A2EF66.7030201@gmx.de> <48A34C56.10000@gmx.de>
	<002801c8fd89$af878420$0e968c60$@com>
Message-ID: <F4F468A4-2F8E-47B1-BD30-B9DBCDE3C723@cs.usfca.edu>


On Aug 13, 2008, at 2:15 PM, Foust wrote:

> Oliver,
>
>> But is there a way to get access to the tree node itself? I tried to
>> use the ".tree" attribute, but it leads to an compile error,  
>> since .tree
>> isn't translated to ".getTree()".
>>
>> So, what can I do to get the tree node?
>
> Although it's counter-intuitive, there is no ".tree" attribute on  
> nodes of a
> tree grammar (only in the parser). See p. 132. Although $t does  
> represent
> your 'term' tree node, only "text", "start", and "st" are defined.

$label.start also works.
Ter

From kroepke at classdump.org  Wed Aug 13 14:38:59 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 13 Aug 2008 23:38:59 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <20080813204905.22D172F4315@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
Message-ID: <2970BC41-7778-46BD-9CBE-1D5B27C67F4D@classdump.org>

Hi!

On Aug 13, 2008, at 10:48 PM, Gavin Lambert wrote:

> [Ok, I'm mostly responding to Kay here, but I had to do it  
> indirectly since I didn't get the original message.]

it was accidentally sent off-list.

> At 08:22 14/08/2008, Foust wrote:
> >>Kay R?pke wrote:
> >> I'm just saying that adding a column and the tab-width handling
> >> doesn't make that much sense, because it's not something you
> >> generally need. If you do need it, it's almost trivial to add.
>
> You need it to produce any kind of useful error message when the  
> input file contains tabs.  I guess you could work around this by pre- 
> converting all tabs to spaces before passing it to ANTLR, but that's  
> effectively a whole 'nother lexing step, which seems like a waste.   
> And the error message would *still* be misleading, since it reports  
> the zero-based character offset as if it were a one-based column  
> number.

The trick is to not expand tabs at all, but work with \t == 1 char as  
long as possible, I think. When the time comes to output it, then yes,  
you should simply take an arbitrary tabwidth and print that. Then you  
know the exact column (and most tools punt here, and simply replace \t  
with n spaces).
As an aside: Both gcc and javac don't give you the column number ;)
The 0 vs 1 debate is moot, because in your error reporting functions  
you can simply +1 that, so I don't buy that argument.

> >> If I talk about column 1, then yes, I mean the first character.
> >> I'm human after all.
> >> But when I see charPosInLine, I think index (in c-speak).
>
> That's fine, if you're dealing with the object model.  But often  
> you're not -- the token attribute, for example, is simply called  
> '$X.position', which could be read either way.  And the error  
> messages simply dump the charPosInLine *as if it were a column*.   
> _That_ is what I object to, not the zero-based-ness of the  
> charPosInLine (I agree that this makes the most sense).

Yes, I think the presentation can and should be improved. Working on a  
proof-of-concept in a low priority thread :)

> >> Note: I'm not talking about solving the tab problem, but
> >> displaying a short portion of the input (whether charstream
> >> or tokenstream) with an indicator where the offending
> >> char/token was. That should make it easy to find the error,
> >> even if we can't provide column-accurate position
> >> info out of the box.
>
> While I think this is an excellent idea... how exactly are you going  
> to position the indicator if you don't know the column position?   
> You can't rely on outputting tabs for positioning because the tabs  
> in the input stream and the tabs on the console/output stream may  
> not have the same width.

Expand the tabs to an arbitrary value and punt if the terminal tries  
to be smart about tabs (which I think none is). It's just like you said.

> And I *still* haven't heard a convincing argument for why column  
> tracking can't be implemented correctly out of the box, at least for  
> input sources that use constant-spacing tabs (which is probably at  
> least 90% of cases).  The extra per-token overhead seems trivial and  
> it'd be much simpler to track the column as it's parsed rather than  
> after the fact.

I agree, the information is there if you assume a constant-spacing  
tab. But I'm arguing that including this feature wouldn't benefit that  
many people, because when you _are_ dealing with the object model of  
text storages, then you don't care for the display column: The UI  
layer does that for you. What you want to know is which _character_  
position the (multi-)byte character was in.

> >Yes. You're right. Cut to the chase and just give the offending
> >input, rather than make the user go search for it.
>
> You still need to give line/column information, so that IDEs can  
> jump straight to the location of the error themselves.  (I'm  
> assuming here that the IDE is separate from ANTLR and can't access  
> its internal structures -- and most IDEs expect errors to have a  
> line:column format.)


As I said, gcc and javac don't even give you the column in error  
messages (though javac does almost exactly what I describe, see below  
for an example). IDEs would deal with a character position indexing  
into a text storage, so they wouldn't actually want the display column  
because that's an added burden.

javac:
classdump:tmp kroepke$ javac Test.java
Test.java:3: ')' expected
	public static void main(String[] foo {}) {
                                              ^
Test.java:6: ';' expected
}
^
2 errors

Note that the `public` has a tab in front of it. javac expands that  
tab to 8 chars, but only in its marker line.
In fact (the tab has now been edited, since I can't influence your  
tabwidth...sic):

classdump:tmp kroepke$ tabs -4
classdump:tmp kroepke$ javac Test.java
Test.java:3: ')' expected
     public static void main(String[] foo {}) {
                                              ^
Test.java:6: ';' expected
}
^
2 errors

Who's in charge of javac around here!?

cheers,
-k (who's going to track that javac dude down :P)

P.S.: The clang people of LLVM got it right, they correctly expand  
both tabs, just for kudos...
-- 
Kay R?pke
http://classdump.org/







From brent.yates at gmail.com  Wed Aug 13 14:42:44 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Wed, 13 Aug 2008 17:42:44 -0400
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <20080813212908.B1F12312963@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<20080813212908.B1F12312963@www.antlr.org>
Message-ID: <6edc6c380808131442x5b870065yaa0e2255e7ff6aa3@mail.gmail.com>

There are internal API calls to do the conversion (in SlickEdit), but
externally its line:col.  I have seen some compilers (ModelSim in the
Verilog space) that just return line numbers in their error messages just so
they don't have to deal with this issue.  If you know the tab spacing, then
doing the calculation at the lexer level is not too hard and with SlickEdit
it is easy to ask the IDE what the tab setting is.

byates
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/b3461d8b/attachment.html 

From simos.lists at googlemail.com  Wed Aug 13 15:42:22 2008
From: simos.lists at googlemail.com (Simos Xenitellis)
Date: Wed, 13 Aug 2008 23:42:22 +0100
Subject: [antlr-interest] Antlr, Python bindings download page
Message-ID: <598e9210808131542h7a51807bh1fc9a47346cff784@mail.gmail.com>

Hi,

The URL http://antlr.org/download/Python/
shows vesion 3.0.1 while 3.1 appears to be available.

Is 3.1 ready yet for use
(http://fisheye2.atlassian.com/browse/antlr/runtime/Python)?

Simos

From r_reitzi at cs.uni-kl.de  Wed Aug 13 15:50:02 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Thu, 14 Aug 2008 00:50:02 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in
	a	mismatch character error message.
In-Reply-To: <20080813201919.7F09911EDC1@www.antlr.org>
References: <25555.13893.qm@web55914.mail.re3.yahoo.com>
	<20080813201919.7F09911EDC1@www.antlr.org>
Message-ID: <20080814005002.20762304an13p6pw@horde.verrech.net>

Hi!

"Gavin Lambert" <antlr at mirality.co.nz> wrote (Wed Aug 13 22:19:07 2008):

> it's so critical to reporting decent error messages to the user.

Agree.

Personally, I really like error messages by javac. What do I care for  
column or character count: Those messages _show_ me the error  
position! (Kay mailed an excellent example)
So, if a parser error occurs, put k tokens from either side of the  
error site in a String, remember which character position in _this_  
String marks the defective character and put all that along with the  
line number in the created exception. For an end user, this is all I  
expect him to want.

Of course, if you want another program digest ANTLRs exceptions, that  
won't suffice.

Regards

Raphael

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/979fa136/attachment.bin 

From r_reitzi at cs.uni-kl.de  Wed Aug 13 16:05:28 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Thu, 14 Aug 2008 01:05:28 +0200
Subject: [antlr-interest] How to get a list of all valid options for	the
	next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D9970253A290@EXCHANGE3.campus.tue.nl>
References: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>
	<001b01c8fcb7$f3461410$d9d23c30$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A1D9@EXCHANGE3.campus.tue.nl>
	<000f01c8fd2b$1c59fe20$550dfa60$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A26A@EXCHANGE3.campus.tue.nl>
	<001a01c8fd31$7879c450$696d4cf0$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A290@EXCHANGE3.campus.tue.nl>
Message-ID: <20080814010528.547434zzohe5rt2c@horde.verrech.net>

I understand that ANTLR does _not_ know which alternatives are  
possible in next step, but it tries one alternative after the other,  
taking the first that works. So, your request would mean to look ahead  
in all alternatives. This is, I suppose a rather special thing you  
won't find in ANTLR.

You mentioned syntax highlighting. This is a different thing. Syntax  
highlighting does not show you: "Well, you could start an variable  
declaration, an assignment, an if statement, ..., here", but only  
available methods on objects (at least those IDEs I know). This is  
stuff you can gather from sources/object files, store somewhere  
central staticaly. No need to look something up in any gramar while  
you're typing.

Regards

Raphael

"Niemeijer, R.A." <r.a.niemeijer at tue.nl> wrote (Wed Aug 13 13:02:41 2008):

> No problem, thanks anyway.
>
>
>
> Does anyone else have any idea how to do this?
>
>
>
> Thanks in advance.
>
>
>
> From: Foust [mailto:javafoust at gmail.com]
> Sent: woensdag 13 augustus 2008 12:44
> To: Niemeijer, R.A.
> Subject: RE: [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
>> Yes, it's certainly possible to make my own check. However, that means
> I'm basically duplicating
>
>> my grammar, which makes it more difficult to maintain. The reason I
> wanted to get the information
>
>> from Antlr is that it should already know all the possible token
> combinations.
>
>
>
> OK, well it sounds like you know what you're doing.
>
>
>
> Sorry I wasn't able to help more,
>
>
>
> Brent
>
>
>
> From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl]
> Sent: Wednesday, August 13, 2008 3:06 AM
> To: Foust
> Cc:
> Subject: RE: [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> Yes, it's certainly possible to make my own check. However, that means
> I'm basically duplicating my grammar, which makes it more difficult to
> maintain. The reason I wanted to get the information from Antlr is that
> it should already know all the possible token combinations.
>
>
>
> From: Foust [mailto:javafoust at gmail.com]
> Sent: woensdag 13 augustus 2008 11:58
> To: Niemeijer, R.A.
> Subject: RE: [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> Yes, I didn't understand exactly what you're trying to do (and probably
> still don't). If you're thinking of it like an Intellisense problem,
> then there are other ways of solving that kind of problem without using
> a parser-generator like Antlr. Have you already considered those?
>
>
>
> It sounds like your problem is a bit different than the code editor's -
> simpler, actually. Whatever rules you use to decide what pieces can go
> where may be more easily expressed with a custom solution.  You could
> use Antlr to parse any text input, but call custom code to make sense of
> it and decide what the set of following pieces is. This would not only
> be more efficient, but would be far less frustrating to develop, since
> you have full control over the decision mechanism and can customize the
> underlying data structures to fit the task. Depending upon how simple
> your sequencing rules are, you might even be able to use a regular
> expression solution, if you can choose the text representation of the
> pieces.
>
>
>
> Brent
>
>
>
> From: Niemeijer, R.A. [mailto:r.a.niemeijer at tue.nl]
> Sent: Wednesday, August 13, 2008 12:13 AM
> To: Foust
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> Hello Brent,
>
>
>
> It seems my question wasn't clear enough. I have no intention of having
> a dynamic grammar. What I meant by disabling puzzle pieces is this: on
> the left side of the screen there is a list of all the possible puzzle
> pieces, a library if you will. From there the user drags pieces to the
> right side of the screen to form sequences of puzzle pieces. What I want
> to do is disable the pieces in the library. An alternative way of
> looking at it is seeing it as Intellisense/code completion. While the
> user is typing (dragging pieces), I want to display a popup list of all
> the possible words (pieces) that can come at the current position in the
> sentence. The grammar itself is completely fixed, just like the grammar
> of programming languages that allow code completion.
>
>
>
> From: Foust [mailto:javafoust at gmail.com]
> Sent: dinsdag 12 augustus 2008 22:14
> To: Niemeijer, R.A.
> Subject: RE: [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
>> I want to disable all the pieces that cannot come at that point in the
> sentence.
>
>> I want to disable all the pieces that cannot come at that point in the
> sentence.
>
>
>
> My guess is that this will be pretty difficult to implement using even
> an augmented context-free grammar. Usually, you would parse any valid
> sentence (a list of puzzle pieces, in your case), then do the semantic
> analysis as a later pass (iterate over the actual puzzle pieces entered
> and check each one for validity).
>
>
>
> Multiple passes should make the code easier to write (as well as
> maintain). And error reporting should be more intuitive. It's pretty
> difficult to enforce all semantic meaning at the parse phase and still
> output meaningful error messages.
>
>
>
> If you really want to experiment with changing the grammar dynamically,
> though, you could generate an AST in your parser for any valid sentence,
> and then use semantic predicates in your tree grammar to turn on and off
> certain rules. But I think you'll find that just adding validity checks
> in your tree grammar actions will be the most straightforward, providing
> all the advantages of a multi-pass interpreter.
>
>
>
> Brent
>
>
>
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
> Sent: Tuesday, August 12, 2008 2:57 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get a list of all valid options for the
> next token?
>
>
>
> Hello everyone,
>
>
>
> I'm making a program where users construct short sentences by combining
> puzzle pieces. This series of puzzle pieces is then converted to text
> and parsed by Antlr. Currently the user has access to all the different
> pieces at any point in the sentence, even if the grammar would not be
> able to parse this. I want to disable all the pieces that cannot come at
> that point in the sentence.
>
> My idea was to do this with the help of the exceptions the parser
> generates. For example, when it throws a MismatchedTokenException I can
> find the expected token through the Expecting property of the exception.
> Unfortunately this only works when there's only one possibility. When
> there are multiple it instead throws a NoViableAltException or a
> MismatchedSetException. I haven't been able to find a list of valid
> following tokens in their properties.
>
>
>
> Can anyone tell me if there is any way of determining the list of valid
> tokens after the current token in the sentence?
>
>
>
> Thanks in advance.
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/cbe6417c/attachment.bin 

From r_reitzi at cs.uni-kl.de  Wed Aug 13 16:10:11 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Thu, 14 Aug 2008 01:10:11 +0200
Subject: [antlr-interest] Labels Expanded w/in Action Comments
In-Reply-To: <48A2B3F5.4070801@gmx.de>
References: <7f8924df0808121950n6bd0a6e3jbc84d9d1a4e38522@mail.gmail.com>
	<20080813083345.3563711ED0E@www.antlr.org>
	<000901c8fd27$1989c3f0$4c9d4bd0$@com> <48A2B3F5.4070801@gmx.de>
Message-ID: <20080814011011.85996ngwebkcnowg@horde.verrech.net>

Hi!

I guess all you need to prevent that kind of thing is some static  
information about target language, right?

I specify my target language in gramar header. I ANTLR would have a  
file per target installed to look up some stuff (like line comment  
indicator, of course) once per code generation, it could sort this out  
at runtime. Would be a generic solution, also, for target developers  
could update the information file as they like, ANTLR would look it up.

I don't know how target developing goes. Perhaps each target could  
take care of this on its own entirely.

Regards

Raphael

"Johannes Luber" <jaluber at gmx.de> wrote (Wed Aug 13 12:14:13 2008):

> Foust schrieb:
>> $references are being expanded within action code comments.
>>
>> Did this issue get added to the bug database?
>>
>> I received some responses that this is the intended behavior, but surely you
>> don't expect people to delete their action code when debugging, rather than
>> just commenting it out?
>>
>> The issue here is the line comment (//), since some attribute references
>> (like 'text') are expanded to several lines, making the resultant code not
>> compilable.
>>
>> I'm sure that there are several possible solutions, but one would be to
>> directly support the C/C++/Java line comment in Antlr, unless turned off by
>> an option. Another solution would be to allow language specific definition
>> of line and block comments. Good editors do this.
>>
>> Brent
>
> Well, it is possible to fix this behaviour, but ANTLR has to be  
> bootstrapped first. Currently the tool is maintained in a ANTLR 2  
> grammar, which has some limitations. Only if we have an ANTLR in an  
> ANTLR 3 grammar, we can use grammar inheritance to adapt the target  
> code recognition to recognize the comments correctly. I don't know  
> when Ter will finish this task, but he said it was too much work to  
> include it in 3.1. Maybe he finishes it for 3.2?
>
> Johannes
>
> P.S.: Please don't use another email to create a reply email and  
> change the subject line to something different. There are people who  
> use mailing list threading to order related emails in handy trees  
> and not creating a an entirely new email for new subjects screws  
> that up. Any good email client should allow to create a new email  
> from any email address - Thunderbird can do this over a context menu.
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/37339160/attachment.bin 

From parrt at cs.usfca.edu  Wed Aug 13 16:33:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 16:33:40 -0700
Subject: [antlr-interest] Antlr, Python bindings download page
In-Reply-To: <598e9210808131542h7a51807bh1fc9a47346cff784@mail.gmail.com>
References: <598e9210808131542h7a51807bh1fc9a47346cff784@mail.gmail.com>
Message-ID: <B65F35F5-CC7B-4720-A9BF-A74E22C77916@cs.usfca.edu>

Yes, grab main distribution and you'll get it... just waiting to get  
in the binary from Benjamin to put there.
Ter
On Aug 13, 2008, at 3:42 PM, Simos Xenitellis wrote:

> Hi,
>
> The URL http://antlr.org/download/Python/
> shows vesion 3.0.1 while 3.1 appears to be available.
>
> Is 3.1 ready yet for use
> (http://fisheye2.atlassian.com/browse/antlr/runtime/Python)?
>
> Simos


From Austin_Hastings at Yahoo.com  Wed Aug 13 16:55:03 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 13 Aug 2008 18:55:03 -0500
Subject: [antlr-interest] Q: Eclipse AntlrDT plugin - cannot open file
In-Reply-To: <200808130659.m7D6xVf5013688@zinc.newtechlaw.com>
References: <4894C3A9.8040907@Yahoo.com>
	<200808022139.m72LdrD7003623@zinc.newtechlaw.com>
	<48965738.6070605@Yahoo.com>
	<200808040543.m745hnID020812@zinc.newtechlaw.com>
	<200808040653.m746rwLg021235@zinc.newtechlaw.com>
	<48A26293.60509@Yahoo.com>
	<200808130659.m7D6xVf5013688@zinc.newtechlaw.com>
Message-ID: <48A37457.2010302@Yahoo.com>

Gerald Rosenberg wrote:
> At 09:26 PM 8/12/2008, you wrote:
>> Thanks for that. I've got it somewhat working. An exception occurs 
>> when I try to open either of the Template pages under the AntlrDT 
>> Preferences.
>
> Yes, that is one of the API bugs I mentioned.  Attached is a 
> pre-release that should fix that bug, and a few others that are much 
> less noticeable.  Please do let me know of any other problems.

Okay. As long as you're aware of it, I don't actually need that at the 
moment.

>> Also, it would be nice if the output path could make use of the 
>> standard variables. Because I'm using maven, I want to the output 
>> into 
>> ${build_project}/target/generated-blah-blah-blah/<source-path-hierarchy>/*.java. 
>>
>
> Not sure what standard variables you are referring to.  What is your 
> path to the *.g3?  I am not that familiar with Maven, so I am not sure 
> what constraints it is placing on your chosen hierarchy configuration.
>

Maven is a build tool, with attached Kool-Aid. There is a "standard 
directory layout" involved, that it wants everything to fit into. (Of 
course you can change this, blah blah freedom blah blah artistic 
creativity blah blah) Eclipse, when building and when running external 
programs, supports the use of $(...) variables for providing workspace- 
and project- information. Check the Run > External Tools > External 
Tools Configurations ... dialog box for several controls that have an 
attached [Variables] button, which lists the defined variables.

Since AntlrDT is automatically invoking antlr, I wanted to tell it to 
output the generated files to the directory that maven uses -- in 
Eclipse parlance that would be 
$(build_project)/target/generated-sources/antlr. In addition, I want it 
to use the same subdirectory tree that the source file uses: If my .g3 
file is in $(ROOT)/com/example/program/P.g3, then I want the output 
file(s) to go in $(OUTPUT)/com/example/program/P*.java.

None of this is show-stopping, of course -- I've already got it 
functioning. It's "making it work better-er" stuff.

=Austin

From kroepke at classdump.org  Wed Aug 13 16:55:57 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Thu, 14 Aug 2008 01:55:57 +0200
Subject: [antlr-interest] How to get a list of all valid options for	the
	next token?
In-Reply-To: <20080814010528.547434zzohe5rt2c@horde.verrech.net>
References: <A8F615EE446C9B4D837FB67447C0D9970253A068@EXCHANGE3.campus.tue.nl>
	<001b01c8fcb7$f3461410$d9d23c30$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A1D9@EXCHANGE3.campus.tue.nl>
	<000f01c8fd2b$1c59fe20$550dfa60$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A26A@EXCHANGE3.campus.tue.nl>
	<001a01c8fd31$7879c450$696d4cf0$@com>
	<A8F615EE446C9B4D837FB67447C0D9970253A290@EXCHANGE3.campus.tue.nl>
	<20080814010528.547434zzohe5rt2c@horde.verrech.net>
Message-ID: <B97AB68D-B346-4666-ACE1-F440A6575B33@classdump.org>

Hi!

On Aug 14, 2008, at 1:05 AM, Raphael Reitzig wrote:

> You mentioned syntax highlighting. This is a different thing. Syntax  
> highlighting does not show you: "Well, you could start an variable  
> declaration, an assignment, an if statement, ..., here", but only  
> available methods on objects (at least those IDEs I know). This is  
> stuff you can gather from sources/object files, store somewhere  
> central staticaly. No need to look something up in any gramar while  
> you're typing.


Yeah, highlighting doesn't need it.
I recently came across a request (or rather a wish) to support  
completion in sql statements, though. That would really benefit from  
this type of information, for example if you could tell that at the  
current input location only column names (or db.table.col or similar)  
is allowed, you could provide really smart completion.
Mix in semantic information (i'm in expr and the currently available  
tables are t1,t2: show completions only for columns of those tables,  
then present function names) and you get a pretty cool development  
environment :)

I've yet to explore that alley, but that information would be very  
valuable to get at. Performance shouldn't be much of an issue, as it  
would like be in an interactive environment and the possible states  
would be finite (=precomputed from the grammar).

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From Austin_Hastings at Yahoo.com  Wed Aug 13 17:02:51 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 13 Aug 2008 19:02:51 -0500
Subject: [antlr-interest] AntlrDT - Bad error handling? Bad parsing?
Message-ID: <48A3762B.7020308@Yahoo.com>

I have a problem in a grammar. Under AntlrDT, eclipse reports:

Errors (1 item):
--> Unknown error message 
[type=org.antlr.tool.NonRegularDecisionMessage]   --> hlasm.g3 --> 
path/to/src --> line 2 --> DLTK Problem

Under cygwin, invoking the antlr Tool produces:

ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
error(211): src/main/antlr/perl6/hlasm/Hlasm.g3:149:2: [fatal] rule 
assignment_expr has non-LL(*) decision due to recursive rule invocations 
reachable from alts 1,2.  Resolve by left-factoring or using syntactic 
predicates or using backtrack=true option.



In fact, line 149 is right. I don't know how DT is coming up with line 
#2, whether that's the column value, or from one of the other '2's that 
are laying around. But it's failing to extract the error message, and 
failing to get the line number right, and it's drawing an (x) at line 2 
of the file, which is a blank line, suggesting there is an error there.

=Austin


From rulatir at wp.pl  Wed Aug 13 17:03:45 2008
From: rulatir at wp.pl (Szczepan =?iso-8859-2?q?Ho=B3yszewski?=)
Date: Thu, 14 Aug 2008 02:03:45 +0200
Subject: [antlr-interest] Conjuring tokens out of thin air in rewrite rules?
Message-ID: <200808140203.45749.rulatir@wp.pl>

For the life of me, I can't guess how to insert a token of a particular type 
AND value in a rewrite rule. My parser grammar has this rule for the list of 
array dimension sizes:

dimensionsList
	: assingExp (','! assignExp)*
	| (',' dims+=assignExp)* -> ( /* my problem here */ ($dims)*)
	;

Note the second rule allows omitting the first dimension, but I want this to 
be semantically equivalent to the first dimension specified as 0 (which will 
in turn mean dynamic size). I want to prepend the resulting token sequence 
with a token of type DEC (defined by lexer grammar) and text value "0". In 
other words, I want this input:

	, 2, 3, 4

to yield identical AST as this input:

	0, 2, 3, 4

Can this be done at all without manipulating the AST directly with Java in a 
semantic action? If not, how to write such a semantic action?

Regards,
Szczepan Holyszewski


From parrt at cs.usfca.edu  Wed Aug 13 17:13:00 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Aug 2008 17:13:00 -0700
Subject: [antlr-interest] Conjuring tokens out of thin air in rewrite
	rules?
In-Reply-To: <200808140203.45749.rulatir@wp.pl>
References: <200808140203.45749.rulatir@wp.pl>
Message-ID: <F2418B48-B504-4BC4-84E1-1FBF50E83941@cs.usfca.edu>

Try ^(DECL["0"] $dims*)

Ter
On Aug 13, 2008, at 5:03 PM, Szczepan Ho?yszewski wrote:

> For the life of me, I can't guess how to insert a token of a  
> particular type
> AND value in a rewrite rule. My parser grammar has this rule for the  
> list of
> array dimension sizes:
>
> dimensionsList
> 	: assingExp (','! assignExp)*
> 	| (',' dims+=assignExp)* -> ( /* my problem here */ ($dims)*)
> 	;
>
> Note the second rule allows omitting the first dimension, but I want  
> this to
> be semantically equivalent to the first dimension specified as 0  
> (which will
> in turn mean dynamic size). I want to prepend the resulting token  
> sequence
> with a token of type DEC (defined by lexer grammar) and text value  
> "0". In
> other words, I want this input:
>
> 	, 2, 3, 4
>
> to yield identical AST as this input:
>
> 	0, 2, 3, 4
>
> Can this be done at all without manipulating the AST directly with  
> Java in a
> semantic action? If not, how to write such a semantic action?
>
> Regards,
> Szczepan Holyszewski
>


From javafoust at gmail.com  Wed Aug 13 17:24:16 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 17:24:16 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
Message-ID: <000f01c8fda4$178560a0$469021e0$@com>

Gavin Lambert wrote:
> At 09:05 14/08/2008, Foust wrote:
>  >Is that true? The popular IDEs don't take line + character
> offset?
> 
> I've yet to see one that does.  (Maybe they do internally, but
> internal calls are irrelevant to the point I'm trying to make,
> since you'll have access to the ANTLR-generated object model and
> can use whatever makes sense there.)
> 
> See:
>    <http://blogs.msdn.com/msbuild/archive/2006/11/03/msbuild-visual-
> studio-aware-error-messages-and-message-formats.aspx>
>    <http://www.gnu.org/prep/standards/standards.html#Errors>

Nice. 

> Line numbers should start from 1 at the beginning of the file, 
> and column numbers should start from 1 at the beginning of the line. 
> (Both of these conventions are chosen for compatibility.)
> Calculate column numbers assuming that space and all ASCII printing 
> characters have equal width, and assuming tab stops every 8 columns.

Note that the tab stops are fixed -- assumed at every 8 characters.
 

> 
>  >Do you think C++ compilers are really doing character ->
>  >column# translations (with Tab translation) before
>  >outputting syntax errors?
> 
> Yes, I do.

Then that settles it, does it not?

It doesn't mean that Antlr can't have more expressive error messages (that
display the offending text as well), but for compatibility reasons, it does
seem to imply:

	a) Column # 1 should be the first character (not 0)

	b) A 0-based character offset field can also be supplied, 
	   but the tab characters need to be taken into account
	   for error message output.

And it wouldn't be difficult to add to (b):

	c) configurable tab width (instead of hard-coding a value of 8)

The additional storage requirements shouldn't be a major issue. But if the
processing turns out to slow the scanner down, then it can be architected so
that it can be turned off by the user who knows he doesn't need correct
column numbers.

Brent



From kroepke at classdump.org  Wed Aug 13 18:05:03 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Thu, 14 Aug 2008 03:05:03 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <000f01c8fda4$178560a0$469021e0$@com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
Message-ID: <602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>


On Aug 14, 2008, at 2:24 AM, Foust wrote:

>>>
>>> Do you think C++ compilers are really doing character ->
>>> column# translations (with Tab translation) before
>>> outputting syntax errors?
>>
>> Yes, I do.
>
> Then that settles it, does it not?


:)

I don't get tired maintaining that handling all this should be in user  
code, not in the default generated code.
It's not hard to add, not everyone needs it, and in the face of syntax  
errors speed is not the primary concern anymore - so it's not a huge  
problem going back and doing the extra bit of computation to format an  
error message.

Another thing: How often do your recognizers communicate with other  
tools via text messages? (i.e. via printing line/col info so that the  
other tool has to parse your output)
Mine most often are compiled into the application that needs a parser,  
and thus I'm primarily interested in the actual character index into  
the text buffer, not the column it is displayed in. Might just be me,  
but I guess not many people are writing command line tools that get  
invoked and need to communicate line/col info that way.

However, I agree that ANTLR's error messages can be improved (in the  
sense of presentation).

cheers,
-k

P.S.: Did anyone else notice that in the time we've discussing this,  
everyone of us could've written the code and supplied to interested  
parties? ;)
-- 
Kay R?pke
http://classdump.org/







From Austin_Hastings at Yahoo.com  Wed Aug 13 18:06:49 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 13 Aug 2008 20:06:49 -0500
Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
 assumed to be present in AST rewrite
Message-ID: <48A38529.7040601@Yahoo.com>

Howdy,

I have a C-like grammar with this entry:

conditional_expr
    : logical_or ( '?' expression ':' conditional_expr )?
       -> ^( '?' logical_or expression? conditional_expr?)
    ;

I am using antlr v3.1. In this case, the generated code assumes that the 
rewrite-rule's '?' token is the same as the possibly-nonexistent '?' in 
the matching rule, and tries to dereference the "stream" that would 
contain that token, if it were present.

In the case where no conditional expression is present, the rewrite 
should collapse into ^( '?' logical_or )

I suspect that there's a better way to handle this particular rewrite 
scenario. I'd like to hear it.

At the same time, this is pretty clearly a bug: antlr is confusing two 
tokens that look the same, but one of which doesn't exist.

=Austin


From javafoust at gmail.com  Wed Aug 13 18:22:47 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 18:22:47 -0700
Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
	assumed to be present in AST rewrite
In-Reply-To: <48A38529.7040601@Yahoo.com>
References: <48A38529.7040601@Yahoo.com>
Message-ID: <001d01c8fdac$44713050$cd5390f0$@com>

Austin  wrote:
> At the same time, this is pretty clearly a bug: antlr is confusing two
> tokens that look the same, but one of which doesn't exist.

The way to do this is to create a synthetic token (called "imaginary", for
some reason), by adding a section to your grammar just after the "options":

tokens {
	T_TERCIARY = '?';
}

Then use that token in your tree output:

	-> ^(TERCIARY logical_or expression? conditional_expr?) ;

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Austin Hastings
> Sent: Wednesday, August 13, 2008 6:07 PM
> To: antlr-interest
> Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
> assumed to be present in AST rewrite
> 
> Howdy,
> 
> I have a C-like grammar with this entry:
> 
> conditional_expr
>     : logical_or ( '?' expression ':' conditional_expr )?
>        -> ^( '?' logical_or expression? conditional_expr?)
>     ;
> 
> I am using antlr v3.1. In this case, the generated code assumes that
> the
> rewrite-rule's '?' token is the same as the possibly-nonexistent '?' in
> the matching rule, and tries to dereference the "stream" that would
> contain that token, if it were present.
> 
> In the case where no conditional expression is present, the rewrite
> should collapse into ^( '?' logical_or )
> 
> I suspect that there's a better way to handle this particular rewrite
> scenario. I'd like to hear it.
> 
> At the same time, this is pretty clearly a bug: antlr is confusing two
> tokens that look the same, but one of which doesn't exist.
> 
> =Austin


From jmcgrew at gmail.com  Wed Aug 13 18:23:21 2008
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Wed, 13 Aug 2008 18:23:21 -0700
Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
	assumed to be present in AST rewrite
In-Reply-To: <48A38529.7040601@Yahoo.com>
References: <48A38529.7040601@Yahoo.com>
Message-ID: <407c840e0808131823n4635f1c7gad83297343d8c096@mail.gmail.com>

On Wed, Aug 13, 2008 at 6:06 PM, Austin Hastings
<Austin_Hastings at yahoo.com> wrote:
> Howdy,
>
> I have a C-like grammar with this entry:
>
> conditional_expr
>   : logical_or ( '?' expression ':' conditional_expr )?
>      -> ^( '?' logical_or expression? conditional_expr?)
>   ;
>
> I am using antlr v3.1. In this case, the generated code assumes that the
> rewrite-rule's '?' token is the same as the possibly-nonexistent '?' in the
> matching rule, and tries to dereference the "stream" that would contain that
> token, if it were present.
>
> In the case where no conditional expression is present, the rewrite should
> collapse into ^( '?' logical_or )
>
> I suspect that there's a better way to handle this particular rewrite
> scenario. I'd like to hear it.

Well, what I'd do is this:

conditional_expr
  : logical_or
    ( '?' expression ':' conditional_expr
      -> ^('?' logical_or expression conditional_expr)
    )?
  ;

But that's not quite the same - this way, a logical_or with no ternary
operator after it won't be rewritten at all, it'll just stay as
whatever tree was produced by the logical_or. So the question is, are
you really sure you want it to be rewritten as a '?' node, even when
the 'token' operator isn't present in the input?

If so, then try this:

conditional_expr
  : logical_or
    ( '?' expression ':' conditional_expr
      -> ^('?' logical_or expression conditional_expr)
    | /* empty */
      -> ^('?' logical_or)
    )
  ;

This time, Antlr shouldn't be confused by the '?' token in the second
rewrite, since there's no '?' token to the left of the second arrow.

Jesse

From jhurstus at gmail.com  Wed Aug 13 19:11:10 2008
From: jhurstus at gmail.com (Joey Hurst)
Date: Wed, 13 Aug 2008 19:11:10 -0700
Subject: [antlr-interest] Unnecessary Mac meta-files in 3.1 distribution
Message-ID: <eeed9d0b0808131911p3ffcbf66u6333159912b06c95@mail.gmail.com>

It looks like a number of unneeded Mac OSX meta files found there way
into the 3.1 distribution.  They should probably be pruned from the
repo and 3.1 distribution.  A list of these files can be found below.

-Joey

antlr-3.1/._CHANGES.txt
antlr-3.1/._README.txt
antlr-3.1/lib/._stringtemplate-3.2.jar
antlr-3.1/runtime/._JavaScript
antlr-3.1/runtime/JavaScript/._ChangeLog
antlr-3.1/runtime/JavaScript/._build
antlr-3.1/runtime/JavaScript/._lib
antlr-3.1/runtime/JavaScript/._src
antlr-3.1/runtime/JavaScript/._third
antlr-3.1/runtime/JavaScript/build/._README
antlr-3.1/runtime/JavaScript/build/._antlr3.properties
antlr-3.1/runtime/JavaScript/build/._build.xml
antlr-3.1/runtime/JavaScript/build/._license.txt
antlr-3.1/runtime/JavaScript/src/._org
antlr-3.1/runtime/JavaScript/src/org/._antlr
antlr-3.1/runtime/JavaScript/src/org/._antlr.js
antlr-3.1/runtime/JavaScript/src/org/antlr/._runtime
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._ANTLRFileStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._ANTLRStringStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._BaseRecognizer.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._BitSet.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._CharStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._CommonToken.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._CommonTokenStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._DFA.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._EarlyExitException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._FailedPredicateException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._IndexOutOfBoundsExceptions.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Lexer.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MismatchedNotSetException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MismatchedRangeExceptions.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MismatchedSetException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MismatchedTokenException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MismatchedTreeNodeException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._MissingTokenException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._NoViableAltException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Parser.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._ParserRuleReturnScope.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._RecognitionException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._RecognizerSharedState.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Token.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._TokenRewriteStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._UnwantedTokenException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._tree
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._BaseTree.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._BaseTreeAdaptor.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._CommonErrorNode.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._CommonTree.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._CommonTreeAdaptor.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._CommonTreeNodeStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteCardinalityException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteEarlyExitException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteEmptyStreamException.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteRuleElementStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteRuleNodeStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteRuleSubtreeStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._RewriteRuleTokenStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._Tree.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._TreeNodeStream.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._TreeParser.js
antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._TreeRuleReturnScope.js
antlr-3.1/runtime/JavaScript/third/._antcontrib.properties
antlr-3.1/src/org/antlr/codegen/._JavaScriptTarget.java
antlr-3.1/src/org/antlr/codegen/templates/._ANTLRCore.sti
antlr-3.1/src/org/antlr/codegen/templates/._JavaScript
antlr-3.1/src/org/antlr/codegen/templates/Java/._AST.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTDbg.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTParser.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTTreeParser.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._Dbg.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._Java.stg
antlr-3.1/src/org/antlr/codegen/templates/Java/._ST.stg
antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._AST.stg
antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._ASTParser.stg
antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._ASTTreeParser.stg
antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._JavaScript.stg
antlr-3.1/src/org/antlr/tool/._antlr.g
antlr-3.1/src/org/antlr/tool/templates/messages/languages/._en.stg

From jhurstus at gmail.com  Wed Aug 13 19:36:51 2008
From: jhurstus at gmail.com (Joey Hurst)
Date: Wed, 13 Aug 2008 19:36:51 -0700
Subject: [antlr-interest] javascript lexer grammar compilation failing
Message-ID: <eeed9d0b0808131936v1ca7a6fx1382f1ce9ac9e545@mail.gmail.com>

The lexer StringTemplate function gained an extra parameter
(superClass) between 3.1b2 and 3.1, but unfortunately didn't make it
into the JavaScript template file.  This means that the compilation of
any lexer or combined grammars will fail when the option
language=JavaScript is on.  I have a fix and will get it into the
depot asap.

-Joey

From iank at bearcave.com  Wed Aug 13 20:04:08 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Wed, 13 Aug 2008 20:04:08 -0700
Subject: [antlr-interest] ANTLR Kudos...
Message-ID: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>

  I'm not very good at suffering in silence and the transition between ANTLR
2.X and ANTLR 3.X has been a painful one.  I have had to more or less
rewrite all of the Java code associated with my grammar rules.  But along
with the whining it is only reasonable to also talk about the good things.

  The ANTLR backtracking parser is really great.  At least in terms of its
accepting grammars.  The back tracking parser gives you the freedom to use a
grammar would be difficult in LL(2) (ANTLR 2.X) or even LL(*).  As a result,
the grammar is more readable (less left factoring) and the designer has much
more freedom to design a language as they want, rather than what can be
supported by the parser generator.  Going to ANTLR 3.X has been painful, but
in the end, I have to say it is worth it so far.

  I do have a couple of worries.  One is performance.  In my case, unless
performance is really terrible should not be too be a problem since the
language I'm working on is a graph database query language and the queries
are never going to be that big compared to, say, Java or C++ code.  Another
worry I have is about the backtracking.  I admit that I have not RTFM (e.g.,
the last chapters of The Book that deal with this topic).  My hope is that
the match tries to match the longest sequence first, so that a match is not
missed.

   In summary, I send my thanks to Terance and Co. for the great work on
ANTLR 3.  It's a tool that has allowed me more freedom than I've ever had
before with a parser generator.

  Ian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/a4ad17ce/attachment.html 

From Larry.Jones at aspentech.com  Wed Aug 13 20:10:15 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Wed, 13 Aug 2008 22:10:15 -0500
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FE9@houmail3.corp.aspentech.com>

I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
parser generated in C#. I think I have followed the steps described in
the wiki. I:
- Built a lexer / parser using the -debug option. (I verified that the
generated parser inherits DebugParser.)
- Built an executable.
- Verified that it accepts command line input.
- Started in from a cmd window. It "hangs" waiting for console input.
- Started ANTLRWorks in a separate window.
- Opened the grammar used to generate my parser.
- Invoked Debugger | Remote Debug.
- When ANTLRWorks presents the connection dialog, I accepted the
defaults.
 
After a few minutes, ANTLRWorks displays an error message that it
"Cannot launch the debugger" because of a "Time-out waiting to connect
to the remote parser." The window from which I launched ANTLRWorks
contains a number of "java.net.ConnectException: Connection refused:
connect" messages.
 
What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
remote C# parser?
 
Thanks.
 
--

Lawrence Allan Jones
Senior Developer / Technical Advisor
Aspen Technology, Inc.
2500 CityWest Blvd. Suite 1500
Houston, Texas 77042
USA
281-504-3324 (work)
281-504-3395 (fax)
larry.jones at aspentech.com
www.aspentech.com <http://www.aspentech.com/> 

 
 	
 

This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/66acf1f9/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 2078 bytes
Desc: email_2_03.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/66acf1f9/attachment.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 200 bytes
Desc: email_2_04.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080813/66acf1f9/attachment-0001.gif 

From gerald at certiv.net  Wed Aug 13 23:14:31 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 13 Aug 2008 23:14:31 -0700
Subject: [antlr-interest] AntlrDT - Bad error handling? Bad parsing?
In-Reply-To: <48A3762B.7020308@Yahoo.com>
References: <48A3762B.7020308@Yahoo.com>
Message-ID: <200808140616.m7E6GWqC022565@zinc.newtechlaw.com>

Bug.  Missed identifying an Antlr error state.  Fix will be in 
AntlrDT 0.5.0 final.

At 05:02 PM 8/13/2008, Austin Hastings wrote:
>I have a problem in a grammar. Under AntlrDT, eclipse reports:
>
>Errors (1 item):
>--> Unknown error message 
>[type=org.antlr.tool.NonRegularDecisionMessage]   --> hlasm.g3 --> 
>path/to/src --> line 2 --> DLTK Problem


From javafoust at gmail.com  Wed Aug 13 23:47:36 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 13 Aug 2008 23:47:36 -0700
Subject: [antlr-interest] Possible problem with lists after upgrade
	to	3.1
In-Reply-To: <605A2C1A-4251-4DB2-B589-43EC7051F843@cs.usfca.edu>
References: <7aa837f80808121810pf245397n10a41b7ec8912e9c@mail.gmail.com>	<7E4A7724-90B1-4AA9-8CA5-FDBE264804D8@cs.usfca.edu>
	<605A2C1A-4251-4DB2-B589-43EC7051F843@cs.usfca.edu>
Message-ID: <001801c8fdd9$a4f83680$eee8a380$@com>

Ter,

Did you only fix it for the += operator and not =  ?

Using today's build (listed below), there is still a compatibility issue
using one label for two different rules. Is this a different issue?

	expr : (t=a | t=b) c[$t.attr]?;

The resulting Java code won't compile, since "t" is defined as the last type
encountered, in this case "b":

        MyGrammar.b_return attr = null;

	later,
		case 1: ...
			attr=a();		// error: Type Mismatch
			...
		case 2: ...
			attr=b();		// compiles
			...
Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, August 13, 2008 10:07 AM
> To: Grzegorz Cieslewski
> Cc: antlr ANTLR
> Subject: Re: [antlr-interest] Possible problem with lists after upgrade
> to 3.1
> 
> Grab new antlr daily build:
> 
> antlr-2008-08-13.10.tar.gz
> 
> Fixed.
> 
> Ter


From francis.andre.kampbell at orange.fr  Thu Aug 14 02:21:56 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Thu, 14 Aug 2008 11:21:56 +0200
Subject: [antlr-interest] ANTLR 3.1: build.xml failed with duplicate classes
	org.antlr.tool.ANTLRLexer
Message-ID: <48A3F934.8070302@orange.fr>

Hi

Using ANTLR 3.1, I am rebuilding ANTLR from the sources and got this 
exception
 [myjavac] C:\Program Files\ANTLR\antlr-3.1\codegen\ANTLRLexer.java:61: 
duplicate class: org.antlr.
tool.ANTLRLexer
[myjavac] public class ANTLRLexer extends antlr.CharScanner implements 
ANTLRTokenTypes, TokenStrea
m

Any idea where the problem comes from? or how to fix this?
TIA
Cheers

FA


1/ Here the java -version, ant -version and ant -v log
C:\Program Files\ANTLR\antlr-3.1>java -version
java version "1.6.0_05"
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing)

C:\Program Files\ANTLR\antlr-3.1>ant -version
Apache Ant version 1.7.0 compiled on December 13 2006


2/Here the clean
C:\Program Files\ANTLR\antlr-3.1>ant clean
Buildfile: build.xml

clean:
   [delete] Deleting directory C:\Program Files\ANTLR\antlr-3.1\build
   [delete] Deleting directory C:\Program Files\ANTLR\antlr-3.1\codegen

BUILD SUCCESSFUL
Total time: 0 seconds
C:\Program Files\ANTLR\antlr-3.1>ant
Buildfile: build.xml

generator-prepare:
    [mkdir] Created dir: C:\Program Files\ANTLR\antlr-3.1\codegen
     [copy] Copying 6 files to C:\Program Files\ANTLR\antlr-3.1\codegen

generator:
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:920: 
warning:nongreedy block may exit i
ncorrectly due
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:920:       
to limitations of linear app
roximate lookahead (first k-1 sets
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:920:       
in lookahead not singleton).

    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:1098: 
warning:nongreedy block may exit
incorrectly due
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:1098:      
to limitations of linear app
roximate lookahead (first k-1 sets
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\antlr.g:1098:      
in lookahead not singleton).

    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] C:\Program 
Files\ANTLR\antlr-3.1\codegen\assign.types.g:159:18: warning:Rule 
'optionsSpe
c' returns a value
    [antlr] C:\Program 
Files\ANTLR\antlr-3.1\codegen\assign.types.g:239:13: warning:Rule 
'optionsSpe
c' returns a value
    [antlr] C:\Program 
Files\ANTLR\antlr-3.1\codegen\assign.types.g:262:14: warning:Rule 
'optionsSpe
c' returns a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\buildnfa.g:297:19: 
warning:Rule 'atom' returns
a value
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\buildnfa.g:297:32: 
warning:Rule 'atom' returns
a value
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\buildnfa.g:309:20: 
warning:Rule 'block' returns
 a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] C:\Program Files\ANTLR\antlr-3.1\codegen\define.g:252:24: 
warning:Rule 'modifier' return
s a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005

compile-rt:
    [mkdir] Created dir: C:\Program Files\ANTLR\antlr-3.1\build\rtclasses
  [myjavac] Compiling 74 source files to C:\Program 
Files\ANTLR\antlr-3.1\build\rtclasses
  [myjavac] Note: Some input files use unchecked or unsafe operations.
  [myjavac] Note: Recompile with -Xlint:unchecked for details.

compile:
    [mkdir] Created dir: C:\Program Files\ANTLR\antlr-3.1\build\classes
  [myjavac] Compiling 160 source files to C:\Program 
Files\ANTLR\antlr-3.1\build\classes
  [myjavac] C:\Program Files\ANTLR\antlr-3.1\codegen\ANTLRLexer.java:61: 
duplicate class: org.antlr.
tool.ANTLRLexer
  [myjavac] public class ANTLRLexer extends antlr.CharScanner implements 
ANTLRTokenTypes, TokenStrea
m
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\ANTLRParser.java:72: duplicate class: 
org.antlr
.tool.ANTLRParser
  [myjavac] public class ANTLRParser extends antlr.LLkParser       
implements ANTLRTokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\ANTLRTokenTypes.java:37: duplicate class: 
org.a
ntlr.tool.ANTLRTokenTypes
  [myjavac] public interface ANTLRTokenTypes {
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\ANTLRTreePrinter.java:52: duplicate class: 
org.
antlr.tool.ANTLRTreePrinter
  [myjavac] public class ANTLRTreePrinter extends antlr.TreeParser       
implements ANTLRTreePrinter
TokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\ANTLRTreePrinterTokenTypes.java:33: 
duplicate c
lass: org.antlr.tool.ANTLRTreePrinterTokenTypes
  [myjavac] public interface ANTLRTreePrinterTokenTypes {
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\AssignTokenTypesWalker.java:98: duplicate 
class
: org.antlr.tool.AssignTokenTypesWalker
  [myjavac] public class AssignTokenTypesWalker extends 
antlr.TreeParser       implements AssignToke
nTypesWalkerTokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\AssignTokenTypesWalkerTokenTypes.java:36: 
dupli
cate class: org.antlr.tool.AssignTokenTypesWalkerTokenTypes
  [myjavac] public interface AssignTokenTypesWalkerTokenTypes {
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\CodeGenTreeWalker.java:59: duplicate 
class: org
.antlr.codegen.CodeGenTreeWalker
  [myjavac] public class CodeGenTreeWalker extends 
antlr.TreeParser       implements CodeGenTreeWalk
erTokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\CodeGenTreeWalkerTokenTypes.java:39: duplicate
class: org.antlr.codegen.CodeGenTreeWalkerTokenTypes
  [myjavac] public interface CodeGenTreeWalkerTokenTypes {
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\DefineGrammarItemsWalker.java:47: 
duplicate cla
ss: org.antlr.tool.DefineGrammarItemsWalker
  [myjavac] public class DefineGrammarItemsWalker extends 
antlr.TreeParser       implements DefineGr
ammarItemsWalkerTokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\DefineGrammarItemsWalkerTokenTypes.java:34: 
dup
licate class: org.antlr.tool.DefineGrammarItemsWalkerTokenTypes
  [myjavac] public interface DefineGrammarItemsWalkerTokenTypes {
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\TreeToNFAConverter.java:49: duplicate 
class: or
g.antlr.tool.TreeToNFAConverter
  [myjavac] public class TreeToNFAConverter extends 
antlr.TreeParser       implements TreeToNFAConve
rterTokenTypes
  [myjavac]        ^
  [myjavac] C:\Program 
Files\ANTLR\antlr-3.1\codegen\TreeToNFAConverterTokenTypes.java:35: 
duplicate
 class: org.antlr.tool.TreeToNFAConverterTokenTypes
  [myjavac] public interface TreeToNFAConverterTokenTypes {
  [myjavac]        ^
  [myjavac] Note: Some input files use unchecked or unsafe operations.
  [myjavac] Note: Recompile with -Xlint:unchecked for details.
  [myjavac] 13 errors

BUILD FAILED
C:\Program Files\ANTLR\antlr-3.1\build.xml:135: Compile failed; see the 
compiler error output for de
tails.

Total time: 11 seconds
C:\Program Files\ANTLR\antlr-3.1>


From jaluber at gmx.de  Thu Aug 14 02:55:40 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 14 Aug 2008 11:55:40 +0200
Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
 assumed to be present in AST rewrite
In-Reply-To: <001d01c8fdac$44713050$cd5390f0$@com>
References: <48A38529.7040601@Yahoo.com> <001d01c8fdac$44713050$cd5390f0$@com>
Message-ID: <48A4011C.6070209@gmx.de>

Foust schrieb:
> Austin  wrote:
>> At the same time, this is pretty clearly a bug: antlr is confusing two
>> tokens that look the same, but one of which doesn't exist.
> 
> The way to do this is to create a synthetic token (called "imaginary", for
> some reason), by adding a section to your grammar just after the "options":
> 
> tokens {
> 	T_TERCIARY = '?';
> }
> 
> Then use that token in your tree output:
> 
> 	-> ^(TERCIARY logical_or expression? conditional_expr?) ;
> 
> Brent

An imaginary token is defined like

tokens {
IMAGINARY;
}

Note that no assignment to a particular input string happens - that is 
the reason why such tokens are imaginary tokens.

> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Austin Hastings
>> Sent: Wednesday, August 13, 2008 6:07 PM
>> To: antlr-interest
>> Subject: [antlr-interest] BUG: Constant (literal) token is incorrectly
>> assumed to be present in AST rewrite
>>
>> Howdy,
>>
>> I have a C-like grammar with this entry:
>>
>> conditional_expr
>>     : logical_or ( '?' expression ':' conditional_expr )?
>>        -> ^( '?' logical_or expression? conditional_expr?)
>>     ;
>>
>> I am using antlr v3.1. In this case, the generated code assumes that
>> the
>> rewrite-rule's '?' token is the same as the possibly-nonexistent '?' in
>> the matching rule, and tries to dereference the "stream" that would
>> contain that token, if it were present.
>>
>> In the case where no conditional expression is present, the rewrite
>> should collapse into ^( '?' logical_or )
>>
>> I suspect that there's a better way to handle this particular rewrite
>> scenario. I'd like to hear it.
>>
>> At the same time, this is pretty clearly a bug: antlr is confusing two
>> tokens that look the same, but one of which doesn't exist.
>>
>> =Austin
> 


From r_reitzi at cs.uni-kl.de  Thu Aug 14 03:58:25 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Thu, 14 Aug 2008 12:58:25 +0200
Subject: [antlr-interest] BUG: Constant (literal) token is
	incorrectly	assumed to be present in AST rewrite
In-Reply-To: <48A38529.7040601@Yahoo.com>
References: <48A38529.7040601@Yahoo.com>
Message-ID: <20080814125825.120396wwaxg2yxg0@horde.verrech.net>

Hi Austin!

Thou shalt not use string literals in parser rules! 't'll lead thee to  
chaos and madness!

Introduce Tokens for that. The other guys told you how (lexer token  
for the rule '?', imaginary token for the tree one)

Reagards

Raphael

"Austin Hastings" <Austin_Hastings at Yahoo.com> wrote (Thu Aug 14  
03:06:49 2008):

> Howdy,
>
> I have a C-like grammar with this entry:
>
> conditional_expr
>    : logical_or ( '?' expression ':' conditional_expr )?
>       -> ^( '?' logical_or expression? conditional_expr?)
>    ;
>
> I am using antlr v3.1. In this case, the generated code assumes that  
> the rewrite-rule's '?' token is the same as the possibly-nonexistent  
> '?' in the matching rule, and tries to dereference the "stream" that  
> would contain that token, if it were present.
>
> In the case where no conditional expression is present, the rewrite  
> should collapse into ^( '?' logical_or )
>
> I suspect that there's a better way to handle this particular  
> rewrite scenario. I'd like to hear it.
>
> At the same time, this is pretty clearly a bug: antlr is confusing  
> two tokens that look the same, but one of which doesn't exist.
>
> =Austin
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/7acfffbb/attachment.bin 

From o.b.fischer at gmx.de  Thu Aug 14 00:46:03 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Thu, 14 Aug 2008 09:46:03 +0200
Subject: [antlr-interest] Expr.text null?
In-Reply-To: <000701c8fcca$17bec230$473c4690$@com>
References: <000701c8fcca$17bec230$473c4690$@com>
Message-ID: <48A3E2BB.4040402@gmx.de>

Hello,

is SOME_TOKEN a virtual token or a real one from the token stream? If 
not, may you should initialise it from a real token. Did you have a look 
at http://www.antlr.org/wiki/display/ANTLR3/Tree+construction?

Bye

Oliver

Foust schrieb:
> Does it make sense that a matched sub-rule returns null for its text 
> attribute?
> 
>  
> 
> That is, the following rule matches the input AST just fine.
> 
>  
> 
> tree grammar;
> 
> expr : a? b;
> 
>  
> 
> a : ^(SOME_TOKEN someargs)
> 
> b: ^(etc?)


-- 
Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
Tel. +49 30 44793251, Mobil: +49 178 7903538
Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net


From jaluber at gmx.de  Thu Aug 14 04:59:36 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 14 Aug 2008 13:59:36 +0200
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <690A62A322DBE24FAD5208C158E5DF2E013A6FE9@houmail3.corp.aspentech.com>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FE9@houmail3.corp.aspentech.com>
Message-ID: <48A41E28.3040002@gmx.de>

Jones, Larry schrieb:
> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a 
> parser generated in C#. I think I have followed the steps described in 
> the wiki. I:
> - Built a lexer / parser using the -debug option. (I verified that the 
> generated parser inherits DebugParser.)
> - Built an executable.
> - Verified that it accepts command line input.
> - Started in from a cmd window. It "hangs" waiting for console input.
> - Started ANTLRWorks in a separate window.
> - Opened the grammar used to generate my parser.
> - Invoked Debugger | Remote Debug.
> - When ANTLRWorks presents the connection dialog, I accepted the defaults.
>  
> After a few minutes, ANTLRWorks displays an error message that it 
> "Cannot launch the debugger" because of a "Time-out waiting to connect 
> to the remote parser." The window from which I launched ANTLRWorks 
> contains a number of "java.net.ConnectException: Connection refused: 
> connect" messages.
>  
> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a 
> remote C# parser?
>  
> Thanks.

Does ANTLRworks demand the port 49100 instead 49153? Then the issue is 
that somehow the port change didn't make into the distribution. Ter has 
to change the defalut port from 0xC001 to 0xBFCC, as well all the 
targets. The workaround is to change the port manually, until 3.1.1, 
that is.

Johannes
>  
> 
> *--*
> 
> *Lawrence Allan Jones*
> *Senior Developer / Technical Advisor*
> Aspen Technology, Inc.
> 2500 CityWest Blvd. Suite 1500
> Houston, Texas 77042
> USA
> 281-504-3324 (work)
> 281-504-3395 (fax)
> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
> www.aspentech.com <http://www.aspentech.com/>
> 
> 	
> 
>  
> 
> This e-mail and any attachments are intended only for use by the 
> addressee(s) named herein and may contain legally privileged and/or 
> confidential information. If you are not the intended recipient of this 
> e-mail, you are hereby notified any dissemination, distribution or 
> copying of this email, and any attachments thereto, is strictly 
> prohibited. If you receive this email in error please immediately notify 
> the sender and permanently delete the original copy and any copy of any 
> e-mail, and any printout thereof.


From kroepke at classdump.org  Thu Aug 14 05:14:20 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Thu, 14 Aug 2008 14:14:20 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <48A34C56.10000@gmx.de>
References: <48A2EF66.7030201@gmx.de> <48A34C56.10000@gmx.de>
Message-ID: <3A59A1E4-5414-4496-9022-808513D5FD34@classdump.org>

Hi!

(Ter, question at the bottom)

On Aug 13, 2008, at 11:04 PM, Oliver B. Fischer wrote:

> But is there a way to get access to the tree node itself? I tried to  
> use
> the ".tree" attribute, but it leads to an compile error, since .tree
> isn't translated to ".getTree()".
>
> So, what can I do to get the tree node?

Now that I'm actually awake, I remembered something.

> Oliver B. Fischer schrieb:
> | Dear all,
> |
> | I would like to use labels in the actions of my tree parser to  
> have an
> | alternative way to access the tree nodes. Unfortunately ANTLR  
> reports an
> | error I can't understand.
> |
> | Here is my action definition:
> |
> |
> | term returns [DataType rt]
> |   : factor { $rt = $factor.rt; }
> |     -> template(f={$factor.st})"<f>"
> |   | ^(ASTERISK t1=term t2=term)
> |   | ^(SLASH t1=term t2=term)
> |   | ^(AND t=term term)
> |     { System.out.println($t); }
> |   ;
> |


You can actually get the root tree node for a subrule reference, but  
your tree parser must output an AST.

The following grammars illustrate it (tested with 3.1):

grammar Foo;

options {
	output=AST;
}

FOO	:	'FOO';
BAR	:	'BAR';
BAZ	:	'BAZ';
WS	:	(' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
	;

rule:	FOO BAR BAZ -> ^(FOO BAR BAZ);

tree grammar FooWalker;

options {
	tokenVocab=Foo;
	ASTLabelType=CommonTree;
	output=AST;
}

walk:	rule {System.out.println($rule.tree.toStringTree());}
	;

rule:
	^(FOO BAR BAZ)
	;

The interesting lines in FooWalker.java are:

             adaptor.addChild(root_0, rule1.getTree());
             System.out.println((rule1!=null? 
((CommonTree)rule1.tree):null).toStringTree());

If the tree grammar is not generating ASTs, then there's apparently no  
way to get .tree using action syntax. I'm not sure if that's on  
purpose, it seems that it is a useful thing to get the tree at that  
point (without doing too much work). After looking the runtime code,  
it seems that we actually return the tree in the call to match(), but  
ignore the return value. So it _appears_ that you could get the tree  
at no extra runtime cost (since we do it anyway).

OTOH, I think .start and .tree should always be the same node (unless  
you have tree rewrite rules, of course), but I might overlook  
something here. Still not enough coffee to recover from yesterday :)
But if you have output=AST and no rewrite rules, the added overhead of  
building a copy of the input tree wouldn't make sense, either. So the  
real question is, why don't we grant access to .tree? At most it could  
be a leaf node, but that does no harm. Ter?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From g.vandeglind at beinformed.nl  Thu Aug 14 05:57:53 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Thu, 14 Aug 2008 14:57:53 +0200
Subject: [antlr-interest] ArrayIndexOutOfBoundsException in ANTLR 3.0
Message-ID: <07DC8905ABA90249A64135D427E2F70F03274FDA9D@apbiex01.beinformed.nl>

Hi all,

I have a grammar that contains the following rule alternatives:

      |     (DATE_FUNC LPAREN formula COMMA formula COMMA)=>
            DATE_FUNC
                  LPAREN
                        f1=formula COMMA
                        f2=formula COMMA
                        f3=formula
                  RPAREN
            -> ^(DATE_FUNC $f1 $f2 $f3)
      |     DATE_FUNC
                  LPAREN
                        s1=stringAtom COMMA
                        s2=STRING_LITERAL
                  RPAREN
            -> ^(DATE_FUNC $s1 $s2)

The first alternative is a date function with 3 formula arguments.
The second has a stringAtom and STRING_LITERAL argument.

Note the syntactic predicate in the first alternative.
This predicate is needed because formula and stringAtom are recursive and have similar alternatives.
For example brackets can be obtained via both formula and stringAtom.

If I try to parse an invalid expression, e.g. 'DATE_FUNC()' then I get the following stacktrace:

                  java.lang.ArrayIndexOutOfBoundsException: -1
                  at org.antlr.runtime.DFA.predict(DFA.java:44)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.dateAtom(BIExpressionParser.java:5548)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.synpred5_fragment(BIExpressionParser.java:6978)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.synpred5(BIExpressionParser.java:7157)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.equalityExpression(BIExpressionParser.java:2048)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.conditionalNotExpression(BIExpressionParser.java:1307)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.conditionalAndExpression(BIExpressionParser.java:1177)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.conditionalOrExpression(BIExpressionParser.java:1083)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.condition(BIExpressionParser.java:1030)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.conditionEOF(BIExpressionParser.java:980)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.synpred2_fragment(BIExpressionParser.java:6921)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.synpred2(BIExpressionParser.java:7241)
                  at nl.beinformed.bi.common.expressions.parser.BIExpressionParser.expression(BIExpressionParser.java:771)
                  at nl.beinformed.bi.common.expressions.ExpressionParser.parseExpression(ExpressionParser.java:57)

I hoped to get a RecognitionException, but I get an ArrayIndexOutOfBoundsException.

Regards, Gerard

Btw: I use ANTLR 3.0.1 and generate Java code from my grammar.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/9a7b7ab3/attachment-0001.html 

From Vitaliy at dbsophic.com  Thu Aug 14 07:18:23 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Thu, 14 Aug 2008 17:18:23 +0300
Subject: [antlr-interest] Preserving comments
In-Reply-To: <6edc6c380808130933i63ed7d07k14a96eec72091627@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<6edc6c380808130933i63ed7d07k14a96eec72091627@mail.gmail.com>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D82B4@ex01.dbsophicHQ.com>

Hi Brent,



Unfortunately the actions must be context sensitive.

What's the best way to tackle this practically?



Thanks so much for your help!



Vitaliy



From: Brent Yates [mailto:brent.yates at gmail.com]
Sent: Wednesday, August 13, 2008 18:34
To: Vitaliy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Preserving comments



Vitaliy,

Are the comment actions specific to the context they are detected in?  Is so, then you may have issues (beyond parsing) in associating the comments with the appropriate language structures.  There are many academic papers which discuss this difficult problem.

On the other hand, if the comment actions are not context sensitive, then you should be able to add the action to the comment rule and still mark the comment as hidden so that it doesn't mess up your other rules.

Brent



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3353 (20080813) __________



The message was checked by ESET NOD32 Antivirus.



http://www.eset.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/6ac221d5/attachment.html 

From kroepke at classdump.org  Thu Aug 14 06:33:40 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Thu, 14 Aug 2008 15:33:40 +0200
Subject: [antlr-interest] ArrayIndexOutOfBoundsException in ANTLR 3.0
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03274FDA9D@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03274FDA9D@apbiex01.beinformed.nl>
Message-ID: <35A3487A-7A02-4BA7-B7BD-ED3766FEA4F9@classdump.org>

Hi!

On Aug 14, 2008, at 2:57 PM, Gerard van de Glind wrote:

> If I try to parse an invalid expression, e.g. 'DATE_FUNC()' then I  
> get the following stacktrace:
>
>                  java.lang.ArrayIndexOutOfBoundsException: -1
>                  at org.antlr.runtime.DFA.predict(DFA.java:44)


Could you try the grammar again with the recently released 3.1? The  
bug database shows a couple of DFA related fixes (although quite a  
while ago) which might still be in 3.0.1.
If it's still happening, could you provide the DFA for this decision?  
You can generate it with running:

java org.antlr.Tool -dfa YourGrammar.g

That will produce a lot of .dot files in that directory. They are  
numbered for each decision point, you can get the number in question  
from BIExpressionParser.java:5548 (note the dfaXXX.predict() line).  
The files will be name "GrammarName".dec-XXX.dot.
That will help to tell what's going wrong there.

 From a glance at DFA.java:44 it appears to be related to the  
predicate. That DFA should have a special state but it's missing.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From ramanand_mandayam at yahoo.com  Thu Aug 14 07:12:09 2008
From: ramanand_mandayam at yahoo.com (Ramanand Mandayam)
Date: Thu, 14 Aug 2008 07:12:09 -0700 (PDT)
Subject: [antlr-interest] Tree re-write does not create "new" tree nodes in
	JAVA target.
Message-ID: <692599.67631.qm@web33506.mail.mud.yahoo.com>

I am using tree grammar T1 to process my AST
and possibly rewrite by adding a few tree nodes.
I then use grammar T2 to traverse this modified 
output from T1. 

In the examples below, even though the semantic predicate
in T1 is satisfied and the JAVA code does appear
to execute the API calls to add new nodes, 
the tree walker in T2 never sees the new node
since I only ever see the output "No change".

In T2, if I remove the rule alternative that 
does not contain the new/imaginary node then
T2 fails with a mismatched node error.

I am only at an advanced beginner level in JAVA 
so I may be missing something that is required
to make the tree persistent across grammar/tree
walk invocations.

Cheers

Ramanand


/* START TREE GRAMMAR */
tree grammar T1;
option {
    tokenVocab=myParser; ASTLabelType = myTreeNode; output=AST;
    rewrite=true;
}
tokens { IMAGINARY_TOKEN; }

A
@init{ boolean addNode = false; }
:  B
   { addNode = <method-returning-boolean>; }
   ->{addNode}?^(IMAGINARY_TOKEN B);
/* END GRAMMAR T1 */

/* START GRAMMAR T2 */
tree grammar T2;
option {
    tokenVocab=T1; ASTLabelType = myTreeNode; output=template;
}
A:  
    ^(IMAGINARY_TOKEN B) -> {%{"Node Added"}}  // Never executed.
  | B {%{"No change"}}
/* END GRAMMAR T2 */

I am using ANTLR v3.1.


      

From mail at martin-probst.com  Thu Aug 14 08:10:41 2008
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 14 Aug 2008 17:10:41 +0200
Subject: [antlr-interest] Preserving comments
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D82B4@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<6edc6c380808130933i63ed7d07k14a96eec72091627@mail.gmail.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D82B4@ex01.dbsophicHQ.com>
Message-ID: <370F5290-9425-4418-A2F8-4A56626A37FE@martin-probst.com>

Hi,

> Unfortunately the actions must be context sensitive.
>
> What's the best way to tackle this practically?

It's possible to change the TokenStream implementation to link comment  
tokens to either the previous or the next token, whatever suits you  
best. For that, you'll also need a custom token class. You can then  
after parsing walk the AST with a plain old Java program, and do  
whatever you need to do.

I've used this technique in my ANTLR parser/pretty printer, see here:
http://code.google.com/p/xqpretty/source/browse/trunk/src/java/com/martinprobst/xqpretty/LazyTokenStream.java

and the 'setHiddenPredecessor' in XQToken.java.

Regards,
Martin

From Larry.Jones at aspentech.com  Thu Aug 14 08:21:37 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Thu, 14 Aug 2008 10:21:37 -0500
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <48A41E28.3040002@gmx.de>
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FEA@houmail3.corp.aspentech.com>

Johannes,

Thanks for the information.

I confirmed that the default of ANTLWorks 1.2b5 is still 49100; however,
when I manually changed it to 49153, the behavior of ANTLWorks remained
the same.

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Thursday, August 14, 2008 7:00 AM
To: Jones, Larry
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
Process


Jones, Larry schrieb:
> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
> parser generated in C#. I think I have followed the steps described in

> the wiki. I:
> - Built a lexer / parser using the -debug option. (I verified that the

> generated parser inherits DebugParser.)
> - Built an executable.
> - Verified that it accepts command line input.
> - Started in from a cmd window. It "hangs" waiting for console input.
> - Started ANTLRWorks in a separate window.
> - Opened the grammar used to generate my parser.
> - Invoked Debugger | Remote Debug.
> - When ANTLRWorks presents the connection dialog, I accepted the
defaults.
>  
> After a few minutes, ANTLRWorks displays an error message that it
> "Cannot launch the debugger" because of a "Time-out waiting to connect

> to the remote parser." The window from which I launched ANTLRWorks 
> contains a number of "java.net.ConnectException: Connection refused: 
> connect" messages.
>  
> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
> remote C# parser?
>  
> Thanks.

Does ANTLRworks demand the port 49100 instead 49153? Then the issue is 
that somehow the port change didn't make into the distribution. Ter has 
to change the defalut port from 0xC001 to 0xBFCC, as well all the 
targets. The workaround is to change the port manually, until 3.1.1, 
that is.

Johannes
>  
> 
> *--*
> 
> *Lawrence Allan Jones*
> *Senior Developer / Technical Advisor*
> Aspen Technology, Inc.
> 2500 CityWest Blvd. Suite 1500
> Houston, Texas 77042
> USA
> 281-504-3324 (work)
> 281-504-3395 (fax)
> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
> www.aspentech.com <http://www.aspentech.com/>
> 
> 	
> 
>  
> 
> This e-mail and any attachments are intended only for use by the
> addressee(s) named herein and may contain legally privileged and/or 
> confidential information. If you are not the intended recipient of
this 
> e-mail, you are hereby notified any dissemination, distribution or 
> copying of this email, and any attachments thereto, is strictly 
> prohibited. If you receive this email in error please immediately
notify 
> the sender and permanently delete the original copy and any copy of
any 
> e-mail, and any printout thereof.


This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.

From r.a.niemeijer at tue.nl  Thu Aug 14 08:39:15 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Thu, 14 Aug 2008 17:39:15 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
In-Reply-To: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
Message-ID: <A8F615EE446C9B4D837FB67447C0D99702582B13@EXCHANGE3.campus.tue.nl>

The FOLLOW_ variables do indeed seem to contain all the data I need. I'm going to have a look at it tomorrow to see if I can convert to bitset data to something more useful to me.

-----Original Message-----
From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr] 
Sent: woensdag 13 augustus 2008 19:27
To: Thomas Brandon; Niemeijer, R.A.
Cc: antlr-interest at antlr.org
Subject: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?

oops, when making such attention mistakes I feel like hiding under the table :) they are LL of course

Mr. Niemeijer, could you please keep me informed if you reach a satisfactory solution with the "FOLLOW_" hint? I am interested too in that topic.

Stanislas.



----- Message d'origine ----
De : Thomas Brandon <tbrandonau at gmail.com>
? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
Objet : Re: [antlr-interest] Re : How to get a list of all valid options for the next token?

ANTLR grammars are LL not LR, but they are recursive descent and thus
don't use an explicit internal representation of the grammar to
control parse decisions. They do however have follow sets available at
parse time, used for error recovery and reporting. See the various
FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
may be able to get what you need from them. Though as they only
support a limited purpose they may collapse alternatives you need to
keep distinct.
Another option would be to create a custom generator that would then
have the richer information ANTLR uses at generation time.

Tom.

On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> Well, so much for that idea then :(
>
> Guess the only way to do this then is to indeed duplicate the knowledge
> inherent in the parser to a different checker. Oh well.
>
>
>
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 14:42
> To: Niemeijer, R.A.; Foust
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> I have found one series of 3 articles that might be interesting for such
> situation:
>
> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>
> But I don't know if you could achieve that easily (if someone knows a way or
> tool I would be interested too in knowing it). ANTLR parsers generated from
> grammars are not 'self-aware' if I understood correctly: they are LR parsers
> but don't hold as such a graph based on the grammar that could determine the
> next allowed token.
>
> Yours sincerely,
>
> Stanislas Herman.
>



      _____________________________________________________________________________ 
Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr

From jaluber at gmx.de  Thu Aug 14 08:55:21 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 14 Aug 2008 17:55:21 +0200
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <690A62A322DBE24FAD5208C158E5DF2E013A6FEA@houmail3.corp.aspentech.com>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FEA@houmail3.corp.aspentech.com>
Message-ID: <48A45569.8030200@gmx.de>

Jones, Larry schrieb:
> Johannes,
> 
> Thanks for the information.
> 
> I confirmed that the default of ANTLWorks 1.2b5 is still 49100; however,
> when I manually changed it to 49153, the behavior of ANTLWorks remained
> the same.

I've been informed shortly ago, that the debug constructor is missing 
the call of InitalizeCyclicDFAs(). Unfortunately not yet, which 
constructor, but I guess it is the one for the debug parser. Another 
problem is that I can't find InitalizeCyclicDFAs() in the Java target, 
so I'm not sure where the bug actually originated. I have to ask Ter 
about that one first, but you can try to add the call to 
InitalizeCyclicDFAs() yourself.

Johannes
> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de] 
> Sent: Thursday, August 14, 2008 7:00 AM
> To: Jones, Larry
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
> Process
> 
> 
> Jones, Larry schrieb:
>> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
>> parser generated in C#. I think I have followed the steps described in
> 
>> the wiki. I:
>> - Built a lexer / parser using the -debug option. (I verified that the
> 
>> generated parser inherits DebugParser.)
>> - Built an executable.
>> - Verified that it accepts command line input.
>> - Started in from a cmd window. It "hangs" waiting for console input.
>> - Started ANTLRWorks in a separate window.
>> - Opened the grammar used to generate my parser.
>> - Invoked Debugger | Remote Debug.
>> - When ANTLRWorks presents the connection dialog, I accepted the
> defaults.
>>  
>> After a few minutes, ANTLRWorks displays an error message that it
>> "Cannot launch the debugger" because of a "Time-out waiting to connect
> 
>> to the remote parser." The window from which I launched ANTLRWorks 
>> contains a number of "java.net.ConnectException: Connection refused: 
>> connect" messages.
>>  
>> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
>> remote C# parser?
>>  
>> Thanks.
> 
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is 
> that somehow the port change didn't make into the distribution. Ter has 
> to change the defalut port from 0xC001 to 0xBFCC, as well all the 
> targets. The workaround is to change the port manually, until 3.1.1, 
> that is.
> 
> Johannes
>>  
>>
>> *--*
>>
>> *Lawrence Allan Jones*
>> *Senior Developer / Technical Advisor*
>> Aspen Technology, Inc.
>> 2500 CityWest Blvd. Suite 1500
>> Houston, Texas 77042
>> USA
>> 281-504-3324 (work)
>> 281-504-3395 (fax)
>> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
>> www.aspentech.com <http://www.aspentech.com/>
>>
>> 	
>>
>>  
>>
>> This e-mail and any attachments are intended only for use by the
>> addressee(s) named herein and may contain legally privileged and/or 
>> confidential information. If you are not the intended recipient of
> this 
>> e-mail, you are hereby notified any dissemination, distribution or 
>> copying of this email, and any attachments thereto, is strictly 
>> prohibited. If you receive this email in error please immediately
> notify 
>> the sender and permanently delete the original copy and any copy of
> any 
>> e-mail, and any printout thereof.
> 
> 
> This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.
> 


From Larry.Jones at aspentech.com  Thu Aug 14 08:58:19 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Thu, 14 Aug 2008 10:58:19 -0500
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <48A45569.8030200@gmx.de>
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FEB@houmail3.corp.aspentech.com>

Thanks, Johannes.

I currently work around this issue by generating a Java-targeted parser.

I do not know when I might get around to adding the call to
InitializeCyclicDFAs().

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Thursday, August 14, 2008 10:55 AM
To: Jones, Larry
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
Process


Jones, Larry schrieb:
> Johannes,
> 
> Thanks for the information.
> 
> I confirmed that the default of ANTLWorks 1.2b5 is still 49100; 
> however, when I manually changed it to 49153, the behavior of 
> ANTLWorks remained the same.

I've been informed shortly ago, that the debug constructor is missing 
the call of InitalizeCyclicDFAs(). Unfortunately not yet, which 
constructor, but I guess it is the one for the debug parser. Another 
problem is that I can't find InitalizeCyclicDFAs() in the Java target, 
so I'm not sure where the bug actually originated. I have to ask Ter 
about that one first, but you can try to add the call to 
InitalizeCyclicDFAs() yourself.

Johannes
> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de]
> Sent: Thursday, August 14, 2008 7:00 AM
> To: Jones, Larry
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
> Process
> 
> 
> Jones, Larry schrieb:
>> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a 
>> parser generated in C#. I think I have followed the steps described 
>> in
> 
>> the wiki. I:
>> - Built a lexer / parser using the -debug option. (I verified that 
>> the
> 
>> generated parser inherits DebugParser.)
>> - Built an executable.
>> - Verified that it accepts command line input.
>> - Started in from a cmd window. It "hangs" waiting for console input.
>> - Started ANTLRWorks in a separate window.
>> - Opened the grammar used to generate my parser.
>> - Invoked Debugger | Remote Debug.
>> - When ANTLRWorks presents the connection dialog, I accepted the
> defaults.
>>  
>> After a few minutes, ANTLRWorks displays an error message that it 
>> "Cannot launch the debugger" because of a "Time-out waiting to 
>> connect
> 
>> to the remote parser." The window from which I launched ANTLRWorks
>> contains a number of "java.net.ConnectException: Connection refused: 
>> connect" messages.
>>  
>> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a 
>> remote C# parser?
>>  
>> Thanks.
> 
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is
> that somehow the port change didn't make into the distribution. Ter
has 
> to change the defalut port from 0xC001 to 0xBFCC, as well all the 
> targets. The workaround is to change the port manually, until 3.1.1, 
> that is.
> 
> Johannes
>>  
>>
>> *--*
>>
>> *Lawrence Allan Jones*
>> *Senior Developer / Technical Advisor*
>> Aspen Technology, Inc.
>> 2500 CityWest Blvd. Suite 1500
>> Houston, Texas 77042
>> USA
>> 281-504-3324 (work)
>> 281-504-3395 (fax)
>> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
>> www.aspentech.com <http://www.aspentech.com/>
>>
>> 	
>>
>>  
>>
>> This e-mail and any attachments are intended only for use by the
>> addressee(s) named herein and may contain legally privileged and/or
>> confidential information. If you are not the intended recipient of
> this
>> e-mail, you are hereby notified any dissemination, distribution or
>> copying of this email, and any attachments thereto, is strictly 
>> prohibited. If you receive this email in error please immediately
> notify
>> the sender and permanently delete the original copy and any copy of
> any
>> e-mail, and any printout thereof.
> 
> 
> This e-mail and any attachments are intended only for use by the 
> addressee(s) named herein and may contain legally privileged and/or 
> confidential information. If you are not the intended recipient of 
> this e-mail, you are hereby notified any dissemination, distribution 
> or copying of this email, and any attachments thereto, is strictly 
> prohibited. If you receive this email in error please immediately 
> notify the sender and permanently delete the original copy and any 
> copy of any e-mail, and any printout thereof.
> 


This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.

From francis.andre.kampbell at orange.fr  Thu Aug 14 09:19:03 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Thu, 14 Aug 2008 18:19:03 +0200
Subject: [antlr-interest] ANTLR 3: relax this error for the java taget:
 'label conflicts with rule with same name'
Message-ID: <48A45AF7.6090607@orange.fr>

Hi

One gets this error message Cobol.g:4:44 label subscript conflicts with 
rule with same name
on the following snippet

grammar Cobol;
tokens { DOT='DOT';  SECTION='SECTION';  IDENT='I'; }
debut    :    subscripts    ;
subscripts returns[Object[\] indexes] : LP subscript = subscript (COMMA 
subscript = subscript)* RP ;
subscript returns [Object index]        :  IDENT | NUMBER ;
   
NUMBER      : '0'..'9'+;
LP                  : '(';
RP                  : ')';
COMMA        : ',';
   
Since one can write this valid  Java code
class Foo {
    static Foo     foo = foo();

    static Foo foo() {
        return new Foo();
    }
}
I am proposing to relax this error message for Java and keep it for all 
languages that do not allow this construct as C, C++...

Cheers

FA


From francis.andre.kampbell at orange.fr  Thu Aug 14 09:46:45 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Thu, 14 Aug 2008 18:46:45 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character
 column	in	a	mismatch character error message.
In-Reply-To: <7BE9343F-2EBE-4722-A0E3-2C77C9AEB2AA@classdump.org>
References: <489F2207.2030101@orange.fr>	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>	<489F3E2F.6030706@orange.fr>	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>	<489F5095.7020602@orange.fr>	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>	<48A03D1A.6030807@orange.fr>	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>	<20080811195652.6FC8E312968@www.antlr.org>	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>	<20080813082704.903D911EC21@www.antlr.org>	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>	<001701c8fd30$145bfed0$3d13fc70$@com>	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>	<002201c8fd82$441dd240$cc5976c0$@com>
	<7BE9343F-2EBE-4722-A0E3-2C77C9AEB2AA@classdump.org>
Message-ID: <48A46175.5070207@orange.fr>

Kay R?pke a ?crit :
>
> If fact, I strongly believe tabs to be supremely evil and they should 
> be first up against the wall when the revolution comes ;)
Sorry Key, but I strongly vote in favour of tabs within source code and 
processing them at the editor or whatever text processor(which ANTLR is 
not, you're right).
But tab permits to adjust the typology of the source code to your habits 
and usage for a better understanding of it....(hu a strong debate about 
style/indentation in perspective)..
But at least, if someone is used to tab at 4 spaces and another one at 2 
spaces and a third at 6...all of them will be happy when looking at 
their code through their favourite text editor while the binary text 
will be *exactly* the same... (even on mainframe, the classical l ISPF 
editor handles tab properly!!) So be happy with tabs ;)

Cheers

FA

>
> Seriously though, ANTLR correctly reports the _character_ position 
> (disregarding the 0 vs 1 debate for the moment), because a \t is _one_ 
> character. When you are dealing with text in any UI library I've seen, 
> tabs are represented as one character in the underlying text storage, 
> to avoid having you to deal with all this trouble of what the effect 
> of tabs on the screen is. It's up to other layers to figure out the 
> actual layout. We should do likewise.
>
> I already see the next guy writing a syntax highlighter coming along 
> and complain about ANTLR expanding tabs to spaces so that for input 
> like "\tID" we report the start index of token ID as being 8 (or 9 if 
> someone insists on charPosInLine to be 1-based), assuming that 
> "standard tab width" is 8. If written in sloppy C that could easily 
> crash his application, and in any other language it would at least 
> cause an exception of some sort.
> That's the fundamental reason I'm so strongly against handling tabs in 
> any special way.
>
> The grammar author is of course free to generate special whitespace 
> tokens for different kind of whitespace in case he needs to somehow 
> disambiguate them later on.
>



From francis.andre.kampbell at orange.fr  Thu Aug 14 10:11:48 2008
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Thu, 14 Aug 2008 19:11:48 +0200
Subject: [antlr-interest] ANTLR 3.1: Help: Why do I get this warning
Message-ID: <48A46754.9010708@orange.fr>

Hi ANTLRs

While I am not using any rewriting rule or operator, ANTLR emits a warning
ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
warning(149): Cobol.g:0:0: rewrite syntax or operator with no output 
option; setting output=AST

Why do I get such warning??

grammar Cobol;
options {
    k=4;
}

tokens {
    /*A*/
    ACCEPT                ='ACCEPT';
...
....





From pink at odahoda.de  Thu Aug 14 10:24:08 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 14 Aug 2008 19:24:08 +0200
Subject: [antlr-interest] Antlr, Python bindings download page
In-Reply-To: <B65F35F5-CC7B-4720-A9BF-A74E22C77916@cs.usfca.edu>
References: <598e9210808131542h7a51807bh1fc9a47346cff784@mail.gmail.com>
	<B65F35F5-CC7B-4720-A9BF-A74E22C77916@cs.usfca.edu>
Message-ID: <543531490808141024l715b8451t840cb83595ab5e53@mail.gmail.com>

Hi Ter,

no need to wait. It's in perforce in the dist/ dir of the python target.
(I was assuming, you remembered that from the last release. Perhaps we
can make this a convention and you can update your release script to
upload the contents of the /runtime/[target]/dist/ when present.)

-Ben

On Thu, Aug 14, 2008 at 1:33 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Yes, grab main distribution and you'll get it... just waiting to get in the
> binary from Benjamin to put there.
> Ter
> On Aug 13, 2008, at 3:42 PM, Simos Xenitellis wrote:
>
>> Hi,
>>
>> The URL http://antlr.org/download/Python/
>> shows vesion 3.0.1 while 3.1 appears to be available.
>>
>> Is 3.1 ready yet for use
>> (http://fisheye2.atlassian.com/browse/antlr/runtime/Python)?
>>
>> Simos
>
>

From pink at odahoda.de  Thu Aug 14 11:31:07 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 14 Aug 2008 20:31:07 +0200
Subject: [antlr-interest] Syntaxerror not found if first symbol is wrong
In-Reply-To: <48A34E3C.509@gmx.de>
References: <489F131C.1090601@gmx.de>
	<543531490808101053t27d05390k2684332d0799b278@mail.gmail.com>
	<48A34E3C.509@gmx.de>
Message-ID: <543531490808141131g2608daa3iaabee7f558e1537@mail.gmail.com>

Hi Oliver,

On Wed, Aug 13, 2008 at 11:12 PM, Oliver B. Fischer <o.b.fischer at gmx.de> wrote:
> I am reading the input from ANTLRStringStream, so I don't get an EOF.
> How to fix this?

You should. EOF is in fact more an 'end of input' and all streams
return it, when the reach their end.

-Ben

> Benjamin Niemann schrieb:
> | Hi Oliver,
> |
> | If the very first token is an ID, the code will throw an
> | EarlyExitException - doesn't it? (alt1 sticks to its default value 2,
> | which is handled by the default case in the switch, which in turn will
> | raise the exception, because cnt1 is 0)
> |
> | If you have a sequence INT ID ';' ID, then the loop will exit after
> | the semicolon, and the parser will not complain about the dangling ID.
> | If that's what the problem is, then you can solve it by using
> |
> | program : (a b ';')+  EOF;
> |
> | -Ben
> |
> | On Sun, Aug 10, 2008 at 6:11 PM, Oliver B. Fischer
> <o.b.fischer at gmx.de> wrote:
> | Hello,
> |
> | my grammar is not able to recognize an syntax error if already the first
> | ~ symbol found is not an expected one:
> |
> | My grammar looks like this:
> |
> | INT : 'int' ;
> |
> | ID : ('a'..'z')+ ;
> |
> | WS : (' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; };
> |
> | program : (a b ';')+ ;
> |
> | a : INT ;
> |
> | b : ID ;
> |
> | So, any valid input must start with 'int', but if the first symbol found
> | by the lexer is an ID, the generated parser does not recognize the error.
> |
> | ANTLR generates the following code:
> | public final void program() throws RecognitionException {
> | ~  try {
> | ~    {
> | ~      int cnt1 = 0;
> | ~      loop1:
> | ~      do {
> | ~        int alt1 = 2;
> | ~        int LA1_0 = input.LA(1);
> |
> | ~        if ((LA1_0 == INT)) {
> | ~          alt1 = 1;
> | ~        }
> |
> |
> | ~        switch (alt1) {
> | ~          case 1: {
> | ~            pushFollow(FOLLOW_a_in_program154);
> | ~            a();
> | ~            _fsp--;
> |
> | ~            pushFollow(FOLLOW_b_in_program156);
> | ~            b();
> | ~            _fsp--;
> |
> | ~            match(input, SEM, FOLLOW_SEM_in_program158);
> |
> | ~          }
> | ~          break;
> |
> | ~          default:
> | ~            if (cnt1 >= 1) break loop1;
> | ~            EarlyExitException eee =
> | ~                    new EarlyExitException(1, input);
> | ~            throw eee;
> | ~        }
> | ~        cnt1++;
> | ~      } while (true);
> |
> |
> | ~    }
> |
> | ~  }
> |
> | ~  catch (RecognitionException e) {
> | ~    throw e;
> | ~  }
> | ~  finally {
> | ~  }
> | ~  return;
> | }
> |
> | So, the ID token falls through the switch-statement. How can I avoid this?
> |
> | Thank you for your help!
> |
> | Bye
> |
> | Oliver
> |
> |
> |
> |>
>
> - --
> Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
> Tel. +49 30 44793251, Mobil: +49 178 7903538
> Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.8 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iEYEARECAAYFAkijTjwACgkQbyc4N0PdoAzGWQCgw8ShlojJ5SoEgBoTbOaeU3Sv
> jbkAn0HCJsHYUXdBSdvj9bgjjdL8mNPv
> =wH8y
> -----END PGP SIGNATURE-----
>

From jimi at temporal-wave.com  Thu Aug 14 12:20:42 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 12:20:42 -0700
Subject: [antlr-interest] ANTLR 3: relax this error for the java
	taget:	'label conflicts with rule with same name'
In-Reply-To: <48A45AF7.6090607@orange.fr>
References: <48A45AF7.6090607@orange.fr>
Message-ID: <1218741642.14862.120.camel@jimi>

On Thu, 2008-08-14 at 18:19 +0200, Francis ANDRE wrote:

> Hi
> 
> One gets this error message Cobol.g:4:44 label subscript conflicts with 
> rule with same name
> on the following snippet
> 
> grammar Cobol;
> tokens { DOT='DOT';  SECTION='SECTION';  IDENT='I'; }
> debut    :    subscripts    ;
> subscripts returns[Object[\] indexes] : LP subscript = subscript (COMMA 
> subscript = subscript)* RP ;
> subscript returns [Object index]        :  IDENT | NUMBER ;
>    
> NUMBER      : '0'..'9'+;
> LP                  : '(';
> RP                  : ')';
> COMMA        : ',';
>    
> Since one can write this valid  Java code
> class Foo {
>     static Foo     foo = foo();
> 
>     static Foo foo() {
>         return new Foo();
>     }
> }
> I am proposing to relax this error message for Java and keep it for all 
> languages that do not allow this construct as C, C++...


I don't think that we want to have different rules for different
targets, for the very fact that the whole point is that it is target
independent. There are other considerations such as namespace pollution
and the fact that the generated code deliberately tries to be something
that you can debug and walk through and things like this would very much
hinder that. There is a gestalt to the whole thing.

Besides which, using the same name for rules and labels and $rule is
just asking for trouble - it makes your grammar completely ambiguous to
the human eye even if ANTLR can/could disambiguate the references.
Source code should be readable like text and you should not have to keep
considering the context of an identifier.

I can do this in many languages:

{
   int i = 66; ...
   { int i = 666; ... }
}

But no programmer worth their salt would do it deliberately, even though
it can be useful for code generators. Many compilers say things like
"[Warning] : Identifier 'i' at line xxx hides identifier of same name at
line yyy".

Just rename your labels (why not use hungarian?), make your grammar
obvious and put your energies in to the grammar itself. There are many
design considerations and constraints that you are not familiar with and
it is better propose changes once you understand what they are.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/00d49a0c/attachment.html 

From jimi at temporal-wave.com  Thu Aug 14 12:23:52 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 12:23:52 -0700
Subject: [antlr-interest] ANTLR 3.1: Help: Why do I get this warning
In-Reply-To: <48A46754.9010708@orange.fr>
References: <48A46754.9010708@orange.fr>
Message-ID: <1218741832.14862.123.camel@jimi>

On Thu, 2008-08-14 at 19:11 +0200, Francis ANDRE wrote:

> Hi ANTLRs
> 
> While I am not using any rewriting rule or operator, ANTLR emits a warning
> ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
> warning(149): Cobol.g:0:0: rewrite syntax or operator with no output 
> option; setting output=AST
> 
> Why do I get such warning??


I would bet that you have a spurious ! or ^ in there somewhere. If you
can reproduce it with a small example though, then it would help.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/84083aa5/attachment.html 

From parrt at cs.usfca.edu  Thu Aug 14 13:01:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Aug 2008 13:01:08 -0700
Subject: [antlr-interest] Unnecessary Mac meta-files in 3.1 distribution
In-Reply-To: <eeed9d0b0808131911p3ffcbf66u6333159912b06c95@mail.gmail.com>
References: <eeed9d0b0808131911p3ffcbf66u6333159912b06c95@mail.gmail.com>
Message-ID: <0555798D-AF18-4D9B-BA69-981277659408@cs.usfca.edu>

Found a script to kill these pesky OS X turds:

for i in $(ls -Rl@ | grep '    ' | awk '{print $1}' | sort -u);    do  
echo echo Removing $i ... >&2;  find . -print0 | xargs -0t xattr -d $i  
2>/dev/null ; done

Ter

On Aug 13, 2008, at 7:11 PM, Joey Hurst wrote:

> It looks like a number of unneeded Mac OSX meta files found there way
> into the 3.1 distribution.  They should probably be pruned from the
> repo and 3.1 distribution.  A list of these files can be found below.
>
> -Joey
>
> antlr-3.1/._CHANGES.txt
> antlr-3.1/._README.txt
> antlr-3.1/lib/._stringtemplate-3.2.jar
> antlr-3.1/runtime/._JavaScript
> antlr-3.1/runtime/JavaScript/._ChangeLog
> antlr-3.1/runtime/JavaScript/._build
> antlr-3.1/runtime/JavaScript/._lib
> antlr-3.1/runtime/JavaScript/._src
> antlr-3.1/runtime/JavaScript/._third
> antlr-3.1/runtime/JavaScript/build/._README
> antlr-3.1/runtime/JavaScript/build/._antlr3.properties
> antlr-3.1/runtime/JavaScript/build/._build.xml
> antlr-3.1/runtime/JavaScript/build/._license.txt
> antlr-3.1/runtime/JavaScript/src/._org
> antlr-3.1/runtime/JavaScript/src/org/._antlr
> antlr-3.1/runtime/JavaScript/src/org/._antlr.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/._runtime
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._ANTLRFileStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._ANTLRStringStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._BaseRecognizer.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._BitSet.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._CharStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._CommonToken.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._CommonTokenStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._DFA.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._EarlyExitException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._FailedPredicateException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._IndexOutOfBoundsExceptions.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Lexer.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MismatchedNotSetException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MismatchedRangeExceptions.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MismatchedSetException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MismatchedTokenException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MismatchedTreeNodeException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._MissingTokenException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._NoViableAltException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Parser.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._ParserRuleReturnScope.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._RecognitionException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._RecognizerSharedState.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._Token.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._TokenRewriteStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/ 
> runtime/._UnwantedTokenException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/._tree
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._BaseTree.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._BaseTreeAdaptor.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._CommonErrorNode.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._CommonTree.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._CommonTreeAdaptor.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._CommonTreeNodeStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteCardinalityException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteEarlyExitException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteEmptyStreamException.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteRuleElementStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteRuleNodeStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteRuleSubtreeStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._RewriteRuleTokenStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/tree/._Tree.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._TreeNodeStream.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._TreeParser.js
> antlr-3.1/runtime/JavaScript/src/org/antlr/runtime/ 
> tree/._TreeRuleReturnScope.js
> antlr-3.1/runtime/JavaScript/third/._antcontrib.properties
> antlr-3.1/src/org/antlr/codegen/._JavaScriptTarget.java
> antlr-3.1/src/org/antlr/codegen/templates/._ANTLRCore.sti
> antlr-3.1/src/org/antlr/codegen/templates/._JavaScript
> antlr-3.1/src/org/antlr/codegen/templates/Java/._AST.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTDbg.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTParser.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._ASTTreeParser.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._Dbg.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._Java.stg
> antlr-3.1/src/org/antlr/codegen/templates/Java/._ST.stg
> antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._AST.stg
> antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._ASTParser.stg
> antlr-3.1/src/org/antlr/codegen/templates/ 
> JavaScript/._ASTTreeParser.stg
> antlr-3.1/src/org/antlr/codegen/templates/JavaScript/._JavaScript.stg
> antlr-3.1/src/org/antlr/tool/._antlr.g
> antlr-3.1/src/org/antlr/tool/templates/messages/languages/._en.stg


From jimi at temporal-wave.com  Thu Aug 14 13:12:51 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 13:12:51 -0700
Subject: [antlr-interest] ANTLR 3.1: Help: Why do I get this warning
In-Reply-To: <48A48ABF.4070808@orange.fr>
References: <48A46754.9010708@orange.fr> <1218741832.14862.123.camel@jimi>
	<48A48ABF.4070808@orange.fr>
Message-ID: <1218744771.14862.136.camel@jimi>

On Thu, 2008-08-14 at 21:42 +0200, Francis ANDRE wrote:

> Jim
> 
> I have no ^ at all and ! is appearing only in fragment lexer rules where 
> I presume this does not imply using AST because it is just removing 
> character in the text of the build token!!!


1) The ! does imply rewrites, because it is a parser only rule. Really
it should give you an error but the v2 parser just sees that this is
some sort of rewrite and so you get the warning, even though it really
isn't a rewrite.
2) ! does not work in 3.x parser, you need to set the text yourself, or
for hte very common case here, adjust the start and stop offset of the
token.


> 
> fragment
> ESCAPOS                :  '\''! '\'';


Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/7b7aa45a/attachment.html 

From jimi at temporal-wave.com  Thu Aug 14 13:14:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 13:14:50 -0700
Subject: [antlr-interest] ANTLR 3.1: Help: Why do I get this warning
In-Reply-To: <1218744771.14862.136.camel@jimi>
References: <48A46754.9010708@orange.fr> <1218741832.14862.123.camel@jimi>
	<48A48ABF.4070808@orange.fr>  <1218744771.14862.136.camel@jimi>
Message-ID: <1218744890.14862.138.camel@jimi>

On Thu, 2008-08-14 at 13:12 -0700, Jim Idle wrote:

> On Thu, 2008-08-14 at 21:42 +0200, Francis ANDRE wrote: 
> 
> > Jim
> > 
> > I have no ^ at all and ! is appearing only in fragment lexer rules where 
> > I presume this does not imply using AST because it is just removing 
> > character in the text of the build token!!!
> 
> 
> 1) The ! does imply rewrites, because it is a parser only rule.


Should have said 'adornment/instruction

> 2) ! does not work in 3.x parser


Should have said 'lexers'


> , you need to set the text yourself, or for hte very common case here,
> adjust the start and stop offset of the token.
> 
> 
> > 
> > fragment
> > ESCAPOS                :  '\''! '\'';
> 
> 
> Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/041b861a/attachment.html 

From parrt at cs.usfca.edu  Thu Aug 14 13:14:52 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Aug 2008 13:14:52 -0700
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <48A45569.8030200@gmx.de>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FEA@houmail3.corp.aspentech.com>
	<48A45569.8030200@gmx.de>
Message-ID: <D403C6AE-410B-425A-A11A-CA0C1E52BA1A@cs.usfca.edu>

Hi. never heard of InitializeCyclicDFAs...oh, this is a C#-only issue  
that it must manually invoke code to init all the cyclic DFA (tables  
of integers).  Java can do this automatically.  A grep shows:

antlr/codegen/templates/CSharp/CSharp.stg:               
InitializeCyclicDFAs();
antlr/codegen/templates/CSharp/CSharp.stg:               
InitializeCyclicDFAs(); <! Necessary in C#??? Not removed yet. !>
antlr/codegen/templates/CSharp/CSharp.stg:      private void  
InitializeCyclicDFAs()
antlr/codegen/templates/CSharp/CSharp.stg:               
InitializeCyclicDFAs();
antlr/codegen/templates/CSharp/CSharp.stg:      private void  
InitializeCyclicDFAs()
antlr/codegen/templates/CSharp2/CSharp2.stg:             
InitializeCyclicDFAs();
antlr/codegen/templates/CSharp2/CSharp2.stg:             
InitializeCyclicDFAs(); <! Necessary in C#??? Not removed yet. !>
antlr/codegen/templates/CSharp2/CSharp2.stg:    private void  
InitializeCyclicDFAs()
antlr/codegen/templates/CSharp2/CSharp2.stg:             
InitializeCyclicDFAs();
antlr/codegen/templates/CSharp2/CSharp2.stg:    private void  
InitializeCyclicDFAs()

Ter
On Aug 14, 2008, at 8:55 AM, Johannes Luber wrote:

> Jones, Larry schrieb:
>> Johannes,
>> Thanks for the information.
>> I confirmed that the default of ANTLWorks 1.2b5 is still 49100;  
>> however,
>> when I manually changed it to 49153, the behavior of ANTLWorks  
>> remained
>> the same.
>
> I've been informed shortly ago, that the debug constructor is  
> missing the call of InitalizeCyclicDFAs(). Unfortunately not yet,  
> which constructor, but I guess it is the one for the debug parser.  
> Another problem is that I can't find InitalizeCyclicDFAs() in the  
> Java target, so I'm not sure where the bug actually originated. I  
> have to ask Ter about that one first, but you can try to add the  
> call to InitalizeCyclicDFAs() yourself.
>
> J




From javafoust at gmail.com  Thu Aug 14 14:00:58 2008
From: javafoust at gmail.com (Foust)
Date: Thu, 14 Aug 2008 14:00:58 -0700
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <48A41E28.3040002@gmx.de>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FE9@houmail3.corp.aspentech.com>
	<48A41E28.3040002@gmx.de>
Message-ID: <002901c8fe50$db20fc70$9162f550$@com>

Johannes wrote:
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is
> that somehow the port change didn't make into the distribution. Ter has
> to change the defalut port from 0xC001 to 0xBFCC, as well all the
> targets.

AntlrWorks 1.2b5 won't connect for me anymore on *any* port. It thinks 49153
is in use, but trying 49100 used to work. Now it just times out. Every time.
After a reboot. It doesn't matter. Even for a test grammar like:

	grammar test;
	start : 'hello';

If debugging from within AntlrWorks, does the port chosen need to match what
was compiled into Antrl, or can could AntlrWorks just search for an unused
port each time the Debug button was clicked?

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Thursday, August 14, 2008 5:00 AM
> To: Jones, Larry
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
> Process
> 
> Jones, Larry schrieb:
> > I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
> > parser generated in C#. I think I have followed the steps described
> in
> > the wiki. I:
> > - Built a lexer / parser using the -debug option. (I verified that
> the
> > generated parser inherits DebugParser.)
> > - Built an executable.
> > - Verified that it accepts command line input.
> > - Started in from a cmd window. It "hangs" waiting for console input.
> > - Started ANTLRWorks in a separate window.
> > - Opened the grammar used to generate my parser.
> > - Invoked Debugger | Remote Debug.
> > - When ANTLRWorks presents the connection dialog, I accepted the
> defaults.
> >
> > After a few minutes, ANTLRWorks displays an error message that it
> > "Cannot launch the debugger" because of a "Time-out waiting to
> connect
> > to the remote parser." The window from which I launched ANTLRWorks
> > contains a number of "java.net.ConnectException: Connection refused:
> > connect" messages.
> >
> > What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
> > remote C# parser?
> >
> > Thanks.
> 
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is
> that somehow the port change didn't make into the distribution. Ter has
> to change the defalut port from 0xC001 to 0xBFCC, as well all the
> targets. The workaround is to change the port manually, until 3.1.1,
> that is.
> 
> Johannes
> >
> >
> > *--*
> >
> > *Lawrence Allan Jones*
> > *Senior Developer / Technical Advisor*
> > Aspen Technology, Inc.
> > 2500 CityWest Blvd. Suite 1500
> > Houston, Texas 77042
> > USA
> > 281-504-3324 (work)
> > 281-504-3395 (fax)
> > larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
> > www.aspentech.com <http://www.aspentech.com/>
> >
> >
> >
> >
> >
> > This e-mail and any attachments are intended only for use by the
> > addressee(s) named herein and may contain legally privileged and/or
> > confidential information. If you are not the intended recipient of
> this
> > e-mail, you are hereby notified any dissemination, distribution or
> > copying of this email, and any attachments thereto, is strictly
> > prohibited. If you receive this email in error please immediately
> notify
> > the sender and permanently delete the original copy and any copy of
> any
> > e-mail, and any printout thereof.


From jbb at acm.org  Thu Aug 14 14:29:34 2008
From: jbb at acm.org (John B. Brodie)
Date: Thu, 14 Aug 2008 17:29:34 -0400
Subject: [antlr-interest] Supplying my on (Homogeneous) Tree Class
Message-ID: <E1KTkNy-00075p-SK@gecko.home.org>

Greetings!

I have just now gotten back to an earlier ANTLR project after 9 or
more months and am trying to update it to use v3.1.

I uses its own tree node class which extends CommonTree.

I know about providing a alternate TreeAdapter as a factory for my
tree nodes - the adapter provides implementations for create(Token t)
and dupNode(Object o).

I now see that when the class CommonErrorNode was added early this
year that the TreeAdapter also must supply a errorNode(....) method in
order to spawn error items for the tree - seems to be a placeholder
node in the tree to book-keep a sequence of erroneous tokens.

Fine. Good.

But CommonErrorNode extends CommonTree and can not be cast to my tree
node type (which the generated code does when errorNode() is not
overridden in the supplied tree adapter) because my node also extends
CommonTree and casting between siblings in the inheritance hiearchy is
not permissible in Java (i guess).

I tried having my node class extend CommonErrorNode but that does not
compile because of missing constructors in CommonErrorNode. And that
solution would not be desirable due to the increase in memory
footprint of every tree node comprising a large tree.

Keeping the footprint of syntactically correct trees is an excellent
idea (to me) and seems to be the very valid reason for having a
separate CommonErrorNode in the first place. Anyway...

I ended up copying CommonErrorNode.java and changing it to extend
from my tree class (and changing names to protect the innocent).

Is that the proper / intended way to provide my own tree node class?

Thankx (sorry if this is a stupid question)
   -jbb

From antlr at mirality.co.nz  Thu Aug 14 14:43:29 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 15 Aug 2008 09:43:29 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
Message-ID: <20080814214342.6868011ED0A@www.antlr.org>

At 13:05 14/08/2008, Kay R?pke wrote:
 >I don't get tired maintaining that handling all this should
 >be in user code, not in the default generated code.
 >It's not hard to add, not everyone needs it, and in the face of
 >syntax errors speed is not the primary concern anymore - so
 >it's not a huge problem going back and doing the extra bit of
 >computation to format an error message.

You're right, it's not hard to do -- provided 
you're still in the lexer.  Once you get out of 
the lexer though it could be trickier, depending 
on where you're getting your character stream 
from (it might no longer be accessible).

But my main point in trying to get it as a 
standard implementation is that the default error 
messages are currently suffering from it, and 
implementing it "properly" should help to avoid 
some newbie-confusion.  Why force everyone to go 
look up how to add this sort of functionality to 
their code when almost *everyone* is going to 
need it at least once?

 >Another thing: How often do your recognizers communicate with
 >other tools via text messages? (i.e. via printing line/col info
 >so that the other tool has to parse your output)
 >Mine most often are compiled into the application that needs a
 >parser, and thus I'm primarily interested in 
the actual character
 >index into the text buffer, not the column it is displayed in.
 >Might just be me, but I guess not many people 
are writing command
 >line tools that get invoked and need to 
communicate line/col info
 >that way.

Perhaps this is our fundamental point of 
difference then.  I've written a couple of 
grammars that work the way you describe, but by 
far the most grammars I've written are used as 
little standalone mini-compilers, in order to 
turn a DSL into code compilable by some other 
host language (generally one of C/C++/C#).  These 
tend to get integrated into the build script as 
just another compilation step, so the only stuff 
visible to the outside are the generated code 
files themselves and whatever error messages get 
printed to the console.  Hence why I really want 
those messages to be *right* :)

 >P.S.: Did anyone else notice that in the time we've discussing
 >this, everyone of us could've written the code and supplied to
 >interested parties? ;)

Yes :)  And I'd be happy to do just that, if I 
could be assured that it would end up as a 
standard part of the runtime.  I *really* don't 
think it should be a separate addon.


From antlr at mirality.co.nz  Thu Aug 14 14:48:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 15 Aug 2008 09:48:05 +1200
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.co
 m>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>
Message-ID: <20080814214812.6632C11ED3F@www.antlr.org>

At 15:04 14/08/2008, Ian Kaplan wrote:
>   I do have a couple of worries.  One is performance.  In my 
> case, unless performance is really terrible should not be too be 
> a problem since the language I'm working on is a graph database 
> query language and the queries are never going to be that big 
> compared to, say, Java or C++ code.  Another worry I have is 
> about the backtracking.  I admit that I have not RTFM (e.g., the 
> last chapters of The Book that deal with this topic).  My hope 
> is that the match tries to match the longest sequence first, so 
> that a match is not missed.

In most cases v3 performance is significantly superior to v2 
performance, since v3 does less copying of token text.

And AFAIK backtracking is done in the order that the alternatives 
are listed, so it's not necessarily longest-match-wins.

(The lexer does do longest-match-wins for the most part, but then 
it also doesn't do backtracking.)


From antlr at jazillian.com  Thu Aug 14 15:09:19 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 14 Aug 2008 18:09:19 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <858634.12553.qm@web50105.mail.re2.yahoo.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
Message-ID: <48A4AD0F.6040606@jazillian.com>

Do it yourself: http://www.jazillian.com/articles/treewalkers.html
If you try to use treewalkers to do multiple passes over the AST,
you'll spend more time fighting with the grammar than getting stuff done.

Andy

Carter Cheng wrote:
> I have been working on a compiler system for a dialect of an existing language and so far I have been using the ^() syntax to generate the "AST" using ANTLR's tree construction routines. 
> 
> The difficulty I have been facing is how best to manipulate these trees during subsequent passed through them especially if multiple passes are needed to check for various properties, construct the symbol table and for type checking. Would this entail using multiple tree grammar files one for each pass?
> 
> It seems that it might be easier at present to DIY the AST construction using a tailored representation to the grammar in question as would be done if I was using something like YACC. 
> 
> Is this really the case or are there compelling reasons for using the ^() syntax? 
> 
> Thanks in advance,
> 
> Carter.
> 
> 
>       
> 


From antlr at jazillian.com  Thu Aug 14 15:17:28 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 14 Aug 2008 18:17:28 -0400
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
Message-ID: <48A4AEF8.1030301@jazillian.com>

Terence Parr wrote:
> Get it while it's hot!
> 
> http://www.antlr.org/download.html

Congrats on getting this out!

> 
> Thanks to all the target developers for there hard work!!!

Hey, FWIW, a friend of mine defined a subset of Java called "Java--",
and built a parser (using Javac.Compiler) that generates both
C++ and C#.  Java-- just uses the core language without anything
fancy (e.g. generics) and very use of little JDK library (String
and not much else).

Perhaps using that would be a better solution than having separate
Java, C, C++, and C# targets?


Also, the word "there" above is invalid "syntax" ;)
It passes my English lexer and parser, but fails semantic analysis.

Andy



From jimi at temporal-wave.com  Thu Aug 14 15:26:22 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 15:26:22 -0700
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <20080814214812.6632C11ED3F@www.antlr.org>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>
	<20080814214812.6632C11ED3F@www.antlr.org>
Message-ID: <1218752782.14862.146.camel@jimi>

On Fri, 2008-08-15 at 09:48 +1200, Gavin Lambert wrote:

> At 15:04 14/08/2008, Ian Kaplan wrote:
> >   I do have a couple of worries.  One is performance.  In my 
> > case, unless performance is really terrible should not be too be 
> > a problem since the language I'm working on is a graph database 
> > query language and the queries are never going to be that big 
> > compared to, say, Java or C++ code.  Another worry I have is 
> > about the backtracking.  I admit that I have not RTFM (e.g., the 
> > last chapters of The Book that deal with this topic).  My hope 
> > is that the match tries to match the longest sequence first, so 
> > that a match is not missed.
> 
> In most cases v3 performance is significantly superior to v2 
> performance, since v3 does less copying of token text.
> 
> And AFAIK backtracking is done in the order that the alternatives 
> are listed, so it's not necessarily longest-match-wins.


Basically, if you are at all concerned about performance, you should
never turn on global backtracking. It is more for prototyping or for the
case where readability is more useful than speed. The only time I have
used it was fora VBScript parser. The language is intended to be
interpreted (badly) and so backtracking becomes a better option than a
predicate for almost every construct anyway. However, it is no
substitute for left factoring.

JIm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/258d5df8/attachment.html 

From antlr at jazillian.com  Thu Aug 14 15:29:38 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 14 Aug 2008 18:29:38 -0400
Subject: [antlr-interest] Preserving comments
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
Message-ID: <48A4B1D2.4010301@jazillian.com>

It's very difficult, in practice, to associate comments with code.
A comment may "go with" code that's above it, below it, left or right of it.
It has a lot do do with how people perceive whitespace.
Peter Ahe at Sun wrote a good paper on the subject years ago.

I wrote some pretty involved heuristics to try to figure out what
comments "go with" certain code. 

I have the ANTLR lexer preserve the comments and whitespace and then my own processor
analyses them before stripping them out of the stream of tokens.
But to attach comments to individual AST nodes doesn't work well if the AST changes a lot.

Andy

Vitaliy wrote:
 
> But failed to find a good-enough way to preserve comments.

From parrt at cs.usfca.edu  Thu Aug 14 15:29:33 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Aug 2008 15:29:33 -0700
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <002901c8fe50$db20fc70$9162f550$@com>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FE9@houmail3.corp.aspentech.com>
	<48A41E28.3040002@gmx.de> <002901c8fe50$db20fc70$9162f550$@com>
Message-ID: <88ED4769-B1FB-4A17-8B36-542A9E7A4570@cs.usfca.edu>

AW pref is what port it uses...try changing that.  Must match what the  
parser constructor says.

Ter
On Aug 14, 2008, at 2:00 PM, Foust wrote:

> Johannes wrote:
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue  
>> is
>> that somehow the port change didn't make into the distribution. Ter  
>> has
>> to change the defalut port from 0xC001 to 0xBFCC, as well all the
>> targets.
>
> AntlrWorks 1.2b5 won't connect for me anymore on *any* port. It  
> thinks 49153
> is in use, but trying 49100 used to work. Now it just times out.  
> Every time.
> After a reboot. It doesn't matter. Even for a test grammar like:
>
> 	grammar test;
> 	start : 'hello';
>
> If debugging from within AntlrWorks, does the port chosen need to  
> match what
> was compiled into Antrl, or can could AntlrWorks just search for an  
> unused
> port each time the Debug button was clicked?
>
> Brent
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Johannes Luber
>> Sent: Thursday, August 14, 2008 5:00 AM
>> To: Jones, Larry
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
>> Process
>>
>> Jones, Larry schrieb:
>>> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
>>> parser generated in C#. I think I have followed the steps described
>> in
>>> the wiki. I:
>>> - Built a lexer / parser using the -debug option. (I verified that
>> the
>>> generated parser inherits DebugParser.)
>>> - Built an executable.
>>> - Verified that it accepts command line input.
>>> - Started in from a cmd window. It "hangs" waiting for console  
>>> input.
>>> - Started ANTLRWorks in a separate window.
>>> - Opened the grammar used to generate my parser.
>>> - Invoked Debugger | Remote Debug.
>>> - When ANTLRWorks presents the connection dialog, I accepted the
>> defaults.
>>>
>>> After a few minutes, ANTLRWorks displays an error message that it
>>> "Cannot launch the debugger" because of a "Time-out waiting to
>> connect
>>> to the remote parser." The window from which I launched ANTLRWorks
>>> contains a number of "java.net.ConnectException: Connection refused:
>>> connect" messages.
>>>
>>> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
>>> remote C# parser?
>>>
>>> Thanks.
>>
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue  
>> is
>> that somehow the port change didn't make into the distribution. Ter  
>> has
>> to change the defalut port from 0xC001 to 0xBFCC, as well all the
>> targets. The workaround is to change the port manually, until 3.1.1,
>> that is.
>>
>> Johannes
>>>
>>>
>>> *--*
>>>
>>> *Lawrence Allan Jones*
>>> *Senior Developer / Technical Advisor*
>>> Aspen Technology, Inc.
>>> 2500 CityWest Blvd. Suite 1500
>>> Houston, Texas 77042
>>> USA
>>> 281-504-3324 (work)
>>> 281-504-3395 (fax)
>>> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
>>> www.aspentech.com <http://www.aspentech.com/>
>>>
>>>
>>>
>>>
>>>
>>> This e-mail and any attachments are intended only for use by the
>>> addressee(s) named herein and may contain legally privileged and/or
>>> confidential information. If you are not the intended recipient of
>> this
>>> e-mail, you are hereby notified any dissemination, distribution or
>>> copying of this email, and any attachments thereto, is strictly
>>> prohibited. If you receive this email in error please immediately
>> notify
>>> the sender and permanently delete the original copy and any copy of
>> any
>>> e-mail, and any printout thereof.
>


From jimi at temporal-wave.com  Thu Aug 14 15:30:11 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Aug 2008 15:30:11 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A4AD0F.6040606@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<48A4AD0F.6040606@jazillian.com>
Message-ID: <1218753011.14862.149.camel@jimi>

On Thu, 2008-08-14 at 18:09 -0400, Andy Tripp wrote:

> Do it yourself: http://www.jazillian.com/articles/treewalkers.html
> If you try to use treewalkers to do multiple passes over the AST,
> you'll spend more time fighting with the grammar than getting stuff done.


I think that you might add "In your opinion" to this comment.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/4e58e2e2/attachment.html 

From parrt at cs.usfca.edu  Thu Aug 14 15:31:39 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Aug 2008 15:31:39 -0700
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>
Message-ID: <E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>

Hi Ian,

My sentiments exactly re v2 conversion to v3.  That is why v3 is STILL  
written in v2 ;)

Performance is not bad with backtracking and memoization; linear time  
cost.  Still better to let ANTLR predict with a simple DFA rather than  
backtracking.  Also can set backtracking per rule.

Thanks for the kudos, Ian!  Glad to see you using v3, even if painful  
to get there.

Ter
On Aug 13, 2008, at 8:04 PM, Ian Kaplan wrote:

>
>   I'm not very good at suffering in silence and the transition  
> between ANTLR 2.X and ANTLR 3.X has been a painful one.  I have had  
> to more or less rewrite all of the Java code associated with my  
> grammar rules.  But along with the whining it is only reasonable to  
> also talk about the good things.
>
>   The ANTLR backtracking parser is really great.  At least in terms  
> of its accepting grammars.  The back tracking parser gives you the  
> freedom to use a grammar would be difficult in LL(2) (ANTLR 2.X) or  
> even LL(*).  As a result, the grammar is more readable (less left  
> factoring) and the designer has much more freedom to design a  
> language as they want, rather than what can be supported by the  
> parser generator.  Going to ANTLR 3.X has been painful, but in the  
> end, I have to say it is worth it so far.
>
>   I do have a couple of worries.  One is performance.  In my case,  
> unless performance is really terrible should not be too be a problem  
> since the language I'm working on is a graph database query language  
> and the queries are never going to be that big compared to, say,  
> Java or C++ code.  Another worry I have is about the backtracking.   
> I admit that I have not RTFM (e.g., the last chapters of The Book  
> that deal with this topic).  My hope is that the match tries to  
> match the longest sequence first, so that a match is not missed.
>
>    In summary, I send my thanks to Terance and Co. for the great  
> work on ANTLR 3.  It's a tool that has allowed me more freedom than  
> I've ever had before with a parser generator.
>
>   Ian
>


From antlr at jazillian.com  Thu Aug 14 15:39:29 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 14 Aug 2008 18:39:29 -0400
Subject: [antlr-interest] bridging the gap - PL/SQL
In-Reply-To: <45190.1218655516@airmail.net>
References: <45190.1218655516@airmail.net>
Message-ID: <48A4B421.4000708@jazillian.com>

Unfortunately, the official SQL language is a monster, right
up there with C++ in complexity (IMO). I have a translator that
converts embedded SQL into equivalent Java JDBC calls, but it 
only works for simple SQL statements.

You're right to be afraid that your PL/SQL may have stuff that's not
handled by the example parsers. Again, same problems as C++ - the
standard is way too complex, each vendor (Oracle in this case)
implements their own non-standard features, and developers use those features.

Seems like writing a general PL/SQL - to - Java translator would take a
lifetime, but a translator that works only with your existing PL/SQL code might
be doable.

Andy

jhking at airmail.net wrote:
> I have the "Definitive Guide..." book and have learned quite a bit from it.  What
> I'm looking for (and this may be a "how to parse" question not an ANTLR question
> is something more involved than the calc example that's explained.
> I'm an MIS not CS guy so never got formal parser/language generation training but
> have several itches that I think Antlr can help me scratch.
> 
> Our primary environment is PL/SQL (which looks a lot like Ada-83 + sql elements)
> and I want to build two things:
> 1)  A comparison utility that compares parse trees or something that can ignore
> insignificant changes.  PL/SQL is case-insensitive except within quoted strings
> and its a bear to get a file comparison utility to deal with that.
> 2)  A pl/sql to java conversion utility, this is a long way off but I think if I
> can learn enough to do #1 then I'm better than half-way to this.
> 
> I see example pl/sql grammars and I want to utilize those but at this point I
> don't know enough to fully understand them, which means I'll have a hard time
> extending them or understanding the errors if the pl/sql source I'm parsing has
> features not yet in the example grammars.
> 
> I'm not asking anybody to do either of these things for me (that would be a
> professional engagement worth more money than I can afford) I just need some kind
> of a "parsers for dummies" book to get me further along.
> 
> Thanks for your kind attention.
> ---- Msg sent via Internet America Webmail - www.internetamerica.com
> 


From jaluber at gmx.de  Thu Aug 14 15:40:47 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 15 Aug 2008 00:40:47 +0200
Subject: [antlr-interest] ANTLR v3.1 released!
In-Reply-To: <48A4AEF8.1030301@jazillian.com>
References: <095A6C19-6D1F-434C-A8FA-40A855AB8B00@cs.usfca.edu>
	<48A4AEF8.1030301@jazillian.com>
Message-ID: <48A4B46F.5020400@gmx.de>

Andy Tripp schrieb:
> Terence Parr wrote:
>> Get it while it's hot!
>>
>> http://www.antlr.org/download.html
> 
> Congrats on getting this out!
> 
>>
>> Thanks to all the target developers for there hard work!!!
> 
> Hey, FWIW, a friend of mine defined a subset of Java called "Java--",
> and built a parser (using Javac.Compiler) that generates both
> C++ and C#.  Java-- just uses the core language without anything
> fancy (e.g. generics) and very use of little JDK library (String
> and not much else).
> 
> Perhaps using that would be a better solution than having separate
> Java, C, C++, and C# targets?

Are you proposing a combined target for Java-like languages? How do you 
deal with action code then? Is it possible to interface e.g. C# code 
required for symbol tables? Also I can't see, how you can circumvent the 
  runtime libraries with this method. Even the templates of Java and C# 
differ at some subtle points, as I've noticed today again. Overall, I'd 
still prefer the approach of Yggdrasil over your proposal.

Johannes

> 
> Also, the word "there" above is invalid "syntax" ;)
> It passes my English lexer and parser, but fails semantic analysis.
> 
> Andy
> 
> 


From kroepke at classdump.org  Thu Aug 14 15:46:35 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 15 Aug 2008 00:46:35 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
Message-ID: <F91A936B-697D-4ECB-B675-3D12457AD892@classdump.org>

Hi!

On Aug 14, 2008, at 11:43 PM, Gavin Lambert wrote:

> At 13:05 14/08/2008, Kay R?pke wrote:
> >I don't get tired maintaining that handling all this should
> >be in user code, not in the default generated code.
> >It's not hard to add, not everyone needs it, and in the face of
> >syntax errors speed is not the primary concern anymore - so
> >it's not a huge problem going back and doing the extra bit of
> >computation to format an error message.
>
> You're right, it's not hard to do -- provided you're still in the  
> lexer.  Once you get out of the lexer though it could be trickier,  
> depending on where you're getting your character stream from (it  
> might no longer be accessible).

But then you need to get the tokens' text from somewhere, too, so I  
suppose it would copy it into the token proper. Generating an error  
message would then scan back in the token stream to expand tabs (again  
assuming you kept the whitespace tokens, which you need to anyway for  
this use case) and print out a hopefully relevant portion of it.

> But my main point in trying to get it as a standard implementation  
> is that the default error messages are currently suffering from it,  
> and implementing it "properly" should help to avoid some newbie- 
> confusion.  Why force everyone to go look up how to add this sort of  
> functionality to their code when almost *everyone* is going to need  
> it at least once?

I see that point and I concur in a way. The more I think about it, the  
more I believe we are arguing the same thing, see below.

> >Another thing: How often do your recognizers communicate with
> >other tools via text messages? (i.e. via printing line/col info
> >so that the other tool has to parse your output)
> >Mine most often are compiled into the application that needs a
> >parser, and thus I'm primarily interested in the actual character
> >index into the text buffer, not the column it is displayed in.
> >Might just be me, but I guess not many people are writing command
> >line tools that get invoked and need to communicate line/col info
> >that way.
>
> Perhaps this is our fundamental point of difference then.  I've  
> written a couple of grammars that work the way you describe, but by  
> far the most grammars I've written are used as little standalone  
> mini-compilers, in order to turn a DSL into code compilable by some  
> other host language (generally one of C/C++/C#).  These tend to get  
> integrated into the build script as just another compilation step,  
> so the only stuff visible to the outside are the generated code  
> files themselves and whatever error messages get printed to the  
> console.  Hence why I really want those messages to be *right* :)

I totally see your point. However, what would you intend to report as  
a column number in that case? Assume 8 char wide tabs? (I'm asking  
this out of interest, not spite.)

> >P.S.: Did anyone else notice that in the time we've discussing
> >this, everyone of us could've written the code and supplied to
> >interested parties? ;)
>
> Yes :)  And I'd be happy to do just that, if I could be assured that  
> it would end up as a standard part of the runtime.  I *really* don't  
> think it should be a separate addon.


Ok, I can't give you assurance of course, but I'd like to improve at  
least ANTLR's Tool messages (probably not changing the  
charPositionLine to mean column, but presenting it a bit differently  
so it's clear). The main goal would be to print the offending place  
with a bit of context in a nice manner.

Presumably we could conjure up an implementation that would make sense  
to optionally be used as a recognizer superClass, then if someone  
wants it they can just pop that into their grammar. That adds no space/ 
time cost to generated code at all, while still providing the feature  
"out of the box", meaning it's extremely easy to enable.
I'm not sure how many people actually use that option vs. delegating  
stuff out from via a pointer or two, I tend to use superClass and  
implement all sorts of goodies in there (like error reporting hooks  
and all the members for the recognizer - I don't actually use @members  
{} since it's not editable with my IDE that way). Would be interesting  
to know how other people handle that.

Again, my vote is strongly for keeping charPositionInLine as _the_  
definitive source of horizontal locations, because that's the most  
useful thing for anything else than printing (esp when communicating  
with other tools, since it's really the logical character offset not  
meddled with in any way). I believe tools that rely on expanded tabs  
to be broken, but I guess that's just part of my sucky life ;)
I'm strongly against adding any memory footprint to CommonToken, as  
that's the one most people use. It might sound silly to argue about  
adding a couple of bytes, but it really does make a difference for  
large input text. This is a question of trading a little time for  
potentially large amounts of memory and I think it's worth the effort.

To spell out the idea once more (in case it wasn't clear enough, can't  
remember): In face of an error in the input the time spent for report  
the error nicely is most likely to be very small compared to the time  
spent with valid input, which would most likely passed to other code  
for further processing. Scanning a few tokens back (until you hit the  
beginning of a line) and expanding tabs as you go along is fast enough  
to be ok for the case where you can't do anything else with the input  
anyway. It breaks down in the degenerate case where you have only one  
immensely long line, but that's easy to deal with, too, because  
chances are that you don't want to print the entire line anyway. Just  
cap it at a couple of tokens and all should be well.

On terminology, in case I wasn't clear about it: I say that this  
implementation is in "user code" because it is not generated by ANTLR,  
it doesn't not add any complexity to the generated code, neither time-  
nor spacewise, as opposed to implement columns in CommonToken (which  
would require more memory and at least one more parameter to specify,  
namely the tab width). It would also confuse people that have a  
different tab width setting from what ANTLR (or the grammar author)  
uses, so I don't buy the "it's easier to read"-part yet.

The reason I wouldn't like it to be the default in BaseRecognizer (or  
whatever overrides displayError) is that we don't know the token type  
to look for. This is another thing that needs to be configured by the  
developer.
OTOH I suppose we could be mean and expand \t in _every_ token we  
encounter, by getting its text.
mmh have to think about that, but it's probably the best way of  
handling it. Then my only objection to add it to BaseRecognizer would  
be the "confusion" part when printing the column, but that should be  
easy to solve by just not printing the column :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From gerald at certiv.net  Thu Aug 14 15:47:57 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 14 Aug 2008 15:47:57 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <20080814214342.6868011ED0A@www.antlr.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
	<20080814214342.6868011ED0A@www.antlr.org>
Message-ID: <200808142252.m7EMpxQU029307@zinc.newtechlaw.com>

At 02:43 PM 8/14/2008, Gavin Lambert wrote:

>Perhaps this is our fundamental point of difference then.  I've 
>written a couple of grammars that work the way you describe, but by 
>far the most grammars I've written are used as little standalone 
>mini-compilers, in order to turn a DSL into code compilable by some 
>other host language (generally one of C/C++/C#).  These tend to get 
>integrated into the build script as just another compilation step, 
>so the only stuff visible to the outside are the generated code 
>files themselves and whatever error messages get printed to the 
>console.  Hence why I really want those messages to be *right* :)

But isn't that the point.  There can never be any guarantee that a 
fixed value will be *right* -- at best just a happenstance the tab 
expansion set in whatever editor you are using matches some arbitrary 
value implemented by Antlr -- and no matter what value is chosen it 
will be likely wrong for the majority of users.

Could add an grammar option to define tab size -- increase the 
likelihood of being right, but still no guarantee.  Better solution 
is to use an Antlr-aware editor.


From kroepke at classdump.org  Thu Aug 14 15:59:08 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 15 Aug 2008 00:59:08 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <200808142252.m7EMpxQU029307@zinc.newtechlaw.com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
	<20080814214342.6868011ED0A@www.antlr.org>
	<200808142252.m7EMpxQU029307@zinc.newtechlaw.com>
Message-ID: <7A09992E-2CC6-4E3F-ADB7-9A61E2313624@classdump.org>


On Aug 15, 2008, at 12:47 AM, Gerald Rosenberg wrote:

> At 02:43 PM 8/14/2008, Gavin Lambert wrote:
>
>> Perhaps this is our fundamental point of difference then.  I've  
>> written a couple of grammars that work the way you describe, but by  
>> far the most grammars I've written are used as little standalone  
>> mini-compilers, in order to turn a DSL into code compilable by some  
>> other host language (generally one of C/C++/C#).  These tend to get  
>> integrated into the build script as just another compilation step,  
>> so the only stuff visible to the outside are the generated code  
>> files themselves and whatever error messages get printed to the  
>> console.  Hence why I really want those messages to be *right* :)
>
> But isn't that the point.  There can never be any guarantee that a  
> fixed value will be *right* -- at best just a happenstance the tab  
> expansion set in whatever editor you are using matches some  
> arbitrary value implemented by Antlr -- and no matter what value is  
> chosen it will be likely wrong for the majority of users.
>
> Could add an grammar option to define tab size -- increase the  
> likelihood of being right, but still no guarantee.  Better solution  
> is to use an Antlr-aware editor.

ANTLR's Tool messages are only part of the problem. Your point gets  
even more relevant when talking about the error message of the  
_generated_ recognizers. At best tab-expansion can be used to print  
out an annotated portion of the faulty input, but it's equally  
"wrong" (compared to the current behavior) to use it to calculate a  
column, like you point out.

I'd hate another grammar option, btw. If configurable, it should be an  
attribute of BaseRecognizer settable only by a method call. It's not  
common enough to warrant an option, I think.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From gerald at certiv.net  Thu Aug 14 17:12:18 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 14 Aug 2008 17:12:18 -0700
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <7A09992E-2CC6-4E3F-ADB7-9A61E2313624@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
	<20080814214342.6868011ED0A@www.antlr.org>
	<200808142252.m7EMpxQU029307@zinc.newtechlaw.com>
	<7A09992E-2CC6-4E3F-ADB7-9A61E2313624@classdump.org>
Message-ID: <200808150012.m7F0CagU029819@zinc.newtechlaw.com>

At 03:59 PM 8/14/2008, Kay R?pke wrote:

>>Could add an grammar option to define tab size -- increase the
>>likelihood of being right, but still no guarantee.  Better solution
>>is to use an Antlr-aware editor.
>
>ANTLR's Tool messages are only part of the problem.  Your point gets
>even more relevant when talking about the error message of the
>_generated_ recognizers. At best tab-expansion can be used to print
>out an annotated portion of the faulty input, but it's equally
>"wrong" (compared to the current behavior) to use it to calculate a
>column, like you point out.

Intended that the option value would also be used 
to generate a run-time value as well.

If only a BaseRecognizer modification is made, 
then the value would not be available to the Tool 
during generation, right?  To be consistent, the 
solution needs to cover development-time as well.

>I'd hate another grammar option, btw.

Agreed.  The alternative would be to provide a 
Tool level parameter or method call, but that is 
not so plainly visible as a grammar option.



From jbb at acm.org  Thu Aug 14 18:16:12 2008
From: jbb at acm.org (John B. Brodie)
Date: Thu, 14 Aug 2008 21:16:12 -0400
Subject: [antlr-interest] Nested Multi-Line Commentary
Message-ID: <E1KTnvI-0007wv-K8@gecko.home.org>

Greetings!

I'd like to permit nested multi line commentary in my grammar, e.g:

/*
foo
/*
bar
*/
baz
*/
<EOF here>

should be legal, because each opening /* is matched by a closing */

and

/*
foo
/*
bar
*/
<EOF here>

is illegal, because a closing */ is missing.

So, well, I tried these two Lexer rules:

// nestable multiple-line comments
ML_COMMENT : FRAG_ML_COMMENT { $channel=HIDDEN; } ;

fragment FRAG_ML_COMMENT :
        '/*'
        ( options { greedy=false; } : (('/*')=>FRAG_ML_COMMENT) | . )*
        '*/'
   ;

and I get this error message from ANTLR v3.1:

ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
error(206): Lambda.g:1:8: Alternative 15: after matching input such as '/''*''/''*''/''*''/''*''/'<EOT> decision cannot predict what comes next due to recursion overflow to FRAG_ML_COMMENT from FRAG_ML_COMMENT

can you please help me correct this?

I kinda thought that, while infinite recursion is possible, the
syntactic predicate would help resolve whether or not to recurse.

It is acceptable that when any closing */ are missing the Lexer would
not detect that error(s) until the EOF is encountered. e.g. when a */
is missing, the rest of the input file is treated as comments and
an error should be reported at the end of file.

Thankx
   -jbb

From kroepke at classdump.org  Thu Aug 14 19:27:30 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 15 Aug 2008 04:27:30 +0200
Subject: [antlr-interest] Nested Multi-Line Commentary
In-Reply-To: <E1KTnvI-0007wv-K8@gecko.home.org>
References: <E1KTnvI-0007wv-K8@gecko.home.org>
Message-ID: <E7DF633F-94F1-441B-A593-9C82A87C241C@classdump.org>


On Aug 15, 2008, at 3:16 AM, John B. Brodie wrote:

> and I get this error message from ANTLR v3.1:
>
> ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
> error(206): Lambda.g:1:8: Alternative 15: after matching input such  
> as '/''*''/''*''/''*''/''*''/'<EOT> decision cannot predict what  
> comes next due to recursion overflow to FRAG_ML_COMMENT from  
> FRAG_ML_COMMENT


That's funny, I don't get that message at all (and shouldn't, I think).

$ cat Comment.g
grammar Comment;

// nestable multiple-line comments
ML_COMMENT : FRAG_ML_COMMENT { $channel=HIDDEN; } ;

fragment FRAG_ML_COMMENT :
        '/*'
        ( options { greedy=false; } : (('/*')=>FRAG_ML_COMMENT) | . )*
        '*/'
   ;

CHAR	:	'a'..'z';
WS	:	(' ' | '\t' | '\n' | '\r') {$channel=HIDDEN;}
	;

foo	:	CHAR+;

$ java org.antlr.Tool Comment.g
ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
$ javac Comment*java
$ java CommentMain faulty.txt
line 1:30 mismatched character '<EOF>' expecting '*'
$ cat faulty.txt
id foo /* test /* test  */ bar
$ java CommentMain good.txt
$ cat good.txt
id foo /* test /* test */ */ bar

are you sure you don't reference it from a different location?  
"Alternative 15" looks odd in that context.
And I agree, it shouldn't overflow because it can decide without  
recursing at all thanks to the predicate.
The generated DFA for the decision in FRAG_ML_COMMENT looks like you  
would expect, too.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Thu Aug 14 19:33:08 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 15 Aug 2008 04:33:08 +0200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
	mismatch character error message.
In-Reply-To: <200808150012.m7F0CagU029819@zinc.newtechlaw.com>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
	<20080814214342.6868011ED0A@www.antlr.org>
	<200808142252.m7EMpxQU029307@zinc.newtechlaw.com>
	<7A09992E-2CC6-4E3F-ADB7-9A61E2313624@classdump.org>
	<200808150012.m7F0CagU029819@zinc.newtechlaw.com>
Message-ID: <BBD88958-EBC3-4D12-B9DC-E28362C835C3@classdump.org>


On Aug 15, 2008, at 2:12 AM, Gerald Rosenberg wrote:

> Intended that the option value would also be used to generate a run- 
> time value as well.
>
> If only a BaseRecognizer modification is made, then the value would  
> not be available to the Tool during generation, right?  To be  
> consistent, the solution needs to cover development-time as well.

I will try to implement that over the weekend to see where it goes.  
Putting it into the runtime is a different story, but I've implemented  
the algorithm for a different project already, so I know it's possible  
to do in a subclass of Parser. It's more a question of "do we (and  
esp. Ter) want it in". I'd say it's a good addition, but that's not up  
to me to decide, naturally.

>> I'd hate another grammar option, btw.
>
> Agreed.  The alternative would be to provide a Tool level parameter  
> or method call, but that is not so plainly visible as a grammar  
> option.


The Tool version would look a bit different because ANTLR is actually  
implemented using ANTLR v2, so the mechanics would differ. I haven't  
looked at it too closely, but I know that for certain errors we don't  
have location info available (and I think it was because of v2  
limitations, but can't remember now).

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From iank at bearcave.com  Thu Aug 14 20:23:39 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Thu, 14 Aug 2008 20:23:39 -0700
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>
	<E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>
Message-ID: <7f8924df0808142023h239856a3ya3a452800709fe53@mail.gmail.com>

*
> Performance is not bad with backtracking and memoization; linear time cost.
>  Still better to let ANTLR predict with a simple DFA rather than
> backtracking.  Also can set backtracking per rule.*
>
>
>
       Only a part of my grammar requires more than two symbols of look a
head.  How do you turn on backtracking on a per rule basis?  I've got it set
globally and it may not need to be.

  Thanks,

  Ian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080814/e2af3eaf/attachment.html 

From atlan at gmx.li  Thu Aug 14 23:01:53 2008
From: atlan at gmx.li (Marc Bischof)
Date: Fri, 15 Aug 2008 08:01:53 +0200
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A4AD0F.6040606@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<48A4AD0F.6040606@jazillian.com>
Message-ID: <200808150801.54041.atlan@gmx.li>

Hello Andy,

in your article you wrote:

>I think the approach that you'll prefer depends on your background. If you're 
> already intimately familiar with the ":", "[". "]", "*" , "{", "}", and ";" 
> constructs in the first approach, you will prefer the terse approach. On    
> the other hand, if you don't want to be bothered with all that "extra      
> syntax", you'll prefer the more verbose "plain Java" approach. 

I think, if someone is not familiar with grammar stuff and has not the 
background for writing translators, the last thing he/she should do is 
writing it by hand.
...may be to get familiar with it, but not for a productive solution.

Cheers Marc

From r.a.niemeijer at tue.nl  Fri Aug 15 02:28:39 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Fri, 15 Aug 2008 11:28:39 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com> 
Message-ID: <A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>

Right, I think I've localized all the data I need. All you need is a bit of reflection. All the bitsets that determine the possible next tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous token (can be gotten from the Parser's state.following variable), {1} is the name of the method the NoViableAltException is generated in (use something like MethodBase.GetCurrentMethod().Name) and {2} is un unimportant 3-digit number. So get the list of all Bitsets of the Parser via reflection and choose the one that starts with FOLLOW_{0}_in_{1}.

However, in order to be able to use this I have to insert this code at the point the NoViableAltException is thrown so I can dump the list of tokens in its grammarDecisionDescription field. That means overriding all the bits of code that look like this:

NoViableAltException nvae_d1s2 =
    new NoViableAltException("", 1, 2, input);

    throw nvae_d1s2;

Now obviously this can be done manually, but then you'd lose it after every grammar generation. So my question: is there a way to override this part of the generated grammar?

Thanks.

-----Original Message-----
From: Niemeijer, R.A. 
Sent: donderdag 14 augustus 2008 17:39
To: 'Stanislas Rusinsky'; Thomas Brandon
Cc: antlr-interest at antlr.org
Subject: RE: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?

The FOLLOW_ variables do indeed seem to contain all the data I need. I'm going to have a look at it tomorrow to see if I can convert to bitset data to something more useful to me.

-----Original Message-----
From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr] 
Sent: woensdag 13 augustus 2008 19:27
To: Thomas Brandon; Niemeijer, R.A.
Cc: antlr-interest at antlr.org
Subject: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?

oops, when making such attention mistakes I feel like hiding under the table :) they are LL of course

Mr. Niemeijer, could you please keep me informed if you reach a satisfactory solution with the "FOLLOW_" hint? I am interested too in that topic.

Stanislas.



----- Message d'origine ----
De : Thomas Brandon <tbrandonau at gmail.com>
? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
Objet : Re: [antlr-interest] Re : How to get a list of all valid options for the next token?

ANTLR grammars are LL not LR, but they are recursive descent and thus
don't use an explicit internal representation of the grammar to
control parse decisions. They do however have follow sets available at
parse time, used for error recovery and reporting. See the various
FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
may be able to get what you need from them. Though as they only
support a limited purpose they may collapse alternatives you need to
keep distinct.
Another option would be to create a custom generator that would then
have the richer information ANTLR uses at generation time.

Tom.

On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> Well, so much for that idea then :(
>
> Guess the only way to do this then is to indeed duplicate the knowledge
> inherent in the parser to a different checker. Oh well.
>
>
>
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 14:42
> To: Niemeijer, R.A.; Foust
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> I have found one series of 3 articles that might be interesting for such
> situation:
>
> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>
> But I don't know if you could achieve that easily (if someone knows a way or
> tool I would be interested too in knowing it). ANTLR parsers generated from
> grammars are not 'self-aware' if I understood correctly: they are LR parsers
> but don't hold as such a graph based on the grammar that could determine the
> next allowed token.
>
> Yours sincerely,
>
> Stanislas Herman.
>



      _____________________________________________________________________________ 
Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr

From o.b.fischer at gmx.de  Fri Aug 15 02:47:38 2008
From: o.b.fischer at gmx.de (Oliver B. Fischer)
Date: Fri, 15 Aug 2008 11:47:38 +0200
Subject: [antlr-interest] Using labels in actions of a tree parser
In-Reply-To: <002801c8fd89$af878420$0e968c60$@com>
References: <48A2EF66.7030201@gmx.de> <48A34C56.10000@gmx.de>
	<002801c8fd89$af878420$0e968c60$@com>
Message-ID: <48A550BA.60601@gmx.de>

Hello Foust,

thank you for your hint. I didn't read this section properly.

Bye

Oliver

Foust schrieb:
> Oliver,
> 
>> But is there a way to get access to the tree node itself? I tried to
>> use the ".tree" attribute, but it leads to an compile error, since .tree
>> isn't translated to ".getTree()".
>>
>> So, what can I do to get the tree node?
> 
> Although it's counter-intuitive, there is no ".tree" attribute on nodes of a
> tree grammar (only in the parser). See p. 132. Although $t does represent
> your 'term' tree node, only "text", "start", and "st" are defined.
> 
> Brent
> 
-- 
Oliver B. Fischer, Sch?nhauser Allee 64, 10437 Berlin
Tel. +49 30 44793251, Mobil: +49 178 7903538
Mail: o.b.fischer at gmx.de Blog: http://www.sw-blog.net


From g.vandeglind at beinformed.nl  Fri Aug 15 04:34:57 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Fri, 15 Aug 2008 13:34:57 +0200
Subject: [antlr-interest] ArrayIndexOutOfBoundsException in ANTLR 3.0
In-Reply-To: <35A3487A-7A02-4BA7-B7BD-ED3766FEA4F9@classdump.org>
References: <07DC8905ABA90249A64135D427E2F70F03274FDA9D@apbiex01.beinformed.nl>
	<35A3487A-7A02-4BA7-B7BD-ED3766FEA4F9@classdump.org>
Message-ID: <07DC8905ABA90249A64135D427E2F70F03274FDB73@apbiex01.beinformed.nl>

Hi Kay and all,

I have tested it in 3.1 and it seems fixed.
Although version 3.1 causes some of my unit tests to fail now, I don't get an ArrayIndexOutOfBoundsException anymore for this particular test.

I will go on now to explore why some tests fail.

Thanks!

Regards, Gerard


Hi!

On Aug 14, 2008, at 2:57 PM, Gerard van de Glind wrote:

> If I try to parse an invalid expression, e.g. 'DATE_FUNC()' then I
> get the following stacktrace:
>
>                  java.lang.ArrayIndexOutOfBoundsException: -1
>                  at org.antlr.runtime.DFA.predict(DFA.java:44)


Could you try the grammar again with the recently released 3.1? The
bug database shows a couple of DFA related fixes (although quite a
while ago) which might still be in 3.0.1.
If it's still happening, could you provide the DFA for this decision?
You can generate it with running:

java org.antlr.Tool -dfa YourGrammar.g

That will produce a lot of .dot files in that directory. They are
numbered for each decision point, you can get the number in question
from BIExpressionParser.java:5548 (note the dfaXXX.predict() line).
The files will be name "GrammarName".dec-XXX.dot.
That will help to tell what's going wrong there.

 From a glance at DFA.java:44 it appears to be related to the
predicate. That DFA should have a special state but it's missing.

cheers,
-k
--
Kay R?pke
http://classdump.org/







From jaluber at gmx.de  Fri Aug 15 05:14:40 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 15 Aug 2008 14:14:40 +0200
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <7f8924df0808142023h239856a3ya3a452800709fe53@mail.gmail.com>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>	<E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>
	<7f8924df0808142023h239856a3ya3a452800709fe53@mail.gmail.com>
Message-ID: <48A57330.2080509@gmx.de>

Ian Kaplan schrieb:
> 
> 
>     /
>     Performance is not bad with backtracking and memoization; linear
>     time cost.  Still better to let ANTLR predict with a simple DFA
>     rather than backtracking.  Also can set backtracking per rule./
> 
> 
> 
>        Only a part of my grammar requires more than two symbols of look 
> a head.  How do you turn on backtracking on a per rule basis?  I've got 
> it set globally and it may not need to be.

You can put an options block into a rule definition like so (didn't test 
it, so syntax may be a bit off):

rule
options {
backtracking=true;
memoize=true;
}
: otherRule;

Johannes

> 
>   Thanks,
> 
>   Ian
> 


From jaluber at gmx.de  Fri Aug 15 05:52:39 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 15 Aug 2008 14:52:39 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all
 valid	options for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
Message-ID: <48A57C17.3020507@gmx.de>

Niemeijer, R.A. schrieb:
> Right, I think I've localized all the data I need. All you need is a bit of reflection. All the bitsets that determine the possible next tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous token (can be gotten from the Parser's state.following variable), {1} is the name of the method the NoViableAltException is generated in (use something like MethodBase.GetCurrentMethod().Name) and {2} is un unimportant 3-digit number. So get the list of all Bitsets of the Parser via reflection and choose the one that starts with FOLLOW_{0}_in_{1}.
> 
> However, in order to be able to use this I have to insert this code at the point the NoViableAltException is thrown so I can dump the list of tokens in its grammarDecisionDescription field. That means overriding all the bits of code that look like this:
> 
> NoViableAltException nvae_d1s2 =
>     new NoViableAltException("", 1, 2, input);
> 
>     throw nvae_d1s2;
> 
> Now obviously this can be done manually, but then you'd lose it after every grammar generation. So my question: is there a way to override this part of the generated grammar?

The only way I know is to modify the generation templates, but you have 
then to adapt them after each ANTLR upgrade. Maybe Ter is willing to add 
another overwritable region, which can be referenced in a user template. 
This would require a change in the tool itself, so it does look for such 
a template file.

Johannes
> 
> Thanks.
> 
> -----Original Message-----
> From: Niemeijer, R.A. 
> Sent: donderdag 14 augustus 2008 17:39
> To: 'Stanislas Rusinsky'; Thomas Brandon
> Cc: antlr-interest at antlr.org
> Subject: RE: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?
> 
> The FOLLOW_ variables do indeed seem to contain all the data I need. I'm going to have a look at it tomorrow to see if I can convert to bitset data to something more useful to me.
> 
> -----Original Message-----
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr] 
> Sent: woensdag 13 augustus 2008 19:27
> To: Thomas Brandon; Niemeijer, R.A.
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?
> 
> oops, when making such attention mistakes I feel like hiding under the table :) they are LL of course
> 
> Mr. Niemeijer, could you please keep me informed if you reach a satisfactory solution with the "FOLLOW_" hint? I am interested too in that topic.
> 
> Stanislas.
> 
> 
> 
> ----- Message d'origine ----
> De : Thomas Brandon <tbrandonau at gmail.com>
> ? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
> Cc : antlr-interest at antlr.org
> Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
> Objet : Re: [antlr-interest] Re : How to get a list of all valid options for the next token?
> 
> ANTLR grammars are LL not LR, but they are recursive descent and thus
> don't use an explicit internal representation of the grammar to
> control parse decisions. They do however have follow sets available at
> parse time, used for error recovery and reporting. See the various
> FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
> and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
> may be able to get what you need from them. Though as they only
> support a limited purpose they may collapse alternatives you need to
> keep distinct.
> Another option would be to create a custom generator that would then
> have the richer information ANTLR uses at generation time.
> 
> Tom.
> 
> On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
>> Well, so much for that idea then :(
>>
>> Guess the only way to do this then is to indeed duplicate the knowledge
>> inherent in the parser to a different checker. Oh well.
>>
>>
>>
>> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
>> Sent: woensdag 13 augustus 2008 14:42
>> To: Niemeijer, R.A.; Foust
>> Cc: antlr-interest at antlr.org
>> Subject: Re : [antlr-interest] How to get a list of all valid options for
>> the next token?
>>
>>
>>
>> I have found one series of 3 articles that might be interesting for such
>> situation:
>>
>> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>>
>> But I don't know if you could achieve that easily (if someone knows a way or
>> tool I would be interested too in knowing it). ANTLR parsers generated from
>> grammars are not 'self-aware' if I understood correctly: they are LR parsers
>> but don't hold as such a graph based on the grammar that could determine the
>> next allowed token.
>>
>> Yours sincerely,
>>
>> Stanislas Herman.
>>
> 
> 
> 
>       _____________________________________________________________________________ 
> Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr
> 


From Larry.Jones at aspentech.com  Fri Aug 15 05:55:37 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Fri, 15 Aug 2008 07:55:37 -0500
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <002901c8fe50$db20fc70$9162f550$@com>
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FF0@houmail3.corp.aspentech.com>

Interestingly, when I tried yesterday, I found that I could connect to a
Java targeted parser grammar on port 49153; however, when I tried to
connect to a tree grammar, I could neither connect to a C# application
nor a Java application.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Foust
Sent: Thursday, August 14, 2008 4:01 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
Process


Johannes wrote:
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is

> that somehow the port change didn't make into the distribution. Ter 
> has to change the defalut port from 0xC001 to 0xBFCC, as well all the 
> targets.

AntlrWorks 1.2b5 won't connect for me anymore on *any* port. It thinks
49153 is in use, but trying 49100 used to work. Now it just times out.
Every time. After a reboot. It doesn't matter. Even for a test grammar
like:

	grammar test;
	start : 'hello';

If debugging from within AntlrWorks, does the port chosen need to match
what was compiled into Antrl, or can could AntlrWorks just search for an
unused port each time the Debug button was clicked?

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Thursday, August 14, 2008 5:00 AM
> To: Jones, Larry
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# 
> Process
> 
> Jones, Larry schrieb:
> > I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a 
> > parser generated in C#. I think I have followed the steps described
> in
> > the wiki. I:
> > - Built a lexer / parser using the -debug option. (I verified that
> the
> > generated parser inherits DebugParser.)
> > - Built an executable.
> > - Verified that it accepts command line input.
> > - Started in from a cmd window. It "hangs" waiting for console 
> > input.
> > - Started ANTLRWorks in a separate window.
> > - Opened the grammar used to generate my parser.
> > - Invoked Debugger | Remote Debug.
> > - When ANTLRWorks presents the connection dialog, I accepted the
> defaults.
> >
> > After a few minutes, ANTLRWorks displays an error message that it 
> > "Cannot launch the debugger" because of a "Time-out waiting to
> connect
> > to the remote parser." The window from which I launched ANTLRWorks 
> > contains a number of "java.net.ConnectException: Connection refused:

> > connect" messages.
> >
> > What additional steps must I take to use ANTLRWorks 1.2b5 to debug a

> > remote C# parser?
> >
> > Thanks.
> 
> Does ANTLRworks demand the port 49100 instead 49153? Then the issue is

> that somehow the port change didn't make into the distribution. Ter 
> has to change the defalut port from 0xC001 to 0xBFCC, as well all the 
> targets. The workaround is to change the port manually, until 3.1.1, 
> that is.
> 
> Johannes
> >
> >
> > *--*
> >
> > *Lawrence Allan Jones*
> > *Senior Developer / Technical Advisor*
> > Aspen Technology, Inc.
> > 2500 CityWest Blvd. Suite 1500
> > Houston, Texas 77042
> > USA
> > 281-504-3324 (work)
> > 281-504-3395 (fax)
> > larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
> > www.aspentech.com <http://www.aspentech.com/>
> >
> >
> >
> >
> >
> > This e-mail and any attachments are intended only for use by the
> > addressee(s) named herein and may contain legally privileged and/or 
> > confidential information. If you are not the intended recipient of
> this
> > e-mail, you are hereby notified any dissemination, distribution or 
> > copying of this email, and any attachments thereto, is strictly 
> > prohibited. If you receive this email in error please immediately
> notify
> > the sender and permanently delete the original copy and any copy of
> any
> > e-mail, and any printout thereof.


This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.

From antlr at jazillian.com  Fri Aug 15 08:12:15 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 15 Aug 2008 11:12:15 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808150801.54041.atlan@gmx.li>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>
	<200808150801.54041.atlan@gmx.li>
Message-ID: <48A59CCF.2090400@jazillian.com>

Marc,
This "writing by hand" article is referring to walking a tree-like data structure (the AST).
Pretty much every programmer already knows how to do this by hand:

void walk(Tree t) {
  doSomething(t);
  for (Tree child: t.children()) {
     walk(child);
  }
}

By contrast, there are only a handful of people who know how to do that same thing
with an ANTLR treewalker.

The "manipulating an AST" work of building a translator is quite a different
job than the "build a lexer/parser" part of it.

Andy

Marc Bischof wrote:
> Hello Andy,
> 
> in your article you wrote:
> 
>> I think the approach that you'll prefer depends on your background. If you're 
>> already intimately familiar with the ":", "[". "]", "*" , "{", "}", and ";" 
>> constructs in the first approach, you will prefer the terse approach. On    
>> the other hand, if you don't want to be bothered with all that "extra      
>> syntax", you'll prefer the more verbose "plain Java" approach. 
> 
> I think, if someone is not familiar with grammar stuff and has not the 
> background for writing translators, the last thing he/she should do is 
> writing it by hand.
> ...may be to get familiar with it, but not for a productive solution.
> 
> Cheers Marc
> 


From simone.tripodi at gmail.com  Fri Aug 15 08:22:35 2008
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Fri, 15 Aug 2008 17:22:35 +0200
Subject: [antlr-interest] gunit and maven surefire
Message-ID: <4173dc210808150822r6727f03rbfbc21b736494979@mail.gmail.com>

Hi all ANTRL's folks,
I've been porting the SPARQL grammar into Maven2 platform, I would
like to know if is there a way to integrae gunit into maven2 surefire
report.
Can anyone help me please?
Thanks in advance,
Simone

-- 
My LinkedIn profile: http://www.linkedin.com/in/simonetripodi
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi
My Del.icio.us: http://del.icio.us/simone.tripodi

From parrt at cs.usfca.edu  Fri Aug 15 09:28:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 09:28:06 -0700
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <48A57330.2080509@gmx.de>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>	<E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>
	<7f8924df0808142023h239856a3ya3a452800709fe53@mail.gmail.com>
	<48A57330.2080509@gmx.de>
Message-ID: <9FBA2422-2ED4-4ED1-B3F3-9DA165C30E13@cs.usfca.edu>

ANTLR will actually figure it out for you, but it can't do so for  
memoization...that can be very expensive on every rule ref.  Well,  
actually only does it if you are backtracking...hmm...maybe it's ok.

Ter
On Aug 15, 2008, at 5:14 AM, Johannes Luber wrote:

> Ian Kaplan schrieb:
>>    /
>>    Performance is not bad with backtracking and memoization; linear
>>    time cost.  Still better to let ANTLR predict with a simple DFA
>>    rather than backtracking.  Also can set backtracking per rule./
>>       Only a part of my grammar requires more than two symbols of  
>> look a head.  How do you turn on backtracking on a per rule basis?   
>> I've got it set globally and it may not need to be.
>
> You can put an options block into a rule definition like so (didn't  
> test it, so syntax may be a bit off):
>
> rule
> options {
> backtracking=true;
> memoize=true;
> }
> : otherRule;
>
> Johannes
>
>>  Thanks,
>>  Ian
>


From parrt at cs.usfca.edu  Fri Aug 15 09:30:02 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 09:30:02 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A59CCF.2090400@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>
	<200808150801.54041.atlan@gmx.li> <48A59CCF.2090400@jazillian.com>
Message-ID: <8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>


On Aug 15, 2008, at 8:12 AM, Andy Tripp wrote:

> Marc,
> This "writing by hand" article is referring to walking a tree-like  
> data structure (the AST).
> Pretty much every programmer already knows how to do this by hand:
>
> void walk(Tree t) {
> doSomething(t);
> for (Tree child: t.children()) {
>    walk(child);
> }
> }

But empirically, people don't know how to do language stuff so that  
must not be enough as you clearly know from your very complicated and  
nice stuff :)

> By contrast, there are only a handful of people who know how to do  
> that same thing
> with an ANTLR treewalker.

Coincidental with the people that have built language stuff ;)

> The "manipulating an AST" work of building a translator is quite a  
> different
> job than the "build a lexer/parser" part of it.

Yep.  i'm mostly a fan of walking not rewriting ASts by the way...that  
gets WAY too hard.  Further, Andy has a nice approach of rewriting.   
Expect ANTLRMorph, by Leon Su, this Fall!

Ter

From cieslewski at hcs.ufl.edu  Fri Aug 15 10:08:59 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Fri, 15 Aug 2008 13:08:59 -0400
Subject: [antlr-interest] Problem with dynamic attribute scopes after
	upgrade to 3.1
Message-ID: <7aa837f80808151008o321f29c8sdad3023f9fb580c5@mail.gmail.com>

Hey All,

I have encountered a little problem with the dynamic attribute scopes
when upgraded to 3.1 (from 3.1b1 probably).  In my grammar I was using
dynamic scopes communicate with distant rules.  In particular to allow
the lower level rule (id) to identify  which rule has invoked it
(type1 or type2).  In previous versions this grammar used to work:

expr
	: (type1 | type2)*
	;	
type1
scope{
	boolean isType1;
}
@init{
	$type1::isType1 = true;
}
	: INT id
	;
type2
scope{
	boolean isType2;
}
@init{
	$type2::isType2 = true;
}
	: id
	;	
id
	:	ID
	{
		if($type1::isType1==true)
		{
			System.out.println("TYPE1");
		}
		if($type2::isType2==true)
		{
			System.out.println("TYPE2");
		}
	}
	;

Unfortunately in the 3.1 it gives me run-time errors:
Exception in thread "main" java.util.EmptyStackException
	at java.util.Stack.peek(Stack.java:85)
	at G5Parser.id(G5Parser.java:292)
	at G5Parser.type1(G5Parser.java:186)
	at G5Parser.expr(G5Parser.java:107)
	at __Test__.main(__Test__.java:14)

I compared code generated in the two versions and it seems that the
following changed:
FROM:
if(((type1_stack.size()>0)?((type1_scope)type1_stack.peek()).isType1:false)==true)
{
     System.out.println("TYPE1");
}
TO:
if(((type1_scope)type1_stack.peek()).isType1==true)
{
     System.out.println("TYPE1");
}
The new code does not protect against checking the Stack when empty.

I am curious what is the reason for this change?
Is there a better way to accomplish something similar?

Thanks

Greg

-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From antlr at jazillian.com  Fri Aug 15 10:13:37 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 15 Aug 2008 13:13:37 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>
	<200808150801.54041.atlan@gmx.li> <48A59CCF.2090400@jazillian.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
Message-ID: <48A5B941.8020202@jazillian.com>

Terence Parr wrote:
> 
> On Aug 15, 2008, at 8:12 AM, Andy Tripp wrote:
> 
>> Marc,
>> This "writing by hand" article is referring to walking a tree-like 
>> data structure (the AST).
>> Pretty much every programmer already knows how to do this by hand:
>>
>> void walk(Tree t) {
>> doSomething(t);
>> for (Tree child: t.children()) {
>>    walk(child);
>> }
>> }
> 
> But empirically, people don't know how to do language stuff so that must 
> not be enough as you clearly know from your very complicated and nice 
> stuff :)

Right. Whoever writes the doSomething() method shown above is going to
have to know what the AST looks like, regardless of whether the doSomething()
call is embedded in a treewalker.g file or plain old code.

> 
>> By contrast, there are only a handful of people who know how to do 
>> that same thing
>> with an ANTLR treewalker.
> 
> Coincidental with the people that have built language stuff ;)

There are an awful lot of parser/lexer tools out there besides ANTLR.
I would guess that of all the people doing AST manipulation, few of them
use ANTLR treewalkers to do it.

> 
>> The "manipulating an AST" work of building a translator is quite a 
>> different
>> job than the "build a lexer/parser" part of it.
> 
> Yep.  i'm mostly a fan of walking not rewriting ASts by the way...that 
> gets WAY too hard.

Maybe I'm misunderstanding you, but walking vs. rewriting is like
apples vs. oranges (or "the drive to and from work" vs. "going to
work all day"). Walking is what you do when there's (almost) nothing
to do.

Further, Andy has a nice approach of rewriting.  
> Expect ANTLRMorph, by Leon Su, this Fall!

To pick an AST manipulation rule at random...consider that when translating
C to Java, you can assign a zero value to any C struct. The C struct will become
a Java class, and the zero needs to change to "null". Where in the AST
do we need to check? Here are a few ways to "assign 0" in C:

* simple assignment:   a = NULL;    (where we have #define NULL 0 somewhere)
* function call arg:   f(0);        (where f's first arg is some struct type)
* ternary operator:    a = b ? 0 : 0; 
* function return:     a = f();     (where f() returns struct type)

So if we have a checkForZeroAssignment() method, calls to it will have to be inserted
in at least four distinct places in our Ctree.g file. And checkForZero() will
have to "know" where it's being called from anyway (for example, in the
simple assignment case, it may have to search deep into nested curly braces
for array assignment).

So which way is best to slice the problem? We can have a
ZeroAssignmentRule class (along with a couple hundred others to do other things)
that searches the AST for these four cases. Or
we can have a Ctree.g that, at the ASSIGN node calls checkForZeroAssignment()
and a bunch (20? 50?) of other checks to do other things.

I'll be pretty impressed if ANTLRMorph makes this kind of work any easier,
as none of the other AST-rewrite systems seem to.


...all just my opinion, of course ;)
Andy
> 
> Ter
> 


From jimi at temporal-wave.com  Fri Aug 15 10:21:46 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Aug 2008 10:21:46 -0700
Subject: [antlr-interest] Problem with dynamic attribute scopes
	after	upgrade to 3.1
In-Reply-To: <7aa837f80808151008o321f29c8sdad3023f9fb580c5@mail.gmail.com>
References: <7aa837f80808151008o321f29c8sdad3023f9fb580c5@mail.gmail.com>
Message-ID: <1218820906.7423.18.camel@jimi>

On Fri, 2008-08-15 at 13:08 -0400, Grzegorz Cieslewski wrote:

> Hey All,
> 
> I have encountered a little problem with the dynamic attribute scopes
> when upgraded to 3.1 (from 3.1b1 probably).  In my grammar I was using
> dynamic scopes communicate with distant rules.  In particular to allow
> the lower level rule (id) to identify  which rule has invoked it
> (type1 or type2).  In previous versions this grammar used to work:
> 
> expr
> 	: (type1 | type2)*
> 	;	
> type1
> scope{
> 	boolean isType1;
> }
> @init{
> 	$type1::isType1 = true;
> }
> 	: INT id
> 	;
> type2
> scope{
> 	boolean isType2;
> }
> @init{
> 	$type2::isType2 = true;
> }
> 	: id
> 	;	
> id
> 	:	ID
> 	{
> 		if($type1::isType1==true)
> 		{
> 			System.out.println("TYPE1");
> 		}
> 		if($type2::isType2==true)
> 		{
> 			System.out.println("TYPE2");
> 		}
> 	}
> 	;
> 
> Unfortunately in the 3.1 it gives me run-time errors:
> Exception in thread "main" java.util.EmptyStackException
> 	at java.util.Stack.peek(Stack.java:85)
> 	at G5Parser.id(G5Parser.java:292)
> 	at G5Parser.type1(G5Parser.java:186)
> 	at G5Parser.expr(G5Parser.java:107)
> 	at __Test__.main(__Test__.java:14)
> 
> I compared code generated in the two versions and it seems that the
> following changed:
> FROM:
> if(((type1_stack.size()>0)?((type1_scope)type1_stack.peek()).isType1:false)==true)
> {
>      System.out.println("TYPE1");
> }
> TO:
> if(((type1_scope)type1_stack.peek()).isType1==true)
> {
>      System.out.println("TYPE1");
> }
> The new code does not protect against checking the Stack when empty.
> 
> I am curious what is the reason for this change?


This was deliberately changed because the previous behavior was very
prone to generating silent bugs, as your grammar shows. In fact the bug
was so likely that even the example suffered from it. Actually it might
still be in the Java version of the example. What it means is that your
grammar has found a way to that point without stacking a new scope
level. Because flags like this would then appear to be not set (rather
than not there as they do now) rules and predicates and so on would
silently turn off when in fact it is a bug in the grammar.

So, if you want to be able to call this without a stack in place, then
you code to see if the stack is empty yourself, then your logic is
explicit and accurate to what you wanted.

Obviously here, whichever scope is in play when you get to id, will have
a scope in force, whereas the other one, by definition, will not and
will always give you an exception.


> Is there a better way to accomplish something similar?


1) You could not use the flags at all - you can pass a parameter to id
to indicate the type.
2) You could not use flags and just change the type of the returned ID,
by getting the token from the return rule's $start and changing it
(assuming AST output);
3) You can (and probably should) leave resolution of such things to the
tree parser.
4) Move the scope to the expr rule and use an enum rather than separate
types. type1 sets $expr::type = TYPE1; type2 to its type. The id rule
then checks $expr::type

Jim

> 
> Thanks
> 
> Greg
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080815/a00b1995/attachment.html 

From m_mayur at hotmail.com  Fri Aug 15 10:58:34 2008
From: m_mayur at hotmail.com (Mayur M)
Date: Fri, 15 Aug 2008 23:28:34 +0530
Subject: [antlr-interest] Unsubscribe
Message-ID: <BLU117-W37A5C78BFE6B497EE497B68F6D0@phx.gbl>

Hi, 
 
Please unsubscribe me from this group.
 
Regards,
Mayur M
_________________________________________________________________
Chose your Life Partner? Join MSN Matrimony FREE
http://www.shaadi.com/msn/matrimony.php 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080815/4310cf5b/attachment.html 

From parrt at cs.usfca.edu  Fri Aug 15 11:41:44 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 11:41:44 -0700
Subject: [antlr-interest] Supplying my on (Homogeneous) Tree Class
In-Reply-To: <E1KTkNy-00075p-SK@gecko.home.org>
References: <E1KTkNy-00075p-SK@gecko.home.org>
Message-ID: <6250DFE2-B1EA-452B-AC4D-C4987E1F4348@cs.usfca.edu>


On Aug 14, 2008, at 2:29 PM, John B. Brodie wrote:
> But CommonErrorNode extends CommonTree and can not be cast to my tree
> node type (which the generated code does when errorNode() is not
> overridden in the supplied tree adapter) because my node also extends
> CommonTree and casting between siblings in the inheritance hiearchy is
> not permissible in Java (i guess).

Just make your own error node that subclasses your tree :)

Ter

From parrt at cs.usfca.edu  Fri Aug 15 11:46:58 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 11:46:58 -0700
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
Message-ID: <BA0CC103-A36D-4DCB-AB02-9216F724260D@cs.usfca.edu>


On Aug 15, 2008, at 2:28 AM, Niemeijer, R.A. wrote:

> Right, I think I've localized all the data I need. All you need is a  
> bit of reflection. All the bitsets that determine the possible next  
> tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous  
> token (can be gotten from the Parser's state.following variable),  
> {1} is the name of the method the NoViableAltException is generated  
> in (use something like MethodBase.GetCurrentMethod().Name) and {2}  
> is un unimportant 3-digit number. So get the list of all Bitsets of  
> the Parser via reflection and choose the one that starts with  
> FOLLOW_{0}_in_{1}.
>
> However, in order to be able to use this I have to insert this code  
> at the point the NoViableAltException is thrown so I can dump the  
> list of tokens in its grammarDecisionDescription field. That means  
> overriding all the bits of code that look like this:
>
> NoViableAltException nvae_d1s2 =
>    new NoViableAltException("", 1, 2, input);
>
>    throw nvae_d1s2;
>
> Now obviously this can be done manually, but then you'd lose it  
> after every grammar generation. So my question: is there a way to  
> override this part of the generated grammar?

Set @rulecatch {...} to output the list or manually add a catch in  
each rule. would that work?

Ter


From parrt at cs.usfca.edu  Fri Aug 15 12:07:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 12:07:40 -0700
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
Message-ID: <D23E06F6-FA13-4225-AD2D-716DDC3942CB@cs.usfca.edu>

Ok,I added a faq entry:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=11567208

  see if this helps.

Ter
On Aug 15, 2008, at 2:28 AM, Niemeijer, R.A. wrote:

> Right, I think I've localized all the data I need. All you need is a  
> bit of reflection. All the bitsets that determine the possible next  
> tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous  
> token (can be gotten from the Parser's state.following variable),  
> {1} is the name of the method the NoViableAltException is generated  
> in (use something like MethodBase.GetCurrentMethod().Name) and {2}  
> is un unimportant 3-digit number. So get the list of all Bitsets of  
> the Parser via reflection and choose the one that starts with  
> FOLLOW_{0}_in_{1}.
>
> However, in order to be able to use this I have to insert this code  
> at the point the NoViableAltException is thrown so I can dump the  
> list of tokens in its grammarDecisionDescription field. That means  
> overriding all the bits of code that look like this:
>
> NoViableAltException nvae_d1s2 =
>    new NoViableAltException("", 1, 2, input);
>
>    throw nvae_d1s2;
>
> Now obviously this can be done manually, but then you'd lose it  
> after every grammar generation. So my question: is there a way to  
> override this part of the generated grammar?
>
> Thanks.
>
> -----Original Message-----
> From: Niemeijer, R.A.
> Sent: donderdag 14 augustus 2008 17:39
> To: 'Stanislas Rusinsky'; Thomas Brandon
> Cc: antlr-interest at antlr.org
> Subject: RE: Re : [antlr-interest] Re : How to get a list of all  
> valid options for the next token?
>
> The FOLLOW_ variables do indeed seem to contain all the data I need.  
> I'm going to have a look at it tomorrow to see if I can convert to  
> bitset data to something more useful to me.
>
> -----Original Message-----
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 19:27
> To: Thomas Brandon; Niemeijer, R.A.
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] Re : How to get a list of all valid  
> options for the next token?
>
> oops, when making such attention mistakes I feel like hiding under  
> the table :) they are LL of course
>
> Mr. Niemeijer, could you please keep me informed if you reach a  
> satisfactory solution with the "FOLLOW_" hint? I am interested too  
> in that topic.
>
> Stanislas.
>
>
>
> ----- Message d'origine ----
> De : Thomas Brandon <tbrandonau at gmail.com>
> ? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
> Cc : antlr-interest at antlr.org
> Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
> Objet : Re: [antlr-interest] Re : How to get a list of all valid  
> options for the next token?
>
> ANTLR grammars are LL not LR, but they are recursive descent and thus
> don't use an explicit internal representation of the grammar to
> control parse decisions. They do however have follow sets available at
> parse time, used for error recovery and reporting. See the various
> FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
> and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
> may be able to get what you need from them. Though as they only
> support a limited purpose they may collapse alternatives you need to
> keep distinct.
> Another option would be to create a custom generator that would then
> have the richer information ANTLR uses at generation time.
>
> Tom.
>
> On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl 
> > wrote:
>> Well, so much for that idea then :(
>>
>> Guess the only way to do this then is to indeed duplicate the  
>> knowledge
>> inherent in the parser to a different checker. Oh well.
>>
>>
>>
>> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
>> Sent: woensdag 13 augustus 2008 14:42
>> To: Niemeijer, R.A.; Foust
>> Cc: antlr-interest at antlr.org
>> Subject: Re : [antlr-interest] How to get a list of all valid  
>> options for
>> the next token?
>>
>>
>>
>> I have found one series of 3 articles that might be interesting for  
>> such
>> situation:
>>
>> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>>
>> But I don't know if you could achieve that easily (if someone knows  
>> a way or
>> tool I would be interested too in knowing it). ANTLR parsers  
>> generated from
>> grammars are not 'self-aware' if I understood correctly: they are  
>> LR parsers
>> but don't hold as such a graph based on the grammar that could  
>> determine the
>> next allowed token.
>>
>> Yours sincerely,
>>
>> Stanislas Herman.
>>
>
>
>
>       
> _____________________________________________________________________________
> Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr


From parrt at cs.usfca.edu  Fri Aug 15 12:10:30 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 12:10:30 -0700
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <690A62A322DBE24FAD5208C158E5DF2E013A6FF0@houmail3.corp.aspentech.com>
References: <690A62A322DBE24FAD5208C158E5DF2E013A6FF0@houmail3.corp.aspentech.com>
Message-ID: <4A45C6AF-2A1B-42BC-B278-2FEF206728BA@cs.usfca.edu>

you can only debug one grammar at a time...make sure -debug on tree  
but not parser grammar :)

Ter
On Aug 15, 2008, at 5:55 AM, Jones, Larry wrote:

> Interestingly, when I tried yesterday, I found that I could connect  
> to a
> Java targeted parser grammar on port 49153; however, when I tried to
> connect to a tree grammar, I could neither connect to a C# application
> nor a Java application.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Foust
> Sent: Thursday, August 14, 2008 4:01 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
> Process
>
>
> Johannes wrote:
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue  
>> is
>
>> that somehow the port change didn't make into the distribution. Ter
>> has to change the defalut port from 0xC001 to 0xBFCC, as well all the
>> targets.
>
> AntlrWorks 1.2b5 won't connect for me anymore on *any* port. It thinks
> 49153 is in use, but trying 49100 used to work. Now it just times out.
> Every time. After a reboot. It doesn't matter. Even for a test grammar
> like:
>
> 	grammar test;
> 	start : 'hello';
>
> If debugging from within AntlrWorks, does the port chosen need to  
> match
> what was compiled into Antrl, or can could AntlrWorks just search  
> for an
> unused port each time the Debug button was clicked?
>
> Brent
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Johannes Luber
>> Sent: Thursday, August 14, 2008 5:00 AM
>> To: Jones, Larry
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
>> Process
>>
>> Jones, Larry schrieb:
>>> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a
>>> parser generated in C#. I think I have followed the steps described
>> in
>>> the wiki. I:
>>> - Built a lexer / parser using the -debug option. (I verified that
>> the
>>> generated parser inherits DebugParser.)
>>> - Built an executable.
>>> - Verified that it accepts command line input.
>>> - Started in from a cmd window. It "hangs" waiting for console
>>> input.
>>> - Started ANTLRWorks in a separate window.
>>> - Opened the grammar used to generate my parser.
>>> - Invoked Debugger | Remote Debug.
>>> - When ANTLRWorks presents the connection dialog, I accepted the
>> defaults.
>>>
>>> After a few minutes, ANTLRWorks displays an error message that it
>>> "Cannot launch the debugger" because of a "Time-out waiting to
>> connect
>>> to the remote parser." The window from which I launched ANTLRWorks
>>> contains a number of "java.net.ConnectException: Connection refused:
>
>>> connect" messages.
>>>
>>> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
>
>>> remote C# parser?
>>>
>>> Thanks.
>>
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue  
>> is
>
>> that somehow the port change didn't make into the distribution. Ter
>> has to change the defalut port from 0xC001 to 0xBFCC, as well all the
>> targets. The workaround is to change the port manually, until 3.1.1,
>> that is.
>>
>> Johannes
>>>
>>>
>>> *--*
>>>
>>> *Lawrence Allan Jones*
>>> *Senior Developer / Technical Advisor*
>>> Aspen Technology, Inc.
>>> 2500 CityWest Blvd. Suite 1500
>>> Houston, Texas 77042
>>> USA
>>> 281-504-3324 (work)
>>> 281-504-3395 (fax)
>>> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
>>> www.aspentech.com <http://www.aspentech.com/>
>>>
>>>
>>>
>>>
>>>
>>> This e-mail and any attachments are intended only for use by the
>>> addressee(s) named herein and may contain legally privileged and/or
>>> confidential information. If you are not the intended recipient of
>> this
>>> e-mail, you are hereby notified any dissemination, distribution or
>>> copying of this email, and any attachments thereto, is strictly
>>> prohibited. If you receive this email in error please immediately
>> notify
>>> the sender and permanently delete the original copy and any copy of
>> any
>>> e-mail, and any printout thereof.
>
>
> This e-mail and any attachments are intended only for use by the  
> addressee(s) named herein and may contain legally privileged and/or  
> confidential information. If you are not the intended recipient of  
> this e-mail, you are hereby notified any dissemination, distribution  
> or copying of this email, and any attachments thereto, is strictly  
> prohibited. If you receive this email in error please immediately  
> notify the sender and permanently delete the original copy and any  
> copy of any e-mail, and any printout thereof.


From Fred.Brisard at ca.com  Fri Aug 15 12:15:38 2008
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Fri, 15 Aug 2008 15:15:38 -0400
Subject: [antlr-interest] AntlrWorks and Antlr 3.1
Message-ID: <7D50572C73BC634F92EE211BFF16F4A10664B900@USILMS12.ca.com>

Is AntlrWorks 1.1.7 and Antlr 3.1 compatible?

If so, what is the easiest way to integrate them?  Right now I'm using
AntlrWorks with the embedded Antlr 3.0.

Fred Brisard


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080815/deab25c0/attachment.html 

From parrt at cs.usfca.edu  Fri Aug 15 12:17:16 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 12:17:16 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A5B941.8020202@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>
	<200808150801.54041.atlan@gmx.li> <48A59CCF.2090400@jazillian.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com>
Message-ID: <8549F83F-4291-43DF-9E91-32B3AD99ED2F@cs.usfca.edu>


On Aug 15, 2008, at 10:13 AM, Andy Tripp wrote:
> There are an awful lot of parser/lexer tools out there besides ANTLR.
> I would guess that of all the people doing AST manipulation, few of  
> them
> use ANTLR treewalkers to do it.

I don't recommend rewriting asts unless you stay in same tree structure.

>>> The "manipulating an AST" work of building a translator is quite a  
>>> different
>>> job than the "build a lexer/parser" part of it.
>> Yep.  i'm mostly a fan of walking not rewriting ASts by the  
>> way...that gets WAY too hard.
>
> Maybe I'm misunderstanding you, but walking vs. rewriting is like
> apples vs. oranges (or "the drive to and from work" vs. "going to
> work all day"). Walking is what you do when there's (almost) nothing
> to do.

Except the entire work of the semantic analyzer of a compiler  
etc... ;)  Compute symb tables, flow analysis, well, just about  
everything right? ;)

> Further, Andy has a nice approach of rewriting.
>> Expect ANTLRMorph, by Leon Su, this Fall!
>
> To pick an AST manipulation rule at random...consider that when  
> translating
> C to Java, you can assign a zero value to any C struct. The C struct  
> will become
> a Java class, and the zero needs to change to "null". Where in the AST
> do we need to check? Here are a few ways to "assign 0" in C:
>
> * simple assignment:   a = NULL;    (where we have #define NULL 0  
> somewhere)
> * function call arg:   f(0);        (where f's first arg is some  
> struct type)
> * ternary operator:    a = b ? 0 : 0; * function return:     a =  
> f();     (where f() returns struct type)

You mean pointer to struct not struct right?

> So if we have a checkForZeroAssignment() method, calls to it will  
> have to be inserted
> in at least four distinct places in our Ctree.g file. And  
> checkForZero() will
> have to "know" where it's being called from anyway (for example, in  
> the
> simple assignment case, it may have to search deep into nested curly  
> braces
> for array assignment).
>
> So which way is best to slice the problem? We can have a
> ZeroAssignmentRule class (along with a couple hundred others to do  
> other things)
> that searches the AST for these four cases. Or
> we can have a Ctree.g that, at the ASSIGN node calls  
> checkForZeroAssignment()
> and a bunch (20? 50?) of other checks to do other things.
>
> I'll be pretty impressed if ANTLRMorph makes this kind of work any  
> easier,
> as none of the other AST-rewrite systems seem to.

We don't do AST rewrite.  We go text-to-text.  You would list those  
rules above as you've specified.

assignment:
	"x = NULL;" -> "<x> = null"

expr:
	"f(0)" -> "<f>(null)"

the ternary could be handled a few ways...but it's worse, right?  You  
have a type conflict from int to ptr.  You have to decide what to do  
in that case in general.

ANTLRMorph rocks!

Ter

From parrt at cs.usfca.edu  Fri Aug 15 12:17:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 12:17:54 -0700
Subject: [antlr-interest] AntlrWorks and Antlr 3.1
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A10664B900@USILMS12.ca.com>
References: <7D50572C73BC634F92EE211BFF16F4A10664B900@USILMS12.ca.com>
Message-ID: <912B4A90-2D06-40E8-945E-7309B908A42C@cs.usfca.edu>


On Aug 15, 2008, at 12:15 PM, Brisard, Fred D wrote:

> Is AntlrWorks 1.1.7 and Antlr 3.1 compatible?
>
> If so, what is the easiest way to integrate them?  Right now I?m  
> using AntlrWorks with the embedded Antlr 3.0.
>

Try 1.2b5 but still not perfect...unjar AW and put AW part in path,  
but put 3.1 in path first.
Ter

From jaluber at gmx.de  Fri Aug 15 12:29:00 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 15 Aug 2008 21:29:00 +0200
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <8549F83F-4291-43DF-9E91-32B3AD99ED2F@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>	<200808150801.54041.atlan@gmx.li>
	<48A59CCF.2090400@jazillian.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<8549F83F-4291-43DF-9E91-32B3AD99ED2F@cs.usfca.edu>
Message-ID: <48A5D8FC.8070008@gmx.de>

Terence Parr schrieb:
> 
> On Aug 15, 2008, at 10:13 AM, Andy Tripp wrote:
>> There are an awful lot of parser/lexer tools out there besides ANTLR.
>> I would guess that of all the people doing AST manipulation, few of them
>> use ANTLR treewalkers to do it.
> 
> I don't recommend rewriting asts unless you stay in same tree structure.
> 
>>>> The "manipulating an AST" work of building a translator is quite a 
>>>> different
>>>> job than the "build a lexer/parser" part of it.
>>> Yep.  i'm mostly a fan of walking not rewriting ASts by the 
>>> way...that gets WAY too hard.
>>
>> Maybe I'm misunderstanding you, but walking vs. rewriting is like
>> apples vs. oranges (or "the drive to and from work" vs. "going to
>> work all day"). Walking is what you do when there's (almost) nothing
>> to do.
> 
> Except the entire work of the semantic analyzer of a compiler etc... ;)  
> Compute symb tables, flow analysis, well, just about everything right? ;)
> 
>> Further, Andy has a nice approach of rewriting.
>>> Expect ANTLRMorph, by Leon Su, this Fall!
>>
>> To pick an AST manipulation rule at random...consider that when 
>> translating
>> C to Java, you can assign a zero value to any C struct. The C struct 
>> will become
>> a Java class, and the zero needs to change to "null". Where in the AST
>> do we need to check? Here are a few ways to "assign 0" in C:
>>
>> * simple assignment:   a = NULL;    (where we have #define NULL 0 
>> somewhere)
>> * function call arg:   f(0);        (where f's first arg is some 
>> struct type)
>> * ternary operator:    a = b ? 0 : 0; * function return:     a = 
>> f();     (where f() returns struct type)
> 
> You mean pointer to struct not struct right?
> 
>> So if we have a checkForZeroAssignment() method, calls to it will have 
>> to be inserted
>> in at least four distinct places in our Ctree.g file. And 
>> checkForZero() will
>> have to "know" where it's being called from anyway (for example, in the
>> simple assignment case, it may have to search deep into nested curly 
>> braces
>> for array assignment).
>>
>> So which way is best to slice the problem? We can have a
>> ZeroAssignmentRule class (along with a couple hundred others to do 
>> other things)
>> that searches the AST for these four cases. Or
>> we can have a Ctree.g that, at the ASSIGN node calls 
>> checkForZeroAssignment()
>> and a bunch (20? 50?) of other checks to do other things.
>>
>> I'll be pretty impressed if ANTLRMorph makes this kind of work any 
>> easier,
>> as none of the other AST-rewrite systems seem to.
> 
> We don't do AST rewrite.  We go text-to-text.  You would list those 
> rules above as you've specified.
> 
> assignment:
>     "x = NULL;" -> "<x> = null"
> 
> expr:
>     "f(0)" -> "<f>(null)"
> 
> the ternary could be handled a few ways...but it's worse, right?  You 
> have a type conflict from int to ptr.  You have to decide what to do in 
> that case in general.
> 
> ANTLRMorph rocks!
> 
> Ter

Can ANTLRmorph translate from Java to C# or any other language without 
requiring an analysis depending on an AST?

Johannes

From ramanand_mandayam at yahoo.com  Fri Aug 15 13:33:54 2008
From: ramanand_mandayam at yahoo.com (Ramanand Mandayam)
Date: Fri, 15 Aug 2008 13:33:54 -0700 (PDT)
Subject: [antlr-interest] HELP: Escape sequences and string template
Message-ID: <44144.71289.qm@web33508.mail.mud.yahoo.com>

I have a string token that contains windows file names which use '\' as folder name separators.  In the JAVA target I have rule actions that print out these tokens using the "st" attribute of the node (which in turn is
derived from the "text" attribute of the token).

To escape the '\' itself, the input token string contains the sequence "\\", the intent being to pass the backslash to the final output code that is generated. 

However the output of the string template processing phase deletes the first '\' and prints only the second one. When the generated code is processed as a JAVA file the compiler (as it should) generates errors complaining about invalid unicode characters.

Does the string template process need some special treatment when dealing with '\' characters.

Cheers

Ramanand



      

From kroepke at classdump.org  Fri Aug 15 13:49:50 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 15 Aug 2008 22:49:50 +0200
Subject: [antlr-interest] HELP: Escape sequences and string template
In-Reply-To: <44144.71289.qm@web33508.mail.mud.yahoo.com>
References: <44144.71289.qm@web33508.mail.mud.yahoo.com>
Message-ID: <662C1A5C-38E4-4BD2-9A70-D92252590E30@classdump.org>

Hi!

On Aug 15, 2008, at 10:33 PM, Ramanand Mandayam wrote:

> However the output of the string template processing phase deletes  
> the first '\' and prints only the second one. When the generated  
> code is processed as a JAVA file the compiler (as it should)  
> generates errors complaining about invalid unicode characters.
>
> Does the string template process need some special treatment when  
> dealing with '\' characters.


Classical double escape issue: If you are always going to print that  
string, double escape it (i.e. escape each \ to \\) in the lexer rule.  
It's ugly, but most likely the only way.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From Larry.Jones at aspentech.com  Fri Aug 15 13:57:15 2008
From: Larry.Jones at aspentech.com (Jones, Larry)
Date: Fri, 15 Aug 2008 15:57:15 -0500
Subject: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# Process
In-Reply-To: <4A45C6AF-2A1B-42BC-B278-2FEF206728BA@cs.usfca.edu>
Message-ID: <690A62A322DBE24FAD5208C158E5DF2E013A6FF6@houmail3.corp.aspentech.com>

Although yesterday, I may have compiled both my parser and my tree
parser with -debug, I just verified today that only my tree parser
inherited from DebugTreeParser.

In addition, I verified that with these parsers targeted to Java, I can
connect neither on port 49153 nor on port 49100.

I am running windows XP; however, because I trying to connect to the
localhost, I do not believe I have firewall issues. 

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Friday, August 15, 2008 2:11 PM
To: Jones, Larry
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#
Process


you can only debug one grammar at a time...make sure -debug on tree  
but not parser grammar :)

Ter
On Aug 15, 2008, at 5:55 AM, Jones, Larry wrote:

> Interestingly, when I tried yesterday, I found that I could connect
> to a
> Java targeted parser grammar on port 49153; however, when I tried to
> connect to a tree grammar, I could neither connect to a C# application
> nor a Java application.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Foust
> Sent: Thursday, August 14, 2008 4:01 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C# 
> Process
>
>
> Johannes wrote:
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue
>> is
>
>> that somehow the port change didn't make into the distribution. Ter 
>> has to change the defalut port from 0xC001 to 0xBFCC, as well all the

>> targets.
>
> AntlrWorks 1.2b5 won't connect for me anymore on *any* port. It thinks

> 49153 is in use, but trying 49100 used to work. Now it just times out.

> Every time. After a reboot. It doesn't matter. Even for a test grammar
> like:
>
> 	grammar test;
> 	start : 'hello';
>
> If debugging from within AntlrWorks, does the port chosen need to
> match
> what was compiled into Antrl, or can could AntlrWorks just search  
> for an
> unused port each time the Debug button was clicked?
>
> Brent
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
>> bounces at antlr.org] On Behalf Of Johannes Luber
>> Sent: Thursday, August 14, 2008 5:00 AM
>> To: Jones, Larry
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] ANTLRWorks 1.2b5 - Cannot Connect to C#

>> Process
>>
>> Jones, Larry schrieb:
>>> I was trying to use ANTLRWorks 1.2b5 on Windows XP to connect to a 
>>> parser generated in C#. I think I have followed the steps described
>> in
>>> the wiki. I:
>>> - Built a lexer / parser using the -debug option. (I verified that
>> the
>>> generated parser inherits DebugParser.)
>>> - Built an executable.
>>> - Verified that it accepts command line input.
>>> - Started in from a cmd window. It "hangs" waiting for console 
>>> input.
>>> - Started ANTLRWorks in a separate window.
>>> - Opened the grammar used to generate my parser.
>>> - Invoked Debugger | Remote Debug.
>>> - When ANTLRWorks presents the connection dialog, I accepted the
>> defaults.
>>>
>>> After a few minutes, ANTLRWorks displays an error message that it 
>>> "Cannot launch the debugger" because of a "Time-out waiting to
>> connect
>>> to the remote parser." The window from which I launched ANTLRWorks 
>>> contains a number of "java.net.ConnectException: Connection refused:
>
>>> connect" messages.
>>>
>>> What additional steps must I take to use ANTLRWorks 1.2b5 to debug a
>
>>> remote C# parser?
>>>
>>> Thanks.
>>
>> Does ANTLRworks demand the port 49100 instead 49153? Then the issue
>> is
>
>> that somehow the port change didn't make into the distribution. Ter 
>> has to change the defalut port from 0xC001 to 0xBFCC, as well all the

>> targets. The workaround is to change the port manually, until 3.1.1, 
>> that is.
>>
>> Johannes
>>>
>>>
>>> *--*
>>>
>>> *Lawrence Allan Jones*
>>> *Senior Developer / Technical Advisor*
>>> Aspen Technology, Inc.
>>> 2500 CityWest Blvd. Suite 1500
>>> Houston, Texas 77042
>>> USA
>>> 281-504-3324 (work)
>>> 281-504-3395 (fax)
>>> larry.jones at aspentech.com <mailto:larry.jones at aspentech.com>
>>> www.aspentech.com <http://www.aspentech.com/>
>>>
>>>
>>>
>>>
>>>
>>> This e-mail and any attachments are intended only for use by the
>>> addressee(s) named herein and may contain legally privileged and/or 
>>> confidential information. If you are not the intended recipient of
>> this
>>> e-mail, you are hereby notified any dissemination, distribution or 
>>> copying of this email, and any attachments thereto, is strictly 
>>> prohibited. If you receive this email in error please immediately
>> notify
>>> the sender and permanently delete the original copy and any copy of
>> any
>>> e-mail, and any printout thereof.
>
>
> This e-mail and any attachments are intended only for use by the
> addressee(s) named herein and may contain legally privileged and/or  
> confidential information. If you are not the intended recipient of  
> this e-mail, you are hereby notified any dissemination, distribution  
> or copying of this email, and any attachments thereto, is strictly  
> prohibited. If you receive this email in error please immediately  
> notify the sender and permanently delete the original copy and any  
> copy of any e-mail, and any printout thereof.


This e-mail and any attachments are intended only for use by the addressee(s) named herein and may contain legally privileged and/or confidential information. If you are not the intended recipient of this e-mail, you are hereby notified any dissemination, distribution or copying of this email, and any attachments thereto, is strictly prohibited. If you receive this email in error please immediately notify the sender and permanently delete the original copy and any copy of any e-mail, and any printout thereof.

From ron.hunter-duvar at oracle.com  Fri Aug 15 14:04:31 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Fri, 15 Aug 2008 15:04:31 -0600
Subject: [antlr-interest] Java grammar accepting junk
Message-ID: <48A5EF5F.5060805@oracle.com>

Hi,

I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar from 
Antlr.org. When I pass it non-Java input (e.g. shell scripts), it 
complains a lot, but still acts as if the parsing succeeded. I noticed 
that the grammar didn't have an EOF token to force it to go to end of 
file, so I added a new top level rule:

sourceFile
  : compilationUnit EOF
  ;

and invoked it with that new target. Seemed simple enough. But it didn't 
help. The parser still happily accepts garbage:

  Parsing: test.sh
line 1:0 no viable alternative at character '#'
line 5:0 no viable alternative at character '#'
line 5:1 no viable alternative at character '#'
line 5:2 no viable alternative at character '#'
line 1:1 no viable alternative at input '!'
    Succeeded

The first and last line of output are from my driver code. Basically I 
was expecting the parser to throw an exception, which would have counted 
as a failure. Since it didn't, it counts it as a success.

Maybe I'm not understanding how error reporting works in Antlr 3.1. I've 
worked quite a bit with Antlr 2.7, but I'm new to Antlr 3. I don't have 
the book, and haven't found anything in the wiki that explains this. 
Perhaps someone can enlighten me?

Thanks,
Ron

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From jdn at math.carleton.ca  Fri Aug 15 14:14:07 2008
From: jdn at math.carleton.ca (Jason Nielsen)
Date: Fri, 15 Aug 2008 17:14:07 -0400 (EDT)
Subject: [antlr-interest] C backend problems with 3.1
In-Reply-To: <Pine.LNX.4.64.0807311705230.7242@octopus>
References: <Pine.LNX.4.64.0807301758060.10097@octopus>
	<1217472644.9052.86.camel@jimi>
	<Pine.LNX.4.64.0807302307260.32386@taz> <1217477920.9052.88.camel@jimi>
	<Pine.LNX.4.64.0807311642070.7242@octopus>
	<1217537946.12349.48.camel@jimi>
	<Pine.LNX.4.64.0807311705230.7242@octopus>
Message-ID: <Pine.LNX.4.64.0808151707520.10531@taz>

Hello,

I just updated to ANTLR 3.1 and I am having problems with the C backend. 
My grammar works with the java backend but with C I get a bunch of errors. 
Here is an example of the errors (using the Simple C grammar):

java org.antlr.Tool *.g
ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
SimpleC.g
Generating SimpleCParser.c
Generating SimpleCParser.h
Generating SimpleCLexer.c
Generating SimpleCLexer.h
SimpleCWalker.g
Generating SimpleCWalker.c
Generating SimpleCWalker.h
gcc -O2 main.c *Lexer.c *Parser.c *Walker.c 
/usr/local/antlr/lib/libantlr3c.a -I/usr/local/antlr/include -I 
/home/jdn/SimpleC
In file included from main.c:36:
/home/jdn/SimpleC/SimpleCParser.h:95: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:106: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:117: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:128: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:139: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:150: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:161: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:172: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:183: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:194: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:205: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:216: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:227: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:238: error: expected specifier-qualifier-list before ?tree?
/home/jdn/SimpleC/SimpleCParser.h:249: error: expected specifier-qualifier-list before ?tree?
main.c: In function ?main?:
main.c:219: error: ?SimpleCParser_program_return? has no member named ?tree?
main.c:221: error: ?SimpleCParser_program_return? has no member named ?tree?
.
.
.

I was previously using antlr-3.1b2 and this wasn't happening (I haven't 
changed anything between the update and put the 3.1 C runtime in the same 
location as before).

Jason

From parrt at cs.usfca.edu  Fri Aug 15 14:21:16 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 14:21:16 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A5D8FC.8070008@gmx.de>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<48A4AD0F.6040606@jazillian.com>	<200808150801.54041.atlan@gmx.li>
	<48A59CCF.2090400@jazillian.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<8549F83F-4291-43DF-9E91-32B3AD99ED2F@cs.usfca.edu>
	<48A5D8FC.8070008@gmx.de>
Message-ID: <16AA5E6B-4A94-4E80-9B97-D6119714B36F@cs.usfca.edu>


On Aug 15, 2008, at 12:29 PM, Johannes Luber wrote:
> Can ANTLRmorph translate from Java to C# or any other language  
> without requiring an analysis depending on an AST?

It only requires a grammar; not AST, no actions.  If you need a symbol  
table, then you must obviously find actions in the grammar to build  
this.  It uses parse trees as generated by -debug / ParseTreeBuilder  
object.

Ter

From javafoust at gmail.com  Fri Aug 15 14:23:33 2008
From: javafoust at gmail.com (Foust)
Date: Fri, 15 Aug 2008 14:23:33 -0700
Subject: [antlr-interest] ANTLR Kudos...
In-Reply-To: <48A57330.2080509@gmx.de>
References: <7f8924df0808132004t1fe684a9h1edce136e3b96557@mail.gmail.com>	<E2F5C247-DD64-4110-BC2F-950F5D62776A@cs.usfca.edu>	<7f8924df0808142023h239856a3ya3a452800709fe53@mail.gmail.com>
	<48A57330.2080509@gmx.de>
Message-ID: <001501c8ff1d$2cdfd460$869f7d20$@com>

>
> How do you turn on backtracking on a per rule basis?  
>

The name of the backtracking option is "backtrack".

	options {backtrack=true;}

As noted, per-rule options go before the colon

	rule		options {backtrack=true; memoize=true;}	
			: <rule pattern>
			;

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Friday, August 15, 2008 5:15 AM
> To: Ian Kaplan
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR Kudos...
> 
> Ian Kaplan schrieb:
> >
> >
> >     /
> >     Performance is not bad with backtracking and memoization; linear
> >     time cost.  Still better to let ANTLR predict with a simple DFA
> >     rather than backtracking.  Also can set backtracking per rule./
> >
> >
> >
> >        Only a part of my grammar requires more than two symbols of
> look
> > a head.  How do you turn on backtracking on a per rule basis?  I've
> got
> > it set globally and it may not need to be.
> 
> You can put an options block into a rule definition like so (didn't 
> test it, so syntax may be a bit off):
> 
> rule
> options {
> backtracking=true;
> memoize=true;
> }
> : otherRule;
> 
> Johannes
> 
> >
> >   Thanks,
> >
> >   Ian
> >


From parrt at cs.usfca.edu  Fri Aug 15 14:23:38 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 14:23:38 -0700
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <48A5EF5F.5060805@oracle.com>
References: <48A5EF5F.5060805@oracle.com>
Message-ID: <843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>

Well, take "succeeded" not very seriously...it just prints

                         System.out.println("finished parsing OK");

  if there was no exception... all of the recognition exceptions are  
caught inside the parser.  You could check the parser for the number  
of errors.

Ter
On Aug 15, 2008, at 2:04 PM, Ron Hunter-Duvar wrote:

> Hi,
>
> I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar  
> from Antlr.org. When I pass it non-Java input (e.g. shell scripts),  
> it complains a lot, but still acts as if the parsing succeeded. I  
> noticed that the grammar didn't have an EOF token to force it to go  
> to end of file, so I added a new top level rule:
>
> sourceFile
> : compilationUnit EOF
> ;
>
> and invoked it with that new target. Seemed simple enough. But it  
> didn't help. The parser still happily accepts garbage:
>
> Parsing: test.sh
> line 1:0 no viable alternative at character '#'
> line 5:0 no viable alternative at character '#'
> line 5:1 no viable alternative at character '#'
> line 5:2 no viable alternative at character '#'
> line 1:1 no viable alternative at input '!'
>   Succeeded
>
> The first and last line of output are from my driver code. Basically  
> I was expecting the parser to throw an exception, which would have  
> counted as a failure. Since it didn't, it counts it as a success.
>
> Maybe I'm not understanding how error reporting works in Antlr 3.1.  
> I've worked quite a bit with Antlr 2.7, but I'm new to Antlr 3. I  
> don't have the book, and haven't found anything in the wiki that  
> explains this. Perhaps someone can enlighten me?
>
> Thanks,
> Ron
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>


From jdn at math.carleton.ca  Fri Aug 15 14:33:54 2008
From: jdn at math.carleton.ca (Jason Nielsen)
Date: Fri, 15 Aug 2008 17:33:54 -0400 (EDT)
Subject: [antlr-interest] C backend problems with 3.1
In-Reply-To: <Pine.LNX.4.64.0808151707520.10531@taz>
References: <Pine.LNX.4.64.0807301758060.10097@octopus>
	<1217472644.9052.86.camel@jimi>
	<Pine.LNX.4.64.0807302307260.32386@taz> <1217477920.9052.88.camel@jimi>
	<Pine.LNX.4.64.0807311642070.7242@octopus>
	<1217537946.12349.48.camel@jimi>
	<Pine.LNX.4.64.0807311705230.7242@octopus>
	<Pine.LNX.4.64.0808151707520.10531@taz>
Message-ID: <Pine.LNX.4.64.0808151733150.10531@taz>

Sorry for the noise... just noticed the:

ASTLabelType    = pANTLR3_BASE_TREE;

in the updated examples.

Jason

From jbb at acm.org  Fri Aug 15 15:09:57 2008
From: jbb at acm.org (John B. Brodie)
Date: Fri, 15 Aug 2008 18:09:57 -0400
Subject: [antlr-interest] Nested Multi-Line Commentary
In-Reply-To: <E7DF633F-94F1-441B-A593-9C82A87C241C@classdump.org>
	(kroepke@classdump.org)
References: <E1KTnvI-0007wv-K8@gecko.home.org>
	<E7DF633F-94F1-441B-A593-9C82A87C241C@classdump.org>
Message-ID: <E1KU7Ub-0003G5-Vl@gecko.home.org>

For the record, my problem is indeed caused by an interaction between
two lexer rules.

I wish that the error message was more indicative of that situation...

Here is a grammar that displays the issue:

//-------------------------
grammar Comment;

foo : VAR* EOF ;

// variable name
VAR : ( 'a'..'z' | SYMBOL ) PRINTABLE* ;
//VAR : ( 'a'..'z' PRINTABLE* ) | SYMBOL ;

fragment PRINTABLE : 'a'..'z' | 'A'..'Z' | '0'..'9' | SYMBOL ;

fragment SYMBOL
    : '+' | '-' | '*' | '/' | '=' | ':' | '<' | '>' | '_' | '\''
    | '!' | '?' | '|' | '&' | '^' | '%' | '$' | '#' | '@' | '~' | '`'
    ;

// Whitespace -- ignored
WS
   :  ( ' ' | '\t' |    '\f'
      | ( '\r' | '\n' ) // handle newlines
      )+
      { $channel=HIDDEN; }
   ;

// single-line comments
SL_COMMENT
    : '//'
        ( options { greedy=false; } : . )*
        ( ( '\r' '\n'? ) | '\n' )
        { $channel=HIDDEN; }
    ;

// nestable multiple-line comments
ML_COMMENT : FRAG_ML_COMMENT { $channel=HIDDEN; } ;

fragment FRAG_ML_COMMENT :
        '/*'
        ( options { greedy=false; } : (('/*')=>FRAG_ML_COMMENT) | . )*
        '*/'
   ;
//-------------------------

note that changing the VAR rule to the one commented above caused the
error to go away.

Thankx
   -jbb

From kroepke at classdump.org  Fri Aug 15 15:13:03 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 16 Aug 2008 00:13:03 +0200
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
Message-ID: <7CBF3D8E-288D-425C-B04F-64D8ED2E9993@classdump.org>


On Aug 15, 2008, at 11:23 PM, Terence Parr wrote:

> Well, take "succeeded" not very seriously...it just prints
>
>                        System.out.println("finished parsing OK");
>
> if there was no exception... all of the recognition exceptions are  
> caught inside the parser.  You could check the parser for the number  
> of errors.

FWIW, I'm currently working on a more flexible ErrorListener design.  
Partly because we discussed it recently, partly because I need it now ;)
The basic idea is to get passed the internal exceptions (which are  
caught inside the parser) in a listener so you can more easily do  
error reporting and checking.

Currently, to see those exceptions, you can either throw exceptions  
yourself within the @rulecatch action (rethrow if that's what you  
want) or make a superclass and override the error methods (one or more  
of them, depending on what you need to do). Since you can't mixin  
things in Java this gets messy if you want to put other stuff in that  
superclass, too (like all members as opposed to write them into  
@members{}).
In my current approach you can set an error listener (should probably  
allow more than one, but one step at a time) on the recognizer and  
then you can intercept the calls. With a little trickery you can also  
just forward them to BaseRecognizer again, so you can just check for  
errors. I do that in the default implementation, but I have one that  
queues everything up to inspect later. I use the latter in my test  
suite. Nice thing is, you don't need to modify your grammar at all.

If you just need to know if there were any errors, you can add a bit  
of code to your grammar and call it after parsing:

@parser::members{
public boolean seenErrors() {
	return this.state.syntaxErrors > 0;
}
}

I think state is protected, so you need to add code to see it.

cheers,
-k

> On Aug 15, 2008, at 2:04 PM, Ron Hunter-Duvar wrote:
>
>> Hi,
>>
>> I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar  
>> from Antlr.org. When I pass it non-Java input (e.g. shell scripts),  
>> it complains a lot, but still acts as if the parsing succeeded. I  
>> noticed that the grammar didn't have an EOF token to force it to go  
>> to end of file, so I added a new top level rule:
>>
>> sourceFile
>> : compilationUnit EOF
>> ;
>>
>> and invoked it with that new target. Seemed simple enough. But it  
>> didn't help. The parser still happily accepts garbage:
>>
>> Parsing: test.sh
>> line 1:0 no viable alternative at character '#'
>> line 5:0 no viable alternative at character '#'
>> line 5:1 no viable alternative at character '#'
>> line 5:2 no viable alternative at character '#'
>> line 1:1 no viable alternative at input '!'
>>  Succeeded
>>
>> The first and last line of output are from my driver code.  
>> Basically I was expecting the parser to throw an exception, which  
>> would have counted as a failure. Since it didn't, it counts it as a  
>> success.
>>
>> Maybe I'm not understanding how error reporting works in Antlr 3.1.  
>> I've worked quite a bit with Antlr 2.7, but I'm new to Antlr 3. I  
>> don't have the book, and haven't found anything in the wiki that  
>> explains this. Perhaps someone can enlighten me?
>>
>> Thanks,
>> Ron
>>
>> -- 
>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>> Oracle Service Engineering
>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>
>> All opinions expressed here are mine, and do not necessarily  
>> represent
>> those of my employer.
>>
>

-- 
Kay R?pke
http://classdump.org/







From ron.hunter-duvar at oracle.com  Fri Aug 15 15:13:50 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Fri, 15 Aug 2008 16:13:50 -0600
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
Message-ID: <48A5FF9E.7080600@oracle.com>

So that would be by creating a RecognizerSharedState object, passing it 
to the parser constructor, then checking state.syntaxErrors > 0 at the 
end, correct?

Is there a way to know whether the parser succeeded in recovering and 
parsing to the end of the file or gave up part way through?

Thanks,
Ron


Terence Parr wrote:
> Well, take "succeeded" not very seriously...it just prints
>
>                         System.out.println("finished parsing OK");
>
>  if there was no exception... all of the recognition exceptions are 
> caught inside the parser.  You could check the parser for the number 
> of errors.
>
> Ter
> On Aug 15, 2008, at 2:04 PM, Ron Hunter-Duvar wrote:
>
>> Hi,
>>
>> I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar 
>> from Antlr.org. When I pass it non-Java input (e.g. shell scripts), 
>> it complains a lot, but still acts as if the parsing succeeded. I 
>> noticed that the grammar didn't have an EOF token to force it to go 
>> to end of file, so I added a new top level rule:
>>
>> sourceFile
>> : compilationUnit EOF
>> ;
>>
>> and invoked it with that new target. Seemed simple enough. But it 
>> didn't help. The parser still happily accepts garbage:
>>
>> Parsing: test.sh
>> line 1:0 no viable alternative at character '#'
>> line 5:0 no viable alternative at character '#'
>> line 5:1 no viable alternative at character '#'
>> line 5:2 no viable alternative at character '#'
>> line 1:1 no viable alternative at input '!'
>>   Succeeded
>>
>> The first and last line of output are from my driver code. Basically 
>> I was expecting the parser to throw an exception, which would have 
>> counted as a failure. Since it didn't, it counts it as a success.
>>
>> Maybe I'm not understanding how error reporting works in Antlr 3.1. 
>> I've worked quite a bit with Antlr 2.7, but I'm new to Antlr 3. I 
>> don't have the book, and haven't found anything in the wiki that 
>> explains this. Perhaps someone can enlighten me?
>>
>> Thanks,
>> Ron
>>
>> -- 
>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>> Oracle Service Engineering
>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>
>> All opinions expressed here are mine, and do not necessarily represent
>> those of my employer.
>>
>
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From parrt at cs.usfca.edu  Fri Aug 15 15:18:46 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 15:18:46 -0700
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <48A5FF9E.7080600@oracle.com>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
Message-ID: <522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>

BaseRecognizer:

	/** Get number of recognition errors (lexer, parser, tree parser).   
Each
	 *  recognizer tracks its own number.  So parser and lexer each have
	 *  separate count.  Does not count the spurious errors found between
	 *  an error and next valid token match
	 *
	 *  See also reportError()
	 */
	public int getNumberOfSyntaxErrors() {
		return state.syntaxErrors;
	}

Ter
On Aug 15, 2008, at 3:13 PM, Ron Hunter-Duvar wrote:

> So that would be by creating a RecognizerSharedState object, passing  
> it to the parser constructor, then checking state.syntaxErrors > 0  
> at the end, correct?
>
> Is there a way to know whether the parser succeeded in recovering  
> and parsing to the end of the file or gave up part way through?
>
> Thanks,
> Ron
>
>
> Terence Parr wrote:
>> Well, take "succeeded" not very seriously...it just prints
>>
>>                        System.out.println("finished parsing OK");
>>
>> if there was no exception... all of the recognition exceptions are  
>> caught inside the parser.  You could check the parser for the  
>> number of errors.
>>
>> Ter
>> On Aug 15, 2008, at 2:04 PM, Ron Hunter-Duvar wrote:
>>
>>> Hi,
>>>
>>> I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar  
>>> from Antlr.org. When I pass it non-Java input (e.g. shell  
>>> scripts), it complains a lot, but still acts as if the parsing  
>>> succeeded. I noticed that the grammar didn't have an EOF token to  
>>> force it to go to end of file, so I added a new top level rule:
>>>
>>> sourceFile
>>> : compilationUnit EOF
>>> ;
>>>
>>> and invoked it with that new target. Seemed simple enough. But it  
>>> didn't help. The parser still happily accepts garbage:
>>>
>>> Parsing: test.sh
>>> line 1:0 no viable alternative at character '#'
>>> line 5:0 no viable alternative at character '#'
>>> line 5:1 no viable alternative at character '#'
>>> line 5:2 no viable alternative at character '#'
>>> line 1:1 no viable alternative at input '!'
>>>  Succeeded
>>>
>>> The first and last line of output are from my driver code.  
>>> Basically I was expecting the parser to throw an exception, which  
>>> would have counted as a failure. Since it didn't, it counts it as  
>>> a success.
>>>
>>> Maybe I'm not understanding how error reporting works in Antlr  
>>> 3.1. I've worked quite a bit with Antlr 2.7, but I'm new to Antlr  
>>> 3. I don't have the book, and haven't found anything in the wiki  
>>> that explains this. Perhaps someone can enlighten me?
>>>
>>> Thanks,
>>> Ron
>>>
>>> -- 
>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>> Oracle Service Engineering
>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P  
>>> 3C5
>>>
>>> All opinions expressed here are mine, and do not necessarily  
>>> represent
>>> those of my employer.
>>>
>>
>>
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>


From kroepke at classdump.org  Fri Aug 15 15:20:35 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 16 Aug 2008 00:20:35 +0200
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
	<522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
Message-ID: <621E4388-5308-44E4-9C9C-EEB9D5731930@classdump.org>


On Aug 16, 2008, at 12:18 AM, Terence Parr wrote:

> 	public int getNumberOfSyntaxErrors() {


duh. time to stop hacking, i guess ;)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From javafoust at gmail.com  Fri Aug 15 15:49:34 2008
From: javafoust at gmail.com (Foust)
Date: Fri, 15 Aug 2008 15:49:34 -0700
Subject: [antlr-interest] HELP: Escape sequences and string template
In-Reply-To: <662C1A5C-38E4-4BD2-9A70-D92252590E30@classdump.org>
References: <44144.71289.qm@web33508.mail.mud.yahoo.com>
	<662C1A5C-38E4-4BD2-9A70-D92252590E30@classdump.org>
Message-ID: <001701c8ff29$31302540$93906fc0$@com>

Ramanand ,

Another way to deal with the backslash issue is to use forward slashes until
the final output phase, at which time they can be replaced with backslashes.
Maybe it would be useful for StringTemplate to support character sequence
replacement...

But depending upon how the strings are being used in your Java code, you may
be able to architect it so that you can translate them at runtime.

That may be unnecessary, however, since Java's File class handles forward
slashes, even under Windows.

Brent

Ramanand wrote:
> Hi!
> 
> On Aug 15, 2008, at 10:33 PM, Ramanand Mandayam wrote:
> 
> > However the output of the string template processing phase deletes
> > the first '\' and prints only the second one. When the generated
> > code is processed as a JAVA file the compiler (as it should)
> > generates errors complaining about invalid unicode characters.
> >
> > Does the string template process need some special treatment when
> > dealing with '\' characters.
> 
> 
> Classical double escape issue: If you are always going to print that
> string, double escape it (i.e. escape each \ to \\) in the lexer rule.
> It's ugly, but most likely the only way.
> 
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 



From jaluber at gmx.de  Fri Aug 15 16:06:46 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 01:06:46 +0200
Subject: [antlr-interest] HELP: Escape sequences and string template
In-Reply-To: <001701c8ff29$31302540$93906fc0$@com>
References: <44144.71289.qm@web33508.mail.mud.yahoo.com>	<662C1A5C-38E4-4BD2-9A70-D92252590E30@classdump.org>
	<001701c8ff29$31302540$93906fc0$@com>
Message-ID: <48A60C06.6000408@gmx.de>

Foust schrieb:
> Ramanand ,
> 
> Another way to deal with the backslash issue is to use forward slashes until
> the final output phase, at which time they can be replaced with backslashes.
> Maybe it would be useful for StringTemplate to support character sequence
> replacement...
> 
> But depending upon how the strings are being used in your Java code, you may
> be able to architect it so that you can translate them at runtime.
> 
> That may be unnecessary, however, since Java's File class handles forward
> slashes, even under Windows.
> 
> Brent

Windows does accept forward slashes instead backslashes anyway, only the 
path completion doesn't work with forward slashes.

Johannes

> Ramanand wrote:
>> Hi!
>>
>> On Aug 15, 2008, at 10:33 PM, Ramanand Mandayam wrote:
>>
>>> However the output of the string template processing phase deletes
>>> the first '\' and prints only the second one. When the generated
>>> code is processed as a JAVA file the compiler (as it should)
>>> generates errors complaining about invalid unicode characters.
>>>
>>> Does the string template process need some special treatment when
>>> dealing with '\' characters.
>>
>> Classical double escape issue: If you are always going to print that
>> string, double escape it (i.e. escape each \ to \\) in the lexer rule.
>> It's ugly, but most likely the only way.
>>
>> cheers,
>> -k
>> --
>> Kay R?pke
>> http://classdump.org/
>>
>>
>>
>>
> 
> 


From ron.hunter-duvar at oracle.com  Fri Aug 15 16:03:56 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Fri, 15 Aug 2008 17:03:56 -0600
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
	<522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
Message-ID: <48A60B5C.3010104@oracle.com>

Funny, I went looking for just such a method and didn't find one. Now I 
go back and see exactly the code you pointed to. Accomplishes the same 
thing with slightly less code.

About my other question, though, if errors have occurred, with 
backtracking and recovery going on, how can I know if it succeeded in 
recovering and got to the end of file or just gave up early?

Thanks,
Ron


Terence Parr wrote:
> BaseRecognizer:
>
>     /** Get number of recognition errors (lexer, parser, tree 
> parser).  Each
>      *  recognizer tracks its own number.  So parser and lexer each have
>      *  separate count.  Does not count the spurious errors found between
>      *  an error and next valid token match
>      *
>      *  See also reportError()
>      */
>     public int getNumberOfSyntaxErrors() {
>         return state.syntaxErrors;
>     }
>
> Ter
> On Aug 15, 2008, at 3:13 PM, Ron Hunter-Duvar wrote:
>
>> So that would be by creating a RecognizerSharedState object, passing 
>> it to the parser constructor, then checking state.syntaxErrors > 0 at 
>> the end, correct?
>>
>> Is there a way to know whether the parser succeeded in recovering and 
>> parsing to the end of the file or gave up part way through?
>>
>> Thanks,
>> Ron
>>
>>
>> Terence Parr wrote:
>>> Well, take "succeeded" not very seriously...it just prints
>>>
>>>                        System.out.println("finished parsing OK");
>>>
>>> if there was no exception... all of the recognition exceptions are 
>>> caught inside the parser.  You could check the parser for the number 
>>> of errors.
>>>
>>> Ter
>>> On Aug 15, 2008, at 2:04 PM, Ron Hunter-Duvar wrote:
>>>
>>>> Hi,
>>>>
>>>> I'm doing some Java parsing with Antlr 3.1 and the Java.g grammar 
>>>> from Antlr.org. When I pass it non-Java input (e.g. shell scripts), 
>>>> it complains a lot, but still acts as if the parsing succeeded. I 
>>>> noticed that the grammar didn't have an EOF token to force it to go 
>>>> to end of file, so I added a new top level rule:
>>>>
>>>> sourceFile
>>>> : compilationUnit EOF
>>>> ;
>>>>
>>>> and invoked it with that new target. Seemed simple enough. But it 
>>>> didn't help. The parser still happily accepts garbage:
>>>>
>>>> Parsing: test.sh
>>>> line 1:0 no viable alternative at character '#'
>>>> line 5:0 no viable alternative at character '#'
>>>> line 5:1 no viable alternative at character '#'
>>>> line 5:2 no viable alternative at character '#'
>>>> line 1:1 no viable alternative at input '!'
>>>>  Succeeded
>>>>
>>>> The first and last line of output are from my driver code. 
>>>> Basically I was expecting the parser to throw an exception, which 
>>>> would have counted as a failure. Since it didn't, it counts it as a 
>>>> success.
>>>>
>>>> Maybe I'm not understanding how error reporting works in Antlr 3.1. 
>>>> I've worked quite a bit with Antlr 2.7, but I'm new to Antlr 3. I 
>>>> don't have the book, and haven't found anything in the wiki that 
>>>> explains this. Perhaps someone can enlighten me?
>>>>
>>>> Thanks,
>>>> Ron
>>>>
>>>> -- 
>>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>>> Oracle Service Engineering
>>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>>>
>>>> All opinions expressed here are mine, and do not necessarily represent
>>>> those of my employer.
>>>>
>>>
>>>
>>
>> -- 
>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>> Oracle Service Engineering
>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>
>> All opinions expressed here are mine, and do not necessarily represent
>> those of my employer.
>>
>
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From parrt at cs.usfca.edu  Fri Aug 15 16:17:05 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 16:17:05 -0700
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <48A60B5C.3010104@oracle.com>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
	<522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
	<48A60B5C.3010104@oracle.com>
Message-ID: <2762C874-F4E5-4086-955E-E3389952644C@cs.usfca.edu>


On Aug 15, 2008, at 4:03 PM, Ron Hunter-Duvar wrote:

> Funny, I went looking for just such a method and didn't find one.  
> Now I go back and see exactly the code you pointed to. Accomplishes  
> the same thing with slightly less code.
>
> About my other question, though, if errors have occurred, with  
> backtracking and recovery going on, how can I know if it succeeded  
> in recovering and got to the end of file or just gave up early?

it only counts real errors not backtracking errors :)  you can also  
ask for state.input.index() to get the token index.

Ter

From lgcraymer at yahoo.com  Fri Aug 15 17:03:37 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 15 Aug 2008 17:03:37 -0700 (PDT)
Subject: [antlr-interest] HELP: Escape sequences and string template
Message-ID: <649020.35748.qm@web55903.mail.re3.yahoo.com>

Actually, on looking at the ST grammars, it appears that \" is given special handlng in the lexer?and there is no way to have a template output the character sequence \".? Since backslashes are processed only by the ST lexer and not during intermediate processing, maybe ST should recognize <\> (or something similar) as an output backslash.? This might help for other escape sequences, as well, although ST seems to do the "right thing" most of the time.
--Loring



----- Original Message ----
> From: Johannes Luber <jaluber at gmx.de>
> To: Foust <javafoust at gmail.com>
> Cc: antlr-interest at antlr.org
> Sent: Friday, August 15, 2008 4:06:46 PM
> Subject: Re: [antlr-interest] HELP: Escape sequences and string template
> 
> Foust schrieb:
> > Ramanand ,
> > 
> > Another way to deal with the backslash issue is to use forward slashes until
> > the final output phase, at which time they can be replaced with backslashes.
> > Maybe it would be useful for StringTemplate to support character sequence
> > replacement...
> > 
> > But depending upon how the strings are being used in your Java code, you may
> > be able to architect it so that you can translate them at runtime.
> > 
> > That may be unnecessary, however, since Java's File class handles forward
> > slashes, even under Windows.
> > 
> > Brent
> 
> Windows does accept forward slashes instead backslashes anyway, only the 
> path completion doesn't work with forward slashes.
> 
> Johannes
> 
> > Ramanand wrote:
> >> Hi!
> >>
> >> On Aug 15, 2008, at 10:33 PM, Ramanand Mandayam wrote:
> >>
> >>> However the output of the string template processing phase deletes
> >>> the first '\' and prints only the second one. When the generated
> >>> code is processed as a JAVA file the compiler (as it should)
> >>> generates errors complaining about invalid unicode characters.
> >>>
> >>> Does the string template process need some special treatment when
> >>> dealing with '\' characters.
> >>
> >> Classical double escape issue: If you are always going to print that
> >> string, double escape it (i.e. escape each \ to \\) in the lexer rule.
> >> It's ugly, but most likely the only way.
> >>
> >> cheers,
> >> -k
> >> --
> >> Kay R?pke
> >> http://classdump.org/
> >>
> >>
> >>
> >>
> > 
> > 



      


From parrt at cs.usfca.edu  Fri Aug 15 17:09:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Aug 2008 17:09:54 -0700
Subject: [antlr-interest] HELP: Escape sequences and string template
In-Reply-To: <649020.35748.qm@web55903.mail.re3.yahoo.com>
References: <649020.35748.qm@web55903.mail.re3.yahoo.com>
Message-ID: <0C3729D2-CA07-4A03-8772-0D5F72689607@cs.usfca.edu>

I think <\\> might work.
Ter
On Aug 15, 2008, at 5:03 PM, Loring Craymer wrote:

> Actually, on looking at the ST grammars, it appears that \" is given  
> special handlng in the lexer and there is no way to have a template  
> output the character sequence \".  Since backslashes are processed  
> only by the ST lexer and not during intermediate processing, maybe  
> ST should recognize <\> (or something similar) as an output  
> backslash.  This might help for other escape sequences, as well,  
> although ST seems to do the "right thing" most of the time.
> --Loring
>
>
>
> ----- Original Message ----
>> From: Johannes Luber <jaluber at gmx.de>
>> To: Foust <javafoust at gmail.com>
>> Cc: antlr-interest at antlr.org
>> Sent: Friday, August 15, 2008 4:06:46 PM
>> Subject: Re: [antlr-interest] HELP: Escape sequences and string  
>> template
>>
>> Foust schrieb:
>>> Ramanand ,
>>>
>>> Another way to deal with the backslash issue is to use forward  
>>> slashes until
>>> the final output phase, at which time they can be replaced with  
>>> backslashes.
>>> Maybe it would be useful for StringTemplate to support character  
>>> sequence
>>> replacement...
>>>
>>> But depending upon how the strings are being used in your Java  
>>> code, you may
>>> be able to architect it so that you can translate them at runtime.
>>>
>>> That may be unnecessary, however, since Java's File class handles  
>>> forward
>>> slashes, even under Windows.
>>>
>>> Brent
>>
>> Windows does accept forward slashes instead backslashes anyway,  
>> only the
>> path completion doesn't work with forward slashes.
>>
>> Johannes
>>
>>> Ramanand wrote:
>>>> Hi!
>>>>
>>>> On Aug 15, 2008, at 10:33 PM, Ramanand Mandayam wrote:
>>>>
>>>>> However the output of the string template processing phase deletes
>>>>> the first '\' and prints only the second one. When the generated
>>>>> code is processed as a JAVA file the compiler (as it should)
>>>>> generates errors complaining about invalid unicode characters.
>>>>>
>>>>> Does the string template process need some special treatment when
>>>>> dealing with '\' characters.
>>>>
>>>> Classical double escape issue: If you are always going to print  
>>>> that
>>>> string, double escape it (i.e. escape each \ to \\) in the lexer  
>>>> rule.
>>>> It's ugly, but most likely the only way.
>>>>
>>>> cheers,
>>>> -k
>>>> --
>>>> Kay R?pke
>>>> http://classdump.org/
>>>>
>>>>
>>>>
>>>>
>>>
>>>
>
>
>
>
>


From rulatir at wp.pl  Fri Aug 15 18:33:01 2008
From: rulatir at wp.pl (Szczepan =?iso-8859-2?q?Ho=B3yszewski?=)
Date: Sat, 16 Aug 2008 03:33:01 +0200
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48A5B941.8020202@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com>
Message-ID: <200808160333.01241.rulatir@wp.pl>

Andy Tripp wrote:

> Right. Whoever writes the doSomething() method shown above is going to
> have to know what the AST looks like, regardless of whether the
> doSomething() call is embedded in a treewalker.g file or plain old code.

That's exactly the problem. Whoever writes the doSomething() for a processing 
pass that is only interested in 3% of the language constructs, will have not 
only to know, but also to painstakingly express with tree rules, what the AST 
can possibly look like from the start symbol to wherever the relevant 
constructs can appear in the grammar. This essentially duplicates a large 
chunk of the parser grammar. There is no simple way to tell ANTLR to 
doSomething() e.g. for each type definition, regardless of whether it occurs 
at top level, in a class, in a function, in an anonymous code block buried 
deep in a lambda expression, or in that fifth possible place where the draft 
0.0.2 specification will allow type definitions to occur.

Szczepan Holyszewski


From iank at bearcave.com  Fri Aug 15 22:25:25 2008
From: iank at bearcave.com (Ian Kaplan)
Date: Sat, 16 Aug 2008 06:25:25 +0100
Subject: [antlr-interest] Possible code generation problem with arguments
	(ANTLR 3.1)
Message-ID: <7f8924df0808152225g32498c50i9bc29488bf391490@mail.gmail.com>

  I pass an argument down through the grammar. This is an object that
contains a simple symbol table and other book keeping information.  As the
parse proceeds objects are added to this container object.  The grammar is
shown below.  As you can see, I set backtrack to true since this is a
section of the grammar that can't be parsed as I've written the grammar
without back tracking.

  ANTLR apparently generates syntactic predicate delegates or something.
These are shown below as well.  Note that these methods have no argument,
unlike the syntax that they were generated from.  They then attempt to call
the method generated for the syntax production with an argument that doesn't
exist.

  Is this a bug in ANTLR or a feature?  It should be possible to rewrite the
code so that it doesn't use arguments passed downward, but it will be some
work to get this done.  So I would be greatful for any insight before I go
down this path.  Thanks for your help,

  Ian


patternLink[ PatternContainer patternDef ]
options{
    backtrack=true;  // Allows parser backtracking
    memoize=true;
}
    : simpleLink[ patternDef ]
    | rangeLinkSet[ patternDef ]
    | degreeLinkSet[ patternDef ]
    ;

Generated Java code:

    // $ANTLR start synpred1_GraphQuery
    public final void synpred1_GraphQuery_fragment() throws
RecognitionException {
        // GraphQuery.g:685:7: ( simpleLink[ patternDef ] )
        // GraphQuery.g:685:7: simpleLink[ patternDef ]
        {
        pushFollow(FOLLOW_simpleLink_in_synpred1_GraphQuery1646);
        simpleLink(patternDef);

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_GraphQuery

    // $ANTLR start synpred2_GraphQuery
    public final void synpred2_GraphQuery_fragment() throws
RecognitionException {
        // GraphQuery.g:686:7: ( rangeLinkSet[ patternDef ] )
        // GraphQuery.g:686:7: rangeLinkSet[ patternDef ]
        {
        pushFollow(FOLLOW_rangeLinkSet_in_synpred2_GraphQuery1655);
        rangeLinkSet(patternDef);

        state._fsp--;
        if (state.failed) return ;

        }
    }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/478c3a32/attachment.html 

From manoj_nitrkl at yahoo.co.in  Sat Aug 16 00:00:29 2008
From: manoj_nitrkl at yahoo.co.in (manoj bishwal)
Date: Sat, 16 Aug 2008 12:30:29 +0530 (IST)
Subject: [antlr-interest] please remove my id from this group
Message-ID: <220151.77386.qm@web7905.mail.in.yahoo.com>

please remove my id from this group
regards 
manoj


      Download prohibited? No problem. CHAT from any browser, without download. Go to http://in.webmessenger.yahoo.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/0e862fc5/attachment.html 

From robertc at robertcollins.net  Sat Aug 16 00:35:14 2008
From: robertc at robertcollins.net (Robert Collins)
Date: Sat, 16 Aug 2008 17:35:14 +1000
Subject: [antlr-interest] \0 tokenising ?
Message-ID: <1218872114.4568.6.camel@lifeless-64>

Hi, I have a file I want to parse, which contains \0 - ASCII NULL
characters as delimiters. I can't seem to get antlr3 to recognise this -
I always get:

 1:1: Tokens : ( ASCIINULL | MINUS | WHOLE | CRC32 | HEADER | NL |
NUMENTRIES | NOWHITESPACE ); at offset 53, near char(00) :

I have tried:
ASCIINULL: '\0'; 
ASCIINULL: '\\0';
ASCIINULL: 0; // errors

Any guidance on this?

-Rob


-- 
GPG key available at: <http://www.robertcollins.net/keys.txt>.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/b9d44241/attachment.bin 

From antlr at mirality.co.nz  Sat Aug 16 00:41:46 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 16 Aug 2008 19:41:46 +1200
Subject: [antlr-interest] ANTLR 3.0.1: invalid character column in a
 mismatch character error message.
In-Reply-To: <F91A936B-697D-4ECB-B675-3D12457AD892@classdump.org>
References: <489F2207.2030101@orange.fr>
	<20080810201859.19324wblw9hjhyq8@horde.verrech.net>
	<489F3E2F.6030706@orange.fr>
	<A4E347D7-8427-42FE-836E-846F996C059A@classdump.org>
	<489F5095.7020602@orange.fr>
	<C4A11007-6893-45DE-808D-AC314222A6D8@classdump.org>
	<48A03D1A.6030807@orange.fr>
	<7267F9C0-2415-482A-A1CC-1217F208E6A3@classdump.org>
	<D57F1901-26FD-47F6-A3B2-393BD40B9C7B@cs.usfca.edu>
	<20080811195652.6FC8E312968@www.antlr.org>
	<582BFC96-DCEB-49E4-94F6-8D0620161732@cs.usfca.edu>
	<20080812213803.C4E6CF04AE@mail.cs.usfca.edu>
	<8FE1A80E-2579-439A-8960-886FCE2765F1@cs.usfca.edu>
	<20080813082704.903D911EC21@www.antlr.org>
	<2C8F43FE-688B-4EFE-AA98-22AF964CAAE8@classdump.org>
	<001701c8fd30$145bfed0$3d13fc70$@com>
	<A1483B67-D61D-4EEE-BFD8-51949543F2AB@classdump.org>
	<002201c8fd82$441dd240$cc5976c0$@com>
	<20080813204905.22D172F4315@www.antlr.org>
	<002701c8fd88$5c04b0d0$140e1270$@com>
	<48a35225.4719360a.7a10.580eSMTPIN_ADDED@mx.google.com>
	<000f01c8fda4$178560a0$469021e0$@com>
	<602BCE9E-6608-45CF-939D-E420C8E63308@classdump.org>
	<F91A936B-697D-4ECB-B675-3D12457AD892@classdump.org>
Message-ID: <20080816074153.6726411ED8B@www.antlr.org>

At 10:46 15/08/2008, Kay R?pke wrote:
 >I totally see your point. However, what would you intend to
 >report as a column number in that case? Assume 8 char wide
 >tabs? (I'm asking this out of interest, not spite.)

Yes, since that's the standard tab width (and the 
one expected by gcc).  But probably also have a 
command-line parameter in the generated tool to 
override this if needed.  (If a plugin is used to 
manage the build instead of just a build rule, 
then it could pass in the editor's current tab 
setting, if that works better.  Of course, a 
plugin would probably implement the parser inline 
rather than calling a helper tool, so that point might be moot.)

 >Ok, I can't give you assurance of course, but I'd like to
 >improve at least ANTLR's Tool messages (probably not
 >changing the charPositionLine to mean column, but presenting
 >it a bit differently so it's clear). The main goal would be
 >to print the offending place with a bit of context in a nice
 >manner.

Definitely, charPositionInLine should stay as is, 
yes :)  And some additional context would be 
wonderful -- for humans, anyway.  But the 
line/column printout is also useful for automated tools.

 >Again, my vote is strongly for keeping charPositionInLine
 >as _the_ definitive source of horizontal locations, because
 >that's the most useful thing for anything else than printing
 >(esp when communicating with other tools, since it's really
 >the logical character offset not meddled with in any way).

Agreed.

 >I'm strongly against adding any memory 
footprint to CommonToken,
 >as that's the one most people use. It might 
sound silly to argue
 >about adding a couple of bytes, but it really does make a
 >difference for large input text. This is a 
question of trading a
 >little time for potentially large amounts of memory and I think
 >it's worth the effort.

I'm not sure I agree there.  I think it keeps 
things simpler if you work it out at lexing time 
-- simply watch for '\t's in the incoming char 
stream in a similar manner to how ANTLR 
automatically recognises '\r's and '\n's now.

But then again, I usually tend to work with small 
input sets (although I do have a couple of 
grammars that operate on input files of 20-30MB 
or so), so it doesn't seem like a big deal to me 
to add 2-4 bytes extra per token.

Getting the column number is fairly 
straightforward -- set it to 1 at the start of 
the line, then for each non-tab character simply 
increment it by 1.  If you hit a tab, then 
increment it by (tabSize - ((column-1) % 
tabSize)) instead; alternatively set it to 
((trunc((column-1) / tabSize) * tabSize) + 1), 
whichever's easiest/fastest.

If this is done during the initial lexing pass, 
it might reduce speed infinitestimally, but the 
column numbers can then be saved to each token 
for whatever purpose desired -- most probably for 
error messages, but it could be useful for 
diagnostics or logging or something as well.

If it's deferred until later, then you have to be 
able to locate the character position of the 
start of the line containing a token, given only 
whatever data is in the token itself, then scan 
forward and make the calculations as above -- 
which might mean you're going over the same 
ground multiple times, if you're doing this for 
multiple tokens on the same line.

So... well, I don't know.  If the start of line 
positions are available in the runtime, and if 
this sort of thing is only likely to ever be used 
for error reporting, then I guess calculating it 
after the fact makes a certain amount of 
sense.  But I just really want to have it handy anyway ;)

Trying to work it out after the fact gets 
complicated though when there are modified tokens 
(eg. imaginary tokens or tokens that have been 
'setText'ed)...  mind you, I guess the same issue 
exists with the line and charPositionInLine members now.

 >The reason I wouldn't like it to be the default 
in BaseRecognizer
 >(or whatever overrides displayError) is that we don't know the
 >token type to look for. This is another thing that needs to be
 >configured by the developer.

I'm not sure I follow that argument.  You have to 
deal with things at the character level, not the 
token level.  In fact you have to go all the way 
back to the original character stream, since 
there's no guarantee that tokens have been 
generated that contain all the characters, nor 
what order they're in.  (And of course the lexer 
has to be able to obtain column numbers for its 
current position in order to report errors, 
without even having a token.)

 >OTOH I suppose we could be mean and expand \t in _every_ token
 >we encounter, by getting its text.

No, that wouldn't work, since its text may have 
been modified.  The only way to get the real 
column number is to look at the original input directly.


From gerald at certiv.net  Sat Aug 16 00:56:51 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sat, 16 Aug 2008 00:56:51 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808160333.01241.rulatir@wp.pl>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
Message-ID: <200808160756.m7G7ux8R010074@zinc.newtechlaw.com>

At 06:33 PM 8/15/2008, Szczepan =?iso-8859-2?q?Ho=B3yszewski?= wrote:
>Andy Tripp wrote:
>
> > Right. Whoever writes the doSomething() method shown above is going to
> > have to know what the AST looks like, regardless of whether the
> > doSomething() call is embedded in a treewalker.g file or plain old code.
>
>That's exactly the problem. Whoever writes the doSomething() for a processing
>pass that is only interested in 3% of the language constructs, will have not
>only to know, but also to painstakingly express with tree rules, what the AST
>can possibly look like from the start symbol to wherever the relevant
>constructs can appear in the grammar. This essentially duplicates a large
>chunk of the parser grammar. There is no simple way to tell ANTLR to
>doSomething() e.g. for each type definition, regardless of whether it occurs
>at top level, in a class, in a function, in an anonymous code block buried
>deep in a lambda expression, or in that fifth possible place where the draft
>0.0.2 specification will allow type definitions to occur.
>
>Szczepan Holyszewski


Exactly correct.  Except ... almost all of the machinery needed to 
implement "doSomething()" as an operation on an AST already exists in Antlr!

Most any "doSomething()" can be composed from a well-defined API set 
of AST node-oriented operations, such as create, copy, insert, 
delete, and find.

Some if not most of  the needed atomic AST operations already exist 
in the org.antlr.runtime.tree.TreeWizard hierarchy (create(Token), 
dupNode(Object), dupTree(Object), index, getParent, setParent, 
getChild, setChild, addChild, replaceChildren, etc).

What is missing is a code generation step that would generate the 
bodies of the create, copy, insert, delete, and find methods specific 
to a particular AST node structure.  This is basically the same 
operation used in the generation of a tree-walker.

Tree-walker code is generated using ASTTreeParser.stg using a custom 
tree grammar to define static AST rewrites.  The implementing code 
for AST node create, copy, insert, delete, and find methods would be 
generated based on an analogous "access grammar" and corresponding 
ASTAccessParser.stg.  As with the tree grammar, the access grammar 
would identify the nodes of interest and their relevant structure.

Even with so much existing, this is not a trivial extension to 
Antlr.  Theoretically, the end result of any "doSomething()" AST 
manipulation could be done with a well-planned set of 
tree-walkers.  It is just that a random access approach, supported by 
the equivalent of findFirst, findNext, findPrev, findLast operations, 
is distinctly better than a purely top-down (only getNext allowed) 
approach for non-trivial bi-directionally context-dependent AST 
rewrite problems.

Unfortunately, does not sound like AntlrMorph addresses this 
particular problem.

Ter, do you have another graduate student looking for a project?  Or, 
if I finish my implementation, can I get Ph.D. credits? ;)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/f7ccb22a/attachment.html 

From gaochunguang at 163.com  Sat Aug 16 01:29:37 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Sat, 16 Aug 2008 16:29:37 +0800
Subject: [antlr-interest] why "null" does not work (String Template)
Message-ID: <001101c8ff7a$38a29050$6401a8c0@alien>


  StringTemplate st = new 
       StringTemplate("<chars; wrap, null=\"0\">",     
       AngleBracketTemplateLexer.class);
  st.setAttribute("chars", "a");
  st.setAttribute("chars", "b");
  st.setAttribute("chars", "c");
  st.setAttribute("chars", null);
  st.setAttribute("chars", "e");
  st.setAttribute("chars", "f");
  System.out.println(st.toString());

output is abcef.

thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/6571a1d6/attachment.html 

From jaluber at gmx.de  Sat Aug 16 05:54:25 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 14:54:25 +0200
Subject: [antlr-interest] Possible code generation problem with
 arguments (ANTLR 3.1)
In-Reply-To: <7f8924df0808152225g32498c50i9bc29488bf391490@mail.gmail.com>
References: <7f8924df0808152225g32498c50i9bc29488bf391490@mail.gmail.com>
Message-ID: <48A6CE01.8080708@gmx.de>

Ian Kaplan schrieb:
> 
>   I pass an argument down through the grammar. This is an object that 
> contains a simple symbol table and other book keeping information.  As 
> the parse proceeds objects are added to this container object.  The 
> grammar is shown below.  As you can see, I set backtrack to true since 
> this is a section of the grammar that can't be parsed as I've written 
> the grammar without back tracking.
> 
>   ANTLR apparently generates syntactic predicate delegates or 
> something.  These are shown below as well.  Note that these methods have 
> no argument, unlike the syntax that they were generated from.  They then 
> attempt to call the method generated for the syntax production with an 
> argument that doesn't exist.
> 
>   Is this a bug in ANTLR or a feature?  It should be possible to rewrite 
> the code so that it doesn't use arguments passed downward, but it will 
> be some work to get this done.  So I would be greatful for any insight 
> before I go down this path.  Thanks for your help,
> 
>   Ian

The problem is that ANTLR hoists some predicates into other rules, which 
don't have access to the parameter. Try using scopes or a member 
variable instead.

patternLink[ PatternContainer patternDefintion ]
scope {
PatternContainer patternDef;
}
options{
     backtrack=true;  // Allows parser backtracking
     memoize=true;
}
@init{
patternLink::patternDef = patternDefinition;
}
     : simpleLink
     | rangeLinkSet
     | degreeLinkSet
     ;

The order of the blocks may be different than above, so if ANTLR 
complains reorder them. To access patternDef by any rule called by 
patterLink, use patternLink::patternDef.

Johannes
>  
> 
> patternLink[ PatternContainer patternDef ]
> options{
>     backtrack=true;  // Allows parser backtracking
>     memoize=true;
> }
>     : simpleLink[ patternDef ]
>     | rangeLinkSet[ patternDef ]
>     | degreeLinkSet[ patternDef ]
>     ;
> 
> Generated Java code:
> 
>     // $ANTLR start synpred1_GraphQuery
>     public final void synpred1_GraphQuery_fragment() throws 
> RecognitionException {  
>         // GraphQuery.g:685:7: ( simpleLink[ patternDef ] )
>         // GraphQuery.g:685:7: simpleLink[ patternDef ]
>         {
>         pushFollow(FOLLOW_simpleLink_in_synpred1_GraphQuery1646);
>         simpleLink(patternDef);
> 
>         state._fsp--;
>         if (state.failed) return ;
> 
>         }
>     }
>     // $ANTLR end synpred1_GraphQuery
> 
>     // $ANTLR start synpred2_GraphQuery
>     public final void synpred2_GraphQuery_fragment() throws 
> RecognitionException {  
>         // GraphQuery.g:686:7: ( rangeLinkSet[ patternDef ] )
>         // GraphQuery.g:686:7: rangeLinkSet[ patternDef ]
>         {
>         pushFollow(FOLLOW_rangeLinkSet_in_synpred2_GraphQuery1655);
>         rangeLinkSet(patternDef);
> 
>         state._fsp--;
>         if (state.failed) return ;
> 
>         }
>     }
> 


From jaluber at gmx.de  Sat Aug 16 06:00:40 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 15:00:40 +0200
Subject: [antlr-interest] please remove my id from this group
In-Reply-To: <220151.77386.qm@web7905.mail.in.yahoo.com>
References: <220151.77386.qm@web7905.mail.in.yahoo.com>
Message-ID: <48A6CF78.80209@gmx.de>

manoj bishwal schrieb:
> please remove my id from this group
> regards
> manoj

Please be aware that the usual mode of operandi regarding mailing list 
is that one does unsubscribe himself (as otherwise everyone can do that 
out of malice or the admin would possible drown in such requests). Go to 
<http://www.antlr.org/mailman/listinfo/antlr-interest>, log 
yourself in and choose the unsubscription option available there. Then 
follow its instructions.

Johannes

From jaluber at gmx.de  Sat Aug 16 06:01:43 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 15:01:43 +0200
Subject: [antlr-interest] \0 tokenising ?
In-Reply-To: <1218872114.4568.6.camel@lifeless-64>
References: <1218872114.4568.6.camel@lifeless-64>
Message-ID: <48A6CFB7.7050001@gmx.de>

Robert Collins schrieb:
> Hi, I have a file I want to parse, which contains \0 - ASCII NULL
> characters as delimiters. I can't seem to get antlr3 to recognise this -
> I always get:
> 
>  1:1: Tokens : ( ASCIINULL | MINUS | WHOLE | CRC32 | HEADER | NL |
> NUMENTRIES | NOWHITESPACE ); at offset 53, near char(00) :
> 
> I have tried:
> ASCIINULL: '\0'; 
> ASCIINULL: '\\0';
> ASCIINULL: 0; // errors
> 
> Any guidance on this?
> 
> -Rob

ANTLR uses Java escapes, so I would try '\u0000' instead.

Johannes

From jaluber at gmx.de  Sat Aug 16 06:03:36 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 15:03:36 +0200
Subject: [antlr-interest] why "null" does not work (String Template)
In-Reply-To: <001101c8ff7a$38a29050$6401a8c0@alien>
References: <001101c8ff7a$38a29050$6401a8c0@alien>
Message-ID: <48A6D028.5050308@gmx.de>

gaochunguang schrieb:
> 
>   StringTemplate st = new
>        StringTemplate("<chars; wrap, null=\"0\">",    
>        AngleBracketTemplateLexer.class);
>   st.setAttribute("chars", "a");
>   st.setAttribute("chars", "b");
>   st.setAttribute("chars", "c");
>   st.setAttribute("chars", null);
>   st.setAttribute("chars", "e");
>   st.setAttribute("chars", "f");
>   System.out.println(st.toString());
>  
> output is abcef.
>  
> thanks!

Is your intent do define a default parameter? Then using null won't work
as it is a keyword. IIRC, the wiki for StringTemplate has a complete
list of them.

Johannes

From kroepke at classdump.org  Sat Aug 16 06:27:04 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 16 Aug 2008 15:27:04 +0200
Subject: [antlr-interest] why "null" does not work (String Template)
In-Reply-To: <001101c8ff7a$38a29050$6401a8c0@alien>
References: <001101c8ff7a$38a29050$6401a8c0@alien>
Message-ID: <6DD443E1-B16F-438E-B741-8782A4A5F6D6@classdump.org>

Hi!
(setting reply-to to stringtemplate-interest because that's the  
appropriate place for this question).

On Aug 16, 2008, at 10:29 AM, gaochunguang wrote:

>
>  StringTemplate st = new
>       StringTemplate("<chars; wrap, null=\"0\">",
>       AngleBracketTemplateLexer.class);
>  st.setAttribute("chars", "a");
>  st.setAttribute("chars", "b");
>  st.setAttribute("chars", "c");
>  st.setAttribute("chars", null);
>  st.setAttribute("chars", "e");
>  st.setAttribute("chars", "f");
>  System.out.println(st.toString());
>
> output is abcef.


the setAttribute method ignores anything with a null value. I'm not  
sure what the rationale is behind that, but by writing it like:

        StringTemplate st = new
                 StringTemplate("<chars; wrap, null=\"0\">",
                 AngleBracketTemplateLexer.class);
         st.setAttribute("chars", new String[] {"a", "b", "c", null,  
"e", "f"});
         System.out.println(st.toString());

you get the output:
abc0ef

I believe ST should check if the attribute you want to set already is  
a multivalue container before discarding null values (but not null  
names obviously) in setAttribute(Object, Object), because in the  
current implementation it's not behaving consistently, as shown above.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From zosrothko at orange.fr  Sat Aug 16 06:52:41 2008
From: zosrothko at orange.fr (zosrothko)
Date: Sat, 16 Aug 2008 15:52:41 +0200
Subject: [antlr-interest] ANTLR 3.1: OutOfMemoryError
Message-ID: <48A6DBA9.7010606@orange.fr>

Hi

Got an OutOfMemoryError... Is there any specific flags for getting 
additional traces or messages for reducing/localizing this problem??
What could I do otherwise??


zos

PS: my grammar is 5300 lines, 300 rules, 600 tokens, lookahead=4


From jaluber at gmx.de  Sat Aug 16 06:58:12 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 15:58:12 +0200
Subject: [antlr-interest] ANTLR 3.1: OutOfMemoryError
In-Reply-To: <48A6DBA9.7010606@orange.fr>
References: <48A6DBA9.7010606@orange.fr>
Message-ID: <48A6DCF4.9000009@gmx.de>

zosrothko schrieb:
> Hi
> 
> Got an OutOfMemoryError... Is there any specific flags for getting 
> additional traces or messages for reducing/localizing this problem??
> What could I do otherwise??
> 
> 
> zos
> 
> PS: my grammar is 5300 lines, 300 rules, 600 tokens, lookahead=4
> 

Add the parameter -Xmx1024m for the java command. Adjust the value of 
1024m if necessary.

Johannes

From Austin_Hastings at Yahoo.com  Sat Aug 16 08:46:19 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 16 Aug 2008 10:46:19 -0500
Subject: [antlr-interest] Q: How to understand 'multiple alternatives'?
Message-ID: <48A6F64B.3060709@Yahoo.com>

Howy,

I'm parsing a C-like language, and I'm getting this kind of warning:

warning(200): perl6/hlasm/Hlasm.g3:245:4: Decision can match input such 
as "'&'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

In several places. In fact, the '&' (and several other characters) can 
have different roles to play in the language. In this case, & can either 
be a bitwise and, or an address operator.

However -- and this is what confuses me -- I can't seem to see what 
antlr is griping about. According to me, and expression like

a & b

should not be confusable with

&foo

so I'm wondering why antlr seems to feel that there are different 
alternatives that can parse the &.

Obviously, either there's a problem with antlr or a problem with my 
grammar. I'd like it to be with my grammar, since I can likely fix that.

So my question is, how do I understand what the multiple alternatives 
are, here? I tried dumping the nfa/dfas, to little avail.

Recommendations, advice?

=Austin

From jaluber at gmx.de  Sat Aug 16 09:26:38 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 16 Aug 2008 18:26:38 +0200
Subject: [antlr-interest] Q: How to understand 'multiple alternatives'?
In-Reply-To: <48A6F64B.3060709@Yahoo.com>
References: <48A6F64B.3060709@Yahoo.com>
Message-ID: <48A6FFBE.7090102@gmx.de>

Austin Hastings schrieb:
> Howy,
> 
> I'm parsing a C-like language, and I'm getting this kind of warning:
> 
> warning(200): perl6/hlasm/Hlasm.g3:245:4: Decision can match input such 
> as "'&'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> 
> In several places. In fact, the '&' (and several other characters) can 
> have different roles to play in the language. In this case, & can either 
> be a bitwise and, or an address operator.
> 
> However -- and this is what confuses me -- I can't seem to see what 
> antlr is griping about. According to me, and expression like
> 
> a & b
> 
> should not be confusable with
> 
> &foo
> 
> so I'm wondering why antlr seems to feel that there are different 
> alternatives that can parse the &.
> 
> Obviously, either there's a problem with antlr or a problem with my 
> grammar. I'd like it to be with my grammar, since I can likely fix that.
> 
> So my question is, how do I understand what the multiple alternatives 
> are, here? I tried dumping the nfa/dfas, to little avail.
> 
> Recommendations, advice?
> 
> =Austin
> 
Did you try ANTLRworks? Use the "check grammar" option look for rules 
highlighted with red. Then look at syntax diagrams and decipher the 
different paths a grammar can take to get from point A to point B.

Johannes

From Austin_Hastings at Yahoo.com  Sat Aug 16 10:16:01 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 16 Aug 2008 12:16:01 -0500
Subject: [antlr-interest] Q: How to understand 'multiple alternatives'?
In-Reply-To: <48A6FFBE.7090102@gmx.de>
References: <48A6F64B.3060709@Yahoo.com> <48A6FFBE.7090102@gmx.de>
Message-ID: <48A70B51.1050306@Yahoo.com>

I am trying it now. :)

Whoa.

Okay, at first it got even more confusing. I've learned that:

1. When Antlr talks about "matching input" it means from a particular 
location in the grammar -- not from the beginning of the file. So "can 
match input '&'" really means "can match input '&' AFTER YOU GET HERE."

2. The arrows and diagrams shown in AntlrWorks are also "after you get 
here."

3. The arrows do NOT show "call" behavior, but "code flow" behavior. For 
me, this meant several rules were included that wrapped my inner rules 
only so that the tool could show the code flow leaving those rules. 
There was a lot of "arrow to the end of a rule" that I had to learn to 
ignore.
 
4. When the arrow points to the START of a rule, that's where your 
problem is. In my case, the reason why it was possible to match '&' 
multiple ways, along with 4 other warnings, was because I had forgot to 
specify that variable declarations had to end with a semicolon. It was 
telling me that the end of an initialization (int x = foo) could blur 
into the beginning of an expression statement (&bar ;) forming something 
like "int x = foo &bar;" as either a bitwise-and or as an initialization 
followed by a pointless computation of the address of bar.

Thanks, Johannes!

=Austin





Johannes Luber wrote:
> Austin Hastings schrieb:
>> Howy,
>>
>> I'm parsing a C-like language, and I'm getting this kind of warning:
>>
>> warning(200): perl6/hlasm/Hlasm.g3:245:4: Decision can match input 
>> such as "'&'" using multiple alternatives: 1, 2
>> As a result, alternative(s) 2 were disabled for that input
>>
>> In several places. In fact, the '&' (and several other characters) 
>> can have different roles to play in the language. In this case, & can 
>> either be a bitwise and, or an address operator.
>>
>> However -- and this is what confuses me -- I can't seem to see what 
>> antlr is griping about. According to me, and expression like
>>
>> a & b
>>
>> should not be confusable with
>>
>> &foo
>>
>> so I'm wondering why antlr seems to feel that there are different 
>> alternatives that can parse the &.
>>
>> Obviously, either there's a problem with antlr or a problem with my 
>> grammar. I'd like it to be with my grammar, since I can likely fix that.
>>
>> So my question is, how do I understand what the multiple alternatives 
>> are, here? I tried dumping the nfa/dfas, to little avail.
>>
>> Recommendations, advice?
>>
>> =Austin
>>
> Did you try ANTLRworks? Use the "check grammar" option look for rules 
> highlighted with red. Then look at syntax diagrams and decipher the 
> different paths a grammar can take to get from point A to point B.
>
> Johannes
>


From parrt at cs.usfca.edu  Sat Aug 16 12:30:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Aug 2008 12:30:47 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
Message-ID: <939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>


On Aug 16, 2008, at 12:56 AM, Gerald Rosenberg wrote:
> Even with so much existing, this is not a trivial extension to  
> Antlr.  Theoretically, the end result of any "doSomething()" AST  
> manipulation could be done with a well-planned set of tree-walkers.   
> It is just that a random access approach, supported by the  
> equivalent of findFirst, findNext, findPrev, findLast operations, is  
> distinctly better than a purely top-down (only getNext allowed)  
> approach for non-trivial bi-directionally context-dependent AST  
> rewrite problems.
>
> Unfortunately, does not sound like AntlrMorph addresses this  
> particular problem.

Not sure I understand the specific problem; can you rephrase?

> Ter, do you have another graduate student looking for a project?   
> Or, if I finish my implementation, can I get Ph.D. credits? ;)

sure ;)
Ter

From javafoust at gmail.com  Sat Aug 16 16:10:30 2008
From: javafoust at gmail.com (Foust)
Date: Sat, 16 Aug 2008 16:10:30 -0700
Subject: [antlr-interest] Broken Features?
Message-ID: <000901c8fff5$488e39d0$d9aaad70$@com>

Does it really make sense for Antlr to have such an expressive syntax, when
it is not fully implemented?

 

rule :

n+=('@'? NAME)                              // adds null to the ArrayList

 

n+= NAME                                          // works as expected

 

There are many features like this, that are accepted by the grammar, but
don't work as expected and give no warning or other indication, other than
needing to be debugged. Is the problem design flaws that just don't have a
good solution at the moment, or that v3, being a rewrite, is still in the
prototype stage (with the new syntax still being worked out)?

 

This particular feature (being able to assign an alias to an expression) is
really useful, but would be more so if it worked completely. Is the intent
to leave it partially implemented, fix it at some point, fix the syntax to
disallow unsupported expressions, or document the limitations and produce
warnings in the compiler?

 

Brent

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080816/50b65bac/attachment.html 

From kroepke at classdump.org  Sat Aug 16 17:17:14 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 02:17:14 +0200
Subject: [antlr-interest] Broken Features?
In-Reply-To: <000901c8fff5$488e39d0$d9aaad70$@com>
References: <000901c8fff5$488e39d0$d9aaad70$@com>
Message-ID: <F2569EA6-0725-44E2-ABC8-FDEF5BE7CA90@classdump.org>


On Aug 17, 2008, at 1:10 AM, Foust wrote:

> Does it really make sense for Antlr to have such an expressive  
> syntax, when
> it is not fully implemented?
>
> rule :
> n+=('@'? NAME)                              // adds null to the  
> ArrayList
> n+= NAME                                          // works as expected
>
> There are many features like this, that are accepted by the grammar,  
> but
> don't work as expected and give no warning or other indication,  
> other than
> needing to be debugged.

Which ones? Sounds a bit like using ANTLR 3 is like walking a  
minefield, doesn't it?

> Is the problem design flaws that just don't have a
> good solution at the moment, or that v3, being a rewrite, is still  
> in the
> prototype stage (with the new syntax still being worked out)?

I'm sorry, somehow that sentence strikes as a bit non-constructive. I  
might be touchy, but I see problems like this one as minor issues not  
"design flaws".
I also strongly object to call ANTLR 3.1 as being in "prototype stage".
This question could easily have been framed as:
"I'm trying to do n+=(A? B) but it doesn't seem to work, instead it  
adds null to the list. Is this a known problem?"
instead of going the slightly more aggressive route.

> This particular feature (being able to assign an alias to an  
> expression) is
> really useful, but would be more so if it worked completely. Is the  
> intent
> to leave it partially implemented, fix it at some point, fix the  
> syntax to
> disallow unsupported expressions, or document the limitations and  
> produce
> warnings in the compiler?


http://antlr.org/wiki/label/ANTLR3/todo
http://antlr.org/wiki/display/ANTLR3/To+implement
and for this one:
http://antlr.org/wiki/display/ANTLR3/implement+labeled+set

And now that I look, I find both http://www.antlr.org:8888/browse/ANTLR-313 
  and the associated email thread from Jul/30-31.
Are you seriously expecting people (effectively Ter) to drop  
everything else and implement that in two weeks?

Of course, reporting bugs and shortcomings is fine and very much  
appreciated, don't get me wrong. After all that's what drives a project.

-k
-- 
Kay R?pke
http://classdump.org/







From rich at steelezone.net  Sat Aug 16 19:42:16 2008
From: rich at steelezone.net (Richard Steele)
Date: Sun, 17 Aug 2008 02:42:16 +0000 (UTC)
Subject: [antlr-interest] A very basic grammar--and I'm confused!
Message-ID: <loom.20080817T023559-877@post.gmane.org>

I'm missing something really basic here and would appreciate some help.  I'm not
new to the subject--but it has been a few years and I must have forgotten
everything I (thought?) I knew.

I have a really simple grammar:

grammar R;

r	:	'X' ID;
ID	:	'A'..'Z'+;

However, this returns a MismatchedTokenException for every (alphabetic) input. 
It appears that the 'X' is getting greedily swallowed by the expression for ID,
but I don't understand why that would be, nor how to prevent it from happening.
 (If I change the 'X' to '1', or anything else not in ID, then it works as I
expect.)

Can anyone (gently) help?

Thanks,
Rich




From antlr at mirality.co.nz  Sat Aug 16 21:51:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 17 Aug 2008 16:51:30 +1200
Subject: [antlr-interest] A very basic grammar--and I'm confused!
In-Reply-To: <loom.20080817T023559-877@post.gmane.org>
References: <loom.20080817T023559-877@post.gmane.org>
Message-ID: <20080817045135.6C79511EE42@www.antlr.org>

At 14:42 17/08/2008, Richard Steele wrote:
 >grammar R;
 >
 >r	:	'X' ID;
 >ID	:	'A'..'Z'+;
 >
 >However, this returns a MismatchedTokenException for every
 >(alphabetic) input.
 >It appears that the 'X' is getting greedily swallowed by the
 >expression for ID, but I don't understand why that would be,
 >nor how to prevent it from happening.
 >(If I change the 'X' to '1', or anything else not in ID, then
 >it works as I expect.)

This is why it's dangerous to use literals in parser rules :)

The main thing you need to always keep in mind is that (unlike 
some other parser generators), ANTLR performs the entire lexing 
phase up front without any input from the parser.  The parser only 
gets a shot once everything has been turned into tokens.

Another thing in play here is that when you use a quoted literal 
in a parser rule, what you're really telling ANTLR to do is to 
generate a hidden lexer rule that matches this.  Putting it a 
different way, your grammar above is treated equivalently to this:

grammar R;

r : T4 ID;
T4 : 'X';
ID : 'A'..'Z'+;

The final piece of the puzzle is that given a choice between two 
tokens at lexing time, ANTLR will favour the longest match -- and 
once "inside" a token, it will not consider alternative 
interpretations.

So, putting this all together:
   "X" => T4["X"]
   "A" => ID["A"]
   "AX" => ID["AX"]
   "XYZ" => ID["XYZ"]
   "X YZ" => T4["X"] ID["YZ"] (with an error, since you don't have 
a whitespace rule)

Hopefully this all makes sense now :)

Where to go from here depends on exactly how your *real* grammar 
is structured (instead of the simplified example); you may need to 
merge the lexer rules and give it some explicit disambiguation -- 
or possibly just add a whitespace rule, if the 'X' is actually 
representing a keyword that must be surrounded by whitespace.


From antlr at t0m.me.uk  Sun Aug 17 03:47:22 2008
From: antlr at t0m.me.uk (Tom Edwards)
Date: Sun, 17 Aug 2008 11:47:22 +0100
Subject: [antlr-interest] Parsing (a+b)+(c+d)
Message-ID: <1218970042.8040.2.camel@Deepthought>

Hi,

Sorry if this is a bit of newb question however I am pretty new to
language translation and I can't seem to find the answer to this
question. I am trying to parse the following simple expression:

(a+b)+(c+d)

With the following grammar:

grammar Vector;
options {
       output=AST;
       ASTLabelType=CommonTree;
}

prog    :       (stmt
{System.out.println($stmt.tree.toStringTree());} )+;
stmt    :       expr NEWLINE?;

expr    :       IDENTIFIER exprD
       |       '(' expr ')';
exprD   :       OP (exprD|IDENTIFIER);


OP      :       '+';

IDENTIFIER
       :       ('a'..'z'|'A'..'Z');
NEWLINE :        '\r'?'\n';

Which is based of an example I have found on the website.
The problem is that as Antlr is LL (am I right here?) you cannot have
left recursion, which is fine, however I am not sure how you can
construct something to parse the original problem. Splitting the
problem into expr and exprD is a technique I have borrowed from the
"dragon" book, however in this case it does work very well, but not
with the parenthesis.

Again, sorry if this is a silly question however it is bugging me and
I don't have any other form of support.

Kind regards and thanks for any help you can offer.

Tom



From nelson.ana at gmail.com  Sun Aug 17 03:56:13 2008
From: nelson.ana at gmail.com (Ana Nelson)
Date: Sun, 17 Aug 2008 11:56:13 +0100
Subject: [antlr-interest] Parsing (a+b)+(c+d)
In-Reply-To: <1218970042.8040.2.camel@Deepthought>
References: <1218970042.8040.2.camel@Deepthought>
Message-ID: <ADB28622-37A0-4AA6-9FA6-8CD0D99496F3@gmail.com>

Tom,

This example grammar might give you an idea:
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

Regards,
Ana


On 17 Aug 2008, at 11:47, Tom Edwards wrote:

> Hi,
>
> Sorry if this is a bit of newb question however I am pretty new to
> language translation and I can't seem to find the answer to this
> question. I am trying to parse the following simple expression:
>
> (a+b)+(c+d)
>
> With the following grammar:
>
> grammar Vector;
> options {
>       output=AST;
>       ASTLabelType=CommonTree;
> }
>
> prog    :       (stmt
> {System.out.println($stmt.tree.toStringTree());} )+;
> stmt    :       expr NEWLINE?;
>
> expr    :       IDENTIFIER exprD
>       |       '(' expr ')';
> exprD   :       OP (exprD|IDENTIFIER);
>
>
> OP      :       '+';
>
> IDENTIFIER
>       :       ('a'..'z'|'A'..'Z');
> NEWLINE :        '\r'?'\n';
>
> Which is based of an example I have found on the website.
> The problem is that as Antlr is LL (am I right here?) you cannot have
> left recursion, which is fine, however I am not sure how you can
> construct something to parse the original problem. Splitting the
> problem into expr and exprD is a technique I have borrowed from the
> "dragon" book, however in this case it does work very well, but not
> with the parenthesis.
>
> Again, sorry if this is a silly question however it is bugging me and
> I don't have any other form of support.
>
> Kind regards and thanks for any help you can offer.
>
> Tom
>




From Vitaliy at dbsophic.com  Sun Aug 17 12:26:43 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Sun, 17 Aug 2008 22:26:43 +0300
Subject: [antlr-interest] Preserving comments
In-Reply-To: <48A4B1D2.4010301@jazillian.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>

Hi guys,

Thanks so much for all the suggestions.
I see now that I have no choice, but to go with comment granularity level of a rule -
That is I'll associate all the comments that appear inside some rule with that rule in general.

When translated, this will move the comments from their original location to the end of the rule -
Also I'll have to deal with the association in each rule separately,
But I don't see any better solution from the discussion.

Anyway, thanks for your efforts,
Vitaliy

-----Original Message-----
From: Andy Tripp [mailto:antlr at jazillian.com]
Sent: Friday, August 15, 2008 00:30
To: Vitaliy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Preserving comments

It's very difficult, in practice, to associate comments with code.
A comment may "go with" code that's above it, below it, left or right of it.
It has a lot do do with how people perceive whitespace.
Peter Ahe at Sun wrote a good paper on the subject years ago.

I wrote some pretty involved heuristics to try to figure out what
comments "go with" certain code.

I have the ANTLR lexer preserve the comments and whitespace and then my own processor
analyses them before stripping them out of the stream of tokens.
But to attach comments to individual AST nodes doesn't work well if the AST changes a lot.

Andy

Vitaliy wrote:

> But failed to find a good-enough way to preserve comments.





__________ Information from ESET NOD32 Antivirus, version of virus signature database 3361 (20080816) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3362 (20080817) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From atif.azad at hotmail.com  Sun Aug 17 11:19:38 2008
From: atif.azad at hotmail.com (atif azad)
Date: Sun, 17 Aug 2008 23:19:38 +0500
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com> 
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
Message-ID: <BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>



hello ,

please I would now like to be unsubscribed from this group.

Regards

Azad , Atif


_________________________________________________________________
Connect to the next generation of MSN Messenger?
http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/94829c81/attachment-0001.html 

From cvrebert at gmail.com  Sun Aug 17 11:32:54 2008
From: cvrebert at gmail.com (Chris Rebert)
Date: Sun, 17 Aug 2008 11:32:54 -0700
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
Message-ID: <47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>

You signed up to this list using the ANTLR website's mailman
mailinglist interface at
http://www.antlr.org/mailman/listinfo/antlr-interest (which is
easily found using Google). Just use it again. There's a big
"Unsubscribe" button that's just what you want.

Please take note of this process for other future mailinglists you may
join and then want to leave, because it's annoying, pointless, and a
big waste of everyone's time when you post unsubscribe requests to the
entire mailinglist.

</netiquette-lecture>

- Chris


On Sun, Aug 17, 2008 at 11:19 AM, atif azad <atif.azad at hotmail.com> wrote:
>
> hello ,
>
> please I would now like to be unsubscribed from this group.
>
> Regards
>
> Azad , Atif
>
>
> ________________________________
> Connect to the next generation of MSN Messenger  Get it now!

From Vitaliy at dbsophic.com  Sun Aug 17 12:50:19 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Sun, 17 Aug 2008 22:50:19 +0300
Subject: [antlr-interest] Lazy load of CommonTokenStream??
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>

Hi,



I've encountered some really interesting behavior of the CommonTokenStream:

Right after the constructor of the parser, I'm trying to use the method Size() of CommonTokenStream, to retrieve the number of tokens in the input.

It would return 0, no matter how many tokens actually exist in the input.

BUT funny enough, if I call before that to the method LA(1), then  everything works fine.



Could anyone please enlighten me regarding the reason?

Can it be avoided somehow?  Is there a better way than calling LA(1)?



Many Thanks,

Vitaliy

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/fa8f38a1/attachment.html 

From Austin_Hastings at Yahoo.com  Sun Aug 17 11:54:35 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 17 Aug 2008 13:54:35 -0500
Subject: [antlr-interest] Parsing (a+b)+(c+d)
In-Reply-To: <ADB28622-37A0-4AA6-9FA6-8CD0D99496F3@gmail.com>
References: <1218970042.8040.2.camel@Deepthought>
	<ADB28622-37A0-4AA6-9FA6-8CD0D99496F3@gmail.com>
Message-ID: <48A873EB.5080104@Yahoo.com>

Tom,

There are some important differences between LALR and LL, and you will 
kind of have to bump up against them as you go along -- hearing about 
them doesn't really get it burned into your brain.
 
The "big thing" with expression parsing in antlr is implementing 
precedence and associativity. (If you don't know what those two words 
mean in this context, try Wikipedia.)

The simplest approach is to build a new rule for each level of 
precedence. In your (a+b)+(c+d) example, you have three different things 
going on:

1. Identifiers
2. The '+' operator
3. Parenthesized sub-expressions.

In general, an identifier is an atom -- it cannot be further divided for 
parsing, so it is the innermost thing. But a (subexpr) is also an atom 
for purposes of expression evaluation. So you'll see a lot of expression 
parsing examples that look like this:

atom: IDENTIFIER | '(' expression ')' ;

That represents the innermost layer of precedence. You proceed to wrap 
things around it. But one issue you have to stay aware of is that for a 
complex grammar, you aren't REQUIRED to have a certain operator in use. 
That is, just because you support both '+' and '*' doesn't mean that 
every expression has to use them. So your first consideration has to be 
for "passing through" an expression that doesn't use a particular operation.

plus_expr : atom ;

Then you make the operator, and the rest of the expression, optional:

plus_expr : atom ( '+' atom)? ;

But most languages support a+b+c syntax without parens, so you'll have 
to support more than just zero-or-one operators:

plus_expr : atom ('+' atom)* ;    // Note '*' instead of '?' at end

Then tie it up with a nice bow on it, by providing a top-level entry point:

expression: plus_expr ;
plus_expr : atom ('+' atom)* ;    // Note '*' instead of '?' at end
atom: IDENTIFIER | '(' expression ')' ;

One thing this does not address is associativity. If you have a 
left-associative operator (and most 'math' is left-assoc) you can build 
your tree as you go along:

plus_expr
    : ( atom -> atom )
      ( ( '+' atom ->  ^('+' $plus_expr atom) )
     // | ( '-' etc. )
      )*
    ;

This takes a+b+c and yields an AST like (+ (+ a b) c). The $plus_expr 
takes the "present result" of the parsing and inserts it into a larger 
AST expression.

On the other hand, exponentiation is right-associative. a**b**c should 
eval as (** a (** b c)). This is a question of mathematical convenience. 
If the associativity were left, then
a**b**c would be the same as a**(bc), which reduces the expressive power 
of the notation. Mathematicians are all about expressive power.

Since the expression is right-associative, you just have to recognize 
the leftmost bits, grab them, and recurse. BUT you have to make sure you 
have one absolutely distinctive leftmost bit to grab. If your left side 
is ambiguous, you're in hell. Make sure, if possible, that there's an 
explicit operator or token to use as the signal.

expon_expr : atom '**' expon_expr ;

Of course, the operator isn't required:

expon_expr
    : atom ('**' expon_expr  -> ^('**' atom expon_expr)
             | /*nothing*/ -> atom)
    ;


Finally, two things to keep in mind in "expression-land." First, in C 
and similar languages, there are some cases where the syntax changes if 
an operator is not used. In particular, assignment expressions (a = b) 
are lower priority than conditional expressions (a ? b : c). But a 
conditional expression is NOT a legal Lvalue, so an assignment has a 
different syntax than a pass-thru:

assignment
    : lvalue '=' assignment
    | conditional //passthru
    ;

Second, keep in mind that a token is not a magic cookie. Tokens get 
reused, a LOT. Sometimes it isn't completely obvious. C, et al, use 
commas as an operator and to delimit lists. You will have to handle 
these cases separately, and you will have to provide a entry point into 
your expression hierarchy so that a parse context that needs commas for 
list delimiters can skip over the comma-as-operator part of the 
expression chain. (Similarly, parens are both postfix-operators for 
calling functions, and circumfix operators for delimiting subexpressions.)

Good luck,

=Austin

  
Ana Nelson wrote:
> Tom,
>
> This example grammar might give you an idea:
> http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>
> Regards,
> Ana
>
>
> On 17 Aug 2008, at 11:47, Tom Edwards wrote:
>
>> Hi,
>>
>> Sorry if this is a bit of newb question however I am pretty new to
>> language translation and I can't seem to find the answer to this
>> question. I am trying to parse the following simple expression:
>>
>> (a+b)+(c+d)
>>
>> With the following grammar:
>>
>> grammar Vector;
>> options {
>>       output=AST;
>>       ASTLabelType=CommonTree;
>> }
>>
>> prog    :       (stmt
>> {System.out.println($stmt.tree.toStringTree());} )+;
>> stmt    :       expr NEWLINE?;
>>
>> expr    :       IDENTIFIER exprD
>>       |       '(' expr ')';
>> exprD   :       OP (exprD|IDENTIFIER);
>>
>>
>> OP      :       '+';
>>
>> IDENTIFIER
>>       :       ('a'..'z'|'A'..'Z');
>> NEWLINE :        '\r'?'\n';
>>
>> Which is based of an example I have found on the website.
>> The problem is that as Antlr is LL (am I right here?) you cannot have
>> left recursion, which is fine, however I am not sure how you can
>> construct something to parse the original problem. Splitting the
>> problem into expr and exprD is a technique I have borrowed from the
>> "dragon" book, however in this case it does work very well, but not
>> with the parenthesis.
>>
>> Again, sorry if this is a silly question however it is bugging me and
>> I don't have any other form of support.
>>
>> Kind regards and thanks for any help you can offer.
>>
>> Tom
>>
>
>
>
>


From kroepke at classdump.org  Sun Aug 17 12:01:19 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 21:01:19 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
Message-ID: <286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>


On Aug 17, 2008, at 9:50 PM, Vitaliy wrote:

> I've encountered some really interesting behavior of the  
> CommonTokenStream:
>
> Right after the constructor of the parser, I'm trying to use the  
> method Size() of CommonTokenStream, to retrieve the number of tokens  
> in the input.
> It would return 0, no matter how many tokens actually exist in the  
> input.
> BUT funny enough, if I call before that to the method LA(1), then   
> everything works fine.

CommonTokenStream buffers all tokens up when it is first used.  
Unfortunately, size() does not trigger filling the buffer which seems  
like a bug. I see no reason why it shouldn't fill the buffer, that is.

> Could anyone please enlighten me regarding the reason?
> Can it be avoided somehow?  Is there a better way than calling LA(1)?


Just call LA(1) for now, it works and doesn't hurt, after all it gives  
you the next lookahead token which is a cheap operation.
Alternatively you can ask for all tokens (getTokens()) which seems  
like a waste because it gives you a new copy of the list (it does it  
because you can give it a tokentype filter).

If you definitely want to get rid of the LA(1) call, simply subclass  
CommonTokenStream and override size() to be:

public int size() {
	if ( p == -1 ) { fillBuffer(); }
	return super.size();
}

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From jimi at temporal-wave.com  Sun Aug 17 12:13:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Aug 2008 12:13:33 -0700
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
Message-ID: <1219000413.8012.59.camel@jimi>

On Sun, 2008-08-17 at 21:01 +0200, Kay R?pke wrote:

> On Aug 17, 2008, at 9:50 PM, Vitaliy wrote:
> 
> > I've encountered some really interesting behavior of the  
> > CommonTokenStream:
> >
> > Right after the constructor of the parser, I'm trying to use the  
> > method Size() of CommonTokenStream, to retrieve the number of tokens  
> > in the input.
> > It would return 0, no matter how many tokens actually exist in the  
> > input.
> > BUT funny enough, if I call before that to the method LA(1), then   
> > everything works fine.
> 
> CommonTokenStream buffers all tokens up when it is first used.  
> Unfortunately, size() does not trigger filling the buffer which seems  
> like a bug. I see no reason why it shouldn't fill the buffer, that is.


I agree. In fact this might well be more intuitive, however we should
think about any performance impact as this might be the reason it does
not do this - in the C runtime I can take care of this by flipping
functions after the first call, but you can't hack that in Java.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/d250c2a1/attachment.html 

From rulatir at wp.pl  Sun Aug 17 12:15:35 2008
From: rulatir at wp.pl (Szczepan =?iso-8859-2?q?Ho=B3yszewski?=)
Date: Sun, 17 Aug 2008 21:15:35 +0200
Subject: [antlr-interest] Parsing (a+b)+(c+d)
In-Reply-To: <1218970042.8040.2.camel@Deepthought>
References: <1218970042.8040.2.camel@Deepthought>
Message-ID: <200808172115.36098.rulatir@wp.pl>

Tom Edwards wrote:

> I am trying to parse the following simple expression:
>
> (a+b)+(c+d)
>
> With the following grammar:

[snip]

> expr    :       IDENTIFIER exprD
>
>        |       '(' expr ')';
>
> exprD   :       OP (exprD|IDENTIFIER);

There is no way this grammar can ever parse (a+b)+(c+d) because it specifies 
that OP must always _follow_ IDENTIFIER. This is the case because:

	- exprD must follow IDENTIFIER, by the first rule and the fact that exprD
	  doesn't occur anywhere else

	- exprD must start with OP and OP doesn't occur anywhere else

Your input however contains ')+', which is OP following something other than 
IDENTIFIER.

Try this:

expr  :  term (OP^ term)*  ;

term  :  IDENTIFIER  |  '('! expr ')'!  ;

Szczepan Holyszewski


From atif.azad at hotmail.com  Sun Aug 17 12:15:47 2008
From: atif.azad at hotmail.com (atif azad)
Date: Mon, 18 Aug 2008 00:15:47 +0500
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl> 
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
Message-ID: <BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>



Well in the other mailing groups the process is somehow different and much much simpler,
its a little bit tricky here .
 But thats my point of view.
Thanks any ways ,

Azad , Atif


> Date: Sun, 17 Aug 2008 11:32:54 -0700
> From: cvrebert at gmail.com
> To: atif.azad at hotmail.com
> Subject: Re: [antlr-interest] unsubscribe request
> CC: antlr-interest at antlr.org
> 
> You signed up to this list using the ANTLR website's mailman
> mailinglist interface at
> http://www.antlr.org/mailman/listinfo/antlr-interest (which is
> easily found using Google). Just use it again. There's a big
> "Unsubscribe" button that's just what you want.
> 
> Please take note of this process for other future mailinglists you may
> join and then want to leave, because it's annoying, pointless, and a
> big waste of everyone's time when you post unsubscribe requests to the
> entire mailinglist.
> 
> </netiquette-lecture>
> 
> - Chris
> 
> 
> On Sun, Aug 17, 2008 at 11:19 AM, atif azad <atif.azad at hotmail.com> wrote:
> >
> > hello ,
> >
> > please I would now like to be unsubscribed from this group.
> >
> > Regards
> >
> > Azad , Atif
> >
> >
> > ________________________________
> > Connect to the next generation of MSN Messenger  Get it now!

_________________________________________________________________
Connect to the next generation of MSN Messenger?
http://imagine-msn.com/messenger/launch80/default.aspx?locale=en-us&source=wlmailtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/4fcd5565/attachment.html 

From kroepke at classdump.org  Sun Aug 17 12:44:50 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 21:44:50 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1219000413.8012.59.camel@jimi>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
Message-ID: <1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>


On Aug 17, 2008, at 9:13 PM, Jim Idle wrote:

>>
>> CommonTokenStream buffers all tokens up when it is first used.
>> Unfortunately, size() does not trigger filling the buffer which seems
>> like a bug. I see no reason why it shouldn't fill the buffer, that  
>> is.
>
> I agree. In fact this might well be more intuitive, however we should
> think about any performance impact as this might be the reason it does
> not do this - in the C runtime I can take care of this by flipping
> functions after the first call, but you can't hack that in Java.


Not sure I understand what you are getting at.
fillBuffer() will set p = 0 when it is first called, thus getting the  
size of the tokens calls fillBuffer() only once.
Actually all other methods that access tokens (with the notable  
exception of get()) perform this check, too, so they all "suffer" from  
that if.

Of course swizzling function pointers is more efficient in that sense,  
you simply move the if out of the way :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From michael.gerz at teststep.org  Sun Aug 17 12:52:29 2008
From: michael.gerz at teststep.org (Dr. Michael Gerz)
Date: Sun, 17 Aug 2008 21:52:29 +0200
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
Message-ID: <48A8817D.5050702@teststep.org>

Dear ANTLR developers, hi Terence,

when upgrading to the latest and greatest ANTLR 3.1, we noticed a 
significant performance downgrade that makes it almost unuseable for our 
purposes.

In our system, we use a grammar that is a modified version of the 'Java' 
grammar given on the ANTLR web page, with some minor test-specific 
extensions and a few simplifications. By means of a ANTLR tree grammar 
(using StringTemplate), we transform these extensions to plain Java.

In the past, the transformation times were neglectable (within the range 
of a few seconds). However, with ANTLR 3.1 final, converting a 679KB 
input file into a 735KB Java file takes about 10 minutes!

I tried to identify the problem and came up with the following conclusions:

 * The performance slowdown happens in our tree grammar. The ANTLR
   parser and lexer are pretty fast.
 * The showstopper was introduced sometime between intermediate release
   antlr-2008-05-25.11.tar.gz (fast) and antlr-2008-08-03.16.tar.gz (slow).
 * The performance seems to decrease exponentially with the input size.

Below please find the header of our tree grammar and the method that 
invokes it.

Does anybody have any idea why ANTLR has become so extremely slow just 
before its final release? I am sure that this must be a general problem 
that also affects other people. Is there anything else that you need to 
analyse the problem?

Thanks in advance!

Michael



++++++ Snippet from JavaCodeGenerator.g ++++++

tree grammar JavaCodeGenerator;

options {
        k = 1;
        ASTLabelType = CommonTree;
        tokenVocab = TestLang;
        output = template;
        rewrite = true;
    }

... some scope definitions ...

@members {

    ... some member definitions ...
}

@header {
    package de.fgan.fkie.sylt.testsystem.testlang;

    ... some import declarations ...
}

... the start rule ... where needed, string templates are used ...

compilationUnit
    :    idecls+=importDeclaration*
        (    tsd=testsuiteDeclaration
            -> template(ids={$idecls}, tsd={$tsd.text})
<<
package de.fgan.fkie.sylt.test;

import de.fgan.fkie.sylt.testsystem.server.testrunner.TestRunner;

<ids>
<tsd>
 >>
        |    tgd=testgroupDeclaration
            -> template(ids={$idecls}, imp={getImportStatements()}, 
tgd={$tgd.text})
<<
package de.fgan.fkie.sylt.test;

<imp>

<ids>
<tgd>
 >>
        )
    ;

... and so on ...


++++++ Invocation of JavaCodeGenerator ++++++


    private static void saveAsJava(String testGroupName, String script) {
        ANTLRInputStream input;
        try {
            input = new ANTLRInputStream(new 
ByteArrayInputStream(script.getBytes()));
            TestLangLexer lexer = new TestLangLexer(input);
            TokenRewriteStream tokens = new TokenRewriteStream(lexer);
            TestLangParser parser = new TestLangParser(tokens);
            TestLangParser.compilationUnit_return r;
            try {
                r = parser.compilationUnit();
            } catch (RecognitionException e) {
                throw new RuntimeException("Error while parsing " + 
testGroupName + ":"
                        + parser.getErrorMessage(e, 
TestLangParser.tokenNames));
            }
            CommonTree t = (CommonTree) r.getTree();
            CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
            nodes.setTokenStream(tokens);
            JavaCodeGenerator codeGen = new JavaCodeGenerator(nodes);

            JavaCodeGenerator.compilationUnit_return r2;
            try {
                r2 = codeGen.compilationUnit();  /// SLOOOOOW, SOOO SLOOOOOW
            } catch (RecognitionException e) {
                throw new RuntimeException("Error while parsing " + 
testGroupName + ":"
                        + codeGen.getErrorMessage(e, 
JavaCodeGenerator.tokenNames));
            }

            File f = new 
File(ServerProperties.SERVER_TEST_CLASS_DIRECTORY + File.separator
                    + testGroupName + ".java");
            FileWriter out = new FileWriter(f);
            out.write(r2.st.toString());
            out.close();

        } catch (IOException e) {
            throw new RuntimeException("Error while reading/writing " + 
testGroupName + ":"
                    + e.getMessage(), e);
        }
    }




From antlr at mirality.co.nz  Sun Aug 17 13:01:03 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 18 Aug 2008 08:01:03 +1200
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
Message-ID: <20080817200109.81F7211EC2E@www.antlr.org>

At 07:15 18/08/2008, atif azad wrote:

>Well in the other mailing groups the process is somehow different 
>and much much simpler,
>its a little bit tricky here .
>  But thats my point of view.

It's not even slightly tricky, and is exactly the same as any 
other mailing list.

If you don't want to go to the website to unsubscribe, you can 
just click on the link in the List-Unsubscribe header that's 
attached to every single email in the list.  Or in the email you 
were sent when you first subscribed to the list. 


From antlr at mirality.co.nz  Sun Aug 17 13:02:25 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 18 Aug 2008 08:02:25 +1200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
	<1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
Message-ID: <20080817200231.4538F11EC4B@www.antlr.org>

At 07:44 18/08/2008, Kay R?pke wrote:
 >Of course swizzling function pointers is more efficient in that
 >sense, you simply move the if out of the way :)

It would break the C runtime's "inheritance" 
model, though.  Let's not go there ;)


From jaluber at gmx.de  Sun Aug 17 13:08:37 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 17 Aug 2008 22:08:37 +0200
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <48A8817D.5050702@teststep.org>
References: <48A8817D.5050702@teststep.org>
Message-ID: <48A88545.6010600@gmx.de>

Dr. Michael Gerz schrieb:
> Dear ANTLR developers, hi Terence,
> 
> when upgrading to the latest and greatest ANTLR 3.1, we noticed a
> significant performance downgrade that makes it almost unuseable for our
> purposes.
> 
> In our system, we use a grammar that is a modified version of the 'Java'
> grammar given on the ANTLR web page, with some minor test-specific
> extensions and a few simplifications. By means of a ANTLR tree grammar
> (using StringTemplate), we transform these extensions to plain Java.
> 
> In the past, the transformation times were neglectable (within the range
> of a few seconds). However, with ANTLR 3.1 final, converting a 679KB
> input file into a 735KB Java file takes about 10 minutes!
> 
> I tried to identify the problem and came up with the following conclusions:
> 
> * The performance slowdown happens in our tree grammar. The ANTLR
>   parser and lexer are pretty fast.
> * The showstopper was introduced sometime between intermediate release
>   antlr-2008-05-25.11.tar.gz (fast) and antlr-2008-08-03.16.tar.gz (slow).
> * The performance seems to decrease exponentially with the input size.
> 
> Below please find the header of our tree grammar and the method that
> invokes it.

Please post also the .tokens file you are referencing in the tree
grammar. Furthermore, you are merely posting parts of the file, so you
did you check that you haven't removed accidentally the problematic input?

Johannes
> 
> Does anybody have any idea why ANTLR has become so extremely slow just
> before its final release? I am sure that this must be a general problem
> that also affects other people. Is there anything else that you need to
> analyse the problem?
> 
> Thanks in advance!
> 
> Michael
> 
> 
> 
> ++++++ Snippet from JavaCodeGenerator.g ++++++
> 
> tree grammar JavaCodeGenerator;
> 
> options {
>        k = 1;
>        ASTLabelType = CommonTree;
>        tokenVocab = TestLang;
>        output = template;
>        rewrite = true;
>    }
> 
> ... some scope definitions ...
> 
> @members {
> 
>    ... some member definitions ...
> }
> 
> @header {
>    package de.fgan.fkie.sylt.testsystem.testlang;
> 
>    ... some import declarations ...
> }
> 
> ... the start rule ... where needed, string templates are used ...
> 
> compilationUnit
>    :    idecls+=importDeclaration*
>        (    tsd=testsuiteDeclaration
>            -> template(ids={$idecls}, tsd={$tsd.text})
> <<
> package de.fgan.fkie.sylt.test;
> 
> import de.fgan.fkie.sylt.testsystem.server.testrunner.TestRunner;
> 
> <ids>
> <tsd>
>>>
>        |    tgd=testgroupDeclaration
>            -> template(ids={$idecls}, imp={getImportStatements()},
> tgd={$tgd.text})
> <<
> package de.fgan.fkie.sylt.test;
> 
> <imp>
> 
> <ids>
> <tgd>
>>>
>        )
>    ;
> 
> ... and so on ...
> 
> 
> ++++++ Invocation of JavaCodeGenerator ++++++
> 
> 
>    private static void saveAsJava(String testGroupName, String script) {
>        ANTLRInputStream input;
>        try {
>            input = new ANTLRInputStream(new
> ByteArrayInputStream(script.getBytes()));
>            TestLangLexer lexer = new TestLangLexer(input);
>            TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>            TestLangParser parser = new TestLangParser(tokens);
>            TestLangParser.compilationUnit_return r;
>            try {
>                r = parser.compilationUnit();
>            } catch (RecognitionException e) {
>                throw new RuntimeException("Error while parsing " +
> testGroupName + ":"
>                        + parser.getErrorMessage(e,
> TestLangParser.tokenNames));
>            }
>            CommonTree t = (CommonTree) r.getTree();
>            CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
>            nodes.setTokenStream(tokens);
>            JavaCodeGenerator codeGen = new JavaCodeGenerator(nodes);
> 
>            JavaCodeGenerator.compilationUnit_return r2;
>            try {
>                r2 = codeGen.compilationUnit();  /// SLOOOOOW, SOOO SLOOOOOW
>            } catch (RecognitionException e) {
>                throw new RuntimeException("Error while parsing " +
> testGroupName + ":"
>                        + codeGen.getErrorMessage(e,
> JavaCodeGenerator.tokenNames));
>            }
> 
>            File f = new
> File(ServerProperties.SERVER_TEST_CLASS_DIRECTORY + File.separator
>                    + testGroupName + ".java");
>            FileWriter out = new FileWriter(f);
>            out.write(r2.st.toString());
>            out.close();
> 
>        } catch (IOException e) {
>            throw new RuntimeException("Error while reading/writing " +
> testGroupName + ":"
>                    + e.getMessage(), e);
>        }
>    }
> 
> 
> 


From brent.yates at gmail.com  Sun Aug 17 13:06:02 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Sun, 17 Aug 2008 16:06:02 -0400
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <20080817200109.81F7211EC2E@www.antlr.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
Message-ID: <6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>

In his defense, I have never seen a List-Unsubscribe header on any ANTLR
emails.  It IS easy to unsubscribe from the main ANTLR web site, but the
information is not in the emails that I get.

byates

On Sun, Aug 17, 2008 at 4:01 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 07:15 18/08/2008, atif azad wrote:
>
>  Well in the other mailing groups the process is somehow different and much
>> much simpler,
>> its a little bit tricky here .
>>  But thats my point of view.
>>
>
> It's not even slightly tricky, and is exactly the same as any other mailing
> list.
>
> If you don't want to go to the website to unsubscribe, you can just click
> on the link in the List-Unsubscribe header that's attached to every single
> email in the list.  Or in the email you were sent when you first subscribed
> to the list.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/3fc2fc8b/attachment.html 

From r_reitzi at cs.uni-kl.de  Sun Aug 17 13:09:07 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Sun, 17 Aug 2008 22:09:07 +0200
Subject: [antlr-interest] unsubscribe request
In-Reply-To: <6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
Message-ID: <20080817220907.77541zp3t7vwzp0g@horde.verrech.net>

I can see those header entries if I tell Horde to show _all_ header  
fields. Normally, only the most usual fields are shown. Other clients  
do not offer the option to show more.

I know lists that do not offer a web interface and work solely via  
mails with certain subjects or recipient adress. I like the webpage  
model better.

Regards

Raphael

"Brent Yates" <brent.yates at gmail.com> wrote (Sun Aug 17 22:06:02 2008):

> In his defense, I have never seen a List-Unsubscribe header on any ANTLR
> emails.  It IS easy to unsubscribe from the main ANTLR web site, but the
> information is not in the emails that I get.
>
> byates
>
> On Sun, Aug 17, 2008 at 4:01 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
>> At 07:15 18/08/2008, atif azad wrote:
>>
>>  Well in the other mailing groups the process is somehow different and much
>>> much simpler,
>>> its a little bit tricky here .
>>>  But thats my point of view.
>>>
>>
>> It's not even slightly tricky, and is exactly the same as any other mailing
>> list.
>>
>> If you don't want to go to the website to unsubscribe, you can just click
>> on the link in the List-Unsubscribe header that's attached to every single
>> email in the list.  Or in the email you were sent when you first subscribed
>> to the list.
>>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/5e5fcf4f/attachment.bin 

From jimi at temporal-wave.com  Sun Aug 17 13:14:58 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Aug 2008 13:14:58 -0700
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
	<1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
Message-ID: <1219004098.8012.79.camel@jimi>

On Sun, 2008-08-17 at 21:44 +0200, Kay R?pke wrote:

> On Aug 17, 2008, at 9:13 PM, Jim Idle wrote:
> 
> >>
> >> CommonTokenStream buffers all tokens up when it is first used.
> >> Unfortunately, size() does not trigger filling the buffer which seems
> >> like a bug. I see no reason why it shouldn't fill the buffer, that  
> >> is.
> >
> > I agree. In fact this might well be more intuitive, however we should
> > think about any performance impact as this might be the reason it does
> > not do this - in the C runtime I can take care of this by flipping
> > functions after the first call, but you can't hack that in Java.
> 
> 
> Not sure I understand what you are getting at.
> fillBuffer() will set p = 0 when it is first called, thus getting the  
> size of the tokens calls fillBuffer() only once.
> Actually all other methods that access tokens (with the notable  
> exception of get()) perform this check, too, so they all "suffer" from  
> that if.


Right - so, if size is called a lot then you will add the if to that
too. I think that internally size won't be called before something else
has already called fillBuffer(). So my point is that we should look at
all the paths and cover all the runtime possibilities, then see if it
makes sense to have the if in size() - as in, can it be added there
without increasing the overall checking done for if (p==0). I found the
call to size() to be significant enough that I wanted to optimize it,
and while a check for an integer == 0 is quick, it is still overhead.



JIm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/882e033d/attachment.html 

From pink at odahoda.de  Sun Aug 17 13:19:43 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 17 Aug 2008 22:19:43 +0200
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <48A8817D.5050702@teststep.org>
References: <48A8817D.5050702@teststep.org>
Message-ID: <543531490808171319s6db48f14pda2674bee7f073e8@mail.gmail.com>

Hi Michael,

there has been a major change to the implementation of the
TokenRewriteStream. I quick look at the code suggests, that
TokenRewriteStream.reduceToSingleOperationPerIndex() is O(n^2), where
n is the number of rewrites - and it is called for each toString call.
Did you do some profiling to find the method that takes most of the
time?

-Ben


On Sun, Aug 17, 2008 at 9:52 PM, Dr. Michael Gerz
<michael.gerz at teststep.org> wrote:
> Dear ANTLR developers, hi Terence,
>
> when upgrading to the latest and greatest ANTLR 3.1, we noticed a
> significant performance downgrade that makes it almost unuseable for our
> purposes.
>
> In our system, we use a grammar that is a modified version of the 'Java'
> grammar given on the ANTLR web page, with some minor test-specific
> extensions and a few simplifications. By means of a ANTLR tree grammar
> (using StringTemplate), we transform these extensions to plain Java.
>
> In the past, the transformation times were neglectable (within the range of
> a few seconds). However, with ANTLR 3.1 final, converting a 679KB input file
> into a 735KB Java file takes about 10 minutes!
>
> I tried to identify the problem and came up with the following conclusions:
>
> * The performance slowdown happens in our tree grammar. The ANTLR
>  parser and lexer are pretty fast.
> * The showstopper was introduced sometime between intermediate release
>  antlr-2008-05-25.11.tar.gz (fast) and antlr-2008-08-03.16.tar.gz (slow).
> * The performance seems to decrease exponentially with the input size.
>
> Below please find the header of our tree grammar and the method that invokes
> it.
>
> Does anybody have any idea why ANTLR has become so extremely slow just
> before its final release? I am sure that this must be a general problem that
> also affects other people. Is there anything else that you need to analyse
> the problem?
>
> Thanks in advance!
>
> Michael
>
>
>
> ++++++ Snippet from JavaCodeGenerator.g ++++++
>
> tree grammar JavaCodeGenerator;
>
> options {
>       k = 1;
>       ASTLabelType = CommonTree;
>       tokenVocab = TestLang;
>       output = template;
>       rewrite = true;
>   }
>
> ... some scope definitions ...
>
> @members {
>
>   ... some member definitions ...
> }
>
> @header {
>   package de.fgan.fkie.sylt.testsystem.testlang;
>
>   ... some import declarations ...
> }
>
> ... the start rule ... where needed, string templates are used ...
>
> compilationUnit
>   :    idecls+=importDeclaration*
>       (    tsd=testsuiteDeclaration
>           -> template(ids={$idecls}, tsd={$tsd.text})
> <<
> package de.fgan.fkie.sylt.test;
>
> import de.fgan.fkie.sylt.testsystem.server.testrunner.TestRunner;
>
> <ids>
> <tsd>
>>>
>       |    tgd=testgroupDeclaration
>           -> template(ids={$idecls}, imp={getImportStatements()},
> tgd={$tgd.text})
> <<
> package de.fgan.fkie.sylt.test;
>
> <imp>
>
> <ids>
> <tgd>
>>>
>       )
>   ;
>
> ... and so on ...
>
>
> ++++++ Invocation of JavaCodeGenerator ++++++
>
>
>   private static void saveAsJava(String testGroupName, String script) {
>       ANTLRInputStream input;
>       try {
>           input = new ANTLRInputStream(new
> ByteArrayInputStream(script.getBytes()));
>           TestLangLexer lexer = new TestLangLexer(input);
>           TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>           TestLangParser parser = new TestLangParser(tokens);
>           TestLangParser.compilationUnit_return r;
>           try {
>               r = parser.compilationUnit();
>           } catch (RecognitionException e) {
>               throw new RuntimeException("Error while parsing " +
> testGroupName + ":"
>                       + parser.getErrorMessage(e,
> TestLangParser.tokenNames));
>           }
>           CommonTree t = (CommonTree) r.getTree();
>           CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
>           nodes.setTokenStream(tokens);
>           JavaCodeGenerator codeGen = new JavaCodeGenerator(nodes);
>
>           JavaCodeGenerator.compilationUnit_return r2;
>           try {
>               r2 = codeGen.compilationUnit();  /// SLOOOOOW, SOOO SLOOOOOW
>           } catch (RecognitionException e) {
>               throw new RuntimeException("Error while parsing " +
> testGroupName + ":"
>                       + codeGen.getErrorMessage(e,
> JavaCodeGenerator.tokenNames));
>           }
>
>           File f = new File(ServerProperties.SERVER_TEST_CLASS_DIRECTORY +
> File.separator
>                   + testGroupName + ".java");
>           FileWriter out = new FileWriter(f);
>           out.write(r2.st.toString());
>           out.close();
>
>       } catch (IOException e) {
>           throw new RuntimeException("Error while reading/writing " +
> testGroupName + ":"
>                   + e.getMessage(), e);
>       }
>   }
>
>
>
>

From parrt at cs.usfca.edu  Sun Aug 17 13:24:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Aug 2008 13:24:54 -0700
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <543531490808171319s6db48f14pda2674bee7f073e8@mail.gmail.com>
References: <48A8817D.5050702@teststep.org>
	<543531490808171319s6db48f14pda2674bee7f073e8@mail.gmail.com>
Message-ID: <32E34CCE-42E2-4613-B7D0-B17BFBC856B9@cs.usfca.edu>


On Aug 17, 2008, at 1:19 PM, Benjamin Niemann wrote:

> Hi Michael,
>
> there has been a major change to the implementation of the
> TokenRewriteStream. I quick look at the code suggests, that
> TokenRewriteStream.reduceToSingleOperationPerIndex() is O(n^2), where
> n is the number of rewrites - and it is called for each toString call.
> Did you do some profiling to find the method that takes most of the
> time?

Hi.  Yep, n^2 but figured there aren't THAT many changes...decided  
that I'd go for actually correct functionality first...it was horribly  
broken except for some common cases before.

I just saw your earlier post...ooops.  Sorry about that.  I guess I  
need to build an index for that code.  Shit.  Likely you can backgrade  
to earlier version fairly easily for now.

Ter

From antlr at mirality.co.nz  Sun Aug 17 14:04:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 18 Aug 2008 09:04:43 +1200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1219004098.8012.79.camel@jimi>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
	<1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
	<1219004098.8012.79.camel@jimi>
Message-ID: <20080817210449.406F511EDD1@www.antlr.org>

At 08:14 18/08/2008, Jim Idle wrote:
>Right - so, if size is called a lot then you will add the if to 
>that too. I think that internally size won't be called before 
>something else has already called fillBuffer(). So my point is 
>that we should look at all the paths and cover all the runtime 
>possibilities, then see if it makes sense to have the if in 
>size() - as in, can it be added there without increasing the 
>overall checking done for if (p==0). I found the call to size() 
>to be significant enough that I wanted to optimize it, and while 
>a check for an integer == 0 is quick, it is still overhead.

I suspect that LA() is being called significantly more often than 
size(), so it's probably not a big deal :)


From Austin_Hastings at Yahoo.com  Sun Aug 17 14:42:23 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 17 Aug 2008 16:42:23 -0500
Subject: [antlr-interest] [AntlrWorks] Q: What does AW interpreter do with
	syntactic predicates?
Message-ID: <48A89B3F.8040901@Yahoo.com>

I see a dingbox notifying me that AW doesn't evaluate syntactic 
predicates or actions, when I fire up the interpreter.

So what does it do with them? In particular, if I have a rule like:

rule
    : (synpred) => pattern1
    | pattern2
    ;

What will the interpreter do? Will it skip the synpred but check for 
pattern1? Will it skip the whole thing and go straight to pattern2? Or 
something far more sinister?

=Austin

From kroepke at classdump.org  Sun Aug 17 14:46:06 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 23:46:06 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1219004098.8012.79.camel@jimi>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
	<1DEE44DB-426C-4786-95F4-5E85749AB772@classdump.org>
	<1219004098.8012.79.camel@jimi>
Message-ID: <86DE3236-5349-4A6E-9BB1-6248C25A45EC@classdump.org>

Hi!

On Aug 17, 2008, at 11:04 PM, Gavin Lambert wrote:

> At 08:14 18/08/2008, Jim Idle wrote:
>> Right - so, if size is called a lot then you will add the if to  
>> that too. I think that internally size won't be called before  
>> something else has already called fillBuffer(). So my point is that  
>> we should look at all the paths and cover all the runtime  
>> possibilities, then see if it makes sense to have the if in size()  
>> - as in, can it be added there without increasing the overall  
>> checking done for if (p==0). I found the call to size() to be  
>> significant enough that I wanted to optimize it, and while a check  
>> for an integer == 0 is quick, it is still overhead.
>
> I suspect that LA() is being called significantly more often than  
> size(), so it's probably not a big deal :)

Indeed :)

I just did a quick search for the usages of size() in the Java runtime  
and it's in fact called only in toString() methods (for the whole  
stream) and in Debug/Profiler stuff.
All of those are really non-critical, because they are either seldomly  
used or when debugging one doesn't care for execution time all that  
much anyway.

Of course this might not hold true for other runtimes.

I suggest adding fillbuffer and the check to size to minimize the  
surprise effect :)

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Sun Aug 17 14:50:18 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 23:50:18 +0200
Subject: [antlr-interest] [AntlrWorks] Q: What does AW interpreter do
	with syntactic predicates?
In-Reply-To: <48A89B3F.8040901@Yahoo.com>
References: <48A89B3F.8040901@Yahoo.com>
Message-ID: <2BDE5A91-90B7-44D6-87A3-FB4A412EC7D5@classdump.org>

Hi!

On Aug 17, 2008, at 11:42 PM, Austin Hastings wrote:

> What will the interpreter do? Will it skip the synpred but check for  
> pattern1? Will it skip the whole thing and go straight to pattern2?  
> Or something far more sinister?


AFAIK it will not even work at all, since it can't execute predicate  
code. I believe it would be possible to support synpreds, since the  
support code is "boilerplate" and could be included as a special case  
in the interpreter, but it certainly won't work for semantic  
predicates (unless that's being JIT compiled in some way).
The main reason it's not supported is that no one has stepped up to do  
it and "Debug" normally does what you want without that much of a  
penalty (of course there's a startup cost involved).
I think the same goes for lexer debug support, no one has deemed it  
important enough to actually get it done.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Sun Aug 17 14:57:36 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 17 Aug 2008 23:57:36 +0200
Subject: [antlr-interest] Need for regular FAQ mails (was: Re: unsubscribe
	request)
In-Reply-To: <6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
Message-ID: <6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>

Hi!

On Aug 17, 2008, at 10:06 PM, Brent Yates wrote:

> In his defense, I have never seen a List-Unsubscribe header on any  
> ANTLR
> emails.  It IS easy to unsubscribe from the main ANTLR web site, but  
> the
> information is not in the emails that I get.

FWIW, here's the header I see on every mail:

List-Unsubscribe: 	<http://www.antlr.org/mailman/listinfo/antlr-interest 
 >,  <mailto:antlr-interest-request at antlr.org?subject=unsubscribe>

I'd blame it on insufficient support in the mail programs.  
Unfortunately I've never seen any application that presents this  
information in a reasonable way (or could easily be configured to do  
it). Then again, I normally know what to do with mailing lists ;)

On a related note, I'm wondering whether we should assemble some sort  
of FAQ and post it to the list in regular intervals as well as  
including it's text and/or a link to it in the welcome email.
Some stuff comes up very often, and especially for beginners it seems  
hard to figure some stuff out or at least figure out where to find it.  
That doesn't mean noone makes a bona fide attempt to find out before  
posting, but, well you know what I'm getting at :)

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From cvrebert at gmail.com  Sun Aug 17 15:16:54 2008
From: cvrebert at gmail.com (Chris Rebert)
Date: Sun, 17 Aug 2008 15:16:54 -0700
Subject: [antlr-interest] Need for regular FAQ mails (was: Re:
	unsubscribe request)
In-Reply-To: <6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
	<6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
Message-ID: <47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>

Well, there is the monthly subscription reminder that Mailman sends
out which usually has this info, so unless it's been turned off by the
admins, people should be getting that on a regular interval.

However, for the Python mailinglists I'm subscribed to, every message
has a footer appended with the list info, for example:
Python-3000 mailing list
Python-3000 at python.org
http://mail.python.org/mailman/listinfo/python-3000
Unsubscribe: http://mail.python.org/mailman/options/python-3000/MY-EMAIL-ADDRESS-REDACTED

Perhaps enabling the Mailman option for this should be considered?

- Chris

========
Follow the path of the Iguana...
Rebertia: http://rebertia.com
Blog: http://blog.rebertia.com


On Sun, Aug 17, 2008 at 2:57 PM, Kay R?pke <kroepke at classdump.org> wrote:
> Hi!
>
> On Aug 17, 2008, at 10:06 PM, Brent Yates wrote:
>
>> In his defense, I have never seen a List-Unsubscribe header on any ANTLR
>> emails.  It IS easy to unsubscribe from the main ANTLR web site, but the
>> information is not in the emails that I get.
>
> FWIW, here's the header I see on every mail:
>
> List-Unsubscribe:
> <http://www.antlr.org/mailman/listinfo/antlr-interest>,
>  <mailto:antlr-interest-request at antlr.org?subject=unsubscribe>
>
> I'd blame it on insufficient support in the mail programs. Unfortunately
> I've never seen any application that presents this information in a
> reasonable way (or could easily be configured to do it). Then again, I
> normally know what to do with mailing lists ;)
>
> On a related note, I'm wondering whether we should assemble some sort of FAQ
> and post it to the list in regular intervals as well as including it's text
> and/or a link to it in the welcome email.
> Some stuff comes up very often, and especially for beginners it seems hard
> to figure some stuff out or at least figure out where to find it. That
> doesn't mean noone makes a bona fide attempt to find out before posting,
> but, well you know what I'm getting at :)
>
> cheers,
> -k
>
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>
>
>

From jean-christophe.lelann at orange.fr  Sun Aug 17 15:51:24 2008
From: jean-christophe.lelann at orange.fr (Le Lann Jean-Christophe)
Date: Mon, 18 Aug 2008 00:51:24 +0200
Subject: [antlr-interest] How to return my own objects ?
Message-ID: <48A8AB6C.2030107@orange.fr>

Hello,

I am struggling to return my own objects in the rules (v3.1). Normally 
this is obvious like :

expr returns [MyExpr expr] :
    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
    | INT                   { $expr = new MyExpr(new String($INT.text));}
        ;
this perfectly generates (MyExpr returned) :
// DumpModified.g:8:1: expr returns [MyExpr expr] : ( ^( '+' e1= expr 
e2= expr ) | INT );
    public final MyExpr expr() throws RecognitionException {

but in a bigger grammar in which I have this rule :

architecture returns [Architecture arch] :
                    ^(ARCHITECTURE ID <skipped>) 
            {$arch=new Architecture(new String(ID.text));}

the generated code is :

// Walker.g:23:1: architecture returns [Architecture arch] : ^( 
ARCHITECTURE ID <skipped>) ;
    public final Walker.architecture_return architecture() throws 
RecognitionException {

==> "Walker.architecture_return" returned while I expected "Architecture"

What I am missing ? Could you explain or give me a pointer (I have the 
book) ?

Thx
JCLL


From jaluber at gmx.de  Sun Aug 17 16:01:50 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Aug 2008 01:01:50 +0200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8AB6C.2030107@orange.fr>
References: <48A8AB6C.2030107@orange.fr>
Message-ID: <48A8ADDE.9060004@gmx.de>

Le Lann Jean-Christophe schrieb:
> Hello,
> 
> I am struggling to return my own objects in the rules (v3.1). Normally
> this is obvious like :
> 
> expr returns [MyExpr expr] :
>    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
>    | INT                   { $expr = new MyExpr(new String($INT.text));}
>        ;
> this perfectly generates (MyExpr returned) :
> // DumpModified.g:8:1: expr returns [MyExpr expr] : ( ^( '+' e1= expr
> e2= expr ) | INT );
>    public final MyExpr expr() throws RecognitionException {
> 
> but in a bigger grammar in which I have this rule :
> 
> architecture returns [Architecture arch] :
>                    ^(ARCHITECTURE ID <skipped>)            {$arch=new
> Architecture(new String(ID.text));}
> 
> the generated code is :
> 
> // Walker.g:23:1: architecture returns [Architecture arch] : ^(
> ARCHITECTURE ID <skipped>) ;
>    public final Walker.architecture_return architecture() throws
> RecognitionException {
> 
> ==> "Walker.architecture_return" returned while I expected "Architecture"
> 
> What I am missing ? Could you explain or give me a pointer (I have the
> book) ?

architecture_return is a generated type, which encapsulates an
Architecture object. ANTLR hasn't been optimized yet to not to do that
if only one object is returned from a rule.

Johannes

From jean-christophe.lelann at orange.fr  Sun Aug 17 16:07:15 2008
From: jean-christophe.lelann at orange.fr (Le Lann Jean-Christophe)
Date: Mon, 18 Aug 2008 01:07:15 +0200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8ADDE.9060004@gmx.de>
References: <48A8AB6C.2030107@orange.fr> <48A8ADDE.9060004@gmx.de>
Message-ID: <48A8AF23.8030405@orange.fr>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/9a216f39/attachment.html 

From jaluber at gmx.de  Sun Aug 17 16:18:43 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Aug 2008 01:18:43 +0200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8AF23.8030405@orange.fr>
References: <48A8AB6C.2030107@orange.fr> <48A8ADDE.9060004@gmx.de>
	<48A8AF23.8030405@orange.fr>
Message-ID: <48A8B1D3.7030602@gmx.de>

Le Lann Jean-Christophe schrieb:
> Johannes Luber a ?crit :
>> Le Lann Jean-Christophe schrieb:
>>   
>>> Hello,
>>>
>>> I am struggling to return my own objects in the rules (v3.1). Normally
>>> this is obvious like :
>>>
>>> expr returns [MyExpr expr] :
>>>    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
>>>    | INT                   { $expr = new MyExpr(new String($INT.text));}
>>>        ;
>>> this perfectly generates (MyExpr returned) :
>>> // DumpModified.g:8:1: expr returns [MyExpr expr] : ( ^( '+' e1= expr
>>> e2= expr ) | INT );
>>>    public final MyExpr expr() throws RecognitionException {
>>>
>>> but in a bigger grammar in which I have this rule :
>>>
>>> architecture returns [Architecture arch] :
>>>                    ^(ARCHITECTURE ID <skipped>)            {$arch=new
>>> Architecture(new String(ID.text));}
>>>
>>> the generated code is :
>>>
>>> // Walker.g:23:1: architecture returns [Architecture arch] : ^(
>>> ARCHITECTURE ID <skipped>) ;
>>>    public final Walker.architecture_return architecture() throws
>>> RecognitionException {
>>>
>>> ==> "Walker.architecture_return" returned while I expected "Architecture"
>>>
>>> What I am missing ? Could you explain or give me a pointer (I have the
>>> book) ?
>>>     
>>
>> architecture_return is a generated type, which encapsulates an
>> Architecture object. ANTLR hasn't been optimized yet to not to do that
>> if only one object is returned from a rule.
>>
>> Johannes
>>   
> I am not sure to understand : why did I get a 'correct' code in the
> first case ? What is the difference between the two examples above ?
> Do you mean that it is the alternative in the first case that caused
> antlr to generate a correct code ?
> 
> Thx again.
> JC
>  
I don't know why one rule behaves differently (is "<skipped>" verbatim
in the file?), but at least you can access the Architecture object,
can't you?

Johannes

From jean-christophe.lelann at orange.fr  Sun Aug 17 16:34:12 2008
From: jean-christophe.lelann at orange.fr (Jean-Christophe Le Lann)
Date: Mon, 18 Aug 2008 01:34:12 +0200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8B1D3.7030602@gmx.de>
References: <48A8AB6C.2030107@orange.fr> <48A8ADDE.9060004@gmx.de>
	<48A8AF23.8030405@orange.fr> <48A8B1D3.7030602@gmx.de>
Message-ID: <48A8B574.6090404@orange.fr>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/65e0034f/attachment.html 

From jbb at acm.org  Sun Aug 17 17:39:11 2008
From: jbb at acm.org (John B. Brodie)
Date: Sun, 17 Aug 2008 20:39:11 -0400
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8AB6C.2030107@orange.fr> (message from Le Lann
	Jean-Christophe on Mon, 18 Aug 2008 00:51:24 +0200)
References: <48A8AB6C.2030107@orange.fr>
Message-ID: <E1KUsm7-0002eo-0g@gecko.home.org>

Greetings!

Le Lann Jean-Christophe wrote (in part):
>I am struggling to return my own objects in the rules (v3.1). Normally 
>this is obvious like :
>
>expr returns [MyExpr expr] :
>    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
>    | INT                   { $expr = new MyExpr(new String($INT.text));}
>        ;
>this perfectly generates (MyExpr returned) :
>// DumpModified.g:8:1: expr returns [MyExpr expr] : ( ^( '+' e1= expr 
>e2= expr ) | INT );
>    public final MyExpr expr() throws RecognitionException {
>
>but in a bigger grammar in which I have this rule :
>
>architecture returns [Architecture arch] :
>                    ^(ARCHITECTURE ID <skipped>) 
>            {$arch=new Architecture(new String(ID.text));}
>
>the generated code is :

... remainder snipped ...

i suspect that you have specified options { output=AST; } in your
problematic grammar.

i believe that ANTLR spawns those <rule_name>_return class definitions
for every rule in a grammar that generates an AST.  needed to capture
the possible multiple return values --- like you have specified.

Hope this helps...
   -jbb

From anders at globe-trotter.us  Sun Aug 17 18:57:32 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Mon, 18 Aug 2008 09:57:32 +0800
Subject: [antlr-interest] =?iso-8859-1?q?Subscribe_list?=
Message-ID: <20080818015732.13452.qmail@station198.com>


Hi,

Sorry for this off-topic question but I was wondering why I get several "daily digest" emails a day? I expect to get one per day when using that option but I get like 5-6 a day which is a bit annoying. Is anybody else having the same problem? Some setting somewhere?

Again sorry for the off-topic question.

BR/Anders Karlsson
Sybase

From jimi at temporal-wave.com  Sun Aug 17 20:25:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Aug 2008 20:25:26 -0700
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8AF23.8030405@orange.fr>
References: <48A8AB6C.2030107@orange.fr> <48A8ADDE.9060004@gmx.de>
	<48A8AF23.8030405@orange.fr>
Message-ID: <1219029926.13898.1.camel@jimi>

On Mon, 2008-08-18 at 01:07 +0200, Le Lann Jean-Christophe wrote:

> Johannes Luber a ?crit : 
> 
> > Le Lann Jean-Christophe schrieb:
> >   
> > 
> > > Hello,
> > > 
> > > I am struggling to return my own objects in the rules (v3.1). Normally
> > > this is obvious like :
> > > 
> > > expr returns [MyExpr expr] :
> > >    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
> > >    | INT                   { $expr = new MyExpr(new String($INT.text));}
> > >        ;
> > > this perfectly generates (MyExpr returned) :
> > > // DumpModified.g:8:1: expr returns [MyExpr expr] : ( ^( '+' e1= expr
> > > e2= expr ) | INT );
> > >    public final MyExpr expr() throws RecognitionException {
> > > 
> > > but in a bigger grammar in which I have this rule :
> > > 
> > > architecture returns [Architecture arch] :
> > >                    ^(ARCHITECTURE ID <skipped>)            {$arch=new
> > > Architecture(new String(ID.text));}
> > > 
> > > the generated code is :
> > > 
> > > // Walker.g:23:1: architecture returns [Architecture arch] : ^(
> > > ARCHITECTURE ID <skipped>) ;
> > >    public final Walker.architecture_return architecture() throws
> > > RecognitionException {
> > > 
> > > ==> "Walker.architecture_return" returned while I expected "Architecture"
> > > 
> > > What I am missing ? Could you explain or give me a pointer (I have the
> > > book) ?
> > >     
> > 
> > 
> > architecture_return is a generated type, which encapsulates an
> > Architecture object. ANTLR hasn't been optimized yet to not to do that
> > if only one object is returned from a rule.


It has but if you are generating an AST, then you have your return value
and the tree to return. I think that the problem here is that both the
rule and the return value have been called expr. Change the name of the
return value to retExpr or something like that.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/af2ed82b/attachment.html 

From Austin_Hastings at Yahoo.com  Sun Aug 17 21:38:38 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 17 Aug 2008 23:38:38 -0500
Subject: [antlr-interest] [AntlrDT] Q: How do I set token directory?
Message-ID: <48A8FCCE.3000206@Yahoo.com>

w/ AntlrDT 0.5

I've got my output directory set to a relative path 
(../../../target/generated-sources/antlr) in Window>Preferences>AntlrDT, 
but when I try to build a tree parser, I am getting this error:

cannot find tokens file <unset-dir>\Hlasm.tokens    HlasmAST.g3    
hlasm/src/main/antlr/perl6/hlasm    line 2    DLTK Problem

How do I tell AntlrDT to pass along the -lib setting, or whatever is 
needed to get the Hlasm.tokens file read in?

=Austin


From gerald at certiv.net  Sun Aug 17 23:15:26 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sun, 17 Aug 2008 23:15:26 -0700
Subject: [antlr-interest] [AntlrDT] Q: How do I set token directory?
In-Reply-To: <48A8FCCE.3000206@Yahoo.com>
References: <48A8FCCE.3000206@Yahoo.com>
Message-ID: <200808180634.m7I6YZ8R002438@zinc.newtechlaw.com>

At 09:38 PM 8/17/2008, Austin Hastings wrote:
>w/ AntlrDT 0.5
>
>I've got my output directory set to a relative path 
>(../../../target/generated-sources/antlr) in 
>Window>Preferences>AntlrDT, but when I try to build a tree parser, I 
>am getting this error:
>
>cannot find tokens file <unset-dir>\Hlasm.tokens    HlasmAST.g3

Spelling error?  Note, Antlr will automatically append the ".tokens" 
extension.

AntlrDT relies on the "-o" option to set the output directory and 
expects the relevant .tokens file to be in that same 
directory.  Antlr's Tool#getImportedVocabFile(String vocabName) will 
look for the named .tokens file in any "-lib" specified directory 
(not used by AntlrDT) and, if not found, then in the "-o" specified 
directory.   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080817/5bab54ff/attachment.html 

From Vitaliy at dbsophic.com  Mon Aug 18 01:49:21 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Mon, 18 Aug 2008 11:49:21 +0300
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>

Thanks for the quick responses!
I'm glad I was able to contribute somehow to ANTLR :)

BTW, could LA(1) fail somehow - if there is no next token,
or if it goes beyond the last token, or something like that?

Thanks,
Vitaliy

-----Original Message-----
From: Kay R?pke [mailto:kroepke at classdump.org]
Sent: Sunday, August 17, 2008 21:01
To: Vitaliy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lazy load of CommonTokenStream??


On Aug 17, 2008, at 9:50 PM, Vitaliy wrote:

> I've encountered some really interesting behavior of the
> CommonTokenStream:
>
> Right after the constructor of the parser, I'm trying to use the
> method Size() of CommonTokenStream, to retrieve the number of tokens
> in the input.
> It would return 0, no matter how many tokens actually exist in the
> input.
> BUT funny enough, if I call before that to the method LA(1), then
> everything works fine.

CommonTokenStream buffers all tokens up when it is first used.
Unfortunately, size() does not trigger filling the buffer which seems
like a bug. I see no reason why it shouldn't fill the buffer, that is.

> Could anyone please enlighten me regarding the reason?
> Can it be avoided somehow?  Is there a better way than calling LA(1)?


Just call LA(1) for now, it works and doesn't hurt, after all it gives
you the next lookahead token which is a cheap operation.
Alternatively you can ask for all tokens (getTokens()) which seems
like a waste because it gives you a new copy of the list (it does it
because you can give it a tokentype filter).

If you definitely want to get rid of the LA(1) call, simply subclass
CommonTokenStream and override size() to be:

public int size() {
        if ( p == -1 ) { fillBuffer(); }
        return super.size();
}

cheers,
-k

--
Kay R?pke
http://classdump.org/











__________ Information from ESET NOD32 Antivirus, version of virus signature database 3362 (20080817) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3363 (20080818) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From kroepke at classdump.org  Mon Aug 18 04:11:53 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 13:11:53 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
Message-ID: <2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>

Hi!

On Aug 18, 2008, at 10:49 AM, Vitaliy wrote:

> BTW, could LA(1) fail somehow - if there is no next token,
> or if it goes beyond the last token, or something like that?


LA(1) will return Token.EOF (i.e. the EOF token type) if there's no  
next token.
That can happen if there are no tokens at all or you are actually at  
the end of the buffer.

Use LT(1) to get the acutal Token object (in which case the above  
would be Token.EOF_TOKEN, the singleton EOF token).
LA internally calls LT and returns the token type.

Please note that LA(0) and LT(0) are undefined. LT(0) will return null  
and LA(0) will throw a NullPointerException. _Never_ call them with 0  
as the argument, simply because it has undefined behavior.

For completeness' sake: Negative arguments are ok, they will trigger a  
call to the protected LB() (look-behind). That of course only works  
for TokenStreams that do bufferring, and might lead to NPEs if used  
with LA(), because LA doesn't check the return value before trying to  
invoke getType() on it. LT(-k) returns null if you fall off the  
beginning of the token buffer.
The lack of checks in LA is most likely due to the performance impact  
that check would have, LA is called often, and it's seldomly used  
outside of generated code. The only place you might have to use it is  
in predicates and that's most likely only in the lexer (operating on  
the character stream) to figure out which token to generate, often in  
relation to whitespace checks (e.g. MySQL has this weird notion of  
requiring function calls to have no whitespace in between the function  
name and the opening '(' to resolve ambiguities with keywords - it's  
configurable, though, making it even worse).

Now when I look at the code, there might be another bug or two  
lurking. At least minor issues, if they are not bugs.
Let the stream be positioned on the first token.
1) For CharStreams, LA(-1) will return CharStream.EOF. I think that's  
at least inconsistent and should return INVALID_CHAR (which doesn't  
exist right now), because it's not EOF, technically.
2) For TokenStreams, LA(-1) will throw a NullPointerException, because  
LB(1) returns null. To be consistent LB should return  
Token.INVALID_TOKEN, thus causing LA(-1) to return  
Token.INVALID_TOKEN_TYPE. That way there's no extra check and no  
exception being thrown, making all calls (except LA(0)) to those  
methods safe from an exception point of view.
3) really minor: the naming scheme for Token.EOF (an int) and  
Token.INVALID_TOKEN_TYPE (also an int) is slightly off, but it's  
probably WorldOfPain(tm) to change it, so let's not bother. :)

Opinions?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From Vitaliy at dbsophic.com  Mon Aug 18 05:43:51 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Mon, 18 Aug 2008 15:43:51 +0300
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>

Thanks for the detailed explanation!

IMHO ANTLR rocks! It's a great tool with so much power to it, and it's wonderful that it's an open source project.
I just wish it would have been a little bit better documented..

Anyway,
Thanks again for all your help,
Vitaliy

-----Original Message-----
From: Kay R?pke [mailto:kroepke at classdump.org]
Sent: Monday, August 18, 2008 13:12
To: Vitaliy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lazy load of CommonTokenStream??

Hi!

On Aug 18, 2008, at 10:49 AM, Vitaliy wrote:

> BTW, could LA(1) fail somehow - if there is no next token,
> or if it goes beyond the last token, or something like that?


LA(1) will return Token.EOF (i.e. the EOF token type) if there's no
next token.
That can happen if there are no tokens at all or you are actually at
the end of the buffer.

Use LT(1) to get the acutal Token object (in which case the above
would be Token.EOF_TOKEN, the singleton EOF token).
LA internally calls LT and returns the token type.

Please note that LA(0) and LT(0) are undefined. LT(0) will return null
and LA(0) will throw a NullPointerException. _Never_ call them with 0
as the argument, simply because it has undefined behavior.

For completeness' sake: Negative arguments are ok, they will trigger a
call to the protected LB() (look-behind). That of course only works
for TokenStreams that do bufferring, and might lead to NPEs if used
with LA(), because LA doesn't check the return value before trying to
invoke getType() on it. LT(-k) returns null if you fall off the
beginning of the token buffer.
The lack of checks in LA is most likely due to the performance impact
that check would have, LA is called often, and it's seldomly used
outside of generated code. The only place you might have to use it is
in predicates and that's most likely only in the lexer (operating on
the character stream) to figure out which token to generate, often in
relation to whitespace checks (e.g. MySQL has this weird notion of
requiring function calls to have no whitespace in between the function
name and the opening '(' to resolve ambiguities with keywords - it's
configurable, though, making it even worse).

Now when I look at the code, there might be another bug or two
lurking. At least minor issues, if they are not bugs.
Let the stream be positioned on the first token.
1) For CharStreams, LA(-1) will return CharStream.EOF. I think that's
at least inconsistent and should return INVALID_CHAR (which doesn't
exist right now), because it's not EOF, technically.
2) For TokenStreams, LA(-1) will throw a NullPointerException, because
LB(1) returns null. To be consistent LB should return
Token.INVALID_TOKEN, thus causing LA(-1) to return
Token.INVALID_TOKEN_TYPE. That way there's no extra check and no
exception being thrown, making all calls (except LA(0)) to those
methods safe from an exception point of view.
3) really minor: the naming scheme for Token.EOF (an int) and
Token.INVALID_TOKEN_TYPE (also an int) is slightly off, but it's
probably WorldOfPain(tm) to change it, so let's not bother. :)

Opinions?

cheers,
-k
--
Kay R?pke
http://classdump.org/











__________ Information from ESET NOD32 Antivirus, version of virus signature database 3364 (20080818) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3364 (20080818) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From r_reitzi at cs.uni-kl.de  Mon Aug 18 05:07:23 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 18 Aug 2008 14:07:23 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
Message-ID: <20080818140723.13103fh8uy07ua68@horde.verrech.net>

Hi Kay!

Why is LA(0) undefined? One could interpret LA(0) (and LB(0) as well)  
as looking ahead (back) zero steps, thus finding the current  
char/token. Would this be a problem of some kind? In fact, I would  
expect exactly this behaviour, because LA(1) yields the next char to  
the right and LA(-1) the next char to the left. As it is, I feel it's  
unnecessarily (?) non-continuous.

> 1) For CharStreams, LA(-1) will return CharStream.EOF. I think  
> that's at least inconsistent and should return INVALID_CHAR (which  
> doesn't exist right now), because it's not EOF, technically.
If you regard looking back as being equivalent to looking forward on a  
reversed stream, EOF makes sense. There _is_ end of "file", if not the  
right one.
I think it is consistent as it is. Looking out of char stream's bounds  
yields EOF.
Whats with LA(k), |k|>1? Is this handled properly when looking "past" EOF?

Regards

Raphel

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/da659c58/attachment.bin 

From kroepke at classdump.org  Mon Aug 18 05:29:45 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 14:29:45 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <20080818140723.13103fh8uy07ua68@horde.verrech.net>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<20080818140723.13103fh8uy07ua68@horde.verrech.net>
Message-ID: <99190068-ACDC-4C88-A3BD-9363576A18EB@classdump.org>

Moin!

On Aug 18, 2008, at 2:07 PM, Raphael Reitzig wrote:

> Why is LA(0) undefined? One could interpret LA(0) (and LB(0) as  
> well) as looking ahead (back) zero steps, thus finding the current  
> char/token. Would this be a problem of some kind? In fact, I would  
> expect exactly this behaviour, because LA(1) yields the next char to  
> the right and LA(-1) the next char to the left. As it is, I feel  
> it's unnecessarily (?) non-continuous.

The semantics are that a stream is never "on" a specific element, but  
rather "in between". Then LA(-1) is the just consumed element and  
LA(1) is the next one to be looked at. With those semantics LA(0)  
makes no sense, because it's not a valid element. An element (char,  
token or node) is either consumed or not, so I think it makes sense to  
specify it this way.

>> 1) For CharStreams, LA(-1) will return CharStream.EOF. I think  
>> that's at least inconsistent and should return INVALID_CHAR (which  
>> doesn't exist right now), because it's not EOF, technically.
> If you regard looking back as being equivalent to looking forward on  
> a reversed stream, EOF makes sense. There _is_ end of "file", if not  
> the right one.
> I think it is consistent as it is. Looking out of char stream's  
> bounds yields EOF.

Touch? :)

> Whats with LA(k), |k|>1? Is this handled properly when looking  
> "past" EOF?

I think LA() is broken for TokenStreams in that it can throw an  
exception for negative indices, because LB() returns null instead of  
EOF_TOKEN. It should not throw in any circumstance and the fix is  
rather trivial especially given that LA(-1) at the beginning of a  
TokenStream will not work right now due to the exception. I don't  
think it could possibly break anything.
For the end of the stream, everything is fine, because the index  
checks in LT return EOF_TOKEN for everything beyond the buffer. The  
beginning is different in that it returns null, causing LA to fail.  
I'd say it should always return a token, that's all.

Note this is only a problem with CommonTokenStream, the CharStream and  
TreeNodeStream implementations do the correct thing, AFAICS (the code  
is really different in both cases).
CommonTreeNodeStream will return EOF when falling off the end of the  
buffer, but INVALID_TOKEN when falling off the beginning.
CharStream (really ANTLRStringStream) will do return CharStream.EOF in  
both cases, but in terms of ints, since there are no tokens just yet.

It's easy to make CommonTokenStream.LA(-1) safe in this regard and I  
think you correctly pointed out that it should return EOF in that  
case. The fix would be to not return null in LB() when the index is  
out of bounds at the lower end.

Interestingly enough, a CommonTreeNodeStream will fill the buffer when  
get() is called, while CommonTokenStream just fails in case the buffer  
is not filled yet. Same thing for size(). Probably best to make the  
implementations do the same thing, because that's what I'd expect as  
an API user.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From mail at martin-probst.com  Mon Aug 18 05:31:55 2008
From: mail at martin-probst.com (Martin Probst)
Date: Mon, 18 Aug 2008 14:31:55 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
Message-ID: <60D70876-4435-44FE-BCE7-3B6E7D5AA7EF@martin-probst.com>

> Now when I look at the code, there might be another bug or two  
> lurking. At least minor issues, if they are not bugs.
> Let the stream be positioned on the first token.
> 1) For CharStreams, LA(-1) will return CharStream.EOF. I think  
> that's at least inconsistent and should return INVALID_CHAR (which  
> doesn't exist right now), because it's not EOF, technically.
> 2) For TokenStreams, LA(-1) will throw a NullPointerException,  
> because LB(1) returns null. To be consistent LB should return  
> Token.INVALID_TOKEN, thus causing LA(-1) to return  
> Token.INVALID_TOKEN_TYPE. That way there's no extra check and no  
> exception being thrown, making all calls (except LA(0)) to those  
> methods safe from an exception point of view.
> 3) really minor: the naming scheme for Token.EOF (an int) and  
> Token.INVALID_TOKEN_TYPE (also an int) is slightly off, but it's  
> probably WorldOfPain(tm) to change it, so let's not bother. :)
>
> Opinions?

You might also consider looking back behind the start of the stream as  
an error in the user of the interface. That is, while we do need an  
EOF token to signal that the end of the stream was reached, consumers  
of the token/char stream will always know that there is nothing before  
0, so requesting that is a programming error, and should result in a  
runtime exception. It doesn't make sense anyways, so why bother and  
create a specific return value for that?

I also don't quite know why LA(0) is illegal. I've once implemented my  
own, lazy token stream, and I have to say I was heavily confused on  
the meaning of the various indexes, positions, relative offsets etc.  
in the class. It might just be me, but I somehow found it quite  
confusing and overly complex.

Regards,
Martin

From kroepke at classdump.org  Mon Aug 18 05:33:27 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 14:33:27 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
Message-ID: <F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>

Hi!

On Aug 18, 2008, at 2:43 PM, Vitaliy wrote:

> IMHO ANTLR rocks! It's a great tool with so much power to it, and  
> it's wonderful that it's an open source project.

yay! :)

> I just wish it would have been a little bit better documented..


It actually is pretty well documented, although some of the intimate  
details are only in the javadoc of the runtime or the list archives  
(because of questions such as those you ask - which are great btw).

I suggest to take a look at the docs in the various stream interfaces  
and their implementations, both have more than just one line of docs  
and the code is generally very clear. And since it's code, you might  
even find a bug or two, thus helping everyone :)

Thanks,
-k
-- 
Kay R?pke
http://classdump.org/







From mail at martin-probst.com  Mon Aug 18 05:35:00 2008
From: mail at martin-probst.com (Martin Probst)
Date: Mon, 18 Aug 2008 14:35:00 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <1219000413.8012.59.camel@jimi>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<1219000413.8012.59.camel@jimi>
Message-ID: <291F1DD3-E04E-421F-9603-0975F3511EE7@martin-probst.com>

>> CommonTokenStream buffers all tokens up when it is first used.
>> Unfortunately, size() does not trigger filling the buffer which seems
>> like a bug. I see no reason why it shouldn't fill the buffer, that  
>> is.
>
> I agree. In fact this might well be more intuitive, however we should
> think about any performance impact as this might be the reason it does
> not do this - in the C runtime I can take care of this by flipping
> functions after the first call, but you can't hack that in Java.

If you are concerned about the performance of these simple checks, why  
not make the TokenStream tokenize the whole input document within the  
constructor?

I know it feels a bit weird for a Java programmer to do much work in  
the constructor, but if you write a class and about every method call  
first checks if the object is correctly initialized, and the object is  
certain to be used (no benefit from lazy loading or similar), then why  
not initialize it properly in the constructor and be done with it?

That would also make the code in CommonTokenStream a lot simpler in  
many places.

Regards,
Martin

From kroepke at classdump.org  Mon Aug 18 05:36:58 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 14:36:58 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <60D70876-4435-44FE-BCE7-3B6E7D5AA7EF@martin-probst.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<60D70876-4435-44FE-BCE7-3B6E7D5AA7EF@martin-probst.com>
Message-ID: <331F5B55-3D98-4F9F-8002-A80F004E5021@classdump.org>

Hi!

On Aug 18, 2008, at 2:31 PM, Martin Probst wrote:

> You might also consider looking back behind the start of the stream  
> as an error in the user of the interface. That is, while we do need  
> an EOF token to signal that the end of the stream was reached,  
> consumers of the token/char stream will always know that there is  
> nothing before 0, so requesting that is a programming error, and  
> should result in a runtime exception. It doesn't make sense anyways,  
> so why bother and create a specific return value for that?


I see your argument and kinda concur. At the same time, I could  
imagine client code looking backwards in the stream without even  
looking at the index (only incrementing the distance to look back to).  
For that purpose it would be helpful to get some kind of non- 
exceptional notification that the "end", or rather beginning, of the  
stream has been reached.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From jean-christophe.lelann at orange.fr  Mon Aug 18 05:56:54 2008
From: jean-christophe.lelann at orange.fr (Jean-Christophe Le Lann)
Date: Mon, 18 Aug 2008 14:56:54 +0200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <E1KUsm7-0002eo-0g@gecko.home.org>
References: <48A8AB6C.2030107@orange.fr> <E1KUsm7-0002eo-0g@gecko.home.org>
Message-ID: <48A97196.6070709@orange.fr>

John B. Brodie a ?crit :

>> i suspect that you have specified options { output=AST; } in your
>> problematic grammar.
Hi !
Thanks John ! That was the problem (in the tree grammar) !
Regards
JCLL






From r.a.niemeijer at tue.nl  Mon Aug 18 06:39:57 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Mon, 18 Aug 2008 15:39:57 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
In-Reply-To: <D23E06F6-FA13-4225-AD2D-716DDC3942CB@cs.usfca.edu>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
	<D23E06F6-FA13-4225-AD2D-716DDC3942CB@cs.usfca.edu>
Message-ID: <A8F615EE446C9B4D837FB67447C0D99702583016@EXCHANGE3.campus.tue.nl>

Thank, but I guess I still don't fully understand the correct way to do this. In order to reduce error sources I made a new program with the following simple grammar:

----------------------------------
grammar intellitest;

options
{
 language = CSharp2;
 output = AST;
}

@namespace { ConsoleApplication1 }

@rulecatch {
    catch (MismatchedSetException ms)
 	{
		throw ms;
    }
    catch (NoViableAltException nva)
 	{
		throw nva;
    }
}

top	:	a | b;
a	:	'a' ('c'|'d');
b	:	'b' ('e'|'f');
----------------------------------

So valid inputs would be ac, ad, be and bf.
If I then feed "ae" as input to the top() rule it throws a MismatchedSetException in function a(), as can be expected.
However, if I set a breakpoint on the "throw ms" line and check out the state field I have 0 for the followingStackPoint and a following bitset where following[0] is {1}, which corresponds to the <EOR> token. Based on your description I was expecting state.following[state.followingStackPoint] to be {5, 6} (corresponds to 'c' and 'd'), which would be the allowed tokens after 'a'.
If I override Match and set a breakpoint I do see the expected {5, 6} for the follow parameter, but by the time the error is thrown this information is gone.

Could anyone enlighten me as to what I'm doing wrong?
Thanks.

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: vrijdag 15 augustus 2008 21:08
To: Niemeijer, R.A.
Cc: Stanislas Rusinsky; Thomas Brandon; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Re : Re : How to get a list of all valid options for the next token?

Ok,I added a faq entry:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=11567208

  see if this helps.

Ter
On Aug 15, 2008, at 2:28 AM, Niemeijer, R.A. wrote:

> Right, I think I've localized all the data I need. All you need is a  
> bit of reflection. All the bitsets that determine the possible next  
> tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous  
> token (can be gotten from the Parser's state.following variable),  
> {1} is the name of the method the NoViableAltException is generated  
> in (use something like MethodBase.GetCurrentMethod().Name) and {2}  
> is un unimportant 3-digit number. So get the list of all Bitsets of  
> the Parser via reflection and choose the one that starts with  
> FOLLOW_{0}_in_{1}.
>
> However, in order to be able to use this I have to insert this code  
> at the point the NoViableAltException is thrown so I can dump the  
> list of tokens in its grammarDecisionDescription field. That means  
> overriding all the bits of code that look like this:
>
> NoViableAltException nvae_d1s2 =
>    new NoViableAltException("", 1, 2, input);
>
>    throw nvae_d1s2;
>
> Now obviously this can be done manually, but then you'd lose it  
> after every grammar generation. So my question: is there a way to  
> override this part of the generated grammar?
>
> Thanks.
>
> -----Original Message-----
> From: Niemeijer, R.A.
> Sent: donderdag 14 augustus 2008 17:39
> To: 'Stanislas Rusinsky'; Thomas Brandon
> Cc: antlr-interest at antlr.org
> Subject: RE: Re : [antlr-interest] Re : How to get a list of all  
> valid options for the next token?
>
> The FOLLOW_ variables do indeed seem to contain all the data I need.  
> I'm going to have a look at it tomorrow to see if I can convert to  
> bitset data to something more useful to me.
>
> -----Original Message-----
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 19:27
> To: Thomas Brandon; Niemeijer, R.A.
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] Re : How to get a list of all valid  
> options for the next token?
>
> oops, when making such attention mistakes I feel like hiding under  
> the table :) they are LL of course
>
> Mr. Niemeijer, could you please keep me informed if you reach a  
> satisfactory solution with the "FOLLOW_" hint? I am interested too  
> in that topic.
>
> Stanislas.
>
>
>
> ----- Message d'origine ----
> De : Thomas Brandon <tbrandonau at gmail.com>
> ? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
> Cc : antlr-interest at antlr.org
> Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
> Objet : Re: [antlr-interest] Re : How to get a list of all valid  
> options for the next token?
>
> ANTLR grammars are LL not LR, but they are recursive descent and thus
> don't use an explicit internal representation of the grammar to
> control parse decisions. They do however have follow sets available at
> parse time, used for error recovery and reporting. See the various
> FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
> and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
> may be able to get what you need from them. Though as they only
> support a limited purpose they may collapse alternatives you need to
> keep distinct.
> Another option would be to create a custom generator that would then
> have the richer information ANTLR uses at generation time.
>
> Tom.
>
> On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl 
> > wrote:
>> Well, so much for that idea then :(
>>
>> Guess the only way to do this then is to indeed duplicate the  
>> knowledge
>> inherent in the parser to a different checker. Oh well.
>>
>>
>>
>> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
>> Sent: woensdag 13 augustus 2008 14:42
>> To: Niemeijer, R.A.; Foust
>> Cc: antlr-interest at antlr.org
>> Subject: Re : [antlr-interest] How to get a list of all valid  
>> options for
>> the next token?
>>
>>
>>
>> I have found one series of 3 articles that might be interesting for  
>> such
>> situation:
>>
>> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>>
>> But I don't know if you could achieve that easily (if someone knows  
>> a way or
>> tool I would be interested too in knowing it). ANTLR parsers  
>> generated from
>> grammars are not 'self-aware' if I understood correctly: they are  
>> LR parsers
>> but don't hold as such a graph based on the grammar that could  
>> determine the
>> next allowed token.
>>
>> Yours sincerely,
>>
>> Stanislas Herman.
>>
>
>
>
>       
> _____________________________________________________________________________
> Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr


From simone.tripodi at gmail.com  Mon Aug 18 07:01:33 2008
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Mon, 18 Aug 2008 16:01:33 +0200
Subject: [antlr-interest] [antlr-interes] [gunit] gunit and maven surefire
In-Reply-To: <4173dc210808150822r6727f03rbfbc21b736494979@mail.gmail.com>
References: <4173dc210808150822r6727f03rbfbc21b736494979@mail.gmail.com>
Message-ID: <4173dc210808180701o49c1d9bfm942713e42732eed3@mail.gmail.com>

Hi all ANTRL's folks,
I've been porting the SPARQL grammar into Maven2 platform, I would
like to know if is there a way to integrae gunit into maven2 surefire
report.
Can anyone help me please?
Thanks in advance,
Simone

--
My LinkedIn profile: http://www.linkedin.com/in/simonetripodi
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi
My Del.icio.us: http://del.icio.us/simone.tripodi

From antlr at jazillian.com  Mon Aug 18 07:16:04 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 18 Aug 2008 10:16:04 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808160333.01241.rulatir@wp.pl>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>
Message-ID: <48A98424.8020608@jazillian.com>

Szczepan Ho?yszewski wrote:
> Andy Tripp wrote:
> 
>> Right. Whoever writes the doSomething() method shown above is going to
>> have to know what the AST looks like, regardless of whether the
>> doSomething() call is embedded in a treewalker.g file or plain old code.
> 
> That's exactly the problem. Whoever writes the doSomething() for a processing 
> pass that is only interested in 3% of the language constructs, will have not 
> only to know, but also to painstakingly express with tree rules, what the AST 
> can possibly look like from the start symbol to wherever the relevant 
> constructs can appear in the grammar. This essentially duplicates a large 
> chunk of the parser grammar. There is no simple way to tell ANTLR to 
> doSomething() e.g. for each type definition, regardless of whether it occurs 
> at top level, in a class, in a function, in an anonymous code block buried 
> deep in a lambda expression, or in that fifth possible place where the draft 
> 0.0.2 specification will allow type definitions to occur.
> 
> Szczepan Holyszewski
> 

Exactly! So it's much better to just have doSomething() be part of
plain-old-Java code rather than a treewalker. Check for the
particular case you're looking for, and ignore everything else.

From antlr at jazillian.com  Mon Aug 18 07:20:11 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 18 Aug 2008 10:20:11 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
Message-ID: <48A9851B.7090306@jazillian.com>

Gerald Rosenberg wrote:

> What is missing is a code generation step that would generate the bodies 
> of the *create*, *copy*, *insert*, *delete*, and *find *methods specific 
> to a particular AST node structure.  This is basically the same 
> operation used in the generation of a tree-walker. 

There's no need for that. The AST is just a tree data structure,
the various create, copy, insert, and delete operations work fine
regardless of the "shape of the AST" (i.e. the grammar).

From kroepke at classdump.org  Mon Aug 18 07:27:34 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 16:27:34 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all valid
	options for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D99702583016@EXCHANGE3.campus.tue.nl>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
	<D23E06F6-FA13-4225-AD2D-716DDC3942CB@cs.usfca.edu>
	<A8F615EE446C9B4D837FB67447C0D99702583016@EXCHANGE3.campus.tue.nl>
Message-ID: <7053C72A-90F2-45AF-A7BE-BB14EEC0E49C@classdump.org>

Hi!

On Aug 18, 2008, at 3:39 PM, Niemeijer, R.A. wrote:

> Could anyone enlighten me as to what I'm doing wrong?


mmh. it looks like the follow set being pushed prior to entering a()  
is the set that can follow 'a' in top(), not considering any follow  
set in rule refs.
sounds like a() should either push the set before calling match or the  
follow set should be passed into the exception.
in the normal case pushing it should be inexpensive, it's only when  
the stack space is exhausted that it copies anything.

right now i don't see any way of getting at the necessary information,  
without altering the codegen templates. it should be as simple as  
finding the calls to match(), prior to that incrementing fsp and  
pushing the follow set. the tricky part is decrementing fsp again on  
all possible outbound codepaths, because the surrounding code expects  
the stack to be clean. not sure how much work that is in the  
templates. (it obviously must be done in all targets you care about).

I'd prefer to push it, because that leaves it all in one place, namely  
state.following.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From mail at mmccoo.com  Mon Aug 18 07:30:05 2008
From: mail at mmccoo.com (miles mccoo)
Date: Mon, 18 Aug 2008 07:30:05 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
Message-ID: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>

I used the original antlr  ages ago and now I need to use it again. From the
description Antlr3 is what I want to use, but I haven't been able to find
any information on how to use it in c++.

Is there a wiki, tutorial, example, or msg thread on how to generate a
parser that I can compile into my c++ application? Everything I've found
assumes I'm a java programmer, which I'm not. Is see the page with the
target libs, but no info on how to use them.

Thanks in advance

Miles
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/30965349/attachment.html 

From miles.mccoo at gmail.com  Mon Aug 18 07:33:37 2008
From: miles.mccoo at gmail.com (miles mccoo)
Date: Mon, 18 Aug 2008 07:33:37 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
Message-ID: <eab91eee0808180733h6d95b535t95eb714f3d195537@mail.gmail.com>

I used the original antlr  ages ago and now I need to use it again. From the
description Antlr3 is what I want to use, but I haven't been able to find
any information on how to use it in c++.

Is there a wiki, tutorial, example, or msg thread on how to generate a
parser that I can compile into my c++ application? Everything I've found
assumes I'm a java programmer, which I'm not. Is see the page with the
target libs, but no info on how to use them.

Thanks in advance

Miles
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/1baca68f/attachment.html 

From ron.hunter-duvar at oracle.com  Mon Aug 18 08:13:52 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 09:13:52 -0600
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <2762C874-F4E5-4086-955E-E3389952644C@cs.usfca.edu>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
	<522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
	<48A60B5C.3010104@oracle.com>
	<2762C874-F4E5-4086-955E-E3389952644C@cs.usfca.edu>
Message-ID: <48A991B0.9070308@oracle.com>


Terence Parr wrote:
>
> On Aug 15, 2008, at 4:03 PM, Ron Hunter-Duvar wrote:
>
>> Funny, I went looking for just such a method and didn't find one. Now 
>> I go back and see exactly the code you pointed to. Accomplishes the 
>> same thing with slightly less code.
>>
>> About my other question, though, if errors have occurred, with 
>> backtracking and recovery going on, how can I know if it succeeded in 
>> recovering and got to the end of file or just gave up early?
>
> it only counts real errors not backtracking errors :)  you can also 
> ask for state.input.index() to get the token index.
>
> Ter
>
So a real error means the parser really did give up before the end of 
the file was reached? If so, then what I have is sufficient.

Not sure what the token index would tell me. Do you mean use that index 
to get the token and check if it's an EOF token?

Ron

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From ron.hunter-duvar at oracle.com  Mon Aug 18 08:35:47 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 09:35:47 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
Message-ID: <48A996D3.3000603@oracle.com>



Kay R?pke wrote:
> Hi!
>
> On Aug 18, 2008, at 2:43 PM, Vitaliy wrote:
>
>> IMHO ANTLR rocks! It's a great tool with so much power to it, and 
>> it's wonderful that it's an open source project.
>
> yay! :)
>
>> I just wish it would have been a little bit better documented..
>
>
> It actually is pretty well documented, although some of the intimate 
> details are only in the javadoc of the runtime or the list archives 
> (because of questions such as those you ask - which are great btw).
>
> I suggest to take a look at the docs in the various stream interfaces 
> and their implementations, both have more than just one line of docs 
> and the code is generally very clear. And since it's code, you might 
> even find a bug or two, thus helping everyone :)
>
> Thanks,
> -k
Javadoc? As far as I can see, there isn't any in the source distribution 
(and frankly, I was wondering why, but didn't get to asking). Is it 
supposed to be there and somehow got missed? Or are we supposed to roll 
our own?

Ron

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From himmy070 at gmail.com  Mon Aug 18 08:45:59 2008
From: himmy070 at gmail.com (mark twain)
Date: Mon, 18 Aug 2008 11:45:59 -0400
Subject: [antlr-interest] help related to interpreted grammar for calculator
Message-ID: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>

Hi Every1,

I am writing the grammar for a calcluator supporting  basic arithmetic
operations and is able to successfully generate the AST from my Lexer-Parser
grammar<bbcalc.g> and  treeWalker grammar<bbcalcTreeWalker.g>.

Now I am writing the Interpreter grammar<bbcalcInterpreter.g> to generate
the output value from above generated AST but getting following errors. I am
new-bie to ANTLR and since last 2 days trying to figure out the problem with
interpreter grammar but still not able to resolve it  :-(
***********************************************************************
error(100): bbcalcInterpreter.g:15:13: syntax error: antlr:
bbcalcInterpreter.g:15:13: unexpected token:  int v = 0;
error(100): bbcalcInterpreter.g:16:22: syntax error: antlr:
bbcalcInterpreter.g:16:22: unexpected token: IDENTIFIER
error(100): bbcalcInterpreter.g:16:34: syntax error: antlr:
bbcalcInterpreter.g:16:34: unexpected token: =
error(100): bbcalcInterpreter.g:16:39: syntax error: antlr:
bbcalcInterpreter.g:16:39: unexpected token: )
warning(138): bbcalcInterpreter.g:0:0: grammar bbcalcInterpreter: no start
rule (no rule can obviously be followed by EOF)
Generating bbcalcInterpreter.c
Generating bbcalcInterpreter.h
**********************************************************************
I have attached all my 3 grammar files and it would be great if you could go
through my simple grammar files and help me in this.
Thanks...........
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/53469038/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bbcalc.g
Type: application/octet-stream
Size: 1203 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/53469038/attachment-0002.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: bbcalcInterpreter.c
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/53469038/attachment-0001.c 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bbcalcTreeWalker.g
Type: application/octet-stream
Size: 345 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/53469038/attachment-0003.obj 

From kroepke at classdump.org  Mon Aug 18 08:47:03 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 17:47:03 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A996D3.3000603@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
Message-ID: <7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>


On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:

> Javadoc? As far as I can see, there isn't any in the source  
> distribution (and frankly, I was wondering why, but didn't get to  
> asking). Is it supposed to be there and somehow got missed? Or are  
> we supposed to roll our own?


Oh. I guess it isn't generated then. Didn't even notice that, because  
I always use an IDE and it apparently computes that automatically from  
the source attachment I configured.
I think it should be generated, it's trivial to do so, isn't it?

Ter?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From jaluber at gmx.de  Mon Aug 18 09:02:50 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Aug 2008 18:02:50 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
Message-ID: <48A99D2A.6000900@gmx.de>

Kay R?pke schrieb:
> 
> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
> 
>> Javadoc? As far as I can see, there isn't any in the source
>> distribution (and frankly, I was wondering why, but didn't get to
>> asking). Is it supposed to be there and somehow got missed? Or are we
>> supposed to roll our own?
> 
> 
> Oh. I guess it isn't generated then. Didn't even notice that, because I
> always use an IDE and it apparently computes that automatically from the
> source attachment I configured.
> I think it should be generated, it's trivial to do so, isn't it?
> 
> Ter?

Look here: <http://antlr.org/api/Java/index.html>

Johannes
> 
> cheers,
> -k


From rich at steelezone.net  Mon Aug 18 09:00:43 2008
From: rich at steelezone.net (Richard Steele)
Date: Mon, 18 Aug 2008 16:00:43 +0000 (UTC)
Subject: [antlr-interest] A very basic grammar--and I'm confused!
References: <loom.20080817T023559-877@post.gmane.org>
	<20080817045135.6C79511EE42@www.antlr.org>
Message-ID: <loom.20080818T154436-276@post.gmane.org>

Gavin Lambert <antlr at ...> writes:

> This is why it's dangerous to use literals in parser rules :)

I like flirting with danger.  :-)

[snip helpful advice about implied lexer rules]

> The final piece of the puzzle is that given a choice between two 
> tokens at lexing time, ANTLR will favour the longest match -- and 
> once "inside" a token, it will not consider alternative 
> interpretations.

Ah!  This is the piece I was missing.  Also, I was confused between the roles
the lexer and the parser were playing when disambiguating their respective rules.

> Hopefully this all makes sense now :)

Yes, thanks.

> you may need to 
> merge the lexer rules and give it some explicit disambiguation

Care to give any hints on how to do that?  I got a private e-mail showing an
example of using semantic predicates but I haven't played with them much.
 
> or possibly just add a whitespace rule, if the 'X' is actually 
> representing a keyword that must be surrounded by whitespace.

I can't do that: I'm parsing a defacto standardish file format.  (This is a
data-interchange file format, not a general-purpose computer language.  I'm
evaluating if it's worth introducing Antlr into our mix for parsing it.)

Generally speaking, this file format has a syntax that looks something like this
(represented as pseudo-antlr):

r: INT {two digits}? (INT {three digits}? VALUE END_OF_FIELD)+ NEWLINE;
END_OF_FIELD: ';';
INT: '0'..'9';
VALUE: 'A'..'Z' | 'a'..'z' | '0'..'9' | ' ';

How do I express the length requirements to the lexer/parser?  As you pointed
out, since the rule for VALUE is a superset of the rule for INT, it's sucking up
the largest text fragment.

Thanks,
Rich

(Posting through gmane and got a captcha of "stupefied".  How'd it know?)



From troy.daniels at baesystems.com  Mon Aug 18 09:14:29 2008
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Mon, 18 Aug 2008 12:14:29 -0400
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked] Re:
	ANTLR 3.1 - Serious performance downgrade
Message-ID: <738m08$31u04@dmzms99802.na.baesystems.com>

Can you guys please stop swearing at each other?  I've been getting
these messages for days.  If you're not having an ad hominem flame war,
can someone look for what's probably tripping the filter and remove it
from the quoted text?  The message below is all the information I have.

Troy 

> -----Original Message-----
> From: SMTP.Gateway 
> Sent: Sunday, August 17, 2008 4:25 PM
> To: troy.daniels at alphatech.com
> Subject: [Profanity Detected - Message Blocked] Re: 
> [antlr-interest] ANTLR 3.1 - Serious performance downgrade
> 
> BAESystems Notification
> 
> An email sent to "Benjamin Niemann" <pink at odahoda.de> 
> contained one or more profanity words.  The message from 
> Terence Parr <parrt at cs.usfca.edu> was blocked.
> 
> 
> 
> 

From Vitaliy at dbsophic.com  Mon Aug 18 10:19:01 2008
From: Vitaliy at dbsophic.com (Vitaliy)
Date: Mon, 18 Aug 2008 20:19:01 +0300
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A99D2A.6000900@gmx.de>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de>
Message-ID: <B0DE8B66453D0F4AA67D2A150934999B048C0D8389@ex01.dbsophicHQ.com>

Hi,

IMHO it is not detailed enough,
and lacks sufficient explanations about most of the functions specifically,
and of how it all 'works together' in general.

For instance, below is a quote out of the docs regarding LA:
-------------------------------------------------------------------------------
org.antlr.runtime.CommonTokenStream.LA  ( int  i   )

Get int at current input pointer + i ahead where i=1 is next int. Negative indexes are allowed. LA(-1) is previous token (token just matched). LA(-i) where i is before first token should yield -1, invalid char / EOF.

Implements org.antlr.runtime.IntStream.

Definition at line 299 of file CommonTokenStream.java.
-------------------------------------------------------------------------------

It says nothing about LA(0), or the NullPointerException behavior Kay had mentioned before,
And that I think is one of the better documented functions.

We of course can dig in the code, and find out,
But I believe It would have been much more convenient if it were better documented.

But again, that's spoiled me :)

Vitaliy

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Monday, August 18, 2008 18:03
To: Kay R?pke
Cc: ANTLR-Interest Interest; Terence Parr
Subject: Re: [antlr-interest] Lazy load of CommonTokenStream??

Kay R?pke schrieb:
>
> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>
>> Javadoc? As far as I can see, there isn't any in the source
>> distribution (and frankly, I was wondering why, but didn't get to
>> asking). Is it supposed to be there and somehow got missed? Or are we
>> supposed to roll our own?
>
>
> Oh. I guess it isn't generated then. Didn't even notice that, because I
> always use an IDE and it apparently computes that automatically from the
> source attachment I configured.
> I think it should be generated, it's trivial to do so, isn't it?
>
> Ter?

Look here: <http://antlr.org/api/Java/index.html>

Johannes
>
> cheers,
> -k






__________ Information from ESET NOD32 Antivirus, version of virus signature database 3365 (20080818) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com



__________ Information from ESET NOD32 Antivirus, version of virus signature database 3365 (20080818) __________

The message was checked by ESET NOD32 Antivirus.

http://www.eset.com


From brent.yates at gmail.com  Mon Aug 18 09:22:37 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Mon, 18 Aug 2008 12:22:37 -0400
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked] Re:
	ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <738m08$31u04@dmzms99802.na.baesystems.com>
References: <738m08$31u04@dmzms99802.na.baesystems.com>
Message-ID: <6edc6c380808180922v7c2dad13vdc4cb34378dd16ee@mail.gmail.com>

You may not have a choice, but I would start using an email system for
adults.  There is no swearing going on so the problem is on your end.

byates
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/d7870dad/attachment.html 

From jaluber at gmx.de  Mon Aug 18 09:34:43 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Aug 2008 18:34:43 +0200
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked] Re:
 ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <738m08$31u04@dmzms99802.na.baesystems.com>
References: <738m08$31u04@dmzms99802.na.baesystems.com>
Message-ID: <48A9A4A3.9020709@gmx.de>

Daniels, Troy (US SSA) schrieb:
> Can you guys please stop swearing at each other?  I've been getting
> these messages for days.  If you're not having an ad hominem flame war,
> can someone look for what's probably tripping the filter and remove it
> from the quoted text?  The message below is all the information I have.
> 
> Troy 

Well, the email causing to activate the filter contains "s h i t" in the
meaning of the French "M e r d e!". As the mailing list in generally
very polite this wasn't used in a flame war, but Ter demonstrated his
frustrations non-verbally. Harmless compared to what is aired on TV.

I advise to deactivate such filters anyway because the cause more
trouble as they are worth. Either they catch the wrong emails, mangle
harmless text ("*butt*ignment", anyone?) or in the case, they actually
work, wouldn't you want to know that you have been insulted indeed?

Johannes
> 
>> -----Original Message-----
>> From: SMTP.Gateway 
>> Sent: Sunday, August 17, 2008 4:25 PM
>> To: troy.daniels at alphatech.com
>> Subject: [Profanity Detected - Message Blocked] Re: 
>> [antlr-interest] ANTLR 3.1 - Serious performance downgrade
>>
>> BAESystems Notification
>>
>> An email sent to "Benjamin Niemann" <pink at odahoda.de> 
>> contained one or more profanity words.  The message from 
>> Terence Parr <parrt at cs.usfca.edu> was blocked.
>>
>>
>>
>>
> 


From jimi at temporal-wave.com  Mon Aug 18 09:34:35 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 09:34:35 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
Message-ID: <1219077275.13898.6.camel@jimi>

On Mon, 2008-08-18 at 07:30 -0700, miles mccoo wrote:
> 
> 
> I used the original antlr  ages ago and now I need to use it again.
> From the description Antlr3 is what I want to use, but I haven't been
> able to find any information on how to use it in c++.
> 
> Is there a wiki, tutorial, example, or msg thread on how to generate a
> parser that I can compile into my c++ application? Everything I've
> found assumes I'm a java programmer, which I'm not. Is see the page
> with the target libs, but no info on how to use them.
> 

Use the C target, but compile the resulting .c files as c++ code and it
will all work. Use the C examples in the examples download for more
guidance (specifically the C parser examples).

The C API is documented by following the API Documentation link from the
main ANTLR home page.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/2666a93c/attachment.html 

From jimi at temporal-wave.com  Mon Aug 18 09:41:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 09:41:03 -0700
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked]	Re:
	ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <738m08$31u04@dmzms99802.na.baesystems.com>
References: <738m08$31u04@dmzms99802.na.baesystems.com>
Message-ID: <1219077663.13898.12.camel@jimi>

On Mon, 2008-08-18 at 12:14 -0400, Daniels, Troy (US SSA) wrote:

> Can you guys please stop swearing at each other?  I've been getting
> these messages for days.  If you're not having an ad hominem flame war,
> can someone look for what's probably tripping the filter and remove it
> from the quoted text?  The message below is all the information I have.

I can't repeat the words used or your profanity trigger will kick in
again. I suggest that you just turn such a stupid filter off, or at
least tone down its sensitivity as nothing too terrible was said.
Censoring filters like this are particularly egregious if you ask me - I
don't know how half of programmers emails will get through that filter.
Why not just subscribe via gmail or something instead?

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/526f799a/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Aug 18 09:41:01 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 09:41:01 -0700
Subject: [antlr-interest] Java grammar accepting junk
In-Reply-To: <48A991B0.9070308@oracle.com>
References: <48A5EF5F.5060805@oracle.com>
	<843D2170-4DC8-4636-AABC-C6186E113354@cs.usfca.edu>
	<48A5FF9E.7080600@oracle.com>
	<522ED70F-2939-47B0-B2DF-8449CBAC18A1@cs.usfca.edu>
	<48A60B5C.3010104@oracle.com>
	<2762C874-F4E5-4086-955E-E3389952644C@cs.usfca.edu>
	<48A991B0.9070308@oracle.com>
Message-ID: <688F42EE-97D3-48A5-B38F-9DFC48A72F10@cs.usfca.edu>


On Aug 18, 2008, at 8:13 AM, Ron Hunter-Duvar wrote:
>> it only counts real errors not backtracking errors :)  you can also  
>> ask for state.input.index() to get the token index.
>>
>> Ter
>>
> So a real error means the parser really did give up before the end  
> of the file was reached?

A real error is well, an error when not backtracking...nothing to do  
with giving up. t hat is recovery not reporting.

> If so, then what I have is sufficient.
>
> Not sure what the token index would tell me. Do you mean use that  
> index to get the token and check if it's an EOF token?

See if you stopped before index.size().
Ter

From miles.mccoo at gmail.com  Mon Aug 18 09:50:35 2008
From: miles.mccoo at gmail.com (miles mccoo)
Date: Mon, 18 Aug 2008 09:50:35 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <1219077275.13898.6.camel@jimi>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
	<1219077275.13898.6.camel@jimi>
Message-ID: <eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>

Thank you, Jim, for the reply.

The existence of the c library told me that there's a way to generate .c
output and not just Java and your mail confirms this. The thing is, I
haven't managed to get anltworks to generate anything other than java code.

I looked in the file->preferences popup and didn't see anything about
targetting other languages. when I run generate->generate code, I get java
code.

so perhaps the real question is: what option do I need to set to generate
non-java (C, in my case, but I don't see any others either) code?

Miles


On Mon, Aug 18, 2008 at 9:34 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  On Mon, 2008-08-18 at 07:30 -0700, miles mccoo wrote:
>
>
>
> I used the original antlr  ages ago and now I need to use it again. From
> the description Antlr3 is what I want to use, but I haven't been able to
> find any information on how to use it in c++.
>
> Is there a wiki, tutorial, example, or msg thread on how to generate a
> parser that I can compile into my c++ application? Everything I've found
> assumes I'm a java programmer, which I'm not. Is see the page with the
> target libs, but no info on how to use them.
>
>  Use the C target, but compile the resulting .c files as c++ code and it
> will all work. Use the C examples in the examples download for more guidance
> (specifically the C parser examples).
>
> The C API is documented by following the API Documentation link from the
> main ANTLR home page.
>
> Jim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0daaf4cd/attachment.html 

From kroepke at classdump.org  Mon Aug 18 09:55:49 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 18:55:49 +0200
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
	<1219077275.13898.6.camel@jimi>
	<eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
Message-ID: <B958EC9F-7330-4459-AB1D-65B00DBD15FF@classdump.org>

hi!

On Aug 18, 2008, at 6:50 PM, miles mccoo wrote:

> so perhaps the real question is: what option do I need to set to  
> generate
> non-java (C, in my case, but I don't see any others either) code?


options {
	language=C;
}

But ANTLRWorks will refuse to debug that (it only knows how to compile  
and run Java code), so you must compile and start it by hand (remember  
to generate the output using the -debug flag) and then use "Debug  
Remote...".

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From jaluber at gmx.de  Mon Aug 18 10:01:41 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Aug 2008 19:01:41 +0200
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>	<1219077275.13898.6.camel@jimi>
	<eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
Message-ID: <48A9AAF5.7050405@gmx.de>

miles mccoo schrieb:
> Thank you, Jim, for the reply.
> 
> The existence of the c library told me that there's a way to generate .c
> output and not just Java and your mail confirms this. The thing is, I
> haven't managed to get anltworks to generate anything other than java code.
> 
> I looked in the file->preferences popup and didn't see anything about
> targetting other languages. when I run generate->generate code, I get
> java code.
> 
> so perhaps the real question is: what option do I need to set to
> generate non-java (C, in my case, but I don't see any others either) code?
> 
> Miles

Use

options {
language=C;
}

in your grammar. Please also read the "5 minute introduction" on the
wiki, as beginner questions tend to have been answered there.

Johannes
> 
> 
> On Mon, Aug 18, 2008 at 9:34 AM, Jim Idle <jimi at temporal-wave.com
> <mailto:jimi at temporal-wave.com>> wrote:
> 
>     On Mon, 2008-08-18 at 07:30 -0700, miles mccoo wrote:
>>
>>
>>     I used the original antlr  ages ago and now I need to use it
>>     again. From the description Antlr3 is what I want to use, but I
>>     haven't been able to find any information on how to use it in c++.
>>
>>     Is there a wiki, tutorial, example, or msg thread on how to
>>     generate a parser that I can compile into my c++ application?
>>     Everything I've found assumes I'm a java programmer, which I'm
>>     not. Is see the page with the target libs, but no info on how to
>>     use them.
>>
>     Use the C target, but compile the resulting .c files as c++ code and
>     it will all work. Use the C examples in the examples download for
>     more guidance (specifically the C parser examples).
> 
>     The C API is documented by following the API Documentation link from
>     the main ANTLR home page.
> 
>     Jim
> 
> 


From ron.hunter-duvar at oracle.com  Mon Aug 18 10:02:28 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 11:02:28 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A99D2A.6000900@gmx.de>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de>
Message-ID: <48A9AB24.8070604@oracle.com>

That helps, thanks.

But I'd still like to have the Javadoc shipped with the source 
distribution if possible. It's what I'm used to working with, and it 
integrates well with the IDE I use (which doesn't generate it on its 
own, AFAIK). It also doesn't require me to be online to be able to look 
something up.

I thought it was trivial to generate too, but I've never used the 
javadoc program myself before. When I tried to generate it I got a lot 
of warnings and errors. If I get time I'll look into it some more.

Thanks,
Ron


Johannes Luber wrote:
> Kay R?pke schrieb:
>   
>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>
>>     
>>> Javadoc? As far as I can see, there isn't any in the source
>>> distribution (and frankly, I was wondering why, but didn't get to
>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>> supposed to roll our own?
>>>       
>> Oh. I guess it isn't generated then. Didn't even notice that, because I
>> always use an IDE and it apparently computes that automatically from the
>> source attachment I configured.
>> I think it should be generated, it's trivial to do so, isn't it?
>>
>> Ter?
>>     
>
> Look here: <http://antlr.org/api/Java/index.html>
>
> Johannes
>   
>> cheers,
>> -k
>>     
>
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/6899266c/attachment.html 

From miles.mccoo at gmail.com  Mon Aug 18 10:12:14 2008
From: miles.mccoo at gmail.com (miles mccoo)
Date: Mon, 18 Aug 2008 10:12:14 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <48A9AAF5.7050405@gmx.de>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
	<1219077275.13898.6.camel@jimi>
	<eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
	<48A9AAF5.7050405@gmx.de>
Message-ID: <eab91eee0808181012x713cf407w4c04333dc3c6f5b8@mail.gmail.com>

Yes! that's it! Danke Danke Danke.

I hadn't realized that
http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+documentation is just a
sub section of http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3+Wiki+Home

I had looked at the sections of the documentation page that seemed relevant,
but that was the wrong starting point.

Either way, I've found it now as well as the c doxygen stuff. Perhaps the
link to the doxygen stuff should be moved to earlier in the c support
section?

Miles

On Mon, Aug 18, 2008 at 10:01 AM, Johannes Luber <jaluber at gmx.de> wrote:

> miles mccoo schrieb:
> > Thank you, Jim, for the reply.
> >
> > The existence of the c library told me that there's a way to generate .c
> > output and not just Java and your mail confirms this. The thing is, I
> > haven't managed to get anltworks to generate anything other than java
> code.
> >
> > I looked in the file->preferences popup and didn't see anything about
> > targetting other languages. when I run generate->generate code, I get
> > java code.
> >
> > so perhaps the real question is: what option do I need to set to
> > generate non-java (C, in my case, but I don't see any others either)
> code?
> >
> > Miles
>
> Use
>
> options {
> language=C;
> }
>
> in your grammar. Please also read the "5 minute introduction" on the
> wiki, as beginner questions tend to have been answered there.
>
> Johannes
> >
> >
> > On Mon, Aug 18, 2008 at 9:34 AM, Jim Idle <jimi at temporal-wave.com
> > <mailto:jimi at temporal-wave.com>> wrote:
> >
> >     On Mon, 2008-08-18 at 07:30 -0700, miles mccoo wrote:
> >>
> >>
> >>     I used the original antlr  ages ago and now I need to use it
> >>     again. From the description Antlr3 is what I want to use, but I
> >>     haven't been able to find any information on how to use it in c++.
> >>
> >>     Is there a wiki, tutorial, example, or msg thread on how to
> >>     generate a parser that I can compile into my c++ application?
> >>     Everything I've found assumes I'm a java programmer, which I'm
> >>     not. Is see the page with the target libs, but no info on how to
> >>     use them.
> >>
> >     Use the C target, but compile the resulting .c files as c++ code and
> >     it will all work. Use the C examples in the examples download for
> >     more guidance (specifically the C parser examples).
> >
> >     The C API is documented by following the API Documentation link from
> >     the main ANTLR home page.
> >
> >     Jim
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/08dfc1c7/attachment.html 

From parrt at cs.usfca.edu  Mon Aug 18 11:46:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 11:46:06 -0700
Subject: [antlr-interest] Subscribe list
In-Reply-To: <20080818015732.13452.qmail@station198.com>
References: <20080818015732.13452.qmail@station198.com>
Message-ID: <DE9C455F-5149-4F89-A6D6-6D92FB52ECAC@cs.usfca.edu>

It Was set at 30 kB... just made it 200 :)

Ter
On Aug 17, 2008, at 6:57 PM, Anders Karlsson wrote:

>
> Hi,
>
> Sorry for this off-topic question but I was wondering why I get  
> several "daily digest" emails a day? I expect to get one per day  
> when using that option but I get like 5-6 a day which is a bit  
> annoying. Is anybody else having the same problem? Some setting  
> somewhere?
>
> Again sorry for the off-topic question.
>
> BR/Anders Karlsson
> Sybase


From parrt at cs.usfca.edu  Mon Aug 18 11:52:46 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 11:52:46 -0700
Subject: [antlr-interest] Need for regular FAQ mails (was: Re:
	unsubscribe request)
In-Reply-To: <47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<48A4B1D2.4010301@jazillian.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
	<6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
	<47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>
Message-ID: <B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>

JustTried to append... let's see what this does in this test message.
Ter
On Aug 17, 2008, at 3:16 PM, Chris Rebert wrote:

> Well, there is the monthly subscription reminder that Mailman sends
> out which usually has this info, so unless it's been turned off by the
> admins, people should be getting that on a regular interval.
>
> However, for the Python mailinglists I'm subscribed to, every message
> has a footer appended with the list info, for example:
> Python-3000 mailing list
> Python-3000 at python.org
> http://mail.python.org/mailman/listinfo/python-3000
> Unsubscribe: http://mail.python.org/mailman/options/python-3000/MY-EMAIL-ADDRESS-REDACTED
>
> Perhaps enabling the Mailman option for this should be considered?
>
> - Chris
  to

From ron.hunter-duvar at oracle.com  Mon Aug 18 11:54:13 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 12:54:13 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A9AB24.8070604@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>
	<48A9AB24.8070604@oracle.com>
Message-ID: <48A9C555.1080203@oracle.com>

Since you're generating Doxygen documentation now for online viewing, 
perhaps you could include that in the source distribution and/or make it 
available as a separate download. I'm more used to working with Javadoc, 
but there's nothing wrong with the Doxygen documents. Doxygen is 
certainly more popular for open source projects. Having them available 
locally for fast browsing would be great. Something to consider.

Thanks,
Ron


Ron Hunter-Duvar wrote:
> That helps, thanks.
>
> But I'd still like to have the Javadoc shipped with the source 
> distribution if possible. It's what I'm used to working with, and it 
> integrates well with the IDE I use (which doesn't generate it on its 
> own, AFAIK). It also doesn't require me to be online to be able to 
> look something up.
>
> I thought it was trivial to generate too, but I've never used the 
> javadoc program myself before. When I tried to generate it I got a lot 
> of warnings and errors. If I get time I'll look into it some more.
>
> Thanks,
> Ron
>
>
> Johannes Luber wrote:
>> Kay R?pke schrieb:
>>   
>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>
>>>     
>>>> Javadoc? As far as I can see, there isn't any in the source
>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>>> supposed to roll our own?
>>>>       
>>> Oh. I guess it isn't generated then. Didn't even notice that, because I
>>> always use an IDE and it apparently computes that automatically from the
>>> source attachment I configured.
>>> I think it should be generated, it's trivial to do so, isn't it?
>>>
>>> Ter?
>>>     
>>
>> Look here: <http://antlr.org/api/Java/index.html>
>>
>> Johannes
>>   
>>> cheers,
>>> -k
>>>     
>>
>>
>>   
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/b8eb3642/attachment.html 

From r_reitzi at cs.uni-kl.de  Mon Aug 18 11:55:24 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 18 Aug 2008 20:55:24 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A9AB24.8070604@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
Message-ID: <20080818205524.58064pywodt7rpmo@horde.verrech.net>

That's what ant is made for!

Try typing "ant doc" or "ant javadoc" when in downloads root folder  
(seeing build.xml). Usually, doc targets are named like that. Any  
different here?

Raphael

"Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18  
19:02:28 2008):

> That helps, thanks.
>
> But I'd still like to have the Javadoc shipped with the source  
> distribution if possible. It's what I'm used to working with, and it  
> integrates well with the IDE I use (which doesn't generate it on its  
> own, AFAIK). It also doesn't require me to be online to be able to  
> look something up.
>
> I thought it was trivial to generate too, but I've never used the  
> javadoc program myself before. When I tried to generate it I got a  
> lot of warnings and errors. If I get time I'll look into it some more.
>
> Thanks,
> Ron
>
>
> Johannes Luber wrote:
>> Kay R?pke schrieb:
>>
>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>
>>>
>>>> Javadoc? As far as I can see, there isn't any in the source
>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>>> supposed to roll our own?
>>>>
>>> Oh. I guess it isn't generated then. Didn't even notice that, because I
>>> always use an IDE and it apparently computes that automatically from the
>>> source attachment I configured.
>>> I think it should be generated, it's trivial to do so, isn't it?
>>>
>>> Ter?
>>>
>>
>> Look here: <http://antlr.org/api/Java/index.html>
>>
>> Johannes
>>
>>> cheers,
>>> -k
>>>
>>
>>
>>
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/7288968a/attachment.bin 

From r_reitzi at cs.uni-kl.de  Mon Aug 18 12:10:50 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 18 Aug 2008 21:10:50 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <99190068-ACDC-4C88-A3BD-9363576A18EB@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<20080818140723.13103fh8uy07ua68@horde.verrech.net>
	<99190068-ACDC-4C88-A3BD-9363576A18EB@classdump.org>
Message-ID: <20080818211050.119153hws84wevwg@horde.verrech.net>

Moin!

> The semantics are that a stream is never "on" a specific element,  
> but rather "in between". Then LA(-1) is the just consumed element  
> and LA(1) is the next one to be looked at. With those semantics  
> LA(0) makes no sense, because it's not a valid element. An element  
> (char, token or node) is either consumed or not, so I think it makes  
> sense to specify it this way.

Uh. Is that standard behaviour of streams? I certainly prefer Turing  
machine semantics.
You could implement LA(0) := LA(-1), but this would create additional  
confusion for sure. ("Why does LA(-1) not yield the next token to the  
left?")

Regards

Raphael

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/ac3efd0f/attachment.bin 

From parrt at cs.usfca.edu  Mon Aug 18 12:43:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 12:43:27 -0700
Subject: [antlr-interest] updated Heterogeneous treenode construction
Message-ID: <E9AAC21F-A842-43AE-81A4-4B6D886FCB0D@cs.usfca.edu>


...now discusses when you need to implement Tree.dupNode:

http://antlr.org/wiki/display/ANTLR3/Tree+construction#Treeconstruction-heterogeneous
Ter

From ron.hunter-duvar at oracle.com  Mon Aug 18 12:48:41 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 13:48:41 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <20080818205524.58064pywodt7rpmo@horde.verrech.net>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>
	<48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
Message-ID: <48A9D219.4030300@oracle.com>

Yeah, but why expect each user to figure out how to do this, and install 
ant and doxygen if they're not already. Why not include it in a doc 
directory in the source shipment if it's already built?

As it happens, I don't have ant installed due to some broken 
dependencies on the Linux I'm using. Installing ant forces a whole bunch 
of stuff I don't need (Eclipse, gcj, ...) and an Antlr-2.7.6 package 
that breaks my use of Antlr 3.1. Until I work around that, I can't 
generate the docs locally.

Ron


Raphael Reitzig wrote:
> That's what ant is made for!
>
> Try typing "ant doc" or "ant javadoc" when in downloads root folder 
> (seeing build.xml). Usually, doc targets are named like that. Any 
> different here?
>
> Raphael
>
> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18 
> 19:02:28 2008):
>
>> That helps, thanks.
>>
>> But I'd still like to have the Javadoc shipped with the source 
>> distribution if possible. It's what I'm used to working with, and it 
>> integrates well with the IDE I use (which doesn't generate it on its 
>> own, AFAIK). It also doesn't require me to be online to be able to 
>> look something up.
>>
>> I thought it was trivial to generate too, but I've never used the 
>> javadoc program myself before. When I tried to generate it I got a 
>> lot of warnings and errors. If I get time I'll look into it some more.
>>
>> Thanks,
>> Ron
>>
>>
>> Johannes Luber wrote:
>>> Kay R?pke schrieb:
>>>
>>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>>
>>>>
>>>>> Javadoc? As far as I can see, there isn't any in the source
>>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>>>> supposed to roll our own?
>>>>>
>>>> Oh. I guess it isn't generated then. Didn't even notice that, 
>>>> because I
>>>> always use an IDE and it apparently computes that automatically 
>>>> from the
>>>> source attachment I configured.
>>>> I think it should be generated, it's trivial to do so, isn't it?
>>>>
>>>> Ter?
>>>>
>>>
>>> Look here: <http://antlr.org/api/Java/index.html>
>>>
>>> Johannes
>>>
>>>> cheers,
>>>> -k
>>>>
>>>
>>>
>>>
>>
>> -- 
>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>> Oracle Service Engineering
>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>
>> All opinions expressed here are mine, and do not necessarily represent
>> those of my employer.
>>
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> ------------------------------------------------------------------------
>
> http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/bd7a36fb/attachment.html 

From kroepke at classdump.org  Mon Aug 18 12:52:23 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Mon, 18 Aug 2008 21:52:23 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A9D219.4030300@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>
	<48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
Message-ID: <D03AC2AE-F25C-487C-9382-8CC821B65780@classdump.org>


On Aug 18, 2008, at 9:48 PM, Ron Hunter-Duvar wrote:

> Yeah, but why expect each user to figure out how to do this, and  
> install ant and doxygen if they're not already. Why not include it  
> in a doc directory in the source shipment if it's already built?
>
> As it happens, I don't have ant installed due to some broken  
> dependencies on the Linux I'm using. Installing ant forces a whole  
> bunch of stuff I don't need (Eclipse, gcj, ...) and an Antlr-2.7.6  
> package that breaks my use of Antlr 3.1. Until I work around that, I  
> can't generate the docs locally.


I agree, the docs should be part of the default tarball, since they  
are generated for online use anyway.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From antlr at mirality.co.nz  Mon Aug 18 13:11:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 19 Aug 2008 08:11:12 +1200
Subject: [antlr-interest] How to return my own objects ?
In-Reply-To: <48A8AB6C.2030107@orange.fr>
References: <48A8AB6C.2030107@orange.fr>
Message-ID: <20080818201120.C445C11EB21@www.antlr.org>

At 10:51 18/08/2008, Le Lann Jean-Christophe wrote:
 >expr returns [MyExpr expr] :
 >    ^( '+' e1=expr e2=expr) { $expr = new MyExpr("+",e1,e2);}
 >    | INT                   { $expr = new MyExpr(new
 >String($INT.text));}
 >        ;

Technically, if you want the return value from that then instead 
of using e1/e2 in your code you should be using $e1.expr / 
$e2.expr.

 >architecture returns [Architecture arch] :
 >                    ^(ARCHITECTURE ID <skipped>)
 >            {$arch=new Architecture(new String(ID.text));}

Similarly here you should be using $ID.text, and wherever this is 
being invoked from you should be using $something.arch.

If you use the proper syntax then ANTLR takes care of the 
differences for you ;)


From antlr at mirality.co.nz  Mon Aug 18 13:22:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 19 Aug 2008 08:22:28 +1200
Subject: [antlr-interest] help related to interpreted grammar for
 calculator
In-Reply-To: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com
 >
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
Message-ID: <20080818202236.4E34611ECEE@www.antlr.org>

At 03:45 19/08/2008, mark twain wrote:
>error(100): bbcalcInterpreter.g:15:13: syntax error: antlr: 
>bbcalcInterpreter.g:15:13: unexpected token:  int v = 0;
>error(100): bbcalcInterpreter.g:16:22: syntax error: antlr: 
>bbcalcInterpreter.g:16:22: unexpected token: IDENTIFIER
[...]
>I have attached all my 3 grammar files and it would be great if 
>you could go through my simple grammar files and help me in this.

Actually, you didn't.  You attached the bbcalcInterpreter.c 
(generated file) instead of the bbcalcInterpreter.g (grammar file) 
-- and that's the one that contains the errors, apparently. 


From cvrebert at gmail.com  Mon Aug 18 13:22:46 2008
From: cvrebert at gmail.com (Chris Rebert)
Date: Mon, 18 Aug 2008 13:22:46 -0700
Subject: [antlr-interest] Need for regular FAQ mails (was: Re:
	unsubscribe request)
In-Reply-To: <B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
	<6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
	<47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>
	<B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>
Message-ID: <47c890dc0808181322m509abebcrd150f267b96d696f@mail.gmail.com>

You might want to add a line of =s to separate it more clearly from
the email body.
- Chris

========
Follow the path of the Iguana...
Rebertia: http://rebertia.com
Blog: http://blog.rebertia.com


On Mon, Aug 18, 2008 at 11:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> JustTried to append... let's see what this does in this test message.
> Ter
> On Aug 17, 2008, at 3:16 PM, Chris Rebert wrote:
>
>> Well, there is the monthly subscription reminder that Mailman sends
>> out which usually has this info, so unless it's been turned off by the
>> admins, people should be getting that on a regular interval.
>>
>> However, for the Python mailinglists I'm subscribed to, every message
>> has a footer appended with the list info, for example:
>> Python-3000 mailing list
>> Python-3000 at python.org
>> http://mail.python.org/mailman/listinfo/python-3000
>> Unsubscribe: http://mail.python.org/mailman/options/python-3000/MY-EMAIL-ADDRESS-REDACTED
>>
>> Perhaps enabling the Mailman option for this should be considered?
>>
>> - Chris
>  to
> http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at mirality.co.nz  Mon Aug 18 13:33:53 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 19 Aug 2008 08:33:53 +1200
Subject: [antlr-interest] A very basic grammar--and I'm confused!
In-Reply-To: <loom.20080818T154436-276@post.gmane.org>
References: <loom.20080817T023559-877@post.gmane.org>
	<20080817045135.6C79511EE42@www.antlr.org>
	<loom.20080818T154436-276@post.gmane.org>
Message-ID: <20080818203403.2D8EC11ED71@www.antlr.org>

At 04:00 19/08/2008, Richard Steele wrote:
 >Generally speaking, this file format has a syntax that looks
 >something like this (represented as pseudo-antlr):
 >
 >r: INT {two digits}? (INT {three digits}? VALUE END_OF_FIELD)+
 >NEWLINE;
 >END_OF_FIELD: ';';
 >INT: '0'..'9';
 >VALUE: 'A'..'Z' | 'a'..'z' | '0'..'9' | ' ';
 >
 >How do I express the length requirements to the 
lexer/parser?  As
 >you pointed out, since the rule for VALUE is a superset of the
 >rule for INT, it's sucking up the largest text fragment.

Well, actually it won't for the rules above, since you left out 
the +s :)

There isn't really any way in ANTLR to specify cardinalities other 
than 0/1/many, short of simply repeating a fragment.  So you 
*could* do something like this:

fragment DIGIT: '0'..'9';
fragment THREEDIGITS: DIGIT+;   // this is just to define the 
token name
TWODIGITS
   : DIGIT DIGIT
     (DIGIT { $type = THREEDIGITS; })?
   ;

But that sort of thing gets messy quickly.  If you don't have any 
kind of distinctive end-of-number markers (such as whitespace), 
then you might be better off not using ANTLR at all; it's not 
really designed for simplistic parsing problems like this.

However one way that you could do it in ANTLR would be to create 
one token per character at lexing time and leave everything else 
up to the parser:

r: twoDigitInt (threeDigitInt value END_OF_FIELD)+;

twoDigitInt: DIGIT DIGIT;
threeDigitInt: DIGIT DIGIT DIGIT;
value: (ALPHANUM | DIGIT)+;

END_OF_FIELD: ';';
DIGIT: '0'..'9';
ALPHANUM: 'A'..'Z' | 'a'..'z' | ' ';


From garry.iglesias at gmail.com  Mon Aug 18 13:49:44 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Mon, 18 Aug 2008 16:49:44 -0400
Subject: [antlr-interest] [C Target] User custom context handling,
	and parallel parsing.
Message-ID: <f71c56ff0808181349j54363e34ud26d0e3639ac7b22@mail.gmail.com>

Hi Jim,

  I've encounter a reccurent problem using ANTLR with the C target language.
Maybe it's just that
I don't know the way to solve it but here it is:

  I need to be able to have some 'custom context' in my parser (and also in
my pure lexer filters...). This is important
because I might want to run several concurent parsings, and in my grammar I
need to be sure to have an isolated context
per thread.
  Using Java target it's simple : @lexer::members or @parser::members is ok
as it merges the target code inside the class.
  When I first used the C target I was disapointed not being able to find
how to do the same thing. I finally decide to pass my
context as a parameter of the first rule of the lexer. This works well, it's
a bit 'heavy' to write as I need to always access the
scope of my rule file, but it's works so I was quite happy with this. Note
that this works on the grammar rules (on a parser)
but this doesn't work on a lexer filter as they are not parameters to token
rules (and not even a 'root' in a filter....). I was not
really bother by this as I had no use (for now) for any context, but I will
need one for threading... :)
  The problem striked back today while I was willing to overload the
"displayRecognitionError" function. Because here too I
need the context, and in this place I have no way to be able to get my own
objects pointers. And this is not threading, and
the 'root rule parameter' trick doesn't work here.
  So maybe there are some 'hidden' clauses like @lexer::declarations and
@parser::declarations but I was unable to find any.
  Of course some of the problems could be solved by a 'Thread Local Storage'
strategy, but it would still involve some 'global'
the way I understand it and I don't want any globals ;). Moreover globals
are dangerouse even without threading when you
cascade recursve lex/par-sers using island grammar-style parsing or any
other 'uncommon' and complex usage.

  I would also add, about the concurrent parsing, that it would also benefit
from 'real streams' in input, I mean streamed input
instead of having the whole stuff 'ready'. This is not really mandatory but
it would improve greatly when a concurrent parser
component would have as input a translated output from another concurrent
parser.

  Sorry if they are already existing solutions to solve my problems, I was
just unable to find any clue in the documentation.

  Oh, I almost forget... THANKS for the Version 3.1 :)

Bests,

Garry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/53d89441/attachment.html 

From r_reitzi at cs.uni-kl.de  Mon Aug 18 14:00:28 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 18 Aug 2008 23:00:28 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A9D219.4030300@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
Message-ID: <20080818230028.15266bsgsbak2bk0@horde.verrech.net>

Well, only developers will use ANTLR. A developer should be able and  
willing to use common developer tools.

I'm not strictly against putting doc in the downloads, but I do not  
follow your arguments.

Besides, doc in downloads would be redundant. All information is in  
the sources (and, as a bonus, can easily and quickly be transformed to  
a readable format). I don't like redundancies.

Regards

Raphael

"Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18  
21:48:41 2008):

> Yeah, but why expect each user to figure out how to do this, and  
> install ant and doxygen if they're not already. Why not include it  
> in a doc directory in the source shipment if it's already built?
>
> As it happens, I don't have ant installed due to some broken  
> dependencies on the Linux I'm using. Installing ant forces a whole  
> bunch of stuff I don't need (Eclipse, gcj, ...) and an Antlr-2.7.6  
> package that breaks my use of Antlr 3.1. Until I work around that, I  
> can't generate the docs locally.
>
> Ron
>
>
> Raphael Reitzig wrote:
>> That's what ant is made for!
>>
>> Try typing "ant doc" or "ant javadoc" when in downloads root folder  
>> (seeing build.xml). Usually, doc targets are named like that. Any  
>> different here?
>>
>> Raphael
>>
>> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18  
>> 19:02:28 2008):
>>
>>> That helps, thanks.
>>>
>>> But I'd still like to have the Javadoc shipped with the source  
>>> distribution if possible. It's what I'm used to working with, and  
>>> it integrates well with the IDE I use (which doesn't generate it  
>>> on its own, AFAIK). It also doesn't require me to be online to be  
>>> able to look something up.
>>>
>>> I thought it was trivial to generate too, but I've never used the  
>>> javadoc program myself before. When I tried to generate it I got a  
>>> lot of warnings and errors. If I get time I'll look into it some  
>>> more.
>>>
>>> Thanks,
>>> Ron
>>>
>>>
>>> Johannes Luber wrote:
>>>> Kay R?pke schrieb:
>>>>
>>>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>>>
>>>>>
>>>>>> Javadoc? As far as I can see, there isn't any in the source
>>>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>>>>> supposed to roll our own?
>>>>>>
>>>>> Oh. I guess it isn't generated then. Didn't even notice that, because I
>>>>> always use an IDE and it apparently computes that automatically from the
>>>>> source attachment I configured.
>>>>> I think it should be generated, it's trivial to do so, isn't it?
>>>>>
>>>>> Ter?
>>>>>
>>>>
>>>> Look here: <http://antlr.org/api/Java/index.html>
>>>>
>>>> Johannes
>>>>
>>>>> cheers,
>>>>> -k
>>>>>
>>>>
>>>>
>>>>
>>>
>>> -- 
>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>> Oracle Service Engineering
>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>>
>>> All opinions expressed here are mine, and do not necessarily represent
>>> those of my employer.
>>>
>>>
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>> ------------------------------------------------------------------------
>>
>> http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:  
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/2f48d524/attachment.bin 

From himmy070 at gmail.com  Mon Aug 18 14:05:35 2008
From: himmy070 at gmail.com (mark twain)
Date: Mon, 18 Aug 2008 17:05:35 -0400
Subject: [antlr-interest] help related to interpreted grammar for
	calculator
In-Reply-To: <48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
	<48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
Message-ID: <41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>

Sorry!! for the mistake..
I have attached all 3 grammar files once again... Please look into the
Interpreter grammar file and let me know my mistake....

Cheers:)

On 8/18/08, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
> At 03:45 19/08/2008, mark twain wrote:
>
>> error(100): bbcalcInterpreter.g:15:13: syntax error: antlr:
>> bbcalcInterpreter.g:15:13: unexpected token:  int v = 0;
>> error(100): bbcalcInterpreter.g:16:22: syntax error: antlr:
>> bbcalcInterpreter.g:16:22: unexpected token: IDENTIFIER
>>
> [...]
>
>> I have attached all my 3 grammar files and it would be great if you could
>> go through my simple grammar files and help me in this.
>>
>
> Actually, you didn't.  You attached the bbcalcInterpreter.c (generated
> file) instead of the bbcalcInterpreter.g (grammar file) -- and that's the
> one that contains the errors, apparently.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0403d4a6/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bbcalcInterpreter.g
Type: application/octet-stream
Size: 637 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0403d4a6/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bbcalc.g
Type: application/octet-stream
Size: 1203 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0403d4a6/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bbcalcTreeWalker.g
Type: application/octet-stream
Size: 345 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0403d4a6/attachment-0002.obj 

From garry.iglesias at gmail.com  Mon Aug 18 14:28:02 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Mon, 18 Aug 2008 17:28:02 -0400
Subject: [antlr-interest] [C Target] @parser::apifuncs ...
Message-ID: <f71c56ff0808181428t79c247e3oba045d9de6866591@mail.gmail.com>

Hi again :),

Sorry to bother you, but I also just realize that if you do :

@parser::members
{
 static void MY_displayError(pANTLR3_BASE_RECOGNIZER _pRec,
pANTLR3_UINT8* _tokenNames) {
  //do something...
 }
}
@parser::apifuncs
{
 // Install custom error message display:
 RECOGNIZER->displayRecognitionError = MY_displayError;
}

the generated c parser doesn't compile because the 'members' code is
inserted after the parser constructor... So the compiler doesn't know the
function yet...
Of course it could be 'public' in a header and it would works, but if we
want to keep this 'internal stuff' hidden it could be interresting that the
members 'clause'
would be included before. (Or having another clauses to do forward
declarations 'before'... Or I should use an already existing clause like
::includes or something ?).

Thanks, and sorry again to disturb you.

Garry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/503780fe/attachment.html 

From jimi at temporal-wave.com  Mon Aug 18 14:35:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 14:35:03 -0700
Subject: [antlr-interest] [C Target] User custom context handling,
	and	parallel parsing.
In-Reply-To: <f71c56ff0808181349j54363e34ud26d0e3639ac7b22@mail.gmail.com>
References: <f71c56ff0808181349j54363e34ud26d0e3639ac7b22@mail.gmail.com>
Message-ID: <1219095303.13898.66.camel@jimi>

On Mon, 2008-08-18 at 16:49 -0400, Garry Iglesias wrote:
> Hi Jim,
>  
>   I've encounter a reccurent problem using ANTLR with the C target
> language. Maybe it's just that
> I don't know the way to solve it but here it is:
>  
>   I need to be able to have some 'custom context' in my parser (and
> also in my pure lexer filters...). This is important
> because I might want to run several concurent parsings, and in my
> grammar I need to be sure to have an isolated context
> per thread.
>   Using Java target it's simple : @lexer::members or @parser::members
> is ok as it merges the target code inside the class.
>   When I first used the C target I was disapointed not being able to
> find how to do the same thing. 


Please read the API documentation for the C target, where all the
@sections are explained in detail. You can add your own members to the
lexer or parser context pointer that is supplied to every rule.


>  
>   I would also add, about the concurrent parsing, that it would also
> benefit from 'real streams' in input, I mean streamed input
> instead of having the whole stuff 'ready'. This is not really
> mandatory but it would improve greatly when a concurrent parser
> component would have as input a translated output from another
> concurrent parser.


>  
>   Sorry if they are already existing solutions to solve my problems, I
> was just unable to find any clue in the documentation.

This should be in the API documentation under the "Using sections in
grammar files", however it seems that something in the annotation is
making it stop after the @postinclude section. I notice that there are
other pieces that I have documented that are not there too. I hope I
have not lost something here as it was quite a bit of effort! :-( 

Anyway, what you want is:

@parser::context
{
  struct _mystruct * mystruct;
}

There is also 
@lexer::context
{
    int myLexerThang;
}

There is also a (void * userp) available in the shared state for each
instance of the recognizer (which is free threading). In lexer tokens
there are 3 integer fields you can use and one void * field you can use;
in lexer grammars you can access them via the pre-defined MACROS: USER1
USER2 USER3 CUSTOM (see API docs for the other macros).


Jim

> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/6838d6fe/attachment.html 

From ron.hunter-duvar at oracle.com  Mon Aug 18 14:34:55 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 15:34:55 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <20080818230028.15266bsgsbak2bk0@horde.verrech.net>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>
	<48A9AB24.8070604@oracle.com>	<20080818205524.58064pywodt7rpmo@horde.verrech.net>	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
Message-ID: <48A9EAFF.3090703@oracle.com>

But a developer doesn't usually expect to have to build all his tools 
first (though it happens, esp. in Linux 8^). By your reasoning, the jar 
files are equally redundant, as they can easily be rebuilt from the Java 
source files.

Ron


Raphael Reitzig wrote:
> Well, only developers will use ANTLR. A developer should be able and 
> willing to use common developer tools.
>
> I'm not strictly against putting doc in the downloads, but I do not 
> follow your arguments.
>
> Besides, doc in downloads would be redundant. All information is in 
> the sources (and, as a bonus, can easily and quickly be transformed to 
> a readable format). I don't like redundancies.
>
> Regards
>
> Raphael
>
> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18 
> 21:48:41 2008):
>
>> Yeah, but why expect each user to figure out how to do this, and 
>> install ant and doxygen if they're not already. Why not include it in 
>> a doc directory in the source shipment if it's already built?
>>
>> As it happens, I don't have ant installed due to some broken 
>> dependencies on the Linux I'm using. Installing ant forces a whole 
>> bunch of stuff I don't need (Eclipse, gcj, ...) and an Antlr-2.7.6 
>> package that breaks my use of Antlr 3.1. Until I work around that, I 
>> can't generate the docs locally.
>>
>> Ron
>>
>>
>> Raphael Reitzig wrote:
>>> That's what ant is made for!
>>>
>>> Try typing "ant doc" or "ant javadoc" when in downloads root folder 
>>> (seeing build.xml). Usually, doc targets are named like that. Any 
>>> different here?
>>>
>>> Raphael
>>>
>>> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18 
>>> 19:02:28 2008):
>>>
>>>> That helps, thanks.
>>>>
>>>> But I'd still like to have the Javadoc shipped with the source 
>>>> distribution if possible. It's what I'm used to working with, and 
>>>> it integrates well with the IDE I use (which doesn't generate it on 
>>>> its own, AFAIK). It also doesn't require me to be online to be able 
>>>> to look something up.
>>>>
>>>> I thought it was trivial to generate too, but I've never used the 
>>>> javadoc program myself before. When I tried to generate it I got a 
>>>> lot of warnings and errors. If I get time I'll look into it some more.
>>>>
>>>> Thanks,
>>>> Ron
>>>>
>>>>
>>>> Johannes Luber wrote:
>>>>> Kay R?pke schrieb:
>>>>>
>>>>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>>>>
>>>>>>
>>>>>>> Javadoc? As far as I can see, there isn't any in the source
>>>>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>>>>> asking). Is it supposed to be there and somehow got missed? Or 
>>>>>>> are we
>>>>>>> supposed to roll our own?
>>>>>>>
>>>>>> Oh. I guess it isn't generated then. Didn't even notice that, 
>>>>>> because I
>>>>>> always use an IDE and it apparently computes that automatically 
>>>>>> from the
>>>>>> source attachment I configured.
>>>>>> I think it should be generated, it's trivial to do so, isn't it?
>>>>>>
>>>>>> Ter?
>>>>>>
>>>>>
>>>>> Look here: <http://antlr.org/api/Java/index.html>
>>>>>
>>>>> Johannes
>>>>>
>>>>>> cheers,
>>>>>> -k
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>> -- 
>>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>>> Oracle Service Engineering
>>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>>>
>>>> All opinions expressed here are mine, and do not necessarily represent
>>>> those of my employer.
>>>>
>>>>
>>>
>>>
>>>
>>> ----------------------------------------------------------------
>>> This message was sent using IMP, the Internet Messaging Program.
>>> ------------------------------------------------------------------------ 
>>>
>>>
>>> http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 
>>>
>>>
>>>
>>
>> -- 
>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>> Oracle Service Engineering
>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>
>> All opinions expressed here are mine, and do not necessarily represent
>> those of my employer.
>>
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/3ad75efa/attachment.html 

From zosrothko at orange.fr  Mon Aug 18 14:38:03 2008
From: zosrothko at orange.fr (zosrothko)
Date: Mon, 18 Aug 2008 23:38:03 +0200
Subject: [antlr-interest] ANTLR 3.1: Abbreviated keywords & imported lexer
Message-ID: <48A9EBBB.8050001@orange.fr>

Hi

I am trying to implement the implicit abbreviated keywords according to 
the Wiki FAQ on the Simple example along with the importing grammar 
feature, but whatever configuration I am testing, ANTLR answer is  
Simple.g:18:8: no lexer rule corresponding to token: VAR
Can someone explain me how should be declare the keyword VAR using the 
implicit strategy(i.e, without putting VAR : 'VAR' in the lexer)??

TIA
zos



Here the Simple parser extended
grammar Simple;
import CommonLexer;

tokens {
    VAR;
}
@header {
    package simple;
}
@lexer::header {
    package simple;
}
file : 'program' ID ';' {System.out.println("found program "+$ID.text);}
       decl+
     ;

decl : VAR ID ('=' expr)? ';'
       {System.out.println("found var "+$ID.text);}
     ;

expr : INT | FLOAT ;



Here the CommonLexer

lexer grammar CommonLexer;
@header {
    package simple;
}
@members {
    private static final Map<String, Integer> keywords;
    static {
        keywords = new TreeMap<String, Integer>();
        keywords.put("VAR", VAR);
    }
    private int CheckKeywordsTable(int type, string lexeme) {
        return type;
    }
}

ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
    { $type = CheckKeywordsTable(ID, getText()) };

INT : '0'..'9'+ ;

FLOAT:  INT '.' INT?
  | '.' INT
  ;

CHAR:   '\'' ( ESC | ~('\''|'\\') ) '\''
    ;

STRING
    :  '"' ( ESC | ~('\\'|'"') )* '"'
    ;

fragment
ESC :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    ;

COMMENT
    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
    ;

LINE_COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    ;

WS : (' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;} ;



From jimi at temporal-wave.com  Mon Aug 18 14:39:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 14:39:54 -0700
Subject: [antlr-interest] help related to interpreted grammar
	for	calculator
In-Reply-To: <41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
	<48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
	<41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>
Message-ID: <1219095594.13898.72.camel@jimi>

On Mon, 2008-08-18 at 17:05 -0400, mark twain wrote:
> 
> Sorry!! for the mistake..
> I have attached all 3 grammar files once again... Please look into the
> Interpreter grammar file and let me know my mistake....


You are not using references properly. You need to use $xxxx and then
the return element reference. PLease cosinder spending time reading
through the C examples and the Wiki stuff. If you can afford to then
buyig the book woudl be a good resource:

tree grammar bbcalcInterpreter;


options
{
     tokenVocab= bbcalc;
     ASTLabelType = pANTLR3_BASE_TREE;
     language = C;
}

@header {
#include <stdio.h>
}

assignment  { int v = 0; }
           : ^(EQUAL IDENTIFIER v=expr)
           { printf("My value:%d\n", $v.val); }
        ;


expr returns [int val =0]
        : z = operand   { $val = $z.val; }
          |  ^(PLUS x=expr y=expr) { $val = $x.val + $y.val; }
          |  ^(MINUS x=expr y=expr) { $val = $x.val - $y.val; }
          |  ^(MULT x=expr y=expr) { $val = $x.val * $y.val; }
          |  ^(DIV x=expr y=expr) { $val = $x.val / $y.val; }
        ;

operand returns [int val =0]
	: n = NUMBER { $val = atoi($n.text->chars); }
        ;

> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/0a466563/attachment.html 

From jimi at temporal-wave.com  Mon Aug 18 14:42:04 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 14:42:04 -0700
Subject: [antlr-interest] [C Target] @parser::apifuncs ...
In-Reply-To: <f71c56ff0808181428t79c247e3oba045d9de6866591@mail.gmail.com>
References: <f71c56ff0808181428t79c247e3oba045d9de6866591@mail.gmail.com>
Message-ID: <1219095724.13898.76.camel@jimi>

On Mon, 2008-08-18 at 17:28 -0400, Garry Iglesias wrote:
> Hi again :),
>  
> Sorry to bother you, but I also just realize that if you do :
>  
> @parser::members
> {
>  static void MY_displayError(pANTLR3_BASE_RECOGNIZER _pRec, pANTLR3_UINT8* _tokenNames) {
>   //do something...
>  }
> }
> @parser::apifuncs
> {
>  // Install custom error message display:
>  RECOGNIZER->displayRecognitionError = MY_displayError;
> }
>  
> the generated c parser doesn't compile because the 'members' code is
> inserted after the parser constructor... So the compiler doesn't know
> the function yet...

Please read the API docs on these sections. Like any other C function,
you need to protoype it before using it and not rely on code order. It
is also a much better idea to keep your functions outside the grammar,
as recommended in the documentation. 

I will try to reinstate the documentation for these sections tonight.

Jim
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/30166cbd/attachment.html 

From garry.iglesias at gmail.com  Mon Aug 18 14:43:43 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Mon, 18 Aug 2008 17:43:43 -0400
Subject: [antlr-interest] [C Target] User custom context handling,
	and parallel parsing.
Message-ID: <f71c56ff0808181443t342f17a2l3791d0278157dd3c@mail.gmail.com>

(Sorry I don't know if I will reply 'under' the started thread, I'm far from
being a 'mailing list' master...)

Thanks !! Yes I've read the doc but some important stuffs are hard to find
(and sometimes 'hidden' even we you read several times the obvious entry
points ;) )

Hope you didn't lose any work too.

Again thank you it seems it's all I was looking for ! I am very happy now !
haha !

Cheers

Garry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/e5bd159b/attachment.html 

From garry.iglesias at gmail.com  Mon Aug 18 14:50:11 2008
From: garry.iglesias at gmail.com (Garry Iglesias)
Date: Mon, 18 Aug 2008 17:50:11 -0400
Subject: [antlr-interest] [C Target] @parser::apifuncs
Message-ID: <f71c56ff0808181450u4a3bcdc3v7724059beb37fa65@mail.gmail.com>

Thanks.

No offense but I read the documentation, and I know a 'little bit' about
forward declarations ;)...

It's just as I said in my previous mail (and I note from other users
question that I'm not alone) that even if it's documented and seems obvious,
we had difficulties to find the information. It's not that we don't look on
our own first (I guess most of the time), but sometimes having to find
information when you're stressed by schedules, and 'flooded' in between
several libraries your brain tend not to be able to find 'not so obvious'
links to the information :)...

I undestand now that if you lost some documentation indexes it makes sense
that everybody is lost :). Hope you'll get that back without too many
difficulties.

Again, thank you for your fast answer, and be sure I'll look deeper in
documentation now. :)

Have a nice day !

Garry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/a8cb2a2a/attachment.html 

From jimi at temporal-wave.com  Mon Aug 18 15:01:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 15:01:33 -0700
Subject: [antlr-interest] help related to interpreted grammar
	for	calculator
In-Reply-To: <41fde820808181450r381acfb0pd1b38ab14a8f8551@mail.gmail.com>
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
	<48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
	<41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>
	<1219095594.13898.72.camel@jimi>
	<41fde820808181450r381acfb0pd1b38ab14a8f8551@mail.gmail.com>
Message-ID: <1219096893.13898.80.camel@jimi>

On Mon, 2008-08-18 at 17:50 -0400, mark twain wrote:
> Hi Jim,
>  
> I am still getting the same errors :-( even with your last suggested
> modifications....


Oh, your parameter specification is incorrect too:

assignment [int v = 0; ]

It is [] not {}

Jim

PS: Please use the group rather than emailing me direct.


> ***********************************************************************
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> error(100): bbcalcInterpreter.g:16:13: syntax error: antlr:
> bbcalcInterpreter.g:16:13: unexpected token:  int v = 0; 
> error(100): bbcalcInterpreter.g:17:22: syntax error: antlr:
> bbcalcInterpreter.g:17:22: unexpected token: IDENTIFIER
> error(100): bbcalcInterpreter.g:17:34: syntax error: antlr:
> bbcalcInterpreter.g:17:34: unexpected token: =
> error(100): bbcalcInterpreter.g:17:39: syntax error: antlr:
> bbcalcInterpreter.g:17:39: unexpected token: )
> warning(138): bbcalcInterpreter.g:0:0: grammar bbcalcInterpreter: no
> start rule (no rule can obviously be followed by EOF)
> ************************************************************************
> Please suggest me if I am still missing something!!!
>  
> Cheers:)
> On 8/18/08, Jim Idle <jimi at temporal-wave.com> wrote: 
> 
>         On Mon, 2008-08-18 at 17:05 -0400, mark twain wrote: 
>         
>         > 
>         > Sorry!! for the mistake.. 
>         > I have attached all 3 grammar files once again... Please
>         > look into the Interpreter grammar file and let me know my
>         > mistake....
>         
>         
>         You are not using references properly. You need to use $xxxx
>         and then the return element reference. PLease cosinder
>         spending time reading through the C examples and the Wiki
>         stuff. If you can afford to then buyig the book woudl be a
>         good resource:
>         
>         tree grammar bbcalcInterpreter;
>         
>         
>         options
>         {
>              tokenVocab= bbcalc;
>              ASTLabelType = pANTLR3_BASE_TREE;
>              language = C;
>         }
>         
>         @header {
>         #include <stdio.h>
>         }
>         
>         assignment  { int v = 0; }
>                    : ^(EQUAL IDENTIFIER v=expr)
>                    { printf("My value:%d\n", $v.val); }
>                 ;
>         
>         
>         expr returns [int val =0]
>                 : z = operand   { $val = $z.val; }
>                   |  ^(PLUS x=expr y=expr) { $val = $x.val + $y.val; }
>                   |  ^(MINUS x=expr y=expr) { $val = $x.val -
>         $y.val; }
>                   |  ^(MULT x=expr y=expr) { $val = $x.val * $y.val; }
>                   |  ^(DIV x=expr y=expr) { $val = $x.val / $y.val; }
>                 ;
>         
>         operand returns [int val =0]
>         : n = NUMBER { $val = atoi($n.text->chars); }
>                 ;
>         
>         
>         
>         
>         List:
>         http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         
>         
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/c7e1c599/attachment.html 

From r_reitzi at cs.uni-kl.de  Mon Aug 18 15:01:28 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Tue, 19 Aug 2008 00:01:28 +0200
Subject: [antlr-interest] Lazy load of CommonTokenStream??
In-Reply-To: <48A9EAFF.3090703@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
Message-ID: <20080819000128.20926iaealtion40@horde.verrech.net>

If you consider ant: Yes.
If not: Not really. Your application may depend on correct packaging  
to work properly (think of hardcoded resource paths, class paths,  
libraries...)

In fact, I often would prefer one download with source, resources and  
one build file with all targets needed to create different bundles.  
Often, you can choose between up to five different downloads, or even  
more.

(Is there a graphical interface for ant?)

Regards

Raphael

"Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18  
23:34:55 2008):

> But a developer doesn't usually expect to have to build all his  
> tools first (though it happens, esp. in Linux 8^). By your  
> reasoning, the jar files are equally redundant, as they can easily  
> be rebuilt from the Java source files.
>
> Ron
>
>
> Raphael Reitzig wrote:
>> Well, only developers will use ANTLR. A developer should be able  
>> and willing to use common developer tools.
>>
>> I'm not strictly against putting doc in the downloads, but I do not  
>> follow your arguments.
>>
>> Besides, doc in downloads would be redundant. All information is in  
>> the sources (and, as a bonus, can easily and quickly be transformed  
>> to a readable format). I don't like redundancies.
>>
>> Regards
>>
>> Raphael
>>
>> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug 18  
>> 21:48:41 2008):
>>
>>> Yeah, but why expect each user to figure out how to do this, and  
>>> install ant and doxygen if they're not already. Why not include it  
>>> in a doc directory in the source shipment if it's already built?
>>>
>>> As it happens, I don't have ant installed due to some broken  
>>> dependencies on the Linux I'm using. Installing ant forces a whole  
>>> bunch of stuff I don't need (Eclipse, gcj, ...) and an Antlr-2.7.6  
>>> package that breaks my use of Antlr 3.1. Until I work around that,  
>>> I can't generate the docs locally.
>>>
>>> Ron
>>>
>>>
>>> Raphael Reitzig wrote:
>>>> That's what ant is made for!
>>>>
>>>> Try typing "ant doc" or "ant javadoc" when in downloads root  
>>>> folder (seeing build.xml). Usually, doc targets are named like  
>>>> that. Any different here?
>>>>
>>>> Raphael
>>>>
>>>> "Ron Hunter-Duvar" <ron.hunter-duvar at oracle.com> wrote (Mon Aug  
>>>> 18 19:02:28 2008):
>>>>
>>>>> That helps, thanks.
>>>>>
>>>>> But I'd still like to have the Javadoc shipped with the source  
>>>>> distribution if possible. It's what I'm used to working with,  
>>>>> and it integrates well with the IDE I use (which doesn't  
>>>>> generate it on its own, AFAIK). It also doesn't require me to be  
>>>>> online to be able to look something up.
>>>>>
>>>>> I thought it was trivial to generate too, but I've never used  
>>>>> the javadoc program myself before. When I tried to generate it I  
>>>>> got a lot of warnings and errors. If I get time I'll look into  
>>>>> it some more.
>>>>>
>>>>> Thanks,
>>>>> Ron
>>>>>
>>>>>
>>>>> Johannes Luber wrote:
>>>>>> Kay R?pke schrieb:
>>>>>>
>>>>>>> On Aug 18, 2008, at 5:35 PM, Ron Hunter-Duvar wrote:
>>>>>>>
>>>>>>>
>>>>>>>> Javadoc? As far as I can see, there isn't any in the source
>>>>>>>> distribution (and frankly, I was wondering why, but didn't get to
>>>>>>>> asking). Is it supposed to be there and somehow got missed? Or are we
>>>>>>>> supposed to roll our own?
>>>>>>>>
>>>>>>> Oh. I guess it isn't generated then. Didn't even notice that, because I
>>>>>>> always use an IDE and it apparently computes that  
>>>>>>> automatically from the
>>>>>>> source attachment I configured.
>>>>>>> I think it should be generated, it's trivial to do so, isn't it?
>>>>>>>
>>>>>>> Ter?
>>>>>>>
>>>>>>
>>>>>> Look here: <http://antlr.org/api/Java/index.html>
>>>>>>
>>>>>> Johannes
>>>>>>
>>>>>>> cheers,
>>>>>>> -k
>>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> -- 
>>>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>>>> Oracle Service Engineering
>>>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>>>>
>>>>> All opinions expressed here are mine, and do not necessarily represent
>>>>> those of my employer.
>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>> ----------------------------------------------------------------
>>>> This message was sent using IMP, the Internet Messaging Program.
>>>> ------------------------------------------------------------------------  
>>>> http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:  
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>> -- 
>>> Ron Hunter-Duvar | Software Developer V | 403-272-6580
>>> Oracle Service Engineering
>>> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>>>
>>> All opinions expressed here are mine, and do not necessarily represent
>>> those of my employer.
>>>
>>>
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:  
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
> -- 
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/fb4b0626/attachment.bin 

From jimi at temporal-wave.com  Mon Aug 18 15:06:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 15:06:50 -0700
Subject: [antlr-interest] How to use antlr V3 with C++
In-Reply-To: <eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
References: <eab91eee0808180730y25c8e1c3n70e440cb8ee76d95@mail.gmail.com>
	<1219077275.13898.6.camel@jimi>
	<eab91eee0808180950u60f4ad02v3906affd1753d80f@mail.gmail.com>
Message-ID: <1219097210.13898.86.camel@jimi>

On Mon, 2008-08-18 at 09:50 -0700, miles mccoo wrote:
> Thank you, Jim, for the reply.
> 
> The existence of the c library told me that there's a way to
> generate .c output and not just Java and your mail confirms this. The
> thing is, I haven't managed to get anltworks to generate anything
> other than java code. 
> 
> I looked in the file->preferences popup and didn't see anything about
> targetting other languages. when I run generate->generate code, I get
> java code.
> 
> so perhaps the real question is: what option do I need to set to
> generate non-java (C, in my case, but I don't see any others either)
> code?

ANTLR Works will let you generate the C code but that is not useful as
it does not know how to compiler it. You need to incorporate the grammar
in your Makefile of VC project then generate it with -debug and debug
remote from ANTLRWorks.

You just need ot look at the C examples and use:

options
{
   language=C;
}

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/6cffddc8/attachment.html 

From himmy070 at gmail.com  Mon Aug 18 15:10:38 2008
From: himmy070 at gmail.com (mark twain)
Date: Mon, 18 Aug 2008 18:10:38 -0400
Subject: [antlr-interest] help related to interpreted grammar for
	calculator
In-Reply-To: <1219096893.13898.80.camel@jimi>
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
	<48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
	<41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>
	<1219095594.13898.72.camel@jimi>
	<41fde820808181450r381acfb0pd1b38ab14a8f8551@mail.gmail.com>
	<1219096893.13898.80.camel@jimi>
Message-ID: <41fde820808181510x394f1e0i8ffd22736fdab5de@mail.gmail.com>

Jim,
Sorry to bug you again but still I am getting the following error
messages......
*****************************************************************************************
ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
error(148): bbcalcInterpreter.g:16:13: rule parameters may not have init
values: v
error(122): bbcalcInterpreter.g:17:33: label v conflicts with rule
assignment's return value or parameter with same name
error(146): bbcalcInterpreter.g:18:12: invalid StringTemplate % shorthand
syntax: '%d'
***********************************************************************************************

Cheers:)

On 8/18/08, Jim Idle <jimi at temporal-wave.com> wrote:
>
> On Mon, 2008-08-18 at 17:50 -0400, mark twain wrote:
>
> Hi Jim,
>
>
>
> I am still getting the same errors :-( even with your last suggested
> modifications....
>
>
> Oh, your parameter specification is incorrect too:
>
> assignment [int v = 0; ]
>
> It is [] not {}
>
> Jim
>
> PS: Please use the group rather than emailing me direct.
>
>
> ***********************************************************************
>
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> error(100): bbcalcInterpreter.g:16:13: syntax error: antlr:
> bbcalcInterpreter.g:16:13: unexpected token:  int v = 0;
> error(100): bbcalcInterpreter.g:17:22: syntax error: antlr:
> bbcalcInterpreter.g:17:22: unexpected token: IDENTIFIER
> error(100): bbcalcInterpreter.g:17:34: syntax error: antlr:
> bbcalcInterpreter.g:17:34: unexpected token: =
> error(100): bbcalcInterpreter.g:17:39: syntax error: antlr:
> bbcalcInterpreter.g:17:39: unexpected token: )
> warning(138): bbcalcInterpreter.g:0:0: grammar bbcalcInterpreter: no start
> rule (no rule can obviously be followed by EOF)
> ************************************************************************
> Please suggest me if I am still missing something!!!
>
>
>
> Cheers:)
>
> On 8/18/08, *Jim Idle* <jimi at temporal-wave.com> wrote:
>
>  On Mon, 2008-08-18 at 17:05 -0400, mark twain wrote:
>
>
> Sorry!! for the mistake..
> I have attached all 3 grammar files once again... Please look into the
> Interpreter grammar file and let me know my mistake....
>
>
> You are not using references properly. You need to use $xxxx and then the
> return element reference. PLease cosinder spending time reading through the
> C examples and the Wiki stuff. If you can afford to then buyig the book
> woudl be a good resource:
>
> tree grammar bbcalcInterpreter;
>
>
> options
> {
>      tokenVocab= bbcalc;
>      ASTLabelType = pANTLR3_BASE_TREE;
>      language = C;
> }
>
> @header {
> #include <stdio.h>
> }
>
> assignment  { int v = 0; }
>            : ^(EQUAL IDENTIFIER v=expr)
>            { printf("My value:%d\n", $v.val); }
>         ;
>
>
> expr returns [int val =0]
>         : z = operand   { $val = $z.val; }
>           |  ^(PLUS x=expr y=expr) { $val = $x.val + $y.val; }
>           |  ^(MINUS x=expr y=expr) { $val = $x.val - $y.val; }
>           |  ^(MULT x=expr y=expr) { $val = $x.val * $y.val; }
>           |  ^(DIV x=expr y=expr) { $val = $x.val / $y.val; }
>         ;
>
> operand returns [int val =0]
> : n = NUMBER { $val = atoi($n.text->chars); }
>         ;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/2254ea26/attachment.html 

From antlr at jazillian.com  Mon Aug 18 15:26:22 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 18 Aug 2008 18:26:22 -0400
Subject: [antlr-interest] Lazy load of CommonTokenStream?? - javadoc
	command
In-Reply-To: <48A9D219.4030300@oracle.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>	<48A9AB24.8070604@oracle.com>	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
Message-ID: <48A9F70E.7010409@jazillian.com>

To generate the ANTLR runtime javadoc, go to...

    $INSTALL_DIR/runtime/Java/src

...and type...

    javadoc org.antlr.runtime org.antlr.runtime.debug org.antlr.runtime.misc org.antlr.runtime.tree

From jimi at temporal-wave.com  Mon Aug 18 15:25:42 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 15:25:42 -0700
Subject: [antlr-interest] help related to interpreted grammar
	for	calculator
In-Reply-To: <41fde820808181510x394f1e0i8ffd22736fdab5de@mail.gmail.com>
References: <41fde820808180845s3b85cd10g71e77687c107c97f@mail.gmail.com>
	<48a9da0c.1e2b360a.06ec.7fb3SMTPIN_ADDED@mx.google.com>
	<41fde820808181405t2c7c4398wfc7cf6d8e95ec2b0@mail.gmail.com>
	<1219095594.13898.72.camel@jimi>
	<41fde820808181450r381acfb0pd1b38ab14a8f8551@mail.gmail.com>
	<1219096893.13898.80.camel@jimi>
	<41fde820808181510x394f1e0i8ffd22736fdab5de@mail.gmail.com>
Message-ID: <1219098342.13898.92.camel@jimi>

On Mon, 2008-08-18 at 18:10 -0400, mark twain wrote:
> Jim,
> Sorry to bug you again but still I am getting the following error
> messages......
> *****************************************************************************************
> ANTLR Parser Generator  Version 3.1b2 (July 17, 2008)  1989-2008
> error(148): bbcalcInterpreter.g:16:13: rule parameters may not have
> init values: v
> error(122): bbcalcInterpreter.g:17:33: label v conflicts with rule
> assignment's return value or parameter with same name
> error(146): bbcalcInterpreter.g:18:12: invalid StringTemplate %
> shorthand syntax: '%d'
> ***********************************************************************************************


OK - well rty and interpret what the erros are telling you:

I did not spot that you were trying to pre-initialize the input
parameter with a defautl value. This isn't valid in ANTLR. However I
suspect now that you didn't mean to have that there at all and meant
this to be a local variable with a default value (which you do not in
fact use). SO, you jsut want:

assignment
  :  <etc>

The ANTLR error was telling you that you had a local parameter called v
and also a label for a rule that you had called v hence it was
ambiguous/conflicting.

The StringTemplate reference is because you must escape the % in any
ANTLR grammar or the v2 parser thinks that it is somethig nto do with
string templates, so you need:

printf("My value:\%d\n", $v.val);


Jim

>         >                    : ^(EQUAL IDENTIFIER v=expr)
>         >                    { printf("My value:%d\n", $v.val); }
>         >                 ;
>         >         
>         >         
>         >         expr returns [int val =0]
>         >                 : z = operand   { $val = $z.val; }
>         >                   |  ^(PLUS x=expr y=expr) { $val = $x.val +
>         >         $y.val; }
>         >                   |  ^(MINUS x=expr y=expr) { $val = $x.val
>         >         - $y.val; }
>         >                   |  ^(MULT x=expr y=expr) { $val = $x.val *
>         >         $y.val; }
>         >                   |  ^(DIV x=expr y=expr) { $val = $x.val /
>         >         $y.val; }
>         >                 ;
>         >         
>         >         operand returns [int val =0]
>         >         : n = NUMBER { $val = atoi($n.text->chars); }
>         >                 ;
>         >         
>         >         
>         >         
>         >         List:
>         >         http://www.antlr.org/mailman/listinfo/antlr-interest
>         >         Unsubscribe:
>         >         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         >         
>         >         
>         > 
>         > 
>         
>         
>         
>         List:
>         http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>         
>         
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/1c2c51d4/attachment.html 

From ron.hunter-duvar at oracle.com  Mon Aug 18 15:59:13 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Mon, 18 Aug 2008 16:59:13 -0600
Subject: [antlr-interest] Lazy load of CommonTokenStream?? -
	javadoc	command
In-Reply-To: <48A9F70E.7010409@jazillian.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>	<48A996D3.3000603@oracle.com>	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>	<48A99D2A.6000900@gmx.de>	<48A9AB24.8070604@oracle.com>	<20080818205524.58064pywodt7rpmo@horde.verrech.net>	<48A9D219.4030300@oracle.com>
	<48A9F70E.7010409@jazillian.com>
Message-ID: <48A9FEC1.1050405@oracle.com>


Andy Tripp wrote:
> To generate the ANTLR runtime javadoc, go to...
>
>     $INSTALL_DIR/runtime/Java/src
>
> ...and type...
>
>     javadoc org.antlr.runtime org.antlr.runtime.debug org.antlr.runtime.misc org.antlr.runtime.tree
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
I did something similar:

cd $INSTALL_DIR
mkdir doc
javadoc -d doc -sourcepath runtime/Java/src -subpackages org.antlr.runtime

This gave me 17 warnings (most if not all about StringTemplate classes 
not being found), but otherwise seems to have worked as I expected. I 
had previously tried to include the development classes as well with:

javadoc -d doc -sourcepath src:runtime/Java/src -subpackages org

But that gave 108 warnings and then threw an exception, leaving the docs 
only partly done. I couldn't figure out why it should do that. But I 
probably don't need docs for the development classes anyway. If I ever 
do, I'll see if I can get them generated correctly.

I've probably hijacked this thread long enough 8^).

Thanks,
Ron

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From parrt at cs.usfca.edu  Mon Aug 18 16:08:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 16:08:55 -0700
Subject: [antlr-interest] ANTLR 3.1: Abbreviated keywords & imported
	lexer
In-Reply-To: <48A9EBBB.8050001@orange.fr>
References: <48A9EBBB.8050001@orange.fr>
Message-ID: <26C59E0C-759F-41D3-9947-941E124E610A@cs.usfca.edu>

i'd just leave them as separate parser / lexer. no need to use import  
to combine them here.
ter
On Aug 18, 2008, at 2:38 PM, zosrothko wrote:

> Hi
>
> I am trying to implement the implicit abbreviated keywords according  
> to
> the Wiki FAQ on the Simple example along with the importing grammar
> feature, but whatever configuration I am testing, ANTLR answer is
> Simple.g:18:8: no lexer rule corresponding to token: VAR
> Can someone explain me how should be declare the keyword VAR using the
> implicit strategy(i.e, without putting VAR : 'VAR' in the lexer)??
>
> TIA
> zos
>
>
>
> Here the Simple parser extended
> grammar Simple;
> import CommonLexer;
>
> tokens {
>    VAR;
> }
> @header {
>    package simple;
> }
> @lexer::header {
>    package simple;
> }
> file : 'program' ID ';' {System.out.println("found program "+ 
> $ID.text);}
>       decl+
>     ;
>
> decl : VAR ID ('=' expr)? ';'
>       {System.out.println("found var "+$ID.text);}
>     ;
>
> expr : INT | FLOAT ;
>
>
>
> Here the CommonLexer
>
> lexer grammar CommonLexer;
> @header {
>    package simple;
> }
> @members {
>    private static final Map<String, Integer> keywords;
>    static {
>        keywords = new TreeMap<String, Integer>();
>        keywords.put("VAR", VAR);
>    }
>    private int CheckKeywordsTable(int type, string lexeme) {
>        return type;
>    }
> }
>
> ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>    { $type = CheckKeywordsTable(ID, getText()) };
>
> INT : '0'..'9'+ ;
>
> FLOAT:  INT '.' INT?
>  | '.' INT
>  ;
>
> CHAR:   '\'' ( ESC | ~('\''|'\\') ) '\''
>    ;
>
> STRING
>    :  '"' ( ESC | ~('\\'|'"') )* '"'
>    ;
>
> fragment
> ESC :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>    ;
>
> COMMENT
>    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>    ;
>
> LINE_COMMENT
>    : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>    ;
>
> WS : (' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;} ;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From kroepke at classdump.org  Mon Aug 18 16:14:23 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Tue, 19 Aug 2008 01:14:23 +0200
Subject: [antlr-interest] Attention,
	humor: Ant & Docs (was: Re:  Lazy load of CommonTokenStream??)
In-Reply-To: <20080819000128.20926iaealtion40@horde.verrech.net>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
	<20080819000128.20926iaealtion40@horde.verrech.net>
Message-ID: <43646054-019C-4860-9B40-1E553419F5E1@classdump.org>


On Aug 19, 2008, at 12:01 AM, Raphael Reitzig wrote:

> (Is there a graphical interface for ant?)


Wasn't ant Turing complete? Then you could probably _write_ a  
graphical interface in it...

cheers,
-k, who's been up too long.
-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Mon Aug 18 16:22:44 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Tue, 19 Aug 2008 01:22:44 +0200
Subject: [antlr-interest] ANTLR 3.1: Abbreviated keywords & imported
	lexer
In-Reply-To: <48A9EBBB.8050001@orange.fr>
References: <48A9EBBB.8050001@orange.fr>
Message-ID: <CB63BCB6-F16B-40E8-8D96-3E1C8DF97A29@classdump.org>


On Aug 18, 2008, at 11:38 PM, zosrothko wrote:

> I am trying to implement the implicit abbreviated keywords according  
> to
> the Wiki FAQ on the Simple example along with the importing grammar
> feature, but whatever configuration I am testing, ANTLR answer is
> Simple.g:18:8: no lexer rule corresponding to token: VAR
> Can someone explain me how should be declare the keyword VAR using the
> implicit strategy(i.e, without putting VAR : 'VAR' in the lexer)??


Put the tokens {} section into the lexer and add the option  
tokenVocab=<YourLexerNameHere>; to the options of the parser.
It will then see the token type for VAR (and you don't want to put  
VAR:'VAR'; into the lexer because that will give you warnings or weird  
results anyway).

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From parrt at cs.usfca.edu  Mon Aug 18 16:38:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Aug 2008 16:38:06 -0700
Subject: [antlr-interest] Attention,
	humor: Ant & Docs (was: Re:  Lazy load of CommonTokenStream??)
In-Reply-To: <43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
	<20080819000128.20926iaealtion40@horde.verrech.net>
	<43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
Message-ID: <C11896B3-7726-4D3A-9CD7-F38213DE1D42@cs.usfca.edu>

Try http://placidsystems.com/virtualant/

Ter

On Aug 18, 2008, at 4:14 PM, Kay R?pke wrote:

>
> On Aug 19, 2008, at 12:01 AM, Raphael Reitzig wrote:
>
>> (Is there a graphical interface for ant?)
>
>
> Wasn't ant Turing complete? Then you could probably _write_ a
> graphical interface in it...
>
> cheers,
> -k, who's been up too long.
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Mon Aug 18 17:12:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Aug 2008 17:12:10 -0700
Subject: [antlr-interest] Attention,
	humor: Ant & Docs (was: Re:  Lazy	load of CommonTokenStream??)
In-Reply-To: <C11896B3-7726-4D3A-9CD7-F38213DE1D42@cs.usfca.edu>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
	<20080819000128.20926iaealtion40@horde.verrech.net>
	<43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
	<C11896B3-7726-4D3A-9CD7-F38213DE1D42@cs.usfca.edu>
Message-ID: <1219104730.13898.107.camel@jimi>

On Mon, 2008-08-18 at 16:38 -0700, Terence Parr wrote:

> Try http://placidsystems.com/virtualant/
> 

Isn't that an interface for PrashANT? ho ho ho... alright, perhaps a 10
hour day is enough work today ;-) 

Seems like a good idea to me, but I think that the pricing is going to
put people off :-(

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080818/9ccc787f/attachment.html 

From kurtotte at gmail.com  Mon Aug 18 18:51:54 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Mon, 18 Aug 2008 19:51:54 -0600
Subject: [antlr-interest] Question regarding C based exception handling in
	predicates
Message-ID: <27766db30808181851j24488708if8fb34f5d71ca8b@mail.gmail.com>

What is the suggested way for doing error handling when using the C
target during token validation with semantic predicates and in action
blocks?  I currently have an AST which I am processing with a tree
grammar.  This is working great except for triggering exceptions which
can be converted to useful error messages.

Is there a trick to get validating semantic predicates in the tree
parsers to return the token which failed validation?

Here is a toy example:

   foo:
      ^(NAME detail {isValid($detail)}? )

This does what I would expect and calls isValid() on the token
'detail'.  isValid returns True or False after processing the token.
If it returns false, I would like it to trigger an exception which it
does; however, when it gets to displayRecognitionError() the token
which the exception handler has it not 'detail'.  It is some imaginary
token (perhaps NAME).  Is this a bug or what is a better way to
validate the contents of detail and produce a custom error message?

Along those lines, is there any way to throw an exception inside a
isValid()?  I only have a tree pointer passed in as an argument and I
don't see a way to get back to the parser object so it doesn't seem
like there is a way to throw an exception.  Is there a recommendation
for how to handle errors in these blocks?

What is the recommendation for handling errors in action blocks since
there isn't a return value which is linked to an exception?  Is there
a trick to throwing an exception in these blocks?

Thanks,

Kurt

From r_reitzi at cs.uni-kl.de  Tue Aug 19 02:40:00 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Tue, 19 Aug 2008 11:40:00 +0200
Subject: [antlr-interest] Attention,
	humor: Ant & Docs (was: Re:  Lazy	load of CommonTokenStream??)
In-Reply-To: <C11896B3-7726-4D3A-9CD7-F38213DE1D42@cs.usfca.edu>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
	<20080819000128.20926iaealtion40@horde.verrech.net>
	<43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
	<C11896B3-7726-4D3A-9CD7-F38213DE1D42@cs.usfca.edu>
Message-ID: <20080819114000.18175nf3cg04u144@horde.verrech.net>

Found that already. I thought more of a  simple frame listing targets  
to "end user" and make them executable through click.
One who wants to ship a build file may dig into ant syntax, no pity.

Raphel

"Terence Parr" <parrt at cs.usfca.edu> wrote (Tue Aug 19 01:38:06 2008):

> Try http://placidsystems.com/virtualant/
>
> Ter
>
> On Aug 18, 2008, at 4:14 PM, Kay R?pke wrote:
>
>>
>> On Aug 19, 2008, at 12:01 AM, Raphael Reitzig wrote:
>>
>>> (Is there a graphical interface for ant?)
>>
>>
>> Wasn't ant Turing complete? Then you could probably _write_ a
>> graphical interface in it...
>>
>> cheers,
>> -k, who's been up too long.
>> --
>> Kay R?pke
>> http://classdump.org/
>>
>>
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:  
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:  
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/be3c4e0f/attachment.bin 

From r_reitzi at cs.uni-kl.de  Tue Aug 19 02:41:19 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Tue, 19 Aug 2008 11:41:19 +0200
Subject: [antlr-interest] Attention,
	humor: Ant & Docs (was: Re:  Lazy	load of CommonTokenStream??)
In-Reply-To: <43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D832F@ex01.dbsophicHQ.com>
	<286F5852-FB36-428A-81EC-21AE33738AAE@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8348@ex01.dbsophicHQ.com>
	<2E6721D5-6D6A-4A68-935F-101DB83F93AA@classdump.org>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D8366@ex01.dbsophicHQ.com>
	<F35A1FC6-D1B1-4195-83DB-7F0C225F69FC@classdump.org>
	<48A996D3.3000603@oracle.com>
	<7B948AC6-C367-4D19-BA26-7D298A164BC6@classdump.org>
	<48A99D2A.6000900@gmx.de> <48A9AB24.8070604@oracle.com>
	<20080818205524.58064pywodt7rpmo@horde.verrech.net>
	<48A9D219.4030300@oracle.com>
	<20080818230028.15266bsgsbak2bk0@horde.verrech.net>
	<48A9EAFF.3090703@oracle.com>
	<20080819000128.20926iaealtion40@horde.verrech.net>
	<43646054-019C-4860-9B40-1E553419F5E1@classdump.org>
Message-ID: <20080819114119.19591iyjn1layw5c@horde.verrech.net>

"Kay R?pke" <kroepke at classdump.org> wrote (Tue Aug 19 01:14:23 2008):

> Wasn't ant Turing complete?
Proof needed!

> Then you could probably _write_ a graphical interface in it...
You've got perverse phantasies *gasp*

Raphael


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/e23a05df/attachment.bin 

From Fred.Brisard at ca.com  Tue Aug 19 05:57:03 2008
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Tue, 19 Aug 2008 08:57:03 -0400
Subject: [antlr-interest] Dealing with tokens and keyword abbreviations
Message-ID: <7D50572C73BC634F92EE211BFF16F4A10664C0B1@USILMS12.ca.com>

I am trying to implement detection of abbreviated keywords using the
technique described in the wiki page
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1802308

It appears to be a perfect solution for me except that when I output the
token to the AST I get the token value (the actual characters associated
with the token);  I would prefer to get the token id (type) value.

So if I use the technique described in the wiki I get the following...

tokens
{
KeyUpload
KeyDownload
}

I use a method to map the keywords upload and download to KeyUpload and
KeyDownload respectively.  The method also handles abbreviations and
ignores case so that u, U, up, Up, UP all map to KeyUpload.

When I output the KeyUpload token to the AST using something like
^(KeyUpload), I get the original source value for the keyword.  I would
prefer to have the type KeyUpload set in the AST since I've already
identified that any of the valid abbreviations map to that token.

I was using a predicate rule technique to accomplish the same
previously, but this technique is cleaner.  Using predicate rules the
token type was stored in the AST instead of the token value.

Thanks for any help.

Fred


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/fb9fa652/attachment.html 

From troy.daniels at baesystems.com  Tue Aug 19 07:07:38 2008
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Tue, 19 Aug 2008 10:07:38 -0400
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked] Re:
	ANTLR 3.1 - Serious performance downgrade
Message-ID: <737og9$tfp2@dmzms99902.na.baesystems.com>

 

> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de] 
> Sent: Monday, August 18, 2008 12:35 PM
> To: Daniels, Troy (US SSA)
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] FW: [Profanity Detected - 
> Message Blocked] Re: ANTLR 3.1 - Serious performance downgrade
> 
> Daniels, Troy (US SSA) schrieb:
> > Can you guys please stop swearing at each other?  I've been getting 
> > these messages for days.  If you're not having an ad hominem flame 
> > war, can someone look for what's probably tripping the filter and 
> > remove it from the quoted text?  The message below is all 
> the information I have.
> > 
> > Troy
> 
> Well, the email causing to activate the filter contains "s h 
> i t" in the meaning of the French "M e r d e!". As the 
> mailing list in generally very polite this wasn't used in a 
> flame war, but Ter demonstrated his frustrations 
> non-verbally. Harmless compared to what is aired on TV.
> 
> I advise to deactivate such filters anyway because the cause 
> more trouble as they are worth.

Excellent suggestion.  I'd do it if I could, but I doubt that my
company's IT department will listen to me.  :-(

Troy

> Either they catch the wrong 
> emails, mangle harmless text ("*butt*ignment", anyone?) or in 
> the case, they actually work, wouldn't you want to know that 
> you have been insulted indeed?
> 
> Johannes
> > 
> >> -----Original Message-----
> >> From: SMTP.Gateway
> >> Sent: Sunday, August 17, 2008 4:25 PM
> >> To: troy.daniels at alphatech.com
> >> Subject: [Profanity Detected - Message Blocked] Re: 
> >> [antlr-interest] ANTLR 3.1 - Serious performance downgrade
> >>
> >> BAESystems Notification
> >>
> >> An email sent to "Benjamin Niemann" <pink at odahoda.de> 
> contained one 
> >> or more profanity words.  The message from Terence Parr 
> >> <parrt at cs.usfca.edu> was blocked.
> >>
> >>
> >>
> >>
> > 
> 
> 

From jaluber at gmx.de  Tue Aug 19 07:29:42 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 19 Aug 2008 16:29:42 +0200
Subject: [antlr-interest] FW: [Profanity Detected - Message Blocked] Re:
 ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <737og9$tfp2@dmzms99902.na.baesystems.com>
References: <737og9$tfp2@dmzms99902.na.baesystems.com>
Message-ID: <48AAD8D6.2040502@gmx.de>

Daniels, Troy (US SSA) schrieb:
>  
> 
>> -----Original Message-----
>> From: Johannes Luber [mailto:jaluber at gmx.de] 
>> Sent: Monday, August 18, 2008 12:35 PM
>> To: Daniels, Troy (US SSA)
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] FW: [Profanity Detected - 
>> Message Blocked] Re: ANTLR 3.1 - Serious performance downgrade
>>
>> Daniels, Troy (US SSA) schrieb:
>>> Can you guys please stop swearing at each other?  I've been getting 
>>> these messages for days.  If you're not having an ad hominem flame 
>>> war, can someone look for what's probably tripping the filter and 
>>> remove it from the quoted text?  The message below is all 
>> the information I have.
>>> Troy
>> Well, the email causing to activate the filter contains "s h 
>> i t" in the meaning of the French "M e r d e!". As the 
>> mailing list in generally very polite this wasn't used in a 
>> flame war, but Ter demonstrated his frustrations 
>> non-verbally. Harmless compared to what is aired on TV.
>>
>> I advise to deactivate such filters anyway because the cause 
>> more trouble as they are worth.
> 
> Excellent suggestion.  I'd do it if I could, but I doubt that my
> company's IT department will listen to me.  :-(
> 
> Troy

Show them my email - I did manage to circumvent the filter already. Once
people know of its existence it is merely a nuisance and no help anyway.

Johannes
> 
>> Either they catch the wrong 
>> emails, mangle harmless text ("*butt*ignment", anyone?) or in 
>> the case, they actually work, wouldn't you want to know that 
>> you have been insulted indeed?
>>
>> Johannes
>>>> -----Original Message-----
>>>> From: SMTP.Gateway
>>>> Sent: Sunday, August 17, 2008 4:25 PM
>>>> To: troy.daniels at alphatech.com
>>>> Subject: [Profanity Detected - Message Blocked] Re: 
>>>> [antlr-interest] ANTLR 3.1 - Serious performance downgrade
>>>>
>>>> BAESystems Notification
>>>>
>>>> An email sent to "Benjamin Niemann" <pink at odahoda.de> 
>> contained one 
>>>> or more profanity words.  The message from Terence Parr 
>>>> <parrt at cs.usfca.edu> was blocked.
>>>>
>>>>
>>>>
>>>>
>>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From zosrothko at orange.fr  Tue Aug 19 13:21:32 2008
From: zosrothko at orange.fr (zosrothko)
Date: Tue, 19 Aug 2008 22:21:32 +0200 (CEST)
Subject: [antlr-interest] ANTLR 3.1:Generated code for syntactic predicate
 in lexer rule does not follow the order of the alternatives
Message-ID: <20488147.439141219177292886.JavaMail.www@wwinf1612>

Hi

The following snippet


fragment
NL : ('\n'| '\r' '\n' );
fragment
ESC : '\'' '\'';
STRING : '\'' ( ESC | ~'\'' )* '\'' { };
fragment
WS : ( ' ' | '\t' | ';' | NL);
SPACE : (WS)+ {$channel=HIDDEN;};
fragment
PLUS_CHAR : '+';
fragment
MINUS_CHAR : '-';
fragment
STAR_CHAR : '*';
fragment
SLASH_CHAR : '/';
fragment
DOT_CHAR : '.';
fragment
COMMA_CHAR : ',';
fragment
PLUS : '+' WS;
fragment
MINUS : '-' WS;
fragment
STAR : '*' WS;
fragment
SLASH : '/' WS;
fragment
DOT : '.' (WS|EOF);
fragment
COMMA : ',' WS;
 
PLUS_OR_CHAR : ('+' WS)=> PLUS { $type=PLUS; }
| PLUS_CHAR { $type=PLUS_CHAR; }
;
MINUS_OR_CHAR : ('-' WS)=> MINUS { $type=MINUS; }
| MINUS_CHAR { $type=MINUS_CHAR; }
;
STAR_OR_CHAR : ('*' WS)=> STAR { $type=STAR; }
| STAR_CHAR { $type=STAR_CHAR; }
;
SLASH_OR_CHAR : ('/' WS)=> SLASH { $type=SLASH; }
| SLASH_CHAR { $type=SLASH_CHAR; }
;
DOT_OR_CHAR : ('.' (WS|EOF))=> DOT { $type=DOT; }
| DOT_CHAR { $type=DOT_CHAR; }
;
COMMA_OR_CHAR : (',' WS)=> COMMA { $type=COMMA; }
| COMMA_CHAR { $type=COMMA_CHAR; }
;
fragment
DIGIT : '0'..'9';
fragment
SIGN : ( PLUS_CHAR | MINUS_CHAR );
fragment
SEPARATOR : ( DOT_CHAR | COMMA_CHAR );
fragment
INTEGER : (SIGN)? (DIGIT)+;
fragment
DECIMAL : (SIGN)? (DIGIT)* SEPARATOR (DIGIT)+ ;
 
INTEGER_OR_DECIMAL :
( (INTEGER WS) => INTEGER { $type=INTEGER; }
| (INTEGER DOT) => INTEGER { $type=INTEGER; }
| DECIMAL { $type=DECIMAL; }
)
;

produces this Java code

  int alt17=3;
  switch ( input.LA(1) ) {

  .....
  case '0':
  case '1':
  case '2':
  case '3':
  case '4':
  case '5':
  case '6':
  case '7':
  case '8':
  case '9':
  {
    int LA17_2 = input.LA(2);
 
    if ( (LA17_2==','||LA17_2=='.'||(LA17_2>='0' && LA17_2<='9')) ) {
      alt17=3;
    }
    else if ( (synpred7_Cobol()) ) {
      alt17=1;
    }
    else if ( (synpred8_Cobol()) ) {
      alt17=2;
    }
    else {
     if (state.backtracking>0) {state.failed=true; return ;}
       NoViableAltException nvae =
        new NoViableAltException("", 17, 2, input);
 
        throw nvae;
    }
  }

which does not correspond to the order of the alternatives in the the rule INTEGER_OR_DECIMAL and resolves the input  '1.;'  to a DECIMAL while it should resolve as an INTEGER since a DIGIT is followed by a DOT and not a DOT_CHAR



My expectation would be that the order of generated code follow the alternatives in the rule INTEGER_OR_DECIMAL as:
 {
    int LA17_2 = input.LA(2);
 
    if ( (synpred7_Cobol()) ) {
      alt17=1;
    }
    else if ( (synpred8_Cobol()) ) {
      alt17=2;
    } else 
    if ( (LA17_2==','||LA17_2=='.'||(LA17_2>='0' && LA17_2<='9')) ) {
      alt17=3;
    }
    else {
     if (state.backtracking>0) {state.failed=true; return ;}
       NoViableAltException nvae =
        new NoViableAltException("", 17, 2, input);
 
        throw nvae;
    }
which parses the input '1.;' as an INTEGER.

Is this a bug??

zos
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/1b9674f6/attachment.html 

From parrt at antlr.org  Tue Aug 19 16:48:22 2008
From: parrt at antlr.org (Terence Parr)
Date: Tue, 19 Aug 2008 16:48:22 -0700
Subject: [antlr-interest] testing
Message-ID: <196CDA1B-7E78-46C4-A2B7-B954182F6032@antlr.org>

All of a sudden, no e-mail to the list...testing.
Ter

From rschulz at sonic.net  Tue Aug 19 17:29:30 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 19 Aug 2008 17:29:30 -0700
Subject: [antlr-interest] testing
In-Reply-To: <196CDA1B-7E78-46C4-A2B7-B954182F6032@antlr.org>
References: <196CDA1B-7E78-46C4-A2B7-B954182F6032@antlr.org>
Message-ID: <200808191729.30693.rschulz@sonic.net>

On Tuesday 19 August 2008 16:48, Terence Parr wrote:
> All of a sudden, no e-mail to the list...testing.

We _had_ reached a perfect equilibrium of knowledge and curiosity. I 
fear you've disturbed that most delicate balance...


> Ter


RRS

From brent.yates at gmail.com  Tue Aug 19 17:32:34 2008
From: brent.yates at gmail.com (Brent Yates)
Date: Tue, 19 Aug 2008 20:32:34 -0400
Subject: [antlr-interest] testing
In-Reply-To: <200808191729.30693.rschulz@sonic.net>
References: <196CDA1B-7E78-46C4-A2B7-B954182F6032@antlr.org>
	<200808191729.30693.rschulz@sonic.net>
Message-ID: <6edc6c380808191732o24088411p3d877ab0e8ea8941@mail.gmail.com>

Yep, now I'm curious again....

byates
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080819/c7ad37ed/attachment.html 

From parrt at cs.usfca.edu  Tue Aug 19 17:56:30 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Aug 2008 17:56:30 -0700
Subject: [antlr-interest] testing
In-Reply-To: <200808191729.30693.rschulz@sonic.net>
References: <196CDA1B-7E78-46C4-A2B7-B954182F6032@antlr.org>
	<200808191729.30693.rschulz@sonic.net>
Message-ID: <C9B6126C-2D7B-46E4-96AF-C84EC7BF3A08@cs.usfca.edu>

Ha!  chuckle...well, finally some email to the list...
Ter


From parrt at cs.usfca.edu  Tue Aug 19 18:11:34 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Aug 2008 18:11:34 -0700
Subject: [antlr-interest] new book organization question
Message-ID: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>

Dear ANTLR and language folks,

I'm 200 pages into the new "DSL design patterns" book with pragmatic  
programmers but have not settled on a proper organization and flow for  
the book. I'm again working with Susannah Davidson Pfalzer, the great  
editor from my previous book. We thought it would be a good idea to  
discuss the book organization with you folks as many of you are  
squarely in the target audience for the book.

Identifying the target audience is crucial and I think it should be  
essentially practicing engineers that need to implement a programming  
language or data file format etc. The idea will be to teach  
programmers how to implement languages rather than provide a series of  
ready-made solutions. That said, I would like to use partial solutions  
to some real-world problems to identify patterns and describe/justify  
important principles. Rather than simply providing an index of  
language implementation patterns like the famous design patterns book  
by the "gang of four", I'd like to solve a bunch of problems and  
identify key ideas as I go. There would be an index and short  
description of the design patterns at the end, with references back  
into the examples and discussion. This will not necessarily be a good  
textbook (though we could add some sample problems for fun). It will  
not cover all possible parsing algorithms for example, something that  
most professors bore students with. ;)

As for the organization of the book, I'd like to break the book up  
into different parts/units according to language application  
categories (reader, generator, interpreter, translator, etc...).  Each  
part will use techniques and patterns identified in the previous  
parts.  Each part would start out with an overview of the application  
category and then dig in solving problems rather than using a dry list  
of pattern definitions. Lets solve some of the problems in order to  
identify key patterns and principles. This means a traditional book  
with parts, chapters, and sections. The parts would be in this order

I. Introduction
  basic architectures, describe application categories,
  introduce language implementation ideas.

II. Generators (before readers because it's easier to understand)

III. Readers (parsing, introduces all of the intermediate data  
structures too)

IV. Semantic analysis, type checking, symbol tables

V. Interpreters

VI. Translators

Once we argue about this for awhile, I will give you the list of  
examples I want to include. :) Any and all thoughts welcome even if  
it's something like "take a writing class" ;)

Ter

From cozly at qq.com  Tue Aug 19 19:07:53 2008
From: cozly at qq.com (=?ISO-8859-1?B?Y296bHk=?=)
Date: Wed, 20 Aug 2008 10:07:53 +0800
Subject: [antlr-interest] I'm a newbie and short of examples
Message-ID: <tencent_16FA8E70368AEE787E724A0F@qq.com>

HI,
As we are short of examples,and bad that I'm a newbie on antlr that I'm in trouble when I just wanna have a simple (but not simple for me) demo which with this functions.

I wanna generate a Lexer and a Parser to deal with an input String (like this :  william at yahoo ).
and I wrote a java class which named "dom" cause I wanna store the return result into an instance of dom.
so here is piece of code.(file: Dom.g)

grammar Google;

getDom returns[Dom o]:
    IDENT at IDENT;
AT    :    '@';
ENDLINE    :    ('\r'|'\n'|'\r\n');
IDENT    :    ('a'..'z'|'A'..'Z')+;

and Dom.java is like this:

class Dom{
private String str1;
private String str2;
private String action;
//you can add methods to control the properties / inject the ast into this class
}

you see ? i wanna get a Dom instance which already contain the string DIRECTLY FROM THE METHOD getDom(), but sure that I still need to add something,...but bad that I don't know what to do now ?

is it clear?
would you help me please ?thanks in advance

Thanks
Bill Von Vian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/60749c0e/attachment.html 

From yradenac at irisa.fr  Tue Aug 19 22:35:52 2008
From: yradenac at irisa.fr (yradenac at irisa.fr)
Date: Wed, 20 Aug 2008 07:35:52 +0200 (CEST)
Subject: [antlr-interest] Return value as attribut is not found. Is it a bug?
Message-ID: <33233.159.226.40.7.1219210552.squirrel@mail.irisa.fr>

Hi,

Maybe I have found a bug, or, since I am new to antlr, maybe I have missed
something...

In my project, I am using the antlr3 Java grammar provided on the antlr
wiki (in fact, I am only interested in a subset of the Java expressions).
When I run antlr it ends with the following error:

error(114): test.g:0:0: attribute is not a token, parameter, or return
value: expr

Error line 0, character 0 does not help, and since I have called many
return values "expr" it took me some time to find the problematic "expr".
I finally found that it comes from the following rules (I have simplified a
lot the code part to focus on the parameter/return value problem):


primary returns [Expression expr]
    :   parExpression
    |   'this' ('.' Identifier)* identifierSuffix[$expr]?   // <<<<==== Here
    |   'super' superSuffix
    |   literal
    |   'new' creator
    |   Identifier ('.' Identifier)* identifierSuffix[$expr]?   //
<<<<==== and here
    |   primitiveType ('[' ']')* '.' 'class'
    |   'void' '.' 'class'
    ;

identifierSuffix[Expression argExpr] returns [Expression expr]
    :   ('[' ']')+ '.' 'class'
    |   ('[' expression ']')+ // can also be matched by selector, but do here
    |   arguments
    |   '.' 'class'
    |   '.' explicitGenericInvocation
    |   '.' 'this'
    |   '.' 'super' arguments
    |   '.' 'new' innerCreator
    ;


I have noticed that if the options are removed (ie remove both question
marks), it does not generate the error (ie antlr finds the return value
name); if we change both '?' to '*' or '+', it still generates the error.

I have also noticed that using a token like

   i=Identifier ('.' Identifier)* identifierSuffix[$i.text]?

does not yield an error, but generates a wrong Java code:

   identifierSuffix($i.text);

Once again, removing the question mark "solves" the issue; still I do not
want to force an identifier suffix here.


I have used antlr-3.0.1 and antlr-3.1, both ends up with the same error.

I have attached the Java grammar that I have just edited with the above
modification (file test.g).

So, is it a bug ? or have I missed something ?

For the moment, I am investigating a workaround using a stack in the
parser class just for this problem.

Thanks for your help.

Yann.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.g
Type: application/octet-stream
Size: 18748 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/10876b56/attachment.obj 

From Dennis.Benzinger at gmx.net  Tue Aug 19 23:48:49 2008
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Wed, 20 Aug 2008 08:48:49 +0200
Subject: [antlr-interest] new book organization question
In-Reply-To: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
Message-ID: <48ABBE51.3010403@gmx.net>

Hi!

Am 20.08.2008 03:11, Terence Parr schrieb:
> [...]
> Identifying the target audience is crucial and I think it should be  
> essentially practicing engineers that need to implement a programming  
> language or data file format etc.

I'm quite new to ANTLR so maybe I don't fit in the target audience.

> [...]
> As for the organization of the book, I'd like to break the book up  
> into different parts/units according to language application  
> categories (reader, generator, interpreter, translator, etc...).  Each  
> part will use techniques and patterns identified in the previous  
> parts.  
> [...]
> The parts would be in this order
> 
> I. Introduction
>   basic architectures, describe application categories,
>   introduce language implementation ideas.
> 
> II. Generators (before readers because it's easier to understand)
> 
> III. Readers (parsing, introduces all of the intermediate data  
> structures too)
> [...]

I'd prefer to have the Readers part before the Generators part. You
first have to parse something before you can generate something out of
it. And because you wrote that "each part will use techniques and
patterns identified in the previous parts" I find it quite confusing to
have Readers after Generators. Does the Readers part build upon
Generators? Or am I supposed to read Readers before Generators even if
the order in the book is the the other way around?

Bye,
Dennis Benzinger

From sven.van.echelpoel at empolis.com  Wed Aug 20 02:13:00 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Wed, 20 Aug 2008 11:13:00 +0200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with token offsets and
	generated AST	return types
Message-ID: <1219223580.5625.40.camel@cartman>

Hi,

I started out last week with ANTLR 3.1b2 to generate a parser with the C
target. All went very well and I must say that I was very impressed with
it. But then I wanted to get a hold of the token offsets (start and
stop). For that I need the functions getStartIndex() and getStopIndex()
of ANTLR3_COMMON_TOKEN_struct, right?

When I parse my input, the token offsets are all rubbish. Although in my
grammar I'm using rewrite rules to generate the AST, I can reproduce it
with a small grammar as well. Here's what I tried:

grammar MyGrammar;

options {
  /* Generate C code */
  language = C ;
  /* Build an AST */
  output=AST ;
}

translation_unit
  : NUMBER+
  ;

fragment
DIGIT_CHAR
  : '0'..'9'
  ;
  
fragment
DIGIT_CHAR_WITHOUT_ZERO
  : '1'..'9'
  ;
fragment
WHITESPACE_CHAR
  : ' ' |'\n' |'\r' | '\t'
  ;
  
NUMBER
  : ( '0' | DIGIT_CHAR_WITHOUT_ZERO ) DIGIT_CHAR*
  ;


WHITESPACE
  : WHITESPACE_CHAR {$channel = HIDDEN;} 
  ;

For an input "12376 87562356" (utf-16), the parse succeeds, but the
start and stop index of the tokens associated with the AST nodes are way
off the mark. Here's what I print out for each tree node (ts is token
start, te is token end):

ts: 6649008 te: 6649017
ts: 6649020 te: 6649035

Slightly bigger than the string I sent in. :-)

Naturally I was working with 3.1b2 and not the official release, so when
I saw that 3.1 was released I went ahead and tried that one. This was
even worse! 3.1 with the C target does not even generate the type of the
AST in the return structs of the rules. This is what comes out:

typedef struct WarpParser_translation_unit_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree
parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    	tree;   <----------------  No type here!
   
}
    WarpParser_translation_unit_return;

Clearly we are missing something important here. Or maybe I am missing
something obvious. I used the C-runtime from the ANTLR source
distribution and tried it also with the stand-alone C lib distro. I'm
building an Ubuntu 7.1 with gcc 3.4 (64-bit).

Any help will be much appreciated,

Thanks in advance,

Sven



From antlr at mirality.co.nz  Wed Aug 20 04:48:23 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 20 Aug 2008 23:48:23 +1200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with token offsets
 and generated AST return types
In-Reply-To: <1219223580.5625.40.camel@cartman>
References: <1219223580.5625.40.camel@cartman>
Message-ID: <20080820114831.CCE3711EC65@www.antlr.org>

At 21:13 20/08/2008, Sven Van Echelpoel wrote:
 >Naturally I was working with 3.1b2 and not the official release, 
so
 >when I saw that 3.1 was released I went ahead and tried that 
one.
 >This was even worse! 3.1 with the C target does not even 
generate
 >the type of the AST in the return structs of the rules. This is
 >what comes out:
 >
 >typedef struct WarpParser_translation_unit_return_struct
 >{
 >    /** Generic return elements for ANTLR3 rules that are not in 

 >        tree parsers or returning trees
 >     */
 >    pANTLR3_COMMON_TOKEN    start;
 >    pANTLR3_COMMON_TOKEN    stop;
 >    	tree;   <----------------  No type here!
 >
 >}
 >    WarpParser_translation_unit_return;

To fix that one, I think you need to include:

      ASTLabelType = pANTLR3_BASE_TREE;

in the options block at the top of your grammar.  (I'm not sure 
why it wouldn't default to this any more, but it's been mentioned 
a few times recently on the list.)


From g.vandeglind at beinformed.nl  Wed Aug 20 05:01:16 2008
From: g.vandeglind at beinformed.nl (Gerard van de Glind)
Date: Wed, 20 Aug 2008 14:01:16 +0200
Subject: [antlr-interest] generating nice error messages
Message-ID: <07DC8905ABA90249A64135D427E2F70F03274FDF7A@apbiex01.beinformed.nl>

Hi all,

Which options do I have to generate nice error messages with ANTLR when the grammar contains rules that have the backtrack option set to true?

The problem I have with backtracking rules is that I lose detail about the exceptions that occur.
This is because the exception is delayed until the backtracking rule has no other alternative left.

Regards, Gerard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/0f4212c0/attachment.html 

From sven.van.echelpoel at empolis.com  Wed Aug 20 05:29:33 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Wed, 20 Aug 2008 14:29:33 +0200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with token	offsets
	and generated AST return types
In-Reply-To: <20080820114833.1343E64899@pmx13.bertelsmann.de>
References: <1219223580.5625.40.camel@cartman>
	<20080820114833.1343E64899@pmx13.bertelsmann.de>
Message-ID: <1219235373.5625.53.camel@cartman>



On Wed, 2008-08-20 at 23:48 +1200, Gavin Lambert wrote:
> At 21:13 20/08/2008, Sven Van Echelpoel wrote:
>  >Naturally I was working with 3.1b2 and not the official release, 
> so
>  >when I saw that 3.1 was released I went ahead and tried that 
> one.
>  >This was even worse! 3.1 with the C target does not even 
> generate
>  >the type of the AST in the return structs of the rules. This is
>  >what comes out:
>  >
>  >typedef struct WarpParser_translation_unit_return_struct
>  >{
>  >    /** Generic return elements for ANTLR3 rules that are not in 
> 
>  >        tree parsers or returning trees
>  >     */
>  >    pANTLR3_COMMON_TOKEN    start;
>  >    pANTLR3_COMMON_TOKEN    stop;
>  >    	tree;   <----------------  No type here!
>  >
>  >}
>  >    WarpParser_translation_unit_return;
> 
> To fix that one, I think you need to include:
> 
>       ASTLabelType = pANTLR3_BASE_TREE;
> 
> in the options block at the top of your grammar.  (I'm not sure 
> why it wouldn't default to this any more, but it's been mentioned 
> a few times recently on the list.)
> 

Hmm... that worked for the AST problem at least. But now I'm still left
with a huge amount of compilation errors that just weren't there before.
I have attached the output of the compiler.

Some of the errors are:

------
error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for
argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct
*
      , uint8_t *
    )'
------

The signature of the function has changed from 3.1b2's

antlr3RewriteRuleSubtreeStreamNewAE(
   pANTLR3_BASE_TREE_ADAPTOR adaptor,
   pANTLR3_UINT8 description
);

to 3.1's

 antlr3RewriteRuleSubtreeStreamNewAE(
    pANTLR3_BASE_TREE_ADAPTOR adaptor,
    pANTLR3_BASE_RECOGNIZER rec,
    pANTLR3_UINT8 description
 );

Yet, the parser keep emitting the same code.

-----
error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
-----

The struct does have a nilNode function pointer


-----
error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
-----
This is probably due to the fact that I compile the C file as a C++
file. According to the docs, the C code should be C++ compatible and
this worked with the 3.1b2 build.


The rest is more of the same.

Sven




-------------- next part --------------
.../MyParser.cpp: In function 
   `MyParser_translation_unit_return translation_unit(
        MyParser_Ctx_struct *
    )':
.../MyParser.cpp:546: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:606: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:608: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:614: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:615: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:650: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:658: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_return rule(MyParser_Ctx_struct *)':
.../MyParser.cpp:715: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:716: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:717: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:718: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:719: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:841: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:843: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:849: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:856: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:860: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:861: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:878: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:879: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:896: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:897: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:935: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:946: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_attributes_return rule_attributes(MyParser_Ctx_struct
        *
    )':
.../MyParser.cpp:989: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:990: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:991: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1072: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1074: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1112: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1121: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_attribute_decl_return attribute_decl(MyParser_Ctx_struct *)':
.../MyParser.cpp:1164: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1165: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1166: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1198: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1199: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1200: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1202: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1208: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1215: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1244: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1254: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_identifier_return rule_identifier(MyParser_Ctx_struct
        *
    )':
.../MyParser.cpp:1288: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1310: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1312: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1337: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1345: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_body_return rule_body(MyParser_Ctx_struct *)':
.../MyParser.cpp:1385: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1413: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1415: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1440: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1448: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_group_expression_return group_expression(
        MyParser_Ctx_struct *
    )':
.../MyParser.cpp:1524: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1525: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1526: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1527: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1528: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1529: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1530: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1531: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1532: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1533: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1572: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1574: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1638: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1640: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1646: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1653: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1688: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1690: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1696: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1703: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1738: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1740: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1746: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1753: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1828: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1829: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1830: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1832: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1838: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:1845: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1890: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:1906: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_or_expression_return or_expression(MyParser_Ctx_struct *)':
.../MyParser.cpp:1952: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1953: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:1984: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:1986: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2055: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2056: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEV(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, ANTLR3_VECTOR_struct *
    )'
.../MyParser.cpp:2057: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2063: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2064: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2114: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2122: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_expression_list_return rule_expression_list(
        MyParser_Ctx_struct *
    )':
.../MyParser.cpp:2166: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2256: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2264: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_element_return rule_element(MyParser_Ctx_struct *)':
.../MyParser.cpp:2374: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2392: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2410: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2428: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2446: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2474: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2482: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_arc_symbols_return arc_symbols(MyParser_Ctx_struct *)':
.../MyParser.cpp:2524: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2525: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2579: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2580: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2581: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2583: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2589: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2596: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2634: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2643: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_range_return range(MyParser_Ctx_struct *)':
.../MyParser.cpp:2676: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2699: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2700: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2702: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2708: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2715: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2742: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2750: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_any_char_return any_char(MyParser_Ctx_struct *)':
.../MyParser.cpp:2783: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2805: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2807: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2838: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2846: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_numeric_id_return numeric_id(MyParser_Ctx_struct *)':
.../MyParser.cpp:2879: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2902: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2903: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:2905: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2911: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:2918: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2945: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:2953: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp: In function 
   `MyParser_rule_reference_return rule_reference(MyParser_Ctx_struct *)':
.../MyParser.cpp:2997: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2998: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleTOKENStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:2999: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *
    )'
.../MyParser.cpp:3036: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:3037: error: cannot
    convert `uint8_t *' to `ANTLR3_BASE_RECOGNIZER_struct *' for argument `2'
    to 
   `ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct *
    antlr3RewriteRuleSubtreeStreamNewAEE(
        ANTLR3_BASE_TREE_ADAPTOR_struct *, ANTLR3_BASE_RECOGNIZER_struct *
      , uint8_t *, void *
    )'
.../MyParser.cpp:3039: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:3045: error:
    'ANTLR3_BASE_TREE_ADAPTOR_struct' has no member named 'nil'
.../MyParser.cpp:3052: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:3079: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'
.../MyParser.cpp:3088: error: invalid
    conversion from `void *' to `ANTLR3_BASE_TREE_struct *'


From jimi at temporal-wave.com  Wed Aug 20 08:21:45 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Aug 2008 08:21:45 -0700
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with token	offsets
	and generated AST	return types
In-Reply-To: <1219223580.5625.40.camel@cartman>
References: <1219223580.5625.40.camel@cartman>
Message-ID: <1219245705.7431.106.camel@jimi>

On Wed, 2008-08-20 at 11:13 +0200, Sven Van Echelpoel wrote:

> Hi,
> 
> I started out last week with ANTLR 3.1b2 to generate a parser with the C
> target. All went very well and I must say that I was very impressed with
> it. But then I wanted to get a hold of the token offsets (start and
> stop). For that I need the functions getStartIndex() and getStopIndex()
> of ANTLR3_COMMON_TOKEN_struct, right?


It depends where you are asking from. Also, if your input is really
UTF16 and not UCS2, are you using the built in conversions? The supplied
inputstreams handle latin-1 (well actually anything 8 bit) and UCS2 and
don't handle surrogates. If you want UTF32  (this is what is handled
internally) or OTF16 then you need to roll your own.

> 
> When I parse my input, the token offsets are all rubbish. 


You realize that the indexes are in characters and not bytes right? What
does your driver program look like.

> Although in my
> grammar I'm using rewrite rules to generate the AST, I can reproduce it
> with a small grammar as well. Here's what I tried:
> 
> grammar MyGrammar;
> 
> options {
>   /* Generate C code */
>   language = C ;
>   /* Build an AST */
>   output=AST ;
> }
> 
> translation_unit
>   : NUMBER+
>   ;
> 
> fragment
> DIGIT_CHAR
>   : '0'..'9'
>   ;
>   
> fragment
> DIGIT_CHAR_WITHOUT_ZERO
>   : '1'..'9'
>   ;
> fragment
> WHITESPACE_CHAR
>   : ' ' |'\n' |'\r' | '\t'
>   ;
>   
> NUMBER
>   : ( '0' | DIGIT_CHAR_WITHOUT_ZERO ) DIGIT_CHAR*
>   ;
> 
> 
> WHITESPACE
>   : WHITESPACE_CHAR {$channel = HIDDEN;} 
>   ;
> 
> For an input "12376 87562356" (utf-16), the parse succeeds, but the
> start and stop index of the tokens associated with the AST nodes are way
> off the mark. Here's what I print out for each tree node (ts is token
> start, te is token end):
> 
> ts: 6649008 te: 6649017
> ts: 6649020 te: 6649035
> 
> Slightly bigger than the string I sent in. :-)


I need to see how you are asking for them. There have not been any
reports about his going wrong and I know that at least some people are
using UCS2. I intended to provide a universal input stream for 3.1 but
ran out of time. I will supply it later.

> 
> Naturally I was working with 3.1b2 and not the official release, so when
> I saw that 3.1 was released I went ahead and tried that one. This was
> even worse! 


Are you sure you don't need a few more exclamation marks to get across
your disdain with more emphasis?


> 3.1 with the C target does not even generate the type of the
> AST in the return structs of the rules. 


I think that you meant to say: "I looked in the past posts of the last
two weeks and saw that this question was answered 6 times already and
that when producing trees you need:

options
{
   ASTLabelType=pANTLR3_BASE_TREE;
}

> Clearly we are missing something important here. Or maybe I am missing
> something obvious. I used the C-runtime from the ANTLR source
> distribution and tried it also with the stand-alone C lib distro. I'm
> building an Ubuntu 7.1 with gcc 3.4 (64-bit).


Try the released runtime, correcting your grammar and make sure that you
are using the UCS2 input stream. Use the built in references for $pos
and so on in the lexer and see what you get.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/510c3ab7/attachment.html 

From jimi at temporal-wave.com  Wed Aug 20 08:23:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Aug 2008 08:23:20 -0700
Subject: [antlr-interest] generating nice error messages
In-Reply-To: <07DC8905ABA90249A64135D427E2F70F03274FDF7A@apbiex01.beinformed.nl>
References: <07DC8905ABA90249A64135D427E2F70F03274FDF7A@apbiex01.beinformed.nl>
Message-ID: <1219245800.7431.108.camel@jimi>

On Wed, 2008-08-20 at 14:01 +0200, Gerard van de Glind wrote:
> Hi all,
> 
>  
> 
> Which options do I have to generate nice error messages with ANTLR
> when the grammar contains rules that have the backtrack option set to
> true?
> 
>  
> 
> The problem I have with backtracking rules is that I lose detail about
> the exceptions that occur.
> 
> This is because the exception is delayed until the backtracking rule
> has no other alternative left.


This is a side effect - you need to not use backtracking or use it
sparingly on just those rules that might benefit. You should probably
regard backtracking as a prototyping option.


Jim
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/39e5ad24/attachment.html 

From monty at codetransform.com  Wed Aug 20 08:27:12 2008
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 20 Aug 2008 08:27:12 -0700
Subject: [antlr-interest] new book organization question
In-Reply-To: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
Message-ID: <73e8e3430808200827y58ace742yc9c704ce092fea4f@mail.gmail.com>

The flow between subsystems is by far the most difficult part of my
ANTLR parsers/analyzers/code generators to explain to new hires.  I've
found it very helpful to take a single expression and show what is
happening with it in each phase.  I also have a summary document which
gives the conceptual flow through the system and what files are
involved in each phase.

A changeset has been quite a useful tool to show which files need to
be modified when altering the entire system, such as when adding a new
built-in type, which, in my system, affects the lexer for adding a new
imaginary node, some support files which deal with type coercion, some
java files which represent our program structure, and the string
template for code generation.  We use trac as our bug tracking system
and it's quite easy to link to any committed changeset and it shows a
nice html diff.

Regarding I-VI, I don't see much to argue about.

Monty

P.S. I can go into much greater detail via voice if you like.

On Tue, Aug 19, 2008 at 6:11 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
...

> As for the organization of the book, I'd like to break the book up
> into different parts/units according to language application
> categories (reader, generator, interpreter, translator, etc...).  Each
> part will use techniques and patterns identified in the previous
> parts.  Each part would start out with an overview of the application
> category and then dig in solving problems rather than using a dry list
> of pattern definitions. Lets solve some of the problems in order to
> identify key patterns and principles. This means a traditional book
> with parts, chapters, and sections. The parts would be in this order
>
> I. Introduction
>  basic architectures, describe application categories,
>  introduce language implementation ideas.
>
> II. Generators (before readers because it's easier to understand)
>
> III. Readers (parsing, introduces all of the intermediate data
> structures too)
>
> IV. Semantic analysis, type checking, symbol tables
>
> V. Interpreters
>
> VI. Translators
>
> Once we argue about this for awhile, I will give you the list of
> examples I want to include. :) Any and all thoughts welcome even if
> it's something like "take a writing class" ;)
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From egor at sun.com  Wed Aug 20 08:51:54 2008
From: egor at sun.com (Egor Ushakov)
Date: Wed, 20 Aug 2008 19:51:54 +0400
Subject: [antlr-interest] Any more info on the 'Sun-tuned ANTLR
 v2'	website link-share?
In-Reply-To: <00b101c8ec26$3a4b60b0$aee22210$@com>
References: <19147537.1213179181307.JavaMail.root@m03>
	<00b101c8ec26$3a4b60b0$aee22210$@com>
Message-ID: <48AC3D9A.5030200@sun.com>

Sorry,

I have not read this thread for ages :)
If that still matters:

hg clone http://hg.netbeans.org/main

will do "checkout"
You can read more here:

http://www.netbeans.org/community/sources/hg.html
http://www.netbeans.org/community/sources/


Regards,
Egor

Don Caton wrote:
> Egor:
>
> Any tips on how to get the source?  I downloaded the Mercurial client, which I
> presume is necessary to get the files but I don't have a clue where to start.
>
> Thanks.
>
> --
> Don
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Egor Ushakov
>> Sent: Wednesday, June 11, 2008 6:12 AM
>> To: Micheal J
>> Cc: antlr-interest at antlr.org
>> Subject: [antlr-interest] [Fwd: Re: Any more info on the 'Sun-tuned ANTLR
>> v2' website link-share?]
>>
>> Michael,
>>
>> Sun-tuned ANTLR v2 is used in C/C++ Netbeans pack for source parsing:
>> http://www.netbeans.org/features/cpp/index.html
>> We implemented several performance fixes in it to improve the
>> performance of generated parser and lexer.
>> Our tests with C/C++ grammar shown ~x3 performance improvement.
>>
>> Netbeans is fully opensource and so does Sun-tuned ANTLR and grammars.
>> We just asked Terence to put links on his website. (Thanks!)
>>
>> Feel free to use it in your projects :)
>>
>> Egor
>> Sun Microsystems
>>
>> Micheal J wrote:
>>     
>>> Hi All,
>>>
>>> Just saw this in the sharing section of the ANTLR website. Does anyone
>>>       
>> have
>>     
>>> more info about this work by Sun (or is it the Netbeans project)?
>>>
>>> Micheal
>>>
>>> -----------------------
>>> The best way to contact me is via the list/forum. My time is very
>>>       
>> limited.
>>     
>>>       
>>
>>     
>
>
>   


From zosrothko at orange.fr  Wed Aug 20 11:39:49 2008
From: zosrothko at orange.fr (zosrothko)
Date: Wed, 20 Aug 2008 20:39:49 +0200
Subject: [antlr-interest] antlr-interest: Please,
	provide a searching tool on archived mails
Message-ID: <48AC64F5.1050202@orange.fr>

Ter

It would be very useful to offer a searching tool on all archived mails 
for antlr-interest and antlr-dev...
As such, may be some help requests could be avoided if their subjects 
have already been discussed on the mailing list.

zos


From parrt at cs.usfca.edu  Wed Aug 20 11:50:21 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 11:50:21 -0700
Subject: [antlr-interest] new book organization question
In-Reply-To: <48ABBE51.3010403@gmx.net>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
	<48ABBE51.3010403@gmx.net>
Message-ID: <C099C2EC-4AC4-48EE-BEF0-50DF950F54D5@cs.usfca.edu>


On Aug 19, 2008, at 11:48 PM, Dennis Benzinger wrote:
>> I. Introduction
>>  basic architectures, describe application categories,
>>  introduce language implementation ideas.
>>
>> II. Generators (before readers because it's easier to understand)
>>
>> III. Readers (parsing, introduces all of the intermediate data
>> structures too)
>> [...]
>
> I'd prefer to have the Readers part before the Generators part. You
> first have to parse something before you can generate something out of
> it.

Well,That was an interesting paradox I had to solve. basically, I  
realized that explaining how to print out "3.152e-13" is much easier  
than explaining how to recognize it properly. but, how can I talk  
about generators without talking about readers first. It turns out, we  
can do lots of things. The examples I chose include object to  
relational mapping (uses reflection) and a vector math to postscript  
translator that turns the printer into a vector math interpreter. At  
first, I have a set of handbuilt objects to represent operations. A  
GUI or something else could easily build these without resorting to a  
reader. Then I morph that into more of a standard tree structure and  
show how to use templates and so on to generate the appropriate  
postscript.

Then when I do readers, it will start to fall into place. :) Do you  
think that will work?

> And because you wrote that "each part will use techniques and
> patterns identified in the previous parts" I find it quite confusing  
> to
> have Readers after Generators.

Agreed if you look just at the table of contents. You think my  
approach will work as explained above?

> Does the Readers part build upon
> Generators?

Well, In fact it does the reader section now knows what its target is:  
trees. :) It provides the goal before the thing that can create those  
data structures.

Ter

From parrt at cs.usfca.edu  Wed Aug 20 11:52:36 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 11:52:36 -0700
Subject: [antlr-interest] new book organization question
In-Reply-To: <73e8e3430808200827y58ace742yc9c704ce092fea4f@mail.gmail.com>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
	<73e8e3430808200827y58ace742yc9c704ce092fea4f@mail.gmail.com>
Message-ID: <CD5C3E00-1CD6-4101-894D-1BA470298621@cs.usfca.edu>


On Aug 20, 2008, at 8:27 AM, Monty Zukowski wrote:

> The flow between subsystems is by far the most difficult part of my
> ANTLR parsers/analyzers/code generators to explain to new hires.  I've
> found it very helpful to take a single expression and show what is
> happening with it in each phase.  I also have a summary document which
> gives the conceptual flow through the system and what files are
> involved in each phase.

That makes a lot of sense.

> A changeset has been quite a useful tool to show which files need to
> be modified when altering the entire system, such as when adding a new
> built-in type, which, in my system, affects the lexer for adding a new
> imaginary node, some support files which deal with type coercion, some
> java files which represent our program structure, and the string
> template for code generation.  We use trac as our bug tracking system
> and it's quite easy to link to any committed changeset and it shows a
> nice html diff.

Cool.  I think fisheye does this too :)

Thanks!
Ter


From rschulz at sonic.net  Wed Aug 20 11:57:34 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 20 Aug 2008 11:57:34 -0700
Subject: [antlr-interest] antlr-interest: Please,
	provide a searching tool on archived mails
In-Reply-To: <48AC64F5.1050202@orange.fr>
References: <48AC64F5.1050202@orange.fr>
Message-ID: <200808201157.34982.rschulz@sonic.net>

On Wednesday 20 August 2008 11:39, zosrothko wrote:
> Ter
>
> It would be very useful to offer a searching tool on all archived
> mails for antlr-interest and antlr-dev...

Is there a reason that Google or another Web search service is 
inadequate?


> zos


Randall Schulz

From asoka250 at gmail.com  Wed Aug 20 12:04:16 2008
From: asoka250 at gmail.com (ASHOK REDDY)
Date: Wed, 20 Aug 2008 14:04:16 -0500
Subject: [antlr-interest] antlr-interest: Please,
	provide a searching tool on archived mails
In-Reply-To: <200808201157.34982.rschulz@sonic.net>
References: <48AC64F5.1050202@orange.fr> <200808201157.34982.rschulz@sonic.net>
Message-ID: <7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>

Actually google shall do the job....but in my case, I used to use the search
tool of graphviz(http://www.graphviz.org)  when I used to create graphviz
dot files. I feel that this transition from a specialized search tool to
gooogle is little bit difficult. But if the process of integrating search
tool doesn't take much time, we can well give a thought for it.

On Wed, Aug 20, 2008 at 1:57 PM, Randall R Schulz <rschulz at sonic.net> wrote:

> On Wednesday 20 August 2008 11:39, zosrothko wrote:
> > Ter
> >
> > It would be very useful to offer a searching tool on all archived
> > mails for antlr-interest and antlr-dev...
>
> Is there a reason that Google or another Web search service is
> inadequate?
>
>
> > zos
>
>
> Randall Schulz
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Regards,
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu
(http://www.cis.ksu.edu/~ashokv)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/4b9d8327/attachment.html 

From rschulz at sonic.net  Wed Aug 20 12:40:55 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 20 Aug 2008 12:40:55 -0700
Subject: [antlr-interest] antlr-interest: Please,
	provide a searching tool on archived mails
In-Reply-To: <7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>
References: <48AC64F5.1050202@orange.fr> <200808201157.34982.rschulz@sonic.net>
	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>
Message-ID: <200808201240.55636.rschulz@sonic.net>

On Wednesday 20 August 2008 12:04, ASHOK REDDY wrote:
> Actually google shall do the job....but in my case, I used to use the
> search tool of graphviz(http://www.graphviz.org)  when I used to
> create graphviz dot files. I feel that this transition from a
> specialized search tool to gooogle is little bit difficult. But if
> the process of integrating search tool doesn't take much time, we can
> well give a thought for it.

Just to be clear, I'll point out that Google (the only search tool with 
which I'm currently familiar) can restrict hits to specific sites (DNS 
names) using the site: keyword or even within the URL hierarchy of a 
given site using the inurl: keyword.

Details here: <http://www.google.com/help/operators.html>



Randall Schulz

From antlr at mirality.co.nz  Wed Aug 20 12:57:08 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 21 Aug 2008 07:57:08 +1200
Subject: [antlr-interest] antlr-interest: Please,
 provide a  searching tool on archived mails
In-Reply-To: <200808201240.55636.rschulz@sonic.net>
References: <48AC64F5.1050202@orange.fr> <200808201157.34982.rschulz@sonic.net>
	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>
	<200808201240.55636.rschulz@sonic.net>
Message-ID: <20080820195716.CFA1A2F4317@www.antlr.org>

At 07:40 21/08/2008, Randall R Schulz wrote:
 >Just to be clear, I'll point out that Google (the only search
 >tool with which I'm currently familiar) can restrict hits to
 >specific sites (DNS names) using the site: keyword or even
 >within the URL hierarchy of a given site using the inurl:
 >keyword.

They also provide a search box that can be embedded in a website 
that does this for you automatically, in order to help the people 
who don't know that.  Couldn't hurt.


From rschulz at sonic.net  Wed Aug 20 12:58:18 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 20 Aug 2008 12:58:18 -0700
Subject: [antlr-interest] antlr-interest: Please,
	provide a searching tool on archived mails
In-Reply-To: <200808201240.55636.rschulz@sonic.net>
References: <48AC64F5.1050202@orange.fr>
	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>
	<200808201240.55636.rschulz@sonic.net>
Message-ID: <200808201258.18413.rschulz@sonic.net>

On Wednesday 20 August 2008 12:40, Randall R Schulz wrote:
> ...
>
> Just to be clear, I'll point out that Google (the only search tool
> with which I'm currently familiar) can restrict hits to specific
> sites (DNS names) using the site: keyword or even within the URL
> hierarchy of a given site using the inurl: keyword.
>
> Details here: <http://www.google.com/help/operators.html>

I overlooked this when hunting down that page before, but this looks 
like it might be ideal for incorporating into the ANTLR site:

- Custom Search Engine
  <http://www.google.com/coop/cse/>

BlurbText:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
Have a website or collection of sites you'd like to search over? With 
Custom Search Engine, you can harness the power of Google to create a 
search engine tailored to your needs.

Create a search engine tailored to your needs

    * Include one website, multiple websites, or specific webpages
    * Host the search box and results on your own website
    * Customize the colors and branding to match your existing webpages
    * Learn more with our featured examples 
(<http://www.google.com/coop/cse/examples/GooglePicks>), developer 
documentation (<http://www.google.com/coop/docs/cse/>), and FAQs 
(<http://www.google.com/support/customsearch/?hl=en>)
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


Randall Schulz

From jaluber at gmx.de  Wed Aug 20 13:02:46 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 20 Aug 2008 22:02:46 +0200
Subject: [antlr-interest] antlr-interest: Please,
 provide a  searching tool on archived mails
In-Reply-To: <20080820195716.CFA1A2F4317@www.antlr.org>
References: <48AC64F5.1050202@orange.fr>
	<200808201157.34982.rschulz@sonic.net>	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>	<200808201240.55636.rschulz@sonic.net>
	<20080820195716.CFA1A2F4317@www.antlr.org>
Message-ID: <48AC7866.4090604@gmx.de>

Gavin Lambert schrieb:
> At 07:40 21/08/2008, Randall R Schulz wrote:
>  >Just to be clear, I'll point out that Google (the only search
>  >tool with which I'm currently familiar) can restrict hits to
>  >specific sites (DNS names) using the site: keyword or even
>  >within the URL hierarchy of a given site using the inurl:
>  >keyword.
> 
> They also provide a search box that can be embedded in a website 
> that does this for you automatically, in order to help the people 
> who don't know that.  Couldn't hurt.

I've used such an embedded search and have been satisfied with it.
Definitively a good idea.

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From parrt at cs.usfca.edu  Wed Aug 20 13:01:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 13:01:08 -0700
Subject: [antlr-interest] antlr-interest: Please,
	provide a  searching tool on archived mails
In-Reply-To: <20080820195716.CFA1A2F4317@www.antlr.org>
References: <48AC64F5.1050202@orange.fr> <200808201157.34982.rschulz@sonic.net>
	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>
	<200808201240.55636.rschulz@sonic.net>
	<20080820195716.CFA1A2F4317@www.antlr.org>
Message-ID: <09A68B28-DEFE-4513-B5BA-44CEBEB68AEF@cs.usfca.edu>

The search box on antlr.org restricts to antlr.org

'site:antlr.org search-terms"

Should I make one for

site:antlr.org search-terms

Ter

On Aug 20, 2008, at 12:57 PM, Gavin Lambert wrote:

> At 07:40 21/08/2008, Randall R Schulz wrote:
>> Just to be clear, I'll point out that Google (the only search
>> tool with which I'm currently familiar) can restrict hits to
>> specific sites (DNS names) using the site: keyword or even
>> within the URL hierarchy of a given site using the inurl:
>> keyword.
>
> They also provide a search box that can be embedded in a website
> that does this for you automatically, in order to help the people
> who don't know that.  Couldn't hurt.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Wed Aug 20 13:16:33 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 13:16:33 -0700
Subject: [antlr-interest] antlr-interest: Please,
	provide a  searching tool on archived mails
In-Reply-To: <48AC7866.4090604@gmx.de>
References: <48AC64F5.1050202@orange.fr>
	<200808201157.34982.rschulz@sonic.net>	<7b0a1e4b0808201204o3c6ab617x386b622d8cdd268a@mail.gmail.com>	<200808201240.55636.rschulz@sonic.net>
	<20080820195716.CFA1A2F4317@www.antlr.org>
	<48AC7866.4090604@gmx.de>
Message-ID: <6AB57117-5D2C-4281-BB1B-EC0C8DA5D24B@cs.usfca.edu>

added search box for list on supprot page:

http://www.antlr.org/support.html

Ter
On Aug 20, 2008, at 1:02 PM, Johannes Luber wrote:

> Gavin Lambert schrieb:
>> At 07:40 21/08/2008, Randall R Schulz wrote:
>>> Just to be clear, I'll point out that Google (the only search
>>> tool with which I'm currently familiar) can restrict hits to
>>> specific sites (DNS names) using the site: keyword or even
>>> within the URL hierarchy of a given site using the inurl:
>>> keyword.
>>
>> They also provide a search box that can be embedded in a website
>> that does this for you automatically, in order to help the people
>> who don't know that.  Couldn't hurt.
>
> I've used such an embedded search and have been satisfied with it.
> Definitively a good idea.
>
> Johannes
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>


From parrt at cs.usfca.edu  Wed Aug 20 13:58:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 13:58:47 -0700
Subject: [antlr-interest] book examples list
Message-ID: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>

Hi, I have either build or in planning on building the following  
examples for the book in order to demonstrate all the patterns and  
principles.  Comments?

Ter

INTRO / INFORMAL SOLUTIONS
Processing comma-separated values using ANTLR
Processing comma-separated values using Python
Processing comma-separated values with newlines in quoted data elements
Processing comma-separated value files from the shell
Processing log files

GENERATOR
Generating Object-Relational Database Mappings Using Templates
Generating Object-Relational Database Mappings
Using Postscript Printers As Virtual Machines (vector math example)
Generating Postscript with Tree Grammars
Generating Postscript using Homogeneous tree nodes

READER
Fig: A generic configuration file reader
Building a generic bytecode assembler
Reading XML files

SEMANTIC ANALYSIS
A Symbol Table for C
A Symbol Table for a subset of Java
Detecting uninitialized variable references

INTERPRETER
Bytecode interpreter
Tree-based Interpreter (will need a reader building ASTs)
An efficient buffer for manipulating strings (Like TokenRewriteStream)
Some "internal" interpreter using Ruby

TRANSLATOR
Wiki to HTML
Generating class hierarchy diagrams
Building a source code pretty printer
	Wow...this turns out to be extremely difficult!
Building a simple compiler
Adding closures to a Java-like language
Differentiating polynomials using ANTLRMorph

From cvrebert at gmail.com  Wed Aug 20 16:31:17 2008
From: cvrebert at gmail.com (Chris Rebert)
Date: Wed, 20 Aug 2008 16:31:17 -0700
Subject: [antlr-interest] Need for regular FAQ mails (was: Re:
	unsubscribe request)
In-Reply-To: <B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
	<6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
	<47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>
	<B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>
Message-ID: <47c890dc0808201631h407cb14fi176f2291bad406b2@mail.gmail.com>

Very good, but does anyone know how to have "your-email-address"
substituted with the subscriber's actual email?
- Chris

========
Follow the path of the Iguana...
Rebertia: http://rebertia.com
Blog: http://blog.rebertia.com



On Mon, Aug 18, 2008 at 11:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> JustTried to append... let's see what this does in this test message.
> Ter
> On Aug 17, 2008, at 3:16 PM, Chris Rebert wrote:
>
>> Well, there is the monthly subscription reminder that Mailman sends
>> out which usually has this info, so unless it's been turned off by the
>> admins, people should be getting that on a regular interval.
>>
>> However, for the Python mailinglists I'm subscribed to, every message
>> has a footer appended with the list info, for example:
>> Python-3000 mailing list
>> Python-3000 at python.org
>> http://mail.python.org/mailman/listinfo/python-3000
>> Unsubscribe: http://mail.python.org/mailman/options/python-3000/MY-EMAIL-ADDRESS-REDACTED
>>
>> Perhaps enabling the Mailman option for this should be considered?
>>
>> - Chris
>  to
> http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From cmundi at gmail.com  Wed Aug 20 16:35:48 2008
From: cmundi at gmail.com (C. Mundi)
Date: Wed, 20 Aug 2008 16:35:48 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
Message-ID: <e794390808201635v5eb0f0e6q73199e690dcbbd39@mail.gmail.com>

On Wed, Aug 20, 2008 at 1:58 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Building a source code pretty printer
>        Wow...this turns out to be extremely difficult!
>

You're not kidding.  It can be insanely difficult.  We got "tricked" into
doing this on the fly for an application with a built-in script editor.  I'm
sure our implementation was O(N^2) suboptimal.  What a pain.  We'll never do
that again!

That's a very ambitious list you have, already.

cm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/6da6ccba/attachment.html 

From ramanand_mandayam at yahoo.com  Wed Aug 20 17:21:48 2008
From: ramanand_mandayam at yahoo.com (Ramanand Mandayam)
Date: Wed, 20 Aug 2008 17:21:48 -0700 (PDT)
Subject: [antlr-interest] HELP requested again with StringTemplate and java
	backslash characters.
Message-ID: <305807.60973.qm@web33502.mail.mud.yahoo.com>

Hello there, 

Sorry to broadcast my request again but I am somewhat at a loss.

I have a tree grammar that parses expressions which include just &quot;string types&quot;. 
In the grammar options I have specified output=template.
When I print out the text associated with a (string) token I get the correct output.
But the output is not correct when the input sentence contains a binary operation or involves traversing a non-leaf node in the tree.
 
For example, assume that the input is A+B where both A and B are string types. 
My tree grammar collects the output of A and B and they both seem to be correct at the leaf (TOKEN) nodes in the tree traversal.
At the next step higher, the grammar collects the two and adds the &quot;+&quot; string in between the two strings from the two leaf nodes.
 
However, the string template assignment to &quot;retval.st&quot; (which is the return value of the non-terminal representing the &#39;+&#39; operation)
compresses two successive &#39;&#92;&#39; &#39;&#92;&#39; characters into a single &#39;&#92;&#39;, as a result of which the output has a completely different meaning.
 
As an example, if the token text is &quot;A:&#92;&#92;B&quot;, then the output of the tree grammar magically becommes &quot;A:&#92;B&quot;.
This seems to happen only at internal tree nodes that pass the retval.st value by using the JAVA assignment operator.
 
Anybody have any clue what is happening here? Any options that need to be set in the call to the output operator?
Can somebody help me work around this issue.
 
Cheers
 
Ramanand


      

From Austin_Hastings at Yahoo.com  Wed Aug 20 17:40:55 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 20 Aug 2008 19:40:55 -0500
Subject: [antlr-interest] [AntlrDT] Q: How do I set token directory?
In-Reply-To: <200808180634.m7I6YZ8R002438@zinc.newtechlaw.com>
References: <48A8FCCE.3000206@Yahoo.com>
	<200808180634.m7I6YZ8R002438@zinc.newtechlaw.com>
Message-ID: <48ACB997.30703@Yahoo.com>

Gerald,

It's spelled correctly. ;)

The output directory is working, and the HlasmParser.java, 
HlasmLexer.java, and Hlasm.tokens are all generated correctly.

The Hlasm.g3 file starts out like this:

grammar Hlasm;

options {
    language = Java;
    output = AST;
    ASTLabelType = CommonTree;
}

tokens {
    A_SIMPLE = '=';
//===========================

And the HlasmAST.g3 file starts like this:

tree grammar HlasmAST;

options {
    language = Java;
    output = AST;
    ASTLabelType = CommonTree;
    tokenVocab = Hlasm;
}

@header {
package perl6.hlasm;
}
//==========================


Could it be caused by the .g3 extension?

For whatever reason, I get two copies of the error:

Description    Resource    Path    Location    Type
cannot find tokens file <unset-dir>\Hlasm.tokens    HlasmAST.g3    
hlasm/src/main/antlr/parrot/hlasm    line 2    DLTK Problem
cannot find tokens file <unset-dir>\Hlasm.tokens    HlasmAST.g3    
hlasm/src/main/antlr/parrot/hlasm    line 2    DLTK Problem

The <unset-dir> is bugging me -- that's something right out of Tool.java 
(http://fisheye2.atlassian.com/browse/antlr/src/org/antlr/Tool.java?r=5214  
line 42 in this version).

I notice that the outputDirectory member is protected, and that the 
getOutputDirectory method does a pretty good job of checking for uninit. 
I kind of suspect that you (or someone) may be calling 
getImportedVocabFile(String fname) in the "wrong" order, since it 
returns outputDirectory instead of calling the accessor. (f*****g 
amateurs.) Alternatively, is it possible that you are creating multiple 
instances of the tool, and failing to initialize one of them correctly?

When I cd to the directory that contains the .g3 files, and run Antlr 
directly, I get this:

$ java org.antlr.Tool -o 
../../../../../target/generated-sources/antlr/parrot/hlasm HlasmAST.g3
ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
error(210):  The following sets of rules are mutually left-recursive 
[decl_postfix, decl_atom, declarator]

So the grammar isn't perfect, but it should be updating the error window 
with something.

=Austin


Gerald Rosenberg wrote:
> At 09:38 PM 8/17/2008, Austin Hastings wrote:
>> w/ AntlrDT 0.5
>>
>> I've got my output directory set to a relative path 
>> (../../../target/generated-sources/antlr) in 
>> Window>Preferences>AntlrDT, but when I try to build a tree parser, I 
>> am getting this error:
>>
>> cannot find tokens file <unset-dir>\Hlasm.tokens    HlasmAST.g3    
>
> Spelling error?  Note, Antlr will automatically append the ".tokens" 
> extension. 
>
> AntlrDT relies on the "-o" option to set the output directory and 
> expects the relevant .tokens file to be in that same directory.  
> Antlr's Tool#getImportedVocabFile(String vocabName) will look for the 
> named .tokens file in any "-lib" specified directory (not used by 
> AntlrDT) and, if not found, then in the "-o" specified directory.  


From Austin_Hastings at Yahoo.com  Wed Aug 20 18:47:44 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 20 Aug 2008 20:47:44 -0500
Subject: [antlr-interest] Q: Why do pointers to types need a tree?
Message-ID: <48ACC940.6050607@Yahoo.com>

Ter,

In your http://antlr.org/wiki/display/CS652/Simple+scopes+solution 
document, you comment at one point that:

Symbol objects just map a name to a type (variable) or return type 
(function). (I've hinted at what you need for pointers to types; turns 
out to be a tree also).

Can you explain that last comment? While my implementation is an upside 
down tree, it's directional. So it qualifies as a DAG, but not as a 
tree. Why would I need a tree?

=Austin

From anders at globe-trotter.us  Wed Aug 20 19:04:35 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Thu, 21 Aug 2008 10:04:35 +0800
Subject: [antlr-interest] =?iso-8859-1?q?N00b_question?=
Message-ID: <20080821020435.10670.qmail@station198.com>

Hi,

I have this simple little grammar where I would like to parse an ini-file that format ID="somevalue" on each line
but I get an error when running in ANTLRworks saying MismatchedTokenException using a simple test line A1="AAA". If I below, change VALUE to be IDENTIFIER again it seems to work 

e.g. 

expr
	:	(IDENTIFIER '=' '"' IDENTIFIER '"' ) 
	;

So if somebody could explain why the below grammar doesn't work it would help me understand better.

TIA
Anders.

grammar inifile;

options
{
language=C;
}

prog : stat+;

stat
	:	expr NEWLINE
	;

expr
	:	(IDENTIFIER '=' '"' VALUE '"' ) 
	;

// lex rules

IDENTIFIER
    :	LETTER (LETTER|DIGIT)*
    ;

VALUE
    :	(LETTER|DIGIT)*
    ;
	
fragment
LETTER
    :	'$'
    |	'A'..'Z'
    |	'a'..'z'
    |	'_'
    ; 	

fragment
DIGIT
:'0'..'9';

NEWLINE 
	:	'\r'? | '\n' | { $channel=HIDDEN; } 
	;

From tbrandonau at gmail.com  Wed Aug 20 19:34:59 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 21 Aug 2008 12:34:59 +1000
Subject: [antlr-interest] N00b question
In-Reply-To: <20080821020435.10670.qmail@station198.com>
References: <20080821020435.10670.qmail@station198.com>
Message-ID: <ebc876d70808201934u13d8d976r89207e843e0f581a@mail.gmail.com>

Lexing occurs independently of parsing and is not influenced by parser
context. So you need to either combine your VALUE and IDENTIFIER rules
into one or recognise the quotes as part of the VALUE rule. If you
combine the rules you could either detect rules that start with a
digit (not valid identifiers) in the lexer or use actions in the
parser.

Tom.

On Thu, Aug 21, 2008 at 12:04 PM, Anders Karlsson
<anders at globe-trotter.us> wrote:
> Hi,
>
> I have this simple little grammar where I would like to parse an ini-file that format ID="somevalue" on each line
> but I get an error when running in ANTLRworks saying MismatchedTokenException using a simple test line A1="AAA". If I below, change VALUE to be IDENTIFIER again it seems to work
>
> e.g.
>
> expr
>        :       (IDENTIFIER '=' '"' IDENTIFIER '"' )
>        ;
>
> So if somebody could explain why the below grammar doesn't work it would help me understand better.
>
> TIA
> Anders.
>
> grammar inifile;
>
> options
> {
> language=C;
> }
>
> prog : stat+;
>
> stat
>        :       expr NEWLINE
>        ;
>
> expr
>        :       (IDENTIFIER '=' '"' VALUE '"' )
>        ;
>
> // lex rules
>
> IDENTIFIER
>    :   LETTER (LETTER|DIGIT)*
>    ;
>
> VALUE
>    :   (LETTER|DIGIT)*
>    ;
>
> fragment
> LETTER
>    :   '$'
>    |   'A'..'Z'
>    |   'a'..'z'
>    |   '_'
>    ;
>
> fragment
> DIGIT
> :'0'..'9';
>
> NEWLINE
>        :       '\r'? | '\n' | { $channel=HIDDEN; }
>        ;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From gerald at certiv.net  Wed Aug 20 19:42:26 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 20 Aug 2008 19:42:26 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
Message-ID: <200808210242.m7L2gSl1028697@zinc.newtechlaw.com>

At 12:30 PM 8/16/2008, Terence Parr wrote:

>On Aug 16, 2008, at 12:56 AM, Gerald Rosenberg wrote:
>>Even with so much existing, this is not a trivial extension to
>>Antlr.  Theoretically, the end result of any "doSomething()" AST
>>manipulation could be done with a well-planned set of tree-walkers.
>>It is just that a random access approach, supported by the
>>equivalent of findFirst, findNext, findPrev, findLast operations, is
>>distinctly better than a purely top-down (only getNext allowed)
>>approach for non-trivial bi-directionally context-dependent AST
>>rewrite problems.
>>
>>Unfortunately, does not sound like AntlrMorph addresses this
>>particular problem.
>
>Not sure I understand the specific problem; can you rephrase?

The problem is the complexity of performing ad-hoc structural 
modifications on an existing AST.  For example, where the AST is the 
model in a WYSIWYG editor.  Given a high-level command to make a 
modification, you need to examine the surrounding context/portions of 
the AST to determine if it can be made, how and precisely where to 
make it, and what other modifications are implicitly required in 
order to preserve the integrity of the model represented by the AST.

Hand writing AST traversal/modification code is tedious and 
fragile.  Tree grammars very nicely abstract traversal and rewrite, 
but are oriented exclusively to top-down, phased rewrites using 
out-of-band symbol tables to establish state.  And the node rewrite 
is essentially statically defined by the tree grammar.  Very 
appropriate for compiler implementation.

For ad-hoc AST changes, the better approach, at least conceptually, 
is to implement a low-level structural modification API  with methods 
to "find" a node based on parameter values, and to similarly create, 
copy, insert and delete nodes.  Eclipse, for example, has several 
abstraction layers to enable ad-hoc Java AST modification; the lowest 
though is basically find, create, copy, insert and delete and the 
higher levels implement procedural logic to evaluate context and 
enforce model integrity.  Perhaps the greatest impediment to 
supporting other languages in Eclipse is the required hand coding of 
these layers.

Antlr could directly generate at least the low-level API.  For 
example, consider an AST that is the underlying data structure for an 
HTML editor.  A grammar to generate the desired API  might be specified as:

         access grammar html;

         start_tag : open_tag ID ^( name ^( attr )* )*
                 => find (int start_node, boolean direction, String 
$ID.text ) returns [int node_index]
                 => find (int start_node, boolean direction, String 
$ID.text, String name, String attr ) returns [int node_index]
                 => create (String $ID.text, String name, List attr ) 
returns [$start_tag.tree]
                 => copy (int node_index) returns [$start_tag.tree]
                 => insert (int node_index, $start_tag.tree) returns 
[boolean status]
                 => delete (int node_index) returns [$start_tag.tree]
         ;

This is not far off from a tree grammar: tersely abstracted, but 
still providing sufficient information to unambiguously define 
implementation of the API.  The generated code will be no more 
fragile than that produced from a tree grammar.  Add in heterogeneous 
tree node support and it is a rather complete solution.  Non-trivial, 
but complete.  The devil is in figuring out the appropriate grammar 
syntax for defining the API productions -- what is shown is good for 
discussion, but probably not much more.


From anders at globe-trotter.us  Wed Aug 20 19:50:14 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Thu, 21 Aug 2008 10:50:14 +0800
Subject: [antlr-interest] =?iso-8859-1?q?n00b_Question?=
Message-ID: <20080821025014.18183.qmail@station198.com>

Thanks Tom,

I did as you said 

expr
	:	(IDENTIFIER '=' VALUE ) 
	;

// lex rules

IDENTIFIER
    :	LETTER (LETTER|DIGIT)*
    ;

VALUE
    :	'"' (LETTER|DIGIT)* '"'
    ;

so now it works. I was wondering how to ignore the end of file value, what is the normal way to do that?

BR/Anders.

From belayda at gmail.com  Wed Aug 20 21:52:27 2008
From: belayda at gmail.com (Bernardo Elayda)
Date: Wed, 20 Aug 2008 21:52:27 -0700
Subject: [antlr-interest] book examples list
Message-ID: <3e5ed32f0808202152o23fbe142nd8c5aec0bba04245@mail.gmail.com>

Hello,

I like what you've listed so far as examples.

I don't want to see anything removed, but I would like to see:

An example of code generation using BURG(perhaps JBurg)



I concur with your comments about a pretty printer.  It only sounds easy.

regards,
Bernardo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080820/03ac6bf9/attachment.html 

From public.web.josh at gmail.com  Wed Aug 20 22:07:46 2008
From: public.web.josh at gmail.com (public.web.josh)
Date: Thu, 21 Aug 2008 01:07:46 -0400
Subject: [antlr-interest] Best way to describe "order" of AST tree nodes
Message-ID: <48acf823.1e36640a.1021.5aff@mx.google.com>

Hello all!

I am creating a grammar file that uses an AST tree as its output. So far, so
good, and I have been excited to learn and use ANTLR. Unfortunately, I have
hit a snag that my limited experience is preventing me from overcoming.

When parsing the input, I can create the specific sub nodes in a tree root
as desired, but I now have the need to mark the order that they appeared in
the input. Specifically, in my case, I am trying to parse something similar
to a multi-dimensional array declaration:

object[x,y,z]

Currently I can produce a tree that looks similar to:

^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z))

My desire is to produce a tree similar to:

^(OBJECT ^(DIM ^(POS 0) ^(SIZE x)) ^(DIM ^(POS 1) ^(SIZE y)) ^(DIM ^(POS 2)
^(SIZE z)))

The closet I got was setting a rule return value to a scope variable that
was incremented as each dimension was processed. This worked well, except
for the fact that I could not figure out a way to get that value into the
tree.

Am I on the right track, or is there an easier way to do this?

Thanks ahead of time for any help you can provide!!

-josh

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080821/a47a51e7/attachment.html 

From parrt at cs.usfca.edu  Wed Aug 20 22:40:22 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Aug 2008 22:40:22 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <3e5ed32f0808202152o23fbe142nd8c5aec0bba04245@mail.gmail.com>
References: <3e5ed32f0808202152o23fbe142nd8c5aec0bba04245@mail.gmail.com>
Message-ID: <4534A2EB-7840-4D83-B588-21CF7A991490@cs.usfca.edu>


On Aug 20, 2008, at 9:52 PM, Bernardo Elayda wrote:

> Hello,
>
> I like what you've listed so far as examples.
>
> I don't want to see anything removed, but I would like to see:
>
> An example of code generation using BURG(perhaps JBurg)

I'll be using LLVM for the simple compiler :)

> I concur with your comments about a pretty printer.  It only sounds  
> easy.
>

yeah, i was VERY surprised.  I have built a very nice algorithm and  
sample solution. :)  Mine is not in any way optimal but mimics what  
coders do naturally :)

Ter

From sven.van.echelpoel at empolis.com  Wed Aug 20 23:59:18 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 21 Aug 2008 08:59:18 +0200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with	token	offsets
	and generated AST	return types
In-Reply-To: <1219245705.7431.106.camel@jimi>
References: <1219223580.5625.40.camel@cartman> <1219245705.7431.106.camel@jimi>
Message-ID: <1219301958.5619.19.camel@cartman>


On Wed, 2008-08-20 at 08:21 -0700, Jim Idle wrote:
> On Wed, 2008-08-20 at 11:13 +0200, Sven Van Echelpoel wrote: 
> > Hi,
> > 
> > I started out last week with ANTLR 3.1b2 to generate a parser with the C
> > target. All went very well and I must say that I was very impressed with
> > it. But then I wanted to get a hold of the token offsets (start and
> > stop). For that I need the functions getStartIndex() and getStopIndex()
> > of ANTLR3_COMMON_TOKEN_struct, right?
> 
> It depends where you are asking from. Also, if your input is really
> UTF16 and not UCS2, are you using the built in conversions? The
> supplied inputstreams handle latin-1 (well actually anything 8 bit)
> and UCS2 and don't handle surrogates. If you want UTF32  (this is what
> is handled internally) or OTF16 then you need to roll your own. 
> > 
Well technically our input is UTF-16, but we won't be supporting
languages outside the BMP, so UCS2 would do just fine.

> > When I parse my input, the token offsets are all rubbish. 
> 
> You realize that the indexes are in characters and not bytes right?

Yes I do, but even in characters the indexes I get returned are way too
big. As stated for the simple input "12376 87562356", the idexes are in
the millions.

>  What does your driver program look like. 

I just followed the basic example in the docs (and sprinkled some C++
sauce over it) :

Antlr::Pointer<
    ANTLR3_INPUT_STREAM_struct
  >                                   input(
                                       antlr3NewUCS2StringInPlaceStream(
                                          text.begin(),
                                          text.size(),
                                          0
                                        )
                                      );    
  
  Antlr::Pointer<
    WarpLexer
  >                                   lexer(
                                        WarpLexerNew( input.get() )
                                      );   

  Antlr::Pointer<
    ANTLR3_COMMON_TOKEN_STREAM_struct
  >                                   tokens(
                                       antlr3CommonTokenStreamSourceNew(
                                          ANTLR3_SIZE_HINT,
                                          TOKENSOURCE( lexer.get() )
                                        )
                                      );

  Antlr::Pointer<
    WarpParser
  >                                   parser
                                        = WarpParserNew( tokens.get() );

  WarpParser_translation_unit_return  parser_return
                                        =
parser->translation_unit( parser.get() );

[...]
> > 
> > Naturally I was working with 3.1b2 and not the official release, so when
> > I saw that 3.1 was released I went ahead and tried that one. This was
> > even worse! 
> 
> Are you sure you don't need a few more exclamation marks to get across
> your disdain with more emphasis?

My apologies if this was the tone you picked up in my posting. There is
no disdain whatsoever on my part. As said, I'm very impressed with ANTLR
and I like it a lot.

> > 3.1 with the C target does not even generate the type of the
> > AST in the return structs of the rules. 
> 
> I think that you meant to say: "I looked in the past posts of the last
> two weeks and saw that this question was answered 6 times already and
> that when producing trees you need:
> 
> options
> {
>    ASTLabelType=pANTLR3_BASE_TREE;
> } 

Yes, Gavin Lambert pointed this out to me yesterday on this very list.

> > Clearly we are missing something important here. Or maybe I am missing
> > something obvious. I used the C-runtime from the ANTLR source
> > distribution and tried it also with the stand-alone C lib distro. I'm
> > building an Ubuntu 7.1 with gcc 3.4 (64-bit).
> 
> Try the released runtime, correcting your grammar and make sure that
> you are using the UCS2 input stream. Use the built in references for
> $pos and so on in the lexer and see what you get.

Well, I would use the released runtime, if the generated grammar would
compile (see my reply to Gavin Lambert's post yesterday). I have no clue
what's going on there either.

By the way, what's $pos? I found no mention to it in the book.
> 
Thanks,

Sven


From sven.van.echelpoel at empolis.com  Thu Aug 21 01:37:55 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 21 Aug 2008 10:37:55 +0200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with	token	offsets
	and generated AST	return types
In-Reply-To: <1219245705.7431.106.camel@jimi>
References: <1219223580.5625.40.camel@cartman> <1219245705.7431.106.camel@jimi>
Message-ID: <1219307875.5990.4.camel@cartman>

> Try the released runtime, correcting your grammar and make sure that
> you are using the UCS2 input stream. Use the built in references for
> $pos and so on in the lexer and see what you get.
> 
OK, I managed to build everything with the released 3.1 now. There was
some environment variable that still pointed to the b2 version in my
build system. Deeply sorry for all the noise concerning it not building.

Yet with the released 3.1 I still get 0 for the token indexes. Here's
how I get at the indexes:


ANTLR3_BASE_TREE_struct*        mAST;

mAST->getToken( mAST )




From sven.van.echelpoel at empolis.com  Thu Aug 21 01:47:27 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 21 Aug 2008 10:47:27 +0200
Subject: [antlr-interest] [C target] ANTLR 3.1 issues with	token	offsets
	and generated AST	return types
In-Reply-To: <1219245705.7431.106.camel@jimi>
References: <1219223580.5625.40.camel@cartman> <1219245705.7431.106.camel@jimi>
Message-ID: <1219308447.5990.10.camel@cartman>

[Trying again, sent too quickly before]
> Try the released runtime, correcting your grammar and make sure that
> you are using the UCS2 input stream. Use the built in references for
> $pos and so on in the lexer and see what you get.
> 
OK, I managed to build everything with the released 3.1 now. There was
some environment variable that still pointed to the b2 version in my
build system. Deeply sorry for all the noise concerning it not building.

Yet with the released 3.1 I still get 0 for the token indexes. Here's
how I get at the indexes:


ANTLR3_BASE_TREE_struct*        mAST;
ANTLR3_COMMON_TOKEN_struct*     mToken = mAST->getToken( mAST );
unsigned                        index = mToken->start;

but I also tried 

unsigned                        index = mToken->getStartIndex( mToken );

Is this the correct way of getting at the token indexes? If not, can you
point me to the functions in the documentation that I need in order to
get the correct indexes?

Thanks,

Sven




From abreslav at gmail.com  Thu Aug 21 02:04:31 2008
From: abreslav at gmail.com (Andrey Breslav)
Date: Thu, 21 Aug 2008 13:04:31 +0400
Subject: [antlr-interest] Import problem
Message-ID: <9dac6fd30808210204h4f45411aqf1e4aca127115458@mail.gmail.com>

Hello everybody.

I've just switched to ANTLR 3.1 for its beautiful grammar reuse
feature. But I'm stuck with the following problem.
Having the following three grammar descriptions

---A.g

grammar A;

import B, C;

superRule : TOKEN rule;

---End of A.g

---B.g

lexer grammar B;

TOKEN : 'x';

---End of B.g

--C.g

parser grammar C;

import B;

rule : TOKEN+;

---ENd of C.g

I get the following errors from ANTLR:

    [java] ANTLR Parser Generator  Version 3.1 (August 12, 2008)  1989-2008
     [java] error(103): B.g:5:0: parser rule rule not allowed in lexer
     [java] error(103): B.g:5:0: parser rule superRule not allowed in lexer
     [java] error(102): C.g:3:0: lexer rule TOKEN not allowed in parser
     [java] error(102): C.g:1:0: lexer rule Tokens not allowed in parser
     [java] Java Result: 1

Looks like ANTLR thinks I've included B into C and vice versa . Is it
a bug or I am doing something wrong?

Thank you.

--
Best regards,
  Andrey

From jaluber at gmx.de  Thu Aug 21 03:06:00 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 21 Aug 2008 12:06:00 +0200
Subject: [antlr-interest] n00b Question
In-Reply-To: <20080821025014.18183.qmail@station198.com>
References: <20080821025014.18183.qmail@station198.com>
Message-ID: <48AD3E08.2040508@gmx.de>

Anders Karlsson schrieb:
> Thanks Tom,
> 
> I did as you said 
> 
> expr
> 	:	(IDENTIFIER '=' VALUE ) 
> 	;
> 
> // lex rules
> 
> IDENTIFIER
>     :	LETTER (LETTER|DIGIT)*
>     ;
> 
> VALUE
>     :	'"' (LETTER|DIGIT)* '"'
>     ;
> 
> so now it works. I was wondering how to ignore the end of file value, what is the normal way to do that?

EOF is already ignored. This has the side effect that parsing is still
correct for input which conforms in the first part of it to the grammar.
To enforce a complete scanning of the input file, use

start: expr* EOF;

Furthermore, please don't use parentheses to group expressions where
they aren't needed like in your expr rule.

Johannes
> 
> BR/Anders.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jaluber at gmx.de  Thu Aug 21 03:10:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 21 Aug 2008 12:10:58 +0200
Subject: [antlr-interest] Best way to describe "order" of AST tree nodes
In-Reply-To: <48acf823.1e36640a.1021.5aff@mx.google.com>
References: <48acf823.1e36640a.1021.5aff@mx.google.com>
Message-ID: <48AD3F32.5090908@gmx.de>

public.web.josh schrieb:
> Hello all!
> 
> I am creating a grammar file that uses an AST tree as its output. So
> far, so good, and I have been excited to learn and use ANTLR.
> Unfortunately, I have hit a snag that my limited experience is
> preventing me from overcoming.
> 
> When parsing the input, I can create the specific sub nodes in a tree
> root as desired, but I now have the need to mark the order that they
> appeared in the input. Specifically, in my case, I am trying to parse
> something similar to a multi-dimensional array declaration:
> 
> object[x,y,z]
> 
> Currently I can produce a tree that looks similar to:
> 
> ^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z))
> 
> My desire is to produce a tree similar to:
> 
> ^(OBJECT ^(DIM ^(POS 0) ^(SIZE x)) ^(DIM ^(POS 1) ^(SIZE y)) ^(DIM ^(POS
> 2) ^(SIZE z)))
> 
> The closet I got was setting a rule return value to a scope variable
> that was incremented as each dimension was processed. This worked well,
> except for the fact that I could not figure out a way to get that value
> into the tree.
> 
> Am I on the right track, or is there an easier way to do this?
> 
> Thanks ahead of time for any help you can provide!!

Is there are reason why you need to encode the position in such way?
^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z)) does already contain the required
information. You have merely to count DIMs in the tree grammar. Or do
you plan to reorder the tree? In that case, there is way, but I can't
remember how it exactly went, only that Ter posted it once...

Johannes
> 
> -josh
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From anders at globe-trotter.us  Thu Aug 21 06:11:46 2008
From: anders at globe-trotter.us (Anders)
Date: Thu, 21 Aug 2008 21:11:46 +0800
Subject: [antlr-interest] n00b Question
In-Reply-To: <48AD3E08.2040508@gmx.de>
References: <20080821025014.18183.qmail@station198.com>
	<48AD3E08.2040508@gmx.de>
Message-ID: <48AD6992.7050301@globe-trotter.us>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080821/f8c7aafc/attachment.html 

From public.web.josh at gmail.com  Thu Aug 21 06:14:35 2008
From: public.web.josh at gmail.com (public.web.josh)
Date: Thu, 21 Aug 2008 09:14:35 -0400
Subject: [antlr-interest] Best way to describe "order" of AST tree nodes
In-Reply-To: <48AD3F32.5090908@gmx.de>
References: <48acf823.1e36640a.1021.5aff@mx.google.com>
	<48AD3F32.5090908@gmx.de>
Message-ID: <48ad6a3c.261e640a.75a6.ffff95c6@mx.google.com>

Yes, you are correct: there is a (pretty strong) chance that the tree will
be reordered.  

Also, as I am new to ANTLR, any chance to improve my understand and fluency
with the technology is welcomed.  

I tried to find posts related to this but have not been successful.  

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Thursday, August 21, 2008 6:11 AM
To: public.web.josh
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Best way to describe "order" of AST tree nodes

public.web.josh schrieb:
> Hello all!
> 
> I am creating a grammar file that uses an AST tree as its output. So
> far, so good, and I have been excited to learn and use ANTLR.
> Unfortunately, I have hit a snag that my limited experience is
> preventing me from overcoming.
> 
> When parsing the input, I can create the specific sub nodes in a tree
> root as desired, but I now have the need to mark the order that they
> appeared in the input. Specifically, in my case, I am trying to parse
> something similar to a multi-dimensional array declaration:
> 
> object[x,y,z]
> 
> Currently I can produce a tree that looks similar to:
> 
> ^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z))
> 
> My desire is to produce a tree similar to:
> 
> ^(OBJECT ^(DIM ^(POS 0) ^(SIZE x)) ^(DIM ^(POS 1) ^(SIZE y)) ^(DIM ^(POS
> 2) ^(SIZE z)))
> 
> The closet I got was setting a rule return value to a scope variable
> that was incremented as each dimension was processed. This worked well,
> except for the fact that I could not figure out a way to get that value
> into the tree.
> 
> Am I on the right track, or is there an easier way to do this?
> 
> Thanks ahead of time for any help you can provide!!

Is there are reason why you need to encode the position in such way?
^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z)) does already contain the required
information. You have merely to count DIMs in the tree grammar. Or do
you plan to reorder the tree? In that case, there is way, but I can't
remember how it exactly went, only that Ter posted it once...

Johannes
> 
> -josh
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 



From himmy070 at gmail.com  Thu Aug 21 07:43:05 2008
From: himmy070 at gmail.com (mark twain)
Date: Thu, 21 Aug 2008 10:43:05 -0400
Subject: [antlr-interest] basic doubt to assign value to AST nodes!!
Message-ID: <41fde820808210743i72c74d63xb438376ca0776988@mail.gmail.com>

Hi Every1...

I am newbie here and just few days back started working on this cool ANTLR .
Have a very basic question on assigning the values to AST nodes. So far, I
am able to generate the AST supporting simple arithmetic operations  and
also able to evaluate the tree.  Just an example, if my

input expression is: a = 1+ 2 , I can generate following AST and also able
to evaluate it and get output : 3
 AST :       =
             /     \
           a        +
                   /    \
                  1      2

This way if my expression changes to  a = 3+4(say) I generate AST again and
evaluate the output from AST
But now say instead of 1 and 2, I make it generic and use b and c to
generate the AST. Now, is there is anyway I can assign the values to b and c
of AST without a need to create AST again and again for different values of
b and c. I want flow of execution code to be:
===========================================
func1 (a = b + c)           // generate the AST from variables *just once*

func2 (2, 3)                  //expected output value of a = 5
func2(4,5)                    //expected output value of a = 9
...
...
==========================================
So, this way I wanna create AST only if my arithmetic formula changes......

cheers:)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080821/20bf1a29/attachment.html 

From monty at codetransform.com  Thu Aug 21 08:21:31 2008
From: monty at codetransform.com (Monty Zukowski)
Date: Thu, 21 Aug 2008 08:21:31 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
Message-ID: <73e8e3430808210821o31000079n79e86154c3899433@mail.gmail.com>

On Wed, Aug 20, 2008 at 1:58 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> A Symbol Table for C

Including typedef?  That would be nice because it's such a pain, traditionally.

> Building a source code pretty printer
>        Wow...this turns out to be extremely difficult!

Quite.

Monty

From Waverly.Edwards at genesys.com  Thu Aug 21 08:50:17 2008
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 21 Aug 2008 11:50:17 -0400
Subject: [antlr-interest] book examples list
In-Reply-To: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>

 
Since you are covering symbol tables would you cover the handling of
type checking, aggregate types,type equivalency (name vs. structural)


Also would you elaborate on what you mean by "building a simple
compiler"


Thanks,


W.
-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, August 20, 2008 4:59 PM
To: antlr ANTLR
Subject: [antlr-interest] book examples list

Hi, I have either build or in planning on building the following  
examples for the book in order to demonstrate all the patterns and  
principles.  Comments?

[snip]

SEMANTIC ANALYSIS
A Symbol Table for C
A Symbol Table for a subset of Java
Detecting uninitialized variable references

[snip]

TRANSLATOR
Wiki to HTML
Generating class hierarchy diagrams
Building a source code pretty printer
	Wow...this turns out to be extremely difficult!
Building a simple compiler
Adding closures to a Java-like language
Differentiating polynomials using ANTLRMorph

From parrt at cs.usfca.edu  Thu Aug 21 10:36:20 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 10:36:20 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <73e8e3430808210821o31000079n79e86154c3899433@mail.gmail.com>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
	<73e8e3430808210821o31000079n79e86154c3899433@mail.gmail.com>
Message-ID: <9234CEEA-1DAD-4FC0-807D-D7CACE930F86@cs.usfca.edu>


On Aug 21, 2008, at 8:21 AM, Monty Zukowski wrote:

> On Wed, Aug 20, 2008 at 1:58 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> A Symbol Table for C
>
> Including typedef?  That would be nice because it's such a pain,  
> traditionally.

yep.

Ter

From parrt at cs.usfca.edu  Thu Aug 21 10:37:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 10:37:07 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
	<FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>
Message-ID: <80E535F0-1907-40EB-95F0-66EEACD723DA@cs.usfca.edu>


On Aug 21, 2008, at 8:50 AM, Edwards, Waverly wrote:

>
> Since you are covering symbol tables would you cover the handling of
> type checking, aggregate types,

sure.

> type equivalency (name vs. structural)

what do you mean? can yougive me an example?

> Also would you elaborate on what you mean by "building a simple
> compiler"

Take a simple C-like language and generate LLVM intermediate form (SSA).

Ter

From parrt at cs.usfca.edu  Thu Aug 21 10:38:59 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 10:38:59 -0700
Subject: [antlr-interest] Import problem
In-Reply-To: <9dac6fd30808210204h4f45411aqf1e4aca127115458@mail.gmail.com>
References: <9dac6fd30808210204h4f45411aqf1e4aca127115458@mail.gmail.com>
Message-ID: <7DCE6764-DA95-42AE-87CC-B8F75C9A2B2A@cs.usfca.edu>

You're importing B twice (via C).
Ter
On Aug 21, 2008, at 2:04 AM, Andrey Breslav wrote:

> Hello everybody.
>
> I've just switched to ANTLR 3.1 for its beautiful grammar reuse
> feature. But I'm stuck with the following problem.
> Having the following three grammar descriptions
>
> ---A.g
>
> grammar A;
>
> import B, C;
>
> superRule : TOKEN rule;
>
> ---End of A.g
>
> ---B.g
>
> lexer grammar B;
>
> TOKEN : 'x';
>
> ---End of B.g
>
> --C.g
>
> parser grammar C;
>
> import B;
>
> rule : TOKEN+;
>
> ---ENd of C.g
>
> I get the following errors from ANTLR:
>
>    [java] ANTLR Parser Generator  Version 3.1 (August 12, 2008)   
> 1989-2008
>     [java] error(103): B.g:5:0: parser rule rule not allowed in lexer
>     [java] error(103): B.g:5:0: parser rule superRule not allowed in  
> lexer
>     [java] error(102): C.g:3:0: lexer rule TOKEN not allowed in parser
>     [java] error(102): C.g:1:0: lexer rule Tokens not allowed in  
> parser
>     [java] Java Result: 1
>
> Looks like ANTLR thinks I've included B into C and vice versa . Is it
> a bug or I am doing something wrong?
>
> Thank you.
>
> --
> Best regards,
>  Andrey
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jaluber at gmx.de  Thu Aug 21 10:50:56 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 21 Aug 2008 19:50:56 +0200
Subject: [antlr-interest] book examples list
In-Reply-To: <80E535F0-1907-40EB-95F0-66EEACD723DA@cs.usfca.edu>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>	<FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>
	<80E535F0-1907-40EB-95F0-66EEACD723DA@cs.usfca.edu>
Message-ID: <48ADAB00.9080900@gmx.de>

Terence Parr schrieb:
> On Aug 21, 2008, at 8:50 AM, Edwards, Waverly wrote:
>> type equivalency (name vs. structural)
> 
> what do you mean? can yougive me an example?

I believe Edwards means that one can have the following two structs:

struct A {
int i;
char c;
};

struct B {
int i;
char c;
};

struct A a;
struct B b;

Under name equivalency a and b can't be compared because they are of
different types, but under structural they can.

Johannes

From parrt at cs.usfca.edu  Thu Aug 21 10:59:32 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 10:59:32 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <48ADAB00.9080900@gmx.de>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>	<FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>
	<80E535F0-1907-40EB-95F0-66EEACD723DA@cs.usfca.edu>
	<48ADAB00.9080900@gmx.de>
Message-ID: <E4E58B82-FA6F-48AF-BF70-13BDAD986564@cs.usfca.edu>


On Aug 21, 2008, at 10:50 AM, Johannes Luber wrote:

> Terence Parr schrieb:
>> On Aug 21, 2008, at 8:50 AM, Edwards, Waverly wrote:
>>> type equivalency (name vs. structural)
>>
>> what do you mean? can yougive me an example?
>
> I believe Edwards means that one can have the following two structs:
>
> struct A {
> int i;
> char c;
> };
>
> struct B {
> int i;
> char c;
> };
>
> struct A a;
> struct B b;
>
> Under name equivalency a and b can't be compared because they are of
> different types, but under structural they can.

Ah!  Well,I probably won't get into that... this book will be  
introductory/intermediate level. Most languages won't need to do that  
equivalency.

Ter

From parrt at cs.usfca.edu  Thu Aug 21 11:00:34 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 11:00:34 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <e794390808201635v5eb0f0e6q73199e690dcbbd39@mail.gmail.com>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
	<e794390808201635v5eb0f0e6q73199e690dcbbd39@mail.gmail.com>
Message-ID: <1AFCFDDE-9819-4600-8F23-7E99A5B31528@cs.usfca.edu>


On Aug 20, 2008, at 4:35 PM, C. Mundi wrote:

>
> On Wed, Aug 20, 2008 at 1:58 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> Building a source code pretty printer
>        Wow...this turns out to be extremely difficult!
>
> You're not kidding.  It can be insanely difficult.  We got "tricked"  
> into doing this on the fly for an application with a built-in script  
> editor.  I'm sure our implementation was O(N^2) suboptimal.  What a  
> pain.  We'll never do that again!

ha! :)  Well,My solution is O(n^2) or worse depending on how many  
templates you provide for each input construct ;)  It has the  
advantage, however, of working the way programmers pretty print by hand.

> That's a very ambitious list you have, already.

Yep.

Ter

From parrt at cs.usfca.edu  Thu Aug 21 11:07:35 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 11:07:35 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
Message-ID: <F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>


On Aug 20, 2008, at 7:42 PM, Gerald Rosenberg wrote:

> At 12:30 PM 8/16/2008, Terence Parr wrote:
>
>> On Aug 16, 2008, at 12:56 AM, Gerald Rosenberg wrote:
>>> Even with so much existing, this is not a trivial extension to
>>> Antlr.  Theoretically, the end result of any "doSomething()" AST
>>> manipulation could be done with a well-planned set of tree-walkers.
>>> It is just that a random access approach, supported by the
>>> equivalent of findFirst, findNext, findPrev, findLast operations, is
>>> distinctly better than a purely top-down (only getNext allowed)
>>> approach for non-trivial bi-directionally context-dependent AST
>>> rewrite problems.
>>>
>>> Unfortunately, does not sound like AntlrMorph addresses this
>>> particular problem.
>>
>> Not sure I understand the specific problem; can you rephrase?
>
> The problem is the complexity of performing ad-hoc structural  
> modifications on an existing AST.  For example, where the AST is the  
> model in a WYSIWYG editor.  Given a high-level command to make a  
> modification, you need to examine the surrounding context/portions  
> of the AST to determine if it can be made, how and precisely where  
> to make it, and what other modifications are implicitly required in  
> order to preserve the integrity of the model represented by the AST.

Yep.  I'm now in favor of manipulating the text instead and  
regenerating the AST for the altered position. Tree manipulation is  
fraught with danger

> Hand writing AST traversal/modification code is tedious and  
> fragile.  Tree grammars very nicely abstract traversal and rewrite,  
> but are oriented exclusively to top-down, phased rewrites using out- 
> of-band symbol tables to establish state.

yup.

>  And the node rewrite is essentially statically defined by the tree  
> grammar.  Very appropriate for compiler implementation.
>
> For ad-hoc AST changes, the better approach, at least conceptually,  
> is to implement a low-level structural modification API  with  
> methods to "find" a node based on parameter values, and to similarly  
> create, copy, insert and delete nodes.

Sort of like my TreeWizard that I started.

>  Eclipse, for example, has several abstraction layers to enable ad- 
> hoc Java AST modification; the lowest though is basically find,  
> create, copy, insert and delete and the higher levels implement  
> procedural logic to evaluate context and enforce model integrity.   
> Perhaps the greatest impediment to supporting other languages in  
> Eclipse is the required hand coding of these layers.

Meaning there is no generic interface? I guess that makes sense. each  
new language would have different API requirements.

> Antlr could directly generate at least the low-level API.  For  
> example, consider an AST that is the underlying data structure for  
> an HTML editor.  A grammar to generate the desired API  might be  
> specified as:
>
>        access grammar html;
>
>        start_tag : open_tag ID ^( name ^( attr )* )*
>                => find (int start_node, boolean direction, String  
> $ID.text ) returns [int node_index]
>                => find (int start_node, boolean direction, String  
> $ID.text, String name, String attr ) returns [int node_index]
>                => create (String $ID.text, String name, List attr )  
> returns [$start_tag.tree]
>                => copy (int node_index) returns [$start_tag.tree]
>                => insert (int node_index, $start_tag.tree) returns  
> [boolean status]
>                => delete (int node_index) returns [$start_tag.tree]
>        ;
>
> This is not far off from a tree grammar: tersely abstracted, but  
> still providing sufficient information to unambiguously define  
> implementation of the API.  The generated code will be no more  
> fragile than that produced from a tree grammar.  Add in  
> heterogeneous tree node support and it is a rather complete  
> solution.  Non-trivial, but complete.  The devil is in figuring out  
> the appropriate grammar syntax for defining the API productions --  
> what is shown is good for discussion, but probably not much more.

So, ANTLR's job would be to fill in those find/create/... methods? I'm  
not sure he could figure that out from the argument list. Can you  
explain a bit more?

Thanks!
Ter


From sebastian.wain at nektra.com  Thu Aug 21 11:24:42 2008
From: sebastian.wain at nektra.com (Sebastian R. Wain)
Date: Thu, 21 Aug 2008 15:24:42 -0300
Subject: [antlr-interest] internal error:
 NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1604):
 no AST/token for nonepsilon target w/o predicate
Message-ID: <48ADB2EA.20402@nektra.com>

Hi,

I am using the latest version of ANTLR, but processing my grammar I 
receive multiple:
    "error(10):  internal error: 
org.antlr.analysis.NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1604): 
no AST/token for nonepsilon target w/o predicate"

How can I solve this issue? Do I need to move to a previous ANTLR version?

Thanks,
Sebastian


From parrt at cs.usfca.edu  Thu Aug 21 11:30:56 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 11:30:56 -0700
Subject: [antlr-interest] internal error:
	NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1604):
	no AST/token for nonepsilon target w/o predicate
In-Reply-To: <48ADB2EA.20402@nektra.com>
References: <48ADB2EA.20402@nektra.com>
Message-ID: <00592453-069A-4AC2-BB0F-AE80F2392EEF@cs.usfca.edu>

Yeah,Someone else found that. I have a simple grammar but if you have  
a really really simple one, I would like to see it.
Ter
On Aug 21, 2008, at 11:24 AM, Sebastian R. Wain wrote:

> Hi,
>
> I am using the latest version of ANTLR, but processing my grammar I
> receive multiple:
>    "error(10):  internal error:
> org 
> .antlr 
> .analysis 
> .NFAToDFAConverter 
> .getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1604):
> no AST/token for nonepsilon target w/o predicate"
>
> How can I solve this issue? Do I need to move to a previous ANTLR  
> version?
>
> Thanks,
> Sebastian
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From Waverly.Edwards at genesys.com  Thu Aug 21 12:32:30 2008
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 21 Aug 2008 15:32:30 -0400
Subject: [antlr-interest] book examples list
In-Reply-To: <48ADAB00.9080900@gmx.de>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>	<FF993752CB890B4EB591BE5450C37BF1013DB908@navamane001.ad.internal.corp>
	<80E535F0-1907-40EB-95F0-66EEACD723DA@cs.usfca.edu>
	<48ADAB00.9080900@gmx.de>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1013DB966@navamane001.ad.internal.corp>


That is exactly what I am referring to.
I think if structural equivalence is done
you have more work to do but by name you
probably have to look up names and their
aliases.  Maybe and alias (typedef) might
not be considered equivalent.

Interesting stuff.


W. 

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Thursday, August 21, 2008 1:51 PM
To: Terence Parr
Cc: Edwards, Waverly; antlr ANTLR
Subject: Re: [antlr-interest] book examples list

Terence Parr schrieb:
> On Aug 21, 2008, at 8:50 AM, Edwards, Waverly wrote:
>> type equivalency (name vs. structural)
> 
> what do you mean? can yougive me an example?

I believe Edwards means that one can have the following two structs:

struct A {
int i;
char c;
};

struct B {
int i;
char c;
};

struct A a;
struct B b;

Under name equivalency a and b can't be compared because they are of
different types, but under structural they can.

Johannes

From antlr at mirality.co.nz  Thu Aug 21 13:14:22 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 22 Aug 2008 08:14:22 +1200
Subject: [antlr-interest] Best way to describe "order" of AST tree nodes
In-Reply-To: <48acf823.1e36640a.1021.5aff@mx.google.com>
References: <48acf823.1e36640a.1021.5aff@mx.google.com>
Message-ID: <20080821201430.EAC1F312965@www.antlr.org>

At 17:07 21/08/2008, public.web.josh wrote:
>Currently I can produce a tree that looks similar to:
>^(OBJECT ^(DIM x) ^(DIM y) ^(DIM z))
>My desire is to produce a tree similar to:
>^(OBJECT ^(DIM ^(POS 0) ^(SIZE x)) ^(DIM ^(POS 1) ^(SIZE y)) 
>^(DIM ^(POS 2) ^(SIZE z)))
>The closet I got was setting a rule return value to a scope 
>variable that was incremented as each dimension was processed. 
>This worked well, except for the fact that I could not figure out 
>a way to get that value into the tree.

You can insert arbitrary values into the generated tree like this:

   -> ^(DIM ^(POS INT[$dim::position.toString()]) ^(SIZE $size))

(Basically, you need to provide both a token type and a value, and 
the value must be a string.)

Unless you're going to reorder the contents of the DIM element, 
though, I would probably simplify it a bit:

   -> ^(DIM POS[$dim::position.toString()] $size)

(or s/POS/INT/.)


From antlr at mirality.co.nz  Thu Aug 21 13:21:09 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 22 Aug 2008 08:21:09 +1200
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
Message-ID: <20080821202117.E881111E9C8@www.antlr.org>

At 14:42 21/08/2008, Gerald Rosenberg wrote:
 >For ad-hoc AST changes, the better approach, at least
 >conceptually, is to implement a low-level structural
 >modification API with methods to "find" a node based on
 >parameter values, and to similarly create, copy, insert and
 >delete nodes.

You can write a tree grammar to do the find (or just do it 
manually, depending on how flexible your find requirements are), 
and use the TreeAdaptors for modifying the tree structure 
afterwards...


From antlr at jazillian.com  Thu Aug 21 13:20:12 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 21 Aug 2008 16:20:12 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
Message-ID: <48ADCDFC.7040604@jazillian.com>

Terence Parr wrote:
 
> Yep.  I'm now in favor of manipulating the text instead and  
> regenerating the AST for the altered position. Tree manipulation is  
> fraught with danger

That seems to me like a very odd thing to say.
Manipulating a tree data structure is inherently no more dangerous than
manipulating any other kind of data structure.

The danger arises only when the tools you're using make the implicit
assumption that the tree is fairly static.
It's perfectly natural for a translator to manipulate a tree
(unless it's so trivial that it doesn't need to).

Imagine a program where every time a List of Person object is changed
(items added, deleted, changed), you have to specify the "shape" of the
List (how many items, each item's type, etc). That would be
silly - the program changes that List lots of times, in lots of ways.
Specifying the list "shape" at each step would be silly.

Now imagine the same program working on a tree rather than a list.
Same situation: the program changes the shape of the tree lots of
times in lots of ways, and
having to specify the "shape" of it after every change would be silly.
That's the situation when trying to use treewalkers in a translator.
It's just that the silliness isn't apparent until you get beyond 
just a couple of valid tree "shapes".

...in my opinion,
Andy


From parrt at cs.usfca.edu  Thu Aug 21 13:26:48 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 13:26:48 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48ADCDFC.7040604@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<48ADCDFC.7040604@jazillian.com>
Message-ID: <8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>


On Aug 21, 2008, at 1:20 PM, Andy Tripp wrote:

> Terence Parr wrote:
>
>> Yep.  I'm now in favor of manipulating the text instead and
>> regenerating the AST for the altered position. Tree manipulation is
>> fraught with danger
>
> That seems to me like a very odd thing to say.
> Manipulating a tree data structure is inherently no more dangerous  
> than
> manipulating any other kind of data structure.

Apparently you've never made a cycle in a tree before ;)  Recursive/ 
self-similar data structures *ARE* more difficult to alter properly  
than a List; by hand anyway.  For lang X to X, morphing trees is ok  
but altering language makes each new pass have to match a new kind of  
tree.  lang X to Y is not so good as a result.

> Now imagine the same program working on a tree rather than a list.
> Same situation: the program changes the shape of the tree lots of
> times in lots of ways, and
> having to specify the "shape" of it after every change would be silly.
> That's the situation when trying to use treewalkers in a translator.
> It's just that the silliness isn't apparent until you get beyond
> just a couple of valid tree "shapes".

That's why I said I am liking the text rewrite approach; the approach  
you are using, no?

Ter

From gerald at certiv.net  Thu Aug 21 14:04:56 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 21 Aug 2008 14:04:56 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
Message-ID: <200808212104.m7LL4mSe003283@zinc.newtechlaw.com>

At 11:07 AM 8/21/2008, Terence Parr wrote:

>On Aug 20, 2008, at 7:42 PM, Gerald Rosenberg wrote:
>
>>Antlr could directly generate at least the low-level API.  For
>>example, consider an AST that is the underlying data structure for
>>an HTML editor.  A grammar to generate the desired API  might be
>>specified as:
>>
>>        access grammar html;
>>
>>        start_tag : open_tag ID ^( name ^( attr )* )*
>>                => find (int start_node, boolean direction, 
>> String  $ID.text ) returns [int node_index]
>>                => find (int start_node, boolean direction, 
>> String  $ID.text, String name, String attr ) returns [int node_index]
>>                => create (String $ID.text, String name, List attr 
>> ) returns [$start_tag.tree]
>>                => copy (int node_index) returns [$start_tag.tree]
>>                => insert (int node_index, $start_tag.tree) 
>> returns  [boolean status]
>>                => delete (int node_index) returns [$start_tag.tree]
>>        ;
>>
>>This is not far off from a tree grammar: tersely abstracted, but
>>still providing sufficient information to unambiguously define
>>implementation of the API.  The generated code will be no more
>>fragile than that produced from a tree grammar.  Add in
>>heterogeneous tree node support and it is a rather complete
>>solution.  Non-trivial, but complete.  The devil is in figuring out
>>the appropriate grammar syntax for defining the API productions --
>>what is shown is good for discussion, but probably not much more.
>
>So, ANTLR's job would be to fill in those find/create/... methods?

Exactly.

>I'm not sure he could figure that out from the argument list.

The necessary information content is there. For example, consider the 
equivalence of:

>>        access grammar html;
>>
>>        start_tag : open_tag ID ^( name ^( attr )* )*
>>                => find (int start_node, boolean direction, String 
>> $ID.text, , String name, String attr ) returns [int node_index] ;

with:

         tree grammar html;

         start_tag : open_tag { if (direction && 
$open_tag.node_index > start_node) else if (!direction && 
$open_tag.node_index <= start_node)  }?
                         ID { $ID.text.equals("someIDString") }?
                         ^( n=name ^( a=attr { 
$n.equals("someNameString") && $a.equals("someAttrString") }? )+ )+
                 -> { return $open_tag.node_index } ;

Likewise, you could emulate the remaining functionality of the access 
grammar with a set of tree grammars; separate grammars would be 
needed for each node type and API operation.  (The tree grammar 
syntax, as used in this manner, is messy/noisy and the complex of 
tree walkers produced would be clumsy to orchestrate -- better to 
have a clean, purpose defined grammar syntax that directly produces a 
conventional-looking API.)

So, to answer your concern, the given structure of the node is 
sufficient to define the scope/nesting of where the elements of the 
argument list need to be tested.  It is implicitly being done in 
standard tree rewrites -- basically the same as figuring out where to 
put the TYPE and DEF:

         tree grammar html2;

         start_tag : open_tag ID ^( name ^( attr )* )*
                 -> open_tag ID TYPE ^( name ^( DEF attr )* )* ;

The production grammar syntax needs to be better designed to make the 
intent of the access grammar more explicit -- as previously noted, 
the syntax shown is good for discussion, but probably not much more.



From gerald at certiv.net  Thu Aug 21 14:15:17 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 21 Aug 2008 14:15:17 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <200808212021.m7LKLHN9003057@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<200808212021.m7LKLHN9003057@zinc.newtechlaw.com>
Message-ID: <200808212124.m7LLOnFq003513@zinc.newtechlaw.com>

At 01:21 PM 8/21/2008, Gavin Lambert wrote:
>At 14:42 21/08/2008, Gerald Rosenberg wrote:
> >For ad-hoc AST changes, the better approach, at least
> >conceptually, is to implement a low-level structural
> >modification API with methods to "find" a node based on
> >parameter values, and to similarly create, copy, insert and
> >delete nodes.
>
>You can write a tree grammar to do the find (or just do it manually, 
>depending on how flexible your find requirements are), and use the 
>TreeAdaptors for modifying the tree structure afterwards...

Absolutely.  But doing so by hand is a fragile mess.  With tree 
walkers, it is still a mess.  Since a tree grammar will all of the 
rewrites listed in the grammar, you will need to have a separate 
grammar for each node type and for each operation.  Orchestration is clumsy.  


From gerald at certiv.net  Thu Aug 21 14:41:28 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 21 Aug 2008 14:41:28 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <200808212104.m7LL4mSe003283@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<200808212104.m7LL4mSe003283@zinc.newtechlaw.com>
Message-ID: <200808212141.m7LLfNg8003620@zinc.newtechlaw.com>

At 02:04 PM 8/21/2008, Gerald Rosenberg wrote:

>          tree grammar html;
>
>          start_tag : open_tag { if (direction &&
>$open_tag.node_index > start_node) else if (!direction &&
>$open_tag.node_index <= start_node)  }?
>                          ID { $ID.text.equals("someIDString") }?
>                          ^( n=name ^( a=attr {
>$n.equals("someNameString") && $a.equals("someAttrString") }? )+ )+
>                  -> { return $open_tag.node_index } ;


Is there a particular reason that email traffic through the list is 
being forcibly line-wrapped at 80 columns?  (This should be all on 
one line and well more than 80 characters wide!) 


From rschulz at sonic.net  Thu Aug 21 14:52:56 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 21 Aug 2008 14:52:56 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808212141.m7LLfNg8003620@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808212104.m7LL4mSe003283@zinc.newtechlaw.com>
	<200808212141.m7LLfNg8003620@zinc.newtechlaw.com>
Message-ID: <200808211452.56402.rschulz@sonic.net>

On Thursday 21 August 2008 14:41, Gerald Rosenberg wrote:
> At 02:04 PM 8/21/2008, Gerald Rosenberg wrote:
> >          tree grammar html;
> >
> >          start_tag : open_tag { if (direction &&
> >$open_tag.node_index > start_node) else if (!direction &&
> >$open_tag.node_index <= start_node)  }?
> >                          ID { $ID.text.equals("someIDString") }?
> >                          ^( n=name ^( a=attr {
> >$n.equals("someNameString") && $a.equals("someAttrString") }? )+ )+
> >                  -> { return $open_tag.node_index } ;
>
> Is there a particular reason that email traffic through the list is
> being forcibly line-wrapped at 80 columns?  (This should be all on
> one line and well more than 80 characters wide!)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-a
>ddress

I wonder where the wrapping happens.

I know I can control whether my mailer wraps, and I use that control
when I want to post things like code with long lines that I don't want
to wrap. Of course, then I have to manually wrap text, like this
paragraph...

                                                                                                   1
         1         2         3         4         5         6         7         8         9         0
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890


So if that's wrapped (it's three lines, each 100 characters long),
then it's the list software. If not, it's up to the sending mail
client.


Randall Schulz

From rschulz at sonic.net  Thu Aug 21 14:56:51 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 21 Aug 2008 14:56:51 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808211452.56402.rschulz@sonic.net>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808212141.m7LLfNg8003620@zinc.newtechlaw.com>
	<200808211452.56402.rschulz@sonic.net>
Message-ID: <200808211456.51775.rschulz@sonic.net>

On Thursday 21 August 2008 14:52, Randall R Schulz wrote:
> On Thursday 21 August 2008 14:41, Gerald Rosenberg wrote:
> > ...
> >
> > Is there a particular reason that email traffic through the list is
> > being forcibly line-wrapped at 80 columns?  (This should be all on
> > one line and well more than 80 characters wide!)
> >
> >
> > ...
>
> I wonder where the wrapping happens.
>
> I know I can control whether my mailer wraps, and I use that control
> when I want to post things like code with long lines that I don't
> want to wrap. Of course, then I have to manually wrap text, like this
> paragraph...
>
> ...
>
> So if that's wrapped (it's three lines, each 100 characters long),
> then it's the list software. If not, it's up to the sending mail
> client.

There we have it. The long lines I sent came through unwrapped. I think 
the problem is on your end.


Randall Schulz

From jaluber at gmx.de  Thu Aug 21 15:00:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 22 Aug 2008 00:00:58 +0200
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <200808211456.51775.rschulz@sonic.net>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<200808212141.m7LLfNg8003620@zinc.newtechlaw.com>	<200808211452.56402.rschulz@sonic.net>
	<200808211456.51775.rschulz@sonic.net>
Message-ID: <48ADE59A.101@gmx.de>

Randall R Schulz schrieb:
> On Thursday 21 August 2008 14:52, Randall R Schulz wrote:
>> On Thursday 21 August 2008 14:41, Gerald Rosenberg wrote:
>>> ...
>>>
>>> Is there a particular reason that email traffic through the list is
>>> being forcibly line-wrapped at 80 columns?  (This should be all on
>>> one line and well more than 80 characters wide!)
>>>
>>>
>>> ...
>> I wonder where the wrapping happens.
>>
>> I know I can control whether my mailer wraps, and I use that control
>> when I want to post things like code with long lines that I don't
>> want to wrap. Of course, then I have to manually wrap text, like this
>> paragraph...
>>
>> ...
>>
>> So if that's wrapped (it's three lines, each 100 characters long),
>> then it's the list software. If not, it's up to the sending mail
>> client.
> 
> There we have it. The long lines I sent came through unwrapped. I think 
> the problem is on your end.

Which client do you use?

Johannes
> 
> 
> Randall Schulz
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From antlr at jazillian.com  Thu Aug 21 15:33:16 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 21 Aug 2008 18:33:16 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<48ADCDFC.7040604@jazillian.com>
	<8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>
Message-ID: <48ADED2C.5000205@jazillian.com>

Terence Parr wrote:
> 
> On Aug 21, 2008, at 1:20 PM, Andy Tripp wrote:
> 
>> Terence Parr wrote:
>>
>>> Yep.  I'm now in favor of manipulating the text instead and
>>> regenerating the AST for the altered position. Tree manipulation is
>>> fraught with danger
>>
>> That seems to me like a very odd thing to say.
>> Manipulating a tree data structure is inherently no more dangerous than
>> manipulating any other kind of data structure.
> 
> Apparently you've never made a cycle in a tree before ;)  
> Recursive/self-similar data structures *ARE* more difficult to alter 
> properly than a List; by hand anyway.
Hmm. I guess I just don't see it.
A List of Person objects doesn't get much harder when the Person class
has a "Person mom" field. Sure, you can accidentally create a cycle, but
you can also accidentally make the same mistake with a List (e.g.
having a "next" pointer in a linked list point somewhere invalid, like
to itself).
  


> For lang X to X, morphing trees 
> is ok but altering language makes each new pass have to match a new kind 
> of tree. 

No, it doesn't. There is no "new kind of tree" - it stays a tree data structure
always. It's the ANTLR treewalker implementation that makes it seem like there's
"something new" going on. The "shape" of the tree is changing, just as any
other data structure's "shape" changes over time. It's the ANTLR treewalker
forcing you to provide a "snapshot" of that evolving shape that's making
it seem like the tree is somehow now of "a new kind of tree".

> lang X to Y is not so good as a result.
> 
>> Now imagine the same program working on a tree rather than a list.
>> Same situation: the program changes the shape of the tree lots of
>> times in lots of ways, and
>> having to specify the "shape" of it after every change would be silly.
>> That's the situation when trying to use treewalkers in a translator.
>> It's just that the silliness isn't apparent until you get beyond
>> just a couple of valid tree "shapes".
> 
> That's why I said I am liking the text rewrite approach; the approach 
> you are using, no?

Yes.

> 
> Ter
> 


From rschulz at sonic.net  Thu Aug 21 15:42:51 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 21 Aug 2008 15:42:51 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <48ADE59A.101@gmx.de>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211456.51775.rschulz@sonic.net> <48ADE59A.101@gmx.de>
Message-ID: <200808211542.51177.rschulz@sonic.net>

On Thursday 21 August 2008 15:00, Johannes Luber wrote:
> Randall R Schulz schrieb:
> > On Thursday 21 August 2008 14:52, Randall R Schulz wrote:
> >> ...
> >
> > There we have it. The long lines I sent came through unwrapped. I
> > think the problem is on your end.
>
> Which client do you use?

You have that information already (in the usually hidden message 
headers):

> Randall R Schulz schrieb:
> User-Agent: KMail/1.9.5


> Johannes


RRS

From rschulz at sonic.net  Thu Aug 21 15:46:42 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 21 Aug 2008 15:46:42 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
Message-ID: <200808211546.42827.rschulz@sonic.net>

On Thursday 21 August 2008 15:38, Gerald Rosenberg wrote:
> At 02:52 PM 8/21/2008, Randall R Schulz wrote:
> >On Thursday 21 August 2008 14:41, Gerald Rosenberg wrote:
> > > At 02:04 PM 8/21/2008, Gerald Rosenberg wrote:
> > >
> > > Is there a particular reason that email traffic through the list
> > > is being forcibly line-wrapped at 80 columns?  (This should be
> > > all on one line and well more than 80 characters wide!)
>
> The two sentences I wrote above to start this thread were on one
> line.  Did you see them on one line or wrapped to three lines?

By the time they reached me, they were wrapped, but I think the fact 
that I can post long lines proves it is not the list software that's 
performing the line wrapping.


> BTW, 
> this message is being sent directly, without involvement of the
> list.  Should be four sentences on just one long line, no hard
> returns.

I think your mail client or something upstream between you and the list 
reflector is wrapping the lines after you hit "send."


> ...
>
> Thanks,
> Gerald


Randall Schulz

From rschulz at sonic.net  Thu Aug 21 15:49:28 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 21 Aug 2008 15:49:28 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
Message-ID: <200808211549.28511.rschulz@sonic.net>

On Thursday 21 August 2008 15:38, Gerald Rosenberg wrote:
> ...
> X-Mailer: QUALCOMM Windows Eudora Version 7.1.0.9

A long time ago I used Eudora, both on the Mac and Windows. I liked it 
pretty well, but I no longer remember what its line-wrapping behavior 
and options were.

It's good to see the Eudora folks have implemented proper threading 
support. The lack of that capability was its major weakness at the time 
I used it.


Randall Schulz

From parrt at cs.usfca.edu  Thu Aug 21 15:51:39 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Aug 2008 15:51:39 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48ADED2C.5000205@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<48ADCDFC.7040604@jazillian.com>
	<8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>
	<48ADED2C.5000205@jazillian.com>
Message-ID: <7694275B-1C81-4189-A59C-7E75302513C3@cs.usfca.edu>


On Aug 21, 2008, at 3:33 PM, Andy Tripp wrote:
>> Apparently you've never made a cycle in a tree before ;)
>> Recursive/self-similar data structures *ARE* more difficult to alter
>> properly than a List; by hand anyway.
> Hmm. I guess I just don't see it.
> A List of Person objects doesn't get much harder when the Person class
> has a "Person mom" field. Sure, you can accidentally create a cycle,  
> but
> you can also accidentally make the same mistake with a List (e.g.
> having a "next" pointer in a linked list point somewhere invalid, like
> to itself).

OnlyIf you have not found a library to implement List, right?

>> For lang X to X, morphing trees
>> is ok but altering language makes each new pass have to match a new  
>> kind
>> of tree.
>
> No, it doesn't. There is no "new kind of tree" -

well, it was assumed you knew I meant different structure. obviously,  
I always make a single node class so all nodes are always of the same  
type.

> it stays a tree data structure
> always. It's the ANTLR treewalker implementation that makes it seem  
> like there's
> "something new" going on.

Actually, you are trying to pretend that there is no new structure.  
But, as you have pointed out to me many times you have to do all sorts  
of weird matching to try the test for the new possibilities. This is a  
new structure. Yes, you are parsing the same kind of raw elements, but  
the structure is different. Structure imparts meaning. If this were  
not true, we would not parse at all. We would simply do "while more  
tokens, consume". That is not recognition or it without recognition  
you can do nothing. If you change the language, you must change the  
code that does the recognition. I believe you simply didn't get my  
assumption.

> The "shape" of the tree is changing, just as any
> other data structure's "shape" changes over time.

Oh, so you did make that assumption. strange.

> It's the ANTLR treewalker
> forcing you to provide a "snapshot" of that evolving shape that's  
> making
> it seem like the tree is somehow now of "a new kind of tree".

Yes. How could it be otherwise, if you are walking the entire tree? If  
you choose to parse only those parts of the tree that have not  
changed, then you don't have to change your recognition rules or  
rewrite rules in your case. In your case, you have to make many many  
passes over the input so you probably just ignore what has been  
rewritten if it is written to a new language. If you need to parse  
things that have been transformed from one language to the other, how  
do you propose to recognize them without rules to handle the new  
constructs?  Andy, I respect the work you have done immensely in  
rewriting, but I just never understand your perspective on tree walking.

Ter

From pat at lanl.gov  Thu Aug 21 16:30:42 2008
From: pat at lanl.gov (Patrick McCormick)
Date: Thu, 21 Aug 2008 17:30:42 -0600
Subject: [antlr-interest] Help with error in C code generation (3.1)
Message-ID: <49DD7295-02AA-40F8-9430-D2D738947707@lanl.gov>

Hi,

I've run into some issues with generating C code under the 3.1 release  
(that is being compiled as part of a C++
project).  The errors I'm seeing are in the generated C code that is  
being compiled as C++ source:

	antlr/SParser.cpp:14982: error: invalid conversion from ?void*? to  
?ANTLR3_BASE_TREE_struct*?

This corresponds to this line in the generated parser:

	 string_literal17_tree = ADAPTOR->create(ADAPTOR, string_literal17);

In looking over the code generation templates it appears that there is  
really only on possibility as to where
this is being generated from.  Here are the possible spots (the first  
one clearly missing a cast like the others):

	ASTParser.stg:<label>_tree = ADAPTOR->create(ADAPTOR, <label>);
	ASTParser.stg:<label>_tree = (<ASTLabelType>)(ADAPTOR- 
 >create(ADAPTOR, <label>));
	ASTParser.stg:<label>_tree = (<ASTLabelType>)(ADAPTOR- 
 >create(ADAPTOR, <label>));

I'm assuming adding the cast would fix this but I haven't been able to  
rebuild ANTLR successfully
from the source distribution to test it out.  I'm running under MacOS  
X 10.5.4 with XCode 3.1 installed.
I'm a newbie to both Java and ANTLR so any help would be  
appreciated.   In particular, I'd like to know how
I go about rebuilding the source distribution -- I'm using ant but get  
hundreds of errors during the build.

Thanks for any help you can provide,

--Patrick





From gerald at certiv.net  Thu Aug 21 17:55:45 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 21 Aug 2008 17:55:45 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <200808211549.28511.rschulz@sonic.net>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
Message-ID: <200808220058.m7M0wJLp004814@zinc.newtechlaw.com>

At 03:49 PM 8/21/2008, Randall R Schulz wrote:
>On Thursday 21 August 2008 15:38, Gerald Rosenberg wrote:
> > ...
> > X-Mailer: QUALCOMM Windows Eudora Version 7.1.0.9
>
>It's good to see the Eudora folks have implemented proper threading
>support. The lack of that capability was its major weakness at the time
>I used it.


Thanks for the help.

Long story short is that there is a bug in Antlr's MailMan 2.1.9 that 
messes with the content-type/format-flowed.  MailMan 2.1.10+ is 
supposedly fixed (current version is 
2.1.11.) 
http://markmail.org/message/v23f63l5nrdc2mko#query:mailman%20content-type+page:1+mid:tdew7bgbv22s4w32+state:results

Seems that on update to IE7/SP3 (installed a week ago), Eudora 
(vintage 2006) has now become particularly sensitive.

If I am the only one seeing the problem, then it looks like I am in 
the market for a new email client.



From anders at globe-trotter.us  Thu Aug 21 18:41:34 2008
From: anders at globe-trotter.us (=?iso-8859-1?Q?Anders=20Karlsson?=)
Date: Fri, 22 Aug 2008 09:41:34 +0800
Subject: [antlr-interest] =?iso-8859-1?q?n00b_Question?=
Message-ID: <20080822014134.29719.qmail@station198.com>

Another n00b question :)

Given this grammar ( to handle ini-files with statements like A=1 and B="adds sadsa"):

prog : stat+;

stat
	:	expr (NEWLINE | EOF)
	;

expr
	:	IDENTIFIER '='^ VALUE 
	;

// lex rules

IDENTIFIER
    :	LETTER (LETTER|DIGIT)*
    ;

// here seems to be a problem

VALUE
    : '"' (LETTER|DIGIT|WS)* '"'
    | (LETTER|DIGIT)*                        
    ;
	
fragment
LETTER
    :	'$'  |	'A'..'Z' | 'a'..'z' | '_' ; 	

fragment
DIGIT : '0'..'9';

fragment
NEWLINE	: '\r'? | '\n' { $channel=HIDDEN; } ;

fragment
WS	: ' '|'\t' { $channel=HIDDEN; } ;

(removed some actions for clarity)

I think there seems to be some problem with the VALUE rule
I wish is to accept both A=1 and A="1" in an ini-file
When VALUE contains the 2nd subrule ANTLRWorks doesn't
work in the interpreter, if I comment that rule it works fine but
then I am restricted to values having quotation marks

I don't quite understand why it doesn't work.

Any ideas?
TIA
Anders.

From jimi at temporal-wave.com  Thu Aug 21 20:08:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Aug 2008 20:08:50 -0700
Subject: [antlr-interest] Help with error in C code generation (3.1)
In-Reply-To: <49DD7295-02AA-40F8-9430-D2D738947707@lanl.gov>
References: <49DD7295-02AA-40F8-9430-D2D738947707@lanl.gov>
Message-ID: <1219374530.15169.25.camel@jimi>

On Thu, 2008-08-21 at 17:30 -0600, Patrick McCormick wrote:

> Hi,
> 

Yes - someone else spotted that two - I have checked in a fix so you can
pick it up from the next snapshot build as ANTLR 3.1.1. 

Here is a hack script that I use to build on Linux:

#! /bin/bash

# Local custom tool that builds ANTLR 3.x and rejars it etc. 
#

# Your local copy of ANTLR src
#
pushd ~/antlrsrc/code/antlr/main/src/org/antlr/tool

# Compile the grammar files
#
java antlr.Tool antlr.g 
java antlr.Tool antlr.print.g 
java antlr.Tool assign.types.g 
java antlr.Tool define.g 
java antlr.Tool buildnfa.g 
cp ANTLRTokenTypes.txt ../codegen
cd ../codegen
java antlr.Tool codegen.g 

cd ~/antlrsrc/code/antlr/main/runtime/Java/src

# Build all the java shit <that's this email canned by stupid filters>
#
javac -cp "$CLASSPATH" -d .  org/antlr/runtime/*.java
org/antlr/runtime/*/*.java

# Build the runtime only jar, again, we don't worry about the extra
stuff for now
#
rm /var/tw/jars/ANTLRRuntime.jar
jar cf /var/tw/jars/ANTLRRuntime.jar org/antlr/runtime

cd ~/antlrsrc/code/antlr/main/src
javac -cp "$CLASSPATH" -d . org/antlr/Tool.java org/antlr/*/*.java

# Build the tool jar, not worrying about all the extra stuff that does
not go in the jar
# as this is just for my own testing.
#
rm /var/tw/jars/ANTLRTool.jar
jar cf /var/tw/jars/ANTLRTool.jar \
        org/antlr/Tool.class \
        org/antlr/analysis \
        org/antlr/codegen \
        org/antlr/misc \
        org/antlr/tool

# Go back to whereever we were

popd

Jim



> I've run into some issues with generating C code under the 3.1 release  
> (that is being compiled as part of a C++
> project).  The errors I'm seeing are in the generated C code that is  
> being compiled as C++ source:
> 
> 	antlr/SParser.cpp:14982: error: invalid conversion from ?void*? to  
> ?ANTLR3_BASE_TREE_struct*?
> 
> This corresponds to this line in the generated parser:
> 
> 	 string_literal17_tree = ADAPTOR->create(ADAPTOR, string_literal17);
> 
> In looking over the code generation templates it appears that there is  
> really only on possibility as to where
> this is being generated from.  Here are the possible spots (the first  
> one clearly missing a cast like the others):
> 
> 	ASTParser.stg:<label>_tree = ADAPTOR->create(ADAPTOR, <label>);
> 	ASTParser.stg:<label>_tree = (<ASTLabelType>)(ADAPTOR- 
>  >create(ADAPTOR, <label>));
> 	ASTParser.stg:<label>_tree = (<ASTLabelType>)(ADAPTOR- 
>  >create(ADAPTOR, <label>));
> 
> I'm assuming adding the cast would fix this but I haven't been able to  
> rebuild ANTLR successfully
> from the source distribution to test it out.  I'm running under MacOS  
> X 10.5.4 with XCode 3.1 installed.
> I'm a newbie to both Java and ANTLR so any help would be  
> appreciated.   In particular, I'd like to know how
> I go about rebuilding the source distribution -- I'm using ant but get  
> hundreds of errors during the build.
> 
> Thanks for any help you can provide,
> 
> --Patrick
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080821/e7bae2ba/attachment.html 

From hendrik at topoi.pooq.com  Thu Aug 21 08:38:41 2008
From: hendrik at topoi.pooq.com (Hendrik Boom)
Date: Thu, 21 Aug 2008 15:38:41 +0000 (UTC)
Subject: [antlr-interest] How to access returned objects
Message-ID: <g8k260$khl$1@ger.gmane.org>

I have a rule 

body returns [ std::string t9 ]
    : t9:term7 ( DOLLAR w term7 {t9 += "$" + t;} )*;

But I can't figure out hos to access the returned value in a rule that
calls body.

I'm using
   ANTLR Parser Generator   Version 2.7.6 (20070206)   1989-2005,
which is the version in Debian etch.

-- hendrik


From yuri at tijerino.net  Thu Aug 21 22:11:42 2008
From: yuri at tijerino.net (Yuri Tijerino)
Date: Fri, 22 Aug 2008 14:11:42 +0900
Subject: [antlr-interest] Questions about gUnit
Message-ID: <48AE4A8D.3080203@tijerino.net>

Hi,

I have a couple of questions about gUnit.  One is posted at: 
http://www.jguru.com/forums/view.jsp?EID=1368630

the other one is as follows:

How do you run gUnit tests on rules that take arguments such as:

rule [type arg]
    :
       << some code that uses arg >>
    ;

I tried this by including the rule as follows in the 
GrammarName.testsuite file

rule:
"test1" OK

I also tried:

rule [arg]:
"test1" OK

and

rule(arg):
"test1" OK

But java complains that  GrammarNameParser.rule() does not exists as 
follows:

java.lang.NoSuchMethodException: GrammarNameParser.rule()

If I comment out the argument in the grammar file as follows:


rule //[type arg]
    :
       << some code that does not use arg >>
    ;

then the tests seem to go fine.

What is the correct way to run tests on rules with arguments?

Yuri Tijerino

From r_reitzi at cs.uni-kl.de  Fri Aug 22 01:45:40 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Fri, 22 Aug 2008 10:45:40 +0200
Subject: [antlr-interest] Need for regular FAQ mails (was:
	Re:	unsubscribe request)
In-Reply-To: <47c890dc0808201631h407cb14fi176f2291bad406b2@mail.gmail.com>
References: <B0DE8B66453D0F4AA67D2A150934999B048C0D8258@ex01.dbsophicHQ.com>
	<B0DE8B66453D0F4AA67D2A150934999B048C0D832E@ex01.dbsophicHQ.com>
	<BLU105-W26132229157BDDE9D56AEDE56F0@phx.gbl>
	<47c890dc0808171132i119b7448n592cb0c5e0465d46@mail.gmail.com>
	<BLU105-W2400774F4CF5B46F7DC090E56F0@phx.gbl>
	<20080817200109.81F7211EC2E@www.antlr.org>
	<6edc6c380808171306l6306d7abi5f0c6084e9f3449d@mail.gmail.com>
	<6ECEF103-1753-46EC-8163-BDF9CF79C47E@classdump.org>
	<47c890dc0808171516g2ff58eb6g2fd2f39429ea9f69@mail.gmail.com>
	<B2EF9AFF-0B09-41D0-AFC3-EE168EA5115E@cs.usfca.edu>
	<47c890dc0808201631h407cb14fi176f2291bad406b2@mail.gmail.com>
Message-ID: <20080822104540.343331j6rms108o4@horde.verrech.net>

No.

But I would appreciate an optical separator like suggested before.

Regards

Raphael

"Chris Rebert" <cvrebert at gmail.com> wrote (Thu Aug 21 01:31:17 2008):

> Very good, but does anyone know how to have "your-email-address"
> substituted with the subscriber's actual email?
> - Chris
>
> ========
> Follow the path of the Iguana...
> Rebertia: http://rebertia.com
> Blog: http://blog.rebertia.com
>
>
>
> On Mon, Aug 18, 2008 at 11:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> JustTried to append... let's see what this does in this test message.
>> Ter
>> On Aug 17, 2008, at 3:16 PM, Chris Rebert wrote:
>>
>>> Well, there is the monthly subscription reminder that Mailman sends
>>> out which usually has this info, so unless it's been turned off by the
>>> admins, people should be getting that on a regular interval.
>>>
>>> However, for the Python mailinglists I'm subscribed to, every message
>>> has a footer appended with the list info, for example:
>>> Python-3000 mailing list
>>> Python-3000 at python.org
>>> http://mail.python.org/mailman/listinfo/python-3000
>>> Unsubscribe:  
>>> http://mail.python.org/mailman/options/python-3000/MY-EMAIL-ADDRESS-REDACTED
>>>
>>> Perhaps enabling the Mailman option for this should be considered?
>>>
>>> - Chris
>>  to
>> http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:  
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:  
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080822/26df5394/attachment.bin 

From r.a.niemeijer at tue.nl  Fri Aug 22 03:50:56 2008
From: r.a.niemeijer at tue.nl (Niemeijer, R.A.)
Date: Fri, 22 Aug 2008 12:50:56 +0200
Subject: [antlr-interest] Re : Re : How to get a list of all
	validoptions for the next token?
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1013DB98E@navamane001.ad.internal.corp>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
	<FF993752CB890B4EB591BE5450C37BF1013DB98E@navamane001.ad.internal.corp>
Message-ID: <A8F615EE446C9B4D837FB67447C0D997025D07A2@EXCHANGE3.campus.tue.nl>

I'm afraid that unless somebody else offers to help me I'm a bit stuck at the moment. As Kay R?pke said: "right now i don't see any way of getting at the necessary information, without altering the codegen templates.". By now I've more or less learned how to work with Antlr, but I'm afraid hacking the way Antlr itself works is still a bit beyond me. So if anyone wishes to implement this I'd be very grateful, but otherwise I fear I will have to abandon the idea.

-----Original Message-----
From: Edwards, Waverly [mailto:Waverly.Edwards at genesys.com] 
Sent: donderdag 21 augustus 2008 23:53
To: Niemeijer, R.A.
Subject: RE: [antlr-interest] Re : Re : How to get a list of all validoptions for the next token?


Mr. Niemeijer,

If you come up with a solution would you mind sharing it.  I'm am quite curious to see
a model of this.  In looking at the follow sets source it seems the follow sets don't
show all of the possibilities but rather the ones that are most likely to occur, a local
follow set versus a global set.  I played with extracting this information about a month
ago with very limited success.  It involved the manual extraction of the bitset from the
code source which at the time was acceptable, since my choices were static, not dynamic
like yours.  I would much rather have tested something that didn't involve copying bitsets
if I made coding changes.


I would be interested in what you come up with.


Thank you very much for your time,


W.

Waverly Edwards

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Niemeijer, R.A.
Sent: Friday, August 15, 2008 5:29 AM
To: Stanislas Rusinsky; Thomas Brandon
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Re : Re : How to get a list of all validoptions for the next token?

Right, I think I've localized all the data I need. All you need is a bit of reflection. All the bitsets that determine the possible next tokens are called FOLLOW_{0}_in_{1}{2}, where {0} is the previous token (can be gotten from the Parser's state.following variable), {1} is the name of the method the NoViableAltException is generated in (use something like MethodBase.GetCurrentMethod().Name) and {2} is un unimportant 3-digit number. So get the list of all Bitsets of the Parser via reflection and choose the one that starts with FOLLOW_{0}_in_{1}.

However, in order to be able to use this I have to insert this code at the point the NoViableAltException is thrown so I can dump the list of tokens in its grammarDecisionDescription field. That means overriding all the bits of code that look like this:

NoViableAltException nvae_d1s2 =
    new NoViableAltException("", 1, 2, input);

    throw nvae_d1s2;

Now obviously this can be done manually, but then you'd lose it after every grammar generation. So my question: is there a way to override this part of the generated grammar?

Thanks.

-----Original Message-----
From: Niemeijer, R.A. 
Sent: donderdag 14 augustus 2008 17:39
To: 'Stanislas Rusinsky'; Thomas Brandon
Cc: antlr-interest at antlr.org
Subject: RE: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?

The FOLLOW_ variables do indeed seem to contain all the data I need. I'm going to have a look at it tomorrow to see if I can convert to bitset data to something more useful to me.

-----Original Message-----
From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr] 
Sent: woensdag 13 augustus 2008 19:27
To: Thomas Brandon; Niemeijer, R.A.
Cc: antlr-interest at antlr.org
Subject: Re : [antlr-interest] Re : How to get a list of all valid options for the next token?

oops, when making such attention mistakes I feel like hiding under the table :) they are LL of course

Mr. Niemeijer, could you please keep me informed if you reach a satisfactory solution with the "FOLLOW_" hint? I am interested too in that topic.

Stanislas.



----- Message d'origine ----
De : Thomas Brandon <tbrandonau at gmail.com>
? : "Niemeijer, R.A." <r.a.niemeijer at tue.nl>
Cc : antlr-interest at antlr.org
Envoy? le : Mercredi, 13 Ao?t 2008, 16h32mn 28s
Objet : Re: [antlr-interest] Re : How to get a list of all valid options for the next token?

ANTLR grammars are LL not LR, but they are recursive descent and thus
don't use an explicit internal representation of the grammar to
control parse decisions. They do however have follow sets available at
parse time, used for error recovery and reporting. See the various
FOLLOW_ bitsets in generated parsers and the computeErrorRecoverySet
and computeContextSensitiveRuleFOLLOW methods in BaseRecognizer. You
may be able to get what you need from them. Though as they only
support a limited purpose they may collapse alternatives you need to
keep distinct.
Another option would be to create a custom generator that would then
have the richer information ANTLR uses at generation time.

Tom.

On Wed, Aug 13, 2008 at 10:48 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> Well, so much for that idea then :(
>
> Guess the only way to do this then is to indeed duplicate the knowledge
> inherent in the parser to a different checker. Oh well.
>
>
>
> From: Stanislas Rusinsky [mailto:rusinskystanislas at yahoo.fr]
> Sent: woensdag 13 augustus 2008 14:42
> To: Niemeijer, R.A.; Foust
> Cc: antlr-interest at antlr.org
> Subject: Re : [antlr-interest] How to get a list of all valid options for
> the next token?
>
>
>
> I have found one series of 3 articles that might be interesting for such
> situation:
>
> http://www.ibm.com/developerworks/views/opensource/libraryview.jsp?search_by=Create+commercial-quality+eclipse+ide
>
> But I don't know if you could achieve that easily (if someone knows a way or
> tool I would be interested too in knowing it). ANTLR parsers generated from
> grammars are not 'self-aware' if I understood correctly: they are LR parsers
> but don't hold as such a graph based on the grammar that could determine the
> next allowed token.
>
> Yours sincerely,
>
> Stanislas Herman.
>



      _____________________________________________________________________________ 
Envoyez avec Yahoo! Mail. Une boite mail plus intelligente http://mail.yahoo.fr

From kroepke at classdump.org  Fri Aug 22 05:48:27 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Fri, 22 Aug 2008 14:48:27 +0200
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
	<200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
Message-ID: <C52EDB37-7723-45C2-8B89-9019DF095438@classdump.org>


On Aug 22, 2008, at 2:55 AM, Gerald Rosenberg wrote:

> If I am the only one seeing the problem, then it looks like I am in
> the market for a new email client.


You're not the only one :)

I'm actually in favor of fixing mailman, since I'm not in the market  
for yet-another-MUA.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From jaluber at gmx.de  Fri Aug 22 06:58:13 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 22 Aug 2008 15:58:13 +0200
Subject: [antlr-interest] n00b Question
In-Reply-To: <20080822014134.29719.qmail@station198.com>
References: <20080822014134.29719.qmail@station198.com>
Message-ID: <48AEC5F5.80304@gmx.de>

Anders Karlsson schrieb:
> Another n00b question :)
> 
> Given this grammar ( to handle ini-files with statements like A=1 and B="adds sadsa"):

There are still some problems left.
> 
> prog : stat+;
> 
> stat
> 	:	expr (NEWLINE | EOF)
> 	;

What happens, when the last character is a newline? Or if there are
blank lines?

stat
	:	expr (NEWLINE | EOF)+
	;

should take care of this problem. Furthermore, fragment rules shouldn't
be called from parser rules because parsers expect tokens. That it works
for you may be caused by the fact that NEWLNIE is an hidden channel.
Considering that you DO check for its presence this action is nonsensical.
> 
> expr
> 	:	IDENTIFIER '='^ VALUE 
> 	;
> 
> // lex rules
> 
> IDENTIFIER
>     :	LETTER (LETTER|DIGIT)*
>     ;
> 
> // here seems to be a problem
> 
> VALUE
>     : '"' (LETTER|DIGIT|WS)* '"'
>     | (LETTER|DIGIT)*                        
>     ;
> 	
> fragment
> LETTER
>     :	'$'  |	'A'..'Z' | 'a'..'z' | '_' ; 	
> 
> fragment
> DIGIT : '0'..'9';
> 
> fragment
> NEWLINE	: '\r'? | '\n' { $channel=HIDDEN; } ;

With the changes you should use the following definition:

NEWLINE	: '\r' | '\n';

Note that I removed the '?'. In conjunction with the start rule all '\r'
and '\n' are recognized. Your original version would have never
recognized '\r\n' as intended.

Johannes
> 
> fragment
> WS	: ' '|'\t' { $channel=HIDDEN; } ;
> 
> (removed some actions for clarity)
> 
> I think there seems to be some problem with the VALUE rule
> I wish is to accept both A=1 and A="1" in an ini-file
> When VALUE contains the 2nd subrule ANTLRWorks doesn't
> work in the interpreter, if I comment that rule it works fine but
> then I am restricted to values having quotation marks
> 
> I don't quite understand why it doesn't work.
> 
> Any ideas?
> TIA
> Anders.
> 


From Dennis.Benzinger at gmx.net  Fri Aug 22 10:26:18 2008
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Fri, 22 Aug 2008 19:26:18 +0200
Subject: [antlr-interest] new book organization question
In-Reply-To: <C099C2EC-4AC4-48EE-BEF0-50DF950F54D5@cs.usfca.edu>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
	<48ABBE51.3010403@gmx.net>
	<C099C2EC-4AC4-48EE-BEF0-50DF950F54D5@cs.usfca.edu>
Message-ID: <48AEF6BA.90609@gmx.net>

Am 20.08.2008 20:50, Terence Parr schrieb:
> On Aug 19, 2008, at 11:48 PM, Dennis Benzinger wrote:
>>> I. Introduction
>>>  basic architectures, describe application categories,
>>>  introduce language implementation ideas.
>>>
>>> II. Generators (before readers because it's easier to understand)
>>>
>>> III. Readers (parsing, introduces all of the intermediate data
>>> structures too)
>>> [...]
>>
>> I'd prefer to have the Readers part before the Generators part. You
>> first have to parse something before you can generate something out of
>> it.
> 
> Well,That was an interesting paradox I had to solve. basically, I  
> realized that explaining how to print out "3.152e-13" is much easier  
> than explaining how to recognize it properly. but, how can I talk  
> about generators without talking about readers first. It turns out, we  
> can do lots of things. The examples I chose include object to  
> relational mapping (uses reflection) and a vector math to postscript  
> translator that turns the printer into a vector math interpreter. At  
> first, I have a set of handbuilt objects to represent operations. A  
> GUI or something else could easily build these without resorting to a  
> reader. Then I morph that into more of a standard tree structure and  
> show how to use templates and so on to generate the appropriate  
> postscript.
> 
> Then when I do readers, it will start to fall into place. :) Do you  
> think that will work?

As I'm the only one who complained I think it will work :)

>> And because you wrote that "each part will use techniques and
>> patterns identified in the previous parts" I find it quite confusing  
>> to
>> have Readers after Generators.
> 
> Agreed if you look just at the table of contents. You think my  
> approach will work as explained above?
> [...]

Yes. And I'll just start reading the book at the Readers part.


Bye,
Dennis Benzinger

From antlr at jazillian.com  Fri Aug 22 11:28:17 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 22 Aug 2008 14:28:17 -0400
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <7694275B-1C81-4189-A59C-7E75302513C3@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<48ADCDFC.7040604@jazillian.com>
	<8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>
	<48ADED2C.5000205@jazillian.com>
	<7694275B-1C81-4189-A59C-7E75302513C3@cs.usfca.edu>
Message-ID: <48AF0541.8000501@jazillian.com>

Terence Parr wrote:
> 
> On Aug 21, 2008, at 3:33 PM, Andy Tripp wrote:
>>> Apparently you've never made a cycle in a tree before ;)
>>> Recursive/self-similar data structures *ARE* more difficult to alter
>>> properly than a List; by hand anyway.
>> Hmm. I guess I just don't see it.
>> A List of Person objects doesn't get much harder when the Person class
>> has a "Person mom" field. Sure, you can accidentally create a cycle, but
>> you can also accidentally make the same mistake with a List (e.g.
>> having a "next" pointer in a linked list point somewhere invalid, like
>> to itself).
> 
> OnlyIf you have not found a library to implement List, right?

Right, I'm assuming we have a library implementation of List and Tree.
And I do appreciate your point that it's hard (or impossible) to mess up
a List while using a working implementation of it, but you can easily mess up a 
Tree while using a working implementation of it.

> 
>>> For lang X to X, morphing trees
>>> is ok but altering language makes each new pass have to match a new kind
>>> of tree.
>>
>> No, it doesn't. There is no "new kind of tree" -
> 
> well, it was assumed you knew I meant different structure. obviously, I 
> always make a single node class so all nodes are always of the same type.

So a tree has a "different structure" when you add, delete, or change a node?
Then a list also has a "different structure" when you add, delete, or change
an item. I wouldn't use that terminology - I'd say each is just a data 
structure, which of course has its contents change over time.

I feel like you're saying a tree "changes structure" when its data changes,
whereas you wouldn't say the same for a list (for example). And I think you
say that because you're used to a tool (ANTLR treewalker) where you actually
specify a trees "exact structure". But you don't have a similar tool for a
list.

Suppose I worked every day with a tool where I specify a List "structure"
like this:
     FAMILY = { MOM [DAD] CHILDREN* }
...and then I said "it's inherently dangerous to change the structure of
a list - e.g. moving the DAD item to be the first item in the list".
You'd look at me funny and say "the list is just a data structure, Andy.
Having its contents change is what it *does* for a living. There's
nothing dangerous about it."  I think that's what's happening here, but
with trees rather than lists.

> 
>> it stays a tree data structure
>> always. It's the ANTLR treewalker implementation that makes it seem 
>> like there's
>> "something new" going on.
> 
> Actually, you are trying to pretend that there is no new structure. But, 
> as you have pointed out to me many times you have to do all sorts of 
> weird matching to try the test for the new possibilities. This is a new 
> structure. Yes, you are parsing the same kind of raw elements, but the 
> structure is different. Structure imparts meaning. If this were not 
> true, we would not parse at all. We would simply do "while more tokens, 
> consume". That is not recognition or it without recognition you can do 
> nothing. If you change the language, you must change the code that does 
> the recognition. I believe you simply didn't get my assumption.
> 
>> The "shape" of the tree is changing, just as any
>> other data structure's "shape" changes over time.
> 
> Oh, so you did make that assumption. strange.

Yes, tree nodes contents change and new ones are added and deleted.
Just as for a list. 

> 
>> It's the ANTLR treewalker
>> forcing you to provide a "snapshot" of that evolving shape that's making
>> it seem like the tree is somehow now of "a new kind of tree".
> 
> Yes. How could it be otherwise, if you are walking the entire tree? 

Easy. Just don't use a treewalker, and do it by hand.
For example, my Java pretty printer
(http://www.jazillian.com/antlr/emitter.html)
processes the tree, without ever depending on the tree's overall structure.
Each node type is handled in isolation.
There is no "snapshot" of the "AST shape". 
It does not know or care that at the top level, a Java file contains a class
or interface.

> If 
> you choose to parse only those parts of the tree that have not changed, 
> then you don't have to change your recognition rules or rewrite rules in 
> your case. In your case, you have to make many many passes over the 
> input so you probably just ignore what has been rewritten if it is 
> written to a new language. 

> If you need to parse things that have been 
> transformed from one language to the other, how do you propose to 
> recognize them without rules to handle the new constructs?  

You need "rules", I just don't want those "rules" to have to know the 
overall tree structure. That's how my translator works (though with
token streams, not ASTs, but none of my "rules" depend on the overall
structure of a C, Java, or C/Java hybrid program).


> Andy, I 
> respect the work you have done immensely in rewriting, but I just never 
> understand your perspective on tree walking.

Let me try again then. Suppose in language "FROM" you can declare multiple variables:
int i, j;
...but in language "TO", you can't:
int i;
int j;

Let's start with the simple case: The FROM and TO languages 
are completely identical except for this one case.
To build your simple translator, you should *not* have to specify the whole AST structure.
Instead, you should be able to call some existing FROM parser, get an AST, and then do
something like:

void convert(AST ast) {
  if (ast.type == DECL && ast.getNumChildren() > 1) {
    ast.getParent().removeChild(ast);    // remove the "int i, j;" node
    for (AST child: ast.getChildren()) { 
      AST newChild = new AST(ast.type);  // create new nodes for i and j
      newChild.setChildren(child);
      ast.getParent().addChild(newChild); // add "int i;" and "int j;" nodes
    }
  }
}

Here, we've written a single rule that doesn't depend on any "structure" of the tree
other than the tiny part of the tree that it cares about. And the only
"framework" or "scaffolding" needed is this:

void walk(AST ast) {
  convert(ast);
  for (AST child: ast.getChildren()) {
    walk(child);
  }
}


So we're done. We got this working without any knowledge of overall AST structure,
and very few lines of code in just a single language. With a treewalker, we'd
have to know the overall structure (the .g file), learn another language
(ANTLR), and we'd *still* end up either writing the convert() code above, or
doing the equivalent in ANTLR or StringTemplate language.

You might be thinking "but we already *have* the overall AST structure -
just start with the .g file from the parser and make a couple minor changes.
That's a bad approach, for the same reason that copying a 200-line method
and making a couple minor changes, is bad.

For the complex case, assume that FROM and TO are quite different, and we'll
need a couple hundred "rules" like this one. We sure don't want to specify
the "structure" of the AST at the start of each of these rules. 

There is one key assumption here: it won't work to have a single (or even a just a few)
passes. If we could do it all in a single pass, great - use a treewalker, and just
put a bit of code at each key place in the .g file. But in practice, there is not
just one or two things that need to be done at each node type, there are many.
Off the top of my head, translating C++ to Java, have a variable declaration
node type "DECL", we have to deal with:

* access modifiers ("public", etc) are at higher level in C++
* dealing with C++ "friend" affects access modifiers
* "const" may (or may not) need to change to "final"
* C++ primitives are not guaranteed to be initialized, Java's are.
* C++ non-primitives can have space allocated (Person p[20]), but not in Java
* Java compiler checks (using control flow analysis) for ininitialized variables
* possibly change C int type to Java boolean
* convert between C primitives and Java primitives (based on architecture)
* possibly replace "char*" with "String"
* if the declaration is a main() parameter ("argv"), you may do extra work
* C++ allows "static" within a method, Java doesn't

...and so on. That's just off the top of my head, there are probably 2-3 times that
many "rules" that involve a DECL node in an AST when doing C++ to Java.
So, in the treewalker approach,
somewhere in our C++.g, we'd have one place where we say
"while walking this tree, when we come to a DECL node, call my code to do all that work":

    varDef
    :   #(DECL modifiers typeSpec methodHead (slist)?)
        { handleAllCasesRelatedToVariableDeclarations(); }
    ;

And now we write the handleAllCasesRelatedToVariableDeclarations() method, which
is probably thousands of lines. Was there any advantage to having this call
embedded in a .g file? No. It would have worked just as nicely to just use
a walk() "framework" shown above, or the standard Visitor pattern. Was there a
disadvantage? Yes. While writing all that code, you're surely going to find
that you really want to have multiple passes (e.g. let's process all typedefs
in some other rule first, so I don't have to deal with them here).
And multiple passes are going to be a pain with a treewalker, because you've
got to specify a .g for each pass.

In summary: for the simple case, the treewalker was overkill, making us specify
the entire AST structure when all we cared about was a tiny portion of it.
For the complex case, the treewalker was no help, providing a "jumping off point"
to the code that does all the work. As a "framework", it has no advantage
over the simpler walk() or Visitor Pattern approach, and has the disadvantage of
again relying on the overall AST structure. Plus, specifying a .g file
for each pass when we have many passes will be a real pain.

I hope that helps you see where I'm coming from.

I don't mean to put down your ANTLR implementation of treewalkers, or their use in general.
I'm mainly saying to those newbies who post "how do I change my AST?" the simple answer:
it's a tree data structure - do what you were taught in CS101. And to anyone
considering a full translator from one high-level language to another: beware
the treewalker approach.

Thanks for listening and your support.
There is a slight chance that I'm making a valid point here somewhere :)
Andy

p.s. ...in my opinion, Jim ;)

From jaluber at gmx.de  Fri Aug 22 13:09:59 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 22 Aug 2008 22:09:59 +0200
Subject: [antlr-interest] new book organization question
In-Reply-To: <48AEF6BA.90609@gmx.net>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>	<48ABBE51.3010403@gmx.net>	<C099C2EC-4AC4-48EE-BEF0-50DF950F54D5@cs.usfca.edu>
	<48AEF6BA.90609@gmx.net>
Message-ID: <48AF1D17.8070404@gmx.de>

Dennis Benzinger schrieb:
> Am 20.08.2008 20:50, Terence Parr schrieb:
>> On Aug 19, 2008, at 11:48 PM, Dennis Benzinger wrote:
>>>> I. Introduction
>>>>  basic architectures, describe application categories,
>>>>  introduce language implementation ideas.
>>>>
>>>> II. Generators (before readers because it's easier to understand)
>>>>
>>>> III. Readers (parsing, introduces all of the intermediate data
>>>> structures too)
>>>> [...]
>>> I'd prefer to have the Readers part before the Generators part. You
>>> first have to parse something before you can generate something out of
>>> it.
>> Well,That was an interesting paradox I had to solve. basically, I  
>> realized that explaining how to print out "3.152e-13" is much easier  
>> than explaining how to recognize it properly. but, how can I talk  
>> about generators without talking about readers first. It turns out, we  
>> can do lots of things. The examples I chose include object to  
>> relational mapping (uses reflection) and a vector math to postscript  
>> translator that turns the printer into a vector math interpreter. At  
>> first, I have a set of handbuilt objects to represent operations. A  
>> GUI or something else could easily build these without resorting to a  
>> reader. Then I morph that into more of a standard tree structure and  
>> show how to use templates and so on to generate the appropriate  
>> postscript.
>>
>> Then when I do readers, it will start to fall into place. :) Do you  
>> think that will work?
> 
> As I'm the only one who complained I think it will work :)
> 
>>> And because you wrote that "each part will use techniques and
>>> patterns identified in the previous parts" I find it quite confusing  
>>> to
>>> have Readers after Generators.
>> Agreed if you look just at the table of contents. You think my  
>> approach will work as explained above?
>> [...]
> 
> Yes. And I'll just start reading the book at the Readers part.

Heretic! Ter's books have to be read from front to cover! :P

Johannes
> 
> 
> Bye,
> Dennis Benzinger
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From asoka250 at gmail.com  Fri Aug 22 13:31:36 2008
From: asoka250 at gmail.com (ASHOK REDDY)
Date: Fri, 22 Aug 2008 15:31:36 -0500
Subject: [antlr-interest] Problem while compiling grammar file - regd.
Message-ID: <7b0a1e4b0808221331s79375567w904b03a5ccd9085b@mail.gmail.com>

Hello List,

I am getting the following error  "Unexpected token:lexer", in grammar
generated file, in which the actual grammar file is part of a larger maven
project. The compilation is done using antlr v3.0.1 runtime, which is
included in configuration of the maven project. The error shows up in DOT_.g
file, generated from DOT.g file. Any help is appreciated on  how to  debug
the error. The list is awesome in teaching the How to's of Antlr, which is
otherwise a difficult tool to get along with. Attached is the DOT file and
DOT_.g file generated from it.
-- 
Regards,
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu
(http://www.cis.ksu.edu/~ashokv)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080822/c110b532/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DOT.g
Type: application/octet-stream
Size: 2714 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080822/c110b532/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DOT__.g
Type: application/octet-stream
Size: 3490 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080822/c110b532/attachment-0001.obj 

From gerald at certiv.net  Fri Aug 22 13:31:28 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 22 Aug 2008 13:31:28 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>
	<48A5B941.8020202@jazillian.com> <200808160333.01241.rulatir@wp.pl>
	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>
	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>
	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
Message-ID: <200808222031.m7MKVZCc012201@zinc.newtechlaw.com>

At 11:07 AM 8/21/2008, Terence Parr wrote:

>Yep.  I'm now in favor of manipulating the text instead and
>regenerating the AST for the altered position. Tree manipulation is
>fraught with danger

parse text -> new AST -> ... -> scan AST -> modify text -> repeat

Avoids rewrites entirely.  Nice . . . except where other 
tools/elements are dependent on the AST instance.

For example, in Eclipse, the Java AST is used as the model for the 
code outline view, as the basis for the dependency analysis, 
incremental compilation, and on-the-fly error marking, is referenced 
from the code assist and JavaDoc excerpt resolvers, etc.  Incremental 
AST changes are propagated to listeners with the dependent 
tools/elements figuring out what they need to do to maintain 
integrity and update the display as needed.

If the AST instance is invalidated, say by a complete replacement, 
everything gets recomputed, which is non-trivial and often noticeable 
at the UI level.  Maybe could use an AST delta-detect/delta-apply 
step rather than completely replacing the AST?  Still, a lot of 
overhead if you have to do it in response to every interactive change 
made to the source text.

Even where fraught with danger, sometimes mucking around in the AST 
is the better (or least bad) thing to do.

>>For ad-hoc AST changes, the better approach, at least conceptually,
>>is to implement a low-level structural modification API  with
>>methods to "find" a node based on parameter values, and to similarly
>>create, copy, insert and delete nodes.
>
>Sort of like my TreeWizard that I started.

TreeWizard addresses the situation where you don't have or don't want 
to be bothered with a formal model definition.  The API enables the 
programmer to build-up and manipulate a tree: any tree structure and 
any manipulation, including really bad ones, are allowed.

If you do have a formal model, then you can use the Antlr 
lexer/parser to ensure a valid tree construction.  And if you use an 
Antlr access grammar, you can generate a programmer API that has 
in-built knowledge of that specific model structure and that includes 
protections against doing at least some "loopy" things.

So, yes, "AntlrAccess" would generate a somewhat TreeWizard-like API 
package automatically tailored to a given formal model.




From parrt at cs.usfca.edu  Fri Aug 22 13:46:42 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Aug 2008 13:46:42 -0700
Subject: [antlr-interest] book examples list
In-Reply-To: <48AE495D.1030601@gmail.com>
References: <5F2875E7-3946-4B26-A40B-BD7C0EDF3EF3@cs.usfca.edu>
	<48AE495D.1030601@gmail.com>
Message-ID: <35C5C3FA-B984-40D1-8FA9-4D4DDFD312CE@cs.usfca.edu>


On Aug 21, 2008, at 10:06 PM, Kirk Woods wrote:

> As I look at this list, I see some of it as not very applicable to  
> most of the work I have done over the last twenty years.  I don't  
> write compilers or general purpose languages, but I create  
> applications with a focus in distributed systems.  As a "lazy"  
> programmer, I have created, from time to time, my own domain  
> specific languages and then generated a lot of code.  The last one I  
> did was with ANTLR and StringTemplate to generate a Java service, a  
> Java client, a C++ client, an Access database for data driven  
> testing, and a test framework to exercise the service.  All that  
> code was generated from a single service interface definition file  
> (similar to WSDL), and a different template for each implementation  
> type.

Well, the Object relational mapping uses reflection to generate Java  
and SQL stuff;  very much in line with what you do.

> I would like to see examples that are more relevant to building  
> applications such as what I did above.  For pushing the envelope,  
> using an OWL ontology file to generate client interfaces and an  
> agent implementation in JADE would certainly do the trick.

Well, it's hard to dig deeply into any one person's particular area of  
interest. Many people are interested in building programming languages  
and would find such an example distracting. So it depends on your  
perspective I guess.

> I like the Object-Relational mapping, as that is very relevant to  
> many applications.  I have never had to write a business application  
> using Postscript, nor have I seen any requests for such applications.

In the example I explain that I'm really just generating byte codes;  
rather than do Java byte codes I picked post-trip to because it's cool/ 
unusual and teaches you something about the PS language. Remember,  
this book is not about giving you solutions, it is about teaching you  
how things work. It will be less a cookbook and more a design patterns  
book.

> A configuration file reader is very useful; I just wrote yet another  
> one.  XML is the least friendly, "human readable", data file I know,  
> so an XML reader can be useful.  As much as it pains me to say it, C  
> is now an ancient language, so I don't know how many of your readers  
> will be able to relate to it as an example.

  could be. Excellent point. I need to find a simple non-object- 
oriented language, however, so I can demonstrate a simpler symbol  
table before going to Java or an object-oriented language.

Thanks Kirk!
Ter

From parrt at cs.usfca.edu  Fri Aug 22 14:02:12 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Aug 2008 14:02:12 -0700
Subject: [antlr-interest] CommonTree & Tree grammar versus DIY
In-Reply-To: <48AF0541.8000501@jazillian.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>	<8DA01C02-64BB-4EE4-9941-8D1C91F9CE03@cs.usfca.edu>	<48A5B941.8020202@jazillian.com>
	<200808160333.01241.rulatir@wp.pl>	<200808160756.m7G7ux8R010074@zinc.newtechlaw.com>	<939D9142-AE67-4C13-8232-C1374E95EC8B@cs.usfca.edu>	<200808210242.m7L2gSl1028697@zinc.newtechlaw.com>
	<F371E9F3-2CB7-43E1-9B1D-69EECE8BC8C7@cs.usfca.edu>
	<48ADCDFC.7040604@jazillian.com>
	<8D57DFD9-1B47-4A18-AE7D-B9BFA8110DB4@cs.usfca.edu>
	<48ADED2C.5000205@jazillian.com>
	<7694275B-1C81-4189-A59C-7E75302513C3@cs.usfca.edu>
	<48AF0541.8000501@jazillian.com>
Message-ID: <BA0713DD-267B-472A-9749-E68B1FE0CFC9@cs.usfca.edu>

Hi Andy,
I think we are again saying the same thing but don't realize it :)

I agree, if all you care about is one construct, why waste the time  
building a complete tree grammar. This is the approach of my filter  
mode for lexers. If you look at my fuzzy Java example, it pulls out  
Java declarations without providing a full grammar. Works great.  
Similarly, ANTLRMorph is doing the same thing but at a grammatical  
level. Further, it will also know how to rewrite trees so that you can  
morph one tree to another. It has an option called conforms so that  
you can tell the rewrite engine whether or not it should enforce valid  
structure on the rewritten text. It also indicates whether it should  
reapply the rules for that construct looking for more to rewrite. for  
example, x+0+0 should apply the following rule twice:

"x + 0" -> "<x>"

So, yes, my goal is to delineate the translation rules in a manner  
similar to what you do but hopefully in a slightly more formal manner.  
I will do this at the text or tree level :)  Rather, Leon Su's  
ANTLRMorph will do this :)

one final note: tree walking is great for computations. For example,  
computing the type of a large expression is best done with a recursive  
tree walk. You can either build one by hand or use a grammar. Up to  
you, but there is no escaping that the  computation must do a bottom- 
up walk. Given the recursive nature of the problem:

type(operatorsubtree) = resultType(type(e.operand[0]),  
operatorsubtree, type(e.operand[1]);

a recursive tree walker/visitor seems the most natural means of  
specifying. I happen to use a grammar for this as grammars are  
naturally recursive as well. Further, sometimes the same node type in  
different contexts results in a different type; grammars are good at  
that context stuff.

Ter

From parrt at cs.usfca.edu  Fri Aug 22 14:02:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Aug 2008 14:02:47 -0700
Subject: [antlr-interest] new book organization question
In-Reply-To: <48AEF6BA.90609@gmx.net>
References: <7D335C44-11D1-41B7-BFE1-08246A2BBEBB@cs.usfca.edu>
	<48ABBE51.3010403@gmx.net>
	<C099C2EC-4AC4-48EE-BEF0-50DF950F54D5@cs.usfca.edu>
	<48AEF6BA.90609@gmx.net>
Message-ID: <B01D7C93-6CBF-4077-9F0C-31A4BFA87F32@cs.usfca.edu>


On Aug 22, 2008, at 10:26 AM, Dennis Benzinger wrote:
>> Then when I do readers, it will start to fall into place. :) Do you
>> think that will work?
>
> As I'm the only one who complained I think it will work :)

I'm starting to think that it will be a little bit too weird and I  
will do readers first.

Ter

From antlr at mirality.co.nz  Fri Aug 22 14:49:11 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 09:49:11 +1200
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
	<200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
Message-ID: <20080822214920.2C38B11ED4A@www.antlr.org>

At 12:55 22/08/2008, Gerald Rosenberg wrote:
 >If I am the only one seeing the problem, then it looks like I
 >am in the market for a new email client.

You're confused -- there *is* no better email client than Eudora ;)


From antlr at mirality.co.nz  Fri Aug 22 14:58:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 09:58:37 +1200
Subject: [antlr-interest] Problem while compiling grammar file -  regd.
In-Reply-To: <7b0a1e4b0808221331s79375567w904b03a5ccd9085b@mail.gmail.co
 m>
References: <7b0a1e4b0808221331s79375567w904b03a5ccd9085b@mail.gmail.com>
Message-ID: <20080822215844.9C447352293@www.antlr.org>

At 08:31 23/08/2008, ASHOK REDDY wrote:
>I am getting the following error  "Unexpected token:lexer", in 
>grammar generated file, in which the actual grammar file is part 
>of a larger maven project. The compilation is done using antlr 
>v3.0.1 runtime, which is included in configuration of the maven 
>project. The error shows up in DOT_.g file, generated from DOT.g 
>file. Any help is appreciated on  how to  debug the error. The 
>list is awesome in teaching the How to's of Antlr, which is 
>otherwise a difficult tool to get along with. Attached is the DOT 
>file and DOT_.g file generated from it.

I didn't look at the attached grammars, but off the top of my head 
the most likely explanation is that either your CLASSPATH or 
command line is wrong and you're accidentally compiling with ANTLR 
v2 instead of v3.

Although if that's the case I'm surprised it's getting as far as 
generating the DOT__.g file... 


From titech at metaorb.com  Fri Aug 22 15:09:17 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 22 Aug 2008 15:09:17 -0700 (PDT)
Subject: [antlr-interest] How do you Output a String Literal?
Message-ID: <61194.67078.qm@web82302.mail.mud.yahoo.com>

I'm trying to output a string literal based on an imaginary token in an AST.

If I use "$TOKEN.text", I get the expected string literal for tokens used in the parser rule, but for imaginary tokens, I just get the token (e.g. all caps).

Is there a way to get the string literal (or the matched text) back from the token?

Thanks,
--Mike


Mike Allbright
DLP Products
Texas Instruments,
Inc.


From jaluber at gmx.de  Fri Aug 22 15:15:51 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 23 Aug 2008 00:15:51 +0200
Subject: [antlr-interest] How do you Output a String Literal?
In-Reply-To: <61194.67078.qm@web82302.mail.mud.yahoo.com>
References: <61194.67078.qm@web82302.mail.mud.yahoo.com>
Message-ID: <48AF3A97.7070103@gmx.de>

titech at metaorb.com schrieb:
> I'm trying to output a string literal based on an imaginary token in an AST.
> 
> If I use "$TOKEN.text", I get the expected string literal for tokens used in the parser rule, but for imaginary tokens, I just get the token (e.g. all caps).
> 
> Is there a way to get the string literal (or the matched text) back from the token?
> 
> Thanks,
> --Mike

Do you create imaginary tokens like this?

IMAGINARY[REAL]

With that syntax the
IMAGINARY token receives all attributes of the REAL token.

Johannes
> 
> 
> Mike Allbright
> DLP Products
> Texas Instruments,
> Inc.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From titech at metaorb.com  Fri Aug 22 15:20:35 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Fri, 22 Aug 2008 15:20:35 -0700 (PDT)
Subject: [antlr-interest] How do you Output a String Literal?
Message-ID: <676029.99534.qm@web82306.mail.mud.yahoo.com>

I don't think I've seen the [] syntax.

My parser grammer looks like this:

convolution:          name tapset+       -> ^(CONVOLUTION name tapset+);
...

CONVOLUTION:  'convolution';


The
only reason I made a token of the 'convolution' literal was to
facilitate the imaginary node output.  I get an error if I use the
literal in the AST rule, unless the literal is also used in the parser
rule (which seems odd..).

Thanks again,
--Mike


----- Original Message ----
From: Johannes Luber <jaluber at gmx.de>
To: "titech at metaorb.com" <titech at metaorb.com>
Cc: antlr-interest at antlr.org
Sent: Friday, August 22, 2008 5:15:51 PM
Subject: Re: [antlr-interest] How do you Output a String Literal?

titech at metaorb.com schrieb:
> I'm trying to output a string literal based on an imaginary token in an AST.
> 
>
If I use "$TOKEN.text", I get the expected string literal for tokens
used in the parser rule, but for imaginary tokens, I just get the token
(e.g. all caps).
> 
> Is there a way to get the string literal (or the matched text) back from the token?
> 
> Thanks,
> --Mike

Do you create imaginary tokens like this?

IMAGINARY[REAL]

With that syntax the
IMAGINARY token receives all attributes of the REAL token.

Johannes
> 
> 
> Mike Allbright
> DLP Products
> Texas Instruments,
> Inc.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From gerald at certiv.net  Fri Aug 22 15:21:32 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 22 Aug 2008 15:21:32 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <200808222149.m7MLnHlv012686@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
	<200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
	<200808222149.m7MLnHlv012686@zinc.newtechlaw.com>
Message-ID: <200808222226.m7MMQRhS012968@zinc.newtechlaw.com>

At 02:49 PM 8/22/2008, Gavin Lambert wrote:
>At 12:55 22/08/2008, Gerald Rosenberg wrote:
> >If I am the only one seeing the problem, then it looks like I
> >am in the market for a new email client.
>
>You're confused -- there *is* no better email client than Eudora ;)

Confused? Never! Reluctant, yet resigned to eventually leave Eudora, 
yes.  Unfortunately, Eudora uses IE as its rich content 
viewer.  Given the most recent and last true version of Eudora is now 
two-years old and with the recent advent of IE7/SP3, their technical 
relationship is apparently souring.  Equally unfortunate is that work 
on the Eudora 8/Thunderbird hybrid seems to have stalled.

So, something new seems to be inevitable. 


From rschulz at sonic.net  Fri Aug 22 15:33:48 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 22 Aug 2008 15:33:48 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <200808222226.m7MMQRhS012968@zinc.newtechlaw.com>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808222149.m7MLnHlv012686@zinc.newtechlaw.com>
	<200808222226.m7MMQRhS012968@zinc.newtechlaw.com>
Message-ID: <200808221533.48949.rschulz@sonic.net>

On Friday 22 August 2008 15:21, you wrote:
> ...
>
> So, something new seems to be inevitable.

Step one: Get a proper developer's OS (Linux)
Step two: Use KMail


RRS

From gerald at certiv.net  Fri Aug 22 16:33:09 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 22 Aug 2008 16:33:09 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
 line width?
In-Reply-To: <C52EDB37-7723-45C2-8B89-9019DF095438@classdump.org>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
	<200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
	<C52EDB37-7723-45C2-8B89-9019DF095438@classdump.org>
Message-ID: <48AF4CB5.80609@certiv.net>

Kay R?pke wrote:
> On Aug 22, 2008, at 2:55 AM, Gerald Rosenberg wrote:
>
>> If I am the only one seeing the problem, then it looks like I am in
>> the market for a new email client.
>
> You're not the only one :)
> I'm actually in favor of fixing mailman, since I'm not in the market 
> for yet-another-MUA.
>
> cheers,
> -k
Hopefully, Ter will add it to his TODO list.

4.80 How do I upgrade from Mailman 2.1.x to a later Mailman 2.1.y?
http://wiki.list.org/pages/viewpage.action?pageId=4030623


From parrt at cs.usfca.edu  Fri Aug 22 16:37:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Aug 2008 16:37:57 -0700
Subject: [antlr-interest] OT:Can we fix the list to a more reasonable
	line width?
In-Reply-To: <48AF4CB5.80609@certiv.net>
References: <858634.12553.qm@web50105.mail.re2.yahoo.com>
	<200808211452.56402.rschulz@sonic.net>
	<200808212238.m7LMcKvf004015@zinc.newtechlaw.com>
	<200808211549.28511.rschulz@sonic.net>
	<200808220058.m7M0wJLp004814@zinc.newtechlaw.com>
	<C52EDB37-7723-45C2-8B89-9019DF095438@classdump.org>
	<48AF4CB5.80609@certiv.net>
Message-ID: <9DF67856-86BC-4196-A372-D50B4E332D78@cs.usfca.edu>

I have to update antlr.org soon anyway...i'll figure out what version  
i have.
Ter
On Aug 22, 2008, at 4:33 PM, Gerald Rosenberg wrote:

> Kay R?pke wrote:
>> On Aug 22, 2008, at 2:55 AM, Gerald Rosenberg wrote:
>>
>>> If I am the only one seeing the problem, then it looks like I am in
>>> the market for a new email client.
>>
>> You're not the only one :)
>> I'm actually in favor of fixing mailman, since I'm not in the market
>> for yet-another-MUA.
>>
>> cheers,
>> -k
> Hopefully, Ter will add it to his TODO list.
>
> 4.80 How do I upgrade from Mailman 2.1.x to a later Mailman 2.1.y?
> http://wiki.list.org/pages/viewpage.action?pageId=4030623
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From mattpalms at gmail.com  Fri Aug 22 17:20:48 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Sat, 23 Aug 2008 01:20:48 +0100
Subject: [antlr-interest] Missing characters in partial matches
Message-ID: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>

Hi,

I'm scratching my head about a problem with multi-line comments, where
characters that only partially matched the comment header are removed from
the character stream. I've boiled the problem down to the simple grammar
below:

grammar T;

all     :    ( Text | Lsqb | Comment )* ;

Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
Lsqb    :    '[' ;
Text    :    ( ~Lsqb )+ ;

If this text is run through the antlrworks debugger (1.1.7 and 1.2b5):

A test [!-- comment --] of text [!that looks like the start [!-of a
[!comment, but [isn't one.

then the parse tree displays this:

  root
    |
   all

|_____________________________________________________________________________
    |           |                 |                  |              |
|         |   |
  A test *[!-- comment --]* of text  *hat looks like the start* *f a*  *
omment*, but *[* isn't one.


The real comment itself matches fine, and the solitary square bracket is
also OK, but the other characters that are partial prefixes of a comment are
simply stripped out of the rest of the text.  Note that this problem only
surfaces if the comment header is greater than 2 characters in length.   Can
anyone shed some light on this behaviour?

Thanks,

MattP.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080823/14019faf/attachment.html 

From jimi at temporal-wave.com  Fri Aug 22 17:29:57 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 22 Aug 2008 17:29:57 -0700
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
Message-ID: <1219451397.15169.117.camel@jimi>

On Sat, 2008-08-23 at 01:20 +0100, Matt Palmer wrote:
> Hi,
> 
> I'm scratching my head about a problem with multi-line comments, where
> characters that only partially matched the comment header are removed
> from the character stream. I've boiled the problem down to the simple
> grammar below:
> 
> grammar T;
> 
> all     :    ( Text | Lsqb | Comment )* ;
> 
> Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
> Lsqb    :    '[' ;
> Text    :    ( ~Lsqb )+ ;
> 
> If this text is run through the antlrworks debugger (1.1.7 and 1.2b5):
> 
>         A test [!-- comment --] of text [!that looks like the start
>         [!-of a [!comment, but [isn't one.
> 
> then the parse tree displays this:
>  
>   root
>     |
>    all
>     |
> _____________________________________________________________________________
>     |           |                 |                  |              |
> |         |   |  
>   A test [!-- comment --] of text  hat looks like the start f a
> omment, but [ isn't one.
> 
> 
> The real comment itself matches fine, and the solitary square bracket
> is also OK, but the other characters that are partial prefixes of a
> comment are simply stripped out of the rest of the text.  Note that
> this problem only surfaces if the comment header is greater than 2
> characters in length.   Can anyone shed some light on this behaviour?


If you look at the console output you will see that hte lexer is telling
yu about invalid characters and then syncing up to somethign it can do
somethign with. You need::

Comment :    '['
                 (   '!--'=> '!--'  (options {greedy=false;} : . )*
'--]'
                   | { $type = Lsqb; }
                 )
        ;
      
fragment
Lsqb    :    '[' ;


> 
> Thanks,
> 
> MattP.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080822/f256d6bb/attachment.html 

From anders at globe-trotter.us  Fri Aug 22 17:57:08 2008
From: anders at globe-trotter.us (Anders)
Date: Sat, 23 Aug 2008 08:57:08 +0800
Subject: [antlr-interest] n00b Question
In-Reply-To: <48AEC5F5.80304@gmx.de>
References: <20080822014134.29719.qmail@station198.com> <48AEC5F5.80304@gmx.de>
Message-ID: <48AF6064.4000501@globe-trotter.us>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080823/969f787a/attachment.html 

From mattpalms at gmail.com  Fri Aug 22 18:11:43 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Sat, 23 Aug 2008 02:11:43 +0100
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <1219451397.15169.117.camel@jimi>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
Message-ID: <36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>

Hi Jim,

thanks - that clears up why the characters were missing.  I'm afraid your
code hasn't cleared up my problem though.  I still get missing characters.

At the heart of my problem, I guess I'm not sure why, when the start comment
didn't match, the lexer didn't proceed to match a Lsqb, followed by Text.  I
can make it parse the text as given (albeit awkwardly) by specifying all the
intermediate prefixes as other tokens, using this grammar:

grammar T;

all     :    ( text | comment | nc1 | nc2 | lsqb )*;
text    :    Text;
comment :    Comment;
nc1     :    NotCom1;
nc2     :    NotCom2;
lsqb    :    Lsqb;

Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
NotCom1 :    '[!-' ;
NotCom2 :    '[!';
Lsqb    :    '[' ;
Text    :    (~Lsqb)+ ;

I think I need to investigate the lexer behaviour in some more detail.  Any
pointers welcome!

cheers,

MattP.

On Sat, Aug 23, 2008 at 1:29 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  On Sat, 2008-08-23 at 01:20 +0100, Matt Palmer wrote:
>
> Hi,
>
> I'm scratching my head about a problem with multi-line comments, where
> characters that only partially matched the comment header are removed from
> the character stream. I've boiled the problem down to the simple grammar
> below:
>
> grammar T;
>
> all     :    ( Text | Lsqb | Comment )* ;
>
> Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
> Lsqb    :    '[' ;
> Text    :    ( ~Lsqb )+ ;
>
> If this text is run through the antlrworks debugger (1.1.7 and 1.2b5):
>
> A test [!-- comment --] of text [!that looks like the start [!-of a
> [!comment, but [isn't one.
>
> then the parse tree displays this:
>
>   root
>     |
>    all
>
> |_____________________________________________________________________________
>     |           |                 |                  |
> |        |         |   |
>   A test *[!-- comment --]* of text  *hat looks like the start* *f a*  *
> omment*, but *[* isn't one.
>
>
> The real comment itself matches fine, and the solitary square bracket is
> also OK, but the other characters that are partial prefixes of a comment are
> simply stripped out of the rest of the text.  Note that this problem only
> surfaces if the comment header is greater than 2 characters in length.   Can
> anyone shed some light on this behaviour?
>
>
> If you look at the console output you will see that hte lexer is telling yu
> about invalid characters and then syncing up to somethign it can do
> somethign with. You need::
>
> Comment :    '['
>                  (   '!--'=> '!--'  (options {greedy=false;} : . )* '--]'
>                    | { $type = Lsqb; }
>                  )
>         ;
>
> fragment
> Lsqb    :    '[' ;
>
>
> Thanks,
>
> MattP.
>
>  List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080823/b81f6782/attachment.html 

From antlr at mirality.co.nz  Fri Aug 22 20:09:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 15:09:37 +1200
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.co
 m>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
Message-ID: <20080823030947.08EF62F4346@www.antlr.org>

At 13:11 23/08/2008, Matt Palmer wrote:
>At the heart of my problem, I guess I'm not sure why, when the 
>start comment didn't match, the lexer didn't proceed to match a 
>Lsqb, followed by Text.  I can make it parse the text as given 
>(albeit awkwardly) by specifying all the intermediate prefixes as 
>other tokens, using this grammar:
[...]
>Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
>NotCom1 :    '[!-' ;
>NotCom2 :    '[!';
>Lsqb    :    '[' ;
>Text    :    (~Lsqb)+ ;

This is my pet peeve with the way that the v3 lexer 
operates.  (It's apparently mostly by design, but I think that 
it's an unhelpful design.  Ter has agreed to look into it at some 
point.)

Now, I'm not really an expert in the internal workings of parsers, 
but as I understand it what's going on internally is that ANTLR 
builds a set of minimal lookahead to disambiguate between multiple 
tokens, *and* (and this is the bit that causes the odd behaviour) 
assumes that the tokens need not be contiguous -- it's allowed to 
have stray characters outside of any formal token, which it simply 
ignores.

So when you've only got your original rules, ANTLR builds up an 
internal model that says something like this:

   Ok, so the next character is a '['.
   That means it can either be a Comment, a Lsqb, or a Text.
   For it to be a Comment, the one after that would be a '!'.
   For it to be a Lsqb, the one after that could be anything.
   For it to be a Text, the one after that could be anything but a 
'['.
   The following character is a '!'.
   Score!  That looks like a Comment, I'll go with that.
     (Comment wins both because it's more specific and because 
it's listed first, I think.)
   Sweet, now we're certain it's a Comment, so the next character 
must be a '-'.
   Wait, it's not.  Ok, so that's invalid input, ignore that and 
let's move on to something I can figure out.

[This all might be completely wrong, of course, but it fits with 
what I've observed thus far.]

With the rules you posted above, ANTLR has more tokens to choose 
between and this forces it to look ahead further before 
"committing" itself to a particular token.

The general rule of thumb I tend to use is that most of the time 
the lexer seems to behave like it's just LL(1), so any tokens that 
have the same left edge need to be merged and given explicit 
"escape clauses" so they can do the right thing when they 
encounter something unexpected.

Essentially the same as what Jim posted earlier, except that I 
think he forgot some of the punctuation; also, I prefer to 
explicitly write the content possibilities instead of using the 
'.':

fragment Lsqb: '[';

Comment
   : '['
     ( ('!--') => '!--' (~'-' | '-' (~'-' | '-' ~']'))* '--]'
     | { $type = Lsqb; }
     )
   ;


From parrt at cs.usfca.edu  Fri Aug 22 22:01:53 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Aug 2008 22:01:53 -0700
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <20080823030947.08EF62F4346@www.antlr.org>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
Message-ID: <DE955178-2398-4751-A37E-EF9ADFBC75AA@cs.usfca.edu>

Yep, this is annoying and I hope to fix it by changing my assumptions  
bout the lexers in v3.
Ter

From greg at smolyn.org  Fri Aug 22 22:07:13 2008
From: greg at smolyn.org (Greg Smolyn)
Date: Fri, 22 Aug 2008 22:07:13 -0700
Subject: [antlr-interest] Creation of new tree nodes
Message-ID: <5F984DB1-12F1-47F0-991C-1B8184C67B65@smolyn.org>

Hi,

I'm trying to perform an AST transformation that will effectively  
replace a node + subnodes with a mostly artificial new node.

However, ANTLR 3.1 seems to be unhappy with the syntax.

Here's the problem code in question  (assume DocumentWriteContents  
gets set somewhere down in the expression rule):


statement
scope { IToken DocumentWriteContents; }
     : ^(STMT emptyStatement)
     | ^(STMT variableDeclaration)
	| ^(STMT expression) -> { $statement::DocumentWriteContents!=null }?
                              ^(STMT
                                (BLOCK
                                 (STMT (VAR["var"] (ASSIGN["="]  
Identifier["_SL_temp"] (CALL (BYFIELD Identifier["document"]  
Identifier["createElement"]) (ARGS StringLiteral["'div'"])))))
                                 (STMT (ASSIGN["var"] (BYFIELD  
Identifier["_SL_Temp"] Identifier["innerHTML"])  
$statement::DocumentWriteContents ))
                                 (STMT (CALL (BYFIELD (BYFIELD  
Identifier["document"] Identifier["body"]) Identifier["appendChild"])  
(ARGS Identifier["_SL_Temp"])))))
                            -> ^(STMT expression)
	| ^(STMT ifStatement)
	| ^(STMT doStatement)
	| ^(STMT whileStatement)
	| ^(STMT forStatement)
	| ^(STMT continueStatement)
	| ^(STMT breakStatement)
	| ^(STMT returnStatement)
	| ^(STMT withStatement)
	| ^(STMT labelledStatement)
	| ^(STMT switchStatement)
	| ^(STMT throwStatement)
	| ^(STMT tryStatement )
     ;

STMT, BLOCK,  CALL, BYFIELD and ARGS are all artificial tokens.

Thanks for your help!

-greg


From tbrandonau at gmail.com  Fri Aug 22 22:14:30 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 23 Aug 2008 15:14:30 +1000
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <20080823030947.08EF62F4346@www.antlr.org>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
Message-ID: <ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>

On Sat, Aug 23, 2008 at 1:09 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 13:11 23/08/2008, Matt Palmer wrote:
>>At the heart of my problem, I guess I'm not sure why, when the
>>start comment didn't match, the lexer didn't proceed to match a
>>Lsqb, followed by Text.  I can make it parse the text as given
>>(albeit awkwardly) by specifying all the intermediate prefixes as
>>other tokens, using this grammar:
> [...]
>>Comment :    '[!--'  (options {greedy=false;} : . )* '--]' ;
>>NotCom1 :    '[!-' ;
>>NotCom2 :    '[!';
>>Lsqb    :    '[' ;
>>Text    :    (~Lsqb)+ ;
>
> This is my pet peeve with the way that the v3 lexer
> operates.  (It's apparently mostly by design, but I think that
> it's an unhelpful design.  Ter has agreed to look into it at some
> point.)
>
> Now, I'm not really an expert in the internal workings of parsers,
> but as I understand it what's going on internally is that ANTLR
> builds a set of minimal lookahead to disambiguate between multiple
> tokens, *and* (and this is the bit that causes the odd behaviour)
> assumes that the tokens need not be contiguous -- it's allowed to
> have stray characters outside of any formal token, which it simply
> ignores.
>
> So when you've only got your original rules, ANTLR builds up an
> internal model that says something like this:
>
>   Ok, so the next character is a '['.
>   That means it can either be a Comment, a Lsqb, or a Text.
>   For it to be a Comment, the one after that would be a '!'.
>   For it to be a Lsqb, the one after that could be anything.
>   For it to be a Text, the one after that could be anything but a
> '['.
>   The following character is a '!'.
>   Score!  That looks like a Comment, I'll go with that.
>     (Comment wins both because it's more specific and because
> it's listed first, I think.)
>   Sweet, now we're certain it's a Comment, so the next character
> must be a '-'.
>   Wait, it's not.  Ok, so that's invalid input, ignore that and
> let's move on to something I can figure out.
>
> [This all might be completely wrong, of course, but it fits with
> what I've observed thus far.]
>
> With the rules you posted above, ANTLR has more tokens to choose
> between and this forces it to look ahead further before
> "committing" itself to a particular token.
That looks right. Examining the tokens DFA either through the function
for that in ANTLRWorks or by looking at the generated nextTokens rule
can be illuminating here.
>
> The general rule of thumb I tend to use is that most of the time
> the lexer seems to behave like it's just LL(1), so any tokens that
> have the same left edge need to be merged and given explicit
> "escape clauses" so they can do the right thing when they
> encounter something unexpected.
Not quite. ANTLR is LL(*), it looks ahead as many *characters* as are
needed not just 1, but not across token boundaries. So as long as the
alternates are all a single token there is no need to merge rules. But
if a sequence can be matched as either a single token or a sequence of
multiple tokens you must merge them as ANTLR will not consider the
possibility of multiple tokens matching the input. Apart from this I
don't think there is any advantage to merging except for particularly
nasty infinite sequences where you may end up with hideously
complicated predictors. Otherwise in the case of single tokens I think
merging will only hurt performance as the prediction must be
duplicated in nextToken and the actual token method.

Tom.
>
> Essentially the same as what Jim posted earlier, except that I
> think he forgot some of the punctuation; also, I prefer to
> explicitly write the content possibilities instead of using the
> '.':
>
> fragment Lsqb: '[';
>
> Comment
>   : '['
>     ( ('!--') => '!--' (~'-' | '-' (~'-' | '-' ~']'))* '--]'
>     | { $type = Lsqb; }
>     )
>   ;

From spamhole at gmx.at  Sat Aug 23 02:11:53 2008
From: spamhole at gmx.at (Markus Stoeger)
Date: Sat, 23 Aug 2008 11:11:53 +0200
Subject: [antlr-interest] Problem with simple tokens
Message-ID: <48AFD459.4080109@gmx.at>

Hello,

I'm new to ANTLR and I'm trying to get an a-few-hundred-lines-grammar 
working (fun! ;-). I've been chewing on a problem for quite a while now 
and was finally able to locate the cause but I don't understand it even 
after reading several online docs (haven't got the book yet).

It's probably very easy to explain for someone with a bit of 
experience... here's a short piece of grammar to reproduce the problem:

--- CUT ---
grammar DotProblem;

rule1: Foo ('.' | '!');

Foo: 'foo';
Identifier: 'a'..'z'+ ('.' 'a'..'z'+)*;
--- CUT ---

When running that in the debugger it matches "foo!" but not "foo.", 
which causes a MismatchedTokenException.

Why doesn't it match "foo."?

It has something to do with the Identifier token (which contains a dot) 
but I don't understand why.. note that to match as Identifier the dot 
would have to be followed by at least one letter, which isn't the case 
with "foo.". Also the token Foo should have precedence over the token 
Identifier as it is defined earlier.

thanks, Max


From antlr at mirality.co.nz  Sat Aug 23 03:43:45 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 22:43:45 +1200
Subject: [antlr-interest] Creation of new tree nodes
In-Reply-To: <5F984DB1-12F1-47F0-991C-1B8184C67B65@smolyn.org>
References: <5F984DB1-12F1-47F0-991C-1B8184C67B65@smolyn.org>
Message-ID: <20080823104351.BA26711ED57@www.antlr.org>

At 17:07 23/08/2008, Greg Smolyn wrote:
 >However, ANTLR 3.1 seems to be unhappy with the syntax.
[...]
 >	| ^(STMT expression) -> { 
$statement::DocumentWriteContents!=null
 >}?
 >                              ^(STMT
 >                                (BLOCK
 >                                 (STMT (VAR["var"] 
(ASSIGN["="]
 >Identifier["_SL_temp"] (CALL (BYFIELD Identifier["document"]
 >Identifier["createElement"]) (ARGS StringLiteral["'div'"])))))
 >                                 (STMT (ASSIGN["var"] (BYFIELD
 >Identifier["_SL_Temp"] Identifier["innerHTML"])
 >$statement::DocumentWriteContents ))
 >                                 (STMT (CALL (BYFIELD (BYFIELD
 >Identifier["document"] Identifier["body"])
 >Identifier["appendChild"])
 >(ARGS Identifier["_SL_Temp"])))))
 >                            -> ^(STMT expression)

Wow, that's a long rewrite.

Anyway, you need to either lose the extra parentheses (to get a 
flat list) or add extra ^s (to get subtrees).


From antlr at mirality.co.nz  Sat Aug 23 03:54:51 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 22:54:51 +1200
Subject: [antlr-interest] Problem with simple tokens
In-Reply-To: <48AFD459.4080109@gmx.at>
References: <48AFD459.4080109@gmx.at>
Message-ID: <20080823105457.91CE911ED90@www.antlr.org>

At 21:11 23/08/2008, Markus Stoeger wrote:
 >rule1: Foo ('.' | '!');
 >
 >Foo: 'foo';
 >Identifier: 'a'..'z'+ ('.' 'a'..'z'+)*;
 >--- CUT ---
 >
 >When running that in the debugger it matches "foo!" but not 
"foo.",
 >which causes a MismatchedTokenException.
 >
 >Why doesn't it match "foo."?
 >
 >It has something to do with the Identifier token (which contains 

 >a dot) but I don't understand why.. note that to match as
 >Identifier the dot would have to be followed by at least one
 >letter, which isn't the case with "foo.". Also the token Foo
 >should have precedence over the token Identifier as it is
 >defined earlier.

As I explained earlier today, the ANTLR lexer only looks ahead 
just as far as it thinks it needs to in order to disambiguate the 
alternatives -- and that's not always far enough to get it 
"right".

In this case, what's happening is that the input 'foo' could match 
either Foo or Identifier; by itself ANTLR will choose Foo, since 
it's listed first -- but when given the input 'foo.', this could 
either be "Foo '.'" or "Identifier" (admittedly not a complete 
Identifier, but it doesn't realise that yet), so it'll pick 
Identifier since it consumes more of the input in one go.

You can force ANTLR to use extra lookahead with the slightly more 
verbose:

Identifier: 'a'..'z'+ (('.' 'a'..'z') => '.' 'a'..'z'+)*;


From antlr at mirality.co.nz  Sat Aug 23 04:04:52 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Aug 2008 23:04:52 +1200
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.co
 m>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
	<ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>
Message-ID: <20080823110459.9EEAB2F4317@www.antlr.org>

At 17:14 23/08/2008, Thomas Brandon wrote:
 >Not quite. ANTLR is LL(*), it looks ahead as many *characters*
 >as are needed not just 1, but not across token boundaries. So
 >as long as the alternates are all a single token there is no
 >need to merge rules.  But if a sequence can be matched as
 >either a single token or a sequence of multiple tokens you
 >must merge them as ANTLR will not consider the possibility of
 >multiple tokens matching the input.

True; and the longest-match rule helps here, since in a language 
with a keyword for 'begin' it'll still generate an Identifier when 
faced with 'beginning', since it can consume more input that way.

But it's surprising how often this sort of issue comes up, so it's 
always something you need to keep in the back of your mind.  At 
least until this gets changed, anyway ;)

(When I say "the lexer can act like it's LL(1)", I don't really 
mean that it's LL(1) all the time, just that you need to be aware 
that it tries to use the minimum amount of lookahead that it 
thinks it can get away with, which is often only a single 
character -- and not always sufficient to completely disambiguate, 
especially when loops and optional paths are involved.)


From tbrandonau at gmail.com  Sat Aug 23 05:05:23 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 23 Aug 2008 22:05:23 +1000
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <48afeedb.0913c00a.0f2f.6ca0SMTPIN_ADDED@mx.google.com>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
	<ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>
	<48afeedb.0913c00a.0f2f.6ca0SMTPIN_ADDED@mx.google.com>
Message-ID: <ebc876d70808230505l71541847hb6b927ecab2b1be8@mail.gmail.com>

On Sat, Aug 23, 2008 at 9:04 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 17:14 23/08/2008, Thomas Brandon wrote:
> (When I say "the lexer can act like it's LL(1)", I don't really mean that
> it's LL(1) all the time, just that you need to be aware that it tries to use
> the minimum amount of lookahead that it thinks it can get away with, which
> is often only a single character -- and not always sufficient to completely
> disambiguate, especially when loops and optional paths are involved.)
>
>
My point was that the known issue only affects choosing between
multiple token sequences. Any other cases where it insufficiently
disambiguates between multiple single token alternates, no matter how
many loops or optional paths you have, are an additional issue and
should be reported as such. I'm not aware of any other cases where
lookahead is insufficient.

Tom.

From hendrik at topoi.pooq.com  Sat Aug 23 05:55:55 2008
From: hendrik at topoi.pooq.com (Hendrik Boom)
Date: Sat, 23 Aug 2008 12:55:55 +0000 (UTC)
Subject: [antlr-interest] How to access returned objects
References: <g8k260$khl$1@ger.gmane.org>
Message-ID: <g8p1cr$hqf$1@ger.gmane.org>

On Thu, 21 Aug 2008 15:38:41 +0000, Hendrik Boom wrote:

> I have a rule 
> 
> body returns [ std::string t9 ]
>     : t9:term7 ( DOLLAR w term7 {t9 += "$" + t;} )*;
> 
> But I can't figure out hos to access the returned value in a rule that
> calls body.

I found out from an incidental example in an old message on this mailing
list. I say
   f=body
, having declared f to have the proper type in a code
insertion at the beginning of the rule that calls body.

-- hendrik


From mattpalms at gmail.com  Sat Aug 23 08:50:52 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Sat, 23 Aug 2008 16:50:52 +0100
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <ebc876d70808230505l71541847hb6b927ecab2b1be8@mail.gmail.com>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
	<ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>
	<48afeedb.0913c00a.0f2f.6ca0SMTPIN_ADDED@mx.google.com>
	<ebc876d70808230505l71541847hb6b927ecab2b1be8@mail.gmail.com>
Message-ID: <36c8729e0808230850i54c500f9w2ebd8d7d3613b2f9@mail.gmail.com>

Just a quick thank you to everyone who's responded.  I feel like I have a
better grasp on what's going on now.  I'm going to have a play, and look at
the tokens DFA (or even the code, if that doesn't enlighten me).  I'm keen
to understand how the v3 lexer actually works, but also how it might
otherwise work too :)

cheers,

MattP.

On Sat, Aug 23, 2008 at 1:05 PM, Thomas Brandon <tbrandonau at gmail.com>wrote:

> On Sat, Aug 23, 2008 at 9:04 PM, Gavin Lambert <antlr at mirality.co.nz>
> wrote:
> > At 17:14 23/08/2008, Thomas Brandon wrote:
> > (When I say "the lexer can act like it's LL(1)", I don't really mean that
> > it's LL(1) all the time, just that you need to be aware that it tries to
> use
> > the minimum amount of lookahead that it thinks it can get away with,
> which
> > is often only a single character -- and not always sufficient to
> completely
> > disambiguate, especially when loops and optional paths are involved.)
> >
> >
> My point was that the known issue only affects choosing between
> multiple token sequences. Any other cases where it insufficiently
> disambiguates between multiple single token alternates, no matter how
> many loops or optional paths you have, are an additional issue and
> should be reported as such. I'm not aware of any other cases where
> lookahead is insufficient.
>
> Tom.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080823/557c793b/attachment.html 

From jimi at temporal-wave.com  Sat Aug 23 10:11:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 23 Aug 2008 10:11:12 -0700
Subject: [antlr-interest] C/C++ questsion posted to Wiki
Message-ID: <1219511472.15169.135.camel@jimi>

Somoen posted questions to the Wiki rather than examples/advice etc.
Please note that the Wiki isn't the place to post questions (unless you
are adding FAQs), so in answer to the notes posted there:

The 5 minute intro is intended to be used with antlr 3.1. if you get an
error that looks like this:

In file included from SimpleCalcLexer.c:16:
SimpleCalcLexer.h:112: error: parse error before
"pANTLR3_RECOGNIZER_SHARED_STATE" }}
SimpleCalcLexer.c:270: error: parse error before
"pANTLR3_RECOGNIZER_SHARED_STATE"
SimpleCalcLexer.c: In function `SimpleCalcLexerNewSSD'

I am not sure what this was explaining/asking but I think that this just
means you either generated the code with the wrong jar or compiled it
against the wrong version of the C headers.

When I built the runtime C libraries using ./configure and make, it
added the \-m32 flag. When I linked, I got an error claiming the library
is not compatible. I run on suse64.

Please use configure --help. There you will find the --enable-64bit
option. Because gcc will compile in the default binary mode of the
system, -m32 is added automatically. This isn't how most of the other
compilers work, in that they will always produce 32 bit, even on a 64bit
architecture. Hence, the 64 bit flag enables the compiler settings for
whatever compiler you are using (if configure knows about it). SO, you
should NOT add -m32 with gcc as that is the default build with ANTLR. To
get 64 bit libraries use --enable-64bit. NOte also the option to include
or exclude the ANTLR debugger, which allows the build of libraries
without socks dependencies.

Antlrworks is Antlr 3.0 based. The generated output will compile, but
when you try to link, the linker will complain about 'TOKENSOURCE(lex)'

ANTLRWorks is only designed to work with Java. Always generate your C
parsers externally and then debug remote. You need ANTLRWorks 1.2b5 to
work with 3.1 grammars.

Once you compile and link it, the C version of the 5 minute demo expects
a file name to be passes as the first argument. If you don't give it an
arg, it will seg fault.

This is a bug, it should probably check for that - however it is just
demo code of course.

Even if you do give it an arg, it doesn't print anything out. I don't
know enough to fix this or the previous problem.

Well, if you look at the grammar, it isn't designed to print anything
out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080823/5248a0f4/attachment.html 

From kroepke at classdump.org  Sat Aug 23 10:24:02 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 23 Aug 2008 19:24:02 +0200
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <36c8729e0808230850i54c500f9w2ebd8d7d3613b2f9@mail.gmail.com>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
	<ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>
	<48afeedb.0913c00a.0f2f.6ca0SMTPIN_ADDED@mx.google.com>
	<ebc876d70808230505l71541847hb6b927ecab2b1be8@mail.gmail.com>
	<36c8729e0808230850i54c500f9w2ebd8d7d3613b2f9@mail.gmail.com>
Message-ID: <80D21352-8EC2-4237-B2FD-A730158429BF@classdump.org>


On Aug 23, 2008, at 5:50 PM, Matt Palmer wrote:

> Just a quick thank you to everyone who's responded.  I feel like I  
> have a
> better grasp on what's going on now.  I'm going to have a play, and  
> look at
> the tokens DFA (or even the code, if that doesn't enlighten me).   
> I'm keen
> to understand how the v3 lexer actually works, but also how it might
> otherwise work too :)


The DFA in ANTLRWorks (or by generating it by hand and giving  
org.antlr.Tool the -dfa option) is really what you want to be looking  
at. For big DFAs the codegen will likely be a table-based DFA and  
that's not really readable ;)

Just come up with some simple cases where it doesn't do what you  
expect, then look at the DFAs. You'll pretty much know what happens  
then :) Together with the very helpful summary by the others in this  
thread, that is!

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From tcurdt at vafer.org  Sat Aug 23 20:13:03 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 05:13:03 +0200
Subject: [antlr-interest] flat AST tree
Message-ID: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>

I am a little confused. Here a quick snipped from my grammar

	grammar test;

	options {
		output=AST;
		ASTLabelType=CommonTree;
	}

	file
	    : classDeclaration+
	    ;

	classDeclaration
	    : 'class' Identifier ( 'extends' identifierList)? classBody
	    ;

	classBody
	    : '{' attributeDeclaration+ '}'
	    ;

When I now look at the AST it appears to be totally flat

         testParser g = new testParser(tokens);

         try {
         	
         	testParser.file_return r = g.file();

         	Tree tree = (Tree)r.getTree();

         	int c = tree.getChildCount();
         	for(int i=0;i<c;i++) {
         		CommonTree child = (CommonTree) tree.getChild(i);
         		System.out.println(i + ":" + child.toString() + "(" +  
child.getChildCount() + ")");
         	}

Not a single child has further sub-childs. OK ...turns out I need to  
use rewriting for this

  classDeclaration : 'class' Identifier ( 'extends' identifierList)?  
classBody -> ^('class' Identifier ( 'extends' identifierList)?  
classBody) ;

But that totally blows up the grammar. Why isn't it just the same  
hierarchy as the input tree?

What am I missing here? IIRC that was the default in antlr2 ...no?

cheers
--
Torsten

From tcurdt at vafer.org  Sat Aug 23 20:24:37 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 05:24:37 +0200
Subject: [antlr-interest] labels for rule results?
Message-ID: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>

attributeDeclaration
     : type_specifier name=Identifier  ';'
	  {
		System.out.println("name:" + name.getText());
	  }
     ;

The above works just fine. But what's the easiest way to access the  
result of the rules?
While this generates just fine

attributeDeclaration
     : thetype=type_specifier name=Identifier  ';'
	  {
		System.out.println("name:" + name.getText());
		System.out.println("type:" + thetype);
	  }
     ;

it does not compile as the there is no such variable.

The only way I could think of is to fill a context in (or a global  
variable) in the type_specifier rule.

cheers
--
Torsten

From antlr at mirality.co.nz  Sat Aug 23 23:33:22 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 24 Aug 2008 18:33:22 +1200
Subject: [antlr-interest] labels for rule results?
In-Reply-To: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>
References: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>
Message-ID: <20080824063329.0BCDB2F431A@www.antlr.org>

At 15:24 24/08/2008, Torsten Curdt wrote:
 >attributeDeclaration
 >     : type_specifier name=Identifier  ';'
 >	  {
 >		System.out.println("name:" + name.getText());
 >	  }
 >     ;
 >
 >The above works just fine. But what's the easiest way to access
 >the result of the rules?

Depends on what you mean by the "result".

If you just want the text, you can use $name.text.
If you want the return value of the rule (assuming you've defined 
one), you can use $name.valuename (whatever it happens to be -- 
there can even be more than one).

There's a number of other possibilities.  They're listed in the 
wiki.


From antlr at mirality.co.nz  Sat Aug 23 23:52:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 24 Aug 2008 18:52:30 +1200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
Message-ID: <20080824065236.8C5C72F433A@www.antlr.org>

At 15:13 24/08/2008, Torsten Curdt wrote:
 >When I now look at the AST it appears to be totally flat
[...]
 >But that totally blows up the grammar. Why isn't it just
 >the same hierarchy as the input tree?

What hierarchy?  How can ANTLR possibly know which of the tokens 
is the logical root of the tree, and of the subtrees?  Operators, 
for example, commonly appear infix, while things like class 
declarations appear prefix, with additional modifiers optionally 
prefixed and suffixed to that.  There's just no way it can create 
a sensible structure without information from the grammar author, 
so it doesn't try.

You can either use a full rewrite notation, as you showed in your 
original email, or you can use a more concise representation for 
the simple case where there's only one root and you want the 
tokens to appear in order.

For example, the rewrite you posted:
   classDeclaration : 'class' Identifier ( 'extends' 
identifierList)?
classBody -> ^('class' Identifier ( 'extends' identifierList)?
classBody) ;

Could have just been written like this:
   classDeclaration : 'class'^ Identifier ('extends' 
identifierList)? classBody;

Either way, it will produce a tree like this:
   ^('class' Identifier (contents of classBody...))
or this:
   ^('class' Identifier 'extends' (contents of identifierList...) 
(contents of classBody...))

You can extend this to modify the tree a bit; for example to put 
the 'extends' clause into a subtree if it's present, you can use 
this:
   classDeclaration : 'class'^ Identifier baseClass? classBody;
   baseClass : 'extends'^ identifierList;

If you wanted to change the order things appeared in, though, or 
insert additional tokens not present in the input (imaginary 
tokens), then you have to use a -> rewrite.  (You can omit tokens 
present in the input with !, though.)

The things to remember are:
   1. You can either use a -> rewrite *or* the ^ and ! operators 
within any given rule -- never both.  (You get *really* obscure 
errors if you violate this.)  Different rules can use different 
types, though.
   2. -> gives you more flexibility but you need to restate 
things, and you need to make sure that the cardinality on both 
sides matches
   3. If you're not using a -> rewrite, then you can have at most 
one ^ within any given rule.
   4. The root node must be a single token.  You can't make a 
subrule or block into a root.
   5. You can use -> multiple times within a rule, but each time 
it sets the output of the entire rule.  But you can refer to a 
tree built by an earlier use of ->, so you can build up recursive 
trees very easily.


From tcurdt at vafer.org  Sun Aug 24 04:19:53 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 13:19:53 +0200
Subject: [antlr-interest] labels for rule results?
In-Reply-To: <48b100b9.1e3e400a.2aae.6d3bSMTPIN_ADDED@mx.google.com>
References: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>
	<48b100b9.1e3e400a.2aae.6d3bSMTPIN_ADDED@mx.google.com>
Message-ID: <CAACEE3F-D9B2-45AF-9BCF-C6E11C6FADAA@vafer.org>

Hey Gavin,

Thanks for the answer. But that wasn't what I was trying to ask. :)

attributeDeclaration
     : thetype=type_specifier name=Identifier  ';'
	  {
		System.out.println("name:" + name.getText());
		System.out.println("type:" + thetype);
	  }
     ;

"thetype" is problem. There is no problem with "name".

cheers
--
Torsten

On Aug 24, 2008, at 08:33, Gavin Lambert wrote:

> At 15:24 24/08/2008, Torsten Curdt wrote:
> >attributeDeclaration
> >     : type_specifier name=Identifier  ';'
> >	  {
> >		System.out.println("name:" + name.getText());
> >	  }
> >     ;
> >
> >The above works just fine. But what's the easiest way to access
> >the result of the rules?
>
> Depends on what you mean by the "result".
>
> If you just want the text, you can use $name.text.
> If you want the return value of the rule (assuming you've defined  
> one), you can use $name.valuename (whatever it happens to be --  
> there can even be more than one).
>
> There's a number of other possibilities.  They're listed in the wiki.
>


From tcurdt at vafer.org  Sun Aug 24 04:32:22 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 13:32:22 +0200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
Message-ID: <2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>

> What hierarchy?  How can ANTLR possibly know which of the tokens is  
> the logical root of the tree, and of the subtrees?  Operators, for  
> example, commonly appear infix, while things like class declarations  
> appear prefix, with additional modifiers optionally prefixed and  
> suffixed to that.  There's just no way it can create a sensible  
> structure without information from the grammar author, so it doesn't  
> try.

Well, of course there is an implicit hierarchy

  ruleA: ruleB;

  ruleB: ruleC;

Is basically:

  ruleA -> ruleB -> ruleC

That is what ANTLRWorks is displaying and that is what I expected the  
AST to be. That it might not be the desired final structure - but  
that's a different thing.

> You can either use a full rewrite notation, as you showed in your  
> original email, or you can use a more concise representation for the  
> simple case where there's only one root and you want the tokens to  
> appear in order.
>
> For example, the rewrite you posted:
>  classDeclaration : 'class' Identifier ( 'extends' identifierList)?
> classBody -> ^('class' Identifier ( 'extends' identifierList)?
> classBody) ;
>
> Could have just been written like this:
>  classDeclaration : 'class'^ Identifier ('extends' identifierList)?  
> classBody;
>
> Either way, it will produce a tree like this:
>  ^('class' Identifier (contents of classBody...))
> or this:
>  ^('class' Identifier 'extends' (contents of identifierList...)  
> (contents of classBody...))
>
> You can extend this to modify the tree a bit; for example to put the  
> 'extends' clause into a subtree if it's present, you can use this:
>  classDeclaration : 'class'^ Identifier baseClass? classBody;
>  baseClass : 'extends'^ identifierList;
>
> If you wanted to change the order things appeared in, though, or  
> insert additional tokens not present in the input (imaginary  
> tokens), then you have to use a -> rewrite.  (You can omit tokens  
> present in the input with !, though.)

I see

> The things to remember are:
>  1. You can either use a -> rewrite *or* the ^ and ! operators  
> within any given rule -- never both.  (You get *really* obscure  
> errors if you violate this.)  Different rules can use different  
> types, though.
>  2. -> gives you more flexibility but you need to restate things,  
> and you need to make sure that the cardinality on both sides matches
>  3. If you're not using a -> rewrite, then you can have at most one  
> ^ within any given rule.
>  4. The root node must be a single token.  You can't make a subrule  
> or block into a root.
>  5. You can use -> multiple times within a rule, but each time it  
> sets the output of the entire rule.  But you can refer to a tree  
> built by an earlier use of ->, so you can build up recursive trees  
> very easily.

Thanks for summarizing that!

cheers
--
Torsten

From antlr at mirality.co.nz  Sun Aug 24 04:34:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 24 Aug 2008 23:34:19 +1200
Subject: [antlr-interest] labels for rule results?
In-Reply-To: <CAACEE3F-D9B2-45AF-9BCF-C6E11C6FADAA@vafer.org>
References: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>
	<48b100b9.1e3e400a.2aae.6d3bSMTPIN_ADDED@mx.google.com>
	<CAACEE3F-D9B2-45AF-9BCF-C6E11C6FADAA@vafer.org>
Message-ID: <20080824113423.9C09A2F4318@www.antlr.org>

At 23:19 24/08/2008, Torsten Curdt wrote:
 >Thanks for the answer. But that wasn't what I was trying to ask. 

 >:)
 >
 >attributeDeclaration
 >     : thetype=type_specifier name=Identifier  ';'
 >	  {
 >		System.out.println("name:" + name.getText());
 >		System.out.println("type:" + thetype);
 >	  }
 >     ;
 >
 >"thetype" is problem. There is no problem with "name".

The answer is the same.  You need to use the proper syntax (using 
$ attributes).


From antlr at mirality.co.nz  Sun Aug 24 04:45:33 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 24 Aug 2008 23:45:33 +1200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>
Message-ID: <20080824114538.4DBB111EC96@www.antlr.org>

At 23:32 24/08/2008, Torsten Curdt wrote:
 >Well, of course there is an implicit hierarchy
 >
 >  ruleA: ruleB;
 >
 >  ruleB: ruleC;
 >
 >Is basically:
 >
 >  ruleA -> ruleB -> ruleC
 >
 >That is what ANTLRWorks is displaying and that is what I 
expected
 >the AST to be. That it might not be the desired final structure 
-
 >but that's a different thing.

That's a parse tree, though, not an AST.  An AST can only be built 
from tokens, and parser rules aren't tokens.

I think there actually is a way to get ANTLR to generate a parse 
tree in normal (non-AST) mode, but I can't remember the 
specifics.  There might be something on the wiki.


From tcurdt at vafer.org  Sun Aug 24 05:20:34 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 14:20:34 +0200
Subject: [antlr-interest] labels for rule results?
In-Reply-To: <48b1473f.0917400a.2308.ffff954eSMTPIN_ADDED@mx.google.com>
References: <95A1771B-0E25-4B2A-B8DC-436F815B4CCF@vafer.org>
	<48b100b9.1e3e400a.2aae.6d3bSMTPIN_ADDED@mx.google.com>
	<CAACEE3F-D9B2-45AF-9BCF-C6E11C6FADAA@vafer.org>
	<48b1473f.0917400a.2308.ffff954eSMTPIN_ADDED@mx.google.com>
Message-ID: <C15D128F-E50B-4DD1-9A9C-9084E232E0EF@vafer.org>


On Aug 24, 2008, at 13:34, Gavin Lambert wrote:

> At 23:19 24/08/2008, Torsten Curdt wrote:
> >Thanks for the answer. But that wasn't what I was trying to ask.
> >:)
> >
> >attributeDeclaration
> >     : thetype=type_specifier name=Identifier  ';'
> >	  {
> >		System.out.println("name:" + name.getText());
> >		System.out.println("type:" + thetype);
> >	  }
> >     ;
> >
> >"thetype" is problem. There is no problem with "name".
>
> The answer is the same.  You need to use the proper syntax (using $  
> attributes).
>

Hm ...the only thing I found was this

  http://www.antlr.org/wiki/display/ANTLR3/Special+symbols+in+actions

So I haven't really found that in documentation.

But I can confirm that it works perfectly :)

Thanks!
--
Torsten

From tcurdt at vafer.org  Sun Aug 24 05:30:31 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Sun, 24 Aug 2008 14:30:31 +0200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>
	<48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
Message-ID: <09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>


On Aug 24, 2008, at 13:45, Gavin Lambert wrote:

> At 23:32 24/08/2008, Torsten Curdt wrote:
> >Well, of course there is an implicit hierarchy
> >
> >  ruleA: ruleB;
> >
> >  ruleB: ruleC;
> >
> >Is basically:
> >
> >  ruleA -> ruleB -> ruleC
> >
> >That is what ANTLRWorks is displaying and that is what I expected
> >the AST to be. That it might not be the desired final structure -
> >but that's a different thing.
>
> That's a parse tree, though, not an AST.  An AST can only be built  
> from tokens, and parser rules aren't tokens.

Hm ...so what is the tree that ANTLRWorks shows when you use the  
interpreter? That tree has the rules and tokens in there.

This time I might actually get away by using action instead of going  
through a dedicated AST. But would be nice to get clarified what the  
tree in ANTLRWorks actually shows.

cheers
--
Torsten

From mattpalms at gmail.com  Sun Aug 24 05:52:05 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Sun, 24 Aug 2008 13:52:05 +0100
Subject: [antlr-interest] Missing characters in partial matches
In-Reply-To: <80D21352-8EC2-4237-B2FD-A730158429BF@classdump.org>
References: <36c8729e0808221720r3fae4a56s2006244e47a358f8@mail.gmail.com>
	<1219451397.15169.117.camel@jimi>
	<36c8729e0808221811p47bf07a0ha08c0bfdc3d68510@mail.gmail.com>
	<20080823030947.08EF62F4346@www.antlr.org>
	<ebc876d70808222214v26b9c18fw273887e2e490464a@mail.gmail.com>
	<48afeedb.0913c00a.0f2f.6ca0SMTPIN_ADDED@mx.google.com>
	<ebc876d70808230505l71541847hb6b927ecab2b1be8@mail.gmail.com>
	<36c8729e0808230850i54c500f9w2ebd8d7d3613b2f9@mail.gmail.com>
	<80D21352-8EC2-4237-B2FD-A730158429BF@classdump.org>
Message-ID: <36c8729e0808240552l35391f3dg20c5130d05d3ccb0@mail.gmail.com>

Hi all,

The Comment code you guys provided (with correct punctuation) did in fact
solve my problem, and I also have a better (not perfect!) understanding of
the lexer now.  The token DFA's are indeed illuminating, once you get the
hang of them.

It took me a little while to figure out the Comment code; that the empty
alternative was used to switch the Comment token type to Lsqb, if only the
Lsqb had actually matched.  A very nice hack - although I would have
preferred not to have had to use it :)

Many thanks again,

Matt

On Sat, Aug 23, 2008 at 6:24 PM, Kay R?pke <kroepke at classdump.org> wrote:

>
> On Aug 23, 2008, at 5:50 PM, Matt Palmer wrote:
>
>  Just a quick thank you to everyone who's responded.  I feel like I have a
>> better grasp on what's going on now.  I'm going to have a play, and look
>> at
>> the tokens DFA (or even the code, if that doesn't enlighten me).  I'm keen
>> to understand how the v3 lexer actually works, but also how it might
>> otherwise work too :)
>>
>
>
> The DFA in ANTLRWorks (or by generating it by hand and giving
> org.antlr.Tool the -dfa option) is really what you want to be looking at.
> For big DFAs the codegen will likely be a table-based DFA and that's not
> really readable ;)
>
> Just come up with some simple cases where it doesn't do what you expect,
> then look at the DFAs. You'll pretty much know what happens then :) Together
> with the very helpful summary by the others in this thread, that is!
>
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080824/c5ce4171/attachment.html 

From gaius.c.novus at gmail.com  Sun Aug 24 09:59:14 2008
From: gaius.c.novus at gmail.com (Gaius Centus Novus)
Date: Sun, 24 Aug 2008 12:59:14 -0400
Subject: [antlr-interest] Unicode in Lexer
Message-ID: <13d032790808240959q3303238aif9c6652404c35565@mail.gmail.com>

I'm trying to build a lexer, and I'd like to include Unicode
characters.  For example, I'd like to be able to do

NUMERIC: INTEGER | FLOAT | ... | IRRATIONAL | INFINITE;

...

IRRATIONAL: PI | ...;

PI: '?';   // greek lowercase pi: Unicode U+03C0

INFINITE = SIGN? '?';  // the infinity symbol: Unicode U+221E

Antlr gives me the following error on trying to build a lexer for that
last rule:
[12:45:36] MyLexer.g:35:17: expecting ''', found '?'
 at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
 ...

How do I represent unicode characters in the lexer?

In addition to these constants, I'd also like to be able to allow
arbitrary Unicode characters in certain rules.  For example, where
Java has something like:

ID: 'a'..'z' ('a'..'z' | 'A'..'Z' | '_')*

I'd like to match any of the following (and infinitely many others):

'?' // square root: Unicode U+221A
'r?sum?'  //resume with properly accented e's: U+00E9
etc.

Has anyone built rules that allow arbitrary code points?  Or better
yet, some specific subsets?

I found a link to http://www.antlr.org/doc/lexer.html#unicode, but
that page no longer exists.

Thanks,
Gaius

From jaluber at gmx.de  Sun Aug 24 10:57:43 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 24 Aug 2008 19:57:43 +0200
Subject: [antlr-interest] Unicode in Lexer
In-Reply-To: <13d032790808240959q3303238aif9c6652404c35565@mail.gmail.com>
References: <13d032790808240959q3303238aif9c6652404c35565@mail.gmail.com>
Message-ID: <48B1A117.8090506@gmx.de>

Gaius Centus Novus schrieb:
> I'm trying to build a lexer, and I'd like to include Unicode
> characters.  For example, I'd like to be able to do
> 
> NUMERIC: INTEGER | FLOAT | ... | IRRATIONAL | INFINITE;
> 
> ...
> 
> IRRATIONAL: PI | ...;
> 
> PI: '?';   // greek lowercase pi: Unicode U+03C0
> 
> INFINITE = SIGN? '?';  // the infinity symbol: Unicode U+221E
> 
> Antlr gives me the following error on trying to build a lexer for that
> last rule:
> [12:45:36] MyLexer.g:35:17: expecting ''', found '?'
>  at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
>  ...
> 
> How do I represent unicode characters in the lexer?
> 
> In addition to these constants, I'd also like to be able to allow
> arbitrary Unicode characters in certain rules.  For example, where
> Java has something like:
> 
> ID: 'a'..'z' ('a'..'z' | 'A'..'Z' | '_')*
> 
> I'd like to match any of the following (and infinitely many others):
> 
> '?' // square root: Unicode U+221A
> 'r?sum?'  //resume with properly accented e's: U+00E9
> etc.
> 
> Has anyone built rules that allow arbitrary code points?  Or better
> yet, some specific subsets?
> 
> I found a link to http://www.antlr.org/doc/lexer.html#unicode, but
> that page no longer exists.
> 
> Thanks,
> Gaius

Well, the ANTLR tool itself does so far consume only the 7-bit ASCII
char page and can't handle unicode. But lexers can recognize unicode
characters natively, when they are specified via '\uxxxx'. There is no
direct support for chars beyound '\u10000', as Java doesn't support
them, but you can create rules which scan for the surrogate char range
and translate them later (if your target is e.g. C#).

Johannes

From gaius.c.novus at gmail.com  Sun Aug 24 17:00:34 2008
From: gaius.c.novus at gmail.com (Gaius Centus Novus)
Date: Sun, 24 Aug 2008 20:00:34 -0400
Subject: [antlr-interest] Antlr Ant task
Message-ID: <13d032790808241700r8cd5ffbhb7980af7fa0ee5b1@mail.gmail.com>

Can somebody point me to the library that includes the Antlr Ant task?  I've got

<antlr target="MyLexer.g">
  <classpath refid="build.classpath" />
</antlr>

In ${build.classpath} I have antlr-3.1.jar, antlr-2.7.7.jar,
antlr-runtime-3.1.jar, and stringtemplate-3.2.jar.  None of those
seems to include the task.

Thanks,
Gaius

From jean.morissette at gmail.com  Sun Aug 24 17:08:32 2008
From: jean.morissette at gmail.com (Jean Morissette)
Date: Sun, 24 Aug 2008 20:08:32 -0400
Subject: [antlr-interest] Antlr Ant task
In-Reply-To: <13d032790808241700r8cd5ffbhb7980af7fa0ee5b1@mail.gmail.com>
References: <13d032790808241700r8cd5ffbhb7980af7fa0ee5b1@mail.gmail.com>
Message-ID: <97ad10900808241708w5156a758x9c8183df60ea0c03@mail.gmail.com>

You can download the ant task for Antlr v3 from http://www.antlr.org
under the File Sharing section - there is a link named "ANTLR v3 task
for Ant"

Regards,
Jean

2008/8/24 Gaius Centus Novus <gaius.c.novus at gmail.com>:
> Can somebody point me to the library that includes the Antlr Ant task?  I've got
>
> <antlr target="MyLexer.g">
>  <classpath refid="build.classpath" />
> </antlr>
>
> In ${build.classpath} I have antlr-3.1.jar, antlr-2.7.7.jar,
> antlr-runtime-3.1.jar, and stringtemplate-3.2.jar.  None of those
> seems to include the task.
>
> Thanks,
> Gaius
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From ymo.mail at gmail.com  Sun Aug 24 20:50:08 2008
From: ymo.mail at gmail.com (Ymo)
Date: Sun, 24 Aug 2008 23:50:08 -0400
Subject: [antlr-interest] Antlr grammar for xml like grammar
Message-ID: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>

Hi.

I am trying to write a lexer for an xml like grammar. I am pulling my hear
for i don't understand why it is not working.

The grammar goes like this :

TOK_TEXT
<% ... %>
TOK_TEXT
<%@ .... %>
<%-- COMMENT --%>


I can't  figure why my ml comments are getting eaten by the TOK_TEXT token
always.

YOur help is greatly appreciated !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080824/f3cac319/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Xtc.g
Type: application/octet-stream
Size: 3691 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080824/f3cac319/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main.xtl
Type: application/octet-stream
Size: 869 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080824/f3cac319/attachment-0001.obj 

From tbrandonau at gmail.com  Mon Aug 25 00:08:55 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 25 Aug 2008 17:08:55 +1000
Subject: [antlr-interest] Literals not handled in grammars with import
Message-ID: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>

In 31, imported literals are not being handled correctly in tree
grammars utilising import.

Given the included grammars, while TestTree.g works properly, in
TestTree2.g the literals are not correctly imported and new token
types are assigned. This occurs in both rules from the imported
grammar (tok1 in TestTree2_TestTree.java) and new rules in the
importing grammar (tok1_2 in TestTree2.java).

Tom.

<Test.g>
grammar Test;

tok1: 'tok1';
</Test.g>

<TestTree.g>
tree grammar TestTree;

options {
	tokenVocab=Test;
	ASTLabelType = CommonTree;
}

tok1:
	'tok1'
	;
</Test2.g>

<TestTree2.g>
tree grammar TestTree2;

options {
	tokenVocab=Test;
	ASTLabelType = CommonTree;
}

import TestTree;

tok1_2:
	'tok1'
	;
</TestTree2.g>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 31 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/fd70a5b2/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestTree.g
Type: application/octet-stream
Size: 108 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/fd70a5b2/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestTree2.g
Type: application/octet-stream
Size: 131 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/fd70a5b2/attachment-0002.obj 

From r_reitzi at cs.uni-kl.de  Mon Aug 25 01:02:59 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 25 Aug 2008 10:02:59 +0200
Subject: [antlr-interest] Antlr grammar for xml like grammar
In-Reply-To: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
References: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
Message-ID: <20080825100259.557717mq6n2cceas@horde.verrech.net>

Hi!

Lexer rules are greedy and tried top-down. So, first ANTLR tries to  
match your input against TOK_TEXT. This works perfectly for ML  
comments as well, thus a token TOK_TEXT is created.

To get the behaviour you want, there are two possibilities:

1. change the order of your rules in such a way that they are  
occurring in an order of increasing generality.
2. use predicates. this can even be necessary if 1. fails, exspecially  
when there is no order as described.

There may be a solution including turning of greedy mode for some  
rules, but I have no experience with this.

Regards

Raphael

Ymo <ymo.mail at gmail.com> wrote (Mon Aug 25 05:50:08 2008):

> Hi.
>
> I am trying to write a lexer for an xml like grammar. I am pulling my hear
> for i don't understand why it is not working.
>
> The grammar goes like this :
>
> TOK_TEXT
> <% ... %>
> TOK_TEXT
> <%@ .... %>
> <%-- COMMENT --%>
>
>
> I can't  figure why my ml comments are getting eaten by the TOK_TEXT token
> always.
>
> YOur help is greatly appreciated !
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/f1afe5e3/attachment.bin 

From r_reitzi at cs.uni-kl.de  Mon Aug 25 01:06:06 2008
From: r_reitzi at cs.uni-kl.de (Raphael Reitzig)
Date: Mon, 25 Aug 2008 10:06:06 +0200
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
Message-ID: <20080825100606.11873exy3ifpw5c0@horde.verrech.net>

Hi Thomas!

I do not know what goes wrong there, but I learned the general rule:

Thou shalt not use literals in parser or walker rules!

Thus, I would expect your problem, be there a bug or not, to vanish if  
you create a lexer rule and refer to this token at all occurrences of  
your string.
Improves maintainability, too.

Regards

Raphael

"Thomas Brandon" <tbrandonau at gmail.com> wrote (Mon Aug 25 09:08:55 2008):

> In 31, imported literals are not being handled correctly in tree
> grammars utilising import.
>
> Given the included grammars, while TestTree.g works properly, in
> TestTree2.g the literals are not correctly imported and new token
> types are assigned. This occurs in both rules from the imported
> grammar (tok1 in TestTree2_TestTree.java) and new rules in the
> importing grammar (tok1_2 in TestTree2.java).
>
> Tom.
>
> <Test.g>
> grammar Test;
>
> tok1: 'tok1';
> </Test.g>
>
> <TestTree.g>
> tree grammar TestTree;
>
> options {
> 	tokenVocab=Test;
> 	ASTLabelType = CommonTree;
> }
>
> tok1:
> 	'tok1'
> 	;
> </Test2.g>
>
> <TestTree2.g>
> tree grammar TestTree2;
>
> options {
> 	tokenVocab=Test;
> 	ASTLabelType = CommonTree;
> }
>
> import TestTree;
>
> tok1_2:
> 	'tok1'
> 	;
> </TestTree2.g>
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: PGP Digital Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/84fb2ce2/attachment.bin 

From gaochunguang at 163.com  Mon Aug 25 01:08:06 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Mon, 25 Aug 2008 16:08:06 +0800
Subject: [antlr-interest] how to set delimiters "$$" in group file?(ST)
Message-ID: <003001c90689$b538bb10$1300a8c0@alien>

how to set delimiters "$$" in group file?
thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/07253dd7/attachment.html 

From regis at lebrette.net  Mon Aug 25 01:48:09 2008
From: regis at lebrette.net (=?ISO-8859-1?Q?R=E9gis_Le_Brettevillois?=)
Date: Mon, 25 Aug 2008 10:48:09 +0200
Subject: [antlr-interest] Antlr mailing list indexed at MarkMail
Message-ID: <48B271C9.50702@lebrette.net>

Just for your information, I don't participate a lot but I read a lot 
this mailing list.
I've asked the excellent MarkMail website to index the Antlr mailing 
lists, you can access this at this location:

http://antlr.markmail.org/search/?q=

All antlr mailing lists are indexed.

Hope you will enjoy it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/1b3d0cef/attachment.html 

From mattpalms at gmail.com  Mon Aug 25 02:35:59 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Mon, 25 Aug 2008 10:35:59 +0100
Subject: [antlr-interest] Antlr grammar for xml like grammar
In-Reply-To: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
References: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
Message-ID: <36c8729e0808250235r5ffbc5fcl3cf1f273fe350c82@mail.gmail.com>

Hi Ymo,

I am also building a tag language parser in ANTLR, but I'm not experienced
enough to diagnose your problem by simply looking at your grammar.  The
files you provided are not stand-alone, and don't build in antlrworks - can
you post something that compiles, so we can have a play with it?  Preferably
in a form where you can look at the parse tree in the antlrworks debugger,
and see how the document is being constructed.

I do suspect you will have some of the same partial ML comment prefix
matching issues I had (a couple of posts ago - "missing characters in
partial matches").  To see if you're affected (after you get comments to
match at all!), try parsing some text that is almost but not quite a
comment, like:

?%-not a comment
>

If you find that the lexer doesn't match this text properly (missing
characters), the solution to that was provided by the other good folk on
this list.

cheers,

MattP.

On Mon, Aug 25, 2008 at 4:50 AM, Ymo <ymo.mail at gmail.com> wrote:

> Hi.
>
> I am trying to write a lexer for an xml like grammar. I am pulling my hear
> for i don't understand why it is not working.
>
> The grammar goes like this :
>
> TOK_TEXT
> <% ... %>
> TOK_TEXT
> <%@ .... %>
> <%-- COMMENT --%>
>
>
> I can't  figure why my ml comments are getting eaten by the TOK_TEXT token
> always.
>
> YOur help is greatly appreciated !
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/c86908dc/attachment.html 

From sven.van.echelpoel at empolis.com  Mon Aug 25 05:41:46 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Mon, 25 Aug 2008 14:41:46 +0200
Subject: [antlr-interest] [C target] [3.1] Cast to ASTLabelType missing in
	Treeparser	template
Message-ID: <1219668106.5626.16.camel@cartman>

Hi,

When compiling a tree parser generated for the C target, the compiler
complains about an illegal conversion from void* when it is compiled as
a C++ source. E.g.:

`MyTreeParser_translation_unit_return translation_unit(
        MyTreeParser_Ctx_struct *
    )':
.../MyTreeParser.cpp:603: error:
    invalid conversion from `void *' to `ANTLR3_BASE_TREE_struct *'

I think I have have traced the source of this problem down to this
template in ASTTreeParser.stg:


ruleCleanUp() ::= <<
<super.ruleCleanUp(...)>
<if(backtracking)>
if ( BACKTRACKING==0 ) {<\n>
<endif>
<if(!ruleDescriptor.isSynPred)>
	retval.stop = LT(-1);<\n>
<endif>
        retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);
                    ^^^^^^^^^^^
                    (Cast Missing here?)
[...]

The corresponding template in ASTParser.stg does have the cast in place:

ruleCleanUp() ::= <<
<super.ruleCleanUp(...)>
<if(backtracking)>
if ( BACKTRACKING==0 ) {<\n>
<endif>

<if(!ruleDescriptor.isSynPred)>
	retval.stop = LT(-1);<\n>
<endif>
	retval.tree =
 (<ASTLabelType>)(ADAPTOR->rulePostProcessing(ADAPTOR, root_0));
^^^^^^^^^^^^^^^^^
(With cast here)

[...]

I Added the cast to my local copy of the ASTTreeParser templates,
updated the jar file and now everything seems to work fine.

Can it be that this is an oversight and that the cast should be in the
template?

Regards,

Sven




From leon.antlr at mac.com  Mon Aug 25 06:00:28 2008
From: leon.antlr at mac.com (Leon Su)
Date: Mon, 25 Aug 2008 06:00:28 -0700
Subject: [antlr-interest] Questions about gUnit
In-Reply-To: <48AE4A8D.3080203@tijerino.net>
References: <48AE4A8D.3080203@tijerino.net>
Message-ID: <C56688CD-2A00-4D4E-A9B8-C1554361B481@mac.com>

Hi Yuri,

As for your first question, gUnit receives output string "stringabc 
\n" from System.out.println("stringabc").
so try this:
rule1:
"stringabc" -> "stringabc\n"

In addition, current version of gUnit is not able to test the rule  
with arguments. I have plans to make gUnit be able to test this part  
including grammar actions under jUnit translation mode.

Leon

On Aug 21, 2008, at 10:11 PM, Yuri Tijerino wrote:

> Hi,
>
> I have a couple of questions about gUnit.  One is posted at:
> http://www.jguru.com/forums/view.jsp?EID=1368630
>
> the other one is as follows:
>
> How do you run gUnit tests on rules that take arguments such as:
>
> rule [type arg]
>     :
>        << some code that uses arg >>
>     ;
>
> I tried this by including the rule as follows in the
> GrammarName.testsuite file
>
> rule:
> "test1" OK
>
> I also tried:
>
> rule [arg]:
> "test1" OK
>
> and
>
> rule(arg):
> "test1" OK
>
> But java complains that  GrammarNameParser.rule() does not exists as
> follows:
>
> java.lang.NoSuchMethodException: GrammarNameParser.rule()
>
> If I comment out the argument in the grammar file as follows:
>
>
> rule //[type arg]
>     :
>        << some code that does not use arg >>
>     ;
>
> then the tests seem to go fine.
>
> What is the correct way to run tests on rules with arguments?
>
> Yuri Tijerino
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr- 
> interest/your-email-address
>


From rschulz at sonic.net  Mon Aug 25 06:12:22 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Aug 2008 06:12:22 -0700
Subject: [antlr-interest] Antlr mailing list indexed at MarkMail
In-Reply-To: <48B271C9.50702@lebrette.net>
References: <48B271C9.50702@lebrette.net>
Message-ID: <200808250612.22989.rschulz@sonic.net>

On Monday 25 August 2008 01:48, R?gis Le Brettevillois wrote:
> Just for your information, I don't participate a lot but I read a lot
> this mailing list. I've asked the excellent MarkMail website to index
> the Antlr mailing lists, you can access this at this location: 
>
> http://antlr.markmail.org/search/?q=
>
> All antlr mailing lists are indexed.
>
> Hope you will enjoy it.

That's excellent. MarkMail is quite good, though there's stuff to learn 
about how best to use it. I use it before I ask a Groovy or Grails 
question, both of whose lists are archived and indexed there.


Randall Schulz

From tbrandonau at gmail.com  Mon Aug 25 06:38:23 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 25 Aug 2008 23:38:23 +1000
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <20080825100606.11873exy3ifpw5c0@horde.verrech.net>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
	<20080825100606.11873exy3ifpw5c0@horde.verrech.net>
Message-ID: <ebc876d70808250638n6be6c89dn776a9392cf4e8b52@mail.gmail.com>

Yeah, that's a slightly different issue. That's literals in the parser
which cause problems for new users who mistakenly think that they are
handled in the parser rather than being a shortcut to generate lexer
rules. This is a literal in a tree parser which doesn't have those
problems. Still, I tend to avoid literals as a style thing, and would
happily change but I'm reusing an existing grammar so I don't really
want to change it to ease bringing across future changes to the reused
grammar.

Tom.
On Mon, Aug 25, 2008 at 6:06 PM, Raphael Reitzig <r_reitzi at cs.uni-kl.de> wrote:
> Hi Thomas!
>
> I do not know what goes wrong there, but I learned the general rule:
>
> Thou shalt not use literals in parser or walker rules!
>
> Thus, I would expect your problem, be there a bug or not, to vanish if you
> create a lexer rule and refer to this token at all occurrences of your
> string.
> Improves maintainability, too.
>
> Regards
>
> Raphael

From jaluber at gmx.de  Mon Aug 25 06:44:51 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Aug 2008 15:44:51 +0200
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <ebc876d70808250638n6be6c89dn776a9392cf4e8b52@mail.gmail.com>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>	<20080825100606.11873exy3ifpw5c0@horde.verrech.net>
	<ebc876d70808250638n6be6c89dn776a9392cf4e8b52@mail.gmail.com>
Message-ID: <48B2B753.2080007@gmx.de>

Thomas Brandon schrieb:
> Yeah, that's a slightly different issue. That's literals in the parser
> which cause problems for new users who mistakenly think that they are
> handled in the parser rather than being a shortcut to generate lexer
> rules. This is a literal in a tree parser which doesn't have those
> problems. Still, I tend to avoid literals as a style thing, and would
> happily change but I'm reusing an existing grammar so I don't really
> want to change it to ease bringing across future changes to the reused
> grammar.

You could always push your changes upstream. :)

Johannes
> 
> Tom.
> On Mon, Aug 25, 2008 at 6:06 PM, Raphael Reitzig <r_reitzi at cs.uni-kl.de> wrote:
>> Hi Thomas!
>>
>> I do not know what goes wrong there, but I learned the general rule:
>>
>> Thou shalt not use literals in parser or walker rules!
>>
>> Thus, I would expect your problem, be there a bug or not, to vanish if you
>> create a lexer rule and refer to this token at all occurrences of your
>> string.
>> Improves maintainability, too.
>>
>> Regards
>>
>> Raphael
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From tbrandonau at gmail.com  Mon Aug 25 07:22:18 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 00:22:18 +1000
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
Message-ID: <ebc876d70808250722m48296391v120f8361b10057a7@mail.gmail.com>

Okay, further investigation shows that as tokenVocabs are ignored in
slave grammars ANTLR processes the reference to the literal in the
slave grammar, and adds it as an unassigned string. Then when
processing the master grammar it imports the vocab and correctly
defines the token. But then in
AssignTokenTypesBehavior.assignStringTypes it defines the unassigned
string reference from the slave grammar a new type, overwriting the
correct definition from the vocab.
I fixed this by adding a check for an existing type, giving:
	protected void assignStringTypes(Grammar root) {
		// walk string literals assigning types to unassigned ones
		Set s = stringLiterals.keySet();
		for (Iterator it = s.iterator(); it.hasNext();) {
			String lit = (String) it.next();
			// ADDED
			// Check if literal was subsequently assigned a type
			Integer curType;
			if((curType = grammar.composite.stringLiteralToTypeMap.get(lit)) != null) {
				stringLiterals.put(lit, curType);
				continue;
			}
			// END ADDED
			Integer oldTypeI = (Integer)stringLiterals.get(lit);
			int oldType = oldTypeI.intValue();
			if ( oldType<Label.MIN_TOKEN_TYPE ) {
				Integer typeI = Utils.integer(root.getNewTokenType());
				stringLiterals.put(lit, typeI);
				// if string referenced in combined grammar parser rule,
				// automatically define in the generated lexer
				root.defineLexerRuleForStringLiteral(lit, typeI.intValue());
			}
		}
	}
A test case for the problem is:
	public void testDelegatesSeeSameTokenTypeForLiteral() throws Exception {
		ErrorQueue equeue = new ErrorQueue();
		ErrorManager.setErrorListener(equeue);
		String parser =
			"grammar P;\n" +
			"options { output=AST; }" +
			"tokens { A;B;C; }" +
			"x : 'x'  {System.out.println(\"P.x\");};\n";
		if(!antlr("P.g", "P.g", parser, false))
			throw new Exception("Error generating parser");
		if(!compile("PLexer.java"))
			throw new Exception("Error compiling lexer");
		if(!compile("PParser.java"))
			throw new Exception("Error compiling parser");
		
		String slaveTreeParser =
			"tree grammar S;\n" +
			"tokens { A; }" +
			"x : 'x' {System.out.println(\"S.x\");};\n";
		if(!antlr("S.g", "S.g", slaveTreeParser, false))
			throw new Exception("Error generating slave tree parser");
		if(!compile("S.java"))
			throw new Exception("Error compiling slave tree parser");
		
		String masterTreeParser =
			"tree grammar M;\n" +
			"options { tokenVocab=P; }\n" +
			"import S;" +
			"tokens { A;B; }" +
			"x2 : 'x'  {System.out.println(\"M.x2\");};\n";
		if(!antlr("M.g", "M.g", masterTreeParser, false))
			throw new Exception("Error generating master tree parser");
		if(!compile("M.java"))
			throw new Exception("Error compiling master tree parser");
		
		writeFile(tmpdir, "input", "x");
		
		String found = rawExecRecognizer("PParser", "M", "PLexer", "x", "x",
true, false, false, false);
		assertEquals(
			"P.x\n" +
			"S.x\n", found);

		found = rawExecRecognizer("PParser", "M", "PLexer", "x", "x2", true,
false, false, false);
		assertEquals(
			"P.x\n" +
			"M.x2\n", found);
	}
I noticed also that before fixing as well as the assert failing the
test case reported an exception at:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 9
	at org.antlr.runtime.tree.TreeParser.getMissingSymbol(TreeParser.java:82)
	at org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecognizer.java:624)
	at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:117)
	at M_S.x(M_S.java:45)
	at M.x(M.java:62)
	at Test.main(Test.java:19)
But I think that may be because the error above introduced a
discontinuity in token numbers. There was no token with ID 8 so ID 9
was going off the end of the tokenNames array.

Tom.
On Mon, Aug 25, 2008 at 5:08 PM, Thomas Brandon <tbrandonau at gmail.com> wrote:
> In 31, imported literals are not being handled correctly in tree
> grammars utilising import.
>
> Given the included grammars, while TestTree.g works properly, in
> TestTree2.g the literals are not correctly imported and new token
> types are assigned. This occurs in both rules from the imported
> grammar (tok1 in TestTree2_TestTree.java) and new rules in the
> importing grammar (tok1_2 in TestTree2.java).
>
> Tom.
>
> <Test.g>
> grammar Test;
>
> tok1: 'tok1';
> </Test.g>
>
> <TestTree.g>
> tree grammar TestTree;
>
> options {
>        tokenVocab=Test;
>        ASTLabelType = CommonTree;
> }
>
> tok1:
>        'tok1'
>        ;
> </Test2.g>
>
> <TestTree2.g>
> tree grammar TestTree2;
>
> options {
>        tokenVocab=Test;
>        ASTLabelType = CommonTree;
> }
>
> import TestTree;
>
> tok1_2:
>        'tok1'
>        ;
> </TestTree2.g>
>

From tbrandonau at gmail.com  Mon Aug 25 07:37:45 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 00:37:45 +1000
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <48B2B753.2080007@gmx.de>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
	<20080825100606.11873exy3ifpw5c0@horde.verrech.net>
	<ebc876d70808250638n6be6c89dn776a9392cf4e8b52@mail.gmail.com>
	<48B2B753.2080007@gmx.de>
Message-ID: <ebc876d70808250737sd34c5bdu42d2602bcf913c1f@mail.gmail.com>

On Mon, Aug 25, 2008 at 11:44 PM, Johannes Luber <jaluber at gmx.de> wrote:
> Thomas Brandon schrieb:
>> Still, I tend to avoid literals as a style thing, and would
>> happily change but I'm reusing an existing grammar so I don't really
>> want to change it to ease bringing across future changes to the reused
>> grammar.
>
> You could always push your changes upstream. :)
>
> Johannes
Yeah, the grammar I'm reusing is actually ANTLRv3.g and ANTLRv3Tree.g.
So I don't really want to suggest stylistic changes to Ter ;) I'm sure
he is aware of the tradeoffs between the two approaches and I can see
the niceness of literals compared to cryptic token names.

Tom.

From jimi at temporal-wave.com  Mon Aug 25 08:13:57 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Aug 2008 08:13:57 -0700
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
Message-ID: <1219677237.15169.163.camel@jimi>

On Mon, 2008-08-25 at 17:08 +1000, Thomas Brandon wrote:

> In 31, imported literals are not being handled correctly in tree
> grammars utilising import.


You cannot use literals in imported grammars, only in single combined
grammars - sorry.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/e81f32fa/attachment.html 

From jimi at temporal-wave.com  Mon Aug 25 08:21:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Aug 2008 08:21:54 -0700
Subject: [antlr-interest] [C target] [3.1] Cast to ASTLabelType
	missing	in Treeparser	template
In-Reply-To: <1219668106.5626.16.camel@cartman>
References: <1219668106.5626.16.camel@cartman>
Message-ID: <1219677714.15169.167.camel@jimi>

On Mon, 2008-08-25 at 14:41 +0200, Sven Van Echelpoel wrote:

> Hi,
> 
> When compiling a tree parser generated for the C target, the compiler
> complains about an illegal conversion from void* when it is compiled as
> a C++ source. 
> 
> ruleCleanUp() ::= <<
> <super.ruleCleanUp(...)>
> <if(backtracking)>
> if ( BACKTRACKING==0 ) {<\n>
> <endif>
> <if(!ruleDescriptor.isSynPred)>
> 	retval.stop = LT(-1);<\n>
> <endif>
>         retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);
>                     ^^^^^^^^^^^
>                     (Cast Missing here?)
> [...]
> 

Yes, that looks likely - I will check and implement - thanks.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/247f1a8b/attachment.html 

From tbrandonau at gmail.com  Mon Aug 25 09:01:02 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 02:01:02 +1000
Subject: [antlr-interest] Literals not handled in grammars with import
In-Reply-To: <1219677237.15169.163.camel@jimi>
References: <ebc876d70808250008w39c462bbjf4a277a05cf6a898@mail.gmail.com>
	<1219677237.15169.163.camel@jimi>
Message-ID: <ebc876d70808250901r31c16989l33fb8d502578a32f@mail.gmail.com>

Are you sure? A few of the tests utilise literal declarations in
parsers with importing. It wasn't clear from a quick scan if any
actually tested for the correctness of this but they are used. And
this isn't literal declaration but rather using literals in a tree
parser with a standard, non-importing combined lexer\parser. And,
based on the code it looks like this should work it's just because of
the ordering of the processing. I think the fix I provided makes this
work fine without any further issues.

Tom.

On Tue, Aug 26, 2008 at 1:13 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Mon, 2008-08-25 at 17:08 +1000, Thomas Brandon wrote:
>
> In 31, imported literals are not being handled correctly in tree
> grammars utilising import.
>
> You cannot use literals in imported grammars, only in single combined
> grammars - sorry.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From ai06087 at Lehre.BA-Stuttgart.De  Mon Aug 25 09:15:28 2008
From: ai06087 at Lehre.BA-Stuttgart.De (Jenny Balfer)
Date: Mon, 25 Aug 2008 18:15:28 +0200
Subject: [antlr-interest] Comment rule matches links
Message-ID: <98001473415f6ac109a53aca8b55fbb0@lehre.ba-stuttgart.de>

Hi everybody,

I am pretty new to antlr and I am facing a problem that I could not find a
solution for.

I am using the "standard" rule for single line comments:

COMMENT : '//' (options {greedy=false;}: .)* ('\n'|'r')  { skip(); }
        ;

This works pretty well, until I have things like that in my code:

aString = "http://someUrl.com";

Because the url contains two slashes, the lexer treats everything from then
on as a comment and skips the rest of the line; only aString = "http:
remains.

I tried to fight this problem by adding a rule that matches every string
before the comment rule:

STRING : '"' (options {greedy=false;} .)* '"'
       ;

This temporarily solved the problem, but brought up further issues, so I
would really appreciate to get along without it. Does anyone have a better
solution to prevent my lexer from skipping urls just because they contain
slashes?

Thanks in advance.

Jenny


From michael.gerz at teststep.org  Mon Aug 25 10:06:00 2008
From: michael.gerz at teststep.org (Dr. Michael Gerz)
Date: Mon, 25 Aug 2008 19:06:00 +0200
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <32E34CCE-42E2-4613-B7D0-B17BFBC856B9@cs.usfca.edu>
References: <48A8817D.5050702@teststep.org>
	<543531490808171319s6db48f14pda2674bee7f073e8@mail.gmail.com>
	<32E34CCE-42E2-4613-B7D0-B17BFBC856B9@cs.usfca.edu>
Message-ID: <48B2E678.5000400@teststep.org>

Terence Parr schrieb:
>
> On Aug 17, 2008, at 1:19 PM, Benjamin Niemann wrote:
>
>> Hi Michael,
>>
>> there has been a major change to the implementation of the
>> TokenRewriteStream. I quick look at the code suggests, that
>> TokenRewriteStream.reduceToSingleOperationPerIndex() is O(n^2), where
>> n is the number of rewrites - and it is called for each toString call.
>> Did you do some profiling to find the method that takes most of the
>> time?
>
> Hi.  Yep, n^2 but figured there aren't THAT many changes...decided 
> that I'd go for actually correct functionality first...it was horribly 
> broken except for some common cases before.
>
> I just saw your earlier post...ooops.  Sorry about that.  I guess I 
> need to build an index for that code.  Shit.  Likely you can backgrade 
> to earlier version fairly easily for now.

Are you going to provide a performance fix in the near future? 
Backgrading means recompiling my grammars (there are many of them in my 
project), because the API changed during summer.

Michael


From andersen at ontologyworks.com  Mon Aug 25 10:34:25 2008
From: andersen at ontologyworks.com (Bill Andersen)
Date: Mon, 25 Aug 2008 13:34:25 -0400
Subject: [antlr-interest] AST Translation
Message-ID: <7E1ABD17-FE2B-4AD1-B10E-84C8D96CDFEF@ontologyworks.com>


Folks

I have two surface languages A and B, with two associated abstract  
syntaxes (expressed in separate tree grammars).  I'd like to write a  
tree parser that translates ASTs for language A into ASTs for language  
B.  Is there an easy way to supply two sets of tokens for the  
tokenVocab option for the translation grammar?

	.bill

From tbrandonau at gmail.com  Mon Aug 25 10:56:52 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 03:56:52 +1000
Subject: [antlr-interest] AST Translation
In-Reply-To: <7E1ABD17-FE2B-4AD1-B10E-84C8D96CDFEF@ontologyworks.com>
References: <7E1ABD17-FE2B-4AD1-B10E-84C8D96CDFEF@ontologyworks.com>
Message-ID: <ebc876d70808251056m8e87bcbrd0b701b29d3017d9@mail.gmail.com>

No. The token types will clash so you couldn't import both. You need a
common tokenVocab for the two tree parsers to import.
You maybe able to use the grammar import feature to get ANTLR to do
this for you. If you process a grammar that imports both tree parsers
then the output tokens file produced for this grammar should be what
you want to import into the seperate tree grammars. Should be fairly
easy to integrate this into a build process, just process the
importing grammar before the seperate grammars and delete all it's
output apart from the tokens file.
Otherwise you could create a script\program to do it.

Tom.
On Tue, Aug 26, 2008 at 3:34 AM, Bill Andersen
<andersen at ontologyworks.com> wrote:
>
> Folks
>
> I have two surface languages A and B, with two associated abstract
> syntaxes (expressed in separate tree grammars).  I'd like to write a
> tree parser that translates ASTs for language A into ASTs for language
> B.  Is there an easy way to supply two sets of tokens for the
> tokenVocab option for the translation grammar?
>
>        .bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at mirality.co.nz  Mon Aug 25 12:01:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Aug 2008 07:01:43 +1200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <98001473415f6ac109a53aca8b55fbb0@lehre.ba-stuttgart.de>
References: <98001473415f6ac109a53aca8b55fbb0@lehre.ba-stuttgart.de>
Message-ID: <20080825190153.15AD33522B5@www.antlr.org>

At 04:15 26/08/2008, Jenny Balfer wrote:
 >I am using the "standard" rule for single line comments:
 >
 >COMMENT : '//' (options {greedy=false;}: .)* ('\n'|'r')
 >          { skip(); }
 >        ;
 >
 >This works pretty well, until I have things like that in my 
code:
 >
 >aString = "http://someUrl.com";
 >
 >Because the url contains two slashes, the lexer treats 
everything
 >from then on as a comment and skips the rest of the line; only
 >aString = "http: remains.
 >
 >I tried to fight this problem by adding a rule that matches 
every
 >string before the comment rule:
 >
 >STRING : '"' (options {greedy=false;} .)* '"'
 >       ;
 >
 >This temporarily solved the problem, but brought up further 
issues,
 >so I would really appreciate to get along without it. Does 
anyone
 >have a better solution to prevent my lexer from skipping urls 
just
 >because they contain slashes?

Using a STRING rule is probably the best way to do this.  (And not 
just for this sort of problem -- generally you want strings to be 
recognised as single entities anyway, instead of random sequences 
of other tokens, and you need to preserve whitespace.)

While it might be possible to ignore //s within quotes via other 
means (eg. semantic predicates), it'd be quite painful and would 
still give you malformed strings in other cases.

What kind of "further issues" is it causing?


From parrt at cs.usfca.edu  Mon Aug 25 12:31:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Aug 2008 12:31:24 -0700
Subject: [antlr-interest] ANTLR 3.1 - Serious performance downgrade
In-Reply-To: <48B2E678.5000400@teststep.org>
References: <48A8817D.5050702@teststep.org>
	<543531490808171319s6db48f14pda2674bee7f073e8@mail.gmail.com>
	<32E34CCE-42E2-4613-B7D0-B17BFBC856B9@cs.usfca.edu>
	<48B2E678.5000400@teststep.org>
Message-ID: <DBA41872-59F3-4C8D-8976-1DF4E73812B3@cs.usfca.edu>

Not sure when I can get to it...sorry.
Ter

From parrt at cs.usfca.edu  Mon Aug 25 13:17:12 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Aug 2008 13:17:12 -0700
Subject: [antlr-interest] added MarkMail list support
Message-ID: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>

MarkMail is sweet...check it out: added archive searching and list  
history:

http://www.antlr.org/support.html

Ter

From parrt at antlr.org  Mon Aug 25 13:32:56 2008
From: parrt at antlr.org (Terence Parr)
Date: Mon, 25 Aug 2008 13:32:56 -0700
Subject: [antlr-interest] ANTLR 3.1: Predicate order evaluation of lexer
	rule in the generate code for the Java target.
In-Reply-To: <25871861.272441219662471688.JavaMail.www@wwinf2228>
References: <25871861.272441219662471688.JavaMail.www@wwinf2228>
Message-ID: <1FF8B3CE-C036-44ED-8E94-CF01DC009D3E@antlr.org>

Hi Francis,

You know I think you're absolutely right. this is a bug and a really  
horrible bug! The order must be preserved; the order got changed as I  
build the DFA in this case.  This grammar:

lexer grammar T;

INTEGER_OR_DECIMAL
         : ('0' ' ') => '0'
         | ('0' '.') => '0'
         | '0' '.' '0'
         ;

  does not test the third alternative last!!! yikes... added bug.

http://www.antlr.org:8888/browse/ANTLR-316

Ter

On Aug 25, 2008, at 4:07 AM, Francis ANDRE wrote:
> In the following grammar, the syntactic predicates of the rule
> INTERGER_OR_DECIMAL are generated in an order different from what
> specified, i.e, the alternative order of predicates in the rule? Did  
> I misunderstand something??
>
> fragment
> NL : ('\n'| '\r' '\n' );
> fragment
> ESC : '\'' '\'';
> STRING : '\'' ( ESC | ~'\'' )* '\'' { };
> fragment
> WS : ( ' ' | '\t' | ';' | NL);
> SPACE : (WS)+ {$channel=HIDDEN;};
> fragment
> PLUS_CHAR : '+';
> fragment
> MINUS_CHAR : '-';
> fragment
> STAR_CHAR : '*';
> fragment
> SLASH_CHAR : '/';
> fragment
> DOT_CHAR : '.';
> fragment
> COMMA_CHAR : ',';
> fragment
> PLUS : '+' WS;
> fragment
> MINUS : '-' WS;
> fragment
> STAR : '*' WS;
> fragment
> SLASH : '/' WS;
> fragment
> DOT : '.' (WS|EOF);
> fragment
> COMMA : ',' WS;
> PLUS_OR_CHAR  : ('+' WS)=> PLUS { $type=PLUS; }     | PLUS_CHAR {
> $type=PLUS_CHAR; };
> MINUS_OR_CHAR : ('-' WS)=> MINUS { $type=MINUS; }   | MINUS_CHAR {
> $type=MINUS_CHAR; };
> STAR_OR_CHAR  : ('*' WS)=> STAR { $type=STAR; }     | STAR_CHAR {
> $type=STAR_CHAR; };
> SLASH_OR_CHAR : ('/' WS)=> SLASH { $type=SLASH; }   | SLASH_CHAR {
> $type=SLASH_CHAR; };
> DOT_OR_CHAR   : ('.' (WS|EOF))=> DOT { $type=DOT; } | DOT_CHAR {
> $type=DOT_CHAR; };
> COMMA_OR_CHAR : (',' WS)=> COMMA { $type=COMMA; }   | COMMA_CHAR {
> $type=COMMA_CHAR; };
> fragment
> DIGIT : '0'..'9';
> fragment
> SIGN : ( PLUS_CHAR | MINUS_CHAR );
> fragment
> SEPARATOR : ( DOT_CHAR | COMMA_CHAR );
> fragment
> INTEGER : (SIGN)? (DIGIT)+;
> fragment
> DECIMAL : (SIGN)? (DIGIT)* SEPARATOR (DIGIT)+ ;
> INTEGER_OR_DECIMAL :
>                     ( (INTEGER WS) => INTEGER { $type=INTEGER; }
>                     | (INTEGER DOT) => INTEGER { $type=INTEGER; }
>                     | DECIMAL { $type=DECIMAL; }
>                     )
> ;
> The produced Java code is:
> int alt17=3;
>   switch ( input.LA(1) ) {
>   .....
>   case '0'  case '1':  case '2':  case '3':  case '4':  case '5':   
> case
> '6':  case '7':  case '8':  case '9':
>   {   int LA17_2 = input.LA(2);
>     if ( (LA17_2==','||LA17_2=='.'||(LA17_2>='0' && LA17_2<='9')) ) {
>       alt17=3;
>     }
>     else if ( (synpred7_Cobol()) ) {
>       alt17=1;
>     }
>     else if ( (synpred8_Cobol()) ) {
>       alt17=2;
>     }
>     else {
>      if (state.backtracking>0) {state.failed=true; return ;}
>        NoViableAltException nvae =
>         new NoViableAltException("", 17, 2, input);
>         throw nvae;
>     }
>   }
> which does not correspond to the order of the alternatives in the the
> rule INTEGER_OR_DECIMAL and resolves the input  '1.;'  to a DECIMAL
> while it should resolve as an INTEGER since a DIGIT is followed by a  
> DOT
> and not a DOT_CHAR
>
> My expectation would be that the order of generated code follows the
> alternatives in the rule INTEGER_OR_DECIMAL as:
> {
>     int LA17_2 = input.LA(2);
>     if ( (synpred7_Cobol()) ) {
>       alt17=1;
>     }
>     else if ( (synpred8_Cobol()) ) {
>       alt17=2;
>     } else
>     if ( (LA17_2==','||LA17_2=='.'||(LA17_2>='0' && LA17_2<='9')) ) {
>       alt17=3;
>     }
>     else {
>      if (state.backtracking>0) {state.failed=true; return ;}
>        NoViableAltException nvae =
>         new NoViableAltException("", 17, 2, input);
>         throw nvae;
>     }
> }
> which parses the input '1.;' as an INTEGER.
>
> Francis


From FranklinChen at cmu.edu  Mon Aug 25 13:43:38 2008
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Mon, 25 Aug 2008 16:43:38 -0400
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
Message-ID: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>

I am upgrading from ANTLR 3.0 to 3.1, and code that I used to have in
a tree parser no longer works, because of a change to the return type
of labels:

anyWordsAndMedia
    :
        list+=anyWord+
        (
            list+=url
            list+=anyWord*
        )*
        ->
        anyWordsAndMedia(list={$list})
    ;

results in 

        List list_list=null;
        ChatWalker.anyWord_return list = null;

so that the assignment to url fails with

===
incompatible types
found   : org.talkbank.chat.antlr.ChatWalker.url_return
required: org.talkbank.chat.antlr.ChatWalker.anyWord_return
===

What is the correct way for me to do what I'd been doing up till now?

-- 
Franklin

From parrt at cs.usfca.edu  Mon Aug 25 14:15:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Aug 2008 14:15:27 -0700
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
Message-ID: <B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>

That is a bug i introduced :(  I have fixed it.  Last daily should  
have it.  will go in 3.1.1
Ter
On Aug 25, 2008, at 1:43 PM, FranklinChen at cmu.edu wrote:

> I am upgrading from ANTLR 3.0 to 3.1, and code that I used to have in
> a tree parser no longer works, because of a change to the return type
> of labels:
>
> anyWordsAndMedia
>    :
>        list+=anyWord+
>        (
>            list+=url
>            list+=anyWord*
>        )*
>        ->
>        anyWordsAndMedia(list={$list})
>    ;
>
> results in
>
>        List list_list=null;
>        ChatWalker.anyWord_return list = null;
>
> so that the assignment to url fails with
>
> ===
> incompatible types
> found   : org.talkbank.chat.antlr.ChatWalker.url_return
> required: org.talkbank.chat.antlr.ChatWalker.anyWord_return
> ===
>
> What is the correct way for me to do what I'd been doing up till now?
>
> -- 
> Franklin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From kurtotte at gmail.com  Mon Aug 25 14:53:09 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Mon, 25 Aug 2008 15:53:09 -0600
Subject: [antlr-interest] [C Runtime] Token issues (predicates and indices)
	and composition tree grammars
Message-ID: <27766db30808251453p263c3cd6q893ae4e94a0c1cf@mail.gmail.com>

Jim,

I have hit a series of issues which I think may be bugs in the c runtime.  I
have extracted simple examples from my grammar to make it easier to show the
problem and have attached them with this email.

Is there a high level doc explaining the architecture/design of the runtime
files?  Is there a good way to ramp up on how it works besides simply
looking through the code?  I was going to try to help you debug this, but I
am finding it a bit daunting.

The examples attached should compile and run for you although you will
probably need to tweak the makefile with you paths and/or compilers.  The
examples are a quick and dirty solution to show the problem so they don't
have a lot of polish to work in an arbitrary environment.  If they won't
work for you let me know and I can polish them up a bit more.  Thanks in
advance for any thoughts you have or any help you can provide.

Thanks,

Kurt


-------------------------------------------------------

*Validating predicates in the tree grammars return incorrect token info*

To reproduce this run: ex1.exe test/tree_validating_error.txt

This produces the following output:
=====
(BAR (CNAME (VAR (CNAME a) (CNAME b) c) (CNAME _a)) foo)
-Imaginary-(0)  : error 6 : (0), at offset 0, near UP : syntax not
recognized...

tree_validating_error.txt(4)  : error 3 : , at offset 11, near foo : cannot
match to any predicted input...
=====

Looking at the grammar in ex1walker.g, I have the following validation
predicate:

// force this false to trigger an error
var_cname
 : ^(CNAME NAME {(0)}? cname?)
;

This forces a token to fail due to the predicate returning false (hard-coded
in this example).  What token should the error be on?  I think there is some
confusion here between a disambiguating semantic predicate and a validating
semantic predicate.  It seems the disambiguating semantic predicate wants
the error to be on the next token, but the validating semantic predicate
want the error on the previous token.  However, when walking through the
code, the function antlr3RecognitionExceptionNew seems to always grab the
next token.  In my example, this token ends up being the imaginary UP token.
 This leads to a confusing non-helpful error message.  Is it possible to
look up different tokens in the error handler?

Changing antlr3RecognitionExceptionNew to call _LT(tns,-1) for the
ANTLR3_COMMONTREENODE case (change 1 to -1 to get previous token) seems to
fix the problem for this particular example, but won't work for the general
case.  This change causes the following expected output:

test/tree_validating_error.txt(4)  : error 6 : (0), at offset 2, near a :
syntax not recognized...

It seems there needs to be a way to change the error handling depending on
whether we are in a disambiguating predicate or a validating predicate, but
I am not sure how that would be done.

-------------------------------------------------------

*Tokens have incorrect start and stop positions*

To reproduce this, run: ex1.exe test/start_stop_error.txt

For example, if I force a syntax error in the file, I get the follow error
=====
start_stop_error.txt(3)  : error 3 : , at offset 0
   near [Index: 0 (Start: 3497941-Stop: 3497941) ='a', type<10> Line: 3
LinePos:0]
=====

Note the start and stop positions are way off.  I think there were some
similar posts to the list about this problem, but I did not see a conclusion
to the thread so I included an example to reproduce it.

-------------------------------------------------------

*Composition Tree Grammars won't compile
*
This looks like a simple string template issues of getting pParser rather
than pTreeParser.

Here is the error:
=====
gen/ex1walker.c(314) : error C2039: 'pParser' : is not a member of
'ex1walker_tree_helper_Ctx_struct'
       gen\ex1walker_tree_helper.h(84) : see declaration of
'ex1walker_tree_helper_Ctx_struct'
=====

To reproduce, uncomment this line in ex1walker.g

// uncomment this line to see the problem with imported tree grammars
import tree_helper;

This was the issue I emailed you about previously and you asked for an
example.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/d14f897e/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: c_runtime_issues.zip
Type: application/zip
Size: 3453 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/d14f897e/attachment.zip 

From antlr at jazillian.com  Mon Aug 25 15:45:12 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 25 Aug 2008 18:45:12 -0400
Subject: [antlr-interest] flat AST tree
In-Reply-To: <09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>	<48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
	<09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>
Message-ID: <48B335F8.6090602@jazillian.com>

Torsten,

If you look back in the mailing list, you'll see a fairly heated debate
a couple of months ago about whether it's reasonable to have 
ANTLR return the parse tree
for the AST when there are no rewrite rules - your case.

It's a reasonable question and expectation, IMO.
It gets asked every month or two.

Andy

From tcurdt at vafer.org  Mon Aug 25 15:59:06 2008
From: tcurdt at vafer.org (Torsten Curdt)
Date: Tue, 26 Aug 2008 00:59:06 +0200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <48B335F8.6090602@jazillian.com>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>	<48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
	<09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>
	<48B335F8.6090602@jazillian.com>
Message-ID: <65C53F1F-72E3-4550-9943-0BA41C8BD8B9@vafer.org>


On Aug 26, 2008, at 00:45, Andy Tripp wrote:

> Torsten,
>
> If you look back in the mailing list, you'll see a fairly heated  
> debate
> a couple of months ago about whether it's reasonable to have ANTLR  
> return the parse tree
> for the AST when there are no rewrite rules - your case.
>
> It's a reasonable question and expectation, IMO.
> It gets asked every month or two.

Thanks for the pointer, Andy

At least it's not just me then who finds it if not awkward at least  
unexpected.

cheers
--
Torsten

From jimi at temporal-wave.com  Mon Aug 25 16:12:01 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Aug 2008 16:12:01 -0700
Subject: [antlr-interest] [C Runtime] Token issues (predicates and
	indices) and	composition tree grammars
In-Reply-To: <27766db30808251453p263c3cd6q893ae4e94a0c1cf@mail.gmail.com>
References: <27766db30808251453p263c3cd6q893ae4e94a0c1cf@mail.gmail.com>
Message-ID: <1219705921.15169.245.camel@jimi>

On Mon, 2008-08-25 at 15:53 -0600, Kurt Otte wrote:
> Jim,
> 
> I have hit a series of issues which I think may be bugs in the c
> runtime.  I have extracted simple examples from my grammar to make it
> easier to show the problem and have attached them with this email. 
> 
> Is there a high level doc explaining the architecture/design of the
> runtime files?  Is there a good way to ramp up on how it works besides
> simply looking through the code?  I was going to try to help you debug
> this, but I am finding it a bit daunting.



it is easier just to send me examples. However, the Doxygen API docs may
help you. Follow the link to the API docs from the ANTLR home page.

> 
> The examples attached should compile and run for you although you will
> probably need to tweak the makefile with you paths and/or compilers.
> The examples are a quick and dirty solution to show the problem so
> they don't have a lot of polish to work in an arbitrary environment.  

The smaller example the better b

> -------------------------------------------------------
> 
> Validating predicates in the tree grammars return incorrect token info
> 
> To reproduce this run: ex1.exe test/tree_validating_error.txt
> 
> This produces the following output:
> =====
> (BAR (CNAME (VAR (CNAME a) (CNAME b) c) (CNAME _a)) foo)
> -Imaginary-(0)  : error 6 : (0), at offset 0, near UP : syntax not
> recognized...
> 
> tree_validating_error.txt(4)  : error 3 : , at offset 11, near foo :
> cannot match to any predicted input...

I'll look but I think this is a grammar error. Probably trying to match
^(TOKEN)


> =====
> 
> Looking at the grammar in ex1walker.g, I have the following validation
> predicate:
> 
> // force this false to trigger an error
> var_cname
>  : ^(CNAME NAME {(0)}? cname?)
> ;



> 
> This forces a token to fail due to the predicate returning false
> (hard-coded in this example).  What token should the error be on?  I
> think there is some confusion here between a disambiguating semantic
> predicate and a validating semantic predicate.  It seems the
> disambiguating semantic predicate wants the error to be on the next
> token, but the validating semantic predicate want the error on the
> previous token.  However, when walking through the code, the function
> antlr3RecognitionExceptionNew seems to always grab the next token.  In
> my example, this token ends up being the imaginary UP token.  This
> leads to a confusing non-helpful error message.  Is it possible to
> look up different tokens in the error handler?  

The error handler is really just a template. I can't predict what you
need from it, especially in tree walkers. Override the handler function
with your own. The default is designed to be helpful to a grammar
programmer and as such will confuse the hell out of your users. You
should not be getting recognition errors on your AST though and unless
there is some real strange reason to have them, you should not need
syntactic predicates as you should produce an unambiguous AST.


> 
> Changing antlr3RecognitionExceptionNew to call _LT(tns,-1) for the
> ANTLR3_COMMONTREENODE case (change 1 to -1 to get previous token)
> seems to fix the problem for this particular example, but won't work
> for the general case.  This change causes the following expected
> output:
> 
> test/tree_validating_error.txt(4)  : error 6 : (0), at offset 2, near
> a : syntax not recognized...
> 
> It seems there needs to be a way to change the error handling
> depending on whether we are in a disambiguating predicate or a
> validating predicate, but I am not sure how that would be done.

I think that you should be able to produce an AST that does need
disambiguation, but there are times when you might need this for partial
tree matching I supppose. 

> 
> -------------------------------------------------------
> 
> Tokens have incorrect start and stop positions
> 
> To reproduce this, run: ex1.exe test/start_stop_error.txt
> 
> For example, if I force a syntax error in the file, I get the follow
> error
> =====
> start_stop_error.txt(3)  : error 3 : , at offset 0
>    near [Index: 0 (Start: 3497941-Stop: 3497941) ='a', type<10> Line:
> 3 LinePos:0]
> =====
> 
> Note the start and stop positions are way off.  I think there were
> some similar posts to the list about this problem, but I did not see a
> conclusion to the thread so I included an example to reproduce it.

Ah, I see what people are doing. These are absolute addresses, not
offsets! See the API docs.

> -------------------------------------------------------
> 
> Composition Tree Grammars won't compile
> 
> This looks like a simple string template issues of getting pParser
> rather than pTreeParser.
> 
> Here is the error:
> =====
> gen/ex1walker.c(314) : error C2039: 'pParser' : is not a member of
> 'ex1walker_tree_helper_Ctx_struct'
>        gen\ex1walker_tree_helper.h(84) : see declaration of
> 'ex1walker_tree_helper_Ctx_struct'
> =====
> 
> To reproduce, uncomment this line in ex1walker.g
> 
> // uncomment this line to see the problem with imported tree grammars
> import tree_helper;
> 
> This was the issue I emailed you about previously and you asked for an
> example.
> 

Right - I know what that is.

This will take a few days, I am incredibly busy at the moment.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080825/6ffdedd2/attachment.html 

From parrt at cs.usfca.edu  Mon Aug 25 16:17:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Aug 2008 16:17:07 -0700
Subject: [antlr-interest] added MarkMail list support
In-Reply-To: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>
Message-ID: <74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>

i broke something in site. ;)  I'm working on it.
Ter
On Aug 25, 2008, at 1:17 PM, Terence Parr wrote:

> MarkMail is sweet...check it out: added archive searching and list
> history:
>
> http://www.antlr.org/support.html
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Mon Aug 25 18:10:49 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Aug 2008 18:10:49 -0700
Subject: [antlr-interest] site back up
In-Reply-To: <74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>
	<74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>
Message-ID: <9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>

Back up...another case of HomePage.class reference in Java not  
executing static initializer...i have to use new HomePage() dummy load  
to get it to exec static {...}  Weird...i pushed .class files compiled  
with 1.5 and it broke.  3 hours down the drain.  grrrrrrrrrrrrrrrrrr!
Ter
On Aug 25, 2008, at 4:17 PM, Terence Parr wrote:

> i broke something in site. ;)  I'm working on it.
> Ter
> On Aug 25, 2008, at 1:17 PM, Terence Parr wrote:
>
>> MarkMail is sweet...check it out: added archive searching and list
>> history:
>>
>> http://www.antlr.org/support.html
>>
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From aravinda777 at gmail.com  Mon Aug 25 22:44:21 2008
From: aravinda777 at gmail.com (Aravinda Dassanayake)
Date: Tue, 26 Aug 2008 11:14:21 +0530
Subject: [antlr-interest] Nested Generics - Java Grammar
Message-ID: <c1960e000808252244x33cde161l2b94f44fc9c57e95@mail.gmail.com>

Hi all,

I have a little problem with the available Java grammar. It has trouble
dealing with nested generics.

eg:

HashMap<String, ArrayList<String>> cat_map = new HashMap<String,
ArrayList<String>>();

It warns about the multiple '>' characters like;

line 72:11 no viable alternative at input 'Element'
line 74:8 no viable alternative at input 'HashMap'
line 74:41 mismatched input '>>' expecting '>'
line 74:52 mismatched input '=' expecting '('
line 74:52 mismatched input '=' expecting ';'
line 74:91 mismatched input '>>' expecting '>' etc

Is there a refined version of the grammar to support this type of scenario,
or what is the possible workaround?

Regards,

Aravinda Dassanayake

+94715320257

aravinda777 at yahoo.com
aravinda777 at gmail.com

http://aravindad.blogspot.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/4a3f94fb/attachment.html 

From tbrandonau at gmail.com  Mon Aug 25 23:13:01 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 16:13:01 +1000
Subject: [antlr-interest] Nested Generics - Java Grammar
In-Reply-To: <c1960e000808252244x33cde161l2b94f44fc9c57e95@mail.gmail.com>
References: <c1960e000808252244x33cde161l2b94f44fc9c57e95@mail.gmail.com>
Message-ID: <ebc876d70808252313p32a17e73mf9d6ff63eb34ee5d@mail.gmail.com>

Which java grammar are you using and which version? Looks like the
Java 1.5 grammar v1.0.6 in the grammars section
(http://antlr.org/grammar/1152141644268/Java.g) might handle this, it
doesn't appear to use a '>>' token.

Tom.
On Tue, Aug 26, 2008 at 3:44 PM, Aravinda Dassanayake
<aravinda777 at gmail.com> wrote:
> Hi all,
>
> I have a little problem with the available Java grammar. It has trouble
> dealing with nested generics.
>
> eg:
>
> HashMap<String, ArrayList<String>> cat_map = new HashMap<String,
> ArrayList<String>>();
>
> It warns about the multiple '>' characters like;
>
> line 72:11 no viable alternative at input 'Element'
> line 74:8 no viable alternative at input 'HashMap'
> line 74:41 mismatched input '>>' expecting '>'
> line 74:52 mismatched input '=' expecting '('
> line 74:52 mismatched input '=' expecting ';'
> line 74:91 mismatched input '>>' expecting '>' etc
>
> Is there a refined version of the grammar to support this type of scenario,
> or what is the possible workaround?
>
> Regards,
>
> Aravinda Dassanayake
>
> +94715320257
>
> aravinda777 at yahoo.com
> aravinda777 at gmail.com
>
> http://aravindad.blogspot.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From ai06087 at Lehre.BA-Stuttgart.De  Tue Aug 26 01:24:10 2008
From: ai06087 at Lehre.BA-Stuttgart.De (Jenny Balfer)
Date: Tue, 26 Aug 2008 10:24:10 +0200
Subject: [antlr-interest] Comment rule matches links
Message-ID: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>

>  >I am using the "standard" rule for single line comments:
>  >
>  >COMMENT : '//' (options {greedy=false;}: .)* ('\n'|'r')
>  >          { skip(); }
>  >        ;
>  >
>  >This works pretty well, until I have things like that in my 
> code:
>  >
>  >aString = "http://someUrl.com";
>  >
>  >Because the url contains two slashes, the lexer treats 
> everything
>  >from then on as a comment and skips the rest of the line; only
>  >aString = "http: remains.
>  >
>  >I tried to fight this problem by adding a rule that matches 
> every
>  >string before the comment rule:
>  >
>  >STRING : '"' (options {greedy=false;} .)* '"'
>  >       ;
>  >
>  >This temporarily solved the problem, but brought up further 
> issues,
>  >so I would really appreciate to get along without it. Does 
> anyone
>  >have a better solution to prevent my lexer from skipping urls 
> just
>  >because they contain slashes?
> 
> Using a STRING rule is probably the best way to do this.  (And not 
> just for this sort of problem -- generally you want strings to be 
> recognised as single entities anyway, instead of random sequences 
> of other tokens, and you need to preserve whitespace.)
> 
> While it might be possible to ignore //s within quotes via other 
> means (eg. semantic predicates), it'd be quite painful and would 
> still give you malformed strings in other cases.
> 
> What kind of "further issues" is it causing?

My problem are regular expressions that match quotes, like this one:

replace(/"/, "&quot;");

In this case, the STRING rule matches everything from the first to the
second quote, which is "/, ", and then takes everything beginning from the
last quote sign to any further one. 
I already found the article about island grammars
(http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control),
but I have no idea how I can apply this solution for my problem, for the
workaround is for parser grammars and my STRING / COMMENT rules are still
part of the lexer.




From mail at martin-probst.com  Tue Aug 26 01:34:20 2008
From: mail at martin-probst.com (Martin Probst)
Date: Tue, 26 Aug 2008 10:34:20 +0200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>
References: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>
Message-ID: <5DB5445C-8E1C-4B8B-97C5-811373D25978@martin-probst.com>

>> What kind of "further issues" is it causing?
>
> My problem are regular expressions that match quotes, like this one:
>
> replace(/"/, "&quot;");
>
> In this case, the STRING rule matches everything from the first to the
> second quote, which is "/, ", and then takes everything beginning  
> from the
> last quote sign to any further one.
> I already found the article about island grammars
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control 
> ),
> but I have no idea how I can apply this solution for my problem, for  
> the
> workaround is for parser grammars and my STRING / COMMENT rules are  
> still
> part of the lexer.

For this regular expression literal problem I think you will  
absolutely have to implement something like the island grammars,  
otherwise everything else will only get more and more fragile and  
hackish.

I've done something similar in my XQuery parser where I exchange the  
lexer if I enter some grammatical rule. In your case, you would add a  
semantic predicate in your regular expression literal grammar rule:

regExp: '/' { enterRegexp(); } regExpTokens '/' { leaveRegexp(); };

And then in enterRegexp() you need to exchange the lexer for a  
specific lexer that handles the regular expressions (or, if you just  
want them as an opaque string, one that simply eats everything up to  
the next unescaped slash).

Basically you have two languages, your regular outer language, and  
within the slashes the regexp language, and the latter is  
syntactically totally different. So IMHO the easiest way around that  
is to have a separate lexer/token source that kicks in in that area.  
This can be as simple as implementing a Lexer on your own in Java and  
just returning the full string up to the next non-escaped slash.

HTH,
Martin

From tbrandonau at gmail.com  Tue Aug 26 01:41:22 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 18:41:22 +1000
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>
References: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>
Message-ID: <ebc876d70808260141i751640acpeb10c42b01a80e19@mail.gmail.com>

On Tue, Aug 26, 2008 at 6:24 PM, Jenny Balfer
<ai06087 at lehre.ba-stuttgart.de> wrote:
>
> My problem are regular expressions that match quotes, like this one:
>
> replace(/"/, "&quot;");
>
> In this case, the STRING rule matches everything from the first to the
> second quote, which is "/, ", and then takes everything beginning from the
> last quote sign to any further one.
> I already found the article about island grammars
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control),
> but I have no idea how I can apply this solution for my problem, for the
> workaround is for parser grammars and my STRING / COMMENT rules are still
> part of the lexer.
>
If you don't need the regular expression structure you can just match
them as a single token. If you do need structure you could either just
use a seperate grammar in a later phase to process the single tokens
in your main token stream or use the technique from the island-grammar
example, which shows island grammars under lexer control, to include
it in the main token stream. The ANTLR examples are at
http://www.antlr.org/download/examples-v3.tar.gz.

Tom.

From mail at martin-probst.com  Tue Aug 26 01:58:22 2008
From: mail at martin-probst.com (Martin Probst)
Date: Tue, 26 Aug 2008 10:58:22 +0200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <ebc876d70808260141i751640acpeb10c42b01a80e19@mail.gmail.com>
References: <3ff47cdb6a8e40b21498e72779fb75c9@lehre.ba-stuttgart.de>
	<ebc876d70808260141i751640acpeb10c42b01a80e19@mail.gmail.com>
Message-ID: <B32781AE-26ED-4D7F-BD0E-F10C14969219@martin-probst.com>

> If you don't need the regular expression structure you can just match
> them as a single token. If you do need structure you could either just
> use a seperate grammar in a later phase to process the single tokens
> in your main token stream or use the technique from the island-grammar
> example, which shows island grammars under lexer control,

Island grammars under lexer control will probably not cut it, as the  
'/' token is ambiguous in many languages, e.g.
"int x = 5 / 3;" vs "match(/3/, ...);". The grammar/lexer switching  
has to be done in the parser.

Regards,
Martin

From ai06087 at Lehre.BA-Stuttgart.De  Tue Aug 26 02:22:08 2008
From: ai06087 at Lehre.BA-Stuttgart.De (Jenny Balfer)
Date: Tue, 26 Aug 2008 11:22:08 +0200
Subject: [antlr-interest] Comment rule matches links
Message-ID: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>

> > If you don't need the regular expression structure you can just match
> > them as a single token. If you do need structure you could either just
> > use a seperate grammar in a later phase to process the single tokens
> > in your main token stream or use the technique from the island-grammar
> > example, which shows island grammars under lexer control,
> 
> Island grammars under lexer control will probably not cut it, as the  
> '/' token is ambiguous in many languages, e.g.
> "int x = 5 / 3;" vs "match(/3/, ...);". The grammar/lexer switching  
> has to be done in the parser.
> 
> Regards,
> Martin

That's right, but how can I implement an island grammar under parser
control if the string matching already was done in the lexer? 

Due to the fact comments are not part of the program statements, they have
to be skpped in the lexer, and to avoid strings containing //s to be
skipped, I implemented the string token rule also in the lexer. So I really
need a way to handle my regexp problem in the lexer, too - or is there
another way?


From sven.van.echelpoel at empolis.com  Tue Aug 26 02:32:48 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Tue, 26 Aug 2008 11:32:48 +0200
Subject: [antlr-interest] [C target] [3.1] Cast to
	ASTLabelType	missing	in Treeparser	template
In-Reply-To: <1219677714.15169.167.camel@jimi>
References: <1219668106.5626.16.camel@cartman>
	<1219677714.15169.167.camel@jimi>
Message-ID: <1219743168.5649.33.camel@cartman>


On Mon, 2008-08-25 at 08:21 -0700, Jim Idle wrote:
> On Mon, 2008-08-25 at 14:41 +0200, Sven Van Echelpoel wrote: 
> > Hi,
> > 
> > When compiling a tree parser generated for the C target, the compiler
> > complains about an illegal conversion from void* when it is compiled as
> > a C++ source. 
> > 
> > ruleCleanUp() ::= <<
> > <super.ruleCleanUp(...)>
> > <if(backtracking)>
> > if ( BACKTRACKING==0 ) {<\n>
> > <endif>
> > <if(!ruleDescriptor.isSynPred)>
> > 	retval.stop = LT(-1);<\n>
> > <endif>
> >         retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);
> >                     ^^^^^^^^^^^
> >                     (Cast Missing here?)
> > [...]
> > 
> Yes, that looks likely - I will check and implement - thanks.
> 
You're welcome. Would that make it into 3.1.1?

Sven


From antlr at mirality.co.nz  Tue Aug 26 03:43:45 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Aug 2008 22:43:45 +1200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <48B335F8.6090602@jazillian.com>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>
	<48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
	<09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>
	<48B335F8.6090602@jazillian.com>
Message-ID: <20080826104356.2A63B312961@www.antlr.org>

At 10:45 26/08/2008, Andy Tripp wrote:
 >If you look back in the mailing list, you'll see a fairly heated 

 >debate a couple of months ago about whether it's reasonable to
 >have ANTLR return the parse tree for the AST when there are no
 >rewrite rules - your case.

I don't recall it being all *that* heated :)

I was actually on the other side at that time (arguing for it 
producing a parse-tree-like AST by default), but further thought 
has since caused me to change my mind.

I still think that there needs to be an easy way to obtain a parse 
tree from a given parser run (outside of ANTLRworks), just as 
simple diagnostic validation (after all, at the time the main 
thing I wanted it for was just to sanity-check the parse 
operation).  But I think that it needs to be kept separate from 
the AST, since the concepts don't really mesh too well in the end.


From antlr at mirality.co.nz  Tue Aug 26 03:48:43 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Aug 2008 22:48:43 +1200
Subject: [antlr-interest] site back up
In-Reply-To: <9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>
	<74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>
	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
Message-ID: <20080826104851.75D4D312961@www.antlr.org>

At 13:10 26/08/2008, Terence Parr wrote:
 >Back up...another case of HomePage.class reference in Java not
 >executing static initializer...i have to use new HomePage() 
dummy
 >load to get it to exec static {...}  Weird...i pushed .class 
files
 >compiled with 1.5 and it broke.  3 hours down the drain.
 >grrrrrrrrrrrrrrrrrr!

I don't know how much Java and C# are alike in this respect, but 
in C# a class's static constructor isn't called until sometime 
near when the first reference to that class is made (eg. instance 
constructor call or static method call)...

(I say "sometime near" because the standard is a little vague.  It 
usually seems to work out that it's called when entering the 
method that makes the instance constructor or static method call, 
rather than at the actual call site.)


From antlr at mirality.co.nz  Tue Aug 26 03:58:07 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Aug 2008 22:58:07 +1200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
Message-ID: <20080826105817.1FBADCE981@www.antlr.org>

At 21:22 26/08/2008, Jenny Balfer wrote:
 >That's right, but how can I implement an island grammar under
 >parser control if the string matching already was done in the
 >lexer?
 >
 >Due to the fact comments are not part of the program statements, 

 >they have to be skpped in the lexer, and to avoid strings
 >containing //s to be skipped, I implemented the string token
 >rule also in the lexer. So I really need a way to handle my
 >regexp problem in the lexer, too - or is there another way?

I vote for slapping the language authors around the head with an 
old fish ;)

Regexp literals like that are a hard problem, since you'll 
definitely need parser context to determine that it even is a 
regexp in the first place.  You might be able to cobble something 
together using a non-greedy token source (so it doesn't slurp the 
whole thing up in one go) combined with the "island grammar under 
parser control" example, so you can switch out the lexer and then 
switch back with the input position just after the regexp and keep 
going from there.  But it'll get messy.

Is there a good Perl grammar for v3 around somewhere?  That has 
the same kind of regexp literals, so that might give you some 
ideas.


From mail at martin-probst.com  Tue Aug 26 04:10:51 2008
From: mail at martin-probst.com (Martin Probst)
Date: Tue, 26 Aug 2008 13:10:51 +0200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
Message-ID: <6F48F468-6F09-4C4C-97E1-C1AE41C5033B@martin-probst.com>

>> Island grammars under lexer control will probably not cut it, as the
>> '/' token is ambiguous in many languages, e.g.
>> "int x = 5 / 3;" vs "match(/3/, ...);". The grammar/lexer switching
>> has to be done in the parser.
>>
> That's right, but how can I implement an island grammar under parser
> control if the string matching already was done in the lexer?

You can build a Lexer that doesn't lex all the stuff in one big run  
upfront, but rather scans the input for every LA(xx) call. I did this  
in http://code.google.com/p/xqpretty/, even though my sub-grammar was  
much more complex than just a regexp string, it might help you.

> Due to the fact comments are not part of the program statements,  
> they have
> to be skpped in the lexer, and to avoid strings containing //s to be
> skipped, I implemented the string token rule also in the lexer. So I  
> really
> need a way to handle my regexp problem in the lexer, too - or is there
> another way?

Not that I know of. You indeed need to handle RegExps in the Lexer,  
but as I said, you can teach your parser to switch the lexer in use  
for the regular program with a specific lexer just for the RegExp  
context.

Regards,
Martin


From dermot_1 at astrodrive.com  Tue Aug 26 04:12:00 2008
From: dermot_1 at astrodrive.com (dermot_1 at astrodrive.com)
Date: Tue, 26 Aug 2008 12:12:00 +0100
Subject: [antlr-interest] Lexer gives FailedPredicateException in a gated
	semantic predicate followed by an infinite loop
Message-ID: <000c01c9076c$9042d050$b0c870f0$@com>

I've got a simple XML parser/lexer and the lexer rules are structured
something like this:

 

PCDATA : {tagMode == 0}?=> (~'<')+ {$channel=HIDDEN;};

 

This scarfs all PCDATA upto a starting tag symbol.

 

However, the code generated is this:

 

if ( !((tagMode == 0)) ) {throw new FailedPredicateException(input,
"PCDATA", "tagMode == 0");}

 

with the normal code following.

 

The problem is that if the rule is invoked and the tagMode isn't zero I get
a FailedPredicateException. This then causes an infinite loop as the PCDATA
rule is then invoked by Antlr again and so on ad infinitum.

 

The grammar works well if I have a reasonably correct file - but it doesn't
work if the file is (for example) a C code file instead of an XML file.

 

The Antlr book seems to say that I should not get a FailedPredicateException
with a gated semantic predicate (p286).

 

Looking at the DFA code, the PCDATA rule is being selected there.

 

I'm a bit confused as to what's going on - all I want is for the rule not to
be invoked when tagMode isn't zero.

 

I can always trap the FailedPredicateException and exit - but it seems to me
that the code shouldn't be producing an infinite loop.

 

Dermot

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/ab6700f8/attachment.html 

From tbrandonau at gmail.com  Tue Aug 26 04:23:40 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 21:23:40 +1000
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
Message-ID: <ebc876d70808260423h7aa3a9b2u2174fd3cf24ad25d@mail.gmail.com>

On Tue, Aug 26, 2008 at 7:22 PM, Jenny Balfer
<ai06087 at lehre.ba-stuttgart.de> wrote:
>> > If you don't need the regular expression structure you can just match
>> > them as a single token. If you do need structure you could either just
>> > use a seperate grammar in a later phase to process the single tokens
>> > in your main token stream or use the technique from the island-grammar
>> > example, which shows island grammars under lexer control,
>>
>> Island grammars under lexer control will probably not cut it, as the
>> '/' token is ambiguous in many languages, e.g.
>> "int x = 5 / 3;" vs "match(/3/, ...);". The grammar/lexer switching
>> has to be done in the parser.
>>
>> Regards,
>> Martin
>
> That's right, but how can I implement an island grammar under parser
> control if the string matching already was done in the lexer?
>
> Due to the fact comments are not part of the program statements, they have
> to be skpped in the lexer, and to avoid strings containing //s to be
> skipped, I implemented the string token rule also in the lexer. So I really
> need a way to handle my regexp problem in the lexer, too - or is there
> another way?
>
Sorry, I misread the OP's post as saying that it was not lexically
ambiguous in the language at issue. If it is lexically ambiguous and
assuming you can't alter the language or establish conventions then
curse the language designers as you push on with a nasty solution.
I think you are misunderstanding the parser controlled multi-lexer
approach. You switch to a new lexer, so it doesn't matter what the
main lexer would do. However I would advise against going this route
unless absolutely necessary. This approach does not (generally) work
in the presence of parser lookahead past the lexer switch. Thus
seemingly unrelated changes can cause problems which are hard to
detect, diagnose and solve.
An alternate solution is to analyse the context of the / in the lexer
to determine if it is a regular expression or division (e.g. a
division cannot directly follow an equals, so if the last non-hidden
token was an equals it must be a regular expression). Depending on
your language it may be hard to formulate and implement an adequate
set of rules at the lexer level.
Alternately leave the work for a parser and have your lexer only
recognise very basic structures (e.g. no comments or strings).
Performance will likely suffer as will grammar readability (with
comments needed everywhere).
Or perhaps you could use two parsers, the first doing token stream
rewriting. Again have a basic lexer, then have a parser that goes
through and pulls out just enough context to figure the ambiguous bits
out and rewrite the token stream for a subsequent parser to handle.
Depending on your language and how little you can ge away with
handling this may or may not help.
The final option is to investigate other parser tools which don't
seperate parser and lexer so much, e.g. Rats. You could still use
ANTLR tree parsers through a tree adaptor to have their power or
integrate with other ANTLR parsers\lexers.

Tom.

From ai06087 at Lehre.BA-Stuttgart.De  Tue Aug 26 04:31:18 2008
From: ai06087 at Lehre.BA-Stuttgart.De (Jenny Balfer)
Date: Tue, 26 Aug 2008 13:31:18 +0200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <ebc876d70808260423h7aa3a9b2u2174fd3cf24ad25d@mail.gmail.com>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
	<ebc876d70808260423h7aa3a9b2u2174fd3cf24ad25d@mail.gmail.com>
Message-ID: <94320ace79eaef942b167d61adddbc11@lehre.ba-stuttgart.de>


> An alternate solution is to analyse the context of the / in the lexer
> to determine if it is a regular expression or division (e.g. a
> division cannot directly follow an equals, so if the last non-hidden
> token was an equals it must be a regular expression). Depending on
> your language it may be hard to formulate and implement an adequate
> set of rules at the lexer level.

That sounds like a solution for me! How can I access the last non-hidden
token in the lexer? I think I'll try that out.


From tbrandonau at gmail.com  Tue Aug 26 04:54:38 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 21:54:38 +1000
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <94320ace79eaef942b167d61adddbc11@lehre.ba-stuttgart.de>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
	<ebc876d70808260423h7aa3a9b2u2174fd3cf24ad25d@mail.gmail.com>
	<94320ace79eaef942b167d61adddbc11@lehre.ba-stuttgart.de>
Message-ID: <ebc876d70808260454h3c8753beg2155fead2da0f23d@mail.gmail.com>

On Tue, Aug 26, 2008 at 9:31 PM, Jenny Balfer
<ai06087 at lehre.ba-stuttgart.de> wrote:
>
>> An alternate solution is to analyse the context of the / in the lexer
>> to determine if it is a regular expression or division (e.g. a
>> division cannot directly follow an equals, so if the last non-hidden
>> token was an equals it must be a regular expression). Depending on
>> your language it may be hard to formulate and implement an adequate
>> set of rules at the lexer level.
>
> That sounds like a solution for me! How can I access the last non-hidden
> token in the lexer? I think I'll try that out.
>
>
There is no standard way. You could override nextToken to keep a copy.
Or you could pass the lexer a copy of the token stream. The LA\LB
methods won't work as it's being built but you could use getToken()
and just find the last non-hidden one. Or you could subclass the
existing CommonTokenSream to provide access to the protected internals
where tokens.get(skipOffTokenChannelsReverse(tokens.size() - 1))
should do it.

Tom.

From kroepke at classdump.org  Tue Aug 26 05:26:14 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Tue, 26 Aug 2008 14:26:14 +0200
Subject: [antlr-interest] flat AST tree
In-Reply-To: <20080826104356.2A63B312961@www.antlr.org>
References: <0EAF173B-9EAF-4FA6-B0AF-B63710FA5820@vafer.org>
	<48b10535.1f2d400a.20ec.ffff848fSMTPIN_ADDED@mx.google.com>
	<2F2DC72F-2929-4FE9-8362-D7279A379343@vafer.org>
	<48b149e2.1e3e400a.2a79.ffffb1c1SMTPIN_ADDED@mx.google.com>
	<09D81578-C615-4AC5-AFE6-69197B8AFFD5@vafer.org>
	<48B335F8.6090602@jazillian.com>
	<20080826104356.2A63B312961@www.antlr.org>
Message-ID: <49DE32FC-0FA8-4696-A070-7D2CA308E9BF@classdump.org>

Hi!

On Aug 26, 2008, at 12:43 PM, Gavin Lambert wrote:

> At 10:45 26/08/2008, Andy Tripp wrote:
>> If you look back in the mailing list, you'll see a fairly heated
>
>> debate a couple of months ago about whether it's reasonable to
>> have ANTLR return the parse tree for the AST when there are no
>> rewrite rules - your case.
>
> I don't recall it being all *that* heated :)

Either I missed it, or my memory is failing me. Probably both ;)

> I was actually on the other side at that time (arguing for it
> producing a parse-tree-like AST by default), but further thought
> has since caused me to change my mind.

There are not many cases where you really want to get a parse tree  
(Yes, I know there are some, but it's not the general case).

> I still think that there needs to be an easy way to obtain a parse
> tree from a given parser run (outside of ANTLRworks), just as
> simple diagnostic validation (after all, at the time the main
> thing I wanted it for was just to sanity-check the parse
> operation).  But I think that it needs to be kept separate from
> the AST, since the concepts don't really mesh too well in the end.

Well, there is support for generating parse trees, right? I can't  
remember what the class is called, and I think it uses the debug  
interface to get the rule invocations (most likely turns those into  
some kind of token, I guess, without looking the code) and then builds  
a tree.
I'm pretty sure there's even a wiki page on how to do it.
Wow, even google knows how to do it: http://www.google.com/search?q=antlr+v3+generate+parse+tree 
  (second hit for me) ;)
This is the wiki page that it links to http://antlr.org/wiki/pages/viewpage.action?pageId=1760

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From Uwe.Lammers at sciops.esa.int  Tue Aug 26 05:29:46 2008
From: Uwe.Lammers at sciops.esa.int (Uwe Lammers)
Date: Tue, 26 Aug 2008 14:29:46 +0200
Subject: [antlr-interest] Not consuming lexer tokens
Message-ID: <48B3F73A.3080200@sciops.esa.int>

Hi,

I have recently discovered antlr ... what a wonderful tool!

Newbie question (did not find it addressed in the Wiki FAQ though):
I have been working with flex/bison in the past and want to convert an
existing grammar to antlr. Have managed ok so far but can't see how to 
do the
following: In flex, a symbol can be marked as belonging to a token but it
is actually not consumed by the lexer, e.g.

Lexer rule
abc/(        { return AFUNC; }

Parser rule
arith:
AFUNC '(' arith ')'    { ... }

So, an input like 'abc(...)' is matched by the parser rule arith because
the first opening parenthesis was not consumed by the lexer - the preceding
'/' does this.

Is there an equivalent construct in antlr?

thanks for any answer
Uwe



 

================================================================================================
This message and any attachments are intended for the use of the addressee or addressees only. The
unauthorised disclosure, use, dissemination or copying (either in whole or in part) of its content
is prohibited. If you received this message in error, please delete it from your system and notify
the sender. E-mails can be altered and their integrity cannot be guaranteed. ESA shall not be liable
for any e-mail if modified.
=================================================================================================


From ai06087 at Lehre.BA-Stuttgart.De  Tue Aug 26 06:16:14 2008
From: ai06087 at Lehre.BA-Stuttgart.De (Jenny Balfer)
Date: Tue, 26 Aug 2008 15:16:14 +0200
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <ebc876d70808260454h3c8753beg2155fead2da0f23d@mail.gmail.com>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
	<ebc876d70808260423h7aa3a9b2u2174fd3cf24ad25d@mail.gmail.com>
	<94320ace79eaef942b167d61adddbc11@lehre.ba-stuttgart.de>
	<ebc876d70808260454h3c8753beg2155fead2da0f23d@mail.gmail.com>
Message-ID: <6e4bf70c379b6d9807623c341fcf5f0f@lehre.ba-stuttgart.de>

> There is no standard way. You could override nextToken to keep a copy.
> Or you could pass the lexer a copy of the token stream. The LA\LB
> methods won't work as it's being built but you could use getToken()
> and just find the last non-hidden one. Or you could subclass the
> existing CommonTokenSream to provide access to the protected internals
> where tokens.get(skipOffTokenChannelsReverse(tokens.size() - 1))
> should do it.
> 
> Tom.

I think I found a solution here:
http://www.antlr.org/pipermail/antlr-interest/2008-April/027625.html

Thanks a lot!


From tbrandonau at gmail.com  Tue Aug 26 06:23:32 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 23:23:32 +1000
Subject: [antlr-interest] Not consuming lexer tokens
In-Reply-To: <48B3F73A.3080200@sciops.esa.int>
References: <48B3F73A.3080200@sciops.esa.int>
Message-ID: <ebc876d70808260623j7eddb1d0k541ff2591e1caddc@mail.gmail.com>

On Tue, Aug 26, 2008 at 10:29 PM, Uwe Lammers
<Uwe.Lammers at sciops.esa.int> wrote:
> Hi,
>
> I have recently discovered antlr ... what a wonderful tool!
>
> Newbie question (did not find it addressed in the Wiki FAQ though):
> I have been working with flex/bison in the past and want to convert an
> existing grammar to antlr. Have managed ok so far but can't see how to
> do the
> following: In flex, a symbol can be marked as belonging to a token but it
> is actually not consumed by the lexer, e.g.
>
> Lexer rule
> abc/(        { return AFUNC; }
>
> Parser rule
> arith:
> AFUNC '(' arith ')'    { ... }
>
> So, an input like 'abc(...)' is matched by the parser rule arith because
> the first opening parenthesis was not consumed by the lexer - the preceding
> '/' does this.
>
> Is there an equivalent construct in antlr?
>
> thanks for any answer
> Uwe
>
Not directly. Though you can use predicates to accomplish this. Something like:
FUNC: 'abc' { LA(1) == '(' }?;
will ensure a '(' follows without consuming it.
However ANTLR doesn't seem to hoist predicates on the right edge into
it's predictor. So while
FUNC:	{ LA(4) == '(' }? 'abc';
ID	:	'abc';
works, something like:
FUNC:	'abc' { LA(1) == '(' }?;
ID	:	'abc';
causes an error as ID can't match anything. This looks to be a possible bug.
If you want something like this you can instead do:
ID:
    'abc'
    ( ('(')=> {$type = FUNC;} )?
    ;
fragment
FUNC:	'abc' ;

The FUNC rule as a fragment will never match and it doesn't matter
what it's content is, it is just used to define the token type.

Tom.

From tbrandonau at gmail.com  Tue Aug 26 06:31:30 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Aug 2008 23:31:30 +1000
Subject: [antlr-interest] Re : Re : How to get a list of all
	validoptions for the next token?
In-Reply-To: <A8F615EE446C9B4D837FB67447C0D997025D07A2@EXCHANGE3.campus.tue.nl>
References: <459492.52880.qm@web26504.mail.ukl.yahoo.com>
	<A8F615EE446C9B4D837FB67447C0D99702582BB9@EXCHANGE3.campus.tue.nl>
	<FF993752CB890B4EB591BE5450C37BF1013DB98E@navamane001.ad.internal.corp>
	<A8F615EE446C9B4D837FB67447C0D997025D07A2@EXCHANGE3.campus.tue.nl>
Message-ID: <ebc876d70808260631u5999426dx79bd289d1ffda1c0@mail.gmail.com>

It isn't especially hard to alter the codegen templates, assuming, I
think correctly in this case, you just need trivial alterations to the
templates and don't need to add extra template parameters which
requires altering the analysis parts of ANTLR which are more
complicated. Though you will need a basic understanding of
stringtemplate syntax, check the wiki.
You could just alter the existing
src/org/antlr/codegen/templates/Java.stg but I think it's better to
create your own target to keep your changes seperate. This requires a
bit of setup but isn't that hard and I think is worthwhile in terms of
easier maintenance and leaving the existing Java target untouched for
testing.
Here I'll create a new target called MyJava. To do this, in the
extracted ANTLR distribution:
1) In the src/org/antlr/codegen folder create a MyJavaTarget,java file
that extends from JavaTarget. You shouldn't need to change this you
just need a copy of the JavaTarget file named after your target, by
extending we avoid duplicating the existing version.
2) Go to the src/org/antlr/codegen/templates folder. Here you will
find the templates for each target, the java target templates live in
the Java subfolder. Create a copy of this folder named after your
target, MyJava here (unfortunately due to the way ANTLR is setup I
don't think you can reference the existing copies so you need to
create a new copy of the files).
3) In the src/org/antlr/codegen/templates/MyJava folder, create a new
file called MyJava.stg with the contents:
group MyJava: Java;
@dfaState.noViableAltException() ::= <<
// My code
>>
4) Modify your grammar to include the option "language=MyJava;" and
regenerate your grammar.

Now, if you look at the generated code where the NoViableAltException
is thrown you should see the "//My code" comment in between the
construction of the exception and throwing it. You can then replace
the comment with any code you need. Due to the noViableAltException
region you can probably get away with not altering the existing
dfaState template without getting too messy, e.g. to use a custom
exception type you could just subclass NoViableAltException and then
replace the existing instance in nvae with an instance of your
exception which will then be thrown, a little messy but probably
better than having to duplicate the existing template to alter it.
Some changes may require you to duplicate and alter the existing
templates if there isn't a region you can override (or, due to a ST
limitation, if there is a region with existing contents you want to
add to you can't reference the contents defined in the parent template
and so must duplicate it).
When doing this I actually create 2 new templates, one that extends
the existing Java template and copies existing contents and adds
regions for the bits I need to change and another that then adds the
new stuff I need into those regions, thus separating the changes from
the simple duplication and making it easier to copy across the changes
from new ANTLR versions. If the added regions are generically useful
there is also the chance that Ter will accept them for addition to the
ANTLR codebase.
For example, say you wanted to alter the actual creation of the
exception instead, I would create JavaMods.stg with:
group JavaMods: Java;

dfaState(k,edges,eotPredictsAlt,description,stateNumber,semPredState) ::= <<
int LA<decisionNumber>_<stateNumber> = input.LA(<k>);<\n>
<edges; separator="\nelse ">
else {
<if(eotPredictsAlt)>
    alt<decisionNumber>=<eotPredictsAlt>;
<else>
    <ruleBacktrackFailure()>
    <@throwNoViableAltException> // <---- ADDED
    NoViableAltException nvae =
        new NoViableAltException("<description>", <decisionNumber>,
<stateNumber>, input);<\n>
    <@noViableAltException()>
    throw nvae;<\n>
    <@end> // <----- ADDED
<endif>
}
>>
where the comments indicate what was added to the dfaState template I
copied from Java.stg.
Then in MyJava.stg you put something like:
group MyJava: JavaMods;
@dfaState.throwNoViableAltException() ::= <<
MyNoViableAltException nvae = ...;
throw nvae;
>>

That's all of the top of my head, so the syntax may be off. As I said
you'll need to familiarise yourself with string template syntax a bit,
but beyond that and figuring out the changes to make to the ANTLR code
it's all pretty straightforward I think.

Tom.
On Fri, Aug 22, 2008 at 8:50 PM, Niemeijer, R.A. <r.a.niemeijer at tue.nl> wrote:
> I'm afraid that unless somebody else offers to help me I'm a bit stuck at the moment. As Kay R?pke said: "right now i don't see any way of getting at the necessary information, without altering the codegen templates.". By now I've more or less learned how to work with Antlr, but I'm afraid hacking the way Antlr itself works is still a bit beyond me. So if anyone wishes to implement this I'd be very grateful, but otherwise I fear I will have to abandon the idea.
>

From rschulz at sonic.net  Tue Aug 26 07:07:06 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Aug 2008 07:07:06 -0700
Subject: [antlr-interest] Comment rule matches links
In-Reply-To: <20080826105817.1FBADCE981@www.antlr.org>
References: <6b7e6c5296854e8bef83757a92d62c4b@lehre.ba-stuttgart.de>
	<20080826105817.1FBADCE981@www.antlr.org>
Message-ID: <200808260707.06611.rschulz@sonic.net>

On Tuesday 26 August 2008 03:58, Gavin Lambert wrote:
> At 21:22 26/08/2008, Jenny Balfer wrote:
> ...
>
> Is there a good Perl grammar for v3 around somewhere?  That has
> the same kind of regexp literals, so that might give you some
> ideas.

I don't know about that, but Groovy has RE literals of this sort 
(including the slash delimiters) and uses an ANTLR parser, so you could 
check what they do.

I think, though, that their approach is that these things are a special 
kind of string notation, with different internal escaping rules (much 
more limited, so REs don't tend to require gobs of extra backslashes as 
they do in Java). Then the resulting "slashy string" (their 
terminology) is interpreted by the standard Java library RE code (when 
and if it ends up there).

Thus the parser can't tell whether they're proper REs or not and you 
don't know whether they are valid or not until you run the program. But 
Groovy's dynamic nature means  many bugs and errors are not detected 
until run-time.


Randall Schulz

From jimi at temporal-wave.com  Tue Aug 26 08:23:24 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Aug 2008 08:23:24 -0700
Subject: [antlr-interest] [C target] [3.1] Cast
	to	ASTLabelType	missing	in Treeparser	template
In-Reply-To: <1219743168.5649.33.camel@cartman>
References: <1219668106.5626.16.camel@cartman>
	<1219677714.15169.167.camel@jimi>  <1219743168.5649.33.camel@cartman>
Message-ID: <1219764204.15169.255.camel@jimi>

On Tue, 2008-08-26 at 11:32 +0200, Sven Van Echelpoel wrote:

> On Mon, 2008-08-25 at 08:21 -0700, Jim Idle wrote:
> > On Mon, 2008-08-25 at 14:41 +0200, Sven Van Echelpoel wrote: 
> > > Hi,
> > > 
> > > When compiling a tree parser generated for the C target, the compiler
> > > complains about an illegal conversion from void* when it is compiled as
> > > a C++ source. 
> > > 
> > > ruleCleanUp() ::= <<
> > > <super.ruleCleanUp(...)>
> > > <if(backtracking)>
> > > if ( BACKTRACKING==0 ) {<\n>
> > > <endif>
> > > <if(!ruleDescriptor.isSynPred)>
> > > 	retval.stop = LT(-1);<\n>
> > > <endif>
> > >         retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);
> > >                     ^^^^^^^^^^^
> > >                     (Cast Missing here?)
> > > [...]
> > > 
> > Yes, that looks likely - I will check and implement - thanks.
> > 
> You're welcome. Would that make it into 3.1.1?


Yes.

> 
> Sven
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/8e0f0fa8/attachment.html 

From Uwe.Lammers at sciops.esa.int  Tue Aug 26 08:51:08 2008
From: Uwe.Lammers at sciops.esa.int (Uwe Lammers)
Date: Tue, 26 Aug 2008 17:51:08 +0200
Subject: [antlr-interest] How do I use a custom token object? Wiki FAQ
 sugestion does not seem to work ...
Message-ID: <48B4266C.6070505@sciops.esa.int>

Hi,

I want the lexer to return a custom token object with a special field 'x'.
I tried the Wiki suggestion

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844

but this fails with a compilation problem in

public Token emit() {
    MyToken t =
          new MyToken(input, type, channel,
                    tokenStartCharIndex, getCharIndex()-1);

       ...

the compiler complains that 'type', 'channel' etc are undefined ...

I fixed this in the following manner:

public Token emit() {
      Token t0 = super.emit();
      int type = t0.getType();
      int channel = t0.getChannel();
      int tokenStartLine = t0.getLine();
      String text = t0.getText();
      int tokenStartCharPositionInLine = t0.getCharPositionInLine();
      int tokenStartCharIndex = t0.getTokenIndex();
    MyToken t =
        new MyToken(input, type, channel,
                    tokenStartCharIndex, getCharIndex()-1);
    ...

which then compiles and runs ok. Can somebody confirm that this is 
ok/and or suggest
a better way to do this? If yes, I can update the Wiki.


So, that's one problem solved. The next question is, how can I access my 
custom
field in the parser rules?

 From something like

arith: t=NLITERAL { here I want to access t.x };

antlr (3.1) generates

t=(Token)match(input,NLITERAL,FOLLOW_NLITERAL_in_arith615);

and Token does not know anything about the x field.
Solution is probably obvious but I cannot see it.

Thanks
Uwe


================================================================================================
This message and any attachments are intended for the use of the addressee or addressees only. The
unauthorised disclosure, use, dissemination or copying (either in whole or in part) of its content
is prohibited. If you received this message in error, please delete it from your system and notify
the sender. E-mails can be altered and their integrity cannot be guaranteed. ESA shall not be liable
for any e-mail if modified.
=================================================================================================


From Uwe.Lammers at sciops.esa.int  Tue Aug 26 09:05:00 2008
From: Uwe.Lammers at sciops.esa.int (Uwe Lammers)
Date: Tue, 26 Aug 2008 18:05:00 +0200
Subject: [antlr-interest] How do I use a custom token object? Wiki FAQ
 sugestion does not seem to work ...
In-Reply-To: <48B4266C.6070505@sciops.esa.int>
References: <48B4266C.6070505@sciops.esa.int>
Message-ID: <48B429AC.6080307@sciops.esa.int>

Uwe Lammers wrote:
>
>
> So, that's one problem solved. The next question is, how can I access my 
> custom
> field in the parser rules?
>
>  From something like
>
> arith: t=NLITERAL { here I want to access t.x };
>
> antlr (3.1) generates
>
> t=(Token)match(input,NLITERAL,FOLLOW_NLITERAL_in_arith615);
>
> and Token does not know anything about the x field.
Ok, here is one solution

Put MyToken in a separate class then

@lexer::header {
  import MyToken;
}

@parser::header {
  import MyToken;
}

and in the parser rule

arith: t=NLITERAL                   { MyToken to = (MyToken)t;
                                      System.out.println(to.x);
                                    }


What a fudge ... wonder if there is a more elegant way to accomplish this.

Cheers
Uwe



================================================================================================
This message and any attachments are intended for the use of the addressee or addressees only. The
unauthorised disclosure, use, dissemination or copying (either in whole or in part) of its content
is prohibited. If you received this message in error, please delete it from your system and notify
the sender. E-mails can be altered and their integrity cannot be guaranteed. ESA shall not be liable
for any e-mail if modified.
=================================================================================================


From ymo.mail at gmail.com  Tue Aug 26 09:40:11 2008
From: ymo.mail at gmail.com (Ymo)
Date: Tue, 26 Aug 2008 12:40:11 -0400
Subject: [antlr-interest] Antlr grammar for xml like grammar
In-Reply-To: <36c8729e0808250646k3d6e3fb7j86e40f7105588b39@mail.gmail.com>
References: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
	<36c8729e0808250235r5ffbc5fcl3cf1f273fe350c82@mail.gmail.com>
	<7196ed5b0808250553l6b395065l6d984d92609c48af@mail.gmail.com>
	<7196ed5b0808250554y602ef013t386299bb8845f959@mail.gmail.com>
	<36c8729e0808250646k3d6e3fb7j86e40f7105588b39@mail.gmail.com>
Message-ID: <7196ed5b0808260940r5eedb347x86fe63f14e7aa2bc@mail.gmail.com>

Hi matt i apreciate you taking a look at this.

I pasted the reduced input & grammar:

The first line is never recognized as TOK_PI. It is always seen as TOK_CODE.

Input is :
?@?
?fgdsfgs?
?%-- comment --%?

then i reduced the grammar to this

tokens {
    LG='\u00ab';
    RG='\u00bb';
}


//LEXER
TOK_PI : LG '@';
TOK_LCOMMENT : '%-';
TOK_RCOMMENT : '-%';

TOK_BLOCK : { tagMode==false }? =>
   (LG TOK_LCOMMENT) => TOK_COMMENT { $type=TOK_COMMENT; } |
   (TOK_PI) => TOK_PI { $type=TOK_PI; } |
   (LG ) => TOK_CODE { $type=TOK_CODE; } |
   TOK_TEXT { $type=TOK_TEXT; }  {
   };

fragment
TOK_TEXT :
   ( ~(LG|RG) )+ {
    };

fragment
TOK_CODE :
   LG  ( options {k=2;greedy=false;} : . )*  RG {
    };

fragment
TOK_COMMENT :
   LG TOK_LCOMMENT ( options {k=3;greedy=false;} : . )* TOK_RCOMMENT RG {
      $channel=HIDDEN;
    };
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/dcef8f6e/attachment.html 

From Dennis.Benzinger at gmx.net  Tue Aug 26 11:27:44 2008
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Tue, 26 Aug 2008 20:27:44 +0200
Subject: [antlr-interest] site back up
In-Reply-To: <9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>	<74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>
	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
Message-ID: <48B44B20.2000703@gmx.net>

Hi!

Am 26.08.2008 03:10, Terence Parr schrieb:
> Back up...another case of HomePage.class reference in Java not  
> executing static initializer...i have to use new HomePage() dummy load  
> to get it to exec static {...}
> [...]

Static initializers are executed when the class is initialized. See
http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.7

When a class is initialized is described in detail in
http://java.sun.com/docs/books/jls/third_edition/html/execution.html#12.4.1

Simply referring to HomePage.class will not initialize the class.

HTH,
Dennis Benzinger

From rschulz at sonic.net  Tue Aug 26 11:33:26 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Aug 2008 11:33:26 -0700
Subject: [antlr-interest] site back up
In-Reply-To: <48B44B20.2000703@gmx.net>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>
	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
	<48B44B20.2000703@gmx.net>
Message-ID: <200808261133.27031.rschulz@sonic.net>

On Tuesday 26 August 2008 11:27, Dennis Benzinger wrote:
> Hi!
>
> ...
>
> Static initializers are executed when the class is initialized. See
> http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.
>7
>
> When a class is initialized is described in detail in
> http://java.sun.com/docs/books/jls/third_edition/html/execution.html#
>12.4.1
>
> Simply referring to HomePage.class will not initialize the class.

That really depends on what you mean by "refer[ing] to." That value does 
not exist unless and until the class is loaded, after all. I don't 
believe it's possible to load a class that contains any compiled 
reference to a class literal in this form that does not trigger loading 
of the class in question.


> HTH,
> Dennis Benzinger


Randall Schulz

From parrt at cs.usfca.edu  Tue Aug 26 11:46:53 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Aug 2008 11:46:53 -0700
Subject: [antlr-interest] site back up
In-Reply-To: <48B44B20.2000703@gmx.net>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>	<74A59D0E-CC54-4AEF-A2CA-B5B08D3EA6EA@cs.usfca.edu>
	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>
	<48B44B20.2000703@gmx.net>
Message-ID: <FF7CE4BB-3757-42F3-9125-3F09B13D7220@cs.usfca.edu>


On Aug 26, 2008, at 11:27 AM, Dennis Benzinger wrote:

> Hi!
>
> Am 26.08.2008 03:10, Terence Parr schrieb:
>> Back up...another case of HomePage.class reference in Java not
>> executing static initializer...i have to use new HomePage() dummy  
>> load
>> to get it to exec static {...}
>> [...]
>
> Static initializers are executed when the class is initialized. See
> http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.7
>
> When a class is initialized is described in detail in
> http://java.sun.com/docs/books/jls/third_edition/html/execution.html#12.4.1
>
> Simply referring to HomePage.class will not initialize the class.

It used to ;)

thanks,
Ter

From mattpalms at gmail.com  Tue Aug 26 11:56:08 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Tue, 26 Aug 2008 19:56:08 +0100
Subject: [antlr-interest] Antlr grammar for xml like grammar
In-Reply-To: <7196ed5b0808260940r5eedb347x86fe63f14e7aa2bc@mail.gmail.com>
References: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
	<36c8729e0808250235r5ffbc5fcl3cf1f273fe350c82@mail.gmail.com>
	<7196ed5b0808250553l6b395065l6d984d92609c48af@mail.gmail.com>
	<7196ed5b0808250554y602ef013t386299bb8845f959@mail.gmail.com>
	<36c8729e0808250646k3d6e3fb7j86e40f7105588b39@mail.gmail.com>
	<7196ed5b0808260940r5eedb347x86fe63f14e7aa2bc@mail.gmail.com>
Message-ID: <36c8729e0808261156y32861efan1c12c9b5ca363c00@mail.gmail.com>

Hi Ymo,

again, I'm not an expert at this, but this grammar parses your input text:

grammar T;

tokens {
    LG='\u00ab';
    RG='\u00bb';
}

// parser

all        :    ( pi | code | text | comment )*;
pi         :    TOK_PI;
comment    :    TOK_COMMENT;
code       :    TOK_CODE;
text       :    TOK_TEXT;

// LEXER

TOK_PI     :    LG '@' RG;

TOK_COMMENT
           :    TOK_LCOMMENT ( options {greedy=false;} : . )* TOK_RCOMMENT;

TOK_TEXT   :    ( ~(LG|RG) )+;

TOK_CODE   :    LG ~'@' ( options {greedy=false;} : . )*  RG;

fragment TOK_LCOMMENT
           :    LG '%--';

fragment TOK_RCOMMENT
           :    '--%' RG;

It's not quite right (the ~'@' in TOK_CODE is only the first (hacky) way I
could make the parser distinguish between TOK_PI and TOK_CODE.  If you take
this out, it still works, but will recognise TOK_PI as TOK_CODE.  Adding a
syntactic predicate ( LG '@' RG )=> to TOK_PI did not help the issue.  So
this isn't a  solution, but I hope it moves you towards one.

I've added some parser rules so you can see the parse tree in antlr.

Matt

On Tue, Aug 26, 2008 at 5:40 PM, Ymo <ymo.mail at gmail.com> wrote:

> Hi matt i apreciate you taking a look at this.
>
> I pasted the reduced input & grammar:
>
> The first line is never recognized as TOK_PI. It is always seen as
> TOK_CODE.
>
> Input is :
> ?@?
> ?fgdsfgs?
> ?%-- comment --%?
>
> then i reduced the grammar to this
>
> tokens {
>     LG='\u00ab';
>     RG='\u00bb';
> }
>
>
> //LEXER
> TOK_PI : LG '@';
> TOK_LCOMMENT : '%-';
> TOK_RCOMMENT : '-%';
>
> TOK_BLOCK : { tagMode==false }? =>
>    (LG TOK_LCOMMENT) => TOK_COMMENT { $type=TOK_COMMENT; } |
>    (TOK_PI) => TOK_PI { $type=TOK_PI; } |
>    (LG ) => TOK_CODE { $type=TOK_CODE; } |
>    TOK_TEXT { $type=TOK_TEXT; }  {
>    };
>
> fragment
> TOK_TEXT :
>    ( ~(LG|RG) )+ {
>     };
>
> fragment
> TOK_CODE :
>    LG  ( options {k=2;greedy=false;} : . )*  RG {
>     };
>
> fragment
> TOK_COMMENT :
>    LG TOK_LCOMMENT ( options {k=3;greedy=false;} : . )* TOK_RCOMMENT RG {
>       $channel=HIDDEN;
>     };
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/c4e9b05f/attachment.html 

From Dennis.Benzinger at gmx.net  Tue Aug 26 12:19:21 2008
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Tue, 26 Aug 2008 21:19:21 +0200
Subject: [antlr-interest] [OT] Static initialization in Java (was: Re: site
 back up)
In-Reply-To: <200808261133.27031.rschulz@sonic.net>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>	<48B44B20.2000703@gmx.net>
	<200808261133.27031.rschulz@sonic.net>
Message-ID: <48B45739.9000201@gmx.net>

Am 26.08.2008 20:33, Randall R Schulz schrieb:
> On Tuesday 26 August 2008 11:27, Dennis Benzinger wrote:
>> Hi!
>>
>> ...
>>
>> Static initializers are executed when the class is initialized. See
>> http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.
>>7
>>
>> When a class is initialized is described in detail in
>> http://java.sun.com/docs/books/jls/third_edition/html/execution.html#
>>12.4.1
>>
>> Simply referring to HomePage.class will not initialize the class.
> 
> That really depends on what you mean by "refer[ing] to." That value does 
> not exist unless and until the class is loaded, after all.

I didn't find anything definitive about that in the language
specification but I think because HomePage.class is an instance of class
Class<HomePage> (or just Class before Java 5) it only requires the
initialization of class Class. Initialization of class HomePage is not
required.

> I don't 
> believe it's possible to load a class that contains any compiled 
> reference to a class literal in this form that does not trigger loading 
> of the class in question.
> [...]

It's possible. Try:

class StaticTestClass {
    static {
        System.out.println("Static initializer of StaticTestClass");
    }
}

class Test {
    public static void main(String[] args) {
        System.out.println(StaticTestClass.class.getName());
    }
}

Only some methods of class Class<E> require the initialization of class E.

Dennis Benzinger

From spamhole at gmx.at  Tue Aug 26 13:52:46 2008
From: spamhole at gmx.at (Markus Stoeger)
Date: Tue, 26 Aug 2008 22:52:46 +0200
Subject: [antlr-interest] Problem with simple tokens
In-Reply-To: <20080823105458.21885gmx1@mx058.gmx.net>
References: <48AFD459.4080109@gmx.at> <20080823105458.21885gmx1@mx058.gmx.net>
Message-ID: <48B46D1E.6090200@gmx.at>

Gavin Lambert schrieb:
> In this case, what's happening is that the input 'foo' could match 
> either Foo or Identifier; by itself ANTLR will choose Foo, since it's 
> listed first -- but when given the input 'foo.', this could either be 
> "Foo '.'" or "Identifier" (admittedly not a complete Identifier, but 
> it doesn't realise that yet), so it'll pick Identifier since it 
> consumes more of the input in one go.
Thanks for the explanation. I have also read some of your other messages 
concerning the lexer.. very helpful.. some of them should make it into 
the docs. ANTLR's lexer's behaviour still seems strange to me in that 
case.. I'll have to think about that some more and I'll try to change my 
grammar definition to avoid such cases.

Max


From kurtotte at gmail.com  Tue Aug 26 14:45:58 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Tue, 26 Aug 2008 15:45:58 -0600
Subject: [antlr-interest] [C Runtime] Token issues (predicates and
	indices) and composition tree grammars
In-Reply-To: <1219705921.15169.245.camel@jimi>
References: <27766db30808251453p263c3cd6q893ae4e94a0c1cf@mail.gmail.com>
	<1219705921.15169.245.camel@jimi>
Message-ID: <27766db30808261445j11469fb1n45c5feb69818c5ee@mail.gmail.com>

Jim,

On Mon, Aug 25, 2008 at 5:12 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  On Mon, 2008-08-25 at 15:53 -0600, Kurt Otte wrote:
>
>  -------------------------------------------------------
>
> *Validating predicates in the tree grammars return incorrect token info*
>
> To reproduce this run: ex1.exe test/tree_validating_error.txt
>
> This produces the following output:
> =====
> (BAR (CNAME (VAR (CNAME a) (CNAME b) c) (CNAME _a)) foo)
> -Imaginary-(0)  : error 6 : (0), at offset 0, near UP : syntax not
> recognized...
>
> tree_validating_error.txt(4)  : error 3 : , at offset 11, near foo : cannot
> match to any predicted input...
>
> I'll look but I think this is a grammar error. Probably trying to match
> ^(TOKEN)
>

Thank you.   It would appear that when the validating predicate fails it
doesn't create a failed predicate exception with the right token.  Rather it
seems to fail down a different path and ends up with a mismatched token
exception with the wrong token.

>
>  =====
>
> Looking at the grammar in ex1walker.g, I have the following validation
> predicate:
>
> // force this false to trigger an error
> var_cname
>  : ^(CNAME NAME {(0)}? cname?)
> ;
>
>
>
> This forces a token to fail due to the predicate returning false
> (hard-coded in this example).  What token should the error be on?  I think
> there is some confusion here between a disambiguating semantic predicate and
> a validating semantic predicate.  It seems the disambiguating semantic
> predicate wants the error to be on the next token, but the validating
> semantic predicate want the error on the previous token.  However, when
> walking through the code, the function antlr3RecognitionExceptionNew seems
> to always grab the next token.  In my example, this token ends up being the
> imaginary UP token.  This leads to a confusing non-helpful error message.
> Is it possible to look up different tokens in the error handler?
>
> The error handler is really just a template. I can't predict what you need
> from it, especially in tree walkers. Override the handler function with your
> own. The default is designed to be helpful to a grammar programmer and as
> such will confuse the hell out of your users. You should not be getting
> recognition errors on your AST though and unless there is some real strange
> reason to have them, you should not need syntactic predicates as you should
> produce an unambiguous AST.
>

I have overridden the error handler, but how do I get a different token
after I am inside the error handler.  For example, if I detect that the
token is an UP, I would prefer to back up to closest real token to get
context.  If it is a DOWN, I would prefer to move forward to the next real
token; however, at this point I would just settle for any real token so I
can get context of about which line the problem is happening.  I have
experimented with _LT(yada,-1) and _LA(yada,-1); however, they don't appear
to be working when called from the error handler.  What is the recommended
way to get a different token from the stream in a error handler?

>
>
>
> Changing antlr3RecognitionExceptionNew to call _LT(tns,-1) for the
> ANTLR3_COMMONTREENODE case (change 1 to -1 to get previous token) seems to
> fix the problem for this particular example, but won't work for the general
> case.  This change causes the following expected output:
>
> test/tree_validating_error.txt(4)  : error 6 : (0), at offset 2, near a :
> syntax not recognized...
>
> It seems there needs to be a way to change the error handling depending on
> whether we are in a disambiguating predicate or a validating predicate, but
> I am not sure how that would be done.
>
> I think that you should be able to produce an AST that does need
> disambiguation, but there are times when you might need this for partial
> tree matching I supppose.
>

I use this to verify symbols have been previously declared so I need to
write a bit of code to check internal data structures to make sure the
statement is valid with a previously delcared symbol.

Thanks,

Kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/5d1fbce7/attachment.html 

From mattpalms at gmail.com  Tue Aug 26 15:03:07 2008
From: mattpalms at gmail.com (Matt Palmer)
Date: Tue, 26 Aug 2008 23:03:07 +0100
Subject: [antlr-interest] Antlr grammar for xml like grammar
In-Reply-To: <36c8729e0808261156y32861efan1c12c9b5ca363c00@mail.gmail.com>
References: <7196ed5b0808242050p4c22c65fm57133669db982e73@mail.gmail.com>
	<36c8729e0808250235r5ffbc5fcl3cf1f273fe350c82@mail.gmail.com>
	<7196ed5b0808250553l6b395065l6d984d92609c48af@mail.gmail.com>
	<7196ed5b0808250554y602ef013t386299bb8845f959@mail.gmail.com>
	<36c8729e0808250646k3d6e3fb7j86e40f7105588b39@mail.gmail.com>
	<7196ed5b0808260940r5eedb347x86fe63f14e7aa2bc@mail.gmail.com>
	<36c8729e0808261156y32861efan1c12c9b5ca363c00@mail.gmail.com>
Message-ID: <36c8729e0808261503m1f55563em93c49b53c645ab08@mail.gmail.com>

Hi Ymo,

try this one:

grammar T;

tokens {
    LG='\u00ab';
    RG='\u00bb';
}

all     :    ( pi | code | text | comment )* ;
pi      :    TOK_PI;
code    :    TOK_CODE;
text    :    TOK_TEXT;
comment :    TOK_COMMENT;

//LEXER

TOK_TEXT:    ( ~(LG|RG) )+;

TOK_LG_START
         :   ( LG '%--' )=>
             ( LG '%--' ( options {greedy=false;} : . )* '--%' RG
{$type=TOK_COMMENT;} )
         |   ( LG '@' RG )=>
             ( LG '@' RG
{$type=TOK_PI;} )
         |   ( LG ( options {greedy=false;} : . )* RG
{$type=TOK_CODE;} )
         ;

fragment TOK_CODE
    :     LG ( options {greedy=false;} : . )* RG
    ;

fragment TOK_PI
    :    LG '@' RG
    ;

fragment TOK_COMMENT
    :    ( LG '%--' ( options {greedy=false;} : . )* '--%' RG );

Not very elegant, but it seems to do the job.

Matt.

On Tue, Aug 26, 2008 at 7:56 PM, Matt Palmer <mattpalms at gmail.com> wrote:

> Hi Ymo,
>
> again, I'm not an expert at this, but this grammar parses your input text:
>
> grammar T;
>
> tokens {
>     LG='\u00ab';
>     RG='\u00bb';
> }
>
> // parser
>
> all        :    ( pi | code | text | comment )*;
> pi         :    TOK_PI;
> comment    :    TOK_COMMENT;
> code       :    TOK_CODE;
> text       :    TOK_TEXT;
>
> // LEXER
>
> TOK_PI     :    LG '@' RG;
>
> TOK_COMMENT
>            :    TOK_LCOMMENT ( options {greedy=false;} : . )*
> TOK_RCOMMENT;
>
> TOK_TEXT   :    ( ~(LG|RG) )+;
>
> TOK_CODE   :    LG ~'@' ( options {greedy=false;} : . )*  RG;
>
> fragment TOK_LCOMMENT
>            :    LG '%--';
>
> fragment TOK_RCOMMENT
>            :    '--%' RG;
>
> It's not quite right (the ~'@' in TOK_CODE is only the first (hacky) way I
> could make the parser distinguish between TOK_PI and TOK_CODE.  If you take
> this out, it still works, but will recognise TOK_PI as TOK_CODE.  Adding a
> syntactic predicate ( LG '@' RG )=> to TOK_PI did not help the issue.  So
> this isn't a  solution, but I hope it moves you towards one.
>
> I've added some parser rules so you can see the parse tree in antlr.
>
> Matt
>
> On Tue, Aug 26, 2008 at 5:40 PM, Ymo <ymo.mail at gmail.com> wrote:
>
>> Hi matt i apreciate you taking a look at this.
>>
>> I pasted the reduced input & grammar:
>>
>> The first line is never recognized as TOK_PI. It is always seen as
>> TOK_CODE.
>>
>> Input is :
>> ?@?
>> ?fgdsfgs?
>> ?%-- comment --%?
>>
>> then i reduced the grammar to this
>>
>> tokens {
>>     LG='\u00ab';
>>     RG='\u00bb';
>> }
>>
>>
>> //LEXER
>> TOK_PI : LG '@';
>> TOK_LCOMMENT : '%-';
>> TOK_RCOMMENT : '-%';
>>
>> TOK_BLOCK : { tagMode==false }? =>
>>    (LG TOK_LCOMMENT) => TOK_COMMENT { $type=TOK_COMMENT; } |
>>    (TOK_PI) => TOK_PI { $type=TOK_PI; } |
>>    (LG ) => TOK_CODE { $type=TOK_CODE; } |
>>    TOK_TEXT { $type=TOK_TEXT; }  {
>>    };
>>
>> fragment
>> TOK_TEXT :
>>    ( ~(LG|RG) )+ {
>>     };
>>
>> fragment
>> TOK_CODE :
>>    LG  ( options {k=2;greedy=false;} : . )*  RG {
>>     };
>>
>> fragment
>> TOK_COMMENT :
>>    LG TOK_LCOMMENT ( options {k=3;greedy=false;} : . )* TOK_RCOMMENT RG {
>>       $channel=HIDDEN;
>>     };
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080826/27485e9e/attachment.html 

From ymo.mail at gmail.com  Tue Aug 26 21:25:40 2008
From: ymo.mail at gmail.com (Ymo)
Date: Wed, 27 Aug 2008 00:25:40 -0400
Subject: [antlr-interest] finally stumbled on a solution but i still dont
	grok it !
Message-ID: <7196ed5b0808262125g462b8d4w7e14b4d0cd1b6090@mail.gmail.com>

Hi All.

I was trying to match block of delimited text. the  token CODE was always
taking precedence and matching all tokens that came before it for no obvious
reason. Right now when i put  parenthesis and the options (i even tried
passing k .. it seems no bearing what k i choose) around the LG_BLOCK rule
then evrything seems to work fine. Any ideas why ?

Thanks Matt for all your help !

input:
<%a>
<@b>
<ccc:d>
<aaaaaaaaa:bbbbbbbbbbbbbbb>
<%-comment-%>

grammar:

all     :    ( t1 | t2 | t3 | code | text)* ;
t1      :    T1 RG;
t2    :    T2 RG;
t3    :    T3 RG;
code    :    CODE;
text    :    TEXT;

//LEXER
LG : '<';
RG : '>';

LG_BLOCK:
    ( options {k=2;} : // <-- why do i need this ?? and why does k=1 still
works ?
        (LG '%-') => COMMENT { $type=COMMENT;} |
        (LG 'ccc:d') => T3 { $type=T3;} |
        (LG '%a') => T1 { $type=T1;} |
        (LG '@b') => T2 { $type=T2;} |
        //uncommenting the below line makes lexes '<%a' as CODE !!!
        //it basically overrides evrything for no reason !
        (LG ) => CODE { $type=CODE;} |
        ( TEXT {$type=TEXT;})
    );

fragment T1 : LG '%a';
fragment T2 : LG '@b';
fragment T3 : LG 'ccc:d';

fragment TEXT: ( ~(LG|RG) )+;

fragment
CODE :
   LG (options {k=2;greedy=false;} : . )+  RG{
   };

fragment COMMENT :
   LG '%-' ( options {k=3;greedy=false;} : . )* '-%' RG {
      $channel=HIDDEN;
   };
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/a9031188/attachment.html 

From titech at metaorb.com  Tue Aug 26 23:51:52 2008
From: titech at metaorb.com (titech at metaorb.com)
Date: Tue, 26 Aug 2008 23:51:52 -0700 (PDT)
Subject: [antlr-interest] Nestes Parenthetical in Rewrite Rule
Message-ID: <293730.67828.qm@web82303.mail.mud.yahoo.com>

Is there any way to write this that won't give an error:
shape :??? '(' 'rect' (ID | STRING) float float ')'??? ??? -> ^('rect' (ID | STRING) float float);
I tried splitting it up on multiple lines, but always I get "expecting RPAREN, but found '|'" (or similar).
The only way I've gotten it to work is to make the parenthetical statement a separate rule.
Regards,
--Mike 

From Ronghui.Yu at SierraAtlantic.com  Wed Aug 27 00:39:24 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Wed, 27 Aug 2008 15:39:24 +0800
Subject: [antlr-interest] Can't recoginze a file start with HIDDEN lexer
	since 3.1b1
Message-ID: <002401c90818$06f35f20$4307430a@RYUSA>

We're developing several SQL parsers for different major DBMS, before 3.1b1 was available, we finished development based 3.0.1, and run a bunch of *.sql files with a great amout of SQL statements againt this parser. Everything went well at that time.

Then when 3.1b1 was available, we switched to it with exactly the same grammar code, and run the same *sql files. Something different happened, all *.sql files start with empty line or lines, SQL comment line or lines, could not pass the test. Now when 3.1 available, the situation is the same as that of 3.1b1. And I learnt that if the file start with lexers with HIDDEN channel, it would fail against the test. 

I wonder if anyone else ever comes across the same situtation? And if yes, any suggestion to solve it?

By the way, I am using the C target.
Thanks!

==============================
Regards,
Ronghui Yu
Sierra Atlantic

__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/fb43700b/attachment.html 

From javafoust at gmail.com  Wed Aug 27 01:11:59 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 27 Aug 2008 01:11:59 -0700
Subject: [antlr-interest] Nestes Parenthetical in Rewrite Rule
In-Reply-To: <293730.67828.qm@web82303.mail.mud.yahoo.com>
References: <293730.67828.qm@web82303.mail.mud.yahoo.com>
Message-ID: <005e01c9081c$95a2c9f0$c0e85dd0$@com>

Mike,

> Is there any way to write this that won't give an error:
> shape :??? '(' 'rect' (ID | STRING) float float ')'?
> -> ^('rect' (ID | STRING) float float);

I believe the problem is that you cannot use the or (|) operator after the
arrow (->).

Instead, you can write:

  shape :   '(' 'rect' (ID | STRING) p1=float p2=float ')'
		-> ^('rect' ID? STRING? $p1 $p2)

or you can split the "(ID | STRING)" expression out into its own rule and
then just include that rule in the tree output:

  shape :   '(' 'rect' rectId p1=float p2=float ')'
		-> ^('rect' rectId $p1 $p2)

  rectId : ID | STRING;

Brent


From kroepke at classdump.org  Wed Aug 27 04:33:13 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 27 Aug 2008 13:33:13 +0200
Subject: [antlr-interest] [OT] Static initialization in Java (was: Re:
	site back up)
In-Reply-To: <48B45739.9000201@gmx.net>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>	<48B44B20.2000703@gmx.net>
	<200808261133.27031.rschulz@sonic.net> <48B45739.9000201@gmx.net>
Message-ID: <813DE957-1280-4729-9D36-5102F0958319@classdump.org>

Hi!

On Aug 26, 2008, at 9:19 PM, Dennis Benzinger wrote:

> I didn't find anything definitive about that in the language
> specification but I think because HomePage.class is an instance of  
> class
> Class<HomePage> (or just Class before Java 5) it only requires the
> initialization of class Class. Initialization of class HomePage is not
> required.


Might not be required, but a very simple test shows the change of  
behavior:

public class Foo {
	static { System.out.println("Foo init."); }
	public Foo() {}
}


public class Bar {
	static { System.out.println("Bar init"); }
	public Bar() {
		System.out.println("Foo's class is " + Foo.class);
	}
}

public class Main {
	public static void main(String[] args) {
		Bar bar = new Bar();
	}
}

Java 5:
classdump:init kroepke$ java -cp . Main
Bar init
Foo's class is class Foo


classdump:init kroepke$ /System/Library/Frameworks/JavaVM.framework/ 
Versions/1.4/Home/bin/java -cp . Main
Bar init
Foo init.
Foo's class is class Foo

Further poking around seems to indicate some compiler change between  
1.4 and 1.5 with regards to Foo.class. I bet it's connected to  
generics because in 1.5 the type is Class<Foo> and previously it was  
1.4. I can imagine that when constructing Class in 1.4 something  
triggered initialization while in 1.5 less work is done and that  
doesn't trigger it.
Using .class (which is syntax, not a field) doesn't seem to fit into  
the section of the spec you referred to, so I'm afraid that's not  
really helpful to understand this :(

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From jimi at temporal-wave.com  Wed Aug 27 08:42:30 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Aug 2008 08:42:30 -0700
Subject: [antlr-interest] Can't recoginze a file start with HIDDEN	lexer
	since 3.1b1
In-Reply-To: <002401c90818$06f35f20$4307430a@RYUSA>
References: <002401c90818$06f35f20$4307430a@RYUSA>
Message-ID: <1219851750.15169.362.camel@jimi>

On Wed, 2008-08-27 at 15:39 +0800, Ronghui Yu wrote:
> We're developing several SQL parsers for different major DBMS, before
> 3.1b1 was available, we finished development based 3.0.1, and run a
> bunch of *.sql files with a great amout of SQL statements againt this
> parser. Everything went well at that time.
>  
> Then when 3.1b1 was available, we switched to it with exactly the same
> grammar code, and run the same *sql files. Something different
> happened, all *.sql files start with empty line or lines, SQL comment
> line or lines, could not pass the test. Now when 3.1 available, the
> situation is the same as that of 3.1b1. And I learnt that if the file
> start with lexers with HIDDEN channel, it would fail against the
> test. 
>  
> I wonder if anyone else ever comes across the same situtation? And if
> yes, any suggestion to solve it?
>  

I'll take a look - maybe there is some issue with one of the bug fixes.
Do you have some small example to reproduce this? My own SQL parsers all
work correctly so thre must be some particular aspect fo your grammars
that makes this happen.

> By the way, I am using the C target.

Jim
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/d43c698e/attachment.html 

From vsmani.chrome at gmail.com  Wed Aug 27 12:09:12 2008
From: vsmani.chrome at gmail.com (Manikandan Subramanian)
Date: Wed, 27 Aug 2008 15:09:12 -0400
Subject: [antlr-interest] Parsing a Fixed length file
In-Reply-To: <BD92D547-C55E-4E29-9213-016FE8B986E1@cs.usfca.edu>
References: <ba280f0d0808270634t29629326r14a9da297a7876e2@mail.gmail.com>
	<ba280f0d0808270708v193b10bbnd39832f6cb0600c8@mail.gmail.com>
	<BD92D547-C55E-4E29-9213-016FE8B986E1@cs.usfca.edu>
Message-ID: <ba280f0d0808271209j700940cdoa0fd09a3f41d66c9@mail.gmail.com>

Hi,

I am new to ANTLR. I would like to parse fixed length records. I have gone
through many documentation but I didnt get any idea how to do.

Basically, I want to define my token to a fixed length [something like
defining with starting positon and ending postion].

my input document format will be like,

 HEADER                              Loc at 1                  Optional
 RecType*              Rec type              C         1      10 String
      X                        7         2 Left

 BODY(Msg 1)                       Loc at 1                 Mandatory
 Record1*              Rec one descrip    C         1       2 String
   X                        7         2 Left
 rec02*                  Rec 2 desc           M         1        2 String
        X                       9         2 Left
 PO*                     PO#                     C          1      22 String
          X                     11        22 Left
 A05*                    Order Date            C          8       8
Date/Time     YYYYMMDD    33        10 Left
 B06*                    Contract#              C          0     30 String
         X                     43        30 Left
 Delivery_date*      Date Requested     C          8       8 Date/Time
YYYYMMDD     73         8 Left

 BODY(Msg 2)                       Loc at 1                 Mandatory
 Record12              Rec two descrip    C         1       2 String
   X                       7         2 Left
 rec02*                  Rec 2 desc           M         1        2 String
        X                       9         2 Left
 PO*                     PO#                     C          1      22 String
          X                     11        22 Left
 A05*                    Order Date            C          8       8
Date/Time     YYYYMMDD    33        10 Left
 B06*                    Contract#              C          0     30 String
         X                     43        30 Left
 Delivery_date*      Date Requested     C          8       8 Date/Time
YYYYMMDD     73         8 Left


Thanks in Advance,
Mani
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/97bc8199/attachment.html 

From antlr at mirality.co.nz  Wed Aug 27 13:10:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 28 Aug 2008 08:10:05 +1200
Subject: [antlr-interest] Parsing a Fixed length file
In-Reply-To: <ba280f0d0808271209j700940cdoa0fd09a3f41d66c9@mail.gmail.co
 m>
References: <ba280f0d0808270634t29629326r14a9da297a7876e2@mail.gmail.com>
	<ba280f0d0808270708v193b10bbnd39832f6cb0600c8@mail.gmail.com>
	<BD92D547-C55E-4E29-9213-016FE8B986E1@cs.usfca.edu>
	<ba280f0d0808271209j700940cdoa0fd09a3f41d66c9@mail.gmail.com>
Message-ID: <20080827201014.78B7211EB21@www.antlr.org>

At 07:09 28/08/2008, Manikandan Subramanian wrote:
>I am new to ANTLR. I would like to parse fixed length records. I 
>have gone through many documentation but I didnt get any idea how 
>to do.
>
>Basically, I want to define my token to a fixed length [something 
>like defining with starting positon and ending postion].

While it's possible to do this in ANTLR, I don't think it's really 
the right tool for this sort of job.

At the very least, you should probably write your own custom 
lexer.  It'd be much easier (and more readable) to do that than to 
try to build an ANTLR-only one, I think.


From javafoust at gmail.com  Wed Aug 27 13:25:21 2008
From: javafoust at gmail.com (Foust)
Date: Wed, 27 Aug 2008 13:25:21 -0700
Subject: [antlr-interest] site back up
In-Reply-To: <200808261133.27031.rschulz@sonic.net>
References: <1DDA3D5E-DD6E-4CD4-9A14-C62F6032D141@cs.usfca.edu>	<9CB468B7-2126-482C-B91B-FE9576615736@cs.usfca.edu>	<48B44B20.2000703@gmx.net>
	<200808261133.27031.rschulz@sonic.net>
Message-ID: <001901c90883$08d5d820$1a818860$@com>

> Denis wrote:
> > Static initializers are executed when the class is initialized
> >
> > Simply referring to HomePage.class will not initialize the class.

He is, of course, correct.

Randall wrote:
> 
> That really depends on what you mean by "refer[ing] to." That value
> does not exist unless and until the class is loaded, after all. I don't
> believe it's possible to load a class that contains any compiled
> reference to a class literal in this form that does not trigger loading
> of the class in question.

The issue is that loading is separate from initialization, which isn't
required to occur until:

	a) an instance of the class is created,

	b) a non-final static member of the class is accessed, or

	c) a static method of the class is called

Brent


From sharwell at pixelminegames.com  Wed Aug 27 17:59:08 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 27 Aug 2008 19:59:08 -0500
Subject: [antlr-interest] C# target:
	.NET	Frameworkbug	causing	NullReferenceException,
	must use this workaround
In-Reply-To: <489DF988.6020505@gmx.de>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>	<1218298947.6138.164.camel@jimi>
	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>
	<489DF988.6020505@gmx.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E231@Bloodymary.ironwillgames.com>

Strangely enough, your fix highlights why the bug in the Framework probably hasn't been fixed to date. The problem only occurs if mtne.Node is not null, so your current code change has no effect on the situation.

Sam

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Saturday, August 09, 2008 3:10 PM
To: Sam Harwell
Cc: antlr-interest
Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround

Sam Harwell schrieb:
> I?m with Jim on this ? if I had only sent you a link to the bug report 
> at MS you would have figured out something similar to what I wrote 
> anyway. When you make the change, make sure to comment that you?re 
> working around anti-documented behavior so no one wants to change it later.

I decided to use a ternary operator here, because I find it strange that 
a string null is handled differently than an object null (as shown in 
the bugfix which Sam posted). That way I'm safe regarding this bug and 
any possible problem regarding the lack of the license.

Johannes
> 
>  
> 
> The standard says this at the end of page 201 (section 14.7.4 Addition 
> operator):
> 
> ?If an operand of string concatenation is null, an empty string is 
> substituted.?
> 
>  
> 
> Sam
> 
>  
> 
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
> *Sent:* Saturday, August 09, 2008 11:22 AM
> *To:* antlr-interest
> *Subject:* Re: [antlr-interest] C# target: .NET Frameworkbug causing 
> NullReferenceException, must use this workaround
> 
>  
> 
> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign 
> the ANTLR Contribution
> 
>  
> 
> License? Otherwise I can't use your bugfix.
> 
> 
> I don't think that is true - it is a few lines that you are going to 
> type in yourself, probably fairly differently. Hence this is covered by 
> your own signature I should think. I rarely (ok, never) type in a bug 
> fix that someone sends in, I just use it as an example of HOW something 
> MIGHT be fixed IF the behavior it purports to fix IS in fact the 
> behavior that is wrong ;-)
> 
> Jim
> 


From vsmani.chrome at gmail.com  Wed Aug 27 19:12:19 2008
From: vsmani.chrome at gmail.com (Manikandan Subramanian)
Date: Wed, 27 Aug 2008 22:12:19 -0400
Subject: [antlr-interest] Parsing a Fixed length file
In-Reply-To: <48b5b4a6.083e400a.170b.0889SMTPIN_ADDED@mx.google.com>
References: <ba280f0d0808270634t29629326r14a9da297a7876e2@mail.gmail.com>
	<ba280f0d0808270708v193b10bbnd39832f6cb0600c8@mail.gmail.com>
	<BD92D547-C55E-4E29-9213-016FE8B986E1@cs.usfca.edu>
	<ba280f0d0808271209j700940cdoa0fd09a3f41d66c9@mail.gmail.com>
	<48b5b4a6.083e400a.170b.0889SMTPIN_ADDED@mx.google.com>
Message-ID: <ba280f0d0808271912v12d8ccd5xa4075445391fbf5e@mail.gmail.com>

Hi,

This is one part of the bigger problem and just the startup. I need ANTLR
for sure, because I need to do data translation from one format to other
format. Source data structure could be fixed length data / delimited / some
cryptic data and Target data structure is XML.

As Gavin suggested, I think I may be need to some pre-processing to clean
the data and then give the cleaned data to ANTLR. But I am just wondering
whether is it good such things ANTLR itself instead of writing a framework
from the scratch.

Regards
Mani

On Wed, Aug 27, 2008 at 4:10 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 07:09 28/08/2008, Manikandan Subramanian wrote:
>
>> I am new to ANTLR. I would like to parse fixed length records. I have gone
>> through many documentation but I didnt get any idea how to do.
>>
>> Basically, I want to define my token to a fixed length [something like
>> defining with starting positon and ending postion].
>>
>
> While it's possible to do this in ANTLR, I don't think it's really the
> right tool for this sort of job.
>
> At the very least, you should probably write your own custom lexer.  It'd
> be much easier (and more readable) to do that than to try to build an
> ANTLR-only one, I think.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/265142b0/attachment.html 

From sharwell at pixelminegames.com  Wed Aug 27 20:31:21 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 27 Aug 2008 22:31:21 -0500
Subject: [antlr-interest] Faster expression parsing
Message-ID: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>

Profiling my grammar showed the expression parsing as one of the slowest
segments. The problem stemmed from the fact that this grammar has ~18
precedence categories of operators, so getting to a primary expression
was unnecessarily slow. Here is an example grammar that shows how you
can flatten groups of operators while maintaining a correct AST. If you
have a large number of precedence groups, and your expressions are
taking a long time to parse, you can try a method like this and see if
it helps. The createPrecedenceTree algorithm is sub-optimal, but it was
only responsible for 1% of the parse time in my recent profiling.

 

My current stages have simplified to:

 

assignment_expression

ternary_expression

binary_expression

prefix_expression

postfix_expression

primary_expression

 

And the time it spent in the expression rule dropped from 54% of the
total parse time to 23%.

 

Sam

 

 

grammar ExpressionParser;

 

options

{

        output=AST;

}

 

tokens

{

        PLUS = '+';

        MINUS = '-';

        TIMES = '*';

        DIVIDE = '/';

 

        LPAREN = '(';

        RPAREN = ')';

 

        AST_EXPR;

}

 

@parser::members

{

        boolean isRightToLeft( int type )

        {

                return false;

        }

        int getOperatorPrecedence( int type )

        {

                switch ( type )

                {

                case TIMES:

                case DIVIDE:

                        return 1;

                case PLUS:

                case MINUS:

                        return 2;

                default:

                        return 0;

                }

        }

        int findPivot( List operators, int startIndex, int stopIndex )

        {

                int pivot = startIndex;

                int pivotRank = getOperatorPrecedence(
((Token)operators.get(pivot)).getType() );

                for ( int i = startIndex + 1; i <= stopIndex; i++ )

                {

                        int type = ((Token)operators.get(i)).getType();

                        int current = getOperatorPrecedence( type );

                        boolean rtl = isRightToLeft(type);

                        if ( current > pivotRank || (current ==
pivotRank && rtl) )

                        {

                                pivot = i;

                                pivotRank = current;

                        }

                }

                return pivot;

        }

        Tree createPrecedenceTree( List expressions, List operators, int
startIndex, int stopIndex )

        {

                if ( stopIndex == startIndex )

                        return (Tree)expressions.get(startIndex);

 

                int pivot = findPivot( operators, startIndex, stopIndex
- 1 );

                Tree root = (Tree)adaptor.nil();

                Object root_1 = (Object)adaptor.nil();

                root_1 = (Object)adaptor.becomeRoot(
(Token)operators.get(pivot), root_1 );

                adaptor.addChild( root_1, createPrecedenceTree(
expressions, operators, startIndex, pivot ) );

                adaptor.addChild( root_1, createPrecedenceTree(
expressions, operators, pivot + 1, stopIndex ) );

                adaptor.addChild( root, root_1 );

                return root;

        }

        Tree createPrecedenceTree( List expressions, List operators )

        {

                return createPrecedenceTree( expressions, operators, 0,
expressions.size() - 1 );

        }

}

 

complete_expression

        :       expression EOF

                -> expression

        ;

 

primary_expression

        :       INTEGER

                -> ^(INTEGER)

        |       '(' expression ')'

                -> expression

        ;

 

expression

@init

{

        List expressions = new ArrayList();

        List operators = new ArrayList();

}

        :       (       left=primary_expression

                        { expressions.add($left.tree); }

                )

                (       operator

                        right=primary_expression

                        {

                                operators.add($operator.start);

                                expressions.add($right.tree);

                        }

                )*

                -> {createPrecedenceTree(expressions,operators)}

        ;

 

operator

        :       '+'

        |       '-'

        |       '*'

        |       '/'

        ;

 

///////////////////////////////////////////

// LEXER

 

fragment

DIGIT   :       '0'..'9'

        ;

 

INTEGER :       DIGIT+

        ;

 

WS      :       (' ' | '\t' | '\n' | '\r')+

                { $channel = HIDDEN; }

        ;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080827/85d419cf/attachment.html 

From Ronghui.Yu at SierraAtlantic.com  Wed Aug 27 22:29:13 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Thu, 28 Aug 2008 13:29:13 +0800
Subject: [antlr-interest] Can't recoginze a file start with HIDDENlexer
	since 3.1b1
References: <002401c90818$06f35f20$4307430a@RYUSA>
	<1219851750.15169.362.camel@jimi>
Message-ID: <005101c908cf$01b82e70$4307430a@RYUSA>

The following is the complete implementation of CREATE DATABASE of our Sybase parser, and it shows its structures.
The text in red below was added a few days ago when I found this problem. I commented it because they would introduce some other problems. God....

Thanks

grammar Sybase;
options
{
    language    = C;
    backtrack   = true;
}

scope ActivityScope
{
    ANTLR3_INT32 activityId; 
    ANTLR3_INT32 objectId;
}

@header
{
    #include "Activities.h"
    #include "LumActivityTypeIds.h"
}

@members
{
    void* activityVectorPtr;
}

@rulecatch
{
    if (HASEXCEPTION())
    {
        // Report the exception and attempt to recover from it.
        PREPORTERROR();
        PRECOVER();

        // Record the exception in the current activity record.
        if (SCOPE_TOP(ActivityScope) != NULL)
            recordException(activityVectorPtr, SCOPE_TOP(ActivityScope)->activityId);
    }
}


start[void* ptr] :

        { activityVectorPtr = ptr; }

        (

         //SQL_Comment

         //|

         //Line_Comment

         //|

         //Multi_Line_Comment

         //|

         //Whitespace

         //|

         //We need the above alternatives to match the comments, empty line at the beginning of a file

         //Ronghui 08/21/2008

         sql_statement

        )+ 

    ;
sql_statement

scope 

        {

            ANTLR3_INT32 activityId; 

            ANTLR3_INT32 objectId;

        }

    :

        {

            if (SCOPE_SIZE(sql_statement) == 1)

            {

                $sql_statement::activityId = createActivity(activityVectorPtr);

            }

            else

            {

                $sql_statement::activityId = createSubActivity(activityVectorPtr, 

                    ((SCOPE_TYPE(sql_statement))SCOPE_INSTANCE(sql_statement, SCOPE_SIZE(sql_statement)-1))->activityId);

            }

        }



        sql_statement_command (SemiColon)?



        {

            if (hasException(activityVectorPtr, $sql_statement::activityId))

                handleException(activityVectorPtr, $sql_statement::activityId, $text);

        }

    ;
sql_statement_command :

       create_database

    ;
create_database :

        'CREATE' ('TEMPORARY')? 'DATABASE' qual_object_name_saved // database_name 

        ('ON' database_options)?

        ('LOG' 'ON' database_options)?

        (alter_database_option)*

        {

            addActivityInfo(activityVectorPtr, $sql_statement::activityId, "CREATE_DATABASE", AC_CREATE_DATABASE, $text);

        }

    ;
qual_object_name_saved :

        {

            // ANTLR doesn't seem to initialize these variables.

            memset(&srv, 0, sizeof(srv));

            memset(&db, 0, sizeof(db));

            memset(&own, 0, sizeof(own));

            memset(&obj, 0, sizeof(obj));

        }

        ( srv=server_name '.' (db=database_name)? '.' (own=owner_name)? '.' obj=object_name

        | '.'? db=database_name '.' (own=owner_name)? '.' obj=object_name

        | '.'? '.'? own=owner_name '.' obj=object_name

        | '.'? '.'? '.'? obj=object_name

        )

        {

            addObjectInfo(activityVectorPtr, $sql_statement::activityId, $srv.text, $db.text, $own.text, NULL, $obj.text);

        }

    ;
server_name                         : object;
object :

        Identifier

    |   Bracketed_Identifier

    |   Single_Quoted_String 

    |   Double_Quoted_String

    |   non_reserved_keywords

    ;
non_reserved_keywords :

        'NAME' | 'ADDRESS' | 'XML' | 'TYPE' | 'STATE' | 'ROWS' | 'STATUS' | 'DOCUMENT' | 'ACTION' |

        'SERVER' | 'MASTER' | 'COUNT' | 'SIZE' | 'RESUME' | 'SOURCE' | 'INSERTED' | 'DELETED' | 'SAFETY' | 

        'PARTITION' | 'BINARY' | 'CHECKSUM' | 'MAX' | 'LOG' | 'FIRST' | 'LAST' | 'FILENAME' | 'LOW' | 

        'NORMAL' | 'HIGH' | 'CONTEXT_INFO' | 'IDENTITY' | 'SQL' | 'STOP' | 'START' | 'LENGTH' | 'UNPARTITION' |

        'ASE' | 'ONLY' | 'CALLER' | 'SELF' | 'OWNER' | 'ISOLATION' | 'LEVEL' | 'PERMENENT' | 'PUBLIC' |

        'DATEFORMAT' | 'DATEFIRST' | 'LANGUAGE' | 'CLIENT' | 'OPERATIOR_CONSOLE' | 'CURRENT' | 'TIME' | 'FUNC'

    ;
database_name                       : object;
owner_name                          : object;
object_name                         : object;
database_options

 : ('DEFAULT'| db1=database_device {addObjectInfo(activityVectorPtr, $sql_statement::activityId, NULL, NULL, NULL, NULL, $db1.text);})( '=' size)? 

  (',' db2=database_device {addObjectInfo(activityVectorPtr, $sql_statement::activityId, NULL, NULL, NULL, NULL, $db2.text);} ('=' size)?)*

 ;
database_device       : object;
size : 

        constant //( size_units )?

    ;
constant :

        Binary_Constant

    |   Integer_Constant

    |   Floating_Point_Constant

    |   Money_Constant

    |   Single_Quoted_String

    |   Double_Quoted_String

    | true_or_false

    |   'NULL'

    ;
true_or_false

 : ('TRUE' | 'FALSE')

 ;
alter_database_option

 : (with_option_rule)

        | ('FOR' ('LOAD'|'PROXY_UPDATE'))

 ;
with_option_rule

 : 'WITH' with_option_list

 ;
with_option_list :

 with_option ( ',' with_option )* 

    ;
with_option :

  with_option_name (('=')? with_option_value)? ('PERCENT')?

 | ( 'DISMOUNT' | 'NODISMOUNT' )

 | ( 'NOUNLOAD' | 'UNLOAD')

 | ( 'NOINIT' | 'INIT')

 | 'NO_TRUNCATE'

 | 'STANDBY_ACCESS'

 | 'TRUNCATE_ONLY'

 | 'NO_LOG'

 | 'LOG'

 | 'OVERRIDE'

 | 'RECOMPILE'

 | ('CHECK'|'GRANT') 'OPTION'

 | 'ERROR'

 | 'NO_ERROR'

 | 'WAIT'

 | 'NOWAIT'

        | 'IGNORE_DUP_KEY'

        | 'SORTED_DATA'

        | 'IGNORE_DUP_ROW'

        | 'ALLOW_DUP_ROW'

        | 'RESUME'

        | 'STATISTICS' using_clause

    ;
with_option_name

 : 'DENSITY'

 | 'BLOCKSIZE'

 | 'CAPACITY'

 | 'COMPRESSION'

 | 'DUMPVOLUME'

 | 'FILE'

 | 'IDENTITY_GAP'

 | 'UNTIL_TIME'

 | 'RETAINDAYS'

 | 'EXP_ROW_SIZE'

 | 'MAX_ROWS_PER_PAGE'

        | 'RESERVEPAGEGAP'

        | 'FILLFACTOR'

        | 'CONSUMERS'

        | 'DEFAULT_LOCATION'

        | 'PASSWORD'

        | 'PASSWD'

        | 'LISTONLY'

        | 'HEADERONLY'

        | 'VERIFY' ('ONLY')?

        | 'NOTIFY'

 | 'TIME'

 | 'SAMPLING'

 ;
with_option_value

 : constant

 | file_name //object('.' extension)?, including object

 | 'CLIENT' 

 | 'OPERATIOR_CONSOLE'

 | 'HEADER' 

 | 'FULL'

 ;
file_name                           : object('.' extension)?;
extension       : object;
using_clause:

 'USING' using_item ( ',' using_item )*

 ;
using_item

 : (constant (('=' constant)|('VALUES'))?)

 | ('BYTES'|'CHARS'|'CHARACTERS')

 ;
label_name                          : object;
SQL_Comment :

        '--' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;} ;
Line_Comment :

        '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;} ;
Multi_Line_Comment :

        //'/*' ((Multi_Line_Comment) => Multi_Line_Comment | (options {greedy=false;} : .))* '*/' {$channel=HIDDEN;}

     '/*'

     (

      ('/*') => Multi_Line_Comment

      |

      ('*' ~'/') => '*'

      |

      ~'*'

     )*

     '*/'

     {$channel=HIDDEN;}



        ;
Whitespace :

        ('\u0000'..'\u0020') {$channel=HIDDEN;} ;
Identifier :

        ('a'..'z'|'A'..'Z'|'_'|'$'|'#') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$'|'#')*

        ( {LA(1) == ':' && LA(2) != ':'}? => ':' { $type = Label_Identifier; } )? ;
Bracketed_Identifier :

        '[' ( ~']' )* ']' ;
Single_Quoted_String :

        ('N')? ( '\'' ( ~'\'' )* '\'' )+ ;
Double_Quoted_String :

        '"' ( ~'"' )* '"' ;
Binary_Constant 

 : 

        '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')* ;
Integer_Constant :

        ('0'..'9')+ ;
Floating_Point_Constant :

        ('0'..'9')+ '.' ('0'..'9')* (Exponent)?

    |   '.' ('0'..'9')+ (Exponent)?

    |   ('0'..'9')+ Exponent ;
fragment

Exponent : 

        ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
Money_Constant :

        '$' ( Integer_Constant | Floating_Point_Constant ) ;
SemiColon :

        ';' ;


==============================
Regards,
Ronghui Yu
Sierra Atlantic
  ----- Original Message ----- 
  From: Jim Idle 
  To: Ronghui Yu 
  Cc: antlr-interest at antlr.org 
  Sent: Wednesday, August 27, 2008 11:42 PM
  Subject: Re: [antlr-interest] Can't recoginze a file start with HIDDENlexer since 3.1b1


  On Wed, 2008-08-27 at 15:39 +0800, Ronghui Yu wrote: 
    We're developing several SQL parsers for different major DBMS, before 3.1b1 was available, we finished development based 3.0.1, and run a bunch of *.sql files with a great amout of SQL statements againt this parser. Everything went well at that time. 
     
    Then when 3.1b1 was available, we switched to it with exactly the same grammar code, and run the same *sql files. Something different happened, all *.sql files start with empty line or lines, SQL comment line or lines, could not pass the test. Now when 3.1 available, the situation is the same as that of 3.1b1. And I learnt that if the file start with lexers with HIDDEN channel, it would fail against the test. 
     
    I wonder if anyone else ever comes across the same situtation? And if yes, any suggestion to solve it? 


  I'll take a look - maybe there is some issue with one of the bug fixes. Do you have some small example to reproduce this? My own SQL parsers all work correctly so thre must be some particular aspect fo your grammars that makes this happen.


    By the way, I am using the C target. 

  Jim 


__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/99160262/attachment.html 

From gune.harshada at gmail.com  Thu Aug 28 00:48:25 2008
From: gune.harshada at gmail.com (harshada gune)
Date: Thu, 28 Aug 2008 13:18:25 +0530
Subject: [antlr-interest] how to exit when first error is encountered?
Message-ID: <996c7a8a0808280048y6ae9576bvf3b7cb6d2c73ef1f@mail.gmail.com>

When I tried some erroneous input for some grammar that I have written, it
is generating some error.(That is fine!!). But is there any way such that
parser should exit (with error flashed)as soon as it sees the first error
instead of evaluating next grammar rules?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/3749a7d5/attachment.html 

From antlr at mirality.co.nz  Thu Aug 28 00:50:51 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 28 Aug 2008 19:50:51 +1200
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwill
	games.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
Message-ID: <20080828075100.45AE411ED74@www.antlr.org>

At 15:31 28/08/2008, Sam Harwell wrote:
>Profiling my grammar showed the expression parsing as one of the 
>slowest segments. The problem stemmed from the fact that this 
>grammar has ~18 precedence categories of operators, so getting to 
>a primary expression was unnecessarily slow. Here is an example 
>grammar that shows how you can flatten groups of operators while 
>maintaining a correct AST.

What about unary operators?


From Ronghui.Yu at SierraAtlantic.com  Thu Aug 28 03:40:14 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Thu, 28 Aug 2008 18:40:14 +0800
Subject: [antlr-interest] Is this a bug of ANTLR3.1?
Message-ID: <00a501c908fa$7458c270$4307430a@RYUSA>

I am using ANTLR3.1 for developing a SQL parser

One of my main rule looks like this

sql_statement:
    sql_statement_command (';')?

But when generating parser codes from grammar file to C source, it always take a very long time and consume as much as 5G memory because of the optional semicolon
Then in order to make the development easier, I make the semicolon a mandatory by removing the question mark, like this

sql_statement:
    sql_statement_command ';'

It does make the building faster and require much less memory.

But the problem now is, when parsing a statement without the semicolon, such as the following

select * from tt

ANTLR won't handle this but issue a signal 11
His is the stack information when this happening, when all test has been matched and is going to match the last semicolon

Program received signal SIGSEGV, Segmentation fault.
0xb7370a09 in getMissingSymbol () from /home/oracle/install/lib/libantlr3c.so
(gdb) where
#0  0xb7370a09 in getMissingSymbol ()
   from /home/oracle/install/lib/libantlr3c.so
#1  0xb73701d0 in recoverFromMismatchedToken ()
   from /home/oracle/install/lib/libantlr3c.so
#2  0xb736f7bb in match () from /home/oracle/install/lib/libantlr3c.so

In my opinion, ANTLR should initialize an exception that can be processed by his own way, not issue this signal
Anyone has any ideas of suggestions on this?
Thanks a lot


==============================
Regards,
Ronghui Yu
Sierra Atlantic

__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/a0aa574f/attachment.html 

From peter.bulychev at gmail.com  Thu Aug 28 06:11:58 2008
From: peter.bulychev at gmail.com (Peter Bulychev)
Date: Thu, 28 Aug 2008 13:11:58 +0000
Subject: [antlr-interest] ParseTree::getLine problem
Message-ID: <ef5132890808280611h22eaca0cx48892330429d5b96@mail.gmail.com>

Hello.

I have a parse tree and I want to know, in which lines of parsed file do
nodes of this tree reside.

ParseTree class itself doesn't have getLine function, but its parent
(BaseTree class) does have.
Unfortunately its getLine function seems to be constantly zero:   "public
int getLine() {\n return 0;\n}"

Did I do something wrong and what workaround can be invented?

Thank you.

p.s.  I use ANTLR 3.1.

-- 
Best regards,
Peter Bulychev.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/fac159ab/attachment.html 

From tbrandonau at gmail.com  Thu Aug 28 06:35:50 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 28 Aug 2008 23:35:50 +1000
Subject: [antlr-interest] ParseTree::getLine problem
In-Reply-To: <ef5132890808280611h22eaca0cx48892330429d5b96@mail.gmail.com>
References: <ef5132890808280611h22eaca0cx48892330429d5b96@mail.gmail.com>
Message-ID: <ebc876d70808280635r7dba811w7a6e4366c631af7e@mail.gmail.com>

On Thu, Aug 28, 2008 at 11:11 PM, Peter Bulychev
<peter.bulychev at gmail.com> wrote:
> Hello.
>
> I have a parse tree and I want to know, in which lines of parsed file do
> nodes of this tree reside.
>
> ParseTree class itself doesn't have getLine function, but its parent
> (BaseTree class) does have.
> Unfortunately its getLine function seems to be constantly zero:   "public
> int getLine() {\n return 0;\n}"
>
> Did I do something wrong and what workaround can be invented?
You can access the original token via the payload object (for the leaf
nodes that represent children). Note though that the parse tree
functionality is included as a debugging aid not as an alternate to
building ASTs in the usual way. So unless this is for testing or some
non-standard use you are probably best to switch to proper ASTs to
avoid other limitations.

Tom.
>
> Thank you.
>
> p.s.  I use ANTLR 3.1.
>
> --
> Best regards,
> Peter Bulychev.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From simone.tripodi at gmail.com  Thu Aug 28 06:57:09 2008
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Thu, 28 Aug 2008 15:57:09 +0200
Subject: [antlr-interest] [ANTLRWorks] Locking assertion failure ?!?
Message-ID: <4173dc210808280657u4a492211i216eb4f8b83e88ff@mail.gmail.com>

Hi Folks,
I'm trying using ANTRL Works 1.1.7 on Ubunbtu Linuz with Sun's JDK
1.5.0_15; when launching ANTRL Works, a message appears:

java -jar antlrworks-1.1.7.jar
Locking assertion failure.  Backtrace:
#0 /usr/lib/libxcb-xlib.so.0 [0xb1921767]
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb19218b1]
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0xb19631bd]
#3 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a58dce]
#4 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a42d77]
#5 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a42ef3]
#6 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26)
[0xb1a43136]
#7 [0xb261bbfa]
#8 [0xb2615b3b]
#9 [0xb2615b3b]
#10 [0xb2613219]
#11 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77c32bc]
#12 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb78d7ed8]
#13 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77c30ef]
#14 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so(JVM_DoPrivileged+0x32d)
[0xb7820b9d]
#15 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/libjava.so(Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2+0x3d)
[0xb75c730d]
#16 [0xb261b4ab]
#17 [0xb2615a64]
#18 [0xb2613219]
#19 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77c32bc]
Locking assertion failure.  Backtrace:
#0 /usr/lib/libxcb-xlib.so.0 [0xb1921767]
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_lock+0x2e) [0xb192181e]
#2 /usr/lib/libX11.so.6 [0xb1962518]
#3 /usr/lib/libX11.so.6(XGetVisualInfo+0x26) [0xb19590a6]
#4 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a420b9]
#5 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a42303]
#6 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a42fa1]
#7 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26)
[0xb1a43136]
#8 [0xb261bbfa]
#9 [0xb2615b3b]
#10 [0xb2615b3b]
#11 [0xb2613219]
#12 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77c32bc]
#13 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb78d7ed8]
#14 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77c30ef]
#15 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so(JVM_DoPrivileged+0x32d)
[0xb7820b9d]
#16 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/libjava.so(Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2+0x3d)
[0xb75c730d]
#17 [0xb261b4ab]
#18 [0xb2615a64]
#19 [0xb2613219]
simone at tripodi-desktop:~/downloads$
simone at tripodi-desktop:~/downloads$
simone at tripodi-desktop:~/downloads$
simone at tripodi-desktop:~/downloads$ java -jar antlrworks-1.1.7.jar
Locking assertion failure.  Backtrace:
#0 /usr/lib/libxcb-xlib.so.0 [0xb1908767]
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb19088b1]
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0xb194a1bd]
#3 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a3fdce]
#4 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a29d77]
#5 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a29ef3]
#6 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26)
[0xb1a2a136]
#7 [0xb2602bfa]
#8 [0xb25fcb3b]
#9 [0xb25fcb3b]
#10 [0xb25fa219]
#11 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77aa2bc]
#12 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb78beed8]
#13 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77aa0ef]
#14 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so(JVM_DoPrivileged+0x32d)
[0xb7807b9d]
#15 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/libjava.so(Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2+0x3d)
[0xb75ae30d]
#16 [0xb26024ab]
#17 [0xb25fca64]
#18 [0xb25fa219]
#19 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77aa2bc]
Locking assertion failure.  Backtrace:
#0 /usr/lib/libxcb-xlib.so.0 [0xb1908767]
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_lock+0x2e) [0xb190881e]
#2 /usr/lib/libX11.so.6 [0xb1949518]
#3 /usr/lib/libX11.so.6(XGetVisualInfo+0x26) [0xb19400a6]
#4 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a290b9]
#5 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a29303]
#6 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so [0xb1a29fa1]
#7 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26)
[0xb1a2a136]
#8 [0xb2602bfa]
#9 [0xb25fcb3b]
#10 [0xb25fcb3b]
#11 [0xb25fa219]
#12 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77aa2bc]
#13 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb78beed8]
#14 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so [0xb77aa0ef]
#15 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/client/libjvm.so(JVM_DoPrivileged+0x32d)
[0xb7807b9d]
#16 /home/simone/programs/jdk1.5.0_15/jre/lib/i386/libjava.so(Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2+0x3d)
[0xb75ae30d]
#17 [0xb26024ab]
#18 [0xb25fca64]
#19 [0xb25fa219]

The splash-screen appears as usual, but after a totally empty window
appears; if I try clicking on it, an exception is thrown:

Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at org.antlr.works.components.grammar.CEditorGrammar.getReferenceAtPosition(Unknown
Source)
	at org.antlr.works.components.grammar.CEditorGrammar.getCurrentReference(Unknown
Source)
	at org.antlr.works.editor.EditorMenu.getContextualMenu(Unknown Source)
	at org.antlr.works.components.grammar.CEditorGrammar.ateInvokePopUp(Unknown
Source)
	at org.antlr.works.ate.ATEPanel.textPaneInvokePopUp(Unknown Source)
	at org.antlr.works.ate.ATEPanel$TextPaneMouseAdapter.checkForPopupTrigger(Unknown
Source)
	at org.antlr.works.ate.ATEPanel$TextPaneMouseAdapter.mousePressed(Unknown
Source)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:222)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:221)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:221)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:221)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:221)
	at java.awt.AWTEventMulticaster.mousePressed(AWTEventMulticaster.java:221)
	at java.awt.Component.processMouseEvent(Component.java:5514)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3135)
	at java.awt.Component.processEvent(Component.java:5282)
	at java.awt.Container.processEvent(Container.java:1966)
	at java.awt.Component.dispatchEventImpl(Component.java:3984)
	at java.awt.Container.dispatchEventImpl(Container.java:2024)
	at java.awt.Component.dispatchEvent(Component.java:3819)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4212)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:3889)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:3822)
	at java.awt.Container.dispatchEventImpl(Container.java:2010)
	at java.awt.Window.dispatchEventImpl(Window.java:1791)
	at java.awt.Component.dispatchEvent(Component.java:3819)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:463)
	at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:163)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:157)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:149)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)

Can anyone help me please?
Thanks in advance!
Best regards,
Simone

-- 
My LinkedIn profile: http://www.linkedin.com/in/simonetripodi
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi
My Del.icio.us: http://del.icio.us/simone.tripodi

From jimi at temporal-wave.com  Thu Aug 28 07:59:19 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 07:59:19 -0700
Subject: [antlr-interest] Can't recoginze a file start with
	HIDDENlexer	since 3.1b1
In-Reply-To: <005101c908cf$01b82e70$4307430a@RYUSA>
References: <002401c90818$06f35f20$4307430a@RYUSA>
	<1219851750.15169.362.camel@jimi>
	<005101c908cf$01b82e70$4307430a@RYUSA>
Message-ID: <1219935559.15169.427.camel@jimi>

On Thu, 2008-08-28 at 13:29 +0800, Ronghui Yu wrote:

> ? 
> 
> The following is the complete implementation of CREATE DATABASE of our
> Sybase parser, and it shows its structures.
> The text in red below was added a few days ago when I found this
> problem. I commented it because they would introduce some other
> problems. God....
>  
> Thanks
>  
> grammar Sybase;
> options
> {
>     language    = C;
>     backtrack   = true;


Hmmm - backtrack = true isn't a good idea for something like SQL (or
almost any production parser really) - this may be masking your issue,
but I will look at this for you this weekend - apologies that I am too
busy to look a this before then.

Also, my own parser matches the comments in the lexer and places them on
their own channel. You can then look for them in the tree walker if you
need them.

Jim

> }

> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/5ec50878/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 08:08:11 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 08:08:11 -0700
Subject: [antlr-interest] how to exit when first error is encountered?
In-Reply-To: <996c7a8a0808280048y6ae9576bvf3b7cb6d2c73ef1f@mail.gmail.com>
References: <996c7a8a0808280048y6ae9576bvf3b7cb6d2c73ef1f@mail.gmail.com>
Message-ID: <1219936091.15169.433.camel@jimi>

On Thu, 2008-08-28 at 13:18 +0530, harshada gune wrote:
> When I tried some erroneous input for some grammar that I have
> written, it is generating some error.(That is fine!!). But is there
> any way such that parser should exit (with error flashed)as soon as it
> sees the first error instead of evaluating next grammar rules? 


http://markmail.org/search/list:antlr?q=exit+first+error


> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/2e328c3f/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 08:17:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 08:17:10 -0700
Subject: [antlr-interest] Is this a bug of ANTLR3.1?
In-Reply-To: <00a501c908fa$7458c270$4307430a@RYUSA>
References: <00a501c908fa$7458c270$4307430a@RYUSA>
Message-ID: <1219936630.15169.440.camel@jimi>

On Thu, 2008-08-28 at 18:40 +0800, Ronghui Yu wrote:
> I am using ANTLR3.1 for developing a SQL parser
>  
> One of my main rule looks like this
>  
> sql_statement:
>     sql_statement_command (';')?
>  
> But when generating parser codes from grammar file to C source, it
> always take a very long time and consume as much as 5G memory because
> of the optional semicolon
> Then in order to make the development easier, I make the semicolon a
> mandatory by removing the question mark, like this
>  
> sql_statement:
>     sql_statement_command ';'
>  
> It does make the building faster and require much less memory.


This indicates that there is something wrong with the formulation of
your grammar - getting the terminators correct in SQL is not easy.
>  
> But the problem now is, when parsing a statement without the
> semicolon, such as the following
>  
> select * from tt
>  
> ANTLR won't handle this but issue a signal 11
> His is the stack information when this happening, when all test has
> been matched and is going to match the last semicolon
>  
> Program received signal SIGSEGV, Segmentation fault.
> 0xb7370a09 in getMissingSymbol ()
> from /home/oracle/install/lib/libantlr3c.so
> (gdb) where
> #0  0xb7370a09 in getMissingSymbol ()
>    from /home/oracle/install/lib/libantlr3c.so
> #1  0xb73701d0 in recoverFromMismatchedToken ()
>    from /home/oracle/install/lib/libantlr3c.so
> #2  0xb736f7bb in match () from /home/oracle/install/lib/libantlr3c.so


Yes - this probably is a bug. TO give me a bettr chance of seeing what
is happening, can you rebuild the runtime with debug information
included (see configure --help) and run it via valgrind? It is probably
some boundary condition that I did not anticipate.

Jim

> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/37592b8a/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 08:22:45 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 08:22:45 -0700
Subject: [antlr-interest] [ANTLRWorks] Locking assertion failure ?!?
In-Reply-To: <4173dc210808280657u4a492211i216eb4f8b83e88ff@mail.gmail.com>
References: <4173dc210808280657u4a492211i216eb4f8b83e88ff@mail.gmail.com>
Message-ID: <1219936965.15169.446.camel@jimi>

On Thu, 2008-08-28 at 15:57 +0200, Simone Tripodi wrote:

> Hi Folks,
> I'm trying using ANTRL Works 1.1.7 on Ubunbtu Linuz with Sun's JDK


Yes - I get teh same problems, but I also get similar problems from
other jars too. JDK 1.5 throws some of these at start with 1.2b5 (try
that instead) but actually works. 64 bit JDK 1.6 just throws a
segmentation violation. I think it is something wrong with the graphics
handling but have tno had time to explore it any further. 64bit JDK just
seems to be broken for various reasons :-(. I have had so many stupid
issues with Ubuntu Linux applications that I am beginning to think I
should have stayed with Vista 64 [guys - I'll call an collect my share
of Jerry's money later].

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/cdef6401/attachment.html 

From sharwell at pixelminegames.com  Thu Aug 28 09:16:23 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Aug 2008 11:16:23 -0500
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <BLOODYMARYlib4g3Sv00000000d@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<BLOODYMARYlib4g3Sv00000000d@Bloodymary.ironwillgames.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E23A@Bloodymary.ironwillgames.com>

In my case (with this whole email referring to the grammar in my
application, not the sample one I sent out), unary operators are handled
in the 'prefix_operator' and 'postfix_operator' steps. One thing I
forgot to mention in my first email: 21% of the total time spent in
profiling was spent in 'primary_expression'. Since the total time spent
in 'expression' was 23%, the 6 expression levels leading to
'primary_expression' are now taking so little time that it's clearly
more beneficial for me to focus on optimizing either
'primary_expression', or better yet, the items that make up the
remaining 77% of the parse time.

As an exercise, I plan to find a way to incorporate 'ternary_expression'
into the flat parsing routine, which would lead to incorporating
'assignment_expression' as well.

Sam

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Thursday, August 28, 2008 2:51 AM
To: Sam Harwell; antlr-interest
Subject: Re: [antlr-interest] Faster expression parsing

At 15:31 28/08/2008, Sam Harwell wrote:
>Profiling my grammar showed the expression parsing as one of the 
>slowest segments. The problem stemmed from the fact that this 
>grammar has ~18 precedence categories of operators, so getting to 
>a primary expression was unnecessarily slow. Here is an example 
>grammar that shows how you can flatten groups of operators while 
>maintaining a correct AST.

What about unary operators?


From simone.tripodi at gmail.com  Thu Aug 28 09:31:12 2008
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Thu, 28 Aug 2008 18:31:12 +0200
Subject: [antlr-interest] [ANTLRWorks] Locking assertion failure ?!?
In-Reply-To: <1219936965.15169.446.camel@jimi>
References: <4173dc210808280657u4a492211i216eb4f8b83e88ff@mail.gmail.com>
	<1219936965.15169.446.camel@jimi>
Message-ID: <4173dc210808280931j43179f66hd24067c311e9458f@mail.gmail.com>

Hi Jim,
thank you for your reply, I think I'll continue using ANTRL Works on a Mac :P
Best regards,
Simone

2008/8/28 Jim Idle <jimi at temporal-wave.com>:
> On Thu, 2008-08-28 at 15:57 +0200, Simone Tripodi wrote:
>
> Hi Folks,
> I'm trying using ANTRL Works 1.1.7 on Ubunbtu Linuz with Sun's JDK
>
> Yes - I get teh same problems, but I also get similar problems from other
> jars too. JDK 1.5 throws some of these at start with 1.2b5 (try that
> instead) but actually works. 64 bit JDK 1.6 just throws a segmentation
> violation. I think it is something wrong with the graphics handling but have
> tno had time to explore it any further. 64bit JDK just seems to be broken
> for various reasons :-(. I have had so many stupid issues with Ubuntu Linux
> applications that I am beginning to think I should have stayed with Vista 64
> [guys - I'll call an collect my share of Jerry's money later].
>
> Jim
>
>



-- 
My LinkedIn profile: http://www.linkedin.com/in/simonetripodi
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Sourceforge: https://sourceforge.net/users/stripodi
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi
My Del.icio.us: http://del.icio.us/simone.tripodi

From parrt at cs.usfca.edu  Thu Aug 28 11:07:50 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Aug 2008 11:07:50 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
Message-ID: <21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>

Heh, really cool!  This is a similar approach to:

http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression 
+parsing+for+ANTLR

except that you do the appropriate tree construction and after parsing  
without consideration of operator precedence. Interesting. I wonder  
which is faster.

Note that you can improve the speed slightly when you are grammar by  
removing unnecessary tree stuff.

> primary_expression
>         :       INTEGER
>                 -> ^(INTEGER)
>         |       '(' expression ')'
>                 -> expression
>         ;

primary_expression
         :       INTEGER
         |       '(' expression ')' -> expression
         ;

Let me know if that makes a difference.

Ter


From david at gohazel.com  Thu Aug 28 12:54:07 2008
From: david at gohazel.com (David Goldberg)
Date: Thu, 28 Aug 2008 15:54:07 -0400
Subject: [antlr-interest] Problems in upgrading to ANTLR v3.1
Message-ID: <A23D2A4BF1A7B149B6D47EED157BFF8F05392AEE5A@MAIL30.thoughtbus.com>

I finally upgraded my ANTLR version from 3.0.1 to 3.1

I'm using ANTLRWorks 1.2b5 and and C# libraries that came with ANTLR v3.1b1 (since I couldn't find any in 3.1)

I have a tree grammar with a line that looks like:
block     :               thelb=LBRACE (blockExprList)? RBRACE -> ^(BLOCK[$thelb] blockExprList?);

In the previous version of ANTLR, this did what I expected - create a BLOCK node with syntax information taken from the LBRACE token. Now, it just gives me a null pointer exception, claiming that thelb is null.

The input is:
{ 1; }

My full grammar consists of the following:

grammar LangTest;

options
{language = 'CSharp2';
output=AST;
ASTLabelType=CommonTree;
}

tokens {
   PROG;
   BLOCK;
}

prog       :               topLevelExprList? -> ^(PROG topLevelExprList?)
                ;

topLevelExprList
                :               (blockExpr)+
                ;
blockExpr
                :               statement
                ;
statement
                :               (block)=>block
                |              emptyStatement
                |              numericLiteral SEMI!
                ;
emptyStatement
                :               emptyExpr SEMI!
                ;
emptyExpr
                :
                ;
block     :               thelb=LBRACE (blockExprList)? RBRACE -> ^(BLOCK[$thelb] blockExprList?);
blockExprList
                :               (blockExpr)+
                ;

numericLiteral
                :               DECIMALLITERAL;
WS :
                (' '
| '\t'
| '\n'
| '\r'
|              '\u000C')
{ $channel = HIDDEN; }
;

LBRACE :               '{';
RBRACE                :               '}';
SEMI      :                ';' ;

DECIMALLITERAL
                :               INT;
fragment
INT
                :               ('0' | '1'..'9' ('0'..'9')*);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/3aa31225/attachment.html 

From sharwell at pixelminegames.com  Thu Aug 28 13:18:07 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Aug 2008 15:18:07 -0500
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E24C@Bloodymary.ironwillgames.com>

The *giant* advantage in the code example I showed lies in something
behind the scenes: no extra syntactic or semantic predicates were added,
so the prediction runs as fast as it did per-level before. On a grammar
that doesn't require any predicates at the binary expression level, this
means a 5:1 performance difference for the function. I just checked, and
26.96% of the parse time is in 'binary_expression', which is
'prefix_expression' separated by 'binary_operator'. 25.41% of the parse
time is in 'prefix_expression', so the overhead of parsing all 25
non-assignment binary operations in 12 precedence groups in my program
is now 1.5% of the parse time.

Also, the functions build the tree properly accounting for both operator
associativity and precedence groups. The profiler showed the tree
construction overhead (the call to createPrecedenceTree) given a flat
input was 0.27% of the parse time. Keep in mind that my grammar doesn't
use backtracking or semantic predicates, and is <=LL(2) for most
predictions. On a grammar that spends more time in those sections, the
overhead would show as near 0.

In the grammar I'm performance testing, I don't have any lines that look
quite like the one you mentioned. The language I'm parsing allows some
reserved words to be used as variable names, so I had this:

a	: 	literal
		-> ^(literal)
	|	varName
		-> ^(varName)
	|
	...
	;

varName	:	IDENTIFIER
	|	VAR
	|	FUNCTION
	...
	;

So I changed rule a to be:

a	: 	literal
		-> literal
	|	varName
		-> varName
	|	...
	;

'primary_expression' dropped from 7.02% to 6.40%.

It really shows the power of ANTLR3 to sandwich a operator precedence
parser in it that still allows a grammar-defined primary non-terminal,
without any changes to the generator or runtime.

My parser targets the C# runtime and currently parses 1.33MB of source
code / second, so with "only" 2500 source files (8MB) in the project,
it's getting difficult to profile with absolute consistency.

Sam

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Thursday, August 28, 2008 1:08 PM
To: Sam Harwell
Cc: antlr-interest
Subject: Re: [antlr-interest] Faster expression parsing

Heh, really cool!  This is a similar approach to:

http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression 
+parsing+for+ANTLR

except that you do the appropriate tree construction and after parsing  
without consideration of operator precedence. Interesting. I wonder  
which is faster.

Note that you can improve the speed slightly when you are grammar by  
removing unnecessary tree stuff.

> primary_expression
>         :       INTEGER
>                 -> ^(INTEGER)
>         |       '(' expression ')'
>                 -> expression
>         ;

primary_expression
         :       INTEGER
         |       '(' expression ')' -> expression
         ;

Let me know if that makes a difference.

Ter


From antlr at mirality.co.nz  Thu Aug 28 13:20:59 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 29 Aug 2008 08:20:59 +1200
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
Message-ID: <20080828202351.E7C1311EE06@www.antlr.org>

At 06:07 29/08/2008, Terence Parr wrote:
 >Note that you can improve the speed slightly when you are 
grammar
 >by removing unnecessary tree stuff.
 >
 >> primary_expression
 >>         :       INTEGER
 >>                 -> ^(INTEGER)
 >>         |       '(' expression ')'
 >>                 -> expression
 >>         ;
 >
 >primary_expression
 >         :       INTEGER
 >         |       '(' expression ')' -> expression
 >         ;

If the second one is faster than the first, does that mean that 
the below would be faster than the second?  Or are they 
equivalent?

primary_expression
     :    INTEGER
     |    '('! expression ')'!
     ;


From parrt at cs.usfca.edu  Thu Aug 28 13:26:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Aug 2008 13:26:57 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E24C@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E24C@Bloodymary.ironwillgames.com>
Message-ID: <5BEA2878-0527-4E34-BE5C-014F20D87476@cs.usfca.edu>


On Aug 28, 2008, at 1:18 PM, Sam Harwell wrote:

> The *giant* advantage in the code example I showed lies in something
> behind the scenes: no extra syntactic or semantic predicates were  
> added,
> so the prediction runs as fast as it did per-level before. On a  
> grammar

I only need 1 very fast semantic predicate,Which will be hidden from  
the user... should be very fast. The difference is that you get  
recursion in the parser that you defer until tree construction time.  
should balance out because neither of us is descending 20 levels any  
more.

> that doesn't require any predicates at the binary expression level,  
> this
> means a 5:1 performance difference for the function. I just checked,  
> and
> 26.96% of the parse time is in 'binary_expression', which is
> 'prefix_expression' separated by 'binary_operator'. 25.41% of the  
> parse
> time is in 'prefix_expression', so the overhead of parsing all 25
> non-assignment binary operations in 12 precedence groups in my program
> is now 1.5% of the parse time.
>

nice work!

You should make a faq entry :)

> Also, the functions build the tree properly accounting for both  
> operator
> associativity and precedence groups. The profiler showed the tree
> construction overhead (the call to createPrecedenceTree) given a flat
> input was 0.27% of the parse time. Keep in mind that my grammar  
> doesn't
> use backtracking or semantic predicates, and is <=LL(2) for most
> predictions. On a grammar that spends more time in those sections, the
> overhead would show as near 0.

My version would be the exact same thing as yours except that I have a  
predicate to dictate whether to recurse.  LL(1) most likely.

> In the grammar I'm performance testing, I don't have any lines that  
> look
> quite like the one you mentioned. The language I'm parsing allows some
> reserved words to be used as variable names, so I had this:
>
> a	: 	literal
> 		-> ^(literal)
> 	|	varName
> 		-> ^(varName)
> 	|
> 	...
> 	;

I cut-and-paste from your e-mail; must be there somewhere.

Also removes those unnecessary tree construction things:

a -> ^(a)

  is the same as

a -> a

  which is the same as

a

The latter should make you go even faster. try it out :)

> It really shows the power of ANTLR3 to sandwich a operator precedence
> parser in it that still allows a grammar-defined primary non-terminal,
> without any changes to the generator or runtime.

hooray!

Ter

From parrt at cs.usfca.edu  Thu Aug 28 13:27:36 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Aug 2008 13:27:36 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <20080828202352.21621F05E3@mail.cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
Message-ID: <36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>


On Aug 28, 2008, at 1:20 PM, Gavin Lambert wrote:
> If the second one is faster than the first, does that mean that the  
> below would be faster than the second?  Or are they equivalent?
>
> primary_expression
>    :    INTEGER
>    |    '('! expression ')'!
>    ;

This one is much more efficient but I am not sure it will show up  
unless you have a huge input.
Ter

From jaluber at gmx.de  Thu Aug 28 13:32:45 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 28 Aug 2008 22:32:45 +0200
Subject: [antlr-interest] [ANTLRWorks] Locking assertion failure ?!?
In-Reply-To: <4173dc210808280931j43179f66hd24067c311e9458f@mail.gmail.com>
References: <4173dc210808280657u4a492211i216eb4f8b83e88ff@mail.gmail.com>	<1219936965.15169.446.camel@jimi>
	<4173dc210808280931j43179f66hd24067c311e9458f@mail.gmail.com>
Message-ID: <48B70B6D.2020700@gmx.de>

Simone Tripodi schrieb:
> Hi Jim,
> thank you for your reply, I think I'll continue using ANTRL Works on a Mac :P
> Best regards,
> Simone

I suppose the true problem is that you use Ubuntu - even Ubuntu diehard
fans admit that it is broken. Switch to another distribution. I use
OpenSuse 11 and have not encountered this problem.

Johannes

> 2008/8/28 Jim Idle <jimi at temporal-wave.com>:
>> On Thu, 2008-08-28 at 15:57 +0200, Simone Tripodi wrote:
>>
>> Hi Folks,
>> I'm trying using ANTRL Works 1.1.7 on Ubunbtu Linuz with Sun's JDK
>>
>> Yes - I get teh same problems, but I also get similar problems from other
>> jars too. JDK 1.5 throws some of these at start with 1.2b5 (try that
>> instead) but actually works. 64 bit JDK 1.6 just throws a segmentation
>> violation. I think it is something wrong with the graphics handling but have
>> tno had time to explore it any further. 64bit JDK just seems to be broken
>> for various reasons :-(. I have had so many stupid issues with Ubuntu Linux
>> applications that I am beginning to think I should have stayed with Vista 64
>> [guys - I'll call an collect my share of Jerry's money later].
>>
>> Jim
>>
>>
> 
> 
> 


From lucasontivero at hotmail.com  Thu Aug 28 13:34:07 2008
From: lucasontivero at hotmail.com (Lucas Ontivero)
Date: Thu, 28 Aug 2008 20:34:07 +0000
Subject: [antlr-interest] Parsing XML
In-Reply-To: <fcd5815e0808281114y3afdd26ana1c63b8a0e214356@mail.gmail.com>
References: <BAY128-W29641AC8E8CCF2B8F4F05DB5670@phx.gbl>
	<fcd5815e0808281114y3afdd26ana1c63b8a0e214356@mail.gmail.com>
Message-ID: <BAY128-W54A615700D691D6D8B5264B5600@phx.gbl>


Hi all,
I am making an articles processor which load technical articles from .txt files and convert him to HTML/DOC/etc.. these articles has tags like [link][/link], [strong][/strong], etc. It is very similar to XML  so I am reusing the grammar from "Parsing XML" (http://www.antlr.org/wiki/display/ANTLR3/Parsing+XML)

The problem is the ArticleProcessorLexer.cs is very large (2.08 MB). My project requiere high performance because the articles could be large and my component is part of a web application which could be several request in a same time. I need to do ( PCDATA : {!tagMode}?=> (~'[')+ ; ) in a better way.

I am a newbe with antlr, may be I am confused but, is my grammar ok?

thank you.

/* Begin Grammar ---------------------------------------------------------------------------------------------------------------------------------------------------------------/
grammar ArticleProcessor;

options{
    language=CSharp;
    output = AST;
    ASTLabelType = CommonTree;
}

@header {
using System.Collections;
}

@lexer::namespace  { ArticleProcessor.Lexer  }
@parser::namespace { ArticleProcessor.Parser }

@lexer::members  { bool tagMode = false;  }

article   :    element   |  EOF    ;

element
    : TAG_START_OPEN NAME (NAME ATTR_EQ ATTRVALUE)*  TAG_CLOSE
        (element
        | PCDATA
        )*
        TAG_END_OPEN NAME TAG_CLOSE
    ;

TAG_START_OPEN : '[' { tagMode = true; } ;
TAG_END_OPEN : '[/' { tagMode = true; } ;
TAG_CLOSE : {tagMode}?=> ']' { tagMode = false; } ;

PCDATA : {!tagMode}?=> (~'[')+ ;

NAME : {tagMode}?=> ( LETTER | '_' | ':') (NAMECHAR)* ;

ATTR_EQ : { tagMode }?=> '=' ;

ATTRVALUE : { tagMode }?=>
        ( '"' (~'"')* '"'
        | '\'' (~'\'')* '\''
        )
    ;


fragment NAMECHAR    : LETTER | DIGIT | '.' | '-' | '_' | ':'    ;

fragment DIGIT    :    '0'..'9'    ;
    
fragment LC    :    'a'..'z'    ;

fragment UC    :    'A'..'Z'    ;

fragment LETTER    : LC|UC    ;


WS  :  {tagMode}?=> (' '|'\r'|'\t'|'\u000C'|'\n')+ {$channel=HIDDEN;}    ;
 
/* End Grammar
---------------------------------------------------------------------------------------------------------------------------------------------------------------/





_________________________________________________________________
Ingres? ya a MSN en Concierto y disfrut? los recitales en vivo de tus artistas favoritos.
http://msninconcert.msn.com/music/archive/es-la/archive.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/14007b2f/attachment.html 

From jaluber at gmx.de  Thu Aug 28 13:45:12 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 28 Aug 2008 22:45:12 +0200
Subject: [antlr-interest] C#
 target:	.NET	Frameworkbug	causing	NullReferenceException,
 must use this workaround
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E231@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>	<1218298947.6138.164.camel@jimi>	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>	<489DF988.6020505@gmx.de>
	<86403CA0939415448BCCB83855EFE09A64E231@Bloodymary.ironwillgames.com>
Message-ID: <48B70E58.3040408@gmx.de>

Sam Harwell schrieb:
> Strangely enough, your fix highlights why the bug in the Framework probably hasn't been fixed to date. The problem only occurs if mtne.Node is not null, so your current code change has no effect on the situation.
> 
> Sam

You mean I have to add a ToString() to mtne.Node?

Johannes
> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de] 
> Sent: Saturday, August 09, 2008 3:10 PM
> To: Sam Harwell
> Cc: antlr-interest
> Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround
> 
> Sam Harwell schrieb:
>> I?m with Jim on this ? if I had only sent you a link to the bug report 
>> at MS you would have figured out something similar to what I wrote 
>> anyway. When you make the change, make sure to comment that you?re 
>> working around anti-documented behavior so no one wants to change it later.
> 
> I decided to use a ternary operator here, because I find it strange that 
> a string null is handled differently than an object null (as shown in 
> the bugfix which Sam posted). That way I'm safe regarding this bug and 
> any possible problem regarding the lack of the license.
> 
> Johannes
>>  
>>
>> The standard says this at the end of page 201 (section 14.7.4 Addition 
>> operator):
>>
>> ?If an operand of string concatenation is null, an empty string is 
>> substituted.?
>>
>>  
>>
>> Sam
>>
>>  
>>
>> *From:* antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
>> *Sent:* Saturday, August 09, 2008 11:22 AM
>> *To:* antlr-interest
>> *Subject:* Re: [antlr-interest] C# target: .NET Frameworkbug causing 
>> NullReferenceException, must use this workaround
>>
>>  
>>
>> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign 
>> the ANTLR Contribution
>>
>>  
>>
>> License? Otherwise I can't use your bugfix.
>>
>>
>> I don't think that is true - it is a few lines that you are going to 
>> type in yourself, probably fairly differently. Hence this is covered by 
>> your own signature I should think. I rarely (ok, never) type in a bug 
>> fix that someone sends in, I just use it as an example of HOW something 
>> MIGHT be fixed IF the behavior it purports to fix IS in fact the 
>> behavior that is wrong ;-)
>>
>> Jim
>>
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From mark at mark-fink.de  Thu Aug 28 13:47:16 2008
From: mark at mark-fink.de (Mark Fink)
Date: Thu, 28 Aug 2008 22:47:16 +0200
Subject: [antlr-interest] encoding problems?
Message-ID: <d9d598330808281347v5a44249bide7aa9a575d73a65@mail.gmail.com>

Hi there,

sorry for this but I think I am in some trouble with encoding. I just
converted all my files back to ASCII and it helped a little but I am still
in trouble.
I use the brand new 3.1 version of antlr with the Python flavor.
I am trying to build an AST for this: "select a.b, c.d from e.f, g.h ;"


line 1:7 mismatched input u'a' expecting ID
line 1:21 required (...)+ loop did not match anything at input u'e'
line 1:26 required (...)+ loop did not match anything at input u'g'
(SELECT (COLUMN <mismatched token: [@1,7:7=u'a',<27>,1:7], resync=a> b)
(COLUMN c d) (FROM <error: e.f> <error: g.h>))

The ID rule is like that:
ID            : ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-')+ ;

Could you please point me to some useful information on how to solve
(understand) this.


-- 
Mark Fink
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/4e59a196/attachment.html 

From kurtotte at gmail.com  Thu Aug 28 14:36:31 2008
From: kurtotte at gmail.com (Kurt Otte)
Date: Thu, 28 Aug 2008 15:36:31 -0600
Subject: [antlr-interest] [C runtime] Rewrite rules consuming *tons* of
	memory
Message-ID: <27766db30808281436y4a6a226w16b5b3499eadac51@mail.gmail.com>

Jim,

Sorry to add another thing to the list, but I think I may have found
another bug or perhaps there is a better way to construct the rewrite
rule to avoid making lots of AST copies.  Do you know of a way to
avoid rewrite rules doing lots of copies?

I have boiled my grammar down to show the problem using toy input.
When the parser is fed a nested block such as the one below it
consumes over 2GB of memory and crashes when it runs out of memory.


conditional
  : 'if' '(' constant ')' ifblock=block
     // This rewrite rule kills conditionals
      -> ^(CONDITIONAL constant ^(IF $ifblock))
  ;


if (0)
{
  if (0)
  {
    if (0)
    {
      if (0)
      {
        if (0)
        {
          if (0)
          {
            if (0)
            {
              boo;
            }
          }
        }
      }
    }
  }
}

When digging into it a bit with a profiler, it appears that the
problem is in the rewrite rule.  The rewrite rule for 'conditional' is
calling ADAPTOR->addChild()  and dupTree() recursively millions of
times which in effect continuously allocates memory until it runs out.
 Is there some way from a syntax point of view that I can construct a
rewrite rule such that it minimizes the tree dups?

Attached is a zip file, with this toy example to reproduce the problem.

Thanks in advance for any thoughts or advice,

Kurt
-------------- next part --------------
A non-text attachment was scrubbed...
Name: memory_hog.zip
Type: application/zip
Size: 2472 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/bf0156f7/attachment.zip 

From jimi at temporal-wave.com  Thu Aug 28 14:45:24 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 14:45:24 -0700
Subject: [antlr-interest] [C runtime] Rewrite rules consuming *tons* of
	memory
In-Reply-To: <27766db30808281436y4a6a226w16b5b3499eadac51@mail.gmail.com>
References: <27766db30808281436y4a6a226w16b5b3499eadac51@mail.gmail.com>
Message-ID: <1219959924.15169.491.camel@jimi>

On Thu, 2008-08-28 at 15:36 -0600, Kurt Otte wrote:

> Jim,
> 
> Sorry to add another thing to the list, but I think I may have found
> another bug or perhaps there is a better way to construct the rewrite
> rule to avoid making lots of AST copies.  Do you know of a way to
> avoid rewrite rules doing lots of copies?
> 
> I have boiled my grammar down to show the problem using toy input.
> When the parser is fed a nested block such as the one below it
> consumes over 2GB of memory and crashes when it runs out of memory.


That looks like a bug - in fact, I think I remember saying to myself
"now I have put in factories for everything, I should not call dup on
the trees! However, I also remember doing that, so perhaps it is
something to do with your grammar) Sorry, but I still won't be able to
look in to this until the weekend :-(

Jim

> 
> 
> conditional
>   : 'if' '(' constant ')' ifblock=block
>      // This rewrite rule kills conditionals
>       -> ^(CONDITIONAL constant ^(IF $ifblock))
>   ;
> 
> 
> if (0)
> {
>   if (0)
>   {
>     if (0)
>     {
>       if (0)
>       {
>         if (0)
>         {
>           if (0)
>           {
>             if (0)
>             {
>               boo;
>             }
>           }
>         }
>       }
>     }
>   }
> }
> 
> When digging into it a bit with a profiler, it appears that the
> problem is in the rewrite rule.  The rewrite rule for 'conditional' is
> calling ADAPTOR->addChild()  and dupTree() recursively millions of
> times which in effect continuously allocates memory until it runs out.
>  Is there some way from a syntax point of view that I can construct a
> rewrite rule such that it minimizes the tree dups?
> 
> Attached is a zip file, with this toy example to reproduce the problem.
> 
> Thanks in advance for any thoughts or advice,
> 
> Kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/8c04a371/attachment.html 

From jaluber at gmx.de  Thu Aug 28 15:43:51 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Aug 2008 00:43:51 +0200
Subject: [antlr-interest] Problems in upgrading to ANTLR v3.1
In-Reply-To: <A23D2A4BF1A7B149B6D47EED157BFF8F05392AEE5A@MAIL30.thoughtbus.com>
References: <A23D2A4BF1A7B149B6D47EED157BFF8F05392AEE5A@MAIL30.thoughtbus.com>
Message-ID: <48B72A27.5030801@gmx.de>

David Goldberg schrieb:
> I finally upgraded my ANTLR version from 3.0.1 to 3.1
> 
> I?m using ANTLRWorks 1.2b5 and and C# libraries that came with ANTLR
> v3.1b1 (since I couldn?t find any in 3.1)

Those have been moved into a separate zip on the download page. The beta
ones are a bit more buggy and ANTLRworks 1.2b5 still uses 3.1b1
internally, so generate the code via command line now. Please test it
again with the correct configuration.
> 
> I have a tree grammar with a line that looks like:
> 
> block     :               thelb=LBRACE (blockExprList)? RBRACE ->
> ^(BLOCK[$thelb] blockExprList?);

Please understand that I require also the tree grammar to test it if the
above advice didn't solve this issue.
> 
> In the previous version of ANTLR, this did what I expected ? create a
> BLOCK node with syntax information taken from the LBRACE token. Now, it
> just gives me a null pointer exception, claiming that thelb is null.
> 
> The input is:
> 
> { 1; }
> 
> My full grammar consists of the following:
> 
> grammar LangTest;
> 
>  
> 
> options
> 
> {language = 'CSharp2';

Does using '' actually work? Where did you get that syntax? No example
I've ever seen uses it.

Johannes

From rgreen at google.com  Thu Aug 28 16:16:08 2008
From: rgreen at google.com (Robin Green)
Date: Thu, 28 Aug 2008 16:16:08 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
Message-ID: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>

Hello!

Longtime listener, firstime, er, caller.

I am using the "C" target and I am trying to get access to the
$channel=HIDDEN tokens from the parser, but only inside one rule. The FAQ
and advice on the mailing list that I have read talk about subclassing the
ANTLR3_COMMON_TOKEN_STREAM class and rewriting the skipOffTokenChannels()
function to send back every token in the stream.

1. It's unclear how to "subclass" the objects in the C target library,
especially how to rewrite a "member" function.

2. Even if I do so, how do I switch between token stream as I enter a rule
and restore it as I leave? I understand the examples that push the current
stream onto a stack for "including" files, but these streams are complete in
themselves, so when they swap back they only have to pick up where they left
off. I really need to switch on and off the skipping of off-channel tokens.

What's technique should I use? I am leaning towards writing my own "get()"
in the lookahead:

shader
  : ( options{greedy=false;}: ( val = ~('technique')
    {
      ANTLR3_INT32 index = $val.index + 1;
      ANTLR3_INT32 max_size = INPUT->istream->cachedSize;
      while(index < max_size) {
         pANTLR_COMMON_TOKEN token = INPUT->get(INPUT, index);
         if (token->getChannel(token) == HIDDEN) {
           // add lookahead token to the output
        }
      }
    }
    )* )
  ;

and using it inside a parser rule to directly diddle with the token stream,
but I was wondering if there is a better way that doesn't involve me
customizing the C target library (which will require re-customizing every
time I update the antlr package). Is there a way to inject my own behavior
into the C libs without recompiling it?

Thanks in advance,

- Robin Green
  Google Inc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/805cbb42/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 16:33:02 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 16:33:02 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
Message-ID: <1219966382.15169.511.camel@jimi>

On Thu, 2008-08-28 at 16:16 -0700, Robin Green wrote:
> Hello!
> 
> 
> Longtime listener, firstime, er, caller.
> 
> 
> I am using the "C" target and I am trying to get access to the
> $channel=HIDDEN tokens from the parser, but only inside one rule. The
> FAQ and advice on the mailing list that I have read talk about
> subclassing the ANTLR3_COMMON_TOKEN_STREAM class and rewriting the
> skipOffTokenChannels() function to send back every token in the
> stream.


When you want to do this in one rule, just use get it directly starting
from the current index. Say you want to look back from a particular
token in a rule to see if there was a comment on channel 2 (please note
that I have not compiled this, just typed it in from memory). Basically
though you can do anything you can do in Java (more in fact), just by
looking a ta Java example and realizing that the C methods are all the
same names (just about) but instead of  x.y(z), you use x->y(x, z).

rule
: f=FUNCTION x y z
    {
        int sIndex;
       pANTLR3_COMMON_TOKEN tok;

       sIndex = $f->getTokenIndex($f) - 1;   // Index for first token
  
      // Now look back up looking for tokens
     tok = INPUT->get(INPUT, sIndex);

    if (tok->getChannel(tok) == whatever) { .... }

// and so on
    
    }
;

Use the C runtime for cribbing the functions and also the Doxygen API
docs (see API docs on antlr home page). You are well advised to read
through all of this. Also use the search at: http://antlr.markmail.org/
- it is very good.

If you really want to override a function, then copy the function from
the runtime as a start point and put it in your own source. Then in your
grammar use:

@parser::apifuncs
 {
    // Install custom error message display
    //
    RECOGNIZER->displayRecognitionError = produceError;
 }



This piece of code will run after all the standard methods are set up
and you can install your own version of any function whatsoever. No need
to alter the standard runtime.


> 
> 
> 1. It's unclear how to "subclass" the objects in the C target library,
> especially how to rewrite a "member" function.
> 
> 
> 2. Even if I do so, how do I switch between token stream as I enter a
> rule and restore it as I leave? I understand the examples that push
> the current stream onto a stack for "including" files, but these
> streams are complete in themselves, so when they swap back they only
> have to pick up where they left off. I really need to switch on and
> off the skipping of off-channel tokens.
> 
> 
> What's technique should I use? I am leaning towards writing my own
> "get()" in the lookahead:
> 
> 
> shader
>   : ( options{greedy=false;}: ( val = ~('technique')
>     {
>       ANTLR3_INT32 index = $val.index + 1;
>       ANTLR3_INT32 max_size = INPUT->istream->cachedSize;
>       while(index < max_size) {
>          pANTLR_COMMON_TOKEN token = INPUT->get(INPUT, index);
>          if (token->getChannel(token) == HIDDEN) {
>            // add lookahead token to the output
>         }
>       }
>     }
>     )* )
>   ;
> 
> 
> and using it inside a parser rule to directly diddle with the token
> stream, but I was wondering if there is a better way that doesn't
> involve me customizing the C target library (which will require
> re-customizing every time I update the antlr package). Is there a way
> to inject my own behavior into the C libs without recompiling it?
> 
> 
> 
> Thanks in advance,
> 
> 
> - Robin Green
>   Google Inc.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/c9a926ba/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 16:38:15 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 16:38:15 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <1219966382.15169.511.camel@jimi>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
	<1219966382.15169.511.camel@jimi>
Message-ID: <1219966695.15169.513.camel@jimi>

On Thu, 2008-08-28 at 16:33 -0700, Jim Idle wrote:

> On Thu, 2008-08-28 at 16:16 -0700, Robin Green wrote: 
> 
> > Hello!
> > 
> > 
> > Longtime listener, firstime, er, caller.
> > 
> > 
> > I am using the "C" target and I am trying to get access to the
> > $channel=HIDDEN tokens from the parser, but only inside one rule.
> > The FAQ and advice on the mailing list that I have read talk about
> > subclassing the ANTLR3_COMMON_TOKEN_STREAM class and rewriting the
> > skipOffTokenChannels() function to send back every token in the
> > stream.
> 
> 
> When you want to do this in one rule, just use get it directly
> starting from the current index. Say you want to look back from a
> particular token in a rule to see if there was a comment on channel 2
> (please note that I have not compiled this, just typed it in from
> memory). Basically though you can do anything you can do in Java (more
> in fact), just by looking a ta Java example and realizing that the C
> methods are all the same names (just about) but instead of  x.y(z),
> you use x->y(x, z).
> 
> rule
> : f=FUNCTION x y z
>     {
>         int sIndex;
>        pANTLR3_COMMON_TOKEN tok;
> 
>        sIndex = $f->getTokenIndex($f) - 1;   // Index for first token
>   
>       // Now look back up looking for tokens
>      tok = INPUT->get(INPUT, sIndex);


Actually, this should be:


tok = (pANTLR3_COMMON_TOKEN)(INPUT->get(INPUT, sIndex)->super);

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/4bd1208d/attachment.html 

From rgreen at google.com  Thu Aug 28 17:01:55 2008
From: rgreen at google.com (Robin Green)
Date: Thu, 28 Aug 2008 17:01:55 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <1219966695.15169.513.camel@jimi>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
	<1219966382.15169.511.camel@jimi> <1219966695.15169.513.camel@jimi>
Message-ID: <132c521b0808281701yb92cae5qe2fcbcf7b022ec80@mail.gmail.com>

On Thu, Aug 28, 2008 at 4:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  On Thu, 2008-08-28 at 16:33 -0700, Jim Idle wrote:
>
> When you want to do this in one rule, just use get it directly starting
> from the current index. Say you want to look back from a particular token in
> a rule to see if there was a comment on channel 2 (please note that I have
> not compiled this, just typed it in from memory). Basically though you can
> do anything you can do in Java (more in fact), just by looking a ta Java
> example and realizing that the C methods are all the same names (just about)
> but instead of  x.y(z), you use x->y(x, z).
>
> rule
> : f=FUNCTION x y z
>     {
>         int sIndex;
>        pANTLR3_COMMON_TOKEN tok;
>
>        sIndex = $f->getTokenIndex($f) - 1;   // Index for first token
>
>       // Now look back up looking for tokens
>      tok = INPUT->get(INPUT, sIndex);
>
>
> Actually, this should be:
>
> tok = (pANTLR3_COMMON_TOKEN)(INPUT->get(INPUT, sIndex)->super);
>
> Jim
>
>
Are you sure? "super" is not a member of ANTLR3_COMMON_TOKEN_struct. Which
object are you "super"ing here, the Token or the TokenStream?

The code for "get()" in antlr3tokenstream.c takes the result of the INPUT
macro, follows the super pointer to reach a pANTLR3_COMMON_TOKEN_STREAM,
then directly accesses the pANTLR3_VECTOR "tokens" to get the next symbol.
What are you suggesting that is different from that?

Mixing these macros with structure fields is making my head spin.

- Robin Green
  Google, Inc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/ed7bbe53/attachment.html 

From jimi at temporal-wave.com  Thu Aug 28 17:07:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Aug 2008 17:07:12 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <132c521b0808281701yb92cae5qe2fcbcf7b022ec80@mail.gmail.com>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
	<1219966382.15169.511.camel@jimi> <1219966695.15169.513.camel@jimi>
	<132c521b0808281701yb92cae5qe2fcbcf7b022ec80@mail.gmail.com>
Message-ID: <1219968432.15169.517.camel@jimi>

On Thu, 2008-08-28 at 17:01 -0700, Robin Green wrote:
> 
> 
> 
> On Thu, Aug 28, 2008 at 4:38 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> 
>         On Thu, 2008-08-28 at 16:33 -0700, Jim Idle wrote:
>         
>         > When you want to do this in one rule, just use get it
>         > directly starting from the current index. Say you want to
>         > look back from a particular token in a rule to see if there
>         > was a comment on channel 2 (please note that I have not
>         > compiled this, just typed it in from memory). Basically
>         > though you can do anything you can do in Java (more in
>         > fact), just by looking a ta Java example and realizing that
>         > the C methods are all the same names (just about) but
>         > instead of  x.y(z), you use x->y(x, z).
>         > 
>         > rule
>         > : f=FUNCTION x y z
>         >     {
>         >         int sIndex;
>         >        pANTLR3_COMMON_TOKEN tok;
>         > 
>         >        sIndex = $f->getTokenIndex($f) - 1;   // Index for
>         > first token
>         >   
>         >       // Now look back up looking for tokens
>         >      tok = INPUT->get(INPUT, sIndex);
>         
>         
>         
>         
>         Actually, this should be:
>         
>         
>         tok = (pANTLR3_COMMON_TOKEN)(INPUT->get(INPUT, sIndex)->super);
>         
>         Jim
> 
> 
> 
> Are you sure? "super" is not a member of ANTLR3_COMMON_TOKEN_struct.
> Which object are you "super"ing here, the Token or the TokenStream?


Yes but get returns a pointer to a TOKEN, which has a super pointer to
the common token (off the top of my head), if it is returning a
pANTLR3_COMMON_TOKEN already (it might be) then you don't need the
super.

> 
> 
> The code for "get()" in antlr3tokenstream.c takes the result of the
> INPUT macro, follows the super pointer to reach a
> pANTLR3_COMMON_TOKEN_STREAM, then directly accesses the pANTLR3_VECTOR
> "tokens" to get the next symbol. What are you suggesting that is
> different from that?

The macros stop you having to learn too much about the internals, which
can change between releases like Hogwart's staircases.

> 
> 
> Mixing these macros with structure fields is making my head spin.


A lot easier than ctx->rec->ts->cts->get

;-) Just takes a few goes and you will be fluent in it.

Jim
> 
> 
> - Robin Green
>   Google, Inc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/b3baf49a/attachment.html 

From sharwell at pixelminegames.com  Thu Aug 28 17:30:27 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Aug 2008 19:30:27 -0500
Subject: [antlr-interest] C#
	target:	.NET	Frameworkbug	causing	NullReferenceException,
	must use this workaround
In-Reply-To: <48B70E58.3040408@gmx.de>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>	<1218298947.6138.164.camel@jimi>	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>	<489DF988.6020505@gmx.de>
	<86403CA0939415448BCCB83855EFE09A64E231@Bloodymary.ironwillgames.com>
	<48B70E58.3040408@gmx.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E25A@Bloodymary.ironwillgames.com>

If you change the condition of the existing ternary expression from (mtne.Node!=null) to (mtne.Node!=null && mtne.Node.ToString()!=null), it fixes the problem.

Sam

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Thursday, August 28, 2008 3:45 PM
To: Sam Harwell
Cc: antlr-interest
Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround

Sam Harwell schrieb:
> Strangely enough, your fix highlights why the bug in the Framework probably hasn't been fixed to date. The problem only occurs if mtne.Node is not null, so your current code change has no effect on the situation.
> 
> Sam

You mean I have to add a ToString() to mtne.Node?

Johannes
> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de] 
> Sent: Saturday, August 09, 2008 3:10 PM
> To: Sam Harwell
> Cc: antlr-interest
> Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround
> 
> Sam Harwell schrieb:
>> I?m with Jim on this ? if I had only sent you a link to the bug report 
>> at MS you would have figured out something similar to what I wrote 
>> anyway. When you make the change, make sure to comment that you?re 
>> working around anti-documented behavior so no one wants to change it later.
> 
> I decided to use a ternary operator here, because I find it strange that 
> a string null is handled differently than an object null (as shown in 
> the bugfix which Sam posted). That way I'm safe regarding this bug and 
> any possible problem regarding the lack of the license.
> 
> Johannes
>>  
>>
>> The standard says this at the end of page 201 (section 14.7.4 Addition 
>> operator):
>>
>> ?If an operand of string concatenation is null, an empty string is 
>> substituted.?
>>
>>  
>>
>> Sam
>>
>>  
>>
>> *From:* antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
>> *Sent:* Saturday, August 09, 2008 11:22 AM
>> *To:* antlr-interest
>> *Subject:* Re: [antlr-interest] C# target: .NET Frameworkbug causing 
>> NullReferenceException, must use this workaround
>>
>>  
>>
>> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign 
>> the ANTLR Contribution
>>
>>  
>>
>> License? Otherwise I can't use your bugfix.
>>
>>
>> I don't think that is true - it is a few lines that you are going to 
>> type in yourself, probably fairly differently. Hence this is covered by 
>> your own signature I should think. I rarely (ok, never) type in a bug 
>> fix that someone sends in, I just use it as an example of HOW something 
>> MIGHT be fixed IF the behavior it purports to fix IS in fact the 
>> behavior that is wrong ;-)
>>
>> Jim
>>
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From rgreen at google.com  Thu Aug 28 17:39:47 2008
From: rgreen at google.com (Robin Green)
Date: Thu, 28 Aug 2008 17:39:47 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <1219968432.15169.517.camel@jimi>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
	<1219966382.15169.511.camel@jimi> <1219966695.15169.513.camel@jimi>
	<132c521b0808281701yb92cae5qe2fcbcf7b022ec80@mail.gmail.com>
	<1219968432.15169.517.camel@jimi>
Message-ID: <132c521b0808281739s79670a86ra66c9c59e208390d@mail.gmail.com>

On Thu, Aug 28, 2008 at 5:07 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Yes but get returns a pointer to a TOKEN, which has a super pointer to the
> common token (off the top of my head), if it is returning a
> pANTLR3_COMMON_TOKEN already (it might be) then you don't need the super.
>
>
get() in antlr3tokenstream.c returns a pANTLR3_COMMON_TOKEN.

My problem is that I'm walking through this stream and I never see a token
that's not "channel=0". My iinput source has plenty of inline comments and
whitespace, so I'm starting to suspect that I'm calling the wrong "get()"
here.

#define    INPUT PARSER->tstream
#define ISTREAM INPUT->istream

Since I use "ANTLR3_INT32 max_size = INPUT->istream->cachedSize;" to get the
number of tokens in the stream, should I be using ISTREAM or INPUT in
my for my get() call?
What's the difference?

- Robin Green
  Googoe, Inc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/7e928113/attachment.html 

From rgreen at google.com  Thu Aug 28 19:04:21 2008
From: rgreen at google.com (Robin Green)
Date: Thu, 28 Aug 2008 19:04:21 -0700
Subject: [antlr-interest] Accessing HIDDEN tokens in the C target.
In-Reply-To: <132c521b0808281739s79670a86ra66c9c59e208390d@mail.gmail.com>
References: <132c521b0808281616u5298c182xf2b4def202bb0db9@mail.gmail.com>
	<1219966382.15169.511.camel@jimi> <1219966695.15169.513.camel@jimi>
	<132c521b0808281701yb92cae5qe2fcbcf7b022ec80@mail.gmail.com>
	<1219968432.15169.517.camel@jimi>
	<132c521b0808281739s79670a86ra66c9c59e208390d@mail.gmail.com>
Message-ID: <132c521b0808281904m4200ef1bq7377244952924384@mail.gmail.com>

On Thu, Aug 28, 2008 at 5:39 PM, Robin Green <rgreen at google.com> wrote:

>
>
> On Thu, Aug 28, 2008 at 5:07 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> Yes but get returns a pointer to a TOKEN, which has a super pointer to the
>> common token (off the top of my head), if it is returning a
>> pANTLR3_COMMON_TOKEN already (it might be) then you don't need the super.
>>
>>
> get() in antlr3tokenstream.c returns a pANTLR3_COMMON_TOKEN.
>
> My problem is that I'm walking through this stream and I never see a token
> that's not "channel=0". My iinput source has plenty of inline comments and
> whitespace, so I'm starting to suspect that I'm calling the wrong "get()"
> here.
>
> #define    INPUT PARSER->tstream
> #define ISTREAM INPUT->istream
>
> Since I use "ANTLR3_INT32 max_size = INPUT->istream->cachedSize;" to get
> the number of tokens in the stream, should I be using ISTREAM or INPUT in my for my get() call?
> What's the difference?
>
>
Apologies for a dumb question there. Please ignore it.

It seems my out of channel tokens are being discarded by the tokenizer in
the function "fillBuffer()" in antlr3tokenstream.c, so there never were any
tokens in the stream to find. How do I tell the tokenizer not to discard my
tokens? I'm guessing adding a

   token_stream->discardOffChannel = FALSE;

just after creating my pANTLR3_COMMON_TOKEN_STREAM would do the job? Is
there a standard function I should be using instead?

- Robin Green
  Google, Inc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080828/5b8acf57/attachment.html 

From Ronghui.Yu at SierraAtlantic.com  Thu Aug 28 22:48:09 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Fri, 29 Aug 2008 13:48:09 +0800
Subject: [antlr-interest] Is this a bug of ANTLR3.1?
References: <00a501c908fa$7458c270$4307430a@RYUSA>
	<1219936630.15169.440.camel@jimi>
Message-ID: <005201c9099a$d15cc020$4307430a@RYUSA>


The following information is output from gdb

Program received signal SIGSEGV, Segmentation fault.
0xb7341e78 in getMissingSymbol (recognizer=0x83e6a48, istream=0x83e5410,
    e=0x83e9f70, expectedTokenType=4, follow=0xb6fe0810)
    at src/antlr3baserecognizer.c:2199
2199    src/antlr3baserecognizer.c: No such file or directory.
  in src/antlr3baserecognizer.c
(gdb) where
#0  0xb7341e78 in getMissingSymbol (recognizer=0x83e6a48, istream=0x83e5410,
    e=0x83e9f70, expectedTokenType=4, follow=0xb6fe0810)
    at src/antlr3baserecognizer.c:2199
#1  0xb73413e4 in recoverFromMismatchedToken (recognizer=0x83e6a48, ttype=4,
    follow=0xb6fe0810) at src/antlr3baserecognizer.c:1510
#2  0xb73407b1 in match (recognizer=0x83e6a48, ttype=4, follow=0x0)
    at src/antlr3baserecognizer.c:448



Information output from valgrind is similiar

==32170==    at 0x4C45E78: getMissingSymbol (antlr3baserecognizer.c:2199)
==32170==    by 0x4C453E3: recoverFromMismatchedToken (antlr3baserecognizer.c:1510)
==32170==    by 0x4C447B0: match (antlr3baserecognizer.c:448)



The code should be 
                  token   = recognizer->state->tokFactory->newToken(recognizer->state->tokFactory);
   2184
   2185         // Set some of the token properties based on the current token
   2186         //
   2187         token->setLine                                  (token, current->getLine(current));
   2188         token->setCharPositionInLine    (token, current->getCharPositionInLine(current));
   2189         token->setChannel                               (token, ANTLR3_TOKEN_DEFAULT_CHANNEL);
   2190         token->setType                                  (token, expectedTokenType);
   2191
   2192         // Create the token text that shows it has been inserted
   2193         //
   2194         token->setText8(token, (pANTLR3_UINT8)"<missing ");
   2195         text = token->getText(token);
   2196
   2197         if      (text != NULL)
   2198         {
   2199                 text->append8(text, (const char *)recognizer->state->tokenNames[expectedTokenType]);
   2200                 text->append8(text, (const char *)">");
   2201         }

Thanks
==============================
Regards,
Ronghui Yu
Sierra Atlantic
  ----- Original Message ----- 
  From: Jim Idle 
  To: Ronghui Yu 
  Cc: antlr-interest at antlr.org 
  Sent: Thursday, August 28, 2008 11:17 PM
  Subject: Re: [antlr-interest] Is this a bug of ANTLR3.1?


  On Thu, 2008-08-28 at 18:40 +0800, Ronghui Yu wrote: 
    I am using ANTLR3.1 for developing a SQL parser 
     
    One of my main rule looks like this 
     
    sql_statement: 
        sql_statement_command (';')? 
     
    But when generating parser codes from grammar file to C source, it always take a very long time and consume as much as 5G memory because of the optional semicolon 
    Then in order to make the development easier, I make the semicolon a mandatory by removing the question mark, like this 
     
    sql_statement: 
        sql_statement_command ';' 
     
    It does make the building faster and require much less memory.


  This indicates that there is something wrong with the formulation of your grammar - getting the terminators correct in SQL is not easy. 
     
    But the problem now is, when parsing a statement without the semicolon, such as the following 
     
    select * from tt 
     
    ANTLR won't handle this but issue a signal 11 
    His is the stack information when this happening, when all test has been matched and is going to match the last semicolon 
     
    Program received signal SIGSEGV, Segmentation fault.
    0xb7370a09 in getMissingSymbol () from /home/oracle/install/lib/libantlr3c.so
    (gdb) where
    #0  0xb7370a09 in getMissingSymbol ()
       from /home/oracle/install/lib/libantlr3c.so
    #1  0xb73701d0 in recoverFromMismatchedToken ()
       from /home/oracle/install/lib/libantlr3c.so
    #2  0xb736f7bb in match () from /home/oracle/install/lib/libantlr3c.so


  Yes - this probably is a bug. TO give me a bettr chance of seeing what is happening, can you rebuild the runtime with debug information included (see configure --help) and run it via valgrind? It is probably some boundary condition that I did not anticipate.

  Jim




__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080829/90e81e24/attachment.html 

From Ronghui.Yu at SierraAtlantic.com  Fri Aug 29 03:39:45 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Fri, 29 Aug 2008 18:39:45 +0800
Subject: [antlr-interest] Can't recoginze a file start with
	HIDDENlexersince 3.1b1
References: <002401c90818$06f35f20$4307430a@RYUSA>
	<1219851750.15169.362.camel@jimi>
	<005101c908cf$01b82e70$4307430a@RYUSA>
	<1219935559.15169.427.camel@jimi>
Message-ID: <009901c909c3$8d7975f0$4307430a@RYUSA>

Hi, Jim,

Thanks very much for your help

I tried to turn backtrack off before, but failed to build the grammar with a lot of errors, so I have to turn it on



==============================
Regards,
Ronghui Yu
Sierra Atlantic
  ----- Original Message ----- 
  From: Jim Idle 
  To: Ronghui Yu 
  Cc: antlr-interest at antlr.org 
  Sent: Thursday, August 28, 2008 10:59 PM
  Subject: Re: [antlr-interest] Can't recoginze a file start with HIDDENlexersince 3.1b1


  On Thu, 2008-08-28 at 13:29 +0800, Ronghui Yu wrote:

    ? 
    The following is the complete implementation of CREATE DATABASE of our Sybase parser, and it shows its structures. 
    The text in red below was added a few days ago when I found this problem. I commented it because they would introduce some other problems. God.... 
     
    Thanks 
     
    grammar Sybase;
    options
    {
        language    = C;
        backtrack   = true;


  Hmmm - backtrack = true isn't a good idea for something like SQL (or almost any production parser really) - this may be masking your issue, but I will look at this for you this weekend - apologies that I am too busy to look a this before then.

  Also, my own parser matches the comments in the lexer and places them on their own channel. You can then look for them in the tree walker if you need them.

  Jim

    } 




__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080829/f779e8ca/attachment.html 

From jaluber at gmx.de  Fri Aug 29 04:42:09 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Aug 2008 13:42:09 +0200
Subject: [antlr-interest] Can't recoginze a file start
 with	HIDDENlexersince 3.1b1
In-Reply-To: <009901c909c3$8d7975f0$4307430a@RYUSA>
References: <002401c90818$06f35f20$4307430a@RYUSA>	<1219851750.15169.362.camel@jimi>	<005101c908cf$01b82e70$4307430a@RYUSA>	<1219935559.15169.427.camel@jimi>
	<009901c909c3$8d7975f0$4307430a@RYUSA>
Message-ID: <48B7E091.3060804@gmx.de>

Ronghui Yu schrieb:
> Hi, Jim,
>  
> Thanks very much for your help
>  
> I tried to turn backtrack off before, but failed to build the grammar
> with a lot of errors, so I have to turn it on

Did you look at
<http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar>?

Johannes
>  
>  
>  
> ==============================
> Regards,
> Ronghui Yu
> Sierra Atlantic
> 
>     ----- Original Message -----
>     *From:* Jim Idle <mailto:jimi at temporal-wave.com>
>     *To:* Ronghui Yu <mailto:Ronghui.Yu at sierraatlantic.com>
>     *Cc:* antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>     *Sent:* Thursday, August 28, 2008 10:59 PM
>     *Subject:* Re: [antlr-interest] Can't recoginze a file start with
>     HIDDENlexersince 3.1b1
> 
>     On Thu, 2008-08-28 at 13:29 +0800, Ronghui Yu wrote:
>>     ? 
>>     The following is the complete implementation of CREATE DATABASE of
>>     our Sybase parser, and it shows its structures. 
>>     The text in red below was added a few days ago when I found this
>>     problem. I commented it because they would introduce some other
>>     problems. God.... 
>>     Thanks 
>>     grammar Sybase;
>>     options
>>     {
>>         language    = C;
>>         backtrack   = true;
> 
>     Hmmm - backtrack = true isn't a good idea for something like SQL (or
>     almost any production parser really) - this may be masking your
>     issue, but I will look at this for you this weekend - apologies that
>     I am too busy to look a this before then.
> 
>     Also, my own parser matches the comments in the lexer and places
>     them on their own channel. You can then look for them in the tree
>     walker if you need them.
> 
>     Jim
>>     } 
> 
>>
> 
> __________________________________________________________________________________________________________________
> DISCLAIMER:"The information contained in this message and the
> attachments (if any) may be privileged and confidential and protected
> from disclosure. You are hereby notified that any unauthorized use,
> dissemination, distribution or copying of this communication, review,
> retransmission, or taking of any action based upon this information, by
> persons or entities other than the intended recipient, is strictly
> prohibited. If you are not the intended recipient or an employee or
> agent responsible for delivering this message, and have received this
> communication in error, please notify us immediately by replying to the
> message and kindly delete the original message, attachments, if any, and
> all its copies from your computer system. Thank you for your cooperation."
> ________________________________________________________________________________________________________________
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From ymo.mail at gmail.com  Fri Aug 29 09:19:12 2008
From: ymo.mail at gmail.com (Ymo)
Date: Fri, 29 Aug 2008 12:19:12 -0400
Subject: [antlr-interest] finally stumbled on a solution but i still
	dont grok it !
In-Reply-To: <7196ed5b0808262125g462b8d4w7e14b4d0cd1b6090@mail.gmail.com>
References: <7196ed5b0808262125g462b8d4w7e14b4d0cd1b6090@mail.gmail.com>
Message-ID: <7196ed5b0808290919n4a0e0ccmaed243e248a5355d@mail.gmail.com>

If anyone can comment on this i would really appreciate. Matt i am hoping
you missed this !

On Wed, Aug 27, 2008 at 12:25 AM, Ymo <ymo.mail at gmail.com> wrote:

> Hi All.
>
> I was trying to match block of delimited text. the  token CODE was always
> taking precedence and matching all tokens that came before it for no obvious
> reason. Right now when i put  parenthesis and the options (i even tried
> passing k .. it seems no bearing what k i choose) around the LG_BLOCK rule
> then evrything seems to work fine. Any ideas why ?
>
> Thanks Matt for all your help !
>
> input:
> <%a>
> <@b>
> <ccc:d>
> <aaaaaaaaa:bbbbbbbbbbbbbbb>
> <%-comment-%>
>
> grammar:
>
> all     :    ( t1 | t2 | t3 | code | text)* ;
> t1      :    T1 RG;
> t2    :    T2 RG;
> t3    :    T3 RG;
> code    :    CODE;
> text    :    TEXT;
>
> //LEXER
> LG : '<';
> RG : '>';
>
> LG_BLOCK:
>     ( options {k=2;} : // <-- why do i need this ?? and why does k=1 still
> works ?
>         (LG '%-') => COMMENT { $type=COMMENT;} |
>         (LG 'ccc:d') => T3 { $type=T3;} |
>         (LG '%a') => T1 { $type=T1;} |
>         (LG '@b') => T2 { $type=T2;} |
>         //uncommenting the below line makes lexes '<%a' as CODE !!!
>         //it basically overrides evrything for no reason !
>         (LG ) => CODE { $type=CODE;} |
>         ( TEXT {$type=TEXT;})
>     );
>
> fragment T1 : LG '%a';
> fragment T2 : LG '@b';
> fragment T3 : LG 'ccc:d';
>
> fragment TEXT: ( ~(LG|RG) )+;
>
> fragment
> CODE :
>    LG (options {k=2;greedy=false;} : . )+  RG{
>    };
>
> fragment COMMENT :
>    LG '%-' ( options {k=3;greedy=false;} : . )* '-%' RG {
>       $channel=HIDDEN;
>    };
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080829/325bb366/attachment.html 

From jaluber at gmx.de  Fri Aug 29 09:25:46 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Aug 2008 18:25:46 +0200
Subject: [antlr-interest] C#
 target:	.NET	Frameworkbug	causing	NullReferenceException,
 must use this workaround
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E25A@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09A64E04C@Bloodymary.ironwillgames.com><489D960D.6010901@gmx.de>	<1218298947.6138.164.camel@jimi>	<86403CA0939415448BCCB83855EFE09A64E054@Bloodymary.ironwillgames.com>	<489DF988.6020505@gmx.de>
	<86403CA0939415448BCCB83855EFE09A64E231@Bloodymary.ironwillgames.com>
	<48B70E58.3040408@gmx.de>
	<86403CA0939415448BCCB83855EFE09A64E25A@Bloodymary.ironwillgames.com>
Message-ID: <48B8230A.9090301@gmx.de>

Sam Harwell schrieb:
> If you change the condition of the existing ternary expression from (mtne.Node!=null) to (mtne.Node!=null && mtne.Node.ToString()!=null), it fixes the problem.
> 
> Sam

Added this, so I have not created a new binary yet.

Johannes

> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de] 
> Sent: Thursday, August 28, 2008 3:45 PM
> To: Sam Harwell
> Cc: antlr-interest
> Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround
> 
> Sam Harwell schrieb:
>> Strangely enough, your fix highlights why the bug in the Framework probably hasn't been fixed to date. The problem only occurs if mtne.Node is not null, so your current code change has no effect on the situation.
>>
>> Sam
> 
> You mean I have to add a ToString() to mtne.Node?
> 
> Johannes
>> -----Original Message-----
>> From: Johannes Luber [mailto:jaluber at gmx.de] 
>> Sent: Saturday, August 09, 2008 3:10 PM
>> To: Sam Harwell
>> Cc: antlr-interest
>> Subject: Re: [antlr-interest] C# target: .NET Frameworkbug causing NullReferenceException, must use this workaround
>>
>> Sam Harwell schrieb:
>>> I?m with Jim on this ? if I had only sent you a link to the bug report 
>>> at MS you would have figured out something similar to what I wrote 
>>> anyway. When you make the change, make sure to comment that you?re 
>>> working around anti-documented behavior so no one wants to change it later.
>> I decided to use a ternary operator here, because I find it strange that 
>> a string null is handled differently than an object null (as shown in 
>> the bugfix which Sam posted). That way I'm safe regarding this bug and 
>> any possible problem regarding the lack of the license.
>>
>> Johannes
>>>  
>>>
>>> The standard says this at the end of page 201 (section 14.7.4 Addition 
>>> operator):
>>>
>>> ?If an operand of string concatenation is null, an empty string is 
>>> substituted.?
>>>
>>>  
>>>
>>> Sam
>>>
>>>  
>>>
>>> *From:* antlr-interest-bounces at antlr.org 
>>> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
>>> *Sent:* Saturday, August 09, 2008 11:22 AM
>>> *To:* antlr-interest
>>> *Subject:* Re: [antlr-interest] C# target: .NET Frameworkbug causing 
>>> NullReferenceException, must use this workaround
>>>
>>>  
>>>
>>> On Sat, 2008-08-09 at 15:05 +0200, Johannes Luber wrote:And did you sign 
>>> the ANTLR Contribution
>>>
>>>  
>>>
>>> License? Otherwise I can't use your bugfix.
>>>
>>>
>>> I don't think that is true - it is a few lines that you are going to 
>>> type in yourself, probably fairly differently. Hence this is covered by 
>>> your own signature I should think. I rarely (ok, never) type in a bug 
>>> fix that someone sends in, I just use it as an example of HOW something 
>>> MIGHT be fixed IF the behavior it purports to fix IS in fact the 
>>> behavior that is wrong ;-)
>>>
>>> Jim
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 


From james at mansionfamily.plus.com  Fri Aug 29 12:40:35 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Fri, 29 Aug 2008 20:40:35 +0100
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
Message-ID: <48B850B3.8070604@mansionfamily.plus.com>

Terence Parr wrote:
> This one is much more efficient but I am not sure it will show up  
> unless you have a huge input.
>   
Isn't the optimisation of:

    <some-elided-constructs> foo <some-more-elided-constructs> -> foo

to

    foo

something that antlr could do fairly easily?



From parrt at cs.usfca.edu  Fri Aug 29 12:51:49 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Aug 2008 12:51:49 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <48B850B3.8070604@mansionfamily.plus.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
	<48B850B3.8070604@mansionfamily.plus.com>
Message-ID: <4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>


On Aug 29, 2008, at 12:40 PM, James Mansion wrote:

> Terence Parr wrote:
>> This one is much more efficient but I am not sure it will show up   
>> unless you have a huge input.
>>
> Isn't the optimisation of:
>
>   <some-elided-constructs> foo <some-more-elided-constructs> -> foo
>
> to
>
>   foo
>
> something that antlr could do fairly easily?

nope... how can I be sure you do not want those elided constructs?

foo -> foo

I suppose I could get rid of, but two compilers really get rid of a=a;?

Ter


From james at mansionfamily.plus.com  Fri Aug 29 12:56:46 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Fri, 29 Aug 2008 20:56:46 +0100
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
	<48B850B3.8070604@mansionfamily.plus.com>
	<4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>
Message-ID: <48B8547E.4010006@mansionfamily.plus.com>

Terence Parr wrote:
> nope... how can I be sure you do not want those elided constructs?
>
> foo -> foo
>
> I suppose I could get rid of, but two compilers really get rid of a=a;?
OK I mis-wrote, I meant just dropping the production side.  You seemed
to imply that its presence slows things up.

And I think a=a; is fair game if you know that operator= has no side 
effects.
Which is true in Java, and you can define to be true for other antlr parse
tree constructs.

Or have I missed something obvious?  (Been a long 4 day week, somehow)

James


From parrt at cs.usfca.edu  Fri Aug 29 13:11:10 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Aug 2008 13:11:10 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <48B8547E.4010006@mansionfamily.plus.com>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
	<48B850B3.8070604@mansionfamily.plus.com>
	<4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>
	<48B8547E.4010006@mansionfamily.plus.com>
Message-ID: <1E40A986-D0CC-48D6-871C-A314E3B9B38B@cs.usfca.edu>


On Aug 29, 2008, at 12:56 PM, James Mansion wrote:

> Terence Parr wrote:
>> nope... how can I be sure you do not want those elided constructs?
>>
>> foo -> foo
>>
>> I suppose I could get rid of, but two compilers really get rid of  
>> a=a;?
> OK I mis-wrote, I meant just dropping the production side.  You seemed
> to imply that its presence slows things up.

yeah, just because of the way ANTLR builds things right now.

>
>
> And I think a=a; is fair game if you know that operator= has no side  
> effects.
> Which is true in Java, and you can define to be true for other antlr  
> parse
> tree constructs.

i just Meant that it's not worth all of the coding hassle in the  
compiler to remove a=a :)

Ter

From david at gohazel.com  Fri Aug 29 13:50:51 2008
From: david at gohazel.com (David Goldberg)
Date: Fri, 29 Aug 2008 16:50:51 -0400
Subject: [antlr-interest] Problems in upgrading to ANTLR v3.1
In-Reply-To: <48B72A27.5030801@gmx.de>
References: <A23D2A4BF1A7B149B6D47EED157BFF8F05392AEE5A@MAIL30.thoughtbus.com>
	<48B72A27.5030801@gmx.de>
Message-ID: <A23D2A4BF1A7B149B6D47EED157BFF8F05392AF0E7@MAIL30.thoughtbus.com>

Thanks, making sure I had and was generating code with the latest version of ANTLR and the C# libraries seems to have done the trick.

 David

-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de]
Sent: Thursday, August 28, 2008 6:44 PM
To: David Goldberg
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Problems in upgrading to ANTLR v3.1

David Goldberg schrieb:
> I finally upgraded my ANTLR version from 3.0.1 to 3.1
>
> I'm using ANTLRWorks 1.2b5 and and C# libraries that came with ANTLR
> v3.1b1 (since I couldn't find any in 3.1)

Those have been moved into a separate zip on the download page. The beta
ones are a bit more buggy and ANTLRworks 1.2b5 still uses 3.1b1
internally, so generate the code via command line now. Please test it
again with the correct configuration.
>
> I have a tree grammar with a line that looks like:
>
> block     :               thelb=LBRACE (blockExprList)? RBRACE ->
> ^(BLOCK[$thelb] blockExprList?);

Please understand that I require also the tree grammar to test it if the
above advice didn't solve this issue.
>
> In the previous version of ANTLR, this did what I expected - create a
> BLOCK node with syntax information taken from the LBRACE token. Now, it
> just gives me a null pointer exception, claiming that thelb is null.
>
> The input is:
>
> { 1; }
>
> My full grammar consists of the following:
>
> grammar LangTest;
>
>
>
> options
>
> {language = 'CSharp2';

Does using '' actually work? Where did you get that syntax? No example
I've ever seen uses it.

Johannes

From antlr at mirality.co.nz  Fri Aug 29 14:56:31 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 30 Aug 2008 09:56:31 +1200
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <1E40A986-D0CC-48D6-871C-A314E3B9B38B@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
	<48B850B3.8070604@mansionfamily.plus.com>
	<4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>
	<48B8547E.4010006@mansionfamily.plus.com>
	<1E40A986-D0CC-48D6-871C-A314E3B9B38B@cs.usfca.edu>
Message-ID: <20080829215637.C763011EDC8@www.antlr.org>

At 08:11 30/08/2008, Terence Parr wrote:
 >i just Meant that it's not worth all of the coding hassle in 
the
 >compiler to remove a=a :)

It'll be less hassle once ANTLR v3 is self-hosted, and ANTLRMorph 
is out, though, right?  Right?

:)


From parrt at cs.usfca.edu  Fri Aug 29 14:57:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Aug 2008 14:57:17 -0700
Subject: [antlr-interest] Faster expression parsing
In-Reply-To: <20080829215638.25F19F0631@mail.cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09A64E233@Bloodymary.ironwillgames.com>
	<21270276-FDAA-4A6C-8758-3CC39B64CAB5@cs.usfca.edu>
	<20080828202352.21621F05E3@mail.cs.usfca.edu>
	<36433CF0-D95E-4FAA-B575-C1E7117FD6CE@cs.usfca.edu>
	<48B850B3.8070604@mansionfamily.plus.com>
	<4F9B08C4-8858-480F-B475-9BF139D54CA3@cs.usfca.edu>
	<48B8547E.4010006@mansionfamily.plus.com>
	<1E40A986-D0CC-48D6-871C-A314E3B9B38B@cs.usfca.edu>
	<20080829215638.25F19F0631@mail.cs.usfca.edu>
Message-ID: <B0400087-A89E-40F3-9D19-88025C7CE735@cs.usfca.edu>


On Aug 29, 2008, at 2:56 PM, Gavin Lambert wrote:

> At 08:11 30/08/2008, Terence Parr wrote:
> >i just Meant that it's not worth all of the coding hassle in the
> >compiler to remove a=a :)
>
> It'll be less hassle once ANTLR v3 is self-hosted, and ANTLRMorph is  
> out, though, right?  Right?

Yeah, Actually that would be very easy :)

Ter

From Ronghui.Yu at sierraatlantic.com  Fri Aug 29 18:21:55 2008
From: Ronghui.Yu at sierraatlantic.com (Ronghui Yu)
Date: Sat, 30 Aug 2008 09:21:55 +0800
Subject: [antlr-interest] Can't recoginze a file start
	with	HIDDENlexersince 3.1b1
References: <002401c90818$06f35f20$4307430a@RYUSA>	<1219851750.15169.362.camel@jimi>	<005101c908cf$01b82e70$4307430a@RYUSA>	<1219935559.15169.427.camel@jimi>
	<009901c909c3$8d7975f0$4307430a@RYUSA> <48B7E091.3060804@gmx.de>
Message-ID: <A4F99107A4543747902F5E6B65FBFD19126A64@cngzex.CN.corp.sa>

I tried L-factoring and syntax predicate, but I couldn't remove all errors yet. One of the parsers has almost 1000 rules, does it reach ANTLR limit?
Anyway, I think I need to follow the method to deal with rules one by one.
Thanks

________________________________

From: Johannes Luber [mailto:jaluber at gmx.de]
Sent: 2008-8-29 (Friday) 19:42
To: Ronghui Yu
Cc: Jim Idle; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can't recoginze a file start with HIDDENlexersince 3.1b1



Ronghui Yu schrieb:
> Hi, Jim,
> 
> Thanks very much for your help
> 
> I tried to turn backtrack off before, but failed to build the grammar
> with a lot of errors, so I have to turn it on

Did you look at
<http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar>?

Johannes
> 
> 
> 
> ==============================
> Regards,
> Ronghui Yu
> Sierra Atlantic
>
>     ----- Original Message -----
>     *From:* Jim Idle <mailto:jimi at temporal-wave.com>
>     *To:* Ronghui Yu <mailto:Ronghui.Yu at sierraatlantic.com>
>     *Cc:* antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>     *Sent:* Thursday, August 28, 2008 10:59 PM
>     *Subject:* Re: [antlr-interest] Can't recoginze a file start with
>     HIDDENlexersince 3.1b1
>
>     On Thu, 2008-08-28 at 13:29 +0800, Ronghui Yu wrote:
>>     ?
>>     The following is the complete implementation of CREATE DATABASE of
>>     our Sybase parser, and it shows its structures.
>>     The text in red below was added a few days ago when I found this
>>     problem. I commented it because they would introduce some other
>>     problems. God....
>>     Thanks
>>     grammar Sybase;
>>     options
>>     {
>>         language    = C;
>>         backtrack   = true;
>
>     Hmmm - backtrack = true isn't a good idea for something like SQL (or
>     almost any production parser really) - this may be masking your
>     issue, but I will look at this for you this weekend - apologies that
>     I am too busy to look a this before then.
>
>     Also, my own parser matches the comments in the lexer and places
>     them on their own channel. You can then look for them in the tree
>     walker if you need them.
>
>     Jim
>>     }
>
>>
>
> __________________________________________________________________________________________________________________
> DISCLAIMER:"The information contained in this message and the
> attachments (if any) may be privileged and confidential and protected
> from disclosure. You are hereby notified that any unauthorized use,
> dissemination, distribution or copying of this communication, review,
> retransmission, or taking of any action based upon this information, by
> persons or entities other than the intended recipient, is strictly
> prohibited. If you are not the intended recipient or an employee or
> agent responsible for delivering this message, and have received this
> communication in error, please notify us immediately by replying to the
> message and kindly delete the original message, attachments, if any, and
> all its copies from your computer system. Thank you for your cooperation."
> ________________________________________________________________________________________________________________
>
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>




__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080830/7c427628/attachment.html 

From kroepke at classdump.org  Sat Aug 30 12:30:30 2008
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 30 Aug 2008 21:30:30 +0200
Subject: [antlr-interest] Can't recoginze a file start
	with	HIDDENlexersince 3.1b1
In-Reply-To: <A4F99107A4543747902F5E6B65FBFD19126A64@cngzex.CN.corp.sa>
References: <002401c90818$06f35f20$4307430a@RYUSA>	<1219851750.15169.362.camel@jimi>	<005101c908cf$01b82e70$4307430a@RYUSA>	<1219935559.15169.427.camel@jimi>
	<009901c909c3$8d7975f0$4307430a@RYUSA> <48B7E091.3060804@gmx.de>
	<A4F99107A4543747902F5E6B65FBFD19126A64@cngzex.CN.corp.sa>
Message-ID: <B5C72EC8-06F8-4DCE-A833-6AF6784AA3CA@classdump.org>


On Aug 30, 2008, at 3:21 AM, Ronghui Yu wrote:

> I tried L-factoring and syntax predicate, but I couldn't remove all  
> errors yet. One of the parsers has almost 1000 rules, does it reach  
> ANTLR limit?

No, there's not a limit like that. The only problems I've had are  
codesize issues with Java, but that doesn't have anything to do with  
backtracking, anyway.

> Anyway, I think I need to follow the method to deal with rules one  
> by one.


Either the language is highly ambiguous or you have a mistake in your  
grammar. SQL is not particularly nice as a language to parse...lots of  
room for mistakes :(
Try to understand where it starts becoming ambiguous and you'll  
eventually find it. Takes time and practice though.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From parrt at cs.usfca.edu  Sat Aug 30 16:49:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 30 Aug 2008 16:49:40 -0700
Subject: [antlr-interest] Mantra eclipse plug-in (editor only)
Message-ID: <0B73C5F0-61FD-4A23-993F-6FE0EC1FDB40@cs.usfca.edu>

Howdy.  Prashant Deva made an eclipse plug-in for mantra!

http://www.linguamantra.org/download/Mantra_Editor_1.0.0.jar

Ter

From antlr-interest at schraverus.com  Sat Aug 30 16:50:47 2008
From: antlr-interest at schraverus.com (Corno Schraverus)
Date: Sun, 31 Aug 2008 01:50:47 +0200
Subject: [antlr-interest] issue with 3.1 C-target
Message-ID: <003601c90afb$3b5f2510$b21d6f30$@com>

Hi All,

I've just migrated to the latest version of ANTLR (3.1) and I am using the C
-target.
The transition was smooth except for 1 minor issue;
I create tokens with custom code and if I set the text (setText) to an empty
string, something goes wrong. I get garbage back when I use getText.
I've looked around a bit and commenting out line 450 of antlr3string.c seems
to fix the issue;
	if	(size <= 0)
	{
		//return	string;
	}
I don't know if that would break anything else.


greetings,

Corno




From dcaton at spamarrest.com  Sat Aug 30 17:03:45 2008
From: dcaton at spamarrest.com (Don Caton)
Date: Sat, 30 Aug 2008 20:03:45 -0400
Subject: [antlr-interest] Any more info on the 'Sun-tuned
	ANTLR	v2'	website link-share?
In-Reply-To: <14273483.1219247475570.JavaMail.root@m03>
References: <19147537.1213179181307.JavaMail.root@m03>	<00b101c8ec26$3a4b60b0$aee22210$@com>	<14273483.1219247475570.JavaMail.root@m03>
Message-ID: <020001c90afd$0945c1e0$1bd145a0$@com>

Egor:

I did 'hg clone http://hg.netbeans.org/main' but all I end up with under
main\.hg\store\data\cnd.antlr\src\antlr is a bunch of .i files.

If I go to the url on the Antlr page
(http://hg.netbeans.org/main/file/tip/cnd.antlr/) and click on src, then
antlr, I can see all the .java files, which I presume are the contents of
your tweaked version of Antlr.

I don't understand why the hg clone didn't pull down these files and gave me
a directory full of .i files instead.  Do I really have to download each
.java file individually from the web?  I read the docs for 'hg clone' and it
seems pretty straightforward.  I must be missing something pretty basic
here, but what?

Thanks.

--
Don


> -----Original Message-----
> From: Egor.Ushakov at sun.com [mailto:Egor.Ushakov at sun.com] On Behalf Of
> Egor Ushakov
> Sent: Wednesday, August 20, 2008 11:52 AM
> To: Don Caton
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Any more info on the 'Sun-tuned ANTLR v2'
> website link-share?
> 
> Sorry,
> 
> I have not read this thread for ages :)
> If that still matters:
> 
> hg clone http://hg.netbeans.org/main
> 
> will do "checkout"
> You can read more here:
> 
> http://www.netbeans.org/community/sources/hg.html
> http://www.netbeans.org/community/sources/
> 
> 
> Regards,
> Egor
> 
> Don Caton wrote:
> > Egor:
> >
> > Any tips on how to get the source?  I downloaded the Mercurial
> client, which I
> > presume is necessary to get the files but I don't have a clue where
> to start.
> >
> > Thanks.
> >
> > --
> > Don
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Egor Ushakov
> >> Sent: Wednesday, June 11, 2008 6:12 AM
> >> To: Micheal J
> >> Cc: antlr-interest at antlr.org
> >> Subject: [antlr-interest] [Fwd: Re: Any more info on the 'Sun-tuned
> ANTLR
> >> v2' website link-share?]
> >>
> >> Michael,
> >>
> >> Sun-tuned ANTLR v2 is used in C/C++ Netbeans pack for source
> parsing:
> >> http://www.netbeans.org/features/cpp/index.html
> >> We implemented several performance fixes in it to improve the
> >> performance of generated parser and lexer.
> >> Our tests with C/C++ grammar shown ~x3 performance improvement.
> >>
> >> Netbeans is fully opensource and so does Sun-tuned ANTLR and
> grammars.
> >> We just asked Terence to put links on his website. (Thanks!)
> >>
> >> Feel free to use it in your projects :)
> >>
> >> Egor
> >> Sun Microsystems
> >>
> >> Micheal J wrote:
> >>
> >>> Hi All,
> >>>
> >>> Just saw this in the sharing section of the ANTLR website. Does
> anyone
> >>>
> >> have
> >>
> >>> more info about this work by Sun (or is it the Netbeans project)?
> >>>
> >>> Micheal
> >>>
> >>> -----------------------
> >>> The best way to contact me is via the list/forum. My time is very
> >>>
> >> limited.
> >>
> >>>
> >>
> >>
> >
> >
> >




From carter_cheng at yahoo.com  Sun Aug 31 13:47:33 2008
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 31 Aug 2008 13:47:33 -0700 (PDT)
Subject: [antlr-interest] Parsing Trees & Tree Grammars
Message-ID: <130754.78525.qm@web50102.mail.re2.yahoo.com>

Hi,

I have been hoping to better understand the theoretical basis for parsing trees and doing tree transformations like what is done with Tree Grammars and Tree Walkers in ANTLRv3. Does anyone have any suggested reading which could be used to better understand the method choices and what is employed in this area?

Thanks in advance,

Carter.


      

From antlr-list at arizona-software.ch  Sun Aug 31 16:42:55 2008
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 31 Aug 2008 16:42:55 -0700
Subject: [antlr-interest]  ANTLRWorks 1.2 released
Message-ID: <CDD50B5B-09E4-4CE8-AC96-E9F013C8E3AC@arizona-software.ch>

Hi,

ANTLRWorks 1.2 is now available from http://www.antlr.org/works. Its  
main feature is the support for the composite grammar. Check the  
release notes at http://www.antlr.org/works/doc/release.txt.

This version includes ANTLR 3.1 and StringTemplate 3.2.

Regards,

Jean

From spoulson at explodingcoder.com  Sun Aug 31 20:28:00 2008
From: spoulson at explodingcoder.com (Shawn Poulson)
Date: Sun, 31 Aug 2008 23:28:00 -0400
Subject: [antlr-interest] C#: Unhandled NoViableAltexception from lexer
Message-ID: <000001c90be2$bcb06100$36112300$@com>

Hello all,

 

I'm struggling with what appears to be an unexpected behavior in my C# code.
When I attempt to parse a string with my grammar, it works as long as the
input is valid to my parser rules.  When the parser bawks at the input I get
an exception derived from RecognitionException and my code can handle
invalid input.  When the lexer bawks, I usually get a NoViableAltException
thrown that I'm also able to handle.

 

Except, in a specific case my code is unable to handle a
NoViableAltException within a try/catch block.  For example, my grammar does
not utilize semicolons anywhere.  So, if I feed it an input with a semi
anywhere in the input, the lexer will choke and throw a
NoViableAltException, as expected.  For some reason, even if my code
surrounds the ANTLR parser call with a try/catch(Exception) block, the
program execution halts with an unhandled exception.

 

I experienced this with ANTLR 3.0.1, in which case the exception was thrown
from the lexer's mTokens() method.  I noticed ANTLR 3.1 was released
recently, so I gave that a try and used the new CSharp2 target.  I get the
same exact symptom, with the exception being thrown from
Antlr3.Runtime.DFA.Predict().  In both revisions, I've browsed the code
using .NET Reflector and I don't see any funny business going on.  I don't
see any reason why a try/catch block cannot trap this exception!

 

I'm using VS 2008.  I've attempted with .NET 2.0 and .NET 3.5 framework
targets and got the same results.  If necessary, I can send a project that
replicates this issue.

 

Has anyone experienced this before?  Thanks.

 

Shawn Poulson

spoulson at explodingcoder.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080831/9c789002/attachment.html 

From Ronghui.Yu at SierraAtlantic.com  Sun Aug 31 23:41:53 2008
From: Ronghui.Yu at SierraAtlantic.com (Ronghui Yu)
Date: Mon, 1 Sep 2008 14:41:53 +0800
Subject: [antlr-interest] Can't recoginze a file start
	with	HIDDENlexersince 3.1b1
References: <002401c90818$06f35f20$4307430a@RYUSA>	<1219851750.15169.362.camel@jimi>	<005101c908cf$01b82e70$4307430a@RYUSA>	<1219935559.15169.427.camel@jimi>
	<009901c909c3$8d7975f0$4307430a@RYUSA> <48B7E091.3060804@gmx.de>
	<A4F99107A4543747902F5E6B65FBFD19126A64@cngzex.CN.corp.sa>
	<B5C72EC8-06F8-4DCE-A833-6AF6784AA3CA@classdump.org>
Message-ID: <003601c90bfd$d21ff170$4307430a@RYUSA>

Yes, this is really a great challenge for me, but I'll try my best to figure 
it out.
Thank you very much.

==============================
Regards,
Ronghui Yu
Sierra Atlantic
----- Original Message ----- 
From: "Kay R?pke" <kroepke at classdump.org>
To: "Ronghui Yu" <Ronghui.Yu at sierraatlantic.com>
Cc: "ANTLR-Interest Interest" <antlr-interest at antlr.org>
Sent: Sunday, August 31, 2008 3:30 AM
Subject: Re: [antlr-interest] Can't recoginze a file start with 
HIDDENlexersince 3.1b1



On Aug 30, 2008, at 3:21 AM, Ronghui Yu wrote:

> I tried L-factoring and syntax predicate, but I couldn't remove all 
> errors yet. One of the parsers has almost 1000 rules, does it reach  ANTLR 
> limit?

No, there's not a limit like that. The only problems I've had are
codesize issues with Java, but that doesn't have anything to do with
backtracking, anyway.

> Anyway, I think I need to follow the method to deal with rules one  by 
> one.


Either the language is highly ambiguous or you have a mistake in your
grammar. SQL is not particularly nice as a language to parse...lots of
room for mistakes :(
Try to understand where it starts becoming ambiguous and you'll
eventually find it. Takes time and practice though.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/








__________________________________________________________________________________________________________________
DISCLAIMER:"The information contained in this message and the attachments (if any) may be privileged and confidential and protected from disclosure. You are hereby notified that any unauthorized use, dissemination, distribution or copying of this communication, review, retransmission, or taking of any action based upon this information, by persons or entities other than the intended recipient, is strictly prohibited. If you are not the intended recipient or an employee or agent responsible for delivering this message, and have received this communication in error, please notify us immediately by replying to the message and kindly delete the original message, attachments, if any, and all its copies from your computer system. Thank you for your cooperation." 
________________________________________________________________________________________________________________

