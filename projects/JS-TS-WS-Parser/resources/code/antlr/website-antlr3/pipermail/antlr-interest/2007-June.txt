From filipe.alves at keptone.com  Fri Jun  1 02:59:56 2007
From: filipe.alves at keptone.com (Filipe Alves)
Date: Fri, 01 Jun 2007 10:59:56 +0100
Subject: [antlr-interest] StackOverFlow
Message-ID: <465FEE1C.8030704@keptone.com>

Hi, I'm using stringtemplate to generate some java code, and I get a 
StackOverflow exception,
when a try toString the template. The problem is especific to the 
generation of numeric expressions.

Does anybody have any ideias how to solve this ?

Thanks, Filipe


From firatkucuk at gmail.com  Fri Jun  1 06:26:34 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Fri, 1 Jun 2007 16:26:34 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
Message-ID: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>

hi,

for instance my treeparser rule is


sample_rule
    :   ^(SOME_TOKEN
            bla_bla_rule
            { if (1 == 1) { }
            another_rule_should_be_in_if_statement
            {  }  }
        )
     ;


"another_rule_should_be_in_if_statement" rule should be in "if (1==1)
{}" statement.
What should i do?

-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From trunkel at gmail.com  Fri Jun  1 11:32:13 2007
From: trunkel at gmail.com (troy runkel)
Date: Fri, 1 Jun 2007 14:32:13 -0400
Subject: [antlr-interest] Problems debugging large grammar in ANTLRWorks
Message-ID: <620da58c0706011132v523f387albb85c906aaa3fc02@mail.gmail.com>

Greetings,

I'm working with a fairly large grammar (1620 lines) and was hoping to
debug it using ANTLRWorks 1.0.1.  When I select the 'Debug...' option
from the Debugger menu I get the following error message popup.  My
grammar is using the language=C option.

     Error while generating the grammar:
     (10): internal error: group CDbg line 33: template outputFile has
no region called imports

This looks like a problem with the C code generator so I commented out
the language=C option line and tried again.  After that I get the
following error message in the Console window.

     [12:22:02] \tmp\antlrworks\TSQLParser.java:20: code too large
     [12:22:02]     public static final String[] tokenNames = new String[] {
     [12:22:02]                                  ^
     [12:22:02] 1 error

It looks like maybe there are too many token strings in the tokenNames
array?  Does anybody have any advice on what I need to do to get my
grammar working with the ANTLRWorks debugger?

I also noticed that after processing the grammar ANTLRWorks is
consuming over 900MB of memory on my Windows XP desktop machine.  If I
avoid ANTLRWorks and process the grammar directly with ANTLR I get up
to around 600MB of memory.  Is this normal?  Does that mean there's an
upper bound to the size of the grammar that ANTLR can process?  I've
been running java with the -Xmx1490m option to avoid running out of
java heap space.

In addition to the language=C option I'm also using backtrack=true and
memoize=true.

Thanks.

Troy Runkel

From jimi at temporal-wave.com  Fri Jun  1 12:17:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 1 Jun 2007 12:17:01 -0700
Subject: [antlr-interest] Problems debugging large grammar in ANTLRWorks
In-Reply-To: <620da58c0706011132v523f387albb85c906aaa3fc02@mail.gmail.com>
References: <620da58c0706011132v523f387albb85c906aaa3fc02@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252653@wavemachine.temporal-wave.com>

Debugging with ANTLRworks and the C target is not supported - I am not
sure if will do this any time soon, as the socket stuff and the way the
debug thing works does not lend itself well to doing certain things from
C. I think I saw that it serializes classes at some point and gave up
for now. 

It looks like your grammar exceeds the code generation limits for Java,
it isn't anything to do with ANTLR per se. Why java should have such a
thing, is a fair question, but it does. As for the memory question, well
Ter has said in the past that he may not be freeing up some object
references, but I don't know how true this is as of today. It seems to
me that Java just requires a lot of memory to print hello world and
isn't very good at reclaiming anything. I think the whole garbage
collection thing is a flawed idea from the start, but there are some
dilemmas if Java did not use this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Friday, June 01, 2007 11:32 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] Problems debugging large grammar in
> ANTLRWorks
> 
> Greetings,
> 
> I'm working with a fairly large grammar (1620 lines) and was hoping to
> debug it using ANTLRWorks 1.0.1.  When I select the 'Debug...' option
> from the Debugger menu I get the following error message popup.  My
> grammar is using the language=C option.
> 
>      Error while generating the grammar:
>      (10): internal error: group CDbg line 33: template outputFile has
> no region called imports
> 
> This looks like a problem with the C code generator so I commented out
> the language=C option line and tried again.  After that I get the
> following error message in the Console window.
> 
>      [12:22:02] \tmp\antlrworks\TSQLParser.java:20: code too large
>      [12:22:02]     public static final String[] tokenNames = new
> String[] {
>      [12:22:02]                                  ^
>      [12:22:02] 1 error
> 
> It looks like maybe there are too many token strings in the tokenNames
> array?  Does anybody have any advice on what I need to do to get my
> grammar working with the ANTLRWorks debugger?
> 
> I also noticed that after processing the grammar ANTLRWorks is
> consuming over 900MB of memory on my Windows XP desktop machine.  If I
> avoid ANTLRWorks and process the grammar directly with ANTLR I get up
> to around 600MB of memory.  Is this normal?  Does that mean there's an
> upper bound to the size of the grammar that ANTLR can process?  I've
> been running java with the -Xmx1490m option to avoid running out of
> java heap space.
> 
> In addition to the language=C option I'm also using backtrack=true and
> memoize=true.
> 
> Thanks.
> 
> Troy Runkel

From jimi at temporal-wave.com  Fri Jun  1 12:22:07 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 1 Jun 2007 12:22:07 -0700
Subject: [antlr-interest] Problems debugging large grammar in ANTLRWorks
In-Reply-To: <620da58c0706011132v523f387albb85c906aaa3fc02@mail.gmail.com>
References: <620da58c0706011132v523f387albb85c906aaa3fc02@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252654@wavemachine.temporal-wave.com>

I meant to add, that I personally get more mileage from just using
Visual Studio 2005 to debug the actual generated code - tends to give
you more of the information that C programmers are used to, even if you
don't get the 350Mb graphic display ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Friday, June 01, 2007 11:32 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] Problems debugging large grammar in
> ANTLRWorks
> 
> Greetings,
> 
> I'm working with a fairly large grammar (1620 lines) and was hoping to
> debug it using ANTLRWorks 1.0.1.  When I select the 'Debug...' option
> from the Debugger menu I get the following error message popup.  My
> grammar is using the language=C option.
> 
>      Error while generating the grammar:
>      (10): internal error: group CDbg line 33: template outputFile has
> no region called imports
> 
> This looks like a problem with the C code generator so I commented out
> the language=C option line and tried again.  After that I get the
> following error message in the Console window.
> 
>      [12:22:02] \tmp\antlrworks\TSQLParser.java:20: code too large
>      [12:22:02]     public static final String[] tokenNames = new
> String[] {
>      [12:22:02]                                  ^
>      [12:22:02] 1 error
> 
> It looks like maybe there are too many token strings in the tokenNames
> array?  Does anybody have any advice on what I need to do to get my
> grammar working with the ANTLRWorks debugger?
> 
> I also noticed that after processing the grammar ANTLRWorks is
> consuming over 900MB of memory on my Windows XP desktop machine.  If I
> avoid ANTLRWorks and process the grammar directly with ANTLR I get up
> to around 600MB of memory.  Is this normal?  Does that mean there's an
> upper bound to the size of the grammar that ANTLR can process?  I've
> been running java with the -Xmx1490m option to avoid running out of
> java heap space.
> 
> In addition to the language=C option I'm also using backtrack=true and
> memoize=true.
> 
> Thanks.
> 
> Troy Runkel

From yiqing at objectivity.com  Fri Jun  1 17:15:07 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Fri, 1 Jun 2007 17:15:07 -0700
Subject: [antlr-interest] Unicode support in both v2.7 and v3
Message-ID: <004701c7a4ab$13c7e9e0$222815ac@objy.com>

 Hi,

 

I am trying to use ANTLR to generate a query parser in C++. Since C++ is not
supported yet by v3, I am trying v2.7.6 right now.  I would like to know how
the Unicode is supported in both v2.7 and v3.  Does it support the input
stream which is a wchar_t*? Which UTF encoding formats does it support
(UTF8, UTF16, UTF32)? From the Reference Manual for v2, it seems that
Unicode is not fully supported yet and claims that v3 will have a better
Unicode support. Is Unicode fully supported in v3?

 

I am new to ANTLR. Sorry if those questions have been answered before.

 

Thanks,

 

Yiqing Yang

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070601/3c2bbbeb/attachment.html 

From antlr-list at arizona-software.ch  Fri Jun  1 21:07:36 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Fri, 1 Jun 2007 21:07:36 -0700
Subject: [antlr-interest] ANTLRWorks 1.0.2 available
Message-ID: <03CC4274-A272-4A07-9C6F-2C9A507EA1CB@arizona-software.ch>

Hi,

I just released version 1.0.2 of ANTLRWorks that fixes some issue  
when compiling and debugging some grammars (if you had some null  
pointer exception when debugging, this version should fix it). You  
can grab it from www.antlr.org/works.

Changes:
     [AW-72] - Grammar is generated and compiled each time the  
debugger is invoked even if nothing changed
     [AW-73] - Change ANTLR 3 template to allow the debugger port to  
be specified

Regards,

Jean

From open.zone at virgin.net  Sat Jun  2 02:34:29 2007
From: open.zone at virgin.net (Micheal J)
Date: Sat, 2 Jun 2007 10:34:29 +0100
Subject: [antlr-interest] Unicode support in both v2.7 and v3
In-Reply-To: <004701c7a4ab$13c7e9e0$222815ac@objy.com>
Message-ID: <001801c7a4f9$38ece650$c704a8c0@hercules>

Hi,
 
Doesn't directly answer your questions but, why not try the C target for
V3?. You could always wrap the C runtime API up in C++ classes anyway. There
was some discussion about UNICODE and the C target a while back on the list.
All you need to do might be to supply an input stream of wchar characters (I
could be wrong on this so search the list archives).
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of YiQing Yang
Sent: 02 June 2007 01:15
To: antlr-interest at antlr.org
Subject: [antlr-interest] Unicode support in both v2.7 and v3



 Hi,

 

I am trying to use ANTLR to generate a query parser in C++. Since C++ is not
supported yet by v3, I am trying v2.7.6 right now.  I would like to know how
the Unicode is supported in both v2.7 and v3.  Does it support the input
stream which is a wchar_t*? Which UTF encoding formats does it support
(UTF8, UTF16, UTF32)? From the Reference Manual for v2, it seems that
Unicode is not fully supported yet and claims that v3 will have a better
Unicode support. Is Unicode fully supported in v3?

 

I am new to ANTLR. Sorry if those questions have been answered before.

 

Thanks,

 

Yiqing Yang

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070602/8e512607/attachment.html 

From jaluber at gmx.de  Sat Jun  2 07:27:49 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 02 Jun 2007 16:27:49 +0200
Subject: [antlr-interest] [v3]Tracking Hidden Channels
In-Reply-To: <FE954F76-0CC7-4F69-8339-644B072687EF@cs.usfca.edu>
References: <4153ee230705172048l572ca734rdd3f180bc8c6ff86@mail.gmail.com>
	<FE954F76-0CC7-4F69-8339-644B072687EF@cs.usfca.edu>
Message-ID: <46617E65.6070409@gmx.de>

Terence Parr wrote:
> Hi. I added a FAQ entry for you:
> 
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063
> 
> Ter
> 

I've looked at this FAQ entry but I don't understand the code snippets.
More specifically, how I am supposed to apply this to my own code. My
problem is that once I see a preprocessor directive I have to look if
there are any other tokens between the directive and the newline before
it besides a whitespace token. Can anyone supply me with a more helpful
example?

Thanks in advance,
Johannes Luber

From kroepke at classdump.org  Sat Jun  2 11:37:36 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 2 Jun 2007 20:37:36 +0200
Subject: [antlr-interest] Is it a bug of BaseRecongnizer?
In-Reply-To: <0418C6BD-2CE9-4C01-93FA-0A219CDAE9BB@cs.usfca.edu>
References: <20070531050817.10550.qmail@server314.com>
	<0418C6BD-2CE9-4C01-93FA-0A219CDAE9BB@cs.usfca.edu>
Message-ID: <43C380A2-42F6-4282-B149-7E5CE4B4F6B9@classdump.org>


On May 31, 2007, at 8:02 PM, Terence Parr wrote:

>> first, MismatchedNotSetException variable use the same name mse as  
>> MismatchedSetException variable, and Whether should  
>> MismatchedNotSetException's error message be "expecting not set"  
>> or not?
>
> Hi. I think that I have computed the set complement already so it  
> will say the correct thing when executed.  Did you see the inverse?

> 	public String getErrorMessage(RecognitionException e, String[]  
> tokenNames) {
> ................
> 		else if ( e instanceof MismatchedSetException ) {
> 			MismatchedSetException mse = (MismatchedSetException)e;
> 			msg = "mismatched input "+getTokenErrorDisplay(e.token)+
> 				" expecting set "+mse.expecting;
> 		}
> 		else if ( e instanceof MismatchedNotSetException ) {
> 			MismatchedNotSetException mse = (MismatchedNotSetException)e;
> 			msg = "mismatched input "+getTokenErrorDisplay(e.token)+
> 				" expecting set "+mse.expecting;
> 		}
> ..................
> }

Actually, it looks like the "if ( e instanceof  
MismatchedNotSetException )" is always false, NotSetException being a  
subclass of SetException.
Shouldn't those else ifs be the other way around?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From bace.spam at gmx.net  Sat Jun  2 16:30:57 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Sun, 03 Jun 2007 01:30:57 +0200
Subject: [antlr-interest] different behavoir ANTLRworks and ANTLR
Message-ID: <20070602233057.92990@gmx.net>

Hi!

I developed my grammar in ANTLRworks. Now I must compile this grammar from  a Java program. In both cases I get an error message:

error(211): C:/workspace/dev/wtp3/eclipse/webapps/Validator/grammars/grammar.g:71:27: [fatal] rule link_text has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2.  Resolve by left-factoring or using syntactic predicates or using backtrack=true option. 

Strange now is that ANTLRworks generated the scanner and parser properly, but not on command-line or out of a Java program. Why is there a different behavior? I don't want to change the grammar, because it is possible the generate a parser (with ANTLRworks). Is there a further option that I have to set to ignore the error and proceed generation?

(For ANTLRworks I reserved 1GB heap space, how can I do this using the Tool class inside my Java program?)


Thanks for any ideas!!!
Best regards,
Markus
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From rerdavies at rogers.com  Sat Jun  2 18:46:03 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Sat, 2 Jun 2007 21:46:03 -0400
Subject: [antlr-interest] Problems with AST parsers in Antlrworks 1.0.1
Message-ID: <31D74A6495CC464BAC4E3357E00A2E1E@GWB>

Probably a very beginner antlr question, but maybe not.

I'm trying to debug the CMinus.g AST parser sample from the manual:

http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinus.g

When I start the AnltrWorks debugger, and step through a couple of steps, in AntlrWorks 1.01, I get the following exception:

Exception in thread "main" java.lang.NullPointerException
 at org.antlr.runtime.debug.DebugTreeAdaptor.nil(DebugTreeAdaptor.java:45)
 at CMinusParser.aexpr(CMinusParser.java:1731)
 at __Test__.main(__Test__.java:22)

(And the same with pretty much anything that has options {output=AST;} // build trees, I think.

I'm coming to this with a C# background and not a whole lot of Java experience. There's a very real risk that I have my classpath set up properly. I have a classpath to the source distribution, but no classpath to the Antlworks jar. Is that wrong? 

My classpath:

.;C:\Program Files\Java\jre1.5.0_10\lib\ext\QTJava.zip;C:\usr\src\antlr-3.0\lib\
antlr-2.7.7.jar;C:\usr\src\antlr-3.0\lib\antlr-2.7.7.jar;C:\usr\src\antlr-3.0\li
b\antlr-3.0.jar;C:\usr\src\antlr-3.0\lib\antlr-runtime-3.0.jar;C:\usr\src\antlr-
3.0\lib\stringtemplate-3.0.jar

Environment: Vista, JRE 1.5.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070602/2ef4acfc/attachment.html 

From ssiegel at finjan.com  Sun Jun  3 04:57:32 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Sun, 3 Jun 2007 14:57:32 +0300
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
Message-ID: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>

I have upgraded my production grammar from 3.0b6 to the release version.
I am having two problems with the rewrite rules. Hopefully I just missed
a specification change.

 

*	Problem 1: When I have subclauses that do rewrites, the final
rewrite gets a null pointer exception. The following rule used to work
but now throws an exception. I avoid the exception if I extract the
parenthesized sub-rule and make it a named rule.

assignEntityAttr:

            (

                        thisNode->thisNode

                  |     symbolTableElement->symbolTableElement

                  |     positionalElement->positionalElement

            )

            '.' a='attr' op='=' attr=attrValue      

            -> ^(ASSIGN[$op] ^($assignEntityAttr PROPERTY[$a]) $attr)

            ;

 

*	Problem 1: Tree construction seems to have changed. I used to be
able to write

	*	^($ent PROPERTY[$a]) where $ent was itself a tree. When
I do it now, I keep the head of the $ent tree but its children are
replaced by the PROPERTY token.

 

 

What has changed since b6?

 

Shmuel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070603/3ea470d2/attachment.html 

From jaluber at gmx.de  Sun Jun  3 05:45:43 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 03 Jun 2007 14:45:43 +0200
Subject: [antlr-interest] Problems with AST parsers in Antlrworks 1.0.1
In-Reply-To: <31D74A6495CC464BAC4E3357E00A2E1E@GWB>
References: <31D74A6495CC464BAC4E3357E00A2E1E@GWB>
Message-ID: <4662B7F7.6050708@gmx.de>

Robin Davies wrote:
> Probably a very beginner antlr question, but maybe not.
>  
> I'm trying to debug the CMinus.g AST parser sample >from the manual:
>  
> http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinus.g
>  
> When I start the AnltrWorks debugger, and step through a couple of
> steps, in AntlrWorks 1.01, I get the following exception:
>  
> Exception in thread "main" java.lang.NullPointerException
>  at org.antlr.runtime.debug.DebugTreeAdaptor.nil(DebugTreeAdaptor.java:45)
>  at CMinusParser.aexpr(CMinusParser.java:1731)
>  at __Test__.main(__Test__.java:22)
> (And the same with pretty much anything that has options {output=AST;}
> // build trees, I think.
>  
> I'm coming to this with a C# background and not a whole lot of Java
> experience. There's a very real risk that I have my classpath set up
> properly. I have a classpath to the source distribution, but no
> classpath to the Antlworks jar. Is that wrong?
>  
> My classpath:
>  
> .;C:\Program
> Files\Java\jre1.5.0_10\lib\ext\QTJava.zip;C:\usr\src\antlr-3.0\lib\
> antlr-2.7.7.jar;C:\usr\src\antlr-3.0\lib\antlr-2.7.7.jar;C:\usr\src\antlr-3.0\li
> b\antlr-3.0.jar;C:\usr\src\antlr-3.0\lib\antlr-runtime-3.0.jar;C:\usr\src\antlr-
> 3.0\lib\stringtemplate-3.0.jar
>  
> Environment: Vista, JRE 1.5.

I believe this is a bug in ANTLRworks. Maybe it is already fixed in
1.0.2. The workaround is to call the ANTLR on the command line.

Best regards,
Johannes Luber

From ruth.karl at gmx.de  Sun Jun  3 07:58:45 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Sun, 03 Jun 2007 16:58:45 +0200
Subject: [antlr-interest]  corrupt link on wiki page
In-Reply-To: <4662B7F7.6050708@gmx.de>
References: <31D74A6495CC464BAC4E3357E00A2E1E@GWB> <4662B7F7.6050708@gmx.de>
Message-ID: <4662D725.6070409@gmx.de>

Hi,

maybe someone cares to know that the link "ANTLR 3 website 
<http://www.antlr.org/v3/>" on 
http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3+Wiki+Home gives an

*Error*

*Sorry. Cannot find page http://www.antlr.org/v3/*

greetings,
ruth

From aliaazimi at yahoo.com  Sun Jun  3 09:50:08 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 3 Jun 2007 09:50:08 -0700 (PDT)
Subject: [antlr-interest] Help Please!
Message-ID: <38426.62042.qm@web58107.mail.re3.yahoo.com>

Dear all,
   
  I have finished my exams and need to finish my project by end of August. I need to write a program which takes SDL (text form) as input and displays them as graphs. In order to this, I need to write a parser using ANTLR, however I do not have a clue how to do it. Could you please introduce a tutorial which I can understand? I am just a beginner. I would like to thank you all in advance.
   
  Regards,
   
  Al

       
---------------------------------
Pinpoint customers who are looking for what you sell. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070603/16f109a5/attachment.html 

From rerdavies at rogers.com  Sun Jun  3 09:50:44 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Sun, 3 Jun 2007 12:50:44 -0400
Subject: [antlr-interest] CSharp target problems
Message-ID: <0D3088FF500B44EDA0A5638129FAEF88@GWB>

I'm now trying to bring up my grammar in c#. 

    System.IO.Stream fileStream = new System.IO.FileStream(file,FileMode.Open);

    ANTLRInputStream input = new ANTLRInputStream(fileStream,Encoding.UTF8);

The constructor appears to hang. I'm using the CSharp runtime out of the source distribution (which is distributed in compiled form). 

Where can I find the sources for the C# antlr runtime? All I can find is the binaries.

Thanks in advance.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070603/7d4a6ac8/attachment-0001.html 

From jaluber at gmx.de  Sun Jun  3 09:59:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 03 Jun 2007 18:59:57 +0200
Subject: [antlr-interest] Help Please!
In-Reply-To: <38426.62042.qm@web58107.mail.re3.yahoo.com>
References: <38426.62042.qm@web58107.mail.re3.yahoo.com>
Message-ID: <4662F38D.5030306@gmx.de>

ali azimi wrote:
> Dear all,
>  
> I have finished my exams and need to finish my project by end of August.
> I need to write a program which takes SDL (text form) as input and
> displays them as graphs. In order to this, I need to write a parser
> using ANTLR, however I do not have a clue how to do it. Could you please
> introduce a tutorial which I can understand? I am just a beginner. I
> would like to thank you all in advance.

<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
has some pointers. For other important things see
<http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+Getting+Started>.

Best regards,
Johannes Luber

From antlr-list at arizona-software.ch  Sun Jun  3 11:06:35 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 3 Jun 2007 11:06:35 -0700
Subject: [antlr-interest] Problems with AST parsers in Antlrworks 1.0.1
In-Reply-To: <4662B7F7.6050708@gmx.de>
References: <31D74A6495CC464BAC4E3357E00A2E1E@GWB> <4662B7F7.6050708@gmx.de>
Message-ID: <FB6264EE-9CDE-4E52-9385-E2B83B01EA0F@arizona-software.ch>

Yes, it is fixed in 1.0.2.

Regards,

Jean

On Jun 3, 2007, at 5:45 AM, Johannes Luber wrote:

> Robin Davies wrote:
>> Probably a very beginner antlr question, but maybe not.
>>
>> I'm trying to debug the CMinus.g AST parser sample >from the manual:
>>
>> http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinus.g
>>
>> When I start the AnltrWorks debugger, and step through a couple of
>> steps, in AntlrWorks 1.01, I get the following exception:
>>
>> Exception in thread "main" java.lang.NullPointerException
>>  at org.antlr.runtime.debug.DebugTreeAdaptor.nil 
>> (DebugTreeAdaptor.java:45)
>>  at CMinusParser.aexpr(CMinusParser.java:1731)
>>  at __Test__.main(__Test__.java:22)
>> (And the same with pretty much anything that has options  
>> {output=AST;}
>> // build trees, I think.
>>
>> I'm coming to this with a C# background and not a whole lot of Java
>> experience. There's a very real risk that I have my classpath set up
>> properly. I have a classpath to the source distribution, but no
>> classpath to the Antlworks jar. Is that wrong?
>>
>> My classpath:
>>
>> .;C:\Program
>> Files\Java\jre1.5.0_10\lib\ext\QTJava.zip;C:\usr\src\antlr-3.0\lib\
>> antlr-2.7.7.jar;C:\usr\src\antlr-3.0\lib\antlr-2.7.7.jar;C:\usr\src 
>> \antlr-3.0\li
>> b\antlr-3.0.jar;C:\usr\src\antlr-3.0\lib\antlr-runtime-3.0.jar;C: 
>> \usr\src\antlr-
>> 3.0\lib\stringtemplate-3.0.jar
>>
>> Environment: Vista, JRE 1.5.
>
> I believe this is a bug in ANTLRworks. Maybe it is already fixed in
> 1.0.2. The workaround is to call the ANTLR on the command line.
>
> Best regards,
> Johannes Luber


From lists at xmart.ws  Sun Jun  3 11:50:48 2007
From: lists at xmart.ws (Elijah Epifanov)
Date: Sun, 03 Jun 2007 22:50:48 +0400
Subject: [antlr-interest] ANTLRWorks interpreter doesn't understand
	syntactic predicates?
Message-ID: <46630D88.7060502@xmart.ws>

Hi, it looks like ANTLRWorks doesn't understand syntactic predicates, it 
shows following tree
 >>>>
<grammar nested>
|
--a
   |
   --FailedPredicateException(a,{synpred1}?)
<<<<

for the following grammar
 >>>>

grammar nested;

a : (e ';' )=> e ';'
    | e '.'
    ;

e : ('(' e ')' e)=> '(' e ')' e // type cast
    | '(' e ')'             // nested expression
    | ID
    ;

ID       :
                  'a'..'z' + ;
<<<<

when interpreting following text
 >>>>
asas;
<<<<

starting at rule 'a'

Debugger works fine and shows the parse tree correctly (with one branch 
with backtracking)

Is this a bug?


From neukirchen at informatik.uni-goettingen.de  Sun Jun  3 12:17:36 2007
From: neukirchen at informatik.uni-goettingen.de (Helmut Neukirchen)
Date: Sun, 03 Jun 2007 21:17:36 +0200
Subject: [antlr-interest] Help Please!
In-Reply-To: <mailman.428.1180889442.2496.antlr-interest@antlr.org>
References: <mailman.428.1180889442.2496.antlr-interest@antlr.org>
Message-ID: <466313D0.3020603@informatik.uni-goettingen.de>

ali azimi wrote:

> Dear all,
> 
> I have finished my exams and need to finish my project by end of August.
> I need to write a program which takes SDL (text form) as input and
> displays them as graphs. In order to this, I need to write a parser using
> ANTLR, however I do not have a clue how to do it. Could you please
> introduce a tutorial which I can understand? I am just a beginner. I
> would like to thank you all in advance.

Dear Ali,

I suppose, when you refer to SDL, you mean the "Specification and
Description Language" (ITU-T Recommendation Z.100): An ANTLR v2 based parser
for ITU-T SDL-2000 is listed on http://www.antlr2.org/grammar/list and can
be downloaded from http://teststep.org/

Maybe this helps,
Helmut
-- 
Helmut Neukirchen        mailto:neukirchen at informatik.uni-goettingen.de
Institute for Informatics   http://www.swe.informatik.uni-goettingen.de
University of G?ttingen, Lotzestr. 16-18        phone: +49 551 39 14695
37083 G?ttingen, Germany                          fax: +49 551 39 14415

From firatkucuk at gmail.com  Sun Jun  3 12:44:15 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Sun, 3 Jun 2007 22:44:15 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
In-Reply-To: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>
References: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>
Message-ID: <7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>

any solution?

2007/6/1, F?rat K???K <firatkucuk at gmail.com>:
> hi,
>
> for instance my treeparser rule is
>
>
> sample_rule
>     :   ^(SOME_TOKEN
>             bla_bla_rule
>             { if (1 == 1) { }
>             another_rule_should_be_in_if_statement
>             {  }  }
>         )
>      ;
>
>
> "another_rule_should_be_in_if_statement" rule should be in "if (1==1)
> {}" statement.
> What should i do?
>
> --
> ??r. G?r. F?rat K???K
> ADAMYO Distance Learning
> SAKARYA University / TURKEY
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From panayk at gmail.com  Sun Jun  3 14:51:30 2007
From: panayk at gmail.com (Panayiotis)
Date: Mon, 04 Jun 2007 00:51:30 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
In-Reply-To: <7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>
References: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>
	<7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>
Message-ID: <466337E2.8040203@gmail.com>

I'm not sure I understand what you want to do, but would the following work?

sample_rule
    :    SOME_TOKEN bla_bla_rule ({1 == 1}? another_rule)?
    ;

This will parse 'SOME_TOKEN' followed by 'bla_bla_rule' and then, 
depending on the truth value of the semantic predicate '1 == 1', it will 
try to parse an optional 'another_rule'.
A related syntax is {1 == 1}?=>.

Panayiotis

F?rat K???K wrote:
> any solution?
>
> 2007/6/1, F?rat K???K <firatkucuk at gmail.com>:
>> hi,
>>
>> for instance my treeparser rule is
>>
>>
>> sample_rule
>>     :   ^(SOME_TOKEN
>>             bla_bla_rule
>>             { if (1 == 1) { }
>>             another_rule_should_be_in_if_statement
>>             {  }  }
>>         )
>>      ;
>>
>>
>> "another_rule_should_be_in_if_statement" rule should be in "if (1==1)
>> {}" statement.
>> What should i do?
>>
>> -- 
>> ??r. G?r. F?rat K???K
>> ADAMYO Distance Learning
>> SAKARYA University / TURKEY
>>

From lists at xmart.ws  Sun Jun  3 15:01:32 2007
From: lists at xmart.ws (Elijah Epifanov)
Date: Mon, 04 Jun 2007 02:01:32 +0400
Subject: [antlr-interest] StackOverFlow
In-Reply-To: <465FEE1C.8030704@keptone.com>
References: <465FEE1C.8030704@keptone.com>
Message-ID: <46633A3C.6060200@xmart.ws>

This usually means that your grammar isn't LL(*).

Concerning arithmetical expressions you probably use left-recursion, 
which is inacceptable in LL(*).

Buy the pragmatic book and you'll get answers for many questions like this.

Filipe Alves wrote:
> Hi, I'm using stringtemplate to generate some java code, and I get a 
> StackOverflow exception,
> when a try toString the template. The problem is especific to the 
> generation of numeric expressions.
> 
> Does anybody have any ideias how to solve this ?
> 
> Thanks, Filipe
> 
> 

From jonathan.thomas at ca.com  Sun Jun  3 18:10:24 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Mon, 04 Jun 2007 11:10:24 +1000
Subject: [antlr-interest] Help Please!
In-Reply-To: <38426.62042.qm@web58107.mail.re3.yahoo.com>
References: <38426.62042.qm@web58107.mail.re3.yahoo.com>
Message-ID: <46636680.5030605@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/a5f8fc80/attachment.html 

From mark.mandel at gmail.com  Sun Jun  3 18:18:39 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 4 Jun 2007 11:18:39 +1000
Subject: [antlr-interest] [v3] Trouble with rewrite...
Message-ID: <4153ee230706031818n30dfadd3j106c86fb08decf98@mail.gmail.com>

Heya, I can't work out how to rewrite this tree..

The rule looks like this:

startTag
	:
	START_TAG_OPEN^ START_TAG_CLOSE
	tag* (endTag | EOF)
	;

Basically, all I ever want is that structure, but without the EOF taken.

Do I need to do a rewrite, depending on whether I am at endTag | EOF?
Would that be right?

Thanks in advance,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From parrt at cs.usfca.edu  Sun Jun  3 19:43:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 3 Jun 2007 19:43:03 -0700
Subject: [antlr-interest] [v3] Trouble with rewrite...
In-Reply-To: <4153ee230706031818n30dfadd3j106c86fb08decf98@mail.gmail.com>
References: <4153ee230706031818n30dfadd3j106c86fb08decf98@mail.gmail.com>
Message-ID: <424D2C90-AECF-4CC9-9486-DB2C4A2BCF90@cs.usfca.edu>


On Jun 3, 2007, at 6:18 PM, Mark Mandel wrote:

> Heya, I can't work out how to rewrite this tree..
>
> The rule looks like this:
>
> startTag
> 	:
> 	START_TAG_OPEN^ START_TAG_CLOSE
> 	tag* (endTag | EOF)
> 	;
>
> Basically, all I ever want is that structure, but without the EOF  
> taken.

Do you mean "how do I write this using the ->?"

startTag : START_TAG_OPEN^ START_TAG_CLOSE tag* (endTag | EOF)
		-> ^(START_TAG_OPEN START_TAG_CLOSE tag* (endTag | EOF))
		;

> Do I need to do a rewrite, depending on whether I am at endTag | EOF?
> Would that be right?

Not sure what you're asking.  Put a ! on the EOF in your example and  
it removes the EOF.

Ter

From firatkucuk at gmail.com  Sun Jun  3 23:24:19 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Mon, 4 Jun 2007 09:24:19 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
In-Reply-To: <466337E2.8040203@gmail.com>
References: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>
	<7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>
	<466337E2.8040203@gmail.com>
Message-ID: <7385e6fe0706032324x7445a4fbg18864d4ed6b59896@mail.gmail.com>

what about "while statement" situation?

2007/6/4, Panayiotis <panayk at gmail.com>:
> I'm not sure I understand what you want to do, but would the following work?
>
> sample_rule
>     :    SOME_TOKEN bla_bla_rule ({1 == 1}? another_rule)?
>     ;
>
> This will parse 'SOME_TOKEN' followed by 'bla_bla_rule' and then,
> depending on the truth value of the semantic predicate '1 == 1', it will
> try to parse an optional 'another_rule'.
> A related syntax is {1 == 1}?=>.
>
> Panayiotis
>
> F?rat K???K wrote:
> > any solution?
> >
> > 2007/6/1, F?rat K???K <firatkucuk at gmail.com>:
> >> hi,
> >>
> >> for instance my treeparser rule is
> >>
> >>
> >> sample_rule
> >>     :   ^(SOME_TOKEN
> >>             bla_bla_rule
> >>             { if (1 == 1) { }
> >>             another_rule_should_be_in_if_statement
> >>             {  }  }
> >>         )
> >>      ;
> >>
> >>
> >> "another_rule_should_be_in_if_statement" rule should be in "if (1==1)
> >> {}" statement.
> >> What should i do?
> >>
> >> --
> >> ??r. G?r. F?rat K???K
> >> ADAMYO Distance Learning
> >> SAKARYA University / TURKEY
> >>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From antlr at shmuelhome.mine.nu  Mon Jun  4 03:40:53 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon, 04 Jun 2007 13:40:53 +0300
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>
Message-ID: <4663EC35.7060009@shmuelhome.mine.nu>

It seems that the problems were introduced with the move to 
RewriteRuleSubtreeStream. I don't see any other substantive changes in 
the generated parser code.

Shmuel Siegel wrote:
>
> I have upgraded my production grammar from 3.0b6 to the release 
> version. I am having two problems with the rewrite rules. Hopefully I 
> just missed a specification change.
>
>  
>
>     * Problem 1: When I have subclauses that do rewrites, the final
>       rewrite gets a null pointer exception. The following rule used
>       to work but now throws an exception. I avoid the exception if I
>       extract the parenthesized sub-rule and make it a named rule.
>
> assignEntityAttr:
>
>             (
>
>                         thisNode->thisNode
>
>                   |     symbolTableElement->symbolTableElement
>
>                   |     positionalElement->positionalElement
>
>             )
>
>             '.' a='attr' op='=' attr=attrValue     
>
>             -> ^(ASSIGN[$op] ^($assignEntityAttr PROPERTY[$a]) $attr)
>
>             ;
>
>  
>
>     * Problem 2: Tree construction seems to have changed. I used to be
>       able to write
>           o ^($ent PROPERTY[$a]) where $ent was itself a tree. When I
>             do it now, I keep the head of the $ent tree but its
>             children are replaced by the PROPERTY token.
>
>  
>
>  
>
> What has changed since b6?
>
>  
>
> Shmuel
>



From panayk at gmail.com  Mon Jun  4 04:46:31 2007
From: panayk at gmail.com (Panayiotis)
Date: Mon, 04 Jun 2007 14:46:31 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
In-Reply-To: <7385e6fe0706032324x7445a4fbg18864d4ed6b59896@mail.gmail.com>
References: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>	
	<7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>	
	<466337E2.8040203@gmail.com>
	<7385e6fe0706032324x7445a4fbg18864d4ed6b59896@mail.gmail.com>
Message-ID: <4663FB97.7060509@gmail.com>

F?rat K???K wrote:
> what about "while statement" situation?
>
> 2007/6/4, Panayiotis <panayk at gmail.com>:
>> I'm not sure I understand what you want to do, but would the 
>> following work?
>>
>> sample_rule
>>     :    SOME_TOKEN bla_bla_rule ({1 == 1}? another_rule)?
>>     ;
>>
>> This will parse 'SOME_TOKEN' followed by 'bla_bla_rule' and then,
>> depending on the truth value of the semantic predicate '1 == 1', it will
>> try to parse an optional 'another_rule'.
>> A related syntax is {1 == 1}?=>.
>>
>> Panayiotis
>>
>> F?rat K???K wrote:
>> > any solution?
>> >
>> > 2007/6/1, F?rat K???K <firatkucuk at gmail.com>:
>> >> hi,
>> >>
>> >> for instance my treeparser rule is
>> >>
>> >>
>> >> sample_rule
>> >>     :   ^(SOME_TOKEN
>> >>             bla_bla_rule
>> >>             { if (1 == 1) { }
>> >>             another_rule_should_be_in_if_statement
>> >>             {  }  }
>> >>         )
>> >>      ;
>> >>
>> >>
>> >> "another_rule_should_be_in_if_statement" rule should be in "if (1==1)
>> >> {}" statement.
>> >> What should i do?
>> >>
>> >> --
>> >> ??r. G?r. F?rat K???K
>> >> ADAMYO Distance Learning
>> >> SAKARYA University / TURKEY
>> >>
>>

I suppose:

sample_rule
    :    SOME_TOKEN bla_bla_rule ({1 == 1}? another_rule)*
    ;

or

sample_rule
    :    SOME_TOKEN bla_bla_rule another_rule ({1 == 1}? another_rule)*
    ;

(a)* means: apply (a) zero or more times (kleene closure).
(a)? means: apply (a) zero or one time(s), i.e.: (a | empty)
(a)+  means (a) one or more times, i.e.: (a) (a)*
So I expected the last one to be equivalent to:

sample_rule
    :    SOME_TOKEN bla_bla_rule ({1 == 1}? another_rule)+
    ;

But it doesn't seem to work the same way.
Maybe someone can recommend a good tutorial.

Panayiotis

From panayk at gmail.com  Mon Jun  4 06:26:14 2007
From: panayk at gmail.com (Panayiotis)
Date: Mon, 04 Jun 2007 16:26:14 +0300
Subject: [antlr-interest] embedding Java codes to grammar problem
In-Reply-To: <7385e6fe0706040517h5ecf433fuddc5b218dd228b7c@mail.gmail.com>
References: <7385e6fe0706010626y4cba0688qeb2f89c776123c85@mail.gmail.com>	
	<7385e6fe0706031244t4277b52bie54fa238d87d5963@mail.gmail.com>	
	<466337E2.8040203@gmail.com>	
	<7385e6fe0706032324x7445a4fbg18864d4ed6b59896@mail.gmail.com>	
	<4663FB97.7060509@gmail.com>
	<7385e6fe0706040517h5ecf433fuddc5b218dd228b7c@mail.gmail.com>
Message-ID: <466412F6.9070104@gmail.com>

F?rat K???K wrote:
> no this is not what i want.
>
> i want to embed while statement to generated java code.
> i know what do "?+*" characters mean :)
>
Sorry, I misunderstood your level of familiarity with EBNF syntax :-)

>           { while (true) { }
>           tree_parser_rule
>           {  }  }
>
Well the most generic rule I can think of is:

rule
    :   some_subrules_and_actions ({conditional}? {action1;} subrule 
{action2;})* some_more_subrules_and_actions
    ;

This should:

parse_some_subrules_and_execute_some_actions;
while (conditional) {
    execute_action_1;
    parse_subrule;
    execute_action_2;
}
parse_some_more_subrules_and_execute_some_more_actions.

And of course 'conditional', 'action1' and 'action2' can include just 
about any valid Java code you like, including while-loops.

Hope this helps,
Panayiotis

From schalla at dammam.intergraph.com.sa  Mon Jun  4 07:49:53 2007
From: schalla at dammam.intergraph.com.sa (Srinivas Challa)
Date: Mon, 4 Jun 2007 17:49:53 +0300
Subject: [antlr-interest] [v3]Tracking Hidden Channels
Message-ID: <B163DBCD9CF5BD44AC0335FF65B01FDB474D04@dmmex2>

This is to test, if I am not getting any mails for the subscription.

 

Sorry for inconvenience.

Challa.

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/fde3c748/attachment.html 

From jaluber at gmx.de  Mon Jun  4 08:12:39 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 04 Jun 2007 17:12:39 +0200
Subject: [antlr-interest] Namespace option for C#
Message-ID: <46642BE7.8030202@gmx.de>

Hello!

I can't find the correct way to define the namespace for the generated
file, when targetting C#. Using "namespace='namespace1.namespce2';" in
the options command results in an invalid option error. Can someone
please enlighten me?

Best regards,
Johannes Luber

From win at wincent.com  Mon Jun  4 08:38:17 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 4 Jun 2007 17:38:17 +0200
Subject: [antlr-interest] C target: lexer rule precedence confusion
Message-ID: <83CA2ABD-7152-4726-94ED-8E7531AD1F02@wincent.com>

I'm trying to write a parser for wiki markup and have discovered some  
puzzling behaviour in the C target. Here is a reduced test grammar:

grammar WikiText;
options {
   language = C;	
}

wikitext: .* EOF {printf("parser processed all tokens\n");};
STRONG: '\'\'\'' {printf("STRONG scanned: '\%s'\n", GETTEXT()- 
 >chars); };
DEFAULT : . { printf("DEFAULT scanned: '\%s'\n", GETTEXT()->chars); };

The DEFAULT rule is last because I want it to serve as a "catch all"  
for any characters which don't get matched by any other rules. Given  
the input '''foobar''' the lexer/parser print:

STRONG scanned: '''
./input(-4611699882581819391) : error 1 : Unexpected character at  
offset 0, near '''
DEFAULT scanned: '''''
DEFAULT scanned: 'f'
DEFAULT scanned: 'o'
DEFAULT scanned: 'o'
DEFAULT scanned: 'b'
DEFAULT scanned: 'a'
DEFAULT scanned: 'r'
STRONG scanned: '''
./input(-4611699882581819391) : error 1 : Unexpected character at  
offset 9, near '''
DEFAULT scanned: '''''
parser processed all tokens

I don't really understand the cause of those error messages, but much  
more puzzling is the following: note that the STRONG token is  
recognized, but then recognized all over again as a DEFAULT token. I  
added some additional logging, and saw that the ''' markers are  
indeed being sent to the as the DEFAULT type (-5), the same as the  
other letters.

Now the same grammar in Java:

grammar WikiText;
wikitext: .* EOF {System.out.println("parser processed all tokens");};
STRONG: '\'\'\'' {System.out.println("STRONG scanned"); };
DEFAULT: . {System.out.println("DEFAULT scanned"); };

When running under the ANTLRWorks debugger prints out:

STRONG scanned
DEFAULT scanned
DEFAULT scanned
DEFAULT scanned
DEFAULT scanned
DEFAULT scanned
DEFAULT scanned
STRONG scanned
parser processed all tokens

Note that in the Java case the ''' is recognized correctly as STRONG,  
and the lexer then moves on. I didn't print the literal value of the  
tokens because I don't know Java and couldn't find any examples of  
how to do it; but you can see that six non-STRONG characters are  
recognized.

Can anyone explain this difference between the two language targets?  
Or perhaps point out an elementary mistake I am making which is  
causing this?

This is using 3.0 and a main.c file that just like the ones in the  
examples.

Cheers,
Wincent


From madcapmaggie at yahoo.com  Mon Jun  4 08:56:12 2007
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon, 4 Jun 2007 08:56:12 -0700 (PDT)
Subject: [antlr-interest] Unicode support in both v2.7 and v3
In-Reply-To: <004701c7a4ab$13c7e9e0$222815ac@objy.com>
Message-ID: <717516.46264.qm@web60023.mail.yahoo.com>


There is an example of unicode support for cpp in the examples directory for both antlr-2.7.6 and antlr-2.7.7. I used this to add UTF-8 support to antlr-2.7.6 and 2.7.7 for the c++ target. We have been using this successfully for some time.



YiQing Yang <yiqing at objectivity.com> wrote:               Hi,
   
  I am trying to use ANTLR to generate a query parser in C++. Since C++ is not supported yet by v3, I am trying v2.7.6 right now.  I would like to know how the Unicode is supported in both v2.7 and v3.  Does it support the input stream which is a wchar_t*? Which UTF encoding formats does it support (UTF8, UTF16, UTF32)? From the Reference Manual for v2, it seems that Unicode is not fully supported yet and claims that v3 will have a better Unicode support. Is Unicode fully supported in v3?
   
  I am new to ANTLR. Sorry if those questions have been answered before.
   
  Thanks,
   
  Yiqing Yang
  
  


Margaret Fieland
    www.margaretfieland.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/9a5e0f9a/attachment.html 

From rdclark at gmail.com  Mon Jun  4 11:02:07 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 4 Jun 2007 11:02:07 -0700
Subject: [antlr-interest] Free / Open JSON Grammar?
In-Reply-To: <200705230647.32862.rschulz@sonic.net>
References: <200705221650.47228.rschulz@sonic.net>
	<20070523101243.GA19824@badgers-in-foil.co.uk>
	<200705230647.32862.rschulz@sonic.net>
Message-ID: <d3992d900706041102u311828aet4a51a43d8cc81555@mail.gmail.com>

Funny, I was also thinking about JSON last week. So I just completed a
JSON grammar and put it on the wiki as part of the tutorials. You can
download the grammar files and unit tests from the page's attachments.

I plan to go back and add notes on the implementation (for new folks)
and possibly do a second language back-end.

 ...Richard

From rschulz at sonic.net  Mon Jun  4 11:23:02 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 4 Jun 2007 11:23:02 -0700
Subject: [antlr-interest] Free / Open JSON Grammar?
In-Reply-To: <d3992d900706041102u311828aet4a51a43d8cc81555@mail.gmail.com>
References: <200705221650.47228.rschulz@sonic.net>
	<200705230647.32862.rschulz@sonic.net>
	<d3992d900706041102u311828aet4a51a43d8cc81555@mail.gmail.com>
Message-ID: <200706041123.02444.rschulz@sonic.net>

On Monday 04 June 2007 11:02, Richard Clark wrote:
> Funny, I was also thinking about JSON last week. So I just completed
> a JSON grammar and put it on the wiki as part of the tutorials. You
> can download the grammar files and unit tests from the page's
> attachments.
>
> I plan to go back and add notes on the implementation (for new folks)
> and possibly do a second language back-end.
>
>  ...Richard

Hey, thanks! I'll check it out.


Randall Schulz

From rdclark at gmail.com  Mon Jun  4 11:34:14 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 4 Jun 2007 11:34:14 -0700
Subject: [antlr-interest] corrupt link on wiki page
In-Reply-To: <4662D725.6070409@gmx.de>
References: <31D74A6495CC464BAC4E3357E00A2E1E@GWB> <4662B7F7.6050708@gmx.de>
	<4662D725.6070409@gmx.de>
Message-ID: <d3992d900706041134h4d688a39p9b75283dd3f5a100@mail.gmail.com>

Fixed!

...R

From ric.klaren at gmail.com  Mon Jun  4 11:48:22 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon, 4 Jun 2007 20:48:22 +0200
Subject: [antlr-interest] V3 C++ backend writer wanted & ANTLR2 C++ backend
	maintainer
Message-ID: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com>

Hi,

Due to a number of reasons I've decided to stop working on the ANTLR3
C++ backend and stop maintaining the ANTLR2 backend. As a result we're
looking for someone to take up this job.

Preferably we'd be looking for someone with:
- a solid C++ background
- a solid ANTLR background
- who has the time and commitment to write a backend and support it
for a period of time. The backend writing does not apply for the V2
job though ;)

It would be nice if the person could support the V2 backend as well.
But I don't think that it should be a requirement.

If you're interested please contact me and Terence. So we can discuss details.

Business aside.. why am I stopping?

- Lack of time/energy to be able to keep the deadlines I posed myself.
While C++ saw the first prototype codegen target I was never able to
sync up to the latest state of development. I could meddle on like
this but I don't think that's fair towards 'the tool' and the
community.
- I am turning to the dark side ;) E.g. I' mostly developing Java,
PL/SQL at the moment, and a little bit of C. So I'm getting a bit
rusty on my C++ skills.
- I recently changed job and for this new job I'll probably have got
to spent some more time in the evenings doing more java-ish stuff
leaving probably even less time for antlr.

I would have loved finishing this task, but as things progress now I
think it's better to quit. It would have been a good opportunity to do
some things that irked in the v2 backend/support library right (or at
least different ;) ).

Cheers,

Ric

From hwk.cortex-brainware at t-online.de  Mon Jun  4 12:15:45 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Mon, 4 Jun 2007 21:15:45 +0200
Subject: [antlr-interest] Namespace option for C#
In-Reply-To: <46642BE7.8030202@gmx.de>
References: <46642BE7.8030202@gmx.de>
Message-ID: <00fc01c7a6dc$c089a2d0$75e0f3c3@kocher>

Are we talking version 3?

If so, this ist he solution:

@lexer::namespace {
	mynamespace.parser
}

@parser::namespace {
	mynamespace.parser
}

Hope this helps.

Dr. Hartmut Kocher
Cortex Brainware Consulting & Training GmbH

-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Johannes Luber
Gesendet: Montag, 4. Juni 2007 17:13
An: antlr-interest at antlr.org
Betreff: [antlr-interest] Namespace option for C#

Hello!

I can't find the correct way to define the namespace for the generated
file, when targetting C#. Using "namespace='namespace1.namespce2';" in
the options command results in an invalid option error. Can someone
please enlighten me?

Best regards,
Johannes Luber



From jaluber at gmx.de  Mon Jun  4 12:19:09 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 04 Jun 2007 21:19:09 +0200
Subject: [antlr-interest] Namespace option for C#
In-Reply-To: <00fc01c7a6dc$c089a2d0$75e0f3c3@kocher>
References: <46642BE7.8030202@gmx.de> <00fc01c7a6dc$c089a2d0$75e0f3c3@kocher>
Message-ID: <466465AD.5010703@gmx.de>

Dr. Hartmut Kocher wrote:
> Are we talking version 3?

Yes, we are.

> If so, this ist he solution:
> 
> @lexer::namespace {
> 	mynamespace.parser
> }
> 
> @parser::namespace {
> 	mynamespace.parser
> }
> 
> Hope this helps.

It does!

Thanks!
Johannes Luber

From schalla at dammam.intergraph.com.sa  Mon Jun  4 12:36:27 2007
From: schalla at dammam.intergraph.com.sa (Srinivas Challa)
Date: Mon, 4 Jun 2007 22:36:27 +0300
Subject: [antlr-interest] Help please:Not receiving mail subscriptions
Message-ID: <B163DBCD9CF5BD44AC0335FF65B01FDB427540@dmmex2>

Hi,

I am a newbie and I am not receiving mail subscriptions from 'antlr-interest' group.

Could anyone please help me in resolving this problem?

(Sorry for inconvenience, I should not be sending this kind of mail to all on the mailing list.)

Regards,
Challa

From antlr at olivercomputing.com  Mon Jun  4 13:16:29 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 04 Jun 2007 16:16:29 -0400
Subject: [antlr-interest] Question about lexer/parser boundaries
Message-ID: <20070604213304.27B243C6010C@newmach.olivercomputing.com>

I'm using ANTLR v3.0 to create a full XQuery 1.0 lexer/parser (a 
non-trivial task IMO). While I have experience writing compilers 
(long ago), this is the first time I've used a formal system such as ANTLR.

My first question relates to an important phrase in the book "The 
Definitive ANTLR Reference" (a must buy if you're serious about 
working with ANTLR 3.0), page 290:

... You should restrict lexer rules to matching single lexical constructs ...

Personally I found this to be an extremely important piece of 
information that ought to be more stressed in this and other 
documentation. Existing EBNF grammars, including the official XQuery 
grammar, do not tell us which should be lexer and which should be 
parser rules; so it's up to the one translating those grammars to 
ANTLR syntax to decide which how the rules should be structured 
(lexer vs. parser).

So given that context, the question is: what exactly constitutes 
"single lexical constructs" in ANTLR's context? I would think that 
the definition of DUMMY would effectively amount to a single lexical construct:

DUMMY : 'A' | 'G' | 'Z' | DIGIT;
fragment DIGIT : '0'..'9';

or indeed this:

DUMMY2 : 'A..Z' ~'X';

because the rules boil down to a set of permissible single Unicode 
characters (or character ranges).

There is also this, the pattern of which is very useful to "merge" 
multiple tokens into a single token for the parser in order to reduce 
lookahead 'k':

MULTIPLE : TOKEN1 TOKEN2;
TOKEN1 : 'Test1';
TOKEN2 : 'Test2';

So my question is this: Are DUMMY, DUMMY2, and MULTIPLE permissible 
lexer rules, or should they still be defined as parser rules? (then 
defined with lower case letters.)




From jimi at temporal-wave.com  Mon Jun  4 13:21:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 13:21:35 -0700
Subject: [antlr-interest] Question about lexer/parser boundaries
In-Reply-To: <20070604213304.27B243C6010C@newmach.olivercomputing.com>
References: <20070604213304.27B243C6010C@newmach.olivercomputing.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252663@wavemachine.temporal-wave.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> There is also this, the pattern of which is very useful to "merge"
> multiple tokens into a single token for the parser in order to reduce
> lookahead 'k':
> 
> MULTIPLE : TOKEN1 TOKEN2;
> TOKEN1 : 'Test1';
> TOKEN2 : 'Test2';
> 
> So my question is this: Are DUMMY, DUMMY2, and MULTIPLE permissible
> lexer rules, or should they still be defined as parser rules? (then
> defined with lower case letters.)


If this is indeed useful in your lexer, then you make TOKEN1 and TOKEN2
fragments. Basically, it should fall out sensibly if you remember not to
use no fragment rules within other lexer rules and if it is difficult to
do that without a lot of messing around creating no fragment rules that
are just a reference to a single fragment, then you are probably trying
to do too much in the lexer. 

So, in the simple context in which your example is presented ;-), then
this would not be a lexer rule, but a parser rules saying:

multiple : TOKEN1 TOKEN2;

Jim

From jimi at temporal-wave.com  Mon Jun  4 13:37:14 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 13:37:14 -0700
Subject: [antlr-interest] Unicode support in both v2.7 and v3
In-Reply-To: <001801c7a4f9$38ece650$c704a8c0@hercules>
References: <004701c7a4ab$13c7e9e0$222815ac@objy.com>
	<001801c7a4f9$38ece650$c704a8c0@hercules>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252665@wavemachine.temporal-wave.com>

There are C input streams for 8 bit (no translation from anything) and
UCS2/UTF-16 (again no translations, it just takes either the 8 bit
number of 16 bit number and assumes that this matches the character
encoding in your grammar. It is of course trivial to add knowledge of a
particular encoding and translate the input stream to the Unicode code
points that are generated for the generated parser. Adding UTF-32 is
trivial, adding UTF-8 is not exactly trivial but not a lot more work.
Basically, the input stream should be able to supply a 32 bit
representation of the Unicode code points, given it has knowledge of the
encoding of its input stream. For an 8 bit encoding, then you just use
the existing 8 bit input stream and install your own function tha tads
translation to the Unicode code point (assuming that the encoding is not
already correct). 16 bit is the same, and so on.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
Sent: Saturday, June 02, 2007 2:34 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Unicode support in both v2.7 and v3

 

Hi,

 

Doesn't directly answer your questions but, why not try the C target for
V3?. You could always wrap the C runtime API up in C++ classes anyway.
There was some discussion about UNICODE and the C target a while back on
the list. All you need to do might be to supply an input stream of wchar
characters (I could be wrong on this so search the list archives).

 

Micheal

 

-----------------------
The best way to contact me is via the list/forum. My time is very
limited. 

	-----Original Message-----
	From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of YiQing Yang
	Sent: 02 June 2007 01:15
	To: antlr-interest at antlr.org
	Subject: [antlr-interest] Unicode support in both v2.7 and v3

	 Hi,

	 

	I am trying to use ANTLR to generate a query parser in C++.
Since C++ is not supported yet by v3, I am trying v2.7.6 right now.  I
would like to know how the Unicode is supported in both v2.7 and v3.
Does it support the input stream which is a wchar_t*? Which UTF encoding
formats does it support (UTF8, UTF16, UTF32)? From the Reference Manual
for v2, it seems that Unicode is not fully supported yet and claims that
v3 will have a better Unicode support. Is Unicode fully supported in v3?

	 

	I am new to ANTLR. Sorry if those questions have been answered
before.

	 

	Thanks,

	 

	Yiqing Yang

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/6e88ea1a/attachment.html 

From jimi at temporal-wave.com  Mon Jun  4 13:41:51 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 13:41:51 -0700
Subject: [antlr-interest] C target: lexer rule precedence confusion
In-Reply-To: <83CA2ABD-7152-4726-94ED-8E7531AD1F02@wincent.com>
References: <83CA2ABD-7152-4726-94ED-8E7531AD1F02@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252666@wavemachine.temporal-wave.com>

This may be related to some other thing I am looking at to do with the \
processing when the strings are passed to the C target. Give me a day or
so.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Monday, June 04, 2007 8:38 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target: lexer rule precedence confusion
> 
> I'm trying to write a parser for wiki markup and have discovered some
> puzzling behaviour in the C target. Here is a reduced test grammar:
> 
> grammar WikiText;
> options {
>    language = C;
> }
> 
> wikitext: .* EOF {printf("parser processed all tokens\n");};
> STRONG: '\'\'\'' {printf("STRONG scanned: '\%s'\n", GETTEXT()-
>  >chars); };
> DEFAULT : . { printf("DEFAULT scanned: '\%s'\n", GETTEXT()->chars); };
> 
> The DEFAULT rule is last because I want it to serve as a "catch all"
> for any characters which don't get matched by any other rules. Given
> the input '''foobar''' the lexer/parser print:
> 
> STRONG scanned: '''
> ./input(-4611699882581819391) : error 1 : Unexpected character at
> offset 0, near '''
> DEFAULT scanned: '''''
> DEFAULT scanned: 'f'
> DEFAULT scanned: 'o'
> DEFAULT scanned: 'o'
> DEFAULT scanned: 'b'
> DEFAULT scanned: 'a'
> DEFAULT scanned: 'r'
> STRONG scanned: '''
> ./input(-4611699882581819391) : error 1 : Unexpected character at
> offset 9, near '''
> DEFAULT scanned: '''''
> parser processed all tokens
> 
> I don't really understand the cause of those error messages, but much
> more puzzling is the following: note that the STRONG token is
> recognized, but then recognized all over again as a DEFAULT token. I
> added some additional logging, and saw that the ''' markers are
> indeed being sent to the as the DEFAULT type (-5), the same as the
> other letters.
> 
> Now the same grammar in Java:
> 
> grammar WikiText;
> wikitext: .* EOF {System.out.println("parser processed all tokens");};
> STRONG: '\'\'\'' {System.out.println("STRONG scanned"); };
> DEFAULT: . {System.out.println("DEFAULT scanned"); };
> 
> When running under the ANTLRWorks debugger prints out:
> 
> STRONG scanned
> DEFAULT scanned
> DEFAULT scanned
> DEFAULT scanned
> DEFAULT scanned
> DEFAULT scanned
> DEFAULT scanned
> STRONG scanned
> parser processed all tokens
> 
> Note that in the Java case the ''' is recognized correctly as STRONG,
> and the lexer then moves on. I didn't print the literal value of the
> tokens because I don't know Java and couldn't find any examples of
> how to do it; but you can see that six non-STRONG characters are
> recognized.
> 
> Can anyone explain this difference between the two language targets?
> Or perhaps point out an elementary mistake I am making which is
> causing this?
> 
> This is using 3.0 and a main.c file that just like the ones in the
> examples.
> 
> Cheers,
> Wincent


From trunkel at gmail.com  Mon Jun  4 13:45:15 2007
From: trunkel at gmail.com (troy runkel)
Date: Mon, 4 Jun 2007 16:45:15 -0400
Subject: [antlr-interest] Errors in code generated by the ANTLR C target
Message-ID: <620da58c0706041345l586badd8sb5e4656ff6659d6b@mail.gmail.com>

Greetings,

I'm using version (ANTLR Parser Generator  Version 3.0 (May 17, 2007)
1989-2007) of ANTLR and the grammar I'm working on has the following
options set.

    language    = C;
    output        = AST;
    backtrack   = true;
    memoize    = true;

I'm seeing a number of errors in the generated C code when I try to
compile in using Visual Studio 2005.

1) The REWINDLAST macro expands to
INPUT->istream->REWINDLAST(INPUT->istream), but REWINDLAST doesn't
exist in ANTLR3_INT_STREAM_struct.  I'm assuming it's supposed to
expand to INPUT->istream->rewindLast(INPUT->istream).

2) The SEEK macro appears in the generated code but is not defined.
However I was able to find a definition for SEEK in the
antlr-3.0\src\org\antlr\codegen\templates\C\C.stg file.

I'm also working on a tree grammar and am seeing similar errors in the
generated C code for that as well.

1) I'm seeing the same REWINDLAST and SEEK macro errors mentioned above.

2) The INDEX macro appears in the generated code but is not defined.

3) The MEMOIZE macro is also used but not defined.

What am I doing wrong here?  I believe I'm working with the "official"
ANTLR v3 release, but the generated C code won't compile.

Thanks.

Troy Runkel

From antlr at olivercomputing.com  Mon Jun  4 13:47:50 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 04 Jun 2007 16:47:50 -0400
Subject: [antlr-interest] Question about lexer/parser boundaries
Message-ID: <20070604220357.789CB3C6010C@newmach.olivercomputing.com>

Jim - thanks for the quick response. I would note a couple of things: 
first, "merging" the tokens at the lexer stage seems to be an 
effective and indeed necessary technique to accomodate the "grouping" 
notation in the XQuery 1.0 grammar. i.e. in some parser rule, there 
might be a reference to (to use my prior example for continuity):

... < TOKEN1 TOKEN2 > ...

in the XQuery grammar, denoting that TOKEN1 and TOKEN2 are to be 
effectively treated as one unit. I think this is done in order to 
preserve the grammar as LL(1) parsable. ANTLR itself doesn't (unless 
I'm missing it) have such an ability (and sub-rules grouping in 
parentheses are not equivalent apparently), other than to define 
another lexer rule as my example gave:

MULTIPLE: TOKEN1 TOKEN2;

and then up in the parser rules, < TOKEN TOKEN2 > can be replaced 
with MULTIPLE.  This appears to work as expected. (Concrete examples 
are 'DECLARE boundary-space' vs. 'DECLARE default' vs. 'DECLARE 
namespace' etc. - unless you lex each one as single units, the parser 
needs LL(2) to distinguish between them. Correct me if I'm wrong 
here. Yes, I understand that ANTLR 3.0 is LL(*) and can backtrack but 
I want to keep this LL(1), as intended by the official grammar.)

I'm actually more concerned about my first examples with the 
character ranges, than the "merging" idea, though for completeness I 
wanted to include it in my question.


From jimi at temporal-wave.com  Mon Jun  4 13:49:39 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 13:49:39 -0700
Subject: [antlr-interest] Errors in code generated by the ANTLR C target
In-Reply-To: <620da58c0706041345l586badd8sb5e4656ff6659d6b@mail.gmail.com>
References: <620da58c0706041345l586badd8sb5e4656ff6659d6b@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252668@wavemachine.temporal-wave.com>

Hmm - something does not sound quite right here. Can you get the
examples running (specifically, in this case the Java parser example?).

However, it could be that I am missing some definitions out of the Tree
output if you are using backtracking and memoizing (which, incidentally
you should only ever do for a development version of your grammar).

Can you send me you grammar?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Monday, June 04, 2007 1:45 PM
> To: ANTLR mail-list
> Subject: [antlr-interest] Errors in code generated by the ANTLR C
> target
> 
> Greetings,
> 
> I'm using version (ANTLR Parser Generator  Version 3.0 (May 17, 2007)
> 1989-2007) of ANTLR and the grammar I'm working on has the following
> options set.
> 
>     language    = C;
>     output        = AST;
>     backtrack   = true;
>     memoize    = true;
> 
> I'm seeing a number of errors in the generated C code when I try to
> compile in using Visual Studio 2005.
> 
> 1) The REWINDLAST macro expands to
> INPUT->istream->REWINDLAST(INPUT->istream), but REWINDLAST doesn't
> exist in ANTLR3_INT_STREAM_struct.  I'm assuming it's supposed to
> expand to INPUT->istream->rewindLast(INPUT->istream).
> 
> 2) The SEEK macro appears in the generated code but is not defined.
> However I was able to find a definition for SEEK in the
> antlr-3.0\src\org\antlr\codegen\templates\C\C.stg file.
> 
> I'm also working on a tree grammar and am seeing similar errors in the
> generated C code for that as well.
> 
> 1) I'm seeing the same REWINDLAST and SEEK macro errors mentioned
> above.
> 
> 2) The INDEX macro appears in the generated code but is not defined.
> 
> 3) The MEMOIZE macro is also used but not defined.
> 
> What am I doing wrong here?  I believe I'm working with the "official"
> ANTLR v3 release, but the generated C code won't compile.
> 
> Thanks.
> 
> Troy Runkel

From jimi at temporal-wave.com  Mon Jun  4 13:58:36 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 13:58:36 -0700
Subject: [antlr-interest] Question about lexer/parser boundaries
In-Reply-To: <20070604220357.789CB3C6010C@newmach.olivercomputing.com>
References: <20070604220357.789CB3C6010C@newmach.olivercomputing.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252669@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Phil Oliver
> Sent: Monday, June 04, 2007 1:48 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Question about lexer/parser boundaries
> 
> Jim - thanks for the quick response. I would note a couple of things:
> first, "merging" the tokens at the lexer stage seems to be an
> effective and indeed necessary technique to accomodate the "grouping"
> notation in the XQuery 1.0 grammar. i.e. in some parser rule, there
> might be a reference to (to use my prior example for continuity):
> 
> ... < TOKEN1 TOKEN2 > ...
> 
> in the XQuery grammar, denoting that TOKEN1 and TOKEN2 are to be
> effectively treated as one unit.

I think you are confusing the tokens as implied by the language you are
parsing (as in TOKEN1 TOKEN2 are to be treated as one unit by the parser
that is parsing the query, with the tokenability of the input language,
which is not the same thing. You look for the construct above as:

compound_element : LBRACKET TOKEN1 TOKEN2 RBRACKET ;


>I think this is done in order to
> preserve the grammar as LL(1) parsable. ANTLR itself doesn't (unless
> I'm missing it) have such an ability (and sub-rules grouping in
> parentheses are not equivalent apparently), other than to define
> another lexer rule as my example gave:
> 
> MULTIPLE: TOKEN1 TOKEN2;


> 
> and then up in the parser rules, < TOKEN TOKEN2 > can be replaced
> with MULTIPLE.  This appears to work as expected. (Concrete examples
> are 'DECLARE boundary-space' vs. 'DECLARE default' vs. 'DECLARE
> namespace' etc. - unless you lex each one as single units, the parser
> needs LL(2) to distinguish between them. Correct me if I'm wrong
> here. Yes, I understand that ANTLR 3.0 is LL(*) and can backtrack but
> I want to keep this LL(1), as intended by the official grammar.)

I don't think that the tokenizing will affect that. However, if < and >
are not used ambiguously elsewhere for operators, then you might do it
that way so long as you used fragment and assuming that TOKEN1 and TOKEN
2 are some non-ambiguous tokenized strings. But your parser in the above
need only do:

declare_stuff
	: DECLARE
		(
			  DEFAULT {default namespace stuff}
			| NAMESPACE ...

				And so on.

> 
> I'm actually more concerned about my first examples with the
> character ranges, than the "merging" idea, though for completeness I
> wanted to include it in my question.

Your other examples were fine.

Jim

From jimi at temporal-wave.com  Mon Jun  4 14:00:18 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 14:00:18 -0700
Subject: [antlr-interest] V3 C++ backend writer wanted & ANTLR2 C++
	backendmaintainer
In-Reply-To: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com>
References: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>

Ric/Ter,

I think that a sensible course might be for me to do this and reuse as
much of the C runtime as is sensible to do so. I am willing to do it if
you like.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ric Klaren
> Sent: Monday, June 04, 2007 11:48 AM
> To: ANTLR mailinglist; antlr-dev list
> Cc: Terence Parr
> Subject: [antlr-interest] V3 C++ backend writer wanted & ANTLR2 C++
> backendmaintainer
> 
> Hi,
> 
> Due to a number of reasons I've decided to stop working on the ANTLR3
> C++ backend and stop maintaining the ANTLR2 backend. As a result we're
> looking for someone to take up this job.
> 
> Preferably we'd be looking for someone with:
> - a solid C++ background
> - a solid ANTLR background
> - who has the time and commitment to write a backend and support it
> for a period of time. The backend writing does not apply for the V2
> job though ;)
> 
> It would be nice if the person could support the V2 backend as well.
> But I don't think that it should be a requirement.
> 
> If you're interested please contact me and Terence. So we can discuss
> details.
> 
> Business aside.. why am I stopping?
> 
> - Lack of time/energy to be able to keep the deadlines I posed myself.
> While C++ saw the first prototype codegen target I was never able to
> sync up to the latest state of development. I could meddle on like
> this but I don't think that's fair towards 'the tool' and the
> community.
> - I am turning to the dark side ;) E.g. I' mostly developing Java,
> PL/SQL at the moment, and a little bit of C. So I'm getting a bit
> rusty on my C++ skills.
> - I recently changed job and for this new job I'll probably have got
> to spent some more time in the evenings doing more java-ish stuff
> leaving probably even less time for antlr.
> 
> I would have loved finishing this task, but as things progress now I
> think it's better to quit. It would have been a good opportunity to do
> some things that irked in the v2 backend/support library right (or at
> least different ;) ).
> 
> Cheers,
> 
> Ric

From win at wincent.com  Mon Jun  4 14:09:00 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 4 Jun 2007 23:09:00 +0200
Subject: [antlr-interest] Errors in code generated by the ANTLR C target
In-Reply-To: <620da58c0706041345l586badd8sb5e4656ff6659d6b@mail.gmail.com>
References: <620da58c0706041345l586badd8sb5e4656ff6659d6b@mail.gmail.com>
Message-ID: <48021986-862B-4E48-982B-57BA21594270@wincent.com>

El 4/6/2007, a las 22:45, troy runkel escribi?:

> Greetings,
>
> I'm using version (ANTLR Parser Generator  Version 3.0 (May 17, 2007)
> 1989-2007) of ANTLR and the grammar I'm working on has the following
> options set.
>
>    language    = C;
>    output        = AST;
>    backtrack   = true;
>    memoize    = true;
>
> I'm seeing a number of errors in the generated C code when I try to
> compile in using Visual Studio 2005.
>
> 1) The REWINDLAST macro expands to
> INPUT->istream->REWINDLAST(INPUT->istream), but REWINDLAST doesn't
> exist in ANTLR3_INT_STREAM_struct.  I'm assuming it's supposed to
> expand to INPUT->istream->rewindLast(INPUT->istream).

I saw the same error when I added backtrack = true and memoize = true  
to my grammar, just for testing purposes.

WikiTextParser.c:778: error: ?struct ANTLR3_INT_STREAM_struct? has no  
member named ?REWINDLAST?

That's with:

i686-apple-darwin8-gcc-4.0.1 (GCC) 4.0.1 (Apple Computer, Inc. build  
5367)

Darwin cuzco.local 8.9.1 Darwin Kernel Version 8.9.1: Thu Feb 22  
20:55:00 PST 2007; root:xnu-792.18.15~1/RELEASE_I386 i386 i386

Cheers,
Wincent


From antlr at olivercomputing.com  Mon Jun  4 14:17:54 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 04 Jun 2007 17:17:54 -0400
Subject: [antlr-interest] Question about lexer/parser boundaries
Message-ID: <20070604223401.705B53C6010C@newmach.olivercomputing.com>

 >I think you are confusing the tokens as implied by the language you are
 >parsing (as in TOKEN1 TOKEN2 are to be treated as one unit by the parser
 >that is parsing the query, with the tokenability of the input language,
 >which is not the same thing. You look for the construct above as:

 >compound_element : LBRACKET TOKEN1 TOKEN2 RBRACKET ;

Absolutely not. I understand the difference and that it is not what 
their grammar means. I refer you to this:

http://www.w3.org/TR/xquery-xpath-parsing/

in section A.1 EBNF:
...
The following grammars use the same simple Extended Backus-Naur Form 
(EBNF) notation as [XML 1.0] with the following minor differences. 
The notation "< ... >" is used to indicate a grouping of terminals 
that together may help disambiguate the individual symbols.
...

A concrete example of one of the rules is:

[5]  SimpleForClause    ::=    <"for" "$"> 
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-VarName>VarName 
"in" 
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-ExprSingle>ExprSingle 
("," "$" 
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-VarName>VarName 
"in" 
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-ExprSingle>ExprSingle)*

<"for" "$"> absolutely does not mean literal character left and right 
angle brackets, they denote that 'for $' should be treated as a 
single unit effectively (and thus I define a lexer rule that matches 
occurances of 'for' '$' with a single token.)

Thanks for you assessment that the other examples are fine. Can you 
or Terence comment on some definite hard-and-fast technique for 
assessing whether a rule should be lexer or parser?

The most frustrating thing is that I have a grammar that the latest 
Antlrworks declares as having "no grammar errors" but it blows up 
with out of memory anyway, despite having over a gig allocated to the 
VM, which experience so far seems to indicate an unidentified grammar 
problem that leads to an infinite loop somewhere. (When I copy the 
generated code to an Eclipse project and debug it there, it's going 
out of memory at this point:

     static {
         int numStates = DFA13_transitionS.length;
         DFA13_transition = new short[numStates][];
         for (int i=0; i<numStates; i++) {
             DFA13_transition[i] = 
DFA.unpackEncodedString(DFA13_transitionS[i]);
         }
     }
)

It is frustrating that ANTLR/Antlrworks doesn't appear to be flagging 
all possible problems, which makes it very hard to debug a complex 
grammar translation.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/d533b273/attachment.html 

From aliaazimi at yahoo.com  Mon Jun  4 14:24:43 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 4 Jun 2007 14:24:43 -0700 (PDT)
Subject: [antlr-interest] Help Please!
Message-ID: <31590.74228.qm@web58103.mail.re3.yahoo.com>

Dear all,
  where can I download "org.antlr.runtime.*" package from?
   
  Regards,
   
  Al the Beginner

       
---------------------------------
Luggage? GPS? Comic books? 
Check out fitting  gifts for grads at Yahoo! Search.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/d28b7bd1/attachment-0001.html 

From jimi at temporal-wave.com  Mon Jun  4 14:48:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 14:48:17 -0700
Subject: [antlr-interest] Question about lexer/parser boundaries
In-Reply-To: <20070604223401.705B53C6010C@newmach.olivercomputing.com>
References: <20070604223401.705B53C6010C@newmach.olivercomputing.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625266E@wavemachine.temporal-wave.com>

The following grammars use the same simple Extended Backus-Naur Form
(EBNF) notation as [XML 1.0] with the following minor differences. The
notation "< ... >" is used to indicate a grouping of terminals that
together may help disambiguate the individual symbols. 
...

A concrete example of one of the rules is:

[5]  SimpleForClause    ::=    <"for" "$"> VarName
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-VarName>  "in"
ExprSingle
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-ExprSingle>  (","
"$" VarName
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-VarName>  "in"
ExprSingle
<http://www.w3.org/TR/xquery-xpath-parsing/#prod-xpath-ExprSingle> )* 

<"for" "$"> absolutely does not mean literal character left and right
angle brackets, they denote that 'for $' should be treated as a single
unit effectively (and thus I define a lexer rule that matches occurances
of 'for' '$' with a single token.)

OK. I see what they are getting at, but I don't think that would be
necessary for ANTLR. ANTLR probably doesn't care too much though and I
don't think you should worry about it. However, I think that this is
really a matter of the <> indicating a place where it might be easiest
in one tool to return a single token, and easier in another to use a
predicate of some sort. This isn't really to do with LL(*) or whatever,
it is just disambiguation. In your 'for' above, you would have to deal
with whitespace and so on if you want it to be a single token, so your
lexer token would need to deal with that. I suspect that those 'hints'
are actually leading you astray a bit to be honest and you might want to
just start by NOT doing that, then seeing if you can make any
improvements by using such tricks AFTER you have it parsing. I think
they are not telling you to treat them as a single token, but that 'for'
followed by '$' will always mean "simple for loop"

Thanks for you assessment that the other examples are fine. Can you or
Terence comment on some definite hard-and-fast technique for assessing
whether a rule should be lexer or parser? 

I don't think that there is one really. Parsing is quite often a case of
what works best with the tool you are using, because virtually no
languages are 'easy'. But, I usually find that the best thing to do is
keep the lexer as simple as possible with no compound things that I can
do in the parser. 

The most frustrating thing is that I have a grammar that the latest
Antlrworks declares as having "no grammar errors" but it blows up with
out of memory anyway,

Well - there might not be any grammar errors, but that does not mean you
have a CORRECT recognizer J

It is frustrating that ANTLR/Antlrworks doesn't appear to be flagging
all possible problems, which makes it very hard to debug a complex
grammar translation. 

Well, it is a difficult thing. However, the set of all possible problems
may well be infinite. I think you might post your full grammar and lexer
to get some hints and let's see where you are going. Also, this version
of ANTLR3 is written in ANTLR2, which means Ter did not spend ages of
time on errors (though really this means syntax errors in the grammar).
But a tool such as ANTLRworks will let you debug the grammar even though
it cannot tell you if it is suitable for recognizing the input set you
had in mind, so you should be able to find out where it is going wrong
by debugging it, should you not?

Perhaps you are expecting too much from the analysis of your grammar
(perhaps you are not too), but we need to see your grammar to see what
is happening I guess.

Jim



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/57b1c814/attachment.html 

From parrt at cs.usfca.edu  Mon Jun  4 15:34:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Jun 2007 15:34:13 -0700
Subject: [antlr-interest] Help Please!
In-Reply-To: <31590.74228.qm@web58103.mail.re3.yahoo.com>
References: <31590.74228.qm@web58103.mail.re3.yahoo.com>
Message-ID: <1E397551-B856-4684-AAC8-4E133311DF55@cs.usfca.edu>

Have you tried the download page?
Ter
On Jun 4, 2007, at 2:24 PM, ali azimi wrote:

> Dear all,
> where can I download "org.antlr.runtime.*" package from?
>
> Regards,
>
> Al the Beginner
>
> Luggage? GPS? Comic books?
> Check out fitting gifts for grads at Yahoo! Search.


From parrt at cs.usfca.edu  Mon Jun  4 15:35:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Jun 2007 15:35:35 -0700
Subject: [antlr-interest] V3 C++ backend writer wanted & ANTLR2 C++
	backendmaintainer
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>
References: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>
Message-ID: <4779BD11-702B-4250-A465-26DD600D60D6@cs.usfca.edu>


On Jun 4, 2007, at 2:00 PM, Jim Idle wrote:

> Ric/Ter,
>
> I think that a sensible course might be for me to do this and reuse as
> much of the C runtime as is sensible to do so. I am willing to do  
> it if
> you like.

Would be ok with me.  Are you one with the ways of C++ folks?  What  
about unicode and C++?

Ter

From jimi at temporal-wave.com  Mon Jun  4 15:46:23 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 15:46:23 -0700
Subject: [antlr-interest] [antlr-dev] V3 C++ backend writer wanted
	&ANTLR2 C++ backendmaintainer
In-Reply-To: <4779BD11-702B-4250-A465-26DD600D60D6@cs.usfca.edu>
References: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com><B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>
	<4779BD11-702B-4250-A465-26DD600D60D6@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252670@wavemachine.temporal-wave.com>

I am cool with C++ ObeWan, Unicode is no problem.

Jim

> -----Original Message-----
> From: antlr-dev-bounces at antlr.org [mailto:antlr-dev-bounces at antlr.org]
> On Behalf Of Terence Parr
> Sent: Monday, June 04, 2007 3:36 PM
> To: antlr-dev list; ANTLR mailinglist
> Subject: Re: [antlr-dev] [antlr-interest] V3 C++ backend writer wanted
> &ANTLR2 C++ backendmaintainer
> 
> 
> On Jun 4, 2007, at 2:00 PM, Jim Idle wrote:
> 
> > Ric/Ter,
> >
> > I think that a sensible course might be for me to do this and reuse
> as
> > much of the C runtime as is sensible to do so. I am willing to do
> > it if
> > you like.
> 
> Would be ok with me.  Are you one with the ways of C++ folks?  What
> about unicode and C++?
> 
> Ter
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev

From parrt at cs.usfca.edu  Mon Jun  4 15:54:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Jun 2007 15:54:33 -0700
Subject: [antlr-interest] [antlr-dev] V3 C++ backend writer wanted
	&ANTLR2 C++ backendmaintainer
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252670@wavemachine.temporal-wave.com>
References: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com><B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>
	<4779BD11-702B-4250-A465-26DD600D60D6@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A235336252670@wavemachine.temporal-wave.com>
Message-ID: <1121C122-CBCF-4731-912F-9918F5BACE4B@cs.usfca.edu>


On Jun 4, 2007, at 3:46 PM, Jim Idle wrote:

> I am cool with C++ ObeWan, Unicode is no problem.

Well, if you're willing to put forth all that effort I'd be very  
happy to have you build the C++ backend.  Your C backend is awesome :)

Ter


From jimi at temporal-wave.com  Mon Jun  4 16:02:08 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jun 2007 16:02:08 -0700
Subject: [antlr-interest] [antlr-dev] V3 C++ backend writer wanted
	&ANTLR2 C++ backendmaintainer
In-Reply-To: <1121C122-CBCF-4731-912F-9918F5BACE4B@cs.usfca.edu>
References: <bc607a4e0706041148n3974b8c5w7e9a78dd9f4d34f9@mail.gmail.com><B36CCC332A32904F8FA3DE134A23533625266A@wavemachine.temporal-wave.com>
	<4779BD11-702B-4250-A465-26DD600D60D6@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A235336252670@wavemachine.temporal-wave.com>
	<1121C122-CBCF-4731-912F-9918F5BACE4B@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252671@wavemachine.temporal-wave.com>

Alright, I will get on with it then:

Step 1: Grant write access to C++ runtime, templates and CppTarget.

Jim

> -----Original Message-----
> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> Sent: Monday, June 04, 2007 3:55 PM
> To: Jim Idle
> Cc: antlr-dev list; ANTLR mailinglist
> Subject: Re: [antlr-dev] [antlr-interest] V3 C++ backend writer wanted
> &ANTLR2 C++ backendmaintainer
> 
> 
> On Jun 4, 2007, at 3:46 PM, Jim Idle wrote:
> 
> > I am cool with C++ ObeWan, Unicode is no problem.
> 
> Well, if you're willing to put forth all that effort I'd be very
> happy to have you build the C++ backend.  Your C backend is awesome :)
> 
> Ter


From antlr at olivercomputing.com  Mon Jun  4 16:26:36 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 04 Jun 2007 19:26:36 -0400
Subject: [antlr-interest] All except...
Message-ID: <20070605004243.21F793C6010C@newmach.olivercomputing.com>

This might be a terribly simple question though I've looked pretty 
hard and can't find an obvious solution nor examples in sample 
grammars: how does one create an ANTLR v3 rule (either lexer or 
parser) that easily matches any character EXCEPT a set of other 
characters? e.g. let's say I have:

Char : '\u0009' | '\u000A' | '\u000D' | '\u0020'..'\uD7FF' | 
'\uE000'..'\uFFFD';

and I want to define a rule that matches any Char except another list 
of characters. In the EBNF grammar used in the XQuery spec, for 
example, it would be:

Char2: Char - ('<' | '>');

which would cause Char2 to match any character in Char except for '<' 
or '>'.  But that operator isn't part of ANTLR (evidently). I've 
looked at the ~ unary operator but that doesn't handle this job, 
unless I'm overlooking something.

I understand that one could explicitly define Char2 to be an 
allowable sequence from Char that already excludes '<' and '>' but 
that's tedious and hides the abstract meaning of the definition.


From yiqing at objectivity.com  Mon Jun  4 18:20:58 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Mon, 4 Jun 2007 18:20:58 -0700
Subject: [antlr-interest] How to resolve the left-recursion problem?
Message-ID: <006401c7a70f$c60b3600$222815ac@objy.com>

Hi,

I need to write a parser rule for an extended class attribute namme
expression. It could be simply a single attribute name with the class scope
as option (persion::name) or a series of attribute names chained by "." (ie,
"employer.ceo.name": "ceo" is an attribute of "employer" corresponded class.
"name" is an attribute of "ceo" corresponded class).

I wrote the parser rules as following which contains left-recursion. I do
not know how to resolve this problem without changing the semantic. I would
appreciate if anyone could help.

-----------------------------------------------------
attribute_expression
  : attribute_name
  | dot_operator_exp
  ;

dot_operator_exp
  : attribute_expression DOT attribute_name
  ;

attribute_name
  : n1:NAME (SCOPE n2:NAME)? 
  ;
------------------------------------------------------
    
Yiqing Yang





From jbb at acm.org  Mon Jun  4 19:32:42 2007
From: jbb at acm.org (John B. Brodie)
Date: Mon, 04 Jun 2007 22:32:42 -0400
Subject: [antlr-interest] How to resolve the left-recursion problem?
In-Reply-To: <006401c7a70f$c60b3600$222815ac@objy.com> (message from YiQing
	Yang on Mon, 04 Jun 2007 18:20:58 -0700)
References: <006401c7a70f$c60b3600$222815ac@objy.com>
Message-ID: <E1HvOqg-00012y-00@gecko>

Greetings!

>I need to write a parser rule for an extended class attribute namme
>expression. It could be simply a single attribute name with the class scope
>as option (persion::name) or a series of attribute names chained by "." (ie,
>"employer.ceo.name": "ceo" is an attribute of "employer" corresponded class.
>"name" is an attribute of "ceo" corresponded class).

does this work for you?

attribute_expression : NAME ( ( '::' NAME ) | ( '.' NAME )+ )? ;

(e.g. either we have a single pair of NAMEs separated by :: or we have a list
of names separated by a . or we have just a single NAME)

>I wrote the parser rules as following which contains left-recursion. I do
>not know how to resolve this problem without changing the semantic. I would
>appreciate if anyone could help.
>
>-----------------------------------------------------
>attribute_expression
>  : attribute_name
>  | dot_operator_exp
>  ;
>
>dot_operator_exp
>  : attribute_expression DOT attribute_name
>  ;
>
>attribute_name
>  : n1:NAME (SCOPE n2:NAME)? 
>  ;
>------------------------------------------------------

these rules seem (to me) to permit phrases such as
   a.b::c.d.e::f.g
or
   h.i::j
or 
   k::l.m

is this later stuff what you want? (e.g. any sequence of dot separated names
which are in turn separated by '::')

if so maybe try these two rules

attribute_expression : dotted_name_list ( SCOPE dotted_name_list )* ;
dotted_name_list : NAME ( DOT NAME )* ;

All of the above are UNTESTED, sorry; but I hope this helps...
   -jbb

From antlr at olivercomputing.com  Mon Jun  4 19:44:27 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 04 Jun 2007 22:44:27 -0400
Subject: [antlr-interest] Suggestion
Message-ID: <20070605040037.804583C6010D@newmach.olivercomputing.com>

Referring to a fragment rule in a parser rule (rather than a lexer 
rule) appears to be an error (if not please correct me.) However, 
such usage is not flagged as an error currently - it would be helpful 
if it were.


From dirty at apple.com  Mon Jun  4 19:49:47 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 4 Jun 2007 19:49:47 -0700
Subject: [antlr-interest] Tree walker exception handling
In-Reply-To: <938431.67920.qm@web55915.mail.re3.yahoo.com>
References: <938431.67920.qm@web55915.mail.re3.yahoo.com>
Message-ID: <D9CC894E-964F-4DBD-A8F5-D10E1635EB2A@apple.com>

Thanks.  That helped a lot.

And based on my requirements, I decided to move the symbol validation  
code back into the parser.  It has access to information that the  
tree walker doesn't.

Now I'm trying to figure out how to manage the information/object  
sharing that's going to have to happen between my parser, tree walker  
and the utility classes I'm creating.

Does anyone have any suggestions on how best to handle this?

To give a concrete example, I want to print out an error when the  
parser finds an undefined symbol.  Right now I can print out the  
symbol name and line number, but I want to print out the file name.   
The ANTLRFileStream class has getSourceName() which I want to use,  
but I'm not sure how to get to it.  It's created in my main program.   
So short of passing it, or my main class object into my parser, I  
don't know how to get to it.

On May 25, 2007, at 1:21 PM, Loring Craymer wrote:

> Take a look at Ter's ErrorManager.java in the tool
> directory.  It has a lot of extraneous stuff (as far
> as your application is concerned), but is not a bad
> model for error accumulation and reporting.  Throwing
> exceptions for semantic errors is not user-friendly:
> you really want to report back as many semantic
> problems as the user can handle, not just the first
> one.
>
> --Loring
>
> --- Cameron Esfahani <dirty at apple.com> wrote:
>
>> I know the questions are a bit open-ended, but does
>> anyone have any
>> suggestions?
>>
>> On May 22, 2007, at 5:25 PM, Cameron Esfahani wrote:
>>
>>> I'm developing a language that supports assignment:
>>>
>>> foo = 125
>>> bar = foo + 1
>>>
>>> Obviously, I need to create a symbol table to hold all of the
>>> assignment operations, and then validate all symbols against that
>>> table.
>>>
>>> From what I can tell, I should be doing this in a tree walker
>>> pass.  The problem I'm having is, what do I do when I find a
>>> logical versus syntactical error?  For example, when the user
>>> erroneously supplies a symbol that doesn't exist?
>>>
>>> Right now, I'm just throwing a RecognitionException from within the
>>> relevant tree walker rule, and I have a @rulecatch which grabs this:
>>>
>>> @rulecatch {
>>> 	catch ( RecognitionException e ) {
>>> 		System.exit( 0 );
>>> 	}
>>> }
>>>
>>> I call System.exit() because I don't want the exception stack frame
>>> printing out.  It would scare my users.
>>>
>>> In the handler, I want to print out some useful information, like
>>> the name and line number of the undefined symbol. Can I still get
>>> this lexer information from a tree walker?
>>>
>>> Is it appropriate to use the RecognitionException for these kind of
>>> logical errors?  I'm almost wondering if I should create my own
>>> class of errors and then throw them as appropriate.
>>>

Cameron Esfahani
dirty at apple.com

"You only live once, and the way I live, once is enough"

Frank Sinatra



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/669ec2d6/attachment.html 

From laguest at archangeli.co.uk  Mon Jun  4 23:20:57 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Tue, 05 Jun 2007 07:20:57 +0100
Subject: [antlr-interest] What are channels and what are they used for?
Message-ID: <1181024458.7226.0.camel@rogue>

Hi,

I think the subject says it all really, I have come across it, but don't
know what it's all about? Can anyone enlighten me?

Thanks,
Luke.



From aliaazimi at yahoo.com  Tue Jun  5 01:16:40 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 5 Jun 2007 01:16:40 -0700 (PDT)
Subject: [antlr-interest] Help Please!
Message-ID: <738619.85488.qm@web58106.mail.re3.yahoo.com>

Dear all,
  
where can I download "org.antlr.runtime.*" package from?

Regards,
   
  Al the Beginner


 
---------------------------------
Need Mail bonding?
Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/5b76941b/attachment.html 

From firatkucuk at gmail.com  Tue Jun  5 01:23:38 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Tue, 5 Jun 2007 11:23:38 +0300
Subject: [antlr-interest] Help Please!
In-Reply-To: <738619.85488.qm@web58106.mail.re3.yahoo.com>
References: <738619.85488.qm@web58106.mail.re3.yahoo.com>
Message-ID: <7385e6fe0706050123l70e6fb8y3482813b137d9bc7@mail.gmail.com>

antlrv3 jar package includes this.
http://www.antlr.org/download/antlr-runtime-3.0.jar

2007/6/5, ali azimi <aliaazimi at yahoo.com>:
> Dear all,
>
> where can I download "org.antlr.runtime.*" package from?
>
> Regards,
>
> Al the Beginner
>
>
>  ________________________________
> Need Mail bonding?
> Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From aliaazimi at yahoo.com  Tue Jun  5 03:05:23 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 5 Jun 2007 03:05:23 -0700 (PDT)
Subject: [antlr-interest] Help Please!
Message-ID: <191451.50162.qm@web58105.mail.re3.yahoo.com>

Dear all,
  Where can I download org.antlr.runtime.* package from?
  Regards
  Al

       
---------------------------------
Moody friends. Drama queens. Your life? Nope! - their life, your story.
 Play Sims Stories at Yahoo! Games. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/07615604/attachment-0001.html 

From firatkucuk at gmail.com  Tue Jun  5 03:07:46 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Tue, 5 Jun 2007 13:07:46 +0300
Subject: [antlr-interest] Help Please!
In-Reply-To: <530530.47488.qm@web58108.mail.re3.yahoo.com>
References: <7385e6fe0706050123l70e6fb8y3482813b137d9bc7@mail.gmail.com>
	<530530.47488.qm@web58108.mail.re3.yahoo.com>
Message-ID: <7385e6fe0706050307r271005d1heb6968d30bd46c33@mail.gmail.com>

Hi

you may download source files
http://www.antlr.org/download/antlr-3.0.tar.gz

and you may unzip jar file:
http://www.antlr.org/download/antlr-runtime-3.0.jar

just change the .jar extension to .zip and unzip.


2007/6/5, ali azimi <aliaazimi at yahoo.com>:
> Dear Fyrat,
>
> Thank you so much for your reply. I need to have the source files for
> org.antlr.runtime.*. I have downloaded the package at the address which you
> suggested to me. They are all jar files. I am not familiar with jar files.
> when I double click on them an error message similar to the following comes
> up:
> Invalid or corrupt jarfile C:\Dcument and
> Settings\ali\Desktop\TokenStream.class
>
> Can you please help?
>
> Regards,
>
> Al
>
> F?rat K???K <firatkucuk at gmail.com> wrote:
> antlrv3 jar package includes this.
> http://www.antlr.org/download/antlr-runtime-3.0.jar
>
> 2007/6/5, ali azimi :
> > Dear all,
> >
> > where can I download "org.antlr.runtime.*" package from?
> >
> > Regards,
> >
> > Al the Beginner
> >
> >
> > ________________________________
> > Need Mail bonding?
> > Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
> >
> >
>
>
> --
> ??r. G?r. F?rat K???K
> ADAMYO Distance Learning
> SAKARYA University / TURKEY
>
>
>
>  ________________________________
> Choose the right car based on your needs. Check out Yahoo! Autos new Car
> Finder tool.
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From jaluber at gmx.de  Tue Jun  5 04:13:33 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Jun 2007 13:13:33 +0200
Subject: [antlr-interest] All except...
In-Reply-To: <20070605004243.21F793C6010C@newmach.olivercomputing.com>
References: <20070605004243.21F793C6010C@newmach.olivercomputing.com>
Message-ID: <4665455D.9050202@gmx.de>

Phil Oliver wrote:
> This might be a terribly simple question though I've looked pretty hard
> and can't find an obvious solution nor examples in sample grammars: how
> does one create an ANTLR v3 rule (either lexer or parser) that easily
> matches any character EXCEPT a set of other characters? e.g. let's say I
> have:
> 
> Char : '\u0009' | '\u000A' | '\u000D' | '\u0020'..'\uD7FF' |
> '\uE000'..'\uFFFD';
> 
> and I want to define a rule that matches any Char except another list of
> characters. In the EBNF grammar used in the XQuery spec, for example, it
> would be:
> 
> Char2: Char - ('<' | '>');
> 
> which would cause Char2 to match any character in Char except for '<' or
> '>'.  But that operator isn't part of ANTLR (evidently). I've looked at
> the ~ unary operator but that doesn't handle this job, unless I'm
> overlooking something.
> 
> I understand that one could explicitly define Char2 to be an allowable
> sequence from Char that already excludes '<' and '>' but that's tedious
> and hides the abstract meaning of the definition.

The correct syntax for Char2 is

Char2: ~Char;

Why shouldn't the ~ work in your case?

Best regards,
Johannes Luber



From Pranita.Chaudhari at eads.com  Tue Jun  5 04:26:08 2007
From: Pranita.Chaudhari at eads.com (Chaudhari, Pranita, OPEE14)
Date: Tue, 5 Jun 2007 13:26:08 +0200
Subject: [antlr-interest]   ANTLRWorks tutorial
References: <mailman.605.1181037924.2496.antlr-interest@antlr.org>
Message-ID: <4A4BFB693434EA43A40E8C85DFE4046F815F7A@deimsg30.de.net.world>

 
Need Help!
 
Where can I find ANTLRWorks Tutorial?
Can anybody explain how to use Debugger from ANTLRWorks and how can I run Java program on Grammer file to get output?
 
Its not available on the website:
http://www.antlr.org/error.jsp?msg=File+not+found%3A+%2Fworks%2Fhelp%2Ftutorial%2Ftutorial1.html
 
Regards,
Pranita 
________________________________

Von: antlr-interest-bounces at antlr.org im Auftrag von antlr-interest-request at antlr.org
Gesendet: Di 05.06.2007 12:05
An: antlr-interest at antlr.org
Betreff: antlr-interest Digest, Vol 31, Issue 11



Send antlr-interest mailing list submissions to
        antlr-interest at antlr.org

To subscribe or unsubscribe via the World Wide Web, visit
        http://www.antlr.org/mailman/listinfo/antlr-interest
or, via email, send a message with subject or body 'help' to
        antlr-interest-request at antlr.org

You can reach the person managing the list at
        antlr-interest-owner at antlr.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of antlr-interest digest..."


Today's Topics:

   1. Re: How to resolve the left-recursion problem? (John B. Brodie)
   2. Suggestion (Phil Oliver)
   3. Re: Tree walker exception handling (Cameron Esfahani)
   4. What are channels and what are they used for? (Luke A. Guest)
   5. Help Please! (ali azimi)
   6. Re: Help Please! ( F?rat K???K )
   7. Help Please! (ali azimi)


----------------------------------------------------------------------

Message: 1
Date: Mon, 04 Jun 2007 22:32:42 -0400
From: "John B. Brodie" <jbb at acm.org>
Subject: Re: [antlr-interest] How to resolve the left-recursion
        problem?
To: yiqing at objectivity.com
Cc: antlr-interest at antlr.org
Message-ID: <E1HvOqg-00012y-00 at gecko>

Greetings!

>I need to write a parser rule for an extended class attribute namme
>expression. It could be simply a single attribute name with the class scope
>as option (persion::name) or a series of attribute names chained by "." (ie,
>"employer.ceo.name": "ceo" is an attribute of "employer" corresponded class.
>"name" is an attribute of "ceo" corresponded class).

does this work for you?

attribute_expression : NAME ( ( '::' NAME ) | ( '.' NAME )+ )? ;

(e.g. either we have a single pair of NAMEs separated by :: or we have a list
of names separated by a . or we have just a single NAME)

>I wrote the parser rules as following which contains left-recursion. I do
>not know how to resolve this problem without changing the semantic. I would
>appreciate if anyone could help.
>
>-----------------------------------------------------
>attribute_expression
>  : attribute_name
>  | dot_operator_exp
>  ;
>
>dot_operator_exp
>  : attribute_expression DOT attribute_name
>  ;
>
>attribute_name
>  : n1:NAME (SCOPE n2:NAME)?
>  ;
>------------------------------------------------------

these rules seem (to me) to permit phrases such as
   a.b::c.d.e::f.g
or
   h.i::j
or
   k::l.m

is this later stuff what you want? (e.g. any sequence of dot separated names
which are in turn separated by '::')

if so maybe try these two rules

attribute_expression : dotted_name_list ( SCOPE dotted_name_list )* ;
dotted_name_list : NAME ( DOT NAME )* ;

All of the above are UNTESTED, sorry; but I hope this helps...
   -jbb


------------------------------

Message: 2
Date: Mon, 04 Jun 2007 22:44:27 -0400
From: Phil Oliver <antlr at olivercomputing.com>
Subject: [antlr-interest] Suggestion
To: Antlr-interest at antlr.org
Message-ID: <20070605040037.804583C6010D at newmach.olivercomputing.com>
Content-Type: text/plain; charset=us-ascii; format=flowed;
        x-avg-checked=avg-ok-E842D67

Referring to a fragment rule in a parser rule (rather than a lexer
rule) appears to be an error (if not please correct me.) However,
such usage is not flagged as an error currently - it would be helpful
if it were.



------------------------------

Message: 3
Date: Mon, 4 Jun 2007 19:49:47 -0700
From: Cameron Esfahani <dirty at apple.com>
Subject: Re: [antlr-interest] Tree walker exception handling
To: Loring Craymer <lgcraymer at yahoo.com>
Cc: antlr-interest at antlr.org
Message-ID: <D9CC894E-964F-4DBD-A8F5-D10E1635EB2A at apple.com>
Content-Type: text/plain; charset="us-ascii"

Thanks.  That helped a lot.

And based on my requirements, I decided to move the symbol validation 
code back into the parser.  It has access to information that the 
tree walker doesn't.

Now I'm trying to figure out how to manage the information/object 
sharing that's going to have to happen between my parser, tree walker 
and the utility classes I'm creating.

Does anyone have any suggestions on how best to handle this?

To give a concrete example, I want to print out an error when the 
parser finds an undefined symbol.  Right now I can print out the 
symbol name and line number, but I want to print out the file name.  
The ANTLRFileStream class has getSourceName() which I want to use, 
but I'm not sure how to get to it.  It's created in my main program.  
So short of passing it, or my main class object into my parser, I 
don't know how to get to it.

On May 25, 2007, at 1:21 PM, Loring Craymer wrote:

> Take a look at Ter's ErrorManager.java in the tool
> directory.  It has a lot of extraneous stuff (as far
> as your application is concerned), but is not a bad
> model for error accumulation and reporting.  Throwing
> exceptions for semantic errors is not user-friendly:
> you really want to report back as many semantic
> problems as the user can handle, not just the first
> one.
>
> --Loring
>
> --- Cameron Esfahani <dirty at apple.com> wrote:
>
>> I know the questions are a bit open-ended, but does
>> anyone have any
>> suggestions?
>>
>> On May 22, 2007, at 5:25 PM, Cameron Esfahani wrote:
>>
>>> I'm developing a language that supports assignment:
>>>
>>> foo = 125
>>> bar = foo + 1
>>>
>>> Obviously, I need to create a symbol table to hold all of the
>>> assignment operations, and then validate all symbols against that
>>> table.
>>>
>>> From what I can tell, I should be doing this in a tree walker
>>> pass.  The problem I'm having is, what do I do when I find a
>>> logical versus syntactical error?  For example, when the user
>>> erroneously supplies a symbol that doesn't exist?
>>>
>>> Right now, I'm just throwing a RecognitionException from within the
>>> relevant tree walker rule, and I have a @rulecatch which grabs this:
>>>
>>> @rulecatch {
>>>     catch ( RecognitionException e ) {
>>>             System.exit( 0 );
>>>     }
>>> }
>>>
>>> I call System.exit() because I don't want the exception stack frame
>>> printing out.  It would scare my users.
>>>
>>> In the handler, I want to print out some useful information, like
>>> the name and line number of the undefined symbol. Can I still get
>>> this lexer information from a tree walker?
>>>
>>> Is it appropriate to use the RecognitionException for these kind of
>>> logical errors?  I'm almost wondering if I should create my own
>>> class of errors and then throw them as appropriate.
>>>

Cameron Esfahani
dirty at apple.com

"You only live once, and the way I live, once is enough"

Frank Sinatra



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070604/669ec2d6/attachment-0001.html

------------------------------

Message: 4
Date: Tue, 05 Jun 2007 07:20:57 +0100
From: "Luke A. Guest" <laguest at archangeli.co.uk>
Subject: [antlr-interest] What are channels and what are they used
        for?
To: ANTR Interest <antlr-interest at antlr.org>
Message-ID: <1181024458.7226.0.camel at rogue>
Content-Type: text/plain

Hi,

I think the subject says it all really, I have come across it, but don't
know what it's all about? Can anyone enlighten me?

Thanks,
Luke.




------------------------------

Message: 5
Date: Tue, 5 Jun 2007 01:16:40 -0700 (PDT)
From: ali azimi <aliaazimi at yahoo.com>
Subject: [antlr-interest] Help Please!
To: antlr-interest at antlr.org
Message-ID: <738619.85488.qm at web58106.mail.re3.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Dear all,
 
where can I download "org.antlr.runtime.*" package from?

Regards,
  
  Al the Beginner



---------------------------------
Need Mail bonding?
Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/5b76941b/attachment-0001.html

------------------------------

Message: 6
Date: Tue, 5 Jun 2007 11:23:38 +0300
From: " F?rat K???K " <firatkucuk at gmail.com>
Subject: Re: [antlr-interest] Help Please!
To: "ali azimi" <aliaazimi at yahoo.com>
Cc: antlr-interest at antlr.org
Message-ID:
        <7385e6fe0706050123l70e6fb8y3482813b137d9bc7 at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-9; format=flowed

antlrv3 jar package includes this.
http://www.antlr.org/download/antlr-runtime-3.0.jar

2007/6/5, ali azimi <aliaazimi at yahoo.com>:
> Dear all,
>
> where can I download "org.antlr.runtime.*" package from?
>
> Regards,
>
> Al the Beginner
>
>
>  ________________________________
> Need Mail bonding?
> Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
>
>


--
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

------------------------------

Message: 7
Date: Tue, 5 Jun 2007 03:05:23 -0700 (PDT)
From: ali azimi <aliaazimi at yahoo.com>
Subject: [antlr-interest] Help Please!
To: antlr-interest at antlr.org
Message-ID: <191451.50162.qm at web58105.mail.re3.yahoo.com>
Content-Type: text/plain; charset="iso-8859-1"

Dear all,
  Where can I download org.antlr.runtime.* package from?
  Regards
  Al

      
---------------------------------
Moody friends. Drama queens. Your life? Nope! - their life, your story.
 Play Sims Stories at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/07615604/attachment.html

------------------------------

_______________________________________________
antlr-interest mailing list
antlr-interest at antlr.org
http://www.antlr.org/mailman/listinfo/antlr-interest


End of antlr-interest Digest, Vol 31, Issue 11
**********************************************


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/95e720da/attachment-0001.html 

From jaluber at gmx.de  Tue Jun  5 04:29:54 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Jun 2007 13:29:54 +0200
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <1181024458.7226.0.camel@rogue>
References: <1181024458.7226.0.camel@rogue>
Message-ID: <46654932.3040709@gmx.de>

Luke A. Guest wrote:
> Hi,
> 
> I think the subject says it all really, I have come across it, but don't
> know what it's all about? Can anyone enlighten me?

The channels are supposed to make tokens invisible so one doesn't have
to deal e.g. with whitespace in the parser. It is possible to access
those hidden tokens, but I didn't figure out how to to do that exactly.

Best regards,
Johannes Luber

From antlr at mirality.co.nz  Tue Jun  5 04:52:00 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 05 Jun 2007 23:52:00 +1200
Subject: [antlr-interest] All except...
In-Reply-To: <20070605004243.21F793C6010C@newmach.olivercomputing.com>
References: <20070605004243.21F793C6010C@newmach.olivercomputing.com>
Message-ID: <20070605120117.8690711EAE5@www.antlr.org>

At 11:26 5/06/2007, Phil Oliver wrote:
 >how does one create an ANTLR v3 rule (either lexer or parser)
 >that easily matches any character EXCEPT a set of other
 >characters? e.g. let's say I have:
 >
 >Char : '\u0009' | '\u000A' | '\u000D' | '\u0020'..'\uD7FF' |
 >'\uE000'..'\uFFFD';
 >
 >and I want to define a rule that matches any Char except another 

 >list of characters. In the EBNF grammar used in the XQuery spec, 

 >for example, it would be:
 >
 >Char2: Char - ('<' | '>');
 >
 >which would cause Char2 to match any character in Char except 
for
 >'<' or '>'.  But that operator isn't part of ANTLR (evidently). 
I've
 >looked at the ~ unary operator but that doesn't handle this job, 

 >unless I'm overlooking something.

ANTLR doesn't currently support set subtraction, though it does 
support set addition (through the | operator) and negation (with 
~).  Since your Char definition is already a "just about 
everything" set, you should first redeclare it as such:

Char: ~('\u0001'..'\u0008' | '\u000B' | '\u000C' | 
'\u000E'..'\u001F' | '\uD800'..'\uDFFF' | '\uFFFE' | '\uFFFF');

(If you're supporting something higher than UTF-16 then the upper 
bound might be a bit different.)

Then redeclare using a fragment token that also excludes the other 
tokens you want to exclude from Char2:

fragment Char0: ~('\u0001'..'\u0008' | '\u000B' | '\u000C' | 
'\u000E'..'\u001F' | '<' | '>' | '\uD800'..'\uDFFF' | '\uFFFE' | 
'\uFFFF');
Char: Char0 | '<' | '>';
Char2: Char0;


From cfbenham at yahoo.com.au  Tue Jun  5 05:24:19 2007
From: cfbenham at yahoo.com.au (Conrad Benham)
Date: Tue, 5 Jun 2007 05:24:19 -0700 (PDT)
Subject: [antlr-interest] List Label (+=) without specifying grammar output
Message-ID: <774038.76020.qm@web52709.mail.re2.yahoo.com>

Hi,

 

I'm  having  difficulty in collecting recurring parameters  using the list label operator (+=). I have a tree walker that is walking an  AST.  There is an expression (expr) rule that can have  multiple expressions as parameters (yes, it is a recursive grammar). For  example, the abbreviated form of the (Java-based) tree walking grammar looks like  this: 



tree grammar TreeWalker;

options {

    tokenVocab=SampleGrammar;

    ASTLabelType=CommonTree;

}



expr returns (Object value)

  : ^(word=TOKEN args+=expr*)   {value =  javaObject.evaluate($word, $args);}

  ;  



As can be seen no output is specified in the   grammar options directives section. When generating this,  ANTLR  reports the grammar does not have the output  option specified for 'args'. The exact error is: rule '+=' list labels are not  allowed w/o output option: args I believe this error is emitted when no output is specified and a rule only returns a single value.
 

  From reading the thread: http://www.antlr.org/pipermail/antlr-interest/2007-April/020070.html it seems that list labels are  geared at collecting tokens as opposed to the result of evaluating  rules. Is it really ambiguous to collect the result of expr in a collection using list labels (+=), as discussed in the above-mentioned thread?  What is the recommended approach to collecting multiple return values in this case? 

 Thanks,

 Conrad




      
_________________________________________________________________________________              

How would you spend $50,000 to create a more sustainable environment in Australia? Go to Yahoo!7 Answers and share your idea.
http://advision.webevents.yahoo.com/aunz/lifestyle/answers/y7ans-babp_reg.html




From firatkucuk at gmail.com  Tue Jun  5 06:14:48 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Tue, 5 Jun 2007 16:14:48 +0300
Subject: [antlr-interest] Help Please!
In-Reply-To: <310524.24499.qm@web58109.mail.re3.yahoo.com>
References: <7385e6fe0706050307r271005d1heb6968d30bd46c33@mail.gmail.com>
	<310524.24499.qm@web58109.mail.re3.yahoo.com>
Message-ID: <7385e6fe0706050614n6d59f8ebk888233a15ed94640@mail.gmail.com>

the link is the same.

for source files:
http://www.antlr.org/download/antlr-3.0.tar.gz

and compiled class files
http://www.antlr.org/download/antlr-runtime-3.0.jar

unzip antlr-runtime-3.0.jar

2007/6/5, ali azimi <aliaazimi at yahoo.com>:
> Hi
>
> Could you please give me a link for org.antlr.runtime.tree as well please.
>
> Regards,
> Al
>
>
> F?rat K???K <firatkucuk at gmail.com> wrote:
> Hi
>
> you may download source files
> http://www.antlr.org/download/antlr-3.0.tar.gz
>
> and you may unzip jar file:
> http://www.antlr.org/download/antlr-runtime-3.0.jar
>
> just change the .jar extension to .zip and unzip.
>
>
> 2007/6/5, ali azimi :
> > Dear Fyrat,
> >
> > Thank you so much for your reply. I need to have the source files for
> > org.antlr.runtime.*. I have downloaded the package at the address which
> you
> > suggested to me. They are all jar files. I am not familiar with jar files.
> > when I double click on them an error message similar to the following
> comes
> > up:
> > Invalid or corrupt jarfile C:\Dcument and
> > Settings\ali\Desktop\TokenStream.class
> >
> > Can you please help?
> >
> > Regards,
> >
> > Al
> >
> > F?rat K???K wrote:
> > antlrv3 jar package includes this.
> > http://www.antlr.org/download/antlr-runtime-3.0.jar
> >
> > 2007/6/5, ali azimi :
> > > Dear all,
> > >
> > > where can I download "org.antlr.runtime.*" package from?
> > >
> > > Regards,
> > >
> > > Al the Beginner
> > >
> > >
> > > ________________________________
> > > Need Mail bonding?
> > > Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
> > >
> > >
> >
> >
> > --
> > ??r. G?r. F?rat K???K
> > ADAMYO Distance Learning
> > SAKARYA University / TURKEY
> >
> >
> >
> > ________________________________
> > Choose the right car based on your needs. Check out Yahoo! Autos new Car
> > Finder tool.
> >
> >
>
>
> --
> ??r. G?r. F?rat K???K
> ADAMYO Distance Learning
> SAKARYA University / TURKEY
>
>
>
>  ________________________________
> Looking for a deal? Find great prices on flights and hotels with Yahoo!
> FareChase.
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From collin.vandyck at hannonhill.com  Tue Jun  5 06:35:33 2007
From: collin.vandyck at hannonhill.com (Collin VanDyck)
Date: Tue, 5 Jun 2007 09:35:33 -0400
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
Message-ID: <B1D28362-37F7-46B6-A213-417FFD4A7D04@hannonhill.com>

Hi

Thanks for your reply. I'll admit, even after reading the PDF, I'm a  
little confused on how to accomplish what I want. I tried using your  
suggestion, and tried this grammar:

grammar WikiGrammar;

wiki
	: phrase+
	;

phrase
	: bolded
	| underlined
	| ( options {greedy=false;} : .)+
	;
	
bolded
	: '*' phrase '*'
	;
	
underlined
	: '_' phrase '_'
	;
	
	
With the input

"Hello"

And I got the NoViableAltException.

I'm a little confused as to figure out how to exactly accomplish  
this.  Essentially, I just want to be able to spit out whatever input  
I receive, and be able to recognize recursive markup patterns.  Any  
ideas on how I can get this example (with bold and underline) to do  
this?

Many thanks
Collin




> Hello,
>
> It is noteworthy to mention that my mail client (Mozilla Thunderbird)
> deals with it very well. Maybe having a look at their source could be
> useful (don't ask me where precisely though!).
>
> I see that you don't define any whitespace in your grammar. Maybe
> dealing with the input line by line could make things simpler?
>
> What about enabling backtracking? Why not define a non-greedy (.)+  
> rule
> for anychars? I think the latter would match when the other rules  
> don't.
> I'm not sure 100%, but it is my impression that the generated parser
> behaves a bit differently than when its in a different rule.
>
> Tell me what that gives:
>
>   phrase
>       : bolded
>       | underlined
>       | ( options {greedy=false;} : .)+ ;
>       ;
>
> MA
>
> Collin VanDyck wrote:
> > Hello
> >
> > I'm trying to evaluate ANTLR to determine whether or not it would  
> be a
> > good fit for a wiki that we're currently developing.
> >
> > Essentially, the question boils down to how elegantly it would  
> handle a
> > wide variety of somewhat unstructured input.  In other words,  
> users are
> > going to be entering in rather freeform content (i.e. copying and
> > pasting form Word or some other character source), and I want  
> ANTLR to
> > be able to accept all of the input but match special sequences.
> >
> > An example of this would be:
> >
> > "This is some *bold* wiki content that might also be _underlined_ in
> > places"
> >
> > The special rules would simply output each character that doesn't  
> fall
> > into a special rule, and then to recognize *bold* and _underlined_
> > specially.
> >
> > I've written a small ANTLR grammar which is able to parse this, but
> > fails pretty quickly when you do things like:
> >
> > "This is some *irregular** input_"
> >
> > In the latter case, I'd really just like for the first  
> *irregular* to be
> > parsed as a bolded word, and since the other characters don't have
> > closing symbols, to be able to just treat them as fairly regular
> > characters like 'a', 'b', 'c', etc.
> >
> > Is it possible and reasonable to use ANTLR for this purpose?  Can I
> > create a grammar which will accept ANYTHING, and simply be able  
> to parse
> > out the bits and pieces that are interesting?
> >
> > I'm pasting in the grammar I created.  I apologize in advance for  
> the
> > incorrectness of it.
> >
> > -Collin
> >
> > ------------------
> >
> > grammar WikiGrammar;
> >
> > wiki
> >     : phrase+
> >     ;
> >
> > phrase
> >     : bolded
> >     | underlined
> >     | anychars
> >     ;
> >
> > bolded
> >     : ASTERISK phrase ASTERISK
> >     ;
> >
> > underlined
> >     : UNDERSCORE phrase UNDERSCORE
> >     ;
> >
> > anychars
> >     : (CHAR)+
> >     ;
> >
> > UNDERSCORE
> >     : '_'
> >     ;
> >
> > ASTERISK
> >     : '*'
> >     ;
> >
> > CHAR
> >     : .
> >     ;
> >
> >
> >
> >



-----
Collin VanDyck
CTO - Hannon Hill



From laguest at archangeli.co.uk  Tue Jun  5 06:58:33 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Tue, 05 Jun 2007 14:58:33 +0100
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <46654932.3040709@gmx.de>
References: <1181024458.7226.0.camel@rogue>  <46654932.3040709@gmx.de>
Message-ID: <1181051914.7226.2.camel@rogue>

On Tue, 2007-06-05 at 13:29 +0200, Johannes Luber wrote:
> Luke A. Guest wrote:
> > Hi,
> > 
> > I think the subject says it all really, I have come across it, but don't
> > know what it's all about? Can anyone enlighten me?
> 
> The channels are supposed to make tokens invisible so one doesn't have
> to deal e.g. with whitespace in the parser. It is possible to access
> those hidden tokens, but I didn't figure out how to to do that exactly.

Is that all it's used for? I would've thought there'd be more to it than
that.

Thanks,
Luke.



From jaluber at gmx.de  Tue Jun  5 07:08:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 05 Jun 2007 16:08:19 +0200
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <1181051914.7226.2.camel@rogue>
References: <1181024458.7226.0.camel@rogue> <46654932.3040709@gmx.de>
	<1181051914.7226.2.camel@rogue>
Message-ID: <46656E53.9080308@gmx.de>

Luke A. Guest wrote:
> On Tue, 2007-06-05 at 13:29 +0200, Johannes Luber wrote:
> Is that all it's used for? I would've thought there'd be more to it than
> that.

So far I haven't seen anything which suggests that there are other uses.

Best regards,
Johannes Luber

From tbrandonau at gmail.com  Tue Jun  5 07:27:38 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 6 Jun 2007 00:27:38 +1000
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <B1D28362-37F7-46B6-A213-417FFD4A7D04@hannonhill.com>
References: <B1D28362-37F7-46B6-A213-417FFD4A7D04@hannonhill.com>
Message-ID: <ebc876d70706050727h220b2d81xa87a380338c50d9e@mail.gmail.com>

As phrase is a parser rule "." means any token rather than any character, as
your only tokens are '*' and '_' this is all that will be matched. You need
a lexer rule to deal with other characters.

Tom.

On 6/5/07, Collin VanDyck <collin.vandyck at hannonhill.com> wrote:
>
> Hi
>
> Thanks for your reply. I'll admit, even after reading the PDF, I'm a
> little confused on how to accomplish what I want. I tried using your
> suggestion, and tried this grammar:
>
> grammar WikiGrammar;
>
> wiki
>         : phrase+
>         ;
>
> phrase
>         : bolded
>         | underlined
>         | ( options {greedy=false;} : .)+
>         ;
>
> bolded
>         : '*' phrase '*'
>         ;
>
> underlined
>         : '_' phrase '_'
>         ;
>
>
> With the input
>
> "Hello"
>
> And I got the NoViableAltException.
>
> I'm a little confused as to figure out how to exactly accomplish
> this.  Essentially, I just want to be able to spit out whatever input
> I receive, and be able to recognize recursive markup patterns.  Any
> ideas on how I can get this example (with bold and underline) to do
> this?
>
> Many thanks
> Collin
>
>
> -----
> Collin VanDyck
> CTO - Hannon Hill
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/b2182eee/attachment.html 

From collin.vandyck at hannonhill.com  Tue Jun  5 07:50:58 2007
From: collin.vandyck at hannonhill.com (Collin VanDyck)
Date: Tue, 5 Jun 2007 10:50:58 -0400
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <ebc876d70706050727h220b2d81xa87a380338c50d9e@mail.gmail.com>
References: <B1D28362-37F7-46B6-A213-417FFD4A7D04@hannonhill.com>
	<ebc876d70706050727h220b2d81xa87a380338c50d9e@mail.gmail.com>
Message-ID: <B533D536-594A-4353-BB4C-50C5DB197835@hannonhill.com>

Hi Tom,

Thanks for clarifying that!  That helps out quite a bit.  I have made  
some progress with the grammar. Using lexer rules to define ASTERISK  
('*'), UNDERLINE ('_'), and CHAR (.), I am able to parse

Hello

And it matches the "phrase" parser rule for each of the five  
characters in the input stream.

Moving on to something like

*bold*

It fails here with ( options {greedy=false;}  : CHAR)+, with a  
mismatched token exception.  It matches '*' for the start of the  
'bolded' parser rule, and then 'o' for the last alternative in the  
'phrase' rule, but then fails because the next character is not a '*'.

Changing the later alternative in the phrase rule to ( options  
{greedy=true;} : CHAR)+ solves this.

However, I cannot match something like:

*bold* abc*de

As it fails because there is no following '*' after de.

And I think that this is essentially my problem.  I do want something  
like

*bold* abc*de

To be accepted, and i'd like for the *bold* to be matched in the  
bolded parser rule, but since the rest of the line doesn't match, to  
simply count abc*de as a regular phrase.

Is this possible?



grammar WikiGrammar;

wiki
	: phrase+
	;

phrase
	: bolded
	| underlined
	| ( options {greedy=true;} : CHAR)+
	;
	
bolded
	: ASTERISK phrase ASTERISK
	;
	
underlined
	: UNDERLINE phrase UNDERLINE
	;
	
ASTERISK
	: '*'
	;
	
UNDERLINE
	: '_'
	;

CHAR
	: .
	;
	
	


On Jun 5, 2007, at 10:27 AM, Thomas Brandon wrote:

> As phrase is a parser rule "." means any token rather than any  
> character, as your only tokens are '*' and '_' this is all that  
> will be matched. You need a lexer rule to deal with other characters.
>
> Tom.
>
> On 6/5/07, Collin VanDyck <collin.vandyck at hannonhill.com> wrote: Hi
>
> Thanks for your reply. I'll admit, even after reading the PDF, I'm a
> little confused on how to accomplish what I want. I tried using your
> suggestion, and tried this grammar:
>
> grammar WikiGrammar;
>
> wiki
>         : phrase+
>         ;
>
> phrase
>         : bolded
>         | underlined
>         | ( options {greedy=false;} : .)+
>         ;
>
> bolded
>         : '*' phrase '*'
>         ;
>
> underlined
>         : '_' phrase '_'
>         ;
>
>
> With the input
>
> "Hello"
>
> And I got the NoViableAltException.
>
> I'm a little confused as to figure out how to exactly accomplish
> this.  Essentially, I just want to be able to spit out whatever input
> I receive, and be able to recognize recursive markup patterns.  Any
> ideas on how I can get this example (with bold and underline) to do
> this?
>
> Many thanks
> Collin
>
>
> -----
> Collin VanDyck
> CTO - Hannon Hill
>
>
>



-----
Collin VanDyck
CTO - Hannon Hill



From antlr at olivercomputing.com  Tue Jun  5 08:59:53 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Tue, 05 Jun 2007 11:59:53 -0400
Subject: [antlr-interest] All except...
In-Reply-To: <20070605131745.038A93C6010D@newmach.olivercomputing.com>
References: <20070605004243.21F793C6010C@newmach.olivercomputing.com>
	<20070605131745.038A93C6010D@newmach.olivercomputing.com>
Message-ID: <20070605171619.110BC3C6010D@newmach.olivercomputing.com>

Thanks for your informative reply, Gavin. Set subtraction, even if 
only for the limited case of characters in lexer rules, would be a 
very useful addition. I did already define a new sequence along the 
lines of what you suggested but it's not nearly as clean or abstract 
as the set subtraction. Unless one has a comment or has memorized 
lots of ASCII/Unicode codes, it's not possible to tell "at a glance" 
what was omitted from the sequence when it's all additive. Kind of 
like programming in assembly rather than using a high level language.


From parrt at cs.usfca.edu  Tue Jun  5 09:01:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 09:01:48 -0700
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <1181051914.7226.2.camel@rogue>
References: <1181024458.7226.0.camel@rogue> <46654932.3040709@gmx.de>
	<1181051914.7226.2.camel@rogue>
Message-ID: <7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>

Hi. :)  token channels are a way to avoid discarding tokens (still  
send tokens to the parser) w/o having the parser see them.  So, you  
could send whitespace on one channel, javadoc on another, and the  
java tokens on the default channel.  Then actions can access the  
hidden channels for translation.

Ter

On Jun 5, 2007, at 6:58 AM, Luke A. Guest wrote:

> On Tue, 2007-06-05 at 13:29 +0200, Johannes Luber wrote:
>> Luke A. Guest wrote:
>>> Hi,
>>>
>>> I think the subject says it all really, I have come across it,  
>>> but don't
>>> know what it's all about? Can anyone enlighten me?
>>
>> The channels are supposed to make tokens invisible so one doesn't  
>> have
>> to deal e.g. with whitespace in the parser. It is possible to access
>> those hidden tokens, but I didn't figure out how to to do that  
>> exactly.
>
> Is that all it's used for? I would've thought there'd be more to it  
> than
> that.
>
> Thanks,
> Luke.
>
>


From laguest at archangeli.co.uk  Tue Jun  5 09:08:59 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Tue, 05 Jun 2007 17:08:59 +0100
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
References: <1181024458.7226.0.camel@rogue> <46654932.3040709@gmx.de>
	<1181051914.7226.2.camel@rogue>
	<7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
Message-ID: <1181059740.7226.24.camel@rogue>

On Tue, 2007-06-05 at 09:01 -0700, Terence Parr wrote:
> Hi. :)  token channels are a way to avoid discarding tokens (still  
> send tokens to the parser) w/o having the parser see them.  So, you  
> could send whitespace on one channel, javadoc on another, and the  
> java tokens on the default channel.  Then actions can access the  
> hidden channels for translation.

Ok, interesting idea (I spose). Not come across this before.

Is there any reason why 99 was defined as the hidden channel rather than
stating default=1 and hidden=0. You've already stated that there is no
upper bound on the number of channels, so it would make more sense, I'd
say.

For example, when I was trying to define my specification for
ANTLR.Token, I originally thought that hidden=99, so I created:

   type Channel_Type is range 0 .. 99;
   
   Default_Channel : constant Channel_Type := Channel_Type'First;
   Hidden_Channel  : constant Channel_Type := Channel_Type'Last;

Which is wrong now I know ;)

Thanks,
Luke.



From matthew.j.diehl at intel.com  Tue Jun  5 09:13:10 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 5 Jun 2007 09:13:10 -0700
Subject: [antlr-interest] List Label (+=) without specifying grammar
	output
In-Reply-To: <774038.76020.qm@web52709.mail.re2.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C201FDE366@orsmsx417.amr.corp.intel.com>

The problem with your code is your parenthesis.  It should have:

  : ^(word=TOKEN (args+=expr)*)  ... 

Instead of:

  : ^(word=TOKEN args+=expr*) .... 

From antlr at olivercomputing.com  Tue Jun  5 09:21:21 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Tue, 05 Jun 2007 12:21:21 -0400
Subject: [antlr-interest] Question about lexer/parser boundaries
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625266E@wavemachine.tempora
	l-wave.com>
References: <20070604223401.705B53C6010C@newmach.olivercomputing.com>
	<B36CCC332A32904F8FA3DE134A23533625266E@wavemachine.temporal-wave.com>
Message-ID: <20070605173747.E7B463C6010D@newmach.olivercomputing.com>

Jim - thanks for your last reply. I decided to drop trying to make it 
LL(1) for now and do more in the parser and I'm slowly making 
progress that way - at least I have it compiling and debugging even 
though it's not quite right yet. ANTLR (or perhaps I should say 
ANTLRworks since that's the way I use ANTLR) is great tool but I see 
it as rough around the edges when it comes to helping you identify 
grammar problems or handling its own errors. For example, it took me 
a while to realize that when I get a "Cannot connect" error in the 
debugger in Antlrworks that it was the compiled grammar silently 
blowing up (out of memory because of an unidentified grammar problem) 
without the exception being trapped and reporting back. I would say 
that's a bug in the debugger setup.

There are also serious bugs in the ANTLRworks editor, it's mangled 
find/replace more than once. I think that's a case where re-using an 
existing mature editor (maybe something from Eclipse) would be a 
better approach. In that respect (and others), the commercial ANTLR 
Studio Eclipse plugin is making better use of the framework of a very 
powerful development tool, though unfortunately I'm not sure if the 
developer plans to update it for ANTLR v3 (anybody know?)


From ruth.karl at gmx.de  Tue Jun  5 10:10:25 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Tue, 05 Jun 2007 19:10:25 +0200
Subject: [antlr-interest]  Grammar problem, probably silly....
In-Reply-To: <1181024458.7226.0.camel@rogue>
References: <1181024458.7226.0.camel@rogue>
Message-ID: <46659901.9000502@gmx.de>

Hi,

I have been trying quite a while now, but I keep getting a 
MismatchedTokenException with the following simplified test grammar:

        grammar JSP;

        options {
            language = CSharp;
            output = AST;
        }


        @members {
             boolean xmlDoc = false;
              boolean outputEnabled = false;
        }



        @lexer::members {
                boolean tagMode = false;
        }

        // Parser rules
        jsp    :    oroot (content)* croot EOF
            ;
        oroot     :     OPENTAG OROOT CLOSETAG   
            ;
        croot    :    OPENTAG '/jsp:root' CLOSETAG
            ;
        content    :     TEXT
            ;



        // Lexer rules
        OPENTAG     :     '<' { tagMode = true; }
            ;
        CLOSETAG     :     '>' { tagMode = false; }
            ;
        TEXT    :    {!tagMode}?=> (~'<')+
        ;
        OROOT    :    'jsp:root'
         ;  

The exception occurs when I print

        <jsp:root>ljlj</jsp:root>

in the interpreter and tell it to start from jsp rule.
it says (4!=5), according to the generated files this is OROOT=5 and 
OPENTAG=4.
Could anyone please help me with that???

Thanks a lot!

Ruth

From yiqing at objectivity.com  Tue Jun  5 10:24:28 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Tue, 5 Jun 2007 10:24:28 -0700
Subject: [antlr-interest] How to resolve the left-recursion problem?
In-Reply-To: <E1HvOqg-00012y-00@gecko>
Message-ID: <006801c7a796$5f4f8b50$222815ac@objy.com>

Thanks for your reply. 
Forget about the scope name for now. Say that I want to recognize a series
of name linked by ".", but I want to treat the "." as an operator which I
want to associate some operation to it. I also want the . operator to be
left associative. For example, "employer.ceo.name" is equivalent to
((employer.ceo).name) which generates the AST as 

         .
       /   \
      .     name
    /     \
employer  ceo

This is the only parser rule I can think of  that will do what I want. But
it's left recursive.

attribute_expression
  : NAME | dot_operator_exp
  ;

dot_operator_exp
  : attribute_expression DOT NAME
  ;

Thanks for any help,

Yiqing

-----Original Message-----
From: John B. Brodie [mailto:jbb at acm.org] 
Sent: Monday, June 04, 2007 7:33 PM
To: yiqing at objectivity.com
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to resolve the left-recursion problem?

Greetings!

>I need to write a parser rule for an extended class attribute namme
>expression. It could be simply a single attribute name with the class scope
>as option (persion::name) or a series of attribute names chained by "."
(ie,
>"employer.ceo.name": "ceo" is an attribute of "employer" corresponded
class.
>"name" is an attribute of "ceo" corresponded class).

does this work for you?

attribute_expression : NAME ( ( '::' NAME ) | ( '.' NAME )+ )? ;

(e.g. either we have a single pair of NAMEs separated by :: or we have a
list
of names separated by a . or we have just a single NAME)

>I wrote the parser rules as following which contains left-recursion. I do
>not know how to resolve this problem without changing the semantic. I would
>appreciate if anyone could help.
>
>-----------------------------------------------------
>attribute_expression
>  : attribute_name
>  | dot_operator_exp
>  ;
>
>dot_operator_exp
>  : attribute_expression DOT attribute_name
>  ;
>
>attribute_name
>  : n1:NAME (SCOPE n2:NAME)? 
>  ;
>------------------------------------------------------

these rules seem (to me) to permit phrases such as
   a.b::c.d.e::f.g
or
   h.i::j
or 
   k::l.m

is this later stuff what you want? (e.g. any sequence of dot separated names
which are in turn separated by '::')

if so maybe try these two rules

attribute_expression : dotted_name_list ( SCOPE dotted_name_list )* ;
dotted_name_list : NAME ( DOT NAME )* ;

All of the above are UNTESTED, sorry; but I hope this helps...
   -jbb




From win at wincent.com  Tue Jun  5 11:18:39 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 5 Jun 2007 20:18:39 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
Message-ID: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com>

I'm trying to develop a parser for wiki markup and part of that  
requires the recognition of URI tokens according to RFC 3986 (<http:// 
www.ietf.org/rfc/rfc3986.txt>). The internal structure of the URI  
isn't of any interest to me, I just want to get a token for each URI,  
so I'm doing all this in the lexer.

For testing purposes, I'm doing this first in a separate grammar,  
which you can see here:

   <http://pastie.textmate.org/68006>

Basically this is the grammar from the RFC, but converted from the  
ABNF used in that document (the ABNF is itself described in <http:// 
www.ietf.org/rfc/rfc2234.txt>) to use ANTLR's EBNF notation, and then  
with some minor tweaks to eliminate ANTLRWorks warnings about  
ambiguity or analysis problems. As far as I can tell, however, the  
grammar matches the description in the RFC.

When I try to pipe this through ANTLR (v3 final) I get this:

   Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
space

I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so on...

   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g

But to no avail... I got up to almost a gig and a half before swap  
start thrashing itself to death and I had to kill the ANTLR process.  
The funny thing is the grammar check works fine in ANTLRWorks (no  
warnings printed to the console), it has no problems showing me  
syntax diagrams, producing rule dependency graphs, or handling input  
that I pass in via the interpreter.

I tried this with both C and Java as the target language, so the  
problem seems to be language independent. From what I've read on this  
list I guess the cause is something nasty in my grammar that I'll  
need to work around. The trouble is, I don't even know where to begin  
to look. Can anybody provide some pointers?

Cheers,
Wincent


From matthew.j.diehl at intel.com  Tue Jun  5 11:20:57 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 5 Jun 2007 11:20:57 -0700
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <46659901.9000502@gmx.de>
Message-ID: <A10CD303B51F814DB568A8AAF02174C201FDE5C7@orsmsx417.amr.corp.intel.com>

The problem with your grammar is that you were using lexer::member
variables to hold the state of 'tagMode', and so in each different lexer
rule their 'tagMode' would automatically be set to false.  If you set it
to lexer::header and made a public static class with tagMode in it (or
in C I guess a global variable), you would run into problems because
lexer::header appears before the includes, which will throw errors, so
you'd have to create your global variables by hand and edit the lexer
file and put them after the includes.  Otherwise, one work around is
below:  (notice that if you don't include (~('/'|'<'|'>'))+ you'll run
into problems with TEXT eating up either of those characters (even
though greedy is set to false and they are declared above TEXT).

        grammar JSP;

        options {
            output = AST;
        }
        

        // Parser rules
        jsp    :    oroot (content)* croot EOF
            ;
        oroot     :     OPENTAG JSPROOT CLOSETAG   
            ;
        croot    :    OPENTAG SLASH JSPROOT CLOSETAG
            ;
        content    :     TEXT
            ;



        // Lexer rules
        OPENTAG     :    '<' 
            ;
        CLOSETAG     :   '>' 
            ;
        JSPROOT
        	:	'jsp:root'
        	;
        SLASH   
        	:	'/'
        	;
        TEXT
      	options{greedy=false;}
      		: (~('<'|'>'| '/'))+
      		;
WS	:	(' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
	;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ruth Karl
Sent: Tuesday, June 05, 2007 10:10 AM
To: ANTR Interest
Subject: [antlr-interest] Grammar problem, probably silly....

Hi,

I have been trying quite a while now, but I keep getting a 
MismatchedTokenException with the following simplified test grammar:

        grammar JSP;

        options {
            language = CSharp;
            output = AST;
        }


        @members {
             boolean xmlDoc = false;
              boolean outputEnabled = false;
        }



        @lexer::members {
                boolean tagMode = false;
        }

        // Parser rules
        jsp    :    oroot (content)* croot EOF
            ;
        oroot     :     OPENTAG OROOT CLOSETAG   
            ;
        croot    :    OPENTAG '/jsp:root' CLOSETAG
            ;
        content    :     TEXT
            ;



        // Lexer rules
        OPENTAG     :     '<' { tagMode = true; }
            ;
        CLOSETAG     :     '>' { tagMode = false; }
            ;
        TEXT    :    {!tagMode}?=> (~'<')+
        ;
        OROOT    :    'jsp:root'
         ;  

The exception occurs when I print

        <jsp:root>ljlj</jsp:root>

in the interpreter and tell it to start from jsp rule.
it says (4!=5), according to the generated files this is OROOT=5 and 
OPENTAG=4.
Could anyone please help me with that???

Thanks a lot!

Ruth

From parrt at cs.usfca.edu  Tue Jun  5 11:51:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 11:51:22 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com>
References: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com>
Message-ID: <AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>


On Jun 5, 2007, at 11:18 AM, Wincent Colaiuta wrote:

> I'm trying to develop a parser for wiki markup and part of that  
> requires the recognition of URI tokens according to RFC 3986  
> (<http://www.ietf.org/rfc/rfc3986.txt>). The internal structure of  
> the URI isn't of any interest to me, I just want to get a token for  
> each URI, so I'm doing all this in the lexer.
>
> For testing purposes, I'm doing this first in a separate grammar,  
> which you can see here:
>
>   <http://pastie.textmate.org/68006>
>
> Basically this is the grammar from the RFC, but converted from the  
> ABNF used in that document (the ABNF is itself described in <http:// 
> www.ietf.org/rfc/rfc2234.txt>) to use ANTLR's EBNF notation, and  
> then with some minor tweaks to eliminate ANTLRWorks warnings about  
> ambiguity or analysis problems. As far as I can tell, however, the  
> grammar matches the description in the RFC.
>
> When I try to pipe this through ANTLR (v3 final) I get this:
>
>   Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
> space
>
> I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so on...
>
>   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g
>
> But to no avail... I got up to almost a gig and a half before swap  
> start thrashing itself to death and I had to kill the ANTLR  
> process. The funny thing is the grammar check works fine in  
> ANTLRWorks (no warnings printed to the console), it has no problems  
> showing me syntax diagrams, producing rule dependency graphs, or  
> handling input that I pass in via the interpreter.

That is really really strange. Are you sure that the commandline  
version is v3.0?

Ter


From parrt at cs.usfca.edu  Tue Jun  5 11:52:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 11:52:09 -0700
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <1181059740.7226.24.camel@rogue>
References: <1181024458.7226.0.camel@rogue> <46654932.3040709@gmx.de>
	<1181051914.7226.2.camel@rogue>
	<7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
	<1181059740.7226.24.camel@rogue>
Message-ID: <CB246961-379D-48B0-91C8-2C10A6F4D7CF@cs.usfca.edu>


On Jun 5, 2007, at 9:08 AM, Luke A. Guest wrote:

> On Tue, 2007-06-05 at 09:01 -0700, Terence Parr wrote:
>> Hi. :)  token channels are a way to avoid discarding tokens (still
>> send tokens to the parser) w/o having the parser see them.  So, you
>> could send whitespace on one channel, javadoc on another, and the
>> java tokens on the default channel.  Then actions can access the
>> hidden channels for translation.
>
> Ok, interesting idea (I spose). Not come across this before.

It neatly solves the problem of " how to why not throw away but avoid  
parsing whitespace and comments"? This is a seriously huge problem if  
you're trying to build something that merely tweaks input. I also  
have the token rewrite stream stuff now, which is often a better  
solution if you don't need to build trees.
Ter


From parrt at cs.usfca.edu  Tue Jun  5 11:52:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 11:52:53 -0700
Subject: [antlr-interest] ANTLRWorks tutorial
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046F815F7A@deimsg30.de.net.world>
References: <mailman.605.1181037924.2496.antlr-interest@antlr.org>
	<4A4BFB693434EA43A40E8C85DFE4046F815F7A@deimsg30.de.net.world>
Message-ID: <CF10AEEC-C5F3-4D05-B9A7-121F4CA42EFE@cs.usfca.edu>

Hi.  there was a link problem in the wiki.  Just go to the AW area of  
the website and click on the tutorials like.  Is it that hidden?

Ter


From jimi at temporal-wave.com  Tue Jun  5 11:52:48 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Jun 2007 11:52:48 -0700
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <46659901.9000502@gmx.de>
References: <1181024458.7226.0.camel@rogue> <46659901.9000502@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625267C@wavemachine.temporal-wave.com>

Karl,

You cannot execute predicates in interpretative mode in ANTLR. To test
you have to compile and debug it and see if you get the same problem. IF
you do then the issue is with your predicates most likely.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruth Karl
> Sent: Tuesday, June 05, 2007 10:10 AM
> To: ANTR Interest
> Subject: [antlr-interest] Grammar problem, probably silly....
> 
> Hi,
> 
> I have been trying quite a while now, but I keep getting a
> MismatchedTokenException with the following simplified test grammar:
> 
>         grammar JSP;
> 
>         options {
>             language = CSharp;
>             output = AST;
>         }
> 
> 
>         @members {
>              boolean xmlDoc = false;
>               boolean outputEnabled = false;
>         }
> 
> 
> 
>         @lexer::members {
>                 boolean tagMode = false;
>         }
> 
>         // Parser rules
>         jsp    :    oroot (content)* croot EOF
>             ;
>         oroot     :     OPENTAG OROOT CLOSETAG
>             ;
>         croot    :    OPENTAG '/jsp:root' CLOSETAG
>             ;
>         content    :     TEXT
>             ;
> 
> 
> 
>         // Lexer rules
>         OPENTAG     :     '<' { tagMode = true; }
>             ;
>         CLOSETAG     :     '>' { tagMode = false; }
>             ;
>         TEXT    :    {!tagMode}?=> (~'<')+
>         ;
>         OROOT    :    'jsp:root'
>          ;
> 
> The exception occurs when I print
> 
>         <jsp:root>ljlj</jsp:root>
> 
> in the interpreter and tell it to start from jsp rule.
> it says (4!=5), according to the generated files this is OROOT=5 and
> OPENTAG=4.
> Could anyone please help me with that???
> 
> Thanks a lot!
> 
> Ruth

From win at wincent.com  Tue Jun  5 11:56:23 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 5 Jun 2007 20:56:23 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
References: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com>
	<AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
Message-ID: <66B6CEE9-A97A-49B9-9A55-E4030DDACDF0@wincent.com>

El 5/6/2007, a las 20:51, Terence Parr escribi?:

> On Jun 5, 2007, at 11:18 AM, Wincent Colaiuta wrote:
>
>> When I try to pipe this through ANTLR (v3 final) I get this:
>>
>>   Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
>> space
>>
>> I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so  
>> on...
>>
>>   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g
>>
>> But to no avail... I got up to almost a gig and a half before swap  
>> start thrashing itself to death and I had to kill the ANTLR  
>> process. The funny thing is the grammar check works fine in  
>> ANTLRWorks (no warnings printed to the console), it has no  
>> problems showing me syntax diagrams, producing rule dependency  
>> graphs, or handling input that I pass in via the interpreter.
>
> That is really really strange. Are you sure that the commandline  
> version is v3.0?

I believe so:

$ java org.antlr.Tool --version
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007

$ echo $CLASSPATH
/usr/local/antlr/lib/antlr-3.0.jar:/usr/local/antlr/lib/ 
antlr-2.7.7.jar:/usr/local/antlr/lib/antlr-runtime-3.0.jar:/usr/local/ 
antlr/lib/stringtemplate-3.0.jar

$ ls -laF /usr/local/antlr/lib/*.jar
-rw-r--r--   1 wincent  wincent  445288 May 17 21:26 /usr/local/antlr/ 
lib/antlr-2.7.7.jar
-rw-r--r--   1 wincent  wincent  546514 May 17 21:26 /usr/local/antlr/ 
lib/antlr-3.0.jar
-rw-r--r--   1 wincent  wincent   92015 May 17 21:26 /usr/local/antlr/ 
lib/antlr-runtime-3.0.jar
-rw-r--r--   1 wincent  wincent  161716 May 17 21:26 /usr/local/antlr/ 
lib/stringtemplate-3.0.jar

Anything else I can check? Or secret commandline switches I can pass  
or environment variables I can set to get ANTLR to print more  
diagnostic info?

Cheers,
Wincent


From matthew.j.diehl at intel.com  Tue Jun  5 11:57:39 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 5 Jun 2007 11:57:39 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
Message-ID: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>

Lol, yeah, I tried your code with a limit of 1490M in ANTLRWorks 1.0.2,
and it got up to 1450M and just froze.  It steadily climbed to 1450MB,
too.  There's some kind've loop in there.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, June 05, 2007 11:51 AM
To: ANTLR mail-list
Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
space


On Jun 5, 2007, at 11:18 AM, Wincent Colaiuta wrote:

> I'm trying to develop a parser for wiki markup and part of that  
> requires the recognition of URI tokens according to RFC 3986  
> (<http://www.ietf.org/rfc/rfc3986.txt>). The internal structure of  
> the URI isn't of any interest to me, I just want to get a token for  
> each URI, so I'm doing all this in the lexer.
>
> For testing purposes, I'm doing this first in a separate grammar,  
> which you can see here:
>
>   <http://pastie.textmate.org/68006>
>
> Basically this is the grammar from the RFC, but converted from the  
> ABNF used in that document (the ABNF is itself described in <http:// 
> www.ietf.org/rfc/rfc2234.txt>) to use ANTLR's EBNF notation, and  
> then with some minor tweaks to eliminate ANTLRWorks warnings about  
> ambiguity or analysis problems. As far as I can tell, however, the  
> grammar matches the description in the RFC.
>
> When I try to pipe this through ANTLR (v3 final) I get this:
>
>   Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
> space
>
> I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so on...
>
>   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g
>
> But to no avail... I got up to almost a gig and a half before swap  
> start thrashing itself to death and I had to kill the ANTLR  
> process. The funny thing is the grammar check works fine in  
> ANTLRWorks (no warnings printed to the console), it has no problems  
> showing me syntax diagrams, producing rule dependency graphs, or  
> handling input that I pass in via the interpreter.

That is really really strange. Are you sure that the commandline  
version is v3.0?

Ter

From parrt at cs.usfca.edu  Tue Jun  5 12:04:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 12:04:04 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>
Message-ID: <B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu>

Hmm...there is supposed to be a fail safe in their bad times out if  
it takes too long to build a DFA. is the grammar very big?

  perhaps you guys can e-mail me or grammars separately and I can try  
them out.

Ter
On Jun 5, 2007, at 11:57 AM, Diehl, Matthew J wrote:

> Lol, yeah, I tried your code with a limit of 1490M in ANTLRWorks  
> 1.0.2,
> and it got up to 1450M and just froze.  It steadily climbed to 1450MB,
> too.  There's some kind've loop in there.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, June 05, 2007 11:51 AM
> To: ANTLR mail-list
> Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
> space
>
>
> On Jun 5, 2007, at 11:18 AM, Wincent Colaiuta wrote:
>
>> I'm trying to develop a parser for wiki markup and part of that
>> requires the recognition of URI tokens according to RFC 3986
>> (<http://www.ietf.org/rfc/rfc3986.txt>). The internal structure of
>> the URI isn't of any interest to me, I just want to get a token for
>> each URI, so I'm doing all this in the lexer.
>>
>> For testing purposes, I'm doing this first in a separate grammar,
>> which you can see here:
>>
>>   <http://pastie.textmate.org/68006>
>>
>> Basically this is the grammar from the RFC, but converted from the
>> ABNF used in that document (the ABNF is itself described in <http://
>> www.ietf.org/rfc/rfc2234.txt>) to use ANTLR's EBNF notation, and
>> then with some minor tweaks to eliminate ANTLRWorks warnings about
>> ambiguity or analysis problems. As far as I can tell, however, the
>> grammar matches the description in the RFC.
>>
>> When I try to pipe this through ANTLR (v3 final) I get this:
>>
>>   Exception in thread "main" java.lang.OutOfMemoryError: Java heap
>> space
>>
>> I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so  
>> on...
>>
>>   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g
>>
>> But to no avail... I got up to almost a gig and a half before swap
>> start thrashing itself to death and I had to kill the ANTLR
>> process. The funny thing is the grammar check works fine in
>> ANTLRWorks (no warnings printed to the console), it has no problems
>> showing me syntax diagrams, producing rule dependency graphs, or
>> handling input that I pass in via the interpreter.
>
> That is really really strange. Are you sure that the commandline
> version is v3.0?
>
> Ter


From jbb at acm.org  Tue Jun  5 12:04:29 2007
From: jbb at acm.org (John B. Brodie)
Date: Tue, 05 Jun 2007 15:04:29 -0400
Subject: [antlr-interest] How to resolve the left-recursion problem?
In-Reply-To: <006801c7a796$5f4f8b50$222815ac@objy.com> (message from YiQing
	Yang on Tue, 05 Jun 2007 10:24:28 -0700)
References: <006801c7a796$5f4f8b50$222815ac@objy.com>
Message-ID: <E1HveKT-0001VV-00@gecko>


> Thanks for your reply. 
Sure thing. hope the reply was useful...

> Forget about the scope name for now. Say that I want to recognize a series
> of name linked by ".", but I want to treat the "." as an operator which I
> want to associate some operation to it. I also want the . operator to be
> left associative. For example, "employer.ceo.name" is equivalent to
> ((employer.ceo).name) which generates the AST as 
> 
>          .
>        /   \
>       .     name
>     /     \
> employer  ceo
> 
> This is the only parser rule I can think of  that will do what I want. But
> it's left recursive.
> 
> attribute_expression
>   : NAME | dot_operator_exp
>   ;
> 
> dot_operator_exp
>   : attribute_expression DOT NAME
>   ;

ok. ast construction (as opposed to parse trees). have you tried:

attribute_expression : NAME (DOT^ NAME)* ;

> Thanks for any help,
You are welcome.
   -jbb

From win at wincent.com  Tue Jun  5 12:18:53 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 5 Jun 2007 21:18:53 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>
	<B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu>
Message-ID: <D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>

El 5/6/2007, a las 21:04, Terence Parr escribi?:

> Hmm...there is supposed to be a fail safe in their bad times out if  
> it takes too long to build a DFA. is the grammar very big?
>
>  perhaps you guys can e-mail me or grammars separately and I can  
> try them out.

The grammar can be viewed here:

   <http://pastie.textmate.org/68006>

Or directly downloaded here:

   <http://pastie.textmate.org/68006/download>

Also attaching it to this message, although I expect the list server  
will strip it...

I don't know if that would be considered very big by ANTLR standards  
though... I suspect not.

A bit more playing with the commandline I discovered the "-report", "- 
X" and "-Xdbgconversion" switches... Interestingly, if I pass the "- 
Xdbgconversion" switch, then ANTLR finishes in about 10 seconds and  
there is no out-of-memory exception. The generated lexer (in C) is  
huge though (nearly 300,000 lines). GCC compiles it without complaining.

But I think the size of the lexer indicates something bad is going on  
in the grammar. No idea why ANTLR would run out of memory without the

Cheers,
Wincent

-------------- next part --------------
A non-text attachment was scrubbed...
Name: RFC3986.g
Type: application/octet-stream
Size: 4082 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/2773ab0b/attachment.obj 
-------------- next part --------------


From matthew.j.diehl at intel.com  Tue Jun  5 12:19:57 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 5 Jun 2007 12:19:57 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <66B6CEE9-A97A-49B9-9A55-E4030DDACDF0@wincent.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C201FDE6AC@orsmsx417.amr.corp.intel.com>

I removed the DEC_OCTET and IPV6_ADDRESS, and it worked fine.  With
either of them it ran into the same problems again.  Maybe check these
two out.

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, June 05, 2007 12:04 PM
To: ANTLR mail-list
Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
space

Hmm...there is supposed to be a fail safe in their bad times out if  
it takes too long to build a DFA. is the grammar very big?

  perhaps you guys can e-mail me or grammars separately and I can try  
them out.

Ter
On Jun 5, 2007, at 11:57 AM, Diehl, Matthew J wrote:

> Lol, yeah, I tried your code with a limit of 1490M in ANTLRWorks  
> 1.0.2,
> and it got up to 1450M and just froze.  It steadily climbed to 1450MB,
> too.  There's some kind've loop in there.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, June 05, 2007 11:51 AM
> To: ANTLR mail-list
> Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
> space
>
>
> On Jun 5, 2007, at 11:18 AM, Wincent Colaiuta wrote:
>
>> I'm trying to develop a parser for wiki markup and part of that
>> requires the recognition of URI tokens according to RFC 3986
>> (<http://www.ietf.org/rfc/rfc3986.txt>). The internal structure of
>> the URI isn't of any interest to me, I just want to get a token for
>> each URI, so I'm doing all this in the lexer.
>>
>> For testing purposes, I'm doing this first in a separate grammar,
>> which you can see here:
>>
>>   <http://pastie.textmate.org/68006>
>>
>> Basically this is the grammar from the RFC, but converted from the
>> ABNF used in that document (the ABNF is itself described in <http://
>> www.ietf.org/rfc/rfc2234.txt>) to use ANTLR's EBNF notation, and
>> then with some minor tweaks to eliminate ANTLRWorks warnings about
>> ambiguity or analysis problems. As far as I can tell, however, the
>> grammar matches the description in the RFC.
>>
>> When I try to pipe this through ANTLR (v3 final) I get this:
>>
>>   Exception in thread "main" java.lang.OutOfMemoryError: Java heap
>> space
>>
>> I tried cranking up the heap size, 256 MB, 512 MB, 768 MB and so  
>> on...
>>
>>   java -Xms32m -Xmx2048m org.antlr.Tool RFC3986.g
>>
>> But to no avail... I got up to almost a gig and a half before swap
>> start thrashing itself to death and I had to kill the ANTLR
>> process. The funny thing is the grammar check works fine in
>> ANTLRWorks (no warnings printed to the console), it has no problems
>> showing me syntax diagrams, producing rule dependency graphs, or
>> handling input that I pass in via the interpreter.
>
> That is really really strange. Are you sure that the commandline
> version is v3.0?
>
> Ter

From alessnet at gmail.com  Tue Jun  5 12:33:44 2007
From: alessnet at gmail.com (Alessandro)
Date: Tue, 5 Jun 2007 21:33:44 +0200
Subject: [antlr-interest] BaseTreeAdaptor.becomeRoot throws
	NullPointerException
Message-ID: <be9e4140706051233m509fdc8fob84bc1ff87a6ba64@mail.gmail.com>

Hello,

I'm learning to use ANTLR thank to examples.
There is no error when I try to parse a syntactically correct text
with my genereted parser.
But when I give a specific erroneus text to my parser, there is an
exception when creating the AST.

adaptor.becomeRoot(atom10.getTree(), root_0);
throws "NullPointerException" because of failing rule
(NoViableAltException). This failing rule returns no AST, thus
atom10.getTree() == null.

Is this normal ?
Thanks :-)

My input text : "var ="
Here is my grammar (with -debug option) :


options {output=AST; }

tokens
{
	PROG_DEC='PROG_DEC';
	ASSIGN='ASSIGN';
	EXRP = 'EXPR';
	MULEXPR= 'MULEXPR';
}


prog:   stat+
	-> ^(PROG_DEC stat*);

stat:   expr NEWLINE {  /*expression*/ } -> ^(EXRP expr)
    |   ID EQUAL expr NEWLINE { /* assignation match?e*/ } -> ^(ASSIGN
ID ^(EXRP expr))

    |	NEWLINE!
    ;

expr
    :   (multExpr { /* multExpr */ } -> ^(MULEXPR multExpr))
	( op=OP
		s1=multExpr {/* +multExpr*/ }
	-> ^($op $expr ^(MULEXPR $s1))
	)*
    ;

multExpr
    :   atom^ {/*  atom ... */ } ('*'^ atom {/* * atom */ })*
    ;

atom
    :   INT^ {/* INT */}
    |   ID^  {/* ID */}
    |   PL expr PR {/* (expr) */} -> ^(EXRP expr)
    ;

ID  :   ('a'..'z'|'A'..'Z')+ ;
INT :   '0'..'9'+ ;
NEWLINE!:'\r'? '\n' ;
WS!  :   (' '|'\t')+ {skip();} ;
OP   	:	'+' | '-';
PL 	:	'(' ;
PR	:	')' ;
EQUAL 	:	'=' ;

From antlr at olivercomputing.com  Tue Jun  5 12:55:24 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Tue, 05 Jun 2007 15:55:24 -0400
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap  space
In-Reply-To: <AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
References: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com>
	<AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
Message-ID: <20070605211211.596D63C6010D@newmach.olivercomputing.com>

Ter wrote
>That is really really strange. Are you sure that the 
>commandline  version is v3.0?

I would note that it appears to match my recent experiences, as I've 
written here within the past few days: grammars which have no 
reported errors using the latest version of Antlrworks that end up 
with out of memory problems. I already posted the code section that's 
responsible in my case, identified from running the code as an 
Eclipse project to assist in the debugging.



From jimi at temporal-wave.com  Tue Jun  5 13:05:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Jun 2007 13:05:01 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap  space
In-Reply-To: <20070605211211.596D63C6010D@newmach.olivercomputing.com>
References: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com><AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
	<20070605211211.596D63C6010D@newmach.olivercomputing.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252681@wavemachine.temporal-wave.com>

I think that this may well be co-incidence. The previous poster has
written a parser entirely as a lexer and that is why it is taking so
long to produce the output. As another poster said, if you take you one
or two the lexer fragment rules, then the lexer generation can breath
and it doesn't take so long. It looks to me like that is the issue with
the other grammar. 

While I cannot be certain, from what you said you were trying to do, I
think you were seeing a similar problem, with trying to make the lexer
too complicated and having non fragment lexer rules embedded in other
rules and so on. Hence you do not see these issue until you try to
generate the lexer. If ANTLRWorks were to try and find out if this would
happen, it would, guess what, have to pretty much generate the lexer.

If you are trying to specify things that look suspiciously like syntax
in the lexer, then you are doing it in the wrong place basically. Just
list all the thing s that can be tokenized, then tell the parser what is
and is not a valid order.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Phil Oliver
> Sent: Tuesday, June 05, 2007 12:55 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
> space
> 
> Ter wrote
> >That is really really strange. Are you sure that the
> >commandline  version is v3.0?
> 
> I would note that it appears to match my recent experiences, as I've
> written here within the past few days: grammars which have no
> reported errors using the latest version of Antlrworks that end up
> with out of memory problems. I already posted the code section that's
> responsible in my case, identified from running the code as an
> Eclipse project to assist in the debugging.
> 


From parrt at cs.usfca.edu  Tue Jun  5 13:57:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 13:57:03 -0700
Subject: [antlr-interest] blogging about book etc...
Message-ID: <B58A9967-CA24-4183-96D0-5D1B51F9EBC0@cs.usfca.edu>

Howdy.  As you know, the ANTLR v3 book came out in print a few weeks  
ago. :) A number of you have sent me good feedback and comments about  
the book and I'm wondering if I could impose upon you to add comments  
at the Amazon site or even full book reviews:

http://www.amazon.com/Definitive-ANTLR-Reference-Domain-Specific- 
Languages/dp/0978739256

You can either blog about it and then add a comment and a pointer to  
your blog from the Amazon site or directly comment on the Amazon site.

It is my understanding that having people write about the book has a  
huge influence on people purchasing that book.  I would really  
appreciate any information, comments, details, etc. that you feel are  
appropriate to post.

Thanks in advance,
Terence

From patrick at patmas.net  Tue Jun  5 14:01:42 2007
From: patrick at patmas.net (Patrick Masselink)
Date: Tue, 5 Jun 2007 23:01:42 +0200
Subject: [antlr-interest] parser, tree grammar and scopes
Message-ID: <200706052301.43696.patrick@patmas.net>

Hi,

First, let me say hello to you all, since I'm new to the list.
I'm working on a Jasmin bytecode generator, similar to the one discussed in 
the excellent book "The Definitive ANTLR Reference". Though the examples in 
the book have proven very useful, the project i'm working on is more complex, 
it can be tought of as a combination of the Cminus example and the Expression 
bytecode generator, and then some. I understand the individual grammars but 
I'm having trouble combining the various things in my own grammar. As I'm new 
to antlr, jasmin and don't have much experience to parser construction in 
general either, keeping track of things is proving quite difficult.
My approach thus far has been to use a parser grammar that outputs an AST, 
then use a tree grammar and StringTemplate to emit Jasmin bytecode.
Specific questions I have:
Using dynamic attribute scopes I plan to keep track of variables so I can tell 
if a var is defined in the current scope. There is to be a global (file) 
scope and local function, loop (for, while) and codeblock ({...}) scopes. 
Should I discard the tokens for a variable that isn't defined in the scope, 
so they don't end up in the tree, or should I just add everything to the tree 
and figure things out in the tree parser? I think I should process the input 
as much as possible in the input parser so I end up with a optimized tree 
right? Secondly I have a problem with where to add a new scope to the 'scopes 
stack' Take for instance a function definition like this:
int foo(int i, char j) {
	int k;
	....
	{
		int k;
	}
}
The function arguments and the variables declared inside the function are 
local to the function. So I need to define a new scope in the function rule 
and add the arguments to that scope. Then there's a code block, but variables 
in there should be added to the function scope instead of a new scope. But 
the codeblock inside the function needs a new scope. In short, I need to know 
what rules preceeds the codeblock rule, if it is the function rule use the 
function scope, if not add a new scope. Is this at all possible or should I 
change my grammar rules? Up until now I have simple rules for functions, 
loops etc, and refer to the codeblock rule for stuff inside them.

Hopefully above text isn't too confusing ;). Finally I'd like to ask if 
someone can point me to any advanced parser + tree grammars that contain lots 
of actions, scopes etc, just to see how it's supposed to be glued together. I 
found out the best way I learn is by example. I've seen most stuff on the 
antlr website/wiki, there're definitely some complex grammars but I haven't 
found one that builds an AST and includes the tree grammar and uses complex 
actions and other more exotic antlr features.

Regards, Patrick.

From aliaazimi at yahoo.com  Tue Jun  5 14:03:52 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 5 Jun 2007 14:03:52 -0700 (PDT)
Subject: [antlr-interest] Connection error!
Message-ID: <885529.32512.qm@web58111.mail.re3.yahoo.com>

Dear all,
   
  When I want to invoke debugger (debug a grammer) on ANTLRWorks, I get the following error:
  "Cannot launch the debugger.
  Time-out waiting to connect to the remote parser". Thus I am not able to use the features like" play, stop, etc". Could you please help?
   
  Regards, 
   
  Al

       
---------------------------------
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/ea7e66d3/attachment.html 

From win at wincent.com  Tue Jun  5 14:07:51 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 5 Jun 2007 23:07:51 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap  space
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252681@wavemachine.temporal-wave.com>
References: <9516FA5D-C8FA-4499-9C3B-DA60766CEE9F@wincent.com><AFF5E0FC-1D61-4F59-B57F-EF538DA523C0@cs.usfca.edu>
	<20070605211211.596D63C6010D@newmach.olivercomputing.com>
	<B36CCC332A32904F8FA3DE134A235336252681@wavemachine.temporal-wave.com>
Message-ID: <4D7885AC-A673-41D2-9DFA-52397CD9A51B@wincent.com>

El 5/6/2007, a las 22:05, Jim Idle escribi?:

> I think that this may well be co-incidence. The previous poster has
> written a parser entirely as a lexer and that is why it is taking so
> long to produce the output. As another poster said, if you take you  
> one
> or two the lexer fragment rules, then the lexer generation can breath
> and it doesn't take so long. It looks to me like that is the issue  
> with
> the other grammar.
>
> While I cannot be certain, from what you said you were trying to do, I
> think you were seeing a similar problem, with trying to make the lexer
> too complicated and having non fragment lexer rules embedded in other
> rules and so on. Hence you do not see these issue until you try to
> generate the lexer. If ANTLRWorks were to try and find out if this  
> would
> happen, it would, guess what, have to pretty much generate the lexer.
>
> If you are trying to specify things that look suspiciously like syntax
> in the lexer, then you are doing it in the wrong place basically. Just
> list all the thing s that can be tokenized, then tell the parser  
> what is
> and is not a valid order.

The reason I approached it this way is like I said in my original post:

> The internal structure of the URI isn't of any interest to me, I  
> just want to get a token for each URI, so I'm doing all this in the  
> lexer.

But I can certainly try doing less in the lexer and more in the  
parser if it will solve these problems.

One of the reasons why I wanted URIs to be returned as a single token  
is that it would make the rest of the parser/lexer simpler... the  
sample grammar I posted was just for testing purposes, recognizing  
URIs in isolation, but this is all destined for a wiki markup  
translator, of which recognizing URIs will be just one small part...

Cheers,
Wincent




From win at wincent.com  Tue Jun  5 14:16:50 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 5 Jun 2007 23:16:50 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C201FDE6AC@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE6AC@orsmsx417.amr.corp.intel.com>
Message-ID: <AA60D9E5-FF82-4311-9DA0-329F9ADF4539@wincent.com>

El 5/6/2007, a las 21:19, Diehl, Matthew J escribi?:

> I removed the DEC_OCTET and IPV6_ADDRESS, and it worked fine.  With
> either of them it ran into the same problems again.  Maybe check these
> two out.

Thanks very much for investigating Matt. That's very helpful...

I'd really like to understand the *why* of all this, so that I can  
recognize and avoid this type of problem in the future. Any idea on  
what it might be about those two rules that are causing ANTLR to choke?

Cheers,
Wincent


From parrt at cs.usfca.edu  Tue Jun  5 14:23:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 14:23:25 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>
	<B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu>
	<D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
Message-ID: <1E096248-BC7C-49B9-831C-4768877F9520@cs.usfca.edu>

Cool. added bug.
Ter

http://www.antlr.org:8888/browse/ANTLR-130

From antlr at olivercomputing.com  Tue Jun  5 14:25:56 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Tue, 05 Jun 2007 17:25:56 -0400
Subject: [antlr-interest] Book review
Message-ID: <20070605224229.2C8DC3C6010D@newmach.olivercomputing.com>

I just posted this review to Amazon, FYI.

------------------

ANTLR (http://www.antlr.org/) is a useful free tool to create 
combined lexer/parsers for a given formal grammar definition, 
integrated with customized target language code. This book, written 
by the author of ANTLR, covers version 3, a recent rewrite of the 
system. Writing complex grammars is not an easy task, and ANTLR 
itself has its own difficulties; there is online documentation but 
it's not as detailed. I've only just started to use ANTLR as part of 
a larger project. Although I haven't yet read 100% of the book, the 
parts that I've read to date already justify the purchase. My chief 
complaint is that the index seems a bit weak (incomplete).

The bottom line is this: if you plan to spend any significant time 
with ANTLR v3, the book is an indispensable resource that will easily 
pay for itself. 


From parrt at cs.usfca.edu  Tue Jun  5 14:26:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 14:26:08 -0700
Subject: [antlr-interest] Connection error!
In-Reply-To: <885529.32512.qm@web58111.mail.re3.yahoo.com>
References: <885529.32512.qm@web58111.mail.re3.yahoo.com>
Message-ID: <FF0E8E3E-071A-4A76-A702-E2883191848E@cs.usfca.edu>

1.0.1 or 1.0.2 AW?
Ter
On Jun 5, 2007, at 2:03 PM, ali azimi wrote:

> Dear all,
>
> When I want to invoke debugger (debug a grammer) on ANTLRWorks, I  
> get the following error:
> "Cannot launch the debugger.
> Time-out waiting to connect to the remote parser". Thus I am not  
> able to use the features like" play, stop, etc". Could you please  
> help?
>
> Regards,
>
> Al
>
> Fussy? Opinionated? Impossible to please? Perfect. Join Yahoo!'s  
> user panel and lay it on us.


From dirty at apple.com  Tue Jun  5 16:01:55 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 5 Jun 2007 16:01:55 -0700
Subject: [antlr-interest] Passing information from main program to lexer,
	parser and tree walker
Message-ID: <57AA5CFB-37F8-49C2-9BF1-57DA15783260@apple.com>

I'm trying to figure out how to pass information from my main driver  
program to the TLexer, TParser and TWalker objects I've created.

Since these things are mostly auto-generated, I can't change the  
constructors to take objects which represent the information.

I've been looking at Tool.java, but it's extremely complicated and  
hasn't been much of a help.

How do other people handle this?

Cameron Esfahani
dirty at apple.com

"Americans are very skilled at creating a custom meaning from  
something that's mass-produced."

Ann Powers


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/c91abe62/attachment.html 

From dirty at apple.com  Tue Jun  5 16:28:59 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 5 Jun 2007 16:28:59 -0700
Subject: [antlr-interest] Passing information from main program to lexer,
	parser and tree walker
In-Reply-To: <ee873c070706051624x27616136pa0796364b582c641@mail.gmail.com>
References: <57AA5CFB-37F8-49C2-9BF1-57DA15783260@apple.com>
	<ee873c070706051624x27616136pa0796364b582c641@mail.gmail.com>
Message-ID: <4DEC0E98-215D-4148-94FD-DC4586FDD212@apple.com>

So, for example, I could create an InformationBuffer class, and then  
add a setInformationBuffer/getInformationBuffer pair of routines to  
the lexer, parser and tree walker.

After creating the lexer, parser and tree walker, I can call  
setInformationBuffer() to pass them the relevant information:

		ANTLRInputStream		input = new ANTLRInputStream( System.in );

		// create a lexer that feeds off of input CharStream
		TLexer					lexer = new TLexer( input );

		.....
		lexer.setInformationBuffer( info );

Something like that?

On Jun 5, 2007, at 4:24 PM, Alexandre Porcelli wrote:

> You can create some set and get methods using the members directive
> (http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to 
> +ANTLR+3#MigratingfromANTLR2toANTLR3- 
> Codesectionformembersmustnowbelabelled).
> So... using the get and sets you can pass data from a class to other.

Cameron Esfahani
dirty at apple.com

"You only live once, and the way I live, once is enough"

Frank Sinatra



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/47ef87c8/attachment-0001.html 

From rerdavies at rogers.com  Tue Jun  5 16:33:47 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Tue, 5 Jun 2007 19:33:47 -0400
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
References: <1181024458.7226.0.camel@rogue>
	<46654932.3040709@gmx.de><1181051914.7226.2.camel@rogue>
	<7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
Message-ID: <5CFD7D70447B48D99AF27A6E977DB0C5@GWB>

Are there ways to attach a parser to a channel other than default?

I'm working on a grammar that has need of a javaoc-like facilities, and a 
C#-style preprocessor (i.e. very simple #if's and #defines); and if channels 
actually do anything right now, I'm pretty certain I could make use of it. 
Currently, I'm pushing token text for ("#'  (~LF)* LF ) out to a secondary 
parser. But I can't help feeling that there's a better way to do this.

(Absolutely loving ANTLR 3, btw. After all the grim alternatives -- LL(k), 
LALR(1) and/or hopelessly license-encumbered -- ANTLR v3 is a marvelous 
change. In my opinion, the release of ANTLR v3 is  one of the great 
landmarks in the recent history of software development. Very exciting! 
Congratulations on your release.).

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "ANTR Interest" <antlr-interest at antlr.org>
Sent: Tuesday, June 05, 2007 12:01 PM
Subject: Re: [antlr-interest] What are channels and what are they used for?


> Hi. :)  token channels are a way to avoid discarding tokens (still  send 
> tokens to the parser) w/o having the parser see them.  So, you  could send 
> whitespace on one channel, javadoc on another, and the  java tokens on the 
> default channel.  Then actions can access the  hidden channels for 
> translation.
>
> Ter
>
> On Jun 5, 2007, at 6:58 AM, Luke A. Guest wrote:
>
>> On Tue, 2007-06-05 at 13:29 +0200, Johannes Luber wrote:
>>> Luke A. Guest wrote:
>>>> Hi,
>>>>
>>>> I think the subject says it all really, I have come across it,  but 
>>>> don't
>>>> know what it's all about? Can anyone enlighten me?
>>>
>>> The channels are supposed to make tokens invisible so one doesn't  have
>>> to deal e.g. with whitespace in the parser. It is possible to access
>>> those hidden tokens, but I didn't figure out how to to do that  exactly.
>>
>> Is that all it's used for? I would've thought there'd be more to it  than
>> that.
>>
>> Thanks,
>> Luke.
>>
>>
> 


From yiqing at objectivity.com  Tue Jun  5 16:39:21 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Tue, 5 Jun 2007 16:39:21 -0700
Subject: [antlr-interest] Problem of having "+" or "-" used both as number
	signs and operator symbols
Message-ID: <006f01c7a7ca$be9d22f0$222815ac@objy.com>

Hi,

 

I need to write a grammar for a general form of expression where the
operator symbols are not predefined and operators semantics are not built
into the grammar . Basically the operator symbols could be any combination
of characters from a fixed set of symbolic characters. 

 

Now I have a problem for the "+" or "-". In the parser, they are string
literals used as signs of integer or float ; In the lexer, they are
SYMBOL_CHARCTERs intentionly to form unary or binary operator symbols "+" or
"-". But I found that once they are defined as string literals, they can
never be recognized as OPERATOR_SYMBOL. In other words, in the following
grammar, 3+4 is not a valid expression any more.

 

Any idea how could I solve this problem? Please help!

 

Thanks a lot,

 

Yiqing

 

 

----------------------------------------------------------------------------
-----------------------------------------------------

Parser Rules:

 

expression

  : unary_operator_exp

  | (atom_expression OPERATOR_SYMBOL) => binary_operator_exp

  | atom_expression

  ;

 

atom_expression

  : literal_expression

  | LPAREN expression RPAREN

  ;

 

unary_operator_exp

  :  OPERATOR_SYMBOL atom_expression 

  ;

 

binary_operator_exp

  :  atom_expression bo:OPERATOR_SYMBOL atom_expression 

  ;

 

literal_expression

  : unsigned_integer_literal

  | integer_literal 

  | float_literal 

  | bool_literal 

  | string_literal 

  ;

 

unsigned_integer_literal :  DECIMAL ;

 

integer_literal: ("+" | "-" ) DECIMAL;

 

float_literal: ("+" | "-" )? FLOAT;

 

.

 

Lexer Rules:

 

OPERATOR_SYMBOL: (SYMBOL_CHARCTER)+;

 

protected 

SYMBOL_CHARCTER: '+' | '-' | '*' | '%' | '=' | '<' | '>' | '|' | '~' | '@' |
'&' | '#' | '$'  | '^';

 

----------------------------------------------------------------------------
-------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/41d0fc48/attachment.html 

From porcelli at uol.com.br  Tue Jun  5 16:43:05 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Tue, 5 Jun 2007 20:43:05 -0300
Subject: [antlr-interest] Passing information from main program to lexer,
	parser and tree walker
In-Reply-To: <ee873c070706051642v571d4bb8g61d58aa7b2fc31b5@mail.gmail.com>
References: <57AA5CFB-37F8-49C2-9BF1-57DA15783260@apple.com>
	<ee873c070706051624x27616136pa0796364b582c641@mail.gmail.com>
	<4DEC0E98-215D-4148-94FD-DC4586FDD212@apple.com>
	<ee873c070706051642v571d4bb8g61d58aa7b2fc31b5@mail.gmail.com>
Message-ID: <ee873c070706051643g244a78e5l8dd834020b18a9ee@mail.gmail.com>

Yes you can... Just to keep it clear: this solution will not enable
you to control the Lexer states with Parser information...
This solution is a simple way to share data...

On 6/5/07, Cameron Esfahani <dirty at apple.com> wrote:
> > So, for example, I could create an InformationBuffer class, and then add a
> > setInformationBuffer/getInformationBuffer pair of routines
> > to the lexer, parser and tree walker.
> >
> > After creating the lexer, parser and tree walker, I can call
> > setInformationBuffer() to pass them the relevant information:
> >
> >  ANTLRInputStream input = new ANTLRInputStream( System.in );
> >
> >  // create a lexer that feeds off of input CharStream
> >  TLexer lexer = new TLexer( input );
> >
> >  .....
> >  lexer.setInformationBuffer( info );
> >
> > Something like that?
> >
> >
> > On Jun 5, 2007, at 4:24 PM, Alexandre Porcelli wrote:
> >
> >
> > You can create some set and get methods using the members directive
> >
> > (http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3#MigratingfromANTLR2toANTLR3-Codesectionformembersmustnowbelabelled).
> >
> > So... using the get and sets you can pass data from a class to other.
> >
> > Cameron Esfahani
> > dirty at apple.com
> >
> > "You only live once, and the way I live, once is enough"
> >
> > Frank Sinatra
> >
> >
> >
> >
>

From rerdavies at rogers.com  Tue Jun  5 16:44:09 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Tue, 5 Jun 2007 19:44:09 -0400
Subject: [antlr-interest] How to resolve the left-recursion problem?
In-Reply-To: <006801c7a796$5f4f8b50$222815ac@objy.com>
References: <006801c7a796$5f4f8b50$222815ac@objy.com>
Message-ID: <E293493FF4184BD9A00FF01B2B9476FF@GWB>

> attribute_expression
>  : NAME | dot_operator_exp
>  ;
>
> dot_operator_exp
>  : attribute_expression DOT NAME
>  ;


The generic way to deal with left-recursive structures is to convert them to 
match the right side with EBNF loops: "(something)*". See page 275 of the 
PDF manual for more details.

attribute_expression
      :      NAME  ('.' NAME) *
      ;

After using LALR grammars this seemed very unnatural, at first. But, after 
gradually mind-shifting to the LL mind-set, this now seems very natural. And 
very easy to deal with when you get to actually processing the grammar! To 
convert this to AST, for example, you write:

attribute_expression
      :      NAME  ('.'^ NAME) *
      ;

and you will get exactly the tree that you want: a left-recursive tree 
structure.



> attribute_expression
>  : NAME | dot_operator_exp
>  ;
>
> dot_operator_exp
>  : attribute_expression DOT NAME
>  ;
>
> Thanks for any help,
>
> Yiqing
>
> -----Original Message-----
> From: John B. Brodie [mailto:jbb at acm.org]
> Sent: Monday, June 04, 2007 7:33 PM
> To: yiqing at objectivity.com
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to resolve the left-recursion problem?
>
> Greetings!
>
>>I need to write a parser rule for an extended class attribute namme
>>expression. It could be simply a single attribute name with the class 
>>scope
>>as option (persion::name) or a series of attribute names chained by "."
> (ie,
>>"employer.ceo.name": "ceo" is an attribute of "employer" corresponded
> class.
>>"name" is an attribute of "ceo" corresponded class).
>
> does this work for you?
>
> attribute_expression : NAME ( ( '::' NAME ) | ( '.' NAME )+ )? ;
>
> (e.g. either we have a single pair of NAMEs separated by :: or we have a
> list
> of names separated by a . or we have just a single NAME)
>
>>I wrote the parser rules as following which contains left-recursion. I do
>>not know how to resolve this problem without changing the semantic. I 
>>would
>>appreciate if anyone could help.
>>
>>-----------------------------------------------------
>>attribute_expression
>>  : attribute_name
>>  | dot_operator_exp
>>  ;
>>
>>dot_operator_exp
>>  : attribute_expression DOT attribute_name
>>  ;
>>
>>attribute_name
>>  : n1:NAME (SCOPE n2:NAME)?
>>  ;
>>------------------------------------------------------
>
> these rules seem (to me) to permit phrases such as
>   a.b::c.d.e::f.g
> or
>   h.i::j
> or
>   k::l.m
>
> is this later stuff what you want? (e.g. any sequence of dot separated 
> names
> which are in turn separated by '::')
>
> if so maybe try these two rules
>
> attribute_expression : dotted_name_list ( SCOPE dotted_name_list )* ;
> dotted_name_list : NAME ( DOT NAME )* ;
>
> All of the above are UNTESTED, sorry; but I hope this helps...
>   -jbb
>
>
> 


From parrt at cs.usfca.edu  Tue Jun  5 16:56:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jun 2007 16:56:40 -0700
Subject: [antlr-interest] What are channels and what are they used for?
In-Reply-To: <5CFD7D70447B48D99AF27A6E977DB0C5@GWB>
References: <1181024458.7226.0.camel@rogue>
	<46654932.3040709@gmx.de><1181051914.7226.2.camel@rogue>
	<7235CE06-1CAE-4D9B-8A19-7F0F945589E1@cs.usfca.edu>
	<5CFD7D70447B48D99AF27A6E977DB0C5@GWB>
Message-ID: <AE4379CB-F021-4993-A628-6A9CC16418D8@cs.usfca.edu>


On Jun 5, 2007, at 4:33 PM, Robin Davies wrote:

> Are there ways to attach a parser to a channel other than default?
>
> I'm working on a grammar that has need of a javaoc-like facilities,  
> and a C#-style preprocessor (i.e. very simple #if's and #defines);  
> and if channels actually do anything right now, I'm pretty certain  
> I could make use of it. Currently, I'm pushing token text for  
> ("#'  (~LF)* LF ) out to a secondary parser. But I can't help  
> feeling that there's a better way to do this.

I think that you can tell the token stream which channel to listen to:

	public CommonTokenStream(TokenSource tokenSource, int channel) {
		this(tokenSource);
		this.channel = channel;
	}

use that ctor and I should be happy.  The parser actually will have  
no idea what channel is listening to. :)

> (Absolutely loving ANTLR 3, btw. After all the grim alternatives --  
> LL(k), LALR(1) and/or hopelessly license-encumbered -- ANTLR v3 is  
> a marvelous change. In my opinion, the release of ANTLR v3 is  one  
> of the great landmarks in the recent history of software  
> development. Very exciting! Congratulations on your release.).

Thanks! There are number of people who have worked very hard on this  
release, including all of the target release people and of course  
Jean Bovet with his ANTLRWorks.

Ter


From daikf at yahoo.com.cn  Tue Jun  5 18:46:51 2007
From: daikf at yahoo.com.cn (=?iso-8859-1?Q?=B4=F7_=BF=C6=B7=E5?=)
Date: Wed, 6 Jun 2007 09:46:51 +0800 (CST)
Subject: [antlr-interest] How to handle this problem:use varibles after
	declaration
Message-ID: <983895.75759.qm@web15210.mail.cnb.yahoo.com>

Dear Mr.

I'm a college student in China, and I'm now studing the ANTLR. But  
 I don't know how to handle the "Semantic Exceptions", would you  
 like to send me more examples about the "Error Handling and  
 Recovery ",especially the "Semantic Exceptions" ,such as you must  
 declare a variable before using it.

Thank you very much !

                              sincerely
                              Dai Kefeng

 
                            E-mail?daikf at yahoo.com.cn
                            QQ:80316692
                            Cell phone:13986124813
                            MSN:dkfeng at msn.com


       
____________________________________________________________________________________
Moody friends. Drama queens. Your life? Nope! - their life, your story. Play Sims Stories at Yahoo! Games.
http://sims.yahoo.com/  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/ec1a9dde/attachment.html 

From dirty at apple.com  Tue Jun  5 19:18:00 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 5 Jun 2007 19:18:00 -0700
Subject: [antlr-interest] Inappropriate fragment rules
Message-ID: <81A7072E-23BF-4DD5-98C4-48C2F9976674@apple.com>

I had a fragment rule which was eventually used by a non-lexer rule.   
I had forgotten to remove the "fragment" keyword until all crap went  
wrong.

Was:
fragment SIZE_QUALIFIER
	:	'.' ( 'u' | 'U' )? ( 'b' | 'B' )
	|	'.' ( 'u' | 'U' )? ( 'w' | 'W' )
	|	'.' ( 'u' | 'U' )? ( 'l' | 'L' )
	|	'.' ( 'u' | 'U' )? ( 'q' | 'Q' )
	;

NUMBER
	:	BINARY_LITERAL SIZE_QUALIFIER?
	|	DECIMAL_LITERAL SIZE_QUALIFIER?
	|	HEX_LITERAL SIZE_QUALIFIER?
	;

value
	:	NUMBER -> ^( NUM NUMBER )

Became:

SIZE_QUALIFIER
	:	'.' ( 'u' | 'U' )? ( 'b' | 'B' )
	|	'.' ( 'u' | 'U' )? ( 'w' | 'W' )
	|	'.' ( 'u' | 'U' )? ( 'l' | 'L' )
	|	'.' ( 'u' | 'U' )? ( 'q' | 'Q' )
	;

NUMBER
	:	BINARY_LITERAL
	|	DECIMAL_LITERAL
	|	HEX_LITERAL
	;

number_size
	:	NUMBER SIZE_QUALIFIER? -> ^( SIZE NUMBER )
	;

value
	:	number_size -> ^( NUM number_size )

It seems to me that ANTLR should give an error if it detects this...

Cameron Esfahani
dirty at apple.com

"In the elder days of Art, Builders wrought with greatest care each  
minute and unseen part; For the gods see everywhere."

"The Builders", H. W. Longfellow



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/18bd2c84/attachment.html 

From dirty at apple.com  Tue Jun  5 19:41:13 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 5 Jun 2007 19:41:13 -0700
Subject: [antlr-interest] Using rewrite rules with conditionals...
Message-ID: <02A50A70-7084-4E7A-9D70-4009F20B10D9@apple.com>

I had the following construct in my parser:

size_qualifier
	:	'.' ( 'u' | 'U' )? ( 'b' | 'B' ) -> SIZE_8
	|	'.' ( 'u' | 'U' )? ( 'w' | 'W' ) -> SIZE_16
	|	'.' ( 'u' | 'U' )? ( 'l' | 'L' ) -> SIZE_32
	|	'.' ( 'u' | 'U' )? ( 'q' | 'Q' ) -> SIZE_64
	;

number_size
	:	NUMBER size_qualifier?
	;

The idea is that I'll encode in the AST the size of the number.  But,  
if the input doesn't supply one, then I want to put in a default  
size: SIZE_DEFAULT.

This is the only thing I could come up with:

size_qualifier
	:	'.' ( 'u' | 'U' )? ( 'b' | 'B' ) -> SIZE_8
	|	'.' ( 'u' | 'U' )? ( 'w' | 'W' ) -> SIZE_16
	|	'.' ( 'u' | 'U' )? ( 'l' | 'L' ) -> SIZE_32
	|	'.' ( 'u' | 'U' )? ( 'q' | 'Q' ) -> SIZE_64
	;

number_size
	:	NUMBER size_qualifier	-> ^( size_qualifier NUMBER )
	|	NUMBER					-> ^( SIZE_DEFAULT NUMBER )
	;

It seems to work, but I'm wondering if there is a better way of doing  
it?  If size_qualifier exists, then encode that into the tree, if  
not, use something I supply.

Cameron Esfahani
dirty at apple.com

"With or without religion, good people can behave well and bad people  
can do evil; but for good people to do evil - that takes religion."

Steven Weinberg



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070605/2397c783/attachment.html 

From aliaazimi at yahoo.com  Wed Jun  6 02:04:55 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 6 Jun 2007 02:04:55 -0700 (PDT)
Subject: [antlr-interest] Error!
Message-ID: <900137.25048.qm@web58105.mail.re3.yahoo.com>

Hi,
  could you please tell me why when I click on the Debug button on the ANTLRWorks I get
   an error message.(I have enclosed a snapshot of the error message)?
   
  Regards,
  Al

       
---------------------------------
Moody friends. Drama queens. Your life? Nope! - their life, your story.
 Play Sims Stories at Yahoo! Games. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/d2a67d2b/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Error.doc
Type: application/msword
Size: 32768 bytes
Desc: 4259356107-Error.doc
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/d2a67d2b/attachment-0001.doc 

From jaluber at gmx.de  Wed Jun  6 02:20:30 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Jun 2007 11:20:30 +0200
Subject: [antlr-interest] Problem of having "+" or "-" used both as
 number signs and operator symbols
In-Reply-To: <006f01c7a7ca$be9d22f0$222815ac@objy.com>
References: <006f01c7a7ca$be9d22f0$222815ac@objy.com>
Message-ID: <46667C5E.5050404@gmx.de>

YiQing Yang wrote:
> Hi,
> 
>  
> 
> I need to write a grammar for a general form of expression where the
> operator symbols are not predefined and operators semantics are not
> built into the grammar . Basically the operator symbols could be any
> combination of characters from a fixed set of symbolic characters.
> 
>  
> 
> Now I have a problem for the ?+? or ?-?. In the parser, they are string
> literals used as signs of integer or float ; In the lexer, they are
> SYMBOL_CHARCTERs intentionly to form unary or binary operator symbols
> ?+? or ?-?. But I found that once they are defined as string literals,
> they can never be recognized as OPERATOR_SYMBOL. In other words, in the
> following grammar, 3+4 is not a valid expression any more.
> 
>  
> 
> Any idea how could I solve this problem? Please help!

Usually this kind of problem is caused by a wrong ordering of the
grammar rules. In your case I would move the lexer rules to the top and
try again.

Best regards,
Johannes Luber

From win at wincent.com  Wed Jun  6 03:03:44 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 6 Jun 2007 12:03:44 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com>
	<B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu>
	<D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
Message-ID: <FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>

El 5/6/2007, a las 21:18, Wincent Colaiuta escribi?:

> El 5/6/2007, a las 21:04, Terence Parr escribi?:
>
>> Hmm...there is supposed to be a fail safe in their bad times out  
>> if it takes too long to build a DFA. is the grammar very big?
>>
>>  perhaps you guys can e-mail me or grammars separately and I can  
>> try them out.
>
> The grammar can be viewed here:
>
>   <http://pastie.textmate.org/68006>
>
> Or directly downloaded here:
>
>   <http://pastie.textmate.org/68006/download>

Ok, so I've done a bit more investigation with the following results:

- removing references to the IPV6_ADDRESS rule is enough to prevent  
the out-of-memory errors; this is a nasty rule and I need to find  
some better way of describing it: for the record the original ABNF  
grammar in the RFC describes it as follows (not very pretty):

       IPv6address =                            6( h16 ":" ) ls32
                   /                       "::" 5( h16 ":" ) ls32
                   / [               h16 ] "::" 4( h16 ":" ) ls32
                   / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
                   / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
                   / [ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
                   / [ *4( h16 ":" ) h16 ] "::"              ls32
                   / [ *5( h16 ":" ) h16 ] "::"              h16
                   / [ *6( h16 ":" ) h16 ] "::"

       ls32        = ( h16 ":" h16 ) / IPv4address

       h16         = 1*4HEXDIG

- even after removing the IPV6_ADDRESS rule the generated lexer is  
still huge (290K lines of C, or 181K lines of Java)

- visually inspecting the generated file shows that most of the  
methods are no more than a few hundred lines long and the vast  
majority of them are much less

- the vast bulk of the file is occupied by the HOST rule (179K lines  
of Java):

fragment HOST
   : IP_LITERAL
   | (IPV4_ADDRESS)=> IPV4_ADDRESS
   | REG_NAME
   ;

- removing the IPV4_ADDRESS subrule causes the line count for the  
lexer to drop down to a much more reasonable 2K lines of Java; for  
reference, the IPV4_ADDRESS subrule is as follows:

fragment IPV4_ADDRESS: DEC_OCTET '.' DEC_OCTET '.' DEC_OCTET '.'  
DEC_OCTET;
fragment DEC_OCTET
   : DIGIT               // 0-9
   | '1'..'9' DIGIT      // 10-99
   | '1' DIGIT DIGIT     // 100-199
   | '2' '0'..'4' DIGIT  // 200-249
   | '25' '0'..'5'       // 250-255
   ;

- it's not the IPV4_ADDRESS subrule in itself which is the problem,  
rather the way it interacts with the REG_NAME subrule; I can confirm  
this because removing the REG_NAME subrule instead of the  
IPV4_ADDRESS has the same effect (lexer stays small)

- adding the IPV6_ADDRESS rule back in causes the out-of-memory error  
to return immediately

So I've narrowed down the source of the problem quite a bit. I'm not  
sure why the interaction between the IPV4_ADDRESS and REG_NAME  
subrules would cause such a problem; the RFC acknowledges that they  
are ambiguous but it also specifies that IPV4_ADDRESS should be  
preferred, so the syntactic predicate should handle that. Given that  
I am not interested in the internal structure of the URIs (I only  
want to recognize them and move on) I can probably just drop the  
reference to IPV4_ADDRESS in the HOST rule because REG_NAME will  
match IPv4 addresses anyway.

Does anyone now how I could express the IPV6_ADDRESS rule in a way  
that won't cause ANTLR to choke?

Cheers,
Wincent


From ruth.karl at gmx.de  Wed Jun  6 03:04:52 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Wed, 06 Jun 2007 12:04:52 +0200
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625267C@wavemachine.temporal-wave.com>
References: <1181024458.7226.0.camel@rogue> <46659901.9000502@gmx.de>
	<B36CCC332A32904F8FA3DE134A23533625267C@wavemachine.temporal-wave.com>
Message-ID: <466686C4.9010108@gmx.de>

Jim Idle schrieb:
> Karl,
>   
(this is my last name ;-) prefer to be called Ruth...)

> You cannot execute predicates in interpretative mode in ANTLR. 
You mean: ANTLRWorks - right???
Also I copied the idea of using the predicates that way from 
http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer
that is why I supposed it would work this way...
But I'll try to debug it outside ANTLRWorks and see what happens, thanks 
for your suggestions, Jim.

Have a nice day,
Ruth

> To test
> you have to compile and debug it and see if you get the same problem. IF
> you do then the issue is with your predicates most likely.
>
> Jim
>
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Ruth Karl
>> Sent: Tuesday, June 05, 2007 10:10 AM
>> To: ANTR Interest
>> Subject: [antlr-interest] Grammar problem, probably silly....
>>
>> Hi,
>>
>> I have been trying quite a while now, but I keep getting a
>> MismatchedTokenException with the following simplified test grammar:
>>
>>         grammar JSP;
>>
>>         options {
>>             language = CSharp;
>>             output = AST;
>>         }
>>
>>
>>         @members {
>>              boolean xmlDoc = false;
>>               boolean outputEnabled = false;
>>         }
>>
>>
>>
>>         @lexer::members {
>>                 boolean tagMode = false;
>>         }
>>
>>         // Parser rules
>>         jsp    :    oroot (content)* croot EOF
>>             ;
>>         oroot     :     OPENTAG OROOT CLOSETAG
>>             ;
>>         croot    :    OPENTAG '/jsp:root' CLOSETAG
>>             ;
>>         content    :     TEXT
>>             ;
>>
>>
>>
>>         // Lexer rules
>>         OPENTAG     :     '<' { tagMode = true; }
>>             ;
>>         CLOSETAG     :     '>' { tagMode = false; }
>>             ;
>>         TEXT    :    {!tagMode}?=> (~'<')+
>>         ;
>>         OROOT    :    'jsp:root'
>>          ;
>>
>> The exception occurs when I print
>>
>>         <jsp:root>ljlj</jsp:root>
>>
>> in the interpreter and tell it to start from jsp rule.
>> it says (4!=5), according to the generated files this is OROOT=5 and
>> OPENTAG=4.
>> Could anyone please help me with that???
>>
>> Thanks a lot!
>>
>> Ruth
>>     
>
>   


From lists at xmart.ws  Wed Jun  6 03:21:35 2007
From: lists at xmart.ws (Elijah Epifanov)
Date: Wed, 06 Jun 2007 14:21:35 +0400
Subject: [antlr-interest] Using rewrite rules with conditionals...
In-Reply-To: <02A50A70-7084-4E7A-9D70-4009F20B10D9@apple.com>
References: <02A50A70-7084-4E7A-9D70-4009F20B10D9@apple.com>
Message-ID: <46668AAF.8020400@xmart.ws>

Hi, I think this will do the job (start rule is now 
optional_size_qualifier):

optional_size_qualifier
: size_qualifier -> size_qualifier
| -> SIZE_DEFAULT
;

size_qualifier
: '.' ( 'u' | 'U' )? size_postfix -> size_postfix
;

size_postfix
: ( 'b' | 'B' ) -> SIZE_8
| ( 'w' | 'W' ) -> SIZE_16
| ( 'l' | 'L' ) -> SIZE_32
| ( 'q' | 'Q' ) -> SIZE_64
;

Cameron Esfahani wrote:
> I had the following construct in my parser:
> 
> size_qualifier
> : '.' ( 'u' | 'U' )? ( 'b' | 'B' ) -> SIZE_8
> | '.' ( 'u' | 'U' )? ( 'w' | 'W' ) -> SIZE_16
> | '.' ( 'u' | 'U' )? ( 'l' | 'L' ) -> SIZE_32
> | '.' ( 'u' | 'U' )? ( 'q' | 'Q' ) -> SIZE_64
> ;
> 
> number_size
> : NUMBER size_qualifier?
> ;
> 
> The idea is that I'll encode in the AST the size of the number.  But, if 
> the input doesn't supply one, then I want to put in a default size: 
> SIZE_DEFAULT.
> 
> This is the only thing I could come up with:
> 
> size_qualifier
> : '.' ( 'u' | 'U' )? ( 'b' | 'B' ) -> SIZE_8
> | '.' ( 'u' | 'U' )? ( 'w' | 'W' ) -> SIZE_16
> | '.' ( 'u' | 'U' )? ( 'l' | 'L' ) -> SIZE_32
> | '.' ( 'u' | 'U' )? ( 'q' | 'Q' ) -> SIZE_64
> ;
> 
> number_size
> : NUMBER size_qualifier -> ^( size_qualifier NUMBER )
> | NUMBER -> ^( SIZE_DEFAULT NUMBER )
> ;
> 
> It seems to work, but I'm wondering if there is a better way of doing 
> it?  If size_qualifier exists, then encode that into the tree, if not, 
> use something I supply.
> 
> Cameron Esfahani
> dirty at apple.com <mailto:dirty at apple.com>
> 
> "With or without religion, good people can behave well and bad people 
> can do evil; but for good people to do evil - that takes religion."
> 
> Steven Weinberg
> 
> 
> 

From aliaazimi at yahoo.com  Wed Jun  6 03:34:07 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 6 Jun 2007 03:34:07 -0700 (PDT)
Subject: [antlr-interest] Fwd:  Error!
Message-ID: <679695.94291.qm@web58103.mail.re3.yahoo.com>



Note: forwarded message attached.
       
---------------------------------
Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/f59eb0ea/attachment-0001.html 
-------------- next part --------------
An embedded message was scrubbed...
From: ali azimi <aliaazimi at yahoo.com>
Subject: [antlr-interest] Error!
Date: Wed, 6 Jun 2007 02:04:55 -0700 (PDT)
Size: 49324
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/f59eb0ea/attachment-0001.mht 

From mark.venbrux at gmail.com  Wed Jun  6 03:53:53 2007
From: mark.venbrux at gmail.com (Mark Venbrux)
Date: Wed, 6 Jun 2007 12:53:53 +0200
Subject: [antlr-interest] antlr-interest Digest, Vol 31, Issue 20
In-Reply-To: <mailman.732.1181126049.2496.antlr-interest@antlr.org>
References: <mailman.732.1181126049.2496.antlr-interest@antlr.org>
Message-ID: <fa6015a20706060353o1d955012w8dc93a1ab92f713f@mail.gmail.com>

Hi Ruth,
You might wanna try replacing '/jsp:root' with a real Lexer token.
Like you did with OROOT.
Cheers,
    Mark
>
>
>
>
> ---------- Doorgestuurd bericht ----------
> From: Ruth Karl <ruth.karl at gmx.de>
> To: Jim Idle <jimi at temporal-wave.com>
> Date: Wed, 06 Jun 2007 12:04:52 +0200
> Subject: Re: [antlr-interest] Grammar problem, probably silly....
> Jim Idle schrieb:
> > Karl,
> >
> (this is my last name ;-) prefer to be called Ruth...)
>
> > You cannot execute predicates in interpretative mode in ANTLR.
> You mean: ANTLRWorks - right???
> Also I copied the idea of using the predicates that way from
> http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer
> that is why I supposed it would work this way...
> But I'll try to debug it outside ANTLRWorks and see what happens, thanks
> for your suggestions, Jim.
>
> Have a nice day,
> Ruth
>
> > To test
> > you have to compile and debug it and see if you get the same problem. IF
> > you do then the issue is with your predicates most likely.
> >
> > Jim
> >
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Ruth Karl
> >> Sent: Tuesday, June 05, 2007 10:10 AM
> >> To: ANTR Interest
> >> Subject: [antlr-interest] Grammar problem, probably silly....
> >>
> >> Hi,
> >>
> >> I have been trying quite a while now, but I keep getting a
> >> MismatchedTokenException with the following simplified test grammar:
> >>
> >>         grammar JSP;
> >>
> >>         options {
> >>             language = CSharp;
> >>             output = AST;
> >>         }
> >>
> >>
> >>         @members {
> >>              boolean xmlDoc = false;
> >>               boolean outputEnabled = false;
> >>         }
> >>
> >>
> >>
> >>         @lexer::members {
> >>                 boolean tagMode = false;
> >>         }
> >>
> >>         // Parser rules
> >>         jsp    :    oroot (content)* croot EOF
> >>             ;
> >>         oroot     :     OPENTAG OROOT CLOSETAG
> >>             ;
> >>         croot    :    OPENTAG '/jsp:root' CLOSETAG
> >>             ;
> >>         content    :     TEXT
> >>             ;
> >>
> >>
> >>
> >>         // Lexer rules
> >>         OPENTAG     :     '<' { tagMode = true; }
> >>             ;
> >>         CLOSETAG     :     '>' { tagMode = false; }
> >>             ;
> >>         TEXT    :    {!tagMode}?=> (~'<')+
> >>         ;
> >>         OROOT    :    'jsp:root'
> >>          ;
> >>
> >> The exception occurs when I print
> >>
> >>         <jsp:root>ljlj</jsp:root>
> >>
> >> in the interpreter and tell it to start from jsp rule.
> >> it says (4!=5), according to the generated files this is OROOT=5 and
> >> OPENTAG=4.
> >> Could anyone please help me with that???
> >>
> >> Thanks a lot!
> >>
> >> Ruth
> >>
> >
> >
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/816d0c2e/attachment.html 

From antlr at shmuelhome.mine.nu  Wed Jun  6 04:44:39 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 06 Jun 2007 14:44:39 +0300
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <4663EC35.7060009@shmuelhome.mine.nu>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>
	<4663EC35.7060009@shmuelhome.mine.nu>
Message-ID: <46669E27.7000503@shmuelhome.mine.nu>

We've been told that this mail list is the triage for bug reports. This 
patient has been languishing in triage for three days. There hasn't even 
been any placebos offered. Has there been a specification change? Is 
there one or more bugs here? As I stated, I have a workaround for the 
first issue but none for the second issue.

I would really like to move up to the release version but these two 
issues are standing in my way. Can I get some help.

shmuel siegel wrote:
> It seems that the problems were introduced with the move to 
> RewriteRuleSubtreeStream. I don't see any other substantive changes in 
> the generated parser code.
>
> Shmuel Siegel wrote:
>>
>> I have upgraded my production grammar from 3.0b6 to the release 
>> version. I am having two problems with the rewrite rules. Hopefully I 
>> just missed a specification change.
>>
>>  
>>
>>     * Problem 1: When I have subclauses that do rewrites, the final
>>       rewrite gets a null pointer exception. The following rule used
>>       to work but now throws an exception. I avoid the exception if I
>>       extract the parenthesized sub-rule and make it a named rule.
>>
>> assignEntityAttr:
>>
>>             (
>>
>>                         thisNode->thisNode
>>
>>                   |     symbolTableElement->symbolTableElement
>>
>>                   |     positionalElement->positionalElement
>>
>>             )
>>
>>             '.' a='attr' op='=' attr=attrValue    
>>             -> ^(ASSIGN[$op] ^($assignEntityAttr PROPERTY[$a]) $attr)
>>
>>             ;
>>
>>  
>>
>>     * Problem 2: Tree construction seems to have changed. I used to be
>>       able to write
>>           o ^($ent PROPERTY[$a]) where $ent was itself a tree. When I
>>             do it now, I keep the head of the $ent tree but its
>>             children are replaced by the PROPERTY token.
>>
>>  
>>
>>  
>>
>> What has changed since b6?
>>
>>  
>>
>> Shmuel
>>
>
>



From jaluber at gmx.de  Wed Jun  6 05:03:26 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Jun 2007 14:03:26 +0200
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <46669E27.7000503@shmuelhome.mine.nu>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>	<4663EC35.7060009@shmuelhome.mine.nu>
	<46669E27.7000503@shmuelhome.mine.nu>
Message-ID: <4666A28E.40906@gmx.de>

shmuel siegel wrote:
> We've been told that this mail list is the triage for bug reports. This
> patient has been languishing in triage for three days. There hasn't even
> been any placebos offered. Has there been a specification change? Is
> there one or more bugs here? As I stated, I have a workaround for the
> first issue but none for the second issue.

I suppose the only persons knowing this in the required detail are
Terence and the backend writers - maybe only Terence himself. The best
is to email him personally for an answer. Sometimes he forgets to reply
in a time efficient manner.

Best regards,
Johannes Luber

From ruth.karl at gmx.de  Wed Jun  6 05:20:40 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Wed, 06 Jun 2007 14:20:40 +0200
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C201FDE5C7@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE5C7@orsmsx417.amr.corp.intel.com>
Message-ID: <4666A698.3080305@gmx.de>

Hi Matthew,

thanks a lot for your reply in the first place, it helped a lot to go on 
with my work.
Still I wonder, how to use predicates then in the grammar, in fact I 
copied the tagmode predicate from Oliver Zeigermanns xml parser example 
(http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer) therefore - and 
because similar examples are described in the book - I trusted that it 
would work...
But as Jim Idle pointed out, predicates can not be executed with 
ANTLWorks interpreter anyway...

Have a nice day, and thanks again,

Ruth

Diehl, Matthew J schrieb:
> The problem with your grammar is that you were using lexer::member
> variables to hold the state of 'tagMode', and so in each different lexer
> rule their 'tagMode' would automatically be set to false.  If you set it
> to lexer::header and made a public static class with tagMode in it (or
> in C I guess a global variable), you would run into problems because
> lexer::header appears before the includes, which will throw errors, so
> you'd have to create your global variables by hand and edit the lexer
> file and put them after the includes.  Otherwise, one work around is
> below:  (notice that if you don't include (~('/'|'<'|'>'))+ you'll run
> into problems with TEXT eating up either of those characters (even
> though greedy is set to false and they are declared above TEXT).
>
>         grammar JSP;
>
>         options {
>             output = AST;
>         }
>         
>
>         // Parser rules
>         jsp    :    oroot (content)* croot EOF
>             ;
>         oroot     :     OPENTAG JSPROOT CLOSETAG   
>             ;
>         croot    :    OPENTAG SLASH JSPROOT CLOSETAG
>             ;
>         content    :     TEXT
>             ;
>
>
>
>         // Lexer rules
>         OPENTAG     :    '<' 
>             ;
>         CLOSETAG     :   '>' 
>             ;
>         JSPROOT
>         	:	'jsp:root'
>         	;
>         SLASH   
>         	:	'/'
>         	;
>         TEXT
>       	options{greedy=false;}
>       		: (~('<'|'>'| '/'))+
>       		;
> WS	:	(' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
> 	;
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ruth Karl
> Sent: Tuesday, June 05, 2007 10:10 AM
> To: ANTR Interest
> Subject: [antlr-interest] Grammar problem, probably silly....
>
> Hi,
>
> I have been trying quite a while now, but I keep getting a 
> MismatchedTokenException with the following simplified test grammar:
>
>         grammar JSP;
>
>         options {
>             language = CSharp;
>             output = AST;
>         }
>
>
>         @members {
>              boolean xmlDoc = false;
>               boolean outputEnabled = false;
>         }
>
>
>
>         @lexer::members {
>                 boolean tagMode = false;
>         }
>
>         // Parser rules
>         jsp    :    oroot (content)* croot EOF
>             ;
>         oroot     :     OPENTAG OROOT CLOSETAG   
>             ;
>         croot    :    OPENTAG '/jsp:root' CLOSETAG
>             ;
>         content    :     TEXT
>             ;
>
>
>
>         // Lexer rules
>         OPENTAG     :     '<' { tagMode = true; }
>             ;
>         CLOSETAG     :     '>' { tagMode = false; }
>             ;
>         TEXT    :    {!tagMode}?=> (~'<')+
>         ;
>         OROOT    :    'jsp:root'
>          ;  
>
> The exception occurs when I print
>
>         <jsp:root>ljlj</jsp:root>
>
> in the interpreter and tell it to start from jsp rule.
> it says (4!=5), according to the generated files this is OROOT=5 and 
> OPENTAG=4.
> Could anyone please help me with that???
>
> Thanks a lot!
>
> Ruth
>
>   


From feraudyh at yahoo.com  Wed Jun  6 06:09:59 2007
From: feraudyh at yahoo.com (Henri De Feraudy)
Date: Wed, 6 Jun 2007 06:09:59 -0700 (PDT)
Subject: [antlr-interest] the EOF token not in the Index of the definitive
	reference
Message-ID: <924681.70500.qm@web50108.mail.re2.yahoo.com>

Hi All,
    Just out of curiosity I typed in the token EOF in a grammar, while inside AntlrWorks. Lo and behold it was not "rejected" by underlining it with a red squigly line. Whatsmore it did not seem to raise an error when generating the code.
   Now it does not appear in the index of the definitive reference.
   I guess it can make or break a grammar, or am I wrong?
  Cheers
  Henri
   


To boldly go photographing where everyone has been before.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/42049878/attachment.html 

From jaluber at gmx.de  Wed Jun  6 06:21:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Jun 2007 15:21:37 +0200
Subject: [antlr-interest] the EOF token not in the Index of the
 definitive reference
In-Reply-To: <924681.70500.qm@web50108.mail.re2.yahoo.com>
References: <924681.70500.qm@web50108.mail.re2.yahoo.com>
Message-ID: <4666B4E1.4070802@gmx.de>

Henri De Feraudy wrote:
> Hi All,
>   Just out of curiosity I typed in the token EOF in a grammar, while
> inside AntlrWorks. Lo and behold it was not "rejected" by underlining it
> with a red squigly line. Whatsmore it did not seem to raise an error
> when generating the code.
>  Now it does not appear in the index of the definitive reference.
>  I guess it can make or break a grammar, or am I wrong?

EOF means End Of File and is used to disambiguate rules in the case, one
can't determine the starter rule. See
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
for a discussion in the Grammar Ambiguities section.

Best regards,
Johannes Luber

From ted.villalba at gmail.com  Wed Jun  6 06:32:19 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 6 Jun 2007 06:32:19 -0700
Subject: [antlr-interest] Where to add data conversion routines
Message-ID: <69fb4b090706060632s191d88e9h8198366ec8f5585a@mail.gmail.com>

Hi,
I'm writing a translator in ANTLR v3,and not sure where to put the logic for
modifying some values of LanguageA before (or while) they are translated to
LanguageB.
For instance LanguageA accepts dates in format YYYY, but LanguageB requires
dates to be in format YYYY-MM-DD.
Where should I test for this input and convert to the new format while
trying to adhere to the MVC principles?

I have defined the grammar, created a tree traverser, and am using string
templates for the output.
For instance in the Grammar def'n I have:
    expression: tag '=' value+ -> ^('=' tag value+)
In the Treetraverser I have:
   expression: ^('=' tag (v+=value)+) -> ST1(tag={fieldMap.get
($tag.text)},values={$v})

Now I want to be able to say something like:
if ($tag.text="date" AND $v.length=4) { $v = convertDate($v);}

Butm I don't know where to add this code. As an action before the template
call?
What's the protocol for this conversion?
Any similar examples someone can point me to?

Thanks for the assist.

Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/20741a79/attachment-0001.html 

From win at wincent.com  Wed Jun  6 06:55:14 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 6 Jun 2007 15:55:14 +0200
Subject: [antlr-interest] GCC lexer warnings with C target
Message-ID: <761916E6-3B72-4863-8AFF-67CB37268764@wincent.com>

Given the following grammar file, "Simple.g":

   grammar Simple;
   options {
     language = C;
   }
   FOO: 'foo';
   thing: .* EOF;

And generated as follows:

   java org.antlr.Tool Simple.g

Using ANTLR 3:

   ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007

And then feeding the output to GCC:

   gcc main.c SimpleLexer.c SimpleParser.c -lantlr3c -o simple

GCC issues this warning while compiling the lexer:

   SimpleLexer.c:198: warning: ?mFOO? declared inline after being called
   SimpleLexer.c:198: warning: previous declaration of ?mFOO? was here

This is with GCC 4:

   i686-apple-darwin8-gcc-4.0.1 (GCC) 4.0.1 (Apple Computer, Inc.  
build 5367)

Running on Mac OS X 10.4.9 (Intel):

   Darwin cuzco.local 8.9.1 Darwin Kernel Version 8.9.1: Thu Feb 22  
20:55:00 PST 2007; root:xnu-792.18.15~1/RELEASE_I386 i386 i386

The lines around the warning are:

   /* Forward declare the locally static matching functions we have  
generated and any predicate functions.
    */
   static void     mFOO    (pSimpleLexer ctx);
   static void     mTokens    (pSimpleLexer ctx);
   static void     SimpleLexerFree(pSimpleLexer ctx);

The actual function is implemented as follows:

   static ANTLR3_INLINE
   void mFOO(pSimpleLexer ctx)
   {
     ...

The warning can be eliminated in one of three ways:

- either dropping the ANTLR3_INLINE from the function implementation

- or adding ANTLR3_INLINE to the forward declaration

- or moving the mFOO function further up in the file so that it's not  
called prior to the implementation (in the case of the example  
grammar, it's called exactly once prior to the implementation, from  
the SimpleLexerNew function)

Of these, the cleanest solution looks to be adding ANTLR3_INLINE to  
the forward declaration, at least with GCC... I don't have access to  
any other compilers though so I don't know what the effect would be.  
I'm not aware of any switch that can be passed to GCC to suppress  
these warnings, but in a large lexer than tend to produce a fair bit  
of noise (two warnings for each lexer rule).

Cheers,
Wincent



From wiggjd at lsbu.ac.uk  Wed Jun  6 07:42:14 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 6 Jun 2007 15:42:14 +0100
Subject: [antlr-interest] Lexer parsing problem and Documentation
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>

Where has the old antlr documentation gone? Some of us are still using
2.7!
 
I can't find anything about lexer predicates.
 
In parsing C++ I'm trying to remove asm statements in the lexer as
though they were comments.
 
I'm using a predicate in the lexer as follows,
 
("__asm"|"_asm"|"asm") LPAREN)=>
 
but this will only match "asm(" provided there is no space between
"asm" and "(".
 
What's the problem here and how could I get over it?
 
Thanks,
 
David Wigg



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/cd960272/attachment.html 

From laguest at archangeli.co.uk  Wed Jun  6 08:12:14 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Wed, 06 Jun 2007 16:12:14 +0100
Subject: [antlr-interest] Lexer parsing problem and Documentation
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <1181142734.7226.56.camel@rogue>

On Wed, 2007-06-06 at 15:42 +0100, Wigg, J D wrote:
> Where has the old antlr documentation gone? Some of us are still using
> 2.7!

http://www.antlr2.org

Luke.

> 


From jimi at temporal-wave.com  Wed Jun  6 08:16:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 08:16:17 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com><B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu><D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
	<FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625268B@wavemachine.temporal-wave.com>

I think you just want to move most of this to the parser and be done with it Wincent. As you are not trying to do anything with the URI, just recognize it, then complicating the lexer so you can have one URI token does not get you anywhere. Instead of using 'URI' in your parser, you just use 'uri'. I don't think it is analysis bugs, I think it is just that you have produced a massively complicated lexer.

On the number of lines generated, the C output contains a lot of whitespace, comments (especially in lexer rules) and of course formatting of '{' in C style and so will make you feel you are getting more code lines than you actually are, but you will still need lots of them for this lexer!

If you really want to do this in the lexer, then maybe you should take all of the lexer rules to do with the URI stuff and put them into a new parser/lexer combination that you can embed within your main one.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Wednesday, June 06, 2007 3:04 AM
> To: ANTLR mail-list
> Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
> space
> 
> El 5/6/2007, a las 21:18, Wincent Colaiuta escribi?:
> 
> > El 5/6/2007, a las 21:04, Terence Parr escribi?:
> >
> >> Hmm...there is supposed to be a fail safe in their bad times out
> >> if it takes too long to build a DFA. is the grammar very big?
> >>
> >>  perhaps you guys can e-mail me or grammars separately and I can
> >> try them out.
> >
> > The grammar can be viewed here:
> >
> >   <http://pastie.textmate.org/68006>
> >
> > Or directly downloaded here:
> >
> >   <http://pastie.textmate.org/68006/download>
> 
> Ok, so I've done a bit more investigation with the following results:
> 
> - removing references to the IPV6_ADDRESS rule is enough to prevent
> the out-of-memory errors; this is a nasty rule and I need to find
> some better way of describing it: for the record the original ABNF
> grammar in the RFC describes it as follows (not very pretty):
> 
>        IPv6address =                            6( h16 ":" ) ls32
>                    /                       "::" 5( h16 ":" ) ls32
>                    / [               h16 ] "::" 4( h16 ":" ) ls32
>                    / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
>                    / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
>                    / [ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
>                    / [ *4( h16 ":" ) h16 ] "::"              ls32
>                    / [ *5( h16 ":" ) h16 ] "::"              h16
>                    / [ *6( h16 ":" ) h16 ] "::"
> 
>        ls32        = ( h16 ":" h16 ) / IPv4address
> 
>        h16         = 1*4HEXDIG
> 
> - even after removing the IPV6_ADDRESS rule the generated lexer is
> still huge (290K lines of C, or 181K lines of Java)
> 
> - visually inspecting the generated file shows that most of the
> methods are no more than a few hundred lines long and the vast
> majority of them are much less
> 
> - the vast bulk of the file is occupied by the HOST rule (179K lines
> of Java):
> 
> fragment HOST
>    : IP_LITERAL
>    | (IPV4_ADDRESS)=> IPV4_ADDRESS
>    | REG_NAME
>    ;
> 
> - removing the IPV4_ADDRESS subrule causes the line count for the
> lexer to drop down to a much more reasonable 2K lines of Java; for
> reference, the IPV4_ADDRESS subrule is as follows:
> 
> fragment IPV4_ADDRESS: DEC_OCTET '.' DEC_OCTET '.' DEC_OCTET '.'
> DEC_OCTET;
> fragment DEC_OCTET
>    : DIGIT               // 0-9
>    | '1'..'9' DIGIT      // 10-99
>    | '1' DIGIT DIGIT     // 100-199
>    | '2' '0'..'4' DIGIT  // 200-249
>    | '25' '0'..'5'       // 250-255
>    ;
> 
> - it's not the IPV4_ADDRESS subrule in itself which is the problem,
> rather the way it interacts with the REG_NAME subrule; I can confirm
> this because removing the REG_NAME subrule instead of the
> IPV4_ADDRESS has the same effect (lexer stays small)
> 
> - adding the IPV6_ADDRESS rule back in causes the out-of-memory error
> to return immediately
> 
> So I've narrowed down the source of the problem quite a bit. I'm not
> sure why the interaction between the IPV4_ADDRESS and REG_NAME
> subrules would cause such a problem; the RFC acknowledges that they
> are ambiguous but it also specifies that IPV4_ADDRESS should be
> preferred, so the syntactic predicate should handle that. Given that
> I am not interested in the internal structure of the URIs (I only
> want to recognize them and move on) I can probably just drop the
> reference to IPV4_ADDRESS in the HOST rule because REG_NAME will
> match IPv4 addresses anyway.
> 
> Does anyone now how I could express the IPV6_ADDRESS rule in a way
> that won't cause ANTLR to choke?
> 
> Cheers,
> Wincent


From boato at email.it  Wed Jun  6 08:27:06 2007
From: boato at email.it (Davide Rizzi)
Date: Wed, 6 Jun 2007 17:27:06 +0200
Subject: [antlr-interest] OT: Problems to install ANTLR Works
Message-ID: <000f01c7a84f$25289d90$b622b853@ciao069jnrk696>

Hi all.
I have a big problem about install last version of ANTLR Works. When I try to install the program, Java told me there is no main class.
Anyone have an idea about it?
Tnks
Da
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/96bf5bc0/attachment.html 

From jimi at temporal-wave.com  Wed Jun  6 08:29:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 08:29:13 -0700
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <46669E27.7000503@shmuelhome.mine.nu>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com><4663EC35.7060009@shmuelhome.mine.nu>
	<46669E27.7000503@shmuelhome.mine.nu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625268C@wavemachine.temporal-wave.com>

Did you donate to Ter's Beer and Pizza fund? That will probably speed
things up - though it is coming up to end of year at schools so Ter is
probably somewhat busy ;-). Please remember that this is free software
and you can hire help but you cannot sound petulant when you don't get
free help after three days concerning your upgrade from a beta - try
things like Parallel's VM support if you want to complain about
something! ;-)

The best thing to do is to debug the generated code in say Netbeans, so
you can see why you are getting the null pointers and where the tree is
being replaced by the imaginary token. Sometimes you can make things go
away by experimenting with your grammar as in 1) below, so I presume you
can work with that for a while? It may will be that the behavior you are
seeing in 2) is actually what you should expect and what you were
getting previously was an accident.

However, I also have a grammar that used to work, that I have been
meaning to debug for a while, so maybe that will turn out to be the same
thing.

At a guess I would say that 1) seems like a bug, but you have found a
work around, but 2) almost sounds right the way it is doing it now. How
are you getting $ent?

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of shmuel siegel
> Sent: Wednesday, June 06, 2007 4:45 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problems with Antlr3 rewrite rules
> 
> We've been told that this mail list is the triage for bug reports.
This
> patient has been languishing in triage for three days. There hasn't
> even
> been any placebos offered. Has there been a specification change? Is
> there one or more bugs here? As I stated, I have a workaround for the
> first issue but none for the second issue.
> 
> I would really like to move up to the release version but these two
> issues are standing in my way. Can I get some help.
> 
> shmuel siegel wrote:
> > It seems that the problems were introduced with the move to
> > RewriteRuleSubtreeStream. I don't see any other substantive changes
> in
> > the generated parser code.
> >
> > Shmuel Siegel wrote:
> >>
> >> I have upgraded my production grammar from 3.0b6 to the release
> >> version. I am having two problems with the rewrite rules. Hopefully
> I
> >> just missed a specification change.
> >>
> >>
> >>
> >>     * Problem 1: When I have subclauses that do rewrites, the final
> >>       rewrite gets a null pointer exception. The following rule
used
> >>       to work but now throws an exception. I avoid the exception if
> I
> >>       extract the parenthesized sub-rule and make it a named rule.
> >>
> >> assignEntityAttr:
> >>
> >>             (
> >>
> >>                         thisNode->thisNode
> >>
> >>                   |     symbolTableElement->symbolTableElement
> >>
> >>                   |     positionalElement->positionalElement
> >>
> >>             )
> >>
> >>             '.' a='attr' op='=' attr=attrValue
> >>             -> ^(ASSIGN[$op] ^($assignEntityAttr PROPERTY[$a])
> $attr)
> >>
> >>             ;
> >>
> >>
> >>
> >>     * Problem 2: Tree construction seems to have changed. I used to
> be
> >>       able to write
> >>           o ^($ent PROPERTY[$a]) where $ent was itself a tree. When
> I
> >>             do it now, I keep the head of the $ent tree but its
> >>             children are replaced by the PROPERTY token.
> >>
> >>
> >>
> >>
> >>
> >> What has changed since b6?
> >>
> >>
> >>
> >> Shmuel
> >>
> >
> >
> 


From monty at codetransform.com  Wed Jun  6 08:51:23 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 6 Jun 2007 08:51:23 -0700
Subject: [antlr-interest] ANTLR 3 is fun!
Message-ID: <598864c70706060851i4d44a770v10ebeface6f961b3@mail.gmail.com>

I'm having a blast working out a new grammar in ANTLRWorks with the
interpreter.  I feel 10x faster refining my little grammar.  I haven't
even taken advantage of the any new ANTLR 3 features in particular.
Some time I'm sure I'll need to, just not yet.

Thanks Ter & Jean & everyone else who helped out!

Monty

From parrt at cs.usfca.edu  Wed Jun  6 09:22:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jun 2007 09:22:14 -0700
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <4666A28E.40906@gmx.de>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>	<4663EC35.7060009@shmuelhome.mine.nu>
	<46669E27.7000503@shmuelhome.mine.nu> <4666A28E.40906@gmx.de>
Message-ID: <04F41652-0BCA-4423-AEE5-432D4B8907C4@cs.usfca.edu>


On Jun 6, 2007, at 5:03 AM, Johannes Luber wrote:

> shmuel siegel wrote:
>> We've been told that this mail list is the triage for bug reports.  
>> This
>> patient has been languishing in triage for three days. There  
>> hasn't even
>> been any placebos offered. Has there been a specification change? Is
>> there one or more bugs here? As I stated, I have a workaround for the
>> first issue but none for the second issue.
>
> I suppose the only persons knowing this in the required detail are
> Terence and the backend writers - maybe only Terence himself. The best
> is to email him personally for an answer. Sometimes he forgets to  
> reply
> in a time efficient manner.

Hi gang. Actually, I'm a bit busy with USF stuff and my dad just died  
so I'm trying to clean up his finances etc...

I'm off to Australia next week (with laptop) to hang out with the  
cenqua.com (clover, fisheye) guys and give a lecture or two.  Trying  
to finish up stuff.

That said, I *did* forget about this one...sorry.

Ter

From win at wincent.com  Wed Jun  6 09:27:10 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 6 Jun 2007 18:27:10 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625268B@wavemachine.temporal-wave.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com><B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu><D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
	<FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
	<B36CCC332A32904F8FA3DE134A23533625268B@wavemachine.temporal-wave.com>
Message-ID: <6A8DB63F-B56E-4524-AE63-18CF7F048EDB@wincent.com>

El 6/6/2007, a las 17:16, Jim Idle escribi?:

> I think you just want to move most of this to the parser and be  
> done with it Wincent. As you are not trying to do anything with the  
> URI, just recognize it, then complicating the lexer so you can have  
> one URI token does not get you anywhere. Instead of using 'URI' in  
> your parser, you just use 'uri'. I don't think it is analysis bugs,  
> I think it is just that you have produced a massively complicated  
> lexer.

I would like to try this, but I'm afraid I don't have the experience  
with ANTLR to be able to pull it off... As I start moving things "up"  
into the parser it becomes harder and harder to write non-ambiguous  
lexer rules...

So what I have done in the time being is simplify the lexer as much  
as possible; you can check out the results here:

<http://pastie.textmate.org/68305>

This generates a lexer which is 1077 lines of Java code. It can no  
longer claim to be a true RFC 3986 recognizer, because in order to  
make this simpler I no longer attempt to recognize IPv6 literals, nor  
what the RFC refers to as "IPvFuture". At some point in the future  
when I am an ANTLR guru I'll hopefully be able to revisit this and  
make a rigorous recognizer of RFC 3986-compliant URIs...

> On the number of lines generated, the C output contains a lot of  
> whitespace, comments (especially in lexer rules) and of course  
> formatting of '{' in C style and so will make you feel you are  
> getting more code lines than you actually are, but you will still  
> need lots of them for this lexer!

Nah, the extra size of the C output compared with the Java doesn't  
really bother me. I understand it's just a question of style and  
conventions. I love the C target! And I know nothing about Java, so  
I'd be lost without the C target...

Cheers,
Wincent




From jimi at temporal-wave.com  Wed Jun  6 09:47:27 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 09:47:27 -0700
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <6A8DB63F-B56E-4524-AE63-18CF7F048EDB@wincent.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com><B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu><D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
	<FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
	<B36CCC332A32904F8FA3DE134A23533625268B@wavemachine.temporal-wave.com>
	<6A8DB63F-B56E-4524-AE63-18CF7F048EDB@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252694@wavemachine.temporal-wave.com>

There was someone else parsing this with ANTLR3 I thought. Perhaps they are no longer on the list. But this seems to be something that would be useful to have generically.

The comment about the number of lines in the C output was really just in the hope that someone uses the search facility in the future ;-)

Jim

> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com]
> Sent: Wednesday, June 06, 2007 9:27 AM
> To: Jim Idle; ANTLR mail-list
> Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap
> space
> 
> El 6/6/2007, a las 17:16, Jim Idle escribi?:
> 
> > I think you just want to move most of this to the parser and be
> > done with it Wincent. As you are not trying to do anything with the
> > URI, just recognize it, then complicating the lexer so you can have
> > one URI token does not get you anywhere. Instead of using 'URI' in
> > your parser, you just use 'uri'. I don't think it is analysis bugs,
> > I think it is just that you have produced a massively complicated
> > lexer.
> 
> I would like to try this, but I'm afraid I don't have the experience
> with ANTLR to be able to pull it off... As I start moving things "up"
> into the parser it becomes harder and harder to write non-ambiguous
> lexer rules...
> 
> So what I have done in the time being is simplify the lexer as much
> as possible; you can check out the results here:
> 
> <http://pastie.textmate.org/68305>

I will take a look at this, maybe I can help you get to a parser as I am keen to have people test out the C output at this stage in the game, though so far, I have not had any drastic reports (upper case codegen is not drastic, just means you can't compile it ;-).

Jim


From matthew.j.diehl at intel.com  Wed Jun  6 10:17:47 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 6 Jun 2007 10:17:47 -0700
Subject: [antlr-interest] Error!
In-Reply-To: <900137.25048.qm@web58105.mail.re3.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20201AFBF@orsmsx417.amr.corp.intel.com>

Ali,

 

I'm pretty sure I had the same problem at one time...I'm trying to
remember, but I think it was because I had Java installed, but not JDK.
Make sure you have JDK installed and make sure the paths are good.  It's
not finding javac

 

Matt

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Wednesday, June 06, 2007 2:05 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Error!

 

Hi,

could you please tell me why when I click on the Debug button on the
ANTLRWorks I get

 


 

 

 


  

________________________________

Moody friends. Drama queens. Your life? Nope! - their life, your story.
Play Sims Stories at Yahoo! Games.
<http://us.rd.yahoo.com/evt=48224/*http:/sims.yahoo.com/> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/afab0806/attachment.html 

From ric.klaren at gmail.com  Wed Jun  6 10:27:49 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 6 Jun 2007 19:27:49 +0200
Subject: [antlr-interest] Lexer parsing problem and Documentation
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <bc607a4e0706061027i71487616n991eb8f50cfe422e@mail.gmail.com>

Hi,

On 6/6/07, Wigg, J D <wiggjd at lsbu.ac.uk> wrote:
> In parsing C++ I'm trying to remove asm statements in the lexer as though
> they were comments.
>
> I'm using a predicate in the lexer as follows,
>
> ("__asm"|"_asm"|"asm") LPAREN)=>
>
> but this will only match "asm(" provided there is no space between "asm" and
> "(".

You can probably do without predicates. Just make a rule that can
match the complete asm statement (it's a bit depending on the exact
syntax of course.. if it's multi line it could be a bit trickier)
You'll probably have to left factor that token with the identifier
rule into one lexer rule, since it starts with a valid identifier.
Another option is to use a token filter, or switch lexers (like the
java doc example). Or alternatively just extend your C++ grammar with
the asm statement. I guess that the asm statement's contents are
tokenized similarly to the existing C++ tokens (at least the flavours
I've seen), so it might not be a bad idea.. but I guess it depends on
what you want to achieve as well.

Cheers,

Ric

From win at wincent.com  Wed Jun  6 10:46:56 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 6 Jun 2007 19:46:56 +0200
Subject: [antlr-interest] Understanding lookahead
Message-ID: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>

I'm trying to understand how ANTLR's lookahead mechanisms work using  
this grammar:

   grammar Simple;

   FOO: BAR ':' BAZ {System.out.println("FOO");};
   fragment BAR: 'bar' {System.out.println("BAR");};
   fragment BAZ: 'baz' {System.out.println("BAZ");};
   EVERYTHING_ELSE: . {System.out.println("EVERYTHING_ELSE");};

   thing: .* EOF {System.out.println("done");};

I basically wanted to explore the way lookahead works and what ANTLR  
does when its lookahead predictions fail. For example, given the  
following inputs:

- "bar:baz": recognizes this as a FOO token
- "bar:ba": predicts FOO and complains about missing "z"
- "bar:b": predicts FOO and complains about missing "a"
- "bar:": predicts FOO and complains about missing "b"
- "bar": predicts FOO and complains about missing ":"
- "ba": predicts FOO and complains about missing "r"
- "b": accepts input as EVERYTHING_ELSE
- "...ba": accepts the periods as EVERYTHING_ELSE, then predicts FOO  
complains about missing "r"

This exercise was very helpful for me in seeing how ANTLR's lookahead  
operates: basically, as soon as its seen enough input to predict the  
presence of a particular token ("ba" is enough in this case), it  
assumes that it really is that token, scans ahead, and raises an  
exception if its expectations aren't met.

So, one way to get this grammar to handle strings like "...ba"  
without throwing exceptions is to use the filter=true option. I'm  
curious to know, however, is there any other way?

Cheers,
Wincent



From bace.spam at gmx.net  Wed Jun  6 11:16:15 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Wed, 06 Jun 2007 20:16:15 +0200
Subject: [antlr-interest] is there any standard tree?
Message-ID: <20070606181615.19150@gmx.net>

Hi,

I want to get the AST from the parser. I set the option "output=AST;" and saved the return object from the parser.

Now I would like to walk (DFS) through the tree. But using the getChild(i) method gives me only the tokens of the leafs. Where are the other nodes between root and leafs? I also tried:
CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
nodes.setTokenStream(tokens);

But nodes.toString() also returns only the tokens. Is there any way to get the entire AST, without writing a new grammar for a tree walker?


Thank you very much for any reply !!!
Best, Markus
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kanns mit allen: http://www.gmx.net/de/go/multimessenger

From martin.danjou at neterion.com  Wed Jun  6 11:16:40 2007
From: martin.danjou at neterion.com (Martin d'Anjou)
Date: Wed, 6 Jun 2007 14:16:40 -0400 (EDT)
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
Message-ID: <Pine.LNX.4.63.0706061325160.31877@algonquin>

>However, I cannot match something like:
>
>*bold* abc*de
>
>As it fails because there is no following '*' after de.
>
>And I think that this is essentially my problem.  I do want something 
>like
>
>*bold* abc*de
>
>To be accepted, and i'd like for the *bold* to be matched in the 
>bolded parser rule, but since the rest of the line doesn't match, to 
>simply count abc*de as a regular phrase.
>
>Is this possible?

I am very interested in knowing if this is possible as well. I have
many problems where input is very unstructured, and I am not convinced
ANTLR is the right solution for those problems.

Martin

From rschulz at sonic.net  Wed Jun  6 11:26:07 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 6 Jun 2007 11:26:07 -0700
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <Pine.LNX.4.63.0706061325160.31877@algonquin>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
	<Pine.LNX.4.63.0706061325160.31877@algonquin>
Message-ID: <200706061126.07591.rschulz@sonic.net>

On Wednesday 06 June 2007 11:16, Martin d'Anjou wrote:
> >However, I cannot match something like:
> >
> >*bold* abc*de
> >
> >As it fails because there is no following '*' after de.
> >
> >And I think that this is essentially my problem.  I do want
> > something like
> >
> >*bold* abc*de
> >
> >To be accepted, and i'd like for the *bold* to be matched in the
> >bolded parser rule, but since the rest of the line doesn't match, to
> >simply count abc*de as a regular phrase.
> >
> >Is this possible?
>
> I am very interested in knowing if this is possible as well. I have
> many problems where input is very unstructured, and I am not
> convinced ANTLR is the right solution for those problems.

My original feeling about the OP's problem is just this. Context-free 
grammars are all about structured. Rigid structure, precisely defined. 
I don't see a parser generator as the tool of choice for loosely 
structured or imprecisely defined inputs.

The problem is that the number of rules you'd need and the difficulty in 
preventing unwanted interactions between those rules make this a 
problem that verges on the insoluble with what a CFG parser generator 
gives you.

IMO, of course.


> Martin


Randall Schulz

From parrt at cs.usfca.edu  Wed Jun  6 11:52:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jun 2007 11:52:12 -0700
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <4663EC35.7060009@shmuelhome.mine.nu>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com>
	<4663EC35.7060009@shmuelhome.mine.nu>
Message-ID: <E75F7460-54D8-43B9-BAFE-3F4143C12D08@cs.usfca.edu>


On Jun 4, 2007, at 3:40 AM, shmuel siegel wrote:

> It seems that the problems were introduced with the move to  
> RewriteRuleSubtreeStream. I don't see any other substantive changes  
> in the generated parser code.

Hi. added a bug report:

http://www.antlr.org:8888/browse/ANTLR-133

Thakns!
Ter

From stuart.dootson at gmail.com  Wed Jun  6 12:25:44 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Wed, 6 Jun 2007 20:25:44 +0100
Subject: [antlr-interest] [antlr-dev] BitSets
In-Reply-To: <1181152327.7226.84.camel@rogue>
References: <1181140869.7226.49.camel@rogue> <1181144634.7226.66.camel@rogue>
	<200706061750.57294.pink@odahoda.de>
	<B36CCC332A32904F8FA3DE134A23533625268F@wavemachine.temporal-wave.com>
	<44677085-3064-4101-8907-1D0DD1D89DD8@classdump.org>
	<1181147104.7226.75.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252693@wavemachine.temporal-wave.com>
	<1181149432.7226.78.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252696@wavemachine.temporal-wave.com>
	<1181152327.7226.84.camel@rogue>
Message-ID: <8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>

Luke - I've had a reasonable amount of Ada experience (real-time,
safety critical embedded systems) - I would have thought the idiomatic
way to do a bitset in Ada would be a packed (using pragma pack) array
of Booleans? If you declare this to be constant, with an initialiser,
then GNAT (the only Ada compiler I've had recent experience of) should
code that up without any elaboration code - in an embedded system, it
would be ROM-able.

Something like:

type Bits132Type is array(Integer range 1..132) of Boolean;
pragma Pack(Bits132Type);
for Bits132Type'Size use 132;
Bit_Set : constant Bits132Type := Bits132Type'(1 => True, 2 => False,
3 => True, 4 => True, others => False);


I don't think you'd need dynamically resizable arrays for Antlr
bitsets - I think their size is fixed @ code-generation time? If
that's the case, then you can just fix the array size at compile time.

HTH.

Stuart Dootson

From parrt at cs.usfca.edu  Wed Jun  6 12:28:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jun 2007 12:28:54 -0700
Subject: [antlr-interest] [antlr-dev] BitSets
In-Reply-To: <8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
References: <1181140869.7226.49.camel@rogue> <1181144634.7226.66.camel@rogue>
	<200706061750.57294.pink@odahoda.de>
	<B36CCC332A32904F8FA3DE134A23533625268F@wavemachine.temporal-wave.com>
	<44677085-3064-4101-8907-1D0DD1D89DD8@classdump.org>
	<1181147104.7226.75.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252693@wavemachine.temporal-wave.com>
	<1181149432.7226.78.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252696@wavemachine.temporal-wave.com>
	<1181152327.7226.84.camel@rogue>
	<8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
Message-ID: <09CE8A7A-9E3D-476A-B211-EC3B68A44776@cs.usfca.edu>


On Jun 6, 2007, at 12:25 PM, Stuart Dootson wrote:
> bitsets - I think their size is fixed @ code-generation time? If
> that's the case, then you can just fix the array size at compile time.

Fixed at compile time. :)
Ter

From jimi at temporal-wave.com  Wed Jun  6 12:32:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 12:32:42 -0700
Subject: [antlr-interest] [antlr-dev] BitSets
In-Reply-To: <09CE8A7A-9E3D-476A-B211-EC3B68A44776@cs.usfca.edu>
References: <1181140869.7226.49.camel@rogue>
	<1181144634.7226.66.camel@rogue><200706061750.57294.pink@odahoda.de><B36CCC332A32904F8FA3DE134A23533625268F@wavemachine.temporal-wave.com><44677085-3064-4101-8907-1D0DD1D89DD8@classdump.org><1181147104.7226.75.camel@rogue><B36CCC332A32904F8FA3DE134A235336252693@wavemachine.temporal-wave.com><1181149432.7226.78.camel@rogue><B36CCC332A32904F8FA3DE134A235336252696@wavemachine.temporal-wave.com><1181152327.7226.84.camel@rogue><8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
	<09CE8A7A-9E3D-476A-B211-EC3B68A44776@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625269C@wavemachine.temporal-wave.com>

However, from these, you have to produce dynamic ones as combinations,
do you not? Otherwise why did I write that code ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, June 06, 2007 12:29 PM
> To: antlr-interest
> Subject: Re: [antlr-interest] [antlr-dev] BitSets
> 
> 
> On Jun 6, 2007, at 12:25 PM, Stuart Dootson wrote:
> > bitsets - I think their size is fixed @ code-generation time? If
> > that's the case, then you can just fix the array size at compile
> time.
> 
> Fixed at compile time. :)
> Ter

From tedv at esrconsulting.com  Wed Jun  6 12:41:37 2007
From: tedv at esrconsulting.com (Ted Villalba)
Date: Wed, 6 Jun 2007 12:41:37 -0700
Subject: [antlr-interest] Where to add data conversion routines
In-Reply-To: <69fb4b090706060632s191d88e9h8198366ec8f5585a@mail.gmail.com>
Message-ID: <200706061941.l56Jfcvg031552@pro36.abac.com>

 
Answering my own question here, the place to add conversion routines would
be in the embedded actions of the rules in the Tree Grammar, before calling
the string template to emit the translation.
 
TV
  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ted Villalba
Sent: Wednesday, June 06, 2007 6:32 AM
To: ANTR Interest
Subject: [antlr-interest] Where to add data conversion routines
 
Hi, 
I'm writing a translator in ANTLR v3,and not sure where to put the logic for
modifying some values of LanguageA before (or while) they are translated to
LanguageB.
For instance LanguageA accepts dates in format YYYY, but LanguageB requires
dates to be in format YYYY-MM-DD. 
Where should I test for this input and convert to the new format while
trying to adhere to the MVC principles?

I have defined the grammar, created a tree traverser, and am using string
templates for the output. 
For instance in the Grammar def'n I have:
    expression: tag '=' value+ -> ^('=' tag value+)
In the Treetraverser I have:
   expression: ^('=' tag (v+=value)+) -> ST1(tag={fieldMap.get
($tag.text)},values={$v})

Now I want to be able to say something like:
if ($tag.text="date" AND $v.length=4) { $v = convertDate($v);}

Butm I don't know where to add this code. As an action before the template
call? 
What's the protocol for this conversion?
Any similar examples someone can point me to?

Thanks for the assist.

Ted


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/2d118bd4/attachment.html 

From rerdavies at rogers.com  Wed Jun  6 13:01:53 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 6 Jun 2007 16:01:53 -0400
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com><B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu><D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
	<FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
Message-ID: <4A67A329E202470683697B557B777FD2@GWB>

> fragment DEC_OCTET
>  : DIGIT               // 0-9
>   | '1'..'9' DIGIT      // 10-99
>   | '1' DIGIT DIGIT     // 100-199
>  | '2' '0'..'4' DIGIT  // 200-249
>   | '25' '0'..'5'       // 250-255
>   ;
Have to wonder whether this is really a smart thing to do. You're using a 
lexer to enforce a semantic restriction: namely that a DEC_OCTET must have a 
value between of 0 to 255.

>From an efficiency point of view, wouldn't it make sense to go for
   DEC_OCTET: DIGIT+;  (not a fragment!)
and then build addresses at the parser level rather than at the lexer level, 
and enforce semantic restrictions either with predicates, or (even better, I 
think) in the processing code.

One of the downsides of this kind of semantic enforcement lexically is that 
you end up with crazy error messages like :

   Input: 1.1.257.1
    Error: Expecting ".", "0", "1", "2", "3", "4", or "5".
(not a very helpful error message, in my opinion).

If handle this error in a semantic level then you can provide much more 
semantically relevant error messages like:
   "Malformed IPv4 address".

Not knowing the details of the ANTLR DFA implementation, I have to think 
that the amount of state information that a DFA has to track is going to be 
crazy by the time you get a few octets into an IPv4 address. It doesn't 
surprise me that the size of the lexer DFA goes ballistic, though.

I'm struggling with this in some of the sample grammars. I can't help 
thinking (for example) that it's a very bad idea to treat   "\z" in a 
C/C++/C# string as a lexical error ("not expecting 'z') rather than a 
semantic error ("illegal escape sequence").




----- Original Message ----- 
From: "Wincent Colaiuta" <win at wincent.com>
To: "ANTLR mail-list" <antlr-interest at antlr.org>
Sent: Wednesday, June 06, 2007 6:03 AM
Subject: Re: [antlr-interest] java.lang.OutOfMemoryError: Java heap space


El 5/6/2007, a las 21:18, Wincent Colaiuta escribi?:

> El 5/6/2007, a las 21:04, Terence Parr escribi?:
>
>> Hmm...there is supposed to be a fail safe in their bad times out  if it 
>> takes too long to build a DFA. is the grammar very big?
>>
>>  perhaps you guys can e-mail me or grammars separately and I can  try 
>> them out.
>
> The grammar can be viewed here:
>
>   <http://pastie.textmate.org/68006>
>
> Or directly downloaded here:
>
>   <http://pastie.textmate.org/68006/download>

Ok, so I've done a bit more investigation with the following results:

- removing references to the IPV6_ADDRESS rule is enough to prevent
the out-of-memory errors; this is a nasty rule and I need to find
some better way of describing it: for the record the original ABNF
grammar in the RFC describes it as follows (not very pretty):

       IPv6address =                            6( h16 ":" ) ls32
                   /                       "::" 5( h16 ":" ) ls32
                   / [               h16 ] "::" 4( h16 ":" ) ls32
                   / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
                   / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
                   / [ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
                   / [ *4( h16 ":" ) h16 ] "::"              ls32
                   / [ *5( h16 ":" ) h16 ] "::"              h16
                   / [ *6( h16 ":" ) h16 ] "::"

       ls32        = ( h16 ":" h16 ) / IPv4address

       h16         = 1*4HEXDIG

- even after removing the IPV6_ADDRESS rule the generated lexer is
still huge (290K lines of C, or 181K lines of Java)

- visually inspecting the generated file shows that most of the
methods are no more than a few hundred lines long and the vast
majority of them are much less

- the vast bulk of the file is occupied by the HOST rule (179K lines
of Java):

fragment HOST
   : IP_LITERAL
   | (IPV4_ADDRESS)=> IPV4_ADDRESS
   | REG_NAME
   ;

- removing the IPV4_ADDRESS subrule causes the line count for the
lexer to drop down to a much more reasonable 2K lines of Java; for
reference, the IPV4_ADDRESS subrule is as follows:

fragment IPV4_ADDRESS: DEC_OCTET '.' DEC_OCTET '.' DEC_OCTET '.'
DEC_OCTET;
fragment DEC_OCTET
   : DIGIT               // 0-9
   | '1'..'9' DIGIT      // 10-99
   | '1' DIGIT DIGIT     // 100-199
   | '2' '0'..'4' DIGIT  // 200-249
   | '25' '0'..'5'       // 250-255
   ;

- it's not the IPV4_ADDRESS subrule in itself which is the problem,
rather the way it interacts with the REG_NAME subrule; I can confirm
this because removing the REG_NAME subrule instead of the
IPV4_ADDRESS has the same effect (lexer stays small)

- adding the IPV6_ADDRESS rule back in causes the out-of-memory error
to return immediately

So I've narrowed down the source of the problem quite a bit. I'm not
sure why the interaction between the IPV4_ADDRESS and REG_NAME
subrules would cause such a problem; the RFC acknowledges that they
are ambiguous but it also specifies that IPV4_ADDRESS should be
preferred, so the syntactic predicate should handle that. Given that
I am not interested in the internal structure of the URIs (I only
want to recognize them and move on) I can probably just drop the
reference to IPV4_ADDRESS in the HOST rule because REG_NAME will
match IPv4 addresses anyway.

Does anyone now how I could express the IPV6_ADDRESS rule in a way
that won't cause ANTLR to choke?

Cheers,
Wincent


From rerdavies at rogers.com  Wed Jun  6 13:08:46 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 6 Jun 2007 16:08:46 -0400
Subject: [antlr-interest] Lexer parsing problem and Documentation
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <5F3E9896ABB14DA89D915257D0626E9E@GWB>

> but this will only match "asm(" provided there is no space between "asm" and "(".

As a lexer rule? 

fragment WS_CHAR:   ' ' | '\t'    ...etc.;


(("__asm"|"_asm"|"asm") WS_CHAR * LPAREN)=>

Your white-space rule would be a lexer rule, and, therefore, not be in effect in the middle of a lexer rule.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/003face9/attachment-0001.html 

From pdhar at tibco.com  Wed Jun  6 13:16:05 2007
From: pdhar at tibco.com (Pranab Dhar)
Date: Wed, 6 Jun 2007 13:16:05 -0700
Subject: [antlr-interest] @header package not generated for <T>Lexer.java
Message-ID: <B5ACD5B0D63ABA4FB1A1B6C467964FBD06348754@NA-PA-VBE01.na.tibco.com>

Hi,

       I was able to generate the Parser and the Lexer java code from
the grammar and the package defined in the @header section of the
grammar does not get generated in the Lexer code.

 

grammar Tql;

 

options {

      language=Java;

      output=AST;

      backtrack=true;

      k=2;

      memoize=true;

}

 

tokens {

      SELECT_EXPR;

      ..

}

 

@header {

      package com.xxx.yyy.query.parser;   

}

 

And the generated lexer code is something like

 

 

// $ANTLR 3.0
C:\\xxxx\\workspaces\\xxxxxx\\src\\com\\xxxxx\\xxxx\\query\\parser\\TOql
.g 2007-06-06 12:05:44

 

import org.antlr.runtime.*;

import java.util.Stack;

import java.util.List;

import java.util.ArrayList;

 

public class TqlLexer extends Lexer {

 

And the Parser code looks like

 

// $ANTLR 3.0 C
C:\\xxxx\\workspaces\\xxxxxx\\src\\com\\xxxxx\\xxxx\\query\\parser\\TOql
.g 2007-06-06 12:05:43

 

      package com.xxx.yyy.query.parser;   

 

 

import org.antlr.runtime.*;

import java.util.Stack;

import java.util.List;

import java.util.ArrayList;

import java.util.Map;

import java.util.HashMap;

 

import org.antlr.runtime.tree.*;

 

public class TqlParser extends Parser {

    public static final String[] tokenNames = new String[] {

 

Any help and guidance is appreciated.

 

Thanks,

 

Pranab

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/95044976/attachment.html 

From parrt at cs.usfca.edu  Wed Jun  6 13:34:29 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jun 2007 13:34:29 -0700
Subject: [antlr-interest] [antlr-dev] BitSets
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625269C@wavemachine.temporal-wave.com>
References: <1181140869.7226.49.camel@rogue>
	<1181144634.7226.66.camel@rogue><200706061750.57294.pink@odahoda.de><B36CCC332A32904F8FA3DE134A23533625268F@wavemachine.temporal-wave.com><44677085-3064-4101-8907-1D0DD1D89DD8@classdump.org><1181147104.7226.75.camel@rogue><B36CCC332A32904F8FA3DE134A235336252693@wavemachine.temporal-wave.com><1181149432.7226.78.camel@rogue><B36CCC332A32904F8FA3DE134A235336252696@wavemachine.temporal-wave.com><1181152327.7226.84.camel@rogue><8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
	<09CE8A7A-9E3D-476A-B211-EC3B68A44776@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533625269C@wavemachine.temporal-wave.com>
Message-ID: <E88BE9C9-6C1C-4052-9427-2ED1099A224E@cs.usfca.edu>


On Jun 6, 2007, at 12:32 PM, Jim Idle wrote:

> However, from these, you have to produce dynamic ones as combinations,
> do you not? Otherwise why did I write that code ;-)

Oh, right...for error recovery.

Ter


From cameron.palmer at gmail.com  Wed Jun  6 13:38:02 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Wed, 6 Jun 2007 15:38:02 -0500
Subject: [antlr-interest] Mismatched Tree Node and lack of StringTemplate
	output
Message-ID: <bc4938830706061338q3f15943bj469a5c3bd70d985d@mail.gmail.com>

I created a rule to appear in my AST that involved an imaginary token:

dsBody
    : id COLON INT EOL
    iStructElements -> ^(ISTRUCT id INT iStructElements)
    ;

Where ISTRUCT is defined:

ISTRUCT :;

This throws a warning:
The following token definitions are unreachable: ISTRUCT.

Should I worry about this?

Second question...
I am getting This error:
SDFWalker.g: node from line 0:0 mismatched tree node: DOWN expecting VERSION

Thanks,

Cameron.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/ed76a27a/attachment.html 

From oliver at zeigermann.de  Wed Jun  6 13:40:12 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Wed, 6 Jun 2007 22:40:12 +0200
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <46659901.9000502@gmx.de>
References: <1181024458.7226.0.camel@rogue> <46659901.9000502@gmx.de>
Message-ID: <9da4f4520706061340s3afc6b2me7bf010142c1378f@mail.gmail.com>

Hi!

I just tested you grammar (outside of ANTLRWorks) and it works like it should.

Cheers

Oliver

2007/6/5, Ruth Karl <ruth.karl at gmx.de>:
> Hi,
>
> I have been trying quite a while now, but I keep getting a
> MismatchedTokenException with the following simplified test grammar:
>
>         grammar JSP;
>
>         options {
>             language = CSharp;
>             output = AST;
>         }
>
>
>         @members {
>              boolean xmlDoc = false;
>               boolean outputEnabled = false;
>         }
>
>
>
>         @lexer::members {
>                 boolean tagMode = false;
>         }
>
>         // Parser rules
>         jsp    :    oroot (content)* croot EOF
>             ;
>         oroot     :     OPENTAG OROOT CLOSETAG
>             ;
>         croot    :    OPENTAG '/jsp:root' CLOSETAG
>             ;
>         content    :     TEXT
>             ;
>
>
>
>         // Lexer rules
>         OPENTAG     :     '<' { tagMode = true; }
>             ;
>         CLOSETAG     :     '>' { tagMode = false; }
>             ;
>         TEXT    :    {!tagMode}?=> (~'<')+
>         ;
>         OROOT    :    'jsp:root'
>          ;
>
> The exception occurs when I print
>
>         <jsp:root>ljlj</jsp:root>
>
> in the interpreter and tell it to start from jsp rule.
> it says (4!=5), according to the generated files this is OROOT=5 and
> OPENTAG=4.
> Could anyone please help me with that???
>
> Thanks a lot!
>
> Ruth
>

From oliver at zeigermann.de  Wed Jun  6 13:48:05 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Wed, 6 Jun 2007 22:48:05 +0200
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
Message-ID: <9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>

Maybe it could help to manually set the amount of lookahead to 7? I
have not tried it, but this should include checks for all characters
and only let FOO match for "bar:baz"

HTH

Oliver

2007/6/6, Wincent Colaiuta <win at wincent.com>:
> I'm trying to understand how ANTLR's lookahead mechanisms work using
> this grammar:
>
>    grammar Simple;
>
>    FOO: BAR ':' BAZ {System.out.println("FOO");};
>    fragment BAR: 'bar' {System.out.println("BAR");};
>    fragment BAZ: 'baz' {System.out.println("BAZ");};
>    EVERYTHING_ELSE: . {System.out.println("EVERYTHING_ELSE");};
>
>    thing: .* EOF {System.out.println("done");};
>
> I basically wanted to explore the way lookahead works and what ANTLR
> does when its lookahead predictions fail. For example, given the
> following inputs:
>
> - "bar:baz": recognizes this as a FOO token
> - "bar:ba": predicts FOO and complains about missing "z"
> - "bar:b": predicts FOO and complains about missing "a"
> - "bar:": predicts FOO and complains about missing "b"
> - "bar": predicts FOO and complains about missing ":"
> - "ba": predicts FOO and complains about missing "r"
> - "b": accepts input as EVERYTHING_ELSE
> - "...ba": accepts the periods as EVERYTHING_ELSE, then predicts FOO
> complains about missing "r"
>
> This exercise was very helpful for me in seeing how ANTLR's lookahead
> operates: basically, as soon as its seen enough input to predict the
> presence of a particular token ("ba" is enough in this case), it
> assumes that it really is that token, scans ahead, and raises an
> exception if its expectations aren't met.
>
> So, one way to get this grammar to handle strings like "...ba"
> without throwing exceptions is to use the filter=true option. I'm
> curious to know, however, is there any other way?
>
> Cheers,
> Wincent
>
>
>

From ruth.karl at gmx.de  Wed Jun  6 13:51:30 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Wed, 06 Jun 2007 22:51:30 +0200
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <9da4f4520706061340s3afc6b2me7bf010142c1378f@mail.gmail.com>
References: <1181024458.7226.0.camel@rogue> <46659901.9000502@gmx.de>
	<9da4f4520706061340s3afc6b2me7bf010142c1378f@mail.gmail.com>
Message-ID: <46671E52.1090806@gmx.de>

Thanks a lot, that is good news indeed!
Just for curiosity: did you try with C# or with Java as target language?

Ruth


Oliver Zeigermann schrieb:
> Hi!
>
> I just tested you grammar (outside of ANTLRWorks) and it works like it 
> should.
>
> Cheers
>
> Oliver
>
> 2007/6/5, Ruth Karl <ruth.karl at gmx.de>:
>> Hi,
>>
>> I have been trying quite a while now, but I keep getting a
>> MismatchedTokenException with the following simplified test grammar:
>>
>>         grammar JSP;
>>
>>         options {
>>             language = CSharp;
>>             output = AST;
>>         }
>>
>>
>>         @members {
>>              boolean xmlDoc = false;
>>               boolean outputEnabled = false;
>>         }
>>
>>
>>
>>         @lexer::members {
>>                 boolean tagMode = false;
>>         }
>>
>>         // Parser rules
>>         jsp    :    oroot (content)* croot EOF
>>             ;
>>         oroot     :     OPENTAG OROOT CLOSETAG
>>             ;
>>         croot    :    OPENTAG '/jsp:root' CLOSETAG
>>             ;
>>         content    :     TEXT
>>             ;
>>
>>
>>
>>         // Lexer rules
>>         OPENTAG     :     '<' { tagMode = true; }
>>             ;
>>         CLOSETAG     :     '>' { tagMode = false; }
>>             ;
>>         TEXT    :    {!tagMode}?=> (~'<')+
>>         ;
>>         OROOT    :    'jsp:root'
>>          ;
>>
>> The exception occurs when I print
>>
>>         <jsp:root>ljlj</jsp:root>
>>
>> in the interpreter and tell it to start from jsp rule.
>> it says (4!=5), according to the generated files this is OROOT=5 and
>> OPENTAG=4.
>> Could anyone please help me with that???
>>
>> Thanks a lot!
>>
>> Ruth
>>
>


From antlr at mirality.co.nz  Wed Jun  6 12:40:57 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 07 Jun 2007 07:40:57 +1200
Subject: [antlr-interest] Lexer parsing problem and Documentation
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu
	.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A022C5464@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <20070606210003.2552C11EB39@www.antlr.org>

At 02:42 7/06/2007, Wigg, J D wrote:
>I'm using a predicate in the lexer as follows,
>
>("__asm"|"_asm"|"asm") LPAREN)=>
>
>but this will only match "asm(" provided there is no space 
>between "asm" and "(".
>
>What's the problem here and how could I get over it?

Whitespace is only removed as a consequence of another lexer rule 
-- which means that if you want to match whitespace within a token 
(or predicate) in any lexer rule then you have to explicitly 
mention it, since it's still there at that point.  If you add 
something like WS? or WS* (depending on your WS token definition) 
before LPAREN then it should sort it out.


From laguest at archangeli.co.uk  Wed Jun  6 14:04:31 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Wed, 06 Jun 2007 22:04:31 +0100
Subject: [antlr-interest] [antlr-dev] BitSets
In-Reply-To: <8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
References: <1181140869.7226.49.camel@rogue>
	<1181144634.7226.66.camel@rogue> <200706061750.57294.pink@odahoda.de>
	<B36CCC332A32904F8FA3DE134A23533625268F@wavemachine.temporal-wave.com>
	<44677085-3064-4101-8907-1D0DD1D89DD8@classdump.org>
	<1181147104.7226.75.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252693@wavemachine.temporal-wave.com>
	<1181149432.7226.78.camel@rogue>
	<B36CCC332A32904F8FA3DE134A235336252696@wavemachine.temporal-wave.com>
	<1181152327.7226.84.camel@rogue>
	<8b56cad40706061225l67b874b2mb6508be2b5d3a20e@mail.gmail.com>
Message-ID: <1181163871.7226.99.camel@rogue>

On Wed, 2007-06-06 at 20:25 +0100, Stuart Dootson wrote:
> Luke - I've had a reasonable amount of Ada experience (real-time,

Good to know there's somebody else here that uses (or has used) Ada ;D

> safety critical embedded systems) - I would have thought the idiomatic
> way to do a bitset in Ada would be a packed (using pragma pack) array
> of Booleans? If you declare this to be constant, with an initialiser,

Yeah, I did mention this on the dev ml.

> then GNAT (the only Ada compiler I've had recent experience of) should
> code that up without any elaboration code - in an embedded system, it
> would be ROM-able.
> 
> Something like:
> 
> type Bits132Type is array(Integer range 1..132) of Boolean;
> pragma Pack(Bits132Type);
> for Bits132Type'Size use 132;
> Bit_Set : constant Bits132Type := Bits132Type'(1 => True, 2 => False,
> 3 => True, 4 => True, others => False);
> 
> 
> I don't think you'd need dynamically resizable arrays for Antlr
> bitsets - I think their size is fixed @ code-generation time? If
> that's the case, then you can just fix the array size at compile time.

For both the dynamic and static cases, I think it would be possible to
implement using the same type and some representation clauses (maybe).

Lemme think about it some more and I'll post back.

Thanks,
Luke.



From jaluber at gmx.de  Wed Jun  6 14:31:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 06 Jun 2007 23:31:19 +0200
Subject: [antlr-interest] Mismatched Tree Node and lack of
 StringTemplate output
In-Reply-To: <bc4938830706061338q3f15943bj469a5c3bd70d985d@mail.gmail.com>
References: <bc4938830706061338q3f15943bj469a5c3bd70d985d@mail.gmail.com>
Message-ID: <466727A7.9010704@gmx.de>

Cameron Palmer wrote:
> I created a rule to appear in my AST that involved an imaginary token:
> 
> dsBody
>     : id COLON INT EOL
>     iStructElements -> ^(ISTRUCT id INT iStructElements)
>     ;
> 
> Where ISTRUCT is defined:
> 
> ISTRUCT :;
> 
> This throws a warning:
> The following token definitions are unreachable: ISTRUCT.
> 
> Should I worry about this?

It means, that from the start rule on there is no rule which references
ISTRUCT. It seems, that ANTLR doesn't discover that ISTRUCT is actually
used. Maybe you should put ISTRUCT into a token command. Then the error
may vanish.

> Second question...
> I am getting This error:
> SDFWalker.g: node from line 0:0 mismatched tree node: DOWN expecting
> VERSION

I believe that your grammar doesn't generate the AST correctly. I'd look
in the AST consuming grammar for VERSION and then in the AST creating
grammar for places, where you forgot to put VERSION in. I didn't use the
AST functionality yet, so this may be off.

Best regards,
Johannes Luber


From collin.vandyck at hannonhill.com  Wed Jun  6 14:55:46 2007
From: collin.vandyck at hannonhill.com (Collin VanDyck)
Date: Wed, 6 Jun 2007 17:55:46 -0400
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <200706061126.07591.rschulz@sonic.net>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
	<Pine.LNX.4.63.0706061325160.31877@algonquin>
	<200706061126.07591.rschulz@sonic.net>
Message-ID: <D73B595B-41B9-4167-890D-C0F9C520AE62@hannonhill.com>


On Jun 6, 2007, at 2:26 PM, Randall R Schulz wrote:

> On Wednesday 06 June 2007 11:16, Martin d'Anjou wrote:
>>> However, I cannot match something like:
>>>
>>> *bold* abc*de
>>>
>>> As it fails because there is no following '*' after de.
>>>
>>> And I think that this is essentially my problem.  I do want
>>> something like
>>>
>>> *bold* abc*de
>>>
>>> To be accepted, and i'd like for the *bold* to be matched in the
>>> bolded parser rule, but since the rest of the line doesn't match, to
>>> simply count abc*de as a regular phrase.
>>>
>>> Is this possible?
>>
>> I am very interested in knowing if this is possible as well. I have
>> many problems where input is very unstructured, and I am not
>> convinced ANTLR is the right solution for those problems.
>
> My original feeling about the OP's problem is just this. Context-free
> grammars are all about structured. Rigid structure, precisely defined.
> I don't see a parser generator as the tool of choice for loosely
> structured or imprecisely defined inputs.
>
> The problem is that the number of rules you'd need and the  
> difficulty in
> preventing unwanted interactions between those rules make this a
> problem that verges on the insoluble with what a CFG parser generator
> gives you.
>
> IMO, of course.

Yes, this is what I'm beginning to feel is true about my quest to use  
ANTLR for this purpose.  No shame on ANTLR of course, it's seeming  
like it's simply a case of a great tool, but for a different job.  If  
anyone does have any recommendations on tools to accomplish what I'm  
trying to do, I would certainly appreciate it, though it is not my  
intent to throw this list's traffic off-topic.

-Collin


-----
Collin VanDyck
CTO - Hannon Hill



From jimi at temporal-wave.com  Wed Jun  6 14:55:59 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 14:55:59 -0700
Subject: [antlr-interest] Mismatched Tree Node and lack of
	StringTemplateoutput
In-Reply-To: <bc4938830706061338q3f15943bj469a5c3bd70d985d@mail.gmail.com>
References: <bc4938830706061338q3f15943bj469a5c3bd70d985d@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526A1@wavemachine.temporal-wave.com>

When you say that ISTRUCT is defined as:

 

ISTRUCT:;

 

Do you meant that your lexer rule for the token is empty, or that you
have declared it in the tokens section as an imaginary? If the former
then it isn't a valid token definition, if the latter then this is
usually a warning that will eventually go away, about imaginary tokens
not being declared in the lexer.

 

I think that you are trying to define and use an imaginary token
however:

tokens

{

                ISTRUCT;

}

 

Which you can then use in your rewrite rule. Indeed that is mostly what
they are for.

 

Your AST error sounds like something unrelated to this though in that
your parser is not producing the tree that your tree parser is
expecting.

 

You need to check that your tree grammar rule matches exactly the tree
you are producing. You need to produce syntactically perfect trees and
also a grammar that considers what you are producing to be that syntax
;-). 

 

So if you explicit or implicit tree production produces

 

^(FRED ^(VERSION blah))

 

But your tree parse is actually looking for:

 

^(FRED VERSION blah)

 

Then this is the kind of thing you are going to see.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Palmer
Sent: Wednesday, June 06, 2007 1:38 PM
To: ANTR Interest
Subject: [antlr-interest] Mismatched Tree Node and lack of
StringTemplateoutput

 

I created a rule to appear in my AST that involved an imaginary token:

dsBody
    : id COLON INT EOL
    iStructElements -> ^(ISTRUCT id INT iStructElements)
    ;

Where ISTRUCT is defined:

ISTRUCT :;

This throws a warning:
The following token definitions are unreachable: ISTRUCT.

Should I worry about this?

Second question...
I am getting This error:
SDFWalker.g: node from line 0:0 mismatched tree node: DOWN expecting
VERSION 

Thanks,

Cameron.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/e7dc7abd/attachment-0001.html 

From win at wincent.com  Wed Jun  6 15:15:30 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 00:15:30 +0200
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <200706061126.07591.rschulz@sonic.net>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
	<Pine.LNX.4.63.0706061325160.31877@algonquin>
	<200706061126.07591.rschulz@sonic.net>
Message-ID: <838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>

El 6/6/2007, a las 20:26, Randall R Schulz escribi?:

> On Wednesday 06 June 2007 11:16, Martin d'Anjou wrote:
>>> However, I cannot match something like:
>>>
>>> *bold* abc*de
>>>
>>> As it fails because there is no following '*' after de.
>>>
>>> And I think that this is essentially my problem.  I do want
>>> something like
>>>
>>> *bold* abc*de
>>>
>>> To be accepted, and i'd like for the *bold* to be matched in the
>>> bolded parser rule, but since the rest of the line doesn't match, to
>>> simply count abc*de as a regular phrase.
>>>
>>> Is this possible?
>>
>> I am very interested in knowing if this is possible as well. I have
>> many problems where input is very unstructured, and I am not
>> convinced ANTLR is the right solution for those problems.
>
> My original feeling about the OP's problem is just this. Context-free
> grammars are all about structured. Rigid structure, precisely defined.
> I don't see a parser generator as the tool of choice for loosely
> structured or imprecisely defined inputs.
>
> The problem is that the number of rules you'd need and the  
> difficulty in
> preventing unwanted interactions between those rules make this a
> problem that verges on the insoluble with what a CFG parser generator
> gives you.
>
> IMO, of course.

So what's the alternative? MediaWiki, for example, uses a very  
complicated set of hand-coded regular expressions. It works pretty  
well, but it does have its bugs and it's difficult to maintain. I'm  
hoping that the answer is not "hand-coded regular expressions"...

Cheers,
Wincent



From jimi at temporal-wave.com  Wed Jun  6 15:21:27 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 15:21:27 -0700
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <D73B595B-41B9-4167-890D-C0F9C520AE62@hannonhill.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<D73B595B-41B9-4167-890D-C0F9C520AE62@hannonhill.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526A4@wavemachine.temporal-wave.com>

I think it depends on what you mean by structure, what is really meant,
in terms of say a parser is whether you can super-impose a structure
that allows you to parse it, without this being so tortuous that it is
indeed pointing out that that is the wrong hammer. Here, I am not
convinced that you cannot do this reasonably with ANTLR, though a hand
crafted piece of code may be the smallest.

I think first you have to work out what the rules are for the language
properly, and not try to discover them as you go. For instance, is:
*bold phrase* allowed, or must this be *bold* *phrase* or *"bold
phrase"* I bet there is some limitation like that, otherwise any code
that say '*' anywhere would have to scan to the end of the text and what
happens if there is a genuine typo, you will get out of sync.

Then you move to the parser I think. I will spend a little time on this,
but for instance, if you start very small here, does the following work
just for the valid definitions of embolden? Is it anywhere close?
(Remember you cannot run this in interpretive mode in ANTLRWorks).

grammar wiki;

body	: text? EOF
	;
	
text 	: (BOLD DROSS+ BOLD)=>BOLD DROSS* BOLD
	| .+
	;
	
WS 	:	 ' ' | '\t' | '\n' | '\r' 	;
BOLD	:	'*' 				;
DROSS	: . 					;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Collin VanDyck
> Sent: Wednesday, June 06, 2007 2:56 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is ANTLR suitable for wiki grammar
> parsing?
> 
> 
> On Jun 6, 2007, at 2:26 PM, Randall R Schulz wrote:
> 
> > On Wednesday 06 June 2007 11:16, Martin d'Anjou wrote:
> >>> However, I cannot match something like:
> >>>
> >>> *bold* abc*de
> >>>
> >>> As it fails because there is no following '*' after de.
> >>>
> >>> And I think that this is essentially my problem.  I do want
> >>> something like
> >>>
> >>> *bold* abc*de
> >>>
> >>> To be accepted, and i'd like for the *bold* to be matched in the
> >>> bolded parser rule, but since the rest of the line doesn't match,
> to
> >>> simply count abc*de as a regular phrase.
> >>>
> >>> Is this possible?
> >>
> >> I am very interested in knowing if this is possible as well. I have
> >> many problems where input is very unstructured, and I am not
> >> convinced ANTLR is the right solution for those problems.
> >
> > My original feeling about the OP's problem is just this.
Context-free
> > grammars are all about structured. Rigid structure, precisely
> defined.
> > I don't see a parser generator as the tool of choice for loosely
> > structured or imprecisely defined inputs.
> >
> > The problem is that the number of rules you'd need and the
> > difficulty in
> > preventing unwanted interactions between those rules make this a
> > problem that verges on the insoluble with what a CFG parser
generator
> > gives you.
> >
> > IMO, of course.
> 
> Yes, this is what I'm beginning to feel is true about my quest to use
> ANTLR for this purpose.  No shame on ANTLR of course, it's seeming
> like it's simply a case of a great tool, but for a different job.  If
> anyone does have any recommendations on tools to accomplish what I'm
> trying to do, I would certainly appreciate it, though it is not my
> intent to throw this list's traffic off-topic.
> 
> -Collin
> 
> 
> -----
> Collin VanDyck
> CTO - Hannon Hill
> 


From win at wincent.com  Wed Jun  6 15:24:09 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 00:24:09 +0200
Subject: [antlr-interest] java.lang.OutOfMemoryError: Java heap space
In-Reply-To: <4A67A329E202470683697B557B777FD2@GWB>
References: <A10CD303B51F814DB568A8AAF02174C201FDE65F@orsmsx417.amr.corp.intel.com><B9BF3869-2C2A-4341-8CD8-21E15E8B3F80@cs.usfca.edu><D8B7B845-B6FA-4EC8-9303-F4A23B83166F@wincent.com>
	<FFAADD90-3C85-4F3B-A707-4EFA01C0AC6B@wincent.com>
	<4A67A329E202470683697B557B777FD2@GWB>
Message-ID: <35DB23D7-0653-40D6-A3B2-30924BEA7D44@wincent.com>

El 6/6/2007, a las 22:01, Robin Davies escribi?:

>> fragment DEC_OCTET
>>  : DIGIT               // 0-9
>>   | '1'..'9' DIGIT      // 10-99
>>   | '1' DIGIT DIGIT     // 100-199
>>  | '2' '0'..'4' DIGIT  // 200-249
>>   | '25' '0'..'5'       // 250-255
>>   ;
> Have to wonder whether this is really a smart thing to do. You're  
> using a lexer to enforce a semantic restriction: namely that a  
> DEC_OCTET must have a value between of 0 to 255.
>
> From an efficiency point of view, wouldn't it make sense to go for
>   DEC_OCTET: DIGIT+;  (not a fragment!)
> and then build addresses at the parser level rather than at the  
> lexer level, and enforce semantic restrictions either with  
> predicates, or (even better, I think) in the processing code.

I think you're probably right. I'm still trying to come to grips with  
all these boundaries (lexer/parser, terminal/non-terminal, syntactic/ 
semantic etc).

> One of the downsides of this kind of semantic enforcement lexically  
> is that you end up with crazy error messages like :
>
>   Input: 1.1.257.1
>    Error: Expecting ".", "0", "1", "2", "3", "4", or "5".
> (not a very helpful error message, in my opinion).
>
> If handle this error in a semantic level then you can provide much  
> more semantically relevant error messages like:
>   "Malformed IPv4 address".

Yes, I again think you're right. Luckily there's a chapter on error  
handling in Ter's book... will have to study up on it! I also need to  
figure out how (and if) it can be done when using the C target...

> Not knowing the details of the ANTLR DFA implementation, I have to  
> think that the amount of state information that a DFA has to track  
> is going to be crazy by the time you get a few octets into an IPv4  
> address. It doesn't surprise me that the size of the lexer DFA goes  
> ballistic, though.

I think the IPv4 address isn't too crazy, but the IPv6 one definitely  
is... I think you're right that the only way to handle it will be to  
use much loser restrictions at the syntactic level and then check at  
the semantic level.

> I'm struggling with this in some of the sample grammars. I can't  
> help thinking (for example) that it's a very bad idea to treat    
> "\z" in a C/C++/C# string as a lexical error ("not expecting 'z')  
> rather than a semantic error ("illegal escape sequence").

Most definitely...

Cheers,
Wincent




From rschulz at sonic.net  Wed Jun  6 15:27:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 6 Jun 2007 15:27:23 -0700
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org>
	<200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
Message-ID: <200706061527.23579.rschulz@sonic.net>

On Wednesday 06 June 2007 15:15, Wincent Colaiuta wrote:
> ...
>
> So what's the alternative? MediaWiki, for example, uses a very
> complicated set of hand-coded regular expressions. It works pretty
> well, but it does have its bugs and it's difficult to maintain. I'm
> hoping that the answer is not "hand-coded regular expressions"...

"Real programmers are not afraid of regular expressions."

"Without regular expressions, programming itself would be impossible."

And so on...


Truly, I don't know, but REs are surely better than some hand-written 
character-level analyzer, right?

Perhaps the answer is "mu." That is, the question is the wrong one. 
Maybe trying to give users a half free-form, half markup language input 
format is just the wrong way to go. Give them either a real 
word-processing-style GUI or a nice rigorous mark-up language. Or, 
given how many people understand a little HTML (at least enough for 
italic, bold and the kind of things the OP mentioned), perhaps 
recognizing a very restricted set of HTML tags would not be a bad idea.


> Cheers,
> Wincent


Randall Schulz

From win at wincent.com  Wed Jun  6 15:28:05 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 00:28:05 +0200
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
	<9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
Message-ID: <DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>

I tried that, on both the FOO rule and at the whole-grammar level  
(not sure if that only applies to the parser though) and it didn't  
work...

Cheers,
Wincent

El 6/6/2007, a las 22:48, Oliver Zeigermann escribi?:

> Maybe it could help to manually set the amount of lookahead to 7? I
> have not tried it, but this should include checks for all characters
> and only let FOO match for "bar:baz"
>
> HTH
>
> Oliver
>
> 2007/6/6, Wincent Colaiuta <win at wincent.com>:
>> I'm trying to understand how ANTLR's lookahead mechanisms work using
>> this grammar:
>>
>>    grammar Simple;
>>
>>    FOO: BAR ':' BAZ {System.out.println("FOO");};
>>    fragment BAR: 'bar' {System.out.println("BAR");};
>>    fragment BAZ: 'baz' {System.out.println("BAZ");};
>>    EVERYTHING_ELSE: . {System.out.println("EVERYTHING_ELSE");};
>>
>>    thing: .* EOF {System.out.println("done");};
>>
>> I basically wanted to explore the way lookahead works and what ANTLR
>> does when its lookahead predictions fail. For example, given the
>> following inputs:
>>
>> - "bar:baz": recognizes this as a FOO token
>> - "bar:ba": predicts FOO and complains about missing "z"
>> - "bar:b": predicts FOO and complains about missing "a"
>> - "bar:": predicts FOO and complains about missing "b"
>> - "bar": predicts FOO and complains about missing ":"
>> - "ba": predicts FOO and complains about missing "r"
>> - "b": accepts input as EVERYTHING_ELSE
>> - "...ba": accepts the periods as EVERYTHING_ELSE, then predicts FOO
>> complains about missing "r"
>>
>> This exercise was very helpful for me in seeing how ANTLR's lookahead
>> operates: basically, as soon as its seen enough input to predict the
>> presence of a particular token ("ba" is enough in this case), it
>> assumes that it really is that token, scans ahead, and raises an
>> exception if its expectations aren't met.
>>
>> So, one way to get this grammar to handle strings like "...ba"
>> without throwing exceptions is to use the filter=true option. I'm
>> curious to know, however, is there any other way?
>>
>> Cheers,
>> Wincent
>>
>>
>>


From open.zone at virgin.net  Wed Jun  6 15:48:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 6 Jun 2007 23:48:13 +0100
Subject: [antlr-interest] @header package not generated for <T>Lexer.java
In-Reply-To: <B5ACD5B0D63ABA4FB1A1B6C467964FBD06348754@NA-PA-VBE01.na.tibco.com>
Message-ID: <012101c7a88c$c4a453e0$c704a8c0@hercules>

Hi,
 
You need to use a separate @lexer::header {...} 
 
<aside>
IMO, this should have been "fixed" during the beta cycle as per
<http://www.antlr.org:8888/browse/ANTLR-35>
http://www.antlr.org:8888/browse/ANTLR-35.
</aside>
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pranab Dhar
Sent: 06 June 2007 21:16
To: antlr-interest at antlr.org
Subject: [antlr-interest] @header package not generated for <T>Lexer.java



Hi,

       I was able to generate the Parser and the Lexer java code from the
grammar and the package defined in the @header section of the grammar does
not get generated in the Lexer code.

 

grammar Tql;

 

options {

      language=Java;

      output=AST;

      backtrack=true;

      k=2;

      memoize=true;

}

 

tokens {

      SELECT_EXPR;

      ..

}

 

@header {

      package com.xxx.yyy.query.parser;   

}

 

And the generated lexer code is something like

 

 

// $ANTLR 3.0
C:\\xxxx\\workspaces\\xxxxxx\\src\\com\\xxxxx\\xxxx\\query\\parser\\TOql.g
2007-06-06 12:05:44

 

import org.antlr.runtime.*;

import java.util.Stack;

import java.util.List;

import java.util.ArrayList;

 

public class TqlLexer extends Lexer {

 

And the Parser code looks like

 

// $ANTLR 3.0 C
C:\\xxxx\\workspaces\\xxxxxx\\src\\com\\xxxxx\\xxxx\\query\\parser\\TOql.g
2007-06-06 12:05:43

 

      package com.xxx.yyy.query.parser;   

 

 

import org.antlr.runtime.*;

import java.util.Stack;

import java.util.List;

import java.util.ArrayList;

import java.util.Map;

import java.util.HashMap;

 

import org.antlr.runtime.tree.*;

 

public class TqlParser extends Parser {

    public static final String[] tokenNames = new String[] {

 

Any help and guidance is appreciated.

 

Thanks,

 

Pranab

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/86e87620/attachment-0001.html 

From jimi at temporal-wave.com  Wed Jun  6 16:19:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 16:19:42 -0700
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>

OK, taking a slightly different approach here, and I think that same approach would work for all Wiki type tags that I know of (but then although I like wikis, I am not overly enamored with the markup language ;-). Then for instance for bold, the following wil work nicely, and will distinguish the case you have below. Using the grammar:

grammar wiki;

body	: text* EOF
	;
	
text 	: (marked)=>marked
	| DROSS
	| WS
	| BOLD
	;
	
marked
	: BOLD DROSS+ BOLD
	;
		
WS 	: ' ' | '\t' | '\n' | '\r' 	;
BOLD	: '*' 				;
DROSS	: . 					;


So, the approach is that you explicitly tokenize those characters used in markup, and those that mean the markup is not valid. For instance spaces mean that wasn't a bold character. Then you predicate on a valid markup syntax, and just consume everything that is not a valid markup sequence. You could also do a similar thing with backtracking, but it is better to be explicit. I think that starting here, you should be able to add each wiki markup (do it one at a time and test it in ANTLRWorks in debug mode) and follow the same formulaic approach. 

Then you will probably end up with something more maintainable than regular expressions, which, cool as they are, are not for 'parsing' with really.

Using this grammar it would be easy to add actions to spit out HTML or whatever it is you want, as you go, as you probably don't need a tree to deal with this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Wednesday, June 06, 2007 3:15 PM
> To: Randall R Schulz
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is ANTLR suitable for wiki grammar
> parsing?
> 
> El 6/6/2007, a las 20:26, Randall R Schulz escribi?:
> 
> > On Wednesday 06 June 2007 11:16, Martin d'Anjou wrote:
> >>> However, I cannot match something like:
> >>>
> >>> *bold* abc*de
> >>>
> >>> As it fails because there is no following '*' after de.
> >>>
> >>> And I think that this is essentially my problem.  I do want
> >>> something like
> >>>
> >>> *bold* abc*de
> >>>
> >>> To be accepted, and i'd like for the *bold* to be matched in the
> >>> bolded parser rule, but since the rest of the line doesn't match,
> to
> >>> simply count abc*de as a regular phrase.
> >>>
> >>> Is this possible?
> >>
> >> I am very interested in knowing if this is possible as well. I have
> >> many problems where input is very unstructured, and I am not
> >> convinced ANTLR is the right solution for those problems.
> >
> > My original feeling about the OP's problem is just this. Context-free
> > grammars are all about structured. Rigid structure, precisely
> defined.
> > I don't see a parser generator as the tool of choice for loosely
> > structured or imprecisely defined inputs.
> >
> > The problem is that the number of rules you'd need and the
> > difficulty in
> > preventing unwanted interactions between those rules make this a
> > problem that verges on the insoluble with what a CFG parser generator
> > gives you.
> >
> > IMO, of course.
> 
> So what's the alternative? MediaWiki, for example, uses a very
> complicated set of hand-coded regular expressions. It works pretty
> well, but it does have its bugs and it's difficult to maintain. I'm
> hoping that the answer is not "hand-coded regular expressions"...
> 
> Cheers,
> Wincent
> 


From parrt at cs.usfca.edu  Wed Jun  6 16:28:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jun 2007 16:28:57 -0700
Subject: [antlr-interest] @header package not generated for <T>Lexer.java
In-Reply-To: <012101c7a88c$c4a453e0$c704a8c0@hercules>
References: <012101c7a88c$c4a453e0$c704a8c0@hercules>
Message-ID: <81309819-9756-4D9D-BD69-ECCE6A52E2A5@cs.usfca.edu>


On Jun 6, 2007, at 3:48 PM, Micheal J wrote:

> Hi,
>
> You need to use a separate @lexer::header {...}
>
> <aside>
> IMO, this should have been "fixed" during the beta cycle as per  
> http://www.antlr.org:8888/browse/ANTLR-35.
> </aside>

I had to make a choice between natural and inconsistent or "I have to  
look at the faq" and consistent. I chose the latter ;)

Ter

From dirty at apple.com  Wed Jun  6 18:16:23 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 6 Jun 2007 18:16:23 -0700
Subject: [antlr-interest] ANTLRWorks disappearing Interpreter pane...
Message-ID: <E5C5F0E9-64ED-4728-A5C4-E698296FD584@apple.com>

I just updated to 1.0.2 and I'm using the Interpreter pane.

But now, after a few times of hitting the "Play" button, the whole  
pane disappears.

It doesn't matter if I click on any other of the tabs, and then come  
back to Interpreter, it's gone.

Only way I can get it back is to quit and relaunch ANTLRWorks.

Anyone else seeing this?

Cameron Esfahani
dirty at apple.com

"There are times in the life of a nation when the only place a decent  
man can find himself is in prison."



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/67c5c40a/attachment.html 

From jimi at temporal-wave.com  Wed Jun  6 19:06:54 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jun 2007 19:06:54 -0700
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526A7@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Wednesday, June 06, 2007 3:15 PM
 
> So what's the alternative? MediaWiki, for example, uses a very
> complicated set of hand-coded regular expressions. It works pretty
> well, but it does have its bugs and it's difficult to maintain. I'm
> hoping that the answer is not "hand-coded regular expressions"...


So, to make this perhaps more explicit, here is a grammar for the first
few constructs of WikiPedia/MediaWiki. The only thing left to do really
is deal with those constructs that allow other marked text within them,
for instance, if you can put BOLD text in headers or whatever. But,
other than that it is just a matter of building on this I think. You
could also avoid some overhead by not just predicating (marked).

Jim



grammar wiki;

body: text* EOF
	;
	
text: (marked)=>marked
	| .
	;
	
marked	
	:             IBM IBM space_text+ IBM IBM               //
Italic
	|         IBM IBM IBM space_text+ IBM IBM IBM           // BOLD
	| IBM IBM IBM IBM IBM space_text+ IBM IBM IBM IBM IBM	  //
BOLD and Italic
	
	|               EQ EQ space_text+ EQ EQ                 //
Heading
	|            EQ EQ EQ space_text+ EQ EQ EQ              // Level
2
	|         EQ EQ EQ EQ space_text+ EQ EQ EQ EQ           // Level
3
	|      EQ EQ EQ EQ EQ space_text+ EQ EQ EQ EQ EQ        // Level
4
	
	| LBRACKET 
		(
			  LBRACKET space_text+ (BAR space_text+)?
RBRACKET RBRACKET	// Internal link
			| HTTP DROSS+ WS+ DROSS space_text* RBRACKET
// External link with description
		)
	
	| HTTP ((DROSS)=> DROSS)+
	| HLINE
	| HYPHEN HYPHEN TILDE TILDE TILDE ((TILDE)=> TILDE)?
	| BULLET space_text+ EOL (BULLET space_text+ EOL)+
	;

space_text
	: DROSS
	| WS
	;
			
WS 			:	' ' | '\t' 		;
EOL			:  	'\r'? '\n' 		;
BULLET		:	'*' 			;
EQ			: 	'='				;
LBRACKET	:	'['				;
RBRACKET	:	']'				;
IBM			:	'\''			;
BAR			:	'|'				;
HTTP		:	('h' | 'H')('t' | 'T')('t' | 'T')('p' |
'P')'://'	;
HLINE		: '----'			;
HYPHEN		: '-'				;
TILDE		: '~'				;
DROSS		: . 				;


From dirty at apple.com  Wed Jun  6 20:23:53 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 6 Jun 2007 20:23:53 -0700
Subject: [antlr-interest] Why doesn't this work?
Message-ID: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com>

I've spent a few hours trying to figure out why this test grammar  
doesn't work.  If I use ANTLRWorks to debug it, starting at rule  
"number_size", with an input of 100.UW, I end up getting a  
NoViableAltException error.

If I remove the IDENTIFIER rule, it seems to work.

And, if I add a space to the input (100.U W), then it seems to work  
as well.  Obviously I don't want that to work, 100.U W shouldn't be  
legal.  Why is it allowing it?

I can't wrap my head around it, but it seems like the UW portion of  
the input isn't matching to size_qualifier, it's matching to  
IDENTIFIER?  That can't be right, as IDENTIFIER doesn't contain a  
period character.

grammar Test;

options {
	output = AST;
	ASTLabelType = CommonTree;
}

tokens {
	SIZE_DEFAULT;
	SIZE_8;
	SIZE_16;
	SIZE_32;
	SIZE_64;
}

size_qualifier
	:	'.' ('U')? ('B') -> SIZE_8
	|	'.' ('U')? ('W') -> SIZE_16
	|	'.' ('U')? ('L') -> SIZE_32
	|	'.' ('U')? ('Q') -> SIZE_64
	;

number_size
	:	NUMBER size_qualifier	-> size_qualifier NUMBER
	|	NUMBER					-> SIZE_DEFAULT NUMBER
	;

NUMBER
	:	'-'? ( '0' | '1'..'9' '0'..'9'*)
	;

fragment LETTER
	:	'a'..'z'
	|	'A'..'Z'
	;

IDENTIFIER
	: LETTER ( LETTER | '-' | '_' | '0'..'9' )*
	;

Cameron Esfahani
dirty at apple.com

"In the elder days of Art, Builders wrought with greatest care each  
minute and unseen part; For the gods see everywhere."

"The Builders", H. W. Longfellow



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070606/32c3b3d0/attachment.html 

From tbrandonau at gmail.com  Wed Jun  6 21:04:23 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 7 Jun 2007 14:04:23 +1000
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com>
References: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com>
Message-ID: <ebc876d70706062104n7f02ed63t75e410e44df3d1db@mail.gmail.com>

All lexing occurs before parsing. "UW" is being matched by the IDENTIFIER
rule rather than the 'U' and 'W' rules generated by the parser literals. I
think because Antlr will prefer a longer match this cannot be fixed with
precedence (putting the 'U' and 'W' rules above IDENTIFIER, which I think
they already should be), "100.W" will correctly parse as then the higher
precedence of the 'W' rule allows it to win out over the IDENTIFIER rule
(meaning according to this grammar "U", "W" etc cannot be used as
identifiers).  Assuming that "UW" is a valid identifier (and so can't be
excluded from IDENTIFIER) you might need to make your size_qualifier rule
deal with IDENTIFIERs and use predicates to test the text. Something like:
size_qualifier:
    '.' {LT(1).text == "UW" || LT(1).text == "W"}? IDENTIFIER -> SIZE_16
;
Though I'm not sure of the exact syntax there.
Or you could exclude the size quantifiers from IDENTIFIER and then have a
rule including them in you parser. Something like:
size_qualifier:
'.' ('U'|'UW') -> SIZE_16
;
identifier:
    (IDENTIFIER|'U'|'UW')
    ;
Now 'UW' should win out over IDENTIFIER and in your parser you can use
identifier rather than IDENTIFIER to also match "U" and "UW".

Tom.

On 6/7/07, Cameron Esfahani <dirty at apple.com> wrote:
>
> I've spent a few hours trying to figure out why this test grammar doesn't
> work.  If I use ANTLRWorks to debug it, starting at rule "number_size", with
> an input of 100.UW, I end up getting a NoViableAltException error.
> If I remove the IDENTIFIER rule, it seems to work.
>
> And, if I add a space to the input (100.U W), then it seems to work as
> well.  Obviously I don't want that to work, 100.U W shouldn't be legal.
> Why is it allowing it?
>
> I can't wrap my head around it, but it seems like the UW portion of the
> input isn't matching to size_qualifier, it's matching to IDENTIFIER?  That
> can't be right, as IDENTIFIER doesn't contain a period character.
>
> grammar Test;
>
> options {
> output = AST;
> ASTLabelType = CommonTree;
> }
>
> tokens {
> SIZE_DEFAULT;
> SIZE_8;
> SIZE_16;
> SIZE_32;
> SIZE_64;
> }
>
> size_qualifier
> : '.' ('U')? ('B') -> SIZE_8
> | '.' ('U')? ('W') -> SIZE_16
> | '.' ('U')? ('L') -> SIZE_32
> | '.' ('U')? ('Q') -> SIZE_64
> ;
>
> number_size
> : NUMBER size_qualifier -> size_qualifier NUMBER
> | NUMBER -> SIZE_DEFAULT NUMBER
> ;
>
> NUMBER
> : '-'? ( '0' | '1'..'9' '0'..'9'*)
> ;
>
> fragment LETTER
> : 'a'..'z'
> | 'A'..'Z'
> ;
>
> IDENTIFIER
> : LETTER ( LETTER | '-' | '_' | '0'..'9' )*
> ;
>
> Cameron Esfahani
> dirty at apple.com
>
> "In the elder days of Art, Builders wrought with greatest care each minute
> and unseen part; For the gods see everywhere."
>
> "The Builders", H. W. Longfellow
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070607/ed259815/attachment-0001.html 

From win at wincent.com  Wed Jun  6 22:58:47 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 07:58:47 +0200
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
	<B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>
Message-ID: <46579CE6-DB3D-43D3-8F00-60A3CE837F66@wincent.com>

El 7/6/2007, a las 1:19, Jim Idle escribi?:

> So, the approach is that you explicitly tokenize those characters  
> used in markup, and those that mean the markup is not valid. For  
> instance spaces mean that wasn't a bold character. Then you  
> predicate on a valid markup syntax, and just consume everything  
> that is not a valid markup sequence. You could also do a similar  
> thing with backtracking, but it is better to be explicit. I think  
> that starting here, you should be able to add each wiki markup (do  
> it one at a time and test it in ANTLRWorks in debug mode) and  
> follow the same formulaic approach.

Thanks for all your input on this, Jim... it is really good to have  
someone with so much ANTLR experience indicating the way to go forward.

Yes, that basic idea (tokenizing sequences that have special meaning  
in the markup, and consuming non-valid markup) was what I was trying  
to do; thanks for the advice on using predicates to make this explicit.

> Then you will probably end up with something more maintainable than  
> regular expressions, which, cool as they are, are not for 'parsing'  
> with really.

Yes, totally agreed. It can certainly be done, and has been done many  
times, but I would rather avoid this kind of thing (almost 5,000  
lines of hand-crafted PHP):

<http://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/includes/ 
Parser.php?view=markup>

> Using this grammar it would be easy to add actions to spit out HTML  
> or whatever it is you want, as you go, as you probably don't need a  
> tree to deal with this.

Yes, I agree. In this case the wikitext has a very specific  
application (translation to HTML); there's probably no need for any  
kind of intermediate format, it should be just a straight translation  
from one form to another...

Cheers,
Wincent


From lists at xmart.ws  Thu Jun  7 00:04:20 2007
From: lists at xmart.ws (Elijah Epifanov)
Date: Thu, 07 Jun 2007 11:04:20 +0400
Subject: [antlr-interest] Using rewrite rules with conditionals...
In-Reply-To: <DD309605-1663-40AE-9B9F-A9C087164D13@apple.com>
References: <02A50A70-7084-4E7A-9D70-4009F20B10D9@apple.com>
	<46668AAF.8020400@xmart.ws>
	<DD309605-1663-40AE-9B9F-A9C087164D13@apple.com>
Message-ID: <4667ADF4.7030607@xmart.ws>



Cameron Esfahani wrote:
> I modified your example a little to account for NUMBER:
> 
> optional_size_qualifier
> : size_qualifier? -> size_qualifier
> | -> SIZE_DEFAULT
> ;

Change this to:
optional_size_qualifier
: size_qualifier -> size_qualifier
| -> SIZE_DEFAULT
;

(the ambiguity is that empty input can be matched by both alternatives)

> 
> size_qualifier
> : PERIOD 'U'? size_postfix -> size_postfix
> ;
> 
> size_postfix
> : 'B' -> SIZE_8
> | 'W' -> SIZE_16
> | 'L' -> SIZE_32
> | 'Q' -> SIZE_64
> ;
> 
> number_size
> : NUMBER optional_size_qualifier -> optional_size_qualifier NUMBER
> ;
> 
> And I get lots of errors:
> 
> error(211): T.g:223:4: [fatal] rule optional_size_qualifier has 
> non-LL(*) decision due to recursive rule invocations reachable from alts 
> 1,2.  Resolve by left-factoring or using syntactic predicates or using 
> backtrack=true option.
> 
> 
> 
> On Jun 6, 2007, at 3:21 AM, Elijah Epifanov wrote:
> 
>> Hi, I think this will do the job (start rule is now 
>> optional_size_qualifier):
>>
>>
>> optional_size_qualifier
>>
>> : size_qualifier -> size_qualifier
>>
>> | -> SIZE_DEFAULT
>>
>> ;
>>
>>
>> size_qualifier
>>
>> : '.' ( 'u' | 'U' )? size_postfix -> size_postfix
>>
>> ;
>>
>>
>> size_postfix
>>
>> : ( 'b' | 'B' ) -> SIZE_8
>>
>> | ( 'w' | 'W' ) -> SIZE_16
>>
>> | ( 'l' | 'L' ) -> SIZE_32
>>
>> | ( 'q' | 'Q' ) -> SIZE_64
>>
>> ;
>>
> 
> Cameron Esfahani
> dirty at apple.com <mailto:dirty at apple.com>
> 
> "Even paranoids have enemies."
> 
> Henry Kissinger
> 
> 
> 

From oliver at zeigermann.de  Thu Jun  7 00:50:39 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Thu, 7 Jun 2007 09:50:39 +0200
Subject: [antlr-interest] Grammar problem, probably silly....
In-Reply-To: <46671E52.1090806@gmx.de>
References: <1181024458.7226.0.camel@rogue> <46659901.9000502@gmx.de>
	<9da4f4520706061340s3afc6b2me7bf010142c1378f@mail.gmail.com>
	<46671E52.1090806@gmx.de>
Message-ID: <9da4f4520706070050n550ae626i4673b9f82cd3a06e@mail.gmail.com>

Java target.

Oliver

2007/6/6, Ruth Karl <ruth.karl at gmx.de>:
> Thanks a lot, that is good news indeed!
> Just for curiosity: did you try with C# or with Java as target language?
>
> Ruth
>
>
> Oliver Zeigermann schrieb:
> > Hi!
> >
> > I just tested you grammar (outside of ANTLRWorks) and it works like it
> > should.
> >
> > Cheers
> >
> > Oliver
> >
> > 2007/6/5, Ruth Karl <ruth.karl at gmx.de>:
> >> Hi,
> >>
> >> I have been trying quite a while now, but I keep getting a
> >> MismatchedTokenException with the following simplified test grammar:
> >>
> >>         grammar JSP;
> >>
> >>         options {
> >>             language = CSharp;
> >>             output = AST;
> >>         }
> >>
> >>
> >>         @members {
> >>              boolean xmlDoc = false;
> >>               boolean outputEnabled = false;
> >>         }
> >>
> >>
> >>
> >>         @lexer::members {
> >>                 boolean tagMode = false;
> >>         }
> >>
> >>         // Parser rules
> >>         jsp    :    oroot (content)* croot EOF
> >>             ;
> >>         oroot     :     OPENTAG OROOT CLOSETAG
> >>             ;
> >>         croot    :    OPENTAG '/jsp:root' CLOSETAG
> >>             ;
> >>         content    :     TEXT
> >>             ;
> >>
> >>
> >>
> >>         // Lexer rules
> >>         OPENTAG     :     '<' { tagMode = true; }
> >>             ;
> >>         CLOSETAG     :     '>' { tagMode = false; }
> >>             ;
> >>         TEXT    :    {!tagMode}?=> (~'<')+
> >>         ;
> >>         OROOT    :    'jsp:root'
> >>          ;
> >>
> >> The exception occurs when I print
> >>
> >>         <jsp:root>ljlj</jsp:root>
> >>
> >> in the interpreter and tell it to start from jsp rule.
> >> it says (4!=5), according to the generated files this is OROOT=5 and
> >> OPENTAG=4.
> >> Could anyone please help me with that???
> >>
> >> Thanks a lot!
> >>
> >> Ruth
> >>
> >
>
>

From ssiegel at finjan.com  Thu Jun  7 00:56:56 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 7 Jun 2007 10:56:56 +0300
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <E75F7460-54D8-43B9-BAFE-3F4143C12D08@cs.usfca.edu>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com><4663EC35.7060009@shmuelhome.mine.nu>
	<E75F7460-54D8-43B9-BAFE-3F4143C12D08@cs.usfca.edu>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C01FDA88A@exmail1.finjan.com>

Thanks. With the sudden surge in activity in this newsgroup, I thought
that it would be prudent to raise the visibility of a potential bug
report. I didn't want it to get lost among the other messages. Sorry if
I offended anybody in the group by looking like I was complaining or
demanding help.

Shmuel

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, June 06, 2007 9:52 PM
To: ANTR Interest
Subject: Re: [antlr-interest] Problems with Antlr3 rewrite rules


On Jun 4, 2007, at 3:40 AM, shmuel siegel wrote:

> It seems that the problems were introduced with the move to  
> RewriteRuleSubtreeStream. I don't see any other substantive changes  
> in the generated parser code.

Hi. added a bug report:

http://www.antlr.org:8888/browse/ANTLR-133

Thakns!
Ter


From win at wincent.com  Thu Jun  7 02:56:35 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 11:56:35 +0200
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526A7@wavemachine.temporal-wave.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
	<B36CCC332A32904F8FA3DE134A2353362526A7@wavemachine.temporal-wave.com>
Message-ID: <DA286179-CD70-48EC-AE67-7A8F828E5734@wincent.com>

El 7/6/2007, a las 4:06, Jim Idle escribi?:

> grammar wiki;
>
> body: text* EOF
> 	;
> 	
> text: (marked)=>marked
> 	| .
> 	;
> 	
> marked	
> 	:             IBM IBM space_text+ IBM IBM               //
> Italic
> 	|         IBM IBM IBM space_text+ IBM IBM IBM           // BOLD
> 	| IBM IBM IBM IBM IBM space_text+ IBM IBM IBM IBM IBM	  //
> BOLD and Italic
> 	
> 	|               EQ EQ space_text+ EQ EQ                 //
> Heading
> 	|            EQ EQ EQ space_text+ EQ EQ EQ              // Level
> 2
> 	|         EQ EQ EQ EQ space_text+ EQ EQ EQ EQ           // Level
> 3
> 	|      EQ EQ EQ EQ EQ space_text+ EQ EQ EQ EQ EQ        // Level
> 4
> 	
> 	| LBRACKET
> 		(
> 			  LBRACKET space_text+ (BAR space_text+)?
> RBRACKET RBRACKET	// Internal link
> 			| HTTP DROSS+ WS+ DROSS space_text* RBRACKET
> // External link with description
> 		)
> 	
> 	| HTTP ((DROSS)=> DROSS)+
> 	| HLINE
> 	| HYPHEN HYPHEN TILDE TILDE TILDE ((TILDE)=> TILDE)?
> 	| BULLET space_text+ EOL (BULLET space_text+ EOL)+
> 	;
>
> space_text
> 	: DROSS
> 	| WS
> 	;
> 			
> WS 			:	' ' | '\t' 		;
> EOL			:  	'\r'? '\n' 		;
> BULLET		:	'*' 			;
> EQ			: 	'='				;
> LBRACKET	:	'['				;
> RBRACKET	:	']'				;
> IBM			:	'\''			;
> BAR			:	'|'				;
> HTTP		:	('h' | 'H')('t' | 'T')('t' | 'T')('p' |
> 'P')'://'	;
> HLINE		: '----'			;
> HYPHEN		: '-'				;
> TILDE		: '~'				;
> DROSS		: . 				;

Any ideas how to make this grammar handle inputs like this one?

   of all the protocols, http is my favorite

Here the generated lexer will complain when it sees "http" followed  
by a space:

   mismatched character ' ' expecting ':'

I tried a number of ways to cope with this. For example, changing the  
lookahead length of the HTTP rule:

   HTTP
   options { k=7; }
     : ('h' | 'H')('t' | 'T')('t' | 'T')('p' | 'P') '://' ;

Naturally that doesn't help because k sets the upper limit on  
lookahead, it doesn't set a minimum lookahead that must be taken  
before making a prediction.

I also tried turning backtracking on for that rule (no effect):

   HTTP
   options { backtrack=true; }
     : ('h' | 'H')('t' | 'T')('t' | 'T')('p' | 'P') '://' ;

I also tried using a syntactic predicate (no effect):

   HTTP: (HTTP_FRAG)=> HTTP_FRAG;
   fragment HTTP_FRAG: ('h' | 'H')('t' | 'T')('t' | 'T')('p' | 'P')  
'://' ;

I also tried the longer, less readable form written without using a  
fragment:

   HTTP: (('h' | 'H')('t' | 'T')('t' | 'T')('p' | 'P') '://')=> ('h'  
| 'H')('t' | 'T')('t' | 'T')('p' | 'P') '://';

I gather that a syntactic predicate doesn't help here because it's  
only used for prioritizing alternatives, and here there are no  
alternatives from which to choose.

I understand that gated *semantic* predicates, on the other hand, can  
be used because they are not so much about prioritizing alternatives  
as about turning alternatives on and off. But semantic predicates  
seem quite difficult to use here and I'm not sure if it's a good idea  
or not; I feel like I am definitely abusing the feature rather than  
using it the way it was intended:

   HTTP
   : {
       (input.LA(1) == 'h' || input.LA(1) == 'H') &&
       (input.LA(2) == 't' || input.LA(2) == 'T') &&
       (input.LA(3) == 't' || input.LA(3) == 'T') &&
       (input.LA(4) == 'p' || input.LA(4) == 'P') &&
       input.LA(5) == ':' &&
       input.LA(6) == '/' &&
       input.LA(7) == '/'
     }?=> ('h' | 'H')('t' | 'T')('t' | 'T')('p' | 'P') '://' ;

Finally there is the option of using "filter=true"; that also works,  
but it cripples the parser (actions in the parser don't run, @after  
blocks don't run, only @init blocks run; there may be other issues  
too but those are the ones I've empirically verified so far). It  
seems that Ter never intended that option to be used with a lexer- 
plus-parser, only with a lexer on its own.

So what's the best solution here? Handling strings like "the http  
protocol" is pretty important for a wiki.

I'm hoping there's something very simple that I can do to effectively  
do a "filter = true" in the lexer, without breaking the parser (I  
tried using separate files for the lexer and parser but I couldn't  
get it to work). The readme says "filter=true for lexers turns on k=1  
and backtracking for every token alternative.  Put the rules in  
priority order."; I tried literally doing that (passing filter=true  
and k=1 via an options block to each and every lexer rule), but the  
behaviour didn't change.

Cheers,
Wincent


From win at wincent.com  Thu Jun  7 03:22:55 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 12:22:55 +0200
Subject: [antlr-interest] Is ANTLR suitable for wiki grammar parsing?
In-Reply-To: <DA286179-CD70-48EC-AE67-7A8F828E5734@wincent.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>
	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>
	<B36CCC332A32904F8FA3DE134A2353362526A7@wavemachine.temporal-wave.com>
	<DA286179-CD70-48EC-AE67-7A8F828E5734@wincent.com>
Message-ID: <78E91022-DB09-44E5-9D37-FDC9E305E473@wincent.com>

El 7/6/2007, a las 11:56, Wincent Colaiuta escribi?:

> Any ideas how to make this grammar handle inputs like this one?
>
>   of all the protocols, http is my favorite

The problem is actually worse than I first realized. Although an  
isolated "h" can appear in the input without triggering the  
exception, even strings like this one (note the embedded "ht")  
trigger the problem:

    a weightless experience

The generated lexer complains, "mismatched character 'l' expecting  
set null".

There are no shortage of words in the English language containing  
"ht" (try "grep ht /usr/share/dict/words | wc -l" or similar... I get  
over 1600 on my system)... But I'm not so concerned about this  
specific problem; I'm more worried about the general case because I  
am certain this exact problem will crop up again in the future and  
I'd like to know how to deal with it in a generalized way.

Cheers,
Wincent


From ruth.karl at gmx.de  Thu Jun  7 05:08:30 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Thu, 07 Jun 2007 14:08:30 +0200
Subject: [antlr-interest]  ANTLRWorks: Export as Bitmap image...
In-Reply-To: <46579CE6-DB3D-43D3-8F00-60A3CE837F66@wincent.com>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>	<B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>
	<46579CE6-DB3D-43D3-8F00-60A3CE837F66@wincent.com>
Message-ID: <4667F53E.5020804@gmx.de>

Hi again,

I wondered how to export a syntax diagram for documentation purpose from 
ANTLWorks. Right clicking on the diagram (OR on the parser rule in the 
grammar window) I get but an alert:

                    There is no rule at cursor position

Is it a bug or a feature ;-) ? Or am I thinking/doing something wrong again?
Thanks and greetings,

Ruth


From jaluber at gmx.de  Thu Jun  7 05:47:43 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 07 Jun 2007 14:47:43 +0200
Subject: [antlr-interest] ANTLRWorks: Export as Bitmap image...
In-Reply-To: <4667F53E.5020804@gmx.de>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>	<B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>	<46579CE6-DB3D-43D3-8F00-60A3CE837F66@wincent.com>
	<4667F53E.5020804@gmx.de>
Message-ID: <4667FE6F.3020404@gmx.de>

Ruth Karl wrote:
> Hi again,
> 
> I wondered how to export a syntax diagram for documentation purpose from
> ANTLWorks. Right clicking on the diagram (OR on the parser rule in the
> grammar window) I get but an alert:
> 
>                    There is no rule at cursor position
> 
> Is it a bug or a feature ;-) ? Or am I thinking/doing something wrong
> again?

I don't manage to get a dot file export of the whole grammar. I suppose
that this is a bug. I can only make an EPS export of the rule in the
grammar window, if I put the cursor in this rule and right click in the
syntax diagram and choose the EPS option. Bitmap doesn't work even then.
Unfortunately, one can't get the entire syntax tree right now.

Best regards,
Johannes Luber

P.S.: Please don't create emails with an entirely new subject via
answering to another email and changing the subject. The email system
supports threaded views of emails, so it obvious who answered which
email (something very useful for such an emailing group). Ignoring this
practice results in burying your email deeply in a tree. In your case 7
levels below the root in a really big tree - a great hiding place.

From win at wincent.com  Thu Jun  7 06:27:00 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 15:27:00 +0200
Subject: [antlr-interest] Bug report: handling of %
Message-ID: <9655C99B-61DA-4981-B806-BDC571B28AC5@wincent.com>

Trying to compile this sample grammar:

   grammar Simple;

   @lexer::members {
     // %
   }

   FOO: 'foo' ;
   thing: .* EOF;

Yields the following:

   error(146): Simple.g:2:10: invalid StringTemplate % shorthand  
syntax: '%'

Evidently "%" has special meaning for StringTemplate but it seems  
that there is either a bug in ANTLR for allowing a character in a  
comment to prevent compilation, or a bug in the documentation for not  
explaining how to workaround the issue (please correct me if I'm  
wrong about that). The error message itself isn't very helpful as it  
doesn't point to the actual location of the problem.

There doesn't seem to be any way to escape the % character either, as  
\% yields the same error.

Needless to say, I wanted to do something more useful than just  
include a comment; in my real grammar I was comparing against '%'. In  
the end, the workaround was to use a literal 37 (decimal value for %  
in ASCII) in my @lexer::members section, but that kind of workaround  
may not be possible for everyone.

Cheers,
Wincent


From ruth.karl at gmx.de  Thu Jun  7 07:15:45 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Thu, 07 Jun 2007 16:15:45 +0200
Subject: [antlr-interest] CSharp target problems
In-Reply-To: <0D3088FF500B44EDA0A5638129FAEF88@GWB>
References: <0D3088FF500B44EDA0A5638129FAEF88@GWB>
Message-ID: <46681311.70802@gmx.de>

Hi all,  :-)

I have the same problem...
Any hint, solution or workaround yet? (In case someone answered already 
and I missed it: sorry for asking again...)

I wrote the following test method for my grammar:

   static void Main()
        {

            string dir = @"D:\TestCases";
            DirectoryInfo info = new DirectoryInfo(dir);
            FileInfo[] files = info.GetFiles();
            foreach (FileInfo fi in files)
            {
                System.IO.FileStream fs = new FileStream(fi.FullName, 
FileMode.Open);
                Console.WriteLine("Parsing {0}...", fs.Name);
                Antlr.Runtime.ANTLRInputStream input = new 
Antlr.Runtime.ANTLRInputStream(fs);
                JSPLexer lexer = new JSPLexer(input);
                Antlr.Runtime.CommonTokenStream tokens = new 
Antlr.Runtime.CommonTokenStream(lexer);
                JSPParser parser = new JSPParser(tokens);
                parser.jsp();
            }
        }

This hangs at the line where the constructor of 
Antlr.Runtime.ANTLRInputStream is called - so I am not able to debug my 
grammar at all :'(
(ANTLRWorks won't debug C#-target, either...)

I am working on Vista, VS 2005, antlr3.runtime with runtime version 
v2.0.50727 and version 0.3.0.37313.

Thanks & cheers,

Ruth


Robin Davies schrieb:
> I'm now trying to bring up my grammar in c#.
>  
>
>     System.IO.Stream fileStream = new 
> System.IO.FileStream(file,FileMode.Open);
>
>     ANTLRInputStream input = new 
> ANTLRInputStream(fileStream,Encoding.UTF8);
>
> The constructor appears to hang. I'm using the CSharp runtime out of 
> the source distribution (which is distributed in compiled form).
>
> Where can I find the sources for the C# antlr runtime? All I can find 
> is the binaries.
>
> Thanks in advance.
>
>  
>
>  
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070607/e4bd7e2b/attachment.html 

From pink at odahoda.de  Thu Jun  7 07:07:17 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 07 Jun 2007 16:07:17 +0200
Subject: [antlr-interest] Bug report: handling of %
References: <9655C99B-61DA-4981-B806-BDC571B28AC5@wincent.com>
Message-ID: <f493el$f9u$1@sea.gmane.org>

Wincent Colaiuta wrote:

> Trying to compile this sample grammar:
> 
>    grammar Simple;
> 
>    @lexer::members {
>      // %
>    }
> 
>    FOO: 'foo' ;
>    thing: .* EOF;
> 
> Yields the following:
> 
>    error(146): Simple.g:2:10: invalid StringTemplate % shorthand
> syntax: '%'
> 
> Evidently "%" has special meaning for StringTemplate but it seems
> that there is either a bug in ANTLR for allowing a character in a
> comment to prevent compilation, or a bug in the documentation for not
> explaining how to workaround the issue (please correct me if I'm
> wrong about that).

ANTLR does not know that it is in a comment - it does not parse the action
code (because then it would have to know the grammars for all target
languages), it just replaces $.. and %.. stuff with the appropriate code.
I don't know, if it is documented and where - but I rarely read
documentation anyway... Oh wait - I wrote a note about the '%' for the
Python target, because in Python the use of the % operator is rather
common.

> The error message itself isn't very helpful as it 
> doesn't point to the actual location of the problem.
> 
> There doesn't seem to be any way to escape the % character either, as
> \% yields the same error.

mm... usually \% should do the trick.
testing..
mmm?!?

Without \ I get 
error(146): /tmp/Simple.g:3:17: invalid StringTemplate % shorthand
syntax: '%'
error(146): /tmp/Simple.g:2:10: invalid StringTemplate % shorthand
syntax: '%'

The first one is the 'expected' error. And it goes away when the % is
escaped.
The second error is nonsense... there is nothing at 2:10, line 2 is empty -
where does this come from?

Strange...

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From rerdavies at rogers.com  Thu Jun  7 07:24:51 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Thu, 7 Jun 2007 10:24:51 -0400
Subject: [antlr-interest] Help with syntactic predicates vs. non-LL(*)
	decisions.
Message-ID: <27CF218616AD4E4581A9D0C4FD7CE2CC@GWB>

Before I resort to turning backtrackingon, I was wondering if someone could 
help me out with this point.

I'm dealing with the dreaded C# 2.generic vs. expression ambiguity. The core 
issue is that generic type arguments require non-LL() infinite lookahead 
predicate to correctly recognize expressions like the following:

    E(X<Y,Z   ...  <-- Is '<' start of a generic, or a binary operator??
    E(X<Y,Z>.Q())      It's a generic. X<Y,Z>
    E(X<Y,A)            It's an expression. X<Y
    E(X<Y,Z>A)       It's ambigious, so prefer "generic" interpretation, per 
the standard and issue an error.

The solution is supposed to be a fairly symple syntactic predicate that 
scans incoming tokens for a blanced matching '>'. (Published C# parsers 
pre-scan the incoming token stream looking for a closing '>'0.

Sure enough, as soon as I add the first rule for generics, ANTLR complains 
about non-LL(*) recursive expressions. (Quite correctly so).

I was under the impression that an ANTL semantic predicate would cure the 
issue. But maybe I'm missing a subtlety.

Here are the offending rules, with a semantic predicate applied:

    qualifiedname
        :    ID '::' type_or_generic
                    -> ^(EXTERNQNAME ID type_or_generic)
        | type_or_generic('.' type_or_generic)*
                    -> ^(QNAME type_or_generic*)
        ;
type_or_generic
    :     (ID '<' {TypeArgumentPredicateTest()}?) =>
            ID '<' typedeclaration (',' typedeclaration)* '>'
    |    ID
    ;

typedeclaration recurses into qualified name. And the fundamental problem: 
'<' is ambiguous with respect to
     expr '<' expr

(where expr recurses to qualifiedname)

With the syntactic predicate in place, I still get the non-LL(*) error. 
It's possible that I have other non-LL(*) issues. So an answer of "Yes that 
*should* work" would be really helpful.

The question:

Isn't the semantic predicate supposed to cure the non-LL(*) conflict? Or is 
there a deeper issue that I need to chase.

Possible answers: Yes it *should* work. Maybe there's another LL(*) problem. 
Close, but...  or <eyeroll>, no you're totally missing it, go read section 
12.2 again <grin>

Any help or insight appreciated.



From jbb at acm.org  Thu Jun  7 11:14:32 2007
From: jbb at acm.org (John B. Brodie)
Date: 07 Jun 2007 14:14:32 -0400
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com> (message from
	Cameron Esfahani on Wed, 06 Jun 2007 20:23:53 -0700)
References: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com>
Message-ID: <873b13zl6f.fsf@gecko.home.org>

A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 4457 bytes
Desc: ANTLR mechanism for emitting multiple tokens
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070607/a32c088b/attachment.obj 

From bace.spam at gmx.net  Thu Jun  7 09:38:19 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Thu, 07 Jun 2007 18:38:19 +0200
Subject: [antlr-interest] is there any standard tree?
In-Reply-To: <20070606181615.19150@gmx.net>
References: <20070606181615.19150@gmx.net>
Message-ID: <20070607163819.318840@gmx.net>

Is this too simple or too stupid? Don't hesitate to answer ;)

cheers

> Hi,
> 
> I want to get the AST from the parser. I set the option "output=AST;" and
> saved the return object from the parser.
> 
> Now I would like to walk (DFS) through the tree. But using the getChild(i)
> method gives me only the tokens of the leafs. Where are the other nodes
> between root and leafs? I also tried:
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> nodes.setTokenStream(tokens);
> 
> But nodes.toString() also returns only the tokens. Is there any way to get
> the entire AST, without writing a new grammar for a tree walker?
> 
> 
> Thank you very much for any reply !!!
> Best, Markus
-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From rschulz at sonic.net  Thu Jun  7 11:38:33 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 7 Jun 2007 11:38:33 -0700
Subject: [antlr-interest] is there any standard tree?
In-Reply-To: <20070606181615.19150@gmx.net>
References: <20070606181615.19150@gmx.net>
Message-ID: <200706071138.33884.rschulz@sonic.net>

On Wednesday 06 June 2007 11:16, Markus Kuhla wrote:
> Hi,
>
> I want to get the AST from the parser. I set the option "output=AST;"
> and saved the return object from the parser.
>
> Now I would like to walk (DFS) through the tree. But using the
> getChild(i) method gives me only the tokens of the leafs. ...
>
> ... Is there any way to get the entire AST, without writing a new
> grammar for a tree walker?

I think the basic fact is there is no single, unique or meaningful 
default for how to produce an abstract syntax tree from the parse tree 
(which _is_ explicitly and uniquely defined by the grammar 
productions).

Thus you must write all the transformations that define how to construct 
the AST from the productions of the grammar.


> Thank you very much for any reply !!!
> Best, Markus


Randall Schulz

From parrt at cs.usfca.edu  Thu Jun  7 11:49:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Jun 2007 11:49:53 -0700
Subject: [antlr-interest] is there any standard tree?
In-Reply-To: <20070607163819.318840@gmx.net>
References: <20070606181615.19150@gmx.net> <20070607163819.318840@gmx.net>
Message-ID: <9955D102-859A-4618-BBF9-40259BA5DCC9@cs.usfca.edu>

"depth first walk" is  your keyword search.  Each node is a simple  
list of children.

I think you are also asking how to make a tree that is not a flat  
linked list.  Use rewrite rules and possibly ! and ^ operators.  See  
examples.  Easy. :)

Ter
On Jun 7, 2007, at 9:38 AM, Markus Kuhla wrote:

> Is this too simple or too stupid? Don't hesitate to answer ;)
>
> cheers
>
>> Hi,
>>
>> I want to get the AST from the parser. I set the option  
>> "output=AST;" and
>> saved the return object from the parser.
>>
>> Now I would like to walk (DFS) through the tree. But using the  
>> getChild(i)
>> method gives me only the tokens of the leafs. Where are the other  
>> nodes
>> between root and leafs? I also tried:
>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>> nodes.setTokenStream(tokens);
>>
>> But nodes.toString() also returns only the tokens. Is there any  
>> way to get
>> the entire AST, without writing a new grammar for a tree walker?
>>
>>
>> Thank you very much for any reply !!!
>> Best, Markus
> -- 
> Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten
> Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From parrt at cs.usfca.edu  Thu Jun  7 11:52:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Jun 2007 11:52:01 -0700
Subject: [antlr-interest] Help with syntactic predicates vs. non-LL(*)
	decisions.
In-Reply-To: <27CF218616AD4E4581A9D0C4FD7CE2CC@GWB>
References: <27CF218616AD4E4581A9D0C4FD7CE2CC@GWB>
Message-ID: <D297AC0E-9B30-477D-A31F-A0124BCA078B@cs.usfca.edu>


On Jun 7, 2007, at 7:24 AM, Robin Davies wrote:
> I was under the impression that an ANTL semantic predicate would  
> cure the issue. But maybe I'm missing a subtlety.

Hi Robin. I think you mean syntactic predicates you're not semantic. ;)

> Here are the offending rules, with a semantic predicate applied:
>
>    qualifiedname
>        :    ID '::' type_or_generic
>                    -> ^(EXTERNQNAME ID type_or_generic)
>        | type_or_generic('.' type_or_generic)*
>                    -> ^(QNAME type_or_generic*)
>        ;
> type_or_generic
>    :     (ID '<' {TypeArgumentPredicateTest()}?) =>
>            ID '<' typedeclaration (',' typedeclaration)* '>'
>    |    ID
>    ;

You have these syntactic predicates in the rule that doesn't need  
it. ;) I believe you will need to syntactic predicates up in  
qualified name.

Or just turn on backtrack=true and antlr will do the right thing. :)

Ter

From win at wincent.com  Thu Jun  7 12:38:33 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 7 Jun 2007 21:38:33 +0200
Subject: [antlr-interest] UCS-2/UTF-16 clarification
Message-ID: <CCBDE77E-A510-4200-A756-F78CE670ED79@wincent.com>

Sorry to be bothering you with so many questions, Jim... I just  
wanted to ask you for some quick clarification about the UCS-2/UTF-16  
support in the C language target. I'm initializing my stream using  
antlr3NewUCS2StringInPlaceStream (the string is already in memory,  
not coming in from a file).

Is it correct that the C target is effectively "encoding agnostic"?  
ie. it doesn't really care what your input coding is, it just  
operates on 16 bit integers? In other words, if I ensure that I  
really do hand it UCS-2-encoded input then it will just do the right  
thing?

My actual grammars are going to be in ASCII, even though the input  
text they are expected to process could conceivably be in another  
encoding, and ANTLR will convert those grammars into C source files  
which again are just ASCII.

I just wanted to clarify this because of the minor differences  
between UCS-2 and UTF-16; they overlap for the most part but only  
UTF-16 supports surrogates and some glyphs require two characters,  
whereas UCS-2 only ever users single 16 bit characters and no  
surrogates (simpler but can't encode as many code points). But as far  
as the C target is concerned, it's just working with 16-bit integers,  
right? So in reality, as long as I hand it properly encoded UCS-2 I  
shouldn't have any problems? (I seriously doubt I'll ever have to  
handle input which can't be encoded in UCS-2.)

Cheers,
Wincent



From jimi at temporal-wave.com  Thu Jun  7 13:00:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 7 Jun 2007 13:00:24 -0700
Subject: [antlr-interest] UCS-2/UTF-16 clarification
In-Reply-To: <CCBDE77E-A510-4200-A756-F78CE670ED79@wincent.com>
References: <CCBDE77E-A510-4200-A756-F78CE670ED79@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526B3@wavemachine.temporal-wave.com>

The default 16 bit UCS2 stream is encoding unaware, never mind agnostic
;-). It just picks up the next 16 bits from the stream when asked for
the next character, and rewinds using 16 bits rather than 8. It is
UTF-16 without surrogates, unless you code your lexer to look for the
surrogates as two character pairs.

The code generator for C realizes that it must generate ASCII, so it
does not try to place any literal strings you define in your lexer in to
"abc" type strings, but in arrays of UTF32 characters, which means it
works perfectly.

So, I is Java specifying the lexer, so you get UCS2 Unicode encoding,
and your input stream basically supplies this as a stream of 32 bit
integers which are compared against the Unicode code points and it is
very efficient.

If your input encoding is not just ASCII 8 bit or UCS2, then you may
need to insert a translating version of the _LA function defined for the
input stream. A quick debug session will show you exactly what to do
until I document that bit more fully. It is more likely that you would
need this for strange 8 bit encodings that n a 16 bit input which is
more often than not UCS2 anyway. In essence then, the default streams
will cover about 90% of all cases I think.

Jim

> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com]
> Sent: Thursday, June 07, 2007 12:39 PM
> To: ANTLR mail-list
> Cc: Jim Idle
> Subject: UCS-2/UTF-16 clarification
> 
> Sorry to be bothering you with so many questions, Jim... I just
> wanted to ask you for some quick clarification about the UCS-2/UTF-16
> support in the C language target. I'm initializing my stream using
> antlr3NewUCS2StringInPlaceStream (the string is already in memory,
> not coming in from a file).
> 
> Is it correct that the C target is effectively "encoding agnostic"?
> ie. it doesn't really care what your input coding is, it just
> operates on 16 bit integers? In other words, if I ensure that I
> really do hand it UCS-2-encoded input then it will just do the right
> thing?
> 
> My actual grammars are going to be in ASCII, even though the input
> text they are expected to process could conceivably be in another
> encoding, and ANTLR will convert those grammars into C source files
> which again are just ASCII.
> 
> I just wanted to clarify this because of the minor differences
> between UCS-2 and UTF-16; they overlap for the most part but only
> UTF-16 supports surrogates and some glyphs require two characters,
> whereas UCS-2 only ever users single 16 bit characters and no
> surrogates (simpler but can't encode as many code points). But as far
> as the C target is concerned, it's just working with 16-bit integers,
> right? So in reality, as long as I hand it properly encoded UCS-2 I
> shouldn't have any problems? (I seriously doubt I'll ever have to
> handle input which can't be encoded in UCS-2.)
> 
> Cheers,
> Wincent
> 


From tbrandonau at gmail.com  Thu Jun  7 18:27:39 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 8 Jun 2007 11:27:39 +1000
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <F526DF4D-7553-4BE4-8CE5-E8A9EC2F4AD9@apple.com>
References: <AC8F996C-EB8C-4567-B876-4C7693F49539@apple.com>
	<ebc876d70706062104n7f02ed63t75e410e44df3d1db@mail.gmail.com>
	<F526DF4D-7553-4BE4-8CE5-E8A9EC2F4AD9@apple.com>
Message-ID: <ebc876d70706071827v78d8a554o3e0b09e2543a3b89@mail.gmail.com>

I believe that Antlr will automatically give precedence to a longer match.
So while "UW" could be matched as two tokens 'U' and 'W' which are both of a
higher precedence than IDENTIFIER Antlr gives precedence to the match of
single IDENTIFIER token. Hence having a token for 'UW', as in the second
example I gave, causes Antlr to correctly give precedence to this when
seeing "UW".

Tom.

On 6/8/07, Cameron Esfahani <dirty at apple.com> wrote:
>
> I've been looking at the wiki, and in some of the documentation, and it
> claims:
> The earlier a token is defined, the higher is the precedence if a certain
> input can be matched by two or more tokens. This means that using the tokens
> command to define keywords will match those keywords instead a more general
> ID rule
>
> So I'm still not clear why the "UW" is being matched by IDENTIFIER in my
> test grammar.  IDENTIFIER is the last rule in Test.g.
>
> On Jun 6, 2007, at 9:04 PM, Thomas Brandon wrote:
>
> All lexing occurs before parsing. "UW" is being matched by the IDENTIFIER
> rule rather than the 'U' and 'W' rules generated by the parser literals. I
> think because Antlr will prefer a longer match this cannot be fixed with
> precedence (putting the 'U' and 'W' rules above IDENTIFIER, which I think
> they already should be), " 100.W" will correctly parse as then the higher
> precedence of the 'W' rule allows it to win out over the IDENTIFIER rule
> (meaning according to this grammar "U", "W" etc cannot be used as
> identifiers).  Assuming that "UW" is a valid identifier (and so can't be
> excluded from IDENTIFIER) you might need to make your size_qualifier rule
> deal with IDENTIFIERs and use predicates to test the text. Something like:
>
>
>
> Cameron Esfahani
> dirty at apple.com
>
> "Americans are very skilled at creating a custom meaning from something
> that's mass-produced."
>
> Ann Powers
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070608/d921477b/attachment.html 

From rerdavies at rogers.com  Thu Jun  7 18:39:00 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Thu, 7 Jun 2007 21:39:00 -0400
Subject: [antlr-interest] CSharp target problems
In-Reply-To: <46681311.70802@gmx.de>
References: <0D3088FF500B44EDA0A5638129FAEF88@GWB> <46681311.70802@gmx.de>
Message-ID: <9C408043C530400C936C502AC716A499@GWB>

>                System.IO.FileStream fs = new FileStream(fi.FullName, 
> FileMode.Open);
>               Console.WriteLine("Parsing {0}...", fs.Name);
>               Antlr.Runtime.ANTLRInputStream input = new 
> Antlr.Runtime.ANTLRInputStream(fs);

Yes. I have the workaround....

  ICharStream input = new ANTLRFileStream(fiFullName, Encoding.UTF8);
  XxxLexer lexer = new XxxLexer(input);
  CommonTokenStream tokens = new CommonTokenStream(lexer);
  XxxParser parser = new XxxParser(tokens);

If I could figure out where the sources for the C# target was, I'd be happy 
to contribute fixes/docs or other effort as well.



From chittivamshi at yahoo.co.in  Fri Jun  8 00:57:08 2007
From: chittivamshi at yahoo.co.in (chitti vamshi)
Date: Fri, 8 Jun 2007 08:57:08 +0100 (BST)
Subject: [antlr-interest] Generating XML for a expression using Grammar!
Message-ID: <788239.97775.qm@web94506.mail.in2.yahoo.com>

Hello,
  
<?xml version='1.0' encoding='utf-8'?>  <slideshow       title="Sample Slide Show"      date="Date of publication"      author="Yours Truly">      <slide type="all">        <title>Wake up to WonderWidgets!</title>
    </slide>  
</slideshow>  I am new to writing a Grammar File.

How to generate a sample Grammar file based upon the above xml file.

Tnx a million in advance.

Bye

       
---------------------------------
 Did you know? You can CHAT without downloading messenger.  Know how!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070608/08e1419a/attachment.html 

From sven at efftinge.de  Fri Jun  8 01:22:56 2007
From: sven at efftinge.de (Sven Efftinge)
Date: Fri, 8 Jun 2007 10:22:56 +0200
Subject: [antlr-interest] [v3] parser rules are final
Message-ID: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>

Hi,

I just updated to the latest version of V3 (have used a beta before)
Unfortunately I found that the generated parser rules are flagged as  
final now.

I have a subclass which overwrites each rule and adds Location  
information to my custom AST elements. Something like this:

public final Expression listLiteral() throws RecognitionException {
    updateLocation(listLiteral());
}

public <T extends AstElement> T updateLocation(T ele) {
	//doing stuff with input.LT(1) and input.LT(-1)
	return T;
}

1st question:
Is there a better way to do that generically? (without thirdparty AOP  
stuff)

2nd Question:
Is there a way to say Antlr not to add the final keyword?

thanks,
Sven


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070608/18926e87/attachment.html 

From win at wincent.com  Fri Jun  8 02:07:33 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 8 Jun 2007 11:07:33 +0200
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
Message-ID: <9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>

El 8/6/2007, a las 10:22, Sven Efftinge escribi?:

> 2nd Question:
> Is there a way to say Antlr not to add the final keyword?

ANTLR's output is generated using StringTemplate. If you dare, you  
could try tweaking the Java template to tailor the output as you  
desire, then rebuilding ANTLR. I believe this is the template that  
you'd need to modify:

<http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
templates/Java/Java.stg?r=3682>

But I imagine it's a non-trivial task, and any change to the template  
could have unanticipated ripple effects, so is not to be taken  
lightly...

Cheers,
Wincent


From jaluber at gmx.de  Fri Jun  8 02:38:54 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 08 Jun 2007 11:38:54 +0200
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
Message-ID: <466923AE.8050707@gmx.de>

Wincent Colaiuta wrote:
> El 8/6/2007, a las 10:22, Sven Efftinge escribi?:
> 
>> 2nd Question:
>> Is there a way to say Antlr not to add the final keyword?
> 
> ANTLR's output is generated using StringTemplate. If you dare, you could
> try tweaking the Java template to tailor the output as you desire, then
> rebuilding ANTLR. I believe this is the template that you'd need to modify:
> 
> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/templates/Java/Java.stg?r=3682>
> 
> 
> But I imagine it's a non-trivial task, and any change to the template
> could have unanticipated ripple effects, so is not to be taken lightly...

It isn't necessary to rebuild ANTLR. The StringTemplate files are
entirely independent (with the exception of the data model) from ANTLR.
I suppose that it is only necessary to find in Java.stg the template
which is responsible for the parser code and remove there the final
keyword. A simple search for final in Java.stg should show the suitable one.

Best regards,
Johannes Luber

From alessnet at gmail.com  Fri Jun  8 03:23:39 2007
From: alessnet at gmail.com (Alessandro)
Date: Fri, 8 Jun 2007 12:23:39 +0200
Subject: [antlr-interest] BaseTreeAdaptor.becomeRoot throws
	NullPointerException
In-Reply-To: <be9e4140706051233m509fdc8fob84bc1ff87a6ba64@mail.gmail.com>
References: <be9e4140706051233m509fdc8fob84bc1ff87a6ba64@mail.gmail.com>
Message-ID: <be9e4140706080323h53051d78w9f94d1bd75a20015@mail.gmail.com>

Hello,

Does nobody really know if this is a "normal" behavior ?

This is how I call the parser :

String text = "var = \r\n";
			
ANTLRStringStream input = new
ANTLRStringStream(text.toCharArray(),text.length());
KixExempleDebugLexer lexer = new KixExempleDebugLexer(input);
CommonTokenStream tokens = new CommonTokenStream(lexer);
KixExempleDebugParser parser = new KixExempleDebugParser(tokens);
parser.prog();

This is where the code crash, in "public final multExpr_return multExpr()" :

root_0 = (Object)adaptor.nil();

pushFollow(FOLLOW_atom_in_multExpr249);
atom10=atom(); // atom procedure doesn't create any AST because there
is not match
_fsp--;
root_0 = (Object)adaptor.becomeRoot(atom10.getTree(), root_0); //
throws "java.lang.NullPointerException" because atom10.getTree() =
null

I didn't change any generated source code. Do I have to put my own
TreeAdaptor to prevent this error from occurring ?

Thanks


On 6/5/07, Alessandro <alessnet at gmail.com> wrote:
> Hello,
>
> I'm learning to use ANTLR thank to examples.
> There is no error when I try to parse a syntactically correct text
> with my genereted parser.
> But when I give a specific erroneus text to my parser, there is an
> exception when creating the AST.
>
> adaptor.becomeRoot(atom10.getTree(), root_0);
> throws "NullPointerException" because of failing rule
> (NoViableAltException). This failing rule returns no AST, thus
> atom10.getTree() == null.
>
> Is this normal ?
> Thanks :-)
>
> My input text : "var ="
> Here is my grammar (with -debug option) :
>
>
> options {output=AST; }
>
> tokens
> {
>         PROG_DEC='PROG_DEC';
>         ASSIGN='ASSIGN';
>         EXRP = 'EXPR';
>         MULEXPR= 'MULEXPR';
> }
>
>
> prog:   stat+
>         -> ^(PROG_DEC stat*);
>
> stat:   expr NEWLINE {  /*expression*/ } -> ^(EXRP expr)
>     |   ID EQUAL expr NEWLINE { /* assignation match?e*/ } -> ^(ASSIGN
> ID ^(EXRP expr))
>
>     |   NEWLINE!
>     ;
>
> expr
>     :   (multExpr { /* multExpr */ } -> ^(MULEXPR multExpr))
>         ( op=OP
>                 s1=multExpr {/* +multExpr*/ }
>         -> ^($op $expr ^(MULEXPR $s1))
>         )*
>     ;
>
> multExpr
>     :   atom^ {/*  atom ... */ } ('*'^ atom {/* * atom */ })*
>     ;
>
> atom
>     :   INT^ {/* INT */}
>     |   ID^  {/* ID */}
>     |   PL expr PR {/* (expr) */} -> ^(EXRP expr)
>     ;
>
> ID  :   ('a'..'z'|'A'..'Z')+ ;
> INT :   '0'..'9'+ ;
> NEWLINE!:'\r'? '\n' ;
> WS!  :   (' '|'\t')+ {skip();} ;
> OP      :       '+' | '-';
> PL      :       '(' ;
> PR      :       ')' ;
> EQUAL   :       '=' ;
>

From win at wincent.com  Fri Jun  8 03:38:37 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 8 Jun 2007 12:38:37 +0200
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <466923AE.8050707@gmx.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
Message-ID: <C7F50DC6-BEFF-4DF3-AD74-F8BECD8AD255@wincent.com>

El 8/6/2007, a las 11:38, Johannes Luber escribi?:

> Wincent Colaiuta wrote:
>>
>> ANTLR's output is generated using StringTemplate. If you dare, you  
>> could
>> try tweaking the Java template to tailor the output as you desire,  
>> then
>> rebuilding ANTLR. I believe this is the template that you'd need  
>> to modify:
>>
>> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
>> templates/Java/Java.stg?r=3682>
>>
>>
>> But I imagine it's a non-trivial task, and any change to the template
>> could have unanticipated ripple effects, so is not to be taken  
>> lightly...
>
> It isn't necessary to rebuild ANTLR. The StringTemplate files are
> entirely independent (with the exception of the data model) from  
> ANTLR.
> I suppose that it is only necessary to find in Java.stg the template
> which is responsible for the parser code and remove there the final
> keyword. A simple search for final in Java.stg should show the  
> suitable one.

But that file is inside the antlr-3.0.jar, isn't it? Don't you have  
to at the very least unpack the jar, modify the template, and then  
repackage the jar? That's what I meant when I said "rebuild"... but  
do you mean there's an easier way which doesn't require manipulation  
of the jar?

Cheers,
Wincent



From jaluber at gmx.de  Fri Jun  8 03:48:30 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 08 Jun 2007 12:48:30 +0200
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <C7F50DC6-BEFF-4DF3-AD74-F8BECD8AD255@wincent.com>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
	<C7F50DC6-BEFF-4DF3-AD74-F8BECD8AD255@wincent.com>
Message-ID: <466933FE.9050607@gmx.de>

Wincent Colaiuta wrote:
> El 8/6/2007, a las 11:38, Johannes Luber escribi?:
> But that file is inside the antlr-3.0.jar, isn't it? Don't you have to
> at the very least unpack the jar, modify the template, and then
> repackage the jar? That's what I meant when I said "rebuild"... but do
> you mean there's an easier way which doesn't require manipulation of the
> jar?

That's not entirely right. There is also a src directory parallel to the
lib directory, so one can manipulate the Java.stg in there and pack a
new antlr-3.0.jar. I'm sure there is way to skip even the packaging but
that would probably make a replacement more difficult later. And for me
"rebuild" means the compilation of the entire source code, so part of
our argument was a misunderstanding.

Best regards,
Johannes Luber

From monty at codetransform.com  Fri Jun  8 06:48:08 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Fri, 8 Jun 2007 06:48:08 -0700
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
Message-ID: <598864c70706080648j4a20312wcf59945ff523cc6@mail.gmail.com>

On 6/8/07, Sven Efftinge <sven at efftinge.de> wrote:
...Something about saving location information...
> 1st question:
> Is there a better way to do that generically? (without thirdparty AOP stuff)

Check the documentation further, or check for an example with a custom
token or custom AST.  With ANTLR 2 you used to be able to create your
own Token type and store whatever information you needed in there.
There was some particular method called to actually create the token,
which you could override.  That token is passed to the AST constructor
so that the AST could get whatever it needed out of the token.  There
must be a similar strategy at play in ANTLR 3.

Monty

From fabiomaulo at gmail.com  Fri Jun  8 07:11:43 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Fri, 08 Jun 2007 11:11:43 -0300
Subject: [antlr-interest] Grammar from BNF
Message-ID: <4669639F.70205@gmail.com>

Create a ANTLR lexer&grammar from a formal BNF like this 
http://savage.net.au/SQL/sql-2003-2.bnf , is a good or a bad idea ?
With a so grained lexer, how many slow will be the parser ?
Is it a good thing for token recognizer ?

Thanks.
Fabio.


From jimi at temporal-wave.com  Fri Jun  8 07:56:14 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 07:56:14 -0700
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526B9@wavemachine.temporal-wave.com>

Sven,

 

If you really want  to do this, then you can change the code gen
template trivially as you just need to remove the final keyword from the
java.stg code generation template for rule() then either rebuild the jar
or make sure that the template is seen first. The rules were made final
because this makes the generated java code faster.

 

However, perhaps this is better done with a custom AST node, where you
can add probably add this to the constructor?

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sven Efftinge
Sent: Friday, June 08, 2007 1:23 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [v3] parser rules are final

 

Hi,

 

I just updated to the latest version of V3 (have used a beta before)

Unfortunately I found that the generated parser rules are flagged as
final now.

 

I have a subclass which overwrites each rule and adds Location
information to my custom AST elements. Something like this:

 

public final Expression listLiteral() throws RecognitionException {

   updateLocation(listLiteral());

}

 

public <T extends AstElement> T updateLocation(T ele) {

      //doing stuff with input.LT(1) and input.LT(-1)

      return T;

}

 

1st question:

Is there a better way to do that generically? (without thirdparty AOP
stuff)

 

2nd Question:

Is there a way to say Antlr not to add the final keyword?

 

thanks,

Sven





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070608/62bdac84/attachment.html 

From jimi at temporal-wave.com  Fri Jun  8 08:04:27 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 08:04:27 -0700
Subject: [antlr-interest] BaseTreeAdaptor.becomeRoot
	throwsNullPointerException
In-Reply-To: <be9e4140706080323h53051d78w9f94d1bd75a20015@mail.gmail.com>
References: <be9e4140706051233m509fdc8fob84bc1ff87a6ba64@mail.gmail.com>
	<be9e4140706080323h53051d78w9f94d1bd75a20015@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526BA@wavemachine.temporal-wave.com>

Hmm - debatable whether you should get the crash, which I presume is null exception on atom10 after an NVE? 

However, I suspect that what is happening is that you are generating a default tree or have not covered the case, so you can either 'fix' this or work around it, depending on whether this is really a bug or not by looking for it. We would need to see your grammar to see exactly why it causes this, but for the moment, let's presume that atom10 can somehow be null and you still want to generate a tree, then:

r1: e1=r2 (PLUS e2=r2)
	-> {$e2 != null}? ^(PLUS e1 e2)
	-> e1
;

Or something similar, more apropos to your purpose should get you around that. 

However it looks a bit suspicious that it is trying to generate a tree on an error, unless this is just cascading up the expression tree and by the time you try to use it... etc.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alessandro
> Sent: Friday, June 08, 2007 3:24 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] BaseTreeAdaptor.becomeRoot
> throwsNullPointerException
> 
> Hello,
> 
> Does nobody really know if this is a "normal" behavior ?
> 
> This is how I call the parser :
> 
> String text = "var = \r\n";
> 
> ANTLRStringStream input = new
> ANTLRStringStream(text.toCharArray(),text.length());
> KixExempleDebugLexer lexer = new KixExempleDebugLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> KixExempleDebugParser parser = new KixExempleDebugParser(tokens);
> parser.prog();
> 
> This is where the code crash, in "public final multExpr_return
> multExpr()" :
> 
> root_0 = (Object)adaptor.nil();
> 
> pushFollow(FOLLOW_atom_in_multExpr249);
> atom10=atom(); // atom procedure doesn't create any AST because there
> is not match
> _fsp--;
> root_0 = (Object)adaptor.becomeRoot(atom10.getTree(), root_0); //
> throws "java.lang.NullPointerException" because atom10.getTree() =
> null
> 
> I didn't change any generated source code. Do I have to put my own
> TreeAdaptor to prevent this error from occurring ?
> 
> Thanks
> 
> 
> On 6/5/07, Alessandro <alessnet at gmail.com> wrote:
> > Hello,
> >
> > I'm learning to use ANTLR thank to examples.
> > There is no error when I try to parse a syntactically correct text
> > with my genereted parser.
> > But when I give a specific erroneus text to my parser, there is an
> > exception when creating the AST.
> >
> > adaptor.becomeRoot(atom10.getTree(), root_0);
> > throws "NullPointerException" because of failing rule
> > (NoViableAltException). This failing rule returns no AST, thus
> > atom10.getTree() == null.
> >
> > Is this normal ?
> > Thanks :-)
> >
> > My input text : "var ="
> > Here is my grammar (with -debug option) :
> >
> >
> > options {output=AST; }
> >
> > tokens
> > {
> >         PROG_DEC='PROG_DEC';
> >         ASSIGN='ASSIGN';
> >         EXRP = 'EXPR';
> >         MULEXPR= 'MULEXPR';
> > }
> >
> >
> > prog:   stat+
> >         -> ^(PROG_DEC stat*);
> >
> > stat:   expr NEWLINE {  /*expression*/ } -> ^(EXRP expr)
> >     |   ID EQUAL expr NEWLINE { /* assignation match?e*/ } ->
> ^(ASSIGN
> > ID ^(EXRP expr))
> >
> >     |   NEWLINE!
> >     ;
> >
> > expr
> >     :   (multExpr { /* multExpr */ } -> ^(MULEXPR multExpr))
> >         ( op=OP
> >                 s1=multExpr {/* +multExpr*/ }
> >         -> ^($op $expr ^(MULEXPR $s1))
> >         )*
> >     ;
> >
> > multExpr
> >     :   atom^ {/*  atom ... */ } ('*'^ atom {/* * atom */ })*
> >     ;
> >
> > atom
> >     :   INT^ {/* INT */}
> >     |   ID^  {/* ID */}
> >     |   PL expr PR {/* (expr) */} -> ^(EXRP expr)
> >     ;
> >
> > ID  :   ('a'..'z'|'A'..'Z')+ ;
> > INT :   '0'..'9'+ ;
> > NEWLINE!:'\r'? '\n' ;
> > WS!  :   (' '|'\t')+ {skip();} ;
> > OP      :       '+' | '-';
> > PL      :       '(' ;
> > PR      :       ')' ;
> > EQUAL   :       '=' ;
> >

From win at wincent.com  Fri Jun  8 08:12:11 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 8 Jun 2007 17:12:11 +0200
Subject: [antlr-interest] Bug report: handling of % (and $)
In-Reply-To: <f493el$f9u$1@sea.gmane.org>
References: <9655C99B-61DA-4981-B806-BDC571B28AC5@wincent.com>
	<f493el$f9u$1@sea.gmane.org>
Message-ID: <7BABB9D7-384A-467B-9CBA-437C7D5CE2EF@wincent.com>

El 7/6/2007, a las 16:07, Benjamin Niemann escribi?:

> mm... usually \% should do the trick.
> testing..
> mmm?!?
>
> Without \ I get
> error(146): /tmp/Simple.g:3:17: invalid StringTemplate % shorthand
> syntax: '%'
> error(146): /tmp/Simple.g:2:10: invalid StringTemplate % shorthand
> syntax: '%'
>
> The first one is the 'expected' error. And it goes away when the % is
> escaped.
> The second error is nonsense... there is nothing at 2:10, line 2 is  
> empty -
> where does this come from?
>
> Strange...

Just discovered another inconsistency, again only shows up in the  
lexer-specific space:

// Next line is fine...
// \$Id$

@lexer::header {
// Next line triggers a StringTemplate error...
// \$Id$
}

@header {
// Next line is fine...
// \$Id$
}

Those are Id tags which get auto-updated by Subversion/SVK when  
committing. The backslash before the leading $ is necessary to  
suppress StringTemplate warnings. Just like in the example previously  
posted, the escaping doesn't work in the @lexer-specific section,  
except this time it's a "$" in the "header" section which is the  
issue rather than a "%" in the "members" section. And once again the  
line number information is way off.

Cheers,
Wincent


From rschulz at sonic.net  Fri Jun  8 08:18:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 8 Jun 2007 08:18:52 -0700
Subject: [antlr-interest] Grammar from BNF
In-Reply-To: <4669639F.70205@gmail.com>
References: <4669639F.70205@gmail.com>
Message-ID: <200706080818.52680.rschulz@sonic.net>

On Friday 08 June 2007 07:11, Fabio Maulo wrote:
> Create a ANTLR lexer&grammar from a formal BNF like this
> http://savage.net.au/SQL/sql-2003-2.bnf , is a good or a bad idea ?
> With a so grained lexer, how many slow will be the parser ?
> Is it a good thing for token recognizer ?

I think you could cobble together a transliterator fairly easily.

In fact, you could probably write an ANTLR-based tool to perform the 
transliteration...

There do appear to be quite a few notations "See the Syntax Rules."

Otherwise, it's probably amenable to efficient treatment by ANTLR or 
other parser generators.


> Thanks.
> Fabio.


Randall Schulz


From parrt at cs.usfca.edu  Fri Jun  8 09:03:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jun 2007 09:03:41 -0700
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <466923AE.8050707@gmx.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
Message-ID: <CCE50D30-B60F-4FBA-A009-150E8B555448@cs.usfca.edu>


On Jun 8, 2007, at 2:38 AM, Johannes Luber wrote:

> Wincent Colaiuta wrote:
>> El 8/6/2007, a las 10:22, Sven Efftinge escribi?:
>>
>>> 2nd Question:
>>> Is there a way to say Antlr not to add the final keyword?
>>
>> ANTLR's output is generated using StringTemplate. If you dare, you  
>> could
>> try tweaking the Java template to tailor the output as you desire,  
>> then
>> rebuilding ANTLR. I believe this is the template that you'd need  
>> to modify:
>>
>> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
>> templates/Java/Java.stg?r=3682>
>>
>>
>> But I imagine it's a non-trivial task, and any change to the template
>> could have unanticipated ripple effects, so is not to be taken  
>> lightly...
>
> It isn't necessary to rebuild ANTLR. The StringTemplate files are
> entirely independent (with the exception of the data model) from  
> ANTLR.
> I suppose that it is only necessary to find in Java.stg the template
> which is responsible for the parser code and remove there the final
> keyword. A simple search for final in Java.stg should show the  
> suitable one.

Yep. Easy.  Just delete final in one place and rerun antlr. no need  
to build. :)

All code in antlr is generated with templates.

Ter


From parrt at cs.usfca.edu  Fri Jun  8 09:05:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jun 2007 09:05:40 -0700
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <C7F50DC6-BEFF-4DF3-AD74-F8BECD8AD255@wincent.com>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
	<C7F50DC6-BEFF-4DF3-AD74-F8BECD8AD255@wincent.com>
Message-ID: <189591AD-06F2-4195-BE54-0BD4BA5C372F@cs.usfca.edu>


On Jun 8, 2007, at 3:38 AM, Wincent Colaiuta wrote:
> But that file is inside the antlr-3.0.jar, isn't it? Don't you have  
> to at the very least unpack the jar, modify the template, and then  
> repackage the jar? That's what I meant when I said "rebuild"... but  
> do you mean there's an easier way which doesn't require  
> manipulation of the jar?

Just save that file, change it, and add to your classpath ahead of  
antlr and you're fine! It's load with the classpath. Ain't that cool!?

Ter

From porcelli at uol.com.br  Fri Jun  8 10:09:49 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Fri, 8 Jun 2007 14:09:49 -0300
Subject: [antlr-interest] Grammars that uses Keyword as Identifiers
Message-ID: <ee873c070706081009t3a263a6es79ad5c259dd9efc4@mail.gmail.com>

Hi All...

  I'm constructing a T-SQL grammar and this grammar accepts keywords
as identifiers. So I started to implement as Terr suggested on his
book (page 287 - Keyword as Variables):

address_key
	: {input.LT(1).getText().equalsIgnoreCase("address")}? IDENTIFIER
	;

But... the generated code for the parser has a problem in
specialStateTransition method.. it has a semantic predicate use..  :

if ( ((input.LT(1).getText().equalsIgnoreCase("constraint")||input.LT(1).getText().equalsIgnoreCase("identity")||input.LT(1).getText().equalsIgnoreCase("collate")))
) {s = 3;}

else if ( ((input.LT(1).getText().equalsIgnoreCase("create")||input.LT(1).getText().equalsIgnoreCase("primary")||input.LT(1).getText().equalsIgnoreCase("alter")||input.LT(1).getText().equalsIgnoreCase("constraint")))
) {s = 2;}

I could solve this problem... just externalizing with a function:

@parser::members {
	private boolean validateIdentifierKey(String text){
		return input.LT(1).getText().equalsIgnoreCase(text);
	}
}

address_key
	: {validateIdentifierKey("address")}? IDENTIFIER
	;

Now it woks... but now the parser behavior looses most of its LL(*)
advantages (as Terr advices in the book when he talks about the DFA
evaluation)...

I'd like to ask/suggest/propose if it would be possible to create a
way to identify a special rule with some specific option should be
treated as an identifier but codes related to LL(*) still, something
like:

address_key
options {keywordText = "address";}
	: IDENTIFIER
	;

or something like fragment syntax:

keyword
address_key
	: 'address'
	;

There are several languages that needs this kind of behavior (I can
remember for now: COBOL, Natual/Adabas, JCL, T-SQL, PL-SQL).

Best Regards,
Alexandre Porcelli

From klists at saphor.de  Fri Jun  8 11:01:28 2007
From: klists at saphor.de (Marc)
Date: Fri, 08 Jun 2007 20:01:28 +0200
Subject: [antlr-interest] C target: problems with setCharStream
Message-ID: <46699978.5030106@saphor.de>

Hello!

Using the C target (libantlr3c-3.0.0-rc8), antlr 3.0 and the SimpleCalc
grammar from
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3
I keep getting a core dump both under Mac OS X (PPC) and Debian Linux
(Intel):

This is the dump on gdb under Mac OS X, the one under Linux is according:

-------
Starting program: calc 1+1

Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_PROTECTION_FAILURE at address: 0x0000000e
0x0001cf04 in setCharStream ()
--------

On both systems I have compiled the program with:

gcc -I IncludePath -I. simplecalcLexer.c simplecalcParser.c -LLibPath
-lantlr3c -o calc

(having renamed the grammar from SimpleCalc to simplecalc)

Compiling the program with gcc 4.0 (Mac) and 4.1.2 (Linux) gives me the
following warnings:

simplecalcLexer.c:190: warning: 'mPLUS' declared inline after being called
simplecalcLexer.c:190: warning: previous declaration of 'mPLUS' was here
simplecalcLexer.c:191: warning: 'mMINUS' declared inline after being called
simplecalcLexer.c:191: warning: previous declaration of 'mMINUS' was here
simplecalcLexer.c:192: warning: 'mMULT' declared inline after being called
simplecalcLexer.c:192: warning: previous declaration of 'mMULT' was here
simplecalcLexer.c:193: warning: 'mDIV' declared inline after being called
simplecalcLexer.c:193: warning: previous declaration of 'mDIV' was here
simplecalcLexer.c:194: warning: 'mNUMBER' declared inline after being called
simplecalcLexer.c:194: warning: previous declaration of 'mNUMBER' was here
simplecalcLexer.c:195: warning: 'mWHITESPACE' declared inline after
being called
simplecalcLexer.c:195: warning: previous declaration of 'mWHITESPACE'
was here
simplecalcLexer.c:196: warning: 'mDIGIT' declared inline after being called
simplecalcLexer.c:196: warning: previous declaration of 'mDIGIT' was here
simplecalcParser.c: In function 'main':
simplecalcParser.c:290: warning: pointer targets in passing argument 1
of 'antlr3AsciiFileStreamNew' differ in signedness

(the last two warnings only under Mac)

Any ideas? Thanks in advance for any tips!

Best regards,

Marc






From jimi at temporal-wave.com  Fri Jun  8 11:08:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 11:08:15 -0700
Subject: [antlr-interest] C target: problems with setCharStream
In-Reply-To: <46699978.5030106@saphor.de>
References: <46699978.5030106@saphor.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526BE@wavemachine.temporal-wave.com>

I'll take a look at it, but perhaps that example is wrong? Please try
with the official examples for the C target if you would - I suspect
that the use of the C objects is not correct in that example..

I am aware of those warnings but have not had time to deal with them
this week. A bug fixing session will happen this weekend.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marc
> Sent: Friday, June 08, 2007 11:01 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target: problems with setCharStream
> 
> Hello!
> 
> Using the C target (libantlr3c-3.0.0-rc8), antlr 3.0 and the
SimpleCalc
> grammar from
>
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+AN
> TLR+3
> I keep getting a core dump both under Mac OS X (PPC) and Debian Linux
> (Intel):
> 
> This is the dump on gdb under Mac OS X, the one under Linux is
> according:
> 
> -------
> Starting program: calc 1+1
> 
> Program received signal EXC_BAD_ACCESS, Could not access memory.
> Reason: KERN_PROTECTION_FAILURE at address: 0x0000000e
> 0x0001cf04 in setCharStream ()
> --------
> 
> On both systems I have compiled the program with:
> 
> gcc -I IncludePath -I. simplecalcLexer.c simplecalcParser.c -LLibPath
> -lantlr3c -o calc
> 
> (having renamed the grammar from SimpleCalc to simplecalc)
> 
> Compiling the program with gcc 4.0 (Mac) and 4.1.2 (Linux) gives me
the
> following warnings:
> 
> simplecalcLexer.c:190: warning: 'mPLUS' declared inline after being
> called
> simplecalcLexer.c:190: warning: previous declaration of 'mPLUS' was
> here
> simplecalcLexer.c:191: warning: 'mMINUS' declared inline after being
> called
> simplecalcLexer.c:191: warning: previous declaration of 'mMINUS' was
> here
> simplecalcLexer.c:192: warning: 'mMULT' declared inline after being
> called
> simplecalcLexer.c:192: warning: previous declaration of 'mMULT' was
> here
> simplecalcLexer.c:193: warning: 'mDIV' declared inline after being
> called
> simplecalcLexer.c:193: warning: previous declaration of 'mDIV' was
here
> simplecalcLexer.c:194: warning: 'mNUMBER' declared inline after being
> called
> simplecalcLexer.c:194: warning: previous declaration of 'mNUMBER' was
> here
> simplecalcLexer.c:195: warning: 'mWHITESPACE' declared inline after
> being called
> simplecalcLexer.c:195: warning: previous declaration of 'mWHITESPACE'
> was here
> simplecalcLexer.c:196: warning: 'mDIGIT' declared inline after being
> called
> simplecalcLexer.c:196: warning: previous declaration of 'mDIGIT' was
> here
> simplecalcParser.c: In function 'main':
> simplecalcParser.c:290: warning: pointer targets in passing argument 1
> of 'antlr3AsciiFileStreamNew' differ in signedness
> 
> (the last two warnings only under Mac)
> 
> Any ideas? Thanks in advance for any tips!
> 
> Best regards,
> 
> Marc
> 
> 
> 
> 


From klists at saphor.de  Fri Jun  8 11:34:07 2007
From: klists at saphor.de (Marc)
Date: Fri, 08 Jun 2007 20:34:07 +0200
Subject: [antlr-interest] C target: problems with setCharStream
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526BE@wavemachine.temporal-wave.com>
References: <46699978.5030106@saphor.de>
	<B36CCC332A32904F8FA3DE134A2353362526BE@wavemachine.temporal-wave.com>
Message-ID: <4669A11F.9060403@saphor.de>

Jim Idle wrote:
> I'll take a look at it, but perhaps that example is wrong? 
that is perfectly possible...
> Please try
> with the official examples for the C target if you would - I suspect
> that the use of the C objects is not correct in that example..
>
> I am aware of those warnings but have not had time to deal with them
> this week. A bug fixing session will happen this weekend.
>   
Many thanks!

I've now finally spotted the examples under
http://www.antlr.org/download/examples-v3.tar.gz --- the unfortunate
link name "ANTLR v3 sample grammars using Java target" on
http://www.antlr.org/download.html unfortunately kept me from even
looking at that file. I'll see how I get along with those examples.

Best regards,

Marc

>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marc
>> Sent: Friday, June 08, 2007 11:01 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] C target: problems with setCharStream
>>
>> Hello!
>>
>> Using the C target (libantlr3c-3.0.0-rc8), antlr 3.0 and the
>>     
> SimpleCalc
>   
>> grammar from
>>
>>     
> http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+AN
>   
>> TLR+3
>> I keep getting a core dump both under Mac OS X (PPC) and Debian Linux
>> (Intel):
>>
>> This is the dump on gdb under Mac OS X, the one under Linux is
>> according:
>>
>> -------
>> Starting program: calc 1+1
>>
>> Program received signal EXC_BAD_ACCESS, Could not access memory.
>> Reason: KERN_PROTECTION_FAILURE at address: 0x0000000e
>> 0x0001cf04 in setCharStream ()
>> --------
>>
>> On both systems I have compiled the program with:
>>
>> gcc -I IncludePath -I. simplecalcLexer.c simplecalcParser.c -LLibPath
>> -lantlr3c -o calc
>>
>> (having renamed the grammar from SimpleCalc to simplecalc)
>>
>> Compiling the program with gcc 4.0 (Mac) and 4.1.2 (Linux) gives me
>>     
> the
>   
>> following warnings:
>>
>> simplecalcLexer.c:190: warning: 'mPLUS' declared inline after being
>> called
>> simplecalcLexer.c:190: warning: previous declaration of 'mPLUS' was
>> here
>> simplecalcLexer.c:191: warning: 'mMINUS' declared inline after being
>> called
>> simplecalcLexer.c:191: warning: previous declaration of 'mMINUS' was
>> here
>> simplecalcLexer.c:192: warning: 'mMULT' declared inline after being
>> called
>> simplecalcLexer.c:192: warning: previous declaration of 'mMULT' was
>> here
>> simplecalcLexer.c:193: warning: 'mDIV' declared inline after being
>> called
>> simplecalcLexer.c:193: warning: previous declaration of 'mDIV' was
>>     
> here
>   
>> simplecalcLexer.c:194: warning: 'mNUMBER' declared inline after being
>> called
>> simplecalcLexer.c:194: warning: previous declaration of 'mNUMBER' was
>> here
>> simplecalcLexer.c:195: warning: 'mWHITESPACE' declared inline after
>> being called
>> simplecalcLexer.c:195: warning: previous declaration of 'mWHITESPACE'
>> was here
>> simplecalcLexer.c:196: warning: 'mDIGIT' declared inline after being
>> called
>> simplecalcLexer.c:196: warning: previous declaration of 'mDIGIT' was
>> here
>> simplecalcParser.c: In function 'main':
>> simplecalcParser.c:290: warning: pointer targets in passing argument 1
>> of 'antlr3AsciiFileStreamNew' differ in signedness
>>
>> (the last two warnings only under Mac)
>>
>> Any ideas? Thanks in advance for any tips!
>>
>> Best regards,
>>
>> Marc
>>
>>
>>
>>
>>     
>
>
>
>   


From parrt at cs.usfca.edu  Fri Jun  8 11:37:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jun 2007 11:37:57 -0700
Subject: [antlr-interest] C target: problems with setCharStream
In-Reply-To: <4669A11F.9060403@saphor.de>
References: <46699978.5030106@saphor.de>
	<B36CCC332A32904F8FA3DE134A2353362526BE@wavemachine.temporal-wave.com>
	<4669A11F.9060403@saphor.de>
Message-ID: <418CB1C4-C1A5-4106-821F-0B319E5BAC02@cs.usfca.edu>


On Jun 8, 2007, at 11:34 AM, Marc wrote:
> I've now finally spotted the examples under
> http://www.antlr.org/download/examples-v3.tar.gz --- the unfortunate
> link name "ANTLR v3 sample grammars using Java target" on
> http://www.antlr.org/download.html unfortunately kept me from even
> looking at that file. I'll see how I get along with those examples.

Fxed to say C, C#, Java.
Ter

From jimi at temporal-wave.com  Fri Jun  8 11:35:28 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 11:35:28 -0700
Subject: [antlr-interest] C target: problems with setCharStream
In-Reply-To: <4669A11F.9060403@saphor.de>
References: <46699978.5030106@saphor.de>
	<B36CCC332A32904F8FA3DE134A2353362526BE@wavemachine.temporal-wave.com>
	<4669A11F.9060403@saphor.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526C0@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: Marc [mailto:klists at saphor.de]


> I've now finally spotted the examples under
> http://www.antlr.org/download/examples-v3.tar.gz --- the unfortunate
> link name "ANTLR v3 sample grammars using Java target" 

The link is called that because you are only allowed to use C if you are smart enough to see behind the Java fa?ade ;-). Personally though, I would have preferred the link "Beware of the Leopard!".

Jim

From aliaazimi at yahoo.com  Fri Jun  8 11:50:28 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Fri, 8 Jun 2007 11:50:28 -0700 (PDT)
Subject: [antlr-interest] ANTLRWorks Installation!
Message-ID: <338361.7284.qm@web58105.mail.re3.yahoo.com>

Hi,
  I have a basic problem with installation. I am trying to install ANTLWorks on my laptop with xp professional. What do I have to add in CLASSPATH or PATH in order to be able to run test files(produced by ANTLRWorks which are Main methods) using command prompt? I really appreciate for any assistance.
   
  Regards,
  Al

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070608/bfa48950/attachment.html 

From lgcraymer at yahoo.com  Fri Jun  8 12:02:30 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 8 Jun 2007 12:02:30 -0700 (PDT)
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <CCE50D30-B60F-4FBA-A009-150E8B555448@cs.usfca.edu>
Message-ID: <395424.25018.qm@web55908.mail.re3.yahoo.com>

There is a point in having all rules be final--it
allows javacc to optimize the code, and overriding a
parser rule is rarely a good idea since you would not
want to change the sequence recognition.  It is much
better to add the support in other ways--Jim Idle's
suggestion is worth pursuing.

--Loring

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> 
> On Jun 8, 2007, at 2:38 AM, Johannes Luber wrote:
> 
> > Wincent Colaiuta wrote:
> >> El 8/6/2007, a las 10:22, Sven Efftinge escribi?:
> >>
> >>> 2nd Question:
> >>> Is there a way to say Antlr not to add the final
> keyword?
> >>
> >> ANTLR's output is generated using StringTemplate.
> If you dare, you  
> >> could
> >> try tweaking the Java template to tailor the
> output as you desire,  
> >> then
> >> rebuilding ANTLR. I believe this is the template
> that you'd need  
> >> to modify:
> >>
> >>
>
<http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/
> 
> >> templates/Java/Java.stg?r=3682>
> >>
> >>
> >> But I imagine it's a non-trivial task, and any
> change to the template
> >> could have unanticipated ripple effects, so is
> not to be taken  
> >> lightly...
> >
> > It isn't necessary to rebuild ANTLR. The
> StringTemplate files are
> > entirely independent (with the exception of the
> data model) from  
> > ANTLR.
> > I suppose that it is only necessary to find in
> Java.stg the template
> > which is responsible for the parser code and
> remove there the final
> > keyword. A simple search for final in Java.stg
> should show the  
> > suitable one.
> 
> Yep. Easy.  Just delete final in one place and rerun
> antlr. no need  
> to build. :)
> 
> All code in antlr is generated with templates.
> 
> Ter
> 
> 



       
____________________________________________________________________________________
Need a vacation? Get great deals
to amazing places on Yahoo! Travel.
http://travel.yahoo.com/

From stuart.dootson at gmail.com  Fri Jun  8 12:02:46 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Fri, 8 Jun 2007 20:02:46 +0100
Subject: [antlr-interest] Couple of issues with C target's runtime code
Message-ID: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>

Jim - I used the C target for the first time today - nice job! Looking
at the code, I'm glad I use C++ to do OO ;-)

Anyway - couple of issues (guess I ought to mention I'm using the
version of the runtime that comes with the release of Antlr 3.0 - if
there's a later version of the runtime I ought to be using, please let
me know!!!) -

1. You use the presence of the macro 'WIN32' to determine that you're
compiling for Windows 32. However, you might be better using '_WIN32'
(see http://msdn2.microsoft.com/en-us/library/b0084kay(VS.80).aspx).
'WIN32' is added to the command line by Visual Studio 2005, whereas
'_WIN32' is *always* defined. I compiled my first sample grammar at
the command line (what can I say - I'm an old-fashioned sort of a
developer), and it complained about not finding 'antlr3config.h', as
it was following the Unix path.

2. The release mode static library for Windows is compiled using the
'_fastcall' calling convention (when using the Visual Studio 2005
project). Is this for a reaason other than performance? Anyway - the
header file doesn't mark the functions exported from the library as
'_fastcall', which means that the application won't link using the
default compiler options. Could I suggest either a) changing the
library to use '_cdecl' (I don't think the performance impact will be
significant), or b) marking the exports as '_fastcall' in the header
file. Either option will work better with the default compiler
settings. I guess b) is the optimal choice?

Apart from that, I found your runtime very easy to get up and running
- took about half an hour, including building the runtime and
deciphering the runtime source to determine what sequence of calls to
tie file stream, lexer, token stream and parser together.

Stuart Dootson

From jimi at temporal-wave.com  Fri Jun  8 12:17:49 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 12:17:49 -0700
Subject: [antlr-interest] Couple of issues with C target's runtime code
In-Reply-To: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
References: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stuart Dootson
> Sent: Friday, June 08, 2007 12:03 PM
> To: antlr-interest
> Subject: [antlr-interest] Couple of issues with C target's runtime
code
> 
> Jim - I used the C target for the first time today - nice job! Looking
> at the code, I'm glad I use C++ to do OO ;-)
> 
> Anyway - couple of issues (guess I ought to mention I'm using the
> version of the runtime that comes with the release of Antlr 3.0 - if
> there's a later version of the runtime I ought to be using, please let
> me know!!!) -
> 
> 1. You use the presence of the macro 'WIN32' to determine that you're
> compiling for Windows 32. However, you might be better using '_WIN32'
> (see http://msdn2.microsoft.com/en-us/library/b0084kay(VS.80).aspx).
> 'WIN32' is added to the command line by Visual Studio 2005, whereas
> '_WIN32' is *always* defined. I compiled my first sample grammar at
> the command line (what can I say - I'm an old-fashioned sort of a
> developer), and it complained about not finding 'antlr3config.h', as
> it was following the Unix path.

Yeah - that's a fair point, I guess I just typed that in a few times and
never thought about it ;-) However, I am 10%% sure I can't always have
had it like that because I show the DEVENV command line example in the
wiki docs.

> 2. The release mode static library for Windows is compiled using the
> '_fastcall' calling convention (when using the Visual Studio 2005
> project). Is this for a reaason other than performance? 

Just performance testing, however I wasn't decided on it yet. But, I
think I did not change the normal stuff because you cannot use _fastcall
when you take an address of the function and it is in a DLL. Can't
remember the exact reasoning, but I figured that you would either change
the static library back to the default cdecl, or change your calling
project to use fastcall. Basically, the answer is that I have to finish
deciding whether it is even worth it, so for the moment you best bet is
just to change the project settings back to normality until I have
finished looking at the various options for 32 bit vs 64 bit and so on.

 
> Apart from that, I found your runtime very easy to get up and running
> - took about half an hour, including building the runtime and
> deciphering the runtime source to determine what sequence of calls to
> tie file stream, lexer, token stream and parser together.

Please see the examples and the wiki docs that I spent ages on (and will
spend more time on). The examples are especially poignant as they are
commented with all sorts of pointers for C programmers (and will get
better over time). I believe that the last example I checked in is only
half way finished because I was changing systems to a 64 bit machine, so
if you get errors in one project just ignore them.

Jim

From stuart.dootson at gmail.com  Fri Jun  8 12:43:08 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Fri, 8 Jun 2007 20:43:08 +0100
Subject: [antlr-interest] Couple of issues with C target's runtime code
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>
References: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>
Message-ID: <8b56cad40706081243j55881ff0yf6decfd132fb2444@mail.gmail.com>

On 08/06/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Please see the examples and the wiki docs that I spent ages on (and will
> spend more time on).
>
> Jim
>

Care to share a URL? - my search abilities must suck, 'cause I'm
afraid I can't find them :-(

Stuart

From jimi at temporal-wave.com  Fri Jun  8 12:49:50 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Jun 2007 12:49:50 -0700
Subject: [antlr-interest] Couple of issues with C target's runtime code
In-Reply-To: <8b56cad40706081243j55881ff0yf6decfd132fb2444@mail.gmail.com>
References: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>
	<8b56cad40706081243j55881ff0yf6decfd132fb2444@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362526C5@wavemachine.temporal-wave.com>

Take the Downloads link from www.antlr.org, then down the bottom you
will find:

Examples 

ANTLR v3 sample grammars (C, C#, Java targets).

But don't beat yourself up too badly as up until 30 minutes ago it did
not mention C!!!

Let me know how you get on, and especially of any compiler warnings or
whatever. There are some that I have fixes for this weekend such as when
you generate a tree parser and have certain options turned on etc, but I
don't mind a duplicate report or two. Performance inspection is still
on-going, so let me know if you find anything that is slow, but so far
everything is at least 2X Java and some things considerably better, for
nothing like the memory consumption of course.

Also, I am on the hook for the C++ target, which will take a while now,
but will arrive.

Jim

> -----Original Message-----
> From: Stuart Dootson [mailto:stuart.dootson at gmail.com]
> Sent: Friday, June 08, 2007 12:43 PM
> To: Jim Idle; antlr-interest
> Subject: Re: [antlr-interest] Couple of issues with C target's runtime
> code
> 
> On 08/06/07, Jim Idle <jimi at temporal-wave.com> wrote:
> >
> > Please see the examples and the wiki docs that I spent ages on (and
> will
> > spend more time on).
> >
> > Jim
> >
> 
> Care to share a URL? - my search abilities must suck, 'cause I'm
> afraid I can't find them :-(
> 
> Stuart

From win at wincent.com  Fri Jun  8 13:01:06 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 8 Jun 2007 22:01:06 +0200
Subject: [antlr-interest] Couple of issues with C target's runtime code
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526C5@wavemachine.temporal-wave.com>
References: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>
	<8b56cad40706081243j55881ff0yf6decfd132fb2444@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C5@wavemachine.temporal-wave.com>
Message-ID: <934411DB-3E62-42D6-BE2D-9A150FA998DB@wincent.com>

El 8/6/2007, a las 21:49, Jim Idle escribi?:

> Also, I am on the hook for the C++ target, which will take a while  
> now,
> but will arrive.

And then onto the C and C++ ports of StringTemplate, right? ;-)

Just joking, of course...

Cheers,
Wincent


From stuart.dootson at gmail.com  Fri Jun  8 13:34:41 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Fri, 8 Jun 2007 21:34:41 +0100
Subject: [antlr-interest] Couple of issues with C target's runtime code
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526C5@wavemachine.temporal-wave.com>
References: <8b56cad40706081202m47097e2apa063ecd5233e606e@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C3@wavemachine.temporal-wave.com>
	<8b56cad40706081243j55881ff0yf6decfd132fb2444@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526C5@wavemachine.temporal-wave.com>
Message-ID: <8b56cad40706081334j1f7d55afq57b6fcb645e107ca@mail.gmail.com>

On 08/06/07, Jim Idle <jimi at temporal-wave.com> wrote:
> Take the Downloads link from www.antlr.org, then down the bottom you
> will find:
>
> Examples
>
> ANTLR v3 sample grammars (C, C#, Java targets).
>
> But don't beat yourself up too badly as up until 30 minutes ago it did
> not mention C!!!
>
> Let me know how you get on, and especially of any compiler warnings or
> whatever. There are some that I have fixes for this weekend such as when
> you generate a tree parser and have certain options turned on etc, but I
> don't mind a duplicate report or two. Performance inspection is still
> on-going, so let me know if you find anything that is slow, but so far
> everything is at least 2X Java and some things considerably better, for
> nothing like the memory consumption of course.

Thanks, Jim - will do. I'm planning on translating some of my existing
Antlr 2 grammars.

>
> Also, I am on the hook for the C++ target, which will take a while now,
> but will arrive.
>
> Jim

That's the one I'm really waiting for ;-) If you want any help or
anything with that, give me a shout - I'd be pleased to contribute!

Stuart

From sven at efftinge.de  Fri Jun  8 13:34:30 2007
From: sven at efftinge.de (Sven Efftinge)
Date: Fri, 8 Jun 2007 22:34:30 +0200
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <CCE50D30-B60F-4FBA-A009-150E8B555448@cs.usfca.edu>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
	<CCE50D30-B60F-4FBA-A009-150E8B555448@cs.usfca.edu>
Message-ID: <8B3E21C9-4E60-440C-8FA4-665D6856D020@efftinge.de>

I've patched the template as you recommended.
Terence, maybe you like the idea of having a 'global' @init and @after ?
I mean something like an AOP around, which would be very helpful to  
implement generic stuff (e.g. tracing).

thanks,
Sven


On Jun 8, 2007, at 18:03 , Terence Parr wrote:

>
> On Jun 8, 2007, at 2:38 AM, Johannes Luber wrote:
>
>> Wincent Colaiuta wrote:
>>> El 8/6/2007, a las 10:22, Sven Efftinge escribi?:
>>>
>>>> 2nd Question:
>>>> Is there a way to say Antlr not to add the final keyword?
>>>
>>> ANTLR's output is generated using StringTemplate. If you dare,  
>>> you could
>>> try tweaking the Java template to tailor the output as you  
>>> desire, then
>>> rebuilding ANTLR. I believe this is the template that you'd need  
>>> to modify:
>>>
>>> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
>>> templates/Java/Java.stg?r=3682>
>>>
>>>
>>> But I imagine it's a non-trivial task, and any change to the  
>>> template
>>> could have unanticipated ripple effects, so is not to be taken  
>>> lightly...
>>
>> It isn't necessary to rebuild ANTLR. The StringTemplate files are
>> entirely independent (with the exception of the data model) from  
>> ANTLR.
>> I suppose that it is only necessary to find in Java.stg the template
>> which is responsible for the parser code and remove there the final
>> keyword. A simple search for final in Java.stg should show the  
>> suitable one.
>
> Yep. Easy.  Just delete final in one place and rerun antlr. no need  
> to build. :)
>
> All code in antlr is generated with templates.
>
> Ter
>

--

Sven Efftinge

Am Sophienhof 33
24941 Flensburg

mail : sven at efftinge.de
fon   : +49 176 21769757
web : http://www.efftinge.de
blog : http://effi-blog.blogspot.com



From parrt at cs.usfca.edu  Fri Jun  8 13:43:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jun 2007 13:43:03 -0700
Subject: [antlr-interest] [v3] parser rules are final
In-Reply-To: <8B3E21C9-4E60-440C-8FA4-665D6856D020@efftinge.de>
References: <834B8D66-2F84-432E-A267-840018FBB41A@efftinge.de>
	<9AC0CB59-AD5C-487C-8251-9DC577F618FA@wincent.com>
	<466923AE.8050707@gmx.de>
	<CCE50D30-B60F-4FBA-A009-150E8B555448@cs.usfca.edu>
	<8B3E21C9-4E60-440C-8FA4-665D6856D020@efftinge.de>
Message-ID: <7662DC57-DCF2-4FFA-B3AE-55F39F332C45@cs.usfca.edu>


On Jun 8, 2007, at 1:34 PM, Sven Efftinge wrote:

> I've patched the template as you recommended.
> Terence, maybe you like the idea of having a 'global' @init and  
> @after ?
> I mean something like an AOP around, which would be very helpful to  
> implement generic stuff (e.g. tracing).

Technically you can say

@foo {...}

at a global level and the grammar and then reference <actions.foo> I  
think in the template all without altering the code generator  
itself.  Heh heh heh.  The code generator architecture of v3 is one  
of my favorite things about the tool.

Ter

From alessnet at gmail.com  Sat Jun  9 03:42:23 2007
From: alessnet at gmail.com (Alessandro)
Date: Sat, 9 Jun 2007 12:42:23 +0200
Subject: [antlr-interest] BaseTreeAdaptor.becomeRoot
	throwsNullPointerException
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362526BA@wavemachine.temporal-wave.com>
References: <be9e4140706051233m509fdc8fob84bc1ff87a6ba64@mail.gmail.com>
	<be9e4140706080323h53051d78w9f94d1bd75a20015@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362526BA@wavemachine.temporal-wave.com>
Message-ID: <be9e4140706090342g6299df9cl5f847add6a98dc0e@mail.gmail.com>

my grammar : http://pastie.textmate.org/68884
input : "var = \r\n"


On 6/8/07, Jim Idle <jimi at temporal-wave.com> wrote:
> Hmm - debatable whether you should get the crash, which I presume is null exception on atom10 after an NVE?

There is an NoViableAltException in atom(). atom() try to recover and returns.
Because the exception was thrown before any initialisation of the
tree, atom() return an null pointer for the tree ...

Perhaps I must to do something about error handling ? :-(
- Hide quoted text -


> However, I suspect that what is happening is that you are generating a default tree or have not covered the case, so you can either 'fix' this or work around it, depending on whether this is really a bug or not by looking for it. We would need to see your grammar to see exactly why it causes this, but for the moment, let's presume that atom10 can somehow be null and you still want to generate a tree, then:
>
> r1: e1=r2 (PLUS e2=r2)
>         -> {$e2 != null}? ^(PLUS e1 e2)
>         -> e1
> ;

> Or something similar, more apropos to your purpose should get you around that.
>
> However it looks a bit suspicious that it is trying to generate a tree on an error, unless this is just cascading up the expression tree and by the time you try to use it... etc.
>
> Jim
>

From alessnet at gmail.com  Sat Jun  9 06:07:58 2007
From: alessnet at gmail.com (Alessandro)
Date: Sat, 9 Jun 2007 15:07:58 +0200
Subject: [antlr-interest] bug or strange behaviour in rewrite operator ?
Message-ID: <be9e4140706090607m4a48a267g5debb7036149fca4@mail.gmail.com>

Hello,

When I use $rule? the code generated seems to be not correct.
Here is a example :

prog:
	(func | (decvar SEMI) -> $prog? func? decvar? )*
	-> ^(PROG_DEC $prog)
;

The code generated for ($prog)? is :

// ( $prog)?
if ( stream_prog.hasNext() ) {
   adaptor.addChild(root_0, stream_retval.next());
}
stream_prog.reset();

the variable stream_prog does not exist, the correct variable is
"stream_retval".
Is it a bug ?

Thanks,

Alessandro

From parrt at cs.usfca.edu  Sat Jun  9 13:21:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Jun 2007 13:21:00 -0700
Subject: [antlr-interest] bug or strange behaviour in rewrite operator ?
In-Reply-To: <be9e4140706090607m4a48a267g5debb7036149fca4@mail.gmail.com>
References: <be9e4140706090607m4a48a267g5debb7036149fca4@mail.gmail.com>
Message-ID: <4D2CA051-EDA2-4AAB-B682-EB1A5DB94A68@cs.usfca.edu>

ooops. looks like a bug. added

http://www.antlr.org:8888/browse/ANTLR-135

Ter
On Jun 9, 2007, at 6:07 AM, Alessandro wrote:

> Hello,
>
> When I use $rule? the code generated seems to be not correct.
> Here is a example :
>
> prog:
> 	(func | (decvar SEMI) -> $prog? func? decvar? )*
> 	-> ^(PROG_DEC $prog)
> ;
>
> The code generated for ($prog)? is :
>
> // ( $prog)?
> if ( stream_prog.hasNext() ) {
>   adaptor.addChild(root_0, stream_retval.next());
> }
> stream_prog.reset();
>
> the variable stream_prog does not exist, the correct variable is
> "stream_retval".
> Is it a bug ?
>
> Thanks,
>
> Alessandro


From stuart.dootson at gmail.com  Sat Jun  9 17:07:25 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Sun, 10 Jun 2007 01:07:25 +0100
Subject: [antlr-interest] Possible Antlr defect?
Message-ID: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>

I've found what appears to be a bug when using separate grammars -
Antlr doesn't appear to give a warning or (preferably) error when
using an undefined token type. I had the following token types:

WS=6
IDENTIFIER=4
NUMERIC_LITERAL=5
SL_COMMENT=7
'='=9
';'=8

and the following parser grammar was processed by Antlr without
warning or error:

parser grammar TestP;

options
{
   tokenVocab = Test;
   output=AST;
   language = C;
}

grammarMain
   :  (statement ';'!) +
   ;

statement
   :  ID '=' value -> ^('=' IDENTIFIER value)
   ;

value
   :  IDENTIFIER
   |  NUMERIC_LITERAL
   ;

You'll note the 'statement' rule uses 'ID' rather than 'IDENTIFIER' -
I would expect Antlr to complain about that...but it doesn't (BTW -
it's the 3.0 release, on OS X 10.4.9).

I can't really believe I'm the first person to see this - but I didn't
see any mention in mailing list or bug list...

Stuart Dootson

From parrt at cs.usfca.edu  Sat Jun  9 17:13:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Jun 2007 17:13:43 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
Message-ID: <AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>

Hi. Unfortunately, this is not exactly a bug, just undesirable.  You  
can *add*token definitions to the ones that have already been  
imported.  There are many imaginary tokens you need when doing tree  
construction.  If ANTLR were to warn you upon every new imaginary  
token, it would be a drag.  Perhaps we need an option to warn you of  
these things, or better yet, something in ANTLRWorks that would warn  
you. :)

Ter

From stuart.dootson at gmail.com  Sat Jun  9 17:25:48 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Sun, 10 Jun 2007 01:25:48 +0100
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
Message-ID: <8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>

On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. Unfortunately, this is not exactly a bug, just undesirable.  You
> can *add*token definitions to the ones that have already been
> imported.  There are many imaginary tokens you need when doing tree
> construction.  If ANTLR were to warn you upon every new imaginary
> token, it would be a drag.  Perhaps we need an option to warn you of
> these things, or better yet, something in ANTLRWorks that would warn
> you. :)
>
> Ter
>

But - don't all tokens need to be defined *somewhere*? For example, on
page 179 of the PDF of the book, we find the follwoing statement:

'The imaginary token must be defined elsewhere in a grammar or in the
tokens section.'

I thought that was the idea of the 'tokens' section - to provide a
mechanism for defining tokens not produced by the lexer, meaning that
all tokens were defined somewhere? And if all tokens are defined, you
have a complete list of them that you can validate token usage
against?

Stuart

From parrt at cs.usfca.edu  Sat Jun  9 17:38:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Jun 2007 17:38:12 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
Message-ID: <B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>


On Jun 9, 2007, at 5:25 PM, Stuart Dootson wrote:
> But - don't all tokens need to be defined *somewhere*? For example, on
> page 179 of the PDF of the book, we find the follwoing statement:
>
> 'The imaginary token must be defined elsewhere in a grammar or in the
> tokens section.'
>
> I thought that was the idea of the 'tokens' section - to provide a
> mechanism for defining tokens not produced by the lexer, meaning that
> all tokens were defined somewhere? And if all tokens are defined, you
> have a complete list of them that you can validate token usage
> against?

That "elsewhere in a grammar" is the key.  Just referencing a token  
defines it as well as using the tokens section.
Ter


From antlr at mirality.co.nz  Sat Jun  9 17:57:39 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 10 Jun 2007 12:57:39 +1200
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
	<B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
Message-ID: <20070610005750.1046A11EAED@www.antlr.org>

At 12:38 10/06/2007, Terence Parr wrote:
 >
 >That "elsewhere in a grammar" is the key.  Just referencing a
 >token defines it as well as using the tokens section.

That doesn't seem like a good idea -- it would make it vulnerable 
to typos.  References to a token should be illegal unless they've 
been specifically defined in a tokens section, been given a lexing 
rule, or imported from a vocab file.


From stuart.dootson at gmail.com  Sat Jun  9 18:02:41 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Sun, 10 Jun 2007 02:02:41 +0100
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
	<B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
Message-ID: <8b56cad40706091802j42f548e1iee993f383d610882@mail.gmail.com>

On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 9, 2007, at 5:25 PM, Stuart Dootson wrote:
> > But - don't all tokens need to be defined *somewhere*? For example, on
> > page 179 of the PDF of the book, we find the follwoing statement:
> >
> > 'The imaginary token must be defined elsewhere in a grammar or in the
> > tokens section.'
> >
> > I thought that was the idea of the 'tokens' section - to provide a
> > mechanism for defining tokens not produced by the lexer, meaning that
> > all tokens were defined somewhere? And if all tokens are defined, you
> > have a complete list of them that you can validate token usage
> > against?
>
> That "elsewhere in a grammar" is the key.  Just referencing a token
> defines it as well as using the tokens section.
> Ter

One final thing that's puzzling me - when I use the same grammar in a
combined lexer/parser grammar, Antlr does complain, like so (same
parser grammar as before, same lexer and token types as before):

warning(105): Test.g:14:5: no lexer rule corresponding to token: ID

Is a combined grammar a special case in this respect?

Stuart

From parrt at cs.usfca.edu  Sat Jun  9 18:08:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Jun 2007 18:08:10 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <8b56cad40706091802j42f548e1iee993f383d610882@mail.gmail.com>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
	<B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
	<8b56cad40706091802j42f548e1iee993f383d610882@mail.gmail.com>
Message-ID: <2AA21AE5-8066-4E75-A7A4-0DF6E062C8B4@cs.usfca.edu>


On Jun 9, 2007, at 6:02 PM, Stuart Dootson wrote:

> On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> On Jun 9, 2007, at 5:25 PM, Stuart Dootson wrote:
>> > But - don't all tokens need to be defined *somewhere*? For  
>> example, on
>> > page 179 of the PDF of the book, we find the follwoing statement:
>> >
>> > 'The imaginary token must be defined elsewhere in a grammar or  
>> in the
>> > tokens section.'
>> >
>> > I thought that was the idea of the 'tokens' section - to provide a
>> > mechanism for defining tokens not produced by the lexer, meaning  
>> that
>> > all tokens were defined somewhere? And if all tokens are  
>> defined, you
>> > have a complete list of them that you can validate token usage
>> > against?
>>
>> That "elsewhere in a grammar" is the key.  Just referencing a token
>> defines it as well as using the tokens section.
>> Ter
>
> One final thing that's puzzling me - when I use the same grammar in a
> combined lexer/parser grammar, Antlr does complain, like so (same
> parser grammar as before, same lexer and token types as before):
>
> warning(105): Test.g:14:5: no lexer rule corresponding to token: ID
>
> Is a combined grammar a special case in this respect?

Yup. If you use a token for which there is no lexer, it knows about  
it because it sees the entire set of lexer rules. :) In this special  
case, it knows what the errors are.

Ter


From parrt at cs.usfca.edu  Sat Jun  9 18:08:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Jun 2007 18:08:47 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <20070610005750.1046A11EAED@www.antlr.org>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
	<B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
	<20070610005750.1046A11EAED@www.antlr.org>
Message-ID: <3BA0E46C-03FC-4284-B67B-65F227298581@cs.usfca.edu>


On Jun 9, 2007, at 5:57 PM, Gavin Lambert wrote:

> At 12:38 10/06/2007, Terence Parr wrote:
> >
> >That "elsewhere in a grammar" is the key.  Just referencing a
> >token defines it as well as using the tokens section.
>
> That doesn't seem like a good idea -- it would make it vulnerable  
> to typos.  References to a token should be illegal unless they've  
> been specifically defined in a tokens section, been given a lexing  
> rule, or imported from a vocab file.

Yep.  It is vulnerable to typos, but only comes up when you're  
building separate parser and lexer (or a tree parser I guess).  I  
think ANTLRWorks puts a red squiggly line underneath if it is not  
defined.  I will have to check.

Ter

From win at wincent.com  Sat Jun  9 18:16:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sun, 10 Jun 2007 03:16:31 +0200
Subject: [antlr-interest] Patch for filter mode
Message-ID: <239FBE3F-9EE1-4AFB-A203-C2085E9A83EB@wincent.com>

Terence has previously written (<http://www.antlr.org/pipermail/ 
antlr-interest/2007-May/020942.html>):

> filter=true only works in the lexer. :) You should not really have  
> a parser in this case because you cannot really apply a grammatical  
> structure to the incomplete stream of tokens emanating from a lexer  
> that filters most stuff out.

And indeed the ANTLR book on page 119 documents the filter option as  
begin "lexer only"... I've found what appear to be two bugs which  
relate to this:

1. Even though this is documented as a lexer-only option, it has  
effect in the parser as well; the effects include automatically  
turning on backtracking in the parser and preventing all parser  
actions from running (they appear in the generated code but as far as  
I can tell no codepath ever reaches them)

2. "filter = true" doesn't work for lexer grammars which are declared  
in a separate file as "lexer grammars"

The following simple patch to src/org/Antlr/codegen/ 
CodeGenerator.java fixes the first problem. The second one isn't  
really of concern to me because I haven't yet had a need to use  
anything other than a combined lexer/parser grammar in a single file:

301c301,302
<                                                          
grammar.getOption("filter").equals("true");
---
 >                                                          
grammar.getOption("filter").equals("true") &&
 >                                                          
( grammar.type==Grammar.LEXER );

(Tabs eaten by my email client when I pasted in the diff, it seems).

Before signing off, some words of explanation as to why I want to be  
able to use a filtering lexer in combination with a parser:

I'm aware that the filter mode was intended to enable the creation of  
"fuzzy" lexers but I've also found it very useful for parsing things  
like wikitext or templating languages (PHP or any like it) where you  
have a large amount of free-form text (no special markup) studded  
with meaningful chunks of a more formal language (wikitext  
directives, PHP code sections etc). In this case you don't want to  
filter out and throw away the dross; you want to keep it.

Without filtering mode it is very hard to write a lexer for this kind  
of input, yet with filtering mode as it currently is implemented you  
can't really use a parser either. For one thing, backtracking gets  
turned on in the parser whether you want it or not, and much more  
crucially any actions which you define or @after blocks which you set- 
up will never be executed (although @init blocks will be); there may  
be other issues as well but those are the ones I'm aware of.

Conversely, trying to write the lexer without filtering mode turned  
on is fiendishly difficult. You might have lexer rules like this:

FOO: 'foo';
BAR: 'bar';
DEFAULT: .;

The DEFAULT rule is intended to serve as a catch-all for everything  
which doesn't get tokenized by the other rules, but because ANTLR  
builds a predictive lexer, input such as "fob" will cause an  
exception to be thrown even though you might want it to be recognized  
as run of DEFAULT tokens... syntactic predicates don't help in this  
situation, as they really only help to select alternatives an in the  
case of a rule like FOO there are no alternatives and you'll still  
get messages like "mismatched character 'b' expecting 'o'" emitted  
during lexing:

FOO: ('foo')=> 'foo' ;

So basically I wanted filter=true in the lexer and the parser to be  
normal. So I tried working around the problem by splitting my lexer  
and parser into two separate files, a lexer grammar and a parser  
grammar, with "filter=true" set only in the lexer grammar. It was in  
this way that I discovered the second problem mentioned above (that  
filter=true is broken for lexer grammars and only works in combined  
grammars).

I also explored trying to mimic the behaviour of filter=true in the  
lexer without actually turning filtering on, but there are some  
special things that filter=true does that cannot be emulated just by  
playing with lexer rules (strict ordering of rules, special  
backtracking behaviour in which exceptions are never thrown etc).

So anyway, I'm hoping you can see the justification for this usage  
case, and that you'll accept my small fix.

Cheers,
Wincent







From antlr at mirality.co.nz  Sat Jun  9 20:16:13 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 10 Jun 2007 15:16:13 +1200
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <3BA0E46C-03FC-4284-B67B-65F227298581@cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706091725y290c79c9y70663fb34f696735@mail.gmail.com>
	<B434A8A2-893E-4283-A1D8-568EB8FACC8F@cs.usfca.edu>
	<20070610005750.1046A11EAED@www.antlr.org>
	<3BA0E46C-03FC-4284-B67B-65F227298581@cs.usfca.edu>
Message-ID: <20070610031623.C7CCD11EB0D@www.antlr.org>

At 13:08 10/06/2007, Terence Parr wrote:
 >
 >Yep.  It is vulnerable to typos, but only comes up when you're
 >building separate parser and lexer (or a tree parser I guess).

As with any compiled language, I think it's far better to require 
declaration before use to prevent this sort of problem.  It's 
trivial to declare any fake tokens required in a "tokens" block, 
so the cost of requiring predeclaration is (in my opinion) vastly 
less than the cost of *not* requiring predeclaration, where you 
spend hours of pain and torment trying to figure out why something 
isn't working, finally noticing a simple misspelling or 
transposition error.  (And yes, I've had that happen to me before 
with other [usually interpreted] languages that didn't enforce 
predeclaration, so I know whereof I speak.)

 >I think ANTLRWorks puts a red squiggly line underneath if it
 >is not defined.  I will have to check.

It does, at least in the combined grammar case (I haven't tested 
the imported vocab case).


From rschulz at sonic.net  Sat Jun  9 20:41:27 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 9 Jun 2007 20:41:27 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <20070610031623.C7CCD11EB0D@www.antlr.org>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<3BA0E46C-03FC-4284-B67B-65F227298581@cs.usfca.edu>
	<20070610031623.C7CCD11EB0D@www.antlr.org>
Message-ID: <200706092041.27262.rschulz@sonic.net>

On Saturday 09 June 2007 20:16, Gavin Lambert wrote:
> At 13:08 10/06/2007, Terence Parr wrote:
>  >Yep.  It is vulnerable to typos, but only comes up when you're
>  >building separate parser and lexer (or a tree parser I guess).
>
> As with any compiled language, I think it's far better to require
> declaration before use to prevent this sort of problem.  It's
> trivial to declare any fake tokens required in a "tokens" block,
> so the cost of requiring predeclaration is (in my opinion) vastly
> less than the cost of *not* requiring predeclaration, where you
> spend hours of pain and torment trying to figure out why something
> isn't working, finally noticing a simple misspelling or
> transposition error.  (And yes, I've had that happen to me before
> with other [usually interpreted] languages that didn't enforce
> predeclaration, so I know whereof I speak.)

For the most part, I agree. I have several parsers for first-order logic 
dialects that implicitly declare each distinct new symbol found, though 
they must be used consistently (in terms of their type, whether 
predicate, function or constant, and the arity of predicate and 
function symbols).

Because of the implicit declaration, I had to write a tool that culls 
all distinct symbols and lists them in alphabetic order as an aid when 
debugging large inputs. It has proved sadly useful.


> ...


Randall Schulz

From antlr at olivercomputing.com  Sat Jun  9 21:45:06 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Sun, 10 Jun 2007 00:45:06 -0400
Subject: [antlr-interest] Problem, with minimal problem-causing grammar
Message-ID: <20070610060719.A03443C600E8@newmach.olivercomputing.com>

I've been having problems defining a grammar in ANTLRworks (1.0.2, 
latest) - I keep getting the "java.net.ConnectException: Connection 
refused: connect" problem, which, contrary to the assumptions of 
some, does not appear to have anything to do with port numbers, but 
with an uncaught Java out of memory problem. Every generated grammar 
that I've tested in Eclipse, that has that problem in ANTLRworks, 
blows up with an out of memory error, despite having over a gigabyte 
of RAM available to the JVM.

This is (almost) the minimal problem grammar that I could create that 
causes the problem, a very simple one. No grammar errors are flagged. 
If there's an obvious problem to fix (that actually does fix it), I'd 
appreciate some feedback. Otherwise it looks like a bug in ANTLR to 
me, I'm guessing some kind of code generation resulting in an 
infinite loop that depletes memory. To re-iterate what I've posted 
before, the specific section of code involved in the memory blowup 
occurs in the generated Lexer, in this code section:

     static {
         int numStates = DFA4_transitionS.length;
         DFA4_transition = new short[numStates][];
         for (int i=0; i<numStates; i++) {
             DFA4_transition[i] = DFA.unpackEncodedString(DFA4_transitionS[i]);
         }
     }

specifically, in the invocation of DFA.unpackEncodedString.

Some notes: removing say a few more random token definitions seems to 
clear up the problem. Removing either StrNoHash or StrNoQuotAmp 
removes the problem as well (but both together do not blow up when 
the number of predefined tokens is slightly reduced.) Changing k=* to 
k=1 doesn't fix anything.

----------

grammar blowup_example;

options {
	k=*;
}

tokens {
	AMP				= 'amp';
	APOS				= 'apos';
	ANCESTOR			= 'ancestor';
	ANCESTOR_OR_SELF		= 'ancestor-or-self';
	AND				= 'and';
	AS				= 'as';
	ASCENDING			= 'ascending';
	ASTERISK			= '*';
	AT				= 'at';
	AT_SYMBOL			= '@';
	ATTRIBUTE			= 'attribute';
	BAR				= '|';
	BASE_URI			= 'base-uri';
	BOUNDARY_SPACE			= 'boundary-space';
	BY				= 'by';	
	CASE				= 'case';
	CAST				= 'cast';
	CASTABLE			= 'castable';
	CHILD				= 'child';
	COLLATION			= 'collation';
	COLON				= ':';
	COLON_EQUAL			= ':=';
	COMMA				= ',';
	COMMENT				= 'comment';
	CONSTRUCTION			= 'construction';
	COPY_NAMESPACES			= 'copy-namespaces';
	DASH				= '-';
	DCOLON				= '::';
	DECLARE				= 'declare';
	DEFAULT				= 'default';
	DESCENDENT			= 'descendant';
	DESCENDENT_OR_SELF		= 'descendant-or-self';
	DESCENDING			= 'descending';
	DIGITS_PREFIX			= '&#';
	DIV				= 'div';
	DOCUMENT			= 'document';
	DOCUMENT_NODE			= 'document-node';
	DOLLAR				= '$';
	DOT				= '.';
	E_LOWER				= 'e';
	E_UPPER				= 'E';
	ELEMENT				= 'element';
	SLASH_R_ANGLE_BRACKET		= '/>';
	ELSE				= 'else';
	EMPTY				= 'empty';
	ENCODING			= 'encoding';
	EQ				= '=';
	EQ_NAMED			= 'eq';
	EVERY				= 'every';
	EXCEPT				= 'except';
	EXTERNAL			= 'external';
	FOLLOWING			= 'following';
	FOLLOWING_SIBLING		= 'following-sibling';
	FOR				= 'for';
	FUNCTION			= 'function';
	GE_NAMED			= 'ge';
	GREATEST			= 'greatest';
	GT_NAMED			= 'gt';
	GT_EQ				= '>=';
	HASH_RPAREN			= '#)';
	HEX_DIGITS_PREFIX		= '&#x';
	IDIV				= 'idiv';
	IF				= 'if';
	IMPORT				= 'import';
	IN				= 'in';
	INHERIT				= 'inherit';
	INSTANCE			= 'instance';
	INTERSECT			= 'intersect';
	IS				= 'is';
	ITEM				= 'item';
	LAX				= 'lax';
	L_ANGLE_BRACKET			= '<';
	L_ANGLE_BRACKET_SLASH		= '</';
	L_ANGLE_BRACKET2		= '<<';
	LBRACKET			= '[';
	LCURLY				= '{';
	LCURLY2				= '{{';
	LE_NAMED			= 'le';
	LEAST				= 'least';
	LET				= 'let';
	LPAREN				= '(';
	LPAREN_HASH			= '(#';
	LT_NAMED			= 'lt';
	LT_EQ				= '<=';
	MOD				= 'mod';
	MODULE				= 'module';
	MUL				= 'mul';
	NAMESPACE			= 'namespace';
	NE				= '!=';
	NE_NAMED			= 'ne';
	NO_INHERIT			= 'no-inherit';
	NO_PRESERVE			= 'no-preserve';
	NODE				= 'node';
	OF				= 'of';
	OPTION				= 'option';
	OR				= 'or';
	ORDER				= 'order';		
	ORDERED				= 'ordered';
	ORDERING			= 'ordering';
	PARENT				= 'parent';
	PLUS_SIGN			= '+';
	PRECEDING			= 'preceding';
	PRECEDING_SIBLING		= 'preceding-sibling';
	PRESERVE			= 'preserve';
	PROCESSING_INSTRUCTION		= 'processing-instruction';
	QUESTION			= '?';
	QUOT				= 'quot';
	R_ANGLE_BRACKET			= '>';
	R_ANGLE_BRACKET2		= '>>';		
	RBRACKET			= ']';	
	RCURLY				= '}';	
	RCURLY2				= '}}';
	RPAREN				= ')';	
	RETURN				= 'return';
	SATISFIES			= 'satisfies';
	SCHEMA				= 'schema';
	SCHEMA_ATTRIBUTE		= 'schema-attribute';
	SCHEMA_ELEMENT			= 'schema-element';
	SELF				= 'self';	
	SLASH				= '/';	
	SLASH2				= '//';		
	SOME				= 'some';
	STABLE				= 'stable';
	STRICT				= 'strict';
	STRIP				= 'strip';
	TEXT				= 'text';
	THEN				= 'then';	
	TO				= 'to';
	TREAT				= 'treat';
	TYPESWITCH			= 'typeswitch';	
	VALIDATE			= 'validate';	
	Quot				= '"';
	Apos				= '\'';
	EscapeQuot			= '""';
	EscapeApos			= '\'\'';	
	AbbrevReverseStep		= '..';	
	Separator			= ';';
	VARIABLE			= 'variable';	
	VERSION				= 'version';	
	VOID				= 'void';			
	UNION				= 'union';
	UNORDERED			= 'unordered';	
	WHERE				= 'where';	
	XQUERY				= 'xquery';	
}

literal				: IntegerLiteral;
IntegerLiteral		 	: Digit+;	

StrNoHash			: CharNoHash*;
fragment CharNoHash		: ~'#';

StrNoQuotAmp			: CharNoQuotAmp*;
fragment CharNoQuotAmp		: ~('"' | '&');

fragment Digit			: ('0'..'9');


From aliaazimi at yahoo.com  Sat Jun  9 23:08:47 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sat, 9 Jun 2007 23:08:47 -0700 (PDT)
Subject: [antlr-interest] Installation error!
Message-ID: <722838.19322.qm@web58107.mail.re3.yahoo.com>

Dear all,
   
  I know that this question, for which I have not been able to find a solution, is very basic for most of you and might not interest you, but please help me solve it. I have downloaded antlr-3.0 and extracted it. I have four jar files in lib. In order to run antlr-3.0.jar which is located in lib, I enter following command in Command prompt:
   
  Java  ?jar  antlr-3.0.jar
  Then the following error message appears: 
  Failed to load Main-class manifest attribute from antlr-3.0.jar
   
  The above error message makes me believe the CLASSPATHs are ok and the problem is that manifest file needs something which has the general form of: 
  Main-class: classname
   
  I do not know how to find the main-class. Could you please help?                     
   
  Best wishes,
   
  Al

       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070609/664a7ee4/attachment.html 

From bace.spam at gmx.net  Sat Jun  9 23:25:18 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Sat, 09 Jun 2007 23:25:18 -0700
Subject: [antlr-interest] Installation error!
In-Reply-To: <722838.19322.qm@web58107.mail.re3.yahoo.com>
References: <722838.19322.qm@web58107.mail.re3.yahoo.com>
Message-ID: <466B994E.9060504@gmx.net>

Hi,

If you want to generate the scanner and parser from you grammar file, use:
java -cp 
.:./stringtemplate-3.0.jar:./antlr-2.7.7.jar:./antlr-3.0.jar:./antlr-runtime-3.0.jar 
org.antlr.Tool grammar.g
If you want to start writing a grammar, and generate scanner/parser for 
trial and error, try ANTLRworks!

HTH,
Markus

ali azimi wrote:
> Dear all,
> I know that this question, for which I have not been able to find a 
> solution, is very basic for most of you and might not interest you, 
> but please help me solve it. I have downloaded antlr-3.0 and extracted 
> it. I have four jar files in lib. In order to run antlr-3.0.jar which 
> is located in lib, I enter following command in Command prompt:
> Java ?jar antlr-3.0.jar
> Then the following error message appears:
> Failed to load Main-class manifest attribute from antlr-3.0.jar
> The above error message makes me believe the CLASSPATHs are ok and the 
> problem is that manifest file needs something which has the general 
> form of:
> Main-class: classname
> I do not know how to find the main-class. Could you please help?
> Best wishes,
> Al
>
> ------------------------------------------------------------------------
> Building a website is a piece of cake.
> Yahoo! Small Business gives you all the tools to get online. 
> <http://us.rd.yahoo.com/evt=48251/*http://smallbusiness.yahoo.com/webhosting/?p=PASSPORTPLUS> 


From stuart.dootson at gmail.com  Sun Jun 10 00:52:55 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Sun, 10 Jun 2007 08:52:55 +0100
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
Message-ID: <8b56cad40706100052t3705419bj5808bcb312dc3c9e@mail.gmail.com>

On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Perhaps we need an option to warn you of
> these things, or better yet, something in ANTLRWorks that would warn
> you. :)
>
> Ter
>

An Antlr equivalent of VB's 'Option Strict' ;-)

I'll vote for that - I rely on the compiler (or Intellisense) to catch
my typos :-)

Stuart

From antlr at mirality.co.nz  Sun Jun 10 02:19:12 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 10 Jun 2007 21:19:12 +1200
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <8b56cad40706100052t3705419bj5808bcb312dc3c9e@mail.gmail.co
 m>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706100052t3705419bj5808bcb312dc3c9e@mail.gmail.com>
Message-ID: <20070610091922.418C711EAC5@www.antlr.org>

At 19:52 10/06/2007, Stuart Dootson wrote:
 >On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
 >>
 >> Perhaps we need an option to warn you of these things,
 >> or better yet, something in ANTLRWorks that would warn
 >> you. :)

Not everyone uses ANTLRworks (especially those not targeting 
Java), so putting something only in there is not a solution.

 >An Antlr equivalent of VB's 'Option Strict' ;-)
 >
 >I'll vote for that - I rely on the compiler (or Intellisense) to 

 >catch my typos :-)

I'll vote for that too -- as long as it's on by 
default.  Especially since I can't think of a single case where 
you'd want to turn it off.


From parrt at cs.usfca.edu  Sun Jun 10 17:03:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jun 2007 17:03:07 -0700
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <20070610091922.9EE401005EB@nexus.cs.usfca.edu>
References: <8b56cad40706091707v54f5fb0w87ea4cacc2c63b51@mail.gmail.com>
	<AFCE3807-BAD8-4744-A6E1-58222274C18F@cs.usfca.edu>
	<8b56cad40706100052t3705419bj5808bcb312dc3c9e@mail.gmail.com>
	<20070610091922.9EE401005EB@nexus.cs.usfca.edu>
Message-ID: <E937AF78-0B57-4612-8208-0E5584AA0340@cs.usfca.edu>

Hi Guys... thanks for the analysis.  I have added an improvement report:

http://www.antlr.org:8888/browse/ANTLR-136

Ter
On Jun 10, 2007, at 2:19 AM, Gavin Lambert wrote:

> At 19:52 10/06/2007, Stuart Dootson wrote:
> >On 10/06/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> >>
> >> Perhaps we need an option to warn you of these things,
> >> or better yet, something in ANTLRWorks that would warn
> >> you. :)
>
> Not everyone uses ANTLRworks (especially those not targeting Java),  
> so putting something only in there is not a solution.
>
> >An Antlr equivalent of VB's 'Option Strict' ;-)
> >
> >I'll vote for that - I rely on the compiler (or Intellisense) to
> >catch my typos :-)
>
> I'll vote for that too -- as long as it's on by default.   
> Especially since I can't think of a single case where you'd want to  
> turn it off.
>


From parrt at cs.usfca.edu  Sun Jun 10 17:13:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jun 2007 17:13:21 -0700
Subject: [antlr-interest] Problem, with minimal problem-causing grammar
In-Reply-To: <20070610060719.A03443C600E8@newmach.olivercomputing.com>
References: <20070610060719.A03443C600E8@newmach.olivercomputing.com>
Message-ID: <9099134A-D416-4485-8DF9-7409963288B1@cs.usfca.edu>


On Jun 9, 2007, at 9:45 PM, Phil Oliver wrote:

> I've been having problems defining a grammar in ANTLRworks (1.0.2,  
> latest) - I keep getting the "java.net.ConnectException: Connection  
> refused: connect" problem, which, contrary to the assumptions of  
> some, does not appear to have anything to do with port numbers, but  
> with an uncaught Java out of memory problem. Every generated  
> grammar that I've tested in Eclipse, that has that problem in  
> ANTLRworks, blows up with an out of memory error, despite having  
> over a gigabyte of RAM available to the JVM.

Interesting. I get that memory error unless I use:

java -Xmx80M Test

  which makes sense because all of the keywords you have.  The DFA  
must be huge.  Yep, if you look at DFA4_eotS, which is a run length  
encoding of the DFA tables, you'll see that they can get very big.   
80M seems to make it work okay.

> This is (almost) the minimal problem grammar that I could create  
> that causes the problem, a very simple one. No grammar errors are  
> flagged. If there's an obvious problem to fix (that actually does  
> fix it), I'd appreciate some feedback. Otherwise it looks like a  
> bug in ANTLR to me, I'm guessing some kind of code generation  
> resulting in an infinite loop that depletes memory.

  just increase the memory a little bit.

>
> Some notes: removing say a few more random token definitions seems  
> to clear up the problem. Removing either StrNoHash or StrNoQuotAmp  
> removes the problem as well (but both together do not blow up when  
> the number of predefined tokens is slightly reduced.) Changing k=*  
> to k=1 doesn't fix anything.

ANTLR does not seem to like tokens that can match no characters,  
which you have a grammar:

StrNoHash                       : CharNoHash*;
StrNoQuotAmp                    : CharNoQuotAmp*;

These are meaningless because (...)* loops are optional. I think  
antlr might be going crazy here for these tokens, but I believe I  
have a bug report and already.

  thanks for the report.

Ter


From antlr at olivercomputing.com  Sun Jun 10 18:45:55 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Sun, 10 Jun 2007 21:45:55 -0400
Subject: [antlr-interest] Problem, with minimal problem-causing  grammar
Message-ID: <20070611030504.8B8433C600E4@newmach.olivercomputing.com>

Ter wrote:

>  just increase the memory a little bit.

I have a large amount of RAM specified in the java invocation for the 
ANTLRWorks jar but I gather it's launching a separate JVM when Debug 
is invoked to compile/debug the compiled code. Inspecting the 
ANTLRWorks source code, I see this in DBLocal.java (package 
org.antlr.works.debugger.local):

remoteParserProcess = Runtime.getRuntime().exec(new String[] { 
"java", "-classpath", classPath, remoteParserClassName});

Unless I'm missing something, that would be the logical place to add 
a (preference dialog driven) parameter to increase the JVM memory 
when launching the compiled grammar for debugging. I will probably 
fiddle with this myself but I think this is something that should be 
put into the main code, I'm surely not the only one to run into such 
problems.  Are you interested in getting source code updates?

>ANTLR does not seem to like tokens that can match no characters,
>which you have a grammar:
>
>StrNoHash                       : CharNoHash*;
>StrNoQuotAmp                    : CharNoQuotAmp*;
>
>These are meaningless because (...)* loops are optional. I think
>antlr might be going crazy here for these tokens, but I believe I
>have a bug report and already.

Ok. I would not say they are meaningless however - how else can I 
match the potentially empty contents of a delimited string, e.g. an 
empty string with double quotes ("") or hash marks (##) ?  Or is it 
that it should say:

StrNoHash   : CharNoHash+;

then I simply have StrNoHash* when referenced in parser rules?

I've read that some systems have a truly integrated lexer/parser, 
where there is no artificial distinction made between tokens and 
parser pattern matching rules - would it fundamentally break the 
architecture of ANTLR for it to become that way someday?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070610/a3d4eae8/attachment.html 

From billhubard at gmail.com  Sun Jun 10 19:07:23 2007
From: billhubard at gmail.com (William Hubbard)
Date: Sun, 10 Jun 2007 23:07:23 -0300
Subject: [antlr-interest] ANTLRv2 grammar to ANTLRv3 conversion error
Message-ID: <d6c9b3b60706101907l13c3c8c8r2ff85f615d5fd121@mail.gmail.com>

Hello, this is my first message to the list.
I just want to convert an ANTLRv2 grammar to ANTLRv3 with, so I've
downloaded and unpacked the v2v3-0.2.tar.gz, copied mygrammar.g to the same
directory and tried

C:\v2v3>java v3me mygrammar.g

and this error appeared:

Exception in thread "main" java.lang.NoClassDefFoundError: v3me

I missed something? any ideas?
thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070610/a61f6158/attachment.html 

From chittivamshi at yahoo.co.in  Sun Jun 10 22:29:34 2007
From: chittivamshi at yahoo.co.in (chitti vamshi)
Date: Mon, 11 Jun 2007 06:29:34 +0100 (BST)
Subject: [antlr-interest] Generating XML from a antlr grammer!
Message-ID: <842880.20147.qm@web94502.mail.in2.yahoo.com>

Hello,
  
<?xml version='1.0' encoding='utf-8'?>  <slideshow       title="Sample Slide Show"      date="Date of publication"      author="Yours Truly">      <slide type="all">        <title>Wake up to WonderWidgets!</title>
    </slide>  
</slideshow>  I am new to writing a Grammar File.

How to generate a sample Grammar file based upon the above xml file.

Tnx a million in advance.

Bye

       
---------------------------------
 Download prohibited? No problem! CHAT from any browser, without download.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/7bc1f76d/attachment.html 

From aleksi.kallio at csc.fi  Sun Jun 10 22:49:10 2007
From: aleksi.kallio at csc.fi (Aleksi Kallio)
Date: Mon, 11 Jun 2007 08:49:10 +0300
Subject: [antlr-interest] Error reporting
Message-ID: <466CE256.60805@csc.fi>



Hello all,

I've been checking out ANTLR and planning to use it in a multi-threaded 
server scenario. I see that ErrorManager has been written mostly with a 
single-threaded scenario in mind. There are a couple of issues I've 
stumbled into when trying to adapt ANTLR into our case.

1) ErrorManager does support per-thread error listeners. However in our 
case we are pooling the threads we use to do all the work. I believe the 
approach in ErrorManager will work, but does introduce some ambiguity. 
Currently ErrorManager collects errors into a single spot and 
redistibutes them. It would be nice if in future you could also have 
independent listeners for each parse, and could pass them from thread to 
thread without worries.

2) In ErrorManager there is this static constructor that's causing a bit 
of a headache. Our locale is "FI" for which there are no error messages 
available. So I get an error saying that we are falling back to "US" 
error messages. Because this happens in the static constructor, there is 
no way of preventing it by setting ErrorManager's locale to "US" manually:

static {
   ...
   // it is inefficient to set the default locale here if another
   // piece of code is going to set the locale, but that would
   // require that a user call an init() function or something.  I prefer
   // that this class be ready to go when loaded as I'm absentminded ;)
   setLocale(Locale.getDefault());
   ...
}

Is there a way to get around this? I would want the parser to be silent 
and all error reporting to happen through our framework.


Finally, thanks for the great software! I hope in future it also 
stretches effortlessly into less conventional server side scenarios... :)


--
Aleksi Kallio, Application Architect, Scientific Software Development
P.O. BOX 405, 02101 Espoo, Finland, Tel +358 9 457 2297
CSC is the Finnish IT center for science, www.csc.fi
e-mail: aleksi.kallio at csc.fi


From fabiomaulo at gmail.com  Sun Jun 10 23:04:01 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Mon, 11 Jun 2007 03:04:01 -0300
Subject: [antlr-interest] JIRA
Message-ID: <466CE5D1.5020400@gmail.com>

Can we have a login for the JIRA ?


Thanks.
Fabio.


From parrt at cs.usfca.edu  Sun Jun 10 23:07:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jun 2007 23:07:37 -0700
Subject: [antlr-interest] JIRA
In-Reply-To: <466CE5D1.5020400@gmail.com>
References: <466CE5D1.5020400@gmail.com>
Message-ID: <F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>


On Jun 10, 2007, at 11:04 PM, Fabio Maulo wrote:

> Can we have a login for the JIRA ?

Hi. Well, I prefer to add bugs myself so I can mentally track what  
goes in and also to filter them.  Or, are you wanting to add comments  
to existing bugs?

Ter


From fabiomaulo at gmail.com  Sun Jun 10 23:10:31 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Mon, 11 Jun 2007 03:10:31 -0300
Subject: [antlr-interest] ANTLRWork freez
Message-ID: <466CE757.9090208@gmail.com>

I wrote the attached grammar using ANTLRWorks but now I can't work with it.
It is a partial grammar but i can't test any rules, can't debug it and, 
some times, i can't use the editor....

Any idea ?

Thanks.
Fabio.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Hql.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/19eae19f/attachment-0001.pl 

From fabiomaulo at gmail.com  Sun Jun 10 23:28:24 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Mon, 11 Jun 2007 03:28:24 -0300
Subject: [antlr-interest] JIRA]
Message-ID: <466CEB88.5040909@gmail.com>

Terence Parr escribi?:

> Hi. Well, I prefer to add bugs myself so I can mentally track what 
> goes in and also to filter them.  Or, are you wanting to add comments 
> to existing bugs?
>
> Ter
Hi Ter.
First of all thank for ANTLR and thank for the book.

I'm starting with ANTLR and I have some problem with ANTLRWorks.
So far I only sow some strange behavior in ANTLRW.
For example:
-No error/warning for empty rules (ex:     ruleName: ; )
-Some times the debugger give a "left recursion" but, if you use 
refactor to remove it the message is "The rule doesn't have a left 
recursion"
-With a large grammar (I really don't know if 273 rules represent a 
large grammar) I can't use interpreter with any start point
-Debugger apparently freeze the application
....

If the better way is this forum there is no problem for me.
Thanks.
Fabio.






From fabiomaulo at gmail.com  Sun Jun 10 23:29:41 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Mon, 11 Jun 2007 03:29:41 -0300
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <466CE757.9090208@gmail.com>
References: <466CE757.9090208@gmail.com>
Message-ID: <466CEBD5.1060007@gmail.com>

The attach is the err log.

Fabio.

Fabio Maulo escribi?:
> I wrote the attached grammar using ANTLRWorks but now I can't work 
> with it.
> It is a partial grammar but i can't test any rules, can't debug it 
> and, some times, i can't use the editor....
>
> Any idea ?
>
> Thanks.
> Fabio.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: hs_err_pid3528.log
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/02ad62dc/attachment.pl 

From win at wincent.com  Mon Jun 11 01:15:33 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 11 Jun 2007 10:15:33 +0200
Subject: [antlr-interest] JIRA
In-Reply-To: <F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>
References: <466CE5D1.5020400@gmail.com>
	<F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>
Message-ID: <B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>

El 11/6/2007, a las 8:07, Terence Parr escribi?:

> On Jun 10, 2007, at 11:04 PM, Fabio Maulo wrote:
>
>> Can we have a login for the JIRA ?
>
> Hi. Well, I prefer to add bugs myself so I can mentally track what  
> goes in and also to filter them.  Or, are you wanting to add  
> comments to existing bugs?

On a related (infrastructure) note... I know that you use Perforce.  
Is it true that there is no such thing as an anonymous checkout? (I  
acquired this understanding when I was trying to evaluate Perforce  
for use on my own projects; I went looking for large public  
repositories so that I could have a look at how it handled large  
codebases but I couldn't find anything at all.)

I know we can download an up-to-the-minute tarball from the Fisheye  
interface, but it's not quite as nice as being able to do things like  
"svn co", "svn up", and "svn diff" etc...

Cheers,
Wincent


From dave at badgers-in-foil.co.uk  Mon Jun 11 04:41:48 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 11 Jun 2007 11:41:48 +0000
Subject: [antlr-interest] JIRA
In-Reply-To: <B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>
References: <466CE5D1.5020400@gmail.com>
	<F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>
	<B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>
Message-ID: <20070611114148.GA9597@badgers-in-foil.co.uk>

On Mon, Jun 11, 2007 at 10:15:33AM +0200, Wincent Colaiuta wrote:
> On a related (infrastructure) note... I know that you use Perforce.  
> Is it true that there is no such thing as an anonymous checkout? (I  
> acquired this understanding when I was trying to evaluate Perforce  
> for use on my own projects; I went looking for large public  
> repositories so that I could have a look at how it handled large  
> codebases but I couldn't find anything at all.)
> 
> I know we can download an up-to-the-minute tarball from the Fisheye  
> interface, but it's not quite as nice as being able to do things like  
> "svn co", "svn up", and "svn diff" etc...

I'd like to be able to do this too; didn't find a way, but didn't spend
too much time looking either, to be fair.


ta,
dave


-- 
http://david.holroyd.me.uk/

From jaluber at gmx.de  Mon Jun 11 05:32:14 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Jun 2007 14:32:14 +0200
Subject: [antlr-interest] ANTLRv2 grammar to ANTLRv3 conversion error
In-Reply-To: <d6c9b3b60706101907l13c3c8c8r2ff85f615d5fd121@mail.gmail.com>
References: <d6c9b3b60706101907l13c3c8c8r2ff85f615d5fd121@mail.gmail.com>
Message-ID: <466D40CE.8080000@gmx.de>

William Hubbard wrote:
> Hello, this is my first message to the list.
> I just want to convert an ANTLRv2 grammar to ANTLRv3 with, so I've
> downloaded and unpacked the v2v3-0.2.tar.gz, copied mygrammar.g to the
> same directory and tried
> 
> C:\v2v3>java v3me mygrammar.g
> 
> and this error appeared:
> 
> Exception in thread "main" java.lang.NoClassDefFoundError: v3me
> 
> I missed something? any ideas?

Add the "-cp c:/v3v3" option. Usually this error means that the current
directory isn't in the class path.

Best regards,
Johannes Luber

From jaluber at gmx.de  Mon Jun 11 05:36:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Jun 2007 14:36:56 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <842880.20147.qm@web94502.mail.in2.yahoo.com>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>
Message-ID: <466D41E8.2080406@gmx.de>

chitti vamshi wrote:
> Hello,
> 
>     <?xml version='1.0' encoding='utf-8'?>  <slideshow       title="Sample Slide Show"      date="Date of publication"      author="Yours Truly">      <slide type="all">        <title>Wake up to WonderWidgets!</title>
>         </slide>  
>     </slideshow>  I am new to writing a Grammar File.
> 
>     How to generate a sample Grammar file based upon the above xml file.

Look at
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
for grammar files in general and
<http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer>, how recognize XML
tags. BTW, the grammar in the latter link doesn't check the correct
order of tags (matching closing tag to opening tag).

Best regards,
Johannes Luber

From martin.danjou at neterion.com  Mon Jun 11 05:50:39 2007
From: martin.danjou at neterion.com (Martin d'Anjou)
Date: Mon, 11 Jun 2007 08:50:39 -0400 (EDT)
Subject: [antlr-interest] Possible Antlr defect?
In-Reply-To: <mailman.1236.1181542238.2496.antlr-interest@antlr.org>
References: <mailman.1236.1181542238.2496.antlr-interest@antlr.org>
Message-ID: <Pine.LNX.4.63.0706110839490.29637@tennents.s2io.com>

> Hi Guys... thanks for the analysis.  I have added an improvement report:
>
> http://www.antlr.org:8888/browse/ANTLR-136

If I may add my two cents...

There are 3 places where humans expect errors in compiled langauges:
1- compile time, catches mostly syntax
2- linking, catches mostly unresolved references
3- runtime, catches bad algorithms

Human programmers are "wired" to assume runtime errors are caused by bad 
algorithms or improper data content. The error we are talking about here 
(dynamically defined token) shows up as 3), runtime, but really is a type 
1), syntax error. I think this is why it takes so long for users to 
realize the mistake.

Martin

From oliver at zeigermann.de  Mon Jun 11 08:21:00 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon, 11 Jun 2007 17:21:00 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <466D41E8.2080406@gmx.de>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>
	<466D41E8.2080406@gmx.de>
Message-ID: <9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>

2007/6/11, Johannes Luber <jaluber at gmx.de>:
> Look at
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
> for grammar files in general and
> <http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer>, how recognize XML
> tags. BTW, the grammar in the latter link doesn't check the correct
> order of tags (matching closing tag to opening tag).

He, Johannes!

Good observation.

Maybe we can have a version that checks the order using validating
semantic predicates. That really would be a good example for their
use.

What do you think?

Oliver

From DWEISER at uwyo.edu  Mon Jun 11 08:38:12 2007
From: DWEISER at uwyo.edu (David A Weiser)
Date: Mon, 11 Jun 2007 09:38:12 -0600
Subject: [antlr-interest] examples grammars involving "@synpredgate{...}"?
Message-ID: <F71C9897F5400545833E3786F31CD0AD01F2ADCD@TELEGRAPH5.uwyo.edu>

I've been looking for example grammars that use the @synpredgate{...} 
action, but i cannot find any. 

right now i've tried the following in my grammar: 
_____________ 
<header, lexer, members here>

@synpredgate{true} 

<rules start here> 
... 
_______________ 

and 

______________ 
<header, lexer, members here>

@synpredgate{backtracking >=0} 

<rules start here> 
... 
_____________ 

but, when the grammar is compiled, "backtracking==0" is still the 
gate.  what am i doing wrong? 
thanks, 
dave 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/10768097/attachment-0001.html 

From jaluber at gmx.de  Mon Jun 11 10:04:28 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 11 Jun 2007 19:04:28 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>	
	<466D41E8.2080406@gmx.de>
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>
Message-ID: <466D809C.9070607@gmx.de>

Oliver Zeigermann wrote:
> 2007/6/11, Johannes Luber <jaluber at gmx.de>:
> 
> He, Johannes!
> 
> Good observation.
> 
> Maybe we can have a version that checks the order using validating
> semantic predicates. That really would be a good example for their
> use.
> 
> What do you think?

I've created an implementation (see grammar below), but the error
reporting AND recovering is weak. For the XML file

<doc>
    <assembly>
        <name>Util</Name>
    </assembly>
</doc>

the following is being output:

"line 3:18 rule endTag failed predicate: {
$ElementScope::currentElementName == input.LA(2).text }?
line 4:4 rule endTag failed predicate: {
$ElementScope::currentElementName == input.LA(2).text }?"

The second message is a conundrum: If the value of currentElementName is
still "name", why does it accept the closing </doc>? Maybe you have
better idea regarding this problem.

Best regards,
Johannes Luber


parser  grammar XMLParser;

options {      tokenVocab=XMLLexer; }

scope ElementScope {
String currentElementName;
}

document  : element ;

element
    : startTag
        (element
        | PCDATA
        )*
        endTag
    | emptyElement
    ;

startTag
scope ElementScope;
	:	TAG_START_OPEN GENERIC_ID (attribute)* TAG_CLOSE {
$ElementScope::currentElementName = $GENERIC_ID.text; }
	;

attribute  : GENERIC_ID ATTR_EQ ATTR_VALUE ;

endTag
scope ElementScope;
	:	{ $ElementScope::currentElementName == input.LT(2).getText() }?
TAG_END_OPEN GENERIC_ID TAG_CLOSE ;

emptyElement : TAG_START_OPEN GENERIC_ID  (attribute)* TAG_EMPTY_CLOSE ;

From parrt at cs.usfca.edu  Mon Jun 11 16:35:39 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:35:39 -0700
Subject: [antlr-interest] examples grammars involving
	"@synpredgate{...}"?
In-Reply-To: <F71C9897F5400545833E3786F31CD0AD01F2ADCD@TELEGRAPH5.uwyo.edu>
References: <F71C9897F5400545833E3786F31CD0AD01F2ADCD@TELEGRAPH5.uwyo.edu>
Message-ID: <D420FB2D-7373-4344-ABA2-FD87E81726E3@cs.usfca.edu>


On Jun 11, 2007, at 8:38 AM, David A Weiser wrote:

> I've been looking for example grammars that use the @synpredgate{...}
> action, but i cannot find any.
>
> right now i've tried the following in m
Hmm...i get:

                     if ( true ) {
                       action
                     }

when I do:

grammar T;
options { backtrack=true; }
@synpredgate{true}

a : b ';'
   | b '!'
   ;

b : '(' b ')' {action}
   | B
   ;


Ter


From parrt at cs.usfca.edu  Mon Jun 11 16:37:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:37:55 -0700
Subject: [antlr-interest] JIRA
In-Reply-To: <B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>
References: <466CE5D1.5020400@gmail.com>
	<F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>
	<B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>
Message-ID: <59B87D28-E6BD-4A62-97DD-583F5F16995F@cs.usfca.edu>


On Jun 11, 2007, at 1:15 AM, Wincent Colaiuta wrote:

> El 11/6/2007, a las 8:07, Terence Parr escribi?:
>
>> On Jun 10, 2007, at 11:04 PM, Fabio Maulo wrote:
>>
>>> Can we have a login for the JIRA ?
>>
>> Hi. Well, I prefer to add bugs myself so I can mentally track what  
>> goes in and also to filter them.  Or, are you wanting to add  
>> comments to existing bugs?
>
> On a related (infrastructure) note... I know that you use Perforce.  
> Is it true that there is no such thing as an anonymous checkout?

Yes, perforce doesn't want me giving out a user that all can use and  
ther eis not anon. login. :(  fisheye is our only approach for now I  
guess.

> (I acquired this understanding when I was trying to evaluate  
> Perforce for use on my own projects; I went looking for large  
> public repositories so that I could have a look at how it handled  
> large codebases but I couldn't find anything at all.)
>
> I know we can download an up-to-the-minute tarball from the Fisheye  
> interface, but it's not quite as nice as being able to do things  
> like "svn co", "svn up", and "svn diff" etc...

yep.

Do you want a user account? :)

Ter


From parrt at cs.usfca.edu  Mon Jun 11 16:38:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:38:13 -0700
Subject: [antlr-interest] JIRA
In-Reply-To: <20070611114148.GA9597@badgers-in-foil.co.uk>
References: <466CE5D1.5020400@gmail.com>
	<F24CB521-3810-4B5A-8EA0-588405CA40E0@cs.usfca.edu>
	<B21CD1EC-5A05-48D4-8202-432B60465F4F@wincent.com>
	<20070611114148.GA9597@badgers-in-foil.co.uk>
Message-ID: <3DBF2E9F-250F-4630-A832-20BC2EC8349F@cs.usfca.edu>

want a user account?
Ter


From parrt at cs.usfca.edu  Mon Jun 11 16:38:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:38:53 -0700
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <466CEBD5.1060007@gmail.com>
References: <466CE757.9090208@gmail.com> <466CEBD5.1060007@gmail.com>
Message-ID: <C18B8A7A-8032-45CA-B3D4-42B984A0EA40@cs.usfca.edu>

Wow!  You killed java itself.  I believe someone else had this  
problem and found out they had a previous version of antlr in the  
path...odd, but true.
Ter
On Jun 10, 2007, at 11:29 PM, Fabio Maulo wrote:

> The attach is the err log.
>
> Fabio.
>
> Fabio Maulo escribi?:
>> I wrote the attached grammar using ANTLRWorks but now I can't work  
>> with it.
>> It is a partial grammar but i can't test any rules, can't debug it  
>> and, some times, i can't use the editor....
>>
>> Any idea ?
>>
>> Thanks.
>> Fabio.
> #
> # An unexpected error has been detected by Java Runtime Environment:
> #
> #  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x6d8934a1,  
> pid=3528, tid=668
> #
> # Java VM: Java HotSpot(TM) Client VM (1.6.0_01-b06 mixed mode,  
> sharing)
> # Problematic frame:
> # V  [jvm.dll+0xd34a1]
> #
> # If you would like to submit a bug report, please visit:
> #   http://java.sun.com/webapps/bugreport/crash.jsp
> #
>
> ---------------  T H R E A D  ---------------
>
> Current thread (0x039f3000):  JavaThread "Timer-0" [_thread_in_vm,  
> id=668]
>
> siginfo: ExceptionCode=0xc0000005, reading address 0x00000000
>
> Registers:
> EAX=0x00000000, EBX=0x039f3000, ECX=0x039f3000, EDX=0x6d987130
> ESP=0x03dbf95c, EBP=0x03dbf9a8, ESI=0x039f30e8, EDI=0x00000000
> EIP=0x6d8934a1, EFLAGS=0x00010246
>
> Top of Stack: (sp=0x03dbf95c)
> 0x03dbf95c:   00000000 039f30e8 00000000 039f3000
> 0x03dbf96c:   039f05f4 0000006c 6d987130 6d3babd0
> 0x03dbf97c:   039f3000 00000000 00000000 00000d96
> 0x03dbf98c:   03aea008 039f3000 26a1ff58 26a1ff58
> 0x03dbf99c:   0300cfd8 03aea008 00000001 03dbf9e4
> 0x03dbf9ac:   0093a460 00000d96 03dbf9ec 000008c0
> 0x03dbf9bc:   03dbf9f4 22e8fcd0 03dbf9c4 26a1ff58
> 0x03dbf9cc:   03dbf9f8 26a274a0 00000000 26a1ff58
>
> Instructions: (pc=0x6d8934a1)
> 0x6d893491:   0c e8 59 29 08 00 8b 7c 24 28 85 ff 8b 44 24 24
> 0x6d8934a1:   8b 00 7c 54 8b 54 24 2c 85 d2 7c 4c 8b 70 08 8d
>
>
> Stack: [0x03d70000,0x03dc0000),  sp=0x03dbf95c,  free space=318k
> Native frames: (J=compiled Java code, j=interpreted, Vv=VM code,  
> C=native code)
> V  [jvm.dll+0xd34a1]
> j  java.util.prefs.WindowsPreferences.WindowsRegQueryValueEx(I[B)[B+0
> j  java.util.prefs.WindowsPreferences.getSpi(Ljava/lang/String;) 
> Ljava/lang/String;+17
> j  java.util.prefs.AbstractPreferences.get(Ljava/lang/String;Ljava/ 
> lang/String;)Ljava/lang/String;+43
> j  java.util.prefs.AbstractPreferences.getByteArray(Ljava/lang/ 
> String;[B)[B+5
> j  org.antlr.xjlib.appkit.app.XJPreferences.getObject(Ljava/lang/ 
> String;Ljava/lang/Object;)Ljava/lang/Object;+6
> j  org.antlr.works.prefs.AWPrefs.getUpdateNextDate()Ljava/util/ 
> Calendar;+6
> j  org.antlr.works.utils.HelpManager.checkUpdatesAuto(Z)V+33
> j  org.antlr.works.utils.HelpManager.scheduledTimerFired(Z)V+1
> j  org.antlr.xjlib.foundation.timer.XJScheduledTimer.fire(ZJ)V+58
> j  org.antlr.xjlib.appkit.app.XJApplication$ScheduledTimer.run()V+34
> j  java.util.TimerThread.mainLoop()V+221
> j  java.util.TimerThread.run()V+1
> v  ~StubRoutines::call_stub
>
> Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
> j  java.util.prefs.WindowsPreferences.WindowsRegQueryValueEx(I[B)[B+0
> j  java.util.prefs.WindowsPreferences.getSpi(Ljava/lang/String;) 
> Ljava/lang/String;+17
> j  java.util.prefs.AbstractPreferences.get(Ljava/lang/String;Ljava/ 
> lang/String;)Ljava/lang/String;+43
> j  java.util.prefs.AbstractPreferences.getByteArray(Ljava/lang/ 
> String;[B)[B+5
> j  org.antlr.xjlib.appkit.app.XJPreferences.getObject(Ljava/lang/ 
> String;Ljava/lang/Object;)Ljava/lang/Object;+6
> j  org.antlr.works.prefs.AWPrefs.getUpdateNextDate()Ljava/util/ 
> Calendar;+6
> j  org.antlr.works.utils.HelpManager.checkUpdatesAuto(Z)V+33
> j  org.antlr.works.utils.HelpManager.scheduledTimerFired(Z)V+1
> j  org.antlr.xjlib.foundation.timer.XJScheduledTimer.fire(ZJ)V+58
> j  org.antlr.xjlib.appkit.app.XJApplication$ScheduledTimer.run()V+34
> j  java.util.TimerThread.mainLoop()V+221
> j  java.util.TimerThread.run()V+1
> v  ~StubRoutines::call_stub
>
> ---------------  P R O C E S S  ---------------
>
> Java Threads: ( => current thread )
> =>0x039f3000 JavaThread "Timer-0" [_thread_in_vm, id=668]
>   0x03995400 JavaThread "class  
> org.antlr.works.visualization.VisualDrawing" [_thread_blocked, id=364]
>   0x038b2400 JavaThread "TimerQueue" daemon [_thread_blocked, id=2936]
>   0x038b2800 JavaThread "class  
> org.antlr.works.components.grammar.CEditorGrammar 
> $AfterParseOperations" [_thread_blocked, id=2452]
>   0x003d6400 JavaThread "DestroyJavaVM" [_thread_blocked, id=3972]
>   0x02b62800 JavaThread "AWT-EventQueue-0" [_thread_blocked, id=3156]
>   0x02b5e000 JavaThread "AWT-Windows" daemon [_thread_in_native,  
> id=3996]
>   0x02b5d400 JavaThread "AWT-Shutdown" [_thread_blocked, id=2508]
>   0x02b4d800 JavaThread "Java2D Disposer" daemon [_thread_blocked,  
> id=3672]
>   0x02a9cc00 JavaThread "Low Memory Detector" daemon  
> [_thread_blocked, id=1108]
>   0x02a98400 JavaThread "CompilerThread0" daemon [_thread_blocked,  
> id=500]
>   0x02a97000 JavaThread "Attach Listener" daemon [_thread_blocked,  
> id=3280]
>   0x02a96000 JavaThread "Signal Dispatcher" daemon  
> [_thread_blocked, id=3132]
>   0x02a8e400 JavaThread "Finalizer" daemon [_thread_blocked, id=296]
>   0x02a8d400 JavaThread "Reference Handler" daemon  
> [_thread_blocked, id=3824]
>
> Other Threads:
>   0x02a84000 VMThread [id=2492]
>   0x02a9e400 WatcherThread [id=2372]
>
> VM state:not at safepoint (normal execution)
>
> VM Mutex/Monitor currently owned by a thread: None
>
> Heap
>  def new generation   total 4544K, used 4543K [0x229b0000,  
> 0x22e90000, 0x22e90000)
>   eden space 4096K,  99% used [0x229b0000, 0x22dafff0, 0x22db0000)
>   from space 448K,  99% used [0x22e20000, 0x22e8fd08, 0x22e90000)
>   to   space 448K,   0% used [0x22db0000, 0x22db0000, 0x22e20000)
>  tenured generation   total 60544K, used 60544K [0x22e90000,  
> 0x269b0000, 0x269b0000)
>    the space 60544K, 100% used [0x22e90000, 0x269b0000, 0x269b0000,  
> 0x269b0000)
>  compacting perm gen  total 12288K, used 4348K [0x269b0000,  
> 0x275b0000, 0x2a9b0000)
>    the space 12288K,  35% used [0x269b0000, 0x26def0f0, 0x26def200,  
> 0x275b0000)
>     ro space 8192K,  62% used [0x2a9b0000, 0x2aeae4e8, 0x2aeae600,  
> 0x2b1b0000)
>     rw space 12288K,  52% used [0x2b1b0000, 0x2b7f0e78, 0x2b7f1000,  
> 0x2bdb0000)
>
> Dynamic libraries:
> 0x00400000 - 0x00423000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\javaw.exe
> 0x7c910000 - 0x7c9c6000 	C:\WINDOWS\system32\ntdll.dll
> 0x7c800000 - 0x7c901000 	C:\WINDOWS\system32\kernel32.dll
> 0x77da0000 - 0x77e4c000 	C:\WINDOWS\system32\ADVAPI32.dll
> 0x77e50000 - 0x77ee1000 	C:\WINDOWS\system32\RPCRT4.dll
> 0x7e390000 - 0x7e420000 	C:\WINDOWS\system32\USER32.dll
> 0x77ef0000 - 0x77f37000 	C:\WINDOWS\system32\GDI32.dll
> 0x7c340000 - 0x7c396000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\msvcr71.dll
> 0x6d7c0000 - 0x6da07000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\client\jvm.dll
> 0x76b00000 - 0x76b2e000 	C:\WINDOWS\system32\WINMM.dll
> 0x6d310000 - 0x6d318000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\hpi.dll
> 0x76bb0000 - 0x76bbb000 	C:\WINDOWS\system32\PSAPI.DLL
> 0x6d770000 - 0x6d77c000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\verify.dll
> 0x6d3b0000 - 0x6d3cf000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\java.dll
> 0x6d7b0000 - 0x6d7bf000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\zip.dll
> 0x6d000000 - 0x6d1c3000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\awt.dll
> 0x72f80000 - 0x72fa6000 	C:\WINDOWS\system32\WINSPOOL.DRV
> 0x77be0000 - 0x77c38000 	C:\WINDOWS\system32\msvcrt.dll
> 0x76340000 - 0x7635d000 	C:\WINDOWS\system32\IMM32.dll
> 0x774b0000 - 0x775ed000 	C:\WINDOWS\system32\ole32.dll
> 0x5b150000 - 0x5b188000 	C:\WINDOWS\system32\uxtheme.dll
> 0x736e0000 - 0x73729000 	C:\WINDOWS\system32\ddraw.dll
> 0x73b40000 - 0x73b46000 	C:\WINDOWS\system32\DCIMAN32.dll
> 0x6d2b0000 - 0x6d303000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\fontmanager.dll
> 0x10000000 - 0x10030000 	C:\ARCHIV~1\ARCHIV~1\SYMANT~1\ANTISPAM 
> \asOEHook.dll
> 0x7c000000 - 0x7c054000 	C:\WINDOWS\system32\MSVCR70.dll
> 0x10100000 - 0x1010e000 	C:\Archivos de programa\Logitech\SetPoint 
> \lgscroll.dll
> 0x7c3a0000 - 0x7c41b000 	C:\WINDOWS\system32\MSVCP71.dll
> 0x7c9d0000 - 0x7d1ef000 	C:\WINDOWS\system32\shell32.dll
> 0x77f40000 - 0x77fb6000 	C:\WINDOWS\system32\SHLWAPI.dll
> 0x773a0000 - 0x774a3000 	C:\WINDOWS\WinSxS 
> \x86_Microsoft.Windows.Common- 
> Controls_6595b64144ccf1df_6.0.2600.2982_x-ww_ac3f9c03\comctl32.dll
> 0x58c30000 - 0x58cca000 	C:\WINDOWS\system32\comctl32.dll
> 0x6d570000 - 0x6d583000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\net.dll
> 0x71a30000 - 0x71a47000 	C:\WINDOWS\system32\WS2_32.dll
> 0x71a20000 - 0x71a28000 	C:\WINDOWS\system32\WS2HELP.dll
> 0x6d590000 - 0x6d599000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\nio.dll
> 0x60300000 - 0x60307000 	C:\Archivos de programa\Yahoo!\Messenger 
> \idle.dll
> 0x6d220000 - 0x6d243000 	C:\Archivos de programa\Java\jre1.6.0_01 
> \bin\dcpr.dll
>
> VM Arguments:
> java_command: C:\antlr\antlr30\antlrworks-1.0.2.jar
> Launcher Type: SUN_STANDARD
>
> Environment Variables:
> CLASSPATH=C:\antlr\antlr30\lib\antlr-2.7.7.jar;C:\antlr\antlr30\lib 
> \antlr-3.0.jar;C:\antlr\antlr30\lib\stringtemplate-3.0.jar
> PATH=C:\Archivos de programa\CollabNet Subversion Server;C: 
> \Archivos de programa\CollabNet Subversion Server\httpd\bin;C: 
> \Archivos de programa\Borland\Delphi7\Bin;C:\Archivos de programa 
> \Borland\Delphi7\Projects\Bpl\;C:\Delphi\Bpl;C:\HunabKu_BPL;C: 
> \WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Archivos  
> de programa\Intel\DMIX;C:\Archivos de programa\Microsoft SQL Server 
> \90\Tools\binn\;C:\Archivos de programa\ATI Technologies\ATI.ACE\;C: 
> \Archivos de programa\OpenVPN\bin;C:\CSharp\NUnit\bin;C:\CSharp\NAnt 
> \bin;C:\Archivos de programa\Sandcastle\ProductionTools\
> USERNAME=Fabio Maulo
> OS=Windows_NT
> PROCESSOR_IDENTIFIER=x86 Family 15 Model 4 Stepping 4, GenuineIntel
>
>
>
> ---------------  S Y S T E M  ---------------
>
> OS: Windows XP Build 2600 Service Pack 2
>
> CPU:total 2 family 15, cmov, cx8, fxsr, mmx, sse, sse2, ht
>
> Memory: 4k page, physical 2095148k(1270608k free), swap 3511356k 
> (2730700k free)
>
> vm_info: Java HotSpot(TM) Client VM (1.6.0_01-b06) for windows-x86,  
> built on Mar 14 2007 00:24:02 by "java_re" with unknown MS VC++:1310
>


From parrt at cs.usfca.edu  Mon Jun 11 16:42:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:42:42 -0700
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <466CE757.9090208@gmail.com>
References: <466CE757.9090208@gmail.com>
Message-ID: <8CA78A66-3625-4A3F-9607-84AD8D240C1F@cs.usfca.edu>


On Jun 10, 2007, at 11:10 PM, Fabio Maulo wrote:

> I wrote the attached grammar using ANTLRWorks but now I can't work  
> with it.
> It is a partial grammar but i can't test any rules, can't debug it  
> and, some times, i can't use the editor....
>
> Any idea ?

Try tacking the issues one by one.  There are a number of errors in  
the grammar I believe:


ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
warning(205): T.g:167:4: ANTLR could not analyze this decision in  
rule booleanFactor; often this is because of recursive rule  
references visible from the left edge of alternatives.  ANTLR will re- 
analyze the decision with a fixed lookahead of k=1.  Consider using  
"options {k=1;}" for that decision and possibly adding a syntactic  
predicate.
warning(205): T.g:175:3: ANTLR could not analyze this decision in  
rule booleanPrimary; often this is because of recursive rule  
references visible from the left edge of alternatives.  ANTLR will re- 
analyze the decision with a fixed lookahead of k=1.  Consider using  
"options {k=1;}" for that decision and possibly adding a syntactic  
predicate.
warning(205): T.g:175:3: ANTLR could not analyze this decision in  
rule booleanPrimary; often this is because of recursive rule  
references visible from the left edge of alternatives.  ANTLR will re- 
analyze the decision with a fixed lookahead of k=1.  Consider using  
"options {k=1;}" for that decision and possibly adding a syntactic  
predicate.
...

Ter

From parrt at cs.usfca.edu  Mon Jun 11 16:47:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:47:28 -0700
Subject: [antlr-interest] Error reporting
In-Reply-To: <466CE256.60805@csc.fi>
References: <466CE256.60805@csc.fi>
Message-ID: <475ED2E8-7935-4838-8392-66C3B05821B7@cs.usfca.edu>


On Jun 10, 2007, at 10:49 PM, Aleksi Kallio wrote:
> Hello all,

Hi Aleksi :)

> I've been checking out ANTLR and planning to use it in a multi- 
> threaded server scenario. I see that ErrorManager has been written  
> mostly with a single-threaded scenario in mind.

Well, you can have multiple threads emitting errors; we use our own  
"thread local" variables map:

	/** Each thread might need it's own error listener; e.g., a GUI with
	 *  multiple window frames holding multiple grammars.
	 */
	private static Map threadToListenerMap = new HashMap();

At least it's our intention to have it work this way. ;)

> There are a couple of issues I've stumbled into when trying to  
> adapt ANTLR into our case.
>
> 1) ErrorManager does support per-thread error listeners.
> However in our case we are pooling the threads we use to do all the  
> work.

oh!

> I believe the approach in ErrorManager will work, but does  
> introduce some ambiguity. Currently ErrorManager collects errors  
> into a single spot and redistibutes them. It would be nice if in  
> future you could also have independent listeners for each parse,  
> and could pass them from thread to thread without worries.

Hmm...well all methods such as error() ask for a separate listener:

	public static ANTLRErrorListener getErrorListener() {
		ANTLRErrorListener el =
			(ANTLRErrorListener)threadToListenerMap.get(Thread.currentThread());
		if ( el==null ) {
			return theDefaultErrorListener;
		}
		return el;
	}

Doesn't that work?

> 2) In ErrorManager there is this static constructor that's causing  
> a bit of a headache. Our locale is "FI" for which there are no  
> error messages available. So I get an error saying that we are  
> falling back to "US" error messages. Because this happens in the  
> static constructor, there is no way of preventing it by setting  
> ErrorManager's locale to "US" manually:
>
> static {
>   ...
>   // it is inefficient to set the default locale here if another
>   // piece of code is going to set the locale, but that would
>   // require that a user call an init() function or something.  I  
> prefer
>   // that this class be ready to go when loaded as I'm absentminded ;)
>   setLocale(Locale.getDefault());
>   ...
> }
>
> Is there a way to get around this? I would want the parser to be  
> silent and all error reporting to happen through our framework.

I think it should simply not make that error any more.  Would that  
work for you?  It would silently fail over to English default error  
msg template.

> Finally, thanks for the great software! I hope in future it also  
> stretches effortlessly into less conventional server side  
> scenarios... :)

Thanks for the feedback!
Ter


From parrt at cs.usfca.edu  Mon Jun 11 16:49:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 16:49:01 -0700
Subject: [antlr-interest] Problem, with minimal problem-causing grammar
In-Reply-To: <20070611023851.BE85F3C600E4@newmach.olivercomputing.com>
References: <20070610060719.A03443C600E8@newmach.olivercomputing.com>
	<9099134A-D416-4485-8DF9-7409963288B1@cs.usfca.edu>
	<20070611023851.BE85F3C600E4@newmach.olivercomputing.com>
Message-ID: <684ADB46-0C6E-4671-8E87-C953760FE29A@cs.usfca.edu>


On Jun 10, 2007, at 6:19 PM, Phil Oliver wrote:

> Ter wrote:
>
>>  just increase the memory a little bit.
>
> I have a large amount of RAM specified in the java invocation for  
> the ANTLRWorks jar but I gather it's launching a separate JVM when  
> Debug is invoked to compile/debug the compiled code. How do I  
> change the memory parameters within ANTLRWorks, for debugging?
>
>> ANTLR does not seem to like tokens that can match no characters,
>> which you have a grammar:
>>
>> StrNoHash                       : CharNoHash*;
>> StrNoQuotAmp                    : CharNoQuotAmp*;
>>
>> These are meaningless because (...)* loops are optional. I think
>> antlr might be going crazy here for these tokens, but I believe I
>> have a bug report and already.
>
> Ok. I would not say they are meaningless however - how else can I  
> match the potentially empty contents of a delimited string, e.g. an  
> empty string with double quotes ("") or hash marks (##) ?  Or is it  
> that it should say:
>
> StrNoHash   : CharNoHash+;
>
> then I simply have StrNoHash* when referenced in parser rules?

Almost.  yep, tokens should not be empty.  Just use StrNoHash? in  
parser.

> I've read that some systems have a truly integrated lexer/parser,  
> where there is no artificial distinction made between tokens and  
> parser pattern matching rules - would it fundamentally break the  
> architecture of ANTLR for it to become that way someday?

It can do now if you purely use the lexer.  All rules but start rule  
must be fragment.  Weird, but it works!

Ter


From rschulz at sonic.net  Mon Jun 11 16:54:29 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 11 Jun 2007 16:54:29 -0700
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <466CEBD5.1060007@gmail.com>
References: <466CE757.9090208@gmail.com> <466CEBD5.1060007@gmail.com>
Message-ID: <200706111654.29444.rschulz@sonic.net>

On Sunday 10 June 2007 23:29, Fabio Maulo wrote:
> The attach is the err log.

Just as when an application program triggers an operating system crash 
it's the operating system's problem, when you crash the JVM itself, it 
is by definition a problem for the JVM's author / vendor.

You should report this bug to Sun.


> Fabio.


Randall Schulz

From evilsteevil at gmail.com  Mon Jun 11 16:57:55 2007
From: evilsteevil at gmail.com (Stephen Gargan)
Date: Mon, 11 Jun 2007 16:57:55 -0700
Subject: [antlr-interest] Looping Lexer
Message-ID: <a9cbce950706111657i3eb4d141sd4079c1071c54a79@mail.gmail.com>

I've been seeing a situation with Antlr and Antlrworks (1.0.2) and was
hoping someone could shed some light on it for me. I'm playing around with a
very simple grammar to familiarize myself with the concepts. When I try to
debug this grammar the Debugger fails to connect, the spawned debug process
doesn't terminate and takes over the system.

Having looked at the Antlr code generated by Antlrworks I have seen the
following. The __Test__.java file creates an instance of the lexer, uses the
lexer instance to create a CommonTokenStream and passes the this to the
parser to fill its buffer. At this stage the application goes into an
infinite loop requesting tokens from the lexer. The generated lexer is
broken and will either get stuck lexing a particular token (emitting
nothing) or (with slight modifications to the grammar) repeatedly emit the
same token.

The debug parser will not open its debug socket until after the buffer has
been filled leading to two outcomes. When the lexer repeatedly emits the
same token, the buffer in the Token stream will eventually fill up and an
OutOfMemory exception is generated. The spawned process ends, Antlrwoks will
try to connect to the finished process and eventually will fail.

The other case is worse though as the spawned process is left running,
spinning in its lexing loop, chewing up resources. Antlrworks cannot connect
and the spawned process is left hanging. Antlrworks could possibly mitigate
this by monitoring the spawned process and attempt to kill it if the
connection was unsuccessful.

The question remains though, what is wrong with my grammar that would cause
it to loop like this? It compiles fine, though that is not to say it is
valid ;), I'm new to all of this and would not be surprised if it were my
fault (indeed I'm hoping this is the case). Is there anything obviously
wrong in my grammar that would cause it to loop like this? If so is there
anything I should look for as tell-tale to avoid this problem? Might there
be a way for the lexer to know it is stuck in a loop and complain?

grammar simple;

paths    :     (path)*;
path    :    VOLUME | NAME NEWLINE;
VOLUME    :    'volume' NUMBER;
NAME    :    (WORD? WS?)*;
NUMBER    :     ('0'..'9')+ ;
WORD     :    ('a'..'z'|'A'..'Z'|'_')*;
WS     :     ( '\t' | ' ')+     { $channel = HIDDEN; } ;
NEWLINE :    '\r'? '\n' ;

The following snippet of code runs using the files generated by antlrworks
and gets stuck in the lexer. The test input is

volume1
this is a test volume2

public class LexerTest {

    public static void main(String[] args) throws Exception{
        simpleLexer lex = new simpleLexer(new
ANTLRFileStream("/tmp/antlrworks/__Test___input.txt"));
        System.out.println("Created Lexer");

        Token t = null;
        do{
            t = lex.nextToken();
            System.out.println(t.toString());
        }
        while(t != null);

        System.out.println("done"); // never gets here

    }
}


I am working on reproducing the grammar that caused the repeated emission of
the same token. I'll post again when I have failing this way again. Anyone
know what might be wrong?

Thanks in advance,

Stephen.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/49ab70fa/attachment.html 

From parrt at cs.usfca.edu  Mon Jun 11 17:03:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 17:03:15 -0700
Subject: [antlr-interest] Looping Lexer
In-Reply-To: <a9cbce950706111657i3eb4d141sd4079c1071c54a79@mail.gmail.com>
References: <a9cbce950706111657i3eb4d141sd4079c1071c54a79@mail.gmail.com>
Message-ID: <2D1989DE-4CA8-48F3-8596-309E087A74AC@cs.usfca.edu>


On Jun 11, 2007, at 4:57 PM, Stephen Gargan wrote:
> The question remains though, what is wrong with my grammar that  
> would cause it to loop like this? It compiles fine, though that is  
> not to say it is valid ;), I'm new to all of this and would not be  
> surprised if it were my fault (indeed I'm hoping this is the case).  
> Is there anything obviously wrong in my grammar that would cause it  
> to loop like this? If so is there anything I should look for as  
> tell-tale to avoid this problem? Might there be a way for the lexer  
> to know it is stuck in a loop and complain?

No empty lexer rules. ;)  * and ? are bad in the lexer if they are  
entire production.  I need to make a warning for this.

Ter
>
> grammar simple;
>
> paths    :     (path)*;
> path    :    VOLUME | NAME NEWLINE;
> VOLUME    :    'volume' NUMBER;
> NAME    :    (WORD? WS?)*;
> NUMBER    :     ('0'..'9')+ ;
> WORD     :    ('a'..'z'|'A'..'Z'|'_')*;
> WS     :     ( '\t' | ' ')+     { $channel = HIDDEN; } ;
> NEWLINE :    '\r'? '\n' ;
>
> The following snippet of code runs using the files generated by  
> antlrworks  and gets stuck in the lexer. The test input is
>
> volume1
> this is a test volume2
>
> public class LexerTest {
>
>     public static void main(String[] args) throws Exception{
>         simpleLexer lex = new simpleLexer(new ANTLRFileStream("/tmp/ 
> antlrworks/__Test___input.txt"));
>         System.out.println("Created Lexer");
>
>         Token t = null;
>         do{
>             t = lex.nextToken();
>             System.out.println(t.toString());
>         }
>         while(t != null);
>
>         System.out.println("done"); // never gets here
>
>     }
> }
>
>
> I am working on reproducing the grammar that caused the repeated  
> emission of the same token. I'll post again when I have failing  
> this way again. Anyone know what might be wrong?
>
> Thanks in advance,
>
> Stephen.
>
>
>


From antlr at shmuelhome.mine.nu  Mon Jun 11 17:10:37 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue, 12 Jun 2007 03:10:37 +0300
Subject: [antlr-interest] Problem, with minimal problem-causing grammar
In-Reply-To: <684ADB46-0C6E-4671-8E87-C953760FE29A@cs.usfca.edu>
References: <20070610060719.A03443C600E8@newmach.olivercomputing.com>	<9099134A-D416-4485-8DF9-7409963288B1@cs.usfca.edu>	<20070611023851.BE85F3C600E4@newmach.olivercomputing.com>
	<684ADB46-0C6E-4671-8E87-C953760FE29A@cs.usfca.edu>
Message-ID: <466DE47D.7050906@shmuelhome.mine.nu>

Wow. My e-mail reports that Ter had 7 responses in 14 minutes.


From parrt at cs.usfca.edu  Mon Jun 11 17:31:20 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 17:31:20 -0700
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
Message-ID: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>

G'day mates!

I'm taking my laptop but I am supposed to be on vacation.  Not sure I  
will be very helpful on the list.  I apologize in advance.

Oh, if you're in Australia and want to meet me in person at the  
lecture, here ya go:

> Sydney Java User Group is Wednesday 20th June,
> on the ground floor of 33 Berry St, North Sydney.
>     Refreshments 6:00-6:30, session starts at 6:30 sharp.

>     Terence will give a brief introduction to ANTLR and the new  
> features in
>     the recently released v3. He'll then demonstrate ANTLR's ease  
> of use in
>     solving common parsing problems, including processing config file
>     formats, designing and parsing DSLs, and processing/translating
>     programming language source files. He'll also demonstrate  
> ANTLRWorks, a
>     sophisticated GUI development environment for writing and  
> debugging
>     ANTLR grammars.

Terence

From rschulz at sonic.net  Mon Jun 11 17:48:48 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 11 Jun 2007 17:48:48 -0700
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
Message-ID: <200706111748.48726.rschulz@sonic.net>

On Monday 11 June 2007 17:31, Terence Parr wrote:
> G'day mates!
>
> I'm taking my laptop but I am supposed to be on vacation.  Not sure I
> will be very helpful on the list.  I apologize in advance.

You're going to vacation in the middle of Australia's winter? They 
always say book tours are tough, but that's a long way to go to shiver.


> ... 


RRS

From jonathan.thomas at ca.com  Mon Jun 11 17:54:47 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 12 Jun 2007 10:54:47 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <200706111748.48726.rschulz@sonic.net>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
	<200706111748.48726.rschulz@sonic.net>
Message-ID: <466DEED7.7080704@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/4a279719/attachment.html 

From yiqing at objectivity.com  Mon Jun 11 18:15:18 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Mon, 11 Jun 2007 18:15:18 -0700
Subject: [antlr-interest] Can a rule reference be labled as well?
Message-ID: <000601c7ac8f$244a0500$222815ac@objy.com>

Hi All,

 

I have a simple question regarding labling an elment in a parser rule. The
Reference Manual says  that we can label any atomic or a rule reference with
an identifier. But I can only lable a token, not a reference rule. 

 

For example,

 

addition_operator_exp

  :  atom_expression (p:PLUS|m:MINUS) atom_expression              => OK

    ;

 

addition_operator_exp

  :  atom_expression  opt:(PLUS|MINUS) atom_expression              => error
C2065: 'opt' : undeclared identifier    

 

addition_operator_exp

  :  atom_expression  opt:operator_symbol atom_expression        => error
C2065: 'opt' : undeclared identifier

    ;

operator_symbol: PLUS|MINUS

 

 

I am using antlr2.7.7 to generate C++ paser.

 

Am I missing anything here. Thanks for your help.

 

Yiqing

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070611/71638e63/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Jun 11 18:19:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 18:19:40 -0700
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <200706111748.48726.rschulz@sonic.net>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
	<200706111748.48726.rschulz@sonic.net>
Message-ID: <3DEC0D45-0547-48E9-B530-CD1EA3F3EF3D@cs.usfca.edu>


On Jun 11, 2007, at 5:48 PM, Randall R Schulz wrote:

> On Monday 11 June 2007 17:31, Terence Parr wrote:
>> G'day mates!
>>
>> I'm taking my laptop but I am supposed to be on vacation.  Not sure I
>> will be very helpful on the list.  I apologize in advance.
>
> You're going to vacation in the middle of Australia's winter? They
> always say book tours are tough, but that's a long way to go to  
> shiver.

I shiver ever day in San Francisco ;)

I'm mainly hanging out with the cool cats at cenqua.com and  
atlassian.com :)

Ter


From parrt at cs.usfca.edu  Mon Jun 11 18:20:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 18:20:08 -0700
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <466DEED7.7080704@ca.com>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
	<200706111748.48726.rschulz@sonic.net> <466DEED7.7080704@ca.com>
Message-ID: <C912668E-AE34-4FC6-BFFB-BE2ED8E7B474@cs.usfca.edu>


On Jun 11, 2007, at 5:54 PM, Jonathan Thomas wrote:

> Natch!  I'm looking out my window and the sun is shining  
> brilliantly on it's way to a beautiful top of 14 degrees today! (Oh  
> let me translate ...57.2 degrees farenheit).

warmer than SF at the moment! ;)

> But then I'm in the Melbourne, which always gets better weather  
> than Sydney ;-).
>

Dang...i picked wrong city :)

Ter


From jonathan.thomas at ca.com  Mon Jun 11 18:25:11 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 12 Jun 2007 11:25:11 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <C912668E-AE34-4FC6-BFFB-BE2ED8E7B474@cs.usfca.edu>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>	<200706111748.48726.rschulz@sonic.net>
	<466DEED7.7080704@ca.com>
	<C912668E-AE34-4FC6-BFFB-BE2ED8E7B474@cs.usfca.edu>
Message-ID: <466DF5F7.5060106@ca.com>

Welllll ... currently that is a very correct statement (wrong city)!

But more designed to provoke some of the inter-city rivalry here ;-) - 
to see if there is actually any other antlr followers from down under!

C'mon, are there any other aussies at all on this list?

JT.

Terence Parr said the following on 12/06/2007 11:20 AM:
>
> On Jun 11, 2007, at 5:54 PM, Jonathan Thomas wrote:
>
>> Natch!  I'm looking out my window and the sun is shining brilliantly 
>> on it's way to a beautiful top of 14 degrees today! (Oh let me 
>> translate ...57.2 degrees farenheit).
>
> warmer than SF at the moment! ;)
>
>> But then I'm in the Melbourne, which always gets better weather than 
>> Sydney ;-).
>>
>
> Dang...i picked wrong city :)
>
> Ter
>
>

From clinton.roy at gmail.com  Mon Jun 11 18:37:31 2007
From: clinton.roy at gmail.com (Clinton Roy)
Date: Tue, 12 Jun 2007 11:37:31 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <466DEED7.7080704@ca.com>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
	<200706111748.48726.rschulz@sonic.net> <466DEED7.7080704@ca.com>
Message-ID: <9c0715e40706111837q7b3ba7a7k651158041bcc6b50@mail.gmail.com>

On 6/12/07, Jonathan Thomas <jonathan.thomas at ca.com> wrote:
>
>  I'm looking out my window and the sun is shining brilliantly on
> it's way to a beautiful top of 14 degrees today!
> ...57.2 degrees farenheit).

That's your minimum though, right? Cause that's our (Brisbane)
minimum, we're heading for low twenties this week. Shorts weather all
year round :)

cheers,
-- 
Clinton Roy
CSIRO - Robotics Platform Engineer
Autonomous Systems Lab

humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
flickr.com/photos/croy/ - Photos

From josephg at cse.unsw.edu.au  Mon Jun 11 20:02:21 2007
From: josephg at cse.unsw.edu.au (Joseph Gentle)
Date: Tue, 12 Jun 2007 13:02:21 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <466DEED7.7080704@ca.com>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>	<200706111748.48726.rschulz@sonic.net>
	<466DEED7.7080704@ca.com>
Message-ID: <466E0CBD.5040601@cse.unsw.edu.au>

... If by 'better' you mean 'it doesn't rain here, ever. all our grass 
died and we aren't allowed to water it'

Sydney has had some chilly weather the last couple weeks but we've also 
had some rain (YAY) so on sunny days like today its looking fabulous!

-J


Jonathan Thomas wrote:
> Natch!  I'm looking out my window and the sun is shining brilliantly 
> on it's way to a beautiful top of 14 degrees today! (Oh let me 
> translate ...57.2 degrees farenheit).
>
> But then I'm in the Melbourne, which always gets better weather than 
> Sydney ;-).
>
> Randall R Schulz said the following on 12/06/2007 10:48 AM:
>> On Monday 11 June 2007 17:31, Terence Parr wrote:
>>   
>>> G'day mates!
>>>
>>> I'm taking my laptop but I am supposed to be on vacation.  Not sure I
>>> will be very helpful on the list.  I apologize in advance.
>>>     
>>
>> You're going to vacation in the middle of Australia's winter? They 
>> always say book tours are tough, but that's a long way to go to shiver.
>>
>>
>>   
>>> ... 
>>>     
>>
>>
>> RRS
>>
>>   


From jonathan.thomas at ca.com  Mon Jun 11 21:50:27 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 12 Jun 2007 14:50:27 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <466E0CBD.5040601@cse.unsw.edu.au>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>	<200706111748.48726.rschulz@sonic.net>
	<466DEED7.7080704@ca.com> <466E0CBD.5040601@cse.unsw.edu.au>
Message-ID: <466E2613.6020307@ca.com>

Hehe well now ... I won't get started on correcting that.

To everybody, sorry for getting the list off topic!

To those jealous of our weather down here, G'day fellow aussie antlr users!

Joseph Gentle said the following on 12/06/2007 1:02 PM:
> ... If by 'better' you mean 'it doesn't rain here, ever. all our grass 
> died and we aren't allowed to water it'
>
> Sydney has had some chilly weather the last couple weeks but we've 
> also had some rain (YAY) so on sunny days like today its looking 
> fabulous!
>
> -J
>
>
> Jonathan Thomas wrote:
>> Natch!  I'm looking out my window and the sun is shining brilliantly 
>> on it's way to a beautiful top of 14 degrees today! (Oh let me 
>> translate ...57.2 degrees farenheit).
>>
>> But then I'm in the Melbourne, which always gets better weather than 
>> Sydney ;-).
>>
>> Randall R Schulz said the following on 12/06/2007 10:48 AM:
>>> On Monday 11 June 2007 17:31, Terence Parr wrote:
>>>  
>>>> G'day mates!
>>>>
>>>> I'm taking my laptop but I am supposed to be on vacation.  Not sure I
>>>> will be very helpful on the list.  I apologize in advance.
>>>>     
>>>
>>> You're going to vacation in the middle of Australia's winter? They 
>>> always say book tours are tough, but that's a long way to go to shiver.
>>>
>>>
>>>  
>>>> ...     
>>>
>>>
>>> RRS
>>>
>>>   
>
>

From fabiomaulo at gmail.com  Mon Jun 11 22:18:38 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Tue, 12 Jun 2007 02:18:38 -0300
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <C18B8A7A-8032-45CA-B3D4-42B984A0EA40@cs.usfca.edu>
References: <466CE757.9090208@gmail.com> <466CEBD5.1060007@gmail.com>
	<C18B8A7A-8032-45CA-B3D4-42B984A0EA40@cs.usfca.edu>
Message-ID: <466E2CAE.4060800@gmail.com>

Terence Parr escribi?:
> Wow!  You killed java itself.  I believe someone else had this problem 
> and found out they had a previous version of antlr in the path...odd, 
> but true.
There isn't a previous version in the path....
I kill the process by my self because it not respond for 5 minutes.
Any way, I think you catch the problem in another mail.

Thanks.
Fabio.


From fabiomaulo at gmail.com  Mon Jun 11 22:22:57 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Tue, 12 Jun 2007 02:22:57 -0300
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <8CA78A66-3625-4A3F-9607-84AD8D240C1F@cs.usfca.edu>
References: <466CE757.9090208@gmail.com>
	<8CA78A66-3625-4A3F-9607-84AD8D240C1F@cs.usfca.edu>
Message-ID: <466E2DB1.8000502@gmail.com>

Terence Parr escribi?:
>
> On Jun 10, 2007, at 11:10 PM, Fabio Maulo wrote:
>
>> I wrote the attached grammar using ANTLRWorks but now I can't work 
>> with it.
>> It is a partial grammar but i can't test any rules, can't debug it 
>> and, some times, i can't use the editor....
>>
>> Any idea ?
>
> Try tacking the issues one by one.  There are a number of errors in 
> the grammar I believe:
>
>
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> warning(205): T.g:167:4: ANTLR could not analyze this decision in rule 
> booleanFactor; often this is because of recursive rule references 
> visible from the left edge of alternatives.  ANTLR will re-analyze the 
> decision with a fixed lookahead of k=1.  Consider using "options 
> {k=1;}" for that decision and possibly adding a syntactic predicate.
> warning(205): T.g:175:3: ANTLR could not analyze this decision in rule 
> booleanPrimary; often this is because of recursive rule references 
> visible from the left edge of alternatives.  ANTLR will re-analyze the 
> decision with a fixed lookahead of k=1.  Consider using "options 
> {k=1;}" for that decision and possibly adding a syntactic predicate.
> warning(205): T.g:175:3: ANTLR could not analyze this decision in rule 
> booleanPrimary; often this is because of recursive rule references 
> visible from the left edge of alternatives.  ANTLR will re-analyze the 
> decision with a fixed lookahead of k=1.  Consider using "options 
> {k=1;}" for that decision and possibly adding a syntactic predicate.
> ...
Probally recursive rules, in some cases, freez ANTLRW.

I don't know if Jean can use the attached grammar to test some of my 
problems using ANTLRW.

Thanks to all.
Bye.
Fabio.


From brendan at cenqua.com  Mon Jun 11 23:23:10 2007
From: brendan at cenqua.com (Brendan Humphreys)
Date: Tue, 12 Jun 2007 16:23:10 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <466DF5F7.5060106@ca.com>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>	<200706111748.48726.rschulz@sonic.net>
	<466DEED7.7080704@ca.com>
	<C912668E-AE34-4FC6-BFFB-BE2ED8E7B474@cs.usfca.edu>
	<466DF5F7.5060106@ca.com>
Message-ID: <2CE80B75-EBDF-4AC6-A16C-3E7289101CD4@cenqua.com>

> But more designed to provoke some of the inter-city rivalry  
> here ;-) - to see if there is actually any other antlr followers  
> from down under!
>
> C'mon, are there any other aussies at all on this list?
>
okay, I'll bite :-D

If you're into rolling giant balls of wool around, go to melbourne

http://www.youtube.com/watch?v=8kR7udDr6B4

http://www.youtube.com/watch?v=_5tSgCS8pvk

otherwise, just hang out in Sydney ;-)

-Brendan

> JT.
>
> Terence Parr said the following on 12/06/2007 11:20 AM:
>>
>> On Jun 11, 2007, at 5:54 PM, Jonathan Thomas wrote:
>>
>>> Natch!  I'm looking out my window and the sun is shining  
>>> brilliantly on it's way to a beautiful top of 14 degrees today!  
>>> (Oh let me translate ...57.2 degrees farenheit).
>>
>> warmer than SF at the moment! ;)
>>
>>> But then I'm in the Melbourne, which always gets better weather  
>>> than Sydney ;-).
>>>
>>
>> Dang...i picked wrong city :)
>>
>> Ter
>>
>>


From laguest at archangeli.co.uk  Tue Jun 12 01:19:37 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Tue, 12 Jun 2007 09:19:37 +0100
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <200706111748.48726.rschulz@sonic.net>
References: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>
	<200706111748.48726.rschulz@sonic.net>
Message-ID: <1181636377.7226.103.camel@rogue>

On Mon, 2007-06-11 at 17:48 -0700, Randall R Schulz wrote:
> On Monday 11 June 2007 17:31, Terence Parr wrote:
> > G'day mates!
> >
> > I'm taking my laptop but I am supposed to be on vacation.  Not sure I
> > will be very helpful on the list.  I apologize in advance.
> 
> You're going to vacation in the middle of Australia's winter? They 
> always say book tours are tough, but that's a long way to go to shiver.

Not exactly cold tho, is it? Try winter in England.

Luke.



From robermann at gmail.com  Tue Jun 12 02:22:47 2007
From: robermann at gmail.com (robermann)
Date: Tue, 12 Jun 2007 11:22:47 +0200
Subject: [antlr-interest] ANTLR v3 - java tree grammar
Message-ID: <414e44f70706120222s5b29f8b5t1daa5d3184968db4@mail.gmail.com>

Hi all
Is it available a java tree grammar for ANTLR v3? Processing the grammar on:
http://www.antlr.org/grammar/1109874324096/java1.5.zip I got the exception:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(100): java.g:158:1: syntax error: antlr: java.g:158:1: unexpected
token: c
lass
error(100): java.g:158:22: syntax error: antlr: java.g:158:22: expecting
SEMI, f
ound 'extends'
error(10):  internal error: java.g : java.g:1508:8: expecting '"', found 'r'
org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)
antlr.TokenBuffer.fill(TokenBuffer.java:69)
antlr.TokenBuffer.LA(TokenBuffer.java:80)
antlr.LLkParser.LA(LLkParser.java:52)
antlr.Parser.consumeUntil(Parser.java:149)
antlr.Parser.recover(Parser.java:312)
org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:406)
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
org.antlr.tool.Grammar.<init>(Grammar.java:456)
org.antlr.Tool.getGrammar(Tool.java:331)
org.antlr.Tool.process(Tool.java:267)
org.antlr.Tool.main(Tool.java:70)

(I'm new to ANTLR and didn't realize v3 was *so* different from the previous
versions :) )

By the way, in the future I'd like to use ANTLR in my project "CodeSounding"
(http://codesounding.org/indexeng.html) to hook sonification actions. Now
I'm using a modified javacc parser, ie a modified java source file generated
from the grammar. The modifications were necessary to insert contextual
checks (for example if I add an instruction after a throw statement the java
compiler laments an unreachable code). I think a declarative way like
rewriting token actions embedded in the tree grammar is a better way.

Best regards
Roberto
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/60c1984e/attachment-0001.html 

From silvester.pozarnik at tracetracker.com  Tue Jun 12 06:52:38 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Tue, 12 Jun 2007 15:52:38 +0200
Subject: [antlr-interest] How to feedback to users the string expected on
	MismatchedTokenException
In-Reply-To: <mailman.1361.1181640170.2496.antlr-interest@antlr.org>
Message-ID: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>

In the java runtime, when the antlr 3.0 encounter a mismatched token
parser error it issue a message like:

	"line 1:7 mismatched input 'update' expecting SELECT"

What this basically means is that parser got an 'update' string while
expecting the SELECT token. 

The problem is that SELECT token is defined as:

	...
	tokens {
  		...
		SELECT = 'select';
		...

And that I should prefer to respond to such erroneous input with the
string that is expected ('select') and not with the token type (SELECT).
As the antlr 3.0 is case sensitive the reported error is not correct.
The problem is that the generated xxx.tokens (SELECT=5) maps the
uppercase value to token type ID and that the expected value ('select')
is buried in the generated Lexer java code as:

	...
	match("select"); if (failed) return ;
	...

and not accessible to the error reporting. The solution may be to enable
additional argument to MismatchedTokenException containing the expected
string and change accordingly the Lexer.class match(String s) method.

If there is some other way to achieve this, could someone enlighten me
please? 

BR
Silvester Pozarnik



From fowler at acm.org  Tue Jun 12 06:59:28 2007
From: fowler at acm.org (Martin Fowler)
Date: Tue, 12 Jun 2007 09:59:28 -0400
Subject: [antlr-interest] IntelliJ plug-in fails to save file
Message-ID: <466EA6C0.4060802@acm.org>

This behavior was driving me nuts before I understood what was going on. 
Essentially I find that the plugin doesn't save the grammar file to the 
disk, even when I do "save all" or "synchronize", unless I switch to 
another tab in IntelliJ. When I tab back into the grammar file it 
usually (haven't done this enough to fully follow it) puts me back in 
the grammar file scrolled to the top of the file (even if I was scrolled 
down before).

Versions:

IntelliJ 6.0.5
AntlrWorks 1.0.2
OS: Ubuntu Feisty
Java: 1.6.0
-- 
Martin Fowler
http://martinfowler.com

From fowler at acm.org  Tue Jun 12 07:10:42 2007
From: fowler at acm.org (Martin Fowler)
Date: Tue, 12 Jun 2007 10:10:42 -0400
Subject: [antlr-interest] import package in AntlrWorks debugger
Message-ID: <466EA962.9020803@acm.org>

I'm having a problem using the AntlrWorks debugger. I have a reference 
to one of my classes in the parser, so I have an import statement in the 
parser header

     @header{
       package parser;
       import copybook.*;
     }

It all works fine with antlr, but the antlr debugger doesn't seem to 
like it.

from the antlrworks console when I hit the debug button:

     09:59:59] import copybook.*;
     [09:59:59] ^
     [09:59:59] /tmp/antlrworks/copybookParser.java:51: cannot find symbol
     [09:59:59] symbol  : class CopyBookLoader
     [09:59:59] location: class parser.copybookParser

The classpaths are all properly setup in intellij - I can run the parser 
  fine in there.

Is there something I need to do to get the debugger to work? I'd really 
like to play with it. An old thread 
<http://www.antlr.org/pipermail/antlr-interest/2006-November/018445.html> 
suggests that antlrworks doesn't deal with packages - is that still the 
case?

Versions:

IntelliJ 6.0.5
AntlrWorks 1.0.2
OS: Ubuntu Feisty
Java: 1.6.0
--
Martin Fowler
http://martinfowler.com

From wiggjd at lsbu.ac.uk  Tue Jun 12 07:16:17 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Tue, 12 Jun 2007 15:16:17 +0100
Subject: [antlr-interest] ANTLR 2.7 Lexer problem
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C5472@CSD-EXBE-VS2.lsbu.ac.uk>

Thanks to those who replied to my lexer problem about coping with
whitespace in the lexer described in Digest vol 31 issue 22 of 6 June.
As suggested parsing specifically for white space solved this problem.
 
However, I am still getting an ambiguity warning between ( __asm |
_asm | asm ) and ID. I don't want to accept this because it looks as
though something could be wrong (although it does in fact work).
 
I have tried the following options but they don't work (Cut down to
minimum for demonstration).
 
AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
  ("__asm"|"_asm"|"asm") //etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
  ("__asm"|"_asm"|"asm") // etc.
 ;

Antlr accepts these statements but I still get lexical nondeterminsim
between rules AsmStatements and ID.
 
I can't find any similar example in the ANTLR2 documentation and I
would be grateful if someone could let me know what I doing wrong.
 
Thanks.
 
David Wigg
 



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/3fc64187/attachment.html 

From soth1985 at yahoo.com  Tue Jun 12 07:29:24 2007
From: soth1985 at yahoo.com (v r)
Date: Tue, 12 Jun 2007 18:29:24 +0400 (MSD)
Subject: [antlr-interest] Making c target work with c++
Message-ID: <131178.38743.qm@web36906.mail.mud.yahoo.com>

When I compile an example from \examples-v3\C\C as c code everything works fine , but if i ish to compile it as c++(i just rename main.c to main.cpp ) i get errors
  Error 4 error LNK2019: unresolved external symbol "struct CParser_Ctx_struct * __cdecl CParserNew(struct ANTLR3_COMMON_TOKEN_STREAM_struct *)" (?CParserNew@@YAPAUCParser_Ctx_struct@@PAUANTLR3_COMMON_TOKEN_STREAM_struct@@@Z) referenced in function _main main.obj
Error 5 error LNK2019: unresolved external symbol "struct ANTLR3_COMMON_TOKEN_STREAM_struct * __cdecl antlr3CommonTokenStreamSourceNew(unsigned int,struct ANTLR3_TOKEN_SOURCE_struct *)" (?antlr3CommonTokenStreamSourceNew@@YAPAUANTLR3_COMMON_TOKEN_STREAM_struct@@IPAUANTLR3_TOKEN_SOURCE_struct@@@Z) referenced in function _main main.obj
Error 6 error LNK2019: unresolved external symbol "struct CLexer_Ctx_struct * __cdecl CLexerNew(struct ANTLR3_INPUT_STREAM_struct *)" (?CLexerNew@@YAPAUCLexer_Ctx_struct@@PAUANTLR3_INPUT_STREAM_struct@@@Z) referenced in function _main main.obj
Error 7 error LNK2019: unresolved external symbol "struct ANTLR3_INPUT_STREAM_struct * __cdecl antlr3AsciiFileStreamNew(unsigned char *)" (?antlr3AsciiFileStreamNew@@YAPAUANTLR3_INPUT_STREAM_struct@@PAE at Z) referenced in function _main main.obj
Error 8 fatal error LNK1120: 4 unresolved externals C:\antlr-3.0\examples-v3\examples-v3\C\Debug\C.exe 1
  so i wonder how to make all this work.

       
---------------------------------

?? ??? ? Yahoo!? ????????? ??????????? ? ??????????. Yahoo! ?????!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/32d0c017/attachment.html 

From ma_laver at ciise.concordia.ca  Tue Jun 12 07:30:10 2007
From: ma_laver at ciise.concordia.ca (=?UTF-8?B?TWFyYy1BbmRyw6kgTGF2ZXJkacOocmU=?=)
Date: Tue, 12 Jun 2007 10:30:10 -0400
Subject: [antlr-interest] Dealing with issues in non-greedy (.)*  rules
In-Reply-To: <200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>
References: <46436DB3.4040806@ciise.concordia.ca>
	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>
	<4648768C.1010405@ciise.concordia.ca>
	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>
Message-ID: <466EADF2.7060304@ciise.concordia.ca>

Hmm... I had to put this issue aside for a certain time, but now I'm 
back on it.

I still have no idea what to do to make this work! If (.)+ won't do it, 
what will? I can't believe that Antlr isn't dealing with a random blob.

BTW, I'm generating code with AntlrWorks... is there any bug in its code 
generation vs the command-line utility?

Thanks in advance for the help!

Gavin Lambert wrote:
> At 02:47 15/05/2007, Marc-Andr?? Laverdi??re wrote:
>  >line 21:30 no viable alternative at character '['
>  >line 21:32 no viable alternative at character ']'
>  >line 21:77 no viable alternative at character ';'
> [...]
>  >Which means that certain characters are not accepted. Acutally,
>  >when I print the resulting token, these are missing!
>  >
>  >I don't even have a lexer rule that mentions ';'!
>  >What am I doing wrong? I'm working with k=2. Should I crank it up
>  >for that rule?
> 
> Actually, that's probably exactly what you're doing wrong :)
> 
> The parser cannot and does not deal directly with characters.  Any 
> characters you want to be able to recognise in the stream must be 
> converted into tokens, whether through lexer rules or a tokens block, 
> and whether individually or grouped.
> 
> (There is a shortcut syntax that makes it look like the parser can deal 
> with characters, but in reality that just results in internally 
> generating tokens, which you have less control over.)
> 

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4


From patrick at patmas.net  Tue Jun 12 07:56:30 2007
From: patrick at patmas.net (Patrick Masselink)
Date: Tue, 12 Jun 2007 16:56:30 +0200
Subject: [antlr-interest] import package in AntlrWorks debugger
In-Reply-To: <466EA962.9020803@acm.org>
References: <466EA962.9020803@acm.org>
Message-ID: <200706121656.30733.patrick@patmas.net>

You can change the classpath for the ANTLRWorks debugger at File > Preferences 
> Compiler. I had the need to add my own class reference too, so I initially 
tried package and import lines in the header blocks but I couldn't get this 
to work. I ended up just adding the dir in which the class resides to the 
classpath in ANTLRWorks. This worked as expected.

Regards, Patrick Masselink

On Tuesday 12 June 2007 16:10:42 Martin Fowler wrote:
> I'm having a problem using the AntlrWorks debugger. I have a reference
> to one of my classes in the parser, so I have an import statement in the
> parser header
>
>      @header{
>        package parser;
>        import copybook.*;
>      }
>
> It all works fine with antlr, but the antlr debugger doesn't seem to
> like it.
>
> from the antlrworks console when I hit the debug button:
>
>      09:59:59] import copybook.*;
>      [09:59:59] ^
>      [09:59:59] /tmp/antlrworks/copybookParser.java:51: cannot find symbol
>      [09:59:59] symbol  : class CopyBookLoader
>      [09:59:59] location: class parser.copybookParser
>
> The classpaths are all properly setup in intellij - I can run the parser
>   fine in there.
>
> Is there something I need to do to get the debugger to work? I'd really
> like to play with it. An old thread
> <http://www.antlr.org/pipermail/antlr-interest/2006-November/018445.ht
>ml> suggests that antlrworks doesn't deal with packages - is that still the
> case?
>
> Versions:
>
> IntelliJ 6.0.5
> AntlrWorks 1.0.2
> OS: Ubuntu Feisty
> Java: 1.6.0



From lgcraymer at yahoo.com  Tue Jun 12 08:10:48 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 12 Jun 2007 08:10:48 -0700 (PDT)
Subject: [antlr-interest] Making c target work with c++
In-Reply-To: <131178.38743.qm@web36906.mail.mud.yahoo.com>
Message-ID: <224344.9343.qm@web55915.mail.re3.yahoo.com>

This is a language issue; C++ mangles names unless
they are declared as being "C" items.

Change your prototype to 
extern "C" CParser_Ctx_struct *CParserNew(struct
ANTLR3_COMMON_TOKEN_STREAM_struct *);

and make similar changes as required.

--Loring

--- v r <soth1985 at yahoo.com> wrote:

> When I compile an example from \examples-v3\C\C as c
> code everything works fine , but if i ish to compile
> it as c++(i just rename main.c to main.cpp ) i get
> errors
>   Error 4 error LNK2019: unresolved external symbol
> "struct CParser_Ctx_struct * __cdecl
> CParserNew(struct ANTLR3_COMMON_TOKEN_STREAM_struct
> *)"
>
(?CParserNew@@YAPAUCParser_Ctx_struct@@PAUANTLR3_COMMON_TOKEN_STREAM_struct@@@Z)
> referenced in function _main main.obj
> Error 5 error LNK2019: unresolved external symbol
> "struct ANTLR3_COMMON_TOKEN_STREAM_struct * __cdecl
> antlr3CommonTokenStreamSourceNew(unsigned int,struct
> ANTLR3_TOKEN_SOURCE_struct *)"
>
(?antlr3CommonTokenStreamSourceNew@@YAPAUANTLR3_COMMON_TOKEN_STREAM_struct@@IPAUANTLR3_TOKEN_SOURCE_struct@@@Z)
> referenced in function _main main.obj
> Error 6 error LNK2019: unresolved external symbol
> "struct CLexer_Ctx_struct * __cdecl CLexerNew(struct
> ANTLR3_INPUT_STREAM_struct *)"
>
(?CLexerNew@@YAPAUCLexer_Ctx_struct@@PAUANTLR3_INPUT_STREAM_struct@@@Z)
> referenced in function _main main.obj
> Error 7 error LNK2019: unresolved external symbol
> "struct ANTLR3_INPUT_STREAM_struct * __cdecl
> antlr3AsciiFileStreamNew(unsigned char *)"
>
(?antlr3AsciiFileStreamNew@@YAPAUANTLR3_INPUT_STREAM_struct@@PAE at Z)
> referenced in function _main main.obj
> Error 8 fatal error LNK1120: 4 unresolved externals
> C:\antlr-3.0\examples-v3\examples-v3\C\Debug\C.exe 1
>   so i wonder how to make all this work.
> 
>        
> ---------------------------------
> 
> ?? ??? ? Yahoo!? ????????? ??????????? ? ??????????.
> Yahoo! ?????!



       
____________________________________________________________________________________
Building a website is a piece of cake. Yahoo! Small Business gives you all the tools to get online.
http://smallbusiness.yahoo.com/webhosting 

From ma_laver at ciise.concordia.ca  Tue Jun 12 08:12:50 2007
From: ma_laver at ciise.concordia.ca (=?UTF-8?B?TWFyYy1BbmRyw6kgTGF2ZXJkacOocmU=?=)
Date: Tue, 12 Jun 2007 11:12:50 -0400
Subject: [antlr-interest] Using SwitchingCommonTokenStream
Message-ID: <466EB7F2.60207@ciise.concordia.ca>

Hello,

I found on the wiki the code for the SwitchingCommonTokenStream class, 
available at 
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1734, which would 
be interesting for me. I have code blobs for which I'd like to keep the 
whitespace.

I just don't know how to use it. There is a hint (channelOverrideMap), 
but I'm not sure how to make use of that and in which context.

Could someone point me to some code where that is used? Thanks!

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4


From parrt at cs.usfca.edu  Tue Jun 12 09:28:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 09:28:16 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <466EA6C0.4060802@acm.org>
References: <466EA6C0.4060802@acm.org>
Message-ID: <76BF6232-91BA-474F-B738-B179F0370A11@cs.usfca.edu>

Hi Martin,

Sorry about that.  Yeah, I understand from Jean that the Intellij  
plug in architecture is pretty opaque and he was have a hell of a  
time getting it to send all events he needs.  There is essentially no  
doc (compared to eclipse, but then I'd have to use eclipse) ;)

Jean might be able to comment more directly.

Terence

On Jun 12, 2007, at 6:59 AM, Martin Fowler wrote:

> This behavior was driving me nuts before I understood what was  
> going on. Essentially I find that the plugin doesn't save the  
> grammar file to the disk, even when I do "save all" or  
> "synchronize", unless I switch to another tab in IntelliJ. When I  
> tab back into the grammar file it usually (haven't done this enough  
> to fully follow it) puts me back in the grammar file scrolled to  
> the top of the file (even if I was scrolled down before).
>
> Versions:
>
> IntelliJ 6.0.5
> AntlrWorks 1.0.2
> OS: Ubuntu Feisty
> Java: 1.6.0
> -- 
> Martin Fowler
> http://martinfowler.com


From parrt at cs.usfca.edu  Tue Jun 12 09:31:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 09:31:12 -0700
Subject: [antlr-interest] Dealing with issues in non-greedy (.)*  rules
In-Reply-To: <466EADF2.7060304@ciise.concordia.ca>
References: <46436DB3.4040806@ciise.concordia.ca>
	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>
	<4648768C.1010405@ciise.concordia.ca>
	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>
	<466EADF2.7060304@ciise.concordia.ca>
Message-ID: <F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>


On Jun 12, 2007, at 7:30 AM, Marc-Andr? Laverdi?re wrote:

> Hmm... I had to put this issue aside for a certain time, but now  
> I'm back on it.
>
> I still have no idea what to do to make this work! If (.)+ won't do  
> it, what will? I can't believe that Antlr isn't dealing with a  
> random blob.

.+ works fine in the lexer and probably parser.  Consumes until it  
sees what follows.

>
> BTW, I'm generating code with AntlrWorks... is there any bug in its  
> code generation vs the command-line utility?

nope same.

Ter

From mailinglist.taras.tielkes at gmail.com  Tue Jun 12 10:12:36 2007
From: mailinglist.taras.tielkes at gmail.com (Taras Tielkes)
Date: Tue, 12 Jun 2007 19:12:36 +0200
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <76BF6232-91BA-474F-B738-B179F0370A11@cs.usfca.edu>
References: <466EA6C0.4060802@acm.org>
	<76BF6232-91BA-474F-B738-B179F0370A11@cs.usfca.edu>
Message-ID: <466ED404.100@gmail.com>

Terence Parr wrote:
> Hi Martin,
> 
> Sorry about that.  Yeah, I understand from Jean that the Intellij plug 
> in architecture is pretty opaque and he was have a hell of a time 
> getting it to send all events he needs.  There is essentially no doc 
> (compared to eclipse, but then I'd have to use eclipse) ;)
> 
> Jean might be able to comment more directly.

In addition the plugin does not seem to integrate into the environment 
in any meaningful way: it's just feels like a custom Swing blob embedded 
into another program, and having its own fonts, text styles, keyboard 
shortcuts etc.

If you want to provide semantic integration, start here:
http://www.jetbrains.com/idea/plugins/developing_custom_language_plugins.html

So there's plenty of doc, but you're not using any of the provided 
interfaces :)

There are multiple custom language implementations available, most with 
full source.

Not to whine, I love both IDEA and AntlrWorks, but the current 
"integration" never made sense to me..

-tt

From stuart.dootson at gmail.com  Tue Jun 12 09:57:41 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Tue, 12 Jun 2007 17:57:41 +0100
Subject: [antlr-interest] Making c target work with c++
In-Reply-To: <224344.9343.qm@web55915.mail.re3.yahoo.com>
References: <131178.38743.qm@web36906.mail.mud.yahoo.com>
	<224344.9343.qm@web55915.mail.re3.yahoo.com>
Message-ID: <8b56cad40706120957x57b42db9v5fdfb365b6c1c15@mail.gmail.com>

On 12/06/07, Loring Craymer <lgcraymer at yahoo.com> wrote:
> This is a language issue; C++ mangles names unless
> they are declared as being "C" items.
>
> Change your prototype to
> extern "C" CParser_Ctx_struct *CParserNew(struct
> ANTLR3_COMMON_TOKEN_STREAM_struct *);
>
> and make similar changes as required.
>
> --Loring

Alternatively, in your main.cpp, use this:

extern "C" {
#include <antlr-headers>
#include "your-parser-and-lexer-headers"
}

That way you won't need to edit generated code or Jim's C runtime for Antlr.

Jim - any chance of the C runtime and code generator adding extern "C"
to function declarations conditional on presence of the '__cplusplus'
macro?

Stuart Dootson

From jbb at acm.org  Tue Jun 12 12:07:10 2007
From: jbb at acm.org (John B. Brodie)
Date: Tue, 12 Jun 2007 15:07:10 -0400
Subject: [antlr-interest] How to feedback to users the string expected
	on	MismatchedTokenException
In-Reply-To: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>
	(message from Silvester Pozarnik on Tue, 12 Jun 2007 15:52:38 +0200)
References: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>
Message-ID: <E1HyBhu-0001Vb-00@gecko>

>In the java runtime, when the antlr 3.0 encounter a mismatched token
>parser error it issue a message like:
>
>	"line 1:7 mismatched input 'update' expecting SELECT"
>
>What this basically means is that parser got an 'update' string while
>expecting the SELECT token. 
>
>The problem is that SELECT token is defined as:
>...snipped...
>And that I should prefer to respond to such erroneous input with the
>string that is expected ('select') and not with the token type (SELECT).
>...snipped...

Does the tokenNames array published by the generated parser help you
to build your own error reporting method to solve this?


From pink at odahoda.de  Tue Jun 12 13:27:15 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 12 Jun 2007 22:27:15 +0200
Subject: [antlr-interest] How to feedback to users the string expected
	on	MismatchedTokenException
References: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>
	<E1HyBhu-0001Vb-00@gecko>
Message-ID: <f4mvj3$2t6$1@sea.gmane.org>

John B. Brodie wrote:

>>In the java runtime, when the antlr 3.0 encounter a mismatched token
>>parser error it issue a message like:
>>
>>"line 1:7 mismatched input 'update' expecting SELECT"
>>
>>What this basically means is that parser got an 'update' string while
>>expecting the SELECT token.
>>
>>The problem is that SELECT token is defined as:
>>...snipped...
>>And that I should prefer to respond to such erroneous input with the
>>string that is expected ('select') and not with the token type (SELECT).
>>...snipped...
> 
> Does the tokenNames array published by the generated parser help you
> to build your own error reporting method to solve this?

That's where the default error handler is getting the 'SELECT' from ;)

I'd say the OP should override the getErrorMessage() method and use an own
mapping from token types to descriptive names instead of tokenNames.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From antlr at mirality.co.nz  Tue Jun 12 13:37:02 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 13 Jun 2007 08:37:02 +1200
Subject: [antlr-interest] Dealing with issues in non-greedy (.)* rules
In-Reply-To: <F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>
References: <46436DB3.4040806@ciise.concordia.ca>
	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>
	<4648768C.1010405@ciise.concordia.ca>
	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>
	<466EADF2.7060304@ciise.concordia.ca>
	<F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>
Message-ID: <20070612203719.2C26511EACE@www.antlr.org>

At 04:31 13/06/2007, Terence Parr wrote:
 >.+ works fine in the lexer and probably parser.  Consumes
 >until it sees what follows.

Yeah, but there is a difference.  In the lexer it consumes 
characters, whereas in the parser it consumes tokens.  So when 
trying to match characters that aren't otherwise assigned a token 
you need to use it in the final lexer rule.


From jbb at acm.org  Tue Jun 12 13:59:08 2007
From: jbb at acm.org (John B. Brodie)
Date: Tue, 12 Jun 2007 16:59:08 -0400
Subject: [antlr-interest] How to feedback to users the string
	expected	on	MismatchedTokenException
In-Reply-To: <f4mvj3$2t6$1@sea.gmane.org> (message from Benjamin Niemann on
	Tue, 12 Jun 2007 22:27:15 +0200)
References: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>
	<E1HyBhu-0001Vb-00@gecko> <f4mvj3$2t6$1@sea.gmane.org>
Message-ID: <E1HyDSG-0002UM-00@gecko>

Benjamin Niemann wrote:

>John B. Brodie wrote:
>
>>>In the java runtime, when the antlr 3.0 encounter a mismatched token
>>>parser error it issue a message like:
>>>
>>>"line 1:7 mismatched input 'update' expecting SELECT"
>>>
>>>What this basically means is that parser got an 'update' string while
>>>expecting the SELECT token.
>>>
>>>The problem is that SELECT token is defined as:
>>>...snipped...
>>>And that I should prefer to respond to such erroneous input with the
>>>string that is expected ('select') and not with the token type (SELECT).
>>>...snipped...
>> 
>> Does the tokenNames array published by the generated parser help you
>> to build your own error reporting method to solve this?
>
>That's where the default error handler is getting the 'SELECT' from ;)

my suggestion to the OP to use tokenNames was completely bogus.
sorry for the noise...

From open.zone at virgin.net  Tue Jun 12 14:00:59 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 12 Jun 2007 22:00:59 +0100
Subject: [antlr-interest] ANTLR 2.7 Lexer problem
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5472@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <002201c7ad34$ca5dfb90$c704a8c0@hercules>

David,
 
Have you tried declaring your literals (i.e. "__asm", "_asm"...etc) using
the tokens {...} construct in ANTLR 2.x. You would then need to set the
testLiterals option to 'true' for your ID rule. This ensures that all match
ID strings are checked against your literals.
 
Many of the 2.x examples (e.g. the Java parser which is also available in
C++) can serve as an example of this idiom. They declare keywords in the
tokens {..} section and set the testLiterals option for their
ID/IDENT/IDENTIFIER rule.
 
Micheal
 
PS    Any plans to port your C++ grammar to v3?. The C target is maturing
and is seems very performant.

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wigg, J D
Sent: 12 June 2007 15:16
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 2.7 Lexer problem


Thanks to those who replied to my lexer problem about coping with whitespace
in the lexer described in Digest vol 31 issue 22 of 6 June. As suggested
parsing specifically for white space solved this problem.
 
However, I am still getting an ambiguity warning between ( __asm | _asm |
asm ) and ID. I don't want to accept this because it looks as though
something could be wrong (although it does in fact work).
 
I have tried the following options but they don't work (Cut down to minimum
for demonstration).
 
AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
  ("__asm"|"_asm"|"asm") //etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
  ("__asm"|"_asm"|"asm") // etc.
 ;

Antlr accepts these statements but I still get lexical nondeterminsim
between rules AsmStatements and ID.
 
I can't find any similar example in the ANTLR2 documentation and I would be
grateful if someone could let me know what I doing wrong.
 
Thanks.
 
David Wigg
 



--
Copyright in this email and in any attachments belongs to London South Bank
University. This email, and its attachments if any, may be confidential or
legally privileged and is intended to be seen only by the person to whom it
is addressed. If you are not the intended recipient, please note the
following: (1) You should take immediate action to notify the sender and
delete the original email and all copies from your computer systems; (2) You
should not read copy or use the contents of the email nor disclose it or its
existence to anyone else.

The views expressed herein are those of the author(s) and should not be
taken as those of London South Bank University, unless this is specifically
stated.

London South Bank University is a company limited by guarantee registered in
England and Wales. The following details apply to London South Bank
University: Company number - 00986761; Registered office and trading address
- 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address -
lsbuinfo at lsbu.ac.uk

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/e240dc15/attachment.html 

From open.zone at virgin.net  Tue Jun 12 14:26:54 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 12 Jun 2007 22:26:54 +0100
Subject: [antlr-interest] ANTLR 2.7 Lexer problem
In-Reply-To: <002201c7ad34$ca5dfb90$c704a8c0@hercules>
Message-ID: <002b01c7ad38$671483c0$c704a8c0@hercules>

Ooops!. Scratch my comments about the 2.x examples using that idiom. I'm
apprently remembering something else. The csharp_v1 example (only available
for C# in v2.x) has a CSharpLexer.g file that you could look at instead.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
Sent: 12 June 2007 22:01
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 2.7 Lexer problem


David,
 
Have you tried declaring your literals (i.e. "__asm", "_asm"...etc) using
the tokens {...} construct in ANTLR 2.x. You would then need to set the
testLiterals option to 'true' for your ID rule. This ensures that all match
ID strings are checked against your literals.
 
Many of the 2.x examples (e.g. the Java parser which is also available in
C++) can serve as an example of this idiom. They declare keywords in the
tokens {..} section and set the testLiterals option for their
ID/IDENT/IDENTIFIER rule.
 
Micheal
 
PS    Any plans to port your C++ grammar to v3?. The C target is maturing
and is seems very performant.

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wigg, J D
Sent: 12 June 2007 15:16
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 2.7 Lexer problem


Thanks to those who replied to my lexer problem about coping with whitespace
in the lexer described in Digest vol 31 issue 22 of 6 June. As suggested
parsing specifically for white space solved this problem.
 
However, I am still getting an ambiguity warning between ( __asm | _asm |
asm ) and ID. I don't want to accept this because it looks as though
something could be wrong (although it does in fact work).
 
I have tried the following options but they don't work (Cut down to minimum
for demonstration).
 
AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
  ("__asm"|"_asm"|"asm") //etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
  ("__asm"|"_asm"|"asm") // etc.
 ;

Antlr accepts these statements but I still get lexical nondeterminsim
between rules AsmStatements and ID.
 
I can't find any similar example in the ANTLR2 documentation and I would be
grateful if someone could let me know what I doing wrong.
 
Thanks.
 
David Wigg
 



--
Copyright in this email and in any attachments belongs to London South Bank
University. This email, and its attachments if any, may be confidential or
legally privileged and is intended to be seen only by the person to whom it
is addressed. If you are not the intended recipient, please note the
following: (1) You should take immediate action to notify the sender and
delete the original email and all copies from your computer systems; (2) You
should not read copy or use the contents of the email nor disclose it or its
existence to anyone else.

The views expressed herein are those of the author(s) and should not be
taken as those of London South Bank University, unless this is specifically
stated.

London South Bank University is a company limited by guarantee registered in
England and Wales. The following details apply to London South Bank
University: Company number - 00986761; Registered office and trading address
- 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address -
lsbuinfo at lsbu.ac.uk

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070612/1251ce25/attachment-0001.html 

From amclennan40 at hotmail.com  Tue Jun 12 16:29:26 2007
From: amclennan40 at hotmail.com (Alistair McLennan)
Date: Wed, 13 Jun 2007 09:29:26 +1000
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <3DEC0D45-0547-48E9-B530-CD1EA3F3EF3D@cs.usfca.edu>
Message-ID: <BAY130-F2857F6BBA4DEB9CBB96DB4A2190@phx.gbl>

Hi Terence,

Are you going to be bringing copies of your book? Dymocks (one of the main 
bookstores downunder) reckon they won't be in stock until August! They must 
have put them on the slowest boat from SF.

Al McLennan

_________________________________________________________________
Advertisement: Your Future Starts Here. Dream it? Then be it! Find it at 
www.seek.com.au 
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2F%3Ftracking%3Dsk%3Ahet%3Ask%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=june07_endtext_future&_m=EXT


From matthew.j.diehl at intel.com  Tue Jun 12 16:33:51 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 12 Jun 2007 16:33:51 -0700
Subject: [antlr-interest]  [v3] stringtemplate rewrite with '?'
In-Reply-To: <8B3E21C9-4E60-440C-8FA4-665D6856D020@efftinge.de>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2020D0964@orsmsx417.amr.corp.intel.com>

I am clueless on what to do, and have been struggling with this for a
while.  If I have produced an AST like:

myTree
  : ^(SIGNAL identifier_list expression?)

How can I output the 'expression' part without getting a null pointer
when it doesn't exist?  For example:
myTree
  : ^(SIGNAL identifier expression?)
    -> vector(id={$identifier}, expr={$expression})

This produces the following JAVA code (or similar code):
  retval.st = templateLib.getInstanceOf("vector",
     new STAttrMap().put("id", input.getTokenStream().toString(
        input.getTreeAdaptor().getTokenStartIndex(identifier.start),
        input.getTreeAdaptor().getTokenStopIndex(identifier.start))
     ).put("expr", input.getTokenStream().toString(
        input.getTreeAdaptor().getTokenStartIndex(expression.start),
        input.getTreeAdaptor().getTokenStopIndex(expression.start))));
But, if expression is null it throws an error.

The only way around this that I can see is to do two different templates
(one if there is an expression, and one without), which is a pain,
because many parts of the grammar have 3-4 '?' in them (8-16 different
combinations)

That or I guess I could try and trick it into thinking it's a list maybe
(haven't tried):
myTree
  : ^(SIGNAL identifier exp1+=expression?)
    -> vector(id={$identifier}, expr={$exp1})

Thanks for any advice,

Matt

From matthew.j.diehl at intel.com  Tue Jun 12 17:33:06 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 12 Jun 2007 17:33:06 -0700
Subject: [antlr-interest] [v3] stringtemplate rewrite with '?'
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2020D0964@orsmsx417.amr.corp.intel.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2020D0A21@orsmsx417.amr.corp.intel.com>

Okay, I think I found another way around it.  First, I tried changing
the template:
myTree
  : ^(SIGNAL identifier expression?)
    -> template(id={$identifier.text}, expr={$expression.st})
          "<id><if(expr)><expr><endif>

But that still threw a null pointer whether or not I was sending
$expression.st or $expression.text

So I changed it to:
myTree
  : ^(SIGNAL identifier expr1=expression?)
    -> template(id={$identifier.text},
expr={(expr1!=null?$expr1.st:"")})
          "<id><if(expr)><expr><endif>

And now it works fine.

Thanks for your time and consideration,

Matt


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, Matthew J
Sent: Tuesday, June 12, 2007 4:34 PM
To: ANTR Interest
Subject: [antlr-interest] [v3] stringtemplate rewrite with '?'

I am clueless on what to do, and have been struggling with this for a
while.  If I have produced an AST like:

myTree
  : ^(SIGNAL identifier_list expression?)

How can I output the 'expression' part without getting a null pointer
when it doesn't exist?  For example:
myTree
  : ^(SIGNAL identifier expression?)
    -> vector(id={$identifier}, expr={$expression})

This produces the following JAVA code (or similar code):
  retval.st = templateLib.getInstanceOf("vector",
     new STAttrMap().put("id", input.getTokenStream().toString(
        input.getTreeAdaptor().getTokenStartIndex(identifier.start),
        input.getTreeAdaptor().getTokenStopIndex(identifier.start))
     ).put("expr", input.getTokenStream().toString(
        input.getTreeAdaptor().getTokenStartIndex(expression.start),
        input.getTreeAdaptor().getTokenStopIndex(expression.start))));
But, if expression is null it throws an error.

The only way around this that I can see is to do two different templates
(one if there is an expression, and one without), which is a pain,
because many parts of the grammar have 3-4 '?' in them (8-16 different
combinations)

That or I guess I could try and trick it into thinking it's a list maybe
(haven't tried):
myTree
  : ^(SIGNAL identifier exp1+=expression?)
    -> vector(id={$identifier}, expr={$exp1})

Thanks for any advice,

Matt

From parrt at cs.usfca.edu  Tue Jun 12 18:15:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 18:15:35 -0700
Subject: [antlr-interest] In Australia for 2 weeks starting 13 June
In-Reply-To: <BAY130-F2857F6BBA4DEB9CBB96DB4A2190@phx.gbl>
References: <BAY130-F2857F6BBA4DEB9CBB96DB4A2190@phx.gbl>
Message-ID: <554D928D-F49A-4DC2-A4EB-A98E18EE7BA5@cs.usfca.edu>


On Jun 12, 2007, at 4:29 PM, Alistair McLennan wrote:

> Hi Terence,
>
> Are you going to be bringing copies of your book? Dymocks (one of  
> the main bookstores downunder) reckon they won't be in stock until  
> August! They must have put them on the slowest boat from SF.

damn!  Well, i'd buy from pragprog.com.  ships right away!

I'm out of copies myself :(

Ter


From jonathan.thomas at ca.com  Tue Jun 12 21:45:19 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 13 Jun 2007 14:45:19 +1000
Subject: [antlr-interest] How to feedback to users the string	expected
 on	MismatchedTokenException
In-Reply-To: <E1HyDSG-0002UM-00@gecko>
References: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>	<E1HyBhu-0001Vb-00@gecko>
	<f4mvj3$2t6$1@sea.gmane.org> <E1HyDSG-0002UM-00@gecko>
Message-ID: <466F765F.2060800@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/0d56fae8/attachment.html 

From antlr-list at arizona-software.ch  Tue Jun 12 23:41:35 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 12 Jun 2007 23:41:35 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <466EA6C0.4060802@acm.org>
References: <466EA6C0.4060802@acm.org>
Message-ID: <0D3D20EC-8FA6-4374-A23E-F954785D0FEE@arizona-software.ch>

That's right, the plugin is not completely integrated into IntelliJ.  
As Terence said, I'm having a hard time finding the necessary  
documentation (or even source code) to hookup ANTLRWorks into  
IntelliJ. I'm working on that and  will try to find a workaround as  
soon as possible.

Regards,

Jean

On Jun 12, 2007, at 6:59 AM, Martin Fowler wrote:

> This behavior was driving me nuts before I understood what was  
> going on. Essentially I find that the plugin doesn't save the  
> grammar file to the disk, even when I do "save all" or  
> "synchronize", unless I switch to another tab in IntelliJ. When I  
> tab back into the grammar file it usually (haven't done this enough  
> to fully follow it) puts me back in the grammar file scrolled to  
> the top of the file (even if I was scrolled down before).
>
> Versions:
>
> IntelliJ 6.0.5
> AntlrWorks 1.0.2
> OS: Ubuntu Feisty
> Java: 1.6.0
> -- 
> Martin Fowler
> http://martinfowler.com


From antlr-list at arizona-software.ch  Tue Jun 12 23:43:26 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 12 Jun 2007 23:43:26 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <466ED404.100@gmail.com>
References: <466EA6C0.4060802@acm.org>
	<76BF6232-91BA-474F-B738-B179F0370A11@cs.usfca.edu>
	<466ED404.100@gmail.com>
Message-ID: <528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>

There is always a trade off between a complete and smooth integration  
into IntelliJ and retaining as much work as possible: using the  
custom language would require much work that has been already spent  
in ANTLRWorks itself. But I would love to integrate ANTLRWorks more  
into IntelliJ.... if anybody knows how to interact with IntelliJ,  
please let me know.

Regards,

Jean

On Jun 12, 2007, at 10:12 AM, Taras Tielkes wrote:

> Terence Parr wrote:
>> Hi Martin,
>> Sorry about that.  Yeah, I understand from Jean that the Intellij  
>> plug in architecture is pretty opaque and he was have a hell of a  
>> time getting it to send all events he needs.  There is essentially  
>> no doc (compared to eclipse, but then I'd have to use eclipse) ;)
>> Jean might be able to comment more directly.
>
> In addition the plugin does not seem to integrate into the  
> environment in any meaningful way: it's just feels like a custom  
> Swing blob embedded into another program, and having its own fonts,  
> text styles, keyboard shortcuts etc.
>
> If you want to provide semantic integration, start here:
> http://www.jetbrains.com/idea/plugins/ 
> developing_custom_language_plugins.html
>
> So there's plenty of doc, but you're not using any of the provided  
> interfaces :)
>
> There are multiple custom language implementations available, most  
> with full source.
>
> Not to whine, I love both IDEA and AntlrWorks, but the current  
> "integration" never made sense to me..
>
> -tt


From antlr-list at arizona-software.ch  Tue Jun 12 23:48:00 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 12 Jun 2007 23:48:00 -0700
Subject: [antlr-interest] import package in AntlrWorks debugger
In-Reply-To: <466EA962.9020803@acm.org>
References: <466EA962.9020803@acm.org>
Message-ID: <6829522E-B84F-475A-B93E-42B6AA193D78@arizona-software.ch>

ANTLRWorks now handles the package properly. However, it is probably  
a classpath issue as Patrick Masselink mentioned: can you try and  
tell me if it works by specifying the classpath in the preferences?  
Were is located the copybook package? I guess at the same level as  
the package "parser"? Also, are you using ANTLRWorks as a plugin in  
IntelliJ? If so, does it work if you use the standalone version of  
ANTLRWorks?

Sorry for all these questions, I'm trying to figure out exactly  
what's going on.

Regards,

Jean

On Jun 12, 2007, at 7:10 AM, Martin Fowler wrote:

> I'm having a problem using the AntlrWorks debugger. I have a  
> reference to one of my classes in the parser, so I have an import  
> statement in the parser header
>
>     @header{
>       package parser;
>       import copybook.*;
>     }
>
> It all works fine with antlr, but the antlr debugger doesn't seem  
> to like it.
>
> from the antlrworks console when I hit the debug button:
>
>     09:59:59] import copybook.*;
>     [09:59:59] ^
>     [09:59:59] /tmp/antlrworks/copybookParser.java:51: cannot find  
> symbol
>     [09:59:59] symbol  : class CopyBookLoader
>     [09:59:59] location: class parser.copybookParser
>
> The classpaths are all properly setup in intellij - I can run the  
> parser  fine in there.
>
> Is there something I need to do to get the debugger to work? I'd  
> really like to play with it. An old thread <http://www.antlr.org: 
> 8080/pipermail/antlr-interest/2006-November/018445.html> suggests  
> that antlrworks doesn't deal with packages - is that still the case?
>
> Versions:
>
> IntelliJ 6.0.5
> AntlrWorks 1.0.2
> OS: Ubuntu Feisty
> Java: 1.6.0
> --
> Martin Fowler
> http://martinfowler.com


From antlr-list at arizona-software.ch  Tue Jun 12 23:48:59 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 12 Jun 2007 23:48:59 -0700
Subject: [antlr-interest] different behavoir ANTLRworks and ANTLR
In-Reply-To: <20070602233057.92990@gmx.net>
References: <20070602233057.92990@gmx.net>
Message-ID: <31EB3F66-3142-497F-8AC6-2D15E7DF5368@arizona-software.ch>

What happens if you check the grammar in ANTLRWorks? Does it report  
the error?

Regards,

Jean

On Jun 2, 2007, at 4:30 PM, Markus Kuhla wrote:

> Hi!
>
> I developed my grammar in ANTLRworks. Now I must compile this  
> grammar from  a Java program. In both cases I get an error message:
>
> error(211): C:/workspace/dev/wtp3/eclipse/webapps/Validator/ 
> grammars/grammar.g:71:27: [fatal] rule link_text has non-LL(*)  
> decision due to recursive rule invocations reachable from alts  
> 1,2.  Resolve by left-factoring or using syntactic predicates or  
> using backtrack=true option.
>
> Strange now is that ANTLRworks generated the scanner and parser  
> properly, but not on command-line or out of a Java program. Why is  
> there a different behavior? I don't want to change the grammar,  
> because it is possible the generate a parser (with ANTLRworks). Is  
> there a further option that I have to set to ignore the error and  
> proceed generation?
>
> (For ANTLRworks I reserved 1GB heap space, how can I do this using  
> the Tool class inside my Java program?)
>
>
> Thanks for any ideas!!!
> Best regards,
> Markus
> -- 
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail


From antlr-list at arizona-software.ch  Wed Jun 13 00:01:01 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 13 Jun 2007 00:01:01 -0700
Subject: [antlr-interest] ANTLRWorks: Export as Bitmap image...
In-Reply-To: <4667FE6F.3020404@gmx.de>
References: <mailman.766.1181146959.2496.antlr-interest@antlr.org><Pine.LNX.4.63.0706061325160.31877@algonquin><200706061126.07591.rschulz@sonic.net>	<838796B3-274A-401F-BDBC-D0D1E2C56683@wincent.com>	<B36CCC332A32904F8FA3DE134A2353362526A5@wavemachine.temporal-wave.com>	<46579CE6-DB3D-43D3-8F00-60A3CE837F66@wincent.com>
	<4667F53E.5020804@gmx.de> <4667FE6F.3020404@gmx.de>
Message-ID: <9E4B76C8-FA76-44AF-902F-58311D95C348@arizona-software.ch>

That's a bug, thanks for the report. I will that in the next release.  
As a workaround, you can right-click on the syntax diagram itself to  
export it into a bitmap image.

Regards,

Jean

On Jun 7, 2007, at 5:47 AM, Johannes Luber wrote:

> Ruth Karl wrote:
>> Hi again,
>>
>> I wondered how to export a syntax diagram for documentation  
>> purpose from
>> ANTLWorks. Right clicking on the diagram (OR on the parser rule in  
>> the
>> grammar window) I get but an alert:
>>
>>                    There is no rule at cursor position
>>
>> Is it a bug or a feature ;-) ? Or am I thinking/doing something wrong
>> again?
>
> I don't manage to get a dot file export of the whole grammar. I  
> suppose
> that this is a bug. I can only make an EPS export of the rule in the
> grammar window, if I put the cursor in this rule and right click in  
> the
> syntax diagram and choose the EPS option. Bitmap doesn't work even  
> then.
> Unfortunately, one can't get the entire syntax tree right now.
>
> Best regards,
> Johannes Luber
>
> P.S.: Please don't create emails with an entirely new subject via
> answering to another email and changing the subject. The email system
> supports threaded views of emails, so it obvious who answered which
> email (something very useful for such an emailing group). Ignoring  
> this
> practice results in burying your email deeply in a tree. In your  
> case 7
> levels below the root in a really big tree - a great hiding place.


From antlr-list at arizona-software.ch  Wed Jun 13 00:02:28 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 13 Jun 2007 00:02:28 -0700
Subject: [antlr-interest] ANTLRWorks Installation!
In-Reply-To: <338361.7284.qm@web58105.mail.re3.yahoo.com>
References: <338361.7284.qm@web58105.mail.re3.yahoo.com>
Message-ID: <9FE8F538-D09F-4CF4-9F29-0A34404EE246@arizona-software.ch>

Which test files are you talking about? Are you trying the debug a  
grammar from within ANTLRWorks or are you trying to run the unit  
tests of the ANTLRWorks source code?

Regards,

Jean

On Jun 8, 2007, at 11:50 AM, ali azimi wrote:

> Hi,
> I have a basic problem with installation. I am trying to install  
> ANTLWorks on my laptop with xp professional. What do I have to add  
> in CLASSPATH or PATH in order to be able to run test files(produced  
> by ANTLRWorks which are Main methods) using command prompt? I  
> really appreciate for any assistance.
>
> Regards,
> Al
>
> Park yourself in front of a world of choices in alternative vehicles.
> Visit the Yahoo! Auto Green Center.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/4223f8da/attachment.html 

From pink at odahoda.de  Wed Jun 13 00:57:15 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 13 Jun 2007 09:57:15 +0200
Subject: [antlr-interest] How to feedback to users the string	expected
	on	MismatchedTokenException
References: <5D85F621120B9545BE359DCFA778812585BCE2@SERVER.tt.tracetracker.com>	<E1HyBhu-0001Vb-00@gecko>
	<f4mvj3$2t6$1@sea.gmane.org> <E1HyDSG-0002UM-00@gecko>
	<466F765F.2060800@ca.com>
Message-ID: <f4o80r$sq6$1@sea.gmane.org>

Jonathan Thomas wrote:

> In previous versions of Antlr you could put in 'paraphrase' option to
> spit out whatever you liked as the error message for that token. On
> this
>
page:http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
> down the bottom it mysteriously says there is something similar, but
> you need the book.&nbsp; I'm still waiting for my book to arrive ... :-)

The book only describes paraphrasing for rules (up to the page I am at now -
but I have finished the error recovery chapter just yesterday).

To elaborate my suggestion a bit more:

getErrorMessage() takes the tokenNames array as an argument, so you could
override it with a method that calls BaseRecognizer.getErrorMessage() with
a custom array.
I'd suggest to fill this custom array from a mapping, because token types
may jump around in the mapping, when the grammar is modified.
A rough example in Python syntax (still too early for me to switch my brain
into - a very limited - Java mode ;) )

# this clones the original array
myTokenNames = TParser.tokenNames[:] 

# a mapping of token types and there new name
overrides = {
  PLUS: 'plus sign',
  DOLLAR: 'much money',
  ...
}

# changes names of those token type mentioned in overrides
for ttype, name in overrides.items():
    myTokenNames[ttype] = name


And you getErrorMessage() looks like (if you'd do it in Python):

def getErrorMessage(self, exc, tokenNames):
    return BaseRecognizer.getErrorMessage(self, exc, myTokenNames)




-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From loverde at nvisia.com  Wed Jun 13 01:20:22 2007
From: loverde at nvisia.com (Jim Loverde)
Date: Wed, 13 Jun 2007 03:20:22 -0500 (CDT)
Subject: [antlr-interest] How to handle first non whitespace comment
	characters?
Message-ID: <835875.147861181722822622.JavaMail.root@nvisia01.managed.contegix.com>

Hello,

I was hoping someone could help me out, as I've been struggling with this for a bit.  Basically, how do you handle something like a COBOL asterisk comment character, where it is only a valid line comment indicator if it is the first non whitespace character on a line (but if it's part of an expression such as 5 * 7 it shouldn't be treated as a line comment character).

For example:

* This is a line comment
IF 5 * 5 = 20 THEN
    * this is also a line comment
    NOTHING
END-IF.

Ideally I'd like to have the line comments channeled to the hidden channel similar to the "normal" line comment such as:

LINE_COMMENT
    :    '!' ~('\n'|'\r')*  '\r'? '\n' {$channel=HIDDEN;}

Also, while on the topic, does anyone have a COBOL grammar for ANTLR (or even a partial grammar) that they can share?

Thanks in advance for any help.



From jaluber at gmx.de  Wed Jun 13 02:39:00 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 13 Jun 2007 11:39:00 +0200
Subject: [antlr-interest] How to handle first non whitespace
	comment	characters?
In-Reply-To: <835875.147861181722822622.JavaMail.root@nvisia01.managed.contegix.com>
References: <835875.147861181722822622.JavaMail.root@nvisia01.managed.contegix.com>
Message-ID: <466FBB34.6060108@gmx.de>

Jim Loverde wrote:
> Hello,
> 
> I was hoping someone could help me out, as I've been struggling with this for a bit.  Basically, how do you handle something like a COBOL asterisk comment character, where it is only a valid line comment indicator if it is the first non whitespace character on a line (but if it's part of an expression such as 5 * 7 it shouldn't be treated as a line comment character).
> 
> For example:
> 
> * This is a line comment
> IF 5 * 5 = 20 THEN
>     * this is also a line comment
>     NOTHING
> END-IF.
> 
> Ideally I'd like to have the line comments channeled to the hidden channel similar to the "normal" line comment such as:
> 
> LINE_COMMENT
>     :    '!' ~('\n'|'\r')*  '\r'? '\n' {$channel=HIDDEN;}
> 
> Also, while on the topic, does anyone have a COBOL grammar for ANTLR (or even a partial grammar) that they can share?

I have a similar problem with C#'s preprocessor directives. Only at the
beginning of the line or only whitespace may be in front of "#". My
solution is to use a boolean variable, which is reset at the NEW_LINE token:

NEW_LINE
   :    { AllowPPDirective(); } '\u000D' // Carriage return character
   |    { AllowPPDirective(); } '\u000A' // Line feed character
   |    { AllowPPDirective(); } '\u000D\u000A'  // Carriage return
character followed by line feed character
   |    { AllowPPDirective(); } '\u0085' // Next line character
   |    { AllowPPDirective(); } '\u2028' // Line separator character
   |    { AllowPPDirective(); } '\u2029' // Paragraph separator character
   ;

Then at every non-fragment rule I put:

SINGLE_LINE_COMMENT
   :    { DisallowPPDirective(); } '//' INPUT_CHARACTER*
   ;

And I do the testing like:

PP_DEFINE
   :    { isPPDirectiveAllowed }? '#' WHITESPACE? 'define'
   ;

Unfortunately I couldn't get my parser running due to unrelated
problems, so I can't vouch that this solution will actually work. On the
other hand, there isn't anything what would make me doubt my solution's
capabilities.

Best regards,
Johannes Luber

From open.zone at virgin.net  Wed Jun 13 02:50:18 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 13 Jun 2007 10:50:18 +0100
Subject: [antlr-interest] How to handle first non whitespace
	commentcharacters?
In-Reply-To: <835875.147861181722822622.JavaMail.root@nvisia01.managed.contegix.com>
Message-ID: <000e01c7ada0$4328d2f0$c704a8c0@hercules>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Loverde
> Sent: 13 June 2007 09:20
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to handle first non whitespace 
> commentcharacters?
> 
> 
> Hello,
> 
> I was hoping someone could help me out, as I've been 
> struggling with this for a bit.  Basically, how do you handle 
> something like a COBOL asterisk comment character, where it 
> is only a valid line comment indicator if it is the first non 
> whitespace character on a line (but if it's part of an 
> expression such as 5 * 7 it shouldn't be treated as a line 
> comment character).
> 
> For example:
> 
> * This is a line comment
> IF 5 * 5 = 20 THEN
>     * this is also a line comment
>     NOTHING
> END-IF.
> 
> Ideally I'd like to have the line comments channeled to the 
> hidden channel similar to the "normal" line comment such as:
> 
> LINE_COMMENT
>     :    '!' ~('\n'|'\r')*  '\r'? '\n' {$channel=HIDDEN;}

How about something like the following:

WHITESPACE
	:	lcmt=LINE_COMMENT	
		{	if ( $lcmt1.pos == 1)
			{
				$type=LINE_COMMENT;
				$channel=HIDDEN;
			}
		} 
	|	nnw=NON_NEWLINE_WHITESPACE (NON_NEWLINE_WHITESPACE)*
		(	{ ($nnw.pos == 1) }? LINE_COMMENT 
			{	
				$type=LINE_COMMENT;
                        $channel=HIDDEN;
			}
		)?
	;

fragment LINE_COMMENT
     :    '*' ~('\n'|'\r')*  '\r'? '\n'


This is a rough translation of what CSharpLexer.g (from the
KCSParse/csharp_v1 sample for V2.7.7) does for preprocessor directives. You
may want to look at the original file.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From win at wincent.com  Wed Jun 13 03:43:11 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 13 Jun 2007 12:43:11 +0200
Subject: [antlr-interest] GCC lexer warnings with C target
In-Reply-To: <761916E6-3B72-4863-8AFF-67CB37268764@wincent.com>
References: <761916E6-3B72-4863-8AFF-67CB37268764@wincent.com>
Message-ID: <1152148C-1500-4996-8B54-314E34E862E1@wincent.com>

El 6/6/2007, a las 15:55, Wincent Colaiuta escribi?:

> GCC issues this warning while compiling the lexer:
>
>   SimpleLexer.c:198: warning: ?mFOO? declared inline after being  
> called
>   SimpleLexer.c:198: warning: previous declaration of ?mFOO? was here
>
> The warning can be eliminated in one of three ways:
>
> - either dropping the ANTLR3_INLINE from the function implementation
>
> - or adding ANTLR3_INLINE to the forward declaration
>
> - or moving the mFOO function further up in the file so that it's  
> not called prior to the implementation (in the case of the example  
> grammar, it's called exactly once prior to the implementation, from  
> the SimpleLexerNew function)
>
> Of these, the cleanest solution looks to be adding ANTLR3_INLINE to  
> the forward declaration, at least with GCC... I don't have access  
> to any other compilers though so I don't know what the effect would  
> be. I'm not aware of any switch that can be passed to GCC to  
> suppress these warnings, but in a large lexer than tend to produce  
> a fair bit of noise (two warnings for each lexer rule).

The warnings were making it harder to see stuff that I really should  
have been paying attention to, so I patched the C.stg template as  
follows:

714c714
< <rules:{r | static <headerReturnType 
(ruleDescriptor=r.ruleDescriptor)>        <if(! 
r.ruleDescriptor.isSynPred)>m<endif><r.ruleDescriptor.name>     
(p<name> ctx<if(r.ruleDescriptor.parameterScope)>,  
<endif><r.ruleDescriptor.parameterScope:parameterScope(scope=it)>);};  
separator="\n";>
---
 > <rules:{r | static <if(!r.ruleDescriptor.isSynPred) 
 >ANTLR3_INLINE<endif> <headerReturnType 
(ruleDescriptor=r.ruleDescriptor)>  <if(!r.ruleDescriptor.isSynPred) 
 >m<endif><r.ruleDescriptor.name>    (p<name> ctx<if 
(r.ruleDescriptor.parameterScope)>,  
<endif><r.ruleDescriptor.parameterScope:parameterScope(scope=it)>);};  
separator="\n";>

This implements the second option mentioned above (adding  
ANTLR3_INLINE to the forward declaration). Works on GCC with on  
warnings.

Cheers,
Wincent


From win at wincent.com  Wed Jun 13 04:40:23 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 13 Jun 2007 13:40:23 +0200
Subject: [antlr-interest] C target: behaviour of getCharPositionInLine()
Message-ID: <2792847C-8028-4BA7-AC9D-8CACA66DCB3F@wincent.com>

I'm using the C target and some of my lexer rules look like this:

   H6 : { char_position_in_line(ctx) == 0 }?=> '======' ;

That is, the token will only match if it appears in the first column.

In testing I noticed that if such a token appeared at the very  
beginning of the input then its char position would be -1 rather than  
0. On inspecting antlr3inputstream.c I saw that this was because in  
antlr3InputReset() the charPositionInLine is explicitly set to -1.

This is no big deal, I can handle this in my helper method:

   ANTLR3_UINT32 ANTLR3_INLINE char_position_in_line(pWikiTextLexer ctx)
   {
       ANTLR3_UINT32 pos = ctx->pLexer->getCharPositionInLine(ctx- 
 >pLexer);
       return pos == -1 ? 0 : pos;
   }

But I am still curious to know, why is charPositionInLine being set  
to -1 rather than 0? The Java target seems to set to 0 when resetting  
(see the reset() method in runtime/Java/src/org/antlr/runtime/ 
ANTLRStringStream.java).

Cheers,
Wincent


From gatis.avots at inbox.lv  Wed Jun 13 05:34:02 2007
From: gatis.avots at inbox.lv (Gatis Avots)
Date: Wed, 13 Jun 2007 15:34:02 +0300
Subject: [antlr-interest] newbie question, nondeterminism,
	syntactic predicate
Message-ID: <000101c7adb7$1f9f9140$23020a0a@shjkuunis>

Hello!


This is my first post to this mailing list. So please do not be too harsh if
my question might seem real dumb for somebody. ;)

I have a simplified grammar (see below). Antlr (v 2.7) generates:
***********************************************************
D:\antlr\277rc1\bin\learn.g: warning:lexical nondeterminism between rules
IDENT
and ANY_NUMBER upon
D:\antlr\277rc1\bin\learn.g:     k==1:'-','0'..'9'
D:\antlr\277rc1\bin\learn.g:     k==2:<end-of-token>,'0'..'9'
Press any key to continue . . .
***********************************************************

Questions:
1) Why is that...? Should not the lookahead of k=2 solve this issue?

2) If not the lookahead, then at least the syntactic predicate ( (MINUS
('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);}) ) ? Right now it seems
there is no difference if I use this syntactic predicate or not.

3) How can I fix this so that lexer returns token of type IDENT (starting
optionally with '-') or token ANY_NUMBER (starting optionally with '-')

Grammar:
***********************************************************
class MyParser extends Parser;
page: ANY_NUMBER | IDENT;
  
class MyLexer extends Lexer;
options {k=2;}  
   
IDENT: 
   (MINUS ('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);})
   |(MINUS)? ('a'..'z')+
  ;

ANY_NUMBER:
    (MINUS)? ('0'..'9')+
;
 
protected
MINUS       :  '-';
***********************************************************

Any help will be much appreciated, thank you!
 
Kind regards,
Gatis


From wiggjd at lsbu.ac.uk  Wed Jun 13 06:00:33 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 13 Jun 2007 14:00:33 +0100
Subject: [antlr-interest] ANTLR 2.7 Lexer problem
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C5473@CSD-EXBE-VS2.lsbu.ac.uk>

Thanks, Michael for taking the time to respond to my problem.
 
However, I cannot find the lexer you are referring to on the antlr2
website. There are five C# references, four of them are described as
html files and it turns out they are ordinary text files (not your
fault, but seems pretty silly) some don't even have a lexer and I
can't find a  CSharpLexer.g anywhere.
 
I'm wondering whether you discounted your first suggestions in your
previous message because you thought they might not work or whether
you thought the example in the CSharpLexer.g would be clearer. Can I
take it that the suggestions you made first are still worth pursuing?
 
What was wrong with either of these two attempts of mine to stop the
nondetermism warning with ID?
 
AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
 ("__asm"|"_asm"|"asm") // etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
 ("__asm"|"_asm"|"asm") // etc.
 ;
 
Thanks,
 
David Wigg
 
 
Message: 6 (from Digest Vol 31 Issue 49)
Date: Tue, 12 Jun 2007 22:26:54 +0100
From: "Micheal J" <open.zone at virgin.net>
Subject: Re: [antlr-interest] ANTLR 2.7 Lexer problem
To: <antlr-interest at antlr.org>
Message-ID: <002b01c7ad38$671483c0$c704a8c0 at hercules>
Content-Type: text/plain; charset="us-ascii"

Ooops!. Scratch my comments about the 2.x examples using that idiom.
I'm
apprently remembering something else. The csharp_v1 example (only
available
for C# in v2.x) has a CSharpLexer.g file that you could look at
instead.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very
limited.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org
<mailto:antlr-interest-bounces at antlr.org> ] On Behalf Of Micheal J
Sent: 12 June 2007 22:01
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 2.7 Lexer problem


David,

Have you tried declaring your literals (i.e. "__asm", "_asm"...etc)
using
the tokens {...} construct in ANTLR 2.x. You would then need to set
the
testLiterals option to 'true' for your ID rule. This ensures that all
match
ID strings are checked against your literals.

Many of the 2.x examples (e.g. the Java parser which is also available
in
C++) can serve as an example of this idiom. They declare keywords in
the
tokens {..} section and set the testLiterals option for their
ID/IDENT/IDENTIFIER rule.

Micheal

PS    Any plans to port your C++ grammar to v3?. The C target is
maturing
and is seems very performant.

-----------------------
The best way to contact me is via the list/forum. My time is very
limited.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org
<mailto:antlr-interest-bounces at antlr.org> ] On Behalf Of Wigg, J D
Sent: 12 June 2007 15:16
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 2.7 Lexer problem


Thanks to those who replied to my lexer problem about coping with
whitespace
in the lexer described in Digest vol 31 issue 22 of 6 June. As
suggested
parsing specifically for white space solved this problem.

However, I am still getting an ambiguity warning between ( __asm |
_asm |
asm ) and ID. I don't want to accept this because it looks as though
something could be wrong (although it does in fact work).

I have tried the following options but they don't work (Cut down to
minimum
for demonstration).

AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
  ("__asm"|"_asm"|"asm") //etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
  ("__asm"|"_asm"|"asm") // etc.
 ;

Antlr accepts these statements but I still get lexical nondeterminsim
between rules AsmStatements and ID.

I can't find any similar example in the ANTLR2 documentation and I
would be
grateful if someone could let me know what I doing wrong.

Thanks.

David Wigg




--
Copyright in this email and in any attachments belongs to London South
Bank




--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/e8e226c5/attachment-0001.html 

From rerdavies at rogers.com  Wed Jun 13 06:03:27 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 13 Jun 2007 09:03:27 -0400
Subject: [antlr-interest] Bug with nested syntactic predicates? Reduced
	C#2.0 test grammar.
Message-ID: <2E1AFCB71404445590AEC0FB70EE067D@GWB>

The following grammar is a reduced test case to simulate resolution of the 
generic/expression ambiguity in C# 2.0 via syntactic predicates. I can't get 
it to work. I'm pretty sure it's a bug; but I'm still at the "a little 
knowledge is a dangerous thing" stage. It is  possible that I'm still 
missing an essential concept wrt/ syntactic predicates. I've been over 
chapters 12-14 backwards and forwards, and I firmly believe that the grammar 
is correct.

The conflict in C# is of the form
        methodCall(a<b,c>.StaticMethod())   // is a<b a boolean expression 
or the start of a generic type name)?
        methodCall(a<b,c>d)                         // is a<b a boolean 
expression or the start of a generic type name)?

The intended resolution is: if it's a generic name (e.g. a<b,c>) then it's a 
generic name. The second case should be treated as an error. (The actual 
rule in the standard is a bit more unpleasant, requiring an ad-hoc pre-scan 
of incoming tokens as a semantic predicate to locate a probably-matching '>' 
token).

Test input is:
    List<int,int>

In ANTLRWorks, this succesfully and correctly parses as an expr3, and a 
generic_type_expr, but fails to parse as an expr. The question is: why isn't 
the first option of the expr production taken for the given test input, 
since it is a valid generic_type_expr?

expr
    :    (generic_type_expr)=>   // e.g. generic   List<int>
         expr3    // bypass LT/GT expressions
    |     (expr3 LT  expr3)=> (expr3 LT expr3)  // (non-assoc, for clarity)
    |     (expr3 GT expr3)=> (expr3 GT expr3)
    |     (expr3)=> expr3
    ;

I've seen various behaviors depending on the state of my test grammar. In 
the supplied grammar -- if AntlrWorks is displaying syntactic predicate 
evaluation properly -- the (generic_type_expr) syntactic predicate doesn't 
seem to get run at all. But I've also seen cases where (generic_type_expr)=> 
succeeds, and expr3 fails for this input. And cases where an apparent 
pre-scan for generic_type_expr accepts "List<int,int", and then fails, 
despite the fact that the next token is the expected ">" token.

If I remove either of the LT or GT rules, the parse succeeds (probably 
through option 4). But shouldn't the semantic predicate in the first option 
prevent options 2 and 3 from running in the intact grammar?

The full grammar is attached. I've done my best to simplify it as much as 
possible.

As an aside,  "!=>" would be a very useful construct in ANTLR, allowing the 
following rule to cut off the '<' binary operator, in left-associative 
comparison expressions.

comparison_expr:   expr_next
                                    (
                                        ( (generic_arg_list)!=> '<' 
expr_next)
                                    |   ('>' expr_next)
                                    )*
                            ;

The nightmarish input case for this:   a < b < G<int,int>.StaticBoolMember() 
(a valid, but not very useful C# expression, I think; == != are 
non-associative (good thing), but <, > are right-assoc, for some bizarre 
reason).

Any help appreciated.



-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.g
Type: application/octet-stream
Size: 839 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/052357ee/attachment.obj 

From rerdavies at rogers.com  Wed Jun 13 06:14:59 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 13 Jun 2007 09:14:59 -0400
Subject: [antlr-interest] newbie question, nondeterminism,
	syntactic predicate
In-Reply-To: <000101c7adb7$1f9f9140$23020a0a@shjkuunis>
References: <000101c7adb7$1f9f9140$23020a0a@shjkuunis>
Message-ID: <EDA64DD75AFB4784B91B732005A6FDF7@GWB>

I believe that Lexers rules don't use LL(*) rules: they use matching rules 
similar to regular expressions. And I believe that the k=2 option affects 
parser rules, but not lexer rules.

The following should do what you want:

IDENT: MINUS? ('a'..'z')+;

ANY_NUMBER: MINUS? ('0'..'9')+;

of (if you have ulterior motives):
----------
// near the top...
token
{  ANY_NUMBER };

...
IDENT:
   (MINUS ('0'..'9')* ( {setType(ANY_NUMBER);})
   |(MINUS)? ('a'..'z')+
  ;

-----
or
----

IDENT
   :    ANY_NUMBER ( {setType(ANY_NUMBER);})
   |   (MINUS)? ('a'..'z')+
  ;

fragment   // a match of this rule does NOT generate a token.
ANY_NUMBER:    // not sure if you can re-use this token name. if not, use 
token { } with a different name.
    (MINUS)? ('0'..'9')+
;


> This is my first post to this mailing list. So please do not be too harsh 
> if
> my question might seem real dumb for somebody. ;)
>
> I have a simplified grammar (see below). Antlr (v 2.7) generates:
> ***********************************************************
> D:\antlr\277rc1\bin\learn.g: warning:lexical nondeterminism between rules
> IDENT
> and ANY_NUMBER upon
> D:\antlr\277rc1\bin\learn.g:     k==1:'-','0'..'9'
> D:\antlr\277rc1\bin\learn.g:     k==2:<end-of-token>,'0'..'9'
> Press any key to continue . . .
> ***********************************************************
>
> Questions:
> 1) Why is that...? Should not the lookahead of k=2 solve this issue?
>
> 2) If not the lookahead, then at least the syntactic predicate ( (MINUS
> ('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);}) ) ? Right now it seems
> there is no difference if I use this syntactic predicate or not.
>
> 3) How can I fix this so that lexer returns token of type IDENT (starting
> optionally with '-') or token ANY_NUMBER (starting optionally with '-')
>
> Grammar:
> ***********************************************************
> class MyParser extends Parser;
> page: ANY_NUMBER | IDENT;
>
> class MyLexer extends Lexer;
> options {k=2;}
>
> IDENT:
>   (MINUS ('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);})
>   |(MINUS)? ('a'..'z')+
>  ;
>
> ANY_NUMBER:
>    (MINUS)? ('0'..'9')+
> ;
>
> protected
> MINUS       :  '-';
> ***********************************************************
>
> Any help will be much appreciated, thank you!
>
> Kind regards,
> Gatis
> 


From rerdavies at rogers.com  Wed Jun 13 06:20:53 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 13 Jun 2007 09:20:53 -0400
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <466E2DB1.8000502@gmail.com>
References: <466CE757.9090208@gmail.com><8CA78A66-3625-4A3F-9607-84AD8D240C1F@cs.usfca.edu>
	<466E2DB1.8000502@gmail.com>
Message-ID: <9E06CB1CBB99404B82969E5C632491A3@GWB>

I had a freeze in ANtlrWorks that went away when I increased the available 
memory for the Java VM:

   C:\Windows\System32\java.exe -Xmx1500000000 -jar 
C:\Users\Robin\antlrworks-1.0.2.jar

Maybe try that.

----- Original Message ----- 
From: "Fabio Maulo" <fabiomaulo at gmail.com>
To: "ANTLR Interest" <antlr-interest at antlr.org>
Sent: Tuesday, June 12, 2007 1:22 AM
Subject: Re: [antlr-interest] ANTLRWork freez


Terence Parr escribi?:
>
> On Jun 10, 2007, at 11:10 PM, Fabio Maulo wrote:
>
>> I wrote the attached grammar using ANTLRWorks but now I can't work with 
>> it.
>> It is a partial grammar but i can't test any rules, can't debug it and, 
>> some times, i can't use the editor....
>>
>> Any idea ?
>
> Try tacking the issues one by one.  There are a number of errors in the 
> grammar I believe:
>
>
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> warning(205): T.g:167:4: ANTLR could not analyze this decision in rule 
> booleanFactor; often this is because of recursive rule references visible 
> from the left edge of alternatives.  ANTLR will re-analyze the decision 
> with a fixed lookahead of k=1.  Consider using "options {k=1;}" for that 
> decision and possibly adding a syntactic predicate.
> warning(205): T.g:175:3: ANTLR could not analyze this decision in rule 
> booleanPrimary; often this is because of recursive rule references visible 
> from the left edge of alternatives.  ANTLR will re-analyze the decision 
> with a fixed lookahead of k=1.  Consider using "options {k=1;}" for that 
> decision and possibly adding a syntactic predicate.
> warning(205): T.g:175:3: ANTLR could not analyze this decision in rule 
> booleanPrimary; often this is because of recursive rule references visible 
> from the left edge of alternatives.  ANTLR will re-analyze the decision 
> with a fixed lookahead of k=1.  Consider using "options {k=1;}" for that 
> decision and possibly adding a syntactic predicate.
> ...
Probally recursive rules, in some cases, freez ANTLRW.

I don't know if Jean can use the attached grammar to test some of my
problems using ANTLRW.

Thanks to all.
Bye.
Fabio.


From rschulz at sonic.net  Wed Jun 13 06:21:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 13 Jun 2007 06:21:23 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>
References: <466EA6C0.4060802@acm.org> <466ED404.100@gmail.com>
	<528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>
Message-ID: <200706130621.23950.rschulz@sonic.net>

On Tuesday 12 June 2007 23:43, Jean Bovet wrote:
> There is always a trade off between a complete and smooth integration
> into IntelliJ and retaining as much work as possible: using the
> custom language would require much work that has been already spent
> in ANTLRWorks itself. But I would love to integrate ANTLRWorks more
> into IntelliJ.... if anybody knows how to interact with IntelliJ,
> please let me know.

I have no specific information to give you, but if you decide to embark 
on this, you might want to consider targeting IDEA 7.0, since 
apparently the JetBrains people do not place a high value on backward 
compatibility of the extension / plug-in API.

I know, e.g., that the Groovy plug-in they're producing works only on 
the early-access release of version 7.0.


> Regards,
>
> Jean


Randall Schulz

From tbrandonau at gmail.com  Wed Jun 13 06:27:08 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 13 Jun 2007 23:27:08 +1000
Subject: [antlr-interest] newbie question, nondeterminism,
	syntactic predicate
In-Reply-To: <000101c7adb7$1f9f9140$23020a0a@shjkuunis>
References: <000101c7adb7$1f9f9140$23020a0a@shjkuunis>
Message-ID: <ebc876d70706130627h5d6276f5g29cf395625d26541@mail.gmail.com>

On 6/13/07, Gatis Avots <gatis.avots at inbox.lv> wrote:
>
> Hello!
>
>
> This is my first post to this mailing list. So please do not be too harsh
> if
> my question might seem real dumb for somebody. ;)
>
> I have a simplified grammar (see below). Antlr (v 2.7) generates:
> ***********************************************************
> D:\antlr\277rc1\bin\learn.g: warning:lexical nondeterminism between rules
> IDENT
> and ANY_NUMBER upon
> D:\antlr\277rc1\bin\learn.g:     k==1:'-','0'..'9'
> D:\antlr\277rc1\bin\learn.g:     k==2:<end-of-token>,'0'..'9'
> Press any key to continue . . .
> ***********************************************************
>
> Questions:
> 1) Why is that...? Should not the lookahead of k=2 solve this issue?


I think this is due to the linear approximate lookahead used in ANTLR 2. See
http://www.antlr.org/doc/glossary.html#Linear_approximate_lookahead for an
explanation.

2) If not the lookahead, then at least the syntactic predicate ( (MINUS
> ('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);}) ) ? Right now it seems
> there is no difference if I use this syntactic predicate or not.


 I think this is because ANTLR 2 doesn't do predicate hoisting. ANTLR
generates a nextToken method that combines all (non-protected) lexer rules
as alternates, so here you get (IDENT|ANY_NUMBER), but as it hasn't hoisted
the predicate this is ambiguous.

3) How can I fix this so that lexer returns token of type IDENT (starting
> optionally with '-') or token ANY_NUMBER (starting optionally with '-')


You need to make the ANY_NUMBER rule protected so it is not added directly
to the nextToken method, then it should work.
Or, ANTLR 3 does not use linear approximate lookahead so this should work
fine there (you don't even need the stuff dealing with ANY_NUMBER in IDENT).
So unless you have a reason to use 2.7 instead of 3 you may be better
upgrading.

Grammar:
> ***********************************************************
> class MyParser extends Parser;
> page: ANY_NUMBER | IDENT;
>
> class MyLexer extends Lexer;
> options {k=2;}
>
> IDENT:
>    (MINUS ('0'..'9')) => ANY_NUMBER ( {setType(ANY_NUMBER);})
>    |(MINUS)? ('a'..'z')+
>   ;
>
> ANY_NUMBER:
>     (MINUS)? ('0'..'9')+
> ;
>
> protected
> MINUS       :  '-';
> ***********************************************************
>
> Any help will be much appreciated, thank you!



Kind regards,
> Gatis
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/bdd02d94/attachment.html 

From open.zone at virgin.net  Wed Jun 13 06:32:35 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 13 Jun 2007 14:32:35 +0100
Subject: [antlr-interest] ANTLR 2.7 Lexer problem
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A022C5473@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <000601c7adbf$4e9820e0$c704a8c0@hercules>

David,
 
The lexer is a part of one of the examples distributed with ANTLR v2.7.6 and
v2.7.7:
    examples/csharp/csharp_v1/CSharpLexer.g
 
I have attached a copy in any case.

 
The other examples uses a mixture of tokens {...} declarations and embedded
string literals (in the parser) to resolve the inherent non-determinism that
exists between keywords and ID/IDENT/IDENTIFIER rules. That actually amounts
to the same thing since string literals in the parser (but *not* the lexer)
are effectively [treated as] tokens {...} declarations under the hood.
 
The usage in CSharpLexer.g is simply more explicit. One could argue that it
is "better" since it supports the use of alternative/multiple parsers with
the lexer since it avoids some potential token vocabulary mismatch issue
that the implicit declaration idiom is susceptible to in this scenario.
 
 
With regards to your attempts, either "asm" only or, _all_ three character
sequences can be recognised as either AsmStatement or IDENT tokens
(depending on whether your IDENT rule accepts the '_' character). IOW, there
is a real non-determinism/ambiguity here that shutting off the warning
cannot resolve.
 
 
Just to be clear, if you really don't care about multiple parsers using the
lexer, you could just declare AsmStatement in your parser (rather than your
lexer) as shown below:
 
    asmStatement
         :    "__asm" 
        |    "_asm"
        |    "asm"
        ;
 
This will essentially direct the ANTLR tool to create the tokens {...}
declarations automagically under the hood.
 
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wigg, J D
Sent: 13 June 2007 14:01
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 2.7 Lexer problem


Thanks, Michael for taking the time to respond to my problem.
 
However, I cannot find the lexer you are referring to on the antlr2 website.
There are five C# references, four of them are described as html files and
it turns out they are ordinary text files (not your fault, but seems pretty
silly) some don't even have a lexer and I can't find a  CSharpLexer.g
anywhere.
 
I'm wondering whether you discounted your first suggestions in your previous
message because you thought they might not work or whether you thought the
example in the CSharpLexer.g would be clearer. Can I take it that the
suggestions you made first are still worth pursuing?
 
What was wrong with either of these two attempts of mine to stop the
nondetermism warning with ID?
 
AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
 ("__asm"|"_asm"|"asm") // etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
 ("__asm"|"_asm"|"asm") // etc.
 ;
 
Thanks,
 
David Wigg
 
 
Message: 6 (from Digest Vol 31 Issue 49)
Date: Tue, 12 Jun 2007 22:26:54 +0100
From: "Micheal J" <open.zone at virgin.net>
Subject: Re: [antlr-interest] ANTLR 2.7 Lexer problem
To: <antlr-interest at antlr.org>
Message-ID: <002b01c7ad38$671483c0$c704a8c0 at hercules>
Content-Type: text/plain; charset="us-ascii"

Ooops!. Scratch my comments about the 2.x examples using that idiom. I'm
apprently remembering something else. The csharp_v1 example (only available
for C# in v2.x) has a CSharpLexer.g file that you could look at instead.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[ <mailto:antlr-interest-bounces at antlr.org>
mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
Sent: 12 June 2007 22:01
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 2.7 Lexer problem


David,

Have you tried declaring your literals (i.e. "__asm", "_asm"...etc) using
the tokens {...} construct in ANTLR 2.x. You would then need to set the
testLiterals option to 'true' for your ID rule. This ensures that all match
ID strings are checked against your literals.

Many of the 2.x examples (e.g. the Java parser which is also available in
C++) can serve as an example of this idiom. They declare keywords in the
tokens {..} section and set the testLiterals option for their
ID/IDENT/IDENTIFIER rule.

Micheal

PS    Any plans to port your C++ grammar to v3?. The C target is maturing
and is seems very performant.

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[ <mailto:antlr-interest-bounces at antlr.org>
mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wigg, J D
Sent: 12 June 2007 15:16
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 2.7 Lexer problem


Thanks to those who replied to my lexer problem about coping with whitespace
in the lexer described in Digest vol 31 issue 22 of 6 June. As suggested
parsing specifically for white space solved this problem.

However, I am still getting an ambiguity warning between ( __asm | _asm |
asm ) and ID. I don't want to accept this because it looks as though
something could be wrong (although it does in fact work).

I have tried the following options but they don't work (Cut down to minimum
for demonstration).

AsmStatements
 :
 (options{generateAmbigWarnings = false;}:
  ("__asm"|"_asm"|"asm") //etc.
 )
 ;

AsmStatements
 options{generateAmbigWarnings = false;}
 :
  ("__asm"|"_asm"|"asm") // etc.
 ;

Antlr accepts these statements but I still get lexical nondeterminsim
between rules AsmStatements and ID.

I can't find any similar example in the ANTLR2 documentation and I would be
grateful if someone could let me know what I doing wrong.

Thanks.

David Wigg




--
Copyright in this email and in any attachments belongs to London South Bank




--
Copyright in this email and in any attachments belongs to London South Bank
University. This email, and its attachments if any, may be confidential or
legally privileged and is intended to be seen only by the person to whom it
is addressed. If you are not the intended recipient, please note the
following: (1) You should take immediate action to notify the sender and
delete the original email and all copies from your computer systems; (2) You
should not read copy or use the contents of the email nor disclose it or its
existence to anyone else.

The views expressed herein are those of the author(s) and should not be
taken as those of London South Bank University, unless this is specifically
stated.

London South Bank University is a company limited by guarantee registered in
England and Wales. The following details apply to London South Bank
University: Company number - 00986761; Registered office and trading address
- 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address -
lsbuinfo at lsbu.ac.uk

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/508c1167/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: CSharpLexer.g
Type: application/octet-stream
Size: 18560 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/508c1167/attachment-0001.obj 

From open.zone at virgin.net  Wed Jun 13 06:45:04 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 13 Jun 2007 14:45:04 +0100
Subject: [antlr-interest] Bug with nested syntactic predicates?
	ReducedC#2.0 test grammar.
In-Reply-To: <2E1AFCB71404445590AEC0FB70EE067D@GWB>
Message-ID: <001501c7adc1$0cdd46b0$c704a8c0@hercules>

Have you looked at how the Java equivalent handles this same issue?
	http://www.antlr.org/grammar/1152141644268/Java.g

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robin Davies
> Sent: 13 June 2007 14:03
> To: ANTR Interest
> Subject: [antlr-interest] Bug with nested syntactic 
> predicates? ReducedC#2.0 test grammar.
> 
> 
> The following grammar is a reduced test case to simulate 
> resolution of the 
> generic/expression ambiguity in C# 2.0 via syntactic 
> predicates. I can't get 
> it to work. I'm pretty sure it's a bug; but I'm still at the 
> "a little 
> knowledge is a dangerous thing" stage. It is  possible that I'm still 
> missing an essential concept wrt/ syntactic predicates. I've 
> been over 
> chapters 12-14 backwards and forwards, and I firmly believe 
> that the grammar 
> is correct.
> 
> The conflict in C# is of the form
>         methodCall(a<b,c>.StaticMethod())   // is a<b a 
> boolean expression 
> or the start of a generic type name)?
>         methodCall(a<b,c>d)                         // is a<b 
> a boolean 
> expression or the start of a generic type name)?
> 
> The intended resolution is: if it's a generic name (e.g. 
> a<b,c>) then it's a 
> generic name. The second case should be treated as an error. 
> (The actual 
> rule in the standard is a bit more unpleasant, requiring an 
> ad-hoc pre-scan 
> of incoming tokens as a semantic predicate to locate a 
> probably-matching '>' 
> token).
> 
> Test input is:
>     List<int,int>
> 
> In ANTLRWorks, this succesfully and correctly parses as an 
> expr3, and a 
> generic_type_expr, but fails to parse as an expr. The 
> question is: why isn't 
> the first option of the expr production taken for the given 
> test input, 
> since it is a valid generic_type_expr?
> 
> expr
>     :    (generic_type_expr)=>   // e.g. generic   List<int>
>          expr3    // bypass LT/GT expressions
>     |     (expr3 LT  expr3)=> (expr3 LT expr3)  // 
> (non-assoc, for clarity)
>     |     (expr3 GT expr3)=> (expr3 GT expr3)
>     |     (expr3)=> expr3
>     ;
> 
> I've seen various behaviors depending on the state of my test 
> grammar. In 
> the supplied grammar -- if AntlrWorks is displaying syntactic 
> predicate 
> evaluation properly -- the (generic_type_expr) syntactic 
> predicate doesn't 
> seem to get run at all. But I've also seen cases where 
> (generic_type_expr)=> 
> succeeds, and expr3 fails for this input. And cases where an apparent 
> pre-scan for generic_type_expr accepts "List<int,int", and 
> then fails, 
> despite the fact that the next token is the expected ">" token.
> 
> If I remove either of the LT or GT rules, the parse succeeds 
> (probably 
> through option 4). But shouldn't the semantic predicate in 
> the first option 
> prevent options 2 and 3 from running in the intact grammar?
> 
> The full grammar is attached. I've done my best to simplify 
> it as much as 
> possible.
> 
> As an aside,  "!=>" would be a very useful construct in 
> ANTLR, allowing the 
> following rule to cut off the '<' binary operator, in 
> left-associative 
> comparison expressions.
> 
> comparison_expr:   expr_next
>                                     (
>                                         ( (generic_arg_list)!=> '<' 
> expr_next)
>                                     |   ('>' expr_next)
>                                     )*
>                             ;
> 
> The nightmarish input case for this:   a < b < 
> G<int,int>.StaticBoolMember() 
> (a valid, but not very useful C# expression, I think; == != are 
> non-associative (good thing), but <, > are right-assoc, for 
> some bizarre 
> reason).
> 
> Any help appreciated.
> 
> 
> 
> 


From fabiomaulo at gmail.com  Wed Jun 13 07:40:49 2007
From: fabiomaulo at gmail.com (Fabio Maulo)
Date: Wed, 13 Jun 2007 11:40:49 -0300
Subject: [antlr-interest] ANTLRWork freez
In-Reply-To: <DE8741D4-8262-4358-A6EE-D12067A5E3F1@mac.com>
References: <466CE757.9090208@gmail.com>
	<8CA78A66-3625-4A3F-9607-84AD8D240C1F@cs.usfca.edu>
	<466E2DB1.8000502@gmail.com>
	<DE8741D4-8262-4358-A6EE-D12067A5E3F1@mac.com>
Message-ID: <467001F1.6010506@gmail.com>

Jean Bovet escribi?:
> That's right, there are a number of errors in the grammar that causes 
> ANTLRWorks (and possibly ANTLR) to freeze up at some point. Can you 
> give me some more information about the following:
> - which rule is reported as left-recursive but not recognized by 
> ANTLRWorks?
> - when you say you cannot use the editor anymore, what is it exactly 
> happening?
>
> Regards,
>
> Jean 
Very thanks Jean.

Steps to reproduce "left-recursive but not recognize" (this is an example)
0) Open ANTLRW
1) Open new doc in ANTLRW
2) Copy the content of the file in your new doc.
3) Press Debug button
4) From the last rule use refactor "Inline rule"
5) Press Debug button (in some case at this point you lost ANTLRW 
left-recursive)
6) Add and delete a space in the rule (make the document dirty)
7) Press Debug button (ANTLR recognize the left recursion, ANTLRW no)

This is the result of console:
[10:36:57] Aborting because the following rules are mutually left-recursive:
    [booleanTest, booleanFactor, booleanValueExpression, booleanTerm]
[10:38:09] Aborting because the following rules are mutually left-recursive:
    [booleanValueExpression]
[10:38:19] Aborting because the following rules are mutually left-recursive:
    [booleanValueExpression]




-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: _WTest.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/3e878210/attachment.pl 

From jimi at temporal-wave.com  Wed Jun 13 08:53:53 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Jun 2007 08:53:53 -0700
Subject: [antlr-interest] How to handle first non whitespace
	commentcharacters?
References: <835875.147861181722822622.JavaMail.root@nvisia01.managed.contegix.com>
Message-ID: <051466DAA0D608439E196797955018D76D6D@wavemachine.temporal-wave.com>

You might find this helpful (C output but Java is very similar of course, just getCharPositionInLine() I think rather than the upper case MACRO and put declaration and initialization in the @init rule.):

OPMULT
@declarations
{
	ANTLR3_UINT32	lno;
}
@init 
{ 
	lno = GETCHARPOSITIONINLINE(); 
}
	: '*'
	    (	  {lno==0}?=> (~('\r' | '\n'))* EOL_SEQUENCE+
							{	$channel=2; $type = COMMENT;	}
	      | '='		    {	$type = OPMULT_ASSIGN;		}
		|
	    )
	;

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Loverde
> Sent: Wednesday, June 13, 2007 1:20 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to handle first non whitespace
> commentcharacters?
> 
> Hello,
> 
> I was hoping someone could help me out, as I've been struggling with
> this for a bit.  Basically, how do you handle something like a COBOL
> asterisk comment character, where it is only a valid line comment
> indicator if it is the first non whitespace character on a line (but if
> it's part of an expression such as 5 * 7 it shouldn't be treated as a
> line comment character).
> 
> For example:
> 
> * This is a line comment
> IF 5 * 5 = 20 THEN
>     * this is also a line comment
>     NOTHING
> END-IF.
> 
> Ideally I'd like to have the line comments channeled to the hidden
> channel similar to the "normal" line comment such as:
> 
> LINE_COMMENT
>     :    '!' ~('\n'|'\r')*  '\r'? '\n' {$channel=HIDDEN;}
> 
> Also, while on the topic, does anyone have a COBOL grammar for ANTLR
> (or even a partial grammar) that they can share?
> 
> Thanks in advance for any help.
> 


From bace.spam at gmx.net  Wed Jun 13 08:56:36 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Wed, 13 Jun 2007 08:56:36 -0700
Subject: [antlr-interest] different behavoir ANTLRworks and ANTLR
In-Reply-To: <31EB3F66-3142-497F-8AC6-2D15E7DF5368@arizona-software.ch>
References: <20070602233057.92990@gmx.net>
	<31EB3F66-3142-497F-8AC6-2D15E7DF5368@arizona-software.ch>
Message-ID: <467013B4.2070703@gmx.net>

Hi,

yes ANTLRworks writes this error to the console but could also generate 
the scanner/parser sources. The GUI itself gave no message.

But if I only used ANTLR from a terminal, or used the ANTLR libraries to 
generate scanner/parser from another Java program, then the generation 
stopped after this error, and nothing was generated.

Regards,
Markus

Jean Bovet wrote:
> What happens if you check the grammar in ANTLRWorks? Does it report 
> the error?
>
> Regards,
>
> Jean
>
> On Jun 2, 2007, at 4:30 PM, Markus Kuhla wrote:
>
>> Hi!
>>
>> I developed my grammar in ANTLRworks. Now I must compile this grammar 
>> from  a Java program. In both cases I get an error message:
>>
>> error(211): 
>> C:/workspace/dev/wtp3/eclipse/webapps/Validator/grammars/grammar.g:71:27: 
>> [fatal] rule link_text has non-LL(*) decision due to recursive rule 
>> invocations reachable from alts 1,2.  Resolve by left-factoring or 
>> using syntactic predicates or using backtrack=true option.
>>
>> Strange now is that ANTLRworks generated the scanner and parser 
>> properly, but not on command-line or out of a Java program. Why is 
>> there a different behavior? I don't want to change the grammar, 
>> because it is possible the generate a parser (with ANTLRworks). Is 
>> there a further option that I have to set to ignore the error and 
>> proceed generation?
>>
>> (For ANTLRworks I reserved 1GB heap space, how can I do this using 
>> the Tool class inside my Java program?)
>>
>>
>> Thanks for any ideas!!!
>> Best regards,
>> Markus
>>

From timgclark at gmail.com  Wed Jun 13 09:30:39 2007
From: timgclark at gmail.com (Tim Clark)
Date: Wed, 13 Jun 2007 17:30:39 +0100
Subject: [antlr-interest] How to get number of children in a tree?
Message-ID: <b6077b530706130930l5e679470pd0486770d9fc73c0@mail.gmail.com>

Hi all

In my parser (output=AST) I have two rules like this:

exprList : expr (COMMA! expr)*  |  // Empty ;

funcCall : ID LPAREN exprList RPAREN -> ^(FUNC_CALL ID exprList) ;

So a sentence fragment like "foobar()" produces ^(FUNC_CALL foo)

and one like "foobar(1,2,3)" produces ^(FUNC_CALL foo 1 2 3)


In a later pass, a tree grammar has this:

funcCall: ^(FUNC_CALL ID expr*
     {
       within this action, how can I get hold of the number of expressions?
       or, indeed, iterate over the expressions themselves (say in reverse
order)?
     }
);

I hope that's clear enough for someone to help :)

Regards, Tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/c5926f43/attachment.html 

From mailinglist.taras.tielkes at gmail.com  Wed Jun 13 09:54:46 2007
From: mailinglist.taras.tielkes at gmail.com (Taras Tielkes)
Date: Wed, 13 Jun 2007 18:54:46 +0200
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <200706130621.23950.rschulz@sonic.net>
References: <466EA6C0.4060802@acm.org>
	<466ED404.100@gmail.com>	<528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>
	<200706130621.23950.rschulz@sonic.net>
Message-ID: <46702156.9040404@gmail.com>

Randall R Schulz wrote:
> On Tuesday 12 June 2007 23:43, Jean Bovet wrote:
>> There is always a trade off between a complete and smooth integration
>> into IntelliJ and retaining as much work as possible: using the
>> custom language would require much work that has been already spent
>> in ANTLRWorks itself. But I would love to integrate ANTLRWorks more
>> into IntelliJ.... if anybody knows how to interact with IntelliJ,
>> please let me know.
> 
> I have no specific information to give you, but if you decide to embark 
> on this, you might want to consider targeting IDEA 7.0, since 
> apparently the JetBrains people do not place a high value on backward 
> compatibility of the extension / plug-in API.
> 
> I know, e.g., that the Groovy plug-in they're producing works only on 
> the early-access release of version 7.0.

Can you give any specific examples where the API was broken in recent 
years? In my experience *a lot* of effort is put in maintaining 
compatibility. Jetbrains would certainly want to hear it if something is 
broken.

As for the new, in-development, Groovy plugin running only on 7.0: 
perhaps the implementation uses new API features from IDEA 7.0?

Rails 1.2 requires a fairly recent version of Ruby, does that mean it 
has bad backward compatibility?

-tt


From rschulz at sonic.net  Wed Jun 13 09:53:29 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 13 Jun 2007 09:53:29 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <46702156.9040404@gmail.com>
References: <466EA6C0.4060802@acm.org> <200706130621.23950.rschulz@sonic.net>
	<46702156.9040404@gmail.com>
Message-ID: <200706130953.29221.rschulz@sonic.net>

On Wednesday 13 June 2007 09:54, Taras Tielkes wrote:
> Randall R Schulz wrote:
> > ...
> >
> > I have no specific information to give you, but if you decide to
> > embark on this, you might want to consider targeting IDEA 7.0,
> > since apparently the JetBrains people do not place a high value on
> > backward compatibility of the extension / plug-in API.
> >
> > I know, e.g., that the Groovy plug-in they're producing works only
> > on the early-access release of version 7.0.
>
> Can you give any specific examples where the API was broken in recent
> years? In my experience *a lot* of effort is put in maintaining
> compatibility. Jetbrains would certainly want to hear it if something
> is broken.

I found a plug-in that (is meant to) allow opening of files from the 
command line?something I find very handy and use with jEdit all the 
time. It won't work in IDEA 6.0 because of non-backward-compatible API 
changes.


> As for the new, in-development, Groovy plugin running only on 7.0:
> perhaps the implementation uses new API features from IDEA 7.0?

Perhaps.


> Rails 1.2 requires a fairly recent version of Ruby, does that mean it
> has bad backward compatibility?

I don't know, but backward and forward compatibility aren't the same 
thing.


My understanding is that the JetBrains people have decided, given their 
limited developer resources and their rather ambitious plans, that 
backward compatibility is something they're willing to sacrifice to 
make their jobs manageable. I don't have a problem with that (backward 
compatibility can be like a stone around a developer's neck), but it 
has its consequences.


> -tt


Randall Schulz

From parrt at cs.usfca.edu  Wed Jun 13 10:03:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Jun 2007 10:03:49 -0700
Subject: [antlr-interest] Australia having trouble getting book copies?
Message-ID: <DE17BA5B-7814-4C53-B147-150D4428F908@cs.usfca.edu>

hi, a few people have mentioned that local bookstores are claiming  
it'll be August before books appear.  Is this true?  The publisher  
wants to know.

Thanks,
Ter

From parrt at cs.usfca.edu  Wed Jun 13 10:11:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Jun 2007 10:11:30 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <200706130621.23950.rschulz@sonic.net>
References: <466EA6C0.4060802@acm.org> <466ED404.100@gmail.com>
	<528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>
	<200706130621.23950.rschulz@sonic.net>
Message-ID: <4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>


On Jun 13, 2007, at 6:21 AM, Randall R Schulz wrote:

> On Tuesday 12 June 2007 23:43, Jean Bovet wrote:
>> There is always a trade off between a complete and smooth integration
>> into IntelliJ and retaining as much work as possible: using the
>> custom language would require much work that has been already spent
>> in ANTLRWorks itself. But I would love to integrate ANTLRWorks more
>> into IntelliJ.... if anybody knows how to interact with IntelliJ,
>> please let me know.
>
> I have no specific information to give you, but if you decide to  
> embark
> on this, you might want to consider targeting IDEA 7.0, since
> apparently the JetBrains people do not place a high value on backward
> compatibility of the extension / plug-in API.
>
> I know, e.g., that the Groovy plug-in they're producing works only on
> the early-access release of version 7.0.

Hmm...yeah, and the larger the version, the slower.  And new bugs  
replace old ones. ;)

Ter


From patrick at patmas.net  Wed Jun 13 10:53:44 2007
From: patrick at patmas.net (Patrick Masselink)
Date: Wed, 13 Jun 2007 19:53:44 +0200
Subject: [antlr-interest] How to get number of children in a tree?
In-Reply-To: <b6077b530706130930l5e679470pd0486770d9fc73c0@mail.gmail.com>
References: <b6077b530706130930l5e679470pd0486770d9fc73c0@mail.gmail.com>
Message-ID: <200706131953.44556.patrick@patmas.net>

Hi Tim,

As far as I know this isn't possible in the way you imagine. 

funcCall: ^(FUNC_CALL ID expr*

The rules matches expr nodes, for which it calls the expr rule. There is no 
way for the funcCall rule to know how many expr nodes are in the tree, just 
that there are 0 or more.

What you need to do is add a label to the expr token like this:
funcCall: ^(FUNC_CALL ID v+=expr*
You can then process $v, which is a list of expr rule results, using actions. 
I'm not sure what exacly happens to v when there's no expr, so be sure to 
check if v is actually defined, to prevent nullpointers.

Another way, which might give you more possibilities (like manually iterating 
expressions in reverse order), is to add custom code to the treeparser using 
the codeblocks like @members and @init. You can add code in the output 
language just as if it were a normal source file. This means you can call 
functions in custom class files you wrote. Like make an MyExpression object 
for each matched expr token, add those to MyExpressions hashmap and reverse 
iterate that.

A third and most finegrained solution is to use multiple passes for AST 
generation, a subject I have yet to touch myself.

Hopefully one of the ANTLR guru's can confirm the above, as I'm fairly new to 
ANTLR myself and not entirely sure about possibly simpler solutions.

Regards, Patrick Masselink


On Wednesday 13 June 2007 18:30:39 Tim Clark wrote:
> Hi all
>
> In my parser (output=AST) I have two rules like this:
>
> exprList : expr (COMMA! expr)*  |  // Empty ;
>
> funcCall : ID LPAREN exprList RPAREN -> ^(FUNC_CALL ID exprList) ;
>
> So a sentence fragment like "foobar()" produces ^(FUNC_CALL foo)
>
> and one like "foobar(1,2,3)" produces ^(FUNC_CALL foo 1 2 3)
>
>
> In a later pass, a tree grammar has this:
>
> funcCall: ^(FUNC_CALL ID expr*
>      {
>        within this action, how can I get hold of the number of expressions?
>        or, indeed, iterate over the expressions themselves (say in reverse
> order)?
>      }
> );
>
> I hope that's clear enough for someone to help :)
>
> Regards, Tim



From ma_laver at ciise.concordia.ca  Wed Jun 13 11:06:57 2007
From: ma_laver at ciise.concordia.ca (=?UTF-8?B?TWFyYy1BbmRyw6kgTGF2ZXJkacOocmU=?=)
Date: Wed, 13 Jun 2007 14:06:57 -0400
Subject: [antlr-interest] Dealing with issues in non-greedy (.)*  rules
In-Reply-To: <F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>
References: <46436DB3.4040806@ciise.concordia.ca>	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>	<4648768C.1010405@ciise.concordia.ca>	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>	<466EADF2.7060304@ciise.concordia.ca>
	<F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>
Message-ID: <46703241.3070404@ciise.concordia.ca>

This is not the behavior I'm getting at all...

Terence Parr wrote:
> 
> On Jun 12, 2007, at 7:30 AM, Marc-Andr? Laverdi?re wrote:
> 
>> Hmm... I had to put this issue aside for a certain time, but now I'm 
>> back on it.
>>
>> I still have no idea what to do to make this work! If (.)+ won't do 
>> it, what will? I can't believe that Antlr isn't dealing with a random 
>> blob.
> 
> .+ works fine in the lexer and probably parser.  Consumes until it sees 
> what follows.
> 
>>
>> BTW, I'm generating code with AntlrWorks... is there any bug in its 
>> code generation vs the command-line utility?
> 
> nope same.
> 
> Ter

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4


From ma_laver at ciise.concordia.ca  Wed Jun 13 11:07:31 2007
From: ma_laver at ciise.concordia.ca (=?UTF-8?B?TWFyYy1BbmRyw6kgTGF2ZXJkacOocmU=?=)
Date: Wed, 13 Jun 2007 14:07:31 -0400
Subject: [antlr-interest] Dealing with issues in non-greedy (.)* rules
In-Reply-To: <20070612203719.2C26511EACE@www.antlr.org>
References: <46436DB3.4040806@ciise.concordia.ca>	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>	<4648768C.1010405@ciise.concordia.ca>	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>	<466EADF2.7060304@ciise.concordia.ca>	<F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu>
	<20070612203719.2C26511EACE@www.antlr.org>
Message-ID: <46703263.5040207@ciise.concordia.ca>

I'm not sure I understand what to do... what's a final lexer rule?

Gavin Lambert wrote:
> At 04:31 13/06/2007, Terence Parr wrote:
>  >.+ works fine in the lexer and probably parser.  Consumes
>  >until it sees what follows.
> 
> Yeah, but there is a difference.  In the lexer it consumes characters, 
> whereas in the parser it consumes tokens.  So when trying to match 
> characters that aren't otherwise assigned a token you need to use it in 
> the final lexer rule.

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4


From jimi at temporal-wave.com  Wed Jun 13 12:20:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Jun 2007 12:20:01 -0700
Subject: [antlr-interest] Dealing with issues in non-greedy (.)* rules
References: <46436DB3.4040806@ciise.concordia.ca>	<D7F1AFF5-6D60-400D-A55E-FF0A45EA5068@cs.usfca.edu>	<4648768C.1010405@ciise.concordia.ca>	<200705142148.l4ELmUuB025128@perseverance.services.encs.concordia.ca>	<466EADF2.7060304@ciise.concordia.ca>	<F5C58F1E-CC4F-469D-A548-CAD8169E0064@cs.usfca.edu><20070612203719.2C26511EACE@www.antlr.org>
	<46703263.5040207@ciise.concordia.ca>
Message-ID: <051466DAA0D608439E196797955018D76D77@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marc-Andr? Laverdi?re
> Sent: Wednesday, June 13, 2007 11:08 AM
> To: Gavin Lambert
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] Dealing with issues in non-greedy (.)*
> rules
> 
> I'm not sure I understand what to do... what's a final lexer rule?

When you have specified all other tokens, if you still have input sets that are not completely covered by the lexer tokens you have defined, you can add, as the last rule for your lexer:

UNKNOWN : . ;  // Your token name of course

You can then skip those characters, or you can have your own error message and so on. Otherwise you get a lexer "Mismatched character", which isn?t much use. You can override the lexer error processor too but it seems more natural (to me at least) to have a lexer that covers all possible character input, so you can see what happens to it by inspecting the grammar).

Jim





From robby at ksu.edu  Wed Jun 13 12:59:05 2007
From: robby at ksu.edu (Robby)
Date: Wed, 13 Jun 2007 14:59:05 -0500
Subject: [antlr-interest] Internal Error
Message-ID: <5db542c0706131259p7437f988y105982d683510cce@mail.gmail.com>

Hello,

I have been getting the following internal error from ANTLR/ANTLRWorks
(v.1.0.2) when checking my grammar (or when generating code):

error(10):  internal error:
org.antlr.tool.Grammar.createLookaheadDFA(Unknown Source): could not
even do k=1 for decision 5

What does the above message mean? Also, which one is decision 5?


Thanks,
Robby

From rschulz at sonic.net  Wed Jun 13 13:56:48 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 13 Jun 2007 13:56:48 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>
References: <466EA6C0.4060802@acm.org> <200706130621.23950.rschulz@sonic.net>
	<4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>
Message-ID: <200706131356.48986.rschulz@sonic.net>

On Wednesday 13 June 2007 10:11, Terence Parr wrote:
> On Jun 13, 2007, at 6:21 AM, Randall R Schulz wrote:
> > ..., you might want to consider targeting IDEA 7.0, since
> > apparently the JetBrains people do not place a high value on
> > backward compatibility of the extension / plug-in API.
> >
> > I know, e.g., that the Groovy plug-in they're producing works only
> > on the early-access release of version 7.0.
>
> Hmm...yeah, and the larger the version, the slower.  And new bugs
> replace old ones. ;)

Oh, come on. Bugs are the spice of life! Where would we be if software 
just did what it was supposed to do? Some kind of User's Paradise? 
Utopia? Heaven?


> Ter


Randall Schulz

From rerdavies at rogers.com  Wed Jun 13 14:21:58 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 13 Jun 2007 17:21:58 -0400
Subject: [antlr-interest] Bug with nested syntactic
	predicates?ReducedC#2.0 test grammar.
In-Reply-To: <001501c7adc1$0cdd46b0$c704a8c0@hercules>
References: <001501c7adc1$0cdd46b0$c704a8c0@hercules>
Message-ID: <447CDEC79768471A942D44564597EE68@GWB>

I looked at the sources. There don't appear to be disambiguating predicates
of any kind in the Java sources.

The issue may be more severe in C#, where there's a bona-fide language
ambiguity, that actually does require apredicate to disambiguate.

The ambiguity is:

    f(a<b,c>(7))  // function with one argument or two?  Generic member
call, or two boolean arguments?

and the full predicate test, required to disambiguate a<b,c>(7) -- per the
language standard -- depends on the character that follows (7).

I wasn't able to get the Java grammar to build in antlrworks (it locks up),
so I can't run specific tests.

fwiw, I was running the grammar-in-progress using "backtrack=true;" (but not
"k=2"), and I was getting inconsistent parses in this case. For example,

    f(a<b,c>d)

(legal c# 2.0) with the full grammar, with backtrack=true, no predicates,
would not parse. Should it? If so, maybe I'll see if I can isolate
production rules for that case.

Part of my personal challenge is that I'm running in a C# production
environment, and debugging through java code is .... um... challenging. Next
step for me was to debug through the generated code to see if I could
understand what's happening. Is there a way to obtain sources for the C#
runtime? This would greatly help with debugging. I do have the source, but I
haven't actually built it. Are the .cs files for the runtime auto-generated?



----- Original Message ----- 
From: "Micheal J" <open.zone at virgin.net>
To: "'ANTR Interest'" <antlr-interest at antlr.org>
Sent: Wednesday, June 13, 2007 9:45 AM
Subject: Re: [antlr-interest] Bug with nested syntactic
predicates?ReducedC#2.0 test grammar.


> Have you looked at how the Java equivalent handles this same issue?
> http://www.antlr.org/grammar/1152141644268/Java.g
>
> Micheal
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robin Davies
>> Sent: 13 June 2007 14:03
>> To: ANTR Interest
>> Subject: [antlr-interest] Bug with nested syntactic
>> predicates? ReducedC#2.0 test grammar.
>>
>>
>> The following grammar is a reduced test case to simulate
>> resolution of the
>> generic/expression ambiguity in C# 2.0 via syntactic
>> predicates. I can't get
>> it to work. I'm pretty sure it's a bug; but I'm still at the
>> "a little
>> knowledge is a dangerous thing" stage. It is  possible that I'm still
>> missing an essential concept wrt/ syntactic predicates. I've
>> been over
>> chapters 12-14 backwards and forwards, and I firmly believe
>> that the grammar
>> is correct.
>>
>> The conflict in C# is of the form
>>         methodCall(a<b,c>.StaticMethod())   // is a<b a
>> boolean expression
>> or the start of a generic type name)?
>>         methodCall(a<b,c>d)                         // is a<b
>> a boolean
>> expression or the start of a generic type name)?
>>
>> The intended resolution is: if it's a generic name (e.g.
>> a<b,c>) then it's a
>> generic name. The second case should be treated as an error.
>> (The actual
>> rule in the standard is a bit more unpleasant, requiring an
>> ad-hoc pre-scan
>> of incoming tokens as a semantic predicate to locate a
>> probably-matching '>'
>> token).
>>
>> Test input is:
>>     List<int,int>
>>
>> In ANTLRWorks, this succesfully and correctly parses as an
>> expr3, and a
>> generic_type_expr, but fails to parse as an expr. The
>> question is: why isn't
>> the first option of the expr production taken for the given
>> test input,
>> since it is a valid generic_type_expr?
>>
>> expr
>>     :    (generic_type_expr)=>   // e.g. generic   List<int>
>>          expr3    // bypass LT/GT expressions
>>     |     (expr3 LT  expr3)=> (expr3 LT expr3)  //
>> (non-assoc, for clarity)
>>     |     (expr3 GT expr3)=> (expr3 GT expr3)
>>     |     (expr3)=> expr3
>>     ;
>>
>> I've seen various behaviors depending on the state of my test
>> grammar. In
>> the supplied grammar -- if AntlrWorks is displaying syntactic
>> predicate
>> evaluation properly -- the (generic_type_expr) syntactic
>> predicate doesn't
>> seem to get run at all. But I've also seen cases where
>> (generic_type_expr)=>
>> succeeds, and expr3 fails for this input. And cases where an apparent
>> pre-scan for generic_type_expr accepts "List<int,int", and
>> then fails,
>> despite the fact that the next token is the expected ">" token.
>>
>> If I remove either of the LT or GT rules, the parse succeeds
>> (probably
>> through option 4). But shouldn't the semantic predicate in
>> the first option
>> prevent options 2 and 3 from running in the intact grammar?
>>
>> The full grammar is attached. I've done my best to simplify
>> it as much as
>> possible.
>>
>> As an aside,  "!=>" would be a very useful construct in
>> ANTLR, allowing the
>> following rule to cut off the '<' binary operator, in
>> left-associative
>> comparison expressions.
>>
>> comparison_expr:   expr_next
>>                                     (
>>                                         ( (generic_arg_list)!=> '<'
>> expr_next)
>>                                     |   ('>' expr_next)
>>                                     )*
>>                             ;
>>
>> The nightmarish input case for this:   a < b <
>> G<int,int>.StaticBoolMember()
>> (a valid, but not very useful C# expression, I think; == != are
>> non-associative (good thing), but <, > are right-assoc, for
>> some bizarre
>> reason).
>>
>> Any help appreciated.
>>
>>
>>
>>
>


From rerdavies at rogers.com  Wed Jun 13 14:41:44 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 13 Jun 2007 17:41:44 -0400
Subject: [antlr-interest] Bug with nested
	syntacticpredicates?ReducedC#2.0 test grammar.
In-Reply-To: <447CDEC79768471A942D44564597EE68@GWB>
References: <001501c7adc1$0cdd46b0$c704a8c0@hercules>
	<447CDEC79768471A942D44564597EE68@GWB>
Message-ID: <2C880E46B2474EDBB4872E692F2EC729@GWB>

A clue to the problem:

Evaluating f(a<b,c>d) on the fnargs rule in the grammar produces an aray 
index exception in both java and c# targets:

Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: -1
 at org.antlr.runtime.DFA.predict(Unknown Source)
 at testParser.expr4(testParser.java:370)
 at testParser.expr3(testParser.java:287)
 at testParser.synpred3_fragment(testParser.java:763)
 at testParser.synpred3(testParser.java:925)
 at testParser$DFA2.specialStateTransition(testParser.java:1327)
 at org.antlr.runtime.DFA.predict(Unknown Source)
 at testParser.expr(testParser.java:155)
 at testParser.fnargs(testParser.java:99)
 at __Test__.main(__Test__.java:14)

>From the C# target, it's the predicate in expr4 that throws the error. But I 
don't have sources for hte runtime, so that's as far as I can get.




----- Original Message ----- 
From: "Robin Davies" <rerdavies at rogers.com>
To: "'ANTR Interest'" <antlr-interest at antlr.org>
Sent: Wednesday, June 13, 2007 5:21 PM
Subject: Re: [antlr-interest] Bug with nested 
syntacticpredicates?ReducedC#2.0 test grammar.


>I looked at the sources. There don't appear to be disambiguating predicates
> of any kind in the Java sources.
>
> The issue may be more severe in C#, where there's a bona-fide language
> ambiguity, that actually does require apredicate to disambiguate.
>
> The ambiguity is:
>
>    f(a<b,c>(7))  // function with one argument or two?  Generic member
> call, or two boolean arguments?
>
> and the full predicate test, required to disambiguate a<b,c>(7) -- per the
> language standard -- depends on the character that follows (7).
>
> I wasn't able to get the Java grammar to build in antlrworks (it locks 
> up),
> so I can't run specific tests.
>
> fwiw, I was running the grammar-in-progress using "backtrack=true;" (but 
> not
> "k=2"), and I was getting inconsistent parses in this case. For example,
>
>    f(a<b,c>d)
>
> (legal c# 2.0) with the full grammar, with backtrack=true, no predicates,
> would not parse. Should it? If so, maybe I'll see if I can isolate
> production rules for that case.
>
> Part of my personal challenge is that I'm running in a C# production
> environment, and debugging through java code is .... um... challenging. 
> Next
> step for me was to debug through the generated code to see if I could
> understand what's happening. Is there a way to obtain sources for the C#
> runtime? This would greatly help with debugging. I do have the source, but 
> I
> haven't actually built it. Are the .cs files for the runtime 
> auto-generated?
>
>
>
> ----- Original Message ----- 
> From: "Micheal J" <open.zone at virgin.net>
> To: "'ANTR Interest'" <antlr-interest at antlr.org>
> Sent: Wednesday, June 13, 2007 9:45 AM
> Subject: Re: [antlr-interest] Bug with nested syntactic
> predicates?ReducedC#2.0 test grammar.
>
>
>> Have you looked at how the Java equivalent handles this same issue?
>> http://www.antlr.org/grammar/1152141644268/Java.g
>>
>> Micheal
>>
>> -----------------------
>> The best way to contact me is via the list/forum. My time is very 
>> limited.
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org
>>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robin Davies
>>> Sent: 13 June 2007 14:03
>>> To: ANTR Interest
>>> Subject: [antlr-interest] Bug with nested syntactic
>>> predicates? ReducedC#2.0 test grammar.
>>>
>>>
>>> The following grammar is a reduced test case to simulate
>>> resolution of the
>>> generic/expression ambiguity in C# 2.0 via syntactic
>>> predicates. I can't get
>>> it to work. I'm pretty sure it's a bug; but I'm still at the
>>> "a little
>>> knowledge is a dangerous thing" stage. It is  possible that I'm still
>>> missing an essential concept wrt/ syntactic predicates. I've
>>> been over
>>> chapters 12-14 backwards and forwards, and I firmly believe
>>> that the grammar
>>> is correct.
>>>
>>> The conflict in C# is of the form
>>>         methodCall(a<b,c>.StaticMethod())   // is a<b a
>>> boolean expression
>>> or the start of a generic type name)?
>>>         methodCall(a<b,c>d)                         // is a<b
>>> a boolean
>>> expression or the start of a generic type name)?
>>>
>>> The intended resolution is: if it's a generic name (e.g.
>>> a<b,c>) then it's a
>>> generic name. The second case should be treated as an error.
>>> (The actual
>>> rule in the standard is a bit more unpleasant, requiring an
>>> ad-hoc pre-scan
>>> of incoming tokens as a semantic predicate to locate a
>>> probably-matching '>'
>>> token).
>>>
>>> Test input is:
>>>     List<int,int>
>>>
>>> In ANTLRWorks, this succesfully and correctly parses as an
>>> expr3, and a
>>> generic_type_expr, but fails to parse as an expr. The
>>> question is: why isn't
>>> the first option of the expr production taken for the given
>>> test input,
>>> since it is a valid generic_type_expr?
>>>
>>> expr
>>>     :    (generic_type_expr)=>   // e.g. generic   List<int>
>>>          expr3    // bypass LT/GT expressions
>>>     |     (expr3 LT  expr3)=> (expr3 LT expr3)  //
>>> (non-assoc, for clarity)
>>>     |     (expr3 GT expr3)=> (expr3 GT expr3)
>>>     |     (expr3)=> expr3
>>>     ;
>>>
>>> I've seen various behaviors depending on the state of my test
>>> grammar. In
>>> the supplied grammar -- if AntlrWorks is displaying syntactic
>>> predicate
>>> evaluation properly -- the (generic_type_expr) syntactic
>>> predicate doesn't
>>> seem to get run at all. But I've also seen cases where
>>> (generic_type_expr)=>
>>> succeeds, and expr3 fails for this input. And cases where an apparent
>>> pre-scan for generic_type_expr accepts "List<int,int", and
>>> then fails,
>>> despite the fact that the next token is the expected ">" token.
>>>
>>> If I remove either of the LT or GT rules, the parse succeeds
>>> (probably
>>> through option 4). But shouldn't the semantic predicate in
>>> the first option
>>> prevent options 2 and 3 from running in the intact grammar?
>>>
>>> The full grammar is attached. I've done my best to simplify
>>> it as much as
>>> possible.
>>>
>>> As an aside,  "!=>" would be a very useful construct in
>>> ANTLR, allowing the
>>> following rule to cut off the '<' binary operator, in
>>> left-associative
>>> comparison expressions.
>>>
>>> comparison_expr:   expr_next
>>>                                     (
>>>                                         ( (generic_arg_list)!=> '<'
>>> expr_next)
>>>                                     |   ('>' expr_next)
>>>                                     )*
>>>                             ;
>>>
>>> The nightmarish input case for this:   a < b <
>>> G<int,int>.StaticBoolMember()
>>> (a valid, but not very useful C# expression, I think; == != are
>>> non-associative (good thing), but <, > are right-assoc, for
>>> some bizarre
>>> reason).
>>>
>>> Any help appreciated.
>>>
>>>
>>>
>>>
>>
> 


From dirty at apple.com  Wed Jun 13 16:19:55 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 13 Jun 2007 16:19:55 -0700
Subject: [antlr-interest] Bug using rule action?
Message-ID: <B266D929-9B62-4ACE-9E1E-6DA5BA1C8003@apple.com>

I'm trying to add an action to one of my rules and I'm seeing some  
strange behavior:

grammar Test;

options {
	output = AST;
	ASTLabelType = CommonTree;
}

tokens {
	SIZE_DEFAULT;
	SIZE_8;
}

r
	:	number_size+ EOF
	;

SIZE_8_QUALIFIER
	:	'.' 'U'? 'B'
	;

size_qualifier
	:	SIZE_8_QUALIFIER		-> SIZE_8
	|							-> SIZE_DEFAULT
	;

number_size
	:	num = NUMBER size = size_qualifier {
			// Validate that NUMBER fits within the size qualifier.
			System.out.printf( "!\%s, !\%s\n", $num.toString(), $size.getTree 
().toString() );
		} -> size_qualifier NUMBER
	;

NUMBER
	:	'-'? ( '0' | '1'..'9' '0'..'9'*)
	;

If I try to run this through ANTLR, I get an error:

error(116): Test.g:30:39: unknown attribute for rule size_qualifier:  
getTree

When I examine TestParser.java, I see that "$size" is still there.   
If I change the action, to remove the $ character, then it works:

			System.out.printf( "!\%s, !\%s\n", $num.toString(), size.getTree 
().toString() );

Why do I have to do this?  How come $num correctly causes a local  
variable named num to be created, but not $size?

Cameron Esfahani
dirty at apple.com

"All that is necessary for the triumph of evil is that good men do  
nothing."

Edmund Burke



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/67bb1e23/attachment-0001.html 

From parrt at cs.usfca.edu  Wed Jun 13 16:41:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Jun 2007 16:41:10 -0700
Subject: [antlr-interest] Sydney ANTLR lecture, change of venue
Message-ID: <62DF3534-DE0C-4EB4-AA4E-CC76722CD71C@cs.usfca.edu>

Hi.  Please be aware that the venue has changed: the new venue is in  
Atlassian's new offices on the ground floor of:

173-185 Sussex Street
Sydney, NSW, 2000
Australia

Google Map reference is http://tinyurl.com/yu9hh8

Same time as already advertised: 6:00pm for beer and pizza, 6:30 start

---------------
Our speaker is Terence Parr, a professor of computer science and  
graduate program director at the University of San Francisco where he  
builds programming language tools such as ANTLR and StringTemplate.  
Terence has consulted for and held various technical positions at  
companies such as IBM, Lockheed Missiles and Space, NeXT, and Renault  
Automation.  Terence holds a Ph.D. in Computer Engineering from  
Purdue University and was a postdoctoral fellow at the Army High- 
Performance Computing Research Center at the University of Minnesota  
where he built parallelizing FORTRAN source-to-source translators.

ANTLR is a popular public domain parser generator built in Java.  
ANTLR is used internally by many open source projects including  
Hibernate, JBoss, Checkstyle and many more. It is also used in many  
commercial tools such as IntelliJ IDEA, Clover, FishEye, BEA/ 
Weblogic, Apples iWeb, Tivoli and others.

Terence will give a brief introduction to ANTLR and the new features  
in the recently released v3. He'll then demonstrate ANTLR's ease of  
use in solving common parsing problems, including processing config  
file formats, designing and parsing DSLs, and processing/translating  
programming language source files. He'll also demonstrate ANTLRWorks,  
a sophisticated GUI development environment for writing and debugging  
ANTLR grammars.



From jimi at temporal-wave.com  Wed Jun 13 16:43:04 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Jun 2007 16:43:04 -0700
Subject: [antlr-interest] Sydney ANTLR lecture, change of venue
References: <62DF3534-DE0C-4EB4-AA4E-CC76722CD71C@cs.usfca.edu>
Message-ID: <051466DAA0D608439E196797955018D76D82@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr

> Same time as already advertised: 6:00pm for beer and pizza, 6:30 start

30 minutes for beer? Are you sure you are going to the same Australia
that I go to? Hmm, mind you, it doesn't say that you the beer ends at
06;430, so you probably are.

Jim

From parrt at cs.usfca.edu  Wed Jun 13 16:54:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Jun 2007 16:54:31 -0700
Subject: [antlr-interest] Sydney ANTLR lecture, change of venue
In-Reply-To: <051466DAA0D608439E196797955018D76D82@wavemachine.temporal-wave.com>
References: <62DF3534-DE0C-4EB4-AA4E-CC76722CD71C@cs.usfca.edu>
	<051466DAA0D608439E196797955018D76D82@wavemachine.temporal-wave.com>
Message-ID: <8BD20D92-BA53-4EA5-B210-42F92F69529E@cs.usfca.edu>

On Jun 13, 2007, at 4:43 PM, Jim Idle wrote:
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Terence Parr
>
>> Same time as already advertised: 6:00pm for beer and pizza, 6:30  
>> start
>
> 30 minutes for beer? Are you sure you are going to the same Australia
> that I go to? Hmm, mind you, it doesn't say that you the beer ends at
> 06;430, so you probably are.

Have no fear, Jim.  Aussie reputation is safe, if the lunatics at  
cenqua.com are any indication.  These guys drink coffee and beer in  
opposite hands all night from what I can tell.  That 30 minutes is  
just enough beer to get people through my boring lecture.  The real  
party happens afterwards, I think. ;)  I'm a lightweight, mind you.   
Heck, I can even only process 1.5 cups of coffee a day these days. : 
(  I can eat like a champ though! ;)  Bring on the American food  
portions! ;)

Oh, I've asked PragProg to ship 10 ANTLR books direct to cenqua.com  
so I can give out (at cost) at the lecture.

Ter
PS	only a few more hours before I have to run to the scareport.  I  
keep watching the seats online and just bounced from main deck to a  
sweet quiet seat in upper deck.  Parrrrrrr-t, mate!  Will try to  
upgrade to a first class seat even if I have to promise unspeakable  
horrors. ;)  14h40m is a looong flight.


From rschulz at sonic.net  Wed Jun 13 17:32:47 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 13 Jun 2007 17:32:47 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>
References: <466EA6C0.4060802@acm.org> <200706130621.23950.rschulz@sonic.net>
	<4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>
Message-ID: <200706131732.47842.rschulz@sonic.net>

On Wednesday 13 June 2007 10:11, Terence Parr wrote:
> ...
>
> Hmm...yeah, and the larger the version, the slower.  And new bugs
> replace old ones. ;)

By the way, does that apply to _all_ software? ANTLR included?


> Ter


RRS

From parrt at cs.usfca.edu  Wed Jun 13 17:39:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Jun 2007 17:39:15 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <200706131732.47842.rschulz@sonic.net>
References: <466EA6C0.4060802@acm.org> <200706130621.23950.rschulz@sonic.net>
	<4E6B1F1D-3941-4976-82F4-7A22CEDABFA5@cs.usfca.edu>
	<200706131732.47842.rschulz@sonic.net>
Message-ID: <80CDCDB2-7CA4-42FA-9C23-7C4960B6909D@cs.usfca.edu>


On Jun 13, 2007, at 5:32 PM, Randall R Schulz wrote:

> On Wednesday 13 June 2007 10:11, Terence Parr wrote:
>> ...
>>
>> Hmm...yeah, and the larger the version, the slower.  And new bugs
>> replace old ones. ;)
>
> By the way, does that apply to _all_ software? ANTLR included?

ha! ;) LOL.  Well, could be.  I've tried to avoid the "second system"  
affect [Brooks, Mythical Man Month].  Generated recognizers are much  
faster.  Analysis is harder though, causing ANTLR to be slower, but  
at least it's not slow as hell when you type! ;)  I try to make speed  
proportional or at least related to functionality.  More power, a bit  
slower.  Surprisingly few nasty bugs reported so far after first  
release. Long beta helped I guess.  v3 is a complete rewrite so i  
can't expect to have fewer bugs.  Intellij should hopefully not  
introduce new bugs in old features.  I also suspect that we never use  
90% of the huge feature set (like Word).

That said, it's the best IDE I've ever used. :)  that's why i like  
it.  I put up with quirks to get the right functionality.

Ter


From pdhar at tibco.com  Wed Jun 13 18:02:43 2007
From: pdhar at tibco.com (Pranab Dhar)
Date: Wed, 13 Jun 2007 18:02:43 -0700
Subject: [antlr-interest] Antlrworks quirky behaviour ?
Message-ID: <B5ACD5B0D63ABA4FB1A1B6C467964FBD0643CB54@NA-PA-VBE01.na.tibco.com>

Hi,

        I am noticing a weird behaviour in antlrworks. It is with this
grammar while building the AST.

 

 

postfixOp:

      '.'

      | '@'

;

postfixExpr :

      (

          primaryExpr -> primaryExpr

      )

    (

        (lc=TOK_LBRACK i=index TOK_RBRACK) ->
^(ARRAY_INDEX[$lc,"ARRAY_INDEX"] $postfixExpr $i)

        |

        (

               p=postfixOp  li=labelIdentifier

               (

                   al=argList ->
^(FUNCTION_EXPRESSION[$li.start,"FUNCTION_EXPRESSION"] ^($p $postfixExpr
$li) $al )

 

                   |   /* NOTHING */  -> ^($p $postfixExpr $li)

               )

        )

    )*

    ;

 

When I use the grammar above the AST tree shown in antlrworks does not
show the tree below the FUNCTION_EXPRESSION while the stringTree is
correctly shown as a result of the  getTree() api call.

(PROJECTION (ALIAS_CLAUSE (FUNCTION_EXPRESSION (. Datetime now)
ARG_LIST)))

 

When the grammar is modified to remove the AST rewrite rules and use ^ |
operators the tree is shown  correctly in the antlrworks.

 

The dilemma is which one to believe is correct.

 

Pranab

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070613/c64161a7/attachment.html 

From rschulz at sonic.net  Wed Jun 13 18:29:57 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 13 Jun 2007 18:29:57 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <80CDCDB2-7CA4-42FA-9C23-7C4960B6909D@cs.usfca.edu>
References: <466EA6C0.4060802@acm.org> <200706131732.47842.rschulz@sonic.net>
	<80CDCDB2-7CA4-42FA-9C23-7C4960B6909D@cs.usfca.edu>
Message-ID: <200706131829.58062.rschulz@sonic.net>

On Wednesday 13 June 2007 17:39, Terence Parr wrote:
> On Jun 13, 2007, at 5:32 PM, Randall R Schulz wrote:
> > On Wednesday 13 June 2007 10:11, Terence Parr wrote:
> >> ...
> >>
> >> Hmm...yeah, and the larger the version, the slower.  And new bugs
> >> replace old ones. ;)
> >
> > By the way, does that apply to _all_ software? ANTLR included?
>
> ha! ;) LOL.  Well, could be.  I've tried to avoid the "second system"
> affect [Brooks, Mythical Man Month].

Oh, yeah. I know about it.

Funny story: A few years back, I had a disk crash wipe out months worth 
of work (yeah, yeah, what kind of programmer doesn't do back-ups?this 
kind, apparently) and when I reimplemented all the work I'd lost back 
to the most recent back-up, the result was distinctly superior. The 
whole project was largely experimental, and I could use what I'd 
learned the first time around to make the second attempt better.


> ...

I believe in progress. The new is often better than what it replaces. 
Not always, but then, not all engineers are good ones.


> That said, it's the best IDE I've ever used. :)  that's why i like
> it.  I put up with quirks to get the right functionality.

You mean IDEA? I'd have to agree. But then, of all the many I've tried, 
it's the only one worth using at all!


> Ter


Randall Schulz

From robby at ksu.edu  Wed Jun 13 19:19:29 2007
From: robby at ksu.edu (Robby)
Date: Wed, 13 Jun 2007 21:19:29 -0500
Subject: [antlr-interest] Internal Error
In-Reply-To: <5db542c0706131259p7437f988y105982d683510cce@mail.gmail.com>
References: <5db542c0706131259p7437f988y105982d683510cce@mail.gmail.com>
Message-ID: <5db542c0706131919i66aef605h58afbb0b78a2816e@mail.gmail.com>

Hmm. This is very strange. This error does not appear if I use another
machine with a similar setup (Mac OS X 10.4.9, Java 1.5.0_07,
ANTRWorks 1.0.2). I'm not sure what's going on here.

Anyone?


Thanks,
Robby

On 6/13/07, Robby <robby at ksu.edu> wrote:
> Hello,
>
> I have been getting the following internal error from ANTLR/ANTLRWorks
> (v.1.0.2) when checking my grammar (or when generating code):
>
> error(10):  internal error:
> org.antlr.tool.Grammar.createLookaheadDFA(Unknown Source): could not
> even do k=1 for decision 5
>
> What does the above message mean? Also, which one is decision 5?
>
>
> Thanks,
> Robby
>

From win at wincent.com  Thu Jun 14 03:22:57 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 14 Jun 2007 12:22:57 +0200
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the C
	target
Message-ID: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>

Much like the Python example on page 110 of the ANTLR book, I think I  
am in a situation where my lexer will have to emit additional  
imaginary tokens in order to help the parser. Would be easy but as  
the book explains, this requires you to emit multiple tokens per  
rule, and ANTLR is built with the assumption that you'll emit exactly  
one token at a time.

As noted in the book and in the ANTLR source code it "[c]urrently  
does not support multiple emits per nextToken invocation for  
efficiency reasons. Subclass and override this method and nextToken  
(to push tokens into a list and pull from that list rather than a  
single variable as this implementation does)."

The idea of "subclassing" in the C language target doesn't sound like  
it will be very much fun, although I am sure it is possible. Before I  
go down this path I wanted to ask if anyone is doing multiple token  
emission using the C target?

My current analysis suggests that I will have to do these things:

1. Override the emit() and emitNew() functions (defined in  
antlr3lexer.c) to push tokens onto a list (pANTLR3_LIST type) rather  
than store them in a single variable. Looking at the Java source code  
it looks like overriding one of the emit methods would be enough  
(because one calls the other), but in the C target case it looks like  
both would need to be overridden (Jim, I think you should probably  
change emit() to call emitNew() rather than doing "lexer->token =  
token;" for this very reason).

2. Override the nextToken() function (again defined in antlr3lexer.c)  
to pop a token off the list rather than look for it in a single  
variable. nextToken() would only actually call mTokens() when the  
list is empty.

Here "override" means write new functions (and stick them in my  
@lexer::members section, I guess) and at some point update the lexer  
to point to the new implementations (after antlr3LexerNew has been  
called); I guess I do this in the code where I instantiate my lexer:

pMyLexer = MyLexerNew(stream);
pMyLexer->pLexer->tokSource->emit = mySpecialEmitFunction;
pMyLexer->pLexer->tokSource->nextToken = mySpecialNextTokenFunction;

Anyway, before I go down this possibly painful track wanted to ask if  
anyone has done this before with the C target: don't want to have to  
re-invent the wheel...

Cheers,
Wincent





From antlr at mirality.co.nz  Thu Jun 14 03:48:24 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Jun 2007 22:48:24 +1200
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
 C target
In-Reply-To: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
Message-ID: <20070614104832.6231911E9E2@www.antlr.org>

At 22:22 14/06/2007, Wincent Colaiuta wrote:
 >(Jim, I think you should probably change emit() to
 >call emitNew() rather than doing "lexer->token =
 >token;" for this very reason).

Actually, I think it'd make more sense for emitNew() to call 
emit(), since the first constructs a new token then emits it while 
the second only emits an existing token.


From alessnet at gmail.com  Thu Jun 14 04:07:09 2007
From: alessnet at gmail.com (Alessandro)
Date: Thu, 14 Jun 2007 13:07:09 +0200
Subject: [antlr-interest] bug or strange behaviour in rewrite operator ?
In-Reply-To: <4D2CA051-EDA2-4AAB-B682-EB1A5DB94A68@cs.usfca.edu>
References: <be9e4140706090607m4a48a267g5debb7036149fca4@mail.gmail.com>
	<4D2CA051-EDA2-4AAB-B682-EB1A5DB94A68@cs.usfca.edu>
Message-ID: <be9e4140706140407q2dab7d6dp496ecaf2f4d54f7b@mail.gmail.com>

Hello,

I have also another problem with this rule : ( I replaced
"stream_prog" with "stream_retval" because of the bug quoted above)

prog:
       ((func  | (decvar SEMI)) -> $prog? func? decvar? )*
       -> ^(PROG_DEC $prog?);

This rule always catch the first result of "func" and "decvar" because
the generated code includes stream_func.reset() and
stream_decvar.reset().

So if you have "decvar(1) decvar(2) func" at the input, your output
will be "decvar(1) decvar(1) func decvar(1)"

If you change de rule with this (equivalent ?!) rule  :

prog:
       ((func -> $prog? func | (decvar SEMI) -> $prog? decvar))*
       -> ^(PROG_DEC $prog?);

there is neither stream_decvar.reset(), nor stream_func.reset() in the
generated code.
So the output is correct.

is this normal ?

Thanks


On 6/9/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> ooops. looks like a bug. added
>
> http://www.antlr.org:8888/browse/ANTLR-135
>
> Ter
> On Jun 9, 2007, at 6:07 AM, Alessandro wrote:
>
> > Hello,
> >
> > When I use $rule? the code generated seems to be not correct.
> > Here is a example :
> >
> > prog:
> >       (func | (decvar SEMI) -> $prog? func? decvar? )*
> >       -> ^(PROG_DEC $prog)
> > ;
> >
> > The code generated for ($prog)? is :
> >
> > // ( $prog)?
> > if ( stream_prog.hasNext() ) {
> >   adaptor.addChild(root_0, stream_retval.next());
> > }
> > stream_prog.reset();
> >
> > the variable stream_prog does not exist, the correct variable is
> > "stream_retval".
> > Is it a bug ?
> >
> > Thanks,
> >
> > Alessandro
>
>

From win at wincent.com  Thu Jun 14 04:25:16 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 14 Jun 2007 13:25:16 +0200
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
	C target
In-Reply-To: <20070614104832.6231911E9E2@www.antlr.org>
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
	<20070614104832.6231911E9E2@www.antlr.org>
Message-ID: <7F434427-A675-431D-AD08-8D71C3C05FDF@wincent.com>

El 14/6/2007, a las 12:48, Gavin Lambert escribi?:

> At 22:22 14/06/2007, Wincent Colaiuta wrote:
> >(Jim, I think you should probably change emit() to
> >call emitNew() rather than doing "lexer->token =
> >token;" for this very reason).
>
> Actually, I think it'd make more sense for emitNew() to call emit 
> (), since the first constructs a new token then emits it while the  
> second only emits an existing token.

Actually, emitNew emits an existing token and emit constructs a new  
token:

static void emitNew         (pANTLR3_LEXER lexer,   
pANTLR3_COMMON_TOKEN token)
{
     lexer->token    = token;    /* Voila!   */
}

static pANTLR3_COMMON_TOKEN
emit        (pANTLR3_LEXER lexer)
{
     pANTLR3_COMMON_TOKEN        token;

     /* We could check pointers to token factories and so on, but
      * we are in code that we want to run as fast as possible
      * so we are not checking any errors. So make sure you have  
installed an input stream before
      * trying to emit a new token.
      */
     token   = lexer->tokFactory->newToken(lexer->tokFactory);

     /* Install the supplied information, and some other bits we  
already know
      * get added automatically, such as the input stream it is  
assoicated with
      * (though it can all be overridden of course)
      */
     token->type             = lexer->type;
     token->channel          = lexer->channel;
     token->start            = lexer->tokenStartCharIndex;
     token->stop             = lexer->getCharIndex(lexer) - 1;
     token->line             = lexer->tokenStartLine;
     token->charPosition     = lexer->tokenStartCharPositionInLine;
     token->text             = lexer->text;

     lexer->token            = token;

     return  token;
}

Cheers,
Wincent


From antlr at mirality.co.nz  Thu Jun 14 04:41:47 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 14 Jun 2007 23:41:47 +1200
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
 C target
In-Reply-To: <7F434427-A675-431D-AD08-8D71C3C05FDF@wincent.com>
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
	<20070614104832.6231911E9E2@www.antlr.org>
	<7F434427-A675-431D-AD08-8D71C3C05FDF@wincent.com>
Message-ID: <20070614114156.15BC211E9E0@www.antlr.org>

At 23:25 14/06/2007, Wincent Colaiuta wrote:
 >Actually, emitNew emits an existing token and emit
 >constructs a new token:
 >
 >static void emitNew         (pANTLR3_LEXER lexer,
 >pANTLR3_COMMON_TOKEN token)
[...]
 >static pANTLR3_COMMON_TOKEN
 >emit        (pANTLR3_LEXER lexer)

Innnteresting.  In the version I've got it's the other way around 
(but then I haven't downloaded the release yet; I still have one 
of the betas):

static void  emit (pANTLR3_LEXER lexer, pANTLR3_COMMON_TOKEN 
token);
static void  emitNew(pANTLR3_LEXER lexer,  ANTLR3_UINT32 ttype,
             ANTLR3_UINT64 line,     ANTLR3_UINT32 charPosition,
             ANTLR3_UINT32 channel,
             ANTLR3_UINT64 start,    ANTLR3_UINT64 stop
               );

The names make more sense to me this way around.  Though I guess 
it makes life easier not having to pass in all those parameters :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070614/d861fc23/attachment.html 

From jimi at temporal-wave.com  Thu Jun 14 07:15:26 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 07:15:26 -0700
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
	Ctarget
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76D85@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-


> Much like the Python example on page 110 of the ANTLR book, I think I
> am in a situation where my lexer will have to emit additional
> imaginary tokens in order to help the parser. Would be easy but as
> the book explains, this requires you to emit multiple tokens per
> rule, and ANTLR is built with the assumption that you'll emit exactly
> one token at a time.
>
> The idea of "subclassing" in the C language target doesn't sound like
> it will be very much fun, although I am sure it is possible. Before I
> go down this path I wanted to ask if anyone is doing multiple token
> emission using the C target?

Well, first of all, I designed the C runtime so that the subclassing
thing was very easy, so all you have to do is write your own nextToken()
function and after the parser is created, install it and you are done,
you have worked out the code yourself.

> 
> My current analysis suggests that I will have to do these things:
> 
> 1. Override the emit() and emitNew() functions (defined in
> antlr3lexer.c) to push tokens onto a list (pANTLR3_LIST type) rather


> both would need to be overridden (Jim, I think you should probably
> change emit() to call emitNew() rather than doing "lexer->token =
> token;" for this very reason).

I will look again, but I don't think so. The lexer->token is only what
the rule sets up for picking up and adding to the token list - if you
need a new mechanism to emit multiple tokens, then you would not use
that at all anyway.

However, I would be surprised if you actually did need to do this. I am
not even sure that Ter did this on the Python example because it was the
only way to deal with the stupid indent (I have not really looked at
that problem), but what makes you think that you need to emit two tokens
from a single rule rather than have two rules?

Secondly, if it is just one rule, then you can probably just hijack the
code that picks this up in the first place an add it to the pre-existing
list anyway, then emit the second token as normal.

Jim

From jimi at temporal-wave.com  Thu Jun 14 07:22:59 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 07:22:59 -0700
Subject: [antlr-interest] bug or strange behaviour in rewrite operator ?
References: <be9e4140706090607m4a48a267g5debb7036149fca4@mail.gmail.com><4D2CA051-EDA2-4AAB-B682-EB1A5DB94A68@cs.usfca.edu>
	<be9e4140706140407q2dab7d6dp496ecaf2f4d54f7b@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76D86@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alessandro


> I have also another problem with this rule : ( I replaced
> "stream_prog" with "stream_retval" because of the bug quoted above)
> 
> prog:
>        ((func  | (decvar SEMI)) -> $prog? func? decvar? )*
>        -> ^(PROG_DEC $prog?);
> 
> This rule always catch the first result of "func" and "decvar" because
> the generated code includes stream_func.reset() and
> stream_decvar.reset().

What are you trying to produce with this rule? Assuming that it is the
whole rule, you effectively have an empty rule sometimes and then are
trying to write two trees. Basically this just does not look correct. I
would strongly recommend the book, but it looks like you need to put
your rewrite rules after func and decvar SEMI respectively and maybe
move the * qualifier up one rule to  something: prog* ;


Jim


From henryb at ntlworld.com  Thu Jun 14 07:29:40 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu, 14 Jun 2007 15:29:40 +0100
Subject: [antlr-interest] FOR LOOP
Message-ID: <467150D4.6080209@ntlworld.com>

Hi Guys,
Im using C++ ,antlr 2.7.6.
Am having trouble implementing for loops in the parser

This is whats in the parser

for_stmt:
     FOR^ LPAREN! (e1:expr)? SEMI! (e2:expr)? SEMI! (e3:expr)? RPAREN! 
st:statement
         { if(#e1==NULL)  #e1 = #([ NULL_NODE, "null_stmt"]);
           if(#e2==NULL)  #e2 = #([ NULL_NODE, "null_stmt"]);
           if(#e3==NULL)  #e3 = #([ NULL_NODE, "null_stmt"]);
           #for_stmt=#(#[FOR,"for"],e1,e2,e3,st);
         }
     ;

Antlr parses the code , but when I compile I get problems 

The code of the last line is:

for_stmt_AST=ANTLR_USE_NAMESPACE(antlr)RefAST(astFactory->make((new 
ANTLR_USE_NAMESPACE(antlr)ASTArray(5))->add(astFactory->create(tmp20_AST,"for"))->add(e1_AST)->add(e2_AST)->add(e3_AST)->add(st_AST)));
   
The problem it seems that create is expecting tmp20_AST to be an int 
Token when in fact tmp20_AST is an AST node

Has anyone experienced any thing like this ? Am I just being dense ?

Many Thx
Henry

From jimi at temporal-wave.com  Thu Jun 14 07:43:25 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 07:43:25 -0700
Subject: [antlr-interest] Emitting (additional) imaginary tokens in theC
	target
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com><20070614104832.6231911E9E2@www.antlr.org>
	<7F434427-A675-431D-AD08-8D71C3C05FDF@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76D87@wavemachine.temporal-wave.com>

This just reflects the way the java is constructed - you have to follow the entire flow before deciding that emitNew should call emit (if it should then there would only be one function) :-). At the moment it isn't designed for multiple tokens basically.
 
I think (assuming that you really do need to emit two tokens), that you are looking at the wrong thing - the emit and emitNew already swapped places before the 3.0 snap because of Java changes that I want to stay somewhat in line with). 

Having got a token, you want to add the new token into the output stream, hence you can emit, then add the lexer->token to your list/array/whatever then emit another one and add that to your list/array/etc... so the method you probably then want to override is the:

static void
fillBuffer  (pANTLR3_COMMON_TOKEN_STREAM tokenStream)

in the token stream, rather than nextToken I think. You can just copy it, and make this code deal with a list/array of tokens. However, then you have to maintain this and so on, whereas at some point I will expand the logic to deal with multiple tokens as it won't be much overhead in the C runtime I think.

As always though, before smashing down the door with a hammer, try the handle. What makes you believe that you need to emit multiple tokens? I would be willing to bet that you don't really need that, though it isn't a given of course.

Jim

 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Thursday, June 14, 2007 4:25 AM
> To: Gavin Lambert
> Cc: ANTLR mail-list
> Subject: Re: [antlr-interest] Emitting (additional) imaginary tokens in
> theC target
> 
> El 14/6/2007, a las 12:48, Gavin Lambert escribi?:
> 
> > At 22:22 14/06/2007, Wincent Colaiuta wrote:
> > >(Jim, I think you should probably change emit() to
> > >call emitNew() rather than doing "lexer->token =
> > >token;" for this very reason).
> >
> > Actually, I think it'd make more sense for emitNew() to call emit
> > (), since the first constructs a new token then emits it while the
> > second only emits an existing token.
> 
> Actually, emitNew emits an existing token and emit constructs a new
> token:
> 
> static void emitNew         (pANTLR3_LEXER lexer,
> pANTLR3_COMMON_TOKEN token)
> {
>      lexer->token    = token;    /* Voila!   */
> }
> 
> static pANTLR3_COMMON_TOKEN
> emit        (pANTLR3_LEXER lexer)
> {
>      pANTLR3_COMMON_TOKEN        token;
> 
>      /* We could check pointers to token factories and so on, but
>       * we are in code that we want to run as fast as possible
>       * so we are not checking any errors. So make sure you have
> installed an input stream before
>       * trying to emit a new token.
>       */
>      token   = lexer->tokFactory->newToken(lexer->tokFactory);
> 
>      /* Install the supplied information, and some other bits we
> already know
>       * get added automatically, such as the input stream it is
> assoicated with
>       * (though it can all be overridden of course)
>       */
>      token->type             = lexer->type;
>      token->channel          = lexer->channel;
>      token->start            = lexer->tokenStartCharIndex;
>      token->stop             = lexer->getCharIndex(lexer) - 1;
>      token->line             = lexer->tokenStartLine;
>      token->charPosition     = lexer->tokenStartCharPositionInLine;
>      token->text             = lexer->text;
> 
>      lexer->token            = token;
> 
>      return  token;
> }
> 
> Cheers,
> Wincent


From jimi at temporal-wave.com  Thu Jun 14 07:45:41 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 07:45:41 -0700
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
	C target
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com><20070614104832.6231911E9E2@www.antlr.org><7F434427-A675-431D-AD08-8D71C3C05FDF@wincent.com>
	<20070614114156.15BC211E9E0@www.antlr.org>
Message-ID: <051466DAA0D608439E196797955018D76D88@wavemachine.temporal-wave.com>

It had to swap because of changes made to lexer token handling in Java,
that I wished to propagate. At the same time, as you observe, I felt
that the override method should change as the names seemed intuitively
the wrong way round. When you have the whole changes and not just the
fact that the names changed, it makes more sense, and you lexer rules
will simply too.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Thursday, June 14, 2007 4:42 AM
To: ANTLR mail-list
Subject: Re: [antlr-interest] Emitting (additional) imaginary tokens in
the C target

 

At 23:25 14/06/2007, Wincent Colaiuta wrote:
>Actually, emitNew emits an existing token and emit 
>constructs a new token:
>
>static void emitNew         (pANTLR3_LEXER lexer,   
>pANTLR3_COMMON_TOKEN token)
[...]
>static pANTLR3_COMMON_TOKEN
>emit        (pANTLR3_LEXER lexer)

Innnteresting.  In the version I've got it's the other way around (but
then I haven't downloaded the release yet; I still have one of the
betas):

static void  emit (pANTLR3_LEXER lexer, pANTLR3_COMMON_TOKEN token);
static void  emitNew(pANTLR3_LEXER lexer,  ANTLR3_UINT32 ttype,
              ANTLR3_UINT64 line,     ANTLR3_UINT32 charPosition, 
              ANTLR3_UINT32 channel, 
              ANTLR3_UINT64 start,    ANTLR3_UINT64 stop
                );

The names make more sense to me this way around.  Though I guess it
makes life easier not having to pass in all those parameters :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070614/f4f38468/attachment.html 

From paul at paulkeir.com  Thu Jun 14 08:55:13 2007
From: paul at paulkeir.com (Paul Keir)
Date: Thu, 14 Jun 2007 16:55:13 +0100
Subject: [antlr-interest] Bug in Antlr ANSI C Grammar
Message-ID: <467164E1.5030604@paulkeir.com>

Hi there,

In the rule 'postfix_expression' in the ANTLR ANSI C Grammar, should the 
option

'*' IDENTIFIER'

be removed? A match to it surprised me a little when debugging, and 
although I don't have a copy of the 1985 draft standard, ( is it freely 
available? ) http://www.quut.com/c/ANSI-C-grammar-y-1995.html suggests 
this option is not required.

Moving from YACC to ANTLR has required a few changes, and perhaps this 
is one I don't recognise. Neverthless, I then tried the change with the 
example 'input' file and as I expected there was no difference between 
the outputs.

The '*b' in the input below will catch the rule:

a[2*b];

Paul

From feraudyh at yahoo.com  Thu Jun 14 09:15:23 2007
From: feraudyh at yahoo.com (Henri De Feraudy)
Date: Thu, 14 Jun 2007 09:15:23 -0700 (PDT)
Subject: [antlr-interest] Newbie Question: what does missing attribute
	access on rule scope: e mean?
Message-ID: <20070614161524.23898.qmail@web50109.mail.re2.yahoo.com>

Hi all,
    My grammar is dead simple:
   
  grammar Debug1;
  options{
language=CSharp;
}
   
  list   : e=element {foo($e);} (element)*;
  
element returns[object value] : 
 INT {$value = (object)int.parse($INT.text);}|
 STRING {$value = (object)$INT.text;}
 ;
  
INT : 
 ('0'..'9')+
 ;
STRING : 
 '"'.*'"'
 ;
   
  Unfortunately I get the above error message (error 117) when I call on Generate Code.
  There doesnt seem to be any error message summary in The Definitive ANTLR Reference
  Whatsmore the console contains nothing after the message box appears.
  I also searched for attribute access in the Reference and found nothing.
  I guess this occurs because I am finding the Reference difficult to read, but any help would
  be most welcome.
  Henri
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070614/979ee3cc/attachment.html 

From jimi at temporal-wave.com  Thu Jun 14 09:53:21 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 09:53:21 -0700
Subject: [antlr-interest] Newbie Question: what does missing
	attributeaccess on rule scope: e mean?
References: <20070614161524.23898.qmail@web50109.mail.re2.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76D90@wavemachine.temporal-wave.com>

You should use $e.value, rules can return more than one element. I fit
does only return one element then the code gen will optimize it to do
so. So, $e references the "structure/object that contains the return
elements", and not the return element itself.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Henri De Feraudy
Sent: Thursday, June 14, 2007 9:15 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie Question: what does missing
attributeaccess on rule scope: e mean?

 

Hi all,

  My grammar is dead simple:

 

grammar Debug1;

options{
language=CSharp;
}

 

list   : e=element {foo($e);} (element)*;


element returns[object value] : 
 INT {$value = (object)int.parse($INT.text);}|
 STRING {$value = (object)$INT.text;}
 ;


INT : 
 ('0'..'9')+
 ;
STRING : 
 '"'.*'"'
 ;

 

Unfortunately I get the above error message (error 117) when I call on
Generate Code.

There doesnt seem to be any error message summary in The Definitive
ANTLR Reference

Whatsmore the console contains nothing after the message box appears.

I also searched for attribute access in the Reference and found nothing.

I guess this occurs because I am finding the Reference difficult to
read, but any help would

be most welcome.

Henri

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070614/f358c8d8/attachment.html 

From win at wincent.com  Thu Jun 14 10:15:09 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 14 Jun 2007 19:15:09 +0200
Subject: [antlr-interest] Bug in C target's handling of string literals that
	contain escapes
Message-ID: <B00D3395-1879-4B60-956E-D3D8345E603E@wincent.com>

Given a lexer rule like:

   FOO : '\'bar\'';

The C target will produce an array like the following:

   static ANTLR3_UCHAR     lit_1[]  = { 0x5c, 0x27, 0x62, 0x61, 0x72,  
0x5c, 0x27,  ANTLR3_STRING_TERMINATOR};

Notice how each escaped single-quote is encoded as 0x5c, 0x27... As a  
result when the lexer encounters a string like 'bar' it won't match  
even though the grammar states that it should (the matchs() lexer  
function just compares strings character by character, so the encoded  
escape sequence has no special meaning to it).

Correctly encoded the array would look like this (no embedded escapes):

   static ANTLR3_UCHAR     lit_1[]  = { 0x27, 0x62, 0x61, 0x72,  
0x27,  ANTLR3_STRING_TERMINATOR};

As a workaround, the lexer rule can be rewritten so that escaped  
characters appear as individual characters and not as part of multi- 
character strings; for example:

   FOO : '\'' 'bar' '\'';

Cheers,
Wincent


From win at wincent.com  Thu Jun 14 11:09:41 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 14 Jun 2007 20:09:41 +0200
Subject: [antlr-interest] Emitting (additional) imaginary tokens in the
	Ctarget
In-Reply-To: <051466DAA0D608439E196797955018D76D85@wavemachine.temporal-wave.com>
References: <25C7D5F2-D287-42A4-B48A-2557248EAC8A@wincent.com>
	<051466DAA0D608439E196797955018D76D85@wavemachine.temporal-wave.com>
Message-ID: <1111FA29-1276-4FFA-9D17-C30420B55040@wincent.com>

El 14/6/2007, a las 16:15, Jim Idle escribi?:

> However, I would be surprised if you actually did need to do this.  
> I am
> not even sure that Ter did this on the Python example because it  
> was the
> only way to deal with the stupid indent (I have not really looked at
> that problem), but what makes you think that you need to emit two  
> tokens
> from a single rule rather than have two rules?

There are some elements of the grammar in which whitespace has  
syntactic importance, like in Python. I think you're probably right  
that this can be done without emitting multiple tokens. I just saw  
the example in the book and thought that if I could emit a couple of  
extra imaginary tokens (like the INDENT and DEDENT tokens in the  
Python example then it might make some of the rules in the parser  
simpler.

You know, it would make parsing things like:

   # a Python-like language
   def method
      in this grammar methods have no "end" delimiter

As easy as parsing:

   # a Ruby-like language
   def method
     this grammar's methods do have an "end" delimiter
   end

But if this starts getting too messy then I'll forget about it and  
just try to handle all the possibilities in the parser. One of the  
things I find myself going back and forth with is keeping the balance  
of complexity between the parser and lexer appropriate: I try to keep  
the parser simple and the lexer starts getting too complicated, so I  
wipe the slate clean and start with a real simple lexer and then  
parser gets out of control... Or I start with both really simple and  
try to incremental add the ability to parse more and more input and  
the ambiguity warnings and non-LL(*) errors start to mount and I hit  
a road block... Will dominate this beast eventually, I hope!

Cheers,
Wincent


From antlr at jazillian.com  Thu Jun 14 11:11:59 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 14 Jun 2007 14:11:59 -0400
Subject: [antlr-interest] Bug in Antlr ANSI C Grammar
In-Reply-To: <467164E1.5030604@paulkeir.com>
References: <467164E1.5030604@paulkeir.com>
Message-ID: <467184EF.4000108@jazillian.com>

It does look like that should be removed.

It's not in the ANTLR2 version of the grammar, and it's not in the ANSI 
C99 standard.
IIRC, you can get drafts of the ANSI C standards at ansi.org, but you 
have to
pay for the official version.

Andy

Paul Keir wrote:
> Hi there,
>
> In the rule 'postfix_expression' in the ANTLR ANSI C Grammar, should 
> the option
>
> '*' IDENTIFIER'
>
> be removed? A match to it surprised me a little when debugging, and 
> although I don't have a copy of the 1985 draft standard, ( is it 
> freely available? ) http://www.quut.com/c/ANSI-C-grammar-y-1995.html 
> suggests this option is not required.
>
> Moving from YACC to ANTLR has required a few changes, and perhaps this 
> is one I don't recognise. Neverthless, I then tried the change with 
> the example 'input' file and as I expected there was no difference 
> between the outputs.
>
> The '*b' in the input below will catch the rule:
>
> a[2*b];
>
> Paul
>


From jimi at temporal-wave.com  Thu Jun 14 11:39:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jun 2007 11:39:56 -0700
Subject: [antlr-interest] Bug in C target's handling of string literals
	thatcontain escapes
References: <B00D3395-1879-4B60-956E-D3D8345E603E@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76D97@wavemachine.temporal-wave.com>

Yes - I am aware of this one...

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Thursday, June 14, 2007 10:15 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] Bug in C target's handling of string
literals
> thatcontain escapes
> 
> Given a lexer rule like:
> 
>    FOO : '\'bar\'';
> 
> The C target will produce an array like the following:
> 
>    static ANTLR3_UCHAR     lit_1[]  = { 0x5c, 0x27, 0x62, 0x61, 0x72,
> 0x5c, 0x27,  ANTLR3_STRING_TERMINATOR};
> 
> Notice how each escaped single-quote is encoded as 0x5c, 0x27... As a
> result when the lexer encounters a string like 'bar' it won't match
> even though the grammar states that it should (the matchs() lexer
> function just compares strings character by character, so the encoded
> escape sequence has no special meaning to it).
> 
> Correctly encoded the array would look like this (no embedded
escapes):
> 
>    static ANTLR3_UCHAR     lit_1[]  = { 0x27, 0x62, 0x61, 0x72,
> 0x27,  ANTLR3_STRING_TERMINATOR};
> 
> As a workaround, the lexer rule can be rewritten so that escaped
> characters appear as individual characters and not as part of multi-
> character strings; for example:
> 
>    FOO : '\'' 'bar' '\'';
> 
> Cheers,
> Wincent


From fowler at acm.org  Thu Jun 14 11:51:25 2007
From: fowler at acm.org (Martin Fowler)
Date: Thu, 14 Jun 2007 14:51:25 -0400
Subject: [antlr-interest] import package in AntlrWorks debugger
In-Reply-To: <6829522E-B84F-475A-B93E-42B6AA193D78@arizona-software.ch>
References: <466EA962.9020803@acm.org>
	<6829522E-B84F-475A-B93E-42B6AA193D78@arizona-software.ch>
Message-ID: <46718E2D.2070901@acm.org>

> Also, are you using ANTLRWorks as a plugin in IntelliJ?

Sorry, I should have said. Yes I am using it as a plugin to IntelliJ.

> However, it is probably a classpath issue as Patrick Masselink
> mentioned: can you try and tell me if it works by specifying the
> classpath in the preferences?

I'm sure it's a classpath issue. I did look in AntlrWorks to see if I 
could set the classpath anywhere, but I didn't find any. Comparing the 
plugin to the standalone program I see that the preferences menu item is 
on the File menu, which doesn't exist on the plugin. That may be why I 
can't find it ;-)

The behavior that I think would be best would be for AntlrWorks to pick 
up the class path from the one in use by IntelliJ. I have no idea how 
hard that is.

 > If so, does it work if you use the standalone version of
 > ANTLRWorks?

Haven't tried it, as I like my furry IntelliJ so much. However when I 
next have something to debug I'll give it a shot.

> Sorry for all these questions, I'm trying to figure out exactly
> what's going on.

No problem. I'm always happy to help people solve my problems ;-)


-- 
Martin Fowler
http://martinfowler.com

From dMaier at genome.stanford.edu  Thu Jun 14 12:06:46 2007
From: dMaier at genome.stanford.edu (Don Maier)
Date: Thu, 14 Jun 2007 12:06:46 -0700
Subject: [antlr-interest]  "throws" clause in v3 Rule Syntax.
In-Reply-To: <f18f141c0705081408j413a5377x20a4289d0e81b9f9@mail.gmail.com>
References: <f18f141c0705081408j413a5377x20a4289d0e81b9f9@mail.gmail.com>
Message-ID: <C15CF161-8DDA-4048-B62C-A30D8E9DCA0A@genome.stanford.edu>

Good day,

There has been some discussion of the "throws" clause in ANTLR v3  
dating back to the beginning of April, but I'm not aware of anything  
since.

The documented v3 Rule Syntax (http://www.antlr.org/wiki/display/ 
ANTLR3/ANTLR+v3+printable+documentation) is:

---------------

Rule syntax

/** rule comment */
access-modifier rule-name[?arguments?] returns [?return-values?]  
throws name1, name2, ...
options {...}
scope {...}
scope global-scope-name;
@init {...}
@after {...}
     : ?alternative-1? -> ?rewrite-rule-1?
     | ?alternative-2? -> ?rewrite-rule-2?
     ...
     | ?alternative-n? -> ?rewrite-rule-n?
     ;
     catch [?exception-arg-1?] {...}
     catch [?exception-arg-2?] {...}
     finally {...}

---------------

It appears to me that:

1) ANTLRWorks 1.0.2 disallows the "throws" clause.

2) ANTLR 3.0 ignores it.

3) The syntactic description above may be interpreted to mean that  
the "throws" clause cannot appear without the "returns" clause (and  
conversely).  That does not appear to be correct -- or, at least,  
what we would want.

4) The "throws" clause is *really* important for any *real*  
application of ANTLR:   Is there any other means of returning  
semantic errors found in semantic analysis interspersed with the parse?

Any information about this would be immensely appreciated.

Thank you!

Regards,
Don Maier
Sr. Software Designer/Research
Dept. of Biochemistry
Stanford University School of Medicine


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070614/ebb7082f/attachment.html 

From mark.venbrux at gmail.com  Thu Jun 14 13:00:37 2007
From: mark.venbrux at gmail.com (Mark Venbrux)
Date: Thu, 14 Jun 2007 22:00:37 +0200
Subject: [antlr-interest] Patch for filter mode (+1 Vote!)
Message-ID: <fa6015a20706141300x58201bf0m5461ef9e781f9d8a@mail.gmail.com>

Hi,
A while ago, the following message was posted:
http://www.antlr.org/pipermail/antlr-interest/2007-June/021243.html
It was very valuable to me and enables me to manipulate source files
in an elegant way.
Thanks a lot Wincent!
But it seems that it was not picked up at all.
So I just add a vote here for adding the "filter patch" to AntLR, so
that I can remove my local patch.

Most important part of the well elaborated message:
""
I'm aware that the filter mode was intended to enable the creation of
"fuzzy" lexers but I've also found it very useful for parsing things
like wikitext or templating languages (PHP or any like it) where you
have a large amount of free-form text (no special markup) studded
with meaningful chunks of a more formal language (wikitext
directives, PHP code sections etc). In this case you don't want to
filter out and throw away the dross; you want to keep it.

Without filtering mode it is very hard to write a lexer for this kind
of input, yet with filtering mode as it currently is implemented you
can't really use a parser either. For one thing, backtracking gets
turned on in the parser whether you want it or not, and much more
crucially any actions which you define or @after blocks which you set-
up will never be executed (although @init blocks will be); there may
be other issues as well but those are the ones I'm aware of.

Conversely, trying to write the lexer without filtering mode turned
on is fiendishly difficult.

""

-- 
Mvg,
    Mark

From win at wincent.com  Thu Jun 14 17:04:53 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 15 Jun 2007 02:04:53 +0200
Subject: [antlr-interest] Patch for filter mode (+1 Vote!)
In-Reply-To: <fa6015a20706141300x58201bf0m5461ef9e781f9d8a@mail.gmail.com>
References: <fa6015a20706141300x58201bf0m5461ef9e781f9d8a@mail.gmail.com>
Message-ID: <E15DD586-5A35-4AD3-83B8-0448521C6D9B@wincent.com>

El 14/6/2007, a las 22:00, Mark Venbrux escribi?:

> Hi,
> A while ago, the following message was posted:
> http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
> 021243.html
> It was very valuable to me and enables me to manipulate source files
> in an elegant way.
> Thanks a lot Wincent!
> But it seems that it was not picked up at all.
> So I just add a vote here for adding the "filter patch" to AntLR, so
> that I can remove my local patch.

Terence is off to Sydney, as you probably know... he sent me a  
message to say, "remind me of this when I get back in a couple of  
weeks". So I think you'll see the issue addressed in one way or  
another then....

Cheers,
Wincent


From jonathan.thomas at ca.com  Thu Jun 14 17:20:50 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 15 Jun 2007 10:20:50 +1000
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <200706131829.58062.rschulz@sonic.net>
References: <466EA6C0.4060802@acm.org>
	<200706131732.47842.rschulz@sonic.net>	<80CDCDB2-7CA4-42FA-9C23-7C4960B6909D@cs.usfca.edu>
	<200706131829.58062.rschulz@sonic.net>
Message-ID: <4671DB62.9020803@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/bdbdbc75/attachment.html 

From parrt at cs.usfca.edu  Thu Jun 14 19:29:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jun 2007 12:29:53 +1000
Subject: [antlr-interest] Bug in Antlr ANSI C Grammar
In-Reply-To: <467164E1.5030604@paulkeir.com>
References: <467164E1.5030604@paulkeir.com>
Message-ID: <71867E10-51B1-4872-8347-553E157605C5@cs.usfca.edu>

Done. Pushed to depot.  You can grab from fisheye hosting of stuff:

http://fisheye2.cenqua.com/browse/antlr

Ter

On Jun 15, 2007, at 1:55 AM, Paul Keir wrote:

> Hi there,
>
> In the rule 'postfix_expression' in the ANTLR ANSI C Grammar,  
> should the option
>
> '*' IDENTIFIER'
>
> be removed? A match to it surprised me a little when debugging, and  
> although I don't have a copy of the 1985 draft standard, ( is it  
> freely available? ) http://www.quut.com/c/ANSI-C-grammar- 
> y-1995.html suggests this option is not required.
>
> Moving from YACC to ANTLR has required a few changes, and perhaps  
> this is one I don't recognise. Neverthless, I then tried the change  
> with the example 'input' file and as I expected there was no  
> difference between the outputs.
>
> The '*b' in the input below will catch the rule:
>
> a[2*b];
>
> Paul


From parrt at cs.usfca.edu  Thu Jun 14 19:33:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jun 2007 12:33:16 +1000
Subject: [antlr-interest] Newbie Question: what does missing
	attributeaccess on rule scope: e mean?
In-Reply-To: <051466DAA0D608439E196797955018D76D90@wavemachine.temporal-wave.com>
References: <20070614161524.23898.qmail@web50109.mail.re2.yahoo.com>
	<051466DAA0D608439E196797955018D76D90@wavemachine.temporal-wave.com>
Message-ID: <4420AE3F-E695-4801-AC17-21C34BAF317E@cs.usfca.edu>


On Jun 15, 2007, at 2:53 AM, Jim Idle wrote:

> You should use $e.value, rules can return more than one element. I  
> fit does only return one element then the code gen will optimize it  
> to do so. So, $e references the ?structure/object that contains the  
> return elements?, and not the return element itself.

can do $e.start and $e.text etc... as well.

Ter


From parrt at cs.usfca.edu  Thu Jun 14 20:02:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jun 2007 13:02:34 +1000
Subject: [antlr-interest] "throws" clause in v3 Rule Syntax.
In-Reply-To: <C15CF161-8DDA-4048-B62C-A30D8E9DCA0A@genome.stanford.edu>
References: <f18f141c0705081408j413a5377x20a4289d0e81b9f9@mail.gmail.com>
	<C15CF161-8DDA-4048-B62C-A30D8E9DCA0A@genome.stanford.edu>
Message-ID: <FD6E8FDD-F807-45BF-A989-2942E4C29E7F@cs.usfca.edu>

Hi Don,

Sorry about that.  Yep, existing bug:

http://www.antlr.org:8888/browse/ANTLR-100

Ter

On Jun 15, 2007, at 5:06 AM, Don Maier wrote:

> Good day,
>
> There has been some discussion of the "throws" clause in ANTLR v3  
> dating back to the beginning of April, but I'm not aware of  
> anything since.
>
> The documented v3 Rule Syntax (http://www.antlr.org/wiki/display/ 
> ANTLR3/ANTLR+v3+printable+documentation) is:
>
> ---------------
>
> Rule syntax
>
> /** rule comment */
> access-modifier rule-name[?arguments?] returns [?return-values?]  
> throws name1, name2, ...
> options {...}
> scope {...}
> scope global-scope-name;
> @init {...}
> @after {...}
>     : ?alternative-1? -> ?rewrite-rule-1?
>     | ?alternative-2? -> ?rewrite-rule-2?
>     ...
>     | ?alternative-n? -> ?rewrite-rule-n?
>     ;
>     catch [?exception-arg-1?] {...}
>     catch [?exception-arg-2?] {...}
>     finally {...}
>
> ---------------
>
> It appears to me that:
>
> 1) ANTLRWorks 1.0.2 disallows the "throws" clause.
>
> 2) ANTLR 3.0 ignores it.
>
> 3) The syntactic description above may be interpreted to mean that  
> the "throws" clause cannot appear without the "returns" clause (and  
> conversely).  That does not appear to be correct -- or, at least,  
> what we would want.
>
> 4) The "throws" clause is *really* important for any *real*  
> application of ANTLR:   Is there any other means of returning  
> semantic errors found in semantic analysis interspersed with the  
> parse?
>
> Any information about this would be immensely appreciated.
>
> Thank you!
>
> Regards,
> Don Maier
> Sr. Software Designer/Research
> Dept. of Biochemistry
> Stanford University School of Medicine
>
>


From parrt at cs.usfca.edu  Thu Jun 14 23:14:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jun 2007 16:14:54 +1000
Subject: [antlr-interest] binary executable for ANTLR tool
Message-ID: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>

Anybody wanna build windows / linux / mac binaries for ANTLR tool  
itself?  I couldn't even get GCJ on my mac.  I'm trying to find a gcj  
binary for linux so I can make an ANTLR binary.  Why is GCJ hard so  
hard to find/download?  Must be because it doesn't work.

Ter

From pink at odahoda.de  Fri Jun 15 00:19:31 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 15 Jun 2007 09:19:31 +0200
Subject: [antlr-interest] binary executable for ANTLR tool
References: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>
Message-ID: <f4tei3$qt5$1@sea.gmane.org>

Hi,

Terence Parr wrote:

> Anybody wanna build windows / linux / mac binaries for ANTLR tool
> itself?  I couldn't even get GCJ on my mac.  I'm trying to find a gcj
> binary for linux so I can make an ANTLR binary.  Why is GCJ hard so
> hard to find/download?  Must be because it doesn't work.

"apt-get install gcj" for me. Which dist are you using?
I somehow remember, someone (you?) posted some build instructions for gcj
somewhere... But I can't find it anymore. Any hints, so I could give it a
try on my Debian box?

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From parrt at cs.usfca.edu  Fri Jun 15 00:22:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jun 2007 17:22:28 +1000
Subject: [antlr-interest] binary executable for ANTLR tool
In-Reply-To: <f4tei3$qt5$1@sea.gmane.org>
References: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>
	<f4tei3$qt5$1@sea.gmane.org>
Message-ID: <444EE439-0399-48BB-9040-9A2E4475F772@cs.usfca.edu>


On Jun 15, 2007, at 5:19 PM, Benjamin Niemann wrote:

> Hi,
>
> Terence Parr wrote:
>
>> Anybody wanna build windows / linux / mac binaries for ANTLR tool
>> itself?  I couldn't even get GCJ on my mac.  I'm trying to find a gcj
>> binary for linux so I can make an ANTLR binary.  Why is GCJ hard so
>> hard to find/download?  Must be because it doesn't work.
>
> "apt-get install gcj" for me. Which dist are you using?

some fedora thing at school and 10.4.9 os x on my laptop.

> I somehow remember, someone (you?) posted some build instructions  
> for gcj
> somewhere...

someone posted to a blog and i put into bug list to do.

http://weblog.hypotheticalabs.com/?p=94

Ter

From pink at odahoda.de  Fri Jun 15 00:43:58 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 15 Jun 2007 09:43:58 +0200
Subject: [antlr-interest] binary executable for ANTLR tool
References: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>
	<f4tei3$qt5$1@sea.gmane.org>
	<444EE439-0399-48BB-9040-9A2E4475F772@cs.usfca.edu>
Message-ID: <f4tfvu$vrh$1@sea.gmane.org>

Terence Parr wrote:

> 
> On Jun 15, 2007, at 5:19 PM, Benjamin Niemann wrote:
> 
>> Hi,
>>
>> Terence Parr wrote:
>>
>>> Anybody wanna build windows / linux / mac binaries for ANTLR tool
>>> itself?  I couldn't even get GCJ on my mac.  I'm trying to find a gcj
>>> binary for linux so I can make an ANTLR binary.  Why is GCJ hard so
>>> hard to find/download?  Must be because it doesn't work.
>>
>> "apt-get install gcj" for me. Which dist are you using?
> 
> some fedora thing at school and 10.4.9 os x on my laptop.
> 
>> I somehow remember, someone (you?) posted some build instructions
>> for gcj
>> somewhere...
> 
> someone posted to a blog and i put into bug list to do.
> 
> http://weblog.hypotheticalabs.com/?p=94

yeah, just stumbled upon ANTLR-132, too :)
I'll give it a try

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From feraudyh at yahoo.com  Fri Jun 15 02:23:11 2007
From: feraudyh at yahoo.com (Henri De Feraudy)
Date: Fri, 15 Jun 2007 02:23:11 -0700 (PDT)
Subject: [antlr-interest] debugging grammar with actions in Antlrworks only
	in Java
Message-ID: <494197.86669.qm@web50106.mail.re2.yahoo.com>

Hi All,
    I'm not very familiar with Java as C# and it has just come to my attention that Antlrworks will not debug a grammar with actions if the output language is CSharp.
  Maybe this should be made more explicit in the "generate code" action of Antlrworks(for example).


To boldly go photographing where everyone has been before.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/6559a917/attachment.html 

From win at wincent.com  Fri Jun 15 02:29:46 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 15 Jun 2007 11:29:46 +0200
Subject: [antlr-interest] Turning off harmless warnings
Message-ID: <B66EE10B-8B0F-4D08-9E2D-201B0C362299@wincent.com>

In the book (p 285) Ter writes:

"At some point ANTLR will let you silence warnings for decisions that  
ANTLR properly resolves."

Just wanted to post this to the list and ask that someone with write  
access to the bug tracker put an entry for this in there, so it  
doesn't get forgotten.

Brain-dead example rules:

   FOO : 'foo' ;
   section : element* EOF ;
   element : FOO+ ;

Here in rule "element" ANTLR doesn't know whether to match input like  
"foofoo" as a single element containing two "foo" tokens or as two  
separate elements containing just one "foo" token each. It warns  
"Decision can match input such as "FOO" using multiple alternatives:  
1, 2" and automatically resolves the ambiguity by favoring a greedy  
match in rule "element" (ie. it matches it as a single "element"  
containing two "foo" tokens).

Knowing this, you might want to be able to turn off that ambiguity  
warning so that other, more important warnings don't get overlooked  
amid the noise. I understand that ANTLR 2 had this option (either  
warnWhenFollowAmbig or generateAmbigWarnings, I don't know which). So  
like I said, it would be good if someone with write access could get  
this into the tracker, as it is not always possible to rewrite the  
rules in such a way as to eliminate all such warnings!

Cheers,
Wincent


From pink at odahoda.de  Fri Jun 15 02:31:04 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 15 Jun 2007 11:31:04 +0200
Subject: [antlr-interest] binary executable for ANTLR tool
References: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>
	<f4tei3$qt5$1@sea.gmane.org>
	<444EE439-0399-48BB-9040-9A2E4475F772@cs.usfca.edu>
	<f4tfvu$vrh$1@sea.gmane.org>
Message-ID: <f4tm8o$lf2$1@sea.gmane.org>

Benjamin Niemann wrote:

> Terence Parr wrote:
> 
>> 
>> On Jun 15, 2007, at 5:19 PM, Benjamin Niemann wrote:
>> 
>>> Hi,
>>>
>>> Terence Parr wrote:
>>>
>>>> Anybody wanna build windows / linux / mac binaries for ANTLR tool
>>>> itself?  I couldn't even get GCJ on my mac.  I'm trying to find a gcj
>>>> binary for linux so I can make an ANTLR binary.  Why is GCJ hard so
>>>> hard to find/download?  Must be because it doesn't work.
>>>
>>> "apt-get install gcj" for me. Which dist are you using?
>> 
>> some fedora thing at school and 10.4.9 os x on my laptop.
>> 
>>> I somehow remember, someone (you?) posted some build instructions
>>> for gcj
>>> somewhere...
>> 
>> someone posted to a blog and i put into bug list to do.
>> 
>> http://weblog.hypotheticalabs.com/?p=94
> 
> yeah, just stumbled upon ANTLR-132, too :)
> I'll give it a try

I was not able to get it working as described. The last command did not work
for me, I had to compile antlr-3.0.jar as a lib, too, and then link all
three libs. But the resulting executable segfaulted :(
My gcj version is "gcj (GCC) 4.1.3 20070601 (prerelease) (Debian 4.1.2-12)"

I was able to get a statically linked version though using the following
sequence:

export CLASSPATH=antlr-2.7.7.jar:stringtemplate-3.0.jar
gcj -fPIC -O3 -c antlr-2.7.7.jar -o antlr-2.7.7.o
gcj -fPIC -O3 -c stringtemplate-3.0.jar -o stringtemplate-3.0.o
gcj -fPIC -O3 -c antlr-3.0.jar -o antlr-3.0.o
gcj --main=org.antlr.Tool antlr-2.7.7.o stringtemplate-3.0.o antlr-3.0.o \
  -o antlr3
strip antlr3

Fetch the resulting file from
<http://testbox.puppetmaster.homelinux.org/antlr3> and try, if it works on
your system (will need some gcc/gcj libs, packages libgcj7-1 on debian,
other stuff should be fairly standard).

Anybody feel free to suggest improvements that's the first time I used gcj.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From Pranita.Chaudhari at eads.com  Fri Jun 15 04:13:50 2007
From: Pranita.Chaudhari at eads.com (Chaudhari, Pranita, OPEE14)
Date: Fri, 15 Jun 2007 13:13:50 +0200
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
Message-ID: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>

I am new to ANTLRWorks need help !
 
When I am trying to debug Tree Parser Grammar, window pops up saying "ANTLRWorks does not support debugging tree Parser Grammar". Does AntlrWorks 1.0.2 supports it?
 
-Pranita 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/fff942d8/attachment.html 

From rschulz at sonic.net  Fri Jun 15 07:01:13 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 15 Jun 2007 07:01:13 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <4671DB62.9020803@ca.com>
References: <466EA6C0.4060802@acm.org> <200706131829.58062.rschulz@sonic.net>
	<4671DB62.9020803@ca.com>
Message-ID: <200706150701.13915.rschulz@sonic.net>

On Thursday 14 June 2007 17:20, Jonathan Thomas wrote:
>  Obviously you haven't tried VS2005 coupled with Whole Tomato's
> VisualAssistX :-) So good you'd wish you were back doing C++ instead
> of Java!

Well, if it's anything like that abomination of an email client produced 
by Microsoft, I'd probably shoot various components of my computer 
after using it for about five minutes.

But I have used VisualStudio a little several years ago, and yes, it was 
to do C++. Of all the IDEs I've used, it caused me fewer headaches than 
most.

I don't know who Whole Tomato is or what Visual Assist X does. Based 
their Web site, it looks a lot like IDEA's built-in refactorings and 
assists or those of some of its add-ons such as Refactor-J. $150 seems 
a bit expensive for this, however.


Randall Schulz

From naimal_khan at hotmail.com  Fri Jun 15 09:33:10 2007
From: naimal_khan at hotmail.com (Naimal Khan)
Date: Fri, 15 Jun 2007 21:33:10 +0500
Subject: [antlr-interest] C, C++ pretty printer (Emitter or code formattor)
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
Message-ID: <BAY12-F21E7CEBFAC246EC31513AC9A1E0@phx.gbl>


Is a C, C++ emitter available written in antlr?
Naimal

_________________________________________________________________
Don't just search. Find. Check out the new MSN Search! 
http://search.msn.com/


From matthew.j.diehl at intel.com  Fri Jun 15 11:38:42 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 15 Jun 2007 11:38:42 -0700
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20210B7B7@orsmsx417.amr.corp.intel.com>

Debugging tree parsers has not been implemented in ANTLRWorks yet.  I'm
going to look into implementing it on the side with Jean...but it might
take me a while.  If anyone else wants to try and beat me, lol, go
ahead.  But, no, 1.0.2 does not support it.  We want to do that as well
as giving more support for StringTemplate files in ANTLRWorks.

 

Matt

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chaudhari,
Pranita, OPEE14
Sent: Friday, June 15, 2007 4:14 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks

 

I am new to ANTLRWorks need help !

 

When I am trying to debug Tree Parser Grammar, window pops up saying
"ANTLRWorks does not support debugging tree Parser Grammar". Does
AntlrWorks 1.0.2 supports it?

 

-Pranita 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/87df6e3c/attachment-0001.html 

From sebastiaan.blom at gmail.com  Fri Jun 15 12:52:13 2007
From: sebastiaan.blom at gmail.com (Sebastiaan Blom)
Date: Fri, 15 Jun 2007 21:52:13 +0200
Subject: [antlr-interest] How to build a hex to string parser?
Message-ID: <cf6f7ff00706151252p405511ccj129c9a5f738757f2@mail.gmail.com>

Hello,

I'm trying to build a parser (using ANTLRWorks 1.02) which can convert
some hex strings into some readable text strings (e.g. command X,
lenght Y, option Z, etc).

The input can be for example:

sE4w3737
sE5r370136
sE4w1A001A

Using the grammar below I getting problems with the following input:

sE4w2301020B052E
This one works fine in the interpreter (cmdD=020B052E) but not in the
debugger. There it thinks cmdD=E5 which is already the next line, I
don't understand why.

sE5rFF3701C9
For this line it is expecting a 3 for the C, I guess it wants to match
to the 370136 of data but why?
It should separate it in id, length and crc.

Any suggestions are welcome, thanks in advance.

Sebastiaan.


grammar test;

tokens {
	START = 's';
	READ = 'r';
	WRITE = 'w';
}

line	: (START address (READ | WRITE) data NEWLINE)*
	;

address	: HEX_DIGITS	{System.out.println("Addr:" + $address.text);}
	;

data	:'2401' cmdA
	|'2301' cmdD
	|'3737'		{System.out.println("3333 - ...");}
	|'29656E6745'	{System.out.println("29656E6745 - ...");}
	|'2A0000002A	{System.out.println("2A0000002A - ...");}
	|'36410077'		{System.out.println("36410077 - ...");}
	|'370136'		{System.out.println("370136 - ...");}
	|'370433'		{System.out.println("370433 - ...");}
	|'370532'		{System.out.println("370532 - ...");}
	|'61FF9E'		{System.out.println("61FF9E - ...");}
	|'FF' id length crc
	|'FFFF'		{System.out.println("Master enquires the interrupt function");}	
	// plus many more
	| HEX_DIGITS*	{System.out.println("Unknown");}
	;

cmdA	:'020B012D'	{System.out.println("02...");}
	|'040E13006458'	{System.out.println("04...");}
	|'051B010203043F'	{System.out.println("05...");}
	// plus many more
	| HEX_DIGITS*	{System.out.println("unknown");}
	;
	
cmdD	:'021A003A'	{System.out.println("xx");}
	|'0527DC0AE60131'	{System.out.println("xx");}
	// plus many more
	| HEX_DIGITS*	{System.out.println("unknown");}
	;	

id	: '37'		{System.out.println("37");}
	| '24'		{System.out.println("24");}
	// plus many more
	| HEX_DIGITS 	{System.out.println("id=" + $id.text);}
	;

crc	: HEX_DIGITS
	;

length	: HEX_DIGITS 	{System.out.println("length=" + $length.text);}
	;

HEX_DIGITS
	: HEX_DIGIT HEX_DIGIT
	;

fragment
HEX_DIGIT
	: ('a'..'f'|'A'..'F'|'0'..'9')
	;

NEWLINE
	: '\r'? '\n'
	;

From ted.villalba at gmail.com  Fri Jun 15 14:30:09 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Fri, 15 Jun 2007 14:30:09 -0700
Subject: [antlr-interest] Java string array issue in v3.
Message-ID: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>

Hi.
Not sure, I might be doing something wrong here, but this seems like a bug.
I'm trying to pass a string array to the start of my tree, but when I
compile my tree grammar the String array gets compiled
into a String.
So in treeGrammar.g my start symbol is rule "start"

start[HashMap fieldMap, String[] fqls]
@init{
etc etc...
}

The problem arises when I compile the tree grammar. The resulting java code
has the following signature for start:

*

public* *final* start_return start(HashMap fieldMap, String fqls)
*throws*RecognitionException {
*...*

So, when I try to compile my test rig I get an error because it's expecting
a string and I am trying to pass a String[].
 walker.start(parser.fieldMap, fqls)


Is this a bug in the ANTLR compiler, or my approach?


Thanks,
Ted

**
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/1b249a46/attachment.html 

From jaluber at gmx.de  Fri Jun 15 14:35:12 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 15 Jun 2007 23:35:12 +0200
Subject: [antlr-interest] Java string array issue in v3.
In-Reply-To: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>
References: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>
Message-ID: <46730610.20409@gmx.de>

Ted Villalba wrote:
> Hi.
> Not sure, I might be doing something wrong here, but this seems like a bug.
> I'm trying to pass a string array to the start of my tree, but when I
> compile my tree grammar the String array gets compiled
> into a String.
> So in treeGrammar.g my start symbol is rule "start"
>  
> start[HashMap fieldMap, String[] fqls]
> @init{
> etc etc...
> }

IIRC, the problem is that arrays rely on "[]" which are part of the
ANTLR grammar and that this is falsely attributed to be a parameter for
a rule. As far as I know there is no way to prevent this behaviour right
now. A workaround would be to declare flqs as object and cast it in Java
to a String array.

Best regards,
Johannes Luber

From antlr at mirality.co.nz  Fri Jun 15 16:51:18 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 16 Jun 2007 11:51:18 +1200
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.wor
 ld>
References: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
Message-ID: <20070615235130.46A3211EB45@www.antlr.org>

At 23:13 15/06/2007, Chaudhari, Pranita, OPEE14 wrote:
>I am new to ANTLRWorks need help !
>
>When I am trying to debug Tree Parser Grammar, window pops up 
>saying "ANTLRWorks does not support debugging tree Parser 
>Grammar". Does AntlrWorks 1.0.2 supports it?

While on the subject of debugging wishlists, it'd be nice if AW 
could debug through lexers as well.  That'd save having to write a 
throwaway program to step through the generated lexer code :) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070616/b006fe31/attachment.html 

From inder.sabharwal at gmail.com  Fri Jun 15 17:41:11 2007
From: inder.sabharwal at gmail.com (inder sabharwal)
Date: Fri, 15 Jun 2007 17:41:11 -0700
Subject: [antlr-interest] parsing syslog entries...
Message-ID: <467331A7.40605@gmail.com>

Hi-

I am trying to write a tool for parsing Syslog entries and am facing 
issues - which I am unable to get answers to inspite of reading the 
Definitive book and other resources on the web.

My problem:
1.) Syslog entries contain a priority followed by a timestamp and 
hostname (and some more). The actual log entry follows these tokens.
2.) I want to distinguish the timestamp and ip/hostname in header from 
the ones that may be contained in the log message.
3.) The rules i have put together below result in a warning:
Decision can match input such as "TS" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
Decision can match input such as "HOSTNAME" using multiple alternatives: 
2, 3
As a result, alternative(s) 3 were disabled for that input
Decision can match input such as "IPV4" using multiple alternatives: 1, 3
As a result, alternative(s) 3 were disabled for that input
Decision can match input such as "PRIO..WS" using multiple alternatives: 
1, 2
As a result, alternative(s) 2 were disabled for that input
The following alternatives are unreachable: 2

How can I set the precendence of the elements of the header rule to tell 
the parser that a TS can appear both in the header as well as the message?

4.) The impression I got after reading the documentation was that the 
(.*EOL) rule would consume all characters until EOL. I expected this 
rule to override the WS rule (of skipping whitespaces) and just give me 
a token of a big string (I am using this rule as the 'message' rule below).
Instead everything after dot is tokenized by the lexer before returning 
me 'all tokens' (since .) instead of all characters - did I misread 
something here?

Thanks in advance.
My rules file is attached here: -->

// Log messages are split into header and message part.
logMessage
    :    header message
    {
    };

//Header is PRIORITY + TIMESTAMP + (IP address or hostname). I have made 
TIMESTAMP optional as I am dealing with non-conformant syslog entries.
    header    :    p=PRIO t=TS? (ip=IPV4 | h=HOSTNAME)?
{
    System.out.println("p=" + $p.text + " t=" + $t.text + " ip=" + 
($ip!=null?$ip.text:"null") + " h=" + ($h!=null?$h.text:"null"));
};

//Message is all characters until EOL or EOF.
message    :    (m+=.*) EOL? EOF?
{
    for (int i=0; i < $m.size(); i++) {
        System.out.println("m[" + i + "]=" + 
((Token)$m.get(i)).getText() + " - " + ((Token)$m.get(i)).getType());
    }
}
;   

PRIO    :    '<' (i+=INT)+ {$i.size() <= 4}? '>';

DATE    :    MONTH TWOINTS TWOINTS ':' TWOINTS ':' TWOINTS;

TS    :    (BIGLTR SMALLLTR SMALLLTR) ' ' TWOINTS ' ' TIME;


//IMPORTANT: Make sure IPV4 is before HOSTNAME as it is a subset of 
HOSTNAME and we want it matched first.   
IPV4
    :    THREEINTS '.' THREEINTS '.' THREEINTS;

HOSTNAME:    DOMAINPART ('.' DOMAINPART)+;


fragment
DOMAINPART
    :    ALPHANUM ('-' ALPHANUM)*;
       
ALPHANUM:    (LETTER | INT )+;

fragment   
TIME    :    TWOINTS ':' TWOINTS ':' TWOINTS;

fragment
MONTH    :    LETTER LETTER LETTER;

fragment
TWOINTS:    INT INT;

fragment
THREEINTS
    :    INT INT INT;
   
fragment
LETTER    :    ('a'..'z'|'A'..'Z');

fragment
SMALLLTR:    ('a'..'z');

fragment
BIGLTR    :    ('A'..'Z');

fragment
INT    :    '0'..'9';

fragment
EOL    :    (('\r\n') | ('\n'));

WS     :     (' ' |'\t' |'\n' |'\r' )+ {skip();} ;


--------
Regards.
Inder Sabharwal

From matthew.j.diehl at intel.com  Fri Jun 15 17:48:57 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 15 Jun 2007 17:48:57 -0700
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <20070615235130.46A3211EB45@www.antlr.org>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20214D535@orsmsx417.amr.corp.intel.com>

For now while the lexer debugger isn't in existence, what I have done to
help me a little bit is make a grammar with just the lexer rules.  Then
make a parser rule for each lexer rule, and then a rule with every other
rule in it.  All the extra rules are made so that when you click on the
token in the debug window, it will show you which parser (and since it's
only mapped to one lexer rule) rule it is:

 

everything

 : this

 | that

 | anotherOne

 | andThis

 | whitespace

 ;

 

this : THIS;

that : THAT;

anotherOne : ANOTHERONE;

andThis : ANDTHIS;

whitespace : WHITESPACE;

 

THIS : ....;

THAT: ....;

ANOTHERONE: ...;

ANDTHIS:...;

...etc.

 

Or something like that.  That helped me out when I was having problems.
It may not step through, but it'll tell you exactly what everything
converted to.

 

Matt

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Friday, June 15, 2007 4:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Debugging Tree Parser grammar using
ANTLRWorks

 

At 23:13 15/06/2007, Chaudhari, Pranita, OPEE14 wrote:



I am new to ANTLRWorks need help !
 
When I am trying to debug Tree Parser Grammar, window pops up saying
"ANTLRWorks does not support debugging tree Parser Grammar". Does
AntlrWorks 1.0.2 supports it?


While on the subject of debugging wishlists, it'd be nice if AW could
debug through lexers as well.  That'd save having to write a throwaway
program to step through the generated lexer code :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070615/d3e2f106/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Jun 15 22:51:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jun 2007 15:51:02 +1000
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
References: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
Message-ID: <96C2D442-710C-4EE7-B39D-C2FB242BC976@cs.usfca.edu>

Well, it works; i asked Jean to change the message.  It just has to  
"debug remote..." not "debug".  He just doesn't have the test rig set  
up.  You can start up a tree parser from command line and have AW  
connect to it.

Ter
On Jun 15, 2007, at 9:13 PM, Chaudhari, Pranita, OPEE14 wrote:

> I am new to ANTLRWorks need help !
>
> When I am trying to debug Tree Parser Grammar, window pops up  
> saying "ANTLRWorks does not support debugging tree Parser Grammar".  
> Does AntlrWorks 1.0.2 supports it?
>
> -Pranita


From parrt at cs.usfca.edu  Fri Jun 15 23:01:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jun 2007 16:01:06 +1000
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20210B7B7@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20210B7B7@orsmsx417.amr.corp.intel.com>
Message-ID: <7F15F5AD-D78D-4C83-91DA-1110172E672A@cs.usfca.edu>


On Jun 16, 2007, at 4:38 AM, Diehl, Matthew J wrote:

> Debugging tree parsers has not been implemented in ANTLRWorks yet.
Hi :)  Contrary to the message, it works...just not at click of  
button from AW.

Ter


From parrt at cs.usfca.edu  Fri Jun 15 23:11:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jun 2007 16:11:31 +1000
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <20070615235130.46A3211EB45@www.antlr.org>
References: <4A4BFB693434EA43A40E8C85DFE4046F815F89@deimsg30.de.net.world>
	<20070615235130.46A3211EB45@www.antlr.org>
Message-ID: <50EAA69C-B944-4648-8AB8-DD5204D3EC35@cs.usfca.edu>


On Jun 16, 2007, at 9:51 AM, Gavin Lambert wrote:

> At 23:13 15/06/2007, Chaudhari, Pranita, OPEE14 wrote:
>> I am new to ANTLRWorks need help !
>>
>> When I am trying to debug Tree Parser Grammar, window pops up  
>> saying "ANTLRWorks does not support debugging tree Parser  
>> Grammar". Does AntlrWorks 1.0.2 supports it?
>
> While on the subject of debugging wishlists, it'd be nice if AW  
> could debug through lexers as well.  That'd save having to write a  
> throwaway program to step through the generated lexer code :)

I think we could add debug event triggers to the lexers w/o much  
effort.  ANTLRWorks would just...work.  :)  Well, assuming we treated  
chars as tokens.

Ter

From kroepke at classdump.org  Sat Jun 16 04:59:27 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 13:59:27 +0200
Subject: [antlr-interest] Turning off harmless warnings
In-Reply-To: <B66EE10B-8B0F-4D08-9E2D-201B0C362299@wincent.com>
References: <B66EE10B-8B0F-4D08-9E2D-201B0C362299@wincent.com>
Message-ID: <6EE02E3E-5BEA-4EC9-AC9E-65BD0C117E8B@classdump.org>


On Jun 15, 2007, at 11:29 AM, Wincent Colaiuta wrote:

> So like I said, it would be good if someone with write access could  
> get this into the tracker, as it is not always possible to rewrite  
> the rules in such a way as to eliminate all such warnings!

Thanks for the pointer, just added: <http://www.antlr.org:8888/browse/ 
ANTLR-139>

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sat Jun 16 05:39:17 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 14:39:17 +0200
Subject: [antlr-interest] Java string array issue in v3.
In-Reply-To: <46730610.20409@gmx.de>
References: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>
	<46730610.20409@gmx.de>
Message-ID: <E1B1F737-15F0-4A2F-957B-B1CFCC28D47B@classdump.org>

Hi!

On Jun 15, 2007, at 11:35 PM, Johannes Luber wrote:

> Ted Villalba wrote:
>> Hi.
>> Not sure, I might be doing something wrong here, but this seems  
>> like a bug.
>> I'm trying to pass a string array to the start of my tree, but when I
>> compile my tree grammar the String array gets compiled
>> into a String.
>> So in treeGrammar.g my start symbol is rule "start"
>>
>> start[HashMap fieldMap, String[] fqls]
>> @init{
>> etc etc...
>> }
>
> IIRC, the problem is that arrays rely on "[]" which are part of the
> ANTLR grammar and that this is falsely attributed to be a parameter  
> for
> a rule. As far as I know there is no way to prevent this behaviour  
> right
> now. A workaround would be to declare flqs as object and cast it in  
> Java
> to a String array.

Yes, that's correct. As it stands it is not possible to escape the []  
chars.
I just had a look at the grammar and have a simple fix for this case,  
i.e.
it should treat a bare '[]' as just that token without trying to  
match an argument.
I'm not, however, certain that this actually is a good idea, because I'm
unsure whether or not it breaks other things.

We should ask Ter if he's alright with it, after that I could push  
the fix.
In the meantime I added a bug and will attach the diff over at
<http://www.antlr.org:8888/browse/ANTLR-140>

Thanks for reporting this!

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sat Jun 16 05:52:32 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 14:52:32 +0200
Subject: [antlr-interest] Patch for filter mode (+1 Vote!)
In-Reply-To: <E15DD586-5A35-4AD3-83B8-0448521C6D9B@wincent.com>
References: <fa6015a20706141300x58201bf0m5461ef9e781f9d8a@mail.gmail.com>
	<E15DD586-5A35-4AD3-83B8-0448521C6D9B@wincent.com>
Message-ID: <993ABC8B-CFE5-4050-B8CC-38B5D26114B3@classdump.org>


On Jun 15, 2007, at 2:04 AM, Wincent Colaiuta wrote:

> Terence is off to Sydney, as you probably know... he sent me a  
> message to say, "remind me of this when I get back in a couple of  
> weeks". So I think you'll see the issue addressed in one way or  
> another then....

I added this at <http://www.antlr.org:8888/browse/ANTLR-141> so we  
don't lose this one.

thanks again,

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sat Jun 16 06:34:44 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 15:34:44 +0200
Subject: [antlr-interest] Bug using rule action?
In-Reply-To: <B266D929-9B62-4ACE-9E1E-6DA5BA1C8003@apple.com>
References: <B266D929-9B62-4ACE-9E1E-6DA5BA1C8003@apple.com>
Message-ID: <D9F01011-2E89-4FFA-8132-70D5F0A2348A@classdump.org>

Hi Cameron!

On Jun 14, 2007, at 1:19 AM, Cameron Esfahani wrote:

> I'm trying to add an action to one of my rules and I'm seeing some  
> strange behavior:
>
> grammar Test;
> [...]
> number_size
> 	:	num = NUMBER size = size_qualifier {
> 			// Validate that NUMBER fits within the size qualifier.
> 			System.out.printf( "!\%s, !\%s\n", $num.toString(), $size.getTree 
> ().toString() );
> 		} -> size_qualifier NUMBER
> 	;
> If I try to run this through ANTLR, I get an error:
>
> error(116): Test.g:30:39: unknown attribute for rule  
> size_qualifier: getTree
>
> When I examine TestParser.java, I see that "$size" is still there.   
> If I change the action, to remove the $ character, then it works:
>
> 			System.out.printf( "!\%s, !\%s\n", $num.toString(), size.getTree 
> ().toString() );
>
> Why do I have to do this?  How come $num correctly causes a local  
> variable named num to be created, but not $size?

Don't remove the $ char, as this defeats any checking ANTLR can do on  
rule attributes. When doing that you rely on the internal naming
scheme ANTLR uses for the generated code. In the Objective-C target,  
for instance, this would break your code as I'm prefixing every local  
variable
with an _ character to avoid name clashes.

The reason for the behavior you are seeing is that ANTLR checks  
whether attributes on labels are valid. When it sees $size.getTree()  
it thinks you want to access the getTree field of whatever  
size_qualifier returns and discovers that size_qualifier doesn't  
declare any attribute with that name. Consequently it flags it as an  
error. It's a bit unfortuntate because it doesn't know about methods  
in the size_return class, even though it has generated that method  
itself.

When you use $size.tree.toString() it will work because the tree  
attribute is a "predefined attribute" of rules. The code generated  
would look like:

	// Validate that NUMBER fits within the size qualifier.
	System.out.printf( "!%s, !%s\n", num.toString(), ((CommonTree) 
size.tree).toString() );

The reason that $num.toString works is that $num refers to a Token  
and not a rule. It is allowed to reference a token or token label in  
a "stand-alone" manner, while this is not permitted for rule references.

Note that you can do without any labels in your example:

number_size
	:	NUMBER size_qualifier {
			// Validate that NUMBER fits within the size qualifier.
			System.out.printf( "!\%s, !\%s\n", $NUMBER.toString(),  
$size_qualifier.tree.toString() );
		} -> size_qualifier NUMBER
	;

generates your action as:

	// Validate that NUMBER fits within the size qualifier.
	System.out.printf( "!%s, !%s\n", NUMBER4.toString(), ((CommonTree) 
size_qualifier5.tree).toString() );

Labels are only necessary to disambiguate between multiple references  
to the same rule or token. This also nicely illustrates that you  
shouldn't rely on any naming scheme for rule returns because they  
will highly depend on the input grammar.
By using the predefined rule attributes we can ensure that we  
generate better code and are more flexible with future changes.

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From ot0006 at 0x29a.org.uk  Sat Jun 16 06:38:49 2007
From: ot0006 at 0x29a.org.uk (geoff)
Date: Sat, 16 Jun 2007 14:38:49 +0100
Subject: [antlr-interest] Imaginary nodes in Antlr 3
Message-ID: <mmo773h4oq7lcr77ib0rm53ee0l9hs7o28@4ax.com>


Hallo there,

I'm running AntlrWorks 1.0.2, Antlr 3.0, StringTemplate 3.1b1 on XP.

I have The Definitive Antlr Reference open next to me.

I'm adding an AST to the Expr.g first example. I want to make the assignment operator an
imaginary node:

stat:   expr NEWLINE! {System.out.println($expr.value);}
    |   ID '=' expr NEWLINE  -> ^(ASSIGN ID expr)          
    |   NEWLINE!
    ; 

On p166 Adding Imaginary Nodes the book says "simply refer to its token type and, and
Antlr will create a Token object with that token type", which is what I expected to happen
to ASSIGN.

But, this does not work, and I get 
(135) ... Reference to undefined token in rewrite rules: ASSIGN
as well as red wavy underlining in AntlrWorks.

On a guess I then tried adding the token to the grammar

ASSIGN : ; 

and everything compiled and ran as expected, tree built perfectly.

Is there something I'm missing on automatic creation of imaginary tokens? Clues welcome.

--
best,
geoff stevens

regrettably the email address above will bounce


From kroepke at classdump.org  Sat Jun 16 07:26:12 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 16:26:12 +0200
Subject: [antlr-interest] Imaginary nodes in Antlr 3
In-Reply-To: <mmo773h4oq7lcr77ib0rm53ee0l9hs7o28@4ax.com>
References: <mmo773h4oq7lcr77ib0rm53ee0l9hs7o28@4ax.com>
Message-ID: <B82EEBD6-5D46-4D92-ACAA-04118E6678C3@classdump.org>

Hi geoff!

On Jun 16, 2007, at 3:38 PM, geoff wrote:

> stat:   expr NEWLINE! {System.out.println($expr.value);}
>     |   ID '=' expr NEWLINE  -> ^(ASSIGN ID expr)
>     |   NEWLINE!
>     ;
>
> On p166 Adding Imaginary Nodes the book says "simply refer to its  
> token type and, and
> Antlr will create a Token object with that token type", which is  
> what I expected to happen
> to ASSIGN.
>
> But, this does not work, and I get
> (135) ... Reference to undefined token in rewrite rules: ASSIGN
> as well as red wavy underlining in AntlrWorks.
>
> On a guess I then tried adding the token to the grammar
>
> ASSIGN : ;
>
> and everything compiled and ran as expected, tree built perfectly.
>
> Is there something I'm missing on automatic creation of imaginary  
> tokens? Clues welcome.

ANTLR won't generate the token in the grammar. The text refers to the  
Token object. You still need to tell ANTLR about the token in the  
grammar, either by declaring a lexer rule or, if you want to have  
imaginary tokens, via the tokens {} section in your grammar.
Refer to page 99 in the book.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sat Jun 16 11:38:45 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 16 Jun 2007 20:38:45 +0200
Subject: [antlr-interest] Java string array issue in v3.
In-Reply-To: <E1B1F737-15F0-4A2F-957B-B1CFCC28D47B@classdump.org>
References: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>
	<46730610.20409@gmx.de>
	<E1B1F737-15F0-4A2F-957B-B1CFCC28D47B@classdump.org>
Message-ID: <CF71D177-4FC9-48F2-83FF-A9B786DAFF77@classdump.org>


On Jun 16, 2007, at 2:39 PM, Kay Roepke wrote:

> We should ask Ter if he's alright with it, after that I could push  
> the fix.
> In the meantime I added a bug and will attach the diff over at
> <http://www.antlr.org:8888/browse/ANTLR-140>

FYI, the above URL has a comment describing the fix. When (and if)  
that goes through, you will be able to escape '[' and ']' characters  
in rule arguments, thus allowing things like String[] strArray as  
parameters.
It shouldn't affect anything else, as far as I can see.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From tgleason at gmail.com  Sat Jun 16 12:06:46 2007
From: tgleason at gmail.com (Tim Gleason)
Date: Sat, 16 Jun 2007 15:06:46 -0400
Subject: [antlr-interest] Is my brain crooked?
Message-ID: <e6f4d06e0706161206q51bacf2cu99e85c21b75f6943@mail.gmail.com>

I bought the ANTLR book with the idea that I would have some fun
writing a few toy languages -- and maybe even learn a thing or two.
But it seems /every/ grammar I try to write fails due to the LL(*)
restriction.  My brain just seems unable to grok a grammar that ANTLR
likes :(  I've written several recursive descent parsers in the past
and never had these kinds of problems.

Anyway, in re-writing my grammar over an over until I get it right, I
seem to have something that sorta works, but now I can't figure out
how to write the tree generator.

A fragment of my original grammar looks like this:

math_expr
 :  times_expr                               -> times_expr
 |  times_expr times_op math_expr -> ^(BIN_EXPR times_op times_expr math_expr)
 ;

times_op
       :        ('*'|'/');

That, of course, gave me errors.  I've rewritten the rule, like:

math_expr
 : times_expr ('*' times_expr)*
 ;

What I want is a tree if there is a '*', and no tree if not.  I know
that I can add the '^' at the '*' -- but that will give me '*' at the
root of my tree.  What I really want is a tree that looks like:
(BIN_OP {operation} {left_expression} {right_expression})

Is there an easy way to do this in my case?

Thanks for your help!
tim

From antlr at mirality.co.nz  Sat Jun 16 14:48:23 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 17 Jun 2007 09:48:23 +1200
Subject: [antlr-interest] Java string array issue in v3.
In-Reply-To: <CF71D177-4FC9-48F2-83FF-A9B786DAFF77@classdump.org>
References: <69fb4b090706151430y40d1f3c8yd1a30e898da6f481@mail.gmail.com>
	<46730610.20409@gmx.de>
	<E1B1F737-15F0-4A2F-957B-B1CFCC28D47B@classdump.org>
	<CF71D177-4FC9-48F2-83FF-A9B786DAFF77@classdump.org>
Message-ID: <20070616214834.E8E2611EB54@www.antlr.org>

At 06:38 17/06/2007, Kay Roepke wrote:
 >FYI, the above URL has a comment describing the fix. When (and 
if)
 >that goes through, you will be able to escape '[' and ']'
 >characters in rule arguments, thus allowing things like String[] 

 >strArray as parameters.

Why can't it be implemented like it was in v2, which didn't 
require any escaping at all?

IIRC it maintained a count of opened square brackets, so the 
sequence:
   start[HashMap fieldMap, String[] fqls]
would be interpreted something like this:
   - rulename 'start'
   - open parameter block '[' (incrementing "number of square 
brackets" to one)
   - parameter 1 type 'HashMap'
   - parameter 1 name 'fieldMap'
   - parameter separator ','
   - parameter 2 type 'String[]' (incrementing then decrementing 
its internal "number of square brackets" counter to avoid exiting 
the parameter block)
   - parameter 2 name 'fqls'
   - end of parameter list ']' (close square bracket encountered 
when "number of square brackets" was one)

I guess escaping is more robust in pathological cases (where the 
target language requires unbalanced square brackets), but I can't 
think of any common language where that is the case, so I don't 
think it's worth worrying about.  Escaping should probably be 
supported regardless (as a matter of course), but my point is that 
it shouldn't be *required* in this case.  Escaping is unnatural.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070617/72afaecc/attachment.html 

From matthew.j.diehl at intel.com  Sat Jun 16 15:41:55 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Sat, 16 Jun 2007 15:41:55 -0700
Subject: [antlr-interest] Is my brain crooked?
In-Reply-To: <e6f4d06e0706161206q51bacf2cu99e85c21b75f6943@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>

I think I saw something like this in the book, but what you could try
(if reordering your original grammar and using predicates doesn't work
(times_expr times_op)=>), is:  (oh yeah, page 188 of the book)

math_expr
 : (times_expr -> times_expr)
   (
    times_op me2=math_expr -> ^(BIN_EXPR times_op $math_expr $me2)
   )?
 ;

So, if there's just times_expr, then that's all that is returned (no
tree), otherwise, a tree is created, and the previous parts of
$math_expr (which is just times_expr) are added to the tree.  ...or
something like that...
If you don't already have the book, I highly recommend it.

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tim Gleason
Sent: Saturday, June 16, 2007 12:07 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Is my brain crooked?

I bought the ANTLR book with the idea that I would have some fun
writing a few toy languages -- and maybe even learn a thing or two.
But it seems /every/ grammar I try to write fails due to the LL(*)
restriction.  My brain just seems unable to grok a grammar that ANTLR
likes :(  I've written several recursive descent parsers in the past
and never had these kinds of problems.

Anyway, in re-writing my grammar over an over until I get it right, I
seem to have something that sorta works, but now I can't figure out
how to write the tree generator.

A fragment of my original grammar looks like this:

math_expr
 :  times_expr                               -> times_expr
 |  times_expr times_op math_expr -> ^(BIN_EXPR times_op times_expr
math_expr)
 ;

times_op
       :        ('*'|'/');

That, of course, gave me errors.  I've rewritten the rule, like:

math_expr
 : times_expr ('*' times_expr)*
 ;

What I want is a tree if there is a '*', and no tree if not.  I know
that I can add the '^' at the '*' -- but that will give me '*' at the
root of my tree.  What I really want is a tree that looks like:
(BIN_OP {operation} {left_expression} {right_expression})

Is there an easy way to do this in my case?

Thanks for your help!
tim

From tgleason at gmail.com  Sat Jun 16 16:54:22 2007
From: tgleason at gmail.com (Tim Gleason)
Date: Sat, 16 Jun 2007 19:54:22 -0400
Subject: [antlr-interest] Is my brain crooked?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
References: <e6f4d06e0706161206q51bacf2cu99e85c21b75f6943@mail.gmail.com>
	<A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
Message-ID: <e6f4d06e0706161654s7f6ff50byed1efbd20abdfd45@mail.gmail.com>

Thank you!   That's what I needed.  Makes the gammar unreadable, but ;)

--tim


On 6/16/07, Diehl, Matthew J <matthew.j.diehl at intel.com> wrote:
> I think I saw something like this in the book, but what you could try
> (if reordering your original grammar and using predicates doesn't work
> (times_expr times_op)=>), is:  (oh yeah, page 188 of the book)
>
> math_expr
>  : (times_expr -> times_expr)
>    (
>     times_op me2=math_expr -> ^(BIN_EXPR times_op $math_expr $me2)
>    )?
>  ;
>
> So, if there's just times_expr, then that's all that is returned (no
> tree), otherwise, a tree is created, and the previous parts of
> $math_expr (which is just times_expr) are added to the tree.  ...or
> something like that...
> If you don't already have the book, I highly recommend it.
>
> Matt
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tim Gleason
> Sent: Saturday, June 16, 2007 12:07 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Is my brain crooked?
>
> I bought the ANTLR book with the idea that I would have some fun
> writing a few toy languages -- and maybe even learn a thing or two.
> But it seems /every/ grammar I try to write fails due to the LL(*)
> restriction.  My brain just seems unable to grok a grammar that ANTLR
> likes :(  I've written several recursive descent parsers in the past
> and never had these kinds of problems.
>
> Anyway, in re-writing my grammar over an over until I get it right, I
> seem to have something that sorta works, but now I can't figure out
> how to write the tree generator.
>
> A fragment of my original grammar looks like this:
>
> math_expr
>  :  times_expr                               -> times_expr
>  |  times_expr times_op math_expr -> ^(BIN_EXPR times_op times_expr
> math_expr)
>  ;
>
> times_op
>        :        ('*'|'/');
>
> That, of course, gave me errors.  I've rewritten the rule, like:
>
> math_expr
>  : times_expr ('*' times_expr)*
>  ;
>
> What I want is a tree if there is a '*', and no tree if not.  I know
> that I can add the '^' at the '*' -- but that will give me '*' at the
> root of my tree.  What I really want is a tree that looks like:
> (BIN_OP {operation} {left_expression} {right_expression})
>
> Is there an easy way to do this in my case?
>
> Thanks for your help!
> tim
>

From open.zone at virgin.net  Sat Jun 16 17:40:59 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 17 Jun 2007 01:40:59 +0100
Subject: [antlr-interest] Java string array issue in v3.
In-Reply-To: <20070616214834.E8E2611EB54@www.antlr.org>
Message-ID: <002301c7b078$2d5bbf20$c704a8c0@hercules>

Hi,
 
While I don't doubt that not requiring escapes is a good thing, V2 wasn't
any different in dealing with brackets within argument action blocks. At
least, I don't remember that it was...
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: 16 June 2007 22:48
To: ANTLR mail-list
Subject: Re: [antlr-interest] Java string array issue in v3.


At 06:38 17/06/2007, Kay Roepke wrote:
>FYI, the above URL has a comment describing the fix. When (and if)  
>that goes through, you will be able to escape '[' and ']' 
>characters in rule arguments, thus allowing things like String[] 
>strArray as parameters.

Why can't it be implemented like it was in v2, which didn't require any
escaping at all?

IIRC it maintained a count of opened square brackets, so the sequence:
  start[HashMap fieldMap, String[] fqls]
would be interpreted something like this:
  - rulename 'start'
  - open parameter block '[' (incrementing "number of square brackets" to
one)
  - parameter 1 type 'HashMap'
  - parameter 1 name 'fieldMap'
  - parameter separator ','
  - parameter 2 type 'String[]' (incrementing then decrementing its internal
"number of square brackets" counter to avoid exiting the parameter block)
  - parameter 2 name 'fqls'
  - end of parameter list ']' (close square bracket encountered when "number
of square brackets" was one)
 
I guess escaping is more robust in pathological cases (where the target
language requires unbalanced square brackets), but I can't think of any
common language where that is the case, so I don't think it's worth worrying
about.  Escaping should probably be supported regardless (as a matter of
course), but my point is that it shouldn't be *required* in this case.
Escaping is unnatural.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070617/9b004027/attachment.html 

From mark.mandel at gmail.com  Sat Jun 16 18:11:02 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Sun, 17 Jun 2007 11:11:02 +1000
Subject: [antlr-interest] Using ANTLR v3 to help build a Eclipse plugin
Message-ID: <4153ee230706161811v347d69fexf5c8fd37ada68ea8@mail.gmail.com>

Hey all,

Just a general question to the group.

Looking at using a Grammar I am developing to aid in the development
of a plugin for Eclipse.

Just wondering if there are any caveats, or things I should look out
for when embarking on this endeavor.

I'm not familiar with developing Eclipse plugins, but I thought I
would ask the question here to see if there were any pit falls I
should look out for.

Thanks in advance,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From lgcraymer at yahoo.com  Sat Jun 16 21:02:04 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sat, 16 Jun 2007 21:02:04 -0700 (PDT)
Subject: [antlr-interest] binary executable for ANTLR tool
In-Reply-To: <E3C8DB02-B666-4C2C-8408-08DED897573B@cs.usfca.edu>
Message-ID: <168998.72935.qm@web55904.mail.re3.yahoo.com>

Ter--

GCJ actually is not that hard to find, it's just
usually "hidden" as part of the gcc distribution.

--Loring

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> Anybody wanna build windows / linux / mac binaries
> for ANTLR tool  
> itself?  I couldn't even get GCJ on my mac.  I'm
> trying to find a gcj  
> binary for linux so I can make an ANTLR binary.  Why
> is GCJ hard so  
> hard to find/download?  Must be because it doesn't
> work.
> 
> Ter
> 



       
____________________________________________________________________________________
Looking for a deal? Find great prices on flights and hotels with Yahoo! FareChase.
http://farechase.yahoo.com/

From rerdavies at rogers.com  Sat Jun 16 21:55:03 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Sun, 17 Jun 2007 00:55:03 -0400
Subject: [antlr-interest] Is my brain crooked?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
Message-ID: <2CBFDC90EBA349B893A50994FECC70AD@GWB>

Or this structure, which is better because it gives correct associativity. 
The structure given in the previous message will yeild right-associative 
trees instead of left-associative trees.

multiplicative_expression
     :     (unary_expression->unary_expression)
          (
               ('*' unary_expression) -> ^('*' $multiplicative_expression 
unary_expression)
          |     ('/' unary_expression) ->  ^('/' $multiplicative_expression 
unary_expression)
          |     ('%' unary_expression) -> ^('%' $multiplicative_expression 
unary_expression)
      )*
     ;

I have to admit, LL grammars take a bit of getting used to after LALR. (But 
it's not like LALR was particularly easy to to get used to either).

Honestly, I'm not sure whether you can use  '*'^ to construct correct trees. 
I believe you can, but I've used the given structure in my grammar.


----- Original Message ----- 
From: "Diehl, Matthew J" <matthew.j.diehl at intel.com>
To: "Tim Gleason" <tgleason at gmail.com>; <antlr-interest at antlr.org>
Sent: Saturday, June 16, 2007 6:41 PM
Subject: Re: [antlr-interest] Is my brain crooked?


I think I saw something like this in the book, but what you could try
(if reordering your original grammar and using predicates doesn't work
(times_expr times_op)=>), is:  (oh yeah, page 188 of the book)

math_expr
 : (times_expr -> times_expr)
   (
    times_op me2=math_expr -> ^(BIN_EXPR times_op $math_expr $me2)
   )?
 ;

So, if there's just times_expr, then that's all that is returned (no
tree), otherwise, a tree is created, and the previous parts of
$math_expr (which is just times_expr) are added to the tree.  ...or
something like that...
If you don't already have the book, I highly recommend it.

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tim Gleason
Sent: Saturday, June 16, 2007 12:07 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Is my brain crooked?

I bought the ANTLR book with the idea that I would have some fun
writing a few toy languages -- and maybe even learn a thing or two.
But it seems /every/ grammar I try to write fails due to the LL(*)
restriction.  My brain just seems unable to grok a grammar that ANTLR
likes :(  I've written several recursive descent parsers in the past
and never had these kinds of problems.

Anyway, in re-writing my grammar over an over until I get it right, I
seem to have something that sorta works, but now I can't figure out
how to write the tree generator.

A fragment of my original grammar looks like this:

math_expr
 :  times_expr                               -> times_expr
 |  times_expr times_op math_expr -> ^(BIN_EXPR times_op times_expr
math_expr)
 ;

times_op
       :        ('*'|'/');

That, of course, gave me errors.  I've rewritten the rule, like:

math_expr
 : times_expr ('*' times_expr)*
 ;

What I want is a tree if there is a '*', and no tree if not.  I know
that I can add the '^' at the '*' -- but that will give me '*' at the
root of my tree.  What I really want is a tree that looks like:
(BIN_OP {operation} {left_expression} {right_expression})

Is there an easy way to do this in my case?

Thanks for your help!
tim 


From parrt at cs.usfca.edu  Sun Jun 17 00:30:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Jun 2007 17:30:19 +1000
Subject: [antlr-interest] Is my brain crooked?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
Message-ID: <CA37A2A5-6089-4C2D-B2CB-EDB5F1FEF960@cs.usfca.edu>


On Jun 17, 2007, at 8:41 AM, Diehl, Matthew J wrote:

> I think I saw something like this in the book, but what you could try
> (if reordering your original grammar and using predicates doesn't work
> (times_expr times_op)=>), is:  (oh yeah, page 188 of the book)
>
> math_expr
>  : (times_expr -> times_expr)
>    (
>     times_op me2=math_expr -> ^(BIN_EXPR times_op $math_expr $me2)
>    )?
>  ;

or

math_expr : times_expr (times_op^ math_expr)* ;

except BIN_EXPR must be injected into the times_op.  Can do with an  
action.

Ter


From ssiegel at finjan.com  Sun Jun 17 01:58:26 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Sun, 17 Jun 2007 11:58:26 +0300
Subject: [antlr-interest] Problems with Antlr3 rewrite rules
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625268C@wavemachine.temporal-wave.com>
References: <E344C433F006AB45A306D422F9C3EB4C01F58585@exmail1.finjan.com><4663EC35.7060009@shmuelhome.mine.nu><46669E27.7000503@shmuelhome.mine.nu>
	<B36CCC332A32904F8FA3DE134A23533625268C@wavemachine.temporal-wave.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C020C9A45@exmail1.finjan.com>

Thanks Jim,

You motivated me to look at the theoretical meaning behind what I was
trying to do. Obviously, despite what my code asked for, one can't make
a subtree the root of another subtree. Where will the new children be
placed? That said, I believe that the old behavior was better, i.e., it
is better to put the new nodes at the end of the subtree of the old head
than to replace the subtree. So I would call this a low priority bug;
antlr did something which I consider wrong when I do something that
confuses it.

But now that I understand what is happening, there is a workaround. I
can make a new subtree that has the old subtree and the new nodes as
children. Thanks again for helping me think.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, June 06, 2007 6:29 PM
To: shmuel siegel; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Problems with Antlr3 rewrite rules

....

The best thing to do is to debug the generated code in say Netbeans, so
you can see why you are getting the null pointers and where the tree is
being replaced by the imaginary token. Sometimes you can make things go
away by experimenting with your grammar as in 1) below, so I presume you
can work with that for a while? It may will be that the behavior you are
seeing in 2) is actually what you should expect and what you were
getting previously was an accident.

....

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of shmuel siegel
> Sent: Wednesday, June 06, 2007 4:45 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problems with Antlr3 rewrite rules
> 
> We've been told that this mail list is the triage for bug reports.
This
> patient has been languishing in triage for three days. There hasn't
> even
> been any placebos offered. Has there been a specification change? Is
> there one or more bugs here? As I stated, I have a workaround for the
> first issue but none for the second issue.
> 
> I would really like to move up to the release version but these two
> issues are standing in my way. Can I get some help.
> 
> shmuel siegel wrote:
> > It seems that the problems were introduced with the move to
> > RewriteRuleSubtreeStream. I don't see any other substantive changes
> in
> > the generated parser code.
> >
> > Shmuel Siegel wrote:
> >>
> >> I have upgraded my production grammar from 3.0b6 to the release
> >> version. I am having two problems with the rewrite rules. Hopefully
> I
> >> just missed a specification change.
> >>
> >>
> >>
> >>     * Problem 1: When I have subclauses that do rewrites, the final
> >>       rewrite gets a null pointer exception. The following rule
used
> >>       to work but now throws an exception. I avoid the exception if
> I
> >>       extract the parenthesized sub-rule and make it a named rule.
> >>
> >> assignEntityAttr:
> >>
> >>             (
> >>
> >>                         thisNode->thisNode
> >>
> >>                   |     symbolTableElement->symbolTableElement
> >>
> >>                   |     positionalElement->positionalElement
> >>
> >>             )
> >>
> >>             '.' a='attr' op='=' attr=attrValue
> >>             -> ^(ASSIGN[$op] ^($assignEntityAttr PROPERTY[$a])
> $attr)
> >>
> >>             ;
> >>
> >>
> >>
> >>     * Problem 2: Tree construction seems to have changed. I used to
> be
> >>       able to write
> >>           o ^($ent PROPERTY[$a]) where $ent was itself a tree. When
> I
> >>             do it now, I keep the head of the $ent tree but its
> >>             children are replaced by the PROPERTY token.
> >>
> >>
> >>
> >>
> >>
> >> What has changed since b6?
> >>
> >>
> >>
> >> Shmuel
> >>
> >
> >
> 



From jhvdven at xs4all.nl  Sun Jun 17 05:20:20 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Sun, 17 Jun 2007 14:20:20 +0200
Subject: [antlr-interest] Error with date
Message-ID: <46752704.4050901@xs4all.nl>

Dear list,


I am taking my first steps with v3 (I have been working with 2.7 
before). I use AntlrWorks and have created the following snippet:

DIGIT    :    '0'..'9';
 
INT: DIGIT (DIGIT)*;

timestamp
    :    day '/' month '/' year ;
    
day    :    INT;

month    :    ('Jan' | 'Feb' | 'Mar' | 'Apr' | 'May' | 'Jun' | 'Jul' | 
'Aug' | 'Sep' | 'Oct' | 'Nov' | 'Dec');

year    :    INT;

When I feed it with: 09/Feb/2003 it matches the 09 and then tries to 
match Feb/2003, which of course fails: line 3:21 mismatched input 
'Feb/2003' expecting set null.

Can anyone explain this for me?

Kind regards,


Jan


From tgleason at gmail.com  Sun Jun 17 05:26:25 2007
From: tgleason at gmail.com (Tim Gleason)
Date: Sun, 17 Jun 2007 08:26:25 -0400
Subject: [antlr-interest] Is my brain crooked?
In-Reply-To: <CA37A2A5-6089-4C2D-B2CB-EDB5F1FEF960@cs.usfca.edu>
References: <A10CD303B51F814DB568A8AAF02174C20214D5F2@orsmsx417.amr.corp.intel.com>
	<CA37A2A5-6089-4C2D-B2CB-EDB5F1FEF960@cs.usfca.edu>
Message-ID: <e6f4d06e0706170526x68f4a50bna954862d75ca173e@mail.gmail.com>

I think Matt gave me the best solution (for me anyway).  Predicates
are the way to go -- I just hadn't made it to chapter 12 :)  I found
this the most readable and easiest to implement:

math_expr
  :  (times_expr times_op) => (times_expr times_op math_expr)
                          -> ^(BIN_EXPR times_op times_expr math_expr)
  |  times_expr     -> times_expr
  ;

Thanks for all of your help!
Tim

On 6/17/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 17, 2007, at 8:41 AM, Diehl, Matthew J wrote:
>
> > I think I saw something like this in the book, but what you could try
> > (if reordering your original grammar and using predicates doesn't work
> > (times_expr times_op)=>), is:  (oh yeah, page 188 of the book)
> >
> > math_expr
> >  : (times_expr -> times_expr)
> >    (
> >     times_op me2=math_expr -> ^(BIN_EXPR times_op $math_expr $me2)
> >    )?
> >  ;
>
> or
>
> math_expr : times_expr (times_op^ math_expr)* ;
>
> except BIN_EXPR must be injected into the times_op.  Can do with an
> action.
>
> Ter
>
>

From jhvdven at xs4all.nl  Sun Jun 17 05:56:16 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Sun, 17 Jun 2007 14:56:16 +0200
Subject: [antlr-interest] Error with date
In-Reply-To: <46752704.4050901@xs4all.nl>
References: <46752704.4050901@xs4all.nl>
Message-ID: <46752F70.8080109@xs4all.nl>

Ok, I solved it, but got another problem in return.
The parser matched the Feb/2003 to ID2
ID2 : ('a'..'z' |'A'..'Z' |'_' ) ('a'..'z' |'A'..'Z' |'_' |'0'..'9' | 
':' | '#' | '.' | '-' | ' ' | '/' )* ;
And if I remove the / from this definition, my timestamp is parsed 
correctly.
But not all my ID's.
I have several sort of ID's: some allow all characters, and some are 
more strict.
How would that be done?

Kind regards,

Jan


Jan van der Ven wrote:
> Dear list,
>
>
> I am taking my first steps with v3 (I have been working with 2.7 
> before). I use AntlrWorks and have created the following snippet:
>
> DIGIT    :    '0'..'9';
>
> INT: DIGIT (DIGIT)*;
>
> timestamp
>    :    day '/' month '/' year ;
>    day    :    INT;
>
> month    :    ('Jan' | 'Feb' | 'Mar' | 'Apr' | 'May' | 'Jun' | 'Jul' | 
> 'Aug' | 'Sep' | 'Oct' | 'Nov' | 'Dec');
>
> year    :    INT;
>
> When I feed it with: 09/Feb/2003 it matches the 09 and then tries to 
> match Feb/2003, which of course fails: line 3:21 mismatched input 
> 'Feb/2003' expecting set null.
>
> Can anyone explain this for me?
>
> Kind regards,
>
>
> Jan
>
>
>


From oliver at zeigermann.de  Sun Jun 17 07:15:44 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Sun, 17 Jun 2007 16:15:44 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <466D809C.9070607@gmx.de>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>
	<466D41E8.2080406@gmx.de>
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>
	<466D809C.9070607@gmx.de>
Message-ID: <9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>

Hi Johannes!

To me your solution looks nice. Maybe the error reporting could be
more beautiful ;)

Anyway, the only thing I could find was where the scope begins (should
be element in my opinion) and the check for equality in endTag.

This grammar modified in the way described works for me:

parser grammar xmlParser;
options {
    tokenVocab=xmlLexer;
    output=AST;
}

tokens {
    ELEMENT;
    ATTRIBUTE;
}

scope ElementScope {
String currentElementName;
}

document : element ;

element
scope ElementScope;
    : ( startTag^
            (element
            | PCDATA
            )*
            endTag!
        | emptyElement
        )
    ;

startTag
    : TAG_START_OPEN GENERIC_ID attribute* TAG_CLOSE
            {$ElementScope::currentElementName = $GENERIC_ID.text; }
        -> ^(ELEMENT GENERIC_ID attribute*)
    ;

attribute : GENERIC_ID ATTR_EQ ATTR_VALUE -> ^(ATTRIBUTE GENERIC_ID
ATTR_VALUE) ;

endTag!
    : { $ElementScope::currentElementName.equals(input.LT(2).getText()) }?
 TAG_END_OPEN GENERIC_ID TAG_CLOSE
    ;

emptyElement : TAG_START_OPEN GENERIC_ID attribute* TAG_EMPTY_CLOSE
        -> ^(ELEMENT GENERIC_ID attribute*)
    ;



2007/6/11, Johannes Luber <jaluber at gmx.de>:
> Oliver Zeigermann wrote:
> > 2007/6/11, Johannes Luber <jaluber at gmx.de>:
> >
> > He, Johannes!
> >
> > Good observation.
> >
> > Maybe we can have a version that checks the order using validating
> > semantic predicates. That really would be a good example for their
> > use.
> >
> > What do you think?
>
> I've created an implementation (see grammar below), but the error
> reporting AND recovering is weak. For the XML file
>
> <doc>
>     <assembly>
>         <name>Util</Name>
>     </assembly>
> </doc>
>
> the following is being output:
>
> "line 3:18 rule endTag failed predicate: {
> $ElementScope::currentElementName == input.LA(2).text }?
> line 4:4 rule endTag failed predicate: {
> $ElementScope::currentElementName == input.LA(2).text }?"
>
> The second message is a conundrum: If the value of currentElementName is
> still "name", why does it accept the closing </doc>? Maybe you have
> better idea regarding this problem.
>
> Best regards,
> Johannes Luber
>
>
> parser  grammar XMLParser;
>
> options {      tokenVocab=XMLLexer; }
>
> scope ElementScope {
> String currentElementName;
> }
>
> document  : element ;
>
> element
>     : startTag
>         (element
>         | PCDATA
>         )*
>         endTag
>     | emptyElement
>     ;
>
> startTag
> scope ElementScope;
>         :       TAG_START_OPEN GENERIC_ID (attribute)* TAG_CLOSE {
> $ElementScope::currentElementName = $GENERIC_ID.text; }
>         ;
>
> attribute  : GENERIC_ID ATTR_EQ ATTR_VALUE ;
>
> endTag
> scope ElementScope;
>         :       { $ElementScope::currentElementName == input.LT(2).getText() }?
> TAG_END_OPEN GENERIC_ID TAG_CLOSE ;
>
> emptyElement : TAG_START_OPEN GENERIC_ID  (attribute)* TAG_EMPTY_CLOSE ;
>

From scott at javadude.com  Sun Jun 17 08:53:52 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 17 Jun 2007 11:53:52 -0400
Subject: [antlr-interest] Using ANTLR v3 to help build a Eclipse plugin
In-Reply-To: <4153ee230706161811v347d69fexf5c8fd37ada68ea8@mail.gmail.com>
Message-ID: <20070617155357.C788711EB9B@www.antlr.org>

I'm working on an antlr 3 plugin for eclipse. I've got a very basic plugin
working that will do the build and add error messages in the editor, but
it's still just a plain text editor at this point.

I'm gonna try to get an initial copy out soon.

Once you have it, you can add the org.antlr plugin as a dependency, as well
as use it to build your plugin.

The only gotchas OTTOMH are to set up your own parser exception handling.

-- Scott

 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Mandel
> Sent: Saturday, June 16, 2007 9:11 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Using ANTLR v3 to help build a 
> Eclipse plugin
> 
> Hey all,
> 
> Just a general question to the group.
> 
> Looking at using a Grammar I am developing to aid in the 
> development of a plugin for Eclipse.
> 
> Just wondering if there are any caveats, or things I should 
> look out for when embarking on this endeavor.
> 
> I'm not familiar with developing Eclipse plugins, but I 
> thought I would ask the question here to see if there were 
> any pit falls I should look out for.
> 
> Thanks in advance,
> 
> Mark
> 
> --
> E: mark.mandel at gmail.com
> W: www.compoundtheory.com
> 



From scott at javadude.com  Sun Jun 17 08:53:52 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 17 Jun 2007 11:53:52 -0400
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>
Message-ID: <20070617155358.87E1811EB9B@www.antlr.org>

I've started looking at creating an ANTLR 3.0 version of ANTXR
(http://javadude.com/antxr), in case that sounds interesting...

-- Scott 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Oliver 
> Zeigermann
> Sent: Sunday, June 17, 2007 10:16 AM
> To: Johannes Luber
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Generating XML from a antlr grammer!
> 
> Hi Johannes!
> 
> To me your solution looks nice. Maybe the error reporting 
> could be more beautiful ;)
> 
> Anyway, the only thing I could find was where the scope 
> begins (should be element in my opinion) and the check for 
> equality in endTag.
> 
> This grammar modified in the way described works for me:
> 
> parser grammar xmlParser;
> options {
>     tokenVocab=xmlLexer;
>     output=AST;
> }
> 
> tokens {
>     ELEMENT;
>     ATTRIBUTE;
> }
> 
> scope ElementScope {
> String currentElementName;
> }
> 
> document : element ;
> 
> element
> scope ElementScope;
>     : ( startTag^
>             (element
>             | PCDATA
>             )*
>             endTag!
>         | emptyElement
>         )
>     ;
> 
> startTag
>     : TAG_START_OPEN GENERIC_ID attribute* TAG_CLOSE
>             {$ElementScope::currentElementName = $GENERIC_ID.text; }
>         -> ^(ELEMENT GENERIC_ID attribute*)
>     ;
> 
> attribute : GENERIC_ID ATTR_EQ ATTR_VALUE -> ^(ATTRIBUTE GENERIC_ID
> ATTR_VALUE) ;
> 
> endTag!
>     : { 
> $ElementScope::currentElementName.equals(input.LT(2).getText()) }?
>  TAG_END_OPEN GENERIC_ID TAG_CLOSE
>     ;
> 
> emptyElement : TAG_START_OPEN GENERIC_ID attribute* TAG_EMPTY_CLOSE
>         -> ^(ELEMENT GENERIC_ID attribute*)
>     ;
> 
> 
> 
> 2007/6/11, Johannes Luber <jaluber at gmx.de>:
> > Oliver Zeigermann wrote:
> > > 2007/6/11, Johannes Luber <jaluber at gmx.de>:
> > >
> > > He, Johannes!
> > >
> > > Good observation.
> > >
> > > Maybe we can have a version that checks the order using 
> validating 
> > > semantic predicates. That really would be a good example 
> for their 
> > > use.
> > >
> > > What do you think?
> >
> > I've created an implementation (see grammar below), but the error 
> > reporting AND recovering is weak. For the XML file
> >
> > <doc>
> >     <assembly>
> >         <name>Util</Name>
> >     </assembly>
> > </doc>
> >
> > the following is being output:
> >
> > "line 3:18 rule endTag failed predicate: { 
> > $ElementScope::currentElementName == input.LA(2).text }?
> > line 4:4 rule endTag failed predicate: { 
> > $ElementScope::currentElementName == input.LA(2).text }?"
> >
> > The second message is a conundrum: If the value of 
> currentElementName 
> > is still "name", why does it accept the closing </doc>? 
> Maybe you have 
> > better idea regarding this problem.
> >
> > Best regards,
> > Johannes Luber
> >
> >
> > parser  grammar XMLParser;
> >
> > options {      tokenVocab=XMLLexer; }
> >
> > scope ElementScope {
> > String currentElementName;
> > }
> >
> > document  : element ;
> >
> > element
> >     : startTag
> >         (element
> >         | PCDATA
> >         )*
> >         endTag
> >     | emptyElement
> >     ;
> >
> > startTag
> > scope ElementScope;
> >         :       TAG_START_OPEN GENERIC_ID (attribute)* TAG_CLOSE {
> > $ElementScope::currentElementName = $GENERIC_ID.text; }
> >         ;
> >
> > attribute  : GENERIC_ID ATTR_EQ ATTR_VALUE ;
> >
> > endTag
> > scope ElementScope;
> >         :       { $ElementScope::currentElementName == 
> input.LT(2).getText() }?
> > TAG_END_OPEN GENERIC_ID TAG_CLOSE ;
> >
> > emptyElement : TAG_START_OPEN GENERIC_ID  (attribute)* 
> TAG_EMPTY_CLOSE 
> > ;
> >
> 



From rschulz at sonic.net  Sun Jun 17 09:09:43 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 17 Jun 2007 09:09:43 -0700
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <20070617155358.87E1811EB9B@www.antlr.org>
References: <20070617155358.87E1811EB9B@www.antlr.org>
Message-ID: <200706170909.43319.rschulz@sonic.net>

Scott,

On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> I've started looking at creating an ANTLR 3.0 version of ANTXR
> (http://javadude.com/antxr), in case that sounds interesting...

That URL yields this:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
Sorry dudes... Looks like you got a bad link, or something...

Like totally 404, man.

Lemme know if you think this is a mistake: scott at javadude.com 
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


> -- Scott


Randall Schulz

From jaluber at gmx.de  Sun Jun 17 09:17:39 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 17 Jun 2007 18:17:39 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <200706170909.43319.rschulz@sonic.net>
References: <20070617155358.87E1811EB9B@www.antlr.org>
	<200706170909.43319.rschulz@sonic.net>
Message-ID: <46755EA3.3090808@gmx.de>

Randall R Schulz wrote:
> Scott,
> 
> On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
>> I've started looking at creating an ANTLR 3.0 version of ANTXR
>> (http://javadude.com/antxr), in case that sounds interesting...
> 
> That URL yields this:
> 
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> Sorry dudes... Looks like you got a bad link, or something...
> 
> Like totally 404, man.
> 
> Lemme know if you think this is a mistake: scott at javadude.com 
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

Try http://www.javadude.com/tools/ instead.

Best regards,
Johannes Luber

From jaluber at gmx.de  Sun Jun 17 09:22:21 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 17 Jun 2007 18:22:21 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>	
	<466D41E8.2080406@gmx.de>	
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>	
	<466D809C.9070607@gmx.de>
	<9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>
Message-ID: <46755FBD.5020206@gmx.de>

Oliver Zeigermann wrote:
> Hi Johannes!
> 
> To me your solution looks nice. Maybe the error reporting could be
> more beautiful ;)
> 
> Anyway, the only thing I could find was where the scope begins (should
> be element in my opinion) and the check for equality in endTag.

That explains why the solution didn't work as I expected. Was the check
for equality the only mistake I made (was in the C# mindset at that
time) or is the addition of ElementScope to element truly necessary?
After all you don't do anything in element with this scope.

Otherwise, did you add the improved grammar to your wiki tutorial?

Best regards,
Johannes Luber

From oliver at zeigermann.de  Sun Jun 17 09:24:42 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Sun, 17 Jun 2007 18:24:42 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <46755FBD.5020206@gmx.de>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>
	<466D41E8.2080406@gmx.de>
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>
	<466D809C.9070607@gmx.de>
	<9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>
	<46755FBD.5020206@gmx.de>
Message-ID: <9da4f4520706170924y21452e35sbc4c3bf653704b01@mail.gmail.com>

Hi Johannes!

I am currenly adding your idea to the tutorial.

Having the scope open in element is necessary as both startTag and
endTag need access to *the same* scope.

Oliver

2007/6/17, Johannes Luber <jaluber at gmx.de>:
> Oliver Zeigermann wrote:
> > Hi Johannes!
> >
> > To me your solution looks nice. Maybe the error reporting could be
> > more beautiful ;)
> >
> > Anyway, the only thing I could find was where the scope begins (should
> > be element in my opinion) and the check for equality in endTag.
>
> That explains why the solution didn't work as I expected. Was the check
> for equality the only mistake I made (was in the C# mindset at that
> time) or is the addition of ElementScope to element truly necessary?
> After all you don't do anything in element with this scope.
>
> Otherwise, did you add the improved grammar to your wiki tutorial?
>
> Best regards,
> Johannes Luber
>

From rschulz at sonic.net  Sun Jun 17 09:25:53 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 17 Jun 2007 09:25:53 -0700
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <46755EA3.3090808@gmx.de>
References: <20070617155358.87E1811EB9B@www.antlr.org>
	<200706170909.43319.rschulz@sonic.net> <46755EA3.3090808@gmx.de>
Message-ID: <200706170925.53699.rschulz@sonic.net>

On Sunday 17 June 2007 09:17, Johannes Luber wrote:
> Randall R Schulz wrote:
> > Scott,
> >
> > On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> >> I've started looking at creating an ANTLR 3.0 version of ANTXR
> >> (http://javadude.com/antxr), in case that sounds interesting...
> >
> > That URL yields this:
> >
> > -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> > Sorry dudes... Looks like you got a bad link, or something...
> >
> > Like totally 404, man.
> >
> > Lemme know if you think this is a mistake: scott at javadude.com
> > -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
>
> Try http://www.javadude.com/tools/ instead.

Or, free of its ill-fitting frameset, 
<http://javadude.com/tools/antxr/index.html>.


> Best regards,
> Johannes Luber


Randall Schulz

From rschulz at sonic.net  Sun Jun 17 09:31:53 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 17 Jun 2007 09:31:53 -0700
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <20070617155358.87E1811EB9B@www.antlr.org>
References: <20070617155358.87E1811EB9B@www.antlr.org>
Message-ID: <200706170931.53806.rschulz@sonic.net>

On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> I've started looking at creating an ANTLR 3.0 version of ANTXR
> (http://javadude.com/antxr), in case that sounds interesting...

I see (at <http://javadude.com/tools/antxr/index.html>) that you plan to 
add schema support.

Have you considered using Relax NG instead of (or in addition to) the 
W3C XML Schema?

I find Relax NG far more palatable than W3C Schema.


> -- Scott


Randall Schulz

From scott at javadude.com  Sun Jun 17 09:32:07 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 17 Jun 2007 12:32:07 -0400
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <200706170925.53699.rschulz@sonic.net>
Message-ID: <20070617163216.E46B411EBD9@www.antlr.org>

odd -- that used to fit well... I'll have to mess with it someday...

- Scott 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Randall R Schulz
> Sent: Sunday, June 17, 2007 12:26 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Generating XML from a antlr grammer!
> 
> On Sunday 17 June 2007 09:17, Johannes Luber wrote:
> > Randall R Schulz wrote:
> > > Scott,
> > >
> > > On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> > >> I've started looking at creating an ANTLR 3.0 version of ANTXR 
> > >> (http://javadude.com/antxr), in case that sounds interesting...
> > >
> > > That URL yields this:
> > >
> > > -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> > > Sorry dudes... Looks like you got a bad link, or something...
> > >
> > > Like totally 404, man.
> > >
> > > Lemme know if you think this is a mistake: scott at javadude.com
> > > -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> >
> > Try http://www.javadude.com/tools/ instead.
> 
> Or, free of its ill-fitting frameset,
> <http://javadude.com/tools/antxr/index.html>.
> 
> 
> > Best regards,
> > Johannes Luber
> 
> 
> Randall Schulz
> 



From scott at javadude.com  Sun Jun 17 09:32:07 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 17 Jun 2007 12:32:07 -0400
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <200706170909.43319.rschulz@sonic.net>
Message-ID: <20070617163219.726F811EBE6@www.antlr.org>

Sorry -- http://javadude.com/tools/antxr

-- Scott 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Randall R Schulz
> Sent: Sunday, June 17, 2007 12:10 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Generating XML from a antlr grammer!
> 
> Scott,
> 
> On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> > I've started looking at creating an ANTLR 3.0 version of ANTXR 
> > (http://javadude.com/antxr), in case that sounds interesting...
> 
> That URL yields this:
> 
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> Sorry dudes... Looks like you got a bad link, or something...
> 
> Like totally 404, man.
> 
> Lemme know if you think this is a mistake: scott at javadude.com
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> 
> 
> > -- Scott
> 
> 
> Randall Schulz
> 



From scott at javadude.com  Sun Jun 17 09:33:44 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sun, 17 Jun 2007 12:33:44 -0400
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <200706170931.53806.rschulz@sonic.net>
Message-ID: <20070617163349.6BBE711EBD5@www.antlr.org>

I was thinking of using eclipse's xsd libs to read a schema and generate an
initial grammar (then later do some kind of grammar diffing).

Hadn't even given thought to relax NG yet...

Later,
-- Scott

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Randall R Schulz
> Sent: Sunday, June 17, 2007 12:32 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Generating XML from a antlr grammer!
> 
> On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
> > I've started looking at creating an ANTLR 3.0 version of ANTXR 
> > (http://javadude.com/antxr), in case that sounds interesting...
> 
> I see (at <http://javadude.com/tools/antxr/index.html>) that 
> you plan to add schema support.
> 
> Have you considered using Relax NG instead of (or in addition 
> to) the W3C XML Schema?
> 
> I find Relax NG far more palatable than W3C Schema.
> 
> 
> > -- Scott
> 
> 
> Randall Schulz
> 



From stanio at myrealbox.com  Sun Jun 17 09:33:48 2007
From: stanio at myrealbox.com (Stanimir Stamenkov)
Date: Sun, 17 Jun 2007 19:33:48 +0300
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <200706170909.43319.rschulz@sonic.net>
References: <20070617155358.87E1811EB9B@www.antlr.org>
	<200706170909.43319.rschulz@sonic.net>
Message-ID: <4675626C.7060502@myrealbox.com>

Sun, 17 Jun 2007 09:09:43 -0700, /Randall R Schulz/:
> On Sunday 17 June 2007 08:53, Scott Stanchfield wrote:
>
>> I've started looking at creating an ANTLR 3.0 version of ANTXR
>> (http://javadude.com/antxr), in case that sounds interesting...
> 
> That URL yields this:
> 
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> Sorry dudes... Looks like you got a bad link, or something...
> 
> Like totally 404, man.
> 
> Lemme know if you think this is a mistake: scott at javadude.com 
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

The correct URL seems to be:

http://www.javadude.com/tools/antxr/ (ANTXR: Easy XML Parsing, based 
on the ANTLR parser generator)

-- 
Stanimir

From oliver at zeigermann.de  Sun Jun 17 09:39:38 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Sun, 17 Jun 2007 18:39:38 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <9da4f4520706170924y21452e35sbc4c3bf653704b01@mail.gmail.com>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>
	<466D41E8.2080406@gmx.de>
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>
	<466D809C.9070607@gmx.de>
	<9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>
	<46755FBD.5020206@gmx.de>
	<9da4f4520706170924y21452e35sbc4c3bf653704b01@mail.gmail.com>
Message-ID: <9da4f4520706170939y68edaa49p787b68b62ce4368a@mail.gmail.com>

Here it is now:

http://www.antlr.org/wiki/display/ANTLR3/6.+Advanced+processing

Please check and make corrections as necessary. Remember it is a Wiki ;)

Cheers

Oliver

2007/6/17, Oliver Zeigermann <oliver at zeigermann.de>:
> Hi Johannes!
>
> I am currenly adding your idea to the tutorial.
>
> Having the scope open in element is necessary as both startTag and
> endTag need access to *the same* scope.
>
> Oliver
>
> 2007/6/17, Johannes Luber <jaluber at gmx.de>:
> > Oliver Zeigermann wrote:
> > > Hi Johannes!
> > >
> > > To me your solution looks nice. Maybe the error reporting could be
> > > more beautiful ;)
> > >
> > > Anyway, the only thing I could find was where the scope begins (should
> > > be element in my opinion) and the check for equality in endTag.
> >
> > That explains why the solution didn't work as I expected. Was the check
> > for equality the only mistake I made (was in the C# mindset at that
> > time) or is the addition of ElementScope to element truly necessary?
> > After all you don't do anything in element with this scope.
> >
> > Otherwise, did you add the improved grammar to your wiki tutorial?
> >
> > Best regards,
> > Johannes Luber
> >
>

From jaluber at gmx.de  Sun Jun 17 09:50:51 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 17 Jun 2007 18:50:51 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <20070617163349.6BBE711EBD5@www.antlr.org>
References: <20070617163349.6BBE711EBD5@www.antlr.org>
Message-ID: <4675666B.6090200@gmx.de>

Scott Stanchfield wrote:
> I was thinking of using eclipse's xsd libs to read a schema and generate an
> initial grammar (then later do some kind of grammar diffing).
> 
> Hadn't even given thought to relax NG yet...

Personally, I consider XSchema of all W3C standards, I know of, the
worst. I've finished yesterday a book about Relax NG and I can say that
many restrictions in XSchema are unnecessary. It was like a revelation
to have the shackles removed, especially because XSchema would have
resulted in a convoluted and complex schema AND processing for my own
personal project. Interleaving groups that way, that <A1/> <B1/> <A2/>
<B2/> is allowed was a godsend for me. :)

Best regards,
Johannes Luber

From jaluber at gmx.de  Sun Jun 17 10:06:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 17 Jun 2007 19:06:47 +0200
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <9da4f4520706170939y68edaa49p787b68b62ce4368a@mail.gmail.com>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>	
	<466D41E8.2080406@gmx.de>	
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>	
	<466D809C.9070607@gmx.de>	
	<9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>	
	<46755FBD.5020206@gmx.de>	
	<9da4f4520706170924y21452e35sbc4c3bf653704b01@mail.gmail.com>
	<9da4f4520706170939y68edaa49p787b68b62ce4368a@mail.gmail.com>
Message-ID: <46756A27.9010203@gmx.de>

Oliver Zeigermann wrote:
> Here it is now:
> 
> http://www.antlr.org/wiki/display/ANTLR3/6.+Advanced+processing
> 
> Please check and make corrections as necessary. Remember it is a Wiki ;)

I haven't seen any errors on your part. This kind of error checking code
was unknown to me before - did Terence include something like that in
his book? If yes, I have to reread this chapter more closely again.

Best regards,
Johannes Luber

From yang.jiang.z at gmail.com  Sat Jun 16 21:07:26 2007
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Sun, 17 Jun 2007 12:07:26 +0800
Subject: [antlr-interest] How to write template for rules with optional node?
Message-ID: <46758687.23bb720a.144e.4584@mx.google.com>

Hi list,

I'm trying to write a template for such a rule,

function_call :
		ID '.' '(' argument_list? ')' 
	       ->
	      <<
	       template(function_name={$ID.text},
function_args={$argument_list.st})
                  >>
	      ;

this works fine for input such as "aSimpleMethod(arg1, arg2)", 
but since the argument_list is optional, for input like "aSimpleMethod()",
the argument_list is null, and will cause a NullPointerException as antrl
will try to access the "st" attribute of "argument_list".

So, how can I handle this problem?

Thanks,
Yang


From oliver at zeigermann.de  Sun Jun 17 13:13:39 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Sun, 17 Jun 2007 22:13:39 +0200
Subject: [antlr-interest] Wondering about: Error handling
Message-ID: <9da4f4520706171313u2d9e6d19kf1b6a4dc836c3518@mail.gmail.com>

Folks!

I understand that - by default - ANTLR generates something like this

        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }


as generic code for error handling. When you want something else you
can specify your own error handling block using

catch [...] {
...
}

When I want special handling for certain exceptions only I can specify
that in the catch phrase. Like that:

catch [FailedPredicateException fpe] {
...
}

However, this replaces the orignal catch block instead of being added.
I expected something like this to be generated:


     catch (FailedPredicateException fpe) {
       ...
        }
      catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

But only the first block actually is generated.

This leads to problems when "normal" recognition exceptions occur as
they are no longer handled by the default procedure, but rather are
passed on to calling rules.

Is this intented behavior? Does it make sense to have it like that?

Just wondering and cheers

Oliver

From jimi at temporal-wave.com  Sun Jun 17 13:44:55 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Jun 2007 13:44:55 -0700
Subject: [antlr-interest] How to write template for rules with optional
	node?
In-Reply-To: <46758687.23bb720a.144e.4584@mx.google.com>
References: <46758687.23bb720a.144e.4584@mx.google.com>
Message-ID: <051466DAA0D608439E196797955018D76DC1@wavemachine.temporal-wave.com>

Just use a different rewrite if there are no arumgents:

function_call :
  ID '.' '(' 
	(
         argument_list ')'
 	       ->    <<
 	       template(function_name={$ID.text},
 
function_args={$argument_list.st})
                   >>
        | ')'
             -> << something else >>
      )
 	      ;

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Yang Jiang
> Sent: Saturday, June 16, 2007 9:07 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to write template for rules with
optional
> node?
> 
> Hi list,
> 
> I'm trying to write a template for such a rule,
> 
> function_call :
> 		ID '.' '(' argument_list? ')'
> 	       ->
> 	      <<
> 	       template(function_name={$ID.text},
> function_args={$argument_list.st})
>                   >>
> 	      ;
> 
> this works fine for input such as "aSimpleMethod(arg1, arg2)",
> but since the argument_list is optional, for input like
> "aSimpleMethod()",
> the argument_list is null, and will cause a NullPointerException as
> antrl
> will try to access the "st" attribute of "argument_list".
> 
> So, how can I handle this problem?
> 
> Thanks,
> Yang


From yang.jiang.z at gmail.com  Sat Jun 16 23:51:09 2007
From: yang.jiang.z at gmail.com (Yang Jiang)
Date: Sun, 17 Jun 2007 14:51:09 +0800
Subject: [antlr-interest] How to write template for rules with optional
	node?
In-Reply-To: <051466DAA0D608439E196797955018D76DC1@wavemachine.temporal-wave.com>
Message-ID: <4675ace5.1bbc720a.5697.ffffff61@mx.google.com>

This works.
Thanks a lot for help :-)


But what if there are more than one optional rule, say 

function_definition : ID '.' '(' argument_list? ')'  throw_clause? '{'
codeblock? '}'  -> << ..... >>

if I write an rewrite for every possibilities, I would have to handle 8
different cases, end up with 8 rewrites. 
Is there any simple way to do this? 

Thanks,
Yang

-----Original Message-----
From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Monday, June 18, 2007 4:45 AM
To: Yang Jiang; antlr-interest at antlr.org
Subject: RE: [antlr-interest] How to write template for rules with optional
node?

Just use a different rewrite if there are no arumgents:

function_call :
  ID '.' '(' 
	(
         argument_list ')'
 	       ->    <<
 	       template(function_name={$ID.text},
 
function_args={$argument_list.st})
                   >>
        | ')'
             -> << something else >>
      )
 	      ;

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Yang Jiang
> Sent: Saturday, June 16, 2007 9:07 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to write template for rules with
optional
> node?
> 
> Hi list,
> 
> I'm trying to write a template for such a rule,
> 
> function_call :
> 		ID '.' '(' argument_list? ')'
> 	       ->
> 	      <<
> 	       template(function_name={$ID.text},
> function_args={$argument_list.st})
>                   >>
> 	      ;
> 
> this works fine for input such as "aSimpleMethod(arg1, arg2)", but 
> since the argument_list is optional, for input like "aSimpleMethod()", 
> the argument_list is null, and will cause a NullPointerException as 
> antrl will try to access the "st" attribute of "argument_list".
> 
> So, how can I handle this problem?
> 
> Thanks,
> Yang


From oliver at zeigermann.de  Sun Jun 17 16:01:45 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon, 18 Jun 2007 01:01:45 +0200
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
	<9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
	<DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>
Message-ID: <9da4f4520706171601n43a1987csc19df7d0718d6ca7@mail.gmail.com>

Hmm. Right.

I tried

options {
  backtrack=true;
}

which I was hoping would introduce backtracking which should have made
your example work. Indeed, that option inserted some code, but IMHO
totally meaningless and without effect.

Maybe this does not work for the lexer?

Oliver


2007/6/7, Wincent Colaiuta <win at wincent.com>:
> I tried that, on both the FOO rule and at the whole-grammar level
> (not sure if that only applies to the parser though) and it didn't
> work...
>
> Cheers,
> Wincent
>
> El 6/6/2007, a las 22:48, Oliver Zeigermann escribi?:
>
> > Maybe it could help to manually set the amount of lookahead to 7? I
> > have not tried it, but this should include checks for all characters
> > and only let FOO match for "bar:baz"
> >
> > HTH
> >
> > Oliver
> >
> > 2007/6/6, Wincent Colaiuta <win at wincent.com>:
> >> I'm trying to understand how ANTLR's lookahead mechanisms work using
> >> this grammar:
> >>
> >>    grammar Simple;
> >>
> >>    FOO: BAR ':' BAZ {System.out.println("FOO");};
> >>    fragment BAR: 'bar' {System.out.println("BAR");};
> >>    fragment BAZ: 'baz' {System.out.println("BAZ");};
> >>    EVERYTHING_ELSE: . {System.out.println("EVERYTHING_ELSE");};
> >>
> >>    thing: .* EOF {System.out.println("done");};
> >>
> >> I basically wanted to explore the way lookahead works and what ANTLR
> >> does when its lookahead predictions fail. For example, given the
> >> following inputs:
> >>
> >> - "bar:baz": recognizes this as a FOO token
> >> - "bar:ba": predicts FOO and complains about missing "z"
> >> - "bar:b": predicts FOO and complains about missing "a"
> >> - "bar:": predicts FOO and complains about missing "b"
> >> - "bar": predicts FOO and complains about missing ":"
> >> - "ba": predicts FOO and complains about missing "r"
> >> - "b": accepts input as EVERYTHING_ELSE
> >> - "...ba": accepts the periods as EVERYTHING_ELSE, then predicts FOO
> >> complains about missing "r"
> >>
> >> This exercise was very helpful for me in seeing how ANTLR's lookahead
> >> operates: basically, as soon as its seen enough input to predict the
> >> presence of a particular token ("ba" is enough in this case), it
> >> assumes that it really is that token, scans ahead, and raises an
> >> exception if its expectations aren't met.
> >>
> >> So, one way to get this grammar to handle strings like "...ba"
> >> without throwing exceptions is to use the filter=true option. I'm
> >> curious to know, however, is there any other way?
> >>
> >> Cheers,
> >> Wincent
> >>
> >>
> >>
>
>

From oliver at zeigermann.de  Sun Jun 17 16:05:13 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon, 18 Jun 2007 01:05:13 +0200
Subject: [antlr-interest] Backtracking in Lexer broken?
Message-ID: <9da4f4520706171605o741aa31fo96506172d604976a@mail.gmail.com>

I was wondering if the backtrack option in the lexer is supposed to work.

When I tried it on the example Wincent tried on thread

http://www.antlr.org/pipermail/antlr-interest/2007-June/021146.html

it only generated code fragments that I could not make any sense of.

Does it really work?

If not. Do I really need it? :)

Cheers

Oliver

From parrt at cs.usfca.edu  Sun Jun 17 16:56:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 09:56:42 +1000
Subject: [antlr-interest] Error with date
In-Reply-To: <46752704.4050901@xs4all.nl>
References: <46752704.4050901@xs4all.nl>
Message-ID: <850DAFE5-2C58-45F2-BAD2-F4199F3A3748@cs.usfca.edu>


On Jun 17, 2007, at 10:20 PM, Jan van der Ven wrote:

> Dear list,
>
>
> I am taking my first steps with v3 (I have been working with 2.7  
> before). I use AntlrWorks and have created the following snippet:
>
> DIGIT    :    '0'..'9';

make that a fragment rule.

Ter

From parrt at cs.usfca.edu  Sun Jun 17 17:04:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 10:04:03 +1000
Subject: [antlr-interest] Using ANTLR v3 to help build a Eclipse plugin
In-Reply-To: <20070617155357.C788711EB9B@www.antlr.org>
References: <20070617155357.C788711EB9B@www.antlr.org>
Message-ID: <57917F54-4BB2-4D6D-8418-DA267B870FF2@cs.usfca.edu>


On Jun 18, 2007, at 1:53 AM, Scott Stanchfield wrote:

> I'm working on an antlr 3 plugin for eclipse. I've got a very basic  
> plugin
> working that will do the build and add error messages in the  
> editor, but
> it's still just a plain text editor at this point.
>
> I'm gonna try to get an initial copy out soon.

Awesome!  Scott, you're an animal!

Ter

From parrt at cs.usfca.edu  Sun Jun 17 17:07:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 10:07:57 +1000
Subject: [antlr-interest] Generating XML from a antlr grammer!
In-Reply-To: <46756A27.9010203@gmx.de>
References: <842880.20147.qm@web94502.mail.in2.yahoo.com>	
	<466D41E8.2080406@gmx.de>	
	<9da4f4520706110821l59697778v55d86187f7142a07@mail.gmail.com>	
	<466D809C.9070607@gmx.de>	
	<9da4f4520706170715l7a54927fr4e81a8abc932583d@mail.gmail.com>	
	<46755FBD.5020206@gmx.de>	
	<9da4f4520706170924y21452e35sbc4c3bf653704b01@mail.gmail.com>
	<9da4f4520706170939y68edaa49p787b68b62ce4368a@mail.gmail.com>
	<46756A27.9010203@gmx.de>
Message-ID: <F8A720A9-F699-453D-845B-AC69052C47F6@cs.usfca.edu>


On Jun 18, 2007, at 3:06 AM, Johannes Luber wrote:

> Oliver Zeigermann wrote:
>> Here it is now:
>>
>> http://www.antlr.org/wiki/display/ANTLR3/6.+Advanced+processing
>>
>> Please check and make corrections as necessary. Remember it is a  
>> Wiki ;)
>
> I haven't seen any errors on your part. This kind of error checking  
> code
> was unknown to me before - did Terence include something like that in
> his book? If yes, I have to reread this chapter more closely again.

I think i mention that in the error handling section.

Ter


From parrt at cs.usfca.edu  Sun Jun 17 17:14:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 10:14:35 +1000
Subject: [antlr-interest] Wondering about: Error handling
In-Reply-To: <9da4f4520706171313u2d9e6d19kf1b6a4dc836c3518@mail.gmail.com>
References: <9da4f4520706171313u2d9e6d19kf1b6a4dc836c3518@mail.gmail.com>
Message-ID: <C3F33C7F-17B0-4588-B404-A0918402C1D6@cs.usfca.edu>


On Jun 18, 2007, at 6:13 AM, Oliver Zeigermann wrote:
> When I want special handling for certain exceptions only I can specify
> that in the catch phrase. Like that:
>
> catch [FailedPredicateException fpe] {
> ...
> }
>
> However, this replaces the orignal catch block instead of being added.
> I expected something like this to be generated:
>
>
>     catch (FailedPredicateException fpe) {
>       ...
>        }
>      catch (RecognitionException re) {
>            reportError(re);
>            recover(input,re);
>        }
>
> But only the first block actually is generated.

Interesting.  Hmm...I guess that was my intended behaviour but I can  
see how it would be confusing.  OTOH, I can't always look at the  
exception names inside and determine for an arbitrary target what's  
up.  In fact, ANTLR's code generator can't assume anything.  The  
templates can change the generic Recog. exception to be anything.   
Something could be done via templates, but...at the very least we  
should document it. ;)

Ter


From parrt at cs.usfca.edu  Sun Jun 17 17:16:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 10:16:54 +1000
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <9da4f4520706171601n43a1987csc19df7d0718d6ca7@mail.gmail.com>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
	<9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
	<DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>
	<9da4f4520706171601n43a1987csc19df7d0718d6ca7@mail.gmail.com>
Message-ID: <33203F03-7100-4666-B5AF-0A21B4E218FD@cs.usfca.edu>

On Jun 18, 2007, at 9:01 AM, Oliver Zeigermann wrote:

> Hmm. Right.
>
> I tried
>
> options {
>  backtrack=true;
> }
>
> which I was hoping would introduce backtracking which should have made
> your example work. Indeed, that option inserted some code, but IMHO
> totally meaningless and without effect.
>
> Maybe this does not work for the lexer?

I've never tried it in the lexer...I'd suggest avoiding it even if it  
works. ;)

Ter



From bace.spam at gmx.net  Sun Jun 17 17:31:42 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Mon, 18 Jun 2007 02:31:42 +0200
Subject: [antlr-interest] semantic predicate affects nothing
Message-ID: <20070618003142.321040@gmx.net>

Hi guys,

I try to use the semantic predicate "match alpha if not followed by beta" from http://www.antlr.org/blog/antlr3/lookahead.tml (section May 11, 2006).

I want to distinguish between an inline element in a text paragraph and block (an extra paragraph). The block is indicated by '(((\n', in inline is no newline allowed. Before a block begins, the text paragraph has to end (out of the +loop).

The problem is, that the parser does not change its behavior, it always matches the block as an inline element and throws an exception at the newline.

I wrote the v3 grammar as short as possible to show this:

page		:	paragraph *;
paragraph 	:	text_parag  |  block;
text_paragr	:	(OPEN ((NEWLINE)=>{false}? )) => text_line+;
text_line	:	(TEXT | inline)+  NEWLINE;
inline		:	OPEN  text  CLOSE;
block		:	OPEN  NEWLINE  TEXT*  NEWLINE  CLOSE  NEWLINE;
text		:	ANY *;

OPEN	:	'(((';
CLOSE	:	')))';
NEWLINE	:	'\r\n';
ANY	:	.;


Thanks for any assistance!
Best,
Markus
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From cameron.taggart at gmail.com  Sun Jun 17 17:47:12 2007
From: cameron.taggart at gmail.com (Cameron Taggart)
Date: Sun, 17 Jun 2007 17:47:12 -0700
Subject: [antlr-interest] Lexer and Parser class packaging
In-Reply-To: <6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
References: <236822.88749.qm@web36811.mail.mud.yahoo.com>
	<20070130232613.EBC997A2@mail.intersystems.com>
	<2A6C3F1E-7242-4290-8AEE-7CC70BEBD7B4@martin-probst.com>
	<6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
Message-ID: <c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>

I didn't see this in the FAQ yet.

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ

As a newbie, I just ran into it.  :(



On 2/5/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Feb 5, 2007, at 8:40 AM, Martin Probst wrote:
>
> > Hi,
> >
> >> You need to use @header::lexer and @header::parser. Otherwise the
> >> header element will only appear in one of them (can't remember
> >> which it is now by default ;-).
> >
> > Why is that actually so? Apparently 95% of all beginners with ANTLR
> > 3 run into this problem, maybe you should simply adjust to the
> > users and make @header {} be inherited by both parser and lexer?
>
> Well,  this has come up a number of times.  I suppose that
>
> @header {package foo;}
>
> Could split across both lexer and parser, but then @members {int i;}
> should parallel this and send the member declaration to both parser
> and lexer, which I can't agree with.
>
> I don't like special cases; either we insist that the lack of a scope
> means both or it means parser.  Having one with some both and one
> assume parser is not correct.
>
> You can see my conundrum here. clearly if we don't change this it
> will have to be the first entry in the FAQ ;)
>
> Ter

From parrt at cs.usfca.edu  Sun Jun 17 18:29:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 11:29:09 +1000
Subject: [antlr-interest] Lexer and Parser class packaging
In-Reply-To: <c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>
References: <236822.88749.qm@web36811.mail.mud.yahoo.com>
	<20070130232613.EBC997A2@mail.intersystems.com>
	<2A6C3F1E-7242-4290-8AEE-7CC70BEBD7B4@martin-probst.com>
	<6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
	<c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>
Message-ID: <5A0648FF-6711-4C0C-8F23-60D3BCA80C30@cs.usfca.edu>


On Jun 18, 2007, at 10:47 AM, Cameron Taggart wrote:

> I didn't see this in the FAQ yet.
>
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ
>
> As a newbie, I just ran into it.  :(
>

Sorry.  Would this have been enough?

http://www.antlr.org/wiki/pages/viewpage.action?pageId=819257

Ter


From cameron.taggart at gmail.com  Sun Jun 17 18:46:28 2007
From: cameron.taggart at gmail.com (Cameron Taggart)
Date: Sun, 17 Jun 2007 18:46:28 -0700
Subject: [antlr-interest] Lexer and Parser class packaging
In-Reply-To: <5A0648FF-6711-4C0C-8F23-60D3BCA80C30@cs.usfca.edu>
References: <236822.88749.qm@web36811.mail.mud.yahoo.com>
	<20070130232613.EBC997A2@mail.intersystems.com>
	<2A6C3F1E-7242-4290-8AEE-7CC70BEBD7B4@martin-probst.com>
	<6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
	<c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>
	<5A0648FF-6711-4C0C-8F23-60D3BCA80C30@cs.usfca.edu>
Message-ID: <c3606140706171846j6ed57909ge7de21266009c936@mail.gmail.com>

Yes, that works.  Something along the lines of @header defaults to
@parser::header might be useful info too.

Cameron

On 6/17/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 18, 2007, at 10:47 AM, Cameron Taggart wrote:
>
> > I didn't see this in the FAQ yet.
> >
> > http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ
> >
> > As a newbie, I just ran into it.  :(
> >
>
> Sorry.  Would this have been enough?
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=819257
>
> Ter
>
>

From parrt at cs.usfca.edu  Sun Jun 17 18:51:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 11:51:26 +1000
Subject: [antlr-interest] Lexer and Parser class packaging
In-Reply-To: <c3606140706171846j6ed57909ge7de21266009c936@mail.gmail.com>
References: <236822.88749.qm@web36811.mail.mud.yahoo.com>
	<20070130232613.EBC997A2@mail.intersystems.com>
	<2A6C3F1E-7242-4290-8AEE-7CC70BEBD7B4@martin-probst.com>
	<6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
	<c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>
	<5A0648FF-6711-4C0C-8F23-60D3BCA80C30@cs.usfca.edu>
	<c3606140706171846j6ed57909ge7de21266009c936@mail.gmail.com>
Message-ID: <A1AADD44-1483-4F2A-B902-E00276FD7FAC@cs.usfca.edu>


On Jun 18, 2007, at 11:46 AM, Cameron Taggart wrote:

> Yes, that works.  Something along the lines of @header defaults to
> @parser::header might be useful info too.

Actually it defaults to @lexer::header in the lexer ;)

Ter


From cameron.taggart at gmail.com  Sun Jun 17 19:09:51 2007
From: cameron.taggart at gmail.com (Cameron Taggart)
Date: Sun, 17 Jun 2007 19:09:51 -0700
Subject: [antlr-interest] Lexer and Parser class packaging
In-Reply-To: <A1AADD44-1483-4F2A-B902-E00276FD7FAC@cs.usfca.edu>
References: <236822.88749.qm@web36811.mail.mud.yahoo.com>
	<20070130232613.EBC997A2@mail.intersystems.com>
	<2A6C3F1E-7242-4290-8AEE-7CC70BEBD7B4@martin-probst.com>
	<6B38860E-FFDA-4572-BA27-5F4C1F76EFFE@cs.usfca.edu>
	<c3606140706171747y15663a75lad373541f9aba3d9@mail.gmail.com>
	<5A0648FF-6711-4C0C-8F23-60D3BCA80C30@cs.usfca.edu>
	<c3606140706171846j6ed57909ge7de21266009c936@mail.gmail.com>
	<A1AADD44-1483-4F2A-B902-E00276FD7FAC@cs.usfca.edu>
Message-ID: <c3606140706171909o60e87992q55c38b3938f73ae7@mail.gmail.com>

True, but we are talking about a "combined grammars, correct?  When
you use @header in a combined grammar, it only affects the generated
parser class, not the generated lexer class.  Essentially, in a
combined grammar class it acts the same as @parser::header.

Cameron

(resend, forgot to reply to all)

On 6/17/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 18, 2007, at 11:46 AM, Cameron Taggart wrote:
>
> > Yes, that works.  Something along the lines of @header defaults to
> > @parser::header might be useful info too.
>
> Actually it defaults to @lexer::header in the lexer ;)
>
> Ter
>
>

From rerdavies at rogers.com  Sun Jun 17 22:00:03 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Mon, 18 Jun 2007 01:00:03 -0400
Subject: [antlr-interest] semantic predicate affects nothing
In-Reply-To: <20070618003142.321040@gmx.net>
References: <20070618003142.321040@gmx.net>
Message-ID: <F442F4D2E32E433CB02A493ECA833CE6@GWB>

You're missing an '|' after the {false}? . That syntactic predict is always 
going to fail without it.

text_paragr : (OPEN ((NEWLINE)=>{false}?  |)) => text_line+;



----- Original Message ----- 
From: "Markus Kuhla" <bace.spam at gmx.net>
To: <antlr-interest at antlr.org>
Sent: Sunday, June 17, 2007 8:31 PM
Subject: [antlr-interest] semantic predicate affects nothing


> Hi guys,
>
> I try to use the semantic predicate "match alpha if not followed by beta" 
> from http://www.antlr.org/blog/antlr3/lookahead.tml (section May 11, 
> 2006).
>
> I want to distinguish between an inline element in a text paragraph and 
> block (an extra paragraph). The block is indicated by '(((\n', in inline 
> is no newline allowed. Before a block begins, the text paragraph has to 
> end (out of the +loop).
>
> The problem is, that the parser does not change its behavior, it always 
> matches the block as an inline element and throws an exception at the 
> newline.
>
> I wrote the v3 grammar as short as possible to show this:
>
> page : paragraph *;
> paragraph : text_parag  |  block;
> text_paragr : (OPEN ((NEWLINE)=>{false}? )) => text_line+;
> text_line : (TEXT | inline)+  NEWLINE;
> inline : OPEN  text  CLOSE;
> block : OPEN  NEWLINE  TEXT*  NEWLINE  CLOSE  NEWLINE;
> text : ANY *;
>
> OPEN : '(((';
> CLOSE : ')))';
> NEWLINE : '\r\n';
> ANY : .;
>
>
> Thanks for any assistance!
> Best,
> Markus
> -- 
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail 


From senthil.gangatharan at credit-suisse.com  Sun Jun 17 22:12:43 2007
From: senthil.gangatharan at credit-suisse.com (Gangatharan, Senthil)
Date: Mon, 18 Jun 2007 13:12:43 +0800
Subject: [antlr-interest] Informix 4GL scripts to Java conversion
Message-ID: <33CEC59503EEE8489B70EFB019451DF217072570@esng11p32002old.csfb.cs-group.com>

Hi Friends,

I'm new to ANTLR.

I have a requirement to convert Informix 4gl scripts to java code.

I got fgl.g (4gl grammer) & tried to run it using eclipse pulgin. It works fine, I'm able to parse 4GL scripts.

My understanding is that I need to write java code translation logic to get equivalent java code.

Is there any code available already for informix 4gl to Java translation ?... Please help.

Regards
Senthil	


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Robin Davies
Sent: 18 June 2007 13:00
To: Markus Kuhla; antlr-interest at antlr.org
Subject: Re: [antlr-interest] semantic predicate affects nothing

You're missing an '|' after the {false}? . That syntactic predict is always going to fail without it.

text_paragr : (OPEN ((NEWLINE)=>{false}?  |)) => text_line+;



----- Original Message -----
From: "Markus Kuhla" <bace.spam at gmx.net>
To: <antlr-interest at antlr.org>
Sent: Sunday, June 17, 2007 8:31 PM
Subject: [antlr-interest] semantic predicate affects nothing


> Hi guys,
>
> I try to use the semantic predicate "match alpha if not followed by beta" 
> from http://www.antlr.org/blog/antlr3/lookahead.tml (section May 11, 
> 2006).
>
> I want to distinguish between an inline element in a text paragraph and 
> block (an extra paragraph). The block is indicated by '(((\n', in inline 
> is no newline allowed. Before a block begins, the text paragraph has to 
> end (out of the +loop).
>
> The problem is, that the parser does not change its behavior, it always 
> matches the block as an inline element and throws an exception at the 
> newline.
>
> I wrote the v3 grammar as short as possible to show this:
>
> page : paragraph *;
> paragraph : text_parag  |  block;
> text_paragr : (OPEN ((NEWLINE)=>{false}? )) => text_line+;
> text_line : (TEXT | inline)+  NEWLINE;
> inline : OPEN  text  CLOSE;
> block : OPEN  NEWLINE  TEXT*  NEWLINE  CLOSE  NEWLINE;
> text : ANY *;
>
> OPEN : '(((';
> CLOSE : ')))';
> NEWLINE : '\r\n';
> ANY : .;
>
>
> Thanks for any assistance!
> Best,
> Markus
> -- 
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail 



==============================================================================
Please access the attached hyperlink for an important electronic communications disclaimer: 

http://www.credit-suisse.com/legal/en/disclaimer_email_ib.html
==============================================================================


From bace.spam at gmx.net  Sun Jun 17 22:52:56 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Mon, 18 Jun 2007 07:52:56 +0200
Subject: [antlr-interest] semantic predicate affects nothing
In-Reply-To: <F442F4D2E32E433CB02A493ECA833CE6@GWB>
References: <20070618003142.321040@gmx.net>
	<F442F4D2E32E433CB02A493ECA833CE6@GWB>
Message-ID: <20070618055256.321940@gmx.net>

Oh yes, I tried this too, but does not changes the behavior. The block is still recognized as an inline element and throw the exception at the newline after '((('.
I didn't understand the meaning of the '|' so I omitted it ;)

Best regards!
Markus

> You're missing an '|' after the {false}? . That syntactic predict is
> always 
> going to fail without it.
> 
> text_paragr : (OPEN ((NEWLINE)=>{false}?  |)) => text_line+;
> 
> 
> 
> ----- Original Message ----- 
> From: "Markus Kuhla" <bace.spam at gmx.net>
> To: <antlr-interest at antlr.org>
> Sent: Sunday, June 17, 2007 8:31 PM
> Subject: [antlr-interest] semantic predicate affects nothing
> 
> 
> > Hi guys,
> >
> > I try to use the semantic predicate "match alpha if not followed by
> beta" 
> > from http://www.antlr.org/blog/antlr3/lookahead.tml (section May 11, 
> > 2006).
> >
> > I want to distinguish between an inline element in a text paragraph and 
> > block (an extra paragraph). The block is indicated by '(((\n', in inline
> > is no newline allowed. Before a block begins, the text paragraph has to 
> > end (out of the +loop).
> >
> > The problem is, that the parser does not change its behavior, it always 
> > matches the block as an inline element and throws an exception at the 
> > newline.
> >
> > I wrote the v3 grammar as short as possible to show this:
> >
> > page : paragraph *;
> > paragraph : text_parag  |  block;
> > text_paragr : (OPEN ((NEWLINE)=>{false}? )) => text_line+;
> > text_line : (TEXT | inline)+  NEWLINE;
> > inline : OPEN  text  CLOSE;
> > block : OPEN  NEWLINE  TEXT*  NEWLINE  CLOSE  NEWLINE;
> > text : ANY *;
> >
> > OPEN : '(((';
> > CLOSE : ')))';
> > NEWLINE : '\r\n';
> > ANY : .;
> >
> >
> > Thanks for any assistance!
> > Best,
> > Markus


-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kanns mit allen: http://www.gmx.net/de/go/multimessenger

From kroepke at classdump.org  Sun Jun 17 23:37:44 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 18 Jun 2007 08:37:44 +0200
Subject: [antlr-interest] semantic predicate affects nothing
In-Reply-To: <20070618003142.321040@gmx.net>
References: <20070618003142.321040@gmx.net>
Message-ID: <89C9E8C9-E888-4F6F-BD1C-D5A1F1AED526@classdump.org>

Hi Markus!

On Jun 18, 2007, at 2:31 AM, Markus Kuhla wrote:

> page		:	paragraph *;
> paragraph 	:	text_parag  |  block;
> text_paragr	:	(OPEN ((NEWLINE)=>{false}? )) => text_line+;

I think the reason why the semantic predicate is not generated into  
the code is that there isn't any matching done immediately after it,  
but I'm not totally sure.

Does this help:

text_paragr	:	(OPEN ~NEWLINE)=> text_line+;

I can't test it right now, but I think it should do the trick.  
Synpred reads as "there must be OPEN followed by not NEWLINE" to  
match text_line+.
For the actual predicate evalutation look in the code for rule  
paragraph, as the predicate is hoisted from text_paragraph.
This is the code I get for the grammar then:

    // /tmp/Test.g:5:1: paragraph : ( text_paragr | block );
     public final void paragraph() throws RecognitionException {
         try {
             // /tmp/Test.g:5:14: ( text_paragr | block )
             int alt2=2;
             int LA2_0 = input.LA(1);

             if ( (LA2_0==NEWLINE||LA2_0==ANY) ) {
                 alt2=1;
             }
             else if ( (LA2_0==OPEN) ) {
                 int LA2_2 = input.LA(2);

                 if ( (LA2_2==NEWLINE) ) {
                     alt2=2;
                 }
                 else if ( ((LA2_2>=CLOSE && LA2_2<=ANY)) ) {
                     alt2=1;
                 }
                 else {
                     if (backtracking>0) {failed=true; return ;}
                     NoViableAltException nvae =
                         new NoViableAltException("5:1: paragraph :  
( text_paragr | block );", 2, 2, input);

                     throw nvae;
                 }
             }
             else {
                 if (backtracking>0) {failed=true; return ;}
                 NoViableAltException nvae =
                     new NoViableAltException("5:1: paragraph :  
( text_paragr | block );", 2, 0, input);

                 throw nvae;
             }
             switch (alt2) {
                 case 1 :
                     // /tmp/Test.g:5:14: text_paragr
                     {
                     pushFollow(FOLLOW_text_paragr_in_paragraph22);
                     text_paragr();
                     _fsp--;
                     if (failed) return ;

                     }
                     break;
                 case 2 :
                     // /tmp/Test.g:5:30: block
                     {
                     pushFollow(FOLLOW_block_in_paragraph28);
                     block();
                     _fsp--;
                     if (failed) return ;

                     }
                     break;

             }
         }
         catch (RecognitionException re) {
             reportError(re);
             recover(input,re);
         }
         finally {
         }
         return ;
     }


HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From antlr at aubit.com  Mon Jun 18 00:05:03 2007
From: antlr at aubit.com (Mike Aubury)
Date: Mon, 18 Jun 2007 08:05:03 +0100
Subject: [antlr-interest] Informix 4GL scripts to Java conversion
In-Reply-To: <33CEC59503EEE8489B70EFB019451DF217072570@esng11p32002old.csfb.cs-group.com>
References: <33CEC59503EEE8489B70EFB019451DF217072570@esng11p32002old.csfb.cs-group.com>
Message-ID: <200706180805.03159.antlr@aubit.com>

You might also want to look at the Aubit4GL project 
http://sourceforge.net/projects/aubit4gl

This uses Bison/Flex rather than Antlr - but it is pretty well tested, and 
includes all the required 4gl library code, form compilers etc needed...


On Monday 18 June 2007 06:12, Gangatharan, Senthil wrote:
> Hi Friends,
>
> I'm new to ANTLR.
>
> I have a requirement to convert Informix 4gl scripts to java code.
>
> I got fgl.g (4gl grammer) & tried to run it using eclipse pulgin. It works
> fine, I'm able to parse 4GL scripts.
>
> My understanding is that I need to write java code translation logic to get
> equivalent java code.
>
> Is there any code available already for informix 4gl to Java translation
> ?... Please help.
>
> Regards
> Senthil
>

-- 
Mike Aubury

Aubit Computing Ltd is registered in England and Wales, Number: 3112827
Registered Address : Murlain Business Centre, Union Street, Chester, CH1 1QP

From mark.mandel at gmail.com  Mon Jun 18 00:23:18 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 18 Jun 2007 17:23:18 +1000
Subject: [antlr-interest] Island Parsing - a different way, seems to work
Message-ID: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>

Hey all,

I've been playing around with Island Parsing, and I think I've come up
with a much simpler way of doing it other than the one that is in the
wiki
(http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)

I wanted to run it past you, in case there is something that I have missed.

I'll chop out a lot of the extraneous code around what I'm doing, so
hopefully I don't break it in the process.

I needed to be able to do some island parsing, simply where I just had
a string to parse, and  wanted to be able to insert the island grammar
tree into my current AST.

The code ended up looking pretty much like this:

startTag
	:
	(
	sto=START_TAG_OPEN stc=START_TAG_CLOSE	tc=tagContent
		(
		-> ^(CFTAG[$sto] START_TAG_CLOSE
						{
							parseScript(stc, tc)
						}
						  tagContent)
		)
	)
	;

The only issue I had here, was that I couldn't use $tc, because for
some reason ANTLR couldn't recognise it - so I just set it explicitly,
and everything seemed happy.

>From there, I was able to write my own parseScript function that
returns a CommonTree,

protected Tree parseCFScript(Token start, ParserRuleReturnScope stop)
	{
		
org.antlr.runtime.BitSet bit = new org.antlr.runtime.BitSet();
		bit.add(OTHER);
		List otherTokens =
((CommonTokenStream)input).getTokens(start.getTokenIndex(),
stop.stop.getTokenIndex(), bit);
		
		StringBuffer buffer = new StringBuffer();
		
		for(Object t : otherTokens)
		{
			buffer.append(((Token)t).getText());
		}

		CharStream input = new ANTLRNoCaseStringStream(buffer.toString());
        CFScriptLexer lexer = new CFScriptLexer(input);

        CommonTokenStream tokens = new CommonTokenStream(lexer);
        CFScriptParser parser = new CFScriptParser(tokens);

        try
        {
        	CFScriptParser.script_return root = parser.script();
        	Tree ast = (Tree)root.getTree();
        	return ast;
        }
        catch(RecognitionException exc)
        {
        	ErrorEvent event = new ErrorEvent(exc, "CFScript Error");
        	getObservable().notifyObservers(event);
        }
		
		return null;
	}	


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From mark.mandel at gmail.com  Mon Jun 18 00:27:35 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 18 Jun 2007 17:27:35 +1000
Subject: [antlr-interest] Island Parsing - a different way, seems to work
In-Reply-To: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>
References: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>
Message-ID: <4153ee230706180027w3f4423j409df9b1d2489850@mail.gmail.com>

Oooops!  I hit enter before I was ready to send this.. .let me clarify
a bit more.

protected Tree parseCFScript(Token start, ParserRuleReturnScope stop)
       {

//-- this is just to get the tokens I need to get the String, once I
have my String, it doesn't really matter.
org.antlr.runtime.BitSet bit = new org.antlr.runtime.BitSet();
               bit.add(OTHER);
               List otherTokens =
((CommonTokenStream)input).getTokens(start.getTokenIndex(),
stop.stop.getTokenIndex(), bit);

               StringBuffer buffer = new StringBuffer();

               for(Object t : otherTokens)
               {
                       buffer.append(((Token)t).getText());
               }

//now I have my string, I simply pass it off to my StringStream, here
I have a custom one that doesn't check case.
               CharStream input = new
ANTLRNoCaseStringStream(buffer.toString());
       CFScriptLexer lexer = new CFScriptLexer(input);

       CommonTokenStream tokens = new CommonTokenStream(lexer);
       CFScriptParser parser = new CFScriptParser(tokens);

       try
       {
               CFScriptParser.script_return root = parser.script();
               Tree ast = (Tree)root.getTree();
               return ast;
       }
       catch(RecognitionException exc)
       {
               //this is just my custom error reporting.
               ErrorEvent event = new ErrorEvent(exc, "CFScript Error");
               getObservable().notifyObservers(event);
       }

               //and failing all else, return null, which does nothing
               return null;
       }

I honestly, expected that this would create the right AST, but with
Tokens on the wrong lines, however, the island tokens seems to
automagically know what line they are on in the grand context of the
grammar.

This seems like a *much* simpler way to do island parsing, but have I
missed somethng crucial somewhere, that I'm not aware of?

Thanks,

Mark


On 6/18/07, Mark Mandel <mark.mandel at gmail.com> wrote:
> Hey all,
>
> I've been playing around with Island Parsing, and I think I've come up
> with a much simpler way of doing it other than the one that is in the
> wiki
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)
>
> I wanted to run it past you, in case there is something that I have missed.
>
> I'll chop out a lot of the extraneous code around what I'm doing, so
> hopefully I don't break it in the process.
>
> I needed to be able to do some island parsing, simply where I just had
> a string to parse, and  wanted to be able to insert the island grammar
> tree into my current AST.
>
> The code ended up looking pretty much like this:
>
> startTag
>         :
>         (
>         sto=START_TAG_OPEN stc=START_TAG_CLOSE  tc=tagContent
>                 (
>                 -> ^(CFTAG[$sto] START_TAG_CLOSE
>                                                 {
>                                                         parseScript(stc, tc)
>                                                 }
>                                                   tagContent)
>                 )
>         )
>         ;
>
> The only issue I had here, was that I couldn't use $tc, because for
> some reason ANTLR couldn't recognise it - so I just set it explicitly,
> and everything seemed happy.
>
> From there, I was able to write my own parseScript function that
> returns a CommonTree,
>
> protected Tree parseCFScript(Token start, ParserRuleReturnScope stop)
>         {
>
> org.antlr.runtime.BitSet bit = new org.antlr.runtime.BitSet();
>                 bit.add(OTHER);
>                 List otherTokens =
> ((CommonTokenStream)input).getTokens(start.getTokenIndex(),
> stop.stop.getTokenIndex(), bit);
>
>                 StringBuffer buffer = new StringBuffer();
>
>                 for(Object t : otherTokens)
>                 {
>                         buffer.append(((Token)t).getText());
>                 }
>
>                 CharStream input = new ANTLRNoCaseStringStream(buffer.toString());
>         CFScriptLexer lexer = new CFScriptLexer(input);
>
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         CFScriptParser parser = new CFScriptParser(tokens);
>
>         try
>         {
>                 CFScriptParser.script_return root = parser.script();
>                 Tree ast = (Tree)root.getTree();
>                 return ast;
>         }
>         catch(RecognitionException exc)
>         {
>                 ErrorEvent event = new ErrorEvent(exc, "CFScript Error");
>                 getObservable().notifyObservers(event);
>         }
>
>                 return null;
>         }
>


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From antlr at mirality.co.nz  Mon Jun 18 00:29:36 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 18 Jun 2007 19:29:36 +1200
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <33203F03-7100-4666-B5AF-0A21B4E218FD@cs.usfca.edu>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
	<9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
	<DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>
	<9da4f4520706171601n43a1987csc19df7d0718d6ca7@mail.gmail.com>
	<33203F03-7100-4666-B5AF-0A21B4E218FD@cs.usfca.edu>
Message-ID: <20070618072951.83C5911EBDF@www.antlr.org>

At 12:16 18/06/2007, Terence Parr wrote:
 >On Jun 18, 2007, at 9:01 AM, Oliver Zeigermann wrote:
 >> which I was hoping would introduce backtracking which should
 >> have made your example work. Indeed, that option inserted some 

 >> code, but IMHO totally meaningless and without effect.
 >>
 >> Maybe this does not work for the lexer?
 >
 >I've never tried it in the lexer...I'd suggest avoiding it even 
if
 >it works. ;)

Lexer backtracking doesn't appear to work at the moment, but it is 
currently my #2 most wanted feature :)

(I also think that the lexer should backtrack by default even 
without any options and without having to make the parser 
backtrack too.  The behaviour of the lexer just makes more sense 
to me that way.  But I've said that before.)


From parrt at cs.usfca.edu  Mon Jun 18 00:35:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 17:35:25 +1000
Subject: [antlr-interest] Understanding lookahead
In-Reply-To: <20070618072952.1D3D210075D@nexus.cs.usfca.edu>
References: <9B909848-59F0-4682-BEAD-B25A3E197174@wincent.com>
	<9da4f4520706061348la25d36fh7e5bc8f105286899@mail.gmail.com>
	<DC99D101-83DD-4818-A2AC-91D2F9C20BB3@wincent.com>
	<9da4f4520706171601n43a1987csc19df7d0718d6ca7@mail.gmail.com>
	<33203F03-7100-4666-B5AF-0A21B4E218FD@cs.usfca.edu>
	<20070618072952.1D3D210075D@nexus.cs.usfca.edu>
Message-ID: <BD1647D3-739C-49A6-9A2A-545D58FF425B@cs.usfca.edu>


On Jun 18, 2007, at 5:29 PM, Gavin Lambert wrote:

> At 12:16 18/06/2007, Terence Parr wrote:
> >On Jun 18, 2007, at 9:01 AM, Oliver Zeigermann wrote:
> >> which I was hoping would introduce backtracking which should
> >> have made your example work. Indeed, that option inserted some
> >> code, but IMHO totally meaningless and without effect.
> >>
> >> Maybe this does not work for the lexer?
> >
> >I've never tried it in the lexer...I'd suggest avoiding it even if
> >it works. ;)
>
> Lexer backtracking doesn't appear to work at the moment, but it is  
> currently my #2 most wanted feature :)

Lexer backtracking works no problem.  Just the backtrack=true option  
apparently has a problem.  Use (..)=>

> (I also think that the lexer should backtrack by default even  
> without any options and without having to make the parser backtrack  
> too.  The behaviour of the lexer just makes more sense to me that  
> way.  But I've said that before.)

I think one wants LL(*) by default.  Lexers should be mean and lean  
by default as they are most of the parsing time.

Ter



From robermann at gmail.com  Mon Jun 18 00:59:05 2007
From: robermann at gmail.com (robermann)
Date: Mon, 18 Jun 2007 09:59:05 +0200
Subject: [antlr-interest] error return code
Message-ID: <414e44f70706180059p6d086ad0gaf7a12397756e013@mail.gmail.com>

Hi all,
a question: let this command (and error):

java Test < myInput.txt
line 0:-1 mismatched input '<EOF>' expecting '}'

After getting a such parser error, I would expect that either "echo
%errorlevel%" (on a DOS shell) or "echo $?" (on a Bash shell) would return a
code not equal to 0. Instead, I get always a return code = 0. Is there any
particular reason? When automating /scripting, it could be useful
distinguish whether the parser exit with an exception or not.


Best regards
Roberto


--------------------------------------------------------------------------------
Are you tired to make software? Sound it! (www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/76304262/attachment.html 

From win at wincent.com  Mon Jun 18 00:58:39 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 18 Jun 2007 09:58:39 +0200
Subject: [antlr-interest] Wondering about: Error handling
In-Reply-To: <C3F33C7F-17B0-4588-B404-A0918402C1D6@cs.usfca.edu>
References: <9da4f4520706171313u2d9e6d19kf1b6a4dc836c3518@mail.gmail.com>
	<C3F33C7F-17B0-4588-B404-A0918402C1D6@cs.usfca.edu>
Message-ID: <5DE370DD-F187-4B7C-BF25-CD4542D85D32@wincent.com>

El 18/6/2007, a las 2:14, Terence Parr escribi?:

> On Jun 18, 2007, at 6:13 AM, Oliver Zeigermann wrote:
>> When I want special handling for certain exceptions only I can  
>> specify
>> that in the catch phrase. Like that:
>>
>> catch [FailedPredicateException fpe] {
>> ...
>> }
>>
>> However, this replaces the orignal catch block instead of being  
>> added.
>> I expected something like this to be generated:
>>
>>
>>     catch (FailedPredicateException fpe) {
>>       ...
>>        }
>>      catch (RecognitionException re) {
>>            reportError(re);
>>            recover(input,re);
>>        }
>>
>> But only the first block actually is generated.
>
> Interesting.  Hmm...I guess that was my intended behaviour but I  
> can see how it would be confusing.  OTOH, I can't always look at  
> the exception names inside and determine for an arbitrary target  
> what's up.  In fact, ANTLR's code generator can't assume anything.

At least as a straightforward workaround you can just include the  
RecognitionException catch block in your own override if that's the  
behaviour that you want...

Cheers,
Wincent




From parrt at cs.usfca.edu  Mon Jun 18 01:22:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jun 2007 18:22:36 +1000
Subject: [antlr-interest] error return code
In-Reply-To: <414e44f70706180059p6d086ad0gaf7a12397756e013@mail.gmail.com>
References: <414e44f70706180059p6d086ad0gaf7a12397756e013@mail.gmail.com>
Message-ID: <6E6FB690-F80A-4168-9ADB-9913B2BDAE1F@cs.usfca.edu>


On Jun 18, 2007, at 5:59 PM, robermann wrote:

> Hi all,
> a question: let this command (and error):
>
> java Test < myInput.txt
> line 0:-1 mismatched input '<EOF>' expecting '}'
>
> After getting a such parser error, I would expect that either "echo  
> %errorlevel%" (on a DOS shell) or "echo $?" (on a Bash shell) would  
> return a code not equal to 0. Instead, I get always a return code =  
> 0. Is there any particular reason? When automating /scripting, it  
> could be useful distinguish whether the parser exit with an  
> exception or not.
>

Hi. That's your tool invoking the parser. ANTLR parsers don't exit.  
Catch the exception and send out an error code. :)

Ter


From robermann at gmail.com  Mon Jun 18 02:07:07 2007
From: robermann at gmail.com (robermann)
Date: Mon, 18 Jun 2007 11:07:07 +0200
Subject: [antlr-interest] error return code
In-Reply-To: <6E6FB690-F80A-4168-9ADB-9913B2BDAE1F@cs.usfca.edu>
References: <414e44f70706180059p6d086ad0gaf7a12397756e013@mail.gmail.com>
	<6E6FB690-F80A-4168-9ADB-9913B2BDAE1F@cs.usfca.edu>
Message-ID: <414e44f70706180207n5091d68eq58544cf7c137217b@mail.gmail.com>

I got the point. If I override the default error handling mechanism, I can
rethrow the exception, rather than catch it. So the calling (testing) class
get an unhandled exception and the Java VM exits with an error code != 0.

In the grammar I'll therefore add the following stuff, as you teach :)

//START OVERRIDE ERROR
@members {
protected void mismatch(IntStream input, int ttype, BitSet follow)
    throws RecognitionException
{
    throw new MismatchedTokenException(ttype, input);
}
public void recoverFromMismatchedSet(IntStream input,
                                     RecognitionException e,
                                     BitSet follow)
    throws RecognitionException
{
    throw e;
}
}

// Alter code generation so catch-clauses get replace with
// this action.
@rulecatch {
catch (RecognitionException e) {
    throw e;
}
}
//END OVERRIDE ERROR


Thanks
Roberto


On 6/18/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Jun 18, 2007, at 5:59 PM, robermann wrote:
>
> > Hi all,
> > a question: let this command (and error):
> >
> > java Test < myInput.txt
> > line 0:-1 mismatched input '<EOF>' expecting '}'
> >
> > After getting a such parser error, I would expect that either "echo
> > %errorlevel%" (on a DOS shell) or "echo $?" (on a Bash shell) would
> > return a code not equal to 0. Instead, I get always a return code =
> > 0. Is there any particular reason? When automating /scripting, it
> > could be useful distinguish whether the parser exit with an
> > exception or not.
> >
>
> Hi. That's your tool invoking the parser. ANTLR parsers don't exit.
> Catch the exception and send out an error code. :)
>
> Ter
>
>


-- 
Are you tired to make software? Sound it! (http://www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/4ba77e34/attachment-0001.html 

From dave at badgers-in-foil.co.uk  Mon Jun 18 03:16:44 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 18 Jun 2007 10:16:44 +0000
Subject: [antlr-interest] Island Parsing - a different way, seems to work
In-Reply-To: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>
References: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>
Message-ID: <20070618101644.GA23454@badgers-in-foil.co.uk>

On Mon, Jun 18, 2007 at 05:23:18PM +1000, Mark Mandel wrote:
> Hey all,
> 
> I've been playing around with Island Parsing, and I think I've come up
> with a much simpler way of doing it other than the one that is in the
> wiki
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)

Hey!  My page :)


> The code ended up looking pretty much like this:
> 
> startTag
> 	:
> 	(
> 	sto=START_TAG_OPEN stc=START_TAG_CLOSE	tc=tagContent
> 		(
> 		-> ^(CFTAG[$sto] START_TAG_CLOSE
> 						{
> 							parseScript(stc, tc)
> 						}
> 						  tagContent)
> 		)
> 	)
> 	;

To be honest, I suspect you are trying to solve a simpler problem than
the kind which the 'under parser control' approach is tackling.  i.e.
your lexer is able to unambiguously recognise START_TAG_OPEN without any
additional context.  You should absolutely use a simpler approach than
the one on that wiki page if you possibly can!  :)

In some languages (e.g. the regex island grammar example from the wiki
page) it is not possible for the lexer to work out what's going on
without knowledge of what came before.  Getting the parser to talk to
the lexer so that the parser can supply this context needs a whole lot
of additional wiring that ANTLR doesn't deliver by default at the
moment.  That's why the example code is so complicated.

Have a look at 'island-grammar' from the examples-v3 download for
another approach handling a language that's closer to yours (I think).


Hope that makes sense!
dave

-- 
http://david.holroyd.me.uk/

From ot0006 at 0x29a.org.uk  Mon Jun 18 03:21:21 2007
From: ot0006 at 0x29a.org.uk (geoff)
Date: Mon, 18 Jun 2007 11:21:21 +0100
Subject: [antlr-interest] Imaginary nodes in Antlr 3
References: <mmo773h4oq7lcr77ib0rm53ee0l9hs7o28@4ax.com>
	<mmo773h4oq7lcr77ib0rm53ee0l9hs7o28-e09XROE/p8c@public.gmane.org>
	<B82EEBD6-5D46-4D92-ACAA-04118E6678C3@classdump.org>
Message-ID: <cs3b731695ttvsej23irg41n31fi6riinq@4ax.com>

On Sat, 16 Jun 2007 16:26:12 +0200, Kay Roepke
<kroepke at classdump.org> wrote:

>Hi geoff!
>
>On Jun 16, 2007, at 3:38 PM, geoff wrote:
<confused about imaginary nodes>
>> Is there something I'm missing on automatic creation of imaginary  
>> tokens? Clues welcome.
>
>ANTLR won't generate the token in the grammar. The text refers to the  
>Token object. You still need to tell ANTLR about the token in the  
>grammar, either by declaring a lexer rule or, if you want to have  
>imaginary tokens, via the tokens {} section in your grammar.
>Refer to page 99 in the book.
>
>HTH,

Thanks for the page reference, Kay. Indeed it helped.

"Look in the excellent index" would also have been good advice.
--
best,
geoff stevens

regrettably the email address above will bounce


From mark.mandel at gmail.com  Mon Jun 18 03:52:15 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 18 Jun 2007 20:52:15 +1000
Subject: [antlr-interest] Island Parsing - a different way, seems to work
In-Reply-To: <20070618101644.GA23454@badgers-in-foil.co.uk>
References: <4153ee230706180023m2da8d286t66810b14ee7d8033@mail.gmail.com>
	<20070618101644.GA23454@badgers-in-foil.co.uk>
Message-ID: <4153ee230706180352g66dab45bs52bc2b5709e5bfe8@mail.gmail.com>

Aha.

I see that now.

This seems to kinda follow the same sort of lines as the example (sorta-ish)

I was just surprised that it worked, more than anything else.

Thanks for the heads up on the example, that gives me some extra ideas
as well for some of the stuff I am doing.

Cheers,

Mark

On 6/18/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Mon, Jun 18, 2007 at 05:23:18PM +1000, Mark Mandel wrote:
> > Hey all,
> >
> > I've been playing around with Island Parsing, and I think I've come up
> > with a much simpler way of doing it other than the one that is in the
> > wiki
> > (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)
>
> Hey!  My page :)
>
>
> > The code ended up looking pretty much like this:
> >
> > startTag
> >       :
> >       (
> >       sto=START_TAG_OPEN stc=START_TAG_CLOSE  tc=tagContent
> >               (
> >               -> ^(CFTAG[$sto] START_TAG_CLOSE
> >                                               {
> >                                                       parseScript(stc, tc)
> >                                               }
> >                                                 tagContent)
> >               )
> >       )
> >       ;
>
> To be honest, I suspect you are trying to solve a simpler problem than
> the kind which the 'under parser control' approach is tackling.  i.e.
> your lexer is able to unambiguously recognise START_TAG_OPEN without any
> additional context.  You should absolutely use a simpler approach than
> the one on that wiki page if you possibly can!  :)
>
> In some languages (e.g. the regex island grammar example from the wiki
> page) it is not possible for the lexer to work out what's going on
> without knowledge of what came before.  Getting the parser to talk to
> the lexer so that the parser can supply this context needs a whole lot
> of additional wiring that ANTLR doesn't deliver by default at the
> moment.  That's why the example code is so complicated.
>
> Have a look at 'island-grammar' from the examples-v3 download for
> another approach handling a language that's closer to yours (I think).
>
>
> Hope that makes sense!
> dave
>
> --
> http://david.holroyd.me.uk/
>


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From silvester.pozarnik at tracetracker.com  Mon Jun 18 04:27:17 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Mon, 18 Jun 2007 13:27:17 +0200
Subject: [antlr-interest] How to feedback to users the string expected
	on MismatchedTokenException
In-Reply-To: <mailman.1482.1181739582.2496.antlr-interest@antlr.org>
Message-ID: <5D85F621120B9545BE359DCFA778812585BF0B@SERVER.tt.tracetracker.com>



> Date: Wed, 13 Jun 2007 09:57:15 +0200
> From: Benjamin Niemann <pink at odahoda.de>
> Subject: Re: [antlr-interest] How to feedback to users the string
> 	expected	on	MismatchedTokenException
> To: antlr-interest at antlr.org
> Message-ID: <f4o80r$sq6$1 at sea.gmane.org>
> Content-Type: text/plain; charset=us-ascii
> 
> Jonathan Thomas wrote:
> 
> > In previous versions of Antlr you could put in 'paraphrase' option
to
> > spit out whatever you liked as the error message for that token. On
> > this
> >
>
page:http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+
AN
> TLR+3
> > down the bottom it mysteriously says there is something similar, but
> > you need the book.&nbsp; I'm still waiting for my book to arrive ...
:-)
> 
> The book only describes paraphrasing for rules (up to the page I am at
now
> -
> but I have finished the error recovery chapter just yesterday).
> 
> To elaborate my suggestion a bit more:
> 
> getErrorMessage() takes the tokenNames array as an argument, so you
could
> override it with a method that calls BaseRecognizer.getErrorMessage()
with
> a custom array.
> I'd suggest to fill this custom array from a mapping, because token
types
> may jump around in the mapping, when the grammar is modified.
> A rough example in Python syntax (still too early for me to switch my
> brain
> into - a very limited - Java mode ;) )
> 
> # this clones the original array
> myTokenNames = TParser.tokenNames[:]
> 
> # a mapping of token types and there new name
> overrides = {
>   PLUS: 'plus sign',
>   DOLLAR: 'much money',
>   ...
> }
> 
> # changes names of those token type mentioned in overrides
> for ttype, name in overrides.items():
>     myTokenNames[ttype] = name
> 
> 
> And you getErrorMessage() looks like (if you'd do it in Python):
> 
> def getErrorMessage(self, exc, tokenNames):
>     return BaseRecognizer.getErrorMessage(self, exc, myTokenNames)
> 
> 
> 
> 
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
> 

If I understood you right, you suggest adding implementation which
resolves the internal token type in to the token string. This implies
that you have to administrate such a mapping in two places: in the token
section and in the host language implementation. Let me give some
example with this simple grammar:


	grammar select;
	options { output = AST;}
	tokens {
	  SELECT = 'select';
	}
	statement:
	  SELECT SEMI! EOF
	;
	
	SEMI: ';' ;    
	WS : (' '|'\n') {$channel=HIDDEN;} ;


If the input to such parser is the "SELECT;" you will get:

	line 1:0 no viable alternative at character 'S'
	line 1:1 no viable alternative at character 'E'
	line 1:2 no viable alternative at character 'L'
	line 1:3 no viable alternative at character 'E'
	line 1:4 no viable alternative at character 'C'
	line 1:5 no viable alternative at character 'T'
	line 1:6 mismatched input ';' expecting SELECT

The 'expecting SELECT' is confusing in this context and I should like to
respond with 'expecting "select"'.
In some cases the language may consist of lots of tokens and it's
cumbersome to manage a separate mapping in the source code. As I can see
the original token string 'select' is _not_ available in the generated
Java code after the grammar is processed. The generated lexer also
operates with exceptions as: 

	NoViableAltException nvae =
	new NoViableAltException("1:1: Tokens : ( SELECT | SEMI | WS);",
1, 0, input); 

where the 'SELECT' is used. Such an error reporting may mean something
to the guy that wrote the parser & lexer definition, but is completely
useless for those who provide the input according to the defined
vocabulary.

The generated "select.tokens" file contains the mappings and can be used
to resolve tokens in case of errors, but I do not feel that this
solution is elegant enough. 

Possible solution could be to allow the users to provide their own
definition to protected "String vocabFilePattern" in
org.antlr.codegen.CodeGenerator.java which may generate a static java
class that can resolve all tokens.

Even better is to do some better job on error reporting so that antlr is
easier to use when building language formatters, interactive syntax
checkers and context sensitive help.

BR
Silvester Pozarnik    

From hellolinus at gmail.com  Mon Jun 18 04:57:42 2007
From: hellolinus at gmail.com (=?ISO-8859-2?Q?Tomasz_B=B1k?=)
Date: Mon, 18 Jun 2007 13:57:42 +0200
Subject: [antlr-interest] How to solve = and . mutually left-recursive?
Message-ID: <2a64c90e0706180457v18411455hd12d29b3ebfe4315@mail.gmail.com>

Hello!
I have small problem with quite common task (I think)
with "sets of rules that are mutually left-recursive".

$ java org.antlr.Tool SBQL.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(210):  The following sets of rules are mutually left-recursive
[non_algebraic_expr, expr]
$

This is my grammar:


grammar SBQL;

options {
 output = AST;
 ASTLabelType = CommonTree;
 backtrack=true;
}

// parser
program     : (expr { System.out.println($expr.tree.toStringTree()); } )+ ;

expr         : primary_expr
        | name_expr
        | algebraic_expr
        | equality_expr
        | non_algebraic_expr
        ;

primary_expr    : STRING_LITERAL
        | INTEGER_LITERAL
        | BOOLEAN_LITERAL
        | '(' expr ')'
        ;

name_expr    : STRING_LITERAL
        ;

algebraic_expr
            :  primary_expr ('+'^ primary_expr)*
            |  primary_expr ('-'^ primary_expr)*
            |  primary_expr ('*'^ primary_expr)*
            ;

//algebraic_expr_old
//        : expr '+' expr
//        | expr '-' expr
//        | expr '*' expr
//        ;


equality_expr    :  expr '=' expr
        ;

non_algebraic_expr    : expr '.' expr
            | expr 'where' expr
            ;

// lexer
BOOLEAN_LITERAL        :  ('true'|'false')*;
INTEGER_LITERAL        :  ('0'..'9')*;
STRING_LITERAL        :  ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

WS  :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;



Any ideas how to solve this?

Thanks in advance,
Tomasz Bak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/313c9b96/attachment.html 

From oliver at zeigermann.de  Mon Jun 18 05:45:16 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon, 18 Jun 2007 14:45:16 +0200
Subject: [antlr-interest] Wondering about: Error handling
In-Reply-To: <5DE370DD-F187-4B7C-BF25-CD4542D85D32@wincent.com>
References: <9da4f4520706171313u2d9e6d19kf1b6a4dc836c3518@mail.gmail.com>
	<C3F33C7F-17B0-4588-B404-A0918402C1D6@cs.usfca.edu>
	<5DE370DD-F187-4B7C-BF25-CD4542D85D32@wincent.com>
Message-ID: <9da4f4520706180545w56d34e1ak9071fd2006991ef4@mail.gmail.com>

2007/6/18, Wincent Colaiuta <win at wincent.com>:
> El 18/6/2007, a las 2:14, Terence Parr escribi?:
>
> > On Jun 18, 2007, at 6:13 AM, Oliver Zeigermann wrote:
> >> When I want special handling for certain exceptions only I can
> >> specify
> >> that in the catch phrase. Like that:
> >>
> >> catch [FailedPredicateException fpe] {
> >> ...
> >> }
> >>
> >> However, this replaces the orignal catch block instead of being
> >> added.
> >> I expected something like this to be generated:
> >>
> >>
> >>     catch (FailedPredicateException fpe) {
> >>       ...
> >>        }
> >>      catch (RecognitionException re) {
> >>            reportError(re);
> >>            recover(input,re);
> >>        }
> >>
> >> But only the first block actually is generated.
> >
> > Interesting.  Hmm...I guess that was my intended behaviour but I
> > can see how it would be confusing.  OTOH, I can't always look at
> > the exception names inside and determine for an arbitrary target
> > what's up.  In fact, ANTLR's code generator can't assume anything.
>
> At least as a straightforward workaround you can just include the
> RecognitionException catch block in your own override if that's the
> behaviour that you want...

Yes. That sounds reasonable and sufficient.

Thanks

Oliver

From win at wincent.com  Mon Jun 18 08:29:40 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 18 Jun 2007 17:29:40 +0200
Subject: [antlr-interest] Predicate hoisting/lowering confusion
Message-ID: <4B1DD5E0-547F-44AC-91B7-ADCA2CF4787C@wincent.com>

I have a gated semantic predicate in a grammar which isn't behaving  
as expected.

Here is a reduced example grammar in which the hoisting/lowering  
behaviour has me totally baffled. I have a gated semantic predicate  
in one of the rules. Looking at the generated parser code I can see  
how it gets "hoisted" up into the DFA of a calling rule. The thing  
which puzzles me is that it is also being "lowered" down into a rule  
further down the chain, and most confusingly of all, the sense of the  
predicate is inverted in the lower rule:

   grammar Simple;

   FOO : 'foo' ;

   section : element* EOF ;
   element : {true}?=> pre ;
   pre : FOO+ ;

It can be seen that the gated semantic predicate ("true") is  
"hoisted" up into the DFA for the "section" rule:

   if ( (LA1_0==FOO) && (true)) {
       alt1=1;
   }

You can also see it in the "element" rule itself:

   if ( !(true) ) {
       throw new FailedPredicateException(input, "element", "true");
   }

But the thing which totally baffles me is that you see it in the  
"pre" rule too:

   if ( (LA2_0==FOO) ) {
       int LA2_2 = input.LA(2);
       if ( (!(true)) ) {
           alt2=1;
       }
   }

My confusion stems from two things: firstly, I don't understand why  
the predicate is being "lowered" into the "pre" rule; and secondly, I  
don't understand why the sense of the predicate is inverted ("!true"  
instead of "true"); as a result of this latter change the pre rule  
can never match for any input and will always throw an  
EarlyExitException.

Can someone help me to understand this? The behaviour and generated  
code is the same where rule "element" is more complex (multiple  
alternatives); I've just posted the single-alternative case because  
it is simpler.

Cheers,
Wincent


From henryb at ntlworld.com  Mon Jun 18 08:44:54 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Mon, 18 Jun 2007 16:44:54 +0100
Subject: [antlr-interest] AST node
Message-ID: <4676A876.3030904@ntlworld.com>

Hi Guys,
I need my tree parser to add the child node "NORET" to  an expression

text :  a0=cos(pi=3.14159));
tree:             ( EXPR ( = a0 ( cos ( func_arg ( = pi 3.14159 ) ) ) ) )
New Tree :   ( EXPR ( = a0 NORET ( cos ( func_arg ( = pi 3.14159 ) ) ) ) )



text:  f1[$lon]={1,2,3,4.0}
tree:  ( EXPR ( = ( f1 ( dmn_list lon ) ) ( value_list 1 2 3 4.0 ) ) )
New Tree: ( EXPR ( = ( f1 ( dmn_list lon ) NORET ) ( value_list 1 2 3 
4.0 ) ) )

How do I create the child node & how do I add it to the tree.
I've looked at all the create methods in ASTFactory but they seem to 
require some ASTPair thing.
All the methods in AST.hpp are for an existing Ref

Help please

Regards Henry





From DWEISER at uwyo.edu  Mon Jun 18 10:28:24 2007
From: DWEISER at uwyo.edu (David A Weiser)
Date: Mon, 18 Jun 2007 11:28:24 -0600
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
Message-ID: <F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>

Hey all,

I have the beginning of a rule:
formalParameterDecls returns  [HashMap<String,String> params].

But I get a compilation error because of:
public static class formalParameters_return extends
ParserRuleReturnScope {
        public HashMap<String;
        public String> params;
    };

In the java file for the grammar parser.  Am I to assume that java 1.5
features aren't supported, or am I just going about this wrong?

Thanks,
dave
-----Original Message-----
From: antlr-interest-request at antlr.org
[mailto:antlr-interest-request at antlr.org] 
Sent: Saturday, June 16, 2007 1:00 PM
To: antlr-interest at antlr.org
Subject: antlr-interest Digest, Vol 31, Issue 63

Send antlr-interest mailing list submissions to
	antlr-interest at antlr.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://www.antlr.org/mailman/listinfo/antlr-interest
or, via email, send a message with subject or body 'help' to
	antlr-interest-request at antlr.org

You can reach the person managing the list at
	antlr-interest-owner at antlr.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of antlr-interest digest..."


Today's Topics:

   1. Re: Debugging Tree Parser grammar using ANTLRWorks (Terence Parr)
   2. Re: Debugging Tree Parser grammar using ANTLRWorks (Terence Parr)
   3. Re: Debugging Tree Parser grammar using ANTLRWorks (Terence Parr)
   4. Re: Turning off harmless warnings (Kay Roepke)
   5. Re: Java string array issue in v3. (Kay Roepke)
   6. Re: Patch for filter mode (+1 Vote!) (Kay Roepke)
   7. Re: Bug using rule action? (Kay Roepke)
   8. Imaginary nodes in Antlr 3 (geoff)
   9. Re: Imaginary nodes in Antlr 3 (Kay Roepke)
  10. Re: Java string array issue in v3. (Kay Roepke)


----------------------------------------------------------------------

Message: 1
Date: Sat, 16 Jun 2007 15:51:02 +1000
From: Terence Parr <parrt at cs.usfca.edu>
Subject: Re: [antlr-interest] Debugging Tree Parser grammar using
	ANTLRWorks
To: ANTLR Interest <antlr-interest at antlr.org>
Cc: Jean Bovet <jean_bovet at mac.com>
Message-ID: <96C2D442-710C-4EE7-B39D-C2FB242BC976 at cs.usfca.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Well, it works; i asked Jean to change the message.  It just has to  
"debug remote..." not "debug".  He just doesn't have the test rig set  
up.  You can start up a tree parser from command line and have AW  
connect to it.

Ter
On Jun 15, 2007, at 9:13 PM, Chaudhari, Pranita, OPEE14 wrote:

> I am new to ANTLRWorks need help !
>
> When I am trying to debug Tree Parser Grammar, window pops up  
> saying "ANTLRWorks does not support debugging tree Parser Grammar".  
> Does AntlrWorks 1.0.2 supports it?
>
> -Pranita



------------------------------

Message: 2
Date: Sat, 16 Jun 2007 16:01:06 +1000
From: Terence Parr <parrt at cs.usfca.edu>
Subject: Re: [antlr-interest] Debugging Tree Parser grammar using
	ANTLRWorks
To: ANTLR Interest <antlr-interest at antlr.org>
Message-ID: <7F15F5AD-D78D-4C83-91DA-1110172E672A at cs.usfca.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed


On Jun 16, 2007, at 4:38 AM, Diehl, Matthew J wrote:

> Debugging tree parsers has not been implemented in ANTLRWorks yet.
Hi :)  Contrary to the message, it works...just not at click of  
button from AW.

Ter



------------------------------

Message: 3
Date: Sat, 16 Jun 2007 16:11:31 +1000
From: Terence Parr <parrt at cs.usfca.edu>
Subject: Re: [antlr-interest] Debugging Tree Parser grammar using
	ANTLRWorks
To: ANTLR Interest <antlr-interest at antlr.org>
Message-ID: <50EAA69C-B944-4648-8AB8-DD5204D3EC35 at cs.usfca.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed


On Jun 16, 2007, at 9:51 AM, Gavin Lambert wrote:

> At 23:13 15/06/2007, Chaudhari, Pranita, OPEE14 wrote:
>> I am new to ANTLRWorks need help !
>>
>> When I am trying to debug Tree Parser Grammar, window pops up  
>> saying "ANTLRWorks does not support debugging tree Parser  
>> Grammar". Does AntlrWorks 1.0.2 supports it?
>
> While on the subject of debugging wishlists, it'd be nice if AW  
> could debug through lexers as well.  That'd save having to write a  
> throwaway program to step through the generated lexer code :)

I think we could add debug event triggers to the lexers w/o much  
effort.  ANTLRWorks would just...work.  :)  Well, assuming we treated  
chars as tokens.

Ter


------------------------------

Message: 4
Date: Sat, 16 Jun 2007 13:59:27 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Turning off harmless warnings
To: Wincent Colaiuta <win at wincent.com>
Cc: ANTLR mail-list <antlr-interest at antlr.org>
Message-ID: <6EE02E3E-5BEA-4EC9-AC9E-65BD0C117E8B at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed


On Jun 15, 2007, at 11:29 AM, Wincent Colaiuta wrote:

> So like I said, it would be good if someone with write access could  
> get this into the tracker, as it is not always possible to rewrite  
> the rules in such a way as to eliminate all such warnings!

Thanks for the pointer, just added: <http://www.antlr.org:8888/browse/ 
ANTLR-139>

cheers,
-k

-- 
Kay R?pke
http://classdump.org/






------------------------------

Message: 5
Date: Sat, 16 Jun 2007 14:39:17 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Java string array issue in v3.
To: Ted Villalba <ted.villalba at gmail.com>
Cc: ANTLR mail-list <antlr-interest at antlr.org>
Message-ID: <E1B1F737-15F0-4A2F-957B-B1CFCC28D47B at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed

Hi!

On Jun 15, 2007, at 11:35 PM, Johannes Luber wrote:

> Ted Villalba wrote:
>> Hi.
>> Not sure, I might be doing something wrong here, but this seems  
>> like a bug.
>> I'm trying to pass a string array to the start of my tree, but when I
>> compile my tree grammar the String array gets compiled
>> into a String.
>> So in treeGrammar.g my start symbol is rule "start"
>>
>> start[HashMap fieldMap, String[] fqls]
>> @init{
>> etc etc...
>> }
>
> IIRC, the problem is that arrays rely on "[]" which are part of the
> ANTLR grammar and that this is falsely attributed to be a parameter  
> for
> a rule. As far as I know there is no way to prevent this behaviour  
> right
> now. A workaround would be to declare flqs as object and cast it in  
> Java
> to a String array.

Yes, that's correct. As it stands it is not possible to escape the []  
chars.
I just had a look at the grammar and have a simple fix for this case,  
i.e.
it should treat a bare '[]' as just that token without trying to  
match an argument.
I'm not, however, certain that this actually is a good idea, because I'm
unsure whether or not it breaks other things.

We should ask Ter if he's alright with it, after that I could push  
the fix.
In the meantime I added a bug and will attach the diff over at
<http://www.antlr.org:8888/browse/ANTLR-140>

Thanks for reporting this!

cheers,
-k
-- 
Kay R?pke
http://classdump.org/






------------------------------

Message: 6
Date: Sat, 16 Jun 2007 14:52:32 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Patch for filter mode (+1 Vote!)
To: Wincent Colaiuta <win at wincent.com>
Cc: Mark Venbrux <mark.venbrux at gmail.com>, antlr-interest at antlr.org
Message-ID: <993ABC8B-CFE5-4050-B8CC-38B5D26114B3 at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed


On Jun 15, 2007, at 2:04 AM, Wincent Colaiuta wrote:

> Terence is off to Sydney, as you probably know... he sent me a  
> message to say, "remind me of this when I get back in a couple of  
> weeks". So I think you'll see the issue addressed in one way or  
> another then....

I added this at <http://www.antlr.org:8888/browse/ANTLR-141> so we  
don't lose this one.

thanks again,

-k
-- 
Kay R?pke
http://classdump.org/






------------------------------

Message: 7
Date: Sat, 16 Jun 2007 15:34:44 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Bug using rule action?
To: Cameron Esfahani <dirty at apple.com>
Cc: antlr-interest at antlr.org
Message-ID: <D9F01011-2E89-4FFA-8132-70D5F0A2348A at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed

Hi Cameron!

On Jun 14, 2007, at 1:19 AM, Cameron Esfahani wrote:

> I'm trying to add an action to one of my rules and I'm seeing some  
> strange behavior:
>
> grammar Test;
> [...]
> number_size
> 	:	num = NUMBER size = size_qualifier {
> 			// Validate that NUMBER fits within the size
qualifier.
> 			System.out.printf( "!\%s, !\%s\n",
$num.toString(), $size.getTree 
> ().toString() );
> 		} -> size_qualifier NUMBER
> 	;
> If I try to run this through ANTLR, I get an error:
>
> error(116): Test.g:30:39: unknown attribute for rule  
> size_qualifier: getTree
>
> When I examine TestParser.java, I see that "$size" is still there.   
> If I change the action, to remove the $ character, then it works:
>
> 			System.out.printf( "!\%s, !\%s\n",
$num.toString(), size.getTree 
> ().toString() );
>
> Why do I have to do this?  How come $num correctly causes a local  
> variable named num to be created, but not $size?

Don't remove the $ char, as this defeats any checking ANTLR can do on  
rule attributes. When doing that you rely on the internal naming
scheme ANTLR uses for the generated code. In the Objective-C target,  
for instance, this would break your code as I'm prefixing every local  
variable
with an _ character to avoid name clashes.

The reason for the behavior you are seeing is that ANTLR checks  
whether attributes on labels are valid. When it sees $size.getTree()  
it thinks you want to access the getTree field of whatever  
size_qualifier returns and discovers that size_qualifier doesn't  
declare any attribute with that name. Consequently it flags it as an  
error. It's a bit unfortuntate because it doesn't know about methods  
in the size_return class, even though it has generated that method  
itself.

When you use $size.tree.toString() it will work because the tree  
attribute is a "predefined attribute" of rules. The code generated  
would look like:

	// Validate that NUMBER fits within the size qualifier.
	System.out.printf( "!%s, !%s\n", num.toString(), ((CommonTree) 
size.tree).toString() );

The reason that $num.toString works is that $num refers to a Token  
and not a rule. It is allowed to reference a token or token label in  
a "stand-alone" manner, while this is not permitted for rule references.

Note that you can do without any labels in your example:

number_size
	:	NUMBER size_qualifier {
			// Validate that NUMBER fits within the size
qualifier.
			System.out.printf( "!\%s, !\%s\n",
$NUMBER.toString(),  
$size_qualifier.tree.toString() );
		} -> size_qualifier NUMBER
	;

generates your action as:

	// Validate that NUMBER fits within the size qualifier.
	System.out.printf( "!%s, !%s\n", NUMBER4.toString(),
((CommonTree) 
size_qualifier5.tree).toString() );

Labels are only necessary to disambiguate between multiple references  
to the same rule or token. This also nicely illustrates that you  
shouldn't rely on any naming scheme for rule returns because they  
will highly depend on the input grammar.
By using the predefined rule attributes we can ensure that we  
generate better code and are more flexible with future changes.

HTH,

-k

-- 
Kay R?pke
http://classdump.org/






------------------------------

Message: 8
Date: Sat, 16 Jun 2007 14:38:49 +0100
From: geoff <ot0006 at 0x29a.org.uk>
Subject: [antlr-interest] Imaginary nodes in Antlr 3
To: antlr-interest at antlr.org
Message-ID: <mmo773h4oq7lcr77ib0rm53ee0l9hs7o28 at 4ax.com>
Content-Type: text/plain; charset=us-ascii


Hallo there,

I'm running AntlrWorks 1.0.2, Antlr 3.0, StringTemplate 3.1b1 on XP.

I have The Definitive Antlr Reference open next to me.

I'm adding an AST to the Expr.g first example. I want to make the
assignment operator an
imaginary node:

stat:   expr NEWLINE! {System.out.println($expr.value);}
    |   ID '=' expr NEWLINE  -> ^(ASSIGN ID expr)          
    |   NEWLINE!
    ; 

On p166 Adding Imaginary Nodes the book says "simply refer to its token
type and, and
Antlr will create a Token object with that token type", which is what I
expected to happen
to ASSIGN.

But, this does not work, and I get 
(135) ... Reference to undefined token in rewrite rules: ASSIGN
as well as red wavy underlining in AntlrWorks.

On a guess I then tried adding the token to the grammar

ASSIGN : ; 

and everything compiled and ran as expected, tree built perfectly.

Is there something I'm missing on automatic creation of imaginary
tokens? Clues welcome.

--
best,
geoff stevens

regrettably the email address above will bounce



------------------------------

Message: 9
Date: Sat, 16 Jun 2007 16:26:12 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Imaginary nodes in Antlr 3
To: ot0006 at 0x29a.org.uk
Cc: antlr-interest at antlr.org
Message-ID: <B82EEBD6-5D46-4D92-ACAA-04118E6678C3 at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed

Hi geoff!

On Jun 16, 2007, at 3:38 PM, geoff wrote:

> stat:   expr NEWLINE! {System.out.println($expr.value);}
>     |   ID '=' expr NEWLINE  -> ^(ASSIGN ID expr)
>     |   NEWLINE!
>     ;
>
> On p166 Adding Imaginary Nodes the book says "simply refer to its  
> token type and, and
> Antlr will create a Token object with that token type", which is  
> what I expected to happen
> to ASSIGN.
>
> But, this does not work, and I get
> (135) ... Reference to undefined token in rewrite rules: ASSIGN
> as well as red wavy underlining in AntlrWorks.
>
> On a guess I then tried adding the token to the grammar
>
> ASSIGN : ;
>
> and everything compiled and ran as expected, tree built perfectly.
>
> Is there something I'm missing on automatic creation of imaginary  
> tokens? Clues welcome.

ANTLR won't generate the token in the grammar. The text refers to the  
Token object. You still need to tell ANTLR about the token in the  
grammar, either by declaring a lexer rule or, if you want to have  
imaginary tokens, via the tokens {} section in your grammar.
Refer to page 99 in the book.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/






------------------------------

Message: 10
Date: Sat, 16 Jun 2007 20:38:45 +0200
From: Kay Roepke <kroepke at classdump.org>
Subject: Re: [antlr-interest] Java string array issue in v3.
To: Ted Villalba <ted.villalba at gmail.com>
Cc: ANTLR mail-list <antlr-interest at antlr.org>
Message-ID: <CF71D177-4FC9-48F2-83FF-A9B786DAFF77 at classdump.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed


On Jun 16, 2007, at 2:39 PM, Kay Roepke wrote:

> We should ask Ter if he's alright with it, after that I could push  
> the fix.
> In the meantime I added a bug and will attach the diff over at
> <http://www.antlr.org:8888/browse/ANTLR-140>

FYI, the above URL has a comment describing the fix. When (and if)  
that goes through, you will be able to escape '[' and ']' characters  
in rule arguments, thus allowing things like String[] strArray as  
parameters.
It shouldn't affect anything else, as far as I can see.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/






------------------------------

_______________________________________________
antlr-interest mailing list
antlr-interest at antlr.org
http://www.antlr.org/mailman/listinfo/antlr-interest


End of antlr-interest Digest, Vol 31, Issue 63
**********************************************

From trunkel at gmail.com  Mon Jun 18 10:38:36 2007
From: trunkel at gmail.com (troy runkel)
Date: Mon, 18 Jun 2007 13:38:36 -0400
Subject: [antlr-interest] Problem with fatal error on recursive rules.
Message-ID: <620da58c0706181038g598dcb27mfdd8879f7ddb26b@mail.gmail.com>

Greetings,

I'm working on a T-SQL grammar and have run into a problem that I'm
unsure how to resolve.  I've attached a subset of the grammar that
demonstrates the problem.  Below is a copy of the error message that
I'm getting.  I understand why I'm getting the warnings, but not
what's causing the fatal error.  Any help you could offer would be
greatly appreciated.  Thanks.

Troy Runkel

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(211): TSQL.g:20:23: [fatal] rule alter_procedure has non-LL(*)
decision due to recursive rule invocations reachable from alts 1,2.
Resolve by left-factoring or using syntactic predicates or using
backtrack=true option.
warning(200): TSQL.g:20:23: Decision can match input such as "'ALTER'"
using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(200): TSQL.g:20:23: Decision can match input such as "'BEGIN'"
using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TSQL.g
Type: application/octet-stream
Size: 547 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/0015a123/attachment.obj 

From bace.spam at gmx.net  Mon Jun 18 11:44:10 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Mon, 18 Jun 2007 20:44:10 +0200
Subject: [antlr-interest] semantic predicate affects nothing
In-Reply-To: <89C9E8C9-E888-4F6F-BD1C-D5A1F1AED526@classdump.org>
References: <20070618003142.321040@gmx.net>
	<89C9E8C9-E888-4F6F-BD1C-D5A1F1AED526@classdump.org>
Message-ID: <20070618184410.40630@gmx.net>

Hi Kay,

Thanks a lot!!! It works. You cannot imagine how many weeks I tried to get this (besides a lot of other stuff of course ;)).

I had to adapt this thus other characters at the beginning of the line are allowed too:

text_lines
 : text  (inline | text)*  NEWLINE  text_lines?
 | (OPEN ~NEWLINE) =>  inline  (inline | text)*  NEWLINE  text_lines?
 ;

Best,
Markus


> Hi Markus!
> 
> On Jun 18, 2007, at 2:31 AM, Markus Kuhla wrote:
> 
> > page		:	paragraph *;
> > paragraph 	:	text_parag  |  block;
> > text_paragr	:	(OPEN ((NEWLINE)=>{false}? )) => text_line+;
> 
> I think the reason why the semantic predicate is not generated into  
> the code is that there isn't any matching done immediately after it,  
> but I'm not totally sure.
> 
> Does this help:
> 
> text_paragr	:	(OPEN ~NEWLINE)=> text_line+;
> 
> I can't test it right now, but I think it should do the trick.  
> Synpred reads as "there must be OPEN followed by not NEWLINE" to  
> match text_line+.
> For the actual predicate evalutation look in the code for rule  
> paragraph, as the predicate is hoisted from text_paragraph.
> This is the code I get for the grammar then:
> 
>     // /tmp/Test.g:5:1: paragraph : ( text_paragr | block );
>      public final void paragraph() throws RecognitionException {
>          try {
>              // /tmp/Test.g:5:14: ( text_paragr | block )
>              int alt2=2;
>              int LA2_0 = input.LA(1);
> 
>              if ( (LA2_0==NEWLINE||LA2_0==ANY) ) {
>                  alt2=1;
>              }
>              else if ( (LA2_0==OPEN) ) {
>                  int LA2_2 = input.LA(2);
> 
>                  if ( (LA2_2==NEWLINE) ) {
>                      alt2=2;
>                  }
>                  else if ( ((LA2_2>=CLOSE && LA2_2<=ANY)) ) {
>                      alt2=1;
>                  }
>                  else {
>                      if (backtracking>0) {failed=true; return ;}
>                      NoViableAltException nvae =
>                          new NoViableAltException("5:1: paragraph :  
> ( text_paragr | block );", 2, 2, input);
> 
>                      throw nvae;
>                  }
>              }
>              else {
>                  if (backtracking>0) {failed=true; return ;}
>                  NoViableAltException nvae =
>                      new NoViableAltException("5:1: paragraph :  
> ( text_paragr | block );", 2, 0, input);
> 
>                  throw nvae;
>              }
>              switch (alt2) {
>                  case 1 :
>                      // /tmp/Test.g:5:14: text_paragr
>                      {
>                      pushFollow(FOLLOW_text_paragr_in_paragraph22);
>                      text_paragr();
>                      _fsp--;
>                      if (failed) return ;
> 
>                      }
>                      break;
>                  case 2 :
>                      // /tmp/Test.g:5:30: block
>                      {
>                      pushFollow(FOLLOW_block_in_paragraph28);
>                      block();
>                      _fsp--;
>                      if (failed) return ;
> 
>                      }
>                      break;
> 
>              }
>          }
>          catch (RecognitionException re) {
>              reportError(re);
>              recover(input,re);
>          }
>          finally {
>          }
>          return ;
>      }
> 
> 
> HTH,
> 
> -k
> 
> -- 
> Kay R?pke
> http://classdump.org/
> 
> 
> 

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From pink at odahoda.de  Mon Jun 18 11:16:29 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 18 Jun 2007 20:16:29 +0200
Subject: [antlr-interest] How to feedback to users the string expected
	on MismatchedTokenException
References: <mailman.1482.1181739582.2496.antlr-interest@antlr.org>
	<5D85F621120B9545BE359DCFA778812585BF0B@SERVER.tt.tracetracker.com>
Message-ID: <f56i5u$r79$1@sea.gmane.org>

Silvester Pozarnik wrote:

>> Jonathan Thomas wrote:
>> 
>> > In previous versions of Antlr you could put in 'paraphrase' option
> to
>> > spit out whatever you liked as the error message for that token. On
>> > this
>> >
>>
> page:http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+
> AN
>> TLR+3
>> > down the bottom it mysteriously says there is something similar, but
>> > you need the book.&nbsp; I'm still waiting for my book to arrive ...
> :-)
>> 
>> The book only describes paraphrasing for rules (up to the page I am at
> now
>> -
>> but I have finished the error recovery chapter just yesterday).
>> 
>> To elaborate my suggestion a bit more:
>> 
>> getErrorMessage() takes the tokenNames array as an argument, so you
> could
>> override it with a method that calls BaseRecognizer.getErrorMessage()
> with
>> a custom array.
>> I'd suggest to fill this custom array from a mapping, because token
> types
>> may jump around in the mapping, when the grammar is modified.
>> A rough example in Python syntax (still too early for me to switch my
>> brain
>> into - a very limited - Java mode ;) )
>> 
>> # this clones the original array
>> myTokenNames = TParser.tokenNames[:]
>> 
>> # a mapping of token types and there new name
>> overrides = {
>>   PLUS: 'plus sign',
>>   DOLLAR: 'much money',
>>   ...
>> }
>> 
>> # changes names of those token type mentioned in overrides
>> for ttype, name in overrides.items():
>>     myTokenNames[ttype] = name
>> 
>> 
>> And you getErrorMessage() looks like (if you'd do it in Python):
>> 
>> def getErrorMessage(self, exc, tokenNames):
>>     return BaseRecognizer.getErrorMessage(self, exc, myTokenNames)
> 
> If I understood you right, you suggest adding implementation which
> resolves the internal token type in to the token string. This implies
> that you have to administrate such a mapping in two places: in the token
> section and in the host language implementation. Let me give some
> example with this simple grammar:
> 
> 
> grammar select;
> options { output = AST;}
> tokens {
> SELECT = 'select';
> }
> statement:
> SELECT SEMI! EOF
> ;
> 
> SEMI: ';' ;
> WS : (' '|'\n') {$channel=HIDDEN;} ;
> 
> 
> If the input to such parser is the "SELECT;" you will get:
> 
> line 1:0 no viable alternative at character 'S'
> line 1:1 no viable alternative at character 'E'
> line 1:2 no viable alternative at character 'L'
> line 1:3 no viable alternative at character 'E'
> line 1:4 no viable alternative at character 'C'
> line 1:5 no viable alternative at character 'T'
> line 1:6 mismatched input ';' expecting SELECT
> 
> The 'expecting SELECT' is confusing in this context and I should like to
> respond with 'expecting "select"'.
> In some cases the language may consist of lots of tokens and it's
> cumbersome to manage a separate mapping in the source code. As I can see
> the original token string 'select' is _not_ available in the generated
> Java code after the grammar is processed. The generated lexer also
> operates with exceptions as:
> 
> NoViableAltException nvae =
> new NoViableAltException("1:1: Tokens : ( SELECT | SEMI | WS);",
> 1, 0, input);
>
> where the 'SELECT' is used. Such an error reporting may mean something
> to the guy that wrote the parser & lexer definition, but is completely
> useless for those who provide the input according to the defined
> vocabulary.

NoViableAltExceptions are especially tricky. In simple cases you could just
report a set of expected tokens or short token sequences for each
alternative. But once fancy stuff like LL(*) or predicates are involved,
things get complicated. I don't think there's a general way for ANTLR to
construct better error messages yet. What would be needed is a 'paraphrase'
option as in V2, preferably for rules and subrules. decisionNumber and
stateNumber from the exception ('1' and '0' above) may than somehow be used
to fetch the appropriate paraphrases.

> The generated "select.tokens" file contains the mappings and can be used
> to resolve tokens in case of errors, but I do not feel that this
> solution is elegant enough.
> 
> Possible solution could be to allow the users to provide their own
> definition to protected "String vocabFilePattern" in
> org.antlr.codegen.CodeGenerator.java which may generate a static java
> class that can resolve all tokens.
> 
> Even better is to do some better job on error reporting so that antlr is
> easier to use when building language formatters, interactive syntax
> checkers and context sensitive help.

There's certainly room for improvements :)


-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From pink at odahoda.de  Mon Jun 18 12:12:35 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 18 Jun 2007 21:12:35 +0200
Subject: [antlr-interest] parameterized maps as arguments to rules??
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
Message-ID: <f56lf3$85a$1@sea.gmane.org>

David A Weiser wrote:

> I have the beginning of a rule:
> formalParameterDecls returns  [HashMap<String,String> params].
> 
> But I get a compilation error because of:
> public static class formalParameters_return extends
> ParserRuleReturnScope {
>         public HashMap<String;
>         public String> params;
>     };
> 
> In the java file for the grammar parser.  Am I to assume that java 1.5
> features aren't supported, or am I just going about this wrong?

The implementation of parameter parsing rather dump: it just splits the list
by commas. It does not treat generics or any other construct in any of the
target languages specially.
You'll have to create a typedef for HashMap<String,String> and use that for
the params type.
Oops, java does not have typedef, right? Mmm... Perhaps use "Object params"
and cast it to HashMap<String,String> later...

HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From scott at javadude.com  Mon Jun 18 12:25:16 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 18 Jun 2007 15:25:16 -0400 (EDT)
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <f56lf3$85a$1@sea.gmane.org>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
	<f56lf3$85a$1@sea.gmane.org>
Message-ID: <12144.12.173.51.158.1182194716.squirrel@www.javadude.com>

[I hate having to hit "reply all" on this list and then adjusting the TO
and CC! Grrrr!!!]

You could create a subclass of HashMap like

  public class MyMap extends HashMap<String, String> {}

That's effectively a typedef for it...
-- Scott




> David A Weiser wrote:
>
>> I have the beginning of a rule:
>> formalParameterDecls returns  [HashMap<String,String> params].
>>
>> But I get a compilation error because of:
>> public static class formalParameters_return extends
>> ParserRuleReturnScope {
>>         public HashMap<String;
>>         public String> params;
>>     };
>>
>> In the java file for the grammar parser.  Am I to assume that java 1.5
>> features aren't supported, or am I just going about this wrong?
>
> The implementation of parameter parsing rather dump: it just splits the
> list
> by commas. It does not treat generics or any other construct in any of the
> target languages specially.
> You'll have to create a typedef for HashMap<String,String> and use that
> for
> the params type.
> Oops, java does not have typedef, right? Mmm... Perhaps use "Object
> params"
> and cast it to HashMap<String,String> later...
>
> HTH
>
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>
>


From rschulz at sonic.net  Mon Jun 18 12:48:15 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 18 Jun 2007 12:48:15 -0700
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <12144.12.173.51.158.1182194716.squirrel@www.javadude.com>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<f56lf3$85a$1@sea.gmane.org>
	<12144.12.173.51.158.1182194716.squirrel@www.javadude.com>
Message-ID: <200706181248.16066.rschulz@sonic.net>

On Monday 18 June 2007 12:25, scott at javadude.com wrote:
> [I hate having to hit "reply all" on this list and then adjusting the
> TO and CC! Grrrr!!!]

You should direct your "Grrrr" to the author of your email client 
(evidently a rodent of some sort).

That, or get a better one. I don't have to perform the machinations you 
describe.


RRS

From scott at javadude.com  Mon Jun 18 13:17:02 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 18 Jun 2007 16:17:02 -0400 (EDT)
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <200706181248.16066.rschulz@sonic.net>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<f56lf3$85a$1@sea.gmane.org>
	<12144.12.173.51.158.1182194716.squirrel@www.javadude.com>
	<200706181248.16066.rschulz@sonic.net>
Message-ID: <15633.12.173.51.158.1182197822.squirrel@www.javadude.com>

On any mail client I've used I don't get "antlr-interest at antlr.org" added
unless I do a reply-all. (And when I do that, people complain that they
get the note twice unless I remove their email from the TO)...

Is the list working differently for others?
-- Scott

> On Monday 18 June 2007 12:25, scott at javadude.com wrote:
>> [I hate having to hit "reply all" on this list and then adjusting the
>> TO and CC! Grrrr!!!]
>
> You should direct your "Grrrr" to the author of your email client
> (evidently a rodent of some sort).
>
> That, or get a better one. I don't have to perform the machinations you
> describe.
>
>
> RRS
>


From jaluber at gmx.de  Mon Jun 18 13:20:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 18 Jun 2007 22:20:29 +0200
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>	<f56lf3$85a$1@sea.gmane.org>	<12144.12.173.51.158.1182194716.squirrel@www.javadude.com>	<200706181248.16066.rschulz@sonic.net>
	<15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
Message-ID: <4676E90D.9090903@gmx.de>

scott at javadude.com wrote:
> On any mail client I've used I don't get "antlr-interest at antlr.org" added
> unless I do a reply-all. (And when I do that, people complain that they
> get the note twice unless I remove their email from the TO)...
> 
> Is the list working differently for others?
> -- Scott

Usually I have to do the same recipient editing as you do with my
Thunderbird. Only sometimes it isn't necessary, though I don't know why
the behaviout is different in those cases.

Best regards,
Johannes Luber

From gluon at earthlink.net  Mon Jun 18 13:24:41 2007
From: gluon at earthlink.net (Eric Taucher)
Date: Mon, 18 Jun 2007 16:24:41 -0400
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org><f56lf3$85a$1@sea.gmane.org><12144.12.173.51.158.1182194716.squirrel@www.javadude.com><200706181248.16066.rschulz@sonic.net>
	<15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
Message-ID: <02c401c7b1e6$b40cca40$6701a8c0@photon>

I also have to add "antlr-interest at antlr.org" in the "To" for a reply when
using Microsoft Outlook. Another news group I use works great.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of scott at javadude.com
> Sent: Monday, June 18, 2007 4:17 PM
> To: Randall R Schulz
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] parameterized maps as arguments to rules??
> 
> On any mail client I've used I don't get "antlr-interest at antlr.org" added
> unless I do a reply-all. (And when I do that, people complain that they
> get the note twice unless I remove their email from the TO)...
> 
> Is the list working differently for others?
> -- Scott
> 
> > On Monday 18 June 2007 12:25, scott at javadude.com wrote:
> >> [I hate having to hit "reply all" on this list and then adjusting the
> >> TO and CC! Grrrr!!!]
> >
> > You should direct your "Grrrr" to the author of your email client
> > (evidently a rodent of some sort).
> >
> > That, or get a better one. I don't have to perform the machinations you
> > describe.
> >
> >
> > RRS
> >


From jimi at temporal-wave.com  Mon Jun 18 13:31:37 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Jun 2007 13:31:37 -0700
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <02c401c7b1e6$b40cca40$6701a8c0@photon>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org><f56lf3$85a$1@sea.gmane.org><12144.12.173.51.158.1182194716.squirrel@www.javadude.com><200706181248.16066.rschulz@sonic.net><15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
	<02c401c7b1e6$b40cca40$6701a8c0@photon>
Message-ID: <051466DAA0D608439E196797955018D76DD2@wavemachine.temporal-wave.com>

Let's please not have this discussion yet again. All possible views and
variants of views have been expressed about this many times and nothing
will change unless Ter wants it to so let's press on with something
useful ;-).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric Taucher
> Sent: Monday, June 18, 2007 1:25 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] parameterized maps as arguments to
> rules??
> 
> I also have to add "antlr-interest at antlr.org" in the "To" for a reply
> when
> using Microsoft Outlook. Another news group I use works great.
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of scott at javadude.com
> > Sent: Monday, June 18, 2007 4:17 PM
> > To: Randall R Schulz
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] parameterized maps as arguments to
> rules??
> >
> > On any mail client I've used I don't get "antlr-interest at antlr.org"
> added
> > unless I do a reply-all. (And when I do that, people complain that
> they
> > get the note twice unless I remove their email from the TO)...
> >
> > Is the list working differently for others?
> > -- Scott
> >
> > > On Monday 18 June 2007 12:25, scott at javadude.com wrote:
> > >> [I hate having to hit "reply all" on this list and then adjusting
> the
> > >> TO and CC! Grrrr!!!]
> > >
> > > You should direct your "Grrrr" to the author of your email client
> > > (evidently a rodent of some sort).
> > >
> > > That, or get a better one. I don't have to perform the
machinations
> you
> > > describe.
> > >
> > >
> > > RRS
> > >


From antlr at mirality.co.nz  Mon Jun 18 14:09:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 19 Jun 2007 09:09:32 +1200
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<f56lf3$85a$1@sea.gmane.org>
	<12144.12.173.51.158.1182194716.squirrel@www.javadude.com>
	<200706181248.16066.rschulz@sonic.net>
	<15633.12.173.51.158.1182197822.squirrel@www.javadude.com>
Message-ID: <20070618210945.E803F11EBC7@www.antlr.org>

At 08:17 19/06/2007, scott at javadude.com wrote:
 >On any mail client I've used I don't get 
"antlr-interest at antlr.org"
 >added unless I do a reply-all. (And when I do that, people 
complain
 >that they get the note twice unless I remove their email from 
the TO)...

The ANTLR list is doing the "right thing" by not changing the 
Reply-To header.  This means that in most email clients hitting 
the Reply button will send a private message to the author, and 
Reply All a public one to the author AND to the list (and possibly 
also to some of the authors of previous messages in the 
thread).  This is a Good Thing, since it allows choice.

All people need to remember is that Reply is private and Reply All 
is public.  Simple.  (As long as the list doesn't evilly 
manipulate the Reply-To header, anyway.)

What'd be nice is if the mailing list software were smart enough 
to recognise private member addresses in the To line and avoid 
sending them an additional copy as part of the list mailout.  But 
I don't think that's currently an option, so you should bug 
Mailman about it, not Ter ;)


From lgcraymer at yahoo.com  Mon Jun 18 14:24:30 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 18 Jun 2007 14:24:30 -0700 (PDT)
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <20070618210945.E803F11EBC7@www.antlr.org>
Message-ID: <248630.33479.qm@web55901.mail.re3.yahoo.com>

As Jim points out, this has been debated before. 
Basically the two sides are those who favor an
ergonomic solution (reply to author and _not_ to the
list is a rare occurrence) and those with the
religious conviction that "because it is written"
reply to's should go directly to the poster.

Error prone solutions are not good design practice.  I
find it difficult to understand the original opinion
statement on reply to munging is taken at all
seriously.  After all, if we apply the same principles
to software development, all programs should be
written in machine code so that minimal munging is
required before the logic is interpreted by the
computer.  Somehow, I find that argument less than
compelling.

--Loring

--- Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 08:17 19/06/2007, scott at javadude.com wrote:
>  >On any mail client I've used I don't get 
> "antlr-interest at antlr.org"
>  >added unless I do a reply-all. (And when I do
> that, people 
> complain
>  >that they get the note twice unless I remove their
> email from 
> the TO)...
> 
> The ANTLR list is doing the "right thing" by not
> changing the 
> Reply-To header.  This means that in most email
> clients hitting 
> the Reply button will send a private message to the
> author, and 
> Reply All a public one to the author AND to the list
> (and possibly 
> also to some of the authors of previous messages in
> the 
> thread).  This is a Good Thing, since it allows
> choice.
> 
> All people need to remember is that Reply is private
> and Reply All 
> is public.  Simple.  (As long as the list doesn't
> evilly 
> manipulate the Reply-To header, anyway.)
> 
> What'd be nice is if the mailing list software were
> smart enough 
> to recognise private member addresses in the To line
> and avoid 
> sending them an additional copy as part of the list
> mailout.  But 
> I don't think that's currently an option, so you
> should bug 
> Mailman about it, not Ter ;)
> 
> 



       
____________________________________________________________________________________
Sick sense of humor? Visit Yahoo! TV's 
Comedy with an Edge to see what's on, when. 
http://tv.yahoo.com/collections/222

From parrt at cs.usfca.edu  Mon Jun 18 17:12:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Jun 2007 10:12:17 +1000
Subject: [antlr-interest] Predicate hoisting/lowering confusion
In-Reply-To: <4B1DD5E0-547F-44AC-91B7-ADCA2CF4787C@wincent.com>
References: <4B1DD5E0-547F-44AC-91B7-ADCA2CF4787C@wincent.com>
Message-ID: <B9D9C813-8CAC-4516-91C2-F9F4B20E3485@cs.usfca.edu>


On Jun 19, 2007, at 1:29 AM, Wincent Colaiuta wrote:
> parser code I can see how it gets "hoisted" up into the DFA of a  
> calling rule. The thing which puzzles me is that it is also being  
> "lowered" down into a rule further down the chain, and most  
> confusingly of all, the sense of the predicate is inverted in the  
> lower rule:

I believe it's because FOO+ requires that it figure out what follows  
it to determine if it should exit.  That means FOLLOW(pre), which is  
FOLLOW(element), which is FIRST(element) which is FIRST(pre).  It  
sucks the pred back in.

Ter


From scott at javadude.com  Mon Jun 18 17:12:40 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Mon, 18 Jun 2007 20:12:40 -0400
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <248630.33479.qm@web55901.mail.re3.yahoo.com>
Message-ID: <20070619001245.2935811EBAC@www.antlr.org>

Sorry to stir the pot again, folks...

I'll just have to bring my cousin Guido with me next time I visit Ter...

[Side note: I'm working to post a very basic antlr3 eclipse plugin right
now...]

Later,
-- Scott



From parrt at cs.usfca.edu  Mon Jun 18 17:18:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Jun 2007 10:18:14 +1000
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
Message-ID: <8387647F-B547-4EC1-B849-D2B190BE84B3@cs.usfca.edu>


On Jun 19, 2007, at 3:28 AM, David A Weiser wrote:

> Hey all,
>
> I have the beginning of a rule:
> formalParameterDecls returns  [HashMap<String,String> params].
>
> But I get a compilation error because of:
> public static class formalParameters_return extends
> ParserRuleReturnScope {
>         public HashMap<String;
>         public String> params;
>     };

Hi. The current parser for the [...] sections is very simple.  only  
allows commas as arg separators.

Ter

From chintanraoh at gmail.com  Mon Jun 18 18:53:10 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Tue, 19 Jun 2007 07:23:10 +0530
Subject: [antlr-interest] Lexer syntactic predicates
Message-ID: <ec8bdb100706181853g4ea5f346o2dffe2a9c0a0a90c@mail.gmail.com>

Hi all,
I had a doubt about syntactic predicates
I am sorry if i am asking a often repeated question .
I searched on the net and it did not help .

suppose i do this antlr2 it works perfectly fine .

<code>

protected NotIdType :~('a'..'z'| 'A'..'Z' | '_' | '0'..'9') ;

HEX_BIN_DEC:
    ( HEX H )  => (HEX H) { $setType(HEX); } //now HEX token will be
assigined to  1234H
   | ( BIN B )  => (BIN B) { $setType(BIN); } //now BIN token will be
assigined to  1010B
   | ( DEC D ) => (DEC D) { $setType(DEC); } //now DEC token will be
assigined to  1234D
   | ( DEC NotIdType )=> DEC { $setType(DEC); } //now DEC token will
be assigined to  //1234

</code>

i change this to antlr 3 grammar

<code>

fragment NotIdType :~('a'..'z'| 'A'..'Z' | '_' | '0'..'9') ;

HEX_BIN_DEC:// to resolve the ambiguity b/w bases
   (HEX H) => (HEX H) { $type=(HEX); }     //now HEX token will be
assigined to  1234H
   | ( BIN B ) => ( BIN B ) { $type=(BIN); }     //now BIN token will
be assigined to  1010B
   | ( DEC D )  => ( DEC D ) { $type=(DEC); }   //now DEC token will
be assigined to  1234D
   | ( DEC NotIdType )=> (DEC) { $type=(DEC); }  //now DEC token will
be assigined to  1234

</code>

this does not work fine as in
1234a will still be assigned DEC token due to the rule
 ( DEC NotIdType )=> (DEC){$type=(DEC);} //now DEC token will be
assigined to  1234
but this should not be so accotding to antlr 2

Please tell me what changes i need to make in the grammar to do the
same in antlr 3

Chintan Rao H

From dirty at apple.com  Mon Jun 18 18:54:46 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 18 Jun 2007 18:54:46 -0700
Subject: [antlr-interest] Implementing "include" functionality with C runtime
Message-ID: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>

When I was prototyping with the Java runtime, I had implemented the  
"include" functionality based on code from the wiki:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

And this worked great.

Now that I've switched over to the C runtime, I'm having some trouble  
porting the above solution over.

I've hooked into the nextToken() vector of the lexer's token source,  
and I set up a simple stack to save and restore the pLexer->input  
ANTLR3_INPUT_STREAM.

I make sure to call mark() on the current ANTLR3_INPUT_STREAM so when  
it gets switched back in by the nextToken() override, I can just call  
rewindLast() on it.

The problem is at the end of the parsing, when I'm dumping out the  
AST.  The text from included file isn't there.  In fact, the original  
"include" string is there.  It seems to me that the C runtime doesn't  
like how I've swapped out one stream for another.

Is there some cached state I need to reset?

There are two files: test.txt and test2.txt

include "test2.txt"

best =	{
			"funky" : [ "list" ]
		}

and here is test2.txt

test-stream = <123ABC>

test-tree3 = "hello"

Here is the output:

(T_ASSIGN include "te (T_HEXSTREAM .txt"

b)) es (T_ASSIGN t =    {
                         " (T_STR ky" : [))  "

(T_ASSIGN best (T_OBJ (T_DEF "funky" (T_ARRAY (T_STR "list")))))

<EOF>


Here is the relevant code from the lexer and nextToken hooks:

	: 'include' WS? f = STRING {
		ANTLR3_INPUT_STREAM*				Input;
		ANTLR3_UINT8*						FileName;
		int									Length;

		// Extract out the file name from within the quotes.
		Length = strlen( f->getText( f )->chars + 1 );
		FileName = malloc( Length );
		strcpy( FileName, f->getText( f )->chars + 1 );
		FileName[ Length - 1 ] = 0;

		Input = antlr3AsciiFileStreamNew( FileName );

		// Remember where we are in this stream, and save it.

		gLexer->pLexer->input->istream->mark( gLexer->pLexer->input- 
 >istream );
		gIncludeStack->push( gIncludeStack, gLexer->pLexer->input, NULL );

		gLexer->pLexer->setCharStream( gLexer->pLexer, Input );

		free( FileName );
		}

ANTLR3_COMMON_TOKEN*
NextToken( ANTLR3_TOKEN_SOURCE* TokenSource )
{
	ANTLR3_COMMON_TOKEN*				Token;
	ANTLR3_INPUT_STREAM*				SavedStream;

	Token = gOriginalNextToken( TokenSource );

	if ( Token == &TokenSource->eofToken )
	{
		// We've reached the end of this file.  Pop anything off the include
		// stack and continue.

		if ( gIncludeStack->size( gIncludeStack ) > 0 )
		{
			SavedStream = gIncludeStack->top;

			gLexer->pLexer->setCharStream( gLexer->pLexer, SavedStream );
			SavedStream->istream->rewindLast( SavedStream->istream );

			Token = gOriginalNextToken( TokenSource );

			gIncludeStack->pop( gIncludeStack );
		}
	}

	if ( ( ( ANTLR3_INT64 ) Token->getStartIndex( Token ) ) < 0 )
	{
		Token = gOriginalNextToken( TokenSource );
	}

	return( Token );
}

Cameron Esfahani
dirty at apple.com

"I cannot for the life of me understand why, while people without  
driver's licenses are not allowed on public roads, in bookstores one  
can find any number of books by persons without decency - let alone  
knowledge."

"His Master's Voice", Stanislaw Lem



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/db4e011d/attachment.html 

From dirty at apple.com  Mon Jun 18 19:38:20 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 18 Jun 2007 19:38:20 -0700
Subject: [antlr-interest] Implementing "include" functionality with C
	runtime
In-Reply-To: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>
References: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>
Message-ID: <2BB1E87C-64C6-4D47-B294-4E4E61B2EC22@apple.com>

It looks like I need to switch the input in the token factory as  
well.  I added the following code to switch the token factory input  
to the new input and things look better:

			gLexer->pLexer->tokFactory->unTruc.input = SavedStream;

Of course, I'd love it if someone with some C runtime background  
could tell me if I'm doing incredibly rude and outrageous things to it.

And all without buying it dinner and drinks.

On Jun 18, 2007, at 6:54 PM, Cameron Esfahani wrote:

> When I was prototyping with the Java runtime, I had implemented the  
> "include" functionality based on code from the wiki:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
>
> And this worked great.
>
> Now that I've switched over to the C runtime, I'm having some  
> trouble porting the above solution over.
>
> I've hooked into the nextToken() vector of the lexer's token  
> source, and I set up a simple stack to save and restore the pLexer- 
> >input ANTLR3_INPUT_STREAM.
>
> I make sure to call mark() on the current ANTLR3_INPUT_STREAM so  
> when it gets switched back in by the nextToken() override, I can  
> just call rewindLast() on it.
>
> The problem is at the end of the parsing, when I'm dumping out the  
> AST.  The text from included file isn't there.  In fact, the  
> original "include" string is there.  It seems to me that the C  
> runtime doesn't like how I've swapped out one stream for another.
>
> Is there some cached state I need to reset?
>

Cameron Esfahani
dirty at apple.com

"There are times in the life of a nation when the only place a decent  
man can find himself is in prison."



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070618/56c619d8/attachment-0001.html 

From scott at javadude.com  Mon Jun 18 19:44:50 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Mon, 18 Jun 2007 22:44:50 -0400
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
Message-ID: <20070619024454.855F511EBD1@www.antlr.org>

Hey all!

I've posted the initial ANTLR 3 Eclipse Plugin at

  http://javadude.com/tools/antlr3-eclipse

This is intended to be a simple ANTLR 3 builder only; I plan to attempt to
port ANTLRWorks to Eclipse, but that may take some time. In the meanwhile,
please enjoy this initial ANTLR 3 Eclipse plugin.

Send any bug reports, questions, comments to me, or feel free to post on
this list (I'm listening again)

Enjoy!
-- Scott

-----------------------------------------------------------
Scott Stanchfield                       http://javadude.com    

That's all just well enough, because in reality, there is
only room enough in this world for one Mojo Jojo. One shall
be the number of Mojo Jojos in the world, and the number of
Mojo Jojos in the world shall be one. Two Mojo Jojos is too
many, and three is right out! So, the only Mojo Jojo there
is room for in the world shall be me! And being the only
Mojo Jojo in the world, I will rule the world, in which
there is only one MOJO JOJO!!
-----------------------------------------------------------



From parrt at cs.usfca.edu  Mon Jun 18 22:00:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Jun 2007 15:00:01 +1000
Subject: [antlr-interest] Fig: a generic config file reader
Message-ID: <0B34285A-EB68-484C-B987-E1C4D857EF7D@cs.usfca.edu>

Hi,

For my talk tomorrow, I built a simple example that I will go over:

http://www.antlr.org/wiki/display/ANTLR3/Fig+-+Generic+configuration 
+language+interpreter

Intro:
Many applications need configuration files. In the old days people  
built their own syntax and parser. Then people tried to use simple  
property files with Java. Now people use XML for everything, but XML  
is a horrible Human interface (see "Humans should not have to grok  
XML"); XML is fine for data if you don't mind the verboseness. This  
article describes Fig, a little config file reader that I made for my  
talk at the Sydney Java users group June 20, 2007. The basic goal is  
to allow an application to include the fig.jar and then use the Fig  
parser to suck in files, the result of which is a list of objects.  
Fig supports strings, ints, lists, and references to other  
configuration objects. Fig uses reflection to create instances and  
call setters or set fields directly (if no setter exists).

Ter

From tzuchien.chiu at gmail.com  Tue Jun 19 02:42:36 2007
From: tzuchien.chiu at gmail.com (Tzu-Chien Chiu)
Date: Tue, 19 Jun 2007 11:42:36 +0200
Subject: [antlr-interest] The Python target is in fact Jython target?
Message-ID: <4d77c5f20706190242l68007752g1e21ebdcaa96c4e2@mail.gmail.com>

Hello, all.

I was looking for a decent Python parser for C source files, and I found ANTLR.

I am not an expert of Python nor Jython, but it seems to me that the
Python runtime package 'antlr3' comes with ANTLR source distribution
is for Jython because it imports java.util.Set and java.utl.HashSet.

However, due to the lack of support of distutils for Jython, I cannot
install runtime package 'antlr3' by Jython.

Traceback (innermost last):
 File "test.py", line 2, in ?
ImportError: no module named antlr3

Any idea?


Some references:

[1] A message in 2003 said the Python code generation target is in
fact for Jython. Is this status up to date?
[antlr-interest] Re: python generator for ANTLR progressing again
http://www.antlr.org/pipermail/antlr-interest/2003-October/005371.html

[2] I managed to install distutils to Jython with this patch
http://mail.python.org/pipermail/distutils-sig/2001-October/002613.html
but I still failed. The error message is:

C:\temp\Distutils-1.0.2>c:\jython2.2b2\jython.bat setup.py install
Traceback (innermost last):
 File "setup.py", line 31, in ?
 File "C:\temp\Distutils-1.0.2\distutils\core.py", line 101, in setup
 File "C:\temp\Distutils-1.0.2\distutils\dist.py", line 130, in __init__
AttributeError: 'instance' object has no attribute 'get___doc__'


[3] The files and error message generated by "Python"

Traceback (most recent call last):
 File "C:\temp\test.py", line 4, in <module>
   from CParserParser import CParserParser
 File "C:\temp\CParserParser.py", line 57
   self.Set types = None
                ^
SyntaxError: invalid syntax

<code file="test.py">
import string
import antlr3
from CParserLexer import CParserLexer
from CParserParser import CParserParser

char_stream = antlr3.ANTLRFileStream("MCLoader.cpp")
lexer = CParserLexer(char_stream)
tokens = antlr3.CommonTokenStream(lexer)
parser = CParserParser(tokens)
parser.entry_rule()
</code>

<code file="CParserParser.py">
# $ANTLR 3.0 CParser.g 2007-06-18 19:07:46

from antlr3 import *
from antlr3.compat import set, frozenset

import java.util.Set;
import java.util.HashSet;
....
class Symbols_scope(object):
   def __init__(self):
       self.Set types = None // Line 57
</code>

From win at wincent.com  Tue Jun 19 02:53:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 19 Jun 2007 11:53:31 +0200
Subject: [antlr-interest] Predicate hoisting/lowering confusion
In-Reply-To: <B9D9C813-8CAC-4516-91C2-F9F4B20E3485@cs.usfca.edu>
References: <4B1DD5E0-547F-44AC-91B7-ADCA2CF4787C@wincent.com>
	<B9D9C813-8CAC-4516-91C2-F9F4B20E3485@cs.usfca.edu>
Message-ID: <B009EC60-605C-45A8-B414-74D17F2261CC@wincent.com>

El 19/6/2007, a las 2:12, Terence Parr escribi?:

> On Jun 19, 2007, at 1:29 AM, Wincent Colaiuta wrote:
>> parser code I can see how it gets "hoisted" up into the DFA of a  
>> calling rule. The thing which puzzles me is that it is also being  
>> "lowered" down into a rule further down the chain, and most  
>> confusingly of all, the sense of the predicate is inverted in the  
>> lower rule:
>
> I believe it's because FOO+ requires that it figure out what  
> follows it to determine if it should exit.  That means FOLLOW(pre),  
> which is FOLLOW(element), which is FIRST(element) which is FIRST 
> (pre).  It sucks the pred back in.

Ok, thanks for the explanation, Ter.

So ANTLR is doing the right thing, but the grammar itself has a  
defect (a rule which can never match for any input). I wonder if it  
would be possible to issue a warning for this case? I suspect not, as  
ANTLR can't know what might be in the predicate and can't know that  
it will never pass... Ah well... Just something to be aware of when  
using predicates!

About the only way I can think of to be aware of this risk is to  
check the grammar without the predicates. That yields the usual  
"Decision can match input such as "FOO" using multiple alternatives:  
1, 2" warning, which although ANTLR resolves it automatically in the  
way that the grammar author probably intended (ie. it does a greedy  
match of FOO+) it should still alert you to the fact that ANTLR is  
trying to "see past" the end of the rule to know when it should exit,  
which in turn means that your predicate could end up sucked back in  
to a place where you didn't expect it...

Cheers,
Wincent


From ssiegel at finjan.com  Tue Jun 19 03:24:57 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 19 Jun 2007 13:24:57 +0300
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <20070619024454.855F511EBD1@www.antlr.org>
References: <20070619024454.855F511EBD1@www.antlr.org>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>

Scott,
	Thanks for the plugin. I have already started to use it. It is
certainly more natural to use than the ant task. Do you want feedback in
this forum or personally to your e-mail?

In the meantime, I have one suggestion that I will take from the antlr3
ant task. I like the idea of having a grammar folder outside of the src
folder. The generated code is then put in the right place. It would be
great if you can detect the package statement and automatically put the
code in the right place.

Shmuel

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scott Stanchfield
Sent: Tuesday, June 19, 2007 5:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin

Hey all!

I've posted the initial ANTLR 3 Eclipse Plugin at

  http://javadude.com/tools/antlr3-eclipse

This is intended to be a simple ANTLR 3 builder only; I plan to attempt
to
port ANTLRWorks to Eclipse, but that may take some time. In the
meanwhile,
please enjoy this initial ANTLR 3 Eclipse plugin.

Send any bug reports, questions, comments to me, or feel free to post on
this list (I'm listening again)

Enjoy!
-- Scott

-----------------------------------------------------------
Scott Stanchfield                       http://javadude.com    

That's all just well enough, because in reality, there is
only room enough in this world for one Mojo Jojo. One shall
be the number of Mojo Jojos in the world, and the number of
Mojo Jojos in the world shall be one. Two Mojo Jojos is too
many, and three is right out! So, the only Mojo Jojo there
is room for in the world shall be me! And being the only
Mojo Jojo in the world, I will rule the world, in which
there is only one MOJO JOJO!!
-----------------------------------------------------------




From silvester.pozarnik at tracetracker.com  Tue Jun 19 03:28:57 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Tue, 19 Jun 2007 12:28:57 +0200
Subject: [antlr-interest] How to feedback to users the string expected
	on MismatchedTokenException
In-Reply-To: <mailman.2062.1182192568.2496.antlr-interest@antlr.org>
Message-ID: <5D85F621120B9545BE359DCFA778812585BF6C@SERVER.tt.tracetracker.com>

...
> >
> > NoViableAltException nvae =
> > new NoViableAltException("1:1: Tokens : ( SELECT | SEMI | WS);",
> > 1, 0, input);
> >
> > where the 'SELECT' is used. Such an error reporting may mean
something
> > to the guy that wrote the parser & lexer definition, but is
completely
> > useless for those who provide the input according to the defined
> > vocabulary.
>
>
> Benjamin Niemann wrote:
> 
> NoViableAltExceptions are especially tricky. In simple cases you could
> just
> report a set of expected tokens or short token sequences for each
> alternative. But once fancy stuff like LL(*) or predicates are
involved,
> things get complicated. I don't think there's a general way for ANTLR
to
> construct better error messages yet. What would be needed is a
> 'paraphrase'
> option as in V2, preferably for rules and subrules. decisionNumber and
> stateNumber from the exception ('1' and '0' above) may than somehow be
> used
> to fetch the appropriate paraphrases.

Fair enough and completely understandable. The problem is still that in
case sensitive grammars you should be able to report the expected token
with a string value where the characters are in the same case as
expected and _not_ in the upper case. In java, which is a case sensitive
language, you should expect the parser to report something as "Expecting
'implements' or 'extends' at 0:28 ..." and not "Expecting IMPLEMENTS or
EXTENDS at 0:28 ..." in case of syntax error as this:

	public class MyTokenStream IMPLEMENTS TokenStream {...

The same goes for NoViableAltException where the tokens are reported in
upper case regardless of the logic of predicting the alternatives.

The problem is that the tokens string value is lost in the grammar
processing.

BR
Silvester Pozarnik



From dave at badgers-in-foil.co.uk  Tue Jun 19 04:25:45 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 19 Jun 2007 11:25:45 +0000
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org>
	<E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>
Message-ID: <20070619112545.GA7967@badgers-in-foil.co.uk>

On Tue, Jun 19, 2007 at 01:24:57PM +0300, Shmuel Siegel wrote:
> In the meantime, I have one suggestion that I will take from the antlr3
> ant task. I like the idea of having a grammar folder outside of the src
> folder. The generated code is then put in the right place. It would be
> great if you can detect the package statement and automatically put the
> code in the right place.

FYI, the approach I've tried to take in the Maven2 plugin is to just
have source and target folder-structures match.  i.e. if you place the
grammar file in $src/com/example, the output files will be generated
within $dest/com/example (well, the actual structure is more complex,
but you get the idea).  This doesn't require any additional inspection
inside the grammar file :)


ta,
dave

-- 
http://david.holroyd.me.uk/

From pink at odahoda.de  Tue Jun 19 04:20:17 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 19 Jun 2007 13:20:17 +0200
Subject: [antlr-interest] The Python target is in fact Jython target?
References: <4d77c5f20706190242l68007752g1e21ebdcaa96c4e2@mail.gmail.com>
Message-ID: <f58e5i$h0s$1@sea.gmane.org>

Hello,

Tzu-Chien Chiu wrote:

> I was looking for a decent Python parser for C source files, and I found
> ANTLR.
> 
> I am not an expert of Python nor Jython, but it seems to me that the
> Python runtime package 'antlr3' comes with ANTLR source distribution
> is for Jython because it imports java.util.Set and java.utl.HashSet.

No, the Python target is for CPython. It may also work with Jython or
IronPython, but I have not tested this.

> Some references:
> 
> [1] A message in 2003 said the Python code generation target is in
> fact for Jython. Is this status up to date?

No. Much has change in the last four years.

> <code file="CParserParser.py">
> # $ANTLR 3.0 CParser.g 2007-06-18 19:07:46
> 
> from antlr3 import *
> from antlr3.compat import set, frozenset
> 
> import java.util.Set;
> import java.util.HashSet;
> ....
> class Symbols_scope(object):
>    def __init__(self):
>        self.Set types = None // Line 57
> </code>

These imports probably come from the grammar file. Which grammar are you
using? It usually needs more work than setting "language=Python" to get a
grammar working with another target than the original one.
There is a C grammar adapted for Python in runtime/Python/examples/C/ of the
source dist.


HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From gevik at xs4all.nl  Tue Jun 19 05:07:18 2007
From: gevik at xs4all.nl (Gevik Babakhani)
Date: Tue, 19 Jun 2007 14:07:18 +0200 (CEST)
Subject: [antlr-interest] To AST or not to AST?
Message-ID: <11578.195.169.118.227.1182254838.squirrel@webmail.xs4all.nl>

Hi,

Regarding interpreting using AST. I was wondering in what situations it is
practical to use AST and when to just interpret using actions in the
parser?

Thank you.



From scott at javadude.com  Tue Jun 19 05:22:32 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 08:22:32 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org>
	<E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>
Message-ID: <50443.141.156.167.188.1182255752.squirrel@javadude.com>

Glad you like!

I can take feedback here or directly. Might be good here so we get more
opinions on things.

The grammar must be in a source folder for the eclipse build system to
work on it. Of course you can have multiple source folders.

The output dir needs to be a pref (just didn't take the time to set up
prefs yet), and I could do a workspace-level option that automatically
gives the options of
* same folder
* grammar/src folders
* some other options

Later,
-- Scott

> Scott,
> 	Thanks for the plugin. I have already started to use it. It is
> certainly more natural to use than the ant task. Do you want feedback in
> this forum or personally to your e-mail?
>
> In the meantime, I have one suggestion that I will take from the antlr3
> ant task. I like the idea of having a grammar folder outside of the src
> folder. The generated code is then put in the right place. It would be
> great if you can detect the package statement and automatically put the
> code in the right place.
>
> Shmuel
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Scott Stanchfield
> Sent: Tuesday, June 19, 2007 5:45 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
>
> Hey all!
>
> I've posted the initial ANTLR 3 Eclipse Plugin at
>
>   http://javadude.com/tools/antlr3-eclipse
>
> This is intended to be a simple ANTLR 3 builder only; I plan to attempt
> to
> port ANTLRWorks to Eclipse, but that may take some time. In the
> meanwhile,
> please enjoy this initial ANTLR 3 Eclipse plugin.
>
> Send any bug reports, questions, comments to me, or feel free to post on
> this list (I'm listening again)
>
> Enjoy!
> -- Scott
>
> -----------------------------------------------------------
> Scott Stanchfield                       http://javadude.com
>
> That's all just well enough, because in reality, there is
> only room enough in this world for one Mojo Jojo. One shall
> be the number of Mojo Jojos in the world, and the number of
> Mojo Jojos in the world shall be one. Two Mojo Jojos is too
> many, and three is right out! So, the only Mojo Jojo there
> is room for in the world shall be me! And being the only
> Mojo Jojo in the world, I will rule the world, in which
> there is only one MOJO JOJO!!
> -----------------------------------------------------------
>
>
>
>


From scott at javadude.com  Tue Jun 19 05:30:23 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 08:30:23 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <20070619112545.GA7967@badgers-in-foil.co.uk>
References: <20070619024454.855F511EBD1@www.antlr.org>
	<E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com>
	<20070619112545.GA7967@badgers-in-foil.co.uk>
Message-ID: <50454.141.156.167.188.1182256223.squirrel@javadude.com>

Source/target will work for maven (or other command-line builders), but to
make things work properly in eclipse, I need to have it generate the java
files into a source dir in eclipse, which will then be compiled by the
java builder.

At work, I've set up a "generated" source folder for some other builders
I've worked on (I think it was for xmlbeans, or it might have been SMC -
oh -- that reminds me... I need to release my SMC builder!) I did the same
dir-mapping you mention here.

I'll have to see if I can set that up. I'd like to keep the dir structure
flexible so it doesn't force/preclude a specific command-line build
approach. (We use ant at my work, though there's been talk about switching
to maven). Maven's strict on dir structure, so I've gotta be sure I'm
friendly with it ;)

Later,
-- Scott



> On Tue, Jun 19, 2007 at 01:24:57PM +0300, Shmuel Siegel wrote:
>> In the meantime, I have one suggestion that I will take from the antlr3
>> ant task. I like the idea of having a grammar folder outside of the src
>> folder. The generated code is then put in the right place. It would be
>> great if you can detect the package statement and automatically put the
>> code in the right place.
>
> FYI, the approach I've tried to take in the Maven2 plugin is to just
> have source and target folder-structures match.  i.e. if you place the
> grammar file in $src/com/example, the output files will be generated
> within $dest/com/example (well, the actual structure is more complex,
> but you get the idea).  This doesn't require any additional inspection
> inside the grammar file :)
>
>
> ta,
> dave
>
> --
> http://david.holroyd.me.uk/
>


From ssiegel at finjan.com  Tue Jun 19 05:50:05 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 19 Jun 2007 15:50:05 +0300
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <50454.141.156.167.188.1182256223.squirrel@javadude.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>

I would be very happy with having a "grammar" folder marked as an
eclipse source folder and having the java files generated in "src" with
the same structure. So, for instance, if my package is "prog.generated"
the grammar will be grammar/prog/generated/prog.g3 and it will generate
the file in src/prog/generated/progParser.java. Is this possible? Maybe
there will need to be a workspace/project/file option that declares the
source folder to use for the generated java file.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
scott at javadude.com
Sent: Tuesday, June 19, 2007 3:30 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 3 Eclipse Plugin

Source/target will work for maven (or other command-line builders), but
to
make things work properly in eclipse, I need to have it generate the
java
files into a source dir in eclipse, which will then be compiled by the
java builder.

At work, I've set up a "generated" source folder for some other builders
I've worked on (I think it was for xmlbeans, or it might have been SMC -
oh -- that reminds me... I need to release my SMC builder!) I did the
same
dir-mapping you mention here.

I'll have to see if I can set that up. I'd like to keep the dir
structure
flexible so it doesn't force/preclude a specific command-line build
approach. (We use ant at my work, though there's been talk about
switching
to maven). Maven's strict on dir structure, so I've gotta be sure I'm
friendly with it ;)

Later,
-- Scott



> On Tue, Jun 19, 2007 at 01:24:57PM +0300, Shmuel Siegel wrote:
>> In the meantime, I have one suggestion that I will take from the
antlr3
>> ant task. I like the idea of having a grammar folder outside of the
src
>> folder. The generated code is then put in the right place. It would
be
>> great if you can detect the package statement and automatically put
the
>> code in the right place.
>
> FYI, the approach I've tried to take in the Maven2 plugin is to just
> have source and target folder-structures match.  i.e. if you place the
> grammar file in $src/com/example, the output files will be generated
> within $dest/com/example (well, the actual structure is more complex,
> but you get the idea).  This doesn't require any additional inspection
> inside the grammar file :)
>
>
> ta,
> dave
>
> --
> http://david.holroyd.me.uk/
>



From scott at javadude.com  Tue Jun 19 06:38:08 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 09:38:08 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
Message-ID: <21859.12.173.51.158.1182260288.squirrel@www.javadude.com>

Definitely possible. I'll see what I can do.

I was thinking more along the lines of:

  src/some/pkg/name/Foo.g3
  generated/some/pkg/name/FooLexer.java et al

What do you think? I could make it

  antlr-generated/some/pkg/name/FooLexer.java et al

Toggling the antlr 3 nature would set up the "generated" dir automatically.

The builder currently marks the generated files as "derived". In Eclipse
3.3 there's an option to warn you if you try to edit a derived file.

As long as the grammar is in some source dir, it will be picked up; you
don't need to specify it. I just need to check the classpath to find what
prefix to chop off from the grammar's path name when setting up the output
dir.

Thoughts?
-- Scott

> I would be very happy with having a "grammar" folder marked as an
> eclipse source folder and having the java files generated in "src" with
> the same structure. So, for instance, if my package is "prog.generated"
> the grammar will be grammar/prog/generated/prog.g3 and it will generate
> the file in src/prog/generated/progParser.java. Is this possible? Maybe
> there will need to be a workspace/project/file option that declares the
> source folder to use for the generated java file.


From wiggjd at lsbu.ac.uk  Tue Jun 19 07:07:06 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Tue, 19 Jun 2007 15:07:06 +0100
Subject: [antlr-interest] ANTLR 2.7 problem with asm statements in C/C++
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C5479@CSD-EXBE-VS2.lsbu.ac.uk>

Thanks Michael J for responding yet again to my problem of processing
asm statements in C/C++.
 
I tried finding the examples you mentioned in CSharpLexer.g but either
I didn't find the correct file or if I did find it I couldn't find
anything similar to my situation of trying to exclude asm statements
(in the lexer as if they were comments) without ending up with a
nondetermism warning (with ID).
 
Although I can get my definitions to work in the lexer (by placing
productions in the right order) it doesn't seem possible to suppress
any unwanted (unnecessary) nondetermism warning in the lexer.
 
I have already tried to deal with asm statements in the parser, but
whatever I do I come against some nondeterminism or other so I have
reluctantly come to the conclusion that it cannot be done cleanly if
at all in ANTLR. 
 
I think the main reason is that as I am not able to parse the asm
statements themselves I have to be able to accept any characters
either to the first RPAREN or to the first RCURLY (allowing Newlines
and hoping that asm statements don't contain parenthese or curly
brackets!).
 
Individual compilers have their own syntax. It seems to me that I
would have to be able to deal with any definition something like
these,
 
asm-definition
     asm ( string-literal ) ;               // C++ standard
     asm { any characters - including newlines }    // MSVC 6.0
     asm ( any characters - including newlines )    // Other compilers
     asm any characters up to newline                 // MSVC 6.0
 
Thanks. Is Version 3 any better in this respect?
 
David Wigg



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/c5f3e22d/attachment.html 

From ssiegel at finjan.com  Tue Jun 19 07:26:05 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 19 Jun 2007 17:26:05 +0300
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>

There are three issues that concern me.
1) Separation of source and generated files, definitely a plus when it
comes to re-distribution.
2) Output file(s) need to be in a folder hierarchy that is compatible
with the package statement.
3) Living in existing project structures.

Your suggestion solves items 1 and 2. Item three can wait.


-----Original Message-----
From: scott at javadude.com [mailto:scott at javadude.com] 
Sent: Tuesday, June 19, 2007 4:38 PM
To: Shmuel Siegel
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 3 Eclipse Plugin

Definitely possible. I'll see what I can do.

I was thinking more along the lines of:

  src/some/pkg/name/Foo.g3
  generated/some/pkg/name/FooLexer.java et al

What do you think? I could make it

  antlr-generated/some/pkg/name/FooLexer.java et al

Toggling the antlr 3 nature would set up the "generated" dir
automatically.

The builder currently marks the generated files as "derived". In Eclipse
3.3 there's an option to warn you if you try to edit a derived file.

As long as the grammar is in some source dir, it will be picked up; you
don't need to specify it. I just need to check the classpath to find
what
prefix to chop off from the grammar's path name when setting up the
output
dir.

Thoughts?
-- Scott

> I would be very happy with having a "grammar" folder marked as an
> eclipse source folder and having the java files generated in "src"
with
> the same structure. So, for instance, if my package is
"prog.generated"
> the grammar will be grammar/prog/generated/prog.g3 and it will
generate
> the file in src/prog/generated/progParser.java. Is this possible?
Maybe
> there will need to be a workspace/project/file option that declares
the
> source folder to use for the generated java file.



From oliver at zeigermann.de  Tue Jun 19 07:36:04 2007
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Tue, 19 Jun 2007 16:36:04 +0200
Subject: [antlr-interest] ANTLR article in German magazine: Javamagazin
Message-ID: <9da4f4520706190736p6d2a55e7m4bf67fcf6f450fa7@mail.gmail.com>

Folks!

In the current issue 7/07 of the German magazine "Javamagazin" you can
find an introductory  article on ANTLR.

Unfortunately, the single quotes in the source listings have been
replaced by double ones that break the examples.

Attached you can find the working version of the final grammar
developed in that article.

Cheers

Oliver

P.S.: I hope it is ok to have such a posting in this list?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Java.g
Type: application/octet-stream
Size: 553 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/0caeffe7/attachment.obj 

From scott at javadude.com  Tue Jun 19 07:50:56 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 10:50:56 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
Message-ID: <14584.12.173.51.158.1182264656.squirrel@www.javadude.com>

I think it takes care of #3 as well -- adding an "antlr3-generated" dir
shouldn't conflict with anything existing, right?

-- Scott

> There are three issues that concern me.
> 1) Separation of source and generated files, definitely a plus when it
> comes to re-distribution.
> 2) Output file(s) need to be in a folder hierarchy that is compatible
> with the package statement.
> 3) Living in existing project structures.
>
> Your suggestion solves items 1 and 2. Item three can wait.


From scott at javadude.com  Tue Jun 19 07:52:16 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 10:52:16 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
Message-ID: <17168.12.173.51.158.1182264736.squirrel@www.javadude.com>

[I don't think my reply went to the list... sorry if this ends up as a dup]

I think it takes care of #3 as well -- adding an "antlr3-generated" dir
shouldn't conflict with anything existing, right?

-- Scott

> There are three issues that concern me.
> 1) Separation of source and generated files, definitely a plus when it
> comes to re-distribution.
> 2) Output file(s) need to be in a folder hierarchy that is compatible
> with the package statement.
> 3) Living in existing project structures.
>
> Your suggestion solves items 1 and 2. Item three can wait.


From ssiegel at finjan.com  Tue Jun 19 08:07:39 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 19 Jun 2007 18:07:39 +0300
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <14584.12.173.51.158.1182264656.squirrel@www.javadude.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
	<14584.12.173.51.158.1182264656.squirrel@www.javadude.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C021079AA@exmail1.finjan.com>

You focused on the output file. This is, as you say, harmless in a pure
eclipse environment. Nobody archives derived files, right?

But, we have created a structure for the input files. This can break
existing "ant task" based project structures.

-----Original Message-----
From: scott at javadude.com [mailto:scott at javadude.com] 
Sent: Tuesday, June 19, 2007 5:51 PM
To: Shmuel Siegel
Cc: scott at javadude.com; antlr-interest at antlr.org
Subject: RE: [antlr-interest] ANTLR 3 Eclipse Plugin

I think it takes care of #3 as well -- adding an "antlr3-generated" dir
shouldn't conflict with anything existing, right?

-- Scott

> There are three issues that concern me.
> 1) Separation of source and generated files, definitely a plus when it
> comes to re-distribution.
> 2) Output file(s) need to be in a folder hierarchy that is compatible
> with the package statement.
> 3) Living in existing project structures.
>
> Your suggestion solves items 1 and 2. Item three can wait.



From jimi at temporal-wave.com  Tue Jun 19 08:41:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jun 2007 08:41:20 -0700
Subject: [antlr-interest] Implementing "include" functionality with C
	runtime
In-Reply-To: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>
References: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>
Message-ID: <051466DAA0D608439E196797955018D76DDC@wavemachine.temporal-wave.com>

If you have not sent all the code here then please send it to me off
line and I will take a look, but at best guess, it is because when you
finally try to turn the tokens into strings it only has the original
input stream and to turn it into the text for the tokens that you
generated from the include file, you would need that too. 

 

So, for this to work, when you create the tokens, you would have to
create the token text at the same time. However, it may be that some
difference has crept in to setCharStream since I wrote the C version - I
have a note to look at this in fact. I suspect that that runtime is not
setting the token's input charstream and hence it is stringifying from
the original stream only.

 

By a strange co-incidence I have a need to do the same thing this week,
so I bet it will be fixed this week J

 

Added:

 

http://www.antlr.org:8888/browse/ANTLR-144

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Monday, June 18, 2007 6:55 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Implementing "include" functionality with C
runtime

 

When I was prototyping with the Java runtime, I had implemented the
"include" functionality based on code from the wiki:

 

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

 

And this worked great.

 

Now that I've switched over to the C runtime, I'm having some trouble
porting the above solution over.

 

I've hooked into the nextToken() vector of the lexer's token source, and
I set up a simple stack to save and restore the pLexer->input
ANTLR3_INPUT_STREAM.

 

I make sure to call mark() on the current ANTLR3_INPUT_STREAM so when it
gets switched back in by the nextToken() override, I can just call
rewindLast() on it.

 

The problem is at the end of the parsing, when I'm dumping out the AST.
The text from included file isn't there.  In fact, the original
"include" string is there.  It seems to me that the C runtime doesn't
like how I've swapped out one stream for another.

 

Is there some cached state I need to reset?

 

There are two files: test.txt and test2.txt

 

include "test2.txt"

 

best = {

                                  "funky" : [ "list" ]

                      }

 

and here is test2.txt

 

test-stream = <123ABC>

 

test-tree3 = "hello"

 

Here is the output:

 

(T_ASSIGN include "te (T_HEXSTREAM .txt"

 

b)) es (T_ASSIGN t =    {

                        " (T_STR ky" : [))  " 

 

(T_ASSIGN best (T_OBJ (T_DEF "funky" (T_ARRAY (T_STR "list"))))) 

 

<EOF>

 

 

Here is the relevant code from the lexer and nextToken hooks:

 

          : 'include' WS? f = STRING {

                      ANTLR3_INPUT_STREAM*
Input;

                      ANTLR3_UINT8*
FileName;

                      int
Length;

 

                      // Extract out the file name from within the
quotes.

                      Length = strlen( f->getText( f )->chars + 1 );

                      FileName = malloc( Length );

                      strcpy( FileName, f->getText( f )->chars + 1 );

                      FileName[ Length - 1 ] = 0;

 

                      Input = antlr3AsciiFileStreamNew( FileName );

 

                      // Remember where we are in this stream, and save
it.

 

                      gLexer->pLexer->input->istream->mark(
gLexer->pLexer->input->istream );

                      gIncludeStack->push( gIncludeStack,
gLexer->pLexer->input, NULL );

 

                      gLexer->pLexer->setCharStream( gLexer->pLexer,
Input );

 

                      free( FileName );

                      }

 

ANTLR3_COMMON_TOKEN*

NextToken( ANTLR3_TOKEN_SOURCE* TokenSource )

{

          ANTLR3_COMMON_TOKEN*
Token;

          ANTLR3_INPUT_STREAM*
SavedStream;

 

          Token = gOriginalNextToken( TokenSource );

 

          if ( Token == &TokenSource->eofToken )

          {

                      // We've reached the end of this file.  Pop
anything off the include

                      // stack and continue.

 

                      if ( gIncludeStack->size( gIncludeStack ) > 0 )

                      {

                                  SavedStream = gIncludeStack->top;

 

                                  gLexer->pLexer->setCharStream(
gLexer->pLexer, SavedStream );

                                  SavedStream->istream->rewindLast(
SavedStream->istream );

 

                                  Token = gOriginalNextToken(
TokenSource );

 

                                  gIncludeStack->pop( gIncludeStack );

                      }

          }

 

          if ( ( ( ANTLR3_INT64 ) Token->getStartIndex( Token ) ) < 0 )

          {

                      Token = gOriginalNextToken( TokenSource );

          }

 

          return( Token );

}

 

Cameron Esfahani

dirty at apple.com

 

"I cannot for the life of me understand why, while people without
driver's licenses are not allowed on public roads, in bookstores one can
find any number of books by persons without decency - let alone
knowledge."

 

"His Master's Voice", Stanislaw Lem

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/643dae42/attachment-0001.html 

From jimi at temporal-wave.com  Tue Jun 19 08:44:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jun 2007 08:44:35 -0700
Subject: [antlr-interest] Implementing "include" functionality with
	Cruntime
In-Reply-To: <2BB1E87C-64C6-4D47-B294-4E4E61B2EC22@apple.com>
References: <0C3F32D9-FC7E-425F-B1FF-F648D3013DC5@apple.com>
	<2BB1E87C-64C6-4D47-B294-4E4E61B2EC22@apple.com>
Message-ID: <051466DAA0D608439E196797955018D76DDD@wavemachine.temporal-wave.com>

That is about correct, but I need to look at the implications of it.
Trakc:

 

http://www.antlr.org:8888/browse/ANTLR-144

 

And then I will let you know in the resolution of the bug just what to
do correctly. What you have here though is not terrible and I may just
have a setCharStream 'method' for the token factory. There is not a
token factory in the Java version of course, so it does not come up.
There may be other quirks I have to cater for, but if that works for you
know, just use it as a hack J

 

Please send the money for dinner and drinks, which I will gladly accept
- but I am not that kind of guy.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Monday, June 18, 2007 7:38 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Implementing "include" functionality with
Cruntime

 

It looks like I need to switch the input in the token factory as well.
I added the following code to switch the token factory input to the new
input and things look better:

 

 
gLexer->pLexer->tokFactory->unTruc.input = SavedStream;

 

Of course, I'd love it if someone with some C runtime background could
tell me if I'm doing incredibly rude and outrageous things to it.

 

And all without buying it dinner and drinks.

 

On Jun 18, 2007, at 6:54 PM, Cameron Esfahani wrote:





When I was prototyping with the Java runtime, I had implemented the
"include" functionality based on code from the wiki:

 

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
<http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057> 

 

And this worked great.

 

Now that I've switched over to the C runtime, I'm having some trouble
porting the above solution over.

 

I've hooked into the nextToken() vector of the lexer's token source, and
I set up a simple stack to save and restore the pLexer->input
ANTLR3_INPUT_STREAM.

 

I make sure to call mark() on the current ANTLR3_INPUT_STREAM so when it
gets switched back in by the nextToken() override, I can just call
rewindLast() on it.

 

The problem is at the end of the parsing, when I'm dumping out the AST.
The text from included file isn't there.  In fact, the original
"include" string is there.  It seems to me that the C runtime doesn't
like how I've swapped out one stream for another.

 

Is there some cached state I need to reset?





 

Cameron Esfahani

dirty at apple.com

 

"There are times in the life of a nation when the only place a decent
man can find himself is in prison."

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/d1b06f77/attachment.html 

From dave at badgers-in-foil.co.uk  Tue Jun 19 09:09:44 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 19 Jun 2007 16:09:44 +0000
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <14584.12.173.51.158.1182264656.squirrel@www.javadude.com>
References: <50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
	<14584.12.173.51.158.1182264656.squirrel@www.javadude.com>
Message-ID: <20070619160944.GA10501@badgers-in-foil.co.uk>

On Tue, Jun 19, 2007 at 10:50:56AM -0400, scott at javadude.com wrote:
> I think it takes care of #3 as well -- adding an "antlr3-generated" dir
> shouldn't conflict with anything existing, right?

Well, the maven-antlr3-plugin adds a source folder too (when used with
the maven-eclipse-plugin).  I guess it would be nice if all these
plugins at least don't fight with each other :)

Probably just a matter of having the user make the folder names match.


ta,
dave

-- 
http://david.holroyd.me.uk/

From scott at javadude.com  Tue Jun 19 09:41:46 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 12:41:46 -0400 (EDT)
Subject: [antlr-interest] ANTLR 3 Eclipse Plugin
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C021079AA@exmail1.finjan.com>
References: <20070619024454.855F511EBD1@www.antlr.org><E344C433F006AB45A306D422F9C3EB4C020CA678@exmail1.finjan.com><20070619112545.GA7967@badgers-in-foil.co.uk>
	<50454.141.156.167.188.1182256223.squirrel@javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C020CA7D8@exmail1.finjan.com>
	<21859.12.173.51.158.1182260288.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C02107934@exmail1.finjan.com>
	<14584.12.173.51.158.1182264656.squirrel@www.javadude.com>
	<E344C433F006AB45A306D422F9C3EB4C021079AA@exmail1.finjan.com>
Message-ID: <22998.12.173.51.158.1182271306.squirrel@www.javadude.com>

The source structure doesn't matter -- as long as the grammar is in any
source dir, with whatever package dir structure, it'll be ok.

Of course, we're requiring that the grammar be in a proper package-dir
structure, though. No different than the last plugin ;)

Once I have a "output dir" property settable for the grammar, non-standard
layouts can be used. Until then, they're stuck with my evil layouts.
Muihahahahah!

I just did the conversion to create/use antr3-generated source dir and it
works well. I'll see if I can post it tonight.

Later,
-- Scott

> You focused on the output file. This is, as you say, harmless in a pure
> eclipse environment. Nobody archives derived files, right?
>
> But, we have created a structure for the input files. This can break
> existing "ant task" based project structures.


From salehiam at gmail.com  Tue Jun 19 14:07:04 2007
From: salehiam at gmail.com (Ali Salehi)
Date: Tue, 19 Jun 2007 23:07:04 +0200
Subject: [antlr-interest] Problem with " => " operator
Message-ID: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>

Hi all,

 I'm a beginner Antlr user, I bought the antlr v3 reference book and I'm
trying to get SQL-92 simplified select statement parser working.

 I have some strange issues with the antlr, for
instance, when I want to test the following grammar inside AntlrWorks GUI:

grammar t;
k : (A)=>A |A;
A : 'a';

I see that antlr fails to parse my sample input which is simply  the
character of "a"  [without qutations ;) ].

It says: NoViableException

The grammar is so simple that I barely can see any error there, I appreciate
some comments
from more advanced users :-) .


Best regards,
AliS
**************************************************************
Ali Salehi, LSIR - Distributed Information Systems Laboratory
EPFL-IC-IIF-LSIR, B?timent BC, Station 14, CH-1015 Lausanne, Switzerland.
http://lsirwww.epfl.ch/
email: ali.salehi at epfl.ch
Tel: +41-21-6936656 Fax: +41-21-6938115
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/ba9e9a7a/attachment.html 

From win at wincent.com  Tue Jun 19 14:38:34 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 19 Jun 2007 23:38:34 +0200
Subject: [antlr-interest] Problem with " => " operator
In-Reply-To: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>
References: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>
Message-ID: <17E48DFA-28C1-4EAE-BC65-D4693BAB4B7F@wincent.com>

El 19/6/2007, a las 23:07, Ali Salehi escribi?:

> Hi all,
>
>  I'm a beginner Antlr user, I bought the antlr v3 reference book  
> and I'm trying to get SQL-92 simplified select statement parser  
> working.
>
>  I have some strange issues with the antlr, for instance, when I  
> want to test the following grammar inside AntlrWorks GUI:
>
> grammar t;
> k :	(A)=>A |A;
> A	:	'a';
>
> I see that antlr fails to parse my sample input which is simply   
> the character of "a"  [without qutations ;) ].
>
> It says: NoViableException
>
> The grammar is so simple that I barely can see any error there, I  
> appreciate some comments
> from more advanced users :-) .

I'm definitely not an advanced user, but I pasted your grammar  
straight into ANTLRWorks with input "a" and the parse tree returned  
by the debugger was:

   root
    |
    k
    |
  /   \
(a)   a

Where the left "a" is the syntactic predicate, which succeeds, so the  
parser then backtracks and matches "a".

Wincent



From gevik at xs4all.nl  Tue Jun 19 14:43:18 2007
From: gevik at xs4all.nl (Gevik Babakhani)
Date: Tue, 19 Jun 2007 23:43:18 +0200
Subject: [antlr-interest] Problem with " => " operator
In-Reply-To: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>
References: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>
Message-ID: <001401c7b2ba$d98f8030$0a01a8c0@gevbook>

Hi,

 

the problem is solved by putting a ^ before (A) or just by removing () from
(A)

 

grammar t;

k : ^(A)=>A |A;

A : 'a';

 

Or

 

grammar t;

k : A=>A |A;

A : 'a';

 

Hope it helps.

 

 

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ali Salehi
Sent: Tuesday, June 19, 2007 11:07 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problem with " => " operator

 

Hi all,

 I'm a beginner Antlr user, I bought the antlr v3 reference book and I'm
trying to get SQL-92 simplified select statement parser working.

 I have some strange issues with the antlr, for instance, when I want to
test the following grammar inside AntlrWorks GUI: 

grammar t;
k : (A)=>A |A;
A : 'a';

I see that antlr fails to parse my sample input which is simply  the
character of "a"  [without qutations ;) ].

It says: NoViableException 

The grammar is so simple that I barely can see any error there, I appreciate
some comments
from more advanced users :-) .


Best regards,
AliS
************************************************************** 
Ali Salehi, LSIR - Distributed Information Systems Laboratory
EPFL-IC-IIF-LSIR, B?timent BC, Station 14, CH-1015 Lausanne, Switzerland.
http://lsirwww.epfl.ch/
email: ali.salehi at epfl.ch
Tel: +41-21-6936656 Fax: +41-21-6938115 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/e099f127/attachment.html 

From antlr at jazillian.com  Tue Jun 19 15:02:41 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 19 Jun 2007 18:02:41 -0400
Subject: [antlr-interest] To AST or not to AST?
In-Reply-To: <11578.195.169.118.227.1182254838.squirrel@webmail.xs4all.nl>
References: <11578.195.169.118.227.1182254838.squirrel@webmail.xs4all.nl>
Message-ID: <46785281.7060409@jazillian.com>

I'd say the general rule is to use actions in the parser for simple stuff.
If things start to get non-trivial where you're starting to do serious 
manipluation
of the AST, then have the parser produce the AST, and then transform the
AST in a separate step (with a treewalker).

Gevik Babakhani wrote:
> Hi,
>
> Regarding interpreting using AST. I was wondering in what situations it is
> practical to use AST and when to just interpret using actions in the
> parser?
>
> Thank you.
>
>
>   


From scott at javadude.com  Tue Jun 19 15:58:59 2007
From: scott at javadude.com (scott at javadude.com)
Date: Tue, 19 Jun 2007 18:58:59 -0400 (EDT)
Subject: [antlr-interest] New ANTLR 3 Eclipse Plugin (3.0.1)
Message-ID: <20670.12.173.51.158.1182293939.squirrel@www.javadude.com>

Hey all!

I just uploaded a new version (3.0.1) of the plugin. This one will create an

  antlr3-generated

source directory.

Update your plugin and have fun! http://javadude.com/eclipse/update

NOTE: IF YOU USED 3.0.0 (from last night), please use Add/Remove ANTLR 3
Nature to remove and re-add the nature and all should be updated.

Enjoy!
-- Scott

From parrt at cs.usfca.edu  Tue Jun 19 17:49:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jun 2007 10:49:17 +1000
Subject: [antlr-interest] Problem with " => " operator
In-Reply-To: <001401c7b2ba$d98f8030$0a01a8c0@gevbook>
References: <19be3ea50706191407h3fd2363dvb7d6447bc33436bb@mail.gmail.com>
	<001401c7b2ba$d98f8030$0a01a8c0@gevbook>
Message-ID: <E293F846-E72C-4F55-AA32-0E2A6F37C82F@cs.usfca.edu>


On Jun 20, 2007, at 7:43 AM, Gevik Babakhani wrote:

> Hi,
>
>
>
> the problem is solved by putting a ^ before (A) or just by removing  
> () from (A)

Really? I had no idea that was valid syntax.  Certainly I hadn't the  
intention to allow that and so I'm not sure what the syntax is making  
ANTLR do.

a : (A)=> | A ;

should work just fine.

Ter

From chintanraoh at gmail.com  Tue Jun 19 19:02:57 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Wed, 20 Jun 2007 07:32:57 +0530
Subject: [antlr-interest] assigning token LABEL
Message-ID: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>

Hi,
I am new to antlr3 / compilers / parsers .
I have problem assigning token LABEL .
if there is ':' after ID it must be labeled as LABEL .
if there is no colon then it must be named as ID that is  IDENTIFIER .

This may be a simple problem but i am stuck with this .
please help me out.

Thanking in Advance
Chintan Rao H

From jimi at temporal-wave.com  Tue Jun 19 19:38:16 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jun 2007 19:38:16 -0700
Subject: [antlr-interest] New C runtime dist
Message-ID: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>

There is a new distribution snapshot checked in which is labeled 3.0.1.
This may change if Ter decides that the first bug fix release will be
called something completely different.

 

To use this, you also need to rebuild ANTLR or at least make it pick up
the latest C.stg.

 

This fixes:

 

-          All bugs that you lot know about ;-) - Mistyped MACRO names,
followSet problem, and all those problems that people moaned at me for
making them waste two hours on there are actually quite a number of
trivial little fixes in there too;

-          Provides stacked streams so that they may be handled
trivially in lexers etc (see example of the C parser in the C examples,
which now caters for #include.)

-          Corrects a couple of tree stream rewrite issues (one is code
gen, one was in the runtime);

 

I have not been able to extensively test this and remember this is
snapshot to see if bugs are fixed properly. If you had a bug and know
how to rebuild things then please try this out and let me know if you
still have issues. Please try to be polite - most people are J. I am
well aware of all the typos in my comments - I type at 2342342
characters a second and 98% are BS J and I will fix all those up at some
point so no need to send me things like that.

 

Share and Enjoy,

 

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070619/fdb22c2e/attachment-0001.html 

From mark.mandel at gmail.com  Tue Jun 19 21:37:38 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Wed, 20 Jun 2007 14:37:38 +1000
Subject: [antlr-interest] Possible to conditionally skip token in rule?
Message-ID: <4153ee230706192137o3f11324h2e42213c99169b2c@mail.gmail.com>

I may have a bad title on this post, but this is the situation I'm working with.

I'm writing a ColdFusion parser (still), and dealing with an xml like
sytax, where a closing tag is not required.

so that a statement like:

<a> <b> </a>

Is completely valid.

Now, what I want to do in my grammar, is say 'if the name of the next
closing tag doesn't match the name of the current open tag, ignore it,
as it probably belongs to another tag'

So that I have a tree that looks like

- <a>
- - <b>
- </a>

Is this even possible?

My grammar looks like (stripped out all the rewrite rules and other
parts for simplicity):

cfml
	:
	tag*
	;

tag
	:
		startTag
	;

startTag
scope tagScope;
	:
	(
	sto=START_TAG_OPEN
	{
		{$tagScope::currentName = $sto.text.toLowerCase().substring(1); }
	}
	stc=START_TAG_CLOSE
	tc=tagContent
	)
	;
	
tagContent
	:
	tag* (
		{ $tagScope::currentName.equals(input.LT(1).getText().toLowerCase().substring(2))
}?
		(
			endTag
		)
		)
	;
endTag
	:
	END_TAG_OPEN^ END_TAG_CLOSE
	;

But this fails, on the <a><c></a> example, as the predicate throws an
error as </a> doesn't match <c>.

What I want to happen is to have the end tag ignore </a> as the name
of the tag is not the same.

I hope I've made sense...

Thanks,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From parrt at cs.usfca.edu  Tue Jun 19 21:58:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jun 2007 14:58:54 +1000
Subject: [antlr-interest] Possible to conditionally skip token in rule?
In-Reply-To: <4153ee230706192137o3f11324h2e42213c99169b2c@mail.gmail.com>
References: <4153ee230706192137o3f11324h2e42213c99169b2c@mail.gmail.com>
Message-ID: <4E1A2E9A-ED86-44A9-BD40-BA248680D6C2@cs.usfca.edu>


On Jun 20, 2007, at 2:37 PM, Mark Mandel wrote:

> I may have a bad title on this post, but this is the situation I'm  
> working with.
>
> I'm writing a ColdFusion parser (still), and dealing with an xml like
> sytax, where a closing tag is not required.
>
> so that a statement like:
>
> <a> <b> </a>
>
> Is completely valid.
>
> Now, what I want to do in my grammar, is say 'if the name of the next
> closing tag doesn't match the name of the current open tag, ignore it,
> as it probably belongs to another tag'

Seems to me that this is what ANTLR does for single token insertion  
during automatic error recovery.  Interesting...is this unusual or  
normal?  If unusual, an error recovery approach can work.  If normal,  
a predicate route is probably good.

cfml : tag* ;

tag : START_TAG_OPEN {push($START_TAG_OPEN.text);}
	| START_TAG_CLOSE
	  {
		if ( $START_TAG_CLOSE.text same as stack top ) {
			t = pop();
			add t to tree
		}
		else { // mismatch (isolated <b> from above)
			add stack top to tree
			t = pop();
			add t to tree
		}
	  }
	;

something like that.

Just do your own tree building; don't use the recursive grammatical  
structure.  Well, this should work; not sure it's optimal.

Ter


From win at wincent.com  Tue Jun 19 23:18:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 20 Jun 2007 08:18:31 +0200
Subject: [antlr-interest] New C runtime dist
In-Reply-To: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
Message-ID: <0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>

El 20/6/2007, a las 4:38, Jim Idle escribi?:

> There is a new distribution snapshot checked in which is labeled  
> 3.0.1.
> This may change if Ter decides that the first bug fix release will be
> called something completely different.

Thanks a lot for all the fixes, Jim. Will definitely try this out.  
Especially thanks for fixing <http://www.antlr.org:8888/browse/ 
ANTLR-138> ("C target codegen did not lose \ characters in match  
strings").

In your comments on bug 144 (<http://www.antlr.org:8888/browse/ 
ANTLR-144>) you write:

> Note that the built in stream ahndling is not handled in filtering  
> lexers (but perhps I ought to build it in there too).

Just wanted to add my vote: yes, I definitely think you should handle  
this in filtering lexers as it is likely to surprise people that  
expect it to work...

Did you get a chance to look at my patch in the posted to the mailing  
list in the thread, "GCC lexer warnings C target" (<http:// 
www.antlr.org/pipermail/antlr-interest/2007-June/021330.html>)?

 From your comments I also understand that you've updated the  
examples, but it's not possible for anyone to grab them because it  
appears that Fisheye still isn't set-up... If you look at the  
repository browser it's completely empty:

<http://fisheye2.cenqua.com/browse/antlr-examples/>

Hopefully the Cenqua folks can fix that soon!

Cheers,
Wincent


From parrt at cs.usfca.edu  Tue Jun 19 23:29:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jun 2007 16:29:03 +1000
Subject: [antlr-interest] New C runtime dist
In-Reply-To: <0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
	<0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>
Message-ID: <926C937F-B61C-40EC-8358-759712034C71@cs.usfca.edu>


On Jun 20, 2007, at 4:18 PM, Wincent Colaiuta wrote:
> From your comments I also understand that you've updated the  
> examples, but it's not possible for anyone to grab them because it  
> appears that Fisheye still isn't set-up... If you look at the  
> repository browser it's completely empty:
>
> <http://fisheye2.cenqua.com/browse/antlr-examples/>
>
> Hopefully the Cenqua folks can fix that soon!

my fault...protection issue on my server.  They are kicking the  
server again to snag examples.

Ter

From win at wincent.com  Tue Jun 19 23:57:15 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 20 Jun 2007 08:57:15 +0200
Subject: [antlr-interest] Doing translation in the lexer (the right tool for
	the job?)
Message-ID: <7479ECCD-F424-4A72-968A-6402426A5E0C@wincent.com>

One of the many translation tasks I'd like to use ANTLR for is  
translating wikitext to HTML. Two things make this quite difficult:

1. The translator has to be extremely tolerant of malformed input  
(users may not understand the wikitext syntax or may deliberately  
subvert it) and make reasonable "cleanup" attempts for bad input  
(such as closing tags that were left open by the user).

2. Wikitext structure is not unlike HTML structure, which means it is  
highly recursive and is very sensitive to nesting and ordering issues.

This means that the translator must be able to handle things like:

- improperly interleaved tags: <em><strong></em></strong>

- missing closing tags: <em>foo

- missing opening tags: foo</em>

- mismatched tags (really just a combination of the above): <em>foo</ 
strong>

And it must enforce scoping rules that can be quite complicated at  
times; for example:

- an <em> span may appear inside a <strong> span;

- and a <strong> span may appear inside an <em> span;

- but an <em> span may not appear inside an <em> span, so both  
<em><em>foo</em></em> and <em><strong><em>foo</em></strong></em> are  
invalid

- a <blockquote> may contain other block level elements such as <p>  
and even another <blockquote>;

- but <p> may not contain <blockquote>

- etc, etc, etc...

So if it weren't for the fact that the translator has to gracefully  
handle bad input the task would be significantly easier. In other  
words, if ANTLR could assume that all input were perfectly formed and  
just throw errors on encountering bad input then it wouldn't be too  
hard. But even assuming syntactically perfect input there is still  
the issue of the complicated scoping rules.

My first na?ve attempt at doing this had me trying to express scope  
restrictions using only standard parser rules, but I very quickly got  
into trouble with recursion due to non-LL(*) decisions and non- 
determinisms.

So I then tried using predicates combined with a stack stored in a  
global scope. Basically, on entering a new rule, information would be  
pushed onto the stack describing what tags were explicitly allowed  
and what tags explicitly disallowed. Semantic predicates could then  
be used in subsequent rules to check the stack to see if a particular  
alternative to match.

For example, on entering a <blockquote>, the list of allowed tags is  
basically any block-level tag (<p>, <blockquote> etc) so those are  
pushed as a list onto the stack. On entering a <p>, the list of  
allowed tags is basically any inline element (<em>, <strong> etc).  
The predicate's job is then basically to walk the stack and confirm  
that (a) a given tag is explicitly allowed, and (b) it is not  
explicitly disallowed in any previous level of the stack.

I soon found that the predicates were being hoisted/lowered into  
unexpected places which prevented that idea from working. Perhaps  
someone with more intimate knowledge of how ANTLR does this would be  
able to make the solution work, but I didn't see much hope of getting  
it to work so I abandoned it. I also wasn't even sure that my stack  
of allowed/disallowed tags was a good design, even in the abstract  
sense.

So finally, the thing I'm doing is jettisoning the parser entirely  
and doing absolutely everything in the lexer. Ok, not exactly: I've  
made an extremely simple filtering lexer which has no predicates, no  
actions, just spits out tokens and has a catch-all rule at the bottom  
so that all input characters are guaranteed to come out as tokens on  
the other end.

Then in my support code I ask the lexer for tokens one at a time and  
perform translation "by hand". Once again I maintain a stack, but  
this time a slightly simpler one. Instead of maintaining a list of  
allowed and disallowed tags at each level I instead maintain a stack  
which indicates my current scope, kind of like a CSS selector: ie. if  
I've previously seen <blockquote>, <p> and <em> then my stack  
contains "blockquote", "p" and "em"; if I see another "<em>" I know I  
can't match it because that's already on the stack, and on seeing "</ 
em>" I pop it off the stack. In this way I can basically ignore  
unexpected tags (well, actually I output them literally as  
"&lt;em&gt;" etc) and insert missing tags when I think I should have  
seen them.

All of this manually management is a bit of effort, but it does work  
and that's very important: the code is simple enough to look at and  
see that it will work. If I tried to do all of this in ANTLR then  
there would be an element of black magic; I'd never feel sure that I  
knew what ANTLR was really doing behind the scenes. But I am left  
with the lingering doubt that I might not be doing things the best  
way. Do you think that this lexer-only-plus-supporting-code approach  
is the using the right tool for the job? Or am I missing something  
obvious?

Cheers,
Wincent


From jaluber at gmx.de  Wed Jun 20 02:20:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 20 Jun 2007 11:20:37 +0200
Subject: [antlr-interest] assigning token LABEL
In-Reply-To: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>
References: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>
Message-ID: <4678F165.4090204@gmx.de>

chintan rao wrote:
> Hi,
> I am new to antlr3 / compilers / parsers .
> I have problem assigning token LABEL .
> if there is ':' after ID it must be labeled as LABEL .
> if there is no colon then it must be named as ID that is  IDENTIFIER .
> 
> This may be a simple problem but i am stuck with this .
> please help me out.

As you haven't sent your grammar with your question I have to improvise
the snippets. Create first an imaginary LABEL token and have rules like
this:

label
   :   ID[false] ':' ID[true]
   ;

ID[boolean isID]
   :   ('a'..'z'|'A'..'Z')+ { if (!isID) $type = LABEL ; }
   ;

Hope this helps!
Johannes Luber


From amartinez at atc.ugr.es  Wed Jun 20 03:59:49 2007
From: amartinez at atc.ugr.es (amartinez at atc.ugr.es)
Date: Wed, 20 Jun 2007 12:59:49 +0200 (CEST)
Subject: [antlr-interest] Problems with implementing 'include' directive
	using C#
Message-ID: <48386.193.145.230.7.1182337189.squirrel@atc.ugr.es>

Hello,

I'm working on a little ANTLR v3 project and need to implement the
'include' directive (it's a simple assembler). I'm using ANTLR's C# output
(using Mono and Linux).
I have tried to addapt (to C#) Terence's java sample for implementing
'include' directive without sucess:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

When compiling Mono's gmcs trows this error:

error CS0246: The type or namespace name `Stack`1' could not be found. Are
you missing a using directive or an assembly reference?


I attach the piece of code. Any idea?

The code is compiled using:
gmcs *cs  -r:Antlr3.Runtime.dll -r:antlr.runtime.dll -r:StringTemplate.dll
-r:Antlr3.Utility.dll


//From Terence's sample
@lexer::members {
    class SaveStruct {

      SaveStruct(ICharStream input){
        this.input = input;
        this.marker = input.mark();
      }
      public ICharStream input;
      public int marker;
     }

    Stack<SaveStruct> includes = new Stack<SaveStruct>();

    // We should override this method for handling EOF of included file
     public Token nextToken(){
       Token token = super.nextToken();

       if(token==Token.EOF_TOKEN && !includes.empty()){
        // We've got EOF and have non empty stack.
         SaveStruct ss = includes.pop();
         setCharStream(ss.input);
         input.rewind(ss.marker);
         token = super.nextToken();
       }

      // Skip first token after switching on another input.
       if(((CommonToken)token).getStartIndex() < 0)
         token = super.nextToken();

       return token;
     }
 }

--
Antonio Mart?nez

From julien.degroote at fortis.com  Wed Jun 20 04:10:40 2007
From: julien.degroote at fortis.com (julien.degroote at fortis.com)
Date: Wed, 20 Jun 2007 13:10:40 +0200
Subject: [antlr-interest] Problems with implementing 'include'
	directiveusing C#
In-Reply-To: <48386.193.145.230.7.1182337189.squirrel@atc.ugr.es>
Message-ID: <608BEB15BC4C54489EEA87B14F2E649E010EDAD0@spmw0020.mail.shared.fortis>

Hi, 

You need to add this : 

@header {
using System.Collections.Generic;
}

right after the options {} of your grammar.

Regards,
 
Julien

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of amartinez at atc.ugr.es
Sent: Wednesday, June 20, 2007 1:00 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problems with implementing 'include' directiveusing C#

Hello,

I'm working on a little ANTLR v3 project and need to implement the
'include' directive (it's a simple assembler). I'm using ANTLR's C# output
(using Mono and Linux).
I have tried to addapt (to C#) Terence's java sample for implementing
'include' directive without sucess:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

When compiling Mono's gmcs trows this error:

error CS0246: The type or namespace name `Stack`1' could not be found. Are
you missing a using directive or an assembly reference?


I attach the piece of code. Any idea?

The code is compiled using:
gmcs *cs  -r:Antlr3.Runtime.dll -r:antlr.runtime.dll -r:StringTemplate.dll
-r:Antlr3.Utility.dll


//From Terence's sample
@lexer::members {
    class SaveStruct {

      SaveStruct(ICharStream input){
        this.input = input;
        this.marker = input.mark();
      }
      public ICharStream input;
      public int marker;
     }

    Stack<SaveStruct> includes = new Stack<SaveStruct>();

    // We should override this method for handling EOF of included file
     public Token nextToken(){
       Token token = super.nextToken();

       if(token==Token.EOF_TOKEN && !includes.empty()){
        // We've got EOF and have non empty stack.
         SaveStruct ss = includes.pop();
         setCharStream(ss.input);
         input.rewind(ss.marker);
         token = super.nextToken();
       }

      // Skip first token after switching on another input.
       if(((CommonToken)token).getStartIndex() < 0)
         token = super.nextToken();

       return token;
     }
 }

--
Antonio Mart?nez
-------------- next part --------------

= = = = = = = = = = = = = = = = = = = = = = = = =
Fortis disclaimer :
http://www.fortis.be/legal/disclaimer.htm

Privacy policy related to banking activities of Fortis:
http://www.fortis.be/legal/privacy_policy.htm
= = = = = = = = = = = = = = = = = = = = = = = = =


From shay at pentagon2000.com  Wed Jun 20 05:24:04 2007
From: shay at pentagon2000.com (Shay Cohen)
Date: Wed, 20 Jun 2007 14:24:04 +0200
Subject: [antlr-interest] Delphi grammar
Message-ID: <027d01c7b335$e4892420$2600a8c0@SHAY>

Hello,

 

I want to write a translation from Delphi to C#.

I had an old version half made in antlr v2, I converted it to version v3 but
I got problems I can't solve (frustrating)

 

Does anyone have some version I can use to begin with, I used the Pascal
grammar when I started, but that's works only for version v2 as well?

 

 

 

 

Sincerely,

 

Shay Cohen

Development Team Leader

 

PENTAGON 2000 Software, Inc

SOFTWARE EMPOWERING THE ENTERPRISE

 

Ehad Haam 9, Shalom Tower,

17th Floor 

65251

Tel Aviv, Israel

Tel: +972-3-516-6566 Ext: 107

Fax: +972-3-516-6885

 

 <mailto:shay at pentagon2000.com> shay at pentagon2000.com

 <http://www.pentagon2000.com/> www.pentagon2000.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/468e7447/attachment-0001.html 

From open.zone at virgin.net  Wed Jun 20 04:42:09 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 20 Jun 2007 12:42:09 +0100
Subject: [antlr-interest] Is a CI server a good idea? (was: New C
	runtime dist)
In-Reply-To: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
Message-ID: <001701c7b330$0ad064a0$c704a8c0@hercules>

Hi,
 
The need to manage this sort of release reminds me that the project would
benefit from a Continuous Integration build environment. For one thing it
would encourage us (and others) to add more unit tests. For another, daily
(or even more frequent) builds of the depot HEAD would be available with a
report about tests passed/failed/ignored etc.
 
One option might be Cruise Control (since the existing server(s) can run
Java) and CruiseControl is a CI system built in Java. It can be massaged to
work with Nant (for C#) and CPP (Cpp links below):
http://confluence.public.thoughtworks.org/display/CC/UsingCruiseControlWithC
plusPlus
http://article.gmane.org/gmane.comp.java.cruise-control.user/8532/match=pyth
on+cpp
<http://article.gmane.org/gmane.comp.java.cruise-control.user/8532/match=pyt
hon> 
 
I have none or little information about using CC to monitor/build projects
in:
- Ruby  
    http://ant.apache.org/manual/OptionalTasks/script.html - ANT support for
JRuby
 
http://thread.gmane.org/gmane.comp.java.cruise-control.user/13096/focus=1313
6
- ObjectiveC 
 
http://article.gmane.org/gmane.comp.java.cruise-control.user/5221/match=obje
ctive+c
- Python (see last cpp link above too)
    http://ant.apache.org/manual/OptionalTasks/script.html - ANT support for
Jython
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 20 June 2007 03:38
To: antlr-interest at antlr.org
Subject: [antlr-interest] New C runtime dist



There is a new distribution snapshot checked in which is labeled 3.0.1. This
may change if Ter decides that the first bug fix release will be called
something completely different.

 

To use this, you also need to rebuild ANTLR or at least make it pick up the
latest C.stg.

 

This fixes:

 

-          All bugs that you lot know about ;-) - Mistyped MACRO names,
followSet problem, and all those problems that people moaned at me for
making them waste two hours on there are actually quite a number of trivial
little fixes in there too;

-          Provides stacked streams so that they may be handled trivially in
lexers etc (see example of the C parser in the C examples, which now caters
for #include.)

-          Corrects a couple of tree stream rewrite issues (one is code gen,
one was in the runtime);

 

I have not been able to extensively test this and remember this is snapshot
to see if bugs are fixed properly. If you had a bug and know how to rebuild
things then please try this out and let me know if you still have issues.
Please try to be polite - most people are J. I am well aware of all the
typos in my comments - I type at 2342342 characters a second and 98% are BS
J and I will fix all those up at some point so no need to send me things
like that.

 

Share and Enjoy,

 

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/4c2c9500/attachment.html 

From silvester.pozarnik at tracetracker.com  Wed Jun 20 04:59:49 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Wed, 20 Jun 2007 13:59:49 +0200
Subject: [antlr-interest] How to swich the recognition scope in Lexer
Message-ID: <5D85F621120B9545BE359DCFA778812585C006@SERVER.tt.tracetracker.com>

In the antlr 2.7.7 you could change the behaviour of Lexer so that
tokens are recognized az literals in special cases by overriding the
testLiteralsTable() method in CharScanner class. How to the same in
antlr 3.0 if you have a grammar as:

	grammar test;
	tokens {
		MYTOKEN = 'mytoken';
	}
	mygrammar:
		{ 
		MYTOKEN LPAREN IDENTIFIER RPAREN 
		}

	LPAREN   : '(' ;
	RPAREN   : ')' ;
	IDENTIFIER 
		: ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') ( Letter |
Digit)*;
    
	fragment Letter
		: 'a'..'z' | 'A'..'Z' | '_' |'-' |  '\u0080'..'\ufffe';

	fragment Digit
		: '0'..'9';    

So that the input "mytoken(mytoken)" is a valid. The first 'mytoken'
should be recognized as MYTOKEN, but the second 'mytoken' has to be
recognized as an IDENTIFIER. Is there a way to achieve this?

BR
Silvester Pozarnik

From open.zone at virgin.net  Wed Jun 20 05:10:45 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 20 Jun 2007 13:10:45 +0100
Subject: [antlr-interest] How to swich the recognition scope in Lexer
In-Reply-To: <5D85F621120B9545BE359DCFA778812585C006@SERVER.tt.tracetracker.com>
Message-ID: <002201c7b334$08cc8180$c704a8c0@hercules>

> Silvester Pozarnik wrote this on [20 June 2007 13:00]:
> 
> In the antlr 2.7.7 you could change the behaviour of Lexer so 
> that tokens are recognized az literals in special cases by 
> overriding the
> testLiteralsTable() method in CharScanner class. How to the 
> same in antlr 3.0 if you have a grammar as:
> 
> 	grammar test;
> 	tokens {
> 		MYTOKEN = 'mytoken';
> 	}
> 	mygrammar:
> 		{ 
> 		MYTOKEN LPAREN IDENTIFIER RPAREN 
> 		}
> 
> 	LPAREN   : '(' ;
> 	RPAREN   : ')' ;
> 	IDENTIFIER 
> 		: ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') ( 
> Letter | Digit)*;
>     
> 	fragment Letter
> 		: 'a'..'z' | 'A'..'Z' | '_' |'-' |  '\u0080'..'\ufffe';
> 
> 	fragment Digit
> 		: '0'..'9';    
> 
> So that the input "mytoken(mytoken)" is a valid. The first 
> 'mytoken' should be recognized as MYTOKEN, but the second 
> 'mytoken' has to be recognized as an IDENTIFIER. Is there a 
> way to achieve this?

Not to my knowledge (and this applies to V2.x too). Is suspect you need to
change your 'mygrammar' rule:

	mygrammar : MYTOKEN LPAREN (MYTOKEN|IDENTIFIER) RPAREN 

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From wiggjd at lsbu.ac.uk  Wed Jun 20 06:13:16 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 20 Jun 2007 14:13:16 +0100
Subject: [antlr-interest] ANTLR 2.7 problem with asm statements in C/C++
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C547A@CSD-EXBE-VS2.lsbu.ac.uk>

Thanks Ralph Goergen for suggesting I might be able to incorporate my
asm processing as part of my ID production in the lexer (in order to
implement the total extraction of asm statements in the lexer as
though they were comments) in order to be able to suppress the
nondeterminism warning in the lexer.
 
I tried what you suggested but kept getting dumps when trying to run
the parser. To cut a long, tedious and boring story short ANTLR
accepted the following (AND doesn't give me a nondeterminism warning)
but the parser runs (incorrectly, of course),
 
ID
 options {testLiterals = true;}
 :
  ("asm"|"_asm"|"__asm")=>
  ("asm"|"_asm"|"__asm")
 |
  ('a'..'z'|'A'..'Z'|'_')
  ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
 ;

So far so good, but although ANTLR accepts the following (adding
either LPAREN or '('  ), the parser dumps and does no processing
whatsoever.
 
ID
 options {testLiterals = true;}
 :
  ("asm"|"_asm"|"__asm")=>
  ("asm"|"_asm"|"__asm") LPAREN // or '('
 |
  ('a'..'z'|'A'..'Z'|'_')
  ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
 ;

I sometimes wish ANTLR could be more consistent in its behaviour. It's
a great system but lets itself down imho by not always performing in a
consistent, understandable and intuitive fashion. You have to be an
expert. Just look at the number of questions we get on the
antlr-interest list.
 
What surprises me is that although I have aired this problem here
three times before and some kind people have responded on (and off)
the list with ideas and suggestions, no ANTLR guru has been able to
give a categorical reply, do this or that, or even the proverbial
RTFM, to such a simple basic problem. 
 
To be honest, this particular problem is not too bad. I can get it to
work properly but I still cannot suppress the nondeterminism warning
in the lexer. But these dumps are the last straw.
 
For your further information I am generating the parser in C++.
 
Previous messages have appeared in Vol 31, Issues 47, 51, and 76.
 
Thanks,
 
David Wigg



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/52b091c8/attachment.html 

From silvester.pozarnik at tracetracker.com  Wed Jun 20 06:12:14 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Wed, 20 Jun 2007 15:12:14 +0200
Subject: [antlr-interest] How to swich the recognition scope in Lexer
Message-ID: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>

>> Silvester Pozarnik wrote this on [20 June 2007 13:00]:
>> 
>> In the antlr 2.7.7 you could change the behaviour of Lexer so 
>> that tokens are recognized az literals in special cases by 
>> overriding the
>> testLiteralsTable() method in CharScanner class. How to the 
>> same in antlr 3.0 if you have a grammar as:
>> 
>> 	grammar test;
>> 	tokens {
>> 		MYTOKEN = 'mytoken';
>> 	}
>> 	mygrammar:
>> 		{ 
>> 		MYTOKEN LPAREN IDENTIFIER RPAREN 
>> 		}
>> 
>> 	LPAREN   : '(' ;
>> 	RPAREN   : ')' ;
>> 	IDENTIFIER 
>> 		: ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') ( 
>> Letter | Digit)*;
>>     
>> 	fragment Letter
>> 		: 'a'..'z' | 'A'..'Z' | '_' |'-' |  '\u0080'..'\ufffe';
>> 
>> 	fragment Digit
>> 		: '0'..'9';    
>> 
>> So that the input "mytoken(mytoken)" is a valid. The first 
>> 'mytoken' should be recognized as MYTOKEN, but the second 
>> 'mytoken' has to be recognized as an IDENTIFIER. Is there a 
>> way to achieve this?


>
>Not to my knowledge (and this applies to V2.x too). Is suspect you need
to
>change your 'mygrammar' rule:
>
>	mygrammar : MYTOKEN LPAREN (MYTOKEN|IDENTIFIER) RPAREN 
>
>Micheal

Hei Micheal,

The way you proposed to change the rule would not work as it is still
undeterministic when processed by Lexer ("should I recognize an
IDENTIFIER or MYTOKEN!?). I'm not sure what takes precedence here. The
proposed parser rule also alter the nature of language. This was anyway
just an example - the more general problem is that in some languages you
may need that the key words are under some condition (scope) recognized
as literals (e.g "...City=Kansas City, ... Idol=Joe Idol etc.).

In the 2.7.7 you could fix this by adding to your lexer definition:

class Testlexer extends Lexer;

{
  private static List<String> ident_stack = new LinkedList<String>();
  
  // Test the token text against the literals table
  // Override this method to perform a different literals test
  public int testLiteralsTable(int ttype) {
    if (ident_stack.size() >= 1 &&
       "mygrammar".compareToIgnoreCase(
          ident_stack.get(ident_stack.size()-1) ) == 0) {
       ident_stack.add(text.toString());
       return ttype;
    }
    ident_stack.add(text.toString());
    // this is the original stuff
    hashString.setBuffer(text.getBuffer(), text.length());
    Integer literalsIndex = (Integer)literals.get(hashString);
    if (literalsIndex != null) {
      ttype = literalsIndex.intValue();
    }
    return ttype;
  }
}


I could of course redefine a rule as:

mygrammar : MYTOKEN LPAREN STRINGVALUE RPAREN;
...
STRINGVALUE
	:	'\'' ( ~('\''|'\\') )* '\'' 
	;

But then I have to change the already established syntax of my language.
Any help?

BR.
Silvester Pozarnik

From chintanraoh at gmail.com  Wed Jun 20 06:18:18 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Wed, 20 Jun 2007 18:48:18 +0530
Subject: [antlr-interest] assigning token LABEL
In-Reply-To: <4678F165.4090204@gmx.de>
References: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>
	<4678F165.4090204@gmx.de>
Message-ID: <ec8bdb100706200618y6b86b457p5a8c6c9f9dceac2d@mail.gmail.com>

Hi,
firstly thanks for your time

>As you haven't sent your grammar with your question I have to improvise
>the snippets. Create first an imaginary LABEL token and have rules like
>this:

What wanted was some thing like this
input :
la :
ouput given by lexer :
la gets assigned token LABEL

input:
la
ouput given by lexer :
la gets assigned token ID

I tried out your grammar with few changes in antlrworks
<code starts >

grammar label_test;


LABEL	//had to make this LABEL instead of 'label'
  :   ID[false] ':' ID[true]
  ;

fragment ID [ boolean isID ]  // gave errors without fragment
  :   ( ('a'..'z'|'A'..'Z')+ ){ if (!isID) {$type=LABEL ;} }
  ;


test	:	LABEL;

<code ends>


Now this gives me the following error
{
label_testLexer.java:90: cannot find symbol
 symbol  : variable _type
 location: class label_testLexer
             if (!isID) {_type=LABEL ;}
                         ^
1 error
}

I tried to make more changes to the code and make it work but could not
Please help me out


On 6/20/07, Johannes Luber <jaluber at gmx.de> wrote:
> chintan rao wrote:
> > Hi,
> > I am new to antlr3 / compilers / parsers .
> > I have problem assigning token LABEL .
> > if there is ':' after ID it must be labeled as LABEL .
> > if there is no colon then it must be named as ID that is  IDENTIFIER .
> >
> > This may be a simple problem but i am stuck with this .
> > please help me out.
>
> As you haven't sent your grammar with your question I have to improvise
> the snippets. Create first an imaginary LABEL token and have rules like
> this:
>
> label
>    :   ID[false] ':' ID[true]
>    ;
>
> ID[boolean isID]
>    :   ('a'..'z'|'A'..'Z')+ { if (!isID) $type = LABEL ; }
>    ;
>
> Hope this helps!
> Johannes Luber
>
>

From rschulz at sonic.net  Wed Jun 20 06:25:09 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 20 Jun 2007 06:25:09 -0700
Subject: [antlr-interest] Doing translation in the lexer (the right tool
	for the job?)
In-Reply-To: <7479ECCD-F424-4A72-968A-6402426A5E0C@wincent.com>
References: <7479ECCD-F424-4A72-968A-6402426A5E0C@wincent.com>
Message-ID: <200706200625.09932.rschulz@sonic.net>

On Tuesday 19 June 2007 23:57, Wincent Colaiuta wrote:
> One of the many translation tasks I'd like to use ANTLR for is
> translating wikitext to HTML. Two things make this quite difficult:
>
> 1. The translator has to be extremely tolerant of malformed input
> (users may not understand the wikitext syntax or may deliberately
> subvert it) and make reasonable "cleanup" attempts for bad input
> (such as closing tags that were left open by the user).
>
> 2. Wikitext structure is not unlike HTML structure, which means it is
> highly recursive and is very sensitive to nesting and ordering
> issues.

Maybe you should investigate the techniques used by the browsers. They 
bend over backward to accommodate the kinds of ill-formed input you 
have to deal with and generally do pretty well.

Also, I take it the authoring of these Wiki pages is an interactive 
process? Perhaps you'd be better off guiding users towards correct 
usage rather than trying to come up with useful interpretations to bad 
input?


> ...
>
> Cheers,
> Wincent


Randall Schulz

From ted.villalba at gmail.com  Wed Jun 20 06:27:23 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 20 Jun 2007 06:27:23 -0700
Subject: [antlr-interest] Recommended options for Eclipse projects that use
	both v2 & v3 grammars?
Message-ID: <69fb4b090706200627u6f9c828bx9214506cc6f397e5@mail.gmail.com>

Hi,
Ant 1.6.x comes with a dedicated task that makes it easy to run ANTLR from
Ant build scripts, and, we are using an Eclipse plug-in that provides ANTLR
support with grammar syntax recognition.
Unfortunately, ANTLR 3 does not seem to be supported by these
tools.  Disabling this plug-in and losing ANTLR 2 support in IDE (to get rid
off the grammar errors) would be a considerable step back for us, since we
have to maintain both parsers.
Could anyone recommend available/recommended options for Eclipse projects
that use both v2 & v3 grammars?

Thank you,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/fbc7ec97/attachment.html 

From antlr at jazillian.com  Wed Jun 20 06:32:01 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 20 Jun 2007 09:32:01 -0400
Subject: [antlr-interest] Doing translation in the lexer (the right tool
 for	the job?)
In-Reply-To: <7479ECCD-F424-4A72-968A-6402426A5E0C@wincent.com>
References: <7479ECCD-F424-4A72-968A-6402426A5E0C@wincent.com>
Message-ID: <46792C51.3060903@jazillian.com>

Have you looked into Tidy http://tidy.sourceforge.net/
and JTidy http://jtidy.sourceforge.net/   ?

I'd start with one of these and keep going.
Doesn't sound like ANTLR is the right tool for this.

Andy




Wincent Colaiuta wrote:
> One of the many translation tasks I'd like to use ANTLR for is 
> translating wikitext to HTML. Two things make this quite difficult:
>
> 1. The translator has to be extremely tolerant of malformed input 
> (users may not understand the wikitext syntax or may deliberately 
> subvert it) and make reasonable "cleanup" attempts for bad input (such 
> as closing tags that were left open by the user).
>
> 2. Wikitext structure is not unlike HTML structure, which means it is 
> highly recursive and is very sensitive to nesting and ordering issues.
>
> This means that the translator must be able to handle things like:
>
> - improperly interleaved tags: <em><strong></em></strong>
>
> - missing closing tags: <em>foo
>
> - missing opening tags: foo</em>
>
> - mismatched tags (really just a combination of the above): 
> <em>foo</strong>
>
> And it must enforce scoping rules that can be quite complicated at 
> times; for example:
>
> - an <em> span may appear inside a <strong> span;
>
> - and a <strong> span may appear inside an <em> span;
>
> - but an <em> span may not appear inside an <em> span, so both 
> <em><em>foo</em></em> and <em><strong><em>foo</em></strong></em> are 
> invalid
>
> - a <blockquote> may contain other block level elements such as <p> 
> and even another <blockquote>;
>
> - but <p> may not contain <blockquote>
>
> - etc, etc, etc...
>
> So if it weren't for the fact that the translator has to gracefully 
> handle bad input the task would be significantly easier. In other 
> words, if ANTLR could assume that all input were perfectly formed and 
> just throw errors on encountering bad input then it wouldn't be too 
> hard. But even assuming syntactically perfect input there is still the 
> issue of the complicated scoping rules.
>
> My first na?ve attempt at doing this had me trying to express scope 
> restrictions using only standard parser rules, but I very quickly got 
> into trouble with recursion due to non-LL(*) decisions and 
> non-determinisms.
>
> So I then tried using predicates combined with a stack stored in a 
> global scope. Basically, on entering a new rule, information would be 
> pushed onto the stack describing what tags were explicitly allowed and 
> what tags explicitly disallowed. Semantic predicates could then be 
> used in subsequent rules to check the stack to see if a particular 
> alternative to match.
>
> For example, on entering a <blockquote>, the list of allowed tags is 
> basically any block-level tag (<p>, <blockquote> etc) so those are 
> pushed as a list onto the stack. On entering a <p>, the list of 
> allowed tags is basically any inline element (<em>, <strong> etc). The 
> predicate's job is then basically to walk the stack and confirm that 
> (a) a given tag is explicitly allowed, and (b) it is not explicitly 
> disallowed in any previous level of the stack.
>
> I soon found that the predicates were being hoisted/lowered into 
> unexpected places which prevented that idea from working. Perhaps 
> someone with more intimate knowledge of how ANTLR does this would be 
> able to make the solution work, but I didn't see much hope of getting 
> it to work so I abandoned it. I also wasn't even sure that my stack of 
> allowed/disallowed tags was a good design, even in the abstract sense.
>
> So finally, the thing I'm doing is jettisoning the parser entirely and 
> doing absolutely everything in the lexer. Ok, not exactly: I've made 
> an extremely simple filtering lexer which has no predicates, no 
> actions, just spits out tokens and has a catch-all rule at the bottom 
> so that all input characters are guaranteed to come out as tokens on 
> the other end.
>
> Then in my support code I ask the lexer for tokens one at a time and 
> perform translation "by hand". Once again I maintain a stack, but this 
> time a slightly simpler one. Instead of maintaining a list of allowed 
> and disallowed tags at each level I instead maintain a stack which 
> indicates my current scope, kind of like a CSS selector: ie. if I've 
> previously seen <blockquote>, <p> and <em> then my stack contains 
> "blockquote", "p" and "em"; if I see another "<em>" I know I can't 
> match it because that's already on the stack, and on seeing "</em>" I 
> pop it off the stack. In this way I can basically ignore unexpected 
> tags (well, actually I output them literally as "&lt;em&gt;" etc) and 
> insert missing tags when I think I should have seen them.
>
> All of this manually management is a bit of effort, but it does work 
> and that's very important: the code is simple enough to look at and 
> see that it will work. If I tried to do all of this in ANTLR then 
> there would be an element of black magic; I'd never feel sure that I 
> knew what ANTLR was really doing behind the scenes. But I am left with 
> the lingering doubt that I might not be doing things the best way. Do 
> you think that this lexer-only-plus-supporting-code approach is the 
> using the right tool for the job? Or am I missing something obvious?
>
> Cheers,
> Wincent
>
>


From qwertie256 at gmail.com  Wed Jun 20 06:43:08 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Wed, 20 Jun 2007 07:43:08 -0600
Subject: [antlr-interest] C# runtime?
Message-ID: <ce40b1470706200643g63a219bcxe95906a7388b18d7@mail.gmail.com>

Does anyone know of any available documentation or source code of the
ANTLR3 C# runtime? I have only found one source of information so far:

http://www.manuelabadia.com/blog/PermaLink,guid,ff1dc504-f854-40b4-bfe7-250ce91efad7.aspx

-- 
- David
http://qism.blogspot.com

From scott at javadude.com  Wed Jun 20 06:49:10 2007
From: scott at javadude.com (scott at javadude.com)
Date: Wed, 20 Jun 2007 09:49:10 -0400 (EDT)
Subject: [antlr-interest] Recommended options for Eclipse projects that
 use both v2 & v3 grammars?
In-Reply-To: <69fb4b090706200627u6f9c828bx9214506cc6f397e5@mail.gmail.com>
References: <69fb4b090706200627u6f9c828bx9214506cc6f397e5@mail.gmail.com>
Message-ID: <4211.12.173.51.158.1182347350.squirrel@www.javadude.com>

You just missed my announcements -- I just posted an ANTLR 3 Eclipse plugin.

See http://javadude.com/tools/antlr3-eclipse.

It shows grammar errors but not the compiler errors yet (I need to add the
marker-copying builder)

Note that the new plugin requires Eclipse 3.2.2 and Java 1.5 or better.

Enjoy!
-- Scott

> Hi,
> Ant 1.6.x comes with a dedicated task that makes it easy to run ANTLR from
> Ant build scripts, and, we are using an Eclipse plug-in that provides
> ANTLR
> support with grammar syntax recognition.
> Unfortunately, ANTLR 3 does not seem to be supported by these
> tools.  Disabling this plug-in and losing ANTLR 2 support in IDE (to get
> rid
> off the grammar errors) would be a considerable step back for us, since we
> have to maintain both parsers.
> Could anyone recommend available/recommended options for Eclipse projects
> that use both v2 & v3 grammars?
>
> Thank you,
> Ted
>


From jaluber at gmx.de  Wed Jun 20 06:50:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 20 Jun 2007 15:50:19 +0200
Subject: [antlr-interest] assigning token LABEL
In-Reply-To: <ec8bdb100706200618y6b86b457p5a8c6c9f9dceac2d@mail.gmail.com>
References: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>	
	<4678F165.4090204@gmx.de>
	<ec8bdb100706200618y6b86b457p5a8c6c9f9dceac2d@mail.gmail.com>
Message-ID: <4679309B.9030305@gmx.de>

chintan rao wrote:
> Hi,
> firstly thanks for your time
> 
>> As you haven't sent your grammar with your question I have to improvise
>> the snippets. Create first an imaginary LABEL token and have rules like
>> this:
> 
> What wanted was some thing like this
> input :
> la :
> ouput given by lexer :
> la gets assigned token LABEL
> 
> input:
> la
> ouput given by lexer :
> la gets assigned token ID

Looking at your sample input I discovered that I misread your
specification. I thought that after the label had to come an ID. My
mistake. The following grammar works with ANTLRworks and parses my test
input correctly. Just don't forget a whitespace rule in your actual grammar.

LABEL
	:	('a'..'z'|'A'..'Z')+ ':'
	;
	
ID
	:	('a'..'z'|'A'..'Z')+
	;

test
	:	(LABEL|ID)*
	;

Best regards,
Johannes Luber

From tbrandonau at gmail.com  Wed Jun 20 06:51:42 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 20 Jun 2007 23:51:42 +1000
Subject: [antlr-interest] How to swich the recognition scope in Lexer
In-Reply-To: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>
References: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>
Message-ID: <ebc876d70706200651lb180199ra0f60dd0e908c31d@mail.gmail.com>

On 6/20/07, Silvester Pozarnik <silvester.pozarnik at tracetracker.com> wrote:
> >> Silvester Pozarnik wrote this on [20 June 2007 13:00]:
> >>
> >> In the antlr 2.7.7 you could change the behaviour of Lexer so
> >> that tokens are recognized az literals in special cases by
> >> overriding the
> >> testLiteralsTable() method in CharScanner class. How to the
> >> same in antlr 3.0 if you have a grammar as:
> >>
> >>      grammar test;
> >>      tokens {
> >>              MYTOKEN = 'mytoken';
> >>      }
> >>      mygrammar:
> >>              {
> >>              MYTOKEN LPAREN IDENTIFIER RPAREN
> >>              }
> >>
> >>      LPAREN   : '(' ;
> >>      RPAREN   : ')' ;
> >>      IDENTIFIER
> >>              : ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') (
> >> Letter | Digit)*;
> >>
> >>      fragment Letter
> >>              : 'a'..'z' | 'A'..'Z' | '_' |'-' |  '\u0080'..'\ufffe';
> >>
> >>      fragment Digit
> >>              : '0'..'9';
> >>
> >> So that the input "mytoken(mytoken)" is a valid. The first
> >> 'mytoken' should be recognized as MYTOKEN, but the second
> >> 'mytoken' has to be recognized as an IDENTIFIER. Is there a
> >> way to achieve this?
>
>
> >
> >Not to my knowledge (and this applies to V2.x too). Is suspect you need
> to
> >change your 'mygrammar' rule:
> >
> >       mygrammar : MYTOKEN LPAREN (MYTOKEN|IDENTIFIER) RPAREN
> >
> >Micheal
>
> Hei Micheal,
>
> The way you proposed to change the rule would not work as it is still
> undeterministic when processed by Lexer ("should I recognize an
> IDENTIFIER or MYTOKEN!?). I'm not sure what takes precedence here. The
> proposed parser rule also alter the nature of language.
>
> BR.
> Silvester Pozarnik
>

In ANTLR 3 lexers the rule which is mentioned first will take
precedence with no warnings given. Literals specified in tokens
section have precedence over explicit lexer rules. So MYTOKEN will
take precedence. As far as I can see Michael's proposed solution
should work fine for your needs. To generalise you could do something
like:

mygrammar: MYTOKEN1 LPAREN idOrKeyword RPAREN;
idOrKeyword: IDENTIFIER|MYTOKEN1|MYTOKEN2 {LT(-1).setType(IDENTIFIER);};

where MYTOKEN1, MYTOKEN2 etc are your keywords then when keywords are
allowed you use idOrKeyword rather than IDENTIFIER. The action (unsure
of exact syntax there) means later phases don't need to deal with
this.
Or you can have keywords recognised as IDENTIFIER in your lexer and
then use predicates to test the text in your parser. Something like:

mygrammar: myToken LPAREN IDENTIFIER RPAREN;
myToken: {input.LT(1).getText() == "mytoken"}? IDENTIFIER {
input.LT(-1).setType(MYTOKEN);};

Tom.

From jimi at temporal-wave.com  Wed Jun 20 07:05:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 07:05:42 -0700
Subject: [antlr-interest] Is a CI server a good idea? (was: New Cruntime
	dist)
In-Reply-To: <001701c7b330$0ad064a0$c704a8c0@hercules>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
	<001701c7b330$0ad064a0$c704a8c0@hercules>
Message-ID: <051466DAA0D608439E196797955018D76DE8@wavemachine.temporal-wave.com>

I think that the only potential issue with such things is that despite
their automation, someone has to look after them. I have no issue with
it myself, so long as it does not take a long time to set up but then
you have to convince Ter that there is no extra hassle for him. To be
honest for this kind of project I would just write some bash scripts and
use cron.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
Sent: Wednesday, June 20, 2007 4:42 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is a CI server a good idea? (was: New
Cruntime dist)

 

Hi,

 

The need to manage this sort of release reminds me that the project
would benefit from a Continuous Integration build environment. For one
thing it would encourage us (and others) to add more unit tests. For
another, daily (or even more frequent) builds of the depot HEAD would be
available with a report about tests passed/failed/ignored etc.

 

One option might be Cruise Control (since the existing server(s) can run
Java) and CruiseControl is a CI system built in Java. It can be massaged
to work with Nant (for C#) and CPP (Cpp links below):

http://confluence.public.thoughtworks.org/display/CC/UsingCruiseControlW
ithCplusPlus

http://article.gmane.org/gmane.comp.java.cruise-control.user/8532/match=
python+cpp

 

I have none or little information about using CC to monitor/build
projects in:

- Ruby  

    http://ant.apache.org/manual/OptionalTasks/script.html - ANT support
for JRuby

 
http://thread.gmane.org/gmane.comp.java.cruise-control.user/13096/focus=
13136

- ObjectiveC 

 
http://article.gmane.org/gmane.comp.java.cruise-control.user/5221/match=
objective+c

- Python (see last cpp link above too)

    http://ant.apache.org/manual/OptionalTasks/script.html - ANT support
for Jython

 

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very
limited. 

	-----Original Message-----
	From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
	Sent: 20 June 2007 03:38
	To: antlr-interest at antlr.org
	Subject: [antlr-interest] New C runtime dist

	There is a new distribution snapshot checked in which is labeled
3.0.1. This may change if Ter decides that the first bug fix release
will be called something completely different.

	 

	To use this, you also need to rebuild ANTLR or at least make it
pick up the latest C.stg.

	 

	This fixes:

	 

	-          All bugs that you lot know about ;-) - Mistyped MACRO
names, followSet problem, and all those problems that people moaned at
me for making them waste two hours on there are actually quite a number
of trivial little fixes in there too;

	-          Provides stacked streams so that they may be handled
trivially in lexers etc (see example of the C parser in the C examples,
which now caters for #include.)

	-          Corrects a couple of tree stream rewrite issues (one
is code gen, one was in the runtime);

	 

	I have not been able to extensively test this and remember this
is snapshot to see if bugs are fixed properly. If you had a bug and know
how to rebuild things then please try this out and let me know if you
still have issues. Please try to be polite - most people are J. I am
well aware of all the typos in my comments - I type at 2342342
characters a second and 98% are BS J and I will fix all those up at some
point so no need to send me things like that.

	 

	Share and Enjoy,

	 

	Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/27eea443/attachment-0001.html 

From jimi at temporal-wave.com  Wed Jun 20 07:16:18 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 07:16:18 -0700
Subject: [antlr-interest] How to swich the recognition scope in Lexer
In-Reply-To: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>
References: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>
Message-ID: <051466DAA0D608439E196797955018D76DE9@wavemachine.temporal-wave.com>

Silvester,

Michael was correct - the precedence thing you are asking about is
really just a question about what the lexer will return.

So: 

1) Remember that the lexer and parser have no connection or interaction.
The lexer is just there to tokenize and if you have it set up so that
'MYTOKEN' always returns token MYTOKEN, then it always will whatever the
rule in the parser that looks for one does.
2) So, construct your lexer with all the keywords and things placed in
this order (some of this is arbitrary but if you just always use this
order you should be fine):

Keywords
Operators etc
STRING_LITERALS
Identifiers

3) Now create a parser rule that lists all the keywords.
4) Create a parser rule keyw_or_id
5) Whenever a keyword is able to be used as an identifier, use the
parser rule keyw_or_id rather than IDENTIFIER;
6) Watch out for places where this causes ambiguity (unfortunately a
number of languages are like this) and solve with predicates.


It can be tricky, but works.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Silvester Pozarnik
> Sent: Wednesday, June 20, 2007 6:12 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to swich the recognition scope in
> Lexer
> 
> >> Silvester Pozarnik wrote this on [20 June 2007 13:00]:
> >>
> >> In the antlr 2.7.7 you could change the behaviour of Lexer so
> >> that tokens are recognized az literals in special cases by
> >> overriding the
> >> testLiteralsTable() method in CharScanner class. How to the
> >> same in antlr 3.0 if you have a grammar as:
> >>
> >> 	grammar test;
> >> 	tokens {
> >> 		MYTOKEN = 'mytoken';
> >> 	}
> >> 	mygrammar:
> >> 		{
> >> 		MYTOKEN LPAREN IDENTIFIER RPAREN
> >> 		}
> >>
> >> 	LPAREN   : '(' ;
> >> 	RPAREN   : ')' ;
> >> 	IDENTIFIER
> >> 		: ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') (
> >> Letter | Digit)*;
> >>
> >> 	fragment Letter
> >> 		: 'a'..'z' | 'A'..'Z' | '_' |'-' |  '\u0080'..'\ufffe';
> >>
> >> 	fragment Digit
> >> 		: '0'..'9';
> >>
> >> So that the input "mytoken(mytoken)" is a valid. The first
> >> 'mytoken' should be recognized as MYTOKEN, but the second
> >> 'mytoken' has to be recognized as an IDENTIFIER. Is there a
> >> way to achieve this?
> 
> 
> >
> >Not to my knowledge (and this applies to V2.x too). Is suspect you
> need
> to
> >change your 'mygrammar' rule:
> >
> >	mygrammar : MYTOKEN LPAREN (MYTOKEN|IDENTIFIER) RPAREN
> >
> >Micheal
> 
> Hei Micheal,
> 
> The way you proposed to change the rule would not work as it is still
> undeterministic when processed by Lexer ("should I recognize an
> IDENTIFIER or MYTOKEN!?). I'm not sure what takes precedence here. The
> proposed parser rule also alter the nature of language. This was
anyway
> just an example - the more general problem is that in some languages
> you
> may need that the key words are under some condition (scope)
recognized
> as literals (e.g "...City=Kansas City, ... Idol=Joe Idol etc.).
> 
> In the 2.7.7 you could fix this by adding to your lexer definition:
> 
> class Testlexer extends Lexer;
> 
> {
>   private static List<String> ident_stack = new LinkedList<String>();
> 
>   // Test the token text against the literals table
>   // Override this method to perform a different literals test
>   public int testLiteralsTable(int ttype) {
>     if (ident_stack.size() >= 1 &&
>        "mygrammar".compareToIgnoreCase(
>           ident_stack.get(ident_stack.size()-1) ) == 0) {
>        ident_stack.add(text.toString());
>        return ttype;
>     }
>     ident_stack.add(text.toString());
>     // this is the original stuff
>     hashString.setBuffer(text.getBuffer(), text.length());
>     Integer literalsIndex = (Integer)literals.get(hashString);
>     if (literalsIndex != null) {
>       ttype = literalsIndex.intValue();
>     }
>     return ttype;
>   }
> }
> 
> 
> I could of course redefine a rule as:
> 
> mygrammar : MYTOKEN LPAREN STRINGVALUE RPAREN;
> ...
> STRINGVALUE
> 	:	'\'' ( ~('\''|'\\') )* '\''
> 	;
> 
> But then I have to change the already established syntax of my
> language.
> Any help?
> 
> BR.
> Silvester Pozarnik

From open.zone at virgin.net  Wed Jun 20 07:17:42 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 20 Jun 2007 15:17:42 +0100
Subject: [antlr-interest] How to swich the recognition scope in Lexer
In-Reply-To: <5D85F621120B9545BE359DCFA778812585C017@SERVER.tt.tracetracker.com>
Message-ID: <000f01c7b345$c63dc240$c704a8c0@hercules>

Hi,

> Hei Micheal,
> 
> The way you proposed to change the rule would not work as it is still
> undeterministic when processed by Lexer ("should I recognize an
> IDENTIFIER or MYTOKEN!?). I'm not sure what takes precedence here.

Have built the altered grammar and tried it?. It should just work.

> The
> proposed parser rule also alter the nature of language. This 
> was anyway
> just an example - the more general problem is that in some 
> languages you
> may need that the key words are under some condition (scope) 
> recognized
> as literals (e.g "...City=Kansas City, ... Idol=Joe Idol etc.).
> 
> In the 2.7.7 you could fix this by adding to your lexer definition:
> 
> class Testlexer extends Lexer;
> 
> {
>   private static List<String> ident_stack = new LinkedList<String>();
>   
>   // Test the token text against the literals table
>   // Override this method to perform a different literals test
>   public int testLiteralsTable(int ttype) {

<[ SNIPPED ]>

>   }
> }

Ok. I thought you meant using the default implementation of testLiterals().
Try something like:

Tokens {
	MYTOKEN;
}

Then, you can use actions in the IDENTIFIER rule to achieve a similar effect
as your old testLiteralsTable():

IDENTIFIER: ('a'..'z'| ... ) ;
	{ if ( getText().equals("mytoken") && someOtherConditionIsMet() ) {
$type=MYTOKEN } }
	
Micheal


From jimi at temporal-wave.com  Wed Jun 20 07:27:21 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 07:27:21 -0700
Subject: [antlr-interest] New C runtime dist
In-Reply-To: <0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
	<0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76DEA@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com]
> In your comments on bug 144 (<http://www.antlr.org:8888/browse/
> ANTLR-144>) you write:
> 
> > Note that the built in stream handling is not handled in filtering
> > lexers (but perhps I ought to build it in there too).
> 
> Just wanted to add my vote: yes, I definitely think you should handle
> this in filtering lexers as it is likely to surprise people that
> expect it to work...

Yep - it is because the filtering next token is produce in the codegen
template, which I forgot about until the last minute. You would only be
affected by this if you wanted to process include files or multiple
input streams in a filtering lexer, so nobody will have this issue yet
;-)

> 
> Did you get a chance to look at my patch in the posted to the mailing
> list in the thread, "GCC lexer warnings C target" (<http://
> www.antlr.org/pipermail/antlr-interest/2007-June/021330.html>)?

That was fixed, as was everyone else's issues I believe. As I said I
can't guarantee that I tested all the combinations of everything to
death, but if each person that had an issue would be good enough to test
the ones they reported then we should be in good shape. I will issue any
further corrections tonight under the same release labeled tar.

Jim

From open.zone at virgin.net  Wed Jun 20 07:32:34 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 20 Jun 2007 15:32:34 +0100
Subject: [antlr-interest] C# runtime?
In-Reply-To: <ce40b1470706200643g63a219bcxe95906a7388b18d7@mail.gmail.com>
Message-ID: <001201c7b347$d98bb490$c704a8c0@hercules>

Not at the moment. We should probably link to that article from the C# wiki
page.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Piepgrass
> Sent: 20 June 2007 14:43
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C# runtime?
> 
> 
> Does anyone know of any available documentation or source 
> code of the ANTLR3 C# runtime? I have only found one source 
> of information so far:
> 
http://www.manuelabadia.com/blog/PermaLink,guid,ff1dc504-f854-40b4-bfe7-250c
e91efad7.aspx

-- 
- David
http://qism.blogspot.com


From chintanraoh at gmail.com  Wed Jun 20 07:39:24 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Thu, 21 Jun 2007 02:39:24 +1200
Subject: [antlr-interest] assigning token LABEL
In-Reply-To: <4679309B.9030305@gmx.de>
References: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com>
	<4678F165.4090204@gmx.de>
	<ec8bdb100706200618y6b86b457p5a8c6c9f9dceac2d@mail.gmail.com>
	<4679309B.9030305@gmx.de>
Message-ID: <ec8bdb100706200739l55501617gb91da1bb8d98df35@mail.gmail.com>

Hi thanks for the solution again

>LABEL
>       :       ('a'..'z'|'A'..'Z')+ ':'
>       ;

The problem with the solution is that colon gets assigned with label too
for example
input:
lb:
output:
now LABEL token will be 'lb:'
I want to it to be 'lb'
and may be assign a diffrent token for ':'



On 6/21/07, Johannes Luber <jaluber at gmx.de> wrote:
> chintan rao wrote:
> > Hi,
> > firstly thanks for your time
> >
> >> As you haven't sent your grammar with your question I have to improvise
> >> the snippets. Create first an imaginary LABEL token and have rules like
> >> this:
> >
> > What wanted was some thing like this
> > input :
> > la :
> > ouput given by lexer :
> > la gets assigned token LABEL
> >
> > input:
> > la
> > ouput given by lexer :
> > la gets assigned token ID
>
> Looking at your sample input I discovered that I misread your
> specification. I thought that after the label had to come an ID. My
> mistake. The following grammar works with ANTLRworks and parses my test
> input correctly. Just don't forget a whitespace rule in your actual grammar.
>
> LABEL
> 	:	('a'..'z'|'A'..'Z')+ ':'
> 	;
> 	
> ID
> 	:	('a'..'z'|'A'..'Z')+
> 	;
>
> test
> 	:	(LABEL|ID)*
> 	;
>
> Best regards,
> Johannes Luber
>

From timgclark at gmail.com  Wed Jun 20 07:44:35 2007
From: timgclark at gmail.com (Tim Clark)
Date: Wed, 20 Jun 2007 15:44:35 +0100
Subject: [antlr-interest] Possible bug in code generated for Lexer?
Message-ID: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>

Hi

I reported this before and got no response from anyone. Hopefully this time
I'll be more lucky.

I have the option:
     TokenLabelType=SL3Token

in my parser, where SL3Token extends CommonToken. [I want to save the name
of included file in the tokens.]

This lexer rule:

INCLUDE
    :    'include' (WS)? f=STRING ;

generates code like this:

  public final void mINCLUDE() throws RecognitionException {
        try {
            int _type = INCLUDE;
            SL3Token f=null;
     ..... stuff ......
            f = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
Token.DEFAULT_CHANNEL, fStart190, getCharIndex()-1);
..... more stuff .....
}

which unfortunately is a Java error since it's trying to assign a
CommonToken to an SL3Token. I think this must be an Antlr  bug.

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/42a68160/attachment.html 

From jimi at temporal-wave.com  Wed Jun 20 08:01:26 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 08:01:26 -0700
Subject: [antlr-interest] assigning token LABEL
In-Reply-To: <ec8bdb100706200739l55501617gb91da1bb8d98df35@mail.gmail.com>
References: <ec8bdb100706191902h46ed0b87ve2104740230052b7@mail.gmail.com><4678F165.4090204@gmx.de><ec8bdb100706200618y6b86b457p5a8c6c9f9dceac2d@mail.gmail.com><4679309B.9030305@gmx.de>
	<ec8bdb100706200739l55501617gb91da1bb8d98df35@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76DEC@wavemachine.temporal-wave.com>

Move this semantic into the parser:

ASS: '=' ;
SEMI : ';' ;
COLON: ':';
ID: ('a'..'z'|'A'..'Z')+ ;

label	: ID COLON ;

Then when it is unambiguous you can just use the label rule and if you
find yourself with ambiguities, just use ((label)=>label) ...

As in the artificial:

thang: ((label)=>label)? ID ASS ID SEMI label SEMI
	;

This should do everything you need and allow better error recovery etc.
In general you should do as little interpretation as possible in the
lexer (unless you have ONLY a filtering lexer), only perform semantic
checking in the parser if you definitely don't need an AST and if you
do, leave that to the tree walk/parse.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of chintan rao
> Sent: Wednesday, June 20, 2007 7:39 AM
> To: Johannes Luber
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] assigning token LABEL
> 
> Hi thanks for the solution again
> 
> >LABEL
> >       :       ('a'..'z'|'A'..'Z')+ ':'
> >       ;
> 
> The problem with the solution is that colon gets assigned with label
> too
> for example
> input:
> lb:
> output:
> now LABEL token will be 'lb:'
> I want to it to be 'lb'
> and may be assign a diffrent token for ':'
> 
> 
> 
> On 6/21/07, Johannes Luber <jaluber at gmx.de> wrote:
> > chintan rao wrote:
> > > Hi,
> > > firstly thanks for your time
> > >
> > >> As you haven't sent your grammar with your question I have to
> improvise
> > >> the snippets. Create first an imaginary LABEL token and have
rules
> like
> > >> this:
> > >
> > > What wanted was some thing like this
> > > input :
> > > la :
> > > ouput given by lexer :
> > > la gets assigned token LABEL
> > >
> > > input:
> > > la
> > > ouput given by lexer :
> > > la gets assigned token ID
> >
> > Looking at your sample input I discovered that I misread your
> > specification. I thought that after the label had to come an ID. My
> > mistake. The following grammar works with ANTLRworks and parses my
> test
> > input correctly. Just don't forget a whitespace rule in your actual
> grammar.
> >
> > LABEL
> > 	:	('a'..'z'|'A'..'Z')+ ':'
> > 	;
> >
> > ID
> > 	:	('a'..'z'|'A'..'Z')+
> > 	;
> >
> > test
> > 	:	(LABEL|ID)*
> > 	;
> >
> > Best regards,
> > Johannes Luber
> >

From win at wincent.com  Wed Jun 20 08:01:42 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 20 Jun 2007 17:01:42 +0200
Subject: [antlr-interest] New C runtime dist
In-Reply-To: <051466DAA0D608439E196797955018D76DEA@wavemachine.temporal-wave.com>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
	<0B3DF454-A211-4954-82C2-6B4FC3FCB82A@wincent.com>
	<051466DAA0D608439E196797955018D76DEA@wavemachine.temporal-wave.com>
Message-ID: <8F8113F8-18A8-4875-9DA9-8C986B3A84AB@wincent.com>

El 20/6/2007, a las 16:27, Jim Idle escribi?:
>>
>> Did you get a chance to look at my patch in the posted to the mailing
>> list in the thread, "GCC lexer warnings C target" (<http://
>> www.antlr.org/pipermail/antlr-interest/2007-June/021330.html>)?
>
> That was fixed, as was everyone else's issues I believe. As I said I
> can't guarantee that I tested all the combinations of everything to
> death, but if each person that had an issue would be good enough to  
> test
> the ones they reported then we should be in good shape. I will  
> issue any
> further corrections tonight under the same release labeled tar.

Ah, indeed you did fix it in change set 3831[1]... I did look for it  
but hadn't seen it yet...

Cheers,
Wincent

1. <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
templates/C/C.stg?r1=3828&r2=3831>


From silvester.pozarnik at tracetracker.com  Wed Jun 20 08:05:02 2007
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Wed, 20 Jun 2007 17:05:02 +0200
Subject: [antlr-interest] How to swich the recognition scope in Lexer
In-Reply-To: <ebc876d70706200651lb180199ra0f60dd0e908c31d@mail.gmail.com>
Message-ID: <5D85F621120B9545BE359DCFA778812585C038@SERVER.tt.tracetracker.com>



> -----Original Message-----
> From: Thomas Brandon [mailto:tbrandonau at gmail.com]
> Sent: 20. juni 2007 15:52
> To: Silvester Pozarnik
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to swich the recognition scope in
Lexer
> 
> On 6/20/07, Silvester Pozarnik <silvester.pozarnik at tracetracker.com>
> wrote:
> > >> Silvester Pozarnik wrote this on [20 June 2007 13:00]:
> > >>
> > >> In the antlr 2.7.7 you could change the behaviour of Lexer so
> > >> that tokens are recognized az literals in special cases by
> > >> overriding the
> > >> testLiteralsTable() method in CharScanner class. How to the
> > >> same in antlr 3.0 if you have a grammar as:
> > >>
> > >>      grammar test;
> > >>      tokens {
> > >>              MYTOKEN = 'mytoken';
> > >>      }
> > >>      mygrammar:
> > >>              {
> > >>              MYTOKEN LPAREN IDENTIFIER RPAREN
> > >>              }
> > >>
> > >>      LPAREN   : '(' ;
> > >>      RPAREN   : ')' ;
> > >>      IDENTIFIER
> > >>              : ('a'..'z' | 'A'..'Z' | '\u0080'..'\ufffe') (
> > >> Letter | Digit)*;
> > >>
> > >>      fragment Letter
> > >>              : 'a'..'z' | 'A'..'Z' | '_' |'-' |
'\u0080'..'\ufffe';
> > >>
> > >>      fragment Digit
> > >>              : '0'..'9';
> > >>
> > >> So that the input "mytoken(mytoken)" is a valid. The first
> > >> 'mytoken' should be recognized as MYTOKEN, but the second
> > >> 'mytoken' has to be recognized as an IDENTIFIER. Is there a
> > >> way to achieve this?
> >
> >
> > >
> > >Not to my knowledge (and this applies to V2.x too). Is suspect you
need
> > to
> > >change your 'mygrammar' rule:
> > >
> > >       mygrammar : MYTOKEN LPAREN (MYTOKEN|IDENTIFIER) RPAREN
> > >
> > >Micheal
> >
> > Hei Micheal,
> >
> > The way you proposed to change the rule would not work as it is
still
> > undeterministic when processed by Lexer ("should I recognize an
> > IDENTIFIER or MYTOKEN!?). I'm not sure what takes precedence here.
The
> > proposed parser rule also alter the nature of language.
> >
> > BR.
> > Silvester Pozarnik
> >
> 
> In ANTLR 3 lexers the rule which is mentioned first will take
> precedence with no warnings given. Literals specified in tokens
> section have precedence over explicit lexer rules. So MYTOKEN will
> take precedence. As far as I can see Michael's proposed solution
> should work fine for your needs. To generalise you could do something
> like:
> 
> mygrammar: MYTOKEN1 LPAREN idOrKeyword RPAREN;
> idOrKeyword: IDENTIFIER|MYTOKEN1|MYTOKEN2
{LT(-1).setType(IDENTIFIER);};
> 
> where MYTOKEN1, MYTOKEN2 etc are your keywords then when keywords are
> allowed you use idOrKeyword rather than IDENTIFIER. The action (unsure
> of exact syntax there) means later phases don't need to deal with
> this.
> Or you can have keywords recognised as IDENTIFIER in your lexer and
> then use predicates to test the text in your parser. Something like:
> 
> mygrammar: myToken LPAREN IDENTIFIER RPAREN;
> myToken: {input.LT(1).getText() == "mytoken"}? IDENTIFIER {
> input.LT(-1).setType(MYTOKEN);};
> 
> Tom.


The first solution with "{LT(-1).setType(IDENTIFIER);}" did a trick.

Thanks a lot, Tom!

BR
Silvester

From jimi at temporal-wave.com  Wed Jun 20 08:10:22 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 08:10:22 -0700
Subject: [antlr-interest] Possible bug in code generated for Lexer?
In-Reply-To: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
References: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76DED@wavemachine.temporal-wave.com>

It does look like a bug in that the codegen template has the reference
hard coded, but maybe Ter had some cunning plan that is documented in a
wiki article or something. Ter needs to take a look I think and give
some comment (which may be 'buy the book' ;-).

 

However, your stated need seems to be a bit overkill as storing a
reference to the filename is not really required. The token has a
reference to the input stream already (.input), from which you should be
able to derive the filename in any error messages and so on without
changing the token interface.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tim Clark
Sent: Wednesday, June 20, 2007 7:45 AM
To: antlr-interest
Subject: [antlr-interest] Possible bug in code generated for Lexer?

 

Hi

I reported this before and got no response from anyone. Hopefully this
time I'll be more lucky.

I have the option:
     TokenLabelType=SL3Token

in my parser, where SL3Token extends CommonToken. [I want to save the
name of included file in the tokens.] 

This lexer rule:

INCLUDE
    :    'include' (WS)? f=STRING ;

generates code like this:

  public final void mINCLUDE() throws RecognitionException {
        try {
            int _type = INCLUDE; 
            SL3Token f=null;
     ..... stuff ......
            f = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
Token.DEFAULT_CHANNEL, fStart190, getCharIndex()-1);
..... more stuff .....
}

which unfortunately is a Java error since it's trying to assign a
CommonToken to an SL3Token. I think this must be an Antlr  bug. 

Regards





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/51e70d70/attachment.html 

From antlr-list at arizona-software.ch  Wed Jun 20 08:13:57 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 20 Jun 2007 08:13:57 -0700
Subject: [antlr-interest] Debugging Tree Parser grammar using ANTLRWorks
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20210B7B7@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20210B7B7@orsmsx417.amr.corp.intel.com>
Message-ID: <5D8E5CE7-DE14-4319-9F9D-4CB69F1F24EE@arizona-software.ch>

That's right, it is not implemented out of the box. I will add that  
in the next release. But you can create the test ring yourself and  
then use the "Debug Remote" to debug the tree parser. Here is a zip  
file containing the demo I gave for the ANTLR 3 launch party where I  
debug a tree parser (I will add a tutorial for that soon). Compile  
and run the DebugTree.jar which is the test ring (run ANTLR over L,  
and LT and use the -debug flag for LTP).

By the way, I'm moving to Menlo Park at the end of the week that's  
why I'm not super-reactive by e-mail, sorry.

Regards,

Jean

?

On Jun 15, 2007, at 11:38 AM, Diehl, Matthew J wrote:

> Debugging tree parsers has not been implemented in ANTLRWorks yet.   
> I?m going to look into implementing it on the side with Jean?but  
> it might take me a while.  If anyone else wants to try and beat me,  
> lol, go ahead.  But, no, 1.0.2 does not support it.  We want to do  
> that as well as giving more support for StringTemplate files in  
> ANTLRWorks.
>
>
>
> Matt
>
>
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Chaudhari, Pranita, OPEE14
> Sent: Friday, June 15, 2007 4:14 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Debugging Tree Parser grammar using  
> ANTLRWorks
>
>
>
> I am new to ANTLRWorks need help !
>
>
>
> When I am trying to debug Tree Parser Grammar, window pops up  
> saying "ANTLRWorks does not support debugging tree Parser Grammar".  
> Does AntlrWorks 1.0.2 supports it?
>
>
>
> -Pranita
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/39e8b31a/attachment-0002.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: demo.zip
Type: application/zip
Size: 17073 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/39e8b31a/attachment-0001.zip 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/39e8b31a/attachment-0003.html 

From antlr-list at arizona-software.ch  Wed Jun 20 08:17:02 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 20 Jun 2007 08:17:02 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <46702156.9040404@gmail.com>
References: <466EA6C0.4060802@acm.org>
	<466ED404.100@gmail.com>	<528A647B-62BD-477E-945E-9289A86EE08D@arizona-software.ch>
	<200706130621.23950.rschulz@sonic.net> <46702156.9040404@gmail.com>
Message-ID: <7E1339EF-C949-48D3-B19B-23B1CB0D4CD2@arizona-software.ch>

It is not a broken API issue but simply how to hook up ANTLRWorks to  
the "Save" action in IntelliJ? If anyone knows how to do that (or has  
a contact at Jetbrains), it would be great.

Regards,

Jean

On Jun 13, 2007, at 9:54 AM, Taras Tielkes wrote:

> Randall R Schulz wrote:
>> On Tuesday 12 June 2007 23:43, Jean Bovet wrote:
>>> There is always a trade off between a complete and smooth  
>>> integration
>>> into IntelliJ and retaining as much work as possible: using the
>>> custom language would require much work that has been already spent
>>> in ANTLRWorks itself. But I would love to integrate ANTLRWorks more
>>> into IntelliJ.... if anybody knows how to interact with IntelliJ,
>>> please let me know.
>> I have no specific information to give you, but if you decide to  
>> embark on this, you might want to consider targeting IDEA 7.0,  
>> since apparently the JetBrains people do not place a high value on  
>> backward compatibility of the extension / plug-in API.
>> I know, e.g., that the Groovy plug-in they're producing works only  
>> on the early-access release of version 7.0.
>
> Can you give any specific examples where the API was broken in  
> recent years? In my experience *a lot* of effort is put in  
> maintaining compatibility. Jetbrains would certainly want to hear  
> it if something is broken.
>
> As for the new, in-development, Groovy plugin running only on 7.0:  
> perhaps the implementation uses new API features from IDEA 7.0?
>
> Rails 1.2 requires a fairly recent version of Ruby, does that mean  
> it has bad backward compatibility?
>
> -tt
>


From rschulz at sonic.net  Wed Jun 20 08:26:43 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 20 Jun 2007 08:26:43 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <7E1339EF-C949-48D3-B19B-23B1CB0D4CD2@arizona-software.ch>
References: <466EA6C0.4060802@acm.org> <46702156.9040404@gmail.com>
	<7E1339EF-C949-48D3-B19B-23B1CB0D4CD2@arizona-software.ch>
Message-ID: <200706200826.43202.rschulz@sonic.net>

On Wednesday 20 June 2007 08:17, Jean Bovet wrote:
> It is not a broken API issue but simply how to hook up ANTLRWorks to
> the "Save" action in IntelliJ? If anyone knows how to do that (or has
> a contact at Jetbrains), it would be great.

That's what the JetBrains "Plug-Ins" forum is for.

<http://www.intellij.net/forums/forum.jspa?forumID=18>


> Regards,
>
> Jean


Randall Schulz

From gevik at xs4all.nl  Wed Jun 20 08:34:35 2007
From: gevik at xs4all.nl (Gevik Babakhani)
Date: Wed, 20 Jun 2007 17:34:35 +0200 (CEST)
Subject: [antlr-interest] Possible bug in code generated for Lexer?
In-Reply-To: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
References: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
Message-ID: <13318.195.169.118.227.1182353675.squirrel@webmail.xs4all.nl>

I am new to this, but I think this is not a bug. See THE BOOK page 114/5.10
the SL3Token will be generated in the Parser code not in the Lexer.

Hope it helps.


> Hi
>
> I reported this before and got no response from anyone. Hopefully this
> time
> I'll be more lucky.
>
> I have the option:
>      TokenLabelType=SL3Token
>
> in my parser, where SL3Token extends CommonToken. [I want to save the name
> of included file in the tokens.]
>
> This lexer rule:
>
> INCLUDE
>     :    'include' (WS)? f=STRING ;
>
> generates code like this:
>
>   public final void mINCLUDE() throws RecognitionException {
>         try {
>             int _type = INCLUDE;
>             SL3Token f=null;
>      ..... stuff ......
>             f = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
> Token.DEFAULT_CHANNEL, fStart190, getCharIndex()-1);
> ..... more stuff .....
> }
>
> which unfortunately is a Java error since it's trying to assign a
> CommonToken to an SL3Token. I think this must be an Antlr  bug.
>
> Regards
>



From jimi at temporal-wave.com  Wed Jun 20 09:43:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 09:43:17 -0700
Subject: [antlr-interest] Possible bug in code generated for Lexer?
In-Reply-To: <13318.195.169.118.227.1182353675.squirrel@webmail.xs4all.nl>
References: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
	<13318.195.169.118.227.1182353675.squirrel@webmail.xs4all.nl>
Message-ID: <051466DAA0D608439E196797955018D76DEE@wavemachine.temporal-wave.com>

Yeah - I think that you need to implement your own token stream as well
as Token. I suspect that if all you want to do is track the file names
then keep a map somewhere in the lexer you can just store an input
reference and the file name (and anything else) then find the file using
the input of the token as a reference.

Because such things are awkward in C, I added some custom fields to the
standard token - a few integers and a void *, so strangely, it is
probably easier to do little things like this. However I don't think it
is difficult to override the stuff in Java - you just have to find the
right example to crib off.

I did think that you work this out from the input, but now I remember
that I wanted to talk to Ter about this for some reason, and now cannot
remember exactly what it was I was going to say but it may have been to
have a setId(String) String getId() pair in the IntStream interface, or
something similar.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gevik Babakhani
> Sent: Wednesday, June 20, 2007 8:35 AM
> To: Tim Clark
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Possible bug in code generated for
Lexer?
> 
> I am new to this, but I think this is not a bug. See THE BOOK page
> 114/5.10
> the SL3Token will be generated in the Parser code not in the Lexer.
> 
> Hope it helps.
> 
> 
> > Hi
> >
> > I reported this before and got no response from anyone. Hopefully
> this
> > time
> > I'll be more lucky.
> >
> > I have the option:
> >      TokenLabelType=SL3Token
> >
> > in my parser, where SL3Token extends CommonToken. [I want to save
the
> name
> > of included file in the tokens.]
> >


From aliaazimi at yahoo.com  Wed Jun 20 12:16:36 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 20 Jun 2007 12:16:36 -0700 (PDT)
Subject: [antlr-interest] A basic question!
Message-ID: <458355.98872.qm@web58103.mail.re3.yahoo.com>

Hello,
   
  I know this question is very basic for all of you. But I really appreciate if you tell me what is it that I do wrong. 
   
  I get an error message when I try to generate Lexer and Parser from a grammar which includes the following:
   
  prog: stat+ ;
  stat: expr NEWLINE {System.out.println($expr.value);}
  | ID '=' expr NEWLINE{memory.put($ID.text, new Integer($expr.value));}
  | NEWLINE
  ;
   
  The error message is as follows:
   
  Check Grammer failed:
  (116): C:\Documents and 
|Expr.g:11:20: unknown attribute for rule expr: value 
  Consult the console for more information.
  (116): C:\Documents and 
|Expr.g:12:20: unknown attribute for rule expr: value 
  Consult the console for more information.
   
  Thank you in advance for any advice.
   
  Al

       
---------------------------------
Be a better Heartthrob. Get better relationship answers from someone who knows.
Yahoo! Answers - Check it out. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/14f5a850/attachment.html 

From jimi at temporal-wave.com  Wed Jun 20 12:49:00 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jun 2007 12:49:00 -0700
Subject: [antlr-interest] A basic question!
In-Reply-To: <458355.98872.qm@web58103.mail.re3.yahoo.com>
References: <458355.98872.qm@web58103.mail.re3.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76DF1@wavemachine.temporal-wave.com>

$expr returns a reference to the rule, so if you want the text you
should try $expr.text (Java target). See examples and the book J.

 

Jim 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Wednesday, June 20, 2007 12:17 PM
To: antlr-interest
Subject: [antlr-interest] A basic question!

 

Hello,

 

I know this question is very basic for all of you. But I really
appreciate if you tell me what is it that I do wrong. 

 

I get an error message when I try to generate Lexer and Parser from a
grammar which includes the following:

 

prog: stat+ ;

stat: expr NEWLINE {System.out.println($expr.value);}

| ID '=' expr NEWLINE{memory.put($ID.text, new Integer($expr.value));}

| NEWLINE

;

 

The error message is as follows:

 

Check Grammer failed:

(116): C:\Documents and ...|Expr.g:11:20: unknown attribute for rule
expr: value 

Consult the console for more information.

(116): C:\Documents and ...|Expr.g:12:20: unknown attribute for rule
expr: value 

Consult the console for more information.

 

Thank you in advance for any advice.

 

Al

  

________________________________

Be a better Heartthrob. Get better relationship answers
<http://us.rd.yahoo.com/evt=48255/*http:/answers.yahoo.com/dir/_ylc=X3oD
MTI5MGx2aThyBF9TAzIxMTU1MDAzNTIEX3MDMzk2NTQ1MTAzBHNlYwNCQUJwaWxsYXJfTklf
MzYwBHNsawNQcm9kdWN0X3F1ZXN0aW9uX3BhZ2U-?link=list&sid=396545433> from
someone who knows.
Yahoo! Answers - Check it out. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070620/66bb47b2/attachment.html 

From parrt at cs.usfca.edu  Wed Jun 20 17:18:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 21 Jun 2007 10:18:52 +1000
Subject: [antlr-interest] Possible bug in code generated for Lexer?
In-Reply-To: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
References: <b6077b530706200744q6d5b4e59ja8fd8a2256c5fed5@mail.gmail.com>
Message-ID: <7AC9A1C9-F900-447D-AE85-E7D0B3131049@cs.usfca.edu>

hi. If that option is truly in the parser, it won't affect the lexer. ;)

Hmm...is it a combined grammar?  That should copy the token label  
type to the lexer.  If it doesn't, let me know, I'll add as bug.
Ter

From mark.mandel at gmail.com  Wed Jun 20 19:08:27 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Thu, 21 Jun 2007 12:08:27 +1000
Subject: [antlr-interest] Possible to conditionally skip token in rule?
In-Reply-To: <B7EA692E-D4AD-4587-83CC-B31725F5F733@cs.usfca.edu>
References: <4153ee230706192137o3f11324h2e42213c99169b2c@mail.gmail.com>
	<4E1A2E9A-ED86-44A9-BD40-BA248680D6C2@cs.usfca.edu>
	<4153ee230706192204x1318823dw57d8ebc4e93004db@mail.gmail.com>
	<B79F7F6B-9494-4158-AA3E-9BD7890FE3B6@cs.usfca.edu>
	<4153ee230706192242jcab70f7g7326d71f8ef5fbd3@mail.gmail.com>
	<B7EA692E-D4AD-4587-83CC-B31725F5F733@cs.usfca.edu>
Message-ID: <4153ee230706201908u4af9d23apab4912fb51dbd26c@mail.gmail.com>

So I cleaned up the grammar a little:

cfml
	:
	tag?
	;

tag
	:
		startTag
	;

startTag
scope tagScope;
	:
	(
	sto=START_TAG_OPEN
	{
		{$tagScope::currentName = $sto.text.toLowerCase().substring(1); }
	}
	stc=START_TAG_CLOSE
	tc=tagContent
	)
	;

tagContent
	:
	cfml
		(
		{ $tagScope::currentName.equals(input.LT(1).getText().toLowerCase().substring(2))
}?=> (endTag)
		|
		)
	;

endTag
	:
	END_TAG_OPEN^ END_TAG_CLOSE
	;

Which solved my multiple rule path issues, but I am still getting a
NoViableAltException on the test case of <a><c></a>

I've attached the debug parse tree, and you can see that when it hits
the predicate in tagContent, it doesn't skip back up to look at the
endTag rule for the previous tag.

Looks like I'm going to have to build the tree by hand... not sure
what else to do.

Thanks for the help,

Mark

On 6/20/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 20, 2007, at 3:42 PM, Mark Mandel wrote:
>
> > Nice to have you on Australia time :D
> >
> > With trying to do it with a predicate ? rule, I keep hitting a
> > FailedPredicateException, as it looks at the </a>, and then goes
> > 'well.. I have nothing at my end rule to match as well.. so umn.. I'm
> > going to throw an error.
>
> Hmm...that should never fail, it should only direct the parse.
> >
> > I tried trying to match it to EOF, but that didn't manage to work -
> > something like:
> >
> > agContent
> >       :
> >       tag* (
> >               {
> > $tagScope::currentName.equals(input.LT(1).getText().toLowerCase
> > ().substring(2))
> > }?
> >               (
> >                       endTag
> >               )
> >               |
> >               EOF
> >               )
> >
> > But I get noViableToken errors with that...
>
> Hmm...well, ( endTag) can be just endTag, but that's not it.  Should
> be ( {...}? endTag | ).  Doesn't that work?
>
> Ter
>
>


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: parsetree.png
Type: image/png
Size: 8053 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/0f9586d9/attachment-0001.png 

From mark.mandel at gmail.com  Wed Jun 20 20:13:31 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Thu, 21 Jun 2007 13:13:31 +1000
Subject: [antlr-interest] Possible to conditionally skip token in rule?
In-Reply-To: <4153ee230706201908u4af9d23apab4912fb51dbd26c@mail.gmail.com>
References: <4153ee230706192137o3f11324h2e42213c99169b2c@mail.gmail.com>
	<4E1A2E9A-ED86-44A9-BD40-BA248680D6C2@cs.usfca.edu>
	<4153ee230706192204x1318823dw57d8ebc4e93004db@mail.gmail.com>
	<B79F7F6B-9494-4158-AA3E-9BD7890FE3B6@cs.usfca.edu>
	<4153ee230706192242jcab70f7g7326d71f8ef5fbd3@mail.gmail.com>
	<B7EA692E-D4AD-4587-83CC-B31725F5F733@cs.usfca.edu>
	<4153ee230706201908u4af9d23apab4912fb51dbd26c@mail.gmail.com>
Message-ID: <4153ee230706202013j197c6875g9afab3346d3e0882@mail.gmail.com>

Just for interest's sake - I got it to work.

I had to do this:

tagContent
	:
	cfml
		(
		{ $tagScope::currentName.equals(input.LT(1).getText().toLowerCase().substring(2))
}?=> (endTag)
		)
	;
catch [FailedPredicateException fpe]
{
	retval.stop = input.LT(-1);
	retval.tree = (Object)adaptor.rulePostProcessing(root_0);
	adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
}

Otherwise, my rewrite rule would get a NullPointerException.

But this works *exactly* how I wanted it to, so I'm not going to change it.

Thanks for all the help Terrence.

Mark

On 6/21/07, Mark Mandel <mark.mandel at gmail.com> wrote:
> So I cleaned up the grammar a little:
>
> cfml
>         :
>         tag?
>         ;
>
> tag
>         :
>                 startTag
>         ;
>
> startTag
> scope tagScope;
>         :
>         (
>         sto=START_TAG_OPEN
>         {
>                 {$tagScope::currentName = $sto.text.toLowerCase().substring(1); }
>         }
>         stc=START_TAG_CLOSE
>         tc=tagContent
>         )
>         ;
>
> tagContent
>         :
>         cfml
>                 (
>                 { $tagScope::currentName.equals(input.LT(1).getText().toLowerCase().substring(2))
> }?=> (endTag)
>                 |
>                 )
>         ;
>
> endTag
>         :
>         END_TAG_OPEN^ END_TAG_CLOSE
>         ;
>
> Which solved my multiple rule path issues, but I am still getting a
> NoViableAltException on the test case of <a><c></a>
>
> I've attached the debug parse tree, and you can see that when it hits
> the predicate in tagContent, it doesn't skip back up to look at the
> endTag rule for the previous tag.
>
> Looks like I'm going to have to build the tree by hand... not sure
> what else to do.
>
> Thanks for the help,
>
> Mark
>
> On 6/20/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> >
> > On Jun 20, 2007, at 3:42 PM, Mark Mandel wrote:
> >
> > > Nice to have you on Australia time :D
> > >
> > > With trying to do it with a predicate ? rule, I keep hitting a
> > > FailedPredicateException, as it looks at the </a>, and then goes
> > > 'well.. I have nothing at my end rule to match as well.. so umn.. I'm
> > > going to throw an error.
> >
> > Hmm...that should never fail, it should only direct the parse.
> > >
> > > I tried trying to match it to EOF, but that didn't manage to work -
> > > something like:
> > >
> > > agContent
> > >       :
> > >       tag* (
> > >               {
> > > $tagScope::currentName.equals(input.LT(1).getText().toLowerCase
> > > ().substring(2))
> > > }?
> > >               (
> > >                       endTag
> > >               )
> > >               |
> > >               EOF
> > >               )
> > >
> > > But I get noViableToken errors with that...
> >
> > Hmm...well, ( endTag) can be just endTag, but that's not it.  Should
> > be ( {...}? endTag | ).  Doesn't that work?
> >
> > Ter
> >
> >
>
>
> --
> E: mark.mandel at gmail.com
> W: www.compoundtheory.com
>
>


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From tzuchien.chiu at gmail.com  Thu Jun 21 02:11:51 2007
From: tzuchien.chiu at gmail.com (Tzu-Chien Chiu)
Date: Thu, 21 Jun 2007 11:11:51 +0200
Subject: [antlr-interest] The Python target is in fact Jython target?
Message-ID: <4d77c5f20706210211r558e9c75p965933f489e55a0@mail.gmail.com>

I used the C grammar downlowd from this page:

   http://www.antlr.org/grammar/list

The one posted by Terence Parr on Jul 19, 2006:

  http://www.antlr.org/grammar/1153358328744/c.g

It seems to be written for Jython. Here is the difference with
untime/Python/examples/C/C.g

42,47c41,42
< 	Set types; // only track types in order to get parser working
< }
<
< @header {
< import java.util.Set;
< import java.util.HashSet;
---
> 	types;
51,59c46,52
< 	boolean isTypeName(String name) {
< 		for (int i = Symbols_stack.size()-1; i>=0; i--) {
< 			Symbols_scope scope = (Symbols_scope)Symbols_stack.get(i);
< 			if ( scope.types.contains(name) ) {
< 				return true;
< 			}
< 		}
< 		return false;
< 	}
---
>     def isTypeName(self, name):
>         for scope in reversed(self.Symbols_stack):
>             if name in scope.types:
>                 return True
>
>         return False
>
65c58
<   $Symbols::types = new HashSet();
---
>   $Symbols::types = set()

From jose.sanleandro at ventura24.es  Thu Jun 21 03:18:19 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Thu, 21 Jun 2007 12:18:19 +0200
Subject: [antlr-interest] Problem with $type in final ANTLR 3.0
Message-ID: <200706211218.22316.jose.sanleandro@ventura24.es>

Hi,

I've been using a grammar which used $type keyword (the replacement of ANTLR2 
setType()[1]) to guide the lexer and define explicitly the type of the 
matched token:

fragment AT
    :  (  ('@static')    => STATIC {$type = STATIC;}
        | ('@isa')       => ISA {$type = ISA;}
        | ('@isatype')   => ISATYPE  {$type = ISATYPE;}
        | '@')
    ;

With ANTLR 3.0 (Relased May 17), I get compilation errors in the generated 
lexer:

[..]
            switch (alt1) {
                case 1 :
                    // PerComment.g:575:11: ( '@static' )=> STATIC
                    {
                    mSTATIC(); if (failed) return ;
                    if ( backtracking==0 ) {
                      _type = STATIC;
                    }
[..]

The _type variable is not defined.

This issue has a different flavour on non-"fragment" rules:

[..]
            this.type = _type;
        }
        finally {
        }
    }
    // $ANTLR end AT

The compilation stops since type is not a declared attribute.

Do you have any suggestions?

Kind regards,
Jose.

From timgclark at gmail.com  Thu Jun 21 03:57:48 2007
From: timgclark at gmail.com (Tim Clark)
Date: Thu, 21 Jun 2007 11:57:48 +0100
Subject: [antlr-interest] The right way to invoke templates with null
	arguments?
Message-ID: <b6077b530706210357v77dfc84bp4f9421e103982b7@mail.gmail.com>

Hi

My application is outputting 'assembler code' for a stack machine.
Corresponding to this tree parser rule:

-------------A------------------
ifStatement
    :
    ^(IF_STAT e=expr s1=statement s2=statement?)
     -> ifStat(
             expr={$e.st},
             stat1={$s1.st},
             stat2={$s2.st},
             L1={myHelper.nextLabel()},
             L2={myHelper.nextLabel()}
         )
-------------------------------

I have this template:

-------------------------------
ifStat(expr,stat1,stat2,L1,L2) ::= <<
    <expr>
<if(stat2)>
    ifFalse <L1>
    <stat1>
    goto <L2>
    <L1>:
    <stat2>
    <L2>:
<else>
    ifFalse <L1>
    <stat1>
    <L1>:
<endif>

>>
-------------------------------

so that the code generated for

if(expr) stat

should be something like this:
-------------------------------
<expr>        // leaves result on stack
ifFalse L_1  // consumes top of stack
<stat1>
L_1:
-------------------------------

and the code generated for

if(expr) stat1 else stat2

should be something like this:
-------------------------------
<expr>
ifFalse L_1
<stat1>
goto L_2
L_1:
<stat2>
L_2:
-------------------------------

However, in the first case (no else clause) the template rewrite part of the
code generated for the rule throws a NullPointerException, because $s2 is
null.


If I change the rule to:

--------------B-----------------
ifStat
    :
    ^(IF_STAT e=expr s1=statement s2=statement?)
     -> {$e2 != null}?
         ifStat(
             expr={$e.st},
             stat1={$s1.st},
             stat2={$s2.st},
             L1={myHelper.nextLabel()},
             L2={myHelper.nextLabel()}
         )
    -> ifStat(
            expr={$e.st},
            stat1={$s1.st},
            L1={myHelper.nextLabel()}
        )
    ;
-------------------------------

then Antlr complains with this message: "missing attribute access on rule
scope: s2". This is unfortunate, because it seems to me that this is the
right way to express this. [Manually changing the parser code generated for
form (A) to test $s2 for nullness does actually makes it work.]

It doesn't help to change the semantic predicate to {$s2.st}?  (which
persuades Anlr to accept it), because it's $s2 that is null, not $s2.st, so
the exception still happens.

It would seem that the only solution is to change the rule to this:

----------------C---------------
ifStat
options{ backtrack=true;}
    :
    ^(IF_STAT e=expr s1=statement s2=statement)
     -> ifStat(
             expr={$e.st},
             stat1={$s1.st},
             stat2={$s2.st},
             L1={myHelper.nextLabel()},
             L2={myHelper.nextLabel()}
         )
    |
    ^(IF_STAT e=expr s1=statement)
    -> ifStat(
            expr={$e.st},
            stat1={$s1.st},
            L1={myHelper.nextLabel()}
        )
    ;
-------------------------------

The backtracking option is necessary, otherwise Anlr sees it as ambiguous.
This version does work. I don't think it's the right way, and for more
complicated constructions like for statements, or case statements, there are
many more possible alternatives to cover.

My question is this: is this how it's intended to be, or is there a bug,
preventing what I think is the right way from working?


The obvious solution that springs to mind, to change STAttrMap (in the Antlr
code generator) like this:

    public static class STAttrMap extends HashMap {
      public STAttrMap put(String attrName, Object value) {
        if(value != null) super.put(attrName, value);
        return this;
      }
      public STAttrMap put(String attrName, int value) {
        super.put(attrName, new Integer(value));
        return this;
      }
    }

unfortunately does not work, because one is invoking templates with things
like $e.st, where it's $e that may be null, not $e.st.

Regards
Tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/535fc439/attachment.html 

From pink at odahoda.de  Thu Jun 21 05:32:15 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 21 Jun 2007 14:32:15 +0200
Subject: [antlr-interest] The Python target is in fact Jython target?
References: <4d77c5f20706210211r558e9c75p965933f489e55a0@mail.gmail.com>
Message-ID: <f5dr4f$5kd$1@sea.gmane.org>

Tzu-Chien Chiu wrote:

> I used the C grammar downlowd from this page:
> 
>    http://www.antlr.org/grammar/list
> 
> The one posted by Terence Parr on Jul 19, 2006:
> 
>   http://www.antlr.org/grammar/1153358328744/c.g
> 
> It seems to be written for Jython.

No, it is for Java. Just use the C grammar from the Python examples as a
starting point.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From jaluber at gmx.de  Thu Jun 21 06:05:33 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 21 Jun 2007 15:05:33 +0200
Subject: [antlr-interest] Is there an ANTLR3 grammar for ANTLR3 grammars
	already?
Message-ID: <467A779D.5020209@gmx.de>

Hello,

the subject tells it all, but to clarify: Right now ANTLR3 uses an ANTLR
2.7.7 grammar for the analysis of ANTLR3 grammars. Terence planned to
change that. Has he built one already? If yes, where can I download it?

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Thu Jun 21 08:04:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jun 2007 08:04:13 -0700
Subject: [antlr-interest] Problem with $type in final ANTLR 3.0
In-Reply-To: <200706211218.22316.jose.sanleandro@ventura24.es>
References: <200706211218.22316.jose.sanleandro@ventura24.es>
Message-ID: <051466DAA0D608439E196797955018D76DF9@wavemachine.temporal-wave.com>

I see what You are trying to construct I think, but this is not the way
to go about it as best I can tell without your full grammar.

It seesm that you want a placeholding token that recognizes the keywords
that begin with @ and sets them to their particular type. I presume that
you have some reason for not just listing them as:

STATIC  : '@static' ;
ISA	  : '@isa' ;
ISATYPE : '@isatype' ;
AT  : '@' ;

When you have a lot of things like this you can end up with more code
than you expect I have found. So, I tend to do this:

tokens
{
	STATIC;
	ISA;
	ISATYPE;
}

AT : '@'
	(
		  'static' 	{ $type = STATIC; }
		| 'isa'	{ $type = ISA;	}
		| 'isatype'	{ $type = ISATYPE;}
		|		{ $type = AT; // Not needed but
documents the rule }
	)
	;

This tends to generate simpler code and gives you the token types you
want back at the parser :-). 

The reason that your first attempt does nto work is because there is no
token for a fragment rule per se, hence the code generated by the $type
has not token being constructed that it can affect the type of so you
get this error. In the second instance, you are trying to use predicates
from a rule that is not a fragment to enter into a non fragment rule.

You can pick up things like the text associated with a fragment rule
like this:

FRED : '"' bodytext=STRING_GUTS '"'
		{ System.out.println("text is " + $bodytext.text); }
	;

fragment
STRING_GUTS :	( EscapeSequence | ~('\\'|'"') )* ;


fragment
EscapeSequence
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
	;

Which can tends to fool you into thinking there is an actual token
emitted by the fragment. You can of course use it to construct your own
token, which you can emit() in the lexer action.

Hope that helps,

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jose San Leandro
> Sent: Thursday, June 21, 2007 3:18 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with $type in final ANTLR 3.0
> 
> Hi,
> 
> I've been using a grammar which used $type keyword (the replacement of
> ANTLR2
> setType()[1]) to guide the lexer and define explicitly the type of the
> matched token:
> 
> fragment AT
>     :  (  ('@static')    => STATIC {$type = STATIC;}
>         | ('@isa')       => ISA {$type = ISA;}
>         | ('@isatype')   => ISATYPE  {$type = ISATYPE;}
>         | '@')
>     ;
> 
> With ANTLR 3.0 (Relased May 17), I get compilation errors in the
> generated
> lexer:
> 
> [..]
>             switch (alt1) {
>                 case 1 :
>                     // PerComment.g:575:11: ( '@static' )=> STATIC
>                     {
>                     mSTATIC(); if (failed) return ;
>                     if ( backtracking==0 ) {
>                       _type = STATIC;
>                     }
> [..]
> 
> The _type variable is not defined.
> 
> This issue has a different flavour on non-"fragment" rules:
> 
> [..]
>             this.type = _type;
>         }
>         finally {
>         }
>     }
>     // $ANTLR end AT
> 
> The compilation stops since type is not a declared attribute.
> 
> Do you have any suggestions?
> 
> Kind regards,
> Jose.

From pink at odahoda.de  Thu Jun 21 08:24:23 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 21 Jun 2007 17:24:23 +0200
Subject: [antlr-interest] Is there an ANTLR3 grammar for ANTLR3 grammars
	already?
References: <467A779D.5020209@gmx.de>
Message-ID: <f5e577$elm$1@sea.gmane.org>

Johannes Luber wrote:

> the subject tells it all, but to clarify: Right now ANTLR3 uses an ANTLR
> 2.7.7 grammar for the analysis of ANTLR3 grammars. Terence planned to
> change that. Has he built one already? If yes, where can I download it?

He's working on it:
<http://www.antlr.org/pipermail/antlr-dev/2007-May/001213.html>.
Dunno, what the current state is.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From amol.neurgaonkar at gmail.com  Thu Jun 21 09:41:22 2007
From: amol.neurgaonkar at gmail.com (Amol Neurgaonkar)
Date: Thu, 21 Jun 2007 09:41:22 -0700
Subject: [antlr-interest] Need Help - Not able to use Java1.5 grammar
	available on site with ANTLRv3
In-Reply-To: <a0219bfb0706210849r4552a8c2v39bf3dc08d504f8f@mail.gmail.com>
References: <a0219bfb0706210849r4552a8c2v39bf3dc08d504f8f@mail.gmail.com>
Message-ID: <a0219bfb0706210941x356cce52rb5f150b5412c0efe@mail.gmail.com>

Hi All,

Previously I had used ANTLR 2.7.5 on Java 1.5 grammar to generate the Lexer
and Parser classes in Java. However the Parser was not recognizing
Annotations feature from Java 1.5
Inorder to resolve that problem, I am trying to use ANTLRWorks / ANTLRv3
with the Java 1.5 grammar provided by Terence
*(http://www.antlr.org/grammar/1152141644268/Java.g)* which
contains the Annotations rules so that the new Parser will be able to parse
Annotations, however receiving error while generating the code.

The Grammar Check by ANTLRWorks shows successful, but the Generate Code
feature fails. The exception caught is shown below.

*[09:39:21] Java.g:1:16360: unexpected char: ' '
at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
at antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java
:161)
at antlr.TokenBuffer.fill(TokenBuffer.java:69)
at antlr.TokenBuffer.LA(TokenBuffer.java:80)
at antlr.LLkParser.LA(LLkParser.java:52)
at org.antlr.tool.ANTLRParser.actions(Unknown Source)
at org.antlr.tool.ANTLRParser.grammar(Unknown Source)
at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)

[09:39:21] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
C:\antlr3.0\Java.g:2:1: unexpected token: null
[09:39:21] error(150):  grammar file C:\antlr3.0\Java.g has no rules
*


Please provide any info/help as to how I can fix this problem or if any
later version of Java 1.5 grammar tested on the ANTLR v3`s latest version is
available.

Thanks,
Amol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/25e3d5e2/attachment.html 

From belayda at gmail.com  Thu Jun 21 10:18:24 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Thu, 21 Jun 2007 10:18:24 -0700
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?
Message-ID: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>

Hi,

I needed to create some actions and functions that you the Java modulus
operator.  I expected Antlr 3 to ignore it but I'm getting an error when I
compile my grammar that says:

invalid StringTemplate % shorthand syntax '%'

Why isn't Antlr just passing over the code in the action?  In  general,  I
found that whenever '%' was used in code in an action or in the @members
section, I get the above error.  Am I missing something here?

A simple example is below.

regards,
Bernardo


-------------------------------

grammar Mytest;

options{
output=AST;
}


prog : lhs=MYINT (MYCOMMA MYINT)*
     {
            Integer temp = new Integer($lhs.text);
            int i = temp.intValue();
            int j = i % 16;
     }
     ;

MYINT : ('0'..'9')+
      ;

MYCOMMA : ','
        ;

WS : ('\r'|'\n'|' '|'\t')+ {$channel=HIDDEN;}
   ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/a70f51b6/attachment.html 

From jimi at temporal-wave.com  Thu Jun 21 10:39:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jun 2007 10:39:42 -0700
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?
In-Reply-To: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
References: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76DFD@wavemachine.temporal-wave.com>

ANTLR has to look through your action to see if you referenced variables
like your $lhs. It does not know what your action language is so when it
sees a % it thinks you are trying to reference a string template. All
you have to do is escape that % with:

 

I \% 16;

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bernardo Elayda
Sent: Thursday, June 21, 2007 10:18 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?

 

Hi,

 

I needed to create some actions and functions that you the Java modulus
operator.  I expected Antlr 3 to ignore it but I'm getting an error when
I compile my grammar that says:

 

invalid StringTemplate % shorthand syntax '%'

 

Why isn't Antlr just passing over the code in the action?  In  general,
I found that whenever '%' was used in code in an action or in the
@members section, I get the above error.  Am I missing something here? 

  

A simple example is below.

 

regards,

Bernardo

 

 

-------------------------------

grammar Mytest;

options{
output=AST;
}


prog : lhs=MYINT (MYCOMMA MYINT)*
     {
            Integer temp = new Integer($lhs.text);
            int i = temp.intValue();
            int j = i % 16;
     }
     ;

MYINT : ('0'..'9')+
      ;

MYCOMMA : ','
        ;

WS : ('\r'|'\n'|' '|'\t')+ {$channel=HIDDEN;}
   ;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/4d4c1483/attachment.html 

From win at wincent.com  Thu Jun 21 10:43:04 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 21 Jun 2007 19:43:04 +0200
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?
In-Reply-To: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
References: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
Message-ID: <8564AFBF-5034-4357-B821-70B7547ACC1C@wincent.com>

El 21/6/2007, a las 19:18, Bernardo Elayda escribi?:

> invalid StringTemplate % shorthand syntax '%'

You're getting this error because % has special meaning for  
StringTemplate, and ANTLR uses StringTemplate under the covers.

In most cases you can escape the special character, so in your  
example you would need to change:

> prog : lhs=MYINT (MYCOMMA MYINT)*
>     {
>            Integer temp = new Integer($lhs.text);
>            int i = temp.intValue();
>            int j = i % 16;
>     }
>     ;

To:

> prog : lhs=MYINT (MYCOMMA MYINT)*
>     {
>            Integer temp = new Integer($lhs.text);
>            int i = temp.intValue();
>            int j = i \% 16;
>     }
>     ;

I think it would be nice if ANTLR shielded grammar authors from that  
particular implementation detail, but it's the way things are for now.

Be aware that there are some lexer-related cases in which even  
escaping the special characters doesn't work (see <http:// 
www.antlr.org/pipermail/antlr-interest/2007-June/021212.html>).

Cheers,
Wincent


From jimi at temporal-wave.com  Thu Jun 21 11:12:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jun 2007 11:12:56 -0700
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?
In-Reply-To: <8564AFBF-5034-4357-B821-70B7547ACC1C@wincent.com>
References: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
	<8564AFBF-5034-4357-B821-70B7547ACC1C@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76DFE@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Thursday, June 21, 2007 10:43 AM
> To: Bernardo Elayda
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 doesn't like '%' operator in
> actions?
> 
> El 21/6/2007, a las 19:18, Bernardo Elayda escribi?:
> 
> > invalid StringTemplate % shorthand syntax '%'
> 
> 
> I think it would be nice if ANTLR shielded grammar authors from that
> particular implementation detail, but it's the way things are for now.

Well, short of having a parser for every possible action target I don't see what it could do.

> 
> Be aware that there are some lexer-related cases in which even
> escaping the special characters doesn't work (see <http://
> www.antlr.org/pipermail/antlr-interest/2007-June/021212.html>).

This isn't what you think it is. It isn't a string template reference, it is because the search for $reference in the action code is being applied to that @lexer::header text for some reason, but not to the @header text. I thinks you are trying to reference $Id and then gives an error that you are trying to reference this outside a rule.

This probably needs a bug report Ter?

Jim

From yiqing at objectivity.com  Thu Jun 21 13:08:04 2007
From: yiqing at objectivity.com (YiQing Yang)
Date: Thu, 21 Jun 2007 13:08:04 -0700
Subject: [antlr-interest] A simple question for v2.7.7
Message-ID: <001901c7b43f$e0b58400$222815ac@objy.com>

Hi,

 

Sorry that I am still asking questions for V2 while everyone else seems
using V3 right now. I wish I could use V3 too, but C++ target is not
supported yet.

 

My question is very simple. Is label to a rule reference allowed in V2? 

 

For example, in the following parser rule, I can put a label for the token
reference NAME and use it in the action to print the text of the token. 

 

operator_symbl_name

  : operator_symbol

  | n:NAME {if (n!=0) cout << "Operator Name: " << n.get()->getText() <<
endl;;}

  ;

 

I would like to do the same thing for the rule reference "operator_symbol".
I tried the following:

 

operator_symbl_name

  : s:operator_symbol {cout << "Operator Symbol: " s.get()->getText() <<
endl;}

  | n:NAME {cout << "Operator Name: " << n.get()->getText() << endl;}

  ;

 

The parser generation does not give me any error. But when compiling the
parser, it gives me the error 

 

error C2065: 's' : undeclared identifier

 

I know my way to use "s" in the action code is wrong since it is not a token
reference. But the error showed that it is not even declared.

 

The ANTLR Reference Manual says that "Any atomic or rule reference
production element can be labeled with an identifier." But how to use a
lable for a rule reference?

 

I would appreciate if anyone could give me an answer. 

 

Last time when I asked when the C++ will be supported in V3, I got the
answer that it will be around June. Any updates for the V3 C++ delivery time
frame?

 

Thanks a lot,

 

Yiqing

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/2606a2f2/attachment.html 

From paul at paulkeir.com  Thu Jun 21 13:10:35 2007
From: paul at paulkeir.com (Paul Keir)
Date: Thu, 21 Jun 2007 21:10:35 +0100
Subject: [antlr-interest] What is $Symbols
Message-ID: <467ADB3B.4090609@paulkeir.com>

Hi,

In the ANTLR C Grammar there is a global scope:

scope Symbols { Set types; }

which is updated when new typedefs are discovered during parsing. A 
reference to $Symbols becomes a reference to a java.util.stack, and I'm 
often using things like $Symbols.size() and $Symbols[i]::types.

Well there's the background, but could someone be so kind as to tell me 
what exactly it's a stack of? I'm passing it to my own java object, and 
I'd like to iterate over its contents like

public void my_method(Stack sym) {
            for (Object depth : sym)
                depth.types.add("hello");   // e.g.
}

But that doesn't work. The 'for' bit is fine, but the next 'add' line 
results in a 'cannot find symbol' error. I'd like to get more specific 
than 'Object', but there's my problem. Can anyone help?

Paul


From garapa1 at yahoo.com  Thu Jun 21 14:02:44 2007
From: garapa1 at yahoo.com (Cameron Elliott)
Date: Thu, 21 Jun 2007 14:02:44 -0700
Subject: [antlr-interest] ANBF grammar for Antlr?
In-Reply-To: <mailman.0.1182459016.22102.antlr-interest@antlr.org>
References: <mailman.0.1182459016.22102.antlr-interest@antlr.org>
Message-ID: <C18B2E455A4F4E009CF2DCD3C9A42645@x60t>


Hello, I'm about to embark on a project of implementing a ABNF grammar for
Antlr.  That is an ABNF parser, not a grammar for a spec described using
ABNF. (Such as SIP)

Why? Well, I need an ABNF parser to be able to do some
speech recognition related work I'm interested in.
(I would like to write speech grammars in ABNF, and
generate output suitable for the speech recognition
engines I'm interested in.)
See: http://www.w3.org/TR/speech-grammar/ to learn
about how ABNF is used to define speech grammars under SRGS.

(The work I'm doing is related to using speech to work
mathematics, and hopefully soon to start programming)
http://ssli.ee.washington.edu/~camkego/cammath/


If anyone knows of a freely available grammar for Antlr, I would
be very appreciative about any information.

Sincerely,
Cameron Elliott



-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
antlr-interest-request at antlr.org
Sent: Thursday, June 21, 2007 1:50 PM
To: garapa1 at yahoo.com
Subject: Welcome to the "antlr-interest" mailing list

Welcome to the antlr-interest at antlr.org mailing list!

To post to this list, send your email to:

  antlr-interest at antlr.org

General information about the mailing list is at:

  http://www.antlr.org/mailman/listinfo/antlr-interest

If you ever want to unsubscribe or change your options (eg, switch to
or from digest mode, change your password, etc.), visit your
subscription page at:

 
http://www.antlr.org/mailman/options/antlr-interest/garapa1%40yahoo.com


You can also make such adjustments via email by sending a message to:

  antlr-interest-request at antlr.org

with the word `help' in the subject or body (don't include the
quotes), and you will get back a message with instructions.

You must know your password to change your options (including changing
the password, itself) or to unsubscribe.  It is:

  Mike9999

Normally, Mailman will remind you of your antlr.org mailing list
passwords once every month, although you can disable this if you
prefer.  This reminder will also include instructions on how to
unsubscribe or change your account options.  There is also a button on
your options page that will email your current password to you.


From bace.spam at gmx.net  Thu Jun 21 17:07:40 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Fri, 22 Jun 2007 02:07:40 +0200
Subject: [antlr-interest] Duplicate nodes on a parse tree
Message-ID: <20070622000740.93020@gmx.net>

Hi!

Vadim Tropashko vadimtro at yahoo.com wrote:
> OK, I see the coloring (when tree is in chart form).
> It must be the Tree.getType() method that does this.
(http://www.antlr.org/pipermail/antlr-interest/2007-March/019566.html)

I'm using the ParseTree and was wondering if there is a way to remove these duplicate nodes (for backtracking) from the ParseTree? As I checked the above described getType() for each node in the tree, I always got 0 (zero).


Thanks folks for you help!!!
Best,
Markus
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From parrt at cs.usfca.edu  Thu Jun 21 17:15:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:15:26 +1000
Subject: [antlr-interest] What is $Symbols
In-Reply-To: <467ADB3B.4090609@paulkeir.com>
References: <467ADB3B.4090609@paulkeir.com>
Message-ID: <FB88CF20-CDF5-4F4D-8B8C-F0C86CB80F9D@cs.usfca.edu>


On Jun 22, 2007, at 6:10 AM, Paul Keir wrote:

> Hi,
>
> In the ANTLR C Grammar there is a global scope:
>
> scope Symbols { Set types; }
>
> which is updated when new typedefs are discovered during parsing. A  
> reference to $Symbols becomes a reference to a java.util.stack, and  
> I'm often using things like $Symbols.size() and $Symbols[i]::types.
>
> Well there's the background, but could someone be so kind as to  
> tell me what exactly it's a stack of?

It's a stack of objects whose fields are inside the scope def.  Here,  
it's only one.

> I'm passing it to my own java object, and I'd like to iterate over  
> its contents like
>
> public void my_method(Stack sym) {
>            for (Object depth : sym)
>                depth.types.add("hello");   // e.g.
> }

Upon entry to a rule that says "scope Symbols;" you get a new push  
and then pop at end.

> But that doesn't work. The 'for' bit is fine, but the next 'add'  
> line results in a 'cannot find symbol' error. I'd like to get more  
> specific than 'Object', but there's my problem. Can anyone help?

Note that depth is type object.  Java will need a cast.  Look at the  
output code and see what's up.

Ter

From parrt at cs.usfca.edu  Thu Jun 21 17:25:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:25:34 +1000
Subject: [antlr-interest] The right way to invoke templates with null
	arguments?
In-Reply-To: <b6077b530706210357v77dfc84bp4f9421e103982b7@mail.gmail.com>
References: <b6077b530706210357v77dfc84bp4f9421e103982b7@mail.gmail.com>
Message-ID: <FB22AAEF-C13C-445C-A2EC-2F8B47F36617@cs.usfca.edu>


On Jun 21, 2007, at 8:57 PM, Tim Clark wrote:

> Hi
>
> My application is outputting 'assembler code' for a stack machine.
> Corresponding to this tree parser rule:
>
> -------------A------------------
> ifStatement
>     :
>     ^(IF_STAT e=expr s1=statement s2=statement?)
>      -> ifStat(
>              expr={$e.st},
>              stat1={$s1.st},
>              stat2={$s2.st},
>              L1={myHelper.nextLabel ()},
>              L2={myHelper.nextLabel()}
>          )
> -------------------------------
>

Hi. the problem is that s2 may be null since it's optional. I've not  
got a good way to say $s2.st in the {...} w/o getting an error (have  
to have a cumbersome conditional in there).  I've got a bug report in  
about this.

Ter

From parrt at cs.usfca.edu  Thu Jun 21 17:26:23 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:26:23 +1000
Subject: [antlr-interest] Is there an ANTLR3 grammar for ANTLR3 grammars
	already?
In-Reply-To: <467A779D.5020209@gmx.de>
References: <467A779D.5020209@gmx.de>
Message-ID: <1062D44D-69D8-4B05-9715-F2E7FC207C81@cs.usfca.edu>

I'm still converting it.  All of the #(...) actions are a pain!
Ter
On Jun 21, 2007, at 11:05 PM, Johannes Luber wrote:

> Hello,
>
> the subject tells it all, but to clarify: Right now ANTLR3 uses an  
> ANTLR
> 2.7.7 grammar for the analysis of ANTLR3 grammars. Terence planned to
> change that. Has he built one already? If yes, where can I download  
> it?
>
> Best regards,
> Johannes Luber


From parrt at cs.usfca.edu  Thu Jun 21 17:29:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:29:04 +1000
Subject: [antlr-interest] Need Help - Not able to use Java1.5 grammar
	available on site with ANTLRv3
In-Reply-To: <a0219bfb0706210941x356cce52rb5f150b5412c0efe@mail.gmail.com>
References: <a0219bfb0706210849r4552a8c2v39bf3dc08d504f8f@mail.gmail.com>
	<a0219bfb0706210941x356cce52rb5f150b5412c0efe@mail.gmail.com>
Message-ID: <B1360E59-05D8-4D7A-A03B-B40588DF2BB0@cs.usfca.edu>

Hi. there is something wrong with your input.  For one you can see no  
newlines given char position 15360 and line 1.

Ter
On Jun 22, 2007, at 2:41 AM, Amol Neurgaonkar wrote:

>
> Hi All,
>
> Previously I had used ANTLR 2.7.5 on Java 1.5 grammar to generate  
> the Lexer
> and Parser classes in Java. However the Parser was not recognizing
> Annotations feature from Java 1.5
> Inorder to resolve that problem, I am trying to use ANTLRWorks /  
> ANTLRv3
> with the Java 1.5 grammar provided by Terence
> (http://www.antlr.org/grammar/1152141644268/Java.g) which
> contains the Annotations rules so that the new Parser will be able  
> to parse
> Annotations, however receiving error while generating the code.
>
> The Grammar Check by ANTLRWorks shows successful, but the Generate  
> Code
> feature fails. The exception caught is shown below.
>
> [09:39:21] Java.g:1:16360: unexpected char: ' '
> at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
> at antlr.TokenStreamRewriteEngine.nextToken 
> (TokenStreamRewriteEngine.java:161)
> at antlr.TokenBuffer.fill(TokenBuffer.java :69)
> at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> at antlr.LLkParser.LA(LLkParser.java:52)
> at org.antlr.tool.ANTLRParser.actions(Unknown Source)
> at org.antlr.tool.ANTLRParser.grammar(Unknown Source)
> at org.antlr.tool.Grammar.setGrammarContent (Unknown Source)
> at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown  
> Source)
> at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar  
> (Unknown Source)
> at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown  
> Source)
> at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
> at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> at java.lang.Thread.run(Unknown Source)
>
> [09:39:21] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:  
> C:\antlr3.0\Java.g:2:1: unexpected token: null
> [09:39:21] error(150):  grammar file C:\antlr3.0\Java.g has no rules
>
>
>
> Please provide any info/help as to how I can fix this problem or if  
> any later version of Java 1.5 grammar tested on the ANTLR v3`s  
> latest version is available.
>
> Thanks,
> Amol.
>


From parrt at cs.usfca.edu  Thu Jun 21 17:33:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:33:16 +1000
Subject: [antlr-interest] Antlr 3 doesn't like '%' operator in actions?
In-Reply-To: <051466DAA0D608439E196797955018D76DFE@wavemachine.temporal-wave.com>
References: <3e5ed32f0706211018s1ee977b5o770b272d71abaf8a@mail.gmail.com>
	<8564AFBF-5034-4357-B821-70B7547ACC1C@wincent.com>
	<051466DAA0D608439E196797955018D76DFE@wavemachine.temporal-wave.com>
Message-ID: <FA87B671-4DF6-402B-A67A-966F5B61D00B@cs.usfca.edu>


On Jun 22, 2007, at 4:12 AM, Jim Idle wrote:
>> Be aware that there are some lexer-related cases in which even
>> escaping the special characters doesn't work (see <http://
>> www.antlr.org/pipermail/antlr-interest/2007-June/021212.html>).
>
> This isn't what you think it is. It isn't a string template  
> reference, it is because the search for $reference in the action  
> code is being applied to that @lexer::header text for some reason,  
> but not to the @header text. I thinks you are trying to reference  
> $Id and then gives an error that you are trying to reference this  
> outside a rule.
>
> This probably needs a bug report Ter?

added

http://www.antlr.org:8888/browse/ANTLR-150

Ter

From parrt at cs.usfca.edu  Thu Jun 21 17:36:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 10:36:49 +1000
Subject: [antlr-interest] Duplicate nodes on a parse tree
In-Reply-To: <20070622000740.93020@gmx.net>
References: <20070622000740.93020@gmx.net>
Message-ID: <C6F1B330-95CE-4FB4-B95E-2F5E0349422B@cs.usfca.edu>

Hmm...shoot. Ok, it needs to have a constructor with a pointer to the  
parser itself so it can ask for the backtracking state.  can you try  
that out?

Ter
On Jun 22, 2007, at 10:07 AM, Markus Kuhla wrote:

> Hi!
>
> Vadim Tropashko vadimtro at yahoo.com wrote:
>> OK, I see the coloring (when tree is in chart form).
>> It must be the Tree.getType() method that does this.
> (http://www.antlr.org/pipermail/antlr-interest/2007-March/ 
> 019566.html)
>
> I'm using the ParseTree and was wondering if there is a way to  
> remove these duplicate nodes (for backtracking) from the ParseTree?  
> As I checked the above described getType() for each node in the  
> tree, I always got 0 (zero).
>
>
> Thanks folks for you help!!!
> Best,
> Markus
> -- 
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail


From matthew.j.diehl at intel.com  Thu Jun 21 18:02:39 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Thu, 21 Jun 2007 18:02:39 -0700
Subject: [antlr-interest] The right way to invoke templates with
	nullarguments?
In-Reply-To: <FB22AAEF-C13C-445C-A2EC-2F8B47F36617@cs.usfca.edu>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2021D6968@orsmsx417.amr.corp.intel.com>

>(have to have a cumbersome conditional in there).

I've decided (I'm new though) that the best way to setup your
'cumbersome conditional' is whenever there's a conditional part, set it
equal to something (s2 like you did below), and then in the
StringTemplate section, define it as:

stat2={s2!=null?$s2.st:false}

Instead of false, you can also probably try null.  This allows you so
that when you write the group file, <if(stat1)>other stuff<stat1><endif>
can be used as well.  When I was setting it as:
stat2={s2!=null?$s2.st:""} it would always return true for
<if(stat1)><endif> since it was not null or false, and I would have to
make another variable called hasStat2 that was a boolean....  Anyway, if
there're any better ideas, I'd like to know, but this has been working
for me, and it's not too much of a work around.

Matt


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, June 21, 2007 5:26 PM
To: antlr-interest
Subject: Re: [antlr-interest] The right way to invoke templates with
nullarguments?


On Jun 21, 2007, at 8:57 PM, Tim Clark wrote:

> Hi
>
> My application is outputting 'assembler code' for a stack machine.
> Corresponding to this tree parser rule:
>
> -------------A------------------
> ifStatement
>     :
>     ^(IF_STAT e=expr s1=statement s2=statement?)
>      -> ifStat(
>              expr={$e.st},
>              stat1={$s1.st},
>              stat2={$s2.st},
>              L1={myHelper.nextLabel ()},
>              L2={myHelper.nextLabel()}
>          )
> -------------------------------
>

Hi. the problem is that s2 may be null since it's optional. I've not  
got a good way to say $s2.st in the {...} w/o getting an error (have  
to have a cumbersome conditional in there).  I've got a bug report in  
about this.

Ter

From takpoli at hotmail.com  Thu Jun 21 19:08:58 2007
From: takpoli at hotmail.com (Tak-po Li)
Date: Thu, 21 Jun 2007 22:08:58 -0400
Subject: [antlr-interest] parser.prog()
Message-ID: <BAY105-F20DF959D7D797E24C8D035AB170@phx.gbl>


Hi,

I am new to v3.0.  I generated xxxLexer.java and xxxParser.jave successfully 
using Antlrworks.  I also created test.java as page 50 of the Antlr 
Referance book.   However, when I complied, I get the following error:

Parser.java xxxLexer.java
xxx.java:11: connot find symbol
symbol : method prog()
location: class xxxParser
                   parser.prog();
                           ^
1 error

Could anyone help?  Thanks,

Tak

_________________________________________________________________
Get a preview of Live Earth, the hottest event this summer - only on MSN 
http://liveearth.msn.com?source=msntaglineliveearthhm


From jonathan.thomas at ca.com  Thu Jun 21 19:16:13 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 22 Jun 2007 12:16:13 +1000
Subject: [antlr-interest] parser.prog()
In-Reply-To: <BAY105-F20DF959D7D797E24C8D035AB170@phx.gbl>
References: <BAY105-F20DF959D7D797E24C8D035AB170@phx.gbl>
Message-ID: <467B30ED.2010102@ca.com>

Do you have a top-level rule in your grammar called 'prog' ?

The rule names get converted to functions in the parser, which you can 
then call from your test program.

Which sample grammar did you try?

JT.

Tak-po Li said the following on 22/06/2007 12:08 PM:
>
> Hi,
>
> I am new to v3.0.  I generated xxxLexer.java and xxxParser.jave 
> successfully using Antlrworks.  I also created test.java as page 50 of 
> the Antlr Referance book.   However, when I complied, I get the 
> following error:
>
> Parser.java xxxLexer.java
> xxx.java:11: connot find symbol
> symbol : method prog()
> location: class xxxParser
>                   parser.prog();
>                           ^
> 1 error
>
> Could anyone help?  Thanks,
>
> Tak
>
> _________________________________________________________________
> Get a preview of Live Earth, the hottest event this summer - only on 
> MSN http://liveearth.msn.com?source=msntaglineliveearthhm
>
>

From dirty at apple.com  Thu Jun 21 20:57:04 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Thu, 21 Jun 2007 20:57:04 -0700
Subject: [antlr-interest] Equivalent of skip() with C runtime?
Message-ID: <6E1E3924-288F-4BA5-A6F4-F77EC1FA3C9D@apple.com>

I want to ignore certain tokens from the lexer.  When I was using the  
Java runtime, I used the skip() action.  Does anyone know what the  
equivalent would be for the C runtime?

Cameron Esfahani
dirty at apple.com

"You only live once, and the way I live, once is enough"

Frank Sinatra



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070621/11ff3143/attachment.html 

From antlr-list at arizona-software.ch  Thu Jun 21 21:24:18 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu, 21 Jun 2007 21:24:18 -0700
Subject: [antlr-interest] IntelliJ plug-in fails to save file
In-Reply-To: <200706200826.43202.rschulz@sonic.net>
References: <466EA6C0.4060802@acm.org> <46702156.9040404@gmail.com>
	<7E1339EF-C949-48D3-B19B-23B1CB0D4CD2@arizona-software.ch>
	<200706200826.43202.rschulz@sonic.net>
Message-ID: <FC28ED72-2FD8-4A82-8EE5-580E1FC22F11@arizona-software.ch>

Yeah, I know, I already posted questions there but some of them where  
not answered even after month. I will give another shot ASAP.

Jean

On Jun 20, 2007, at 8:26 AM, Randall R Schulz wrote:

> On Wednesday 20 June 2007 08:17, Jean Bovet wrote:
>> It is not a broken API issue but simply how to hook up ANTLRWorks to
>> the "Save" action in IntelliJ? If anyone knows how to do that (or has
>> a contact at Jetbrains), it would be great.
>
> That's what the JetBrains "Plug-Ins" forum is for.
>
> <http://www.intellij.net/forums/forum.jspa?forumID=18>
>
>
>> Regards,
>>
>> Jean
>
>
> Randall Schulz


From jose.sanleandro at ventura24.es  Thu Jun 21 22:24:40 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Fri, 22 Jun 2007 07:24:40 +0200
Subject: [antlr-interest] Problem with $type in final ANTLR 3.0
In-Reply-To: <051466DAA0D608439E196797955018D76DF9@wavemachine.temporal-wave.com>
References: <200706211218.22316.jose.sanleandro@ventura24.es>
	<051466DAA0D608439E196797955018D76DF9@wavemachine.temporal-wave.com>
Message-ID: <200706220724.40290.jose.sanleandro@ventura24.es>

Thank you for your advice.
It used such construct to keep the lookahead at 1, and hand-code the 
dissambiguations.
Anyway, I actually tended to think the purpose of "fragment" rules in lexers 
where just to define which can be directly seen by the parser and which 
don't.
I'll follow your recommendation from now on. Besides that, I encounter this 
issue only on released ANTLR 3.0, not in ANTLR 3.0b6. Maybe ANTLR 3.0b6 just 
forgot to throw warnings for some "habits" that now in ANTLR 3.0 are 
discarded?

Again, thank you very much.
Jose.

On Thursday 21 June 2007 17:04, Jim Idle wrote:
> I see what You are trying to construct I think, but this is not the way
> to go about it as best I can tell without your full grammar.
>
> It seesm that you want a placeholding token that recognizes the keywords
> that begin with @ and sets them to their particular type. I presume that
> you have some reason for not just listing them as:
>
> STATIC  : '@static' ;
> ISA	  : '@isa' ;
> ISATYPE : '@isatype' ;
> AT  : '@' ;
>
> When you have a lot of things like this you can end up with more code
> than you expect I have found. So, I tend to do this:
>
> tokens
> {
> 	STATIC;
> 	ISA;
> 	ISATYPE;
> }
>
> AT : '@'
> 	(
> 		  'static' 	{ $type = STATIC; }
>
> 		| 'isa'	{ $type = ISA;	}
> 		| 'isatype'	{ $type = ISATYPE;}
> 		|		{ $type = AT; // Not needed but
>
> documents the rule }
> 	)
> 	;
>
> This tends to generate simpler code and gives you the token types you
> want back at the parser :-).
>
> The reason that your first attempt does nto work is because there is no
> token for a fragment rule per se, hence the code generated by the $type
> has not token being constructed that it can affect the type of so you
> get this error. In the second instance, you are trying to use predicates
> from a rule that is not a fragment to enter into a non fragment rule.
>
> You can pick up things like the text associated with a fragment rule
> like this:
>
> FRED : '"' bodytext=STRING_GUTS '"'
> 		{ System.out.println("text is " + $bodytext.text); }
> 	;
>
> fragment
> STRING_GUTS :	( EscapeSequence | ~('\\'|'"') )* ;
>
>
> fragment
> EscapeSequence
>
>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>
> 	;
>
> Which can tends to fool you into thinking there is an actual token
> emitted by the fragment. You can of course use it to construct your own
> token, which you can emit() in the lexer action.
>
> Hope that helps,
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jose San Leandro
> > Sent: Thursday, June 21, 2007 3:18 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with $type in final ANTLR 3.0
> >
> > Hi,
> >
> > I've been using a grammar which used $type keyword (the replacement of
> > ANTLR2
> > setType()[1]) to guide the lexer and define explicitly the type of the
> > matched token:
> >
> > fragment AT
> >
> >     :  (  ('@static')    => STATIC {$type = STATIC;}
> >     :
> >         | ('@isa')       => ISA {$type = ISA;}
> >         | ('@isatype')   => ISATYPE  {$type = ISATYPE;}
> >         | '@')
> >
> >     ;
> >
> > With ANTLR 3.0 (Relased May 17), I get compilation errors in the
> > generated
> > lexer:
> >
> > [..]
> >             switch (alt1) {
> >                 case 1 :
> >                     // PerComment.g:575:11: ( '@static' )=> STATIC
> >                     {
> >                     mSTATIC(); if (failed) return ;
> >                     if ( backtracking==0 ) {
> >                       _type = STATIC;
> >                     }
> > [..]
> >
> > The _type variable is not defined.
> >
> > This issue has a different flavour on non-"fragment" rules:
> >
> > [..]
> >             this.type = _type;
> >         }
> >         finally {
> >         }
> >     }
> >     // $ANTLR end AT
> >
> > The compilation stops since type is not a declared attribute.
> >
> > Do you have any suggestions?
> >
> > Kind regards,
> > Jose.

From parrt at cs.usfca.edu  Fri Jun 22 00:10:24 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 17:10:24 +1000
Subject: [antlr-interest] The right way to invoke templates with
	nullarguments?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2021D6968@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2021D6968@orsmsx417.amr.corp.intel.com>
Message-ID: <AC990391-3BA0-442A-AE13-5D104035A4B4@cs.usfca.edu>


On Jun 22, 2007, at 11:02 AM, Diehl, Matthew J wrote:

>> (have to have a cumbersome conditional in there).
>
> I've decided (I'm new though) that the best way to setup your
> 'cumbersome conditional' is whenever there's a conditional part,  
> set it
> equal to something (s2 like you did below), and then in the
> StringTemplate section, define it as:
>
> stat2={s2!=null?$s2.st:false}

Correct.

> Instead of false, you can also probably try null.

correct.

>   This allows you so
> that when you write the group file, <if(stat1)>other  
> stuff<stat1><endif>
> can be used as well.  When I was setting it as:
> stat2={s2!=null?$s2.st:""} it would always return true for
> <if(stat1)><endif> since it was not null or false,

correct "" is a present attribute so IF evals to true on that.

Set it to null :)

Ter


From dima at rts.ua  Fri Jun 22 03:42:06 2007
From: dima at rts.ua (Dmitry Marienko)
Date: Fri, 22 Jun 2007 10:42:06 -0000
Subject: [antlr-interest] Verilog v3
Message-ID: <op.tubj0gh5e0apl5@shadow>

Hi all !
  I've ported/translated (???) Verilog grammar from v2 to ANTLR v3. Where  
can I place it ?

-- 
  Dmitry E. Marienko

From parrt at cs.usfca.edu  Fri Jun 22 00:48:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 17:48:36 +1000
Subject: [antlr-interest] Verilog v3
In-Reply-To: <op.tubj0gh5e0apl5@shadow>
References: <op.tubj0gh5e0apl5@shadow>
Message-ID: <CD1420C0-4214-40AA-B969-A9E9392533AD@cs.usfca.edu>

grammars section of antlr.org :)

Hit the add grammar button when your on that page.

http://www.antlr.org/grammar/list

Ter

On Jun 22, 2007, at 8:42 PM, Dmitry Marienko wrote:

> Hi all !
>  I've ported/translated (???) Verilog grammar from v2 to ANTLR v3.  
> Where can I place it ?
>
> -- 
>  Dmitry E. Marienko


From parrt at cs.usfca.edu  Fri Jun 22 01:38:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jun 2007 18:38:03 +1000
Subject: [antlr-interest] The right way to invoke templates with
	nullarguments?
In-Reply-To: <b6077b530706220132x76228697p5c448962d4e4dc73@mail.gmail.com>
References: <A10CD303B51F814DB568A8AAF02174C2021D6968@orsmsx417.amr.corp.intel.com>
	<AC990391-3BA0-442A-AE13-5D104035A4B4@cs.usfca.edu>
	<b6077b530706220132x76228697p5c448962d4e4dc73@mail.gmail.com>
Message-ID: <364D6C14-A245-4EA0-B5A2-81EF202685F3@cs.usfca.edu>


On Jun 22, 2007, at 6:32 PM, Tim Clark wrote:

> Listen to the sound of a penny dropping!
>
> Should have been obvious, but I blame the documentation (and my old  
> brain :) - note the subtle difference:
>
> A (not allowed by Antlr): stat2={$s2 == null ? null : $s2.st}

Oh, right!  Yeah, it was even worse.  $s2 is correct syntax, but I  
don't let you test that w/o an attribute.  Yup, i need to find a way  
to deal with this.

Ter


From jimi at temporal-wave.com  Fri Jun 22 07:37:05 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 22 Jun 2007 07:37:05 -0700
Subject: [antlr-interest] Equivalent of skip() with C runtime?
In-Reply-To: <6E1E3924-288F-4BA5-A6F4-F77EC1FA3C9D@apple.com>
References: <6E1E3924-288F-4BA5-A6F4-F77EC1FA3C9D@apple.com>
Message-ID: <051466DAA0D608439E196797955018D76E0F@wavemachine.temporal-wave.com>

When I implement it, it will be SKIP(); but it was missed:

 

          // TODO: Deal with SKipped token type

          //

 

So, for now set the channel to something you will ignore.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Thursday, June 21, 2007 8:57 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Equivalent of skip() with C runtime?

 

I want to ignore certain tokens from the lexer.  When I was using the
Java runtime, I used the skip() action.  Does anyone know what the
equivalent would be for the C runtime?

 

Cameron Esfahani

dirty at apple.com

 

"You only live once, and the way I live, once is enough"

 

Frank Sinatra

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/fa7c47b4/attachment.html 

From bace.spam at gmx.net  Fri Jun 22 09:46:43 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Fri, 22 Jun 2007 18:46:43 +0200
Subject: [antlr-interest] Duplicate nodes on a parse tree
In-Reply-To: <C6F1B330-95CE-4FB4-B95E-2F5E0349422B@cs.usfca.edu>
References: <20070622000740.93020@gmx.net>
	<C6F1B330-95CE-4FB4-B95E-2F5E0349422B@cs.usfca.edu>
Message-ID: <20070622164643.267070@gmx.net>

Morning,

I passed the parser to the ParseTreeBuilder constructor. In the methods of this class where child nodes are added, I checked parser.getBacktrackingLevel(). It always returned 0 (I don't use the explicit option backtrack in the grammar).

Any further hints?
Thanks,
Markus

> Hmm...shoot. Ok, it needs to have a constructor with a pointer to the  
> parser itself so it can ask for the backtracking state.  can you try  
> that out?
> 
> Ter
> On Jun 22, 2007, at 10:07 AM, Markus Kuhla wrote:
> 
> > Hi!
> >
> > Vadim Tropashko vadimtro at yahoo.com wrote:
> >> OK, I see the coloring (when tree is in chart form).
> >> It must be the Tree.getType() method that does this.
> > (http://www.antlr.org/pipermail/antlr-interest/2007-March/ 
> > 019566.html)
> >
> > I'm using the ParseTree and was wondering if there is a way to  
> > remove these duplicate nodes (for backtracking) from the ParseTree?  
> > As I checked the above described getType() for each node in the  
> > tree, I always got 0 (zero).
> >
> >
> > Thanks folks for you help!!!
> > Best,
> > Markus
> > -- 
> > GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> > Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From amol.neurgaonkar at gmail.com  Fri Jun 22 09:56:51 2007
From: amol.neurgaonkar at gmail.com (Amol Neurgaonkar)
Date: Fri, 22 Jun 2007 09:56:51 -0700
Subject: [antlr-interest] Need Help - Not able to use Java1.5
	grammaravailable on site with ANTLRv3
Message-ID: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>

Your understanding is correct. When I paste the Java1.5 grammar from site (
http://www.antlr.org/grammar/1152141644268/Java.g) , the whole grammar is
copied
as a single line in the ANTLRWorks dialogue box.
When I run the 'Check Grammar' , it succeeds, however when I run 'Generate
Code' it throws following error.

[19:04:25] Java.g:1:16360: unexpected char: ' '
 at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
 at antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java
:161)
 at antlr.TokenBuffer.fill(TokenBuffer.java:69)
 at antlr.TokenBuffer.LA(TokenBuffer.java:80)
 at antlr.LLkParser.LA(LLkParser.java:52)
 at org.antlr.tool.ANTLRParser.actions(Unknown Source)
 at org.antlr.tool.ANTLRParser.grammar(Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
 at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
 at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
 at java.lang.Thread.run(Unknown Source)

[19:04:25] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
C:\antlr3.0\Java.g:2:1: unexpected token: null
[19:04:25] error(150):  grammar file C:\antlr3.0\Java.g has no rules
I have tried using other grammars for Java 1.5 listed in the Grammars
section, but they do not seem to succeed even for 'Check Grammar' feature.

Thanks,
Amol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/83b6e871/attachment.html 

From jaluber at gmx.de  Fri Jun 22 09:59:59 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 22 Jun 2007 18:59:59 +0200
Subject: [antlr-interest] Need Help - Not able to use
 Java1.5	grammaravailable on site with ANTLRv3
In-Reply-To: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
References: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
Message-ID: <467C000F.8090606@gmx.de>

Amol Neurgaonkar wrote:
> Your understanding is correct. When I paste the Java1.5 grammar from
> site ( http://www.antlr.org/grammar/1152141644268/Java.g) , the whole
> grammar is copied
> as a single line in the ANTLRWorks dialogue box.

Do you copy the text from the browser itself? Then I suggest to save the
file on the harddrive instead pasting the text as this mangles the line
endings.

Best regards,
Johannes Luber

From ningd2004 at gmail.com  Fri Jun 22 10:00:56 2007
From: ningd2004 at gmail.com (ning dong)
Date: Fri, 22 Jun 2007 12:00:56 -0500
Subject: [antlr-interest] New C runtime dist
In-Reply-To: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
References: <051466DAA0D608439E196797955018D76DE7@wavemachine.temporal-wave.com>
Message-ID: <c24b82630706221000t6d16c413yc5b7598a4d505603@mail.gmail.com>

Sorry for this newbie question. But could someone elaborate how to
rebuild ANTLR to incorporate this new C runtime update?
I download the antlr3 tarbll and replace the old C.stg with the new
one. Then I followed FAQ to rebuild ANTLR. but failed with the
following error.

/home/ningd/tmp/antlr-3.0>echo $CLASSPATH
/home/ningd/pkgs/antlr-3.0/lib/stringtemplate-3.0.jar:/home/ningd/pkgs/antlr-3.0/lib/antlr-2.7.7.jar

/home/ningd/tmp/antlr-3.0> ant build
Buildfile: build.xml

BUILD FAILED
file:/home/ningd/tmp/antlr-3.0/build.xml:45: Unexpected element "condition"

Total time: 0 seconds

Try to use Ter's way to rebuild, but failed with lots of undefined
symbol errors
/home/ningd/tmp/antlr-3.0/src> javac -d . org/antlr/Tool.java
org/antlr/*/*.java org/antlr/*/*/*.java
org/antlr/Tool.java:33: package org.antlr.runtime.misc does not exist
import org.antlr.runtime.misc.Stats;
                              ^
org/antlr/analysis/DFA.java:35: package org.antlr.runtime does not exist
import org.antlr.runtime.IntStream;
                         ^
org/antlr/analysis/DFA.java:731: cannot find symbol
symbol  : class IntStream
location: class org.antlr.analysis.DFA
        public int predict(IntStream input) {
                           ^
org/antlr/codegen/ActionTranslatorLexer.java:4: package
org.antlr.runtime does not exist
import org.antlr.runtime.*;
^
.....
On 6/19/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>
>
>
> There is a new distribution snapshot checked in which is labeled 3.0.1. This
> may change if Ter decides that the first bug fix release will be called
> something completely different.
>
>
>
> To use this, you also need to rebuild ANTLR or at least make it pick up the
> latest C.stg.
>
>
>
> This fixes:
>
>
>
> -          All bugs that you lot know about ;-) ? Mistyped MACRO names,
> followSet problem, and all those problems that people moaned at me for
> making them waste two hours on there are actually quite a number of trivial
> little fixes in there too;
>
> -          Provides stacked streams so that they may be handled trivially in
> lexers etc (see example of the C parser in the C examples, which now caters
> for #include.)
>
> -          Corrects a couple of tree stream rewrite issues (one is code gen,
> one was in the runtime);
>
>
>
> I have not been able to extensively test this and remember this is snapshot
> to see if bugs are fixed properly. If you had a bug and know how to rebuild
> things then please try this out and let me know if you still have issues.
> Please try to be polite ? most people are J. I am well aware of all the
> typos in my comments ? I type at 2342342 characters a second and 98% are BS
> J and I will fix all those up at some point so no need to send me things
> like that.
>
>
>
> Share and Enjoy,
>
>
>
> Jim


-- 
Best Regards!
Ning Dong

From amol.neurgaonkar at gmail.com  Fri Jun 22 10:13:28 2007
From: amol.neurgaonkar at gmail.com (Amol Neurgaonkar)
Date: Fri, 22 Jun 2007 10:13:28 -0700
Subject: [antlr-interest] Need Help - Not able to use Java1.5
	grammaravailable on site with ANTLRv3
In-Reply-To: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
References: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
Message-ID: <a0219bfb0706221013m5c1d3f84nafa1794165172d76@mail.gmail.com>

Hi,

I tried to save the grammar file on disk and then run the ANTLRWorks on the
file,

Following is the error msg I get when running the 'Check Grammar' feature
now -


[10:05:34] Checking Grammar...
[10:05:34] error(100): Java.txt:50:12: syntax error: antlr: Java.txt:50:12:
unexpected token: ?
[10:05:34] error(100): Java.txt:50:32: syntax error: antlr: Java.txt:50:32:
unexpected token: ?
[10:05:34] error(100): Java.txt:50:51: syntax error: antlr: Java.txt:50:51:
unexpected token: *
[10:05:34] error(100): Java.txt:50:68: syntax error: antlr: Java.txt:50:68:
unexpected token: *
[10:05:34] error(100): Java.txt:114:18: syntax error: antlr: Java.txt:114:18:
unexpected token: ?
[10:05:34] error(100): Java.txt:129:8: syntax error: antlr: Java.txt:129:8:
unexpected token: block
[10:05:34] error(100): Java.txt:129:34: syntax error: antlr: Java.txt:129:34:
unexpected token: *
[10:05:34] error(100): Java.txt:147:1: syntax error: antlr: Java.txt:147:1:
unexpected token: forInit
[10:05:34] error(100): Java.txt:166:6: syntax error: antlr: Java.txt:166:6:
unexpected token: a
[10:05:34] error(100): Java.txt:166:12: syntax error: antlr: Java.txt:166:12:
unexpected token: pred
[10:05:34] error(100): Java.txt:166:20: syntax error: antlr: Java.txt:166:20:
unexpected token: check
[10:05:34] error(100): Java.txt:166:33: syntax error: antlr: Java.txt:166:33:
unexpected token: on
[10:05:34] error(100): Java.txt:166:42: syntax error: antlr: Java.txt:166:42:
unexpected token: >
[10:05:34] error(100): Java.txt:194:18: syntax error: antlr: Java.txt:194:18:
unexpected token: ?
[10:05:34] error(106): Java.txt:103:60: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:132:13: reference to undefined rule: block
[10:05:34] error(106): Java.txt:137:30: reference to undefined rule: block
[10:05:34] error(106): Java.txt:135:35: reference to undefined rule: block
[10:05:34] error(106): Java.txt:109:43: reference to undefined rule: block
[10:05:34] error(106): Java.txt:61:38: reference to undefined rule:
annotations
[10:05:34] error(106): Java.txt:97:1: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:67:40: reference to undefined rule: block
[10:05:34] error(106): Java.txt:135:61: reference to undefined rule: block
[10:05:34] error(106): Java.txt:140:64: reference to undefined rule: block
[10:05:34] error(106): Java.txt:136:11: reference to undefined rule: block
[10:05:34] error(106): Java.txt:117:1: reference to undefined rule:
annotation
[10:05:34] warning(105): Java.txt:112:1: no lexer rule corresponding to
token: HexLiteral
[10:05:34] warning(200): Java.txt:197:24: Decision can match input such as
"'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using multiple
alternatives: 3, 4
As a result, alternative(s) 4 were disabled for that input
[10:05:34] error(10):  internal error: org.antlr.tool.Message.toString(Unknown
Source): Assertion failed! Message ID 100 created but is not present in
errorMsgIDs or warningMsgIDs.

Here is the line no 49 : (Note, the line is commented after }. I am not sure
if the word 'compilationUnit' should also be part of the comment or not)

*= true; } // starting point for parsing a java file compilationUnit : *

which is followed by line no 50 as below where the first error is thrown:

*annotations? packageDeclaration? importDeclaration* typeDeclaration* ;
*



The Grammar is still the same
(http://www.antlr.org/grammar/1152141644268/Java.g)
, just that now instead of showing the full grammar in one line(when I used
to copy directly from browser), now it shows in 221 lines. However, it gives
the above error now.



Thanks,

Amol.



On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com> wrote:
>
> Your understanding is correct. When I paste the Java1.5 grammar from site
> ( http://www.antlr.org/grammar/1152141644268/Java.g) , the whole grammar
> is copied
> as a single line in the ANTLRWorks dialogue box.
> When I run the 'Check Grammar' , it succeeds, however when I run 'Generate
> Code' it throws following error.
>
> [19:04:25] Java.g:1:16360: unexpected char: ' '
>  at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
>  at antlr.TokenStreamRewriteEngine.nextToken (
> TokenStreamRewriteEngine.java:161)
>  at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>  at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>  at antlr.LLkParser.LA(LLkParser.java:52)
>  at org.antlr.tool.ANTLRParser.actions (Unknown Source)
>  at org.antlr.tool.ANTLRParser.grammar(Unknown Source)
>  at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
>  at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
>  at org.antlr.works.grammar.EngineGrammar.createNewGrammar (Unknown
> Source)
>  at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
> Source)
>  at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
>  at org.antlr.works.grammar.EngineGrammar.analyze (Unknown Source)
>  at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
>  at java.lang.Thread.run(Unknown Source)
>
> [19:04:25] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
> C:\antlr3.0\Java.g:2:1: unexpected token: null
> [19:04:25] error(150):  grammar file C:\antlr3.0\Java.g has no rules
> I have tried using other grammars for Java 1.5 listed in the Grammars
> section, but they do not seem to succeed even for 'Check Grammar' feature.
>
> Thanks,
> Amol.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/fcafb634/attachment.html 

From amol.neurgaonkar at gmail.com  Fri Jun 22 10:24:37 2007
From: amol.neurgaonkar at gmail.com (Amol Neurgaonkar)
Date: Fri, 22 Jun 2007 10:24:37 -0700
Subject: [antlr-interest] Need Help - Not able to use Java1.5
	grammaravailable on site with ANTLRv3
In-Reply-To: <a0219bfb0706221013m5c1d3f84nafa1794165172d76@mail.gmail.com>
References: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
	<a0219bfb0706221013m5c1d3f84nafa1794165172d76@mail.gmail.com>
Message-ID: <a0219bfb0706221024r52e7d790oa7f1af28436e5751@mail.gmail.com>

Another point I would like to bring out is that when I open the grammar file
in ANTLRWorks , it throws errors on a few words in the file code as follows
-

1.
enumConstant : annotations? Identifier (arguments)? (classBody)?
On this line, it throws error on word 'annotations' saying : undefined
reference "annotations"

2.
integerLiteral :
HexLiteral | OctalLiteral | DecimalLiteral ; booleanLiteral : 'true' |
'false' ;
On this line, it throws error on word 'HexLiteral' saying : undefined
reference "HexLiteral "

3.Similar error is thrown for word 'forControl'
These are all related to the new features of Java 1.5 I suppose.

Thanks,
Amol.


On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com> wrote:
>
> Hi,
>
> I tried to save the grammar file on disk and then run the ANTLRWorks on
> the file,
>
> Following is the error msg I get when running the 'Check Grammar' feature
> now -
>
>
> [10:05:34] Checking Grammar...
> [10:05:34] error(100): Java.txt:50:12: syntax error: antlr: Java.txt:50:12:
> unexpected token: ?
> [10:05:34] error(100): Java.txt:50:32: syntax error: antlr: Java.txt:50:32:
> unexpected token: ?
> [10:05:34] error(100): Java.txt:50:51: syntax error: antlr: Java.txt:50:51:
> unexpected token: *
> [10:05:34] error(100): Java.txt:50:68: syntax error: antlr: Java.txt:50:68:
> unexpected token: *
> [10:05:34] error(100): Java.txt:114:18: syntax error: antlr: Java.txt:114:18:
> unexpected token: ?
> [10:05:34] error(100): Java.txt:129:8: syntax error: antlr: Java.txt:129:8:
> unexpected token: block
> [10:05:34] error(100): Java.txt:129:34: syntax error: antlr: Java.txt:129:34:
> unexpected token: *
> [10:05:34] error(100): Java.txt:147:1: syntax error: antlr: Java.txt:147:1:
> unexpected token: forInit
> [10:05:34] error(100): Java.txt:166:6: syntax error: antlr: Java.txt:166:6:
> unexpected token: a
> [10:05:34] error(100): Java.txt:166:12: syntax error: antlr: Java.txt:166:12:
> unexpected token: pred
> [10:05:34] error(100): Java.txt:166:20: syntax error: antlr: Java.txt:166:20:
> unexpected token: check
> [10:05:34] error(100): Java.txt:166:33: syntax error: antlr: Java.txt:166:33:
> unexpected token: on
> [10:05:34] error(100): Java.txt:166:42: syntax error: antlr: Java.txt:166:42:
> unexpected token: >
> [10:05:34] error(100): Java.txt:194:18: syntax error: antlr: Java.txt:194:18:
> unexpected token: ?
> [10:05:34] error(106): Java.txt:103:60: reference to undefined rule:
> annotation
> [10:05:34] error(106): Java.txt:132:13: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:137:30: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:135:35: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:109:43: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:61:38: reference to undefined rule:
> annotations
> [10:05:34] error(106): Java.txt:97:1: reference to undefined rule:
> annotation
> [10:05:34] error(106): Java.txt:67:40: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:135:61: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:140:64: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:136:11: reference to undefined rule: block
> [10:05:34] error(106): Java.txt:117:1: reference to undefined rule:
> annotation
> [10:05:34] warning(105): Java.txt:112:1: no lexer rule corresponding to
> token: HexLiteral
> [10:05:34] warning(200): Java.txt:197:24: Decision can match input such as
> "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using multiple
> alternatives: 3, 4
> As a result, alternative(s) 4 were disabled for that input
> [10:05:34] error(10):  internal error: org.antlr.tool.Message.toString(Unknown
> Source): Assertion failed! Message ID 100 created but is not present in
> errorMsgIDs or warningMsgIDs.
>
> Here is the line no 49 : (Note, the line is commented after }. I am not
> sure if the word 'compilationUnit' should also be part of the comment or
> not)
>
> *= true; } // starting point for parsing a java file compilationUnit : *
>
> which is followed by line no 50 as below where the first error is thrown:
>
> *annotations? packageDeclaration? importDeclaration* typeDeclaration* ;
> *
>
>
>
> The Grammar is still the same  (
> http://www.antlr.org/grammar/1152141644268/Java.g) , just that now instead
> of showing the full grammar in one line(when I used to copy directly from
> browser), now it shows in 221 lines. However, it gives the above error now.
>
>
>
> Thanks,
>
> Amol.
>
>
>
>  On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com> wrote:
> >
> > Your understanding is correct. When I paste the Java1.5 grammar from
> > site ( http://www.antlr.org/grammar/1152141644268/Java.g) , the whole
> > grammar is copied
> > as a single line in the ANTLRWorks dialogue box.
> > When I run the 'Check Grammar' , it succeeds, however when I run
> > 'Generate Code' it throws following error.
> >
> > [19:04:25] Java.g:1:16360: unexpected char: ' '
> >  at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
> >  at antlr.TokenStreamRewriteEngine.nextToken (
> > TokenStreamRewriteEngine.java :161)
> >  at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> >  at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> >  at antlr.LLkParser.LA(LLkParser.java:52)
> >  at org.antlr.tool.ANTLRParser.actions (Unknown Source)
> >  at org.antlr.tool.ANTLRParser.grammar (Unknown Source)
> >  at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> >  at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> >  at org.antlr.works.grammar.EngineGrammar.createNewGrammar (Unknown
> > Source)
> >  at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
> > Source)
> >  at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
> >  at org.antlr.works.grammar.EngineGrammar.analyze (Unknown Source)
> >  at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> >  at java.lang.Thread.run(Unknown Source)
> >
> > [19:04:25] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
> > C:\antlr3.0\Java.g:2:1: unexpected token: null
> > [19:04:25] error(150):  grammar file C:\antlr3.0\Java.g has no rules
> > I have tried using other grammars for Java 1.5 listed in the Grammars
> > section, but they do not seem to succeed even for 'Check Grammar' feature.
> >
> > Thanks,
> > Amol.
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/ec226f5d/attachment-0001.html 

From matthew.j.diehl at intel.com  Fri Jun 22 11:02:12 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 22 Jun 2007 11:02:12 -0700
Subject: [antlr-interest] Need Help - Not able to use
	Java1.5grammaravailable on site with ANTLRv3
In-Reply-To: <a0219bfb0706221024r52e7d790oa7f1af28436e5751@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2021D6D34@orsmsx417.amr.corp.intel.com>

I used the grammar file you were talking about, and besides the
"Decision can match input such as "'0'..'9'{'E', 'e'}{'+',
'-'}'0'..'9'{'D', 'F', 'd', 'f'}" using multiple alternatives: 3, 4",
I'm not getting the same errors.  I'm using ANTLRWorks 1.0.2, and Java
1.6.

A way around the above error is to delete (on the 4th alternative in the
rule FloatingPointLiteral) the "Exponent?".  It is a little redundant I
think, and is handled by the 3rd alternative.  So it should read:

 

FloatingPointLiteral

    :   ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?

    |   '.' ('0'..'9')+ Exponent? FloatTypeSuffix?

    |   ('0'..'9')+ Exponent FloatTypeSuffix?

    |   ('0'..'9')+ FloatTypeSuffix

    ;

 

After this change, I rechecked the grammar, and it gave me no errors.  I
don't know what's different from yours and mine, but yours is showing
that the above error was on line 197, when it was on line 177 on my
system. Are you sure you copied the file correctly?  Make sure when you
save it that you save the link to Java.g, and not the text. For
instance, if you click on the link and brink up Java.g in the browser,
and then you click on file:saveAs, it will add extra formatting junk
into the file.  Whereas if you right-click on the LINK to Java.g and
select SaveLinkAs, it will save the file and not add extra junk to it.

 

Matt

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Amol Neurgaonkar
Sent: Friday, June 22, 2007 10:25 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Need Help - Not able to use
Java1.5grammaravailable on site with ANTLRv3

 

 

Another point I would like to bring out is that when I open the grammar
file in ANTLRWorks , it throws errors on a few words in the file code as
follows - 

 

1.

enumConstant : annotations? Identifier (arguments)? (classBody)?  

On this line, it throws error on word 'annotations' saying : undefined
reference "annotations"

 

2.

integerLiteral : 
HexLiteral | OctalLiteral | DecimalLiteral ; booleanLiteral : 'true' |
'false' ;

On this line, it throws error on word 'HexLiteral' saying : undefined
reference "HexLiteral "

3.Similar error is thrown for word 'forControl'

These are all related to the new features of Java 1.5 I suppose.

 

Thanks,

Amol.

 

On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com> wrote: 

Hi,

 

I tried to save the grammar file on disk and then run the ANTLRWorks on
the file,

 

Following is the error msg I get when running the 'Check Grammar'
feature now -

 

[10:05:34] Checking Grammar...
[10:05:34] error(100): Java.txt:50:12: syntax error: antlr:
Java.txt:50:12: unexpected token: ?
[10:05:34] error(100): Java.txt:50:32: syntax error: antlr:
Java.txt:50:32: unexpected token: ? 
[10:05:34] error(100): Java.txt:50:51: syntax error: antlr:
Java.txt:50:51: unexpected token: *
[10:05:34] error(100): Java.txt:50:68: syntax error: antlr:
Java.txt:50:68: unexpected token: *
[10:05:34] error(100): Java.txt:114:18: syntax error: antlr:
Java.txt:114:18: unexpected token: ?
[10:05:34] error(100): Java.txt:129:8: syntax error: antlr:
Java.txt:129:8: unexpected token: block
[10:05:34] error(100): Java.txt:129:34: syntax error: antlr:
Java.txt:129:34: unexpected token: *
[10:05:34] error(100): Java.txt:147:1: syntax error: antlr:
Java.txt:147:1: unexpected token: forInit
[10:05:34] error(100): Java.txt:166:6: syntax error: antlr:
Java.txt:166:6: unexpected token: a 
[10:05:34] error(100): Java.txt:166:12: syntax error: antlr:
Java.txt:166:12: unexpected token: pred
[10:05:34] error(100): Java.txt:166:20: syntax error: antlr:
Java.txt:166:20: unexpected token: check
[10:05:34] error(100): Java.txt:166:33: syntax error: antlr:
Java.txt:166:33: unexpected token: on
[10:05:34] error(100): Java.txt:166:42: syntax error: antlr:
Java.txt:166:42: unexpected token: >
[10:05:34] error(100): Java.txt:194:18: syntax error: antlr:
Java.txt:194:18: unexpected token: ?
[10:05:34] error(106): Java.txt:103:60: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:132:13: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:137:30: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:135:35: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:109:43: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:61:38: reference to undefined rule:
annotations
[10:05:34] error(106): Java.txt:97:1: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:67:40: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:135:61: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:140:64: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:136:11: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:117:1: reference to undefined rule:
annotation
[10:05:34] warning(105): Java.txt:112:1: no lexer rule corresponding to
token: HexLiteral
[10:05:34] warning(200): Java.txt:197:24: Decision can match input such
as "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using
multiple alternatives: 3, 4 
As a result, alternative(s) 4 were disabled for that input
[10:05:34] error(10):  internal error:
org.antlr.tool.Message.toString(Unknown Source): Assertion failed!
Message ID 100 created but is not present in errorMsgIDs or
warningMsgIDs. 

Here is the line no 49 : (Note, the line is commented after }. I am not
sure if the word 'compilationUnit' should also be part of the comment or
not)

= true; } // starting point for parsing a java file compilationUnit : 

which is followed by line no 50 as below where the first error is
thrown:

annotations? packageDeclaration? importDeclaration* typeDeclaration* ; 

 

The Grammar is still the same  (
http://www.antlr.org/grammar/1152141644268/Java.g
<http://www.antlr.org/grammar/1152141644268/Java.g> ) , just that now
instead of showing the full grammar in one line(when I used to copy
directly from browser), now it shows in 221 lines. However, it gives the
above error now. 

 

Thanks,

Amol.



 

On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com > wrote: 

Your understanding is correct. When I paste the Java1.5 grammar from
site ( http://www.antlr.org/grammar/1152141644268/Java.g
<http://www.antlr.org/grammar/1152141644268/Java.g> ) , the whole
grammar is copied 

as a single line in the ANTLRWorks dialogue box.

When I run the 'Check Grammar' , it succeeds, however when I run
'Generate Code' it throws following error.

 

[19:04:25] Java.g:1:16360: unexpected char: ' '
 at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
 at antlr.TokenStreamRewriteEngine.nextToken
(TokenStreamRewriteEngine.java :161)
 at antlr.TokenBuffer.fill(TokenBuffer.java:69)
 at antlr.TokenBuffer.LA(TokenBuffer.java:80)
 at antlr.LLkParser.LA(LLkParser.java:52)
 at org.antlr.tool.ANTLRParser.actions (Unknown Source)
 at org.antlr.tool.ANTLRParser.grammar (Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.createNewGrammar (Unknown
Source) 
 at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
 at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.analyze (Unknown Source) 
 at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
 at java.lang.Thread.run(Unknown Source)

 

[19:04:25] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
C:\antlr3.0\Java.g:2:1: unexpected token: null
[19:04:25] error(150):  grammar file C:\antlr3.0\Java.g has no rules 

I have tried using other grammars for Java 1.5 listed in the Grammars
section, but they do not seem to succeed even for 'Check Grammar'
feature. 

 

Thanks,

Amol.





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/63982255/attachment-0001.html 

From hanasaki at gmail.com  Fri Jun 22 11:23:02 2007
From: hanasaki at gmail.com (hanasaki jiji)
Date: Fri, 22 Jun 2007 14:23:02 -0400
Subject: [antlr-interest] maven2 and support in repository
Message-ID: <3cfcba890706221123t7ae88d80q895017fa0171852f@mail.gmail.com>

any chance of convincing you to put the current work on in the
repository so it can be used without all the manual installs?

Thanks!

From jimi at temporal-wave.com  Fri Jun 22 11:54:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 22 Jun 2007 11:54:15 -0700
Subject: [antlr-interest] Need Help - Not able to
	useJava1.5grammaravailable on site with ANTLRv3
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2021D6D34@orsmsx417.amr.corp.intel.com>
References: <a0219bfb0706221024r52e7d790oa7f1af28436e5751@mail.gmail.com>
	<A10CD303B51F814DB568A8AAF02174C2021D6D34@orsmsx417.amr.corp.intel.com>
Message-ID: <051466DAA0D608439E196797955018D76E17@wavemachine.temporal-wave.com>

This is the same grammar shipped in the examples I believe. Why don't
you download the examples and try the grammar there? You can ignore any
consistency warnings as they decisions are the correct ones, however if
you want a version without those warnings, you can steal the grammar
from the C target examples, where I fixed those.

 

However, I right clicked the link, did "Save As" to a tmp directory and
opened it in AntlrWorks. Hitting generate gives the expected:

 

[11:51:21] warning(200): Java.g:777:9: Decision can match input such as
"'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using
multiple alternatives: 3, 4

As a result, alternative(s) 4 were disabled for that input

[11:51:22] warning(200): C:\tmp\Java.g:777:9: Decision can match input
such as "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using
multiple alternatives: 3, 4

As a result, alternative(s) 4 were disabled for that input

 

Only. 

 

Hence we must conclude that you are not downloading this correctly or
have an old version of ANTLR or in some other way have alocal issue.
There is nothing wrong with the grammar itself - sorry!

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, Matthew J
Sent: Friday, June 22, 2007 11:02 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Need Help - Not able to
useJava1.5grammaravailable on site with ANTLRv3

 

I used the grammar file you were talking about, and besides the
"Decision can match input such as "'0'..'9'{'E', 'e'}{'+',
'-'}'0'..'9'{'D', 'F', 'd', 'f'}" using multiple alternatives: 3, 4",
I'm not getting the same errors.  I'm using ANTLRWorks 1.0.2, and Java
1.6.

A way around the above error is to delete (on the 4th alternative in the
rule FloatingPointLiteral) the "Exponent?".  It is a little redundant I
think, and is handled by the 3rd alternative.  So it should read:

 

FloatingPointLiteral

    :   ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?

    |   '.' ('0'..'9')+ Exponent? FloatTypeSuffix?

    |   ('0'..'9')+ Exponent FloatTypeSuffix?

    |   ('0'..'9')+ FloatTypeSuffix

    ;

 

After this change, I rechecked the grammar, and it gave me no errors.  I
don't know what's different from yours and mine, but yours is showing
that the above error was on line 197, when it was on line 177 on my
system. Are you sure you copied the file correctly?  Make sure when you
save it that you save the link to Java.g, and not the text. For
instance, if you click on the link and brink up Java.g in the browser,
and then you click on file:saveAs, it will add extra formatting junk
into the file.  Whereas if you right-click on the LINK to Java.g and
select SaveLinkAs, it will save the file and not add extra junk to it.

 

Matt

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Amol Neurgaonkar
Sent: Friday, June 22, 2007 10:25 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Need Help - Not able to use
Java1.5grammaravailable on site with ANTLRv3

 

 

Another point I would like to bring out is that when I open the grammar
file in ANTLRWorks , it throws errors on a few words in the file code as
follows - 

 

1.

enumConstant : annotations? Identifier (arguments)? (classBody)?  

On this line, it throws error on word 'annotations' saying : undefined
reference "annotations"

 

2.

integerLiteral : 
HexLiteral | OctalLiteral | DecimalLiteral ; booleanLiteral : 'true' |
'false' ;

On this line, it throws error on word 'HexLiteral' saying : undefined
reference "HexLiteral "

3.Similar error is thrown for word 'forControl'

These are all related to the new features of Java 1.5 I suppose.

 

Thanks,

Amol.

 

On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com> wrote: 

Hi,

 

I tried to save the grammar file on disk and then run the ANTLRWorks on
the file,

 

Following is the error msg I get when running the 'Check Grammar'
feature now -

 

[10:05:34] Checking Grammar...
[10:05:34] error(100): Java.txt:50:12: syntax error: antlr:
Java.txt:50:12: unexpected token: ?
[10:05:34] error(100): Java.txt:50:32: syntax error: antlr:
Java.txt:50:32: unexpected token: ? 
[10:05:34] error(100): Java.txt:50:51: syntax error: antlr:
Java.txt:50:51: unexpected token: *
[10:05:34] error(100): Java.txt:50:68: syntax error: antlr:
Java.txt:50:68: unexpected token: *
[10:05:34] error(100): Java.txt:114:18: syntax error: antlr:
Java.txt:114:18: unexpected token: ?
[10:05:34] error(100): Java.txt:129:8: syntax error: antlr:
Java.txt:129:8: unexpected token: block
[10:05:34] error(100): Java.txt:129:34: syntax error: antlr:
Java.txt:129:34: unexpected token: *
[10:05:34] error(100): Java.txt:147:1: syntax error: antlr:
Java.txt:147:1: unexpected token: forInit
[10:05:34] error(100): Java.txt:166:6: syntax error: antlr:
Java.txt:166:6: unexpected token: a 
[10:05:34] error(100): Java.txt:166:12: syntax error: antlr:
Java.txt:166:12: unexpected token: pred
[10:05:34] error(100): Java.txt:166:20: syntax error: antlr:
Java.txt:166:20: unexpected token: check
[10:05:34] error(100): Java.txt:166:33: syntax error: antlr:
Java.txt:166:33: unexpected token: on
[10:05:34] error(100): Java.txt:166:42: syntax error: antlr:
Java.txt:166:42: unexpected token: >
[10:05:34] error(100): Java.txt:194:18: syntax error: antlr:
Java.txt:194:18: unexpected token: ?
[10:05:34] error(106): Java.txt:103:60: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:132:13: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:137:30: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:135:35: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:109:43: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:61:38: reference to undefined rule:
annotations
[10:05:34] error(106): Java.txt:97:1: reference to undefined rule:
annotation
[10:05:34] error(106): Java.txt:67:40: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:135:61: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:140:64: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:136:11: reference to undefined rule:
block
[10:05:34] error(106): Java.txt:117:1: reference to undefined rule:
annotation
[10:05:34] warning(105): Java.txt:112:1: no lexer rule corresponding to
token: HexLiteral
[10:05:34] warning(200): Java.txt:197:24: Decision can match input such
as "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using
multiple alternatives: 3, 4 
As a result, alternative(s) 4 were disabled for that input
[10:05:34] error(10):  internal error:
org.antlr.tool.Message.toString(Unknown Source): Assertion failed!
Message ID 100 created but is not present in errorMsgIDs or
warningMsgIDs. 

Here is the line no 49 : (Note, the line is commented after }. I am not
sure if the word 'compilationUnit' should also be part of the comment or
not)

= true; } // starting point for parsing a java file compilationUnit : 

which is followed by line no 50 as below where the first error is
thrown:

annotations? packageDeclaration? importDeclaration* typeDeclaration* ; 

 

The Grammar is still the same  (
http://www.antlr.org/grammar/1152141644268/Java.g
<http://www.antlr.org/grammar/1152141644268/Java.g> ) , just that now
instead of showing the full grammar in one line(when I used to copy
directly from browser), now it shows in 221 lines. However, it gives the
above error now. 

 

Thanks,

Amol.



 

On 6/22/07, Amol Neurgaonkar <amol.neurgaonkar at gmail.com > wrote: 

Your understanding is correct. When I paste the Java1.5 grammar from
site ( http://www.antlr.org/grammar/1152141644268/Java.g
<http://www.antlr.org/grammar/1152141644268/Java.g> ) , the whole
grammar is copied 

as a single line in the ANTLRWorks dialogue box.

When I run the 'Check Grammar' , it succeeds, however when I run
'Generate Code' it throws following error.

 

[19:04:25] Java.g:1:16360: unexpected char: ' '
 at org.antlr.tool.ANTLRLexer.nextToken(Unknown Source)
 at antlr.TokenStreamRewriteEngine.nextToken
(TokenStreamRewriteEngine.java :161)
 at antlr.TokenBuffer.fill(TokenBuffer.java:69)
 at antlr.TokenBuffer.LA(TokenBuffer.java:80)
 at antlr.LLkParser.LA(LLkParser.java:52)
 at org.antlr.tool.ANTLRParser.actions (Unknown Source)
 at org.antlr.tool.ANTLRParser.grammar (Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.createNewGrammar (Unknown
Source) 
 at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
 at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
 at org.antlr.works.grammar.EngineGrammar.analyze (Unknown Source) 
 at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
 at java.lang.Thread.run(Unknown Source)

 

[19:04:25] error(100): C:\antlr3.0\Java.g:2:1: syntax error: antlr:
C:\antlr3.0\Java.g:2:1: unexpected token: null
[19:04:25] error(150):  grammar file C:\antlr3.0\Java.g has no rules 

I have tried using other grammars for Java 1.5 listed in the Grammars
section, but they do not seem to succeed even for 'Check Grammar'
feature. 

 

Thanks,

Amol.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/3ddd1995/attachment-0001.html 

From Ronald.Petty at milliman.com  Fri Jun 22 13:01:39 2007
From: Ronald.Petty at milliman.com (Ronald Petty)
Date: Fri, 22 Jun 2007 15:01:39 -0500
Subject: [antlr-interest] AntrlWork Debugger problem
Message-ID: <OF02B46B1C.16845E5A-ON86257302.006DC97B-86257302.006E03FB@milliman.com>

Hi,

I am trying to walk through the AntlrWork demo and have hit a snag.  When 
you are doing the debugging demo, I can't enter input into "input".

http://www.antlr.org/works/help/tutorial/calculator.html

I keep clicking on the Input window and I can't type anything in.  If I go 
to the Interpreter window I can type expressions in the window.  Am I 
using the debugger incorrectly?  I am trying to type the number "2", using 
the calculator grammar.

Thanks for the help. 

Ron

---------------------------------------------------------------------------------
Ronald Petty
Milliman 
Financial Risk Management -- Technology Practice
71 S. Wacker Dr.
31st Floor
Chicago, IL  60606
+1.312.726.0677 (Chicago Office)
+1.312.714.2519 cell
+1.312.499.5721 direct 
+1.312.499.5700 fax



**************************************************************************************
This communication is intended solely for the addressee and is
confidential. If you are not the intended recipient, any disclosure, 
copying, distribution or any action taken or omitted to be taken in
reliance on it, is prohibited and may be unlawful. Unless indicated
to the contrary: it does not constitute professional advice or 
opinions upon which reliance may be made by the addressee or any
other party, and it should be considered to be a work in progress.
**************************************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/72462316/attachment.html 

From antlr at mirality.co.nz  Fri Jun 22 13:52:18 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 23 Jun 2007 08:52:18 +1200
Subject: [antlr-interest] AntrlWork Debugger problem
In-Reply-To: <OF02B46B1C.16845E5A-ON86257302.006DC97B-86257302.006E03FB@
	milliman.com>
References: <OF02B46B1C.16845E5A-ON86257302.006DC97B-86257302.006E03FB@milliman.com>
Message-ID: <20070622205232.CFAB111EBAD@www.antlr.org>

At 08:01 23/06/2007, Ronald Petty wrote:

>I am trying to walk through the AntlrWork demo and have hit a 
>snag.  When you are doing the debugging demo, I can't enter input 
>into "input".
>
>http://www.antlr.org/works/help/tutorial/calculator.html
>
>I keep clicking on the Input window and I can't type anything 
>in.  If I go to the Interpreter window I can type expressions in 
>the window.  Am I using the debugger incorrectly?  I am trying to 
>type the number "2", using the calculator grammar.

See, that's the way I thought that panel worked at first as well 
-- but it's not :)

The Input panel on the left *shows* you what portion of the input 
has been successfully parsed thus far.  It's not where you enter 
the input itself.

When you start debugging a separate dialog is supposed to pop up 
with a big input field for the actual input data.  I've seen it a 
few times, but then I've also had it *not* pop up a few times as 
well.  I haven't played with debugging in AW enough to know what 
makes it appear, and whether this is a bug or not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/37efac64/attachment.html 

From amol.neurgaonkar at gmail.com  Fri Jun 22 13:56:04 2007
From: amol.neurgaonkar at gmail.com (Amol Neurgaonkar)
Date: Fri, 22 Jun 2007 13:56:04 -0700
Subject: [antlr-interest] Need Help - Not able to use Java1.5
	grammaravailable on site with ANTLRv3
In-Reply-To: <a0219bfb0706221355m5d5c3bf3ta27a2d2a9f6d424f@mail.gmail.com>
References: <a0219bfb0706220956t6b6bcc2bta344167329be6952@mail.gmail.com>
	<a0219bfb0706221013m5c1d3f84nafa1794165172d76@mail.gmail.com>
	<a0219bfb0706221024r52e7d790oa7f1af28436e5751@mail.gmail.com>
	<467C0E82.4000106@gmx.de>
	<a0219bfb0706221355m5d5c3bf3ta27a2d2a9f6d424f@mail.gmail.com>
Message-ID: <a0219bfb0706221356o7bbeb76fwfb8be68456a1ca8a@mail.gmail.com>

>
> Hi,
>
> The grammar is working fine now when I save the URL link for grammar
> directly on the machine.
> Earlier I was copying the grammar from the browser itself and also tried
> by saving
> the browser file using File-Save As. Both of these options seem to embed
> some format
> chars which corrupted the grammar.
>
> Now I am able to generate the Java classes based on the grammar file.
> The files generated are -
>
> Java.Tokens,
> Java_.g,
> JavaLexer.java,
> JavaParser.java
>
> Earlier the ANTLR 2.7.5 version used to generate a <JavaRecognizer.java>
> class. Is the <JavaParser.java> code same as the JavaRecognizer class in
> terms of the functionality ?
>
> Similarly, earlier the code generated a JavaTokenTypes.java class while
> now only Java.Tokens file
> is generated.
>
> I was using the ANTLR generated JavaRecognizer.java class to extract
> methods out of a java class given as input for my tool, so just wanted to
> know if the usage still remains the same except that the Parser replaces the
> Recognizer now ?
>
> Also,I would like to thank everyone who provided the support and help and
> also to the ANTLR team for building such a cool software !
>
> Thanks,
> Amol.
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/951e9c7a/attachment.html 

From hanasaki at gmail.com  Fri Jun 22 14:59:06 2007
From: hanasaki at gmail.com (hanasaki jiji)
Date: Fri, 22 Jun 2007 17:59:06 -0400
Subject: [antlr-interest] maven2 and support in repository
In-Reply-To: <3cfcba890706221123t7ae88d80q895017fa0171852f@mail.gmail.com>
References: <3cfcba890706221123t7ae88d80q895017fa0171852f@mail.gmail.com>
Message-ID: <3cfcba890706221459o55cbc47cnc2ea4a72c71d729e@mail.gmail.com>

On 6/22/07, hanasaki jiji <hanasaki at gmail.com> wrote:
> any chance of convincing you to put the current work on in the
> repository so it can be used without all the manual installs?
>
> Thanks!
>

From robermann at gmail.com  Fri Jun 22 15:23:47 2007
From: robermann at gmail.com (robermann)
Date: Sat, 23 Jun 2007 00:23:47 +0200
Subject: [antlr-interest] java 1.5 grammar strange beahviour
Message-ID: <414e44f70706221523y3dc478ferdadde276b304d042@mail.gmail.com>

Hi all
I have a strange error with java5 grammar. If I turn on rewrite mode
(options {k=2; backtrack=true; memoize=true; output=template;
rewrite=true;}), the following rule works:

    | 'break' Identifier? ';'      -> template(c={$text}) "
System.out.println(\"BREAK123\"); <c>"

whereas the following one:
    | 'break' Identifier? ';'      -> template(c={$text}) "
System.out.println(\"BREAK1234\"); <c>"

provokes the following incredibile message:

linux:~/java-antlr # java org.antlr.Tool JavaRewrite.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
warning(200): JavaRewrite.g:779:9: Decision can match input such as
"'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}" using multiple
alternatives: 3, 4
As a result, alternative(s) 4 were disabled for that input
warning(205): JavaRewrite.g:1:10: ANTLR could not analyze this decision in
rule Tokens; often this is because of recursive rule references visible from
the left edge of alternatives.  ANTLR will re-analyze the decision with a
fixed lookahead of k=1.  Consider using "options {k=1;}" for that decision
and possibly adding a syntactic predicate.
warning(209): JavaRewrite.g:821:1: Multiple token rules can match input such
as "'r'": T83, Identifier
As a result, tokens(s) Identifier were disabled for that input
warning(209): JavaRewrite.g:86:1: Multiple token rules can match input such
as "'+'": T89, T104, T108
As a result, tokens(s) T108,T104 were disabled for that input
warning(209): JavaRewrite.g:82:1: Multiple token rules can match input such
as "'^'": T95, T100
As a result, tokens(s) T100 were disabled for that input
warning(209): JavaRewrite.g:821:1: Multiple token rules can match input such
as "'w'": T78, Identifier
As a result, tokens(s) Identifier were disabled for that input
warning(209): JavaRewrite.g:34:1: Multiple token rules can match input such
as "'t'": T43, T52, T69, T80, T84, T112, Identifier
As a result, tokens(s) Identifier,T84,T80,T112,T69,T52 were disabled for
that input
warning(209): JavaRewrite.g:73:1: Multiple token rules can match input such
as "'*'": T29, T91
As a result, tokens(s) T91 were disabled for that input
warning(209): JavaRewrite.g:35:1: Multiple token rules can match input such
as "'v'": T40, T53, Identifier
As a result, tokens(s) Identifier,T53 were disabled for that input
warning(209): JavaRewrite.g:33:1: Multiple token rules can match input such
as "'s'": T27, T51, T54, T58, T64, T82, Identifier
As a result, tokens(s) Identifier,T64,T58,T54,T82,T51 were disabled for that
input
warning(209): JavaRewrite.g:770:1: Multiple token rules can match input such
as "'0'": HexLiteral, DecimalLiteral, OctalLiteral, FloatingPointLiteral
As a result, tokens(s) DecimalLiteral,FloatingPointLiteral,OctalLiteral were
disabled for that input
warning(209): JavaRewrite.g:778:1: Multiple token rules can match input such
as "'1'..'9'": DecimalLiteral, FloatingPointLiteral
As a result, tokens(s) FloatingPointLiteral were disabled for that input
warning(209): JavaRewrite.g:821:1: Multiple token rules can match input such
as "'l'": T60, Identifier
As a result, tokens(s) Identifier were disabled for that input
warning(209): JavaRewrite.g:818:1: Multiple token rules can match input such
as "'e'": T31, T76, ENUM, Identifier
As a result, tokens(s) Identifier,T76,ENUM were disabled for that input
warning(209): JavaRewrite.g:871:1: Multiple token rules can match input such
as "'/'": T92, T106, COMMENT, LINE_COMMENT
As a result, tokens(s) T106,COMMENT,LINE_COMMENT were disabled for that
input
warning(209): JavaRewrite.g:52:1: Multiple token rules can match input such
as "'f'": T49, T61, T70, T77, T81, Identifier
As a result, tokens(s) Identifier,T61,T81,T77,T70 were disabled for that
input
warning(209): JavaRewrite.g:49:1: Multiple token rules can match input such
as "'.'": T28, T67, FloatingPointLiteral
As a result, tokens(s) FloatingPointLiteral,T67 were disabled for that input
warning(209): JavaRewrite.g:61:1: Multiple token rules can match input such
as "'d'": T62, T72, T79, Identifier
As a result, tokens(s) Identifier,T72,T79 were disabled for that input
warning(209): JavaRewrite.g:28:1: Multiple token rules can match input such
as "'p'": T24, T45, T46, T47, Identifier
As a result, tokens(s) Identifier,T47,T45,T46 were disabled for that input
warning(209): JavaRewrite.g:67:1: Multiple token rules can match input such
as "'b'": T55, T57, T85, Identifier
As a result, tokens(s) Identifier,T57,T85 were disabled for that input
warning(209): JavaRewrite.g:87:1: Multiple token rules can match input such
as "'-'": T90, T105, T109
As a result, tokens(s) T109,T105 were disabled for that input
warning(209): JavaRewrite.g:80:1: Multiple token rules can match input such
as "'&'": T36, T93, T98
As a result, tokens(s) T93,T98 were disabled for that input
warning(209): JavaRewrite.g:79:1: Multiple token rules can match input such
as "'|'": T94, T97, T99
As a result, tokens(s) T99,T97 were disabled for that input
warning(209): JavaRewrite.g:89:1: Multiple token rules can match input such
as "'%'": T96, T107
As a result, tokens(s) T107 were disabled for that input
warning(209): JavaRewrite.g:83:1: Multiple token rules can match input such
as "'='": T44, T101
As a result, tokens(s) T101 were disabled for that input
warning(209): JavaRewrite.g:55:1: Multiple token rules can match input such
as "'a'": T48, T73, Identifier
As a result, tokens(s) Identifier,T73 were disabled for that input
warning(209): JavaRewrite.g:93:1: Multiple token rules can match input such
as "'!'": T102, T111
As a result, tokens(s) T111 were disabled for that input
warning(209): JavaRewrite.g:50:1: Multiple token rules can match input such
as "'n'": T50, T68, T113, Identifier
As a result, tokens(s) Identifier,T113,T68 were disabled for that input
warning(209): JavaRewrite.g:14:1: Multiple token rules can match input such
as "'i'": T26, T32, T39, T59, T75, T103, Identifier
As a result, tokens(s) T103,Identifier,T59,T75,T39,T32 were disabled for
that input
warning(209): JavaRewrite.g:69:1: Multiple token rules can match input such
as "'c'": T30, T56, T86, T87, T88, Identifier
As a result, tokens(s) Identifier,T86,T56,T88,T87 were disabled for that
input
warning(208): JavaRewrite.g:871:1: The following token definitions are
unreachable:
T32,T39,T45,T46,T47,T51,T52,T53,T54,T56,T57,T58,T59,T61,T64,T67,T68,T69,T70,T72,T73,T75,T76,T77,T79,T80,T81,T82,T84,T85,T86,T87,T88,T91,T93,T97,T98,T99,T100,T101,T103,T104,T105,T106,T107,T108,T109,T111,T112,T113,OctalLiteral,FloatingPointLiteral,ENUM,COMMENT,LINE_COMMENT


Having a template message a char longer is really an issue?? I cannot guess
what I'm missing...

Best regards
Roberto Mannai

-- 
Are you tired of making software? Play it! (http://www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/2f7a3c99/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Jun 22 17:06:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 23 Jun 2007 10:06:54 +1000
Subject: [antlr-interest] Duplicate nodes on a parse tree
In-Reply-To: <20070622164643.267070@gmx.net>
References: <20070622000740.93020@gmx.net>
	<C6F1B330-95CE-4FB4-B95E-2F5E0349422B@cs.usfca.edu>
	<20070622164643.267070@gmx.net>
Message-ID: <F79B7639-B7F4-43E6-B5B6-0FBF7F54A139@cs.usfca.edu>


On Jun 23, 2007, at 2:46 AM, Markus Kuhla wrote:

> Morning,
>
> I passed the parser to the ParseTreeBuilder constructor. In the  
> methods of this class where child nodes are added, I checked  
> parser.getBacktrackingLevel(). It always returned 0 (I don't use  
> the explicit option backtrack in the grammar).
>
> Any further hints?

yes. you're done. ;)  If no backtracking, then none is invoked in  
parser.

Ter

From dirty at apple.com  Fri Jun 22 18:41:21 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Fri, 22 Jun 2007 18:41:21 -0700
Subject: [antlr-interest] Dumping out lexer token stream?
Message-ID: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>

To help with my debugging, I would like to see the tokenized output  
from the lexer.  Before the parser gets a chance at, well, parsing it.

I can't seem to find anything in ANTLRWorks which will do this.  Does  
anyone have any suggestions?

Cameron Esfahani
dirty at apple.com

"There are times in the life of a nation when the only place a decent  
man can find himself is in prison."



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070622/666ea464/attachment.html 

From win at wincent.com  Sat Jun 23 01:28:10 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sat, 23 Jun 2007 10:28:10 +0200
Subject: [antlr-interest] Dumping out lexer token stream?
In-Reply-To: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
References: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
Message-ID: <0B48E475-7823-4943-BF6B-8AE59865BFC1@wincent.com>

El 23/6/2007, a las 3:41, Cameron Esfahani escribi?:

> To help with my debugging, I would like to see the tokenized output  
> from the lexer.  Before the parser gets a chance at, well, parsing it.
>
> I can't seem to find anything in ANTLRWorks which will do this.   
> Does anyone have any suggestions?
>
> Cameron Esfahani
> dirty at apple.com

Normally the lexer is invoked automatically by the parser, which  
repeatedly calls the "next token" method/function. So you can do the  
same and watch the token stream that way. For example, in the C  
target, something like the following (assuming you lexer is in the  
variable "lexer"):

     do
     {
         pANTLR3_COMMON_TOKEN token = lexer->pLexer->tokSource- 
 >nextToken(lexer->pLexer->tokSource);
         if (token == NULL)
             continue;
         ANTLR3_UINT32 type = token->getType(token);
         if (type == ANTLR3_TOKEN_EOF)
             break;

     // ...

     } while (1);

And inside your loop you can look at the matched chars (token->getText 
(token)->chars) or any other attributes that you are interested in.

Not sure if that's exactly what you're looking for, but hope it helps.

Cheers,
Wincent


From anders.hessellund at gmail.com  Sat Jun 23 03:49:30 2007
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Sat, 23 Jun 2007 12:49:30 +0200
Subject: [antlr-interest] newbie problems
Message-ID: <797a9f130706230349j39b3849exb160f9d64f935210@mail.gmail.com>

Hi,

I am sorry about the newbie question but neither google nor this list seems
to have any obvious answers to my question :)

I have just started with antlr by defining this little grammar:

grammar Web;
>
> site    :    page+
>     ;
>
> page    :    'PAGE' ID
>     ;
>
> ID    :    LETTER+
>     ;
>
> TEXT    :    LETTER ( LETTER | WS )*
>     ;
>
> LETTER    :    'a'..'z'|'A'..'Z'
>     ;
>
> NEWLINE    :    '\r'? '\n'
>     ;
>
> WS    :    (' ' | '\t' | '\n' | '\r' )+ { skip(); }
>     ;


Then I generate my lexer and parser tools and feed them the follow input
file

PAGE helloWorld


I get the following strange error. Could someone please explain why??

line 0:-1 required (...)+ loop did not match anything at input '<EOF>'



-- Anders
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/ffb7f52d/attachment.html 

From gevik at xs4all.nl  Sat Jun 23 05:46:59 2007
From: gevik at xs4all.nl (Gevik Babakhani)
Date: Sat, 23 Jun 2007 14:46:59 +0200
Subject: [antlr-interest] newbie problems
In-Reply-To: <797a9f130706230349j39b3849exb160f9d64f935210@mail.gmail.com>
References: <797a9f130706230349j39b3849exb160f9d64f935210@mail.gmail.com>
Message-ID: <000301c7b594$9758e080$0a01a8c0@gevbook>

Hi,

 

Here is a fix for your grammar. These things are well explained in the ANTLR
book.

 

grammar Test; 

 

site    :  page+

            ;

 

page    :            'PAGE' ID

            ;

 

ID         :           LETTER+

            ;

 

TEXT    :    LETTER ( LETTER )*

            ;

    

LETTER            :           'a'..'z'|'A'..'Z' 

            ;

 

    

WS       :           (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;}

            ;

 

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anders Hessellund
Sent: Saturday, June 23, 2007 12:50 PM
To: antlr
Subject: [antlr-interest] newbie problems

 

Hi,

I am sorry about the newbie question but neither google nor this list seems
to have any obvious answers to my question :)

I have just started with antlr by defining this little grammar:

grammar Web;

site    :    page+ 
    ;

page    :    'PAGE' ID
    ;

ID    :    LETTER+
    ;

TEXT    :    LETTER ( LETTER | WS )*
    ;
    
LETTER    :    'a'..'z'|'A'..'Z' 
    ;

NEWLINE    :    '\r'? '\n'
    ;

WS    :    (' ' | '\t' | '\n' | '\r' )+ { skip(); }
    ;


Then I generate my lexer and parser tools and feed them the follow input
file 

 

PAGE helloWorld


I get the following strange error. Could someone please explain why?? 

line 0:-1 required (...)+ loop did not match anything at input '<EOF>' 



-- Anders 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/0c61b9b0/attachment.html 

From anders.hessellund at gmail.com  Sat Jun 23 08:04:25 2007
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Sat, 23 Jun 2007 17:04:25 +0200
Subject: [antlr-interest] newbie problems
In-Reply-To: <000301c7b594$9758e080$0a01a8c0@gevbook>
References: <797a9f130706230349j39b3849exb160f9d64f935210@mail.gmail.com>
	<000301c7b594$9758e080$0a01a8c0@gevbook>
Message-ID: <797a9f130706230804u3da290b6xbc963e3d5e235960@mail.gmail.com>

Thanks,

that did the trick (although I am not entirely sure how).

-- Anders

2007/6/23, Gevik Babakhani <gevik at xs4all.nl>:
>
>  Hi,
>
>
>
> Here is a fix for your grammar. These things are well explained in the
> ANTLR book.
>
>
>
> grammar Test;
>
>
>
> site    :  page+
>
>             ;
>
>
>
> page    :            'PAGE' ID
>
>             ;
>
>
>
> ID         :           LETTER+
>
>             ;
>
>
>
> TEXT    :    LETTER ( LETTER )*
>
>             ;
>
>
>
> LETTER            :           'a'..'z'|'A'..'Z'
>
>             ;
>
>
>
>
>
> WS       :           (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;}
>
>             ;
>
>
>
>
>  ------------------------------
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Anders Hessellund
> *Sent:* Saturday, June 23, 2007 12:50 PM
> *To:* antlr
> *Subject:* [antlr-interest] newbie problems
>
>
>
> Hi,
>
> I am sorry about the newbie question but neither google nor this list
> seems to have any obvious answers to my question :)
>
> I have just started with antlr by defining this little grammar:
>
> grammar Web;
>
> site    :    page+
>     ;
>
> page    :    'PAGE' ID
>     ;
>
> ID    :    LETTER+
>     ;
>
> TEXT    :    LETTER ( LETTER | WS )*
>     ;
>
> LETTER    :    'a'..'z'|'A'..'Z'
>     ;
>
> NEWLINE    :    '\r'? '\n'
>     ;
>
> WS    :    (' ' | '\t' | '\n' | '\r' )+ { skip(); }
>     ;
>
>
> Then I generate my lexer and parser tools and feed them the follow input
> file
>
>
>
> PAGE helloWorld
>
>
> I get the following strange error. Could someone please explain why??
>
> line 0:-1 required (...)+ loop did not match anything at input '<EOF>'
>
>
>
> -- Anders
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/146a6e00/attachment-0001.html 

From jimi at temporal-wave.com  Sat Jun 23 09:10:55 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 23 Jun 2007 09:10:55 -0700
Subject: [antlr-interest] newbie problems
In-Reply-To: <000301c7b594$9758e080$0a01a8c0@gevbook>
References: <797a9f130706230349j39b3849exb160f9d64f935210@mail.gmail.com>
	<000301c7b594$9758e080$0a01a8c0@gevbook>
Message-ID: <051466DAA0D608439E196797955018D76E1B@wavemachine.temporal-wave.com>

This really needs to be:

 

fragment

LETTER: ('a'..'z' | 'A'..'Z') ;

 

Your original lexer was returning a token for NEWLINE but you had not
specified any way to deal with that token in the grammar.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gevik Babakhani
Sent: Saturday, June 23, 2007 5:47 AM
To: 'Anders Hessellund'; 'antlr'
Subject: Re: [antlr-interest] newbie problems

 

Hi,

 

Here is a fix for your grammar. These things are well explained in the
ANTLR book.

 

grammar Test; 

 

site    :  page+

            ;

 

page    :            'PAGE' ID

            ;

 

ID         :           LETTER+

            ;

 

TEXT    :    LETTER ( LETTER )*

            ;

    

LETTER            :           'a'..'z'|'A'..'Z' 

            ;

 

    

WS       :           (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;}

            ;

 

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anders Hessellund
Sent: Saturday, June 23, 2007 12:50 PM
To: antlr
Subject: [antlr-interest] newbie problems

 

Hi,

I am sorry about the newbie question but neither google nor this list
seems to have any obvious answers to my question :)

I have just started with antlr by defining this little grammar:

grammar Web;

site    :    page+ 
    ;

page    :    'PAGE' ID
    ;

ID    :    LETTER+
    ;

TEXT    :    LETTER ( LETTER | WS )*
    ;
    
LETTER    :    'a'..'z'|'A'..'Z' 
    ;

NEWLINE    :    '\r'? '\n'
    ;

WS    :    (' ' | '\t' | '\n' | '\r' )+ { skip(); }
    ;


Then I generate my lexer and parser tools and feed them the follow input
file 

	 

	PAGE helloWorld


I get the following strange error. Could someone please explain why?? 

line 0:-1 required (...)+ loop did not match anything at input '<EOF>' 



-- Anders 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/aaa8b012/attachment.html 

From rschulz at sonic.net  Sat Jun 23 09:22:40 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 23 Jun 2007 09:22:40 -0700
Subject: [antlr-interest] Dumping out lexer token stream?
In-Reply-To: <0B48E475-7823-4943-BF6B-8AE59865BFC1@wincent.com>
References: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
	<0B48E475-7823-4943-BF6B-8AE59865BFC1@wincent.com>
Message-ID: <200706230922.40604.rschulz@sonic.net>

On Saturday 23 June 2007 01:28, Wincent Colaiuta wrote:
> El 23/6/2007, a las 3:41, Cameron Esfahani escribi?:
> > To help with my debugging, I would like to see the tokenized output
> > from the lexer.  Before the parser gets a chance at, well, parsing
> > it.
> >
> > I can't seem to find anything in ANTLRWorks which will do this.
> > Does anyone have any suggestions?
> >
> > Cameron Esfahani
> > dirty at apple.com
>
> Normally the lexer is invoked automatically by the parser, which
> repeatedly calls the "next token" method/function. So you can do the
> same and watch the token stream that way. For example, in the C
> target, something like the following (assuming you lexer is in the
> variable "lexer"):

Oddly enough, I wanted to do exactly the same right now when I've only
written the lexical portion of my grammar.

I wrote this test code (use a fixed-width font, of course):

  CLIFLexer           lexer       = null;
  PrintStream         out         = System.out;

  try {
    lexer = new CLIFLexer(new ANTLRFileStream(fileName));
  }

  catch (IOException exIO) {
    System.err.printf("CLIF: Cannot open file \"\%s\"\%n", fileName);
    return;
  }


  out.format("\%nParsing \"\%s\"\%n", fileName);

  TokenStream         tokens      = new CommonTokenStream(lexer);
  int                 nTokens     = tokens.size();

  for (int iToken = 0; iToken < nTokens; iToken++) {
    Token             token       = tokens.get(iToken);

    out.format("\%6d: \%4d.\%3d: T\%3d-C\%3d; \"\%s\"\%n",
               iToken,
               token.getLine(), token.getCharPositionInLine(),
               token.getType(), token.getChannel(),
               token.getText());
  }


When I apply this to a file with lots of source code that matches the
lexical grammar I've defined, I always get an nTokens value of 0.

The JavaDoc comment on CommonTokenStream implies that it will scan the
entire input and build a sequence of tokens in advance, yet that does
not seem to be happening.

And no exception is thrown (unless the file name is not valid).


What am I missing / doing wrong?


> ...
>
> Cheers,
> Wincent


Randall Schulz

From tbrandonau at gmail.com  Sat Jun 23 09:35:05 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sun, 24 Jun 2007 02:35:05 +1000
Subject: [antlr-interest] Dumping out lexer token stream?
In-Reply-To: <200706230922.40604.rschulz@sonic.net>
References: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
	<0B48E475-7823-4943-BF6B-8AE59865BFC1@wincent.com>
	<200706230922.40604.rschulz@sonic.net>
Message-ID: <ebc876d70706230935p2e62e05dx30eb8a022aa233c9@mail.gmail.com>

On 6/24/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Saturday 23 June 2007 01:28, Wincent Colaiuta wrote:
> > El 23/6/2007, a las 3:41, Cameron Esfahani escribi?:
> > > To help with my debugging, I would like to see the tokenized output
> > > from the lexer.  Before the parser gets a chance at, well, parsing
> > > it.
> > >
> > > I can't seem to find anything in ANTLRWorks which will do this.
> > > Does anyone have any suggestions?
> > >
> > > Cameron Esfahani
> > > dirty at apple.com
> >
> > Normally the lexer is invoked automatically by the parser, which
> > repeatedly calls the "next token" method/function. So you can do the
> > same and watch the token stream that way. For example, in the C
> > target, something like the following (assuming you lexer is in the
> > variable "lexer"):
>
> Oddly enough, I wanted to do exactly the same right now when I've only
> written the lexical portion of my grammar.
>
> I wrote this test code (use a fixed-width font, of course):
>
>   CLIFLexer           lexer       = null;
>   PrintStream         out         = System.out;
>
>   try {
>     lexer = new CLIFLexer(new ANTLRFileStream(fileName));
>   }
>
>   catch (IOException exIO) {
>     System.err.printf("CLIF: Cannot open file \"\%s\"\%n", fileName);
>     return;
>   }
>
>
>   out.format("\%nParsing \"\%s\"\%n", fileName);
>
>   TokenStream         tokens      = new CommonTokenStream(lexer);
>   int                 nTokens     = tokens.size();
>
>   for (int iToken = 0; iToken < nTokens; iToken++) {
>     Token             token       = tokens.get(iToken);
>
>     out.format("\%6d: \%4d.\%3d: T\%3d-C\%3d; \"\%s\"\%n",
>                iToken,
>                token.getLine(), token.getCharPositionInLine(),
>                token.getType(), token.getChannel(),
>                token.getText());
>   }
>
>
> When I apply this to a file with lots of source code that matches the
> lexical grammar I've defined, I always get an nTokens value of 0.
>
> The JavaDoc comment on CommonTokenStream implies that it will scan the
> entire input and build a sequence of tokens in advance, yet that does
> not seem to be happening.
>
> And no exception is thrown (unless the file name is not valid).
>
>
> What am I missing / doing wrong?
>
The size method doesn't trigger the filling of the token buffer.
Calling the LT method (or one of the other methods that trigger the
buffer to be filled) before checking the size should fill the entire
buffer and make your code work correctly. Or you can use getTokens()
to fill the buffer and then operate on the returned reference to the
buffer.
Perhaps size() could be altered to either fill the buffer if it hasn't
already been or return -1 in this case as this seems like an obvious
pattern to use and without looking at the source it isn't clear what's
going on.

>
> > ...
> >
> > Cheers,
> > Wincent
>
>
> Randall Schulz
>

Tom.

From rschulz at sonic.net  Sat Jun 23 09:37:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 23 Jun 2007 09:37:45 -0700
Subject: [antlr-interest] Dumping out lexer token stream?
In-Reply-To: <200706230922.40604.rschulz@sonic.net>
References: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
	<0B48E475-7823-4943-BF6B-8AE59865BFC1@wincent.com>
	<200706230922.40604.rschulz@sonic.net>
Message-ID: <200706230937.45347.rschulz@sonic.net>

Hello again,

It turns out this was a false alarm. My execution class-path was all 
messed up, though that in my IDE and in my Ant file was correct.

Sorry for the noise.

For the Java users, the code I used is one example of how to dump the 
token stream.


Randall Schulz


On Saturday 23 June 2007 09:22, Randall R Schulz wrote:
> ...
>
> I wrote this test code (use a fixed-width font, of course):
>
>   CLIFLexer           lexer       = null;
>   PrintStream         out         = System.out;
>
>   try {
>     lexer = new CLIFLexer(new ANTLRFileStream(fileName));
>   }
>
>   catch (IOException exIO) {
>     System.err.printf("CLIF: Cannot open file \"\%s\"\%n", fileName);
>     return;
>   }
>
>
>   out.format("\%nParsing \"\%s\"\%n", fileName);
>
>   TokenStream         tokens      = new CommonTokenStream(lexer);
>   int                 nTokens     = tokens.size();
>
>   for (int iToken = 0; iToken < nTokens; iToken++) {
>     Token             token       = tokens.get(iToken);
>
>     out.format("\%6d: \%4d.\%3d: T\%3d-C\%3d; \"\%s\"\%n",
>                iToken,
>                token.getLine(), token.getCharPositionInLine(),
>                token.getType(), token.getChannel(),
>                token.getText());
>   }


From rschulz at sonic.net  Sat Jun 23 09:42:06 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 23 Jun 2007 09:42:06 -0700
Subject: [antlr-interest] Dumping out lexer token stream?
In-Reply-To: <200706230937.45347.rschulz@sonic.net>
References: <99AE28D8-1262-4057-A82A-C7B369213ACD@apple.com>
	<200706230922.40604.rschulz@sonic.net>
	<200706230937.45347.rschulz@sonic.net>
Message-ID: <200706230942.06994.rschulz@sonic.net>

On Saturday 23 June 2007 09:37, Randall R Schulz wrote:
> Hello again,
>
> It turns out this was a false alarm. My execution class-path was all
> messed up, though that in my IDE and in my Ant file was correct.

Actually, it was apparently more than one problem.

As Thomas pointed out, you must call a method other than size() to 
trigger filling the token buffer.

When I wrote my "false alarm" message, I had changed the code to call 
getTokens() and iterate over the List it returns.


> Sorry for the noise.

... again


Randall Schulz

From 1115201006 at HotPOP.com  Sat Jun 23 10:17:14 2007
From: 1115201006 at HotPOP.com (1115201006 at HotPOP.com)
Date: Sat, 23 Jun 2007 19:17:14 +0200
Subject: [antlr-interest] Problem with Ruby code generation target
Message-ID: <f5jkjp$qkv$1@sea.gmane.org>

Hi all,
I've a problem with the code generation in Ruby, where I try to generate
code from the sample grammar Calculator.g (distribuited with the Antlr
sources) I get this errors:

[19:09:34] error(10):  internal error: group Ruby does not satisfy interface
ANTLRCore: missing templates [lexerRuleRefAndListLabel] 

[19:09:34] error(10):  internal error: group Ruby does not satisfy interface
ANTLRCore: mismatched arguments on these templates [charRangeRef(a, b,
label), lexerRuleRef(rule, label, args, elementIndex), lexerMatchEOF(label,
elementIndex), tree(root, actionsAfterRoot, children, nullableChildList)] 

there's a solution? a workaround?
I've Antlrworks 1.0.2 on a linux box




From pink at odahoda.de  Sat Jun 23 10:52:03 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 23 Jun 2007 19:52:03 +0200
Subject: [antlr-interest] Problem with Ruby code generation target
References: <f5jkjp$qkv$1@sea.gmane.org>
Message-ID: <f5jmk3$11b$1@sea.gmane.org>

Hi,

1115201006 at HotPOP.com wrote:

> I've a problem with the code generation in Ruby, where I try to generate
> code from the sample grammar Calculator.g (distribuited with the Antlr
> sources) I get this errors:
> 
> [19:09:34] error(10):  internal error: group Ruby does not satisfy
> [interface
> ANTLRCore: missing templates [lexerRuleRefAndListLabel]
> 
> [19:09:34] error(10):  internal error: group Ruby does not satisfy
> [interface
> ANTLRCore: mismatched arguments on these templates [charRangeRef(a, b,
> label), lexerRuleRef(rule, label, args, elementIndex),
> lexerMatchEOF(label, elementIndex), tree(root, actionsAfterRoot, children,
> nullableChildList)]
> 
> there's a solution? a workaround?
> I've Antlrworks 1.0.2 on a linux box

Ruby from the 3.0 distribution is broken - don't know which version is
included in antlrworks. But Martin is currently working on it (commit
message from the perforce repository):

3843 by martin 23 June 2007, 03:13:50 -0500 (9 hours ago)
 - fixed calculator example 
 - hidden channel is identified by :hidden symbol

So you may grab it from <http://fisheye2.cenqua.com/browse/antlr/>, build it
and (somehow) tell antlrworks to use that version. Or wait for the next
release.


HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From jneeraj at us.ibm.com  Sat Jun 23 14:51:05 2007
From: jneeraj at us.ibm.com (Neeraj Joshi)
Date: Sat, 23 Jun 2007 17:51:05 -0400
Subject: [antlr-interest] Linker errors linking antlr 2.7.7 to product
	library using vc6
In-Reply-To: <mailman.1.1182625201.20838.antlr-interest@antlr.org>
Message-ID: <OF272C6BCA.B2E989A5-ON85257303.007513F8-85257303.0077D783@us.ibm.com>

Hi All,
I compiled antlr 2.7.7 using vc6 without any trouble, however I am running 
into linker errors while linking the generated antlr.lib with my product 
code. In one of the older posts I found a reference advising to use /MTd
flag while compiling. But that doesn't seem to help.
Any help is greatly appreciated!
Thanks in advance
Neeraj

ps.

(I have deleted some error messages to shorten the size of the email)

C:\neeraj\policy\workspace\pegasus\src\Providers\ManagedSystem\PolicyProvider>make



link -nologo -dll -debug 
-out:C:/neeraj/policy/workspace/pegasus/pegasus-exec/bin/PolicyProvider.dll 
-implib:C:/neeraj/policy/workspace/pegasus/pegasus-exec/lib/PolicyProvider.lib 

msvcprtd.lib(MSVCP60D.dll) : error LNK2005: "public: __thiscall 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> >::~basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >(void)" 
(??1?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAE at XZ) 
already defined in antlr.lib(CharScanner.obj)
msvcprtd.lib(MSVCP60D.dll) : error LNK2005: "public: __thiscall 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> >::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >(char const *,class 
std::allocator<char> const &)" 
(??0?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAE at PBDABV?$allocator at D@1@@Z) 
already defined in antlr.lib(CharScanner.obj)
msvcprtd.lib(MSVCP60D.dll) : error LNK2005: "public: class 
std::basic_ostream<char,struct std::char_traits<char> > & __thiscall 
std::basic_ostream<char,struct std::char_traits<char> >::operator<<(class 
std::basic_ostream<char,struct std::char_traits<char> > & (__cdecl*)(class 
std::basic_ostream<char,struct std::char_traits<char> > &))" 
(??6?$basic_ostream at DU?$char_traits at D@std@@@std@@QAEAAV01 at P6AAAV01@AAV01@@Z at Z) 
already defined in antlr.lib(CharScanner.obj)


msvcprtd.lib(MSVCP60D.dll) : error LNK2005: "bool __cdecl 
std::operator==(class std::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> > const &,class 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> > const &)" 
(??8std@@YA_NABV?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@0 at 0@Z) 
already defined in antlr.lib(CommonAST.obj)
msvcprtd.lib(MSVCP60D.dll) : error LNK2005: "public: __thiscall 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> >::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >(class 
std::allocator<char> const &)" 
(??0?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAE at ABV?$allocator at D@1@@Z) 
already defined in antlr.lib(CharScanner.obj)
libcpmtd.lib(iostream.obj) : error LNK2005: "public: __thiscall 
std::ios_base::Init::Init(void)" (??0Init at ios_base@std@@QAE at XZ) already 
defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(iostream.obj) : error LNK2005: "public: __thiscall 
std::ios_base::Init::~Init(void)" (??1Init at ios_base@std@@QAE at XZ) already 
defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale0.obj) : error LNK2005: "public: class 
std::locale::facet const * __thiscall std::locale::_Getfacet(unsigned 
int,bool)const " (?_Getfacet at locale@std@@QBEPBVfacet at 12@I_N at Z) already 
defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale0.obj) : error LNK2005: "public: bool __thiscall 
std::locale::_Iscloc(void)const " (?_Iscloc at locale@std@@QBE_NXZ) already 
defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "public: __thiscall 
std::runtime_error::runtime_error(class std::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> > const &)" 
(??0runtime_error at std@@QAE at ABV?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@1@@Z) 
already defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "public: virtual __thiscall 
std::runtime_error::~runtime_error(void)" (??1runtime_error at std@@UAE at XZ) 
already defined in msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "public: virtual char const * 
__thiscall std::runtime_error::what(void)const " 
(?what at runtime_error@std@@UBEPBDXZ) already defined in 
msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "protected: virtual void 
__thiscall std::runtime_error::_Doraise(void)const " 
(?_Doraise at runtime_error@std@@MBEXXZ) already defined in 
msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "public: __thiscall 
std::runtime_error::runtime_error(class std::runtime_error const &)" 
(??0runtime_error at std@@QAE at ABV01@@Z) already defined in 
msvcprtd.lib(MSVCP60D.dll)
libcpmtd.lib(locale.obj) : error LNK2005: "public: __thiscall 
std::_Locinfo::_Locinfo(char const *)" (??0_Locinfo at std@@QAE at PBD@Z) 
already defined in msvcprtd.lib(MSVCP60D.dll)

LIBCMTD.lib(dbgheap.obj) : error LNK2005: __malloc_dbg already defined in 
MSVCRTD.lib(MSVCRTD.dll)
LIBCMTD.lib(dbgheap.obj) : error LNK2005: _free already defined in 
MSVCRTD.lib(MSVCRTD.dll)
LIBCMTD.lib(dbgheap.obj) : error LNK2005: __free_dbg already defined in 
MSVCRTD.lib(MSVCRTD.dll)
LIBCMTD.lib(tolower.obj) : error LNK2005: _tolower already defined in 
MSVCRTD.lib(MSVCRTD.dll)
LIBCMTD.lib(crt0init.obj) : error LNK2005: ___xc_z already defined in 
MSVCRTD.lib(cinitexe.obj)
LIBCMTD.lib(crt0init.obj) : error LNK2005: ___xc_a already defined in 
MSVCRTD.lib(cinitexe.obj)
LIBCMTD.lib(crt0init.obj) : error LNK2005: ___xi_z already defined in 
MSVCRTD.lib(cinitexe.obj)
LIBCMTD.lib(crt0init.obj) : error LNK2005: ___xi_a already defined in 
MSVCRTD.lib(cinitexe.obj)
LIBCMTD.lib(lconv.obj) : error LNK2005: _localeconv already defined in 
MSVCRTD.lib(MSVCRTD.dll)
LIBCMTD.lib(getenv.obj) : error LNK2005: _getenv already defined in 
MSVCRTD.lib(MSVCRTD.dll)
MSVCRTD.lib(MSVCRTD.dll) : error LNK2005: __stricmp already defined in 
LIBCMTD.lib(stricmp.obj)

msvcprtd.lib(MSVCP60D.dll) : warning LNK4006: "public: char const & 
__thiscall std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> >::operator[](unsigned int)const " 
(??A?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QBEABDI at Z) 
already defined in antlr.lib(CharScanner.obj); second definition ignored
msvcprtd.lib(MSVCP60D.dll) : warning LNK4006: "public: class 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> > & __thiscall std::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >::operator=(class 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> > const &)" 
(??4?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAEAAV01 at ABV01@@Z) 
already defined in antlr.lib(CharScanner.obj); second definition ignored
msvcprtd.lib(MSVCP60D.dll) : warning LNK4006: "public: class 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> > & __thiscall std::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >::operator=(char const 
*)" 
(??4?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAEAAV01 at PBD@Z) 
already defined in antlr.lib(CharScanner.obj); second definition ignored

msvcprtd.lib(MSVCP60D.dll) : warning LNK4006: "public: __thiscall 
std::basic_string<char,struct std::char_traits<char>,class 
std::allocator<char> >::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> >(class 
std::allocator<char> const &)" 
(??0?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@std@@QAE at ABV?$allocator at D@1@@Z) 
already defined in antlr.lib(CharScanner.obj); second definition ignored
libcpmtd.lib(iostream.obj) : warning LNK4006: "public: __thiscall 
std::ios_base::Init::Init(void)" (??0Init at ios_base@std@@QAE at XZ) already 
defined in msvcprtd.lib(MSVCP60D.dll); second definition ignored
libcpmtd.lib(iostream.obj) : warning LNK4006: "public: __thiscall 
std::ios_base::Init::~Init(void)" (??1Init at ios_base@std@@QAE at XZ) already 
defined in msvcprtd.lib(MSVCP60D.dll); second definition ignored
libcpmtd.lib(locale0.obj) : warning LNK4006: "public: class 
std::locale::facet const * __thiscall std::locale::_Getfacet(unsigned 
int,bool)const " (?_Getfacet at locale@std@@QBEPBVfacet at 12@I_N at Z) already 
defined in msvcprtd.lib(MSVCP60D.dll); second definition ignored

libcpmtd.lib(ios.obj) : warning LNK4006: "protected: virtual void 
__thiscall std::runtime_error::_Doraise(void)const " 
(?_Doraise at runtime_error@std@@MBEXXZ) already defined in 
msvcprtd.lib(MSVCP60D.dll); second definition ignored
libcpmtd.lib(ios.obj) : warning LNK4006: "public: virtual __thiscall 
std::runtime_error::~runtime_error(void)" (??1runtime_error at std@@UAE at XZ) 
already defined in msvcprtd.lib(MSVCP60D.dll); second definition ignored
libcpmtd.lib(ios.obj) : warning LNK4006: "public: __thiscall 
std::runtime_error::runtime_error(class std::basic_string<char,struct 
std::char_traits<char>,class std::allocator<char> > const &)" 
(??0runtime_error at std@@QAE at ABV?$basic_string at DU?$char_traits at D@std@@V?$allocator at D@2@@1@@Z) 
already defined in msvcprtd.lib(MSVCP60D.dll); second definition ignored

LIBCMTD.lib(crt0init.obj) : warning LNK4006: ___xi_a already defined in 
MSVCRTD.lib(cinitexe.obj); second definition ignored
LIBCMTD.lib(lconv.obj) : warning LNK4006: _localeconv already defined in 
MSVCRTD.lib(MSVCRTD.dll); second definition ignored
LIBCMTD.lib(getenv.obj) : warning LNK4006: _getenv already defined in 
MSVCRTD.lib(MSVCRTD.dll); second definition ignored
MSVCRTD.lib(MSVCRTD.dll) : warning LNK4006: __stricmp already defined in 
LIBCMTD.lib(stricmp.obj); second definition ignored
   Creating library 
C:/neeraj/policy/workspace/pegasus/pegasus-exec/lib/PolicyProvider.lib and 
object 
C:/neeraj/policy/workspace/pegasus/pegasus-exec/lib/PolicyProvider.exp
LINK : warning LNK4098: defaultlib "MSVCRTD" conflicts with use of other 
libs; use /NODEFAULTLIB:library
LINK : warning LNK4098: defaultlib "LIBCMTD" conflicts with use of other 
libs; use /NODEFAULTLIB:library
LINK : warning LNK4098: defaultlib "LIBC" conflicts with use of other 
libs; use /NODEFAULTLIB:library
ExpressionFactory.obj : error LNK2001: unresolved external symbol "public: 
virtual class Pegasus::String const __thiscall 
Pegasus::LogicalAnd::toString(void)const " 
(?toString at LogicalAnd@Pegasus@@UBE?BVString at 2@XZ)
LIBCMTD.lib(crt0.obj) : error LNK2001: unresolved external symbol _main
C:/neeraj/policy/workspace/pegasus/pegasus-exec/bin/PolicyProvider.dll : 
fatal error LNK1120: 2 unresolved externals
make: *** 
[C:/neeraj/policy/workspace/pegasus/pegasus-exec/lib/PolicyProvider.lib] 
Error 1120

C:\neeraj\policy\workspace\pegasus\src\Providers\ManagedSystem\PolicyProvider>






















































































































~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"'In the end, everything is fine. If it is not, it is not the end" 
Neeraj Joshi
Staff Software Engineer
Autonomic Computing Division
(919)543-5298
TIE: 441-5298
Ext: 3-5298
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070623/340b5487/attachment.html 

From stuart.dootson at gmail.com  Sat Jun 23 15:43:31 2007
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Sat, 23 Jun 2007 23:43:31 +0100
Subject: [antlr-interest] Linker errors linking antlr 2.7.7 to product
	library using vc6
In-Reply-To: <OF272C6BCA.B2E989A5-ON85257303.007513F8-85257303.0077D783@us.ibm.com>
References: <mailman.1.1182625201.20838.antlr-interest@antlr.org>
	<OF272C6BCA.B2E989A5-ON85257303.007513F8-85257303.0077D783@us.ibm.com>
Message-ID: <8b56cad40706231543n7228893er704eb7c88ceb9efc@mail.gmail.com>

On 23/06/07, Neeraj Joshi <jneeraj at us.ibm.com> wrote:
>
> Hi All,
> I compiled antlr 2.7.7 using vc6 without any trouble, however I am running
> into linker errors while linking the generated antlr.lib with my product
> code. In one of the older posts I found a reference advising to use /MTd
> flag while compiling. But that doesn't seem to help.
> Any help is greatly appreciated!
> Thanks in advance
> Neeraj
>
> ps.
>

Neeraj - you need to compile the Antlr runtime library *and* your code
with the same C runtime library options. So, if you compile the
library with /MTd, you need to compile your code /MTd.

I usually incorporate the Antlr runtime into my VC++ workspace as a
static library project, so that I can ensure that my application gets
linked against the correctly compiled Antlr runtime.

Stuart Dootson

From tgleason at gmail.com  Sat Jun 23 19:56:14 2007
From: tgleason at gmail.com (Tim Gleason)
Date: Sat, 23 Jun 2007 22:56:14 -0400
Subject: [antlr-interest] Why doesn't this work?
Message-ID: <e6f4d06e0706231956r55e31776o876525a02b0a1e91@mail.gmail.com>

I'm sorry for bothering you guys.  I've been translating a grammar
from a book into ANTLR and I can't seem to get passed a problem with
expressions and parenthesis.  At the bottom of included a subset of
the grammar that demonstrates the problem.

For some reason the parser gets confused when it sees '('.  It doesn't
seem to know if it is grouping an expression or the parameters of a
function call.  But I don't /think/ the grammar is ambiguous.

The simplest case that fails is the input to the 'statement' rule:

foo();

It will fail to parse at rule 'expression'.  But if I remove the line
marked with an asterisk, it parses fine.  I don't understand how one
affects the other.

Any help would be greatly appreciated!

Thanks,
tim


statement
	:	expression ';';

expression
	:	functionCall
	|	(functionCall ('*'|'/')) => functionCall ('*'|'/') expression
	;


functionCall
	:       basicExpression ('(' expressionList? ')')?
	;	
	
expressionList
	:	expression (',' expression)*
	;	
	
basicExpression
	:	ID
	|	constant
	|	'(' expression ')'        //  ****  Remove this line
	;	

constant:	'true' | 'false' | INT;

ID 	:	('A'..'Z'|'a'..'z')+;
INT 	:	('0'..'9')+;
WS	:	('\r'|'\n'|'\t'|' ') {skip();};

From jbb at acm.org  Sun Jun 24 12:02:46 2007
From: jbb at acm.org (John B. Brodie)
Date: Sun, 24 Jun 2007 15:02:46 -0400
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <e6f4d06e0706231956r55e31776o876525a02b0a1e91@mail.gmail.com>
	(message from Tim Gleason on Sat, 23 Jun 2007 22:56:14 -0400)
References: <e6f4d06e0706231956r55e31776o876525a02b0a1e91@mail.gmail.com>
Message-ID: <E1I2XME-00022L-00@gecko>


Tim Gleason asked (in part):
>I'm sorry for bothering you guys.  I've been translating a grammar
>from a book into ANTLR and I can't seem to get passed a problem with
>expressions and parenthesis.  At the bottom of included a subset of
>the grammar that demonstrates the problem.
>
>For some reason the parser gets confused when it sees '('.  It doesn't
>seem to know if it is grouping an expression or the parameters of a
>function call.  But I don't /think/ the grammar is ambiguous.
>
>The simplest case that fails is the input to the 'statement' rule:
>
>foo();
>
>It will fail to parse at rule 'expression'.  But if I remove the line
>marked with an asterisk, it parses fine.  I don't understand how one
>affects the other.
>
>Any help would be greatly appreciated!
>...snipped...

I can not explain why. But it would seem that your predicate in the
expression rule is causing something to go awry. If I replace your
expression rule with:

expression
        :       functionCall ( ('*'|'/') functionCall )*
        ;

then all of the strings "foo;", "foo*2;", "(foo);", and "foo();" are
parsed without complaint.

Hope this helps...
    -jbb

From tgleason at gmail.com  Sun Jun 24 14:40:22 2007
From: tgleason at gmail.com (Tim Gleason)
Date: Sun, 24 Jun 2007 17:40:22 -0400
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <E1I2XME-00022L-00@gecko>
References: <e6f4d06e0706231956r55e31776o876525a02b0a1e91@mail.gmail.com>
	<E1I2XME-00022L-00@gecko>
Message-ID: <e6f4d06e0706241440v7b88f841p3c31de27b762f88@mail.gmail.com>

Huh.  That worked.  I'm not sure whether to feel silly or confused --
so I'll stick with a little of both :)

Thank you!
tim


On 6/24/07, John B. Brodie <jbb at acm.org> wrote:
>
> Tim Gleason asked (in part):
> >I'm sorry for bothering you guys.  I've been translating a grammar
> >from a book into ANTLR and I can't seem to get passed a problem with
> >expressions and parenthesis.  At the bottom of included a subset of
> >the grammar that demonstrates the problem.
> >
> >For some reason the parser gets confused when it sees '('.  It doesn't
> >seem to know if it is grouping an expression or the parameters of a
> >function call.  But I don't /think/ the grammar is ambiguous.
> >
> >The simplest case that fails is the input to the 'statement' rule:
> >
> >foo();
> >
> >It will fail to parse at rule 'expression'.  But if I remove the line
> >marked with an asterisk, it parses fine.  I don't understand how one
> >affects the other.
> >
> >Any help would be greatly appreciated!
> >...snipped...
>
> I can not explain why. But it would seem that your predicate in the
> expression rule is causing something to go awry. If I replace your
> expression rule with:
>
> expression
>         :       functionCall ( ('*'|'/') functionCall )*
>         ;
>
> then all of the strings "foo;", "foo*2;", "(foo);", and "foo();" are
> parsed without complaint.
>
> Hope this helps...
>     -jbb
>

From anders.hessellund at gmail.com  Mon Jun 25 04:35:01 2007
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 25 Jun 2007 13:35:01 +0200
Subject: [antlr-interest] what does .* match
Message-ID: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>

Hi,

I just bought the new ANTLR book, but I can not find any good description of
what the .* notation means. On p.85-6 there is an example of comments:

ML_COMMENT : '/*' .* '*/';


According to the book, this matches any character until it encounters */

In my implementation it does however complain about '*' with the 'no viable
alternative' error. Does '.*' match everything except '*'?

-- AH
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/892924fd/attachment.html 

From jaluber at gmx.de  Mon Jun 25 04:39:53 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Jun 2007 13:39:53 +0200
Subject: [antlr-interest] what does .* match
In-Reply-To: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>
References: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>
Message-ID: <467FA989.40706@gmx.de>

Anders Hessellund wrote:
> Hi,
> 
> I just bought the new ANTLR book, but I can not find any good
> description of what the .* notation means. On p.85-6 there is an example
> of comments:
> 
>     ML_COMMENT : '/*' .* '*/';
> 
> 
> According to the book, this matches any character until it encounters */
> 
> In my implementation it does however complain about '*' with the 'no
> viable alternative' error. Does '.*' match everything except '*'?

Having not seen your grammar, I can't be sure why you receive your
complaint, but it shouldn't be because of ".*". The meaning of "." is 1.
Any character, 2. Any token, 3. Any subtree, depending on the position
of "." and kind of grammar you are using. In your case it is 1. For
further diagnostics please post your entire grammar.

Best regards,
Johannes Luber

From win at wincent.com  Mon Jun 25 04:39:56 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 25 Jun 2007 13:39:56 +0200
Subject: [antlr-interest] what does .* match
In-Reply-To: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>
References: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>
Message-ID: <E66CBD25-F836-4391-AA93-9F75147D6E14@wincent.com>

El 25/6/2007, a las 13:35, Anders Hessellund escribi?:

> Hi,
>
> I just bought the new ANTLR book, but I can not find any good  
> description of
> what the .* notation means. On p.85-6 there is an example of comments:
>
> ML_COMMENT : '/*' .* '*/';
>
>
> According to the book, this matches any character until it  
> encounters */
>
> In my implementation it does however complain about '*' with the  
> 'no viable
> alternative' error. Does '.*' match everything except '*'?

In a parser rule "." matches any token.

In a lexer rule, it matches any character.

Furthermore, ANTLR assumes that when you say ".*" you really want a  
non-greedy match. So in the case of the rule you post above, the ".*"  
means "match any character until you see the thing that lies beyond  
the subrule" (in this case, the "*/").

In order to explain the error you're seeing we'd need to see the  
other rules and the input you're trying to feed in.

Cheers,
Wincent


From aliaazimi at yahoo.com  Mon Jun 25 04:43:37 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 25 Jun 2007 04:43:37 -0700 (PDT)
Subject: [antlr-interest] newbie problem
Message-ID: <707458.66560.qm@web58114.mail.re3.yahoo.com>

Hi,
   
  I am trying to build AST from some grammar which ends up in some error messages similar to the following being produced:
   
  C:\MyProjects\Final Project\src\finalProject1\ExprASTParser.java:159: cannot find symbol
  symbol  : constructor RewriteRuleTokenStream(org.antlr.runtime.TreeAdaptor,java.lang.String)
  location: class org.antlr.runtime.tree.RewriteRuleTokenStream
          RewriteRuleTokenStream stream_8=new RewriteRuleTokenStream(adaptor,"token 8");
   
  I think I need to add some code into the class org.antlr.runtime.tree.RewriteRuleTokenStream. But I do not know what I need to add. Could you please help me?
   
  Thank you very much in advance.
   
  Regards
  Al

       
---------------------------------
Sick sense of humor? Visit Yahoo! TV's Comedy with an Edge to see what's on, when. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/7cb12850/attachment.html 

From jaluber at gmx.de  Mon Jun 25 05:02:20 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Jun 2007 14:02:20 +0200
Subject: [antlr-interest] Grammar generation results in exception
Message-ID: <467FAECC.5020405@gmx.de>

Hello!

I've been working on a ANTLR3-to-RelaxNG converter based on Terence's
ANTLRv3.g. When I want to generate the corresponding C#-files, I receive
following output:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
warning(105): ANTLR3ToRelaxNG.g:155:4: no lexer rule corresponding to
token: DOC_COMMENT
warning(105): ANTLR3ToRelaxNG.g:299:19: no lexer rule corresponding to
token: SEMPRED
warning(105): ANTLR3ToRelaxNG.g:271:20: no lexer rule corresponding to
token: RANGE
warning(105): ANTLR3ToRelaxNG.g:235:6: no lexer rule corresponding to
token: SEMPRED
warning(105): ANTLR3ToRelaxNG.g:93:9: no lexer rule corresponding to
token: DOC_COMMENT
warning(200): ANTLR3ToRelaxNG.g:312:7: Decision can match input such as
"TOKEN_REF '(' TOKEN_REF '='" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
error(10):  internal error: ANTLR3ToRelaxNG.g :
java.lang.IllegalArgumentException: Can't find template
tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1992)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)

Lies the error with mine code or is it an ANTLR bug? The file is
attached. And if I didn't change the license text correctly, please let
me know!

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/4ec15582/attachment-0001.pl 

From rerdavies at rogers.com  Mon Jun 25 05:43:56 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Mon, 25 Jun 2007 08:43:56 -0400
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <E1I2XME-00022L-00@gecko>
References: <e6f4d06e0706231956r55e31776o876525a02b0a1e91@mail.gmail.com>
	<E1I2XME-00022L-00@gecko>
Message-ID: <E4439B1A7FD746639390051FD6C0CE09@GWB>

These two alternatives are in the wrong order:

expression
: functionCall
| (functionCall ('*'|'/')) => functionCall ('*'|'/') expression
;

When the first alternative matches functionCall, the rule is done, and no 
attempt is made to match ('*'|'/').




----- Original Message ----- 
From: "John B. Brodie" <jbb at acm.org>
To: <tgleason at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Sunday, June 24, 2007 3:02 PM
Subject: Re: [antlr-interest] Why doesn't this work?


>
> Tim Gleason asked (in part):
>>I'm sorry for bothering you guys.  I've been translating a grammar
>>from a book into ANTLR and I can't seem to get passed a problem with
>>expressions and parenthesis.  At the bottom of included a subset of
>>the grammar that demonstrates the problem.
>>
>>For some reason the parser gets confused when it sees '('.  It doesn't
>>seem to know if it is grouping an expression or the parameters of a
>>function call.  But I don't /think/ the grammar is ambiguous.
>>
>>The simplest case that fails is the input to the 'statement' rule:
>>
>>foo();
>>
>>It will fail to parse at rule 'expression'.  But if I remove the line
>>marked with an asterisk, it parses fine.  I don't understand how one
>>affects the other.
>>
>>Any help would be greatly appreciated!
>>...snipped...
>
> I can not explain why. But it would seem that your predicate in the
> expression rule is causing something to go awry. If I replace your
> expression rule with:
>
> expression
>        :       functionCall ( ('*'|'/') functionCall )*
>        ;
>
> then all of the strings "foo;", "foo*2;", "(foo);", and "foo();" are
> parsed without complaint.
>
> Hope this helps...
>    -jbb 


From tbrandonau at gmail.com  Mon Jun 25 05:44:13 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 25 Jun 2007 22:44:13 +1000
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <467FAECC.5020405@gmx.de>
References: <467FAECC.5020405@gmx.de>
Message-ID: <ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com>

On 6/25/07, Johannes Luber <jaluber at gmx.de> wrote:
> Hello!
>
> I've been working on a ANTLR3-to-RelaxNG converter based on Terence's
> ANTLRv3.g. When I want to generate the corresponding C#-files, I receive
> following output:
>
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
<SNIP>
> error(10):  internal error: ANTLR3ToRelaxNG.g :
> java.lang.IllegalArgumentException: Can't find template
> tokenRefRuleRootTrack.st
<SNIP>
> Lies the error with mine code or is it an ANTLR bug? The file is
> attached. And if I didn't change the license text correctly, please let
> me know!
>
> Best regards,
> Johannes Luber
>
This error is because you have mixed rewrites and AST building
operators (! and ^) in a single rule. In this case the error is
because you have used '^' (as an operator on a token, not in the
rewrite itself) as well as rewrites in your element element rule. Your
atom and ebnf rules also mix rewrites and AST operators.
Due to the lack of location information these errors can be tricky to
track down. Slowly removing (or adding to a new grammar) rules until
you find the error can help. Though due to dependencies between rules
this can be tricky.
Another trick is to introduce the other sort of error, either a !
(tokenRefBangTrack.st error) or a ^ (tokenRefRuleRootTrack.st error)
in a rule with rewrites. For instance, as you have a ^ error adding a
! to a rule before the (first) rule giving the error will change the
error given to a tokenRefBangTrack.st error, by moving the location
where you insert the error through your grammar until the message does
not change you can locate the error.
I assume these errors will be better dealt with when Ter migrates to
an ANTLR 3 grammar in the tool.

Tom.

From jaluber at gmx.de  Mon Jun 25 06:00:28 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Jun 2007 15:00:28 +0200
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com>
References: <467FAECC.5020405@gmx.de>
	<ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com>
Message-ID: <467FBC6C.3040103@gmx.de>

Thomas Brandon wrote:
> This error is because you have mixed rewrites and AST building
> operators (! and ^) in a single rule. In this case the error is
> because you have used '^' (as an operator on a token, not in the
> rewrite itself) as well as rewrites in your element element rule. Your
> atom and ebnf rules also mix rewrites and AST operators.
> Due to the lack of location information these errors can be tricky to
> track down. Slowly removing (or adding to a new grammar) rules until
> you find the error can help. Though due to dependencies between rules
> this can be tricky.
> Another trick is to introduce the other sort of error, either a !
> (tokenRefBangTrack.st error) or a ^ (tokenRefRuleRootTrack.st error)
> in a rule with rewrites. For instance, as you have a ^ error adding a
> ! to a rule before the (first) rule giving the error will change the
> error given to a tokenRefBangTrack.st error, by moving the location
> where you insert the error through your grammar until the message does
> not change you can locate the error.
> I assume these errors will be better dealt with when Ter migrates to
> an ANTLR 3 grammar in the tool.
> 
> Tom.
> 

Thanks! That was it. Now only ambiguities have to be dealt with. Is it
guaranteed that with backtracking and memoization the correct parse tree
will be generated, or do exist situations where things have be manually
solved?

Best regards,
Johannes Luber

From anders.hessellund at gmail.com  Mon Jun 25 06:19:55 2007
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 25 Jun 2007 15:19:55 +0200
Subject: [antlr-interest] what does .* match
In-Reply-To: <467FA989.40706@gmx.de>
References: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>
	<467FA989.40706@gmx.de>
Message-ID: <797a9f130706250619n5798171bs4163f92b52097f61@mail.gmail.com>

>
> For further diagnostics please post your entire grammar.


Hi,

here is the entire grammar:

grammar Web;
>

> site    :    page+;
>
> page    :    'PAGE' ID '{' pageContent '}' ;
>
> pageContent
>     :    pageHeader pageBody;
>
> pageHeader
>     :    title desc? keys?;
>
> title    :    'TITLE' .* ;
>
> desc    :    'DESC' .* ;
>
> keys    :    'KEYS' ID (',' ID)* ;
>
> pageBody:    menu? ( center | split )* sub? ;
>
> menu    :    'MENU' '{' menuOption+ '}' ;
>
> menuOption
>     :    '->' ID
>     |    '-' ID
>     ;
>
> center    :    'CENTER' '{' .* '}'  ;
>
> split    :    'SPLIT' '{' 'LEFT' '{' (.)* '}' 'RIGHT' '{' .* '}' '}' ;
>
> sub    :    'SUB' '{' .* '}' ;
>
> ID    :    LETTER ( LETTER | INT )*  ;
>
> fragment
> LETTER    :    'a'..'z'|'A'..'Z'
>     ;
>
> fragment
> INT    :    '0'..'9'+
>     ;
>
> WS    :    (' ' | '\t' | '\n' | '\r' )+ { $channel=HIDDEN; }
>     ;
>

When I feed my generated lexer/parser the following text

PAGE helloWorld {
>     TITLE Hello World
>     CENTER { ere * eryu / sdhjs }
> }
>

it complains:

line 3:14 no viable alternative at character '*'
line 3:21 no viable alternative at character '/'

Why is that?

-- Anders
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/4953cb22/attachment.html 

From jaluber at gmx.de  Mon Jun 25 06:34:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Jun 2007 15:34:37 +0200
Subject: [antlr-interest] what does .* match
In-Reply-To: <797a9f130706250619n5798171bs4163f92b52097f61@mail.gmail.com>
References: <797a9f130706250435v4fadd2bk147553ec5a590ea@mail.gmail.com>	<467FA989.40706@gmx.de>
	<797a9f130706250619n5798171bs4163f92b52097f61@mail.gmail.com>
Message-ID: <467FC46D.2010802@gmx.de>

Anders Hessellund wrote:
>     fragment
>     LETTER    :    'a'..'z'|'A'..'Z'
>         ;
> 
>     fragment
>     INT    :    '0'..'9'+
>         ;
> 
>     WS    :    (' ' | '\t' | '\n' | '\r' )+ { $channel=HIDDEN; }
>         ;
> 
> 
> When I feed my generated lexer/parser the following text
> 
>     PAGE helloWorld {
>         TITLE Hello World
>         CENTER { ere * eryu / sdhjs }
>     }
> 
> 
> it complains:
> 
> line 3:14 no viable alternative at character '*'
> line 3:21 no viable alternative at character '/'
> 
> Why is that?

Looking through your grammar I would say the reason is because the ".*"
are used only in parser rules. So you don't match any characters, but
any tokens. The only lexer rules are ID and WS and those don't recognize
any characters besides the one you have defined. The solution is
probably to change the ".*"-using parser rules into lexer rules through
uppercasing.

Best regards,
Johannes Luber

From relationalalgebra at gmail.com  Mon Jun 25 06:53:38 2007
From: relationalalgebra at gmail.com (G R)
Date: Mon, 25 Jun 2007 15:53:38 +0200
Subject: [antlr-interest] A few questions about AST
Message-ID: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com>

Hi,
I'm actually testing ANTLR to translate a relational algebra query into SQL
query for my "end of school project". Anyway, reading the wiki and FAQ on
the web site there are still a few things that i don't know how to do.

So here is my first question :
I got this Parser rules
projection
    :    PROJ LBRACK listAttribut RBRACK relation
    -> ^(PROJ listAttribut relation);

listAttribut
    :    (attribut) (','! attribut)*;
When i look at my AST, i got every attributes as child of my node PROJ. I'd
like to know how can I create an imaginary children "Attributes" to PROJ and
list every attributes in the subtree Attributes.
Instead of having :
PROJ
|______attribut1
|______attribut2
|...
|______relation
I'd like to have
PROJ
|_____Attributs
|         |______attribut1
|         |______attribut2
|_____relation

The second question is... How can i make a node using a parser rule ? here
is an example : I got the following rule
predicat:    elementaryPredicat (logicalOperator elementaryPredicat)*;
//    -> ^(logicalOperator elementaryPredicat elementaryPredicat);
logicalOperator
    :    AND
        | OR;
As you can see I've try to make my node using the logical operator but this
don't work.
Is there anyway of doing such things?

Finally, a simple question...How do i parse the AST from my main program in
java ?
Thanks.

G. R.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/4abfe03f/attachment.html 

From paul at paulkeir.com  Mon Jun 25 07:00:24 2007
From: paul at paulkeir.com (Paul Keir)
Date: Mon, 25 Jun 2007 15:00:24 +0100
Subject: [antlr-interest] What is $Symbols
In-Reply-To: <FB88CF20-CDF5-4F4D-8B8C-F0C86CB80F9D@cs.usfca.edu>
References: <FB88CF20-CDF5-4F4D-8B8C-F0C86CB80F9D@cs.usfca.edu>
Message-ID: <467FCA78.6010109@paulkeir.com>

$Symbols is a stack of 'Symbols_scope' objects. 'Symbols_scope' is 
defined as a protected class within the antlr-generated *Parser.java code.

My problem is that as my class is defined in its own file (to permit 
step-debugging), I have a problem informing it about 'Symbols_scope'. 
i.e. If I add a 'Symbols_scope' cast to the my_method example from before...

public void my_method(Stack sym) {
  for (Object depth : sym)
    ((Symbols_scope)depth).types.add("hello");   // e.g.
}

...I am of course told that 'Symbols_scope' symbol cannot be found. Can anyone help?

(my_method is called from within my grammar with 'o.my_method($Symbols);')

Many thanks,
Paul


From amartinez at atc.ugr.es  Mon Jun 25 08:39:56 2007
From: amartinez at atc.ugr.es (amartinez at atc.ugr.es)
Date: Mon, 25 Jun 2007 17:39:56 +0200 (CEST)
Subject: [antlr-interest] Implementing 'include' directive and giving
 coherent filenames when parsing
Message-ID: <26820.88.25.96.214.1182785996.squirrel@atc.ugr.es>

Hello,
I'm implementing the include directive for a simple assembler using ANTLR V3.

Everything goes right except that I don't know how to calculate at the
parser, which filename (from include "filename") gives the error.

At the Parser level, I know how to work with the line, column, StartIndex
and StopIndex (of a IToken) attributes for every parsing error. How could
I retrieve the filename?

Note:
I had successfull when translating into C# the Terence sample:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
I'm interested on this ANTLR target.

Regards.

--
Antonio Mart?nez

From rschulz at sonic.net  Mon Jun 25 08:53:24 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 08:53:24 -0700
Subject: [antlr-interest] Bounded Closures?
Message-ID: <200706250853.24561.rschulz@sonic.net>

Hi,

Am I correct in believing that the only way to notate bounded closure in
ANTLR is by repeated applications of the zero-or-one (a.k.a. optional)
closure notation?

E.g., I have this lexer fragment for handling Unicode escapes:

fragment
UnicodeEscape
  :
  ( '\\' ( 'u' | 'U' )
    ( HexDigit ( HexDigit ( HexDigit ( HexDigit ( HexDigit ( HexDigit ) ? ) ? ) ? ) ? ) ? ) ?
  )
  ;


I'd like to be able to using the usual regular expression notation for
bounded closure for this construct:

fragment
UnicodeEscape
  :
  ( '\\' ( 'u' | 'U' ) HexDigit { 0, 6 } )
  ;



Did I miss this somewhere, or is the verbose notation the only way to
get the effect I need?


Randall Schulz

From jaluber at gmx.de  Mon Jun 25 09:01:03 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 25 Jun 2007 18:01:03 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <200706250853.24561.rschulz@sonic.net>
References: <200706250853.24561.rschulz@sonic.net>
Message-ID: <467FE6BF.4060500@gmx.de>

Randall R Schulz wrote:
> Hi,
> 
> Am I correct in believing that the only way to notate bounded closure in
> ANTLR is by repeated applications of the zero-or-one (a.k.a. optional)
> closure notation?
> 
...
> 
> Did I miss this somewhere, or is the verbose notation the only way to
> get the effect I need?

For C# I'd write:

fragment
UnicodeEscape
  :
  '\\' ( 'u' | 'U' ) (h+=HexDigit)+ {$h.Count<=6}?
  ;

Just adapt this to your needs.

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Mon Jun 25 09:16:00 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 09:16:00 -0700
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <467FBC6C.3040103@gmx.de>
References: <467FAECC.5020405@gmx.de><ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com>
	<467FBC6C.3040103@gmx.de>
Message-ID: <051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com>

Only use backtracking and memoizing when you are producing a prototype
or you really do not care at all about speed. It makes things easy but
the best thing to do for a production grammar is get rid of the
ambiguities. 

It is going to execute as a predicate each possible rule in order, then
select the first one that matches up correctly. Of course this can be a
lot of overhead. That will normally select the option you want, but you
can see that the fact you have to ask this question tends to indicate
that this is prototyping option (and a good one at that) as you won't
remember the answer in 18 months time when you come back to fix
something :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Monday, June 25, 2007 6:00 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Grammar generation results in exception
> 
> Thomas Brandon wrote:
> > This error is because you have mixed rewrites and AST building
> > operators (! and ^) in a single rule. In this case the error is
> > because you have used '^' (as an operator on a token, not in the
> > rewrite itself) as well as rewrites in your element element rule.
> Your
> > atom and ebnf rules also mix rewrites and AST operators.
> > Due to the lack of location information these errors can be tricky
to
> > track down. Slowly removing (or adding to a new grammar) rules until
> > you find the error can help. Though due to dependencies between
rules
> > this can be tricky.
> > Another trick is to introduce the other sort of error, either a !
> > (tokenRefBangTrack.st error) or a ^ (tokenRefRuleRootTrack.st error)
> > in a rule with rewrites. For instance, as you have a ^ error adding
a
> > ! to a rule before the (first) rule giving the error will change the
> > error given to a tokenRefBangTrack.st error, by moving the location
> > where you insert the error through your grammar until the message
> does
> > not change you can locate the error.
> > I assume these errors will be better dealt with when Ter migrates to
> > an ANTLR 3 grammar in the tool.
> >
> > Tom.
> >
> 
> Thanks! That was it. Now only ambiguities have to be dealt with. Is it
> guaranteed that with backtracking and memoization the correct parse
> tree
> will be generated, or do exist situations where things have be
manually
> solved?
> 
> Best regards,
> Johannes Luber

From jimi at temporal-wave.com  Mon Jun 25 09:24:57 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 09:24:57 -0700
Subject: [antlr-interest] A few questions about AST
In-Reply-To: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com>
References: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E1F@wavemachine.temporal-wave.com>

The rules:

 

projection
    :    PROJ LBRACK listAttribut RBRACK relation
    -> ^(PROJ listAttribut relation);

listAttribut
    :    (attribut) (','! attribut)*;

 

Can be:

 

tokens

{

                ATTRIB;

}

 

listAttribut

                : a1=attribute (',' a2+=attribute) -> ^(ATTRIB $a1 $a2*)
;

 

Though there are other ways to formulate this of course. 

 

The rules:

 

predicat:    elementaryPredicat (logicalOperator elementaryPredicat)*; 
//    -> ^(logicalOperator elementaryPredicat elementaryPredicat);
logicalOperator 
    :    AND
        | OR;

 

can be:

 

predicat:    elementaryPredicat (^logicalOperator elementaryPredicat)*; 


logicalOperator: AND | OR;

 

 

Parsing the resulting tree is done via a tree parser produced by tree
grammar or by manually traversing the tree. You need to read the book
and/or examples for more details.

 

Jim.

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of G R
Sent: Monday, June 25, 2007 6:54 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] A few questions about AST

 

Hi,
I'm actually testing ANTLR to translate a relational algebra query into
SQL query for my "end of school project". Anyway, reading the wiki and
FAQ on the web site there are still a few things that i don't know how
to do. 

So here is my first question :
I got this Parser rules 

projection
    :    PROJ LBRACK listAttribut RBRACK relation
    -> ^(PROJ listAttribut relation);

listAttribut
    :    (attribut) (','! attribut)*;

When i look at my AST, i got every attributes as child of my node PROJ.
I'd like to know how can I create an imaginary children "Attributes" to
PROJ and list every attributes in the subtree Attributes. 
Instead of having :
PROJ
|______attribut1
|______attribut2
|...
|______relation
I'd like to have
PROJ
|_____Attributs
|         |______attribut1
|         |______attribut2
|_____relation 

The second question is... How can i make a node using a parser rule ?
here is an example : I got the following rule

predicat:    elementaryPredicat (logicalOperator elementaryPredicat)*; 
//    -> ^(logicalOperator elementaryPredicat elementaryPredicat);
logicalOperator 
    :    AND
        | OR;

As you can see I've try to make my node using the logical operator but
this don't work. 
Is there anyway of doing such things?

Finally, a simple question...How do i parse the AST from my main program
in java ?
Thanks.

G. R.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/baa12b3f/attachment.html 

From jimi at temporal-wave.com  Mon Jun 25 09:29:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 09:29:24 -0700
Subject: [antlr-interest] Implementing 'include' directive and giving
	coherent filenames when parsing
In-Reply-To: <26820.88.25.96.214.1182785996.squirrel@atc.ugr.es>
References: <26820.88.25.96.214.1182785996.squirrel@atc.ugr.es>
Message-ID: <051466DAA0D608439E196797955018D76E20@wavemachine.temporal-wave.com>

I am pleased that your sample of Terrence worked well :-)

Realizing that there was no particularly easy way to auto track this sort of thing, I added a "name" field to the input stream for the C target. Hence while filename is not always a useful concept, some identification may well be and it usually WILL be a file name. 

In the Java version you can either accumulate your own table/map using the input object as some sort of key, or make you own input stream that extends the ANTLR one and contains this info, then the token containing a reference to its input stream will allow you to find the file name.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of amartinez at atc.ugr.es
> Sent: Monday, June 25, 2007 8:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Implementing 'include' directive and giving
> coherent filenames when parsing
> 
> Hello,
> I'm implementing the include directive for a simple assembler using
> ANTLR V3.
> 
> Everything goes right except that I don't know how to calculate at the
> parser, which filename (from include "filename") gives the error.
> 
> At the Parser level, I know how to work with the line, column,
> StartIndex
> and StopIndex (of a IToken) attributes for every parsing error. How
> could
> I retrieve the filename?
> 
> Note:
> I had successfull when translating into C# the Terence sample:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
> I'm interested on this ANTLR target.
> 
> Regards.
> 
> --
> Antonio Mart?nez

From rschulz at sonic.net  Mon Jun 25 10:37:08 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 10:37:08 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <D3244574-EC16-4190-ADF6-129B535BCE3C@classdump.org>
References: <200611191412.25438.rschulz@sonic.net>
	<D3244574-EC16-4190-ADF6-129B535BCE3C@classdump.org>
Message-ID: <200706251037.08668.rschulz@sonic.net>

On Sunday 19 November 2006 16:13, Kay Roepke wrote:
> On 19. Nov 2006, at 23:12 , Randall R Schulz wrote:
> > It would be nice if the ANTLR command (as in {@link
> > org.antlr.Tool#main(String[])} would call System.exit
> > (somethingNonZero)
> > if it detected and error in the submitted grammar specification.
>
> Right you are! http://www.antlr.org:8888/browse/ANTLR-43

I'm disappointed to see this has not been fixed in the final release of 
ANTLR 3.0.

It really makes it hard to script automated builds when you cannot tell 
if there was an error detected during generation of the parser code.


> cheers,
> -k


Randall Schulz

From rerdavies at rogers.com  Mon Jun 25 10:55:56 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Mon, 25 Jun 2007 13:55:56 -0400
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com>
References: <467FAECC.5020405@gmx.de><ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com><467FBC6C.3040103@gmx.de>
	<051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com>
Message-ID: <D9A663C9D42C49A89C182EAC0C855FD7@GWB>


> From: "Jim Idle" <jimi at temporal-wave.com>
> Only use backtracking and memoizing when you are producing a prototype
> or you really do not care at all about speed. It makes things easy but
> the best thing to do for a production grammar is get rid of the
> ambiguities.

I'm curious about this. I'm approaching the point at which I need to convert 
my grammar to non-backtracking (if neccessary), and to optimize (as 
required). And I'm not entirely clear on the performance implications of 
various optimizations. Given a choice between maintainability with decent 
performance, and head-snapping speed, I'll take the former anytime.

Right now, m grammar seems to perform parsing of test cases correctly. At 
some point, very soon, I need to address the backtracking issue.

To the maximum extent possible, I'd like to preserve readability. And it's 
not really clear to me, yet, how various optimizations trade off. In this 
particular case, (C# 2.0) the grammar does have a standard-mandated 
ambiguity that requires a heavy-weight predicate, and less-than-wonderfully 
optimal factoring of recursive expression, which probably may madnate the 
use of additional predicates(e.g. the parsing rules for lvalues are 
completely different from those for rvalue).  And many of the expression 
rules recurse almost arbitrarily into creative and unique points in the 
expression ruleset (e.g 'new' expressions are parsed at different points, 
using different parsng rules depending on whether the target type is an 
array or an object type. Very strange). The current grammar is very unhappy 
without backtracking enabled. And I'm facing a fairly significant chunk of 
work to resolve the ambiguities manually.

As far as I can make out, the backtracking predicates only seem to get 
exercised when the outcome of the parse can't be predicted through LL(*). 
So, wouldn't this imply that there is -- in fact -- not a significant 
overhead to leaving backtracking on? My strong suspicion, at this point, is 
that I'm going to need heavy duty predicates through most of the expression 
parse tree, anway, and most of the expensive part of the statement parse 
tree.

This leads me to think that any backtracing that does take place will have 
to take place anyway, whether backtrack is true, or whether I use manually 
constructed predicates. So is there really a significant performance 
difference, given that LL(*) lookahead seems to be used to predict the 
correct branch in the absense of ambiguities?

One minor issue that I am aware of is that manual predicates can help error 
recovery: e.g.

       int aFunction() { someerrorherere }

produces "No viable alternate at "int"" with full backtrack predicates, 
whereas a  manual predicate of

member_function_declaration:
      (type ID '(' arglist_opt ')'  '{')=> ...

will force error reporting to address the more specific error the 
*somerrorhere* part of the parse tree. As a result, I'm already overriding 
backtrack=false in places.

I am facing issue with factorization, though. And I'm not clear on whether 
memoization helps me or not. An example:

   (ex-tempore, not production code...)

member_declaration:
options { backtrack=true; memoize = true; }
       :     function_declaration
        |   property_declaration
      .... &c.

function_declaration
    :  attributes_opt modifiers_opt type identifier '(' arglist ')' block
    ;
property_declaration
    :   attributes_opt modifiers_opt type identifier '{' 
get_set_declarations '}'
    ;

Will memoization of member_declaration perform memo-ization of 
attributes_opt and modifiers_opt? There's an easy factorization that could 
be performed here, at considerable expense to readability: move 
attibutes_opt and modifiers_opt up to the start of the member_declaration 
rule.

In the end, I'm guessing that I'm just going to have to do it and see. But 
I'm curious whether anyone's at a point that they can speculate as to the 
relative merits and performance implications of various optimizations.











From robermann at gmail.com  Mon Jun 25 11:04:00 2007
From: robermann at gmail.com (robermann)
Date: Mon, 25 Jun 2007 20:04:00 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200706251037.08668.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
	<D3244574-EC16-4190-ADF6-129B535BCE3C@classdump.org>
	<200706251037.08668.rschulz@sonic.net>
Message-ID: <414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>

Hi Randall
>From a previous email, this is my workaround, hope this help:

if you override the default error handling mechanism,  you can rethrow the
exception, rather than catch it. So the calling (testing) class get an
unhandled exception and the Java VM exits with an error code != 0.

In the grammar I'll therefore add the following stuff:

//START OVERRIDE ERROR
@members {
protected void mismatch(IntStream input, int ttype, BitSet follow)
    throws RecognitionException
{
    throw new MismatchedTokenException(ttype, input);
}
public void recoverFromMismatchedSet(IntStream input,
                                     RecognitionException e,
                                     BitSet follow)
    throws RecognitionException
{
    throw e;
}
}

// Alter code generation so catch-clauses get replace with
// this action.
@rulecatch {
catch (RecognitionException e) {
    throw e;
}
}
//END OVERRIDE ERROR

Regards
Roberto Mannai

On 6/25/07, Randall R Schulz <rschulz at sonic.net> wrote:
>
> On Sunday 19 November 2006 16:13, Kay Roepke wrote:
> > On 19. Nov 2006, at 23:12 , Randall R Schulz wrote:
> > > It would be nice if the ANTLR command (as in {@link
> > > org.antlr.Tool#main(String[])} would call System.exit
> > > (somethingNonZero)
> > > if it detected and error in the submitted grammar specification.
> >
> > Right you are! http://www.antlr.org:8888/browse/ANTLR-43
>
> I'm disappointed to see this has not been fixed in the final release of
> ANTLR 3.0.
>
> It really makes it hard to script automated builds when you cannot tell
> if there was an error detected during generation of the parser code.
>
>
> > cheers,
> > -k
>
>
> Randall Schulz
>



-- 
Are you tired of making software? Play it! (http://www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/ba3bdf1c/attachment.html 

From rschulz at sonic.net  Mon Jun 25 11:18:22 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 11:18:22 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>
References: <200611191412.25438.rschulz@sonic.net>
	<200706251037.08668.rschulz@sonic.net>
	<414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>
Message-ID: <200706251118.22177.rschulz@sonic.net>

On Monday 25 June 2007 11:04, robermann wrote:
> Hi Randall
> From a previous email, this is my workaround, hope this help:
>
> if you override the default error handling mechanism,  you can
> rethrow the exception, rather than catch it. So the calling (testing)
> class get an unhandled exception and the Java VM exits with an error
> code != 0.

I don't understand what you're suggesting.

I want an exit status from the ANTLR parser generator tool, not from the 
parsers it generates.


Randall Schulz

From rschulz at sonic.net  Mon Jun 25 11:33:36 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 11:33:36 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
Message-ID: <200706251133.36533.rschulz@sonic.net>

Hi,

I have this production in an ANTLR grammar:

clifFile
  : clText * EOF
  ;


It elicits this error from ANTLR:

warning(200): CLIF.g:1371:4: Decision can match input such as "{EOF, Open}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(201): CLIF.g:1371:4: The following alternatives are unreachable: 2


Why is it talking about alternatives in a rule that has none?


Randall Schulz

From qwertie256 at gmail.com  Mon Jun 25 11:48:27 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 25 Jun 2007 12:48:27 -0600
Subject: [antlr-interest] Avoiding warnings without code bloat
Message-ID: <ce40b1470706251148q7c60f9bcw10706f19e41b58a3@mail.gmail.com>

I'm trying to match strings with escape sequences, so I tried this:

// Strings
SQ_STRING: '\''! (ESC_SEQ | ~'\'')* '\''!;
DQ_STRING: '"'!  (ESC_SEQ | ~'"' )* '"'!;
fragment ESC_SEQ:
	| '\\r' {$text = "\r";}
	| '\\n' {$text = "\n";}
	| '\\t' {$text = "\t";}
	| '\\a' {$text = "\a";}
	| '\\b' {$text = "\b";}
	| '\\f' {$text = "\f";}
	| '\\0' {$text = "\0";}
	| '\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT {
		char ch = (char)int.Parse(Text,
			System.Globalization.NumberStyles.HexNumber);
		Text = new string(ch);
	}
	| '\\'! '\''
	| '\\'! '\"'
	| '\\'! '\`';

But this produces 12 warnings, and this makes sense because in the
first three lines, escape sequences can match the first and second
alternatives. Now I tried the following:

SQ_STRING: '\''! (ESC_SEQ | ~('\'' | '\\'))* '\''!; // line 57
DQ_STRING: '"'!  (ESC_SEQ | ~('\"' | '\\'))* '"'!;

This is not actually what I want because it appears that an invalid
escape sequence like \Q cannot be parsed by the above rules. I tried
it because I thought it would get rid of the warnings, but 3 warnings
were still produced for each kind of string. Can someone explain these
warnings? I do not see how '\'' can be matched in more than one way.

warning(200): Expr.g:57:43: Decision can match input such as "'\''"
using multiple alternatives: 1,
3
As a result, alternative(s) 3 were disabled for that input
warning(200): Expr.g:57:43: Decision can match input such as
"{'\u0000'..'&', '('..'\uFFFE'}" using
multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(201): Expr.g:57:43: The following alternatives are unreachable: 2,3

I can eliminate all warnings using a syntactic predicate:

SQ_STRING: '\''! ((ESC_SEQ)=>ESC_SEQ | ~'\'')* '\''!;
DQ_STRING: '"'!  ((ESC_SEQ)=>ESC_SEQ | ~'\"')* '"'!;

However, this changes the generated code substantially; not only does
the lexer test for an ESC_SEQ before matching it, but ALL lexer rules,
including rules that are in no way related to strings, have additional
lines of code such as "if (failed) return ;" sprinkled throughout
them.

So my question is, can I get the "bloat-free" behavior of the original code:

SQ_STRING: '\''! (ESC_SEQ | ~'\'')* '\''!;
DQ_STRING: '"'!  (ESC_SEQ | ~'"' )* '"'!;

while suppressing the warnings?

From dwarner at uni-paderborn.de  Mon Jun 25 11:46:48 2007
From: dwarner at uni-paderborn.de (Daniel Warner)
Date: Mon, 25 Jun 2007 20:46:48 +0200
Subject: [antlr-interest] Parsing RTF to Braille
Message-ID: <BHEHJGODIEEHDEEKGJKFCEPIGDAA.dwarner@uni-paderborn.de>

Hello,

I'm studying computer sciences and mathematics in Paderborn, and currently I'm working on a university project with the goal to transform RTF-documents into a text-based representation of braille, called HBS.

The output format HBS is already specified, although there is no grammar (it is all in an existing application and I have to reengineer). Lots of information in a RTF-document is of course irrelevant for blind people and will therefore have to be eliminated. HBS codes a lot of structural information but far less layout information, so I will also be faced with problems such as: What do I do with footnotes, how should I represent text that is colored red (maybe even inconsistently), how can I map layout to structure appropriately, etc. just to mention a few.

As I want to implement the RTF-HBS-Parser in Java, I naturally looked for parser generators for this language. To me ANTLR v3 seems to be the most promising approach in this area, and I really appreciate Prof. Parr for publishing his tool under the BSD License.

I already baught his book "The Definitive ANTLR Reference" (and PDF) and have a question concerning the "big picture" for my project:

The RTF specification 1.9 from Microsoft is huge. What approach would you suggest in parsing RTF with ANTLR to the mentioned text-based representation of braille (HBS)?

1) Use actions in the grammar rules?
2) Create an AST from the RTF input and a tree grammar for the AST that outputs HBS?
3) Use templates?
4) Other suggestions?

Thanks a lot in advance for some hints that help me starting off with my work,

Daniel Warner

No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.476 / Virus Database: 269.9.6/865 - Release Date: 24.06.2007 08:33


From jimi at temporal-wave.com  Mon Jun 25 11:53:59 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 11:53:59 -0700
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <D9A663C9D42C49A89C182EAC0C855FD7@GWB>
References: <467FAECC.5020405@gmx.de><ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com><467FBC6C.3040103@gmx.de><051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com>
	<D9A663C9D42C49A89C182EAC0C855FD7@GWB>
Message-ID: <051466DAA0D608439E196797955018D76E23@wavemachine.temporal-wave.com>

The overhead is of course entirely to do with the grammar and th way you
have put it together. If the language you are parsing already has
significant ambiguity issues that can only be solved with large
predicates then the overhead difference may not be as much as when the
grammar could be expressed without too much in the way of heavy
predicates.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Robin Davies
> Sent: Monday, June 25, 2007 10:56 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Grammar generation results in exception
> 
> 
> > From: "Jim Idle" <jimi at temporal-wave.com>
> > Only use backtracking and memoizing when you are producing a
> prototype
> > or you really do not care at all about speed. It makes things easy
> but
> > the best thing to do for a production grammar is get rid of the
> > ambiguities.
> Given a choice between maintainability with
> decent
> performance, and head-snapping speed, I'll take the former anytime.

However, in this case you might find your performance and
maintainability are involved in the same decision :-). When you turn on
backtracking and memorization for the whole grammar you don't
distinguish with as much precision as you can with the shortest
predicate you can come up with. In your case, the C# generic ambiguity
(nobody ever learns do they? ;-) probably is a hefty predicate, but then
is there anywhere else you need backtracking to resolve it? Can your
predicate not just be ((longrulepath)=>x) | notx ? or turn on
backtracking for that particular rule?

It may be a matter of personal opinion but the explicit predicate in the
rule seems much more maintainable than having to infer what is going on
in backtracking mode. So, I am not sure what your definition of
readability is, but to me it is quite often a case of formatting it
nicely. Predicates are part of the syntax, but leaving them out because
you don't like the look of it is only an option if you really do not
care about parsing performance. Not that ANTLR parsers are slow, but you
are obviously sacrificing a fair bit for the convenience of backtracking
- only you can decide what is worth pursuing I think :-)

> 
> One minor issue that I am aware of is that manual predicates can help
> error
> recovery: e.g.
> 
>        int aFunction() { someerrorherere }
> 
> produces "No viable alternate at "int"" with full backtrack
predicates,
> whereas a  manual predicate of
> 
> member_function_declaration:
>       (type ID '(' arglist_opt ')'  '{')=> ...
> 
> will force error reporting to address the more specific error the
> *somerrorhere* part of the parse tree. As a result, I'm already
> overriding
> backtrack=false in places.

Right, so maybe it is better to turn it off at the grammar level then
turn it back on selectively. You can of course make things a little more
readable by repdicating with rules rather than all the tokens strung out
like that.

> 
> I am facing issue with factorization, though. And I'm not clear on
> whether
> memoization helps me or not. An example:
> 
>    (ex-tempore, not production code...)
> 
> member_declaration:
> options { backtrack=true; memoize = true; }
>        :     function_declaration
>         |   property_declaration
>       .... &c.
> 
> function_declaration
>     :  attributes_opt modifiers_opt type identifier '(' arglist ')'
> block
>     ;
> property_declaration
>     :   attributes_opt modifiers_opt type identifier '{'
> get_set_declarations '}'
>     ;
> 
> Will memoization of member_declaration perform memo-ization of
> attributes_opt and modifiers_opt? There's an easy factorization that
> could
> be performed here, at considerable expense to readability: move
> attibutes_opt and modifiers_opt up to the start of the
> member_declaration
> rule.

Why not:

declarations
	: attributes_opt modifiers_opt type identifier
		(
			  '(' arglist ')' block    	// Function
declaration
			| '{' get_set_declarations	// Property
declaration
		)
	;

Which won't need to backtrack at all I should think? Perhaps you should
look at your rules and see if your ambiguities (other than the known
one) are really just a matter of rearranging them?

Jim

From jimi at temporal-wave.com  Mon Jun 25 12:00:22 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 12:00:22 -0700
Subject: [antlr-interest] Avoiding warnings without code bloat
In-Reply-To: <ce40b1470706251148q7c60f9bcw10706f19e41b58a3@mail.gmail.com>
References: <ce40b1470706251148q7c60f9bcw10706f19e41b58a3@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E24@wavemachine.temporal-wave.com>

Consult the examples for ways of doing this, you will find that the C
parser and Java parser are set up to handle this.
Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David Piepgrass
> Sent: Monday, June 25, 2007 11:48 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Avoiding warnings without code bloat
> 
> I'm trying to match strings with escape sequences, so I tried this:
> 
> // Strings
> SQ_STRING: '\''! (ESC_SEQ | ~'\'')* '\''!;
> DQ_STRING: '"'!  (ESC_SEQ | ~'"' )* '"'!;
> fragment ESC_SEQ:
> 	| '\\r' {$text = "\r";}
> 	| '\\n' {$text = "\n";}
> 	| '\\t' {$text = "\t";}
> 	| '\\a' {$text = "\a";}
> 	| '\\b' {$text = "\b";}
> 	| '\\f' {$text = "\f";}
...

From win at wincent.com  Mon Jun 25 12:04:56 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 25 Jun 2007 21:04:56 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706251133.36533.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
Message-ID: <2D355DD0-405C-4D77-BA41-46A84590CDC4@wincent.com>

El 25/6/2007, a las 20:33, Randall R Schulz escribi?:

> Hi,
>
> I have this production in an ANTLR grammar:
>
> clifFile
>   : clText * EOF
>   ;
>
>
> It elicits this error from ANTLR:
>
> warning(200): CLIF.g:1371:4: Decision can match input such as  
> "{EOF, Open}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(201): CLIF.g:1371:4: The following alternatives are  
> unreachable: 2
>
>
> Why is it talking about alternatives in a rule that has none?

Try looking at the syntax diagram in ANTLRWorks so that you can see  
the two alternative paths. In many cases these warnings are harmless  
because the second option (the one automatically disabled by ANTLR)  
is the one that you'd want to turn off to resolve the ambiguity  
anyway (ANTLR resolves these things by favoring the greedy match,  
which is often what you want), but it's good to check.

Being a C programmer I like warning-free builds and I like warning- 
free ANTLR generations too, so sometimes you can tweak your grammar a  
bit to avoid such warnings.

Without seeing your entire grammar I can't comment on what the  
problem is but ANTLR evidently thinks there is more than one way to  
match rule "clText" zero or more times followed by an EOF. That is,  
although there are no explicit alternatives in your "clifFile" rule,  
the ambiguity creeps in anyway in the other rule(s) referenced from  
that rule.

Cheers,
Wincent


From rschulz at sonic.net  Mon Jun 25 12:13:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 12:13:23 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <2D355DD0-405C-4D77-BA41-46A84590CDC4@wincent.com>
References: <200706251133.36533.rschulz@sonic.net>
	<2D355DD0-405C-4D77-BA41-46A84590CDC4@wincent.com>
Message-ID: <200706251213.23754.rschulz@sonic.net>

On Monday 25 June 2007 12:04, Wincent Colaiuta wrote:
> El 25/6/2007, a las 20:33, Randall R Schulz escribi?:
> > Hi,
> >
> > I have this production in an ANTLR grammar:
> >
> > clifFile
> >
> >   : clText * EOF
> >
> >   ;
> >
> >
> > It elicits this error from ANTLR:
> >
> > warning(200): CLIF.g:1371:4: Decision can match input such as
> > "{EOF, Open}" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > warning(201): CLIF.g:1371:4: The following alternatives are
> > unreachable: 2
> >
> >
> > Why is it talking about alternatives in a rule that has none?
>
> Try looking at the syntax diagram in ANTLRWorks so that you can see
> the two alternative paths.

Of course, there are not two paths. Just the loop back over the closed 
clText production followed by the EOF token.


> ...
>
> Without seeing your entire grammar I can't comment on what the
> problem is but ANTLR evidently thinks there is more than one way to
> match rule "clText" zero or more times followed by an EOF. That is,
> although there are no explicit alternatives in your "clifFile" rule,
> the ambiguity creeps in anyway in the other rule(s) referenced from
> that rule.

It's too large a grammar to include in toto.

The grammar is somewhat Lisp-like (or KIF like, if you're familiar with 
that language), so all the top-level constructs begin with an open 
parenthesis (the Open token in the rule I showed).

It's possible this is the consequence of some other ambiguities I have 
yet to resolve. The people who wrote the BNF from which this ANTLR 
grammar is being derived are not accustomed to dealing with parser 
generators, I don't think.


> Cheers,
> Wincent


Randall Schulz

From gbr at newtechlaw.com  Mon Jun 25 12:33:10 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon, 25 Jun 2007 12:33:10 -0700
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <BHEHJGODIEEHDEEKGJKFCEPIGDAA.dwarner@uni-paderborn.de>
References: <BHEHJGODIEEHDEEKGJKFCEPIGDAA.dwarner@uni-paderborn.de>
Message-ID: <200706251941.l5PJfEef015083@morpho.newtechlaw.com>

At 11:46 AM 6/25/2007, Daniel Warner wrote:
>The RTF specification 1.9 from Microsoft is huge. What approach 
>would you suggest in parsing RTF with ANTLR to the mentioned 
>text-based representation of braille (HBS)?
>
>1) Use actions in the grammar rules?
>2) Create an AST from the RTF input and a tree grammar for the AST 
>that outputs HBS?
>3) Use templates?
>4) Other suggestions?

I would strongly suggest implementing a PDF to HBS converter if only 
to avoid the many different/incomplete interpretations of the RTF 
spec.  The PDF spec is substantially smaller and far more uniformly 
implemented.  Conversion from RTF, and many other document formats, 
to PDF can be automated with little difficulty.

In both RTF and PDF, top down left right orientation is common, but 
not required.  Therefore, you can encounter "out of order" text even 
on simple pages.  So, actions for direct output are not likely to be 
useful.  If there is a need to handle footnotes, tables, and columns, 
AST is the only way to go.  You will likely need multiple tree 
walkers to distinguish different text blocks and reorganize the AST 
content into a reasonably consistent form.  Output then should be 
fairly linear, so templates should not be necessary.

HTHs,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/534842b4/attachment.html 

From rschulz at sonic.net  Mon Jun 25 13:11:59 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 13:11:59 -0700
Subject: [antlr-interest] Reloading Externally Edited Files in ANTLRWorks?
Message-ID: <200706251311.59081.rschulz@sonic.net>

Hi,

Is there a way to get ANTLRWorks to reload a source file it has open 
when that file has been modified by another program? Currently, I'm 
quitting and restarting, which is tedious.

I tried using Open Recent on a file that's open, but that doesn't work.

And there's a seeming anomaly in the interface. When no grammar source 
files are open, the menu bar becomes inactive, though the keyboard 
accelerators remain active.


Randall Schulz

From kroepke at classdump.org  Mon Jun 25 13:32:50 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 25 Jun 2007 22:32:50 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200706251118.22177.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
	<200706251037.08668.rschulz@sonic.net>
	<414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>
	<200706251118.22177.rschulz@sonic.net>
Message-ID: <F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>


On Jun 25, 2007, at 8:18 PM, Randall R Schulz wrote:

>
> I don't understand what you're suggesting.
>
> I want an exit status from the ANTLR parser generator tool, not  
> from the
> parsers it generates.

I will make the case when I see Terence. It probably doesn't comfort  
you, but I need this, too,
but unfortunately I'm way to busy to invest time into it right now.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Mon Jun 25 13:35:35 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 25 Jun 2007 22:35:35 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <200706250853.24561.rschulz@sonic.net>
References: <200706250853.24561.rschulz@sonic.net>
Message-ID: <9EE47647-5270-42F4-9E0E-8FFFE68B38AE@classdump.org>


On Jun 25, 2007, at 5:53 PM, Randall R Schulz wrote:

> Did I miss this somewhere, or is the verbose notation the only way to
> get the effect I need?

You could also use semantic predicates with a counter. It involves  
extra code, but will do the trick.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Mon Jun 25 13:38:15 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Jun 2007 08:38:15 +1200
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <D9A663C9D42C49A89C182EAC0C855FD7@GWB>
References: <467FAECC.5020405@gmx.de>
	<ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com>
	<467FBC6C.3040103@gmx.de>
	<051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com>
	<D9A663C9D42C49A89C182EAC0C855FD7@GWB>
Message-ID: <20070625203826.2E10E11EACE@www.antlr.org>

At 05:55 26/06/2007, Robin Davies wrote:
 >I'm curious about this. I'm approaching the point at which I 
need
 >to convert my grammar to non-backtracking (if neccessary), and 
to
 >optimize (as required). And I'm not entirely clear on the
 >performance implications of various optimizations. Given a 
choice
 >between maintainability with decent performance, and 
head-snapping
 >speed, I'll take the former anytime.

So far, in my (limited) experience with ANTLR, I haven't seen any 
significant performance difference between having backtracking on 
and off.  The only noticeable difference is that the parser 
generates the wrong results (for my grammar) if backtracking is 
off :)


From matthew.j.diehl at intel.com  Mon Jun 25 14:02:20 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 25 Jun 2007 14:02:20 -0700
Subject: [antlr-interest] Reloading Externally Edited Files in
	ANTLRWorks?
In-Reply-To: <200706251311.59081.rschulz@sonic.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202216817@orsmsx417.amr.corp.intel.com>

I'm not having any problems with ANTLRWorks reloading modified files.  I
have used it recently in Windows and Unix, and when I modify in one
location, the other gets updated when the focus gets changed back.  I've
noticed it happening more in Windows than in Unix though...  You've
probably already tried it, but maybe change the focus and bring it back
again...?

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Monday, June 25, 2007 1:12 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Reloading Externally Edited Files in
ANTLRWorks?

Hi,

Is there a way to get ANTLRWorks to reload a source file it has open 
when that file has been modified by another program? Currently, I'm 
quitting and restarting, which is tedious.

I tried using Open Recent on a file that's open, but that doesn't work.

And there's a seeming anomaly in the interface. When no grammar source 
files are open, the menu bar becomes inactive, though the keyboard 
accelerators remain active.


Randall Schulz

From rschulz at sonic.net  Mon Jun 25 14:03:35 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 14:03:35 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
References: <200611191412.25438.rschulz@sonic.net>
	<200706251118.22177.rschulz@sonic.net>
	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
Message-ID: <200706251403.35478.rschulz@sonic.net>

On Monday 25 June 2007 13:32, Kay Roepke wrote:
> On Jun 25, 2007, at 8:18 PM, Randall R Schulz wrote:
> > I don't understand what you're suggesting.
> >
> > I want an exit status from the ANTLR parser generator tool, not
> > from the
> > parsers it generates.
>
> I will make the case when I see Terence. It probably doesn't comfort
> you, but I need this, too,
> but unfortunately I'm way to busy to invest time into it right now.

For the moment, I'm just hacking around it with grep, though I don't 
think it handles all the possible error cases. As I encounter them, 
I'll just add them to the grep patterns.

-==--==--==--==--==-buildParser-==--==--==--==--==-
#!/bin/bash --norc


  # Clean up old generated source and class files
  # [ elided ]

  # Run ANTLR
  antlr "$@" CLIF.g >|CLIF-err 2>&1

  if egrep -q '^(warning|error)' CLIF-err; then
    cat CLIF-err
  fi

  if egrep -v -q '^error' CLIF-err; then
    build CL
  fi
-==--==--==--==--==-buildParser-==--==--==--==--==-



> cheers,
> -k


Randall Schulz

From rschulz at sonic.net  Mon Jun 25 14:15:31 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 14:15:31 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200706251403.35478.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
	<200706251403.35478.rschulz@sonic.net>
Message-ID: <200706251415.31736.rschulz@sonic.net>

On Monday 25 June 2007 14:03, Randall R Schulz wrote:
> ...
>
> For the moment, I'm just hacking around it with grep, though I don't
> think it handles all the possible error cases. As I encounter them,
> I'll just add them to the grep patterns.
>
> -==--==--==--==--==-buildParser-==--==--==--==--==-
> #!/bin/bash --norc
>
>
>   # Clean up old generated source and class files
>   # [ elided ]
>
>   # Run ANTLR
>   antlr "$@" CLIF.g >|CLIF-err 2>&1
>
>   if egrep -q '^(warning|error)' CLIF-err; then
>     cat CLIF-err
>   fi
>
>   if egrep -v -q '^error' CLIF-err; then
>     build CL
>   fi
> -==--==--==--==--==-buildParser-==--==--==--==--==-

Just in case anyone wants to follow this approach, two things:

1) the last clause should be this:

  if [ "$(egrep -L '^error' CLIF-err)" ] ; then
    build CL
  fi


2) The command "build CL" is actually an invocation of Ant.


> > cheers,
> > -k


Randall Schulz

From jimi at temporal-wave.com  Mon Jun 25 14:22:29 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 25 Jun 2007 14:22:29 -0700
Subject: [antlr-interest] Grammar generation results in exception
In-Reply-To: <20070625203826.2E10E11EACE@www.antlr.org>
References: <467FAECC.5020405@gmx.de><ebc876d70706250544yf3ff366le3755bba1366e418@mail.gmail.com><467FBC6C.3040103@gmx.de><051466DAA0D608439E196797955018D76E1E@wavemachine.temporal-wave.com><D9A663C9D42C49A89C182EAC0C855FD7@GWB>
	<20070625203826.2E10E11EACE@www.antlr.org>
Message-ID: <051466DAA0D608439E196797955018D76E26@wavemachine.temporal-wave.com>

In terms of human detectable time it is unlikely to affect you, but it
does have significant bite :-). However, while it is obviously 'better'
to do it 'right', in the end it is matter of whether your backtracking
parser is eminently adequate for the task. There are obviously a lot of
cases were say 100ms vs 30ms would be of no consequence.

However, if for instance, you use the backtracking Java parser in the
examples to parser the entire .java source for JDK 1.6 you can see that
it can make noticeable difference, which may or may not be important to
your task.

It is not my intention to imply that backtracking parsers are somehow
completely the wrong way to do things, just to make sure that the choice
with informed intent :-)

Robin: I would be quite interested to look at the C# parser that
processes the define ambiguity if this is possible.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Monday, June 25, 2007 1:38 PM
> To: Robin Davies; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Grammar generation results in exception
> 
> At 05:55 26/06/2007, Robin Davies wrote:
>  >I'm curious about this. I'm approaching the point at which I
> need
>  >to convert my grammar to non-backtracking (if neccessary), and
> to
>  >optimize (as required). And I'm not entirely clear on the
>  >performance implications of various optimizations. Given a
> choice
>  >between maintainability with decent performance, and
> head-snapping
>  >speed, I'll take the former anytime.
> 
> So far, in my (limited) experience with ANTLR, I haven't seen any
> significant performance difference between having backtracking on
> and off.  The only noticeable difference is that the parser
> generates the wrong results (for my grammar) if backtracking is
> off :)


From rschulz at sonic.net  Mon Jun 25 14:22:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 14:22:45 -0700
Subject: [antlr-interest] Reloading Externally Edited Files in
	ANTLRWorks?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202216817@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C202216817@orsmsx417.amr.corp.intel.com>
Message-ID: <200706251422.45590.rschulz@sonic.net>

On Monday 25 June 2007 14:02, Diehl, Matthew J wrote:
> I'm not having any problems with ANTLRWorks reloading modified files.
>  I have used it recently in Windows and Unix, and when I modify in
> one location, the other gets updated when the focus gets changed
> back.  I've noticed it happening more in Windows than in Unix
> though...  You've probably already tried it, but maybe change the
> focus and bring it back again...?

I'm talking about the stand-alone ANTLRworks, not the IDEA plug-in. 
Which do you mean?


> Matt


Randall Schulz

From matthew.j.diehl at intel.com  Mon Jun 25 14:47:55 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 25 Jun 2007 14:47:55 -0700
Subject: [antlr-interest] Reloading Externally Edited Files inANTLRWorks?
In-Reply-To: <200706251422.45590.rschulz@sonic.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2022168CE@orsmsx417.amr.corp.intel.com>

Yeah, right.  Sorry, I'm talking about the stand-alone as well.  1.0.2.
I'll run it real quick and double check...

OK, I just opened the same document in the stand-alone ANTLRWorks 1.0.2
in Windows and then in Unix opened the same file.  Modified it in Unix,
and then clicked back on the Windows instance, and it reloaded.  Made
the change in Windows, and then back in Unix I had to change the focus
and then back before it reflected the change.  If I switch too fast
though (less than a few seconds) it doesn't update at all, and I can
keep trying to change focus and it doesn't matter.  But when I wait a
few seconds it seems to not have too many problems with updating.  

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Monday, June 25, 2007 2:23 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reloading Externally Edited Files
inANTLRWorks?

On Monday 25 June 2007 14:02, Diehl, Matthew J wrote:
> I'm not having any problems with ANTLRWorks reloading modified files.
>  I have used it recently in Windows and Unix, and when I modify in
> one location, the other gets updated when the focus gets changed
> back.  I've noticed it happening more in Windows than in Unix
> though...  You've probably already tried it, but maybe change the
> focus and bring it back again...?

I'm talking about the stand-alone ANTLRworks, not the IDEA plug-in. 
Which do you mean?


> Matt


Randall Schulz

From pink at odahoda.de  Mon Jun 25 14:19:54 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 25 Jun 2007 23:19:54 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
References: <200706251133.36533.rschulz@sonic.net>
	<2D355DD0-405C-4D77-BA41-46A84590CDC4@wincent.com>
	<200706251213.23754.rschulz@sonic.net>
Message-ID: <f5pbhq$141$1@sea.gmane.org>

Randall R Schulz wrote:

> On Monday 25 June 2007 12:04, Wincent Colaiuta wrote:
>> El 25/6/2007, a las 20:33, Randall R Schulz escribi?:
>> > Hi,
>> >
>> > I have this production in an ANTLR grammar:
>> >
>> > clifFile
>> >
>> >   : clText * EOF
>> >
>> >   ;
>> >
>> >
>> > It elicits this error from ANTLR:
>> >
>> > warning(200): CLIF.g:1371:4: Decision can match input such as
>> > "{EOF, Open}" using multiple alternatives: 1, 2
>> > As a result, alternative(s) 2 were disabled for that input
>> > warning(201): CLIF.g:1371:4: The following alternatives are
>> > unreachable: 2
>> >
>> >
>> > Why is it talking about alternatives in a rule that has none?
>>
>> Try looking at the syntax diagram in ANTLRWorks so that you can see
>> the two alternative paths.
> 
> Of course, there are not two paths. Just the loop back over the closed
> clText production followed by the EOF token.

After clText the parser has to decide, if it does another iteration of
clText or terminate the loop. That makes two alternatives.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From qwertie256 at gmail.com  Mon Jun 25 15:07:32 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 25 Jun 2007 16:07:32 -0600
Subject: [antlr-interest] Avoiding warnings without code bloat
Message-ID: <ce40b1470706251507r5ef6d03ds383d3399cfacccf@mail.gmail.com>

> Consult the examples for ways of doing this, you will find that the C
> parser and Java parser are set up to handle this.
> Jim

Actually, the C and Java parsers seem to do exactly what I tried to
do! Look at this from the C example:

STRING_LITERAL
    :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
    ;
fragment
EscapeSequence
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   OctalEscape
    ;

And the following is from Java.g:

StringLiteral
    :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
    ;
fragment
EscapeSequence
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UnicodeEscape
    |   OctalEscape
    ;

Compare what I tried:

SQ_STRING: '\''! (ESC_SEQ | ~('\'' | '\\'))* '\''!;
DQ_STRING: '"'!  (ESC_SEQ | ~('\"' | '\\'))* '"'!;
fragment ESC_SEQ:
	| '\\r' {$text = "\r";}
	| '\\n' {$text = "\n";}
	| '\\t' {$text = "\t";}
	| '\\a' {$text = "\a";}
	| '\\b' {$text = "\b";}
	| '\\f' {$text = "\f";}
	| '\\0' {$text = "\0";}
	| '\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT { ... }
	| '\\'! '\''
	| '\\'! '\"'
	| '\\'! '\`';

warning(200): Expr.g:68:41: Decision can match input such as "'\''"
using multiple alternatives: 1, 3
As a result, alternative(s) 3 were disabled for that input
warning(200): Expr.g:68:41: Decision can match input such as
"{'\u0000'..'&', '('..'\uFFFE'}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(201): Expr.g:68:41: The following alternatives are unreachable: 2,3
warning(200): Expr.g:69:40: Decision can match input such as "'"'"
using multiple alternatives: 1, 3
As a result, alternative(s) 3 were disabled for that input
warning(200): Expr.g:69:40: Decision can match input such as
"{'\u0000'..'!', '#'..'\uFFFE'}" using
multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(201): Expr.g:69:40: The following alternatives are unreachable: 2,3

If the C example gives no warnings, I don't know why there is a difference.

But as I pointed out, I would like to know how to accept inputs with
invalid escapes like "\Q". A simple solution would be to add this
extra alt at the end of ESC_SEQ:

	| '\\' .;

But this produces a crapload of warnings. This can be avoided by writing

	| '\\' ~('r'|'n'|'t'|'a'|'b'|'f'|'0'|'u'|'\''|'"'|'`');

instead, but it's a tedius solution (and it doesn't generalize very
well to more complicated scenarios.)

From qwertie256 at gmail.com  Mon Jun 25 16:20:35 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 25 Jun 2007 17:20:35 -0600
Subject: [antlr-interest] Avoiding warnings without code bloat
In-Reply-To: <ce40b1470706251507r5ef6d03ds383d3399cfacccf@mail.gmail.com>
References: <ce40b1470706251507r5ef6d03ds383d3399cfacccf@mail.gmail.com>
Message-ID: <ce40b1470706251620l3475ed92k3a2ead218fabe0e4@mail.gmail.com>

> fragment ESC_SEQ:
>         | '\\r' {$text = "\r";}
>         | '\\n' {$text = "\n";}
>         | '\\t' {$text = "\t";}
...
> If the C example gives no warnings, I don't know why there is a difference.

Oops, I found the problem. It's a silly mistake. My code should be

> fragment ESC_SEQ:
>           '\\r' {$text = "\r";}
>         | '\\n' {$text = "\n";}
>         | '\\t' {$text = "\t";}
...

From qwertie256 at gmail.com  Mon Jun 25 16:33:29 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 25 Jun 2007 17:33:29 -0600
Subject: [antlr-interest] Avoiding warnings without code bloat
Message-ID: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>

Problem Solved!

On p.285 of the ANTLR book it implies that you cannot suppress
warnings in ANTLR v3 like you could in v2.

However, it appears that a semantic predicate works nicely as a workaround:

// Strings
SQ_STRING: '\''! ({true}? ESC_SEQ | ~'\'')* '\''!;
DQ_STRING: '"'!  ({true}? ESC_SEQ | ~'"')* '"'!;
BQ_STRING: '`'!  ({true}? ESC_SEQ | ~'`')* '`'!;
fragment ESC_SEQ:
	  '\\r' {$text = "\r";}
	| '\\n' {$text = "\n";}
	| '\\t' {$text = "\t";}
	| '\\a' {$text = "\a";}
	| '\\b' {$text = "\b";}
	| '\\f' {$text = "\f";}
	| '\\0' {$text = "\0";}
	| '\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT
		{
			char ch = (char)int.Parse(Text, System.Globalization.NumberStyles.HexNumber);
			$text = new string(ch, 1);
		}
	| '\\'! '\''
	| '\\'! '\"'
	| '\\'! '\`';

The generated code now contains LL(2) lookahead for no reason, and
some redundant code. For example, code that originally read

            	    if ( (LA19_0 == '\"') )
            	    {
            	        alt19 = 1;
            	    }

Now says

            	    if ( (LA19_0 == '\"') )
            	    {
            	        int LA19_1 = input.LA(2);
            	        if ( (true) )
            	        {
            	            alt19 = 1;
            	        }
            	    }

However, its behavior appears to be the same.

The compiler will emit some "unreachable code" warnings. In C# you can
disable them like this:

grammar Expr;
options {
	language=CSharp;
}
@lexer::members {
	#pragma warning disable 0162
}
@parser::members {
	#pragma warning disable 0162
}

I think there may be a caveat: using {true}? on a nullable rule can
lead to an infinite loop if there is a syntax error in the input
stream (i.e. don't say "{true}? foo" if foo can match no input).

> I'm trying to match strings with escape sequences, so I tried this:
>
> // Strings
> SQ_STRING: '\''! (ESC_SEQ | ~'\'')* '\''!;
> DQ_STRING: '"'!  (ESC_SEQ | ~'"' )* '"'!;
> fragment ESC_SEQ:
>         | '\\r' {$text = "\r";}
...
>         | '\\'! '"';
>
> But this produces 12 warnings, and this makes sense because in the
> first three lines, escape sequences can match the first and second
> alternatives.
...
> I can eliminate all warnings using a syntactic predicate:
>
> SQ_STRING: '\''! ((ESC_SEQ)=>ESC_SEQ | ~'\'')* '\''!;
> DQ_STRING: '"'!  ((ESC_SEQ)=>ESC_SEQ | ~'\"')* '"'!;
>
> However, this changes the generated code substantially; not only does
> the lexer test for an ESC_SEQ before matching it, but ALL lexer rules,
> including rules that are in no way related to strings, have additional
> lines of code such as "if (failed) return ;" sprinkled throughout
> them.
>
> So my question is, can I get the "bloat-free" behavior of the original code:
...
> while suppressing the warnings?

From qwertie256 at gmail.com  Mon Jun 25 16:44:03 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 25 Jun 2007 17:44:03 -0600
Subject: [antlr-interest] ANTLR should warn about nullable tokens
Message-ID: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>

I was testing my lexer on an invalid input when it entered an infinite loop.

It turns out this was because of my whitepace rule:

WS: (' '|'\t'|'\n'|'\r'|'\u000C')* { $channel=HIDDEN; };

Which caused an infinite sequence of WS tokens. It should be

WS: (' '|'\t'|'\n'|'\r'|'\u000C')+ { $channel=HIDDEN; };

IMO, ANTLR should give a warning about this.

From rschulz at sonic.net  Mon Jun 25 16:57:05 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 25 Jun 2007 16:57:05 -0700
Subject: [antlr-interest] ANTLR should warn about nullable tokens
In-Reply-To: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>
References: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>
Message-ID: <200706251657.06001.rschulz@sonic.net>

On Monday 25 June 2007 16:44, David Piepgrass wrote:
> I was testing my lexer on an invalid input when it entered an
> infinite loop.
>
> It turns out this was because of my whitepace rule:
>
> WS: (' '|'\t'|'\n'|'\r'|'\u000C')* { $channel=HIDDEN; };
>
> Which caused an infinite sequence of WS tokens. It should be
>
> WS: (' '|'\t'|'\n'|'\r'|'\u000C')+ { $channel=HIDDEN; };
>
> IMO, ANTLR should give a warning about this.


It's probably inappropriate to put such heuristic diagnostics into the 
ANTLR compiler generator itself.

Perhaps it's time for a lint- / PMD-style tool for ANTLR?


Randall Schulz

From parrt at cs.usfca.edu  Mon Jun 25 17:45:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 10:45:03 +1000
Subject: [antlr-interest] ANTLR should warn about nullable tokens
In-Reply-To: <200706251657.06001.rschulz@sonic.net>
References: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>
	<200706251657.06001.rschulz@sonic.net>
Message-ID: <F0AC2255-155E-4319-B1E8-E73E0A7CBEA6@cs.usfca.edu>

Hi Guys, actually, I have a bug report already for this.  I will add  
the test.  It seems to happen with alarming frequency.

Ter
On Jun 26, 2007, at 9:57 AM, Randall R Schulz wrote:

> On Monday 25 June 2007 16:44, David Piepgrass wrote:
>> I was testing my lexer on an invalid input when it entered an
>> infinite loop.
>>
>> It turns out this was because of my whitepace rule:
>>
>> WS: (' '|'\t'|'\n'|'\r'|'\u000C')* { $channel=HIDDEN; };
>>
>> Which caused an infinite sequence of WS tokens. It should be
>>
>> WS: (' '|'\t'|'\n'|'\r'|'\u000C')+ { $channel=HIDDEN; };
>>
>> IMO, ANTLR should give a warning about this.
>
>
> It's probably inappropriate to put such heuristic diagnostics into the
> ANTLR compiler generator itself.
>
> Perhaps it's time for a lint- / PMD-style tool for ANTLR?
>
>
> Randall Schulz


From parrt at cs.usfca.edu  Mon Jun 25 17:57:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 10:57:21 +1000
Subject: [antlr-interest] What is $Symbols
In-Reply-To: <467FCA78.6010109@paulkeir.com>
References: <FB88CF20-CDF5-4F4D-8B8C-F0C86CB80F9D@cs.usfca.edu>
	<467FCA78.6010109@paulkeir.com>
Message-ID: <A080450B-DA68-4281-8AAB-45B158F7AEB1@cs.usfca.edu>


On Jun 26, 2007, at 12:00 AM, Paul Keir wrote:

> $Symbols is a stack of 'Symbols_scope' objects. 'Symbols_scope' is  
> defined as a protected class within the antlr-generated  
> *Parser.java code.
>
> My problem is that as my class is defined in its own file (to  
> permit step-debugging), I have a problem informing it about  
> 'Symbols_scope'. i.e. If I add a 'Symbols_scope' cast to the  
> my_method example from before...
>
> public void my_method(Stack sym) {
>  for (Object depth : sym)
>    ((Symbols_scope)depth).types.add("hello");   // e.g.
> }
>
> ...I am of course told that 'Symbols_scope' symbol cannot be found.  
> Can anyone help?

can you try parser.Symbols_scope type?

Ter


From parrt at cs.usfca.edu  Mon Jun 25 17:58:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 10:58:28 +1000
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <467FE6BF.4060500@gmx.de>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
Message-ID: <74BE2600-B0BC-45BD-B518-C21CD8423791@cs.usfca.edu>


On Jun 26, 2007, at 2:01 AM, Johannes Luber wrote:

> Randall R Schulz wrote:
>> Hi,
>>
>> Am I correct in believing that the only way to notate bounded  
>> closure in
>> ANTLR is by repeated applications of the zero-or-one (a.k.a.  
>> optional)
>> closure notation?
>>
> ...
>>
>> Did I miss this somewhere, or is the verbose notation the only way to
>> get the effect I need?
>
> For C# I'd write:
>
> fragment
> UnicodeEscape
>   :
>   '\\' ( 'u' | 'U' ) (h+=HexDigit)+ {$h.Count<=6}?
>   ;

Or put that inside the (...)+ to make it stop at 6.

Ter


From parrt at cs.usfca.edu  Mon Jun 25 18:04:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 11:04:33 +1000
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706251133.36533.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
Message-ID: <1A74BA0D-57F4-4563-AFD3-47858A5EFAB8@cs.usfca.edu>


On Jun 26, 2007, at 4:33 AM, Randall R Schulz wrote:

> Hi,
>
> I have this production in an ANTLR grammar:
>
> clifFile
>   : clText * EOF
>   ;
>
>
> It elicits this error from ANTLR:
>
> warning(200): CLIF.g:1371:4: Decision can match input such as  
> "{EOF, Open}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(201): CLIF.g:1371:4: The following alternatives are  
> unreachable: 2
>
>
> Why is it talking about alternatives in a rule that has none?

The loopback is considered an alternative as it's, well, an  
alternative path. ;)  That seems *very* odd that ANTLR thinks it can  
match Open by exiting the (...)* loop.  Hmm...can clText match EOF by  
the way?

Ter


From dirty at apple.com  Mon Jun 25 21:06:04 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 25 Jun 2007 21:06:04 -0700
Subject: [antlr-interest] Having problems with whitespace...
Message-ID: <2132254A-9C66-413E-B301-BC93BC3BAD6F@apple.com>

I'm trying to implement a grammar based on JSON.  It has a few  
additions that JSON doesn't.  I started this before Richard Clark  
added his JSON grammar to the wiki.  Since I've started having my  
problems, I have integrated some of his ideas into my grammar.

One difference in my grammar is that whitespace is important.  Not  
necessarily the amount, but where it can be placed.  For example,  
with most of the grammars I've seen in the book or on the wiki, an  
input of "100 1" and "1001" would be the same thing, since whitespace  
is usually shuttled off to channel HIDDEN.  For me, I want an error  
to occur if you type "100 1", instead of "1001".  Another difference  
is that I added support for the C-style block commenting mechanism  
of /* ... */.

So, in my thinking, I would NOT push whitespace to the HIDDEN  
channel.  I would indicate, in my grammar, where whitespace would be  
appropriate.

But, now I'm having some trouble because, for some input, I'm getting  
no viable alternative errors.  And, for the life of me, can't figure  
out why.  I'm hoping someone here might have some ideas.

The following input to my grammar works within the ANTLRWorks debugger:

tree = {
	"fletch2" : "not so good"
}

But, this one doesn't:

tree = {
	"fletch2" : "not so good"
/* comment */
}

Here is a stripped down version of my grammar:

grammar testT;

options {
	output = AST;
}

tokens {
	T_ASSIGN;
	T_STR;
	T_OBJ;
	T_DEF;
	T_SYMREF;
}

WS
	: ( ' ' | '\n' | '\r' | '\t' | '\u000C' )+
	;

COMMENT
	:   '/*' ( options { greedy = false; } : . )* '*/' { $channel =  
HIDDEN; }
	;

fragment LETTER
	:	'a'..'z'
	|	'A'..'Z'
	;

STRING
	:	'"' ( EscapeSequence | ~( '\u0000'..'\u001f' | '\\' | '\"' ) )* '"'
	;

fragment EscapeSequence
	:	'\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\"' | '\'' | '\\' )
	;

IDENTIFIER
	: LETTER ( LETTER | '-' | '_' | '0'..'9' )*
	;

r
	:	statement* EOF
	;

statement
	:	assignment -> assignment
	|	WS ->
	;

assignment
	:	IDENTIFIER WS? '=' WS? value -> ^( T_ASSIGN IDENTIFIER value )
	;

object
	:	'{' WS? members WS? '}' -> members
	;

members
	:	( pair WS? ',' WS? ) => pair ( WS? ',' WS? pair )+
	|	pair
	;

pair
	:	STRING WS? ':' WS? value -> ^( T_DEF STRING value )
	;

value
	:	STRING -> ^( T_STR STRING )
	|	object -> ^( T_OBJ object )
	;


Cameron Esfahani
dirty at apple.com

"Even paranoids have enemies."

Henry Kissinger



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070625/8ea02016/attachment.html 

From mark.mandel at gmail.com  Mon Jun 25 21:29:54 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 26 Jun 2007 14:29:54 +1000
Subject: [antlr-interest] [v3] any way to increment the token integer values
Message-ID: <4153ee230706252129qd22e271m6b389060932b33de@mail.gmail.com>

Heya,

This may seem like a weird question, but -

When the Lexer and Parser are generated, we get code in the header:

    public static final int FUNCTION=29;
    public static final int WHILE=36;
    public static final int LETTER=50;

etc.

But I do a lot of island parsing, so what may be LETTER=50 on one
Parser, it may be ID=50 in another, but both Token types will end up
on the same AST.

I'm wondering if there is a way I can tell the code generator to
increment the integer values of the Tokens that are generated?

That way I could have all my island parsers Token's be from 1000+, and
I have no fear of the values overlapping, and trying to resolve Token
types from my AST becomes a lot simpler.

I hope this makes sense,

Thanks in advance,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From chintanraoh at gmail.com  Mon Jun 25 21:57:38 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Tue, 26 Jun 2007 10:27:38 +0530
Subject: [antlr-interest] Flagging better errors
Message-ID: <ec8bdb100706252157m781214c2j7c269387c18f7444@mail.gmail.com>

Hi,
The code genrated by antlr currently gives errors like
line 0:1 : expected token WS found WHATEVER
or some thing similar

suppose antlr grammar allows one to describe what WS tokes is
would it not be better
 it is better to get warnings like

line 0:1:expected whitespace found whatever

can't the grammar have a facility to provide the decription of the token
some thing like
WS
description
{
      return "whitespace";
}
:
('  '|'\t') ;

now while flaggng errors WS would be replaced by description :)

I dont whether antlr has this already


cheers,
Chintan

From win at wincent.com  Mon Jun 25 23:12:35 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 08:12:35 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706251213.23754.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<2D355DD0-405C-4D77-BA41-46A84590CDC4@wincent.com>
	<200706251213.23754.rschulz@sonic.net>
Message-ID: <69BE28FD-AA46-4957-8C4F-7614011E98DE@wincent.com>

El 25/6/2007, a las 21:13, Randall R Schulz escribi?:

> On Monday 25 June 2007 12:04, Wincent Colaiuta wrote:
>> El 25/6/2007, a las 20:33, Randall R Schulz escribi?:
>>> Hi,
>>>
>>> I have this production in an ANTLR grammar:
>>>
>>> clifFile
>>>
>>>   : clText * EOF
>>>
>>>   ;
>>>
>>>
>>> It elicits this error from ANTLR:
>>>
>>> warning(200): CLIF.g:1371:4: Decision can match input such as
>>> "{EOF, Open}" using multiple alternatives: 1, 2
>>> As a result, alternative(s) 2 were disabled for that input
>>> warning(201): CLIF.g:1371:4: The following alternatives are
>>> unreachable: 2
>>>
>>>
>>> Why is it talking about alternatives in a rule that has none?
>>
>> Try looking at the syntax diagram in ANTLRWorks so that you can see
>> the two alternative paths.
>
> Of course, there are not two paths. Just the loop back over the closed
> clText production followed by the EOF token.

If you look in ANTLRWorks you'll see that there are indeed two paths,  
the first marked in green, and the other red. In order to be non- 
ambiguous there must be only a single, deterministic path.

Here is a basic demo grammar that shows a similar warning:

   grammar Simple;

   a : b* EOF;
   b : A+;
   A : 'a';

Given input like "aaaaaaaa" there are multiple ways to match it,  
despite the lack of explicit "alternatives" in the grammar; for  
example, rule "a" could match a series of short "b" tokens (each  
consisting of a single "a"), or a single long "b" token ("aaaaaaaa").  
ANTLR automatically resolves the ambiguity by disabling one of the  
alternatives, in this case favoring the greedy match.

Cheers,
Wincent


From rerdavies at rogers.com  Mon Jun 25 23:25:29 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Tue, 26 Jun 2007 02:25:29 -0400
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706251133.36533.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
Message-ID: <92230D66DA7F415BBADD45ADBE84839C@GWB>

> clifFile
>  : clText * EOF
>  ;
>
>
> It elicits this error from ANTLR:
>
> warning(200): CLIF.g:1371:4: Decision can match input such as "{EOF, 
> Open}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(201): CLIF.g:1371:4: The following alternatives are unreachable: 2
>
> Why is it talking about alternatives in a rule that has none?
>

At *, there are two alternatives: do another clText, or don't. Do you have 
EOF in the clText rule?


From win at wincent.com  Mon Jun 25 23:26:39 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 08:26:39 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
References: <200611191412.25438.rschulz@sonic.net>
	<200706251037.08668.rschulz@sonic.net>
	<414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>
	<200706251118.22177.rschulz@sonic.net>
	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
Message-ID: <44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>

El 25/6/2007, a las 22:32, Kay Roepke escribi?:

> On Jun 25, 2007, at 8:18 PM, Randall R Schulz wrote:
>
>>
>> I don't understand what you're suggesting.
>>
>> I want an exit status from the ANTLR parser generator tool, not  
>> from the
>> parsers it generates.
>
> I will make the case when I see Terence. It probably doesn't  
> comfort you, but I need this, too,
> but unfortunately I'm way to busy to invest time into it right now.

I'd like to see this too, just for consistency with all the other  
UNIX tools. It would come in very handy in Makefiles as well... on  
seeing a non-zero exit status from the org.antlr.Tool make would stop  
builds rather than blindly ploughing ahead.

Cheers,
Wincent


From vbar at comp.cz  Tue Jun 26 00:01:23 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 26 Jun 2007 09:01:23 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
References: <200611191412.25438.rschulz@sonic.net>	<200706251037.08668.rschulz@sonic.net>	<414e44f70706251104k41fc4ea1g277ec7f1f106ac40@mail.gmail.com>	<200706251118.22177.rschulz@sonic.net>	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
	<44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
Message-ID: <4680B9C3.9040208@comp.cz>

Wincent Colaiuta wrote:
> El 25/6/2007, a las 22:32, Kay Roepke escribi?:
>> On Jun 25, 2007, at 8:18 PM, Randall R Schulz wrote:
>>> I want an exit status from the ANTLR parser generator tool, not from the
>>> parsers it generates.
> I'd like to see this too, just for consistency with all the other UNIX 
> tools. It would come in very handy in Makefiles as well... on seeing a 
> non-zero exit status from the org.antlr.Tool make would stop builds 
+1

	Bye
		Vasek


From parrt at cs.usfca.edu  Tue Jun 26 00:10:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 17:10:46 +1000
Subject: [antlr-interest] [v3] any way to increment the token integer
	values
In-Reply-To: <4153ee230706252129qd22e271m6b389060932b33de@mail.gmail.com>
References: <4153ee230706252129qd22e271m6b389060932b33de@mail.gmail.com>
Message-ID: <E3A979F7-3EC0-4324-93C2-02C45565384B@cs.usfca.edu>


On Jun 26, 2007, at 2:29 PM, Mark Mandel wrote:

> Heya,
>
> This may seem like a weird question, but -
>
> When the Lexer and Parser are generated, we get code in the header:
>
>    public static final int FUNCTION=29;
>    public static final int WHILE=36;
>    public static final int LETTER=50;
>
> etc.
>
> But I do a lot of island parsing, so what may be LETTER=50 on one
> Parser, it may be ID=50 in another, but both Token types will end up
> on the same AST.
>
> I'm wondering if there is a way I can tell the code generator to
> increment the integer values of the Tokens that are generated?
>
> That way I could have all my island parsers Token's be from 1000+, and
> I have no fear of the values overlapping, and trying to resolve Token
> types from my AST becomes a lot simpler.

Perhaps just import the other tokens into the island grammar so they  
are disjoint.

Ter


From win at wincent.com  Tue Jun 26 00:10:19 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 09:10:19 +0200
Subject: [antlr-interest] ANTLR should warn about nullable tokens
In-Reply-To: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>
References: <ce40b1470706251644x7f38f794x15f9a40e47b84403@mail.gmail.com>
Message-ID: <0F19D327-8233-4C29-8540-C1DE1AFCA5DF@wincent.com>

El 26/6/2007, a las 1:44, David Piepgrass escribi?:

> I was testing my lexer on an invalid input when it entered an  
> infinite loop.
>
> It turns out this was because of my whitepace rule:
>
> WS: (' '|'\t'|'\n'|'\r'|'\u000C')* { $channel=HIDDEN; };
>
> Which caused an infinite sequence of WS tokens. It should be
>
> WS: (' '|'\t'|'\n'|'\r'|'\u000C')+ { $channel=HIDDEN; };
>
> IMO, ANTLR should give a warning about this.

Yes, Ter already knows about this:

<http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
021279.html>

I don't know if it's in the bugtracker or not yet.

Cheers,
Wincent


From win at wincent.com  Tue Jun 26 00:28:48 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 09:28:48 +0200
Subject: [antlr-interest] Having problems with whitespace...
In-Reply-To: <2132254A-9C66-413E-B301-BC93BC3BAD6F@apple.com>
References: <2132254A-9C66-413E-B301-BC93BC3BAD6F@apple.com>
Message-ID: <4BCC128A-7E02-4A3A-804B-F53B912B5C8A@wincent.com>

El 26/6/2007, a las 6:06, Cameron Esfahani escribi?:

> One difference in my grammar is that whitespace is important.  Not  
> necessarily the amount, but where it can be placed.  For example,  
> with most of the grammars I've seen in the book or on the wiki, an  
> input of "100 1" and "1001" would be the same thing, since  
> whitespace is usually shuttled off to channel HIDDEN.  For me, I  
> want an error to occur if you type "100 1", instead of "1001".

I don't know if I've misunderstood your point, but I think that there  
*is* a difference between "100 1" and "1001" even when whitespace is  
being sent on the HIDDEN channel, because in the former case your  
lexer will produce two tokens (for "100" and then "1") and in the  
later only one ("1001"); if your parser rules are looking for just  
one token and they get two then you'll get the error you're looking for.

Cheers,
Wincent


From parrt at cs.usfca.edu  Tue Jun 26 00:33:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 17:33:50 +1000
Subject: [antlr-interest] Flagging better errors
In-Reply-To: <ec8bdb100706252157m781214c2j7c269387c18f7444@mail.gmail.com>
References: <ec8bdb100706252157m781214c2j7c269387c18f7444@mail.gmail.com>
Message-ID: <09852D80-FEA0-4CFE-937C-D22432C34A30@cs.usfca.edu>

That's like the paraphrase of v2.  You can fake with v3 (I have  
something in the book about how to do it).

Ter

On Jun 26, 2007, at 2:57 PM, chintan rao wrote:

> Hi,
> The code genrated by antlr currently gives errors like
> line 0:1 : expected token WS found WHATEVER
> or some thing similar
>
> suppose antlr grammar allows one to describe what WS tokes is
> would it not be better
> it is better to get warnings like
>
> line 0:1:expected whitespace found whatever
>
> can't the grammar have a facility to provide the decription of the  
> token
> some thing like
> WS
> description
> {
>      return "whitespace";
> }
> :
> ('  '|'\t') ;
>
> now while flaggng errors WS would be replaced by description :)
>
> I dont whether antlr has this already
>
>
> cheers,
> Chintan


From relationalalgebra at gmail.com  Tue Jun 26 00:57:02 2007
From: relationalalgebra at gmail.com (G R)
Date: Tue, 26 Jun 2007 09:57:02 +0200
Subject: [antlr-interest] A few questions about AST
In-Reply-To: <051466DAA0D608439E196797955018D76E1F@wavemachine.temporal-wave.com>
References: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E1F@wavemachine.temporal-wave.com>
Message-ID: <2ea6ad20706260057ld823f9ft4b9360d52878996e@mail.gmail.com>

> The rules:
>
>
>
> predicat:    elementaryPredicat (logicalOperator elementaryPredicat)*;
> //    -> ^(logicalOperator elementaryPredicat elementaryPredicat);
> logicalOperator
>     :    AND
>         | OR;
>
>
>
> can be:
>
>
>
> predicat:    elementaryPredicat (^logicalOperator elementaryPredicat)*;
>
>
> logicalOperator: AND | OR;
>
>
> Parsing the resulting tree is done via a tree parser produced by tree
> grammar or by manually traversing the tree. You need to read the book and/or
> examples for more details.
>
>
>
> Jim.
>

First of all, thanks for your answer Jim.
I have try your way of gathering attributes and it's working perfectly!
Thanks again.
But, I've try your :

predicat:    elementaryPredicat (^logicalOperator elementaryPredicat)*;

and I've got a syntax error (unexpected token ^)
Any idea how to do this ?

Thanks.
G.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/57c70534/attachment.html 

From antlr at mirality.co.nz  Tue Jun 26 01:30:20 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 26 Jun 2007 20:30:20 +1200
Subject: [antlr-interest] Avoiding warnings without code bloat
In-Reply-To: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.co
 m>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>
Message-ID: <20070626083032.2B90511E977@www.antlr.org>

At 11:33 26/06/2007, David Piepgrass wrote:
 >// Strings
 >SQ_STRING: '\''! ({true}? ESC_SEQ | ~'\'')* '\''!;
 >DQ_STRING: '"'!  ({true}? ESC_SEQ | ~'"')* '"'!;
 >BQ_STRING: '`'!  ({true}? ESC_SEQ | ~'`')* '`'!;

Does ! work in v3 lexers now?  (Maybe I need to pay closer 
attention.)


From sgoantlr at gmail.com  Tue Jun 26 01:48:29 2007
From: sgoantlr at gmail.com (Salvador Gomez)
Date: Tue, 26 Jun 2007 10:48:29 +0200
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <BHEHJGODIEEHDEEKGJKFCEPIGDAA.dwarner@uni-paderborn.de>
References: <BHEHJGODIEEHDEEKGJKFCEPIGDAA.dwarner@uni-paderborn.de>
Message-ID: <2eefd630706260148w84a89eav2d9fb1ca3798e4a2@mail.gmail.com>

Hi Daniel,

you can try out my library JRtfTree (port of NRtfTree in C#). It parses an
RTF document and generates a DOM-like tree. It's not ANTLR but can be
useful.

You can find docs, examples and downloads in:

(Sourceforge) http://nrtftree.sourceforge.net/     (in english)
(My web) JRtfTree: http://www.sgoliver.net/jrtftree.html   (in spanish)
              NRtfTree:
http://www.sgoliver.net/nrtftree.html<http://www.sgoliver.net/jrtftree.html>
(in spanish)


Salva.


On 25/06/07, Daniel Warner <dwarner at uni-paderborn.de> wrote:
>
> Hello,
>
> I'm studying computer sciences and mathematics in Paderborn, and currently
> I'm working on a university project with the goal to transform RTF-documents
> into a text-based representation of braille, called HBS.
>
> The output format HBS is already specified, although there is no grammar
> (it is all in an existing application and I have to reengineer). Lots of
> information in a RTF-document is of course irrelevant for blind people and
> will therefore have to be eliminated. HBS codes a lot of structural
> information but far less layout information, so I will also be faced with
> problems such as: What do I do with footnotes, how should I represent text
> that is colored red (maybe even inconsistently), how can I map layout to
> structure appropriately, etc. just to mention a few.
>
> As I want to implement the RTF-HBS-Parser in Java, I naturally looked for
> parser generators for this language. To me ANTLR v3 seems to be the most
> promising approach in this area, and I really appreciate Prof. Parr for
> publishing his tool under the BSD License.
>
> I already baught his book "The Definitive ANTLR Reference" (and PDF) and
> have a question concerning the "big picture" for my project:
>
> The RTF specification 1.9 from Microsoft is huge. What approach would you
> suggest in parsing RTF with ANTLR to the mentioned text-based representation
> of braille (HBS)?
>
> 1) Use actions in the grammar rules?
> 2) Create an AST from the RTF input and a tree grammar for the AST that
> outputs HBS?
> 3) Use templates?
> 4) Other suggestions?
>
> Thanks a lot in advance for some hints that help me starting off with my
> work,
>
> Daniel Warner
>
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.5.476 / Virus Database: 269.9.6/865 - Release Date: 24.06.200708:33
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/a875beb9/attachment-0001.html 

From paul at paulkeir.com  Tue Jun 26 05:34:59 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 26 Jun 2007 13:34:59 +0100
Subject: [antlr-interest] What is $Symbols
In-Reply-To: <A080450B-DA68-4281-8AAB-45B158F7AEB1@cs.usfca.edu>
References: <A080450B-DA68-4281-8AAB-45B158F7AEB1@cs.usfca.edu>
Message-ID: <468107F3.5020101@paulkeir.com>

Thankyou, parser.Symbols_scope type works fine.
Paul

From rschulz at sonic.net  Tue Jun 26 05:47:37 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 05:47:37 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
References: <200611191412.25438.rschulz@sonic.net>
	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
	<44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
Message-ID: <200706260547.37458.rschulz@sonic.net>

On Monday 25 June 2007 23:26, Wincent Colaiuta wrote:
> El 25/6/2007, a las 22:32, Kay Roepke escribi?:
> > On Jun 25, 2007, at 8:18 PM, Randall R Schulz wrote:
> >> ...
> >>
> >> I want an exit status from the ANTLR parser generator tool, not
> >> from the parsers it generates.
> >
> > I will make the case when I see Terence. It probably doesn't
> > comfort you, but I need this, too,
> > but unfortunately I'm way to busy to invest time into it right now.
>
> I'd like to see this too, just for consistency with all the other
> UNIX tools. It would come in very handy in Makefiles as well... on
> seeing a non-zero exit status from the org.antlr.Tool make would stop
> builds rather than blindly ploughing ahead.

Yes, precisely. That's the whole point.

Right now, I'm having to examine the output from ANTLR looking for signs 
of errors. That shouldn't be necessary.


> Cheers,
> Wincent


Randall Schulz

From rschulz at sonic.net  Tue Jun 26 05:50:40 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 05:50:40 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <69BE28FD-AA46-4957-8C4F-7614011E98DE@wincent.com>
References: <200706251133.36533.rschulz@sonic.net>
	<200706251213.23754.rschulz@sonic.net>
	<69BE28FD-AA46-4957-8C4F-7614011E98DE@wincent.com>
Message-ID: <200706260550.40715.rschulz@sonic.net>

On Monday 25 June 2007 23:12, Wincent Colaiuta wrote:
> El 25/6/2007, a las 21:13, Randall R Schulz escribi?:
> > On Monday 25 June 2007 12:04, Wincent Colaiuta wrote:
> >> El 25/6/2007, a las 20:33, Randall R Schulz escribi?:
> >>> Hi,
> >>>
> >>> I have this production in an ANTLR grammar:
> >>>
> >>> clifFile
> >>>   : clText * EOF
> >>>   ;
> >>>
> >>> It elicits this error from ANTLR:
> >>>
> >>> warning(200): CLIF.g:1371:4: Decision can match input such as
> >>> "{EOF, Open}" using multiple alternatives: 1, 2
> >>> As a result, alternative(s) 2 were disabled for that input
> >>> warning(201): CLIF.g:1371:4: The following alternatives are
> >>> unreachable: 2
> >>>
> >>>
> >>> Why is it talking about alternatives in a rule that has none?
> >>
> >> ...
>
> If you look in ANTLRWorks you'll see that there are indeed two paths,
> the first marked in green, and the other red. In order to be non-
> ambiguous there must be only a single, deterministic path.

I've done that, but there are no colors at all in the recognizer graph.

Again, I'm talking about the stand-alone ANTLRworks, not the IDEA 
plug-in.

But I do see the implicit choice that arises when the parser must choose 
whether to iterate or not.


Anyway, it's all moot. The grammar is so young, things have already 
changed to the point that I'm not seeing that warning any more. In 
fact, there were two such diagnostics, both now gone.

In all likelihood, given my inexperience with ANTLR, they and others 
will come and go as well before my grammar is done...


> ...
>
> Cheers,
> Wincent


Randall schulz

From dwarner at uni-paderborn.de  Tue Jun 26 06:02:55 2007
From: dwarner at uni-paderborn.de (Daniel Warner)
Date: Tue, 26 Jun 2007 15:02:55 +0200
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <2eefd630706260148w84a89eav2d9fb1ca3798e4a2@mail.gmail.com>
Message-ID: <BHEHJGODIEEHDEEKGJKFOEALGEAA.dwarner@uni-paderborn.de>

Hi Salva,

thanks a lot for the link! I will have a look at your library and the docs. I'm sure there is some information in there, that's useful for me.

Kind regards
Daniel

-----Original Message-----
From: Salvador Gomez [mailto:sgoantlr at gmail.com]
Sent: Tuesday, June 26, 2007 10:48 AM
To: antlr-interest at antlr.org
Cc: Daniel Warner
Subject: Re: [antlr-interest] Parsing RTF to Braille


Hi Daniel,

you can try out my library JRtfTree (port of NRtfTree in C#). It parses an RTF document and generates a DOM-like tree. It's not ANTLR but can be useful. 

You can find docs, examples and downloads in:

(Sourceforge) http://nrtftree.sourceforge.net/     (in english)
(My web) JRtfTree: http://www.sgoliver.net/jrtftree.html   (in spanish)
              NRtfTree: http://www.sgoliver.net/nrtftree.html   (in spanish)


Salva.



On 25/06/07, Daniel Warner < dwarner at uni-paderborn.de> wrote:
Hello,

I'm studying computer sciences and mathematics in Paderborn, and currently I'm working on a university project with the goal to transform RTF-documents into a text-based representation of braille, called HBS. 

The output format HBS is already specified, although there is no grammar (it is all in an existing application and I have to reengineer). Lots of information in a RTF-document is of course irrelevant for blind people and will therefore have to be eliminated. HBS codes a lot of structural information but far less layout information, so I will also be faced with problems such as: What do I do with footnotes, how should I represent text that is colored red (maybe even inconsistently), how can I map layout to structure appropriately, etc. just to mention a few. 

As I want to implement the RTF-HBS-Parser in Java, I naturally looked for parser generators for this language. To me ANTLR v3 seems to be the most promising approach in this area, and I really appreciate Prof. Parr for publishing his tool under the BSD License. 

I already baught his book "The Definitive ANTLR Reference" (and PDF) and have a question concerning the "big picture" for my project:

The RTF specification 1.9 from Microsoft is huge. What approach would you suggest in parsing RTF with ANTLR to the mentioned text-based representation of braille (HBS)? 

1) Use actions in the grammar rules?
2) Create an AST from the RTF input and a tree grammar for the AST that outputs HBS?
3) Use templates?
4) Other suggestions?

Thanks a lot in advance for some hints that help me starting off with my work, 

Daniel Warner

No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.476 / Virus Database: 269.9.6/865 - Release Date: 24.06.2007 08:33
No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.476 / Virus Database: 269.9.8/869 - Release Date: 25.06.2007 17:32


From dwarner at uni-paderborn.de  Tue Jun 26 06:27:31 2007
From: dwarner at uni-paderborn.de (Daniel Warner)
Date: Tue, 26 Jun 2007 15:27:31 +0200
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <b6077b530706260047g6647d5f6i8107346e9e21cb0a@mail.gmail.com>
Message-ID: <BHEHJGODIEEHDEEKGJKFMEANGEAA.dwarner@uni-paderborn.de>

Hi Tim,

I agree that it's a worthwhile (and probably also difficult) project. We plan do use the RTF->HBS-Parser at the (Distance) University of Hagen to process the teaching documents for the visually impaired people.

You convinced me that constructing an AST is a good idea; At this point I'm not sure, whether templates will be necessary.

Thanks for the tip concerning the 'helper' objects, that seems very reasonable.

Regards,
Daniel.

-----Original Message-----
From: Tim Clark [mailto:timgclark at gmail.com]
Sent: Tuesday, June 26, 2007 9:47 AM
To: Daniel Warner
Subject: Re: [antlr-interest] Parsing RTF to Braille


Hi Daniel
This sounds like a really worthwhile (and difficult) project. My experience tells me that you will get a lot of benefits from using (at least) three parts to your solution:

1. src ---> AST
2. at least one AST grammar (i.e. tree parser) to validate, extract useful info etc.
3. AST --> output using templates.

The last step might not be the final output, but rather a simplified language that represents what you want the final output to be. Then you repeat the parse,analyse,output on that language! The advantage of this is that it is much easier to check the structure and validity of a simpler language.
Also, using one or more 'helper' objects outside of the parsers, you will find that the grammar files are quite simple and not cluttered up with lots of actions (and therefore easier to understand and debug).

[My application is a simulation engine that runs within a Java application. It's source code parser/AST/template step produces text 'assembler code' for an abstract stack machine; this is then processed to produce binary code for the stack machine.]

Divide and rule!
Regards,Tim


On 6/25/07, Daniel Warner <dwarner at uni-paderborn.de> wrote:
Hello,

I'm studying computer sciences and mathematics in Paderborn, and currently I'm working on a university project with the goal to transform RTF-documents into a text-based representation of braille, called HBS. 

The output format HBS is already specified, although there is no grammar (it is all in an existing application and I have to reengineer). Lots of information in a RTF-document is of course irrelevant for blind people and will therefore have to be eliminated. HBS codes a lot of structural information but far less layout information, so I will also be faced with problems such as: What do I do with footnotes, how should I represent text that is colored red (maybe even inconsistently), how can I map layout to structure appropriately, etc. just to mention a few. 

As I want to implement the RTF-HBS-Parser in Java, I naturally looked for parser generators for this language. To me ANTLR v3 seems to be the most promising approach in this area, and I really appreciate Prof. Parr for publishing his tool under the BSD License. 

I already baught his book "The Definitive ANTLR Reference" (and PDF) and have a question concerning the "big picture" for my project:

The RTF specification 1.9 from Microsoft is huge. What approach would you suggest in parsing RTF with ANTLR to the mentioned text-based representation of braille (HBS)? 

1) Use actions in the grammar rules?
2) Create an AST from the RTF input and a tree grammar for the AST that outputs HBS?
3) Use templates?
4) Other suggestions?

Thanks a lot in advance for some hints that help me starting off with my work, 

Daniel Warner

No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.476 / Virus Database: 269.9.6/865 - Release Date: 24.06.2007 08:33
No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.476 / Virus Database: 269.9.8/869 - Release Date: 25.06.2007 17:32


From rschulz at sonic.net  Tue Jun 26 06:30:29 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 06:30:29 -0700
Subject: [antlr-interest] ANTLRworks vs. Stand-Alone Parser
Message-ID: <200706260630.29343.rschulz@sonic.net>

Hi,

I have a grammar, that's working (though far from complete). It's does 
not appear to be parsing the inputs the way I intend, so I wanted to 
look at the parse tree in the ANTLRworks Interpreter pane. The problem 
is that input that is parsed successfully when I run the parser on its 
own (outside ANTLRworks) just gives a one or two derivations (depending 
on which non-terminal I choose as the start symbol) and then 
NoViableAltException. I've tried several non-terminals that should be 
suitable for deriving the input I supplied but the result is always the 
same.

Am I doing something wrong? Why the discrepancy between the parser when 
executed on its own and when executed within ANTLRworks? I do not use 
any options when invoking ANTLR on the command line, nor do I have any 
set in the ANTLRworks General Preferences tab.

As before, this is the stand-alone ANTLRworks application, not the IDEA 
plug-in. ANTLRworks was not running when the most recent change to the 
grammar file was made and it is displaying the latest version of the 
grammar.

Does ANLTRworks cache its compiled parser classes somewhere? If so, 
where? Must I manually clear that cache (if any)?


Randall Schulz

From dwarner at uni-paderborn.de  Tue Jun 26 06:32:43 2007
From: dwarner at uni-paderborn.de (Daniel Warner)
Date: Tue, 26 Jun 2007 15:32:43 +0200
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <200706251941.l5PJfEef015083@morpho.newtechlaw.com>
Message-ID: <BHEHJGODIEEHDEEKGJKFEEAOGEAA.dwarner@uni-paderborn.de>

Hi Gerald,

you're right concerning the different and incomplete interpretations of the RTF spec. It seems to me that implementing a PDF->HBS Converter just moves the problem to finding a good parser for RTF->PDF?

Regards,
Daniel.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org]On Behalf Of Gerald B. Rosenberg
Sent: Monday, June 25, 2007 9:33 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Parsing RTF to Braille


At 11:46 AM 6/25/2007, Daniel Warner wrote:

The RTF specification 1.9 from Microsoft is huge. What approach would you suggest in parsing RTF with ANTLR to the mentioned text-based representation of braille (HBS)?

1) Use actions in the grammar rules?
2) Create an AST from the RTF input and a tree grammar for the AST that outputs HBS?
3) Use templates?
4) Other suggestions?

I would strongly suggest implementing a PDF to HBS converter if only to avoid the many different/incomplete interpretations of the RTF spec.  The PDF spec is substantially smaller and far more uniformly implemented.  Conversion from RTF, and many other document formats, to PDF can be automated with little difficulty.  

In both RTF and PDF, top down left right orientation is common, but not required.  Therefore, you can encounter "out of order" text even on simple pages.  So, actions for direct output are not likely to be useful.  If there is a need to handle footnotes, tables, and columns, AST is the only way to go.  You will likely need multiple tree walkers to distinguish different text blocks and reorganize the AST content into a reasonably consistent form.  Output then should be fairly linear, so templates should not be necessary.

HTHs,
Gerald 
----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any attachments) is being sent by an attorney, is for the sole use of the intended recipient, and may contain confidential and privileged information.  Any unauthorized review, use, disclosure or distribution is prohibited.  If you are not the intended recipient, please contact the sender immediately by reply email and delete all copies of this message and any attachments without retaining a copy. 
No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.476 / Virus Database: 269.9.8/869 - Release Date: 25.06.2007 17:32


From tbrandonau at gmail.com  Tue Jun 26 06:38:07 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 26 Jun 2007 23:38:07 +1000
Subject: [antlr-interest] ANTLRworks vs. Stand-Alone Parser
In-Reply-To: <200706260630.29343.rschulz@sonic.net>
References: <200706260630.29343.rschulz@sonic.net>
Message-ID: <ebc876d70706260638k17046e21hb519be47032eb075@mail.gmail.com>

On 6/26/07, Randall R Schulz <rschulz at sonic.net> wrote:
> Hi,
>
> I have a grammar, that's working (though far from complete). It's does
> not appear to be parsing the inputs the way I intend, so I wanted to
> look at the parse tree in the ANTLRworks Interpreter pane. The problem
> is that input that is parsed successfully when I run the parser on its
> own (outside ANTLRworks) just gives a one or two derivations (depending
> on which non-terminal I choose as the start symbol) and then
> NoViableAltException. I've tried several non-terminals that should be
> suitable for deriving the input I supplied but the result is always the
> same.
>
> Am I doing something wrong? Why the discrepancy between the parser when
> executed on its own and when executed within ANTLRworks? I do not use
> any options when invoking ANTLR on the command line, nor do I have any
> set in the ANTLRworks General Preferences tab.
>
> As before, this is the stand-alone ANTLRworks application, not the IDEA
> plug-in. ANTLRworks was not running when the most recent change to the
> grammar file was made and it is displaying the latest version of the
> grammar.
>
> Does ANLTRworks cache its compiled parser classes somewhere? If so,
> where? Must I manually clear that cache (if any)?
>
>
> Randall Schulz
>
The ANTLRWorks interpreter does not execute actions, including
predicates. So if your grammar uses predicates or actions which alter
the lexing\parsing behaviour it will not work in the ANTLRWorks
interpreter.
The ANTLRWorks debugger does do actions properly and should be
identical to running externally (apart from classpath issues which may
necessitate external debugging).

Tom.

From rschulz at sonic.net  Tue Jun 26 06:47:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 06:47:23 -0700
Subject: [antlr-interest] ANTLRworks vs. Stand-Alone Parser
In-Reply-To: <ebc876d70706260638k17046e21hb519be47032eb075@mail.gmail.com>
References: <200706260630.29343.rschulz@sonic.net>
	<ebc876d70706260638k17046e21hb519be47032eb075@mail.gmail.com>
Message-ID: <200706260647.23373.rschulz@sonic.net>

On Tuesday 26 June 2007 06:38, Thomas Brandon wrote:
> On 6/26/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > Hi,
> >
> > I have a grammar, that's working (though far from complete). It's
> > does not appear to be parsing the inputs the way I intend, so I
> > wanted to look at the parse tree in the ANTLRworks Interpreter
> > pane. The problem is that input that is parsed successfully when I
> > run the parser on its own (outside ANTLRworks) just gives a one or
> > two derivations (depending on which non-terminal I choose as the
> > start symbol) and then NoViableAltException. ...
> >
> > Am I doing something wrong? Why the discrepancy between the parser
> > when executed on its own and when executed within ANTLRworks? ...
> >
> >
> > Randall Schulz
>
> The ANTLRWorks interpreter does not execute actions, including
> predicates.

Why not?


> So if your grammar uses predicates or actions which alter 
> the lexing\parsing behaviour it will not work in the ANTLRWorks
> interpreter.

At the moment, I have no syntactic predicates and no actions other than 
some simple println() calls. However, I seem to recall from looking at 
the generated code recently that when you use the backtracking option, 
which I am, ANTLR itself can generate syntactic predicates, right?

So might that explain the discrepancy?


> The ANTLRWorks debugger does do actions properly and should be
> identical to running externally (apart from classpath issues which
> may necessitate external debugging).

OK. I guess I'll try to make that work. I've never had success in the 
past, and have been deterred by the complications from trying hard 
enough to make it work.

E.g., at the moment there's a diagnostic in the console telling me about 
class file version incompatibility (found 50.0, wants 49.0)...


> Tom.


Randall Schulz

From win at wincent.com  Tue Jun 26 06:48:21 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 15:48:21 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706260550.40715.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<200706251213.23754.rschulz@sonic.net>
	<69BE28FD-AA46-4957-8C4F-7614011E98DE@wincent.com>
	<200706260550.40715.rschulz@sonic.net>
Message-ID: <04B4C828-3AAB-4F38-9BB1-E8A8E4EB5AAD@wincent.com>

El 26/6/2007, a las 14:50, Randall R Schulz escribi?:

>> If you look in ANTLRWorks you'll see that there are indeed two paths,
>> the first marked in green, and the other red. In order to be non-
>> ambiguous there must be only a single, deterministic path.
>
> I've done that, but there are no colors at all in the recognizer  
> graph.
>
> Again, I'm talking about the stand-alone ANTLRworks, not the IDEA
> plug-in.

Yeah, I'm using standalone ANTLRWorks as well. This screenshot  
(<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows what  
ambiguous path visualization looks like. Note the check boxes for the  
alternatives; in order to see both paths both check boxes must be  
checked.

Cheers,
Wincent


From jaluber at gmx.de  Tue Jun 26 06:50:40 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 26 Jun 2007 15:50:40 +0200
Subject: [antlr-interest] Bug in C# template for code generation?
Message-ID: <468119B0.1090004@gmx.de>

Hello!

When generating the attached grammar, the resulting
ANTLR3ToRelaxNGParser.cs has the following snippet in the
element()-function:

object root_1 = (object)adaptor.GetNilNode();
root_1 = (object)adaptor.BecomeRoot(stream_atom.nextNode(), root_1);

The compiler complains that
"'Antlr.Runtime.Tree.RewriteRuleSubtreeStream' does not contain a
definition for 'nextNode'". As I haven't touched this particular code,
it means either the C# template contains a bug or the element rule

element // Simplified AST
    :   id ('='|'+=') rulepart=(atom|block) ebnfSuffix?
        -> ^($rulepart ebnfSuffix?)
    |   atom ebnfSuffix? -> ^(atom ebnfSuffix?)
    |	ebnf
    |   ACTION ->
    |   SEMPRED '=>'? ->
    |   treeSpec ->
    ;

contains an error. What is it?

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/451c736d/attachment.pl 

From rschulz at sonic.net  Tue Jun 26 06:59:24 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 06:59:24 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <04B4C828-3AAB-4F38-9BB1-E8A8E4EB5AAD@wincent.com>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260550.40715.rschulz@sonic.net>
	<04B4C828-3AAB-4F38-9BB1-E8A8E4EB5AAD@wincent.com>
Message-ID: <200706260659.24230.rschulz@sonic.net>

On Tuesday 26 June 2007 06:48, Wincent Colaiuta wrote:
> El 26/6/2007, a las 14:50, Randall R Schulz escribi?:
> >> If you look in ANTLRWorks you'll see that there are indeed two
> >> paths, the first marked in green, and the other red. In order to
> >> be non- ambiguous there must be only a single, deterministic path.
> >
> > I've done that, but there are no colors at all in the recognizer
> > graph.
> >
> > Again, I'm talking about the stand-alone ANTLRworks, not the IDEA
> > plug-in.
>
> Yeah, I'm using standalone ANTLRWorks as well. This screenshot
> (<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows what
> ambiguous path visualization looks like. Note the check boxes for the
> alternatives; in order to see both paths both check boxes must be
> checked.

I've never seen anything like that, even when I get those warnings from 
the ANTLR tool.

How do you get multiple productions at one time in the Syntax Diagram? I 
can't get that to happen?I never see the racetrack diagram for more 
than one production at a time.

I'm running on Linux, so the details of the display are different, but 
there is no "Alternatives:" check-box, jus the Show NFA check-box.

I'm running version 1.0.2 of ANTLRworks on Java 1.5.0.


> Cheers,
> Wincent


Randall Schulz

From win at wincent.com  Tue Jun 26 07:03:10 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 16:03:10 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706260659.24230.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260550.40715.rschulz@sonic.net>
	<04B4C828-3AAB-4F38-9BB1-E8A8E4EB5AAD@wincent.com>
	<200706260659.24230.rschulz@sonic.net>
Message-ID: <B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>

El 26/6/2007, a las 15:59, Randall R Schulz escribi?:

>> Yeah, I'm using standalone ANTLRWorks as well. This screenshot
>> (<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows what
>> ambiguous path visualization looks like. Note the check boxes for the
>> alternatives; in order to see both paths both check boxes must be
>> checked.
>
> I've never seen anything like that, even when I get those warnings  
> from
> the ANTLR tool.
>
> How do you get multiple productions at one time in the Syntax  
> Diagram? I
> can't get that to happen?I never see the racetrack diagram for more
> than one production at a time.

No specific action should be required on your part. If multiple rules  
need to be shown in order to display the ambiguous paths then  
ANTLRWorks should display them automatically whenever the rule with  
the ambiguity (highlighted red in the list of rules) is selected.

Cheers,
Wincent


From dwarner at uni-paderborn.de  Tue Jun 26 07:05:58 2007
From: dwarner at uni-paderborn.de (Daniel Warner)
Date: Tue, 26 Jun 2007 16:05:58 +0200
Subject: [antlr-interest] Parsing RTF to Braille
Message-ID: <BHEHJGODIEEHDEEKGJKFOEBAGEAA.dwarner@uni-paderborn.de>

Hello,

I would like to mention another difficulty one is faced to when parsing RTF to Braille:

In LaTeX and many modern text processing systems it is possible to use semantic annotations (structure) (like "<h1>Section</h1>" to indicate a section) instead of physical text attributes like font size, color or style (layout).

Now for the visually impaired it is not very interesting whether a text is in Arial or Verdana or whether the text size is 14 or 16, but far more important she or he is interested in structure, which is often only implicitly coded by layout (no problem as long as you aren't visually impaired).

We want to automate the process of mapping layout->structure more or less adequately for visually impaired people (I suppose this will be difficult because of inconsistent layout in one document, so maybe one will also have to use methods from AI/machine learning?)

Is it reasonable to do such mapping/transformation on the constructed AST with the help of one or multipletree parser(s)?

Thank you in advance for your help or suggestions.

Kind regards,
Daniel Warner


No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.476 / Virus Database: 269.9.8/869 - Release Date: 25.06.2007 17:32


From ssiegel at finjan.com  Tue Jun 26 07:10:32 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 26 Jun 2007 17:10:32 +0300
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
References: <200706251133.36533.rschulz@sonic.net><200706260550.40715.rschulz@sonic.net><04B4C828-3AAB-4F38-9BB1-E8A8E4EB5AAD@wincent.com><200706260659.24230.rschulz@sonic.net>
	<B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C02189C7A@exmail1.finjan.com>

After running "generate code" there should be some rules in the outline pane which are colored red. Those rules will show multiple paths.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wincent Colaiuta
Sent: Tuesday, June 26, 2007 5:03 PM
To: Randall R Schulz
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is ANTLR Hallucinating?

El 26/6/2007, a las 15:59, Randall R Schulz escribi?:

>> Yeah, I'm using standalone ANTLRWorks as well. This screenshot
>> (<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows what
>> ambiguous path visualization looks like. Note the check boxes for the
>> alternatives; in order to see both paths both check boxes must be
>> checked.
>
> I've never seen anything like that, even when I get those warnings  
> from
> the ANTLR tool.
>
> How do you get multiple productions at one time in the Syntax  
> Diagram? I
> can't get that to happen-I never see the racetrack diagram for more
> than one production at a time.

No specific action should be required on your part. If multiple rules  
need to be shown in order to display the ambiguous paths then  
ANTLRWorks should display them automatically whenever the rule with  
the ambiguity (highlighted red in the list of rules) is selected.

Cheers,
Wincent



From rschulz at sonic.net  Tue Jun 26 07:17:10 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 07:17:10 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260659.24230.rschulz@sonic.net>
	<B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
Message-ID: <200706260717.10411.rschulz@sonic.net>

On Tuesday 26 June 2007 07:03, Wincent Colaiuta wrote:
> El 26/6/2007, a las 15:59, Randall R Schulz escribi?:
> >> Yeah, I'm using standalone ANTLRWorks as well. This screenshot
> >> (<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows
> >> what ambiguous path visualization looks like. Note the check boxes
> >> for the alternatives; in order to see both paths both check boxes
> >> must be checked.
> >
> > I've never seen anything like that, even when I get those warnings
> > from
> > the ANTLR tool.
> >
> > How do you get multiple productions at one time in the Syntax
> > Diagram? I
> > can't get that to happen?I never see the racetrack diagram for more
> > than one production at a time.
>
> No specific action should be required on your part. If multiple rules
> need to be shown in order to display the ambiguous paths then
> ANTLRWorks should display them automatically whenever the rule with
> the ambiguity (highlighted red in the list of rules) is selected.

Too many interacting issues and options...

So I have to turn off backtracking and then try to apply the grammar in 
the Interpreter before it does whatever it does to recompute the 
conflicts. (I just saw your message about using the Generate Code 
command instead of the Interpreter). Then I get non-terminal / 
production names in red and when I select one of them, I see the set of 
rules that participate in the ambiguity with the green and red conflict 
arcs.

What does the bold, pulsating red arc mean?


Is anything supposed to happend when I issue the Help command (from the 
Help menu)? 'Cause nothing happens on my system (not even a "not help 
available" alert).

Also, when the conflict diagram is displayed and the ANTLRworks window 
is active, it seems to consume all available CPU cycles.


> Cheers,
> Wincent


Thanks for your help.

Randall Schulz

From tbrandonau at gmail.com  Tue Jun 26 07:17:57 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 00:17:57 +1000
Subject: [antlr-interest] ANTLRworks vs. Stand-Alone Parser
In-Reply-To: <200706260647.23373.rschulz@sonic.net>
References: <200706260630.29343.rschulz@sonic.net>
	<ebc876d70706260638k17046e21hb519be47032eb075@mail.gmail.com>
	<200706260647.23373.rschulz@sonic.net>
Message-ID: <ebc876d70706260717s742c3c50i9e89bd6fb2982c5d@mail.gmail.com>

On 6/26/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Tuesday 26 June 2007 06:38, Thomas Brandon wrote:
> > On 6/26/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > > Hi,
> > >
> > > I have a grammar, that's working (though far from complete). It's
> > > does not appear to be parsing the inputs the way I intend, so I
> > > wanted to look at the parse tree in the ANTLRworks Interpreter
> > > pane. The problem is that input that is parsed successfully when I
> > > run the parser on its own (outside ANTLRworks) just gives a one or
> > > two derivations (depending on which non-terminal I choose as the
> > > start symbol) and then NoViableAltException. ...
> > >
> > > Am I doing something wrong? Why the discrepancy between the parser
> > > when executed on its own and when executed within ANTLRworks? ...
> > >
> > >
> > > Randall Schulz
> >
> > The ANTLRWorks interpreter does not execute actions, including
> > predicates.
>
> Why not?
I believe the interpreter mode does not compile grammars but instead
uses custom support in ANTLR to go through the grammar without
actually generating any code. So executing actions would be very
difficult (if not impossible) in this case.
>
>
> > So if your grammar uses predicates or actions which alter
> > the lexing\parsing behaviour it will not work in the ANTLRWorks
> > interpreter.
>
> At the moment, I have no syntactic predicates and no actions other than
> some simple println() calls. However, I seem to recall from looking at
> the generated code recently that when you use the backtracking option,
> which I am, ANTLR itself can generate syntactic predicates, right?
>
> So might that explain the discrepancy?
Yes, backtracking auto-generates predicates wherever needed to resolve
ambiguities so it would not in general work in the interpreter.
>
> > The ANTLRWorks debugger does do actions properly and should be
> > identical to running externally (apart from classpath issues which
> > may necessitate external debugging).
>
> OK. I guess I'll try to make that work. I've never had success in the
> past, and have been deterred by the complications from trying hard
> enough to make it work.
>
> E.g., at the moment there's a diagnostic in the console telling me about
> class file version incompatibility (found 50.0, wants 49.0)...
Not quite sure but sounds like different java versions are being used
to compile the grammar and to execute it. Check out the Compiler tab
in ANTLRWorks' Preferences and make sure it has the right JDK path.
And ensure that ANTLRWorks is being executed on the correct JDK.
After debugging code is generated (done when you do Debug, or you can
specify -debug as an option to ANTLR) you can also execute the
resulting class externally (as you would normally) and then do Debug
Remote to attach to this parser. Note that the debugging parser will
wait for a socket connection before parsing, so if you run it and do
not attach ANTLRWorks to it it will just sit there. So if you are
executing code for other tests then you will need to turn off
debugging to do so.

>
> > Tom.
>
>
> Randall Schulz
>
Tom.

From rschulz at sonic.net  Tue Jun 26 07:28:08 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 07:28:08 -0700
Subject: [antlr-interest] ANTLRworks vs. Stand-Alone Parser
In-Reply-To: <ebc876d70706260717s742c3c50i9e89bd6fb2982c5d@mail.gmail.com>
References: <200706260630.29343.rschulz@sonic.net>
	<200706260647.23373.rschulz@sonic.net>
	<ebc876d70706260717s742c3c50i9e89bd6fb2982c5d@mail.gmail.com>
Message-ID: <200706260728.08842.rschulz@sonic.net>

On Tuesday 26 June 2007 07:17, Thomas Brandon wrote:
> ...
>
> > > The ANTLRWorks interpreter does not execute actions, including
> > > predicates.
> >
> > Why not?
>
> I believe the interpreter mode does not compile grammars but instead
> uses custom support in ANTLR to go through the grammar without
> actually generating any code. So executing actions would be very
> difficult (if not impossible) in this case.

OK. I guess that makes sense. Perhaps ANTLRworks should warn when it's 
asked to Interpret a grammar with syntactic predicates. It 
displays "synPred" in the racetrack diagrams when they're present, so 
presumably there's a way for it to know they're there.


> > > ...
>
> ...
> After debugging code is generated (done when you do Debug, or you can
> specify -debug as an option to ANTLR) you can also execute the
> resulting class externally (as you would normally) and then do Debug
> Remote to attach to this parser. Note that the debugging parser will
> wait for a socket connection before parsing, so if you run it and do
> not attach ANTLRWorks to it it will just sit there. So if you are
> executing code for other tests then you will need to turn off
> debugging to do so.

Ah, now that works!


> Tom.


Thanks!


Randall Schulz

From tbrandonau at gmail.com  Tue Jun 26 07:32:18 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 00:32:18 +1000
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706260717.10411.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260659.24230.rschulz@sonic.net>
	<B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
	<200706260717.10411.rschulz@sonic.net>
Message-ID: <ebc876d70706260732q4983e30ei759e8b4341c80ff4@mail.gmail.com>

On 6/27/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Tuesday 26 June 2007 07:03, Wincent Colaiuta wrote:
> > El 26/6/2007, a las 15:59, Randall R Schulz escribi?:
> > >> Yeah, I'm using standalone ANTLRWorks as well. This screenshot
> > >> (<http://antlr.org/works/screenshots/ambiguouspath.jpg>) shows
> > >> what ambiguous path visualization looks like. Note the check boxes
> > >> for the alternatives; in order to see both paths both check boxes
> > >> must be checked.
> > >
> > > I've never seen anything like that, even when I get those warnings
> > > from
> > > the ANTLR tool.
> > >
> > > How do you get multiple productions at one time in the Syntax
> > > Diagram? I
> > > can't get that to happen?I never see the racetrack diagram for more
> > > than one production at a time.
> >
> > No specific action should be required on your part. If multiple rules
> > need to be shown in order to display the ambiguous paths then
> > ANTLRWorks should display them automatically whenever the rule with
> > the ambiguity (highlighted red in the list of rules) is selected.
>
> Too many interacting issues and options...
>
> So I have to turn off backtracking and then try to apply the grammar in
> the Interpreter before it does whatever it does to recompute the
> conflicts. (I just saw your message about using the Generate Code
> command instead of the Interpreter). Then I get non-terminal /
> production names in red and when I select one of them, I see the set of
> rules that participate in the ambiguity with the green and red conflict
> arcs.
>
You can also run Grammar->Check Grammar to display ambiguities.
> What does the bold, pulsating red arc mean?
I believe the first segment of the path is displayed like that.
>
>
> Is anything supposed to happend when I issue the Help command (from the
> Help menu)? 'Cause nothing happens on my system (not even a "not help
> available" alert).
I get a browser open at http://www.antlr.org/works/help/index.html
>
> Also, when the conflict diagram is displayed and the ANTLRworks window
> is active, it seems to consume all available CPU cycles.
I get higher CPU usage (about 11% compared to 5% normally) when
viewing a syntax diagram, but thats on windows (dualcore 3GHz).
>
>
> > Cheers,
> > Wincent
>
>
> Thanks for your help.
>
> Randall Schulz
>
Tom.

From rschulz at sonic.net  Tue Jun 26 07:42:58 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 07:42:58 -0700
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <ebc876d70706260732q4983e30ei759e8b4341c80ff4@mail.gmail.com>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260717.10411.rschulz@sonic.net>
	<ebc876d70706260732q4983e30ei759e8b4341c80ff4@mail.gmail.com>
Message-ID: <200706260742.58430.rschulz@sonic.net>

On Tuesday 26 June 2007 07:32, Thomas Brandon wrote:
> On 6/27/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > ...
>
> > Is anything supposed to happend when I issue the Help command (from
> > the Help menu)? 'Cause nothing happens on my system (not even a
> > "not help available" alert).
>
> I get a browser open at http://www.antlr.org/works/help/index.html

Hmmm... Do you know what ANTLRworks does to invoke the browser? I don't 
see a Preference for choosing or specifying the command invoked to 
launch the browser.


> > Also, when the conflict diagram is displayed and the ANTLRworks
> > window is active, it seems to consume all available CPU cycles.
>
> I get higher CPU usage (about 11% compared to 5% normally) when
> viewing a syntax diagram, but thats on windows (dualcore 3GHz).

This is a 3GHz HyperThreading CPU running Linux. It shouldn't be that 
different from yours, I wouldn't think. Or is yours a Core 2 Duo? Those 
things really scream!


> Tom.


Randall Schulz

From win at wincent.com  Tue Jun 26 07:49:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 16:49:31 +0200
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706260717.10411.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260659.24230.rschulz@sonic.net>
	<B7E0DB8B-A953-4188-965E-66D48C5F6855@wincent.com>
	<200706260717.10411.rschulz@sonic.net>
Message-ID: <F235991C-FEB8-4B8F-B187-D73C7FCB9CA5@wincent.com>

El 26/6/2007, a las 16:17, Randall R Schulz escribi?:

> What does the bold, pulsating red arc mean?

It's used to highlight the "current segment" of the path. If you  
click inside the syntax diagram you will then be able to use the  
cursor keys to move forward/back along the path. Very handy if the  
path is complicated and it would otherwise be hard to see where the  
path goes. You may need to temporarily uncheck the checkboxes for the  
other alternatives so that ANTLRWorks knows which of the paths you're  
interested in cycling through with the cursor keys.

Cheers,
Wincent


From tbrandonau at gmail.com  Tue Jun 26 07:59:39 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 00:59:39 +1000
Subject: [antlr-interest] Is ANTLR Hallucinating?
In-Reply-To: <200706260742.58430.rschulz@sonic.net>
References: <200706251133.36533.rschulz@sonic.net>
	<200706260717.10411.rschulz@sonic.net>
	<ebc876d70706260732q4983e30ei759e8b4341c80ff4@mail.gmail.com>
	<200706260742.58430.rschulz@sonic.net>
Message-ID: <ebc876d70706260759k579acf5eqfc2974c4f26dde4f@mail.gmail.com>

On 6/27/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Tuesday 26 June 2007 07:32, Thomas Brandon wrote:
> > On 6/27/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > > ...
> >
> > > Is anything supposed to happend when I issue the Help command (from
> > > the Help menu)? 'Cause nothing happens on my system (not even a
> > > "not help available" alert).
> >
> > I get a browser open at http://www.antlr.org/works/help/index.html
>
> Hmmm... Do you know what ANTLRworks does to invoke the browser? I don't
> see a Preference for choosing or specifying the command invoked to
> launch the browser.
>
No, I gather it must use some system (or library) call as I didn't set
any option. Apparently not working on Linux (or at least some
VMs\distros).
>
> > > Also, when the conflict diagram is displayed and the ANTLRworks
> > > window is active, it seems to consume all available CPU cycles.
> >
> > I get higher CPU usage (about 11% compared to 5% normally) when
> > viewing a syntax diagram, but thats on windows (dualcore 3GHz).
>
> This is a 3GHz HyperThreading CPU running Linux. It shouldn't be that
> different from yours, I wouldn't think. Or is yours a Core 2 Duo? Those
> things really scream!
>
Older Core 1 (D9xx), dual core but not the newer Core 2, so for single
process like this should be about the same speed as yours. But I don't
think it's a CPU issue, most likely a JVM (\Swing) issue, or
interaction between Jean's code and your Swing. Probably worth saying
what JVM your using so Jean can have a look, or others running on
Linux can report.
>
> > Tom.
>
>
> Randall Schulz
>
Tom.

From rschulz at sonic.net  Tue Jun 26 08:03:11 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 08:03:11 -0700
Subject: [antlr-interest] Knowledge is Power ... But A Little Knowledge is a
	Dangerous Thing!
Message-ID: <200706260803.11200.rschulz@sonic.net>

Hi,

Now that I've managed, with lots of help from Tom B. and Wincent C., to 
get the ANTLRworks debugger working, two things come to mind:

1) The reason I started using ANTLR in the first place (I'd used JavaCC 
for years), was because I asked around about tool support for parser 
generators. Someone pointed out that ANTLR has this nice ANTLRworks 
thing, so I decided to give ANTLR a try. But I developed one whole 
parser without really exploiting ANTLRworks.

2) Wow! ANTLRworks is really very powerful and useful, once you scratch 
the surface and surmount some of its challenges.


Thanks to everyone who helped and, of course, to Ter and Jean.


Randall Schulz

From tbrandonau at gmail.com  Tue Jun 26 08:06:50 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 01:06:50 +1000
Subject: [antlr-interest] DebugParser constructors
Message-ID: <ebc876d70706260806y1953a21v9fa8d9cd26476407@mail.gmail.com>

Would it be possible for debug parsers to delegate the public
DebugParser(TokenStream input, DebugEventListener dbg) constructor. So
you can provide a tracing listener, or a listener that doesn't block
on socket. Saves having to keep switching debug on and off when doing
some debugging in AW. Adding through members would break when
debugging wasn't used.

Tom.

From rschulz at sonic.net  Tue Jun 26 09:11:00 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 09:11:00 -0700
Subject: [antlr-interest] Whither ANTLRworks.pdf?
Message-ID: <200706260911.00711.rschulz@sonic.net>

Hi,

The footnote on page 15 of TDAR says that there is ANTLRworks 
documentation at <http://www.antlr.org/works/doc/antlrworks.pdf>, but 
that URL produces a 404 page.

Searching with Google turned up 
<http://www.antlr.org/workshop/ANTLR2005/presentations/ANTLRWorks.pdf>, 
but that's just a few slides.

Evidently, I wrote this several months back:

On Sunday 12 November 2006 09:39, Randall R Schulz wrote:
> I don't know how to use the debugger, and there appear to be
> significant discrepancies between the ANTLRworks User's Guide
> (<http://www.antlr.org/works/doc/antlrworks.pdf>) and the program as
> it presents itself on my system. ...

(I'm not having the problem I was back then, but that was a different 
grammar and I was using pre-release tools, but I'm encountering ongoing 
questions and hate to pester the list with every little thing I come 
across.)


Is there are updated version of the document in the offing?


Randall Schulz

From gbr at newtechlaw.com  Tue Jun 26 09:35:14 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 26 Jun 2007 09:35:14 -0700
Subject: [antlr-interest] Parsing RTF to Braille
In-Reply-To: <BHEHJGODIEEHDEEKGJKFEEAOGEAA.dwarner@uni-paderborn.de>
References: <200706251941.l5PJfEef015083@morpho.newtechlaw.com>
	<BHEHJGODIEEHDEEKGJKFEEAOGEAA.dwarner@uni-paderborn.de>
Message-ID: <200706261635.l5QGZkef016696@morpho.newtechlaw.com>

At 06:32 AM 6/26/2007, Daniel Warner wrote:
>Hi Gerald,
>
>you're right concerning the different and incomplete interpretations 
>of the RTF spec. It seems to me that implementing a PDF->HBS 
>Converter just moves the problem to finding a good parser for RTF->PDF?
>
>Regards,
>Daniel.

Most software packages (Word, OpenOffice, etc.) capable of reading or 
generating RTF can output PDF instead -- just a choice of your 
intermediate (or final intermediate) representation .  If not 
directly, there are third party packages that can be easily automated 
to do the conversion of RTF to PDF (PDFCreator, PrimoPDF, etc.).  No 
need to reinvent that wheel.

http://sourceforge.net/projects/pdfcreator/
http://www-pdfcreator.com/
http://www.primopdf.com/primopdf_api.aspx
----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/e5bccf29/attachment-0001.html 

From open.zone at virgin.net  Tue Jun 26 09:57:45 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 26 Jun 2007 17:57:45 +0100
Subject: [antlr-interest] Bug in C# template for code generation?
In-Reply-To: <468119B0.1090004@gmx.de>
Message-ID: <002701c7b813$1faed770$c704a8c0@hercules>

Johannes,

This has already been fixed.
http://fisheye2.cenqua.com/changelog/antlr/src/org/antlr/codegen/templates/C
Sharp?cs=3791

Perhaps a "daily build" is due again?

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: 26 June 2007 14:51
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Bug in C# template for code generation?
> 
> 
> Hello!
> 
> When generating the attached grammar, the resulting 
> ANTLR3ToRelaxNGParser.cs has the following snippet in the
> element()-function:
> 
> object root_1 = (object)adaptor.GetNilNode();
> root_1 = (object)adaptor.BecomeRoot(stream_atom.nextNode(), root_1);
> 
> The compiler complains that 
> "'Antlr.Runtime.Tree.RewriteRuleSubtreeStream' does not 
> contain a definition for 'nextNode'". As I haven't touched 
> this particular code, it means either the C# template 
> contains a bug or the element rule
> 
> element // Simplified AST
>     :   id ('='|'+=') rulepart=(atom|block) ebnfSuffix?
>         -> ^($rulepart ebnfSuffix?)
>     |   atom ebnfSuffix? -> ^(atom ebnfSuffix?)
>     |	ebnf
>     |   ACTION ->
>     |   SEMPRED '=>'? ->
>     |   treeSpec ->
>     ;
> 
> contains an error. What is it?
> 
> Best regards,
> Johannes Luber
> 


From jimi at temporal-wave.com  Tue Jun 26 10:40:22 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 10:40:22 -0700
Subject: [antlr-interest] A few questions about AST
In-Reply-To: <2ea6ad20706260057ld823f9ft4b9360d52878996e@mail.gmail.com>
References: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com><051466DAA0D608439E196797955018D76E1F@wavemachine.temporal-wave.com>
	<2ea6ad20706260057ld823f9ft4b9360d52878996e@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E29@wavemachine.temporal-wave.com>

First of all, thanks for your answer Jim.
I have try your way of gathering attributes and it's working perfectly!
Thanks again. 
But, I've try your :

predicat:    elementaryPredicat (^logicalOperator elementaryPredicat)*;

and I've got a syntax error (unexpected token ^)



Whoops: logicalOperator^

 

^ was in the wrong place J Consult the downloadable examples and the
book is best.

 

Jim

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/edff0681/attachment.html 

From jimi at temporal-wave.com  Tue Jun 26 10:42:57 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 10:42:57 -0700
Subject: [antlr-interest] Avoiding warnings without code bloat
In-Reply-To: <20070626083032.2B90511E977@www.antlr.org>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>
	<20070626083032.2B90511E977@www.antlr.org>
Message-ID: <051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>

No, but  you can do this:
fragment
STRING_GUTS :	( EscapeSequence | ~('\\'|'"') )* ;

INC:
	    'include' (' ' | '\t')+ '"' file = STRING_GUTS '"' (' ' |
'\t')* '\r'? '\n'
		{
		    pANTLR3_STRING	    fName;
		    pANTLR3_INPUT_STREAM    in;

		    // Create an intial string, then take a substring
		    // We can do this by messing with the start and end
		    // pointers of tokens and so on. This shows a
reasonable way to
		    // manipulate strings.
		    //
		    fName = $file.text;
		    printf("Including file '\%s'\n", fName->chars);
       	}
;

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Tuesday, June 26, 2007 1:30 AM
> To: David Piepgrass; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Avoiding warnings without code bloat
> 
> At 11:33 26/06/2007, David Piepgrass wrote:
>  >// Strings
>  >SQ_STRING: '\''! ({true}? ESC_SEQ | ~'\'')* '\''!;
>  >DQ_STRING: '"'!  ({true}? ESC_SEQ | ~'"')* '"'!;
>  >BQ_STRING: '`'!  ({true}? ESC_SEQ | ~'`')* '`'!;
> 
> Does ! work in v3 lexers now?  (Maybe I need to pay closer
> attention.)


From gzhu at peak6.com  Tue Jun 26 11:28:18 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Tue, 26 Jun 2007 13:28:18 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org>
	<051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>

Hi,

I have a simple lexer problem. The below grammar will fail on "(
security" in the lexer, because when the lexer sees '(' and then sees
's' , it will try to match the LP_SELECT rule, which cannot be matched.
In this case, I want the lexer to return LPAREN and then ID. How can I
do that?

Thanks a lot,
Geoffrey


grammar T;

options {
	language=3DCSharp;
	backtracking=3Dtrue;
}

ID : ('a'..'z')+;

LPAREN : '(';

LP_SELECT : LPAREN 'select';

prog: (ID | LPAREN | LP_SELECT)+ ;

_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From ohumbel at gmail.com  Tue Jun 26 11:29:11 2007
From: ohumbel at gmail.com (Oti)
Date: Tue, 26 Jun 2007 20:29:11 +0200
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
Message-ID: <ba90a0a90706261129t127d5a6ap9eb4dd8196fc0324@mail.gmail.com>

On 6/18/07, David A Weiser <DWEISER at uwyo.edu> wrote:
> Hey all,
>
> I have the beginning of a rule:
> formalParameterDecls returns  [HashMap<String,String> params].
>
> But I get a compilation error because of:
> public static class formalParameters_return extends
> ParserRuleReturnScope {
>         public HashMap<String;
>         public String> params;
>     };
>
> In the java file for the grammar parser.  Am I to assume that java 1.5
> features aren't supported, or am I just going about this wrong?
>

Hi,

just wanted to say that java 1.5 features can be supported. The
following generates and compiles fine:


@parser::members {

private List<String> _collectedErrorMessages = new ArrayList<String>();

public boolean hasCollectedErrorMessages() {
  return getCollectedErrorMessages().size() > 0;
}

public List<String> getCollectedErrorMessages() {
  return _collectedErrorMessages;
}

@Override
public void emitErrorMessage(String msg) {
  super.emitErrorMessage(msg);
  _collectedErrorMessages.add(msg);
}

}


best wishes,
Oti.

From jimi at temporal-wave.com  Tue Jun 26 11:32:14 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 11:32:14 -0700
Subject: [antlr-interest] Antlr 3 Lexer problem
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
Message-ID: <051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>

Don't try to construct syntactical context in the lexer basically:

grammar T;
 
options {
 	language=CSharp;
 	backtracking=true;
}
 
ID : ('a'..'z')+;
 
LPAREN : '(';
 
SELECT : 'select';
 
prog: (ID | LPAREN SELECT?)+ ;


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antlr 3 Lexer problem
> 
> Hi,
> 
> I have a simple lexer problem. The below grammar will fail on "(
> security" in the lexer, because when the lexer sees '(' and then sees
> 's' , it will try to match the LP_SELECT rule, which cannot be
matched.
> In this case, I want the lexer to return LPAREN and then ID. How can I
> do that?
> 
> Thanks a lot,
> Geoffrey
> 
> 
> grammar T;
> 
> options {
> 	language=CSharp;
> 	backtracking=true;
> }
> 
> ID : ('a'..'z')+;
> 
> LPAREN : '(';
> 
> LP_SELECT : LPAREN 'select';
> 
> prog: (ID | LPAREN | LP_SELECT)+ ;
> 
> _______________________________________________________
> 
> The  information in this email or in any file attached
> hereto is intended only for the personal and confiden-
> tial  use  of  the individual or entity to which it is
> addressed and may contain information that is  propri-
> etary  and  confidential.  If you are not the intended
> recipient of this message you are hereby notified that
> any  review, dissemination, distribution or copying of
> this message is strictly prohibited.  This  communica-
> tion  is  for information purposes only and should not
> be regarded as an offer to sell or as  a  solicitation
> of an offer to buy any financial product. Email trans-
> mission cannot be guaranteed to be  secure  or  error-
> free. P6070214

From dave at badgers-in-foil.co.uk  Tue Jun 26 11:42:53 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 26 Jun 2007 18:42:53 +0000
Subject: [antlr-interest] maven2 and support in repository
In-Reply-To: <3cfcba890706221123t7ae88d80q895017fa0171852f@mail.gmail.com>
References: <3cfcba890706221123t7ae88d80q895017fa0171852f@mail.gmail.com>
Message-ID: <20070626184252.GA24105@badgers-in-foil.co.uk>

Hi,

On Fri, Jun 22, 2007 at 02:23:02PM -0400, hanasaki jiji wrote:
> any chance of convincing you to put the current work on in the
> repository so it can be used without all the manual installs?

Are you referring to the maven-antlr3-plugin?

The code has been donated to the Maven project, but I don't know when it
will get a release in this form (I don't actually have access).

If you're referring to ANTLR 3.0 itself, this has been in the Maven
repositories since the end of May, I think.


hope that helps,
dave

-- 
http://david.holroyd.me.uk/

From gzhu at peak6.com  Tue Jun 26 11:43:47 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Tue, 26 Jun 2007 13:43:47 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>

I can't do this. I am constructing complicated lexer rules because in my
input there are code blocks within which the grammar is totally
different from the rest of the file. My file is a custom mini-language.
Embeded in it there are some SQL statements with surrounding
parentheses. My program does not need to deal with full SQL syntax. I
only need to correctly recognize the beginning and ending of the SQL
statements. 

What I am thinking is to match one code block with one single token, as
ANTLR did with the "action" token (
http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/tool/antlr.g?r=324
4#l1186 ). Below is just a simplified example to show that the lexer
seems to choke... 





I just need to figure out how to make it not to choke.  


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, June 26, 2007 1:32 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr 3 Lexer problem

Don't try to construct syntactical context in the lexer basically:

grammar T;
 
options {
 	language=CSharp;
 	backtracking=true;
}
 
ID : ('a'..'z')+;
 
LPAREN : '(';
 
SELECT : 'select';
 
prog: (ID | LPAREN SELECT?)+ ;


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antlr 3 Lexer problem
> 
> Hi,
> 
> I have a simple lexer problem. The below grammar will fail on "( 
> security" in the lexer, because when the lexer sees '(' and then sees 
> 's' , it will try to match the LP_SELECT rule, which cannot be
matched.
> In this case, I want the lexer to return LPAREN and then ID. How can I

> do that?
> 
> Thanks a lot,
> Geoffrey
> 
> 
> grammar T;
> 
> options {
> 	language=CSharp;
> 	backtracking=true;
> }
> 
> ID : ('a'..'z')+;
> 
> LPAREN : '(';
> 
> LP_SELECT : LPAREN 'select';
> 
> prog: (ID | LPAREN | LP_SELECT)+ ;
> 
> _______________________________________________________
> 
> The  information in this email or in any file attached hereto is 
> intended only for the personal and confiden- tial  use  of  the 
> individual or entity to which it is addressed and may contain 
> information that is  propri- etary  and  confidential.  If you are not

> the intended recipient of this message you are hereby notified that 
> any  review, dissemination, distribution or copying of this message is

> strictly prohibited.  This  communica- tion  is  for information 
> purposes only and should not be regarded as an offer to sell or as  a

> solicitation of an offer to buy any financial product. Email trans- 
> mission cannot be guaranteed to be  secure  or  error- free. P6070214



From trunkel at gmail.com  Tue Jun 26 11:50:35 2007
From: trunkel at gmail.com (troy runkel)
Date: Tue, 26 Jun 2007 14:50:35 -0400
Subject: [antlr-interest] How to use an optional rule attribute in an action?
Message-ID: <620da58c0706261150k77aa6312le544ed66b78e897d@mail.gmail.com>

Greetings,

I'm using ANTLR v3 with the C-target and have a situation like the
following.  I have an optional rule called number and I want to access
the text attribute of that rule if and only if the rule was applied.
Using the C-target, $number is uninitialized if the rule wasn't
applied.  Is there a way, in the action, to determine if $number.text
is valid?

create_procedure :
        'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( ';' number )?
        {
            if ($number is valid)
                someFunction($number.text);
        }

Thanks.

Troy Runkel

From jimi at temporal-wave.com  Tue Jun 26 11:52:16 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 11:52:16 -0700
Subject: [antlr-interest] Antlr 3 Lexer problem
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
Message-ID: <051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:44 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 Lexer problem
> 
> I can't do this. I am constructing complicated lexer rules because in
> my
> input there are code blocks within which the grammar is totally
> different from the rest of the file. My file is a custom
mini-language.
> Embeded in it there are some SQL statements with surrounding
> parentheses. My program does not need to deal with full SQL syntax. I
> only need to correctly recognize the beginning and ending of the SQL
> statements.

OK:

fragment WS : ' ' | '\t' ;
fragment LSELECT : '(' WS* 'select' ;
LPAREN    : '(' ;
LP_SELECT : (LSELECT)=> LSELECT;


Should do it. ANTLR 
Perhaps you can tokenize the whole SQL statement to one token, unless
you need to look in it for host variables or something?

Jim


From jimi at temporal-wave.com  Tue Jun 26 11:54:43 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 11:54:43 -0700
Subject: [antlr-interest] How to use an optional rule attribute in an
	action?
In-Reply-To: <620da58c0706261150k77aa6312le544ed66b78e897d@mail.gmail.com>
References: <620da58c0706261150k77aa6312le544ed66b78e897d@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E30@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Tuesday, June 26, 2007 11:51 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] How to use an optional rule attribute in an
> action?
> 
> Greetings,
> 
> I'm using ANTLR v3 with the C-target and have a situation like the
> following.  I have an optional rule called number and I want to access
> the text attribute of that rule if and only if the rule was applied.
> Using the C-target, $number is uninitialized if the rule wasn't
> applied.  Is there a way, in the action, to determine if $number.text
> is valid?
> 

create_procedure :
         'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( ';' n=number
)?
         {
             if ($n != NULL)
		 {
		     printf("Found number '%s'\n", $n.text->chars);
                 someFunction($n.text);
		 }
         }

Makes most sense to me.

Jim

From gzhu at peak6.com  Tue Jun 26 11:59:00 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Tue, 26 Jun 2007 13:59:00 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D398@ppi-mail1.chicago.peak6.net>

Thanks a lot. Yes, tokenizing the whole SQL statement is exactly what I
am trying to do. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, June 26, 2007 1:52 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr 3 Lexer problem



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:44 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 Lexer problem
> 
> I can't do this. I am constructing complicated lexer rules because in 
> my input there are code blocks within which the grammar is totally 
> different from the rest of the file. My file is a custom
mini-language.
> Embeded in it there are some SQL statements with surrounding 
> parentheses. My program does not need to deal with full SQL syntax. I 
> only need to correctly recognize the beginning and ending of the SQL 
> statements.

OK:

fragment WS : ' ' | '\t' ;
fragment LSELECT : '(' WS* 'select' ;
LPAREN    : '(' ;
LP_SELECT : (LSELECT)=3D> LSELECT;


Should do it. ANTLR
Perhaps you can tokenize the whole SQL statement to one token, unless
you need to look in it for host variables or something?

Jim




_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From kroepke at classdump.org  Tue Jun 26 12:02:01 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 26 Jun 2007 21:02:01 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200706260547.37458.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
	<F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org>
	<44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
	<200706260547.37458.rschulz@sonic.net>
Message-ID: <0BFADB42-8CBB-4DFB-853A-748033C9288A@classdump.org>


On Jun 26, 2007, at 2:47 PM, Randall R Schulz wrote:

> Right now, I'm having to examine the output from ANTLR looking for  
> signs
> of errors. That shouldn't be necessary.

Trust me, we will fix this.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From gzhu at peak6.com  Tue Jun 26 12:17:11 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Tue, 26 Jun 2007 14:17:11 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D398@ppi-mail1.chicago.peak6.net>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D3BA@ppi-mail1.chicago.peak6.net>

This doesn't seem to work. The lexer is choking at the same place.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, June 26, 2007 1:52 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr 3 Lexer problem



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:44 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 Lexer problem
> 
> I can't do this. I am constructing complicated lexer rules because in 
> my input there are code blocks within which the grammar is totally 
> different from the rest of the file. My file is a custom
mini-language.
> Embeded in it there are some SQL statements with surrounding 
> parentheses. My program does not need to deal with full SQL syntax. I 
> only need to correctly recognize the beginning and ending of the SQL 
> statements.

OK:

fragment WS : ' ' | '\t' ;
fragment LSELECT : '(' WS* 'select' ;
LPAREN    : '(' ;
LP_SELECT : (LSELECT)=> LSELECT;


Should do it. ANTLR
Perhaps you can tokenize the whole SQL statement to one token, unless
you need to look in it for host variables or something?

Jim




_______________________________________________________

The  information in this email or in any file attached hereto is
intended only for the personal and confiden- tial  use  of  the
individual or entity to which it is addressed and may contain
information that is  propri- etary  and  confidential.  If you are not
the intended recipient of this message you are hereby notified that any
review, dissemination, distribution or copying of this message is
strictly prohibited.  This  communica- tion  is  for information
purposes only and should not be regarded as an offer to sell or as  a
solicitation of an offer to buy any financial product. Email trans-
mission cannot be guaranteed to be  secure  or  error- free. P6070214



From trunkel at gmail.com  Tue Jun 26 12:18:21 2007
From: trunkel at gmail.com (troy runkel)
Date: Tue, 26 Jun 2007 15:18:21 -0400
Subject: [antlr-interest] How to use an optional rule attribute in an
	action?
Message-ID: <620da58c0706261218y6cf44976g4393191565c201a3@mail.gmail.com>

> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of troy runkel
> > Sent: Tuesday, June 26, 2007 11:51 AM
> > To: ANTLR mail-list
> > Subject: [antlr-interest] How to use an optional rule attribute in an
> > action?
> >
> > Greetings,
> >
> > I'm using ANTLR v3 with the C-target and have a situation like the
> > following.  I have an optional rule called number and I want to access
> > the text attribute of that rule if and only if the rule was applied.
> > Using the C-target, $number is uninitialized if the rule wasn't
> > applied.  Is there a way, in the action, to determine if $number.text
> > is valid?
> >
>
> create_procedure :
>          'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( ';' n=number
> )?
>          {
>              if ($n != NULL)
>                  {
>                      printf("Found number '%s'\n", $n.text->chars);
>                  someFunction($n.text);
>                  }
>          }
>
> Makes most sense to me.
>
> Jim

I tried that, but using the C-target the n variable will be
uninitialized if the number rule was not applied.  Therefore, n will
not be NULL but will instead be some random value.  In the Visual
Studio 2005 debugger n is initialized to 0xcccccccc but that's not
very helpful.  :-)

Troy Runkel

From win at wincent.com  Tue Jun 26 13:09:21 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 22:09:21 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <467FE6BF.4060500@gmx.de>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
Message-ID: <2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>

El 25/6/2007, a las 18:01, Johannes Luber escribi?:

> Randall R Schulz wrote:
>> Hi,
>>
>> Am I correct in believing that the only way to notate bounded  
>> closure in
>> ANTLR is by repeated applications of the zero-or-one (a.k.a.  
>> optional)
>> closure notation?
>>
> ...
>>
>> Did I miss this somewhere, or is the verbose notation the only way to
>> get the effect I need?
>
> For C# I'd write:
>
> fragment
> UnicodeEscape
>   :
>   '\\' ( 'u' | 'U' ) (h+=HexDigit)+ {$h.Count<=6}?
>   ;
>
> Just adapt this to your needs.

Doesn't the += notation you've used there only work in parser rules?  
I don't think it works in lexer rules.

Cheers,
Wincent


From jimi at temporal-wave.com  Tue Jun 26 13:25:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 13:25:03 -0700
Subject: [antlr-interest] How to use an optional rule attribute in
	anaction?
In-Reply-To: <620da58c0706261218y6cf44976g4393191565c201a3@mail.gmail.com>
References: <620da58c0706261218y6cf44976g4393191565c201a3@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E33@wavemachine.temporal-wave.com>

Hmm - I'll look at that, I think it probably SHOULD be initialized to
NULL, but perhaps I don't hae the label list or something (doubtful
though).

For now you could do this:

create_procedure 
@declarations
{
	ANTLR3_BOOLEAN haveNumber;
}
@init
{
	haveNumber = ANTLR3_FALSE;
}
:
          'CREATE' ('PROC' | 'PROCEDURE') procedure_name 
	( ';'number { $haveNumber = ANTLR3_TRUE; } )?
          {
              if ($haveNumber)
                  {
                      printf("Found number '%s'\n", $n.text->chars);
                      someFunction($n.text);
                  }
          }


But, now that I look at what you are doing, can't you do this:

    (';' n=number { someFunction($n.text->chars); })?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Tuesday, June 26, 2007 12:18 PM
> To: antlr-interest at antlr.org; trunkel at gmail.com
> Subject: Re: [antlr-interest] How to use an optional rule attribute in
> anaction?
> 
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of troy runkel
> > > Sent: Tuesday, June 26, 2007 11:51 AM
> > > To: ANTLR mail-list
> > > Subject: [antlr-interest] How to use an optional rule attribute in
> an
> > > action?
> > >
> > > Greetings,
> > >
> > > I'm using ANTLR v3 with the C-target and have a situation like the
> > > following.  I have an optional rule called number and I want to
> access
> > > the text attribute of that rule if and only if the rule was
> applied.
> > > Using the C-target, $number is uninitialized if the rule wasn't
> > > applied.  Is there a way, in the action, to determine if
> $number.text
> > > is valid?
> > >
> >
> > create_procedure :
> >          'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( ';'
> n=number
> > )?
> >          {
> >              if ($n != NULL)
> >                  {
> >                      printf("Found number '%s'\n", $n.text->chars);
> >                  someFunction($n.text);
> >                  }
> >          }
> >
> > Makes most sense to me.
> >
> > Jim
> 
> I tried that, but using the C-target the n variable will be
> uninitialized if the number rule was not applied.  Therefore, n will
> not be NULL but will instead be some random value.  In the Visual
> Studio 2005 debugger n is initialized to 0xcccccccc but that's not
> very helpful.  :-)
> 
> Troy Runkel

From jaluber at gmx.de  Tue Jun 26 13:31:38 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 26 Jun 2007 22:31:38 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
	<2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>
Message-ID: <468177AA.70409@gmx.de>

Wincent Colaiuta wrote:
> Doesn't the += notation you've used there only work in parser rules? I
> don't think it works in lexer rules.

I haven't tested that particular code snippet with appropriate input,
but the compiler doesn't complain, so I guess that it works. Besides
Terence himself acknowledged my code snippet and I don't believe that he
has overlooked "fragment" at the beginning.

Best regards,
Johannes Luber

From win at wincent.com  Tue Jun 26 13:41:22 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 22:41:22 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <468177AA.70409@gmx.de>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
	<2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>
	<468177AA.70409@gmx.de>
Message-ID: <1EC3D2AC-8F93-493A-A4C9-B24B218B5721@wincent.com>

El 26/6/2007, a las 22:31, Johannes Luber escribi?:

> Wincent Colaiuta wrote:
>> Doesn't the += notation you've used there only work in parser  
>> rules? I
>> don't think it works in lexer rules.
>
> I haven't tested that particular code snippet with appropriate input,
> but the compiler doesn't complain, so I guess that it works. Besides
> Terence himself acknowledged my code snippet and I don't believe  
> that he
> has overlooked "fragment" at the beginning.

I made a simple test grammar:

   grammar Simple;

   a : A EOF ;
   A: B ;
   fragment
   B : (foo+='a')+ {$foo;} ;

And the generated (Java) code for the "mB" method is as follows; note  
that list_foo is initialized to null and not modified when 'a' is  
matched:

     // $ANTLR start B
     public final void mB() throws RecognitionException {
         try {
             Token foo=null;
             List list_foo=null;
             // Simple.g:8:5: ( (foo+= 'a' )+ )
             // Simple.g:8:5: (foo+= 'a' )+
             {
             // Simple.g:8:5: (foo+= 'a' )+
             int cnt1=0;
             loop1:
             do {
                 int alt1=2;
                 int LA1_0 = input.LA(1);

                 if ( (LA1_0=='a') ) {
                     alt1=1;
                 }


                 switch (alt1) {
                 case 1 :
                     // Simple.g:8:6: foo+= 'a'
                     {
                     foo = input.LA(1);
                     match('a');

                     }
                     break;

                 default :
                     if ( cnt1 >= 1 ) break loop1;
                         EarlyExitException eee =
                             new EarlyExitException(1, input);
                         throw eee;
                 }
                 cnt1++;
             } while (true);

             list_foo;

             }

         }
         finally {
         }
     }
     // $ANTLR end B

If the += construct is used in a parser rule instead, then ANTLR does  
indeed generate code for updating list_foo upon each match:

             if (list_foo==null) list_foo=new ArrayList();
             list_foo.add(foo);

Cheers,
Wincent


From rschulz at sonic.net  Tue Jun 26 13:45:06 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 13:45:06 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <0BFADB42-8CBB-4DFB-853A-748033C9288A@classdump.org>
References: <200611191412.25438.rschulz@sonic.net>
	<200706260547.37458.rschulz@sonic.net>
	<0BFADB42-8CBB-4DFB-853A-748033C9288A@classdump.org>
Message-ID: <200706261345.06653.rschulz@sonic.net>

On Tuesday 26 June 2007 12:02, Kay Roepke wrote:
> On Jun 26, 2007, at 2:47 PM, Randall R Schulz wrote:
> > Right now, I'm having to examine the output from ANTLR looking for
> > signs
> > of errors. That shouldn't be necessary.
>
> Trust me, we will fix this.

I'll be patient.


> cheers,
> -k


Thanks.

Randall Schulz

From jaluber at gmx.de  Tue Jun 26 13:51:49 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 26 Jun 2007 22:51:49 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <1EC3D2AC-8F93-493A-A4C9-B24B218B5721@wincent.com>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
	<2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>
	<468177AA.70409@gmx.de>
	<1EC3D2AC-8F93-493A-A4C9-B24B218B5721@wincent.com>
Message-ID: <46817C65.9080008@gmx.de>

Wincent Colaiuta wrote:
> If the += construct is used in a parser rule instead, then ANTLR does
> indeed generate code for updating list_foo upon each match:
> 
>             if (list_foo==null) list_foo=new ArrayList();
>             list_foo.add(foo);

Hmm. Thinking over the alternatives I'd say that ANTLR should still
check that in lexer rules. Maybe it should generate temporary tokens for
that bit. I don't know a better place to check for such things and I
don't want to have generate more tokens than I actually need.

Best regards,
Johannes Luber

From jaluber at gmx.de  Tue Jun 26 13:55:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 26 Jun 2007 22:55:56 +0200
Subject: [antlr-interest] Bug in C# template for code generation?
In-Reply-To: <002701c7b813$1faed770$c704a8c0@hercules>
References: <002701c7b813$1faed770$c704a8c0@hercules>
Message-ID: <46817D5C.2090905@gmx.de>

Micheal J wrote:
> Johannes,
> 
> This has already been fixed.
> http://fisheye2.cenqua.com/changelog/antlr/src/org/antlr/codegen/templates/C
> Sharp?cs=3791
> 
> Perhaps a "daily build" is due again?

Unless I made a mistake in applying the most current daily build, I
still get the same error. I've discovered another one. The line:

using Hashtable = System.Collections.Hashtable;

is generated twice with the attached grammar.

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNGGenerator.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070626/5083357f/attachment-0001.pl 

From win at wincent.com  Tue Jun 26 13:59:32 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 26 Jun 2007 22:59:32 +0200
Subject: [antlr-interest] Bounded Closures?
In-Reply-To: <46817C65.9080008@gmx.de>
References: <200706250853.24561.rschulz@sonic.net> <467FE6BF.4060500@gmx.de>
	<2B645867-B636-4682-99F0-DCBD05E0D10E@wincent.com>
	<468177AA.70409@gmx.de>
	<1EC3D2AC-8F93-493A-A4C9-B24B218B5721@wincent.com>
	<46817C65.9080008@gmx.de>
Message-ID: <F451D7EC-1835-4704-9845-ED47592A0E71@wincent.com>

El 26/6/2007, a las 22:51, Johannes Luber escribi?:

> Wincent Colaiuta wrote:
>> If the += construct is used in a parser rule instead, then ANTLR does
>> indeed generate code for updating list_foo upon each match:
>>
>>             if (list_foo==null) list_foo=new ArrayList();
>>             list_foo.add(foo);
>
> Hmm. Thinking over the alternatives I'd say that ANTLR should still
> check that in lexer rules. Maybe it should generate temporary  
> tokens for
> that bit. I don't know a better place to check for such things and I
> don't want to have generate more tokens than I actually need.

Yes, I agree... given that all parsers, lexers and tree parser all  
inherit from a base recognizer class, I would like to see more  
behaviour (like this one) shared across them.  The shared behaviour  
that is already there is already a bit of a selling-point for ANTLR,  
anyway.

Cheers,
Wincent


From gzhu at peak6.com  Tue Jun 26 14:06:30 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Tue, 26 Jun 2007 16:06:30 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net>

The syntactic predicate does not seem to work. The lexer chokes on
exactly the same location 'c' if I pass in "( security".


In mTokens() it still looks ahead only one step to determine what should
be the next token.

  else if ( (LA3_0=3D=3D'(') ) {  //if it sees a '(' followed by s', it will
try to use rule mLP_SELECT()
            int LA3_2 =3D input.LA(2);

            if ( (LA3_2=3D=3D'\t'||LA3_2=3D=3D' '||LA3_2=3D=3D's') ) {
                alt3=3D3;
            }
            else {
                alt3=3D2;}
        }

//mLP_SELECT simply calls mLSELECT and returns. 
  public final void mLP_SELECT() throws RecognitionException {
        try {
            int _type =3D LP_SELECT;
            // C:\\Documents and Settings\\gzhu\\My
Documents\\T.g:13:13: ( ( LSELECT )=3D> LSELECT )
            // C:\\Documents and Settings\\gzhu\\My
Documents\\T.g:13:13: ( LSELECT )=3D> LSELECT
            {
            mLSELECT(); if (failed) return ;

            }

            this.type =3D _type;
        }
        finally {
        }
    } 

 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, June 26, 2007 1:52 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr 3 Lexer problem



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Geoffrey Zhu
> Sent: Tuesday, June 26, 2007 11:44 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 Lexer problem
> 
> I can't do this. I am constructing complicated lexer rules because in 
> my input there are code blocks within which the grammar is totally 
> different from the rest of the file. My file is a custom
mini-language.
> Embeded in it there are some SQL statements with surrounding 
> parentheses. My program does not need to deal with full SQL syntax. I 
> only need to correctly recognize the beginning and ending of the SQL 
> statements.

OK:

fragment WS : ' ' | '\t' ;
fragment LSELECT : '(' WS* 'select' ;
LPAREN    : '(' ;
LP_SELECT : (LSELECT)=3D> LSELECT;


Should do it. ANTLR
Perhaps you can tokenize the whole SQL statement to one token, unless
you need to look in it for host variables or something?

Jim




_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From trunkel at gmail.com  Tue Jun 26 14:07:01 2007
From: trunkel at gmail.com (troy runkel)
Date: Tue, 26 Jun 2007 17:07:01 -0400
Subject: [antlr-interest] How to use an optional rule attribute in
	anaction?
In-Reply-To: <051466DAA0D608439E196797955018D76E33@wavemachine.temporal-wave.com>
References: <620da58c0706261218y6cf44976g4393191565c201a3@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E33@wavemachine.temporal-wave.com>
Message-ID: <620da58c0706261407k488e00edh8c027933df152a3f@mail.gmail.com>

In this particular case it looks like I can assign the ';' token to a
variable and that variable will be initialized to NULL.  Then I can
just check the 'semi' variable in the action.  The following seems to
be working for me.  Thanks

create_procedure :
    'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( semi=';' num=number )?
    {
        if (semi != NULL)
        {
            someFunction($num.text);
        }
    }

Troy Runkel

On 6/26/07, Jim Idle <jimi at temporal-wave.com> wrote:
> Hmm - I'll look at that, I think it probably SHOULD be initialized to
> NULL, but perhaps I don't hae the label list or something (doubtful
> though).
>
> For now you could do this:
>
> create_procedure
> @declarations
> {
>         ANTLR3_BOOLEAN haveNumber;
> }
> @init
> {
>         haveNumber = ANTLR3_FALSE;
> }
> :
>           'CREATE' ('PROC' | 'PROCEDURE') procedure_name
>         ( ';'number { $haveNumber = ANTLR3_TRUE; } )?
>           {
>               if ($haveNumber)
>                   {
>                       printf("Found number '%s'\n", $n.text->chars);
>                       someFunction($n.text);
>                   }
>           }
>
>
> But, now that I look at what you are doing, can't you do this:
>
>     (';' n=number { someFunction($n.text->chars); })?
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of troy runkel
> > Sent: Tuesday, June 26, 2007 12:18 PM
> > To: antlr-interest at antlr.org; trunkel at gmail.com
> > Subject: Re: [antlr-interest] How to use an optional rule attribute in
> > anaction?
> >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of troy runkel
> > > > Sent: Tuesday, June 26, 2007 11:51 AM
> > > > To: ANTLR mail-list
> > > > Subject: [antlr-interest] How to use an optional rule attribute in
> > an
> > > > action?
> > > >
> > > > Greetings,
> > > >
> > > > I'm using ANTLR v3 with the C-target and have a situation like the
> > > > following.  I have an optional rule called number and I want to
> > access
> > > > the text attribute of that rule if and only if the rule was
> > applied.
> > > > Using the C-target, $number is uninitialized if the rule wasn't
> > > > applied.  Is there a way, in the action, to determine if
> > $number.text
> > > > is valid?
> > > >
> > >
> > > create_procedure :
> > >          'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( ';'
> > n=number
> > > )?
> > >          {
> > >              if ($n != NULL)
> > >                  {
> > >                      printf("Found number '%s'\n", $n.text->chars);
> > >                  someFunction($n.text);
> > >                  }
> > >          }
> > >
> > > Makes most sense to me.
> > >
> > > Jim
> >
> > I tried that, but using the C-target the n variable will be
> > uninitialized if the number rule was not applied.  Therefore, n will
> > not be NULL but will instead be some random value.  In the Visual
> > Studio 2005 debugger n is initialized to 0xcccccccc but that's not
> > very helpful.  :-)
> >
> > Troy Runkel
>

From rdclark at gmail.com  Tue Jun 26 14:59:57 2007
From: rdclark at gmail.com (Richard Clark)
Date: Tue, 26 Jun 2007 14:59:57 -0700
Subject: [antlr-interest] parameterized maps as arguments to rules??
In-Reply-To: <ba90a0a90706261129t127d5a6ap9eb4dd8196fc0324@mail.gmail.com>
References: <mailman.1.1182020401.17249.antlr-interest@antlr.org>
	<F71C9897F5400545833E3786F31CD0AD01FF2880@TELEGRAPH5.uwyo.edu>
	<ba90a0a90706261129t127d5a6ap9eb4dd8196fc0324@mail.gmail.com>
Message-ID: <d3992d900706261459q707c0e5ey2dc4ba8d1a5e1744@mail.gmail.com>

On 6/26/07, Oti <ohumbel at gmail.com> wrote:
> > I have the beginning of a rule:
> > formalParameterDecls returns  [HashMap<String,String> params].
> >
> > But I get a compilation error

You can use JDK 5 features in any {} block (including @members, @init,
@after, and rule actions), but you can't use them in a rule
declaration. ANTLR 3 doesn't do the right thing with parameterized
types in declarations.

 ...Richard

From open.zone at virgin.net  Tue Jun 26 15:11:38 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 26 Jun 2007 23:11:38 +0100
Subject: [antlr-interest] Bug in C# template for code generation?
In-Reply-To: <46817D5C.2090905@gmx.de>
Message-ID: <004701c7b83e$f8c06530$c704a8c0@hercules>

Hi,

> I've discovered another 
> one. The line:
> 
> using Hashtable = System.Collections.Hashtable;
> 
> is generated twice with the attached grammar.

Verified. Thanks for the report.

Micheal


From jaluber at gmx.de  Tue Jun 26 15:34:34 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 27 Jun 2007 00:34:34 +0200
Subject: [antlr-interest] Template application questions
Message-ID: <4681947A.1090301@gmx.de>

Hello!

I have the following rule:

element
   :   e=(atom|block) ebnfSuffix? -> ???
   ;

I have to generate different a different template depending on the type
of the optional token. Below there is a version, in which I replaced by
all of its alternatives. But this results in a wordy rule and requires
syntactic predicates.

element
   :   (. OPTIONAL)=> e=(atom|block) OPTIONAL -> Optional(name={$e.st})
   |   (. CLOSURE)=> e=(atom|block) CLOSURE -> ZeroOrMore(name={$e.st})
   |   (. POSITIVE_CLOSURE)=> e=(atom|block) POSITIVE_CLOSURE
	-> OneOrMore(name={$e.st})
   |   e=(atom|block) -> {$e.st}
   ;

How can I generate a template depending on the type and presence of
ebnfSuffix? And another problem: The generated code for the replacement
rule complains, the $e.st has no st-attribute, as it is a CommonTree. I
don't understand what I've done wrong, as in every other rule this
construct works. The whole is attached.

Best regards,
Johannes Luber

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNGGenerator.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070627/b016739a/attachment.pl 

From jaluber at gmx.de  Tue Jun 26 15:41:27 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 27 Jun 2007 00:41:27 +0200
Subject: [antlr-interest] Template application questions
In-Reply-To: <4681947A.1090301@gmx.de>
References: <4681947A.1090301@gmx.de>
Message-ID: <46819617.3080609@gmx.de>

Opps,

I didn't save the file in ANTLRworks, so I've accidentally sent an old
version of the grammar. Here is the current one.

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNGGenerator.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070627/d4051018/attachment-0001.pl 

From rschulz at sonic.net  Tue Jun 26 15:55:06 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 15:55:06 -0700
Subject: [antlr-interest] Understanding the ANTLRworks Debugger's Parse Tree
	Display
Message-ID: <200706261555.06589.rschulz@sonic.net>

Hi,

Once parsing under the ANTLRworks debugger is complete (I single stepped 
for a while, then spent a moment being amazed that you can step 
_backward_ and then just let it run to the end), I get a parse tree 
that appears to contain two duplicated sub-trees with one of them (the 
one on the left) displayed in green.

But wait! At first I though the two parse trees were identical (they're 
large, even though the input is pretty simple?you know how verbose 
parse trees are...), but upon closer inspection, they're not the same. 
I can see places where the green parse tree reflects an incorrect parse 
while the black one appears to be correct.

So I guess this has something to do with backtracking? The green parse 
tree was abandoned because of backtracking? Is it something like that?

And in a later test, using more elaborate constructions, I see red, 
green and black parse nodes, though I believe the parse succeeded in 
the end (nothing was highlighted in red in the debugger's Input pane as 
there is when I introduce deliberate syntax errors in my test input).

So the question is: What do the colors mean? Are there other 
possibilities beyond black, green and red?


By the way, I did look on the ANTLRworks documentation page at 
antlr.org, but could find nothing describing this.


Thanks.


Randall Schulz

From matthew.j.diehl at intel.com  Tue Jun 26 16:16:29 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 26 Jun 2007 16:16:29 -0700
Subject: [antlr-interest] Understanding the ANTLRworks Debugger's Parse
	TreeDisplay
In-Reply-To: <200706261555.06589.rschulz@sonic.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20226136C@orsmsx417.amr.corp.intel.com>

Yes, as far as I've read, you're on track.  The green sub tree is from
parsing the predicates (which do backtrack if wrong).  Red sub trees
indicate that that particular alternative of the rule has failed (page
341 Figure 14.4).  Dark green has to do with a syntactic predicate that
was correct (page 339 Figure 14.2) and black has to do with
chosen/finalized paths.  

There's a huge section in the book from page 336 to 341 that talks all
about this and more.  I highly recommend getting it. It has pictures too
:)   So the multiple trees come from running through the predicates to
see if it should take that path (hence why it's only part of the black
tree), and then it runs through the rule to create the 'real' sub tree.

Matt

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Tuesday, June 26, 2007 3:55 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Understanding the ANTLRworks Debugger's Parse
TreeDisplay

Hi,

Once parsing under the ANTLRworks debugger is complete (I single stepped

for a while, then spent a moment being amazed that you can step 
_backward_ and then just let it run to the end), I get a parse tree 
that appears to contain two duplicated sub-trees with one of them (the 
one on the left) displayed in green.

But wait! At first I though the two parse trees were identical (they're 
large, even though the input is pretty simple-you know how verbose 
parse trees are...), but upon closer inspection, they're not the same. 
I can see places where the green parse tree reflects an incorrect parse 
while the black one appears to be correct.

So I guess this has something to do with backtracking? The green parse 
tree was abandoned because of backtracking? Is it something like that?

And in a later test, using more elaborate constructions, I see red, 
green and black parse nodes, though I believe the parse succeeded in 
the end (nothing was highlighted in red in the debugger's Input pane as 
there is when I introduce deliberate syntax errors in my test input).

So the question is: What do the colors mean? Are there other 
possibilities beyond black, green and red?


By the way, I did look on the ANTLRworks documentation page at 
antlr.org, but could find nothing describing this.


Thanks.


Randall Schulz

From jimi at temporal-wave.com  Tue Jun 26 16:18:10 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jun 2007 16:18:10 -0700
Subject: [antlr-interest] How to use an optional rule attribute in
	anaction?
In-Reply-To: <620da58c0706261407k488e00edh8c027933df152a3f@mail.gmail.com>
References: <620da58c0706261218y6cf44976g4393191565c201a3@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E33@wavemachine.temporal-wave.com>
	<620da58c0706261407k488e00edh8c027933df152a3f@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E35@wavemachine.temporal-wave.com>

Actually, I just fixed this correctly and am testing before checking it
in.

Jim

> -----Original Message-----
> From: troy runkel [mailto:trunkel at gmail.com]
> 
> In this particular case it looks like I can assign the ';' token to a
> variable and that variable will be initialized to NULL.  Then I can
> just check the 'semi' variable in the action.  The following seems to
> be working for me.  Thanks
> 
> create_procedure :
>     'CREATE' ('PROC' | 'PROCEDURE') procedure_name ( semi=';'
> num=number )?
>     {
>         if (semi != NULL)
>         {

From rschulz at sonic.net  Tue Jun 26 16:55:02 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 26 Jun 2007 16:55:02 -0700
Subject: [antlr-interest] Understanding the ANTLRworks Debugger's Parse
	TreeDisplay
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20226136C@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20226136C@orsmsx417.amr.corp.intel.com>
Message-ID: <200706261655.02367.rschulz@sonic.net>

On Tuesday 26 June 2007 16:16, Diehl, Matthew J wrote:
> Yes, as far as I've read, you're on track. ...
>
> There's a huge section in the book from page 336 to 341 that talks
> all about this and more.  I highly recommend getting it. It has
> pictures too

Yes. Pictures printed in monochrome! I guess I'll have to get the PDF 
version of the book, as well. Call me old fashioned, but I like paper. 
Then again, searching in PDFs is handy, too.


> :)   So the multiple trees come from running through the predicates
> to see if it should take that path (hence why it's only part of the
> black tree), and then it runs through the rule to create the 'real'
> sub tree.

If I understand correctly, then it also gives an indication of how much 
redundant parsing is done to resolve the ambiguities handled via 
backtracking.


> Matt


Randall Schulz

From parrt at cs.usfca.edu  Tue Jun 26 19:00:20 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 27 Jun 2007 12:00:20 +1000
Subject: [antlr-interest] Template application questions
In-Reply-To: <4681947A.1090301@gmx.de>
References: <4681947A.1090301@gmx.de>
Message-ID: <9016D43C-9AAF-49E0-80E0-9DF696ECEB55@cs.usfca.edu>


On Jun 27, 2007, at 8:34 AM, Johannes Luber wrote:

> Hello!
>
> I have the following rule:
>
> element
>    :   e=(atom|block) ebnfSuffix? -> ???
>    ;
>
> I have to generate different a different template depending on the  
> type
> of the optional token. Below there is a version, in which I  
> replaced by
> all of its alternatives. But this results in a wordy rule and requires
> syntactic predicates.
>
> element
>    :   (. OPTIONAL)=> e=(atom|block) OPTIONAL -> Optional(name= 
> {$e.st})
>    |   (. CLOSURE)=> e=(atom|block) CLOSURE -> ZeroOrMore(name= 
> {$e.st})
>    |   (. POSITIVE_CLOSURE)=> e=(atom|block) POSITIVE_CLOSURE
> 	-> OneOrMore(name={$e.st})
>    |   e=(atom|block) -> {$e.st}
>    ;

You could use sem preds after the -> that tests the type of suffix  
matched.  I think input.LA(-1) should do it.

Ter


From parrt at cs.usfca.edu  Tue Jun 26 19:01:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 27 Jun 2007 12:01:06 +1000
Subject: [antlr-interest] [v3] any way to increment the token integer
	values
In-Reply-To: <4153ee230706261555pf091e8bt21d50b7e842ac1c6@mail.gmail.com>
References: <4153ee230706252129qd22e271m6b389060932b33de@mail.gmail.com>
	<E3A979F7-3EC0-4324-93C2-02C45565384B@cs.usfca.edu>
	<4153ee230706261555pf091e8bt21d50b7e842ac1c6@mail.gmail.com>
Message-ID: <A3255F1D-CD81-4E76-A7AD-A99724486F89@cs.usfca.edu>


On Jun 27, 2007, at 8:55 AM, Mark Mandel wrote:

> Is there any reason I couldn't use a replace rule in ANT or something
> similar to increment the numbers that way?
>
> I assume they don't have any special meaning?

nope. they are just numbers, beyond min token (See Token.java).

Ter

From rerdavies at rogers.com  Tue Jun 26 23:38:05 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Wed, 27 Jun 2007 02:38:05 -0400
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200706260547.37458.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net><F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org><44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
	<200706260547.37458.rschulz@sonic.net>
Message-ID: <9810200AC8B543FF901772E11C791832@GWB>

> >> I want an exit status from the ANTLR parser generator tool, not
> >> from the parsers it generates.
> >

Although an error count in the runtime would be nice too. At this point, I 
can't imagine that anyone is NOT going to have to find the right error 
message function in parsers and/or lexers to override just so that they can 
go ++Error, just so that they can return failures when running generated 
grammars.  (Is this a C# runtime thing, or do all runtimes suffer from 
that?)




From win at wincent.com  Wed Jun 27 00:25:18 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 27 Jun 2007 09:25:18 +0200
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <9810200AC8B543FF901772E11C791832@GWB>
References: <200611191412.25438.rschulz@sonic.net><F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org><44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com>
	<200706260547.37458.rschulz@sonic.net>
	<9810200AC8B543FF901772E11C791832@GWB>
Message-ID: <E0DC20F7-33CF-4E49-AF55-B052BEF795B8@wincent.com>

El 27/6/2007, a las 8:38, Robin Davies escribi?:

>> >> I want an exit status from the ANTLR parser generator tool, not
>> >> from the parsers it generates.
>> >
>
> Although an error count in the runtime would be nice too. At this  
> point, I can't imagine that anyone is NOT going to have to find the  
> right error message function in parsers and/or lexers to override  
> just so that they can go ++Error, just so that they can return  
> failures when running generated grammars.  (Is this a C# runtime  
> thing, or do all runtimes suffer from that?)

I can only speak for the C runtime, but it does count errors. Seeing  
as C doesn't support exceptions, checking the error count is in fact  
the only way to find out if something went wrong.

Cheers,
Wincent


From mark.mandel at gmail.com  Wed Jun 27 00:35:31 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Wed, 27 Jun 2007 17:35:31 +1000
Subject: [antlr-interest] [v3] Can't seem to resolve through syntactic
	predicates...
Message-ID: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.com>

I have the following grammar, that is essnetially:


tagInnerValues
	:
	(
	{
           complicatedPredicate()
	}?=> tagAttribute*
	)
	|
	(
	{
	(	
		!complicatedPredicate()
	)
	}?=> script
	)
	|
	;

Now, both rules 'tagAttribute', and 'script' use some of the same
tokens in their rules (the EQUALS token to be exact), so
understandably, I get the error:

rule tagInnerValues has non-LL(*) decision due to recursive rule
invocations reachable from alts 1,2,3.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option

But, I'm confused in that, I have a syntactic predicate - either
tagAttributes OR script are going to be required, never both - so why
am I getting the warning? I would have thought the code above would
have got rid of it.

Side note - got my ANTLR book in the post today :D very excited.

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From antlr at mirality.co.nz  Wed Jun 27 00:43:51 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 27 Jun 2007 19:43:51 +1200
Subject: [antlr-interest] Antlr 3 Lexer problem
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago
	.peak6.net>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>
	<20070626083032.2B90511E977@www.antlr.org>
	<051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net>
Message-ID: <20070627074405.C1D9911E9EF@www.antlr.org>

At 09:06 27/06/2007, Geoffrey Zhu wrote:
 >The syntactic predicate does not seem to work. The lexer chokes 
on
 >exactly the same location 'c' if I pass in "( security".
 >
 >In mTokens() it still looks ahead only one step to determine 
what
 >should e the next token.

I think this is another occurrence of the case that Ter claims is 
by design, but myself and a few others would like to be different: 
the lexer doesn't do backtracking, it simply fails with 
NoViableAltExceptions (or the equivalent) -- even when the parent 
grammar does do backtracking.  Basically once it enters a 
particular token it's going to either match that token or cause an 
error; it won't go back and pick a different token.

It is usually possible to work around this by jumping through 
hoops backwards with your eyes closed (aka reordering rules and/or 
juggling predicates, parentheses, and fragment rules until 
something clicks, or just giving up and moving some of it over to 
the parser), but it's definitely not intuitive.


From relationalalgebra at gmail.com  Wed Jun 27 00:49:56 2007
From: relationalalgebra at gmail.com (G R)
Date: Wed, 27 Jun 2007 09:49:56 +0200
Subject: [antlr-interest] A few questions about AST
In-Reply-To: <051466DAA0D608439E196797955018D76E29@wavemachine.temporal-wave.com>
References: <2ea6ad20706250653v35a89736lb0b7a2b0807f6e9d@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E1F@wavemachine.temporal-wave.com>
	<2ea6ad20706260057ld823f9ft4b9360d52878996e@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E29@wavemachine.temporal-wave.com>
Message-ID: <2ea6ad20706270049x7e9d955cjcb51a5246000531b@mail.gmail.com>

2007/6/26, Jim Idle <jimi at temporal-wave.com>:
>
>    First of all, thanks for your answer Jim.
> I have try your way of gathering attributes and it's working perfectly!
> Thanks again.
> But, I've try your :
>
> predicat:    elementaryPredicat (^logicalOperator elementaryPredicat)*;
>
> and I've got a syntax error (unexpected token ^)
>
>  Whoops: logicalOperator^
>
>
>
> ^ was in the wrong place J Consult the downloadable examples and the book
> is best.
>
>
>
> Jim
>
>
>
Oh. I should have guess it, thanks again.
I hope my book will arrived soon.

G.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070627/1d3d8af7/attachment-0001.html 

From antlr at mirality.co.nz  Wed Jun 27 00:53:02 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 27 Jun 2007 19:53:02 +1200
Subject: [antlr-interest] Odd formatting on Wiki
Message-ID: <20070627075338.F378011E976@www.antlr.org>

Have a look here:
   http://www.antlr.org/wiki/display/ANTLR3/Rule+and+subrule+options

On my copy of Firefox, at least, the left column is sized only to 
fit the first row, which makes the subsequent rows nearly 
impossible to read.


From antlr at mirality.co.nz  Wed Jun 27 00:57:43 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 27 Jun 2007 19:57:43 +1200
Subject: [antlr-interest] [v3] Can't seem to resolve through syntactic
 predicates...
In-Reply-To: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.co
 m>
References: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.com>
Message-ID: <20070627075755.C63CB11EAD8@www.antlr.org>

At 19:35 27/06/2007, Mark Mandel wrote:
 >tagInnerValues
 >	:
 >	(
 >	{
 >           complicatedPredicate()
 >	}?=> tagAttribute*
 >	)
 >	|
 >	(
 >	{
 >	(	
 >		!complicatedPredicate()
 >	)
 >	}?=> script
 >	)
 >	|
 >	;
[...]
 >rule tagInnerValues has non-LL(*) decision due to recursive rule
 >invocations reachable from alts 1,2,3.  Resolve by 
left-factoring
 >or using syntactic predicates or using backtrack=true option
 >
 >But, I'm confused in that, I have a syntactic predicate - either
 >tagAttributes OR script are going to be required, never both - 
so
 >why am I getting the warning? I would have thought the code 
above
 >would have got rid of it.

Actually that's a *semantic* predicate, not a syntactic one, since 
it uses target code rather than tokens to resolve itself (hence 
the braces).  (Technically it's a *gated* semantic predicate, but 
I can never remember how those are different from regular semantic 
predicates.)

Also, the fact that it's mentioning alt 3 (which is empty) leads 
me to suspect that the problem actually lies further up the 
tree.  You've probably got a "list of nothing"-type construct, 
which makes no sense and causes odd things to happen.


From jonathan.thomas at ca.com  Wed Jun 27 01:02:11 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 27 Jun 2007 18:02:11 +1000
Subject: [antlr-interest] Odd formatting on Wiki
In-Reply-To: <20070627075338.F378011E976@www.antlr.org>
References: <20070627075338.F378011E976@www.antlr.org>
Message-ID: <46821983.3080709@ca.com>

Temporary fix put in ... look again!

I've seen that problem on other pages - something to do with Ter's css 
template I imagine ... the outer div, or possibly the surrounding td, 
doesn't seem to take into account the inner div ...  not that expert on 
HTML but i'd imagine div's inside table tags are something difficult to 
deal with anyway ... perhaps they should be spans?

Gavin Lambert said the following on 27/06/2007 5:53 PM:
> Have a look here:
>   http://www.antlr.org/wiki/display/ANTLR3/Rule+and+subrule+options
>
> On my copy of Firefox, at least, the left column is sized only to fit 
> the first row, which makes the subsequent rows nearly impossible to read.
>
>

From tbrandonau at gmail.com  Wed Jun 27 01:05:13 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 18:05:13 +1000
Subject: [antlr-interest] Antlr 3 Lexer problem
In-Reply-To: <20070627074405.C1D9911E9EF@www.antlr.org>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>
	<20070626083032.2B90511E977@www.antlr.org>
	<051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net>
	<20070627074405.C1D9911E9EF@www.antlr.org>
Message-ID: <ebc876d70706270105g34fa00a9u5af24d1f5b415b5f@mail.gmail.com>

On 6/27/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 09:06 27/06/2007, Geoffrey Zhu wrote:
>  >The syntactic predicate does not seem to work. The lexer chokes
> on
>  >exactly the same location 'c' if I pass in "( security".
>  >
>  >In mTokens() it still looks ahead only one step to determine
> what
>  >should e the next token.
>
> I think this is another occurrence of the case that Ter claims is
> by design, but myself and a few others would like to be different:
> the lexer doesn't do backtracking, it simply fails with
> NoViableAltExceptions (or the equivalent) -- even when the parent
> grammar does do backtracking.  Basically once it enters a
> particular token it's going to either match that token or cause an
> error; it won't go back and pick a different token.
>
I think Ter's argument was that the LL(*) algorithm used in the lexer
is more powerful than backtracking. However this seems to be a case
where the LL(*) algorithm falls over.
If you look at the generated code you can see there is an mTokens rule
with a comment "// T.g:1:10: ( ID | LPAREN | LP_SELECT )". So ANTLR is
effectively generating a lexer for the grammar:

MTOKENS
	:	ID | LPAREN | LP_SELECT
	;

fragment
ID : ('a'..'z')+;

fragment
LPAREN : '(';

fragment
LP_SELECT : LPAREN 'select';

For this grammar, ANTLR generates a correct lexer. MTOKENS can only
return one of ID, LPAREN and LP_SELECT, so once it has seen the '('
ANTLR only needs to look at the 's' to decide which rule to follow,
given the 's' MOTKENS must match LP_SELECT or give an error as
matching LPAREN LP_SELECT is not an option.
However, don't you really want MTOKENS to be:
MTOKENS
	:	(ID | LPAREN | LP_SELECT)+
	;
A lexer does return multiple tokens. Using this rule, ANTLR correctly
checks for the entire 'select' string before deciding to go with
LP_SELECT.
This seems like a bug in ANTLR to me.

Tom.

From tbrandonau at gmail.com  Wed Jun 27 01:17:06 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 27 Jun 2007 18:17:06 +1000
Subject: [antlr-interest] [v3] Can't seem to resolve through syntactic
	predicates...
In-Reply-To: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.com>
References: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.com>
Message-ID: <ebc876d70706270117x631eb65labb243534e5d0862@mail.gmail.com>

On 6/27/07, Mark Mandel <mark.mandel at gmail.com> wrote:
> I have the following grammar, that is essnetially:
>
>
> tagInnerValues
>         :
>         (
>         {
>            complicatedPredicate()
>         }?=> tagAttribute*
>         )
>         |
>         (
>         {
>         (
>                 !complicatedPredicate()
>         )
>         }?=> script
>         )
>         |
>         ;
>
> Now, both rules 'tagAttribute', and 'script' use some of the same
> tokens in their rules (the EQUALS token to be exact), so
> understandably, I get the error:
>
> rule tagInnerValues has non-LL(*) decision due to recursive rule
> invocations reachable from alts 1,2,3.  Resolve by left-factoring or
> using syntactic predicates or using backtrack=true option
>
> But, I'm confused in that, I have a syntactic predicate - either
> tagAttributes OR script are going to be required, never both - so why
> am I getting the warning? I would have thought the code above would
> have got rid of it.
>
> Side note - got my ANTLR book in the post today :D very excited.
>
> Mark
>
> --
> E: mark.mandel at gmail.com
> W: www.compoundtheory.com
>
This may not be correct, haven't tested, but you might try specifying
a fixed lookahead. Something like:
tagInnerValues
       :
       (    options {k=1;}:
           { complicatedPredicate() }?=> tagAttribute*
       |
           { !complicatedPredicate() }?=> script
       |
       )
       ;
I had a similar non-LL(*) error, though in a lexer rule not a parser
rule, and while adding predicates hadn't correctly resolved it, adding
a fixed lookahead did. The error message for such problems used to say
"Resolve by left-factoring or using syntactic predicates with fixed k
lookahead or using backtrack=true option" but this was subsequently
changed to only mention predicates, not fixed lookahead. Maybe this
needs to go back.

Tom.

From win at wincent.com  Wed Jun 27 01:26:14 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 27 Jun 2007 10:26:14 +0200
Subject: [antlr-interest] [v3] Can't seem to resolve through syntactic
	predicates...
In-Reply-To: <20070627075755.C63CB11EAD8@www.antlr.org>
References: <4153ee230706270035n5881be40qb463044e0f4d966c@mail.gmail.com>
	<20070627075755.C63CB11EAD8@www.antlr.org>
Message-ID: <D87322DA-4B6B-440B-8F79-87124B8AE42C@wincent.com>

El 27/6/2007, a las 9:57, Gavin Lambert escribi?:

> Actually that's a *semantic* predicate, not a syntactic one, since  
> it uses target code rather than tokens to resolve itself (hence the  
> braces).  (Technically it's a *gated* semantic predicate, but I can  
> never remember how those are different from regular semantic  
> predicates.)

I also can never remember this so I made a bit of a "cheat sheet"  
here for quick consultation whenever I forget...:

<http://wincent.com/knowledge-base/ANTLR_predicates>

Cheers,
Wincent


From vbar at comp.cz  Wed Jun 27 02:19:43 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 27 Jun 2007 11:19:43 +0200
Subject: [antlr-interest] C# target doesn't do numbers
Message-ID: <46822BAF.7010106@comp.cz>

Hi,

I'm trying to construct an ANTL grammar for SQL queries (based on 
http://www.antlr.org/grammar/1062280680642/MS_SQL_SELECT.html, except it 
  should be some SQL subset acceptable to multiple SQL engines), and I 
have trouble parsing expressions. I've simplified the grammar to the bone:

grammar MacroScope;

options
{
	language=CSharp;
}

@lexer::namespace
{
	MacroScope
}

@parser::namespace
{
	MacroScope
}

constant returns [ ITerm value ] :
	Integer { $value = new IntegerValue(int.Parse($Integer.text)); }
	| NULL { $value = new NullValue(); }
	;

NULL : 'null' ;

Digit : '0'..'9' ;

Integer : ( Digit )+ ;

Whitespace : ( '\t' | ' ' | '\r' | '\n' )+ 	{ $channel = HIDDEN; }
	;

(MacroScope.IntegerValue and MacroScope.NullValue are my classes derived 
from MacroScope.ITerm.) ANTLWorks 1.0.2 considers this OK, 
org.antlr.Tool from that jar generates lexer and parser from it without 
complaints and Visual Studio 2005 compiles OK. But, when I run

MacroScopeLexer lexer = new MacroScopeLexer(
	new ANTLRStringStream("1"));
MacroScopeParser parser = new MacroScopeParser(
	new CommonTokenStream(lexer));
return parser.constant();

I get

line 1:0 no viable alternative at input '1'

on standard output (something I'll need to turn off, but first things 
first) and parser.constant() returns null. I have a feeling I'm missing 
something very obvious... Any suggestions?

	Bye
		Vasek


From win at wincent.com  Wed Jun 27 03:02:50 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 27 Jun 2007 12:02:50 +0200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <46822BAF.7010106@comp.cz>
References: <46822BAF.7010106@comp.cz>
Message-ID: <12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>

El 27/6/2007, a las 11:19, Vaclav Barta escribi?:

> constant returns [ ITerm value ] :
> 	Integer { $value = new IntegerValue(int.Parse($Integer.text)); }
> 	| NULL { $value = new NullValue(); }
> 	;
>
> NULL : 'null' ;
>
> Digit : '0'..'9' ;
>
> Integer : ( Digit )+ ;
>
> Whitespace : ( '\t' | ' ' | '\r' | '\n' )+ 	{ $channel = HIDDEN; }
> 	;
>
> (MacroScope.IntegerValue and MacroScope.NullValue are my classes  
> derived from MacroScope.ITerm.) ANTLWorks 1.0.2 considers this OK,  
> org.antlr.Tool from that jar generates lexer and parser from it  
> without complaints and Visual Studio 2005 compiles OK. But, when I run
>
> MacroScopeLexer lexer = new MacroScopeLexer(
> 	new ANTLRStringStream("1"));
> MacroScopeParser parser = new MacroScopeParser(
> 	new CommonTokenStream(lexer));
> return parser.constant();
>
> I get
>
> line 1:0 no viable alternative at input '1'


Have you tried making Digit a fragment rule? seeing as it is not  
referenced by any parser rule.

Cheers,
Wincent


From vbar at comp.cz  Wed Jun 27 03:34:04 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 27 Jun 2007 12:34:04 +0200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
References: <46822BAF.7010106@comp.cz>
	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
Message-ID: <46823D1C.1080504@comp.cz>

Wincent Colaiuta wrote:
 > El 27/6/2007, a las 11:19, Vaclav Barta escribi?:
 >> Digit : '0'..'9' ;
 >>
 >> Integer : ( Digit )+ ;
...
 >> line 1:0 no viable alternative at input '1'
 > Have you tried making Digit a fragment rule? seeing as it is not
 > referenced by any parser rule.
Err, what is a fragment rule and how do I make it? My ANTLR knowledge is 
rather dismal... What I tried was removing Digit altogether (it was used 
in another place in the full grammar, but that could be worked around), and

Integer : ( '0'..'9' )+ ;

does work - but still, it would be nice to understand why... :-)

	Bye
		Vasek


From antlr at mirality.co.nz  Wed Jun 27 03:51:14 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 27 Jun 2007 22:51:14 +1200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <46823D1C.1080504@comp.cz>
References: <46822BAF.7010106@comp.cz>
	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
	<46823D1C.1080504@comp.cz>
Message-ID: <20070627105130.4E9F911EB11@www.antlr.org>

At 22:34 27/06/2007, Vaclav Barta wrote:
 >Err, what is a fragment rule and how do I make it? My ANTLR
 >knowledge is rather dismal... What I tried was removing
 >Digit altogether (it was used in another place in the full
 >grammar, but that could be worked around), and
 >
 >Integer : ( '0'..'9' )+ ;
 >
 >does work - but still, it would be nice to understand why... :-)

Perhaps you should read the ANTLR book -- or the website :)

A fragment rule is easily created -- just put the word 'fragment' 
in front of it.  This is what was known as a 'protected' rule in 
v2; a lexer rule that is intended as a fragment of another rule's 
definition rather than a possible output of the lexer in its own 
right.

Because the Digit rule was listed first and wasn't a fragment, 
when the lexer saw a 1 it was generating a Digit token.  Since 
your parser didn't recognise Digits, only Integers, you had a 
failed match.  Making it a fragment removes it as a top-level 
candidate and the lexer will output an Integer instead.


From win at wincent.com  Wed Jun 27 03:53:58 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 27 Jun 2007 12:53:58 +0200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <46823D1C.1080504@comp.cz>
References: <46822BAF.7010106@comp.cz>
	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
	<46823D1C.1080504@comp.cz>
Message-ID: <B0937E1F-23F4-4936-AE40-16D00CE1E596@wincent.com>

El 27/6/2007, a las 12:34, Vaclav Barta escribi?:

> Wincent Colaiuta wrote:
> > El 27/6/2007, a las 11:19, Vaclav Barta escribi?:
> >> Digit : '0'..'9' ;
> >>
> >> Integer : ( Digit )+ ;
> ...
> >> line 1:0 no viable alternative at input '1'
> > Have you tried making Digit a fragment rule? seeing as it is not
> > referenced by any parser rule.
> Err, what is a fragment rule and how do I make it? My ANTLR  
> knowledge is rather dismal... What I tried was removing Digit  
> altogether (it was used in another place in the full grammar, but  
> that could be worked around), and
>
> Integer : ( '0'..'9' )+ ;
>
> does work - but still, it would be nice to understand why... :-)

Others can probably explain it better than me, but the basic reason  
is the following:

Rules Digit and Integer are ambiguous because given input like "1"  
ANTLR doesn't know whether to match using rule Digit or Integer;  
either would work. And ANTLR wants to make deterministic decisions;  
that is, for any given input symbol it wants to know *exactly* which  
(unique) path to take. The rules may not seem ambiguous to your human  
eye because you read them and understand them to mean "if you see 0  
to 9 it's a Digit, unless you see a series of them in which case it's  
an Integer"; ANTLR can make no such assumptions and so you have to  
help it by adding the "fragment" keyword so that it knows that the  
Digit rule is only there for use by other rules.

Checking your grammar in ANTLRWorks and Looking at the syntax diagram  
can help you to see these ambiguous paths.

Cheers,
Wincent


From win at wincent.com  Wed Jun 27 03:59:23 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 27 Jun 2007 12:59:23 +0200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <B0937E1F-23F4-4936-AE40-16D00CE1E596@wincent.com>
References: <46822BAF.7010106@comp.cz>
	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
	<46823D1C.1080504@comp.cz>
	<B0937E1F-23F4-4936-AE40-16D00CE1E596@wincent.com>
Message-ID: <0086F404-5A14-4264-996B-0F385EA38B3E@wincent.com>

El 27/6/2007, a las 12:53, Wincent Colaiuta escribi?:

> Others can probably explain it better than me...

Yep! I knew it!...

> El 27/6/2007, a las 12:51, Gavin Lambert escribi?:
>> Because the Digit rule was listed first and wasn't a fragment,  
>> when the lexer saw



From vbar at comp.cz  Wed Jun 27 04:27:54 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 27 Jun 2007 13:27:54 +0200
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <200706271051.l5RApTd9005457@vega.inec.cz>
References: <46822BAF.7010106@comp.cz>
	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>
	<46823D1C.1080504@comp.cz>
	<200706271051.l5RApTd9005457@vega.inec.cz>
Message-ID: <468249BA.5050402@comp.cz>

Gavin Lambert wrote:
> At 22:34 27/06/2007, Vaclav Barta wrote:
>  >Err, what is a fragment rule and how do I make it? My ANTLR
>  >knowledge is rather dismal... What I tried was removing
> Perhaps you should read the ANTLR book -- or the website :)
Well, as for the book, I'd have to buy it first, which is expensive and 
inconvenient - I'll probably get it eventually, but this project won't 
wait for my studies. As for the website, I find it rather difficult to 
navigate; when I search for "fragment", for example, I get a Wiki page 
and a bunch of posts on antlr-interest, and the usual result of my 
searches is a 404... I'd prefer something more organized and 
authoritative, but well, I suppose that's what the book is for...

> A fragment rule is easily created -- just put the word 'fragment' in 
...
> recognise Digits, only Integers, you had a failed match.  Making it a 
> fragment removes it as a top-level candidate and the lexer will output 
> an Integer instead.
Ah, now it makes sense - thanks.

	Bye
		Vasek



From gzhu at peak6.com  Wed Jun 27 06:35:23 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 08:35:23 -0500
Subject: [antlr-interest] Antlr 3 Lexer problem
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net><20070627074405.C1D9911E9EF@www.antlr.org>
	<ebc876d70706270105g34fa00a9u5af24d1f5b415b5f@mail.gmail.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D4FE@ppi-mail1.chicago.peak6.net>

I see. This makes sense. So what do you think of doing the following?
The DFA ANTLR generates is difficult to decipher in this case, but it
should work according to your theory? If I let LP_OTHER emit two tokens,
it should be fine?

ID : ('a'..'z')+;
 

fragment WS : ' ' | '\t' ;

LPAREN    : '(' ;

LP_SELECT : '(' WS* 'select';

LP_OTHER:	'(' WS* ID;	 
	

prog: (ID|LP_OTHER|LP_SELECT|WS)+ ;

 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Brandon
Sent: Wednesday, June 27, 2007 3:05 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr 3 Lexer problem

On 6/27/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 09:06 27/06/2007, Geoffrey Zhu wrote:
>  >The syntactic predicate does not seem to work. The lexer chokes on  
> >exactly the same location 'c' if I pass in "( security".
>  >
>  >In mTokens() it still looks ahead only one step to determine what  
> >should e the next token.
>
> I think this is another occurrence of the case that Ter claims is by 
> design, but myself and a few others would like to be different:
> the lexer doesn't do backtracking, it simply fails with 
> NoViableAltExceptions (or the equivalent) -- even when the parent 
> grammar does do backtracking.  Basically once it enters a particular 
> token it's going to either match that token or cause an error; it 
> won't go back and pick a different token.
>
I think Ter's argument was that the LL(*) algorithm used in the lexer is
more powerful than backtracking. However this seems to be a case where
the LL(*) algorithm falls over.
If you look at the generated code you can see there is an mTokens rule
with a comment "// T.g:1:10: ( ID | LPAREN | LP_SELECT )". So ANTLR is
effectively generating a lexer for the grammar:

MTOKENS
	:	ID | LPAREN | LP_SELECT
	;

fragment
ID : ('a'..'z')+;

fragment
LPAREN : '(';

fragment
LP_SELECT : LPAREN 'select';

For this grammar, ANTLR generates a correct lexer. MTOKENS can only
return one of ID, LPAREN and LP_SELECT, so once it has seen the '('
ANTLR only needs to look at the 's' to decide which rule to follow,
given the 's' MOTKENS must match LP_SELECT or give an error as matching
LPAREN LP_SELECT is not an option.
However, don't you really want MTOKENS to be:
MTOKENS
	:	(ID | LPAREN | LP_SELECT)+
	;
A lexer does return multiple tokens. Using this rule, ANTLR correctly
checks for the entire 'select' string before deciding to go with
LP_SELECT.
This seems like a bug in ANTLR to me.

Tom.



_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From gzhu at peak6.com  Wed Jun 27 06:46:55 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 08:46:55 -0500
Subject: [antlr-interest] Visually display the DFA ANTLR generates
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com><20070626083032.2B90511E977@www.antlr.org><051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net><051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net><20070627074405.C1D9911E9EF@www.antlr.org><ebc876d70706270105g34fa00a9u5af24d1f5b415b5f@mail.gmail.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D4FE@ppi-mail1.chicago.peak6.net>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>

Does anyone know how to visually display the DFA ANTLR generates?

For example, ANTLR generates the following DFA, but it is just too
difficult for me to figure out what it is doing.


    protected DFA4 dfa4 =3D new DFA4(this);
    static final String DFA4_eotS =3D
        "\2\uffff\1\6\1\uffff\1\5\2\uffff\4\5\1\14\1\uffff";
    static final String DFA4_eofS =3D
        "\15\uffff";
    static final String DFA4_minS =3D
 
"\1\50\1\uffff\2\11\1\145\2\uffff\1\154\1\145\1\143\1\164\1\141\1"+
        "\uffff";
    static final String DFA4_maxS =3D
 
"\1\172\1\uffff\2\172\1\145\2\uffff\1\154\1\145\1\143\1\164\1\172"+
        "\1\uffff";
    static final String DFA4_acceptS =3D
        "\1\uffff\1\1\3\uffff\1\4\1\2\5\uffff\1\3";
    static final String DFA4_specialS =3D
        "\15\uffff}>";
    static final String[] DFA4_transitionS =3D {
            "\1\2\70\uffff\32\1",
            "",
            "\1\3\26\uffff\1\3\100\uffff\22\5\1\4\7\5",
            "\1\3\26\uffff\1\3\100\uffff\22\5\1\4\7\5",
            "\1\7",
            "",
            "",
            "\1\10",
            "\1\11",
            "\1\12",
            "\1\13",
            "\32\5",
            ""
    };

    static final short[] DFA4_eot =3D DFA.unpackEncodedString(DFA4_eotS);
    static final short[] DFA4_eof =3D DFA.unpackEncodedString(DFA4_eofS);
    static final char[] DFA4_min =3D
DFA.unpackEncodedStringToUnsignedChars(DFA4_minS);
    static final char[] DFA4_max =3D
DFA.unpackEncodedStringToUnsignedChars(DFA4_maxS);
    static final short[] DFA4_accept =3D
DFA.unpackEncodedString(DFA4_acceptS);
    static final short[] DFA4_special =3D
DFA.unpackEncodedString(DFA4_specialS);
    static final short[][] DFA4_transition;

    static {
        int numStates =3D DFA4_transitionS.length;
        DFA4_transition =3D new short[numStates][];
        for (int i=3D0; i<numStates; i++) {
            DFA4_transition[i] =3D
DFA.unpackEncodedString(DFA4_transitionS[i]);
        }
    }

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer =3D recognizer;
            this.decisionNumber =3D 4;
            this.eot =3D DFA4_eot;
            this.eof =3D DFA4_eof;
            this.min =3D DFA4_min;
            this.max =3D DFA4_max;
            this.accept =3D DFA4_accept;
            this.special =3D DFA4_special;
            this.transition =3D DFA4_transition;
        }
        public String getDescription() {
            return "1:1: Tokens : ( ID | LPAREN | LP_SELECT | LP_OTHER
);";
        }
    }
 

_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From rschulz at sonic.net  Wed Jun 27 06:48:04 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 06:48:04 -0700
Subject: [antlr-interest] Odd formatting on Wiki
In-Reply-To: <46821983.3080709@ca.com>
References: <20070627075338.F378011E976@www.antlr.org>
	<46821983.3080709@ca.com>
Message-ID: <200706270648.04485.rschulz@sonic.net>

On Wednesday 27 June 2007 01:02, Jonathan Thomas wrote:
> Temporary fix put in ... look again!

Those plusses??? Dude, use non-breaking spaces (&nbsp;)!


RRS

From rschulz at sonic.net  Wed Jun 27 06:55:35 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 06:55:35 -0700
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
Message-ID: <200706270655.35111.rschulz@sonic.net>

On Wednesday 27 June 2007 06:46, Geoffrey Zhu wrote:
> Does anyone know how to visually display the DFA ANTLR generates?
>
> For example, ANTLR generates the following DFA, but it is just too
> difficult for me to figure out what it is doing.

ANTLworks can show you a graphical representation of the lexer DFA and 
of the choice DFA for individual rules. You have to have the GraphViz 
package installed so ANLTRworks can invoke its "dot" command.


Randall Schulz


> ...
>
> _______________________________________________________
>
> The  information in this email or in any file attached
> hereto is intended only for the personal and confiden-
> tial  use  of  the individual or entity to which it is
> addressed and may contain information that is  propri-
> etary  and  confidential.  If you are not the intended
> recipient of this message you are hereby notified that
> any  review, dissemination, distribution or copying of
> this message is strictly prohibited.  This  communica-
> tion  is  for information purposes only and should not
> be regarded as an offer to sell or as  a  solicitation
> of an offer to buy any financial product. Email trans-
> mission cannot be guaranteed to be  secure  or  error-
> free. P6070214

Oh, yeah???

Please don't send this nonsense. It's meaningless in a public email 
forum.

From gzhu at peak6.com  Wed Jun 27 07:09:17 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 09:09:17 -0500
Subject: [antlr-interest] Visually display the DFA ANTLR generates
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
	<200706270655.35111.rschulz@sonic.net>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D53D@ppi-mail1.chicago.peak6.net>

I just don't know AntlrWorks's fidelity to the actual code. I already
found one case where the ANTLRWorks interpreter works differently from
the actual generated code. Does it read the generated code to build the
graph?

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Wednesday, June 27, 2007 8:56 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Visually display the DFA ANTLR generates

On Wednesday 27 June 2007 06:46, Geoffrey Zhu wrote:
> Does anyone know how to visually display the DFA ANTLR generates?
>
> For example, ANTLR generates the following DFA, but it is just too 
> difficult for me to figure out what it is doing.

ANTLworks can show you a graphical representation of the lexer DFA and
of the choice DFA for individual rules. You have to have the GraphViz
package installed so ANLTRworks can invoke its "dot" command.


Randall Schulz


> ...
>
> _______________________________________________________
>
> The  information in this email or in any file attached hereto is 
> intended only for the personal and confiden- tial  use  of  the 
> individual or entity to which it is addressed and may contain 
> information that is  propri- etary  and  confidential.  If you are not

> the intended recipient of this message you are hereby notified that 
> any  review, dissemination, distribution or copying of this message is

> strictly prohibited.  This  communica- tion  is  for information 
> purposes only and should not be regarded as an offer to sell or as  a

> solicitation of an offer to buy any financial product. Email trans- 
> mission cannot be guaranteed to be  secure  or  error- free. P6070214

Oh, yeah???

Please don't send this nonsense. It's meaningless in a public email
forum.



From rschulz at sonic.net  Wed Jun 27 07:14:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 07:14:23 -0700
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <200706270655.35111.rschulz@sonic.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
	<200706270655.35111.rschulz@sonic.net>
Message-ID: <200706270714.23271.rschulz@sonic.net>

On Wednesday 27 June 2007 06:55, Randall R Schulz wrote:
> On Wednesday 27 June 2007 06:46, Geoffrey Zhu wrote:
> > Does anyone know how to visually display the DFA ANTLR generates?
> >
> > For example, ANTLR generates the following DFA, but it is just too
> > difficult for me to figure out what it is doing.
>
> ANTLworks can show you a graphical representation of the lexer DFA
> and of the choice DFA for individual rules. You have to have the
> GraphViz package installed so ANLTRworks can invoke its "dot"
> command.

By the way, it's worth pointing out that once you've issued the "Show 
Decision DFA" or "Show Tokens DFA" ocmmands and a new tab displaying 
the resulting graph is opened, you can right-click in the tabs produced 
and save the result as EPS (Encapsulated PostScript), a bit-map or DOT. 
With DOT format, which is a textual description that the "dot" command 
uses to produce a graph, you can then edit the file to alter its layout 
options or use it to produce external documentation.

You can also get quite a surprise when seemingly simple rules produce 
grotesque DFAs!


Randall Schulz

From rschulz at sonic.net  Wed Jun 27 07:20:13 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 07:20:13 -0700
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D53D@ppi-mail1.chicago.peak6.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
	<200706270655.35111.rschulz@sonic.net>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D53D@ppi-mail1.chicago.peak6.net>
Message-ID: <200706270720.13540.rschulz@sonic.net>

On Wednesday 27 June 2007 07:09, Geoffrey Zhu wrote:
> I just don't know AntlrWorks's fidelity to the actual code. I already
> found one case where the ANTLRWorks interpreter works differently
> from the actual generated code. Does it read the generated code to
> build the graph?

If ANTLRworks has a deficiency, it is its lack of documentation.

As I learned here yesterday, when acting in its "Intepreter" mode, 
ANTLRworks ignores syntactic predicates. For grammars that include 
them, this makes the interpreter unuseful. And keep in mind that even 
if you do not explicitly write any syntactic predicates, if you enable 
backtracking ANTLR itself will generate syntactic predicates for you.

In these cases, you must use the ANTLRworks debugger to test your 
grammar's behavior. But it is very useful to do so.


And if there's some sort of discrepancy between ANTLRworks and ANTLR, 
it's a bug and either Terence Parr or Jean Bovet will fix it (if you 
report it).


Randall Schulz

From tbrandonau at gmail.com  Wed Jun 27 07:34:11 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 28 Jun 2007 00:34:11 +1000
Subject: [antlr-interest] Antlr 3 Lexer problem
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D4FE@ppi-mail1.chicago.peak6.net>
References: <ce40b1470706251633h41693aaap10ed71c673d722cd@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E2A@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D37E@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2D@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D389@ppi-mail1.chicago.peak6.net>
	<051466DAA0D608439E196797955018D76E2F@wavemachine.temporal-wave.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D449@ppi-mail1.chicago.peak6.net>
	<20070627074405.C1D9911E9EF@www.antlr.org>
	<ebc876d70706270105g34fa00a9u5af24d1f5b415b5f@mail.gmail.com>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D4FE@ppi-mail1.chicago.peak6.net>
Message-ID: <ebc876d70706270734l4df5f682l5fc1006041fef539@mail.gmail.com>

On 6/27/07, Geoffrey Zhu <gzhu at peak6.com> wrote:
> I see. This makes sense. So what do you think of doing the following?
> The DFA ANTLR generates is difficult to decipher in this case, but it
> should work according to your theory? If I let LP_OTHER emit two tokens,
> it should be fine?
>
> ID : ('a'..'z')+;
>
>
> fragment WS : ' ' | '\t' ;
>
> LPAREN    : '(' ;
>
> LP_SELECT : '(' WS* 'select';
>
> LP_OTHER:       '(' WS* ID;
>
>
> prog: (ID|LP_OTHER|LP_SELECT|WS)+ ;
>
>
By default ANTLR does not allow multiple tokens to be emitted, though
it can be modified to do so it is probably easier if you can avoid
that. Something along the lines of Jim's suggestion to use a predicate
seems better, but as Gavin noted and you found it can be tricky to get
ANTLR to actually use your predicate when it thinks the decision is
not syntactically ambiguous. Maybe something like:
LPAREN: '(' ( ('select')=> 'select' {$type = LP_SELECT;} )?;
would work. Though again ANTLR may choose to ignore the predicate.
Maybe using a semantic predicate, or gated semantic predicate would
work, though this would be somewhat annoying to write. Something like:
LP_SELECT: '(' { input.LT(1) == 's' && input.LT(2) == 'e' ... &&
input.LT(6) == 't' }? 'select';
Or you could wrap that up in a matchLT(input, 'select') function. Or
you may need to put this sort of predicate into your LPAREN rule as in
my first suggestion.

Tom.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Brandon
> Sent: Wednesday, June 27, 2007 3:05 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3 Lexer problem
>
> On 6/27/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> > At 09:06 27/06/2007, Geoffrey Zhu wrote:
> >  >The syntactic predicate does not seem to work. The lexer chokes on
> > >exactly the same location 'c' if I pass in "( security".
> >  >
> >  >In mTokens() it still looks ahead only one step to determine what
> > >should e the next token.
> >
> > I think this is another occurrence of the case that Ter claims is by
> > design, but myself and a few others would like to be different:
> > the lexer doesn't do backtracking, it simply fails with
> > NoViableAltExceptions (or the equivalent) -- even when the parent
> > grammar does do backtracking.  Basically once it enters a particular
> > token it's going to either match that token or cause an error; it
> > won't go back and pick a different token.
> >
> I think Ter's argument was that the LL(*) algorithm used in the lexer is
> more powerful than backtracking. However this seems to be a case where
> the LL(*) algorithm falls over.
> If you look at the generated code you can see there is an mTokens rule
> with a comment "// T.g:1:10: ( ID | LPAREN | LP_SELECT )". So ANTLR is
> effectively generating a lexer for the grammar:
>
> MTOKENS
>         :       ID | LPAREN | LP_SELECT
>         ;
>
> fragment
> ID : ('a'..'z')+;
>
> fragment
> LPAREN : '(';
>
> fragment
> LP_SELECT : LPAREN 'select';
>
> For this grammar, ANTLR generates a correct lexer. MTOKENS can only
> return one of ID, LPAREN and LP_SELECT, so once it has seen the '('
> ANTLR only needs to look at the 's' to decide which rule to follow,
> given the 's' MOTKENS must match LP_SELECT or give an error as matching
> LPAREN LP_SELECT is not an option.
> However, don't you really want MTOKENS to be:
> MTOKENS
>         :       (ID | LPAREN | LP_SELECT)+
>         ;
> A lexer does return multiple tokens. Using this rule, ANTLR correctly
> checks for the entire 'select' string before deciding to go with
> LP_SELECT.
> This seems like a bug in ANTLR to me.
>
> Tom.
>
>
>
> _______________________________________________________
>
> The  information in this email or in any file attached
> hereto is intended only for the personal and confiden-
> tial  use  of  the individual or entity to which it is
> addressed and may contain information that is  propri-
> etary  and  confidential.  If you are not the intended
> recipient of this message you are hereby notified that
> any  review, dissemination, distribution or copying of
> this message is strictly prohibited.  This  communica-
> tion  is  for information purposes only and should not
> be regarded as an offer to sell or as  a  solicitation
> of an offer to buy any financial product. Email trans-
> mission cannot be guaranteed to be  secure  or  error-
> free. P6070214
>

From jimi at temporal-wave.com  Wed Jun 27 08:21:47 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Jun 2007 08:21:47 -0700
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <9810200AC8B543FF901772E11C791832@GWB>
References: <200611191412.25438.rschulz@sonic.net><F4DE1246-D25A-4958-B4FC-932BE0B00F0C@classdump.org><44AD051B-4AFC-40CD-98DB-74C0C90E1E1A@wincent.com><200706260547.37458.rschulz@sonic.net>
	<9810200AC8B543FF901772E11C791832@GWB>
Message-ID: <051466DAA0D608439E196797955018D76E37@wavemachine.temporal-wave.com>

The C runtime tracks the error count:

RECOGNIZER->errorCount (in actions)

 and I have attempted to make the default error a bit more obvious just
because when I develop grammars I tend to do the error message last and
can never remember what all the @:-@[] mean with certainty ;-)

To be quite honest though it is just not practical to supply an error
display routine that would be really useful for all cases. I started to
write a generic soruce code line and carat routine for instance and you
soon realize that there is more chance of an error in that routine than
not. So, all developers should expect to override and implement their
own error display routine in any case.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Robin Davies
> Sent: Tuesday, June 26, 2007 11:38 PM
> To: Randall R Schulz; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Exit Status from ANTLR
> 
> > >> I want an exit status from the ANTLR parser generator tool, not
> > >> from the parsers it generates.
> > >
> 
> Although an error count in the runtime would be nice too. At this
> point, I
> can't imagine that anyone is NOT going to have to find the right error
> message function in parsers and/or lexers to override just so that
they
> can
> go ++Error, just so that they can return failures when running
> generated
> grammars.  (Is this a C# runtime thing, or do all runtimes suffer from
> that?)
> 
> 


From rschulz at sonic.net  Wed Jun 27 08:39:05 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 08:39:05 -0700
Subject: [antlr-interest] Using ANTLRWorks DOT Output
Message-ID: <200706270839.05450.rschulz@sonic.net>

Hi,

This is probably for Jean Bovet to answer, but if anyone else knows, 
please chime in.

I have discovered a rule in my grammar whose DFA is immense (owing, I 
think, to a grammar that is specified very minimally leading to a lot 
of ambiguity and my current laziness in just turning on backtracking).

Visualizing the DFA within ANTLRWorks is not too helpful because even 
when the zoom is lowered as much as possible while still being able to 
read the labels, only a fraction of the graph is visible (and I have a 
1600x1200 monitor!).

So I thought I'd start working with the DOT file that ANTLRWorks allows 
you to save. However, I find that when I use the "dot" command to 
render it, it doesn't look like the graph displayed within ANTLRWorks. 
In particular, I notice that the arcs have no arrows and the fonts are 
different.

So the question is, what "dot" options does ANTLRWorks use to render the 
graphs it generates?

Curiously, I thought I'd figure this out myself,and wrote a little 
intermediary shell script to intercept ANTLRWorks' invocations of dot 
and capture the arguments it uses to a log file (and then invoke dot as 
instructed by ANTLRWorks). When I configure ANTLRWorks run this script 
instead of invoke dot directly, the invocations all look like this:

4 arguments:
        "-Tdot"
        "-o"
        "/tmp/GrammarDOTTab50533.out"
        "/tmp/GrammarDOTTab50532.in"


This invocation tells dot to produce DOT-format output. Where / how does 
the image generation happen?


Thanks.


Randall Schulz

From rschulz at sonic.net  Wed Jun 27 09:15:35 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 09:15:35 -0700
Subject: [antlr-interest] =?utf-8?q?Decision_DFA_w/_51_Nodes_=26_133_Arcs_?=
	=?utf-8?q?=E2=80=94_Should_I_Be_Worried=3F?=
Message-ID: <200706270915.35816.rschulz@sonic.net>

Hi,

I'm concerned about what appears to me to be an outsized DFA for a 
particular production in a grammar I'm working on.

As the subject says, this DFA has 51 nodes and 133 arcs (and two accept 
states).

Is this a sign of a potential problem? Or do I just have an invalid 
intuition about typical complexity and efficiency for LL(k) grammar 
DFAs with backtracking?

Should I be looking at elaborating the grammar to reduce the complexity 
of the DFA generated by this production?

Conversely, if I were to turn off backtracking and manually address the 
ambiguity, would I just end up producing a lot of rules of comparable 
complexity to this DFA?

I went systematically through the grammar viewing the decision DFA for 
each production, and all the others are miniscule by comparison.


Thanks.


Randall Schulz

From jaluber at gmx.de  Wed Jun 27 09:43:42 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 27 Jun 2007 18:43:42 +0200
Subject: [antlr-interest] Template application questions
In-Reply-To: <9016D43C-9AAF-49E0-80E0-9DF696ECEB55@cs.usfca.edu>
References: <4681947A.1090301@gmx.de>
	<9016D43C-9AAF-49E0-80E0-9DF696ECEB55@cs.usfca.edu>
Message-ID: <468293BE.6010307@gmx.de>

Terence Parr wrote:
> You could use sem preds after the -> that tests the type of suffix
> matched.  I think input.LA(-1) should do it.

I've changed the rule into:

element
   :   (a=atom|b=block) ebnfSuffix? ->
       { (input.LA(-1) == OPTIONAL) ?
           templateLib.GetInstanceOf("Optional",
                new STAttrMap().Add("name", ($a!=null)?$a.st:$b.st)) :
       (input.LA(-1) == CLOSURE) ?
           templateLib.GetInstanceOf("ZeroOrMore",
                new STAttrMap().Add("name", ($a!=null)?$a.st:$b.st)) :
       (input.LA(-1) == POSITIVE_CLOSURE) ?
           templateLib.GetInstanceOf("OneOrMore",
                new STAttrMap().Add("name", ($a!=null)?$a.st:$b.st)) :
       ($a!=null)?$a.st:$b.st;
       }			
    ;

Basically it says: Which type is the last token? Depending on that, it
will apply a new template on the atom or block, whichever was selected.
Problem is that I have to test if $a or $b are null, but I get the
following error message:

error(117): ANTLR3ToRelaxNGGenerator.g:201:3: missing attribute access
on rule scope: a

How do I solve this problem?

Best regards,
Johannes Luber

P.S.: Terence, are you already back in the USA?

From qwertie256 at gmail.com  Wed Jun 27 10:05:21 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Wed, 27 Jun 2007 11:05:21 -0600
Subject: [antlr-interest] Avoiding warnings without code bloat
Message-ID: <ce40b1470706271005y73478c87i1959fcda30206239@mail.gmail.com>

>  >// Strings
>  >SQ_STRING: '\''! ({true}? ESC_SEQ | ~'\'')* '\''!;
>  >DQ_STRING: '"'!  ({true}? ESC_SEQ | ~'"')* '"'!;
>  >BQ_STRING: '`'!  ({true}? ESC_SEQ | ~'`')* '`'!;
>
> Does ! work in v3 lexers now?  (Maybe I need to pay closer
> attention.)

Whoops! It doesn't seem to work; the Text property returns the whole
matching string, and even modifying the text property ($text = ...)
doesn't seem to have any effect (But I'm using C#, and modifying $text
in a fragment rule).

Why doesn't ANTLR give a warning?

*** BONUS C# code for printing the output of a lexer ***

// Since ANTLRWorks can't debug a lexer, everyone needs code like this
string s = System.Console.ReadLine();
ANTLRStringStream input = new ANTLRStringStream(s);
// Create an ExprLexer that feeds from that stream
ExprLexer lexer = new ExprLexer(input);
// Create a stream of tokens fed by the lexer
CommonTokenStream tokens = new CommonTokenStream(lexer);

IToken t;
while ((t = tokens.LT(1)).Type != ExprLexer.EOF)
{
	Debug.Assert(t.Type == tokens.LA(1));
	System.Console.WriteLine("{0} <{1}>", ExprParser.tokenNames[t.Type], t.Text);
	tokens.Consume();
}

From gzhu at peak6.com  Wed Jun 27 10:48:52 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 12:48:52 -0500
Subject: [antlr-interest] Possible ANTLRWorks Bug
References: <ce40b1470706271005y73478c87i1959fcda30206239@mail.gmail.com>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D67A@ppi-mail1.chicago.peak6.net>

I am not sure if this is a bug. If I run the Debugger, the grammar
window becomes read-only. The only way for me to get out of it is to
close and re-open the file. Is this by design?

_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From matthew.j.diehl at intel.com  Wed Jun 27 11:04:57 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 27 Jun 2007 11:04:57 -0700
Subject: [antlr-interest] Possible ANTLRWorks Bug
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D67A@ppi-mail1.chicago.peak6.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202261876@orsmsx417.amr.corp.intel.com>

ANTLRWorks does not allow you to modify the file while debugging because
changes you make would not be reflected in the debugging session.  It's
very easy to release this lock.  Just press the stop button (looks like
a filled in square) on the debugger, and it will give you control back.
It doesn't let you edit...but it still allows CTRL+Z to work to modify
the file...that is maybe more of a bug since it shouldn't allow anything
to modify the file at all.

Matt

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>bounces at antlr.org] On Behalf Of Geoffrey Zhu
>Sent: Wednesday, June 27, 2007 10:49 AM
>To: antlr-interest at antlr.org
>Subject: [antlr-interest] Possible ANTLRWorks Bug
>
>I am not sure if this is a bug. If I run the Debugger, the grammar
>window becomes read-only. The only way for me to get out of it is to
>close and re-open the file. Is this by design?
>
>_______________________________________________________
>
>The  information in this email or in any file attached
>hereto is intended only for the personal and confiden-
>tial  use  of  the individual or entity to which it is
>addressed and may contain information that is  propri-
>etary  and  confidential.  If you are not the intended
>recipient of this message you are hereby notified that
>any  review, dissemination, distribution or copying of
>this message is strictly prohibited.  This  communica-
>tion  is  for information purposes only and should not
>be regarded as an offer to sell or as  a  solicitation
>of an offer to buy any financial product. Email trans-
>mission cannot be guaranteed to be  secure  or  error-
>free. P6070214

From gzhu at peak6.com  Wed Jun 27 11:07:44 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 13:07:44 -0500
Subject: [antlr-interest] Visually display the DFA ANTLR generates
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net><200706270655.35111.rschulz@sonic.net><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D53D@ppi-mail1.chicago.peak6.net>
	<200706270720.13540.rschulz@sonic.net>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D69F@ppi-mail1.chicago.peak6.net>

For example, for the input "( security" the interpreter works well on
the below grammar, but the ANTLR genereated code chokes on it. I guess
that as long as there are two code bases (ANTLR and WORKS), there are
discrepencies. Maybe Works can employ antlr to do the work. Then there
is no discrepency.

ID : ('a'..'z')+;
fragment WS : ' ' | '\t' ;
LPAREN    : '(' ;
LP_SELECT : '(' WS* 'select';
prog: (ID|LPAREN|LP_SELECT|WS)+ ;
 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Wednesday, June 27, 2007 9:20 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Visually display the DFA ANTLR generates

On Wednesday 27 June 2007 07:09, Geoffrey Zhu wrote:
> I just don't know AntlrWorks's fidelity to the actual code. I already 
> found one case where the ANTLRWorks interpreter works differently from

> the actual generated code. Does it read the generated code to build 
> the graph?

If ANTLRworks has a deficiency, it is its lack of documentation.

As I learned here yesterday, when acting in its "Intepreter" mode,
ANTLRworks ignores syntactic predicates. For grammars that include them,
this makes the interpreter unuseful. And keep in mind that even if you
do not explicitly write any syntactic predicates, if you enable
backtracking ANTLR itself will generate syntactic predicates for you.

In these cases, you must use the ANTLRworks debugger to test your
grammar's behavior. But it is very useful to do so.


And if there's some sort of discrepancy between ANTLRworks and ANTLR, 
it's a bug and either Terence Parr or Jean Bovet will fix it (if you 
report it).


Randall Schulz



_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From rschulz at sonic.net  Wed Jun 27 11:21:28 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 11:21:28 -0700
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D69F@ppi-mail1.chicago.peak6.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
	<200706270720.13540.rschulz@sonic.net>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D69F@ppi-mail1.chicago.peak6.net>
Message-ID: <200706271121.28819.rschulz@sonic.net>

Geoffrey,

- Please do not include Disposition Notification headers in postings to 
lists.
- Please do not include bogus disclaimers in postings to lists.
- Please use standard message quoting marks.

Top-posting isn't too cool, either.


On Wednesday 27 June 2007 11:07, Geoffrey Zhu wrote:
> For example, for the input "( security" the interpreter works well on
> the below grammar, but the ANTLR genereated code chokes on it. I
> guess that as long as there are two code bases (ANTLR and WORKS),
> there are discrepencies. Maybe Works can employ antlr to do the work.
> Then there is no discrepency.
>
> ID : ('a'..'z')+;
> fragment WS : ' ' | '\t' ;
> LPAREN    : '(' ;
> LP_SELECT : '(' WS* 'select';
> prog: (ID|LPAREN|LP_SELECT|WS)+ ;

Are you using backtracking in your grammar? Does ANTLRWorks show 
synthesized syntactic predicates in the racetrack diagrams for your 
productions?

What do you mean by "chokes?"

Of course, it's possible there are bugs, but I do believe that 
ANTLRWorks is does replicates the code of ANTLR itself and apart from 
the inherent limitations of the ANTLRWorks Interpreter, it (the 
debugger, i.e.) should be fully consistent with the behavior of parsers 
running stand-alone.

Again, if not, put together a repeatable, self-contained example and 
submit it as a bug report.


Randall Schulz

From rschulz at sonic.net  Wed Jun 27 11:32:05 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 11:32:05 -0700
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <200706271121.28819.rschulz@sonic.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net>
	<99F81FFD0EA54E4DA8D4F1BFE272F34104F2D69F@ppi-mail1.chicago.peak6.net>
	<200706271121.28819.rschulz@sonic.net>
Message-ID: <200706271132.05437.rschulz@sonic.net>

On Wednesday 27 June 2007 11:21, Randall R Schulz wrote:
> ...
>
> Of course, it's possible there are bugs, but I do believe that
> ANTLRWorks is does replicates the code of ANTLR itself and apart from
> the inherent limitations of the ANTLRWorks Interpreter, it (the
> debugger, i.e.) should be fully consistent with the behavior of
> parsers running stand-alone.

I see my editing ended up mangling that sentence. What I meant was this:

I don't believe ANTLRWorks replicates independently code that comprises 
ANTLR proper, but rather relies on the same code base and thus should 
exhibit consistent behavior during parsing.


> Again, if not, put together a repeatable, self-contained example and
> submit it as a bug report.


Randall Schulz

From gzhu at peak6.com  Wed Jun 27 11:53:26 2007
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Wed, 27 Jun 2007 13:53:26 -0500
Subject: [antlr-interest] Visually display the DFA ANTLR generates
References: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D514@ppi-mail1.chicago.peak6.net><200706270720.13540.rschulz@sonic.net><99F81FFD0EA54E4DA8D4F1BFE272F34104F2D69F@ppi-mail1.chicago.peak6.net>
	<200706271121.28819.rschulz@sonic.net>
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F341050996F6@ppi-mail1.chicago.peak6.net>

Unfortunately  the mail server does these things automatically.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Wednesday, June 27, 2007 1:21 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Visually display the DFA ANTLR generates

Geoffrey,

- Please do not include Disposition Notification headers in postings to
lists.
- Please do not include bogus disclaimers in postings to lists.
- Please use standard message quoting marks.

Top-posting isn't too cool, either.


On Wednesday 27 June 2007 11:07, Geoffrey Zhu wrote:
> For example, for the input "( security" the interpreter works well on 
> the below grammar, but the ANTLR genereated code chokes on it. I guess

> that as long as there are two code bases (ANTLR and WORKS), there are 
> discrepencies. Maybe Works can employ antlr to do the work.
> Then there is no discrepency.
>
> ID : ('a'..'z')+;
> fragment WS : ' ' | '\t' ;
> LPAREN    : '(' ;
> LP_SELECT : '(' WS* 'select';
> prog: (ID|LPAREN|LP_SELECT|WS)+ ;

Are you using backtracking in your grammar? Does ANTLRWorks show
synthesized syntactic predicates in the racetrack diagrams for your
productions?

What do you mean by "chokes?"

Of course, it's possible there are bugs, but I do believe that
ANTLRWorks is does replicates the code of ANTLR itself and apart from
the inherent limitations of the ANTLRWorks Interpreter, it (the
debugger, i.e.) should be fully consistent with the behavior of parsers
running stand-alone.

Again, if not, put together a repeatable, self-contained example and
submit it as a bug report.


Randall Schulz



_______________________________________________________=0A=
=0A=
The  information in this email or in any file attached=0A=
hereto is intended only for the personal and confiden-=0A=
tial  use  of  the individual or entity to which it is=0A=
addressed and may contain information that is  propri-=0A=
etary  and  confidential.  If you are not the intended=0A=
recipient of this message you are hereby notified that=0A=
any  review, dissemination, distribution or copying of=0A=
this message is strictly prohibited.  This  communica-=0A=
tion  is  for information purposes only and should not=0A=
be regarded as an offer to sell or as  a  solicitation=0A=
of an offer to buy any financial product. Email trans-=0A=
mission cannot be guaranteed to be  secure  or  error-=0A=
free. P6070214

From open.zone at virgin.net  Wed Jun 27 12:21:46 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 27 Jun 2007 20:21:46 +0100
Subject: [antlr-interest] Visually display the DFA ANTLR generates
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F34104F2D53D@ppi-mail1.chicago.peak6.net>
Message-ID: <001001c7b8f0$684f2e70$c704a8c0@hercules>

Hi,

> I just don't know AntlrWorks's fidelity to the actual code.

AntlrWorks uses ANTLR.

> I 
> already found one case where the ANTLRWorks interpreter works 
> differently from the actual generated code. Does it read the 
> generated code to build the graph?

It uses ANTLR for it's interpretation and detailed grammar analysis. The
difference in behaviour is *documented* behaviour when using the ANTLR
interpreter (directly or within AntlrWorks).

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Randall R Schulz
> Sent: Wednesday, June 27, 2007 8:56 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Visually display the DFA ANTLR generates
> 
> On Wednesday 27 June 2007 06:46, Geoffrey Zhu wrote:
> > Does anyone know how to visually display the DFA ANTLR generates?
> >
> > For example, ANTLR generates the following DFA, but it is just too
> > difficult for me to figure out what it is doing.
> 
> ANTLworks can show you a graphical representation of the 
> lexer DFA and of the choice DFA for individual rules. You 
> have to have the GraphViz package installed so ANLTRworks can 
> invoke its "dot" command.
> 
> 
> Randall Schulz
> 
> 
> > ...
> >
> > _______________________________________________________
> >
> > The  information in this email or in any file attached hereto is
> > intended only for the personal and confiden- tial  use  of  the 
> > individual or entity to which it is addressed and may contain 
> > information that is  propri- etary  and  confidential.  If 
> you are not
> 
> > the intended recipient of this message you are hereby notified that
> > any  review, dissemination, distribution or copying of this 
> message is
> 
> > strictly prohibited.  This  communica- tion  is  for information
> > purposes only and should not be regarded as an offer to 
> sell or as  a
> 
> > solicitation of an offer to buy any financial product. Email trans-
> > mission cannot be guaranteed to be  secure  or  error- 
> free. P6070214
> 
> Oh, yeah???
> 
> Please don't send this nonsense. It's meaningless in a public 
> email forum.
> 
> 


From tcurdt at vafer.org  Wed Jun 27 13:44:14 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Wed, 27 Jun 2007 22:44:14 +0200
Subject: [antlr-interest] ambigous lexer tokens
Message-ID: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>

I would like to write a grammar for the following output:

  drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
  -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006  
ASMContentHandler.Rule.html

My first naive try was

  grammar test;

  prog	
	: (line)+ EOF
	;
	
  line
	: TYPE MODS WS INT WS NAME WS NAME WS INT WS NAME WS (HOUR | YEAR)  
WS NAME NEWLINE
	;
	
  TYPE
	: ['d' | '-' ]
	;

  MODS
	: (['r' | 'w' | 'x' | '-' ]){9}
	;
	
  INT
	: ['0'..'9']+
	;

  NAME
	: ['0'..'9' | 'a'-'z' | 'A'..'Z' | '.' | '-']+	
	;

  HOUR
	: (INT){2} ':' (INT){2}
	;

  YEAR
	: (INT){4}
	;
	
  NEWLINE
	: '\r'? '\n'
     	;

  WS
	: (' '|'\t'|'\n'|'\r')+ { skip(); }
	;

Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/YEAR)  
for the lexer are ambiguous.
How should such a grammar look like? Pointers?

cheers
--
Torsten

From rschulz at sonic.net  Wed Jun 27 15:58:56 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 15:58:56 -0700
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
Message-ID: <200706271558.56212.rschulz@sonic.net>

On Wednesday 27 June 2007 13:44, Torsten Curdt wrote:
> I would like to write a grammar for the following output:
>
>   drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
>   -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006
> ASMContentHandler.Rule.html
>
> My first naive try was
>
>   grammar test;
>
>   prog
>
> 	: (line)+ EOF
> 	;
>
>   line
> 	: TYPE MODS WS INT WS NAME WS NAME WS INT WS NAME WS (HOUR | YEAR)
>
> WS NAME NEWLINE
> 	;
>
>   TYPE
> 	: ['d' | '-' ]
> 	;

There are several other file types:

- plain file
d directory
p pipe (named pipe / FIFO)
s socket
l symbolic link
b block special (e.g., a disk or disk partition)
c character special (e.g., a (pseudo-) tty or serial port)


>   MODS
> 	: (['r' | 'w' | 'x' | '-' ]){9}
> 	;

You can strengthen the portions that recognize the modes by observing 
that they come in groups of three and that each position has either a 
permission character (if granted) or a dash (if not). The owner and 
group 'x' bits may be replaced by a capital S to indicate set user or 
set group ID, resp.

Keep in mind, too, that the last character has an extra value beyond the 
usual 'x' permission bit. Sticky executables (technically obsolescent) 
or directories are displayed with a 't' in place of their word execute 
bit.

On some systems that support ACLs, the presence of ACLs that don't fit 
the classic Unix model will cause a plus to be added to the mode 
string.


>   ...
>   NAME
> 	: ['0'..'9' | 'a'-'z' | 'A'..'Z' | '.' | '-']+
> 	;

Technically, on Unix (-like) systems, which this seems to be, the only 
character that may not be part of a file name is a NUL byte. Perhaps 
more to the point, you'll have to know about precisely how the "ls" 
command(s) you're dealing with present file names, especially those 
with non-ASCII or non-printing characters in their names, all of which 
are possible.


>   ...
>
> Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/YEAR)
> for the lexer are ambiguous.
>
> How should such a grammar look like? Pointers?
>
> cheers
> --
> Torsten


I'm not sure what your overall goal is, but perhaps using the "getfacl" 
command, if available on your system, would present you with a more 
tractable format?


Good luck.


Randall Schulz

From rschulz at sonic.net  Wed Jun 27 16:26:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 16:26:21 -0700
Subject: [antlr-interest] Reloading Externally Edited Files inANTLRWorks?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202216911@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C202216911@orsmsx417.amr.corp.intel.com>
Message-ID: <200706271626.21784.rschulz@sonic.net>

On Monday 25 June 2007 15:05, Diehl, Matthew J wrote:
> I'm using Java 1.6...that might make a difference?...

I've got both 1.5.0_10 and 1.6.0-b105 available on this system, but have 
been running ANTLRWorks on the 1.5 JVM.

And I've confirmed that ANTLRWorks is oblivious to externally applied 
changes to the files it has open.

And it happens when I use Java 1.6, as well.

Perhaps it's Linux-specific? I'm on SuSE Linux 10.0, which uses kernel 
2.6.13. If it might matter, my file systems are XFS.


Randall Schulz

From rschulz at sonic.net  Wed Jun 27 16:34:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 27 Jun 2007 16:34:52 -0700
Subject: [antlr-interest] Reloading Externally Edited Files inANTLRWorks?
In-Reply-To: <200706271626.21784.rschulz@sonic.net>
References: <A10CD303B51F814DB568A8AAF02174C202216911@orsmsx417.amr.corp.intel.com>
	<200706271626.21784.rschulz@sonic.net>
Message-ID: <200706271634.52805.rschulz@sonic.net>

On Wednesday 27 June 2007 16:26, Randall R Schulz wrote:
> On Monday 25 June 2007 15:05, Diehl, Matthew J wrote:
> > I'm using Java 1.6...that might make a difference?...
>
> I've got both 1.5.0_10 and 1.6.0-b105 available on this system, but
> have been running ANTLRWorks on the 1.5 JVM.
>
> And I've confirmed that ANTLRWorks is oblivious to externally applied
> changes to the files it has open.
>
> And it happens when I use Java 1.6, as well.
>
> Perhaps it's Linux-specific? I'm on SuSE Linux 10.0, which uses
> kernel 2.6.13. If it might matter, my file systems are XFS.

I might add that both IDEA and jEdit never fail to detect external 
changes to files they have open.


Randall Schulz

From jonathan.thomas at ca.com  Wed Jun 27 17:13:36 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Thu, 28 Jun 2007 10:13:36 +1000
Subject: [antlr-interest] C# target doesn't do numbers
In-Reply-To: <468249BA.5050402@comp.cz>
References: <46822BAF.7010106@comp.cz>	<12AC60E3-A453-453B-BBAA-FF6B005E78A9@wincent.com>	<46823D1C.1080504@comp.cz>	<200706271051.l5RApTd9005457@vega.inec.cz>
	<468249BA.5050402@comp.cz>
Message-ID: <4682FD30.2020008@ca.com>

Did you search from _within_ the wiki??
I just did a 'fragment' search and it returned a bunch of references 
from the wiki - I just tried the first five of these and none give me a 404.
In that list the 7th match is "5 minute introduction ..." Being new to 
it like yourself at _least_ you give that page a read, I'd hope!

Vaclav Barta said the following on 27/06/2007 9:27 PM:
> Gavin Lambert wrote:
>> At 22:34 27/06/2007, Vaclav Barta wrote:
>>  >Err, what is a fragment rule and how do I make it? My ANTLR
>>  >knowledge is rather dismal... What I tried was removing
>> Perhaps you should read the ANTLR book -- or the website :)
> Well, as for the book, I'd have to buy it first, which is expensive 
> and inconvenient - I'll probably get it eventually, but this project 
> won't wait for my studies. As for the website, I find it rather 
> difficult to navigate; when I search for "fragment", for example, I 
> get a Wiki page and a bunch of posts on antlr-interest, and the usual 
> result of my searches is a 404... I'd prefer something more organized 
> and authoritative, but well, I suppose that's what the book is for...
>
>> A fragment rule is easily created -- just put the word 'fragment' in 
> ...
>> recognise Digits, only Integers, you had a failed match.  Making it a 
>> fragment removes it as a top-level candidate and the lexer will 
>> output an Integer instead.
> Ah, now it makes sense - thanks.
>
>     Bye
>         Vasek
>
>
>

From tcurdt at vafer.org  Wed Jun 27 17:18:09 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Thu, 28 Jun 2007 02:18:09 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <200706271558.56212.rschulz@sonic.net>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<200706271558.56212.rschulz@sonic.net>
Message-ID: <5371806C-32D2-4C0A-A477-4DDC7DD1A7F9@vafer.org>

Hey Randall,

>> Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/YEAR)
>> for the lexer are ambiguous.
>>
>> How should such a grammar look like? Pointers?
>
>
> I'm not sure what your overall goal is, but perhaps using the  
> "getfacl"
> command, if available on your system, would present you with a more
> tractable format?

Thanks for you comments. All valid points - but you got the focus  
wrong :)
Of course this is just a simplified (naive) try. But I was more  
wondering about the antlr grammar aspects. Any comments on that?

cheers
--
Torsten





From jonathan.thomas at ca.com  Wed Jun 27 17:26:22 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Thu, 28 Jun 2007 10:26:22 +1000
Subject: [antlr-interest] Odd formatting on Wiki
In-Reply-To: <200706270648.04485.rschulz@sonic.net>
References: <20070627075338.F378011E976@www.antlr.org>	<46821983.3080709@ca.com>
	<200706270648.04485.rschulz@sonic.net>
Message-ID: <4683002E.3060308@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070628/3378f1e0/attachment.html 

From yavin at ogre4j.org  Wed Jun 27 23:57:43 2007
From: yavin at ogre4j.org (Kai)
Date: Thu, 28 Jun 2007 08:57:43 +0200
Subject: [antlr-interest] Generation of grammar doc
Message-ID: <46835BE7.40004@ogre4j.org>

Hello,

I found on this list posts about generating grammar documentation with
the ANT task. Is there another way? The command line option of
org.antlr.Tool give me no option for generating the documentation.

Regards, kai
-- 
http://www.ogre4j.org

From win at wincent.com  Thu Jun 28 02:13:01 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 28 Jun 2007 11:13:01 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
Message-ID: <E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>

El 27/6/2007, a las 22:44, Torsten Curdt escribi?:

> I would like to write a grammar for the following output:
>
>  drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
>  -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006  
> ASMContentHandler.Rule.html
>
> Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/YEAR)  
> for the lexer are ambiguous.
> How should such a grammar look like? Pointers?

I think you have a number of options:

1. Given that many of the tokens look the same, don't try to  
differentiate between them in the lexer. Instead handle everything in  
the parser.

2. Use predicates in the lexer to turn alternatives on and off  
depending on which "column" you're in (ie. make a context-sensitive  
lexer).

3. Don't use ANTLR for this task. The input is so limited and regular  
that it may be quicker to just write something by hand.

I personally would go with "3" in this case because I think you are  
much more likely to come up with a correct parser by hand; ANTLR is a  
very complex tool and it can deviate from your expectations in  
incredibly subtle and hard-to-understand ways.

Cheers,
Wincent


From tcurdt at vafer.org  Thu Jun 28 02:54:20 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Thu, 28 Jun 2007 11:54:20 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
Message-ID: <E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>


On 28.06.2007, at 11:13, Wincent Colaiuta wrote:

> El 27/6/2007, a las 22:44, Torsten Curdt escribi?:
>
>> I would like to write a grammar for the following output:
>>
>>  drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
>>  -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006  
>> ASMContentHandler.Rule.html
>>
>> Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/ 
>> YEAR) for the lexer are ambiguous.
>> How should such a grammar look like? Pointers?
>
> I think you have a number of options:
>
> 1. Given that many of the tokens look the same, don't try to  
> differentiate between them in the lexer. Instead handle everything  
> in the parser.

OK

> 2. Use predicates in the lexer to turn alternatives on and off  
> depending on which "column" you're in (ie. make a context-sensitive  
> lexer).

Could you give an example how that would look like?

> 3. Don't use ANTLR for this task. The input is so limited and  
> regular that it may be quicker to just write something by hand.

Was tempted as it should be easy to do with just a regular  
expression. But I wanted to see if antlr would be suitable for it too.

> I personally would go with "3" in this case because I think you are  
> much more likely to come up with a correct parser by hand; ANTLR is  
> a very complex tool and it can deviate from your expectations in  
> incredibly subtle and hard-to-understand ways.

I used v2 before ...but in that case the lexing was much more obvious.

Thanks a lot for your input.

cheers
--
Torsten



From win at wincent.com  Thu Jun 28 03:20:28 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 28 Jun 2007 12:20:28 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>
Message-ID: <9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>

El 28/6/2007, a las 11:54, Torsten Curdt escribi?:

> On 28.06.2007, at 11:13, Wincent Colaiuta wrote:
>
>> El 27/6/2007, a las 22:44, Torsten Curdt escribi?:
>>
>>> I would like to write a grammar for the following output:
>>>
>>>  drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
>>>  -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006  
>>> ASMContentHandler.Rule.html
>>>
>>> Of course that means that the tokens (TYPE/MODS/INT/NAME/HOUR/ 
>>> YEAR) for the lexer are ambiguous.
>>> How should such a grammar look like? Pointers?
>>
>> I think you have a number of options:
>>
>> 1. Given that many of the tokens look the same, don't try to  
>> differentiate between them in the lexer. Instead handle everything  
>> in the parser.
>
> OK
>
>> 2. Use predicates in the lexer to turn alternatives on and off  
>> depending on which "column" you're in (ie. make a context- 
>> sensitive lexer).
>
> Could you give an example how that would look like?

Well, here's one (untested) idea: one way might be to modify your WS  
rule to increment a "column" counter whenever a run of spaces is  
seen; you'd have to set up the column counter in your @lexer::members  
section (exactly how you set up and initialize that variable is  
dependent on your target language):

   WS : ' '+ { column++; };

And then modify your NEWLINE rule to reset the column counter:

   NEWLINE : '\r'? '\n' { column = 0; };

Now you can prefix your rules with gated semantic predicates,  
effectively turning them on/off depending on the input column; for  
example, you only want your INT rule to be applied in columns 4 and 10:

   INT : { column == 4 || column == 10 }?=> '0'..'9'+ ;

And so on... Obviously if columns are whitespace delimited you need  
to roll your "TYPE" and "MODS" rules into one, and also remember that  
your final column (the file name) may actually contain whitespace so  
to scan filenames you probably want a rule like:

   FILENAME : { column > 8 }?=> ~('\n' | '\r')+ ;

Or alternatively, make your WS rule only apply in the leftmost  
columns and apply your FILENAME rule in column 9 only:

   WS : { column < 9 }?=> ' '+ { column++; };
   FILENAME : { column == 9 }?=> ~('\n' | '\r')+ ;

So I think this could be made to work (although not sure how you'd  
handle filenames with embedded newlines), but it starts to look  
pretty complex (look at the source code for the generated lexer), and  
in that case it seems easier/simpler to just write a simple parser by  
hand...

Cheers,
Wincent


From ens06jpk at cs.umu.se  Thu Jun 28 03:26:30 2007
From: ens06jpk at cs.umu.se (Janusz Polok)
Date: Thu, 28 Jun 2007 12:26:30 +0200
Subject: [antlr-interest] Java parser, Lexer
Message-ID: <1183026390.46838cd60a4ad@puss.acc.umu.se>



-- 
Hi, 
I'm new in ANTLR. Does someone have a Lexer for Java sourcecode?
I need to create a AST from java-code file and analyse it complexity.
If someone can help me I will be very thankful.
Regards 
janusz

From win at wincent.com  Thu Jun 28 03:31:40 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 28 Jun 2007 12:31:40 +0200
Subject: [antlr-interest] Java parser, Lexer
In-Reply-To: <1183026390.46838cd60a4ad@puss.acc.umu.se>
References: <1183026390.46838cd60a4ad@puss.acc.umu.se>
Message-ID: <AEBEA907-D9B5-4911-B5A1-B24419BFE10D@wincent.com>

El 28/6/2007, a las 12:26, Janusz Polok escribi?:

> Hi,
> I'm new in ANTLR. Does someone have a Lexer for Java sourcecode?
> I need to create a AST from java-code file and analyse it complexity.
> If someone can help me I will be very thankful.
> Regards
> janusz

Check out the examples archive downloadable from:

   <http://antlr.org/download.html>

Cheers,
Wincent


From reuter at ipd.uka.de  Thu Jun 28 03:51:34 2007
From: reuter at ipd.uka.de (Juergen Reuter)
Date: Thu, 28 Jun 2007 12:51:34 +0200 (CEST)
Subject: [antlr-interest] How to resolve the left-recursion problem?
Message-ID: <Pine.LNX.4.64.0706281231240.20393@i41pc36.ipd.uni-karlsruhe.de>

Hi all,

I have basically the same left-recursion problem as already discussed on 
this list (see 
http://www.antlr.org/pipermail/antlr-interest/2007-June/021061.html). 
Unfortunately, the "NAME ('.'^ NAME)*" trick does not work for me, as 
antlr-3.0 generates Java code, that does not compile.  This is a bug, 
right?

You should be able to reproduce the weired behavior with the following 
sample grammar:

========

grammar Grammar;
options {k=2; backtrack=true; memoize=true; output=AST;}

tokens {
   Import;
}

importDeclaration
 	:	'import' (packageReference '.' '*') ';'
         ->
         ^(Import Identifier*)
 	;

packageReference
     :    Identifier ('.'^ Identifier)*
     ;

Identifier
     :   Letter+
     ;

fragment
Letter
     :  '\u0041'..'\u005a' | '\u005f'
     ;

========

antlr-3.0 then generates the file GrammarParser.java that contains the 
following lines, starting at line 119:

                 // Grammar.g:11:18: ( Identifier )*
                 while (  ) {
                     adaptor.addChild(root_1, adaptor.create(Identifier, "Identifier"));

                 }

Consequently, javac then throws the following error at me:

GrammarParser.java:120: illegal start of expression
                 while (  ) {
                          ^
1 error

So, my question is, is there any working solution for handling 
left-recursion problem?  Or, as a workaround, what would be the correct 
while condition that I should insert into the generated code?

Many thanks for any advice!

Greetings,
Juergen



On Tue Jun 5 2007, Robin Davies wrote:

> > attribute_expression
> >  : NAME | dot_operator_exp
> >  ;
> >
> > dot_operator_exp
> >  : attribute_expression DOT NAME
> >  ;
> 
> 
> The generic way to deal with left-recursive structures is to convert 
> them to match the right side with EBNF loops: "(something)*". See page 
> 275 of the PDF manual for more details.
> 
> attribute_expression
>       :      NAME  ('.' NAME) *
>       ;
> 
> After using LALR grammars this seemed very unnatural, at first. But, 
> after gradually mind-shifting to the LL mind-set, this now seems very 
> natural. And very easy to deal with when you get to actually processing 
> the grammar! To convert this to AST, for example, you write:
> 
> attribute_expression
>       :      NAME  ('.'^ NAME) *
>       ;
> 
> and you will get exactly the tree that you want: a left-recursive tree
> structure.


From reuter at ipd.uka.de  Thu Jun 28 03:58:54 2007
From: reuter at ipd.uka.de (Juergen Reuter)
Date: Thu, 28 Jun 2007 12:58:54 +0200 (CEST)
Subject: [antlr-interest] Java parser, Lexer
In-Reply-To: <AEBEA907-D9B5-4911-B5A1-B24419BFE10D@wincent.com>
References: <1183026390.46838cd60a4ad@puss.acc.umu.se>
	<AEBEA907-D9B5-4911-B5A1-B24419BFE10D@wincent.com>
Message-ID: <Pine.LNX.4.64.0706281255000.20393@i41pc36.ipd.uni-karlsruhe.de>


I noticed that http://www.antlr.org/download/examples-v3.tar.gz contains a 
sample grammar for Java 1.5 in the directory examples-v3/java/java.  The 
grammar is not ready to create an AST, but may be a good starting point 
for you.

Greetings,
Juergen

On Thu, 28 Jun 2007, Wincent Colaiuta wrote:

> El 28/6/2007, a las 12:26, Janusz Polok escribi?:
>
>> Hi,
>> I'm new in ANTLR. Does someone have a Lexer for Java sourcecode?
>> I need to create a AST from java-code file and analyse it complexity.
>> If someone can help me I will be very thankful.
>> Regards
>> janusz
>
> Check out the examples archive downloadable from:
>
>  <http://antlr.org/download.html>
>
> Cheers,
> Wincent
>

From tcurdt at vafer.org  Thu Jun 28 04:54:37 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Thu, 28 Jun 2007 13:54:37 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>
	<9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
Message-ID: <497A9EBE-8C83-49D4-9D64-E6795569C6A3@vafer.org>

>>> 2. Use predicates in the lexer to turn alternatives on and off  
>>> depending on which "column" you're in (ie. make a context- 
>>> sensitive lexer).
>>
>> Could you give an example how that would look like?
>
> Well, here's one (untested) idea: one way might be to modify your  
> WS rule to increment a "column" counter whenever a run of spaces is  
> seen; you'd have to set up the column counter in your  
> @lexer::members section (exactly how you set up and initialize that  
> variable is dependent on your target language):
>
>   WS : ' '+ { column++; };
>
> And then modify your NEWLINE rule to reset the column counter:
>
>   NEWLINE : '\r'? '\n' { column = 0; };
>
> Now you can prefix your rules with gated semantic predicates,  
> effectively turning them on/off depending on the input column; for  
> example, you only want your INT rule to be applied in columns 4 and  
> 10:
>
>   INT : { column == 4 || column == 10 }?=> '0'..'9'+ ;
>
> And so on... Obviously if columns are whitespace delimited you need  
> to roll your "TYPE" and "MODS" rules into one, and also remember  
> that your final column (the file name) may actually contain  
> whitespace so to scan filenames you probably want a rule like:
>
>   FILENAME : { column > 8 }?=> ~('\n' | '\r')+ ;
>
> Or alternatively, make your WS rule only apply in the leftmost  
> columns and apply your FILENAME rule in column 9 only:
>
>   WS : { column < 9 }?=> ' '+ { column++; };
>   FILENAME : { column == 9 }?=> ~('\n' | '\r')+ ;
>
> So I think this could be made to work (although not sure how you'd  
> handle filenames with embedded newlines), but it starts to look  
> pretty complex (look at the source code for the generated lexer),  
> and in that case it seems easier/simpler to just write a simple  
> parser by hand...

Will do a handcrafted parser ...but still thanks for explaining. Was  
enlightened :)

cheers
--
Torsten



From antlr at mirality.co.nz  Thu Jun 28 05:25:03 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 29 Jun 2007 00:25:03 +1200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>
	<9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
Message-ID: <20070628122512.C236311EAE9@www.antlr.org>

At 22:20 28/06/2007, Wincent Colaiuta wrote:
 >Well, here's one (untested) idea: one way might be to modify 
your
 >WS rule to increment a "column" counter whenever a run of spaces 

 >is seen; you'd have to set up the column counter in your
 >@lexer::members section (exactly how you set up and initialize
 >that variable is dependent on your target language):
 >
 >   WS : ' '+ { column++; };

Actually, I'm pretty sure that v3 tracks the column for you, so 
there's no need to do it manually.  How you get hold of it varies 
by target language, though, but it's usually a property/field of 
the lexer class, I think.

In fact I vaguely remember there being an example script for a 
column-sensitive language (Fortran, maybe?  Not sure) either in 
the v3 examples bundle or on the Wiki.

(Sorry for being so vague; it's after midnight.)


From win at wincent.com  Thu Jun 28 05:48:21 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 28 Jun 2007 14:48:21 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <200706281225.l5SCPBOg024333@s69819.wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org>
	<9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
	<200706281225.l5SCPBOg024333@s69819.wincent.com>
Message-ID: <8C646C3B-0555-4F3A-9BFB-E86E755DF360@wincent.com>

El 28/6/2007, a las 14:25, Gavin Lambert escribi?:

> At 22:20 28/06/2007, Wincent Colaiuta wrote:
> >Well, here's one (untested) idea: one way might be to modify your
> >WS rule to increment a "column" counter whenever a run of spaces
> >is seen; you'd have to set up the column counter in your
> >@lexer::members section (exactly how you set up and initialize
> >that variable is dependent on your target language):
> >
> >   WS : ' '+ { column++; };
>
> Actually, I'm pretty sure that v3 tracks the column for you, so  
> there's no need to do it manually.  How you get hold of it varies  
> by target language, though, but it's usually a property/field of  
> the lexer class, I think.

I didn't mean "column" in that sense (number of characters) but in  
the sense that his input has multiple vertical "columns" separated by  
whitespace:

col:   1            2  3       4         5   6   7  8     9
        drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..

Cheers,
Wincent


From yavin at ogre4j.org  Thu Jun 28 05:57:57 2007
From: yavin at ogre4j.org (Kai)
Date: Thu, 28 Jun 2007 14:57:57 +0200
Subject: [antlr-interest] Generation of grammar doc
In-Reply-To: <46835BE7.40004@ogre4j.org>
References: <46835BE7.40004@ogre4j.org>
Message-ID: <4683B055.5090501@ogre4j.org>

Nobody reading this list who can help me?

Kai schrieb:
> Hello,
> 
> I found on this list posts about generating grammar documentation with
> the ANT task. Is there another way? The command line option of
> org.antlr.Tool give me no option for generating the documentation.
> 
> Regards, kai

-- 
http://www.ogre4j.org

From ruth.karl at gmx.de  Thu Jun 28 07:55:43 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Thu, 28 Jun 2007 16:55:43 +0200
Subject: [antlr-interest]  Why do html comments ruin my grammar? ;-)
In-Reply-To: <4683B055.5090501@ogre4j.org>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
Message-ID: <4683CBEF.6020003@gmx.de>

Hello out there, I need some help....

i have been spending hours to find a way to exclude html comments from 
further analysis with my jsp parser.
But when I add the lexer rule

HTMLCOMMENT    :    '<!--' ( options {greedy=false;} : . )* '-->' 
{$channel=HIDDEN;}    ;

to my grammar (see attachment), the interpreter in ANTLRworks will start 
to see '<!'  (like in '<!DOCTYPE html ...') as part of a TEXT item, even 
though TEXT is defined as

TEXT          options {greedy=false;}
          :    
(~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r'))+
          ;

which is confusing not only me but the parser as well... ;-)


For the same reason, adding the HTMLCOMMENT lexer rule also causes 
problems with the generated C# (!) code:

a MismatchedTokenException will be thrown at mHTMLCOMMENT() method in 
the lexer class when it comes to the line
            Match("<!--");

I thought I should somehow add a backtracking option and an exception 
handling there, but I could not find out how... (backtracking option 
does not seem to be allowed...???)



I would really appreciate any kind of help, thanks a lot in advance!
Ruth


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: JSP.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070628/c29eb673/attachment-0001.pl 

From jimi at temporal-wave.com  Thu Jun 28 08:10:34 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 08:10:34 -0700
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76E3E@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> 
> > I would like to write a grammar for the following output:
> >
> >  drwxr-xr-x   23 tcurdt  tcurdt    782 Jun 24 22:54 ..
> >  -rw-r--r--    1 tcurdt  tcurdt  18545 Nov  1  2006
> > ASMContentHandler.Rule.html


> I think you have a number of options:
>

While I agree with this:
 
> 1. Given that many of the tokens look the same, don't try to
> differentiate between them in the lexer. Instead handle everything in
> the parser.
>

And this (unless it is just a learning exercise):
 
> 3. Don't use ANTLR for this task. The input is so limited and regular
> that it may be quicker to just write something by hand.
>

I cannot agree with this:

> ANTLR is a very complex tool and it can deviate from your expectations
in
> incredibly subtle and hard-to-understand ways.

But you cannot just go barging in on it - first you have to learn what
the expectations are. The tool is a complicated to thing to produce, but
once you have your head around a few concepts it is remarkably easy to
use.

Jim

From jimi at temporal-wave.com  Thu Jun 28 08:18:02 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 08:18:02 -0700
Subject: [antlr-interest] How to resolve the left-recursion problem?
In-Reply-To: <Pine.LNX.4.64.0706281231240.20393@i41pc36.ipd.uni-karlsruhe.de>
References: <Pine.LNX.4.64.0706281231240.20393@i41pc36.ipd.uni-karlsruhe.de>
Message-ID: <051466DAA0D608439E196797955018D76E40@wavemachine.temporal-wave.com>

Juergen,

This does look like a bug, but this is actually because of this rule:

importDeclaration
  	:	'import' (packageReference '.' '*') ';'
          ->
          ^(Import Identifier*)
  	;

You are trying to rewrite Identifer and that is not there. I suspect
this is your problem.

You want:

->^(Import packageReference)

The bug is that the tool is awaiting the great error/warning message
upgrade that will arrive when the ANTLR3 parser is written in ANTLR3
:-), which will then tell you about this (probably ;-)).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Juergen Reuter
> Sent: Thursday, June 28, 2007 3:52 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to resolve the left-recursion
> problem?
> 
> Hi all,
> 
> I have basically the same left-recursion problem as already discussed
> on
> this list (see
> http://www.antlr.org/pipermail/antlr-interest/2007-
> June/021061.html).
> Unfortunately, the "NAME ('.'^ NAME)*" trick does not work for me, as
> antlr-3.0 generates Java code, that does not compile.  This is a bug,
> right?
> 
> You should be able to reproduce the weired behavior with the following
> sample grammar:
> 
> ========
> 
> grammar Grammar;
> options {k=2; backtrack=true; memoize=true; output=AST;}
> 
> tokens {
>    Import;
> }
> 
> importDeclaration
>  	:	'import' (packageReference '.' '*') ';'
>          ->
>          ^(Import Identifier*)
>  	;
> 
> packageReference
>      :    Identifier ('.'^ Identifier)*
>      ;
> 
> Identifier
>      :   Letter+
>      ;
> 
> fragment
> Letter
>      :  '\u0041'..'\u005a' | '\u005f'
>      ;
> 
> ========
> 
> antlr-3.0 then generates the file GrammarParser.java that contains the
> following lines, starting at line 119:
> 
>                  // Grammar.g:11:18: ( Identifier )*
>                  while (  ) {
>                      adaptor.addChild(root_1,
> adaptor.create(Identifier, "Identifier"));
> 
>                  }
> 
> Consequently, javac then throws the following error at me:
> 
> GrammarParser.java:120: illegal start of expression
>                  while (  ) {
>                           ^
> 1 error
> 
> So, my question is, is there any working solution for handling
> left-recursion problem?  Or, as a workaround, what would be the
correct
> while condition that I should insert into the generated code?
> 
> Many thanks for any advice!
> 
> Greetings,
> Juergen
> 
> 
> 
> On Tue Jun 5 2007, Robin Davies wrote:
> 
> > > attribute_expression
> > >  : NAME | dot_operator_exp
> > >  ;
> > >
> > > dot_operator_exp
> > >  : attribute_expression DOT NAME
> > >  ;
> >
> >
> > The generic way to deal with left-recursive structures is to convert
> > them to match the right side with EBNF loops: "(something)*". See
> page
> > 275 of the PDF manual for more details.
> >
> > attribute_expression
> >       :      NAME  ('.' NAME) *
> >       ;
> >
> > After using LALR grammars this seemed very unnatural, at first. But,
> > after gradually mind-shifting to the LL mind-set, this now seems
very
> > natural. And very easy to deal with when you get to actually
> processing
> > the grammar! To convert this to AST, for example, you write:
> >
> > attribute_expression
> >       :      NAME  ('.'^ NAME) *
> >       ;
> >
> > and you will get exactly the tree that you want: a left-recursive
> tree
> > structure.


From jimi at temporal-wave.com  Thu Jun 28 08:19:38 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 08:19:38 -0700
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <20070628122512.C236311EAE9@www.antlr.org>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org><E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com><E1E23AB4-4762-4B54-A53A-E6D519224B87@vafer.org><9745FD9E-A2C2-4F90-A5DE-537C973785E9@wincent.com>
	<20070628122512.C236311EAE9@www.antlr.org>
Message-ID: <051466DAA0D608439E196797955018D76E41@wavemachine.temporal-wave.com>

The example python parser shows this because it needs it to make the
ridiculous context sensitive whitespace easier to parse.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Thursday, June 28, 2007 5:25 AM
> To: Wincent Colaiuta; Torsten Curdt
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ambigous lexer tokens
> 
> At 22:20 28/06/2007, Wincent Colaiuta wrote:
>  >Well, here's one (untested) idea: one way might be to modify
> your
>  >WS rule to increment a "column" counter whenever a run of spaces
> 
>  >is seen; you'd have to set up the column counter in your
>  >@lexer::members section (exactly how you set up and initialize
>  >that variable is dependent on your target language):
>  >
>  >   WS : ' '+ { column++; };
> 
> Actually, I'm pretty sure that v3 tracks the column for you, so
> there's no need to do it manually.  How you get hold of it varies
> by target language, though, but it's usually a property/field of
> the lexer class, I think.
> 
> In fact I vaguely remember there being an example script for a
> column-sensitive language (Fortran, maybe?  Not sure) either in
> the v3 examples bundle or on the Wiki.
> 
> (Sorry for being so vague; it's after midnight.)


From jimi at temporal-wave.com  Thu Jun 28 08:22:04 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 08:22:04 -0700
Subject: [antlr-interest] Generation of grammar doc
In-Reply-To: <4683B055.5090501@ogre4j.org>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
Message-ID: <051466DAA0D608439E196797955018D76E42@wavemachine.temporal-wave.com>

I am not sure that anyone is understanding what you are asking. But have
you looked at:

http://www.antlr.org/wiki/display/ANTLR3/Command+line+options


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>
> Nobody reading this list who can help me?
> 
> Kai schrieb:
> > Hello,
> >
> > I found on this list posts about generating grammar documentation
> with
> > the ANT task.


From yavin at ogre4j.org  Thu Jun 28 08:42:18 2007
From: yavin at ogre4j.org (Kai)
Date: Thu, 28 Jun 2007 17:42:18 +0200
Subject: [antlr-interest] Generation of grammar doc
In-Reply-To: <051466DAA0D608439E196797955018D76E42@wavemachine.temporal-wave.com>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
	<051466DAA0D608439E196797955018D76E42@wavemachine.temporal-wave.com>
Message-ID: <4683D6DA.3040204@ogre4j.org>

> http://www.antlr.org/wiki/display/ANTLR3/Command+line+options

I already read this twice!

> I am not sure that anyone is understanding what you are asking

I want to generate a documentation of the rules, literals, etc. of a
grammar. Something like javadoc or doxygen for ANTLR grammars. After
generation I get for example a HTML output with DOT graphics and ...

-- 
http://www.ogre4j.org

From win at wincent.com  Thu Jun 28 09:07:03 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 28 Jun 2007 18:07:03 +0200
Subject: [antlr-interest] ambigous lexer tokens
In-Reply-To: <051466DAA0D608439E196797955018D76E3E@wavemachine.temporal-wave.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<051466DAA0D608439E196797955018D76E3E@wavemachine.temporal-wave.com>
Message-ID: <205C2901-754A-42EE-9DF4-A5F9A936D5D2@wincent.com>

El 28/6/2007, a las 17:10, Jim Idle escribi?:

> I cannot agree with this:
>
>> ANTLR is a very complex tool and it can deviate from your  
>> expectations in
>> incredibly subtle and hard-to-understand ways.
>
> But you cannot just go barging in on it - first you have to learn what
> the expectations are. The tool is a complicated to thing to  
> produce, but
> once you have your head around a few concepts it is remarkably easy to
> use.

Hmmm... But Jim, don't forget that as the C target author you're  
speaking as one of the foremost ANTLR experts... Who knows more about  
ANTLR than you? Ter and very few others, if any... So for you it  
doubtlessly is "remarkably easy". But looking at the large number of  
questions from puzzled people posted to this mailing list (I include  
myself in the puzzled group more often than not) I think it's clear  
that ANTLR is a very tricky best, even for those who've read the book  
(like me... more than once!).

Cheers,
Wincent


From ted.villalba at gmail.com  Thu Jun 28 09:19:29 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Thu, 28 Jun 2007 09:19:29 -0700
Subject: [antlr-interest] Separating multi-token entries in ASTs
Message-ID: <69fb4b090706280919u139d36as460d8b49a5514f5@mail.gmail.com>

Hi,
I'm looking for a little help retrieving string lists from ASTs, and keeping
them separate. I will try to explain the issue better here.
I have created a query translator with ANTLR v3.
A simple example query is TAG=(VALUE), where value is one or more terms. e.g.
title=(call of the wild)
The translation of this will be title:"call of the wild".
The issue I have is when VALUE contains a boolean which operates on
multi-term operands.
e.g. title=(Call of the Wild AND Where the Wild Things are).
What I want this to tranlsate to is title:AND("Call of the Wild", "Where the
Wild Things are")
What happens is, when I traverse the tree, the list builds up so  that my
translation becomes:

title:AND("Call of the Wild Where the Wild Things", "are") .

Using ANTLRWorks, I can see the nice AST created, but I'm not sure how to
tell the TreeTraverser to stop acquiring the terms after the first title
because it's not delineated from the second titles once their tokens are
added to the tree.
I realize I am asking a lot by dumping these grammars here and hoping
someone will be inclined to navigate them, but any help would be greatly
appreciated.

Here is my parser grammar:


grammar QueryParser;

options{
    k=4;
    output=AST;
    ASTLabelType=CommonTree;
}


start   : ( query  {System.out.println("AST:\n"+$query.tree.toStringTree());}
)+ ;
query   : field (WS!)* (BOOL_OP^ (WS!)* query)*  ;

field   : tag '=' value  -> ^('=' tag value)
        | qid
        ;

value   : term (WS)* BOOL_OP (WS)* value -> ^(BOOL_OP term value)
        | term
        | LPAREN! value RPAREN!
        ;

tag     : WCHAR;

term    : WCHAR (WS! WCHAR)* ;

qid     : '#'!DIGIT ;

BOOL_OP : 'AND'|'OR'|'NOT';
DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ ;
LPAREN  : '(' ;
RPAREN  : ')' ;
QUOTE   : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

Here is my TreeGrammar:


tree grammar QueryTree;

options{
    tokenVocab=QueryParser; //use the vocabulary from the parser
    ASTLabelType=CommonTree; //The kind of tree we are walking
    output=template;
}



// START:query
start[]
@init
{

}
        :  (q+=query)+ -> template1(finalQuery={$q});

query   : field -> template2(express={$field.st})

        | ^(BOOL_OP a=query b=query ) -> template3(op={$BOOL_OP.text},
                                                query1={$a.st},
                                                query2={$b.st})
        ;

field : ^('=' tag value) -> template4(tag={$tag.text},value={$value.st})
        | ^('=' tag (t+=term)+) -> template41(tag={$tag.text},terms={$t})
        | DIGIT -> storedQuery(qid={$DIGIT.text})
        ;

value   : WCHAR -> template5(val ={$value.text})
        | ^(BOOL_OP (a+=term)+ b=value) ->
valueTemplate(wokOp={$BOOL_OP.text},terms={$a} , values={$b.st})
        ;

term    : WCHAR -> template6(t ={$term.text});

tag     : WCHAR ;

And for what its worth here are the templates referenced:

template1(finalQuery) ::= "<finalQuery>"

template2(express) ::= "<express>"

template3(op, query1, query2) ::= "<op>(<query1>,<query2>)"

template4(tag, value) ::= "<tag>:<value; separator=\" \">"

template41(tag, terms) ::= "<tag>:(\"<terms; separator=\" \">\")"

template5(val) ::= "<val>"

wokOpTemplate(wokOp) ::= "<wokOp>"

template6(t) ::= "<t>"

valueTemplate(wokOp) ::="<wokOp>(<terms>,<values>)"

storedQuery(qid) ::= "<qid>"

Thanks again for having a look!

Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070628/25a12f39/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Jun 28 09:56:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 09:56:12 -0700
Subject: [antlr-interest] Revamping languages education? [was: ambigous
	lexer tokens]
In-Reply-To: <205C2901-754A-42EE-9DF4-A5F9A936D5D2@wincent.com>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org>
	<E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com>
	<051466DAA0D608439E196797955018D76E3E@wavemachine.temporal-wave.com>
	<205C2901-754A-42EE-9DF4-A5F9A936D5D2@wincent.com>
Message-ID: <2F257968-37DE-43BA-BDC8-6F4CBC62596D@cs.usfca.edu>


On Jun 28, 2007, at 9:07 AM, Wincent Colaiuta wrote:

> El 28/6/2007, a las 17:10, Jim Idle escribi?:
>> But you cannot just go barging in on it - first you have to learn  
>> what
>> the expectations are. The tool is a complicated to thing to  
>> produce, but
>> once you have your head around a few concepts it is remarkably  
>> easy to
>> use.
>
> Hmmm... But Jim, don't forget that as the C target author you're  
> speaking as one of the foremost ANTLR experts... Who knows more  
> about ANTLR than you? Ter and very few others, if any... So for you  
> it doubtlessly is "remarkably easy". But looking at the large  
> number of questions from puzzled people posted to this mailing list  
> (I include myself in the puzzled group more often than not) I think  
> it's clear that ANTLR is a very tricky best, even for those who've  
> read the book (like me... more than once!).

Hi everyone...[back from Australia with huge jetlag and a cold] ;)

I think the real issue here may be the way we educate computer  
scientists.  Personally, I am unaware of a non-PhD building compilers  
(i.e., almost no one builds compilers these days) and I think real  
compiler courses should be left to graduate school.  This has nothing  
to do with elitism or whatever, it's a specialization / market share  
issue.  What almost all coders actually need to build everyday are  
data readers, config files, DSLs, network protocols, etc...  We need  
to revamp education to take this market reality into account.  I hope  
to do another ANTLR book real quick and then a languages textbook  
during my sabbatical.  In this book, I would start at "getchar" and  
work my way through the key concepts and discuss the merits of the  
various approaches to language translation etc...  I still think a  
bit of code gen (byte codes or simple register code) is useful so  
coders know how compilers work, but I'd like to shift the focus.   
This book should also help those who are self-taught coders, a large  
market.

Anyway, i'll investigate language education again when I do my grad  
class Spring 2008.  In the meantime, I encourage you to soldier on.   
Language concepts and ANTLR can be tricky at first, but usually there  
is an "ah ha!" moment, which I think is what Jim is alluding to.

Tired in San Francisco,
Ter


From ens06jpk at cs.umu.se  Thu Jun 28 11:07:16 2007
From: ens06jpk at cs.umu.se (Janusz Polok)
Date: Thu, 28 Jun 2007 20:07:16 +0200
Subject: [antlr-interest]  Java parser, Lexer for ANTLR v 2.7
In-Reply-To: <Pine.LNX.4.64.0706281255000.20393@i41pc36.ipd.uni-karlsruhe.de>
References: <1183026390.46838cd60a4ad@puss.acc.umu.se>
	<AEBEA907-D9B5-4911-B5A1-B24419BFE10D@wincent.com>
	<Pine.LNX.4.64.0706281255000.20393@i41pc36.ipd.uni-karlsruhe.de>
Message-ID: <1183054036.4683f8d423ba2@puss.acc.umu.se>

Hi,
sorry for not writinig this before, but I'm interested in grammar fro ANTLR ver.
2.7. I'm writing extention for BlueJ and, as far as I know, it uses ANTLR v 2.
Thanks for help and sorry for misunderstanding.
regards
janusz

Quoting Juergen Reuter <reuter at ipd.uka.de>:

> 
> I noticed that http://www.antlr.org/download/examples-v3.tar.gz contains a 
> sample grammar for Java 1.5 in the directory examples-v3/java/java.  The 
> grammar is not ready to create an AST, but may be a good starting point 
> for you.
> 
> Greetings,
> Juergen
> 
> On Thu, 28 Jun 2007, Wincent Colaiuta wrote:
> 
> > El 28/6/2007, a las 12:26, Janusz Polok escribi?:
> >
> >> Hi,
> >> I'm new in ANTLR. Does someone have a Lexer for Java sourcecode?
> >> I need to create a AST from java-code file and analyse it complexity.
> >> If someone can help me I will be very thankful.
> >> Regards
> >> janusz
> >
> > Check out the examples archive downloadable from:
> >
> >  <http://antlr.org/download.html>
> >
> > Cheers,
> > Wincent
> >


-- 

From jimi at temporal-wave.com  Thu Jun 28 11:41:38 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 11:41:38 -0700
Subject: [antlr-interest] Java parser, Lexer for ANTLR v 2.7
In-Reply-To: <1183054036.4683f8d423ba2@puss.acc.umu.se>
References: <1183026390.46838cd60a4ad@puss.acc.umu.se><AEBEA907-D9B5-4911-B5A1-B24419BFE10D@wincent.com><Pine.LNX.4.64.0706281255000.20393@i41pc36.ipd.uni-karlsruhe.de>
	<1183054036.4683f8d423ba2@puss.acc.umu.se>
Message-ID: <051466DAA0D608439E196797955018D76E43@wavemachine.temporal-wave.com>

http://www.antlr2.org/share/list might help you.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Janusz Polok


> Hi,
> sorry for not writinig this before, but I'm interested in grammar fro
> ANTLR ver.
> 2.7. I'm writing extention for BlueJ and, as far as I know, it uses
> ANTLR v 2.


From jimi at temporal-wave.com  Thu Jun 28 11:50:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Jun 2007 11:50:09 -0700
Subject: [antlr-interest] Revamping languages education? [was:
	ambigouslexer tokens]
In-Reply-To: <2F257968-37DE-43BA-BDC8-6F4CBC62596D@cs.usfca.edu>
References: <0AA02A44-656E-4EE5-A27A-23896EDD9B84@vafer.org><E6193EF5-3B20-4078-9CD6-B2E10B61A9CC@wincent.com><051466DAA0D608439E196797955018D76E3E@wavemachine.temporal-wave.com><205C2901-754A-42EE-9DF4-A5F9A936D5D2@wincent.com>
	<2F257968-37DE-43BA-BDC8-6F4CBC62596D@cs.usfca.edu>
Message-ID: <051466DAA0D608439E196797955018D76E44@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
>
> On Jun 28, 2007, at 9:07 AM, Wincent Colaiuta wrote:
> 
> > El 28/6/2007, a las 17:10, Jim Idle escribi?:
> >> But you cannot just go barging in on it - first you have to learn
> >> what
> >> the expectations are. The tool is a complicated to thing to
> >> produce, but
> >> once you have your head around a few concepts it is remarkably
> >> easy to
> >> use.
> >
> > Hmmm... But Jim, don't forget that as the C target author you're
> > speaking as one of the foremost ANTLR experts...

[snip]
 
> Anyway, i'll investigate language education again when I do my grad
> class Spring 2008.  In the meantime, I encourage you to soldier on.
> Language concepts and ANTLR can be tricky at first, but usually there
> is an "ah ha!" moment, which I think is what Jim is alluding to.

Exactly in fact. Almost all recent activity in this group concerning ANTLR3 has been regarding the same 5 or 6 things (I exclude bugs in the C runtime to spare the author ;-). When all these 5 or 6 things are learned together then typing in the grammars that have been thrown about here is second nature (honestly) and you can produce it ANTLRWorks with little effort to rid yourself of ambiguity because you won't type it in that way. I suppose we ought to have some sort of crib sheet for this stuff, but everyone is busy of course and so we will get there via the book and wiki and so on. This is what I mean by learning the expectations first.

Now, creating a full recognizer for T-SQL or C++ is in fact still a big deal, so you don't want to choose that as your first project as here you are heading down the compiler write path expounded upon by Ter somewhat, depending on what you want to do with the recognizer of course.

Jim

PS: C++ Target work starts next week.
PPS: Unless anyone has any contract work they want me to do, as my current contract ends tomorrow :-)

From parrt at cs.usfca.edu  Thu Jun 28 11:59:38 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 11:59:38 -0700
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
Message-ID: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>

http://www.antlr.org/movie/Sydney-JUG-June-20-2007.mp4

like 300M but should stream.

Ter

From parrt at cs.usfca.edu  Thu Jun 28 12:11:23 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 12:11:23 -0700
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
Message-ID: <38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>

Actually make that  http://www.antlr.org/movies/Sydney-JUG- 
June-20-2007.mp4

and here is the talk:

http://www.antlr.org/talks/SydneyJUG.ppt

Ter
On Jun 28, 2007, at 11:59 AM, Terence Parr wrote:

> http://www.antlr.org/movie/Sydney-JUG-June-20-2007.mp4
>
> like 300M but should stream.
>
> Ter


From parrt at cs.usfca.edu  Thu Jun 28 15:29:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 15:29:03 -0700
Subject: [antlr-interest] initial thoughts on token stream rewrite rules
Message-ID: <CCB97D17-149D-4E88-B1EE-02690C9C2F7D@cs.usfca.edu>

http://www.antlr.org/wiki/display/~admin/2007/06/28/Token+stream 
+rewriting+with+rewrite+rules

(moving my notes to the wiki)

Ter

From rerdavies at rogers.com  Thu Jun 28 16:32:36 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Thu, 28 Jun 2007 19:32:36 -0400
Subject: [antlr-interest] Interesting trick for forcing position of child
	nodes in ASTs.
Message-ID: <04B67698EB004FFBBB1DEBDEFC54EACA@GWB>

Just thought I'd share this idea. I've been working on converting an AST to a heterogenous AST using a custom tree adaptor, and I came up with the following idea to greatly simplify handling of subnodes.

At first I thought the approach given below was a bit inelegant; but after thinking about it, given the lispy-ness of the current AST implementation, this doesn't seem so terrible wrong. 

One of the things I find difficult about the current AST implementation is that AST child nodes are appended without regard to the structure of the rule that generated them. That means that, for AST rules like

    foo:  bar1* bar2? bar3* -> ^(FOO bar1* bar2? bar3*) 

anything that walks the AST tree can't rely on positional information in the AST to differentiate between bar1's and bar2's and bar3's. Given a foo AST node with 12 children, there's no trivial way to decide the type of each of the child nodes without deep knowledge of the parse tree for bar1, bar2, and bar3. This may be alright when using tree parsers, but, for non-tree-parser based tree-walkers, deciding how many bar1's bar2's and bar3's there are can be decidedly difficult.

Here's a way to enforce positional information in the AST:

    tokens 
    {
        LIST;  // artficial AST node for grouping lists of zero or more nodes.
        OPTIONAL; // artifical AST node for marking optional nodes.

        FOO;
    }

    foo
        : bar1* bar2? bar3* bar4
            ->  ^(FOO  ^(LIST bar1*) ^(OPTIONAL bar2?) ^(LIST bar3*) bar4 )
        ;

Now, tree walkers can positionally identify the child nodes as follows (C# code):

    ITree fooNode;
    // Do something for each of the bar1* children of foo;
    // All bar1 nodes are children of a ^(LIST) node at position 0.
    ITree bar1Nodes = fooNode.GetChild(0);     
    for (int i = 0; i < bar1Nodes.ChildNodes; ++i)
    {
        ITree aBar1Node = bar1Nodes.GetChild(i);
        DoSomething(aBar1Node );
    }
    
    // Do something for an optionally present bar2 node
    // If there is a bar2 node, it will be a child an ^(OPTIONAL) node in positoin 1.
    ITree bar2NodeOpt = fooNode.ChildNode(1);     
    if (bar2NodeOpt.ChildCount != 0) {
        ITree bar2Node = bar2NodeOpt.GetChild(0);
        DoSomething(bar2Node);
    }
    // and so for for bar3* nodes.
    // bar3 nodes are children of a ^(LIST) node at position 2.
    ITree bar2Nodes = fooNode.GetChild(2);
    ... etc.
    // bar4 is always present. So it's a direct child in position 3.
    ITree bar4Node = fooNode.GetChild(3);
        
        



    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070628/0ce37192/attachment.html 

From parrt at cs.usfca.edu  Thu Jun 28 16:36:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 16:36:03 -0700
Subject: [antlr-interest] Whither ANTLRworks.pdf?
In-Reply-To: <200706260911.00711.rschulz@sonic.net>
References: <200706260911.00711.rschulz@sonic.net>
Message-ID: <F8F74581-3F89-4431-BEA2-64AE60219E6E@cs.usfca.edu>

Hi. I'm working on a new version; should be out by mid July.
Ter
On Jun 26, 2007, at 9:11 AM, Randall R Schulz wrote:

> Hi,
>
> The footnote on page 15 of TDAR says that there is ANTLRworks
> documentation at <http://www.antlr.org/works/doc/antlrworks.pdf>, but
> that URL produces a 404 page.
>
> Searching with Google turned up
> <http://www.antlr.org/workshop/ANTLR2005/presentations/ 
> ANTLRWorks.pdf>,
> but that's just a few slides.
>
> Evidently, I wrote this several months back:
>
> On Sunday 12 November 2006 09:39, Randall R Schulz wrote:
>> I don't know how to use the debugger, and there appear to be
>> significant discrepancies between the ANTLRworks User's Guide
>> (<http://www.antlr.org/works/doc/antlrworks.pdf>) and the program as
>> it presents itself on my system. ...
>
> (I'm not having the problem I was back then, but that was a different
> grammar and I was using pre-release tools, but I'm encountering  
> ongoing
> questions and hate to pester the list with every little thing I come
> across.)
>
>
> Is there are updated version of the document in the offing?
>
>
> Randall Schulz


From parrt at cs.usfca.edu  Thu Jun 28 16:47:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 16:47:26 -0700
Subject: [antlr-interest] DebugParser constructors
In-Reply-To: <ebc876d70706260806y1953a21v9fa8d9cd26476407@mail.gmail.com>
References: <ebc876d70706260806y1953a21v9fa8d9cd26476407@mail.gmail.com>
Message-ID: <C3332F83-FEB0-4087-8CE4-3644B0B0EF23@cs.usfca.edu>


On Jun 26, 2007, at 8:06 AM, Thomas Brandon wrote:

> Would it be possible for debug parsers to delegate the public
> DebugParser(TokenStream input, DebugEventListener dbg) constructor. So
> you can provide a tracing listener, or a listener that doesn't block
> on socket. Saves having to keep switching debug on and off when doing
> some debugging in AW. Adding through members would break when
> debugging wasn't used.

I pass in the parse tree builder and other stuff without sockets all  
the time.  I am not sure what you mean here by delegating constructor.

Ter


From tcurdt at vafer.org  Thu Jun 28 16:50:19 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Fri, 29 Jun 2007 01:50:19 +0200
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
Message-ID: <1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>

Hm ...downloads stall for me after a while. All good with the server?
Tried several times.

cheers
--
Torsten

On 28.06.2007, at 21:11, Terence Parr wrote:

> Actually make that  http://www.antlr.org/movies/Sydney-JUG- 
> June-20-2007.mp4
>
> and here is the talk:
>
> http://www.antlr.org/talks/SydneyJUG.ppt
>
> Ter
> On Jun 28, 2007, at 11:59 AM, Terence Parr wrote:
>
>> http://www.antlr.org/movie/Sydney-JUG-June-20-2007.mp4
>>
>> like 300M but should stream.
>>
>> Ter
>


From parrt at cs.usfca.edu  Thu Jun 28 17:15:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 17:15:00 -0700
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
	<1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
Message-ID: <2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>


On Jun 28, 2007, at 4:50 PM, Torsten Curdt wrote:

> Hm ...downloads stall for me after a while. All good with the server?
> Tried several times.

Ack. Sorry...this is the persistent network issue we have...how much  
you get before it dies?

We're investigating a new hosting service.

Ter


From rschulz at sonic.net  Thu Jun 28 18:07:16 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 28 Jun 2007 18:07:16 -0700
Subject: [antlr-interest] Whither ANTLRworks.pdf?
In-Reply-To: <F8F74581-3F89-4431-BEA2-64AE60219E6E@cs.usfca.edu>
References: <200706260911.00711.rschulz@sonic.net>
	<F8F74581-3F89-4431-BEA2-64AE60219E6E@cs.usfca.edu>
Message-ID: <200706281807.16254.rschulz@sonic.net>

On Thursday 28 June 2007 16:36, Terence Parr wrote:
> Hi. I'm working on a new version; should be out by mid July.

Great. Thanks.

I trust you'll let us know here when that's ready?


> Ter


Randall Schulz

From tbrandonau at gmail.com  Thu Jun 28 18:30:41 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 29 Jun 2007 11:30:41 +1000
Subject: [antlr-interest] DebugParser constructors
In-Reply-To: <C3332F83-FEB0-4087-8CE4-3644B0B0EF23@cs.usfca.edu>
References: <ebc876d70706260806y1953a21v9fa8d9cd26476407@mail.gmail.com>
	<C3332F83-FEB0-4087-8CE4-3644B0B0EF23@cs.usfca.edu>
Message-ID: <ebc876d70706281830u56cda4edyf270d76951769994@mail.gmail.com>

On 6/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Jun 26, 2007, at 8:06 AM, Thomas Brandon wrote:
>
> > Would it be possible for debug parsers to delegate the public
> > DebugParser(TokenStream input, DebugEventListener dbg) constructor. So
> > you can provide a tracing listener, or a listener that doesn't block
> > on socket. Saves having to keep switching debug on and off when doing
> > some debugging in AW. Adding through members would break when
> > debugging wasn't used.
>
> I pass in the parse tree builder and other stuff without sockets all
> the time.  I am not sure what you mean here by delegating constructor.
>
> Ter
>
>
When I generate debug code the only constructors I get in my generated
parser are:
    public TestParser(TokenStream input, int port)
public TestParser(TokenStream input);
So to be able to parse a debug stream I have to also add a
TestParser(TokenStream input, DebugEventListener dbg) constructor.

Tom.

From dmitry.goldenberg at weblayers.com  Thu Jun 28 21:48:58 2007
From: dmitry.goldenberg at weblayers.com (Dmitry Goldenberg)
Date: Thu, 28 Jun 2007 21:48:58 -0700
Subject: [antlr-interest] Antlr & JCL/COBOL
Message-ID: <5CCB14CB6DCFB147A4D09CC90808B0F30117EF49@ehost011-3.exch011.intermedia.net>

Hello,
 
I was wondering if anyone knows of any grammars available for JCL or COBOL?  Any info would be appreciated.
 
Thanks.
D.G.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070628/82f90839/attachment.html 

From yavin at ogre4j.org  Thu Jun 28 23:23:27 2007
From: yavin at ogre4j.org (Kai)
Date: Fri, 29 Jun 2007 08:23:27 +0200
Subject: [antlr-interest] ANTLRWorks dot parameters for rule graph
Message-ID: <4684A55F.7010108@ogre4j.org>

Hello,

I saw ANTLRWorks uses DOT to generate graphs of the rules in ANTLR
grammars. How to generate this graphs as a batch process to get e.g. SVG
files with the same look?

Regards, Kai
-- 
http://www.ogre4j.org

From tcurdt at vafer.org  Fri Jun 29 00:44:53 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Fri, 29 Jun 2007 09:44:53 +0200
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
	<1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
	<2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
Message-ID: <87E6A008-FFDA-448D-A130-DD7E1AAE6254@vafer.org>


On 29.06.2007, at 02:15, Terence Parr wrote:

>
> On Jun 28, 2007, at 4:50 PM, Torsten Curdt wrote:
>
>> Hm ...downloads stall for me after a while. All good with the server?
>> Tried several times.
>
> Ack. Sorry...this is the persistent network issue we have...how  
> much you get before it dies?

Dies after around 3-16 MB

> We're investigating a new hosting service.

Sounds like a good idea :)

cheers
--
Torsten



From tcurdt at vafer.org  Fri Jun 29 02:06:06 2007
From: tcurdt at vafer.org (Torsten Curdt)
Date: Fri, 29 Jun 2007 11:06:06 +0200
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <87E6A008-FFDA-448D-A130-DD7E1AAE6254@vafer.org>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
	<1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
	<2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
	<87E6A008-FFDA-448D-A130-DD7E1AAE6254@vafer.org>
Message-ID: <313BF8F5-6702-418C-A394-63F1EE1EA1F9@vafer.org>

wget did the job as it continued where it failed. Took a few tries  
though.

On 29.06.2007, at 09:44, Torsten Curdt wrote:

>
> On 29.06.2007, at 02:15, Terence Parr wrote:
>
>>
>> On Jun 28, 2007, at 4:50 PM, Torsten Curdt wrote:
>>
>>> Hm ...downloads stall for me after a while. All good with the  
>>> server?
>>> Tried several times.
>>
>> Ack. Sorry...this is the persistent network issue we have...how  
>> much you get before it dies?
>
> Dies after around 3-16 MB
>
>> We're investigating a new hosting service.
>
> Sounds like a good idea :)
>
> cheers
> --
> Torsten
>
>


From jeremy.rayner at gmail.com  Fri Jun 29 02:24:12 2007
From: jeremy.rayner at gmail.com (Jeremy Rayner)
Date: Fri, 29 Jun 2007 10:24:12 +0100
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
	<1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
	<2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
Message-ID: <90a60e760706290224ja0a5269h4e67e12223b483d9@mail.gmail.com>

On 6/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Ack. Sorry...this is the persistent network issue we have...how much
> you get before it dies?
>
> We're investigating a new hosting service.
>

I've uploaded this video to my blip.tv account, which
has lots of lovely bandwidth:
          http://blip.tv/file/284662

Enjoy, nice one Ter,

Jez
-- 
Groovy Engineer                                          http://searchgroovy.org
http://javanicus.com/blog2

From win at wincent.com  Fri Jun 29 03:25:35 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 29 Jun 2007 12:25:35 +0200
Subject: [antlr-interest] mp4 movie of Ter's Sydney JUG ANTLR talk
In-Reply-To: <2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
References: <AE7B4A94-4215-49B6-B9B1-71039B73675D@cs.usfca.edu>
	<38D303DE-CE43-4CD1-AB3F-612AD390EBAE@cs.usfca.edu>
	<1FC39E4F-57B1-4F7D-A631-0130AA7BA931@vafer.org>
	<2BF4B7D0-88C0-4EA7-9217-301888654328@cs.usfca.edu>
Message-ID: <25D28D11-0B68-4A81-95A3-786E20F5B8FA@wincent.com>

El 29/6/2007, a las 2:15, Terence Parr escribi?:

> On Jun 28, 2007, at 4:50 PM, Torsten Curdt wrote:
>
>> Hm ...downloads stall for me after a while. All good with the server?
>> Tried several times.
>
> Ack. Sorry...this is the persistent network issue we have...how  
> much you get before it dies?
>
> We're investigating a new hosting service.

FWIW I was able to get the entire 340M (a miracle, considering the  
ISP I have).

Cheers,
Wincent


From stefan.wohlgemuth at aloba.ch  Fri Jun 29 05:49:33 2007
From: stefan.wohlgemuth at aloba.ch (Stefan Wohlgemuth)
Date: Fri, 29 Jun 2007 14:49:33 +0200
Subject: [antlr-interest] Lexical token with fix length
Message-ID: <4684FFDD.9070208@aloba.ch>

Hi
I'm trying to define a grammar which has tokens with a fix length. What
is the best way to do this?

I've tried it with this:

test  :     N1 N2;

N1  :  NDigits[1] ;

N2  :  NDigits[2] ;

fragment
NDigits[int n]
   :
   {$n==1}?=> Digit
   |
   {$n==2}?=> Digit Digit
   ;

Digit :    '0'..'9';


But I get a compile error in the public void mTokens() method of my
Lexer class because the variable n is not known there.

Thanks

Stefan



-- 
aloba ag
Lyssachstrasse 15
CH-3400 Burgdorf

phone  +41 34 424 17 70
fax    +41 34 424 17 74
mobile +41 78 601 41 14

From jaluber at gmx.de  Fri Jun 29 06:14:20 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Jun 2007 15:14:20 +0200
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <4684FFDD.9070208@aloba.ch>
References: <4684FFDD.9070208@aloba.ch>
Message-ID: <468505AC.6040109@gmx.de>

Stefan Wohlgemuth wrote:
> Hi
> I'm trying to define a grammar which has tokens with a fix length. What
> is the best way to do this?
> 
> I've tried it with this:
> 
> test  :     N1 N2;
> 
> N1  :  NDigits[1] ;
> 
> N2  :  NDigits[2] ;
> 
> fragment
> NDigits[int n]
>   :
>   {$n==1}?=> Digit
>   |
>   {$n==2}?=> Digit Digit
>   ;
> 
> Digit :    '0'..'9';
> 
> 
> But I get a compile error in the public void mTokens() method of my
> Lexer class because the variable n is not known there.

It is generally a bad idea to use parameters for validating semantic
predicates, as those can be hoisted into the calling rules. You have to
use scopes instead like this:

 // A Unicode character of the class Cf (possibly encoded)
fragment FORMATTING_CHARACTER
scope UnicodeClassScope;
	:	UNICODE_CLASS_Cf
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.Format; }
UNICODE_ESCAPE_SEQUENCE
	;

// Restricts the unicode escape sequence to certain unicode character
classes
fragment UNICODE_ESCAPE_SEQUENCE
scope UnicodeClassScope;
	:	'\\u' { Char.GetUnicodeCategory((char)
ConvertHexCharArrayIntoInt32(new char[]{
		(char) input.LT(1), (char) input.LT(2), (char) input.LT(3), (char)
input.LT(4)})) == $UnicodeClassScope::allowedClass }?
		HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	|	'\\U' {
Char.GetUnicodeCategory(TransformUtf32ToUtf16(ConvertHexCharArrayIntoInt32(new
char[]{
		(char) input.LT(1), (char) input.LT(2), (char) input.LT(3), (char)
input.LT(4),
		(char) input.LT(5), (char) input.LT(6), (char) input.LT(7), (char)
input.LT(8)})), 0) == $UnicodeClassScope::allowedClass }?
		HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
HEX_DIGIT
	;

Sorry for the poor formatting, but I suppose even with reformatting for
email the readability is worse than pasting this snippet into
ANTLRworks. Don't forget to declare the used scope, too!

Best regards,
Johannes Luber

From win at wincent.com  Fri Jun 29 09:01:47 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 29 Jun 2007 18:01:47 +0200
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <468505AC.6040109@gmx.de>
References: <4684FFDD.9070208@aloba.ch> <468505AC.6040109@gmx.de>
Message-ID: <076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>

El 29/6/2007, a las 15:14, Johannes Luber escribi?:

> Sorry for the poor formatting, but I suppose even with reformatting  
> for
> email the readability is worse than pasting this snippet into
> ANTLRworks. Don't forget to declare the used scope, too!

For sharing snippets like this "Pastie" is a nice, free service:

<http://pastie.caboo.se/>

No syntax highlighting for ANTLR grammars (yet), but no wrapping  
problems either...

Cheers,
Wincent


From jaluber at gmx.de  Fri Jun 29 09:19:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Jun 2007 18:19:37 +0200
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>
References: <4684FFDD.9070208@aloba.ch> <468505AC.6040109@gmx.de>
	<076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>
Message-ID: <46853119.5080402@gmx.de>

Wincent Colaiuta wrote:
> El 29/6/2007, a las 15:14, Johannes Luber escribi?:
> 
>> Sorry for the poor formatting, but I suppose even with reformatting for
>> email the readability is worse than pasting this snippet into
>> ANTLRworks. Don't forget to declare the used scope, too!
> 
> For sharing snippets like this "Pastie" is a nice, free service:
> 
> <http://pastie.caboo.se/>
> 
> No syntax highlighting for ANTLR grammars (yet), but no wrapping
> problems either...

I tested it here: http://pastie.caboo.se/74786 . I had to wrap some
lines manually but otherwise it looks good.

Best regards,
Johannes Luber

From rschulz at sonic.net  Fri Jun 29 09:38:10 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 09:38:10 -0700
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>
References: <4684FFDD.9070208@aloba.ch> <468505AC.6040109@gmx.de>
	<076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>
Message-ID: <200706290938.10661.rschulz@sonic.net>

On Friday 29 June 2007 09:01, Wincent Colaiuta wrote:
> ...
>
> For sharing snippets like this "Pastie" is a nice, free service:
>
> <http://pastie.caboo.se/>

You know, I'd really like to use it, but (from the trailer on each 
document page):

"Use Pastie in your quest to save humanity,
 not in your evil plots to take over the world!"

That's just too restrictive for me. Most of my plans are evil plots to 
take over the world.


> ...
>
> Cheers,
> Wincent


RRS

From rschulz at sonic.net  Fri Jun 29 09:57:16 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 09:57:16 -0700
Subject: [antlr-interest] More DOT Questions
Message-ID: <200706290957.16258.rschulz@sonic.net>

Hi,

Is there a way I can get the result of rendering (with the "dot" 
command) the output from instances of DOTTreeGenerator in a way more 
like that produced by ANTLRWorks?

I'd also still like any answers possible to my previous questions 
(Subject: Using ANTLRWorks DOT Output), as would, I'm sure, Kai to his 
(Subject: ANTLRWorks dot parameters for rule graph), if anybody could 
supply them.


Thanks.

Randall Schulz
-- 
ANTLR Rocks!

From jaluber at gmx.de  Fri Jun 29 10:56:34 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 29 Jun 2007 19:56:34 +0200
Subject: [antlr-interest] Remote Debugging with C#
Message-ID: <468547D2.1050701@gmx.de>

Hello!

In the online help of ANTLRworks stands: "If you want to debug a grammar
from another language, use ANTLR to generate the parser, launch the
parser and connect the debugger to the parser." The problem is: How do I
"launch the parser"? I have found in another email that one has to use
the -debug option with ANTLR, but I don't see, what I have to do
afterwards. How do I have to compile those debug builds? Can someone
shed light on this?

Best regards,
Johannes Luber

From bace.spam at gmx.net  Fri Jun 29 11:56:31 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Fri, 29 Jun 2007 20:56:31 +0200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <468547D2.1050701@gmx.de>
References: <468547D2.1050701@gmx.de>
Message-ID: <20070629185631.25690@gmx.net>

Hi,

I don't know if there's any differences for C#, but in Java I do:
1. do not generate in ANTLRworks (it ignores -debug option)
2. the generated parser has a second constructer argument, an DebugEventListener. I use it for the parse tree:

ParseTreeBuilder builder = new ParseTreeBuilder("start");
testParser parser = new testParser(tokens, builder);
parser.start();
ParseTree pt = ((ParseTreeBuilder)builder).getTree();


But as I know your other posts, your problem may be much harder ;)
Cheers,
Markus


> Hello!
> 
> In the online help of ANTLRworks stands: "If you want to debug a grammar
> >from another language, use ANTLR to generate the parser, launch the
> parser and connect the debugger to the parser." The problem is: How do I
> "launch the parser"? I have found in another email that one has to use
> the -debug option with ANTLR, but I don't see, what I have to do
> afterwards. How do I have to compile those debug builds? Can someone
> shed light on this?
> 
> Best regards,
> Johannes Luber

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From antlr at jazillian.com  Fri Jun 29 14:09:10 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 29 Jun 2007 17:09:10 -0400
Subject: [antlr-interest] Interesting trick for forcing position of
 child nodes in ASTs.
In-Reply-To: <04B67698EB004FFBBB1DEBDEFC54EACA@GWB>
References: <04B67698EB004FFBBB1DEBDEFC54EACA@GWB>
Message-ID: <468574F6.9060307@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070629/1986ef65/attachment.html 

From antlr at jazillian.com  Fri Jun 29 14:15:07 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 29 Jun 2007 17:15:07 -0400
Subject: [antlr-interest] Antlr & JCL/COBOL
In-Reply-To: <5CCB14CB6DCFB147A4D09CC90808B0F30117EF49@ehost011-3.exch011.intermedia.net>
References: <5CCB14CB6DCFB147A4D09CC90808B0F30117EF49@ehost011-3.exch011.intermedia.net>
Message-ID: <4685765B.5040607@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070629/94a67473/attachment.html 

From antlr at jazillian.com  Fri Jun 29 14:17:46 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 29 Jun 2007 17:17:46 -0400
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706290957.16258.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net>
Message-ID: <468576FA.8090807@jazillian.com>

See http://www.graphviz.org/

Randall R Schulz wrote:
> Hi,
>
> Is there a way I can get the result of rendering (with the "dot" 
> command) the output from instances of DOTTreeGenerator in a way more 
> like that produced by ANTLRWorks?
>
> I'd also still like any answers possible to my previous questions 
> (Subject: Using ANTLRWorks DOT Output), as would, I'm sure, Kai to his 
> (Subject: ANTLRWorks dot parameters for rule graph), if anybody could 
> supply them.
>
>
> Thanks.
>
> Randall Schulz
>   


From rschulz at sonic.net  Fri Jun 29 14:43:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 14:43:45 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <468576FA.8090807@jazillian.com>
References: <200706290957.16258.rschulz@sonic.net>
	<468576FA.8090807@jazillian.com>
Message-ID: <200706291443.45161.rschulz@sonic.net>

On Friday 29 June 2007 14:17, Andy Tripp wrote:
> See http://www.graphviz.org/

Gee, thanks... I never would have thought of looking at the 
documentation.

What I want to know is what dot configuration and other processing or 
transformation ANTLRWorks clearly does behind the scenes to get the 
results it does.


Randall Schulz

From parrt at cs.usfca.edu  Fri Jun 29 14:50:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Jun 2007 14:50:30 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706291443.45161.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net>
	<468576FA.8090807@jazillian.com>
	<200706291443.45161.rschulz@sonic.net>
Message-ID: <48CCD8FD-D869-4FFE-8456-618C753F8A9D@cs.usfca.edu>


On Jun 29, 2007, at 2:43 PM, Randall R Schulz wrote:

> On Friday 29 June 2007 14:17, Andy Tripp wrote:
>> See http://www.graphviz.org/
>
> Gee, thanks... I never would have thought of looking at the
> documentation.
>
> What I want to know is what dot configuration and other processing or
> transformation ANTLRWorks clearly does behind the scenes to get the
> results it does.

I'm pretty sure it calls ANTLR's DOTGenerator.  Just check the source  
I'd say.

Ter
PS	I responded earlier but my smtp server was down; a dup will appear  
of this email when it pops up :)

From rschulz at sonic.net  Fri Jun 29 15:04:01 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 15:04:01 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <48CCD8FD-D869-4FFE-8456-618C753F8A9D@cs.usfca.edu>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291443.45161.rschulz@sonic.net>
	<48CCD8FD-D869-4FFE-8456-618C753F8A9D@cs.usfca.edu>
Message-ID: <200706291504.01684.rschulz@sonic.net>

On Friday 29 June 2007 14:50, Terence Parr wrote:
> On Jun 29, 2007, at 2:43 PM, Randall R Schulz wrote:
> > ...
> >
> > What I want to know is what dot configuration and other processing
> > or transformation ANTLRWorks clearly does behind the scenes to get
> > the results it does.
>
> I'm pretty sure it calls ANTLR's DOTGenerator.  Just check the source
> I'd say.

Clearly that's not so, since when I take the output of DOTGenerator and 
pass it to dot, the results are very different than those produced 
within ANTLRWorks itself.


And as I wrote earlier, when I capture ANTLRWorks invocations of dot and 
log the arguments its using, the only invocations I see look like this:

> 4 arguments:
>         "-Tdot"
>         "-o"
>         "/tmp/GrammarDOTTab50533.out"
>         "/tmp/GrammarDOTTab50532.in"

This means that ANTLRWorks appears to only be using dot to transform 
one .dot file to another (-Tdot means produce DOT-format output).


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Fri Jun 29 15:07:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Jun 2007 15:07:37 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706291504.01684.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291443.45161.rschulz@sonic.net>
	<48CCD8FD-D869-4FFE-8456-618C753F8A9D@cs.usfca.edu>
	<200706291504.01684.rschulz@sonic.net>
Message-ID: <FDABD013-882F-4A2C-A381-3651F48E3772@cs.usfca.edu>


On Jun 29, 2007, at 3:04 PM, Randall R Schulz wrote:

> On Friday 29 June 2007 14:50, Terence Parr wrote:
>> On Jun 29, 2007, at 2:43 PM, Randall R Schulz wrote:
>>> ...
>>>
>>> What I want to know is what dot configuration and other processing
>>> or transformation ANTLRWorks clearly does behind the scenes to get
>>> the results it does.
>>
>> I'm pretty sure it calls ANTLR's DOTGenerator.  Just check the source
>> I'd say.
>
> Clearly that's not so, since when I take the output of DOTGenerator  
> and
> pass it to dot, the results are very different than those produced
> within ANTLRWorks itself.

For DFA?  Just the squiggling lines.  All other viz stuff is done  
directly by Jean in AW.

> And as I wrote earlier, when I capture ANTLRWorks invocations of  
> dot and
> log the arguments its using, the only invocations I see look like  
> this:
>
>> 4 arguments:
>>         "-Tdot"
>>         "-o"
>>         "/tmp/GrammarDOTTab50533.out"
>>         "/tmp/GrammarDOTTab50532.in"
>
> This means that ANTLRWorks appears to only be using dot to transform
> one .dot file to another (-Tdot means produce DOT-format output).

If I remember correctly, it's converting my DOT to DOT it can parse  
to get the splines out and display in Swing.

Ter

From rschulz at sonic.net  Fri Jun 29 15:16:07 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 15:16:07 -0700
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
Message-ID: <200706291516.07284.rschulz@sonic.net>

Hi,

I'm having trouble figuring out how to access the results returned by
rules in a tree grammar. When I write a rule like this:

atomicSentence
returns [ Formula f ]
  : equation
    {
      f = $equation;
    }

  | atom
    {
      f = $atom;
    }
  ;


I get these diagnostics from ANTLR:

error(117): CLIFBuilder.g:1157:3: missing attribute access on rule scope: equation
error(117): CLIFBuilder.g:1162:3: missing attribute access on rule scope: atom


Both "equation" and "atom" also return Formula, so there ought to be
type compatibility.

I can't find any examples that show non-trivial actions in tree
grammars. I have TDAR, so if there's something in there I'm overlooking,
please refer me to it.


By the way, searching (using Google via the ANTLR home page search
field) for "Tree Parsing Action Attributes" yielded this hit (among many
others): <http://www.antlr.org/wiki/display/ANTLR3/tree+parser+rules+have+different+attributes+than+parser+rules>.
Unfortunately, that page now reads:

"A page with this title has been deleted. Contact your space
administrator if you would like it restored."



Anyway, I'd appreciate knowing what I'm missing or doing wrong.


Randall Schulz

From rschulz at sonic.net  Fri Jun 29 15:23:40 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 15:23:40 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <FDABD013-882F-4A2C-A381-3651F48E3772@cs.usfca.edu>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291504.01684.rschulz@sonic.net>
	<FDABD013-882F-4A2C-A381-3651F48E3772@cs.usfca.edu>
Message-ID: <200706291523.40524.rschulz@sonic.net>

On Friday 29 June 2007 15:07, Terence Parr wrote:
> On Jun 29, 2007, at 3:04 PM, Randall R Schulz wrote:
> > On Friday 29 June 2007 14:50, Terence Parr wrote:
> >> On Jun 29, 2007, at 2:43 PM, Randall R Schulz wrote:
> >>> ...
> >>>
> >>> What I want to know is what dot configuration and other
> >>> processing or transformation ANTLRWorks clearly does behind the
> >>> scenes to get the results it does.
> >>
> >> I'm pretty sure it calls ANTLR's DOTGenerator.  Just check the
> >> source I'd say.
> >
> > Clearly that's not so, since when I take the output of DOTGenerator
> > and
> > pass it to dot, the results are very different than those produced
> > within ANTLRWorks itself.
>
> For DFA?  Just the squiggling lines.  All other viz stuff is done
> directly by Jean in AW.

That's too bad. DOT can't do what's required?

Anyway, in the long run (after the grammar is developed, stable and 
being used) I'm more interested in visualizing ASTs. I really liked 
your example on page 191 of TDAR and included it in the command-line 
driver I wrote for the parser I'm working on now.

But as I mentioned, the result it produces (when you render the 
resulting DOT file) is quite different from that produced when 
visualizing the AST in the ANTLRWorks debugger. I'd like to be able to 
replicate the latter.

Of course, I can play around with DOT, but I'd assumed that the graph 
visualization in ANTLRWorks was being done by dot?I figured that was 
why there was a configuration preference for the location of the dot 
executable.


> ...
>
> If I remember correctly, it's converting my DOT to DOT it can parse
> to get the splines out and display in Swing.

I see...


> Ter


Randall Schulz

From antlr at mirality.co.nz  Fri Jun 29 15:28:15 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 30 Jun 2007 10:28:15 +1200
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
In-Reply-To: <200706291516.07284.rschulz@sonic.net>
References: <200706291516.07284.rschulz@sonic.net>
Message-ID: <20070629222827.D187F11EB9C@www.antlr.org>

At 10:16 30/06/2007, Randall R Schulz wrote:
 >atomicSentence
 >returns [ Formula f ]
 >  : equation
 >    {
 >      f = $equation;
 >    }
 >
 >  | atom
 >    {
 >      f = $atom;
 >    }
 >  ;
 >
 >
 >I get these diagnostics from ANTLR:
 >
 >error(117): CLIFBuilder.g:1157:3: missing attribute access on 
rule
 >scope: equation
 >error(117): CLIFBuilder.g:1162:3: missing attribute access on 
rule
 >scope: atom

I think you need to use $equation.value and $atom.value.  Or 
something like that :)

And I think you're also supposed to say $f rather than just 
f.  Gives the code generator the opportunity to move things around.


From parrt at cs.usfca.edu  Fri Jun 29 15:29:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Jun 2007 15:29:52 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706291523.40524.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291504.01684.rschulz@sonic.net>
	<FDABD013-882F-4A2C-A381-3651F48E3772@cs.usfca.edu>
	<200706291523.40524.rschulz@sonic.net>
Message-ID: <4C3A41B8-65DF-4592-BA43-4FC21F27B1C0@cs.usfca.edu>


On Jun 29, 2007, at 3:23 PM, Randall R Schulz wrote:
> That's too bad. DOT can't do what's required?
>
> Anyway, in the long run (after the grammar is developed, stable and
> being used) I'm more interested in visualizing ASTs. I really liked
> your example on page 191 of TDAR and included it in the command-line
> driver I wrote for the parser I'm working on now.

pg 188 in printed book?  That was done with DOTTreeGenerator not  
ANTLRWorks.  ANTLRWorks builds its own ASTs.

> But as I mentioned, the result it produces (when you render the
> resulting DOT file) is quite different from that produced when
> visualizing the AST in the ANTLRWorks debugger. I'd like to be able to
> replicate the latter.

Oh, well, you'll have to look at AW source then...no dot involved.

Ter

From rschulz at sonic.net  Fri Jun 29 15:36:37 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 15:36:37 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <4C3A41B8-65DF-4592-BA43-4FC21F27B1C0@cs.usfca.edu>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291523.40524.rschulz@sonic.net>
	<4C3A41B8-65DF-4592-BA43-4FC21F27B1C0@cs.usfca.edu>
Message-ID: <200706291536.37866.rschulz@sonic.net>

On Friday 29 June 2007 15:29, Terence Parr wrote:
> On Jun 29, 2007, at 3:23 PM, Randall R Schulz wrote:
> > That's too bad. DOT can't do what's required?
> >
> > Anyway, in the long run (after the grammar is developed, stable and
> > being used) I'm more interested in visualizing ASTs. I really liked
> > your example on page 191 of TDAR and included it in the
> > command-line driver I wrote for the parser I'm working on now.
>
> pg 188 in printed book?  That was done with DOTTreeGenerator not
> ANTLRWorks.  ANTLRWorks builds its own ASTs.

No the code sample on page 191 of the printed book. It's page 203 of the 
PDF book. The graphic on page 188 (of the print book) is what I get 
when I render the dot produced by DOTTreeGenerator. What I'd like is 
what ANTLRWorks produces.

ANTLWorks does not execute the action code in the parser it's running?


> > But as I mentioned, the result it produces (when you render the
> > resulting DOT file) is quite different from that produced when
> > visualizing the AST in the ANTLRWorks debugger. I'd like to be able
> > to replicate the latter.
>
> Oh, well, you'll have to look at AW source then...no dot involved.

Oh, well, indeed.


> Ter


Randall Schulz

From rschulz at sonic.net  Fri Jun 29 15:45:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 15:45:21 -0700
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
In-Reply-To: <200706292228.l5TMSR3G023037@f.mx.sonic.net>
References: <200706291516.07284.rschulz@sonic.net>
	<200706292228.l5TMSR3G023037@f.mx.sonic.net>
Message-ID: <200706291545.21823.rschulz@sonic.net>

On Friday 29 June 2007 15:28, Gavin Lambert wrote:
> At 10:16 30/06/2007, Randall R Schulz wrote:
>  >atomicSentence
>  >returns [ Formula f ]
>  >
>  >  : equation
>  >
>  >    {
>  >      f = $equation;
>  >    }
>  >
>  >  | atom
>  >
>  >    {
>  >      f = $atom;
>  >    }
>  >  ;
>  >
>  >
>  >I get these diagnostics from ANTLR:
>  >
>  >error(117): CLIFBuilder.g:1157:3: missing attribute access on
>  >rule scope: equation
>  >error(117): CLIFBuilder.g:1162:3: missing attribute access on
>  >rule scope: atom 
>
> I think you need to use $equation.value and $atom.value.  Or
> something like that :)

Evidently it's "or something like that."

When I look at the generated source code, equation(), atom() and 
atomicSentence() all declare plain, unadorned Formulas, as their return 
types.

How to I get at the return values of rules when those rules appear on 
the right-hand-side of another rule?


> And I think you're also supposed to say $f rather than just
> f.  Gives the code generator the opportunity to move things around.

Hmm... OK. I see that's what I did in an earlier (non-tree) grammar I 
wrote. But "move things around?" Why would that be a good thing? Order 
of execution is kind of important in imperative languages...


Randall Schulz

From jaluber at gmx.de  Fri Jun 29 15:53:06 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 30 Jun 2007 00:53:06 +0200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <20070629185631.25690@gmx.net>
References: <468547D2.1050701@gmx.de> <20070629185631.25690@gmx.net>
Message-ID: <46858D52.7000501@gmx.de>

Markus Kuhla wrote:
> Hi,
> 
> I don't know if there's any differences for C#, but in Java I do:
> 1. do not generate in ANTLRworks (it ignores -debug option)
> 2. the generated parser has a second constructer argument, an DebugEventListener. I use it for the parse tree:
> 
> ParseTreeBuilder builder = new ParseTreeBuilder("start");
> testParser parser = new testParser(tokens, builder);
> parser.start();
> ParseTree pt = ((ParseTreeBuilder)builder).getTree();

I've noticed that the argument of ParseTreeBuilder is supposed to be the
grammar name, not the start rule. A short look with .NET Reflector into
the assembly told me (yes, that tool makes source code access nearly
superfluous - only a shame, that no comments survive the compilation and
that I have thought of it only a few days ago :( ). And isn't the
conversion of the ParseTreeBuilder builder into a ParseTreeBuilder kinda
superfluous here?

> But as I know your other posts, your problem may be much harder ;)

I know. I have sometimes the feeling that I'm the pilot of a supersonic
aircraft and I still have to push my vehicle by hand. :D But back the topic:

You are truly prophetic - I couldn't simply compile the code. Turns out,
that the template for C# uses constantly "location" instead "Location".
Then "dbg.RecognitionException(nvae);" is used, where no "nvae" is
available. Instead I had to replace those occurrences with "nvae_d4s0"
and similar (there were really many of those...). Then I've got this line:

protected ITreeAdaptor adaptor = new DebugTreeAdaptor(dbg, new
CommonTreeAdaptor());

It is trying to initialize a member via the non-constructor way with a
constructor-only argument, which of course the compiler doesn't know
about. I removed the assignment and added in each constructor the line:

adaptor = new DebugTreeAdaptor(dbg, new CommonTreeAdaptor());

Actually, in the one-parameter constructor I used "null" instead "dbg".
It would cause NullReferenceExceptions everywhere, if the TreeAdaptor
isn't set afterwards, but that seems to be the consequence anyway, as
this constructor chains to the one-argument base constructor
(Interestingly, the one-argument constructor has the line

ruleMemo = new IDictionary[154+1];

but the two-argument constructor does not. I'm further astonished that
no constructor chaining is done from the one-argument constructor to the
two-argument constructor.)

Then the DFA class DFA71 wants to access the dbg field from the parser
class, but the compiler doesn't allow this without having a reference to
the parser class. I had to add another constructor parameter to DFA71
and change things into the following:

private void InitializeCyclicDFAs()
{
     this.dfa71 = new DFA71(this, this.dbg);
}

And in DFA71:

IDebugEventListener dbg;

public DFA71(BaseRecognizer recognizer, IDebugEventListener dbg)
{
    this.recognizer = recognizer;
    this.decisionNumber = 71;
    this.eot = DFA71_eot;
    this.eof = DFA71_eof;
    this.min = DFA71_min;
    this.max = DFA71_max;
    this.accept     = DFA71_accept;
    this.special    = DFA71_special;
    this.transition = DFA71_transition;
    this.dbg = dbg;
}

After that it was easy to add override to

public virtual override void Error(NoViableAltException nvae)

because otherwise "virtual" would be wasted.

Nonetheless, I'm still missing some pieces. What I am supposed to do
with with the ParseTree pt? And when do I have to start ANTLRworks in
the remote debugging mode?

Best regards,
Johannes Luber

From rschulz at sonic.net  Fri Jun 29 16:20:22 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 16:20:22 -0700
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
In-Reply-To: <200706291545.21823.rschulz@sonic.net>
References: <200706291516.07284.rschulz@sonic.net>
	<200706292228.l5TMSR3G023037@f.mx.sonic.net>
	<200706291545.21823.rschulz@sonic.net>
Message-ID: <200706291620.22837.rschulz@sonic.net>

On Friday 29 June 2007 15:45, Randall R Schulz wrote:
> On Friday 29 June 2007 15:28, Gavin Lambert wrote:
> > ...
> >
> > I think you need to use $equation.value and $atom.value.  Or
> > something like that :)
>
> Evidently it's "or something like that."

OK. I think I've sorted it out. Some other problems with my grammar must 
have been cause the unadorned return types from rules. Now ANTLR is 
generating the usual <<rulename>>_return types and then the rule return 
attributes are referenced by their declared names.


> When I look at the generated source code, equation(), atom() and
> atomicSentence() all declare plain, unadorned Formulas, as their
> return types.

I don't know why that was happening, but it isn't any more. It probably 
had to do with other problems in the rule's action (perhaps the missing 
$ prefix on references to the return value name).


> ...


Randall Schulz

From whalliburton at gmail.com  Fri Jun 29 17:23:48 2007
From: whalliburton at gmail.com (William Halliburton)
Date: Fri, 29 Jun 2007 17:23:48 -0700
Subject: [antlr-interest] How do you use template output with backtracking
	on in a validating semantic predicate?
Message-ID: <4e7bd29e0706291723u796dae7dhd6b54781516e9c4a@mail.gmail.com>

How do I use the the output of a stringtemplate in predicates while
backtracking? I believe antlr only completes the template for the final path
and not for the subsequent failures.

Also, maybe this is the wrong approach and any other method would be most
appreciated.

Below is a simplification of my current project to demonstrate the problem.

I have a java function that takes a stringtemplate and checks its string
against a list. If backtracking is turned on then it receives a null, while
I need to to actually receive the template of bar.

Thank you.

----

tree grammar testing;

options {
    output=template;
    backtrack=true;
}

foo : ^(T1 a=bar) {myJavaFunction($a.st)}? -> {%{"asdfasdf"}}
    | alternative -> {$alternative.st}
    ;

----

Thank you all for this smart system.

William Halliburton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070629/73b4c8ec/attachment.html 

From belayda at gmail.com  Fri Jun 29 19:37:21 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Fri, 29 Jun 2007 19:37:21 -0700
Subject: [antlr-interest] tree grammar clarification
Message-ID: <3e5ed32f0706291937h21d87f67v8e0ed652c65f3477@mail.gmail.com>

Hello,


I'm having a problem converting a grammar to a tree grammar.

The grammar rule I need to translate is:

nonzeros : MYNZTN+ -> ^(MYNONZEROS MNZTN)+
              ;


I translated the above rule in my tree grammar as:

nonzeros:  ^(MYNONZEROS MNZTN)+
             ;

When I translate the above rule in my tree grammar, ANTLR 3.0
complains that the + is an unexpected token.  I would rather keep the
rule the way it is above.  If I have to change it, I have to change
other rules in the tree grammar.

Is the problem I'm runing into a feature?

thanks in advance!
-Bernardo Elayda

From jimi at temporal-wave.com  Fri Jun 29 19:48:11 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Jun 2007 19:48:11 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706291443.45161.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net><468576FA.8090807@jazillian.com>
	<200706291443.45161.rschulz@sonic.net>
Message-ID: <051466DAA0D608439E196797955018D76E58@wavemachine.temporal-wave.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Randall R Schulz
>
> On Friday 29 June 2007 14:17, Andy Tripp wrote:
> > See http://www.graphviz.org/
> 
> Gee, thanks... I never would have thought of looking at the
> documentation.

With the greatest respect, I think you could do with looking at this
just a little longer, and scanning the source code a bit. Andy was just
trying to help :-)

Jim


From tbrandonau at gmail.com  Fri Jun 29 19:58:53 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 30 Jun 2007 12:58:53 +1000
Subject: [antlr-interest] DebugParser constructors
In-Reply-To: <ebc876d70706281830u56cda4edyf270d76951769994@mail.gmail.com>
References: <ebc876d70706260806y1953a21v9fa8d9cd26476407@mail.gmail.com>
	<C3332F83-FEB0-4087-8CE4-3644B0B0EF23@cs.usfca.edu>
	<ebc876d70706281830u56cda4edyf270d76951769994@mail.gmail.com>
Message-ID: <ebc876d70706291958i24897605v3165004737722cc2@mail.gmail.com>

On 6/29/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
> On 6/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> >
> > On Jun 26, 2007, at 8:06 AM, Thomas Brandon wrote:
> >
> > > Would it be possible for debug parsers to delegate the public
> > > DebugParser(TokenStream input, DebugEventListener dbg) constructor. So
> > > you can provide a tracing listener, or a listener that doesn't block
> > > on socket. Saves having to keep switching debug on and off when doing
> > > some debugging in AW. Adding through members would break when
> > > debugging wasn't used.
> >
> > I pass in the parse tree builder and other stuff without sockets all
> > the time.  I am not sure what you mean here by delegating constructor.
> >
> > Ter
> >
> >
> When I generate debug code the only constructors I get in my generated
> parser are:
>     public TestParser(TokenStream input, int port)
> public TestParser(TokenStream input);
> So to be able to parse a debug stream I have to also add a
> TestParser(TokenStream input, DebugEventListener dbg) constructor.
>
> Tom.
>
Ah, OK, ANTLRWorks is using a different debug template to ANTLR, ANTLR
does generate the TestParser(TokenStream input, DebugEventListener
dbg) constructor, ANTLRWorks (1.0.2) does not. So my request would be
for ANTLRWorks to also provide this constructor.

Tom.

From jimi at temporal-wave.com  Fri Jun 29 19:59:14 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Jun 2007 19:59:14 -0700
Subject: [antlr-interest] tree grammar clarification
In-Reply-To: <3e5ed32f0706291937h21d87f67v8e0ed652c65f3477@mail.gmail.com>
References: <3e5ed32f0706291937h21d87f67v8e0ed652c65f3477@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E59@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bernardo Elayda


> I'm having a problem converting a grammar to a tree grammar.
> 
> The grammar rule I need to translate is:
> 
> nonzeros : MYNZTN+ -> ^(MYNONZEROS MNZTN)+
>               ;
> 

Your rewrite produces:

^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ...

Which I think you are aware of. So, I think that if you use:

rulea: nonzeros+ ;

nonzeros : ^(MYNONZEROS MNZTN) ;

I think you will be good to go.

Jim

From rschulz at sonic.net  Fri Jun 29 19:59:48 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 29 Jun 2007 19:59:48 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <051466DAA0D608439E196797955018D76E58@wavemachine.temporal-wave.com>
References: <200706290957.16258.rschulz@sonic.net>
	<200706291443.45161.rschulz@sonic.net>
	<051466DAA0D608439E196797955018D76E58@wavemachine.temporal-wave.com>
Message-ID: <200706291959.48695.rschulz@sonic.net>

On Friday 29 June 2007 19:48, Jim Idle wrote:
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Randall R Schulz
> >
> > On Friday 29 June 2007 14:17, Andy Tripp wrote:
> > > See http://www.graphviz.org/
> >
> > Gee, thanks... I never would have thought of looking at the
> > documentation.
>
> With the greatest respect, I think you could do with looking at this
> just a little longer, and scanning the source code a bit. Andy was
> just trying to help :-)

If one more person tells me to read the source code, I'm going to 
scream.

If I wanted to read the source code, I'd write the source code. I've got 
plenty of my own code to analyze, thank you.

The whole point of writing software is to perform a task and supply a 
service. If the users of that service have to read the source code to 
be able to use it, something is seriously amiss.


> Jim


RRS

From jimi at temporal-wave.com  Fri Jun 29 20:06:54 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Jun 2007 20:06:54 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706291959.48695.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net><200706291443.45161.rschulz@sonic.net><051466DAA0D608439E196797955018D76E58@wavemachine.temporal-wave.com>
	<200706291959.48695.rschulz@sonic.net>
Message-ID: <051466DAA0D608439E196797955018D76E5A@wavemachine.temporal-wave.com>

All I am saying is that there have been a lot of posts that I start to
read, in the hope I might help you, then I realize that there are two
more posts where you end up working out your issue, and it might behoove
you to just pause a minute before firing the email. The name Randall R
Schulz is floating before my eyes in residual image. 

I am not trying to offend you - I am genuinely willing to help, but
after three or four starts on an answer for a question that is
self-answered...

Jim

PS: read the source Luke =8?P

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Randall R Schulz
> Sent: Friday, June 29, 2007 8:00 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] More DOT Questions
> 
> On Friday 29 June 2007 19:48, Jim Idle wrote:
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Randall R Schulz
> > >
> > > On Friday 29 June 2007 14:17, Andy Tripp wrote:
> > > > See http://www.graphviz.org/
> > >
> > > Gee, thanks... I never would have thought of looking at the
> > > documentation.
> >
> > With the greatest respect, I think you could do with looking at this
> > just a little longer, and scanning the source code a bit. Andy was
> > just trying to help :-)
> 
> If one more person tells me to read the source code, I'm going to
> scream.
> 
> If I wanted to read the source code, I'd write the source code. I've
> got
> plenty of my own code to analyze, thank you.
> 
> The whole point of writing software is to perform a task and supply a
> service. If the users of that service have to read the source code to
> be able to use it, something is seriously amiss.
> 
> 
> > Jim
> 
> 
> RRS

From belayda at gmail.com  Fri Jun 29 20:19:03 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Fri, 29 Jun 2007 20:19:03 -0700
Subject: [antlr-interest] tree grammar clarification
In-Reply-To: <051466DAA0D608439E196797955018D76E59@wavemachine.temporal-wave.com>
References: <3e5ed32f0706291937h21d87f67v8e0ed652c65f3477@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E59@wavemachine.temporal-wave.com>
Message-ID: <3e5ed32f0706292019y4e261063tdd65183cea75efce@mail.gmail.com>

Hi,

> Your rewrite produces:
>
> ^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ...
>
> Which I think you are aware of. So, I think that if you use:
>
> rulea: nonzeros+ ;
>
> nonzeros : ^(MYNONZEROS MNZTN) ;
>
> I think you will be good to go.
Yup.  My original rewrite does and was intended to produces a list of
MYNONZEROS subtrees.  The suggestion you proposed was something I
already tried.  It ended up producing a familiar warning on the
'rulea':

Decision can match input such as "MYNONZERS" using multiple alternatives : 1,2
As a result, alternative(s) 2 were disabled for that input.

The solution ANTLR 3 seems to like is to edit the rule nonzeros as you
suggested, and then going back and using '*' or '?' througout my tree
grammar.  Luckily, my grammar is small but this could be a pain if the
grammar was much bigger.

Regards,
Bernardo


On 6/29/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bernardo Elayda
>
>
> > I'm having a problem converting a grammar to a tree grammar.
> >
> > The grammar rule I need to translate is:
> >
> > nonzeros : MYNZTN+ -> ^(MYNONZEROS MNZTN)+
> >               ;
> >
>
> Your rewrite produces:
>
> ^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ^(MYNONZEROS MYNZTN) ...
>
> Which I think you are aware of. So, I think that if you use:
>
> rulea: nonzeros+ ;
>
> nonzeros : ^(MYNONZEROS MNZTN) ;
>
> I think you will be good to go.
>
> Jim
>

From parrt at cs.usfca.edu  Fri Jun 29 10:06:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Jun 2007 10:06:41 -0700
Subject: [antlr-interest] More DOT Questions
In-Reply-To: <200706290957.16258.rschulz@sonic.net>
References: <200706290957.16258.rschulz@sonic.net>
Message-ID: <7CD2C5A3-6B85-4B60-A883-446E5A3EA48C@cs.usfca.edu>


On Jun 29, 2007, at 9:57 AM, Randall R Schulz wrote:

> Hi,
>
> Is there a way I can get the result of rendering (with the "dot"
> command) the output from instances of DOTTreeGenerator in a way more
> like that produced by ANTLRWorks?
>
> I'd also still like any answers possible to my previous questions
> (Subject: Using ANTLRWorks DOT Output), as would, I'm sure, Kai to his
> (Subject: ANTLRWorks dot parameters for rule graph), if anybody could
> supply them.

Not sure what you want...AW uses ANTLR's code to generate those trees  
I think.

Ter


From antlr-list at arizona-software.ch  Fri Jun 29 23:51:37 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Fri, 29 Jun 2007 23:51:37 -0700
Subject: [antlr-interest] Knowledge is Power ... But A Little Knowledge
	is a Dangerous Thing!
In-Reply-To: <200706260803.11200.rschulz@sonic.net>
References: <200706260803.11200.rschulz@sonic.net>
Message-ID: <6060D8FA-4C83-44E2-8AE7-011B5BD0943F@arizona-software.ch>

Thanks for your questions and for the people who answered them. Sorry  
for not responding to any e-mails these days but I just moved to  
Menlo Park and had a crazy week at work - barely time to sleep at  
night :-) I will catch up with my e-mails starting this week-end.

Regards,

Jean

On Jun 26, 2007, at 8:03 AM, Randall R Schulz wrote:

> Hi,
>
> Now that I've managed, with lots of help from Tom B. and Wincent  
> C., to
> get the ANTLRworks debugger working, two things come to mind:
>
> 1) The reason I started using ANTLR in the first place (I'd used  
> JavaCC
> for years), was because I asked around about tool support for parser
> generators. Someone pointed out that ANTLR has this nice ANTLRworks
> thing, so I decided to give ANTLR a try. But I developed one whole
> parser without really exploiting ANTLRworks.
>
> 2) Wow! ANTLRworks is really very powerful and useful, once you  
> scratch
> the surface and surmount some of its challenges.
>
>
> Thanks to everyone who helped and, of course, to Ter and Jean.
>
>
> Randall Schulz


From antlr-list at arizona-software.ch  Fri Jun 29 23:52:43 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Fri, 29 Jun 2007 23:52:43 -0700
Subject: [antlr-interest] Whither ANTLRworks.pdf?
In-Reply-To: <200706260911.00711.rschulz@sonic.net>
References: <200706260911.00711.rschulz@sonic.net>
Message-ID: <030673ED-827A-439D-B376-1AB9169D1F28@arizona-software.ch>

This pdf file was outdated. The new help file can be found here:

http://www.antlr.org/works/help/index.html

Jean

On Jun 26, 2007, at 9:11 AM, Randall R Schulz wrote:

> Hi,
>
> The footnote on page 15 of TDAR says that there is ANTLRworks
> documentation at <http://www.antlr.org/works/doc/antlrworks.pdf>, but
> that URL produces a 404 page.
>
> Searching with Google turned up
> <http://www.antlr.org/workshop/ANTLR2005/presentations/ 
> ANTLRWorks.pdf>,
> but that's just a few slides.
>
> Evidently, I wrote this several months back:
>
> On Sunday 12 November 2006 09:39, Randall R Schulz wrote:
>> I don't know how to use the debugger, and there appear to be
>> significant discrepancies between the ANTLRworks User's Guide
>> (<http://www.antlr.org/works/doc/antlrworks.pdf>) and the program as
>> it presents itself on my system. ...
>
> (I'm not having the problem I was back then, but that was a different
> grammar and I was using pre-release tools, but I'm encountering  
> ongoing
> questions and hate to pester the list with every little thing I come
> across.)
>
>
> Is there are updated version of the document in the offing?
>
>
> Randall Schulz


From ruth.karl at gmx.de  Sat Jun 30 00:03:25 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Sat, 30 Jun 2007 09:03:25 +0200
Subject: [antlr-interest]   Why do html comments ruin my grammar?
In-Reply-To: <4683CBEF.6020003@gmx.de>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
	<4683CBEF.6020003@gmx.de>
Message-ID: <4686003D.1040801@gmx.de>

Hi, I wonder if this message has ever been read of if I shall send it 
again? Does anyone have an idea about this problem? I really need some 
help there....
Thanks.
Ruth

Ruth Karl schrieb:
> Hello out there, I need some help....
>
> i have been spending hours to find a way to exclude html comments from 
> further analysis with my jsp parser.
> But when I add the lexer rule
>
> HTMLCOMMENT    :    '<!--' ( options {greedy=false;} : . )* '-->' 
> {$channel=HIDDEN;}    ;
>
> to my grammar (see attachment), the interpreter in ANTLRworks will 
> start to see '<!'  (like in '<!DOCTYPE html ...') as part of a TEXT 
> item, even though TEXT is defined as
>
> TEXT          options {greedy=false;}
>          :    
> (~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r'))+
>          ;
>
> which is confusing not only me but the parser as well... ;-)
>
>
> For the same reason, adding the HTMLCOMMENT lexer rule also causes 
> problems with the generated C# (!) code:
>
> a MismatchedTokenException will be thrown at mHTMLCOMMENT() method in 
> the lexer class when it comes to the line
>            Match("<!--");
>
> I thought I should somehow add a backtracking option and an exception 
> handling there, but I could not find out how... (backtracking option 
> does not seem to be allowed...???)
>
>
>
> I would really appreciate any kind of help, thanks a lot in advance!
> Ruth
>
>


From antlr at mirality.co.nz  Sat Jun 30 03:16:41 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 30 Jun 2007 22:16:41 +1200
Subject: [antlr-interest] Why do html comments ruin my grammar?
In-Reply-To: <4686003D.1040801@gmx.de>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
	<4683CBEF.6020003@gmx.de> <4686003D.1040801@gmx.de>
Message-ID: <20070630101651.F3E7F11EBA7@www.antlr.org>

At 19:03 30/06/2007, Ruth Karl wrote:
 >Hi, I wonder if this message has ever been read of if I shall
 >send it again? Does anyone have an idea about this problem? I
 >really need some help there....
[...]
 >> But when I add the lexer rule
 >>
 >> HTMLCOMMENT    :    '<!--' ( options {greedy=false;} : . )*
 >> '-->' {$channel=HIDDEN;}    ;
 >>
 >> to my grammar (see attachment), the interpreter in ANTLRworks
 >> will start to see '<!'  (like in '<!DOCTYPE html ...') as part 

 >> of a TEXT item, even though TEXT is defined as
 >>
 >> TEXT          options {greedy=false;}
 >>          :
 >>(~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r')
 >>)+
 >>          ;
 >>
 >> which is confusing not only me but the parser as well... ;-)

Try removing the greedy option from the TEXT rule.  I don't think 
it will actually work there, since that's a top-level lexer rule 
and you don't have any following characters within the rule 
itself.  (Though I could be wrong.)

But anyway, with those two rules you've posted, the ! will match 
TEXT, assuming the < has already matched some other token.


From ruth.karl at gmx.de  Sat Jun 30 04:23:52 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Sat, 30 Jun 2007 13:23:52 +0200
Subject: [antlr-interest] Why do html comments ruin my grammar?
In-Reply-To: <20070630101653.8667gmx1@mx082.gmx.net>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
	<4683CBEF.6020003@gmx.de> <4686003D.1040801@gmx.de>
	<20070630101653.8667gmx1@mx082.gmx.net>
Message-ID: <46863D48.5020509@gmx.de>

Gavin Lambert schrieb:
> At 19:03 30/06/2007, Ruth Karl wrote:
> >Hi, I wonder if this message has ever been read of if I shall
> >send it again? Does anyone have an idea about this problem? I
> >really need some help there....
> [...]
> >> But when I add the lexer rule
> >>
> >> HTMLCOMMENT    :    '<!--' ( options {greedy=false;} : . )*
> >> '-->' {$channel=HIDDEN;}    ;
> >>
> >> to my grammar (see attachment), the interpreter in ANTLRworks
> >> will start to see '<!'  (like in '<!DOCTYPE html ...') as part
> >> of a TEXT item, even though TEXT is defined as
> >>
> >> TEXT          options {greedy=false;}
> >>          :
> >>(~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r')
> >>)+
> >>          ;
> >>
> >> which is confusing not only me but the parser as well... ;-)
>
> Try removing the greedy option from the TEXT rule.  I don't think it 
> will actually work there, since that's a top-level lexer rule and you 
> don't have any following characters within the rule itself.  (Though I 
> could be wrong.)
>
> But anyway, with those two rules you've posted, the ! will match TEXT, 
> assuming the < has already matched some other token.
>
Hi Gavin,

thanks a lot for your help. Leaving the greedy option out did not help - 
but I found a solution by myself now: (and it is so simple!): I just 
added another lexer rule:

DOCTYPE    :    '<!DOCTYPE' ( options {greedy=false;} : . )* '>'    ;

Thanks anyway, and have a nice day,
Ruth

From pink at odahoda.de  Sat Jun 30 04:42:21 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 30 Jun 2007 13:42:21 +0200
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
References: <200706291516.07284.rschulz@sonic.net>
	<200706292228.l5TMSR3G023037@f.mx.sonic.net>
	<200706291545.21823.rschulz@sonic.net>
Message-ID: <f65fit$dvn$1@sea.gmane.org>

Randall R Schulz wrote:

> On Friday 29 June 2007 15:28, Gavin Lambert wrote:
>> At 10:16 30/06/2007, Randall R Schulz wrote:
>>  >atomicSentence
>>  >returns [ Formula f ]
>>  >
>>  >  : equation
>>  >
>>  >    {
>>  >      f = $equation;
>>  >    }
>>  >
>>  >  | atom
>>  >
>>  >    {
>>  >      f = $atom;
>>  >    }
>>  >  ;
>>  >
>>  >
>>  >I get these diagnostics from ANTLR:
>>  >
>>  >error(117): CLIFBuilder.g:1157:3: missing attribute access on
>>  >rule scope: equation
>>  >error(117): CLIFBuilder.g:1162:3: missing attribute access on
>>  >rule scope: atom
>>
>> I think you need to use $equation.value and $atom.value.  Or
>> something like that :)
> 
> Evidently it's "or something like that."
> 
> When I look at the generated source code, equation(), atom() and
> atomicSentence() all declare plain, unadorned Formulas, as their return
> types.
> 
> How to I get at the return values of rules when those rules appear on
> the right-hand-side of another rule?

If equation looks like

equation returns [ Formula f ]
...

you'll have to use "$equation.f" to get at the return value.

>> And I think you're also supposed to say $f rather than just
>> f.  Gives the code generator the opportunity to move things around.
> 
> Hmm... OK. I see that's what I did in an earlier (non-tree) grammar I
> wrote. But "move things around?" Why would that be a good thing? Order
> of execution is kind of important in imperative languages...

Stuff is not moved around, but ANTLR may translate '$f = ...' to 
'f = ...' or 'retval.f = ...', depending on the use of other attributes.
So 'f = ...' may work, but break later on a seemingly unrelated change to
the rule (e.g. if some other rule far away in the grammar used
$atomicSentence.start).

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From aliaazimi at yahoo.com  Sat Jun 30 05:24:10 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sat, 30 Jun 2007 05:24:10 -0700 (PDT)
Subject: [antlr-interest] newbie problem
Message-ID: <572041.57203.qm@web58112.mail.re3.yahoo.com>

Hi,
   
  How can I modify the following antlr grammar to add a ',' ,whenever it matches more than one instance of 'variable':='expression' or 'informaltext'? In another word how can I modify the grammar to seperate the instances of for example 'infromaltext' by a comma?(so when there is just one 'informaltext', it does not add a comma).
   
  taskbody:(variable':='expression)+
 |informaltext+
 ;
   
  Many thanks in advance
   
  Regards,
  Al

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070630/20e1bd1b/attachment.html 

From vbar at comp.cz  Sat Jun 30 05:37:25 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Sat, 30 Jun 2007 14:37:25 +0200
Subject: [antlr-interest] newbie problem
In-Reply-To: <572041.57203.qm@web58112.mail.re3.yahoo.com>
References: <572041.57203.qm@web58112.mail.re3.yahoo.com>
Message-ID: <200706301437.25858.vbar@comp.cz>

On Saturday 30 June 2007 14:24, ali azimi wrote:
>   How can I modify the following antlr grammar to add a ',' ,whenever it
> matches more than one instance of 'variable':='expression' or
> 'informaltext'? In another word how can I modify the grammar to seperate
> the instances of for example 'infromaltext' by a comma?(so when there is
> just one 'informaltext', it does not add a comma).
>
>   taskbody:(variable':='expression)+
>  	|informaltext+
>  	;
AFAIK the normal way is to specify

taskbody: taskitem ( ',' taskitem )*
	;

taskitem: ( variable ':=' expression )
	| informaltext
	;

(This supposes you do want to mix assignments with informal text in a single 
taskbody.)

	Bye
		Vasek

From qwertie256 at gmail.com  Sat Jun 30 06:06:46 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 07:06:46 -0600
Subject: [antlr-interest] C# runtime?
Message-ID: <ce40b1470706300606u1ba132d4v9fb6606d14bbfd30@mail.gmail.com>

Does anyone know why the source code is not available? Is it closed
source? What's the licence?

> Not at the moment. We should probably link to that article from the C# wiki
> page.

> http://www.manuelabadia.com/blog/PermaLink,guid,ff1dc504-f854-40b4-bfe7-250ce91efad7.aspx

From rschulz at sonic.net  Sat Jun 30 06:54:50 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 30 Jun 2007 06:54:50 -0700
Subject: [antlr-interest] Attribute Access in Tree Grammar Actions
In-Reply-To: <f65fit$dvn$1@sea.gmane.org>
References: <200706291516.07284.rschulz@sonic.net>
	<200706291545.21823.rschulz@sonic.net> <f65fit$dvn$1@sea.gmane.org>
Message-ID: <200706300654.50243.rschulz@sonic.net>

On Saturday 30 June 2007 04:42, Benjamin Niemann wrote:
> Randall R Schulz wrote:
> > ...
> >
> > How to I get at the return values of rules when those rules appear
> > on the right-hand-side of another rule?
>
> If equation looks like
>
> equation returns [ Formula f ]
> ...
>
> you'll have to use "$equation.f" to get at the return value.

Thanks. I finally figured that out.


> >> And I think you're also supposed to say $f rather than just
> >> f.  Gives the code generator the opportunity to move things
> >> around.
> >
> > ...


Randall Schulz

From robermann at gmail.com  Sat Jun 30 07:00:07 2007
From: robermann at gmail.com (robermann)
Date: Sat, 30 Jun 2007 16:00:07 +0200
Subject: [antlr-interest] Fig: a generic config file reader
In-Reply-To: <0B34285A-EB68-484C-B987-E1C4D857EF7D@cs.usfca.edu>
References: <0B34285A-EB68-484C-B987-E1C4D857EF7D@cs.usfca.edu>
Message-ID: <414e44f70706300700w497a7e65g22e9b3353c0861dc@mail.gmail.com>

Hi, I've just added a comment in
http://www.antlr.org/wiki/display/ANTLR3/Fig+-+Generic+configuration+language+interpreter
.

Basically I think the parser, to be really FIG (see the PS :)) should return
a Map object, not a List:

Map config_objects = parserFigo.file();

instead of a List:

List config_objects = parserFigo.file();

What do you think?

PS: Italian word "figo!" means something like your "cool!" :) I think you
know it Terence :D

On 6/19/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Hi,
>
> For my talk tomorrow, I built a simple example that I will go over:
>
> http://www.antlr.org/wiki/display/ANTLR3/Fig+-+Generic+configuration
> +language+interpreter
>
> Intro:
> Many applications need configuration files. In the old days people
> built their own syntax and parser. Then people tried to use simple
> property files with Java. Now people use XML for everything, but XML
> is a horrible Human interface (see "Humans should not have to grok
> XML"); XML is fine for data if you don't mind the verboseness. This
> article describes Fig, a little config file reader that I made for my
> talk at the Sydney Java users group June 20, 2007. The basic goal is
> to allow an application to include the fig.jar and then use the Fig
> parser to suck in files, the result of which is a list of objects.
> Fig supports strings, ints, lists, and references to other
> configuration objects. Fig uses reflection to create instances and
> call setters or set fields directly (if no setter exists).
>
> Ter
>



-- 
Are you tired of making software? Play it! ( http://www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070630/e1fa6dfb/attachment.html 

From rerdavies at rogers.com  Sat Jun 30 08:01:10 2007
From: rerdavies at rogers.com (Robin Davies)
Date: Sat, 30 Jun 2007 11:01:10 -0400
Subject: [antlr-interest] Interesting trick for forcing position of
	child nodes in ASTs.
In-Reply-To: <468574F6.9060307@jazillian.com>
References: <04B67698EB004FFBBB1DEBDEFC54EACA@GWB>
	<468574F6.9060307@jazillian.com>
Message-ID: <5F682DB84C6F4E7AA4E19CAC4A98CDD7@GWB>

> List<AST> getChildrenOfType(int type) {
>    List<AST> matches = new ArrayList<AST>();
>    for (AST child: children) {
 >      if (child.getType() == type) {
 >        matches.add(child);
 >     }
 >   }
 >   return matches;
>}

But that assumes that all the children are of the same type. In a heterogenous AST, in a real grammar, an AST nodes that match an "expression" rule, for example, could be any 40 or 50 different node types (either the AST type or the C#/Java type of the heterogenous node). There are at least half a dozen rules that will have AST nodes of very diverse types (global_statement, statement, expression, typereference, &c). And it's not at all clear to me at this point, that I can unambiguously determine the grouping of child nodes based solely on type in a large realworld grammar.

And what about rules like this:

    class_declaration
        :  attributes* modifiers* 'partial'? 'class' ID type_argument_list? base_classes? type_constraints? class_body
            -> ^(CLASS_DECLARATION attributes* modifiers* 
                    'partial'? ID type_argument_list? base_classes? 
                    type_constraints? class_body)
        ;

where 'partial' is a raw token?

You might be able to write:
        bool partialClass = (getChildrenOfType(typeof(TokenNode))[0].Text == "partial");

(what *is* the unambigous type of a token?) 
 
or you could modify the rule as follows:

    class_declaration
        :  attributes* modifiers* 'partial'? 'class' ID type_argument_list? base_classes? type_constraints? class_body
            -> ^(CLASS_DECLARATION 
                        ^(LIST attributes*)
                        ^(LIST modifiers*)
                        ^(OPTIONAL 'partial'?)
                        ID 
                        ^(OPTIONAL type_argument_list?) 
                        ^(OPTIONAL base_classes?)
                        ^(OPTIONAL type_constraints?)
                         class_body)

and write

        bool partialClass = IsOptionalChildPresent(3);

Although it is possible in general to generate artificial superclasses for groups nodes of nodes that bear functional resemblance to each other ("ExpressionNode", "TypeNameNode", "StatementNode", etc), it's also not clear to me that I can generate an unambiguos inheritance structure in single-inheritance languages like C# or Java. 

Certainly, there are many cases where I would have to refactor the grammar to allow the introduction of artifial nodes to provide unique classes. e.g.:
        local_variable_declarator
            : ID '=' initializer 
            | ID
            ;

        initializer:
            :    array_initializer
            |    expression  ->  ^(EXPRESSION_INITIALIZER expression)  // generates a subtype of InitiializerNode
            ;

It also assumes that the overhead of getChildrenOfType is preferrable to overhead at AST construction time. I'm not sure whether performance will be an issue yet or not, but it seems preferrable to take a minor performance hit at tree construction time than to take a multiple peformance hits at code generation time.

The main problem with NOT using structural nodes is that you need to think very carefully about how to differentiate nodes in an AST. And having to thinking carefully is a bad thing, from a programming point of view.
        


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070630/d368ba74/attachment-0001.html 

From vbar at comp.cz  Sat Jun 30 08:00:12 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Sat, 30 Jun 2007 17:00:12 +0200
Subject: [antlr-interest] Fig: a generic config file reader
In-Reply-To: <414e44f70706300700w497a7e65g22e9b3353c0861dc@mail.gmail.com>
References: <0B34285A-EB68-484C-B987-E1C4D857EF7D@cs.usfca.edu>
	<414e44f70706300700w497a7e65g22e9b3353c0861dc@mail.gmail.com>
Message-ID: <200706301700.12239.vbar@comp.cz>

On Saturday 30 June 2007 16:00, robermann wrote:
> Hi, I've just added a comment in
> http://www.antlr.org/wiki/display/ANTLR3/Fig+-+Generic+configuration+langua
>ge+interpreter .
...
> What do you think?
Well, what's wrong with JSON (that YAML doesn't solve :-) )?

> > Intro:
> > Many applications need configuration files. In the old days people
> > built their own syntax and parser. Then people tried to use simple
> > property files with Java. Now people use XML for everything, but XML
> > is a horrible Human interface (see "Humans should not have to grok
> > XML"); XML is fine for data if you don't mind the verboseness. This
> > article describes Fig, a little config file reader that I made for my
> > talk at the Sydney Java users group June 20, 2007. The basic goal is
I think the grammar is fine for pedagogical purposes, but for practical usage, 
we have better alternatives to XML and there's no need to reinvent the wheel.

	Bye
		Vasek

From qwertie256 at gmail.com  Sat Jun 30 09:16:16 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 10:16:16 -0600
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer (C#)
Message-ID: <ce40b1470706300916y15083664sa9341d3564e92b40@mail.gmail.com>

When I attempted to generate my "first try" at making a Lexer, ANTLR
produced a 21.9 megabyte source file (310,643 lines) filled mostly
with variables like dfa32_transition15; each transition array for the
most part contains the same number repeated thousands of times.

I was curious to know if the grammar actually worked, but after 15
minutes Visual C# still had not finished compiling it, though it was
using 1.6 GB of virtual memory. I killed it since the whole computer
was unresponsive (a longstanding flaw in Windows).

The problem seems related to these two rules, because without them, no
transition arrays are created at all:

ML_COMMENT:  '/*' (ML_COMMENT | .)* '*/' { $channel = HIDDEN; };

PUNC: ( ('\\' WS_CHAR)=>'\\'
      | (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'|'*'
        |'-'|'+'|'='|'|'|','|'<'|'>'|'/'|'?')
      )+;

If PUNC is in the grammar but not ML_COMMENT, a 2.38 MB file comes
out. If ML_COMMENT is present but not PUNC, a 8.16 MB file comes out.
I get a strange warning for ML_COMMENT (when PUNC is absent; if PUNC
is present, it gets even stranger):

[08:35:47] warning(206): Huge.g:1:10: Alternative 4: after matching
input such as '/''*''/''*''/''*''/''*''/'<EOT> decision cannot predict
what comes next due to recursion overflow to ML_COMMENT from
ML_COMMENT

Puzzling, yes? But with some fiddling, another warning suggests that
the problem has something to do with backslashes:

warning(206): Huge.g:1:10: Alternative 4: after matching input such as
'/''*''*''\\''/''*''*''\\''/''
*''*''\\''/''*''*''\\''*'{'\u0000'..'\b', '\u000B'..'\f',
'\u000E'..'\u001F', '!'..')', '+'..'.', '0
'..'[', ']'..'\uFFFE'}'/''\u0000'..'\uFFFE' decision cannot predict
what comes next due to recursion overflow to ML_COMMENT from
ML_COMMENT

I realize it comes from my regular expression rule:

RE_STRING: {input.LA(2) != '*'}? '/' (RE_CHAR)+ '/'; //	| '@/'
(RE_CHAR | WS_CHAR) '/';

RE_STRING: '/' (RE_CHAR)+ '/';
fragment RE_CHAR: RE_ESC | ~('/' | '\\' | '\r' | '\n' | ' ' | '\t' );
fragment RE_ESC: '\\' .;

So there's an ambiguity for something like /*\*/: is it a comment or a
regex? So I try

RE_STRING: {input.LA(2) != '*'}? '/' (RE_CHAR)+ '/';

19 MB.

ML_COMMENT: ('/*') => '/*' (ML_COMMENT | .)* '*/' { $channel = HIDDEN; };

8.16 MB.

In fact, this is all it takes to get a 19 MB output file:

--------------------------------------------------------------------------
lexer grammar Huge;
options
{
	language = 'CSharp';
	k = *;
}
fragment WS_CHAR: ' ' | '\t';
ML_COMMENT: ('/*')=> '/*' (ML_COMMENT | .)* '*/';
RE_STRING: '/' (RE_CHAR)+ '/';
fragment RE_CHAR: RE_ESC | ~('/' | '\\' | '\r' | '\n' | ' ' | '\t' );
fragment RE_ESC: '\\' .;
PUNC: ( ('\\' WS_CHAR)=>'\\'
      | (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'|'*'
        |'-'|'+'|'='|'|'|','|'<'|'>'|'/'|'?')
      )+;
--------------------------------------------------------------------------

Remove PUNC and you still get 6.3 MB and this warning:

[09:09:14] warning(206): Huge.g:1:10: Alternative 1: after matching
input such as '/''*''*''\\''/''*''*''\\''/''*''*''\\''/''*''*''\\''*'{'\u0000'..'\b',
'\u000B'..'\f', '\u000E'..'\u001F', '!'..')', '+'..'.', '0'..'[',
']'..'\uFFFE'}'/''\u0000'..'\uFFFE' decision cannot predict what comes
next due to recursion overflow to ML_COMMENT from ML_COMMENT

The strange thing is, the Java target doesn't have a problem. This
Lexer is "only" 30 KB in Java. I thought StringTemplate was just a
somewhat superficial conversion process - why the big difference?

And why doesn't the syntactic predicate help?

There is no problem if ML_COMMENT is the only rule in the file, but in
that case the rule doesn't work: apparently it never recognizes the
closing "*/" as such. Luckily, this solves the problem:

ML_COMMENT: ('/*')=> '/*' (options{greedy=false;} : ML_COMMENT | .)* '*/';

However, I am very curious to know how "greedy=false" affects the
subrule "ML_COMMENT"; ANTLR would not let me use simply

ML_COMMENT: ('/*')=> '/*' (ML_COMMENT | options{greedy=false;} : .)* '*/';

I know this has been long-winded but I hope someone could give me some
advice about how to get ML_COMMENT, RE_STRING and PUNC to work
together nicely.

-- 
- David
http://qism.blogspot.com

From jimi at temporal-wave.com  Sat Jun 30 09:47:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 30 Jun 2007 09:47:15 -0700
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer (C#)
In-Reply-To: <ce40b1470706300916y15083664sa9341d3564e92b40@mail.gmail.com>
References: <ce40b1470706300916y15083664sa9341d3564e92b40@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E5D@wavemachine.temporal-wave.com>

David,

Your ML_COMMENT needs to be a fragment rule and you need a predicate to
stop '.' interfering with ML_COMMENT. I just produce this rule for my
T-SQL lexer in fact (C here but the predicate is just input.LA(n) for
Java):

// A multiline comment is akin to a C style comment and is bounded
// by /* and */. However the T-SQL lexer allows for, and checks
// embedded comments. See how here we use a fragment rule to define
// the lexical construct, as this does not try to create tokens and
// hence can be called recursively by itself. The actual token making
// rule here then, just calls that fragment rule.
//
ML_COMMENT
	:	ML_COMFRAG
		{
			$channel = HIDDEN;
		}
	;
	
// This rule is a fragment so that it can call itself recursively
// and deal with multiple embedded comments.
//
fragment	ML_COMFRAG
		:
			'/*' ( options { greedy=false;}
			
					// The predicate looks for the
start of an embedded comment
					// and this triggers a recursive
call of this rule
					// and therefore automatically
matches /* and */ pairs.
					//
					: {(LA(1)== '/' && LA(2) ==
'*')}? ML_COMFRAG 
					|  .
					)* '*/'
					

		;

That should help with that part. Then is your PUNC rule something that
returns a token, or are you using that somewhere else too?

Check your lexer rules and if you use one rule inside another, ensure
that it is a fragment rule. My guess is that will cure most of your
issues here.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David Piepgrass
> Sent: Saturday, June 30, 2007 9:16 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
> (C#)
> 
> When I attempted to generate my "first try" at making a Lexer, ANTLR
> produced a 21.9 megabyte source file (310,643 lines) filled mostly
> with variables like dfa32_transition15; each transition array for the
> most part contains the same number repeated thousands of times.
> 
> I was curious to know if the grammar actually worked, but after 15
> minutes Visual C# still had not finished compiling it, though it was
> using 1.6 GB of virtual memory. I killed it since the whole computer
> was unresponsive (a longstanding flaw in Windows).
> 
> The problem seems related to these two rules, because without them, no
> transition arrays are created at all:
> 
> ML_COMMENT:  '/*' (ML_COMMENT | .)* '*/' { $channel = HIDDEN; };
> 
> PUNC: ( ('\\' WS_CHAR)=>'\\'
>       | (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'|'*'
>         |'-'|'+'|'='|'|'|','|'<'|'>'|'/'|'?')
>       )+;
> 
> If PUNC is in the grammar but not ML_COMMENT, a 2.38 MB file comes
> out. If ML_COMMENT is present but not PUNC, a 8.16 MB file comes out.
> I get a strange warning for ML_COMMENT (when PUNC is absent; if PUNC
> is present, it gets even stranger):
> 
> [08:35:47] warning(206): Huge.g:1:10: Alternative 4: after matching
> input such as '/''*''/''*''/''*''/''*''/'<EOT> decision cannot predict
> what comes next due to recursion overflow to ML_COMMENT from
> ML_COMMENT
> 
> Puzzling, yes? But with some fiddling, another warning suggests that
> the problem has something to do with backslashes:
> 
> warning(206): Huge.g:1:10: Alternative 4: after matching input such as
> '/''*''*''\\''/''*''*''\\''/''
> *''*''\\''/''*''*''\\''*'{'\u0000'..'\b', '\u000B'..'\f',
> '\u000E'..'\u001F', '!'..')', '+'..'.', '0
> '..'[', ']'..'\uFFFE'}'/''\u0000'..'\uFFFE' decision cannot predict
> what comes next due to recursion overflow to ML_COMMENT from
> ML_COMMENT
> 
> I realize it comes from my regular expression rule:
> 
> RE_STRING: {input.LA(2) != '*'}? '/' (RE_CHAR)+ '/'; //	| '@/'
> (RE_CHAR | WS_CHAR) '/';
> 
> RE_STRING: '/' (RE_CHAR)+ '/';
> fragment RE_CHAR: RE_ESC | ~('/' | '\\' | '\r' | '\n' | ' ' | '\t' );
> fragment RE_ESC: '\\' .;
> 
> So there's an ambiguity for something like /*\*/: is it a comment or a
> regex? So I try
> 
> RE_STRING: {input.LA(2) != '*'}? '/' (RE_CHAR)+ '/';
> 
> 19 MB.
> 
> ML_COMMENT: ('/*') => '/*' (ML_COMMENT | .)* '*/' { $channel = HIDDEN;
> };
> 
> 8.16 MB.
> 
> In fact, this is all it takes to get a 19 MB output file:
> 
>
-----------------------------------------------------------------------
> ---
> lexer grammar Huge;
> options
> {
> 	language = 'CSharp';
> 	k = *;
> }
> fragment WS_CHAR: ' ' | '\t';
> ML_COMMENT: ('/*')=> '/*' (ML_COMMENT | .)* '*/';
> RE_STRING: '/' (RE_CHAR)+ '/';
> fragment RE_CHAR: RE_ESC | ~('/' | '\\' | '\r' | '\n' | ' ' | '\t' );
> fragment RE_ESC: '\\' .;
> PUNC: ( ('\\' WS_CHAR)=>'\\'
>       | (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'|'*'
>         |'-'|'+'|'='|'|'|','|'<'|'>'|'/'|'?')
>       )+;
>
-----------------------------------------------------------------------
> ---
> 
> Remove PUNC and you still get 6.3 MB and this warning:
> 
> [09:09:14] warning(206): Huge.g:1:10: Alternative 1: after matching
> input such as
>
'/''*''*''\\''/''*''*''\\''/''*''*''\\''/''*''*''\\''*'{'\u0000'..'\b',
> '\u000B'..'\f', '\u000E'..'\u001F', '!'..')', '+'..'.', '0'..'[',
> ']'..'\uFFFE'}'/''\u0000'..'\uFFFE' decision cannot predict what comes
> next due to recursion overflow to ML_COMMENT from ML_COMMENT
> 
> The strange thing is, the Java target doesn't have a problem. This
> Lexer is "only" 30 KB in Java. I thought StringTemplate was just a
> somewhat superficial conversion process - why the big difference?
> 
> And why doesn't the syntactic predicate help?
> 
> There is no problem if ML_COMMENT is the only rule in the file, but in
> that case the rule doesn't work: apparently it never recognizes the
> closing "*/" as such. Luckily, this solves the problem:
> 
> ML_COMMENT: ('/*')=> '/*' (options{greedy=false;} : ML_COMMENT | .)*
> '*/';
> 
> However, I am very curious to know how "greedy=false" affects the
> subrule "ML_COMMENT"; ANTLR would not let me use simply
> 
> ML_COMMENT: ('/*')=> '/*' (ML_COMMENT | options{greedy=false;} : .)*
> '*/';
> 
> I know this has been long-winded but I hope someone could give me some
> advice about how to get ML_COMMENT, RE_STRING and PUNC to work
> together nicely.
> 
> --
> - David
> http://qism.blogspot.com

From qwertie256 at gmail.com  Sat Jun 30 10:44:33 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 11:44:33 -0600
Subject: [antlr-interest] C# runtime - source code found!
Message-ID: <ce40b1470706301044t17352200o36b47ae67a7b0dd5@mail.gmail.com>

> Does anyone know why the source code is not available? Is it closed
> source? What's the licence?

While these questions remain unanswered, I have found an amazingly
good tool called "Reflector" and a disassembly helper. For more
information see

http://www.aisto.com/roeder/dotnet/
http://www.codeplex.com/reflectoraddins
http://www.denisbauer.com/NETTools/FileDisassembler.aspx

I have discovered that the assembly contains full symbol information
including local variable names, and the tool outputs suprisingly
high-level code. If you don't want to reconstruct it yourself, you can
get it here:

http://qwertie.net/misc/Antlr3.Runtime-Disasm.zip

The add-in even creates a project file! Right on!

From easjolly at ix.netcom.com  Sat Jun 30 13:25:04 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Sat, 30 Jun 2007 14:25:04 -0600
Subject: [antlr-interest] Multiple lexers with one parser
Message-ID: <E1I4jUW-0002Uc-Qh@elasmtp-curtail.atl.sa.earthlink.net>

I've just gotten my copy of the new ANTLR v3 book and am happy and amazed to
discover how much I will be able to simplify my current ANTLR v2
application.  

However I have a question about the best approach to using multiple lexers
with a single parser in v3.  (I know I could use lexer states in a single
lexer but I've found that my current use of multiple lexers considerably
simplifies maintenance for this lexer grammar.)

It appears that in v3 all that is required for multiple lexer instances to
share the same input is for them to each be created using the same instance
of the input stream. So my question is how to handle the multiplexing?

It looks as though subclassing nextToken() in the primary lexer so as to
obtain tokens from auxiliary lexers is one strategy.  Is this the best
approach?

Thanks! 



From qwertie256 at gmail.com  Sat Jun 30 16:12:17 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 17:12:17 -0600
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
Message-ID: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>

> Your ML_COMMENT needs to be a fragment rule and you need a predicate to
> stop '.' interfering with ML_COMMENT. I just produce this rule for my
> T-SQL lexer in fact (C here but the predicate is just input.LA(n) for
> Java):

Thanks, but is it really necessary to use a fragment? At the end of my
message I noted that this rule seems to work okay:

ML_COMMENT:
    ('/*')=> '/*'
    (options{greedy=false;} : ML_COMMENT | .)*
    '*/'
    { $channel = HIDDEN; };

ANTLR's architecture has changed and rules do not actually create
tokens (did they in v2?). All token functions return void.

> fragment        ML_COMFRAG
>             :
>                     '/*' ( options { greedy=false;}
>                                 : {(LA(1)== '/' && LA(2) == '*')}? ML_COMFRAG
>                                 |  .
>                                 )* '*/'
>             ;
>
> That should help with that part. Then is your PUNC rule something that
> returns a token, or are you using that somewhere else too?

PUNC returns a token and is not used anywhere else. Its job is to
gather any sequence of adjacent punctuation into one token, which is a
problem because  a string like /*!*/ matches all three rules:
ML_COMMENT, PUNC and RE_STRING.

It's too bad I can't assign "priorities" to each rule. I would like to
match /* as a comment whenever possible, with /regular-expressions/
having the next-highest priority and PUNC having the lowest.

The reason I treat punctuation this was, by the way, is that the set
of available operators can be user-defined and it can vary by scope.
Therefore it is not possible to identify operators within the lexer.

-- 
- David
http://qism.blogspot.com

From antlr at mirality.co.nz  Sat Jun 30 16:59:34 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Jul 2007 11:59:34 +1200
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.co
 m>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
Message-ID: <20070630235942.959E511EBDF@www.antlr.org>

At 11:12 1/07/2007, David Piepgrass wrote:
 >It's too bad I can't assign "priorities" to each rule. I
 >would like to match /* as a comment whenever possible, with
 >/regular-expressions/ having the next-highest priority and
 >PUNC having the lowest.

Lexer rules are implicitly assigned priorities based on what order 
they appear in the grammar -- rules that appear first are 
preferred over ones that are listed later.

Having said that, I think there's also a longest-match-wins rule 
too, and I'm not sure how they interact.


From jimi at temporal-wave.com  Sat Jun 30 17:15:30 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 30 Jun 2007 17:15:30 -0700
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>

Yes, you need to use the fragment, though in this particular case, you
might actually get away with it. If you leave rules that are not
creating tokens as non fragment rules then the lexer thinks it has to
create tokens for them and you get clashes.

The lexer will assign the priority from top to bottom in listed order so
you should be able to achieve what you need - I find you get simpler
lexers though if you code the rule yourself to eliminate clashes and use
$type = xxx;. 

User operators eh, how do they specify precedence?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David Piepgrass
> Sent: Saturday, June 30, 2007 4:12 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fun with ANTLR3: mystery of the huge
> lexer
> 
> > Your ML_COMMENT needs to be a fragment rule and you need a predicate
> to
> > stop '.' interfering with ML_COMMENT. I just produce this rule for
my
> > T-SQL lexer in fact (C here but the predicate is just input.LA(n)
for
> > Java):
> 
> Thanks, but is it really necessary to use a fragment? At the end of my
> message I noted that this rule seems to work okay:
> 
> ML_COMMENT:
>     ('/*')=> '/*'
>     (options{greedy=false;} : ML_COMMENT | .)*
>     '*/'
>     { $channel = HIDDEN; };
> 
> ANTLR's architecture has changed and rules do not actually create
> tokens (did they in v2?). All token functions return void.
> 
> > fragment        ML_COMFRAG
> >             :
> >                     '/*' ( options { greedy=false;}
> >                                 : {(LA(1)== '/' && LA(2) == '*')}?
> ML_COMFRAG
> >                                 |  .
> >                                 )* '*/'
> >             ;
> >
> > That should help with that part. Then is your PUNC rule something
> that
> > returns a token, or are you using that somewhere else too?
> 
> PUNC returns a token and is not used anywhere else. Its job is to
> gather any sequence of adjacent punctuation into one token, which is a
> problem because  a string like /*!*/ matches all three rules:
> ML_COMMENT, PUNC and RE_STRING.
> 
> It's too bad I can't assign "priorities" to each rule. I would like to
> match /* as a comment whenever possible, with /regular-expressions/
> having the next-highest priority and PUNC having the lowest.
> 
> The reason I treat punctuation this was, by the way, is that the set
> of available operators can be user-defined and it can vary by scope.
> Therefore it is not possible to identify operators within the lexer.
> 
> --
> - David
> http://qism.blogspot.com

From qwertie256 at gmail.com  Sat Jun 30 17:30:20 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 18:30:20 -0600
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>
Message-ID: <ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>

> The lexer will assign the priority from top to bottom in listed order so
> you should be able to achieve what you need - I find you get simpler
> lexers though if you code the rule yourself to eliminate clashes and use
> $type = xxx;.

It turns out they are already in the right order, but the problem is
these truly gigantic state transition tables. I may have to combine
all three rules into one to resolve the problems in a more intimate
way, but one of the reasons I decided to "tough it out" with ANTLR 3
(despite a lack of good tutorials*) was I hoped it would be possible
to avoid such things.

(*Even the ANTLR book isn't as good as this ANTLR 2 tutorial, IMO:)
http://javadude.com/articles/antlrtut/

> User operators eh, how do they specify precedence?

With numbers. In fact, they can even have a different precedence on
the left and right sides of a binary operator, as well as making
ternary and other complex operators. I'm still developing the
algorithm but I think it will work.

From rschulz at sonic.net  Sat Jun 30 17:55:54 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 30 Jun 2007 17:55:54 -0700
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>
	<ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>
Message-ID: <200706301755.54880.rschulz@sonic.net>

On Saturday 30 June 2007 17:30, David Piepgrass wrote:
> ...
> > User operators eh, how do they specify precedence?
>
> With numbers. In fact, they can even have a different precedence on
> the left and right sides of a binary operator, as well as making
> ternary and other complex operators. I'm still developing the
> algorithm but I think it will work.

Two things:

1) I'm intrigued by user-defined or -extensible grammars. Over on the 
Groovy list we touched on dynamic / user-specified grammars recently in 
the context of adding rule- or logic-based programming capabilities to 
the language (and / or its runtime / libraries), and I'm a somewhat 
familiar with Prolog's operator definition and user-specified grammar 
facilities.

If this isn't something proprietary, could you point me to information 
on the language you're dealing with?


2) I don't know why you want to avoid lexer fragments. The way I think 
about them, and someone will, I hope, correct me if I'm wrong about 
this, they're like macros. They don't stand alone, but are "expanded" 
in-line in other lexer rules that reference them.

Seen this way, they're just a way to avoid replicating regular 
expressions. And, again if I'm not mistaken, any number of references 
to ANTLR lexer fragments are indistinguishable from simply cutting and 
pasting the right-hand-sides of those fragments in place of the 
references to them.

It seems like a real win. You don't introduce or eliminate any 
ambiguities and there is no effect on lexer complexity or efficiency. 
You just avoid replication of REs. Given the "write-only" nature of 
REs, that seems like a very good thing.


Randall Schulz

From qwertie256 at gmail.com  Sat Jun 30 20:16:21 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sat, 30 Jun 2007 21:16:21 -0600
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <200706301755.54880.rschulz@sonic.net>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>
	<ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>
	<200706301755.54880.rschulz@sonic.net>
Message-ID: <ce40b1470706302016j513c317fwdd27495490987261@mail.gmail.com>

> 1) I'm intrigued by user-defined or -extensible grammars. Over on the
> Groovy list we touched on dynamic / user-specified grammars recently in
> the context of adding rule- or logic-based programming capabilities to
> the language (and / or its runtime / libraries), and I'm a somewhat
> familiar with Prolog's operator definition and user-specified grammar
> facilities.

Groovy, a language for the JVM, eh? Haven't heard of it before now.
There are sure a lot of new languages these days.

I'm trying to develop a new compiler architecture called Loyc which
will be an extensible multi-language compiler. No web site yet - I'm
only starting a parser now, after all. My idea is to take existing
.NET languages and allow new statements, operators, etc. to be added
to them by dynamically linking extensions with the compiler. So, I am
attempting to construct a lexer and parser in a manner that allows
these extensions.

My design will not attempt to allow any arbitrary grammar fragment to
be specified in the manner done by the Rats! parser generator, but it
will allow a variety of extension techniques. One of those techniques
will be to define "operators" for "expressions". The set of operators
will be defined entirely at run-time.

The design isn't complete but I guess I'll explain it a bit anyway.
The expression evaluation engine is called ONEP: One Nonterminal
Expression Parser. It takes a list of fixed-length operators (no
optional elements or lists) which you could visualize as a single
nonterminal like so:

expr:
    expr '*' expr
  | expr '/' expr
  | expr '+' expr
  | expr '-' expr
  | expr '?' expr ':' expr'
  | ID '.' ID
  | '-' expr
  | 'from' expr 'to' expr
  | expr expr
  | ID
  | INT
  | (...)

But each 'expr' has a precedence number to resolve order of
operations, and instead of a token type you can use a literal string
(which takes priority over another rule that only specifies a token
type). It detects ambiguities when an ambiguous expression is used.

There's certainly more to say but I think it best to wait until I have
some working code.

> 2) I don't know why you want to avoid lexer fragments. The way I think
> about them, and someone will, I hope, correct me if I'm wrong about
> this, they're like macros. They don't stand alone, but are "expanded"
> in-line in other lexer rules that reference them.

I'm not trying to avoid them; I just don't want to write

FOO: FOO_FRAGMENT;
fragment FOO_FRAGMENT: '[' (FOO_FRAGMENT | ~('['|']'))* ']';

if

fragment FOO: '[' (FOO | ~('['|']'))* ']';

would work just as well.

ANTLR lexer rules are not expanded inline, and they are not regular
expressions. They are generated as functions just like regular lexer
rules, and the main difference between fragment and non-fragment rules
is that fragment rules are never used unless called by another lexer
rule.
-- 
- David
http://qism.blogspot.com

From jimi at temporal-wave.com  Sat Jun 30 20:33:45 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 30 Jun 2007 20:33:45 -0700
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
	<051466DAA0D608439E196797955018D76E63@wavemachine.temporal-wave.com>
	<ce40b1470706301730l75156818u326f2c882d795002@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E64@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: David Piepgrass [mailto:qwertie256 at gmail.com]
> Sent: Saturday, June 30, 2007 5:30 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fun with ANTLR3: mystery of the huge
> lexer
> 
> > The lexer will assign the priority from top to bottom in listed
order
> so
> > you should be able to achieve what you need - I find you get simpler
> > lexers though if you code the rule yourself to eliminate clashes and
> use
> > $type = xxx;.
> 
> It turns out they are already in the right order, but the problem is
> these truly gigantic state transition tables. 

I don't think you should get those unless there is something else
slightly wrong with the lexer. Until Ter gets the ANLTR3 recognizer for
ANTLR3 going there are quite a lot of things that probably ought to be
caught that are not. If you don't wish to publish the lexer then if you
want to send it to me off list I would take a look at it out of
interest.

> I may have to combine
> all three rules into one to resolve the problems in a more intimate
> way, but one of the reasons I decided to "tough it out" with ANTLR 3
> (despite a lack of good tutorials*) was I hoped it would be possible
> to avoid such things.

I usually do this because it makes the code come out as simple as
possible (which is always good), but it is more habit than anything - in
general ANTLR is pretty good at getting together a reasonable code size.
I suspect then that there is another rule interfering here. Which
language are you trying to deal with?

> 
> (*Even the ANTLR book isn't as good as this ANTLR 2 tutorial, IMO:)
> http://javadude.com/articles/antlrtut/

I guess it depends on what you are looking for and all that ;-). 

> > User operators eh, how do they specify precedence?
> 
> With numbers. In fact, they can even have a different precedence on
> the left and right sides of a binary operator, as well as making
> ternary and other complex operators. I'm still developing the
> algorithm but I think it will work.

Hmmm - is this language the final language or are you writing a meta
compiler of some sort?

Jim

