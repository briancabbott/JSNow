From rsb at villa-cossio.com  Sun Nov  1 01:24:08 2009
From: rsb at villa-cossio.com (=?iso-8859-1?Q?Ren=E9_Schrader-B=F6lsche?=)
Date: Sun, 1 Nov 2009 09:24:08 +0100
Subject: [antlr-interest] Generate Grammar out of Table Definition
Message-ID: <A0224BAB-652F-4A46-B2AA-363B1848EAA9@villa-cossio.com>

Hi,

for a big BI-Project I have to import big CSV-Files. But,  
unfortunately, sometimes the mandatory values are missing. Now I am  
looking for a "script" which generates a grammar directly from the  
"Table Definition" stored inside Oracle.

Here is an example:

Imagine I do have such a "create table" statement (pseudo SQL :-)

create table myANTLR (
field1 integer mantatory,
field2 string mandatory,
field3 string optional
)

I get such CSV files, which I want to parse.

1,Hello, You
2,No,
3,Mike, Judy

I want to find errors like this one (second entry is missing):
4,,Bob

Do you have any ideas???

Best wishes and (un)happy Halloween
Rene

Rene Schrader-Boelsche      rene<at>villa-cossio.com
Am Ringofen	 25                www.villa-cossio.com
D-50321 Bruehl                    +49 (0)171 5482906




From jazzepi at gmail.com  Sun Nov  1 20:34:52 2009
From: jazzepi at gmail.com (Michael Pinnegar)
Date: Sun, 01 Nov 2009 23:34:52 -0500
Subject: [antlr-interest] Cannot display rule "X" because start state is not
	found
Message-ID: <4AEE616C.3020505@gmail.com>

Working on a game project that involves a scripting language that I want to interpret into a virtual 
machine code that can be executed directly. I've included the grammar below. All the lexer rules are 
displaying properly in the syntax diagram, but when I click on the bodies of any of the parser 
rules, I get "Cannot display rule "X" because start state is not found" for a given parser rule X. 
I'm not really sure why ANTLR is complaining about not having a start state. The grammar should 
plainly start from codeline, which isn't referenced by any other parser rule. Also, the box in the 
upper right is green, indicating there are no syntax errors.

I combed through some of the other message board posts, as well as many of the grammars provided in 
the ANTLRv3 sample grammar download, but none of them have any special code that indicates to ANTLR 
which one of the parser rules is the start state. I feel like something simple is broken, but I'm at 
an impasse as to what exactly that is.

Any advice or assistance would be much appreciated! Even if it's just along the lines of "go read this".

Thanks,
MPinnegar


****GRAMMAR BELOW THIS LINE****

grammar RobotWarsGrammar;


//Parser rules

codeline
	: comment
	| routine
	;
	
comment
	: !(DIGIT | LETTER | SPACE)*
	;

routine
	: subroutine
	| main_program
	;
	
subroutine
	: 'SUBROUTINE' IDENTIFIER LPAREN parameters RPAREN LCURL block* RCURL return_statement
	;
	
parameters
	: variable_name (',' variable_name)*
	|
	;

return_statement
	: 'RETURN' variable_name
	;
	
main_program
	: 'MAIN' LCURL block* RCURL
	;

block
	: statement*
	;

statement
	: if
	| while
	| call
	| variable_assignment
	| game_order
	;
	
if
	: if_only
	| if_else
	;

if_only
	: 'IF' LPAREN expression CONDITION expression RPAREN LCURL block RCURL
	;

if_else
	: 'IF-ELSE' LPAREN expression CONDITION expression RPAREN LCURL block 'ELSE' block RCURL
	;
	
while
	: 'WHILE' LPAREN expression CONDITION expression RPAREN LCURL block RCURL
	;

call
	: variable_name EQUAL IDENTIFIER LPAREN parameters RPAREN SEMICOLON
	| IDENTIFIER LPAREN parameters RPAREN SEMICOLON
	;

variable_assignment
	: 'VAR' variable_name EQUAL DIGIT+ SEMICOLON
	| 'VAR' variable_name EQUAL game_function SEMICOLON
	| 'VAR' variable_name EQUAL expression SEMICOLON
	;

variable_name
	: IDENTIFIER
	;
	
expression
	: term (ADDOP term)*
	;

term
	: factor (MULTOP factor)*
	;
	
factor
	: LPAREN expression RPAREN
	| DIGIT+
	| variable_name
	;
	
game_function
	: 'IS_ENEMY_IN_RANGE' LPAREN parameters RPAREN
	;
	
game_order
	: 'FIRE_WEAPON' LPAREN parameters RPAREN
	;

// Lexer rules

IDENTIFIER
	: LETTER (LETTER|DIGIT)*
	;
	
LETTER
	: ('a'..'z'|'A'..'Z')
	| '_'
	| '-'
	;	
	
DIGIT
	:'0'..'9'
	;
	
ADDOP
	: '+'
	| '-'
	;

MULTOP
	: TIMES
	| DIVIDE
	| MOD
	;	


CONDITION
	: '!='
	| '=='
	| '<'
	| '>'
	| '<='
	| '>='
	;

SPACE
options {
	paraphrase = " ";
}
	: ' '
	;

SEMICOLON
options {
	paraphrase = ";";
}
   : ';'
   ;

LPAREN
options {
	paraphrase = "(";
}
   : '('
   ;

RPAREN
options {
	paraphrase = ")";
}
   : ')'
   ;

LCURL
options {
	paraphrase = "{";
}
   : '{'
   ;

RCURL
options {
	paraphrase = "}";
}
   : '}'
   ;

PLUS
options {
	paraphrase = "+";
}
   : '+'
   ;

MINUS
options {
	paraphrase = "-";
}
   : '-'
   ;

TIMES
options {
	paraphrase = "*";
}
   : '*'
   ;

DIVIDE
options {
	paraphrase = "/";
}
   : '/'
   ;

MOD
options {
	paraphrase = "%";
}
   : '%'
   ;

EQUAL
options {
	paraphrase = "=";
}
   : '='
   ;

From jazzepi at gmail.com  Sun Nov  1 20:53:26 2009
From: jazzepi at gmail.com (Michael Pinnegar)
Date: Sun, 01 Nov 2009 23:53:26 -0500
Subject: [antlr-interest] Found the problem
Message-ID: <4AEE65C6.50207@gmail.com>

Poked around at the language a bit and ran the debugger. Realizes that ! needed to be encapsulated in 's

MPinnegar

From jandrewmore at gmail.com  Mon Nov  2 06:01:00 2009
From: jandrewmore at gmail.com (Andrew More)
Date: Mon, 2 Nov 2009 09:01:00 -0500
Subject: [antlr-interest] CSharp Targets
Message-ID: <4dd5831d0911020601q7a0822d9y90ad526f07d5833b@mail.gmail.com>

Does anybody have these working?  Right now I'm attempting to get my
grammar to work with CSharp2, but I could use CSharp1 or CSharp2.
Right now I seem to be running into a number of compiler errors and
warnings, so I'm not even confident that this works.  Maybe I've got
something setup wrong?  Anyway, I'm using the latest version of the
compiler (3.2), and I'm attempting to compile the results using Visual
Studio 2008.  I can't use anything but C# since that's what the rest
of the project is using.  (I guess I could go to C, but I'd REALLY
rather avoid it, if possible.)

Here are a couple of the errors I ran into:
1)  "using Stack                 =
Antlr.Runtime.Collections.StackList;"  (line 61 of CSharp2.stg)
This doesn't appear to be tied into anything in the DLLs I'm
attempting to use.  Right now I have references to Antlr3.Runtime,
Antlr3.Runtime.Debug, Antlr3.StringTemplate.  I couldn't find any
references to it, so I removed it.

2)  "override public object Tree" (line 59 of AST.stg)
I removed "override" because there didn't appear to be anything to override.

Once I removed these two things, I got a ton of other errors, which
makes me wonder if I'm doing this right, or if the C# target(s) work
at all.

Here are my options for the grammar:

grammar RuleEngine;

options {
        language=CSharp2;
        output=AST;
}

I'm hoping this is something simple that I'm missing.  I've been very
impressed with ANTLRWorks, the ANTLR compiler and the documentation in
Terence's book (which I've read cover to cover).  Any help that
anybody could give me would be appreciated.

Thanks!

Andrew

From Ramon.Verbruggen at quintiq.com  Mon Nov  2 06:32:27 2009
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Mon, 02 Nov 2009 15:32:27 +0100
Subject: [antlr-interest] CSharp Targets
In-Reply-To: <4dd5831d0911020601q7a0822d9y90ad526f07d5833b@mail.gmail.com>
References: <4dd5831d0911020601q7a0822d9y90ad526f07d5833b@mail.gmail.com>
Message-ID: <4AEEFB8B02000087000141C3@mail.quintiq.nl>

I have never used the C# target(s) myself, but in the C target, you need to specify the type of the AST nodes:

options 
{
	output=AST;
	language=C;
	ASTLabelType=pANTLR3_BASE_TREE; // <= I mean this line!
}

I don't know what the equivalent type for C# would be though.

Groeten,

Ramon


>>> Andrew More <jandrewmore at gmail.com> wrote:
> Does anybody have these working?  Right now I'm attempting to get my
> grammar to work with CSharp2, but I could use CSharp1 or CSharp2.
> Right now I seem to be running into a number of compiler errors and
> warnings, so I'm not even confident that this works.  Maybe I've got
> something setup wrong?  Anyway, I'm using the latest version of the
> compiler (3.2), and I'm attempting to compile the results using Visual
> Studio 2008.  I can't use anything but C# since that's what the rest
> of the project is using.  (I guess I could go to C, but I'd REALLY
> rather avoid it, if possible.)
> 
> Here are a couple of the errors I ran into:
> 1)  "using Stack                 =
> Antlr.Runtime.Collections.StackList;"  (line 61 of CSharp2.stg)
> This doesn't appear to be tied into anything in the DLLs I'm
> attempting to use.  Right now I have references to Antlr3.Runtime,
> Antlr3.Runtime.Debug, Antlr3.StringTemplate.  I couldn't find any
> references to it, so I removed it.
> 
> 2)  "override public object Tree" (line 59 of AST.stg)
> I removed "override" because there didn't appear to be anything to override.
> 
> Once I removed these two things, I got a ton of other errors, which
> makes me wonder if I'm doing this right, or if the C# target(s) work
> at all.
> 
> Here are my options for the grammar:
> 
> grammar RuleEngine;
> 
> options {
>         language=CSharp2;
>         output=AST;
> }
> 
> I'm hoping this is something simple that I'm missing.  I've been very
> impressed with ANTLRWorks, the ANTLR compiler and the documentation in
> Terence's book (which I've read cover to cover).  Any help that
> anybody could give me would be appreciated.
> 
> Thanks!
> 
> Andrew
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Mon Nov  2 09:10:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Nov 2009 09:10:18 -0800
Subject: [antlr-interest] Cannot display rule "X" because start state is
	not found
In-Reply-To: <4AEE616C.3020505@gmail.com>
Message-ID: <cb51ce1ab831bb4ea4d8b5787f75b2c6@temporal-wave.com>

> rules, I get "Cannot display rule "X" because start state is not found"
> 
> comment
> 	: !(DIGIT | LETTER | SPACE)*
> 	;

Remove the ! from this rule. Looks like you are trying to type a v2 grammar into AntlrWorks, which is for v3 grammars, which is probably what you should be using for a new project :-)

> SPACE
> options {
> 	paraphrase = " ";
> }

Paraphrase option is for v2, not v3, so remove that options{} clause.

Jim




From jimi at temporal-wave.com  Mon Nov  2 09:13:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Nov 2009 09:13:15 -0800
Subject: [antlr-interest] CSharp Targets
In-Reply-To: <4dd5831d0911020601q7a0822d9y90ad526f07d5833b@mail.gmail.com>
Message-ID: <197fa2d5f6f75c4d9d6d1eb177384f3e@temporal-wave.com>

CSharp2 target works just fine, so perhaps you have not downloaded the .Net/C# runtime for CSharp2 and added the .dlls as references to your project?

JIm

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andrew More
> Sent: Monday, November 02, 2009 6:01 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] CSharp Targets
> 
> Does anybody have these working?  Right now I'm attempting to get my
> grammar to work with CSharp2, but I could use CSharp1 or CSharp2.
> Right now I seem to be running into a number of compiler errors and
> warnings, so I'm not even confident that this works.  Maybe I've got
> something setup wrong?  Anyway, I'm using the latest version of the
> compiler (3.2), and I'm attempting to compile the results using Visual
> Studio 2008.  I can't use anything but C# since that's what the rest
> of the project is using.  (I guess I could go to C, but I'd REALLY
> rather avoid it, if possible.)
> 
> Here are a couple of the errors I ran into:
> 1)  "using Stack                 =
> Antlr.Runtime.Collections.StackList;"  (line 61 of CSharp2.stg)
> This doesn't appear to be tied into anything in the DLLs I'm
> attempting to use.  Right now I have references to Antlr3.Runtime,
> Antlr3.Runtime.Debug, Antlr3.StringTemplate.  I couldn't find any
> references to it, so I removed it.
> 
> 2)  "override public object Tree" (line 59 of AST.stg)
> I removed "override" because there didn't appear to be anything to
> override.
> 
> Once I removed these two things, I got a ton of other errors, which
> makes me wonder if I'm doing this right, or if the C# target(s) work
> at all.
> 
> Here are my options for the grammar:
> 
> grammar RuleEngine;
> 
> options {
>         language=CSharp2;
>         output=AST;
> }
> 
> I'm hoping this is something simple that I'm missing.  I've been very
> impressed with ANTLRWorks, the ANTLR compiler and the documentation in
> Terence's book (which I've read cover to cover).  Any help that
> anybody could give me would be appreciated.
> 
> Thanks!
> 
> Andrew
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jazzepi at gmail.com  Mon Nov  2 09:59:36 2009
From: jazzepi at gmail.com (Michael Pinnegar)
Date: Mon, 02 Nov 2009 12:59:36 -0500
Subject: [antlr-interest] Cannot display rule "X" because start state
 is	not found
In-Reply-To: <cb51ce1ab831bb4ea4d8b5787f75b2c6@temporal-wave.com>
References: <cb51ce1ab831bb4ea4d8b5787f75b2c6@temporal-wave.com>
Message-ID: <4AEF1E08.8000609@gmail.com>



Jim Idle wrote:
>> rules, I get "Cannot display rule "X" because start state is not found"
>>
>> comment
>> 	: !(DIGIT | LETTER | SPACE)*
>> 	;
> 
> Remove the ! from this rule. Looks like you are trying to type a v2 grammar into AntlrWorks, which is for v3 grammars, which is probably what you should be using for a new project :-)

Actually the ! sign was just suppose to be the markup for a comment in the language. I guess it's 
also an operator for ANTLR's grammar processor like * or ; I encapsulated it in a set of 's and that 
fixed everything.

> 
>> SPACE
>> options {
>> 	paraphrase = " ";
>> }
> 
> Paraphrase option is for v2, not v3, so remove that options{} clause.

I ran the debugger some yesterday and it was complaining about this, so I did that. I think I found 
this from an example online somewhere. I just picked up the book today, so hopefully that should help.

Incidentally is there a good way to get the entire CFG printed/displayed as a *complete* railroad 
diagram? I'd like to put that in my program documentation.

MPinnegar

> 
> Jim
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From jandrewmore at gmail.com  Mon Nov  2 10:11:04 2009
From: jandrewmore at gmail.com (Andrew More)
Date: Mon, 2 Nov 2009 13:11:04 -0500
Subject: [antlr-interest] CSharp Targets
In-Reply-To: <197fa2d5f6f75c4d9d6d1eb177384f3e@temporal-wave.com>
References: <4dd5831d0911020601q7a0822d9y90ad526f07d5833b@mail.gmail.com>
	<197fa2d5f6f75c4d9d6d1eb177384f3e@temporal-wave.com>
Message-ID: <4dd5831d0911021011r69cff944n167e4f89f683a788@mail.gmail.com>

Okay, looks like a bad setup on my part.  I was not correctly setting
the tree target, and I was using an old set of DLLs from the C# ANTLR
compiler, rather than the run-time distribution.

Thanks everyone for your help in this!

On Mon, Nov 2, 2009 at 12:13 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> CSharp2 target works just fine, so perhaps you have not downloaded the .Net/C# runtime for CSharp2 and added the .dlls as references to your project?
>
> JIm
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Andrew More
>> Sent: Monday, November 02, 2009 6:01 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] CSharp Targets
>>
>> Does anybody have these working? ?Right now I'm attempting to get my
>> grammar to work with CSharp2, but I could use CSharp1 or CSharp2.
>> Right now I seem to be running into a number of compiler errors and
>> warnings, so I'm not even confident that this works. ?Maybe I've got
>> something setup wrong? ?Anyway, I'm using the latest version of the
>> compiler (3.2), and I'm attempting to compile the results using Visual
>> Studio 2008. ?I can't use anything but C# since that's what the rest
>> of the project is using. ?(I guess I could go to C, but I'd REALLY
>> rather avoid it, if possible.)
>>
>> Here are a couple of the errors I ran into:
>> 1) ?"using Stack ? ? ? ? ? ? ? ? =
>> Antlr.Runtime.Collections.StackList;" ?(line 61 of CSharp2.stg)
>> This doesn't appear to be tied into anything in the DLLs I'm
>> attempting to use. ?Right now I have references to Antlr3.Runtime,
>> Antlr3.Runtime.Debug, Antlr3.StringTemplate. ?I couldn't find any
>> references to it, so I removed it.
>>
>> 2) ?"override public object Tree" (line 59 of AST.stg)
>> I removed "override" because there didn't appear to be anything to
>> override.
>>
>> Once I removed these two things, I got a ton of other errors, which
>> makes me wonder if I'm doing this right, or if the C# target(s) work
>> at all.
>>
>> Here are my options for the grammar:
>>
>> grammar RuleEngine;
>>
>> options {
>> ? ? ? ? language=CSharp2;
>> ? ? ? ? output=AST;
>> }
>>
>> I'm hoping this is something simple that I'm missing. ?I've been very
>> impressed with ANTLRWorks, the ANTLR compiler and the documentation in
>> Terence's book (which I've read cover to cover). ?Any help that
>> anybody could give me would be appreciated.
>>
>> Thanks!
>>
>> Andrew
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From frank.du at riskmetrics.com  Mon Nov  2 11:46:34 2009
From: frank.du at riskmetrics.com (Frank Du)
Date: Mon, 2 Nov 2009 14:46:34 -0500
Subject: [antlr-interest] Please help with a grammar issue
In-Reply-To: <002b01ca5986$45751070$d05f3150$@b@s7software.com>
References: <ACF14F1689EFEF438B46DADFB73B46E93F73E930@mail-ab01.rmg-ny.com>,
	<001a01ca597f$14bc8be0$3e35a3a0$@b@s7software.com>
	<ACF14F1689EFEF438B46DADFB73B46E93F3B2227@mail-ab01.rmg-ny.com>
	<002b01ca5986$45751070$d05f3150$@b@s7software.com>
Message-ID: <ACF14F1689EFEF438B46DADFB73B46E93F73EE49@mail-ab01.rmg-ny.com>

Hi Indhu,

Thank you so much for the code. I was using ANTLRWorks and exception was handle. Yes, it works now!

Thanks,
Frank
-----Original Message-----
From: Indhu Bharathi [mailto:indhu.b at s7software.com] 
Sent: Friday, October 30, 2009 1:28 PM
To: Frank Du; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Please help with a grammar issue

When I give 2 'b', I get parser error.

Here is the complete grammar I used:

grammar Test;

r
@init {
                int cntA=0, cntB=0, cntC=0; 
}
                :               ( a {cntA++;} | b {cntB++;} | c {cntC++;} )+
{cntA>1 && cntB<=1 && cntC==1}?
                ;

a	:	'A'
	;
	
b	:	'B'
	;
	
c	:	'C'
	;

And my test input was: "ABBC". Parser will throw failed predicate exception
on this input.

Can you give a compilable small grammar where it doesn't work and also the
input you tried?


Cheers, Indhu
S7 Software


-----Original Message-----
From: Frank Du [mailto:frank.du at riskmetrics.com] 
Sent: Friday, October 30, 2009 10:38 PM
To: Indhu Bharathi; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Please help with a grammar issue

Hi Indhu,

Thank you so much! It works pretty well on correct input file. 

However, if I have 2 rules of b, the parser will stop at the second. It
doesn't emit errors as expected. Then it hinders from validation. Any idea
about that?

Cheers,
Frank

________________________________________
From: Indhu Bharathi [indhu.b at s7software.com]
Sent: Friday, October 30, 2009 12:36 PM
To: Frank Du; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Please help with a grammar issue

Maybe you can use validating semantic predicate

r
@init {
                int cntA=0, cntB=0, cntC=0;
}
                :               ( a {cntA++;} | b {cntB++;} | c {cntC++;} )+
{cntA>1 && cntB<=1 && cntC==1}?
                ;

Cheers, Indhu
S7 Software


From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Frank Du
Sent: Friday, October 30, 2009 9:53 PM
To: 'antlr-interest at antlr.org'
Subject: [antlr-interest] Please help with a grammar issue

Dear All,

I have a grammar issue and need your help. Let's say I have tree rules: a,
b, c

Rule a occurs multiple times, rule b occurs one time or none, and rule c
occurs one time.

My question is: How to write the grammar, so the rule ordering is arbitrary?

Thank you so much! Have a nice day!

Best Regards,
Frank


From sharwell at pixelminegames.com  Mon Nov  2 11:49:53 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 2 Nov 2009 13:49:53 -0600
Subject: [antlr-interest] C# port binaries (CSharp3 target, StringTemplate,
	Tool, MSBuild integration)
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE08@martini.ironwillgames.com>

I've made some fixes since my previous release, so I'm releasing an
updated beta build. I'm very interested in any feedback you may have
about any part of this.

 

http://www.280z28.org/downloads/antlr-dotnet-binaries-3.2.0.6288.7z

 

Since this is hosted on a different site than the original, you can
check the assembly strong names to verify that I built this one with the
same in-house signing keys as the earlier release. :)

 

Contents:

 

*         LICENSE.txt. All code in the C# ports of the Tool and
StringTemplate, plus the CSharp3 target are licensed under the same BSD
3-clause license as their Java counterparts except for the addition of
my name. Other targets are licensed under their own terms so you'll have
to check those separately if they are relevant to you.

*         CSharp3 runtime (Antlr3.Runtime.dll and
Antlr3.Runtime.Debug.dll). You always have to reference
Antlr3.Runtime.dll to use the CSharp3 target. You only need to reference
Antlr3.Runtime.Debug.dll if you build with the -debug or -profile
command line flags.

*         StringTemplate .NET port (Antlr3.StringTemplate.dll). This
depends on both of the CSharp3 runtime DLL's, so include those if you
are using StringTemplate.

*         ANTLR Tool .NET port (Antlr3.exe). Works with the same command
line arguments as the Java version, and should produce nearly identical
output for any given target. All target code generation templates are
updated to the latest version as of earlier today.

*         MSBuild integration (Antlr3.targets, AntlrBuildTask.dll).
Preliminary instructions for using this follows.

*         Symbol files for all binaries (*.pdb).

 

MSBuild Integration Instructions:

 

These instructions definitely work for Visual Studio 2008 C# projects
targeting the CSharp3 runtime (it's how I built all the files you're
downloading). They almost surely work for the CSharp2 target, but I
haven't tried it. They might also work for Visual Studio 2005 or 2010
projects, but again I haven't tried it.

 

Extract the contents of the download to $(SolutionDir)\external\antlr.
For example, if you have the solution file C:\Something\MyProject.sln,
then you would find Antlr3.exe at
C:\Something\external\antlr\tool\Antlr3.exe. (The directions can be
modified to suit if you want to use a different path.)

 

Open your project file (*.csproj) as an XML or plain text file and
locate the line importing Microsoft.CSharp.targets. I've included the
line in the following block of code as a reference point for the
necessary changes - just add the other lines below that point.

 

  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <!-- Include the following immediately *after* the above import (which
will already exist in the file) -->

  <PropertyGroup>

    <!-- Folder containing AntlrBuildTask.dll -->

 
<AntlrBuildTaskPath>$(SolutionDir)external\antlr\msbuild</AntlrBuildTask
Path>

    <!-- Path to the ANTLR Tool itself. -->

 
<AntlrToolPath>$(SolutionDir)external\antlr\tool\Antlr3.exe</AntlrToolPa
th>

  </PropertyGroup>

  <Import Project="$(SolutionDir)external\antlr\msbuild\Antlr3.targets"
/>

 

When you open the project in Visual Studio, you will be able to select a
.g or .g3 file in the project, select right click > Properties, and
choose Antlr3 as the Build Action. To add a new grammar to the project,
add a new "Text File" with the extension .g or .g3, and set its build
action. You no longer have to manually add grammars by editing the
project file.

 

Finally, make sure you add a reference to the appropriate ANTLR runtime
(CSharp2 or CSharp3).

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091102/f6323352/attachment.html 

From jazzepi at gmail.com  Mon Nov  2 16:35:45 2009
From: jazzepi at gmail.com (Michael Pinnegar)
Date: Mon, 02 Nov 2009 19:35:45 -0500
Subject: [antlr-interest] Cannot launch the debugger Time-out waiting to
 connect to the remote parser
Message-ID: <4AEF7AE1.6050407@gmail.com>

address localhost
port    49100

I've got my grammar all setup now, and I was even able to find a fix for a compilation problem by 
adding fragment above the LETTER entry.

That said, now I'd like to be able to feed my grammar various inputs and see how it deals with them. 
  When I go to run though, it says "Cannot launch the debugger Time-out waiting to connect to the 
remote parser". I found some other posts about it and took the following steps.

1. Rebooted computer multiple times.
2. Restarted ANTLRWorks 1.3 multiple times.
3. Port forwarded 49100 on my router. (I think this was unnecessary though, doesn't the localhosts 
mean it's trying to connect to the remote parser on my own computer?)
4. Tried running it with my computer's local static IP address in instead of localhost.

None of the above had any effect on the problem. I'm not really sure why it's occurring! Any help 
would be nice, thanks.

MPinnegar

From kaleb.pederson at gmail.com  Mon Nov  2 16:55:10 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Mon, 2 Nov 2009 16:55:10 -0800
Subject: [antlr-interest] Cannot launch the debugger Time-out waiting to
	connect to the remote parser
In-Reply-To: <4AEF7AE1.6050407@gmail.com>
References: <4AEF7AE1.6050407@gmail.com>
Message-ID: <f14c01620911021655o4c052737n465bd1dc5285c18c@mail.gmail.com>

On Mon, Nov 2, 2009 at 4:35 PM, Michael Pinnegar <jazzepi at gmail.com> wrote:
...
> That said, now I'd like to be able to feed my grammar various inputs and see how it deals with them.
> ?When I go to run though, it says "Cannot launch the debugger Time-out waiting to connect to the
> remote parser". I found some other posts about it and took the following steps.
>
> 1. Rebooted computer multiple times.
> 2. Restarted ANTLRWorks 1.3 multiple times.

I have had to do this many times when I have something in my action
code that causes a compilation failure, but otherwise haven't had any
problems.  Do you get the timeout the very first time that you attempt
to run the debugger after a fresh application restart?

> 3. Port forwarded 49100 on my router. (I think this was unnecessary though, doesn't the localhosts
> mean it's trying to connect to the remote parser on my own computer?)

So you went into preferences and set the port to 49100?

Yes, localhost implies the local computer, which doesn't usually have
ports blocked.

I'm not sure what OS you're on, but what port(s) does netstat show
ANTLRWorks is using?

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

> 4. Tried running it with my computer's local static IP address in instead of localhost.
>
> None of the above had any effect on the problem. I'm not really sure why it's occurring! Any help
> would be nice, thanks.
>
> MPinnegar

From marcelo.nichele at gmail.com  Mon Nov  2 18:02:33 2009
From: marcelo.nichele at gmail.com (Marcelo Nichele)
Date: Tue, 3 Nov 2009 00:02:33 -0200
Subject: [antlr-interest] Cannot launch the debugger Time-out waiting to
	connect to the remote parser
In-Reply-To: <4AEF7AE1.6050407@gmail.com>
References: <4AEF7AE1.6050407@gmail.com>
Message-ID: <848594440911021802h7b82e01r645cd01a396f0c94@mail.gmail.com>

Hi Michael!

Do you have sure that the port isn't being used by your OS?
If your OS is Windows, type netstat -aon | find /i "49100" in the prompt.
If true, then kill it.

After this, run your application and go to ANTLRWorks in menu Debugger ->
Debug Remote and click "Connect" button.
For view debugger graph in ANTLRWorks, go to the tab "Debugger" and click in
the arrow "=>".

I hope help you.

Cheers,

Marcelo


On Mon, Nov 2, 2009 at 10:35 PM, Michael Pinnegar <jazzepi at gmail.com> wrote:

> address localhost
> port    49100
>
> I've got my grammar all setup now, and I was even able to find a fix for a
> compilation problem by
> adding fragment above the LETTER entry.
>
> That said, now I'd like to be able to feed my grammar various inputs and
> see how it deals with them.
>  When I go to run though, it says "Cannot launch the debugger Time-out
> waiting to connect to the
> remote parser". I found some other posts about it and took the following
> steps.
>
> 1. Rebooted computer multiple times.
> 2. Restarted ANTLRWorks 1.3 multiple times.
> 3. Port forwarded 49100 on my router. (I think this was unnecessary though,
> doesn't the localhosts
> mean it's trying to connect to the remote parser on my own computer?)
> 4. Tried running it with my computer's local static IP address in instead
> of localhost.
>
> None of the above had any effect on the problem. I'm not really sure why
> it's occurring! Any help
> would be nice, thanks.
>
> MPinnegar
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/d79dee38/attachment.html 

From jimi at temporal-wave.com  Mon Nov  2 18:09:59 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Nov 2009 18:09:59 -0800
Subject: [antlr-interest] Cannot launch the debugger Time-out waiting to
	connect to the remote parser
In-Reply-To: <848594440911021802h7b82e01r645cd01a396f0c94@mail.gmail.com>
Message-ID: <7249f52d90fa194a88fb8b6965589f82@temporal-wave.com>

This quite often happens because of a bad lexer that has an empty rule:

 

R : ;

 

This will currently generate code that just hangs trying to match nothing forever. Then it will time out on the connection (which happens in the parser not the lexer) and forever after, you will not be able to connect.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcelo Nichele
Sent: Monday, November 02, 2009 6:03 PM
To: Michael Pinnegar
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Cannot launch the debugger Time-out waiting to connect to the remote parser

 

Hi Michael!

Do you have sure that the port isn't being used by your OS?
If your OS is Windows, type netstat -aon | find /i "49100" in the prompt.
If true, then kill it.

After this, run your application and go to ANTLRWorks in menu Debugger -> Debug Remote and click "Connect" button.
For view debugger graph in ANTLRWorks, go to the tab "Debugger" and click in the arrow "=>".

I hope help you.

Cheers,

Marcelo



On Mon, Nov 2, 2009 at 10:35 PM, Michael Pinnegar <jazzepi at gmail.com> wrote:

address localhost
port    49100

I've got my grammar all setup now, and I was even able to find a fix for a compilation problem by
adding fragment above the LETTER entry.

That said, now I'd like to be able to feed my grammar various inputs and see how it deals with them.
 When I go to run though, it says "Cannot launch the debugger Time-out waiting to connect to the
remote parser". I found some other posts about it and took the following steps.

1. Rebooted computer multiple times.
2. Restarted ANTLRWorks 1.3 multiple times.
3. Port forwarded 49100 on my router. (I think this was unnecessary though, doesn't the localhosts
mean it's trying to connect to the remote parser on my own computer?)
4. Tried running it with my computer's local static IP address in instead of localhost.

None of the above had any effect on the problem. I'm not really sure why it's occurring! Any help
would be nice, thanks.

MPinnegar

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091102/e8fd055b/attachment.html 

From gwlist at grahamwideman.com  Mon Nov  2 17:22:54 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Mon, 02 Nov 2009 18:22:54 -0700
Subject: [antlr-interest] Cannot launch the debugger Time-out waiting
 toconnect to the remote parser
In-Reply-To: <7249f52d90fa194a88fb8b6965589f82@temporal-wave.com>
References: <848594440911021802h7b82e01r645cd01a396f0c94@mail.gmail.com>
Message-ID: <4.1.20091102181631.016649f0@grahamwideman.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091102/d5c50846/attachment.html 

From sharwell at pixelminegames.com  Mon Nov  2 23:05:17 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 3 Nov 2009 01:05:17 -0600
Subject: [antlr-interest] C# Port Source Code (CSharp3 target, StringTemplate,
	Tool, MSBuild integration)
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE0C@martini.ironwillgames.com>

I've packaged a copy of the source tree to build the binaries I released
earlier today. If you open the solution in Visual Studio, it won't build
until you either add your own signing key in place of the dummy key
files or uncheck the option to sign the assemblies. Other than that, it
should build cleanly without any troubles. This package *only* includes
the source code required to build the C# port. The pre-built binaries
are only available in the other download I posted earlier.

 

The Visual Studio 2008 solution is located at antlrcs\main\Antlr3.sln.

 

http://www.280z28.org/downloads/antlr-dotnet-source-3.2.0.6288.7z

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/6b8fea54/attachment.html 

From PARRT at CS.USFCA.EDU  Mon Nov  2 23:18:48 2009
From: PARRT at CS.USFCA.EDU (Terence Parr)
Date: Tue, 3 Nov 2009 16:18:48 +0900
Subject: [antlr-interest] finally added UnbufferedTokenStream
Message-ID: <F3938462-E9FC-4051-907F-99CA336DA92C@CS.USFCA.EDU>

To build ST v4's insanely complicated lexer, I couldn't get around an  
on-demand (unbuffered) token stream.  Note that I don't have an  
unbuffered char stream yet but given LookaheadStream<T>, it should be  
just as easy.  Code for token stream is tiny; see below.  It seems to  
work so far.

Ter

add //depot/code/antlr/main/runtime/Java/src/main/java/org/antlr/ 
runtime/UnbufferedTokenStream.java#1
edit //depot/code/antlr/main/runtime/Java/src/main/java/org/antlr/ 
runtime/misc/LookaheadStream.java#4
edit //depot/code/antlr/main/tool/CHANGES.txt#18
Change 6294 submitted.

package org.antlr.runtime;

import org.antlr.runtime.misc.LookaheadStream;

import java.util.Map;
import java.util.Set;

public class UnbufferedTokenStream extends LookaheadStream<Token>  
implements TokenStream {
	protected TokenSource tokenSource;
	protected int tokenIndex = 0;

	public UnbufferedTokenStream(TokenSource tokenSource) {
		super(Token.EOF_TOKEN);
		this.tokenSource = tokenSource;
	}

	public Token nextElement() {
		Token t = tokenSource.nextToken();
		t.setTokenIndex(tokenIndex++);
		return t;
	}

	public TokenSource getTokenSource() { return tokenSource; }

	public String toString(int start, int stop) { return "n/a"; }

	public String toString(Token start, Token stop) { return "n/a"; }

	public int LA(int i) { return LT(i).getType(); }

	public String getSourceName() {	return tokenSource.getSourceName();	}
}


From indhu.b at s7software.com  Tue Nov  3 01:32:10 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 3 Nov 2009 15:02:10 +0530
Subject: [antlr-interest] [antlr-dev] Antlr & Tree programming
In-Reply-To: <2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E3@HEFRMAIL.sofr.hefr.lan>
References: <2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E1@HEFRMAIL.sofr.hefr.lan>	<2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E2@HEFRMAIL.sofr.hefr.lan>
	<2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E3@HEFRMAIL.sofr.hefr.lan>
Message-ID: <005a01ca5c68$84c55700$8e500500$@b@s7software.com>

Moving this to antlr-interest.

 

What you do after that depends on what you want. Have you constructed an AST
in the grammar? Then to get the AST, you have to do this:

 

CommonTree t = (CommonTree)r.getTree();

 

And if you want to give this tree to a tree walker, you can do this:

 

// create a stream of tree nodes from AST built by parser

CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);

// tell it where it can find the token objects

nodes.setTokenStream(tokens);

// create the tree Walker

MyWalker walker = new MyWalker (nodes); 

// walk the tree

walker.startRule();

 

 

Though these are JAVA api, I guess those for C# has to be almost same. You
are not programming on a drastically different language like C.

 

Section 9.6 of ANTLR Definitive ref talks about this in detail.

 

Cheers, Indhu

 

 

 

From: antlr-dev-bounces at antlr.org [mailto:antlr-dev-bounces at antlr.org] On
Behalf Of Tran Thi Que Nguyet
Sent: Tuesday, November 03, 2009 2:50 PM
To: 'antlr-dev at antlr.org'
Subject: [antlr-dev] Antlr & Tree programming

 

Dear all,

 

My name is Tran. I'm doing research on my master thesis. But I have troubles
about how to analysis a sql script file *.sql which contains SQL and PL
commands. 

After that, I knew ANTLR can be used to parse languages. And I also know
there is the PL/SQL grammar in the website.

 

But now, I want to know (after searching a lot but I didn't find out) how I
can use the result after using the method parse for the start rule? 

I'm programming with C# (I cannot change into Java which has more
documentations).

 

I want to retrieve which commands in the script, which objects are accessed,
which . How can I do?  Can you show me some tutorials (step by step)? 

I don't know what I can do after this?

ANTLRFileStream input = new ANTLRFileStream("test.sql");

            PLSQL3Lexer lexer = new PLSQL3Lexer(input);

            CommonTokenStream tokens = new CommonTokenStream(lexer);

            PLSQL3Parser parser = new PLSQL3Parser(tokens);

            PLSQL3Parser.start_rule_return r = parser.start_rule();

 

Thank you for all your help. I need you very much.

 

Tran

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/6947e05f/attachment.html 

From indhu.b at s7software.com  Tue Nov  3 01:38:18 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 3 Nov 2009 15:08:18 +0530
Subject: [antlr-interest] [antlr-dev] Antlr & Tree programming
In-Reply-To: <005a01ca5c68$84c55700$8e500500$@b@s7software.com>
References: <2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E1@HEFRMAIL.sofr.hefr.lan>	<2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E2@HEFRMAIL.sofr.hefr.lan>	<2D6CA1E59A2A5340BB40755995CEF804021E88BFE1E3@HEFRMAIL.sofr.hefr.lan>
	<005a01ca5c68$84c55700$8e500500$@b@s7software.com>
Message-ID: <006b01ca5c69$5ff5b4a0$1fe11de0$@b@s7software.com>

I guess this article might help you:

 

http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

 

It has a good test rig.

 

Cheers, Indhu

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi
Sent: Tuesday, November 03, 2009 3:02 PM
To: 'Tran Thi Que Nguyet'
Cc: 'ANTLR Interest Mailing List'
Subject: Re: [antlr-interest] [antlr-dev] Antlr & Tree programming

 

Moving this to antlr-interest.

 

What you do after that depends on what you want. Have you constructed an AST
in the grammar? Then to get the AST, you have to do this:

 

CommonTree t = (CommonTree)r.getTree();

 

And if you want to give this tree to a tree walker, you can do this:

 

// create a stream of tree nodes from AST built by parser

CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);

// tell it where it can find the token objects

nodes.setTokenStream(tokens);

// create the tree Walker

MyWalker walker = new MyWalker (nodes); 

// walk the tree

walker.startRule();

 

 

Though these are JAVA api, I guess those for C# has to be almost same. You
are not programming on a drastically different language like C.

 

Section 9.6 of ANTLR Definitive ref talks about this in detail.

 

Cheers, Indhu

 

 

 

From: antlr-dev-bounces at antlr.org [mailto:antlr-dev-bounces at antlr.org] On
Behalf Of Tran Thi Que Nguyet
Sent: Tuesday, November 03, 2009 2:50 PM
To: 'antlr-dev at antlr.org'
Subject: [antlr-dev] Antlr & Tree programming

 

Dear all,

 

My name is Tran. I'm doing research on my master thesis. But I have troubles
about how to analysis a sql script file *.sql which contains SQL and PL
commands. 

After that, I knew ANTLR can be used to parse languages. And I also know
there is the PL/SQL grammar in the website.

 

But now, I want to know (after searching a lot but I didn't find out) how I
can use the result after using the method parse for the start rule? 

I'm programming with C# (I cannot change into Java which has more
documentations).

 

I want to retrieve which commands in the script, which objects are accessed,
which . How can I do?  Can you show me some tutorials (step by step)? 

I don't know what I can do after this?

ANTLRFileStream input = new ANTLRFileStream("test.sql");

            PLSQL3Lexer lexer = new PLSQL3Lexer(input);

            CommonTokenStream tokens = new CommonTokenStream(lexer);

            PLSQL3Parser parser = new PLSQL3Parser(tokens);

            PLSQL3Parser.start_rule_return r = parser.start_rule();

 

Thank you for all your help. I need you very much.

 

Tran

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/a4aa6cd0/attachment.html 

From yurushkin at rambler.ru  Tue Nov  3 04:18:05 2009
From: yurushkin at rambler.ru (=?windows-1251?B?zOj14OjrIN7w8/jq6O0=?=)
Date: Tue, 03 Nov 2009 15:18:05 +0300
Subject: [antlr-interest] program with ast grammar
Message-ID: <90898333.1257250685.200113848.65466@mcgi46.rambler.ru>

good day,
fortran supports "if construct" with following syntax:

[name:] if (..) then
 [block]

else if (..) [name:] then
 [block]....

else if (..) [name:] then
 [block]
else [name:]
 [block]
end if [name]

for example:
 firstIf : if (a>10) then
 a = 10
 else if (b>10) : secondIf then
 b = 10;
 else secondif:
 b = 20;

 else firstif:
 a = 20;
 endif firstif

My parser:
 if_construct : if_then_stmt block? (else_if_stmt block)* (else_stmt 
block)? endif_stmt
 -> "if_construct "

if_then_stmt, else_if_stmt, else_stmt and endif_stmt contain "name" 
attribute...
so... i gave you an example, when my parser creates second if_stmt with 
!!! 2 else stmt's (not one) !!! it context-sensitive place of grammar. 
it depends on the "name" attribute. if it name= firstif then "else_if" 
it belongs to first if_stmt.
if name=secondif, it belongs to second if_stmt...

how can I modify the grammar, to get right AST. how to analize [name] 
attribute at make right desicion?

From yurushkin at rambler.ru  Tue Nov  3 04:20:08 2009
From: yurushkin at rambler.ru (=?windows-1251?B?zOj14OjrIN7w8/jq6O0=?=)
Date: Tue, 03 Nov 2009 15:20:08 +0300
Subject: [antlr-interest] problem with ast grammar
Message-ID: <380170463.1257250808.39737864.38779@mcgi74.rambler.ru>

good day, fortran supports "if construct" with following syntax:

[name:] if (..) then
 [block]

else if (..) [name:] then
 [block]....

else if (..) [name:] then
 [block]
else [name:]
 [block]
end if [name]

for example:
 firstIf : if (a>10) then
 a = 10
 else if (b>10) : secondIf then
 b = 10;
 else secondif:
 b = 20;

 else firstif:
 a = 20;
 endif firstif

My parser:
 if_construct : if_then_stmt block? (else_if_stmt block)* (else_stmt
block)? endif_stmt
 -> "if_construct "

if_then_stmt, else_if_stmt, else_stmt and endif_stmt contain "name"
attribute...
so... i gave you an example, when my parser creates second if_stmt with
!!! 2 else stmt's (not one) !!! it context-sensitive place of grammar.
it depends on the "name" attribute. if it name= firstif then "else_if"
it belongs to first if_stmt.
if name=secondif, it belongs to second if_stmt...

how can I modify the grammar, to get right AST. how to analize [name]
attribute at make right desicion?

From 06virg at gmail.com  Tue Nov  3 04:56:00 2009
From: 06virg at gmail.com (virg g)
Date: Tue, 3 Nov 2009 18:26:00 +0530
Subject: [antlr-interest] grammar rule for special characters
Message-ID: <3df0db9f0911030456q328a0d50g728250186e0450dd@mail.gmail.com>

Hi,
 I am writing a grammar for parsing our own Testing script. The test script
has special characters like symbols  degrees, Registered trademark and copy
right, yen, pounds etc. How can i take care of these symbols in my grammar
rule. So that i can parse even these symbols. Right now my grammar is
skipping all these symbols, as i have don't have rule to parse these symbols
now..
Any help is appreciated. Thanks in advance.

- virg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/fe1ce9bb/attachment.html 

From alex.marin at amiq.ro  Tue Nov  3 10:22:23 2009
From: alex.marin at amiq.ro (alex.marin at amiq.ro)
Date: Tue, 03 Nov 2009 11:22:23 -0700
Subject: [antlr-interest] Bug report: Unexplainable "no viable alternative"
Message-ID: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>

Hello,

We have trouble understanding why we get a "no viable alternative" when
running the attached parser grammar on the following input:

bit bitstream [];

The output is:

line 1:15 no viable alternative at input ']'

However, we have found two (very strange) workarounds for the issue:
1. Commenting out the 'real' option in the data_type rule
2. Using associative_dimension_2 rule instead of associative_dimension_1
(although the two are equivalent)

What is the explanation for this behavior?
Is there a rigurous solution to avoid such behavior?

Thanks,
Alex Marin

Notes:
- the example is not intended to be useful by itself (it is an excerpt from
a much larger grammar)
- the latest antlr version has been used for code generation
(antlr-3.2.jar)
- you can find the referred grammar inline at the end of this e-mail and
also in the attached file
- by comparing the generated parsers, we noticed that the workarounds cause
the prediction to be done by some complicated if-conditions rather than the
dfa which throws the NoViableAlt

////////////////// Example.g ////////////////////////

grammar Example;

options {
	k=1;
	output=AST;
	}

entry
:
(my_rule)+
;

my_rule
	:
	  tf_port_item SEMI
	;

tf_port_item
: 
data_type ID variable_dimension
;


data_type
:
'bit'
| 'byte'
| 'real' // Comment this to suppress NoViableAlt
| 'struct' 
| 'union' ( 'tagged' )? 
| 'enum' 
| 'virtual'
| ps_identifier 
;

ps_identifier
:
( ID COLON_COLON ) => ID COLON_COLON ID 
| ID
;
	
variable_dimension
:
( associative_dimension_1 ) => associative_dimension_1 variable_dimension  
// comment this line
//        ( associative_dimension_2 ) => associative_dimension_2
variable_dimension  // and uncomment this one to suppress NoViableAlt (
with 'real' alt in data_type)
| ( sized_or_unsized_dimension )*
;

associative_dimension_1
:
LBRACK ( STAR | data_type ) RBRACK
;      

associative_dimension_2
	    :
( LBRACK STAR ) => LBRACK STAR RBRACK
| LBRACK data_type RBRACK
	    ;


sized_or_unsized_dimension 
:
LBRACK ( NUMBER )? RBRACK 
;

/********** Lexer *************/

SEMI: ';';
STAR: '*';
LBRACK: '[';
RBRACK: ']';
COLON_COLON: '::';

WS
:
(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
;

ID
:
('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
;

NUMBER
:
('0'..'9')+
;
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Example.g
Type: application/octet-stream
Size: 1400 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/1334884d/attachment.obj 

From alex.marin at amiq.ro  Tue Nov  3 10:42:48 2009
From: alex.marin at amiq.ro (Alex Marin)
Date: Tue, 03 Nov 2009 11:42:48 -0700
Subject: [antlr-interest] =?utf-8?q?_Big_grammar_=3D=3E_static_initializer?=
 =?utf-8?q?/method_size_is_exceeding_the_65535_bytes_limit?=
Message-ID: <b868eddfbaf8b13877831deb135eb333@amiq.ro>

Hello,

I've managed to find an automated solution for one of the previously
reported errors, namely for:

The code for the static initializer is exceeding the 65535 bytes limit

The "fix" consists of modifying the StringTemplate that generates the
parser code so that static initializers are automatically included in
speparate classes (and properly referenced). By using static classes, all
of the code is contained in a single file, so the change is transparent
from a user's point of view.

You can find the modified code in the attached file.

Best regards,
Alex Marin

PS: In order to use the fix you have to replace the Java.stg from
org.antlr.codegen.templates.Java with this one and recompile antlr.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Java.stg
Type: application/octet-stream
Size: 44208 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/12571cb8/attachment.obj 

From jimi at temporal-wave.com  Tue Nov  3 12:26:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Nov 2009 12:26:12 -0800
Subject: [antlr-interest] Bug report: Unexplainable "no viable
	alternative"
In-Reply-To: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
Message-ID: <61b1ea2b90e89f4f9c97380613b56677@temporal-wave.com>

It isn?t a bug; this happens because your grammar is ambiguous without all those myriad syntactic predicates. Take those all out and left factor your rules so that there are no ambiguities. Also, remove that k=1 option and let ANTLR work it out, then use ANTLRWorks syntax diagrams to work out why your grammar is ambiguous.

Left factor the rules so that everything that starts with a '[' starts in the same rule, then branches at places (such as '*') where you want to distinguish. Then build the appropriate AST.

I think perhaps this is lack of experience on your part so until you have a better idea of what is going on I also recommend that you do the following:

1) Take all the 'xxxxx' out of your parser rules and create clear LEXER rules for them;
2) Then check your lexer rules for overlaps in their specification;

As well as taking out those predicates and fixing the rules properly of course.

Finally, eliminate just generation ordering errors by cleaning out the generated .java and .tokens classes and completely regenerating everything to make sure that the parser's idea of what tokens numbers go with what is the same as the lexer's thoughts on the matter.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of alex.marin at amiq.ro
> Sent: Tuesday, November 03, 2009 10:22 AM
> To: Antlr interest
> Cc: Etools; Adrian Simionescu; parrt at cs.usfca.edu
> Subject: [antlr-interest] Bug report: Unexplainable "no viable
> alternative"
> 
> Hello,
> 
> We have trouble understanding why we get a "no viable alternative" when
> running the attached parser grammar on the following input:
> 
> bit bitstream [];
> 
> The output is:
> 
> line 1:15 no viable alternative at input ']'
> 
> However, we have found two (very strange) workarounds for the issue:
> 1. Commenting out the 'real' option in the data_type rule 2. Using
> associative_dimension_2 rule instead of associative_dimension_1
> (although the two are equivalent)
> 
> What is the explanation for this behavior?
> Is there a rigurous solution to avoid such behavior?
> 
> Thanks,
> Alex Marin
> 
> Notes:
> - the example is not intended to be useful by itself (it is an excerpt
> from a much larger grammar)
> - the latest antlr version has been used for code generation
> (antlr-3.2.jar)
> - you can find the referred grammar inline at the end of this e-mail
> and also in the attached file
> - by comparing the generated parsers, we noticed that the workarounds
> cause the prediction to be done by some complicated if-conditions
> rather than the dfa which throws the NoViableAlt
> 
> ////////////////// Example.g ////////////////////////
> 
> grammar Example;
> 
> options {
> 	k=1;
> 	output=AST;
> 	}
> 
> entry
> :
> (my_rule)+
> ;
> 
> my_rule
> 	:
> 	  tf_port_item SEMI
> 	;
> 
> tf_port_item
> :
> data_type ID variable_dimension
> ;
> 
> 
> data_type
> :
> 'bit'
> | 'byte'
> | 'real' // Comment this to suppress NoViableAlt 'struct'
> | 'union' ( 'tagged' )?
> | 'enum'
> | 'virtual'
> | ps_identifier
> ;
> 
> ps_identifier
> :
> ( ID COLON_COLON ) => ID COLON_COLON ID
> | ID
> ;
> 
> variable_dimension
> :
> ( associative_dimension_1 ) => associative_dimension_1
> variable_dimension // comment this line
> //        ( associative_dimension_2 ) => associative_dimension_2
> variable_dimension  // and uncomment this one to suppress NoViableAlt (
> with 'real' alt in data_type)
> | ( sized_or_unsized_dimension )*
> ;
> 
> associative_dimension_1
> :
> LBRACK ( STAR | data_type ) RBRACK
> ;
> 
> associative_dimension_2
> 	    :
> ( LBRACK STAR ) => LBRACK STAR RBRACK
> | LBRACK data_type RBRACK
> 	    ;
> 
> 
> sized_or_unsized_dimension
> :
> LBRACK ( NUMBER )? RBRACK
> ;
> 
> /********** Lexer *************/
> 
> SEMI: ';';
> STAR: '*';
> LBRACK: '[';
> RBRACK: ']';
> COLON_COLON: '::';
> 
> WS
> :
> (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> ;
> 
> ID
> :
> ('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
> ;
> 
> NUMBER
> :
> ('0'..'9')+
> ;




From jimi at temporal-wave.com  Tue Nov  3 12:28:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Nov 2009 12:28:19 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <b868eddfbaf8b13877831deb135eb333@amiq.ro>
Message-ID: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>

I think that the issue is more likely something to do with your lexer specification. You should not need to worry about having lots of keywords, so one of the other rules must be causing the huge expansion. For instance I have problems with the complete lexer for TSQL, which has more keywords than you can shake a stick at. 

Did you ever post your complete lexer spec? I was out of the country when you first started this thread.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alex Marin
> Sent: Tuesday, November 03, 2009 10:43 AM
> To: Antlr interest
> Cc: Etools
> Subject: [antlr-interest] Big grammar => static initializer/method size
> is exceeding the 65535 bytes limit
> 
> Hello,
> 
> I've managed to find an automated solution for one of the previously
> reported errors, namely for:
> 
> The code for the static initializer is exceeding the 65535 bytes limit
> 
> The "fix" consists of modifying the StringTemplate that generates the
> parser code so that static initializers are automatically included in
> speparate classes (and properly referenced). By using static classes,
> all of the code is contained in a single file, so the change is
> transparent from a user's point of view.
> 
> You can find the modified code in the attached file.
> 
> Best regards,
> Alex Marin
> 
> PS: In order to use the fix you have to replace the Java.stg from
> org.antlr.codegen.templates.Java with this one and recompile antlr.




From gerald at certiv.net  Tue Nov  3 10:55:33 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 03 Nov 2009 10:55:33 -0800
Subject: [antlr-interest] Bug report: Unexplainable "no viable
 alternative"
In-Reply-To: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
References: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
Message-ID: <200911031855.nA3ItY9X016094@zinc.newtechlaw.com>

The first version is failing on the associative_dimension_1 not 
having a star or data_type and no other alternative available.

The second version falls through the associative_dimension_2 to 
sized_or_unsized_dimension to recognize the '[]'

Note, both have a bit of backtracking that may be problematic on more 
complex inputs.

HTHs,
Gerald

At 10:22 AM 11/3/2009, alex.marin at amiq.ro wrote:
>Hello,
>
>We have trouble understanding why we get a "no viable alternative" when
>running the attached parser grammar on the following input:
>
>bit bitstream [];
>
>The output is:
>
>line 1:15 no viable alternative at input ']'
>
>However, we have found two (very strange) workarounds for the issue:
>1. Commenting out the 'real' option in the data_type rule
>2. Using associative_dimension_2 rule instead of associative_dimension_1
>(although the two are equivalent)
>
>What is the explanation for this behavior?
>Is there a rigurous solution to avoid such behavior?
>
>Thanks,
>Alex Marin
>
>Notes:
>- the example is not intended to be useful by itself (it is an excerpt from
>a much larger grammar)
>- the latest antlr version has been used for code generation
>(antlr-3.2.jar)
>- you can find the referred grammar inline at the end of this e-mail and
>also in the attached file
>- by comparing the generated parsers, we noticed that the workarounds cause
>the prediction to be done by some complicated if-conditions rather than the
>dfa which throws the NoViableAlt
>
>////////////////// Example.g ////////////////////////
>
>grammar Example;
>
>options {
>         k=1;
>         output=AST;
>         }
>
>entry
>:
>(my_rule)+
>;
>
>my_rule
>         :
>           tf_port_item SEMI
>         ;
>
>tf_port_item
>:
>data_type ID variable_dimension
>;
>
>
>data_type
>:
>'bit'
>| 'byte'
>| 'real' // Comment this to suppress NoViableAlt
>| 'struct'
>| 'union' ( 'tagged' )?
>| 'enum'
>| 'virtual'
>| ps_identifier
>;
>
>ps_identifier
>:
>( ID COLON_COLON ) => ID COLON_COLON ID
>| ID
>;
>
>variable_dimension
>:
>( associative_dimension_1 ) => associative_dimension_1 variable_dimension
>// comment this line
>//        ( associative_dimension_2 ) => associative_dimension_2
>variable_dimension  // and uncomment this one to suppress NoViableAlt (
>with 'real' alt in data_type)
>| ( sized_or_unsized_dimension )*
>;
>
>associative_dimension_1
>:
>LBRACK ( STAR | data_type ) RBRACK
>;
>
>associative_dimension_2
>             :
>( LBRACK STAR ) => LBRACK STAR RBRACK
>| LBRACK data_type RBRACK
>             ;
>
>
>sized_or_unsized_dimension
>:
>LBRACK ( NUMBER )? RBRACK
>;
>
>/********** Lexer *************/
>
>SEMI: ';';
>STAR: '*';
>LBRACK: '[';
>RBRACK: ']';
>COLON_COLON: '::';
>
>WS
>:
>(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>;
>
>ID
>:
>('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
>;
>
>NUMBER
>:
>('0'..'9')+
>;
>
>
>Content-Type: application/octet-stream; charset="UTF-8";
>  name="Example.g";
>Content-Disposition: attachment;
>  filename="Example.g";
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/2ee031ae/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Version1.png
Type: application/octet-stream
Size: 87155 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/2ee031ae/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Version2.png
Type: application/octet-stream
Size: 87947 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/2ee031ae/attachment-0003.obj 

From joe.peterson at intel.com  Tue Nov  3 14:55:54 2009
From: joe.peterson at intel.com (Peterson, Joe)
Date: Tue, 3 Nov 2009 14:55:54 -0800
Subject: [antlr-interest] C Target: Reverse look up of tokens for error
	reporting
In-Reply-To: <mailman.136.1257281836.3169.antlr-interest@antlr.org>
References: <mailman.136.1257281836.3169.antlr-interest@antlr.org>
Message-ID: <BCF80163639E9F4296FC4B208F99BA470105197100@orsmsx504.amr.corp.intel.com>

Hello all,

I am trying to generate more useful error messages when I get a file that doesn't match the grammar. One of the complaints is that because I named my tokens, the error messages look like this:
    syntax error detected in file missing_semicolon.test at line number 6, position 5; expecting SEMICOLON

To me, this seems obvious, but my customers don't like the token names, they'd rather see:
    syntax error detected in file fail_missing_colon.ext at line number 6, position 2; expecting ';'

I prefer to have the names, though. Is there an easy way for me to reverse the look up so the error can replace SEMICOLON with ';' (as well as all my other tokens, of course)?

I can get the NAME of the token with:
	recognizer->state->tokenNames[recognizer->state->exception->expecting]
I can't seem to see how to get the text of that token, though.

Thanks,
-JEEP
Joe Peterson

From jimi at temporal-wave.com  Tue Nov  3 15:13:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Nov 2009 15:13:37 -0800
Subject: [antlr-interest] C Target: Reverse look up of tokens for error
	reporting
In-Reply-To: <BCF80163639E9F4296FC4B208F99BA470105197100@orsmsx504.amr.corp.intel.com>
Message-ID: <4eef1c222103494e9ddf01162b8cff3e@temporal-wave.com>

You have to supply a function that takes the token as defined by the expecting element, perform a switch() on it and supply the text you really want. It is pretty easy but there is no automated way to do it and if we had the alias stuff that was in v2 it really doesn't save you any typing. Better to do it explicitly yourself.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peterson, Joe
> Sent: Tuesday, November 03, 2009 2:56 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C Target: Reverse look up of tokens for error
> reporting
> 
> Hello all,
> 
> I am trying to generate more useful error messages when I get a file
> that doesn't match the grammar. One of the complaints is that because I
> named my tokens, the error messages look like this:
>     syntax error detected in file missing_semicolon.test at line number
> 6, position 5; expecting SEMICOLON
> 
> To me, this seems obvious, but my customers don't like the token names,
> they'd rather see:
>     syntax error detected in file fail_missing_colon.ext at line number
> 6, position 2; expecting ';'
> 
> I prefer to have the names, though. Is there an easy way for me to
> reverse the look up so the error can replace SEMICOLON with ';' (as
> well as all my other tokens, of course)?
> 
> I can get the NAME of the token with:
> 	recognizer->state->tokenNames[recognizer->state->exception-
> >expecting]
> I can't seem to see how to get the text of that token, though.
> 
> Thanks,
> -JEEP
> Joe Peterson
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From recluze at gmail.com  Tue Nov  3 20:10:57 2009
From: recluze at gmail.com (Nauman)
Date: Wed, 4 Nov 2009 09:10:57 +0500
Subject: [antlr-interest] Difference between v and v.st
Message-ID: <179887f50911032010m6de2910csde44a464d4ea965f@mail.gmail.com>

Dear all,

I am having trouble understanding the difference between two methods for
setting template attributes. Consider the following:

policy: ^(POLICY policyType u+=updateStat*)
     ->
 policyStat(policyType={$policyType.st} ,upd={$u})


Why do I have $u without the .st and $policyType with a .st? Both have
defined templates and appear similar to me. I tried searching in the
references but couldn't find an explanation. Can anyone guide me towards an
answer?

Regards,

-- 
Nauman

Research Associate
Security Engineering Research Group
Institute of Management Sciences
Peshawar, Pakistan

Blog: http://recluze.wordpress.com
Group: http://serg.imsciences.edu.pk
Wiki: http://serg.imsciences.edu.pk/wiki
Art gallery: http://flickr.com/recluze

Contact number: Use email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/0cf34da3/attachment.html 

From jimi at temporal-wave.com  Tue Nov  3 20:26:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Nov 2009 20:26:10 -0800
Subject: [antlr-interest] Difference between v and v.st
In-Reply-To: <179887f50911032010m6de2910csde44a464d4ea965f@mail.gmail.com>
References: <179887f50911032010m6de2910csde44a464d4ea965f@mail.gmail.com>
Message-ID: <B6D95E07-7169-4E39-9288-0650A5A13536@temporal-wave.com>

Because u+= means you are passing in a collection, not a  
StringTemplate reference.

Jim

On Nov 3, 2009, at 20:10, Nauman <recluze at gmail.com> wrote:

> Dear all,
>
> I am having trouble understanding the difference between two methods  
> for setting template attributes. Consider the following:
>
> policy: ^(POLICY policyType u+=updateStat*)
>      ->
>  policyStat(policyType={$policyType.st} ,upd={$u})
>
>
> Why do I have $u without the .st and $policyType with a .st? Both  
> have defined templates and appear similar to me. I tried searching  
> in the references but couldn't find an explanation. Can anyone guide  
> me towards an answer?
>
> Regards,
>
> -- 
> Nauman
>
> Research Associate
> Security Engineering Research Group
> Institute of Management Sciences
> Peshawar, Pakistan
>
> Blog: http://recluze.wordpress.com
> Group: http://serg.imsciences.edu.pk
> Wiki: http://serg.imsciences.edu.pk/wiki
> Art gallery: http://flickr.com/recluze
>
> Contact number: Use email.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/58483692/attachment.html 

From recluze at gmail.com  Tue Nov  3 20:30:00 2009
From: recluze at gmail.com (Nauman)
Date: Wed, 4 Nov 2009 09:30:00 +0500
Subject: [antlr-interest] Difference between v and v.st
In-Reply-To: <B6D95E07-7169-4E39-9288-0650A5A13536@temporal-wave.com>
References: <179887f50911032010m6de2910csde44a464d4ea965f@mail.gmail.com> 
	<B6D95E07-7169-4E39-9288-0650A5A13536@temporal-wave.com>
Message-ID: <179887f50911032030i766db412qb89cae2eb94904b@mail.gmail.com>

Thanks but I'm still confused. Couldn't I have just said p+=policyType and
then, in the call policyType={$p} ? Are they equiv.?



2009/11/4 Jim Idle <jimi at temporal-wave.com>

> Because u+= means you are passing in a collection, not a StringTemplate
> reference.
>
> Jim
>
>
> On Nov 3, 2009, at 20:10, Nauman <recluze at gmail.com> wrote:
>
> Dear all,
>
> I am having trouble understanding the difference between two methods for
> setting template attributes. Consider the following:
>
> policy: ^(POLICY policyType u+=updateStat*)
>      ->
>  policyStat(policyType={$policyType.st} ,upd={$u})
>
>
> Why do I have $u without the .st and $policyType with a .st? Both have
> defined templates and appear similar to me. I tried searching in the
> references but couldn't find an explanation. Can anyone guide me towards an
> answer?
>
> Regards,
>
> --
> Nauman
>
> Research Associate
> Security Engineering Research Group
> Institute of Management Sciences
> Peshawar, Pakistan
>
> Blog: <http://recluze.wordpress.com>http://recluze.wordpress.com
> Group: <http://serg.imsciences.edu.pk>http://serg.imsciences.edu.pk
> Wiki: <http://serg.imsciences.edu.pk/wiki>
> http://serg.imsciences.edu.pk/wiki
> Art gallery: <http://flickr.com/recluze>http://flickr.com/recluze
>
> Contact number: Use email.
>
>
> List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
> http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Nauman

Research Associate
Security Engineering Research Group
Institute of Management Sciences
Peshawar, Pakistan

Blog: http://recluze.wordpress.com
Group: http://serg.imsciences.edu.pk
Wiki: http://serg.imsciences.edu.pk/wiki
Art gallery: http://flickr.com/recluze

Contact number: Use email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/918168ab/attachment.html 

From jimi at temporal-wave.com  Tue Nov  3 20:51:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Nov 2009 20:51:20 -0800
Subject: [antlr-interest] Difference between v and v.st
In-Reply-To: <179887f50911032030i766db412qb89cae2eb94904b@mail.gmail.com>
References: <179887f50911032010m6de2910csde44a464d4ea965f@mail.gmail.com>
	<B6D95E07-7169-4E39-9288-0650A5A13536@temporal-wave.com>
	<179887f50911032030i766db412qb89cae2eb94904b@mail.gmail.com>
Message-ID: <8199E559-8855-4B77-976D-866BC5142F3E@temporal-wave.com>

The += implies a List of what you gather from the rule call but p=  
refers to the return type of the rule. In the template youbwill  
iterate the list but not the return from the rule. ST will take any  
Object and expect you to reference it correctly on the template. So  
you can use += on a single rule call and end up with a list of one  
object. The usage tends to fall out from the natural form if the rule  
calls. Best is to experiment and look at the generated code :)

Jim

On Nov 3, 2009, at 20:30, Nauman <recluze at gmail.com> wrote:

> Thanks but I'm still confused. Couldn't I have just said p 
> +=policyType and then, in the call policyType={$p} ? Are they equiv.?
>
>
>
> 2009/11/4 Jim Idle <jimi at temporal-wave.com>
> Because u+= means you are passing in a collection, not a  
> StringTemplate reference.
>
> Jim
>
>
> On Nov 3, 2009, at 20:10, Nauman <recluze at gmail.com> wrote:
>
>> Dear all,
>>
>> I am having trouble understanding the difference between two  
>> methods for setting template attributes. Consider the following:
>>
>> policy: ^(POLICY policyType u+=updateStat*)
>>      ->
>>  policyStat(policyType={$policyType.st} ,upd={$u})
>>
>>
>> Why do I have $u without the .st and $policyType with a .st? Both  
>> have defined templates and appear similar to me. I tried searching  
>> in the references but couldn't find an explanation. Can anyone  
>> guide me towards an answer?
>>
>> Regards,
>>
>> -- 
>> Nauman
>>
>> Research Associate
>> Security Engineering Research Group
>> Institute of Management Sciences
>> Peshawar, Pakistan
>>
>> Blog: http://recluze.wordpress.com
>> Group: http://serg.imsciences.edu.pk
>> Wiki: http://serg.imsciences.edu.pk/wiki
>> Art gallery: http://flickr.com/recluze
>>
>> Contact number: Use email.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> -- 
> Nauman
>
> Research Associate
> Security Engineering Research Group
> Institute of Management Sciences
> Peshawar, Pakistan
>
> Blog: http://recluze.wordpress.com
> Group: http://serg.imsciences.edu.pk
> Wiki: http://serg.imsciences.edu.pk/wiki
> Art gallery: http://flickr.com/recluze
>
> Contact number: Use email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/04f98245/attachment.html 

From jazzepi at gmail.com  Tue Nov  3 20:57:54 2009
From: jazzepi at gmail.com (Michael Pinnegar)
Date: Tue, 03 Nov 2009 23:57:54 -0500
Subject: [antlr-interest] Fixed a Problem
Message-ID: <4AF109D2.8080807@gmail.com>

I was having issues with that timeout. The problem was in the fact that my CLASSPATH environmental 
variable wasn't specifying where the javac.exe was located, and the ANTLRworks environment was 
defaulting to that. So I pointed the environment to the right place, and it was able to connect 
successfully.

Unfortunately, I got some other strange compilation errors that I really don't have time to debug. 
They seem unrelated to my grammar. This looks like a great tool for more complicated language (mine 
is relatively simple in the scheme of things), but I'm going to have to give up on using ANTLR, and 
just write my lexer/parser by hand. It's not all been for naught, the extra work on my grammar to 
get it into the proper form for ANTLR showed me some interesting things about it, and I've had more 
time to think about how it's going to be parsed.

Thanks for the help!
MPinnegar

From wclodius at los-alamos.net  Tue Nov  3 21:05:03 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Tue, 3 Nov 2009 22:05:03 -0700
Subject: [antlr-interest] program with ast grammar
In-Reply-To: <90898333.1257250685.200113848.65466@mcgi46.rambler.ru>
References: <90898333.1257250685.200113848.65466@mcgi46.rambler.ru>
Message-ID: <26D5CBE7-612A-4A4D-8309-21F8553C3280@los-alamos.net>


On Nov 3, 2009, at 5:18 AM, ?????? ??????? wrote:

> good day,
> fortran supports "if construct" with following syntax:
>
> [name:] if (..) then
> [block]
>
> else if (..) [name:] then
> [block]....
>
> else if (..) [name:] then
> [block]
> else [name:]
> [block]
> end if [name]
>
> for example:
> firstIf : if (a>10) then
> a = 10
> else if (b>10) : secondIf then
> b = 10;
> else secondif:
> b = 20;
>
> else firstif:
> a = 20;
> endif firstif
>


Your syntax is incorrect. The correct syntax (from a recent draft of  
F09) is context free (unlike some other aspects of Fortran)
    if-construct is if-then-stmt
    block
    [ else-if-stmt
        block ] ...
    [ else-stmt
      block ]
    end-if-stmt

    if-then-stmt is [ if-construct-name : ] IF ( scalar-logical-expr )  
THEN

    else-if-stmt is ELSE IF ( scalar-logical-expr ) THEN [ if- 
construct-name ]

    else-stmt is ELSE [ if-construct-name ]

    end-if-stmt is END IF [ if-construct-name ]

or in your form
[name:] if (..) then
[block]

else if (..) then [name]
[block]....

else if (..) then  [name]
[block]
else [name]
[block]
end if [name]

Further the appearance of the if-construct-names must satisfy the  
constraint

If the if-then-stmt of an if-construct specifies an if-construct-name,  
the corresponding end-if
stmt shall specify the same if-construct-name. If the if-then-stmt of  
an if-construct does not specify an
if-construct-name, the corresponding end-if-stmt shall not specify an  
if-construct-name. If an else-if
stmt or else-stmt specifies an if-construct-name, the corresponding if- 
then-stmt shall specify the same
if-construct-name.

i.e. there can only be one name used in all those contexts. If the  
programmer wants to name the if blocks implicit in the else ifs they  
must be explicitly moved to the level of a block. i.e. as legal code  
you can have either

first example:
mainIf : if (a>10) then
    a = 10
else if (b>10)  then mainIf
    b = 10;
else mainIf
    b = 20;
endif mainIf

or

second example:
firstIf : if (a>10) then
    a = 10
else firstIf
    secondIf : if (b>10) then
        b = 10
    else secondif
        b = 20
    endif secondIf
endif firstif

Verifying the consistency of the names is best put off until after the  
syntactic analysis.

<snip>

From wclodius at los-alamos.net  Tue Nov  3 21:30:38 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Tue, 3 Nov 2009 22:30:38 -0700
Subject: [antlr-interest] Formatting responses was Re: program with ast
	grammar
In-Reply-To: <26D5CBE7-612A-4A4D-8309-21F8553C3280@los-alamos.net>
References: <90898333.1257250685.200113848.65466@mcgi46.rambler.ru>
	<26D5CBE7-612A-4A4D-8309-21F8553C3280@los-alamos.net>
Message-ID: <7BF982E4-9D63-4817-AE86-2D3175F31D86@los-alamos.net>

I am following antlr-interest through email with the Apple Mail  
application. As can be seen below the forwarded response changes my  
formatting (eliminating explicit end of lines in particular) so that  
it is difficult to read. I have seen responses by others with the same  
problem. Is there a a Preferences setting or other way of avoiding the  
changed formatting?

On Nov 3, 2009, at 10:05 PM, William B. Clodius wrote:

>
> On Nov 3, 2009, at 5:18 AM, ?????? ??????? wrote:
>> good day,> fortran supports "if construct" with following syntax:>>  
>> [name:] if (..) then> [block]>> else if (..) [name:] then>  
>> [block]....>> else if (..) [name:] then> [block]> else [name:]>  
>> [block]> end if [name]>> for example:> firstIf : if (a>10) then> a  
>> = 10> else if (b>10) : secondIf then> b = 10;> else secondif:> b =  
>> 20;>> else firstif:> a = 20;> endif firstif>
>
> Your syntax is incorrect. The correct syntax (from a recent draft  
> of  F09) is context free (unlike some other aspects of Fortran)     
> if-construct is if-then-stmt    block    [ else-if-stmt         
> block ] ...    [ else-stmt      block ]    end-if-stmt
>    if-then-stmt is [ if-construct-name : ] IF ( scalar-logical- 
> expr )  THEN
>    else-if-stmt is ELSE IF ( scalar-logical-expr ) THEN [ if-  
> construct-name ]
>    else-stmt is ELSE [ if-construct-name ]
>    end-if-stmt is END IF [ if-construct-name ]
> or in your form[name:] if (..) then[block]
> else if (..) then [name][block]....
> else if (..) then  [name][block]else [name][block]end if [name]
> Further the appearance of the if-construct-names must satisfy the   
> constraint
> If the if-then-stmt of an if-construct specifies an if-construct- 
> name,  the corresponding end-ifstmt shall specify the same if- 
> construct-name. If the if-then-stmt of  an if-construct does not  
> specify anif-construct-name, the corresponding end-if-stmt shall not  
> specify an  if-construct-name. If an else-ifstmt or else-stmt  
> specifies an if-construct-name, the corresponding if- then-stmt  
> shall specify the sameif-construct-name.
> i.e. there can only be one name used in all those contexts. If the   
> programmer wants to name the if blocks implicit in the else ifs  
> they  must be explicitly moved to the level of a block. i.e. as  
> legal code  you can have either
> first example:mainIf : if (a>10) then    a = 10else if (b>10)  then  
> mainIf    b = 10;else mainIf    b = 20;endif mainIf
> or
> second example:firstIf : if (a>10) then    a = 10else firstIf     
> secondIf : if (b>10) then        b = 10    else secondif        b =  
> 20    endif secondIfendif firstif
> Verifying the consistency of the names is best put off until after  
> the  syntactic analysis.
> <snip>
> List: http://www.antlr.org/mailman/listinfo/antlr- 
> interestUnsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From gerald at certiv.net  Tue Nov  3 22:28:17 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 03 Nov 2009 22:28:17 -0800
Subject: [antlr-interest] Bug report: Unexplainable "no viable
 alternative"
In-Reply-To: <1b9d6f690911031920m8205506lfb7058aea38bd572@mail.gmail.com
 >
References: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
	<200911031855.nA3ItY9X016094@zinc.newtechlaw.com>
	<1b9d6f690911031920m8205506lfb7058aea38bd572@mail.gmail.com>
Message-ID: <200911040629.nA46TW3a019736@zinc.newtechlaw.com>

It is AntlrDT: http://www.certiv.net/projects/antlrdt.html

At 07:20 PM 11/3/2009, you wrote:
>Hi Gerald,
>
>What's the program you used to generate those diagrams in the last 
>message? I sometimes have a bit of trouble understanding what the 
>2nd alternatives are in ANTLRWorks, and this might with it.
>
>Chi Ho Kwok
>
>On Tue, Nov 3, 2009 at 7:55 PM, Gerald Rosenberg 
><<mailto:gerald at certiv.net>gerald at certiv.net> wrote:
>The first version is failing on the associative_dimension_1 not 
>having a star or data_type and no other alternative available.
>
>The second version falls through the associative_dimension_2 to 
>sized_or_unsized_dimension to recognize the '[]'
>
>Note, both have a bit of backtracking that may be problematic on 
>more complex inputs.
>
>HTHs,
>Gerald
>
>
>At 10:22 AM 11/3/2009, <mailto:alex.marin at amiq.ro>alex.marin at amiq.ro wrote:
>>Hello,
>>
>>We have trouble understanding why we get a "no viable alternative" when
>>running the attached parser grammar on the following input:
>>
>>bit bitstream [];
>>
>>The output is:
>>
>>line 1:15 no viable alternative at input ']'
>>
>>However, we have found two (very strange) workarounds for the issue:
>>1. Commenting out the 'real' option in the data_type rule
>>2. Using associative_dimension_2 rule instead of associative_dimension_1
>>(although the two are equivalent)
>>
>>What is the explanation for this behavior?
>>Is there a rigurous solution to avoid such behavior?
>>
>>Thanks,
>>Alex Marin
>>
>>Notes:
>>- the example is not intended to be useful by itself (it is an excerpt from
>>a much larger grammar)
>>- the latest antlr version has been used for code generation
>>(antlr-3.2.jar)
>>- you can find the referred grammar inline at the end of this e-mail and
>>also in the attached file
>>- by comparing the generated parsers, we noticed that the workarounds cause
>>the prediction to be done by some complicated if-conditions rather than the
>>dfa which throws the NoViableAlt
>>
>>////////////////// Example.g ////////////////////////
>>
>>grammar Example;
>>
>>options {
>>         k=1;
>>          output=AST;
>>         }
>>
>>entry
>>:
>>(my_rule)+
>>;
>>
>>my_rule
>>         :
>>           tf_port_item SEMI
>>         ;
>>
>>tf_port_item
>>:
>>data_type ID variable_dimension
>>;
>>
>>
>>data_type
>>:
>>'bit'
>>| 'byte'
>>| 'real' // Comment this to suppress NoViableAlt
>>| 'struct'
>>| 'union' ( 'tagged' )?
>>| 'enum'
>>| 'virtual'
>>| ps_identifier
>>;
>>
>>ps_identifier
>>:
>>( ID COLON_COLON ) => ID COLON_COLON ID
>>| ID
>>;
>>
>>variable_dimension
>>:
>>( associative_dimension_1 ) => associative_dimension_1 variable_dimension
>>// comment this line
>>//        ( associative_dimension_2 ) => associative_dimension_2
>>variable_dimension  // and uncomment this one to suppress NoViableAlt (
>>with 'real' alt in data_type)
>>| ( sized_or_unsized_dimension )*
>>;
>>
>>associative_dimension_1
>>:
>>LBRACK ( STAR | data_type ) RBRACK
>>;
>>
>>associative_dimension_2
>>              :
>>( LBRACK STAR ) => LBRACK STAR RBRACK
>>| LBRACK data_type RBRACK
>>              ;
>>
>>
>>sized_or_unsized_dimension
>>:
>>LBRACK ( NUMBER )? RBRACK
>>;
>>
>>/********** Lexer *************/
>>
>>SEMI: ';';
>>STAR: '*';
>>LBRACK: '[';
>>RBRACK: ']';
>>COLON_COLON: '::';
>>
>>WS
>>:
>>(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>>;
>>
>>ID
>>:
>>('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
>>;
>>
>>NUMBER
>>:
>>('0'..'9')+
>>;
>>
>>
>>Content-Type: application/octet-stream; charset="UTF-8";
>>  name="Example.g";
>>Content-Disposition: attachment;
>>  filename="Example.g";
>>
>>
>>List: 
>><http://www.antlr.org/mailman/listinfo/antlr-interest>http://www.antlr.org/mailman/listinfo/antlr-interest
>>Unsubscribe: 
>><http://www.antlr.org/mailman/options/antlr-interest/your-email-address>http://www.antlr.org/mailman/options/antlr-interest/your-email-address 
>>
>
>
>List: 
><http://www.antlr.org/mailman/listinfo/antlr-interest>http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
><http://www.antlr.org/mailman/options/antlr-interest/your-email-address>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091103/0e1c8161/attachment.html 

From alex.marin at amiq.ro  Wed Nov  4 05:06:42 2009
From: alex.marin at amiq.ro (Alex Marin)
Date: Wed, 04 Nov 2009 06:06:42 -0700
Subject: [antlr-interest] Bug report: Unexplainable "no viable
	alternative"
In-Reply-To: <61b1ea2b90e89f4f9c97380613b56677@temporal-wave.com>
References: <61b1ea2b90e89f4f9c97380613b56677@temporal-wave.com>
Message-ID: <76118db0d0a49a90ee3b9bd2d153dff2@amiq.ro>

Hello Jim, Gerald

@ Jim: I suppose you are referring to the much larger grammar I've
mentioned in the initial post by "myriad syntactic predicates". However,
this is why I extracted this (quite simple) example, which has a single
syntactic predicate and yet fails to perform the recognition. On the other
hand, the  rule associative_dimension_1 *is* left-factored, and re-writing
it using a syntactic predicate (as associative_dimension_2) made the
grammar work in the first place.
Indeed, choosing k=1 fixes the problem, but I still don't understand if
this change is reliable as a global change in the "much larger grammar".

@ Gerald: At the moment I'm trying to install AntlrDT in order to reproduce
the diagrams and better understand what exactly is the difference between
rules associative_dimension_1 and _2. It seems that eclipse has loaded the
plugin, but I don't find any new perspective/view/editor. 
However, I don't see why the recognition would treat differently the two
subrules which I find equivalent (i.e. why doesn't the parser follow
sized_or_unsized_dimension when using _1).

A note for clarification: I reported this issue as a "bug" mainly because
of the very strange behavior obtained by commenting/uncommenting an
alternative in the data_type rule. There is no warning issued by the
generator, and the behavior is unpredictable. This makes me feel quite
insecure, since such a "harmless" change can cause a recognition failure. I
understand that there might be better practices for writing a grammar (and
I acknowledge the "lack of experience on my part"), but I would still
classify such behavior as a bug.
In a bigger picture, I want to port a v2 *working* grammar to v3, and I
would like all the code relying on the v2 parser to be affected as little
as possible. In other words, I'd like to modify the rules as little as
possible in order to avoid introducing bugs in a working and verified
grammar.

Thank you,
Alex Marin


On Tue, 03 Nov 2009 12:26:12 -0800, "Jim Idle" <jimi at temporal-wave.com>
wrote:
> It isn?t a bug; this happens because your grammar is ambiguous without
all
> those myriad syntactic predicates. Take those all out and left factor
your
> rules so that there are no ambiguities. Also, remove that k=1 option and
> let ANTLR work it out, then use ANTLRWorks syntax diagrams to work out
why
> your grammar is ambiguous.
> 
> Left factor the rules so that everything that starts with a '[' starts in
> the same rule, then branches at places (such as '*') where you want to
> distinguish. Then build the appropriate AST.
> 
> I think perhaps this is lack of experience on your part so until you have
a
> better idea of what is going on I also recommend that you do the
following:
> 
> 1) Take all the 'xxxxx' out of your parser rules and create clear LEXER
> rules for them;
> 2) Then check your lexer rules for overlaps in their specification;
> 
> As well as taking out those predicates and fixing the rules properly of
> course.
> 
> Finally, eliminate just generation ordering errors by cleaning out the
> generated .java and .tokens classes and completely regenerating
everything
> to make sure that the parser's idea of what tokens numbers go with what
is
> the same as the lexer's thoughts on the matter.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of alex.marin at amiq.ro
>> Sent: Tuesday, November 03, 2009 10:22 AM
>> To: Antlr interest
>> Cc: Etools; Adrian Simionescu; parrt at cs.usfca.edu
>> Subject: [antlr-interest] Bug report: Unexplainable "no viable
>> alternative"
>> 
>> Hello,
>> 
>> We have trouble understanding why we get a "no viable alternative" when
>> running the attached parser grammar on the following input:
>> 
>> bit bitstream [];
>> 
>> The output is:
>> 
>> line 1:15 no viable alternative at input ']'
>> 
>> However, we have found two (very strange) workarounds for the issue:
>> 1. Commenting out the 'real' option in the data_type rule 2. Using
>> associative_dimension_2 rule instead of associative_dimension_1
>> (although the two are equivalent)
>> 
>> What is the explanation for this behavior?
>> Is there a rigurous solution to avoid such behavior?
>> 
>> Thanks,
>> Alex Marin
>> 
>> Notes:
>> - the example is not intended to be useful by itself (it is an excerpt
>> from a much larger grammar)
>> - the latest antlr version has been used for code generation
>> (antlr-3.2.jar)
>> - you can find the referred grammar inline at the end of this e-mail
>> and also in the attached file
>> - by comparing the generated parsers, we noticed that the workarounds
>> cause the prediction to be done by some complicated if-conditions
>> rather than the dfa which throws the NoViableAlt
>> 
>> ////////////////// Example.g ////////////////////////
>> 
>> grammar Example;
>> 
>> options {
>> 	k=1;
>> 	output=AST;
>> 	}
>> 
>> entry
>> :
>> (my_rule)+
>> ;
>> 
>> my_rule
>> 	:
>> 	  tf_port_item SEMI
>> 	;
>> 
>> tf_port_item
>> :
>> data_type ID variable_dimension
>> ;
>> 
>> 
>> data_type
>> :
>> 'bit'
>> | 'byte'
>> | 'real' // Comment this to suppress NoViableAlt 'struct'
>> | 'union' ( 'tagged' )?
>> | 'enum'
>> | 'virtual'
>> | ps_identifier
>> ;
>> 
>> ps_identifier
>> :
>> ( ID COLON_COLON ) => ID COLON_COLON ID
>> | ID
>> ;
>> 
>> variable_dimension
>> :
>> ( associative_dimension_1 ) => associative_dimension_1
>> variable_dimension // comment this line
>> //        ( associative_dimension_2 ) => associative_dimension_2
>> variable_dimension  // and uncomment this one to suppress NoViableAlt (
>> with 'real' alt in data_type)
>> | ( sized_or_unsized_dimension )*
>> ;
>> 
>> associative_dimension_1
>> :
>> LBRACK ( STAR | data_type ) RBRACK
>> ;
>> 
>> associative_dimension_2
>> 	    :
>> ( LBRACK STAR ) => LBRACK STAR RBRACK
>> | LBRACK data_type RBRACK
>> 	    ;
>> 
>> 
>> sized_or_unsized_dimension
>> :
>> LBRACK ( NUMBER )? RBRACK
>> ;
>> 
>> /********** Lexer *************/
>> 
>> SEMI: ';';
>> STAR: '*';
>> LBRACK: '[';
>> RBRACK: ']';
>> COLON_COLON: '::';
>> 
>> WS
>> :
>> (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>> ;
>> 
>> ID
>> :
>> ('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
>> ;
>> 
>> NUMBER
>> :
>> ('0'..'9')+
>> ;

From alex.marin at amiq.ro  Wed Nov  4 05:26:56 2009
From: alex.marin at amiq.ro (Alex Marin)
Date: Wed, 04 Nov 2009 06:26:56 -0700
Subject: [antlr-interest]
 =?utf-8?q?Big_grammar_=3D=3E_static_initializer/?=
 =?utf-8?q?method_size_is_exceeding_the_65535_bytes_limit?=
In-Reply-To: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
References: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
Message-ID: <1a39c6013dc8c26213b7324b02481e18@amiq.ro>

Hello again,

The issue appeared when generating a parser grammar, it (mostly) had to do
with the static initializer code for prediction DFAs. We modified the
StringTemplate to enclose such declarations:

static final String DFA1_eotS =
"\12\uffff";
static final String DFA1_eofS =
"\1\1\11\uffff";
static final String DFA1_minS =
"\1\5\11\uffff";
static final String DFA1_maxS =
"\1\23\11\uffff";
static final String DFA1_acceptS =
"\1\uffff\1\2\1\1\7\uffff";
static final String DFA1_specialS =
"\12\uffff}>";
static final String[] DFA1_transitionS = {
"\1\2\6\uffff\5\2\1\uffff\2\2",
"",
"",
"",
"",
"",
"",
"",
"",
""
};


in static classes. Happily, this fixed the problem.

Best regards,
Alex Marin

On Tue, 03 Nov 2009 12:28:19 -0800, "Jim Idle" <jimi at temporal-wave.com>
wrote:
> I think that the issue is more likely something to do with your lexer
> specification. You should not need to worry about having lots of
keywords,
> so one of the other rules must be causing the huge expansion. For
instance
> I have problems with the complete lexer for TSQL, which has more keywords
> than you can shake a stick at. 
> 
> Did you ever post your complete lexer spec? I was out of the country when
> you first started this thread.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Alex Marin
>> Sent: Tuesday, November 03, 2009 10:43 AM
>> To: Antlr interest
>> Cc: Etools
>> Subject: [antlr-interest] Big grammar => static initializer/method size
>> is exceeding the 65535 bytes limit
>> 
>> Hello,
>> 
>> I've managed to find an automated solution for one of the previously
>> reported errors, namely for:
>> 
>> The code for the static initializer is exceeding the 65535 bytes limit
>> 
>> The "fix" consists of modifying the StringTemplate that generates the
>> parser code so that static initializers are automatically included in
>> speparate classes (and properly referenced). By using static classes,
>> all of the code is contained in a single file, so the change is
>> transparent from a user's point of view.
>> 
>> You can find the modified code in the attached file.
>> 
>> Best regards,
>> Alex Marin
>> 
>> PS: In order to use the fix you have to replace the Java.stg from
>> org.antlr.codegen.templates.Java with this one and recompile antlr.
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andreas.meyer at smartshift.de  Wed Nov  4 05:31:36 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Wed, 04 Nov 2009 14:31:36 +0100
Subject: [antlr-interest] Big grammar => static initializer/method size
 is exceeding the 65535 bytes limit
In-Reply-To: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
References: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
Message-ID: <4AF18238.3080703@smartshift.de>

Back in the days when we tried to migrate our ANTLR2 grammar to ANTLR3, 
we also experienced this problem, due to lots of static initializer code 
in the _parser_ class. Our solution was to apply some perl-skript magic, 
but if Alex Marin now proposes a built-in solution, that is only good 
for ANTLR.

Andreas

Jim Idle schrieb:
> I think that the issue is more likely something to do with your lexer specification. You should not need to worry about having lots of keywords, so one of the other rules must be causing the huge expansion. For instance I have problems with the complete lexer for TSQL, which has more keywords than you can shake a stick at. 
>
> Did you ever post your complete lexer spec? I was out of the country when you first started this thread.
>
> Jim
>   


From stefan.frey at solenix.ch  Wed Nov  4 06:33:18 2009
From: stefan.frey at solenix.ch (Stefan Frey)
Date: Wed, 4 Nov 2009 15:33:18 +0100
Subject: [antlr-interest] BNF to ANTLR
Message-ID: <3C2FED32-9492-4B27-9B8B-82CF90177DB1@solenix.ch>

Hi im quite new to ANTLR and compiler generation.
I have a grammer written in BNF and need to convert it
to the Format ANTLR supports. So ist there a better/quicker
solution than by doing it by hand?

Cheers Stefan

From reneel at imexsystems.com  Wed Nov  4 06:44:43 2009
From: reneel at imexsystems.com (Renee Luo)
Date: Wed, 4 Nov 2009 09:44:43 -0500
Subject: [antlr-interest] Big grammar => static initializer/method size
 is exceeding the 65535 bytes limit
In-Reply-To: <4AF18238.3080703@smartshift.de>
References: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
	<4AF18238.3080703@smartshift.de>
Message-ID: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ACA2@imex-is044.corp.imexsystems.com>

Yes, we are trying to migrate our ANTLR2 grammar to ANTLR2, we are also facing this problem. If the static initialize code will be separated from parser_class, That's will be great for us.

Renee

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andreas Meyer
Sent: Wednesday, November 04, 2009 8:32 AM
To: Antlr interest
Subject: Re: [antlr-interest] Big grammar => static initializer/method size is exceeding the 65535 bytes limit

Back in the days when we tried to migrate our ANTLR2 grammar to ANTLR3,
we also experienced this problem, due to lots of static initializer code
in the _parser_ class. Our solution was to apply some perl-skript magic,
but if Alex Marin now proposes a built-in solution, that is only good
for ANTLR.

Andreas

Jim Idle schrieb:
> I think that the issue is more likely something to do with your lexer specification. You should not need to worry about having lots of keywords, so one of the other rules must be causing the huge expansion. For instance I have problems with the complete lexer for TSQL, which has more keywords than you can shake a stick at.
>
> Did you ever post your complete lexer spec? I was out of the country when you first started this thread.
>
> Jim
>


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This email and its attachments may be confidential and are intended solely for the use of the individual to whom it is addressed. Any views or opinions expressed are solely those of the author and do not necessarily represent those of ImexSystems Inc.
If you are not the intended recipient of this email and its attachments, you must take no action based upon them, nor must you copy or show them to anyone.
Please contact the sender if you believe you have received this email in error.

From gerald at certiv.net  Wed Nov  4 07:05:59 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 04 Nov 2009 07:05:59 -0800
Subject: [antlr-interest] Bug report: Unexplainable "no viable
 alternative"
In-Reply-To: <76118db0d0a49a90ee3b9bd2d153dff2@amiq.ro>
References: <61b1ea2b90e89f4f9c97380613b56677@temporal-wave.com>
	<76118db0d0a49a90ee3b9bd2d153dff2@amiq.ro>
Message-ID: <200911041508.nA4F8oVj022683@zinc.newtechlaw.com>

At 05:06 AM 11/4/2009, you wrote:
>Hello Jim, Gerald
>
>@ Jim: I suppose you are referring to the much larger grammar I've
>mentioned in the initial post by "myriad syntactic predicates". However,
>this is why I extracted this (quite simple) example, which has a single
>syntactic predicate and yet fails to perform the recognition. On the other
>hand, the  rule associative_dimension_1 *is* left-factored, and re-writing
>it using a syntactic predicate (as associative_dimension_2) made the
>grammar work in the first place.
>Indeed, choosing k=1 fixes the problem, but I still don't understand if
>this change is reliable as a global change in the "much larger grammar".
>
>@ Gerald: At the moment I'm trying to install AntlrDT in order to reproduce
>the diagrams and better understand what exactly is the difference between
>rules associative_dimension_1 and _2. It seems that eclipse has loaded the
>plugin, but I don't find any new perspective/view/editor.

The diagrams show the exact path taken by the parser.  When live, you 
can click through the diagrams to the parser/lexer rules and input 
text, so it makes understanding a bit easier.

As for installation, did you install the requirements?

http://www.certiv.net/projects/antlrdt.html#requirements

Tip:  when installing, turn off "Group items by category" -- makes 
finding the dependencies easier.

Restart with "-clean"

Verify the install by checking Help->About->Installation details->Plugins

Check in Help->About->Installation details->Configuration for 
problems with the run-time initialization of the plugin.

If in doubt, send me a copy off-list.


>However, I don't see why the recognition would treat differently the two
>subrules which I find equivalent (i.e. why doesn't the parser follow
>sized_or_unsized_dimension when using _1).

That k=1 is suspect.  It looks like it is also restricting the 
predicate lookahead.  If you cannot remove it, then Jim's comments 
apply even stronger.


From jimi at temporal-wave.com  Wed Nov  4 07:53:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 07:53:14 -0800
Subject: [antlr-interest] Bug report: Unexplainable "no viable
	alternative"
In-Reply-To: <76118db0d0a49a90ee3b9bd2d153dff2@amiq.ro>
Message-ID: <7978306a2ec850449b0215b6f2b49ed7@temporal-wave.com>

In general, when porting a grammar it is much better to start again I am afraid. Have you got global backtracking turned on as well? Remember that when you add predicates you will quite often make warnings/errors go away (half the point is this of course), but it does not mean that you solved the issue. I think that you are starting with a v2 grammar that just about hung together and are finding that v3 is showing you a lot more of the holes. Start again is my advice,though you probably don't want to hear that ;-)

Jim

> -----Original Message-----
> From: Alex Marin [mailto:alex.marin at amiq.ro]
> Sent: Wednesday, November 04, 2009 5:07 AM
> To: Jim Idle; Gerald Rosenberg
> Cc: Antlr interest; Etools; Adrian Simionescu
> Subject: RE: [antlr-interest] Bug report: Unexplainable "no viable
> alternative"
> Importance: Low
> 
> Hello Jim, Gerald
> 
> @ Jim: I suppose you are referring to the much larger grammar I've
> mentioned in the initial post by "myriad syntactic predicates".
> However,
> this is why I extracted this (quite simple) example, which has a single
> syntactic predicate and yet fails to perform the recognition. On the
> other
> hand, the  rule associative_dimension_1 *is* left-factored, and re-
> writing
> it using a syntactic predicate (as associative_dimension_2) made the
> grammar work in the first place.
> Indeed, choosing k=1 fixes the problem, but I still don't understand if
> this change is reliable as a global change in the "much larger
> grammar".
> 
> @ Gerald: At the moment I'm trying to install AntlrDT in order to
> reproduce
> the diagrams and better understand what exactly is the difference
> between
> rules associative_dimension_1 and _2. It seems that eclipse has loaded
> the
> plugin, but I don't find any new perspective/view/editor.
> However, I don't see why the recognition would treat differently the
> two
> subrules which I find equivalent (i.e. why doesn't the parser follow
> sized_or_unsized_dimension when using _1).
> 
> A note for clarification: I reported this issue as a "bug" mainly
> because
> of the very strange behavior obtained by commenting/uncommenting an
> alternative in the data_type rule. There is no warning issued by the
> generator, and the behavior is unpredictable. This makes me feel quite
> insecure, since such a "harmless" change can cause a recognition
> failure. I
> understand that there might be better practices for writing a grammar
> (and
> I acknowledge the "lack of experience on my part"), but I would still
> classify such behavior as a bug.
> In a bigger picture, I want to port a v2 *working* grammar to v3, and I
> would like all the code relying on the v2 parser to be affected as
> little
> as possible. In other words, I'd like to modify the rules as little as
> possible in order to avoid introducing bugs in a working and verified
> grammar.
> 
> Thank you,
> Alex Marin
> 
> 
> On Tue, 03 Nov 2009 12:26:12 -0800, "Jim Idle" <jimi at temporal-wave.com>
> wrote:
> > It isn?t a bug; this happens because your grammar is ambiguous
> without
> all
> > those myriad syntactic predicates. Take those all out and left factor
> your
> > rules so that there are no ambiguities. Also, remove that k=1 option
> and
> > let ANTLR work it out, then use ANTLRWorks syntax diagrams to work
> out
> why
> > your grammar is ambiguous.
> >
> > Left factor the rules so that everything that starts with a '['
> starts in
> > the same rule, then branches at places (such as '*') where you want
> to
> > distinguish. Then build the appropriate AST.
> >
> > I think perhaps this is lack of experience on your part so until you
> have
> a
> > better idea of what is going on I also recommend that you do the
> following:
> >
> > 1) Take all the 'xxxxx' out of your parser rules and create clear
> LEXER
> > rules for them;
> > 2) Then check your lexer rules for overlaps in their specification;
> >
> > As well as taking out those predicates and fixing the rules properly
> of
> > course.
> >
> > Finally, eliminate just generation ordering errors by cleaning out
> the
> > generated .java and .tokens classes and completely regenerating
> everything
> > to make sure that the parser's idea of what tokens numbers go with
> what
> is
> > the same as the lexer's thoughts on the matter.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of alex.marin at amiq.ro
> >> Sent: Tuesday, November 03, 2009 10:22 AM
> >> To: Antlr interest
> >> Cc: Etools; Adrian Simionescu; parrt at cs.usfca.edu
> >> Subject: [antlr-interest] Bug report: Unexplainable "no viable
> >> alternative"
> >>
> >> Hello,
> >>
> >> We have trouble understanding why we get a "no viable alternative"
> when
> >> running the attached parser grammar on the following input:
> >>
> >> bit bitstream [];
> >>
> >> The output is:
> >>
> >> line 1:15 no viable alternative at input ']'
> >>
> >> However, we have found two (very strange) workarounds for the issue:
> >> 1. Commenting out the 'real' option in the data_type rule 2. Using
> >> associative_dimension_2 rule instead of associative_dimension_1
> >> (although the two are equivalent)
> >>
> >> What is the explanation for this behavior?
> >> Is there a rigurous solution to avoid such behavior?
> >>
> >> Thanks,
> >> Alex Marin
> >>
> >> Notes:
> >> - the example is not intended to be useful by itself (it is an
> excerpt
> >> from a much larger grammar)
> >> - the latest antlr version has been used for code generation
> >> (antlr-3.2.jar)
> >> - you can find the referred grammar inline at the end of this e-mail
> >> and also in the attached file
> >> - by comparing the generated parsers, we noticed that the
> workarounds
> >> cause the prediction to be done by some complicated if-conditions
> >> rather than the dfa which throws the NoViableAlt
> >>
> >> ////////////////// Example.g ////////////////////////
> >>
> >> grammar Example;
> >>
> >> options {
> >> 	k=1;
> >> 	output=AST;
> >> 	}
> >>
> >> entry
> >> :
> >> (my_rule)+
> >> ;
> >>
> >> my_rule
> >> 	:
> >> 	  tf_port_item SEMI
> >> 	;
> >>
> >> tf_port_item
> >> :
> >> data_type ID variable_dimension
> >> ;
> >>
> >>
> >> data_type
> >> :
> >> 'bit'
> >> | 'byte'
> >> | 'real' // Comment this to suppress NoViableAlt 'struct'
> >> | 'union' ( 'tagged' )?
> >> | 'enum'
> >> | 'virtual'
> >> | ps_identifier
> >> ;
> >>
> >> ps_identifier
> >> :
> >> ( ID COLON_COLON ) => ID COLON_COLON ID
> >> | ID
> >> ;
> >>
> >> variable_dimension
> >> :
> >> ( associative_dimension_1 ) => associative_dimension_1
> >> variable_dimension // comment this line
> >> //        ( associative_dimension_2 ) => associative_dimension_2
> >> variable_dimension  // and uncomment this one to suppress
> NoViableAlt (
> >> with 'real' alt in data_type)
> >> | ( sized_or_unsized_dimension )*
> >> ;
> >>
> >> associative_dimension_1
> >> :
> >> LBRACK ( STAR | data_type ) RBRACK
> >> ;
> >>
> >> associative_dimension_2
> >> 	    :
> >> ( LBRACK STAR ) => LBRACK STAR RBRACK
> >> | LBRACK data_type RBRACK
> >> 	    ;
> >>
> >>
> >> sized_or_unsized_dimension
> >> :
> >> LBRACK ( NUMBER )? RBRACK
> >> ;
> >>
> >> /********** Lexer *************/
> >>
> >> SEMI: ';';
> >> STAR: '*';
> >> LBRACK: '[';
> >> RBRACK: ']';
> >> COLON_COLON: '::';
> >>
> >> WS
> >> :
> >> (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> >> ;
> >>
> >> ID
> >> :
> >> ('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
> >> ;
> >>
> >> NUMBER
> >> :
> >> ('0'..'9')+
> >> ;




From jimi at temporal-wave.com  Wed Nov  4 08:00:02 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:00:02 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <1a39c6013dc8c26213b7324b02481e18@amiq.ro>
Message-ID: <2d2e951a6635f741b695bf9d5b585af9@temporal-wave.com>

Yes - what I am saying is that you are getting such huge DFA tables generated because your rules are not well organized and it is taking a huge amount of analysis and so on to work out how to put it together for you. 

You can avoid table driven DFAs by using the new switches for code generation in ANTLR 3.2. These will influence code generation to use big switch() statements, which should result in less byte code than the DFA tables (though I don't know how big switch statements can be in Java).


Can increase this to use if statements more often....

  -Xmaxinlinedfastates m  max DFA states before table used rather than inlining      [10]


Increase this to say 3000...
  -Xmaxswitchcaselabels m don't generate switch() statements for dfas bigger  than m [300]

And reduce this to say 1....
  -Xminswitchalts m       don't generate switch() statements for dfas smaller than m [3]

To generate switches rather than tables.


But really, rejigging your parser will be a much better thing to do overall.

Jim


> -----Original Message-----
> From: Alex Marin [mailto:alex.marin at amiq.ro]
> Sent: Wednesday, November 04, 2009 5:27 AM
> To: Jim Idle
> Cc: Antlr interest; Etools
> Subject: Re: [antlr-interest] Big grammar => static initializer/method
> size is exceeding the 65535 bytes limit
> Importance: Low
> 
> Hello again,
> 
> The issue appeared when generating a parser grammar, it (mostly) had to
> do
> with the static initializer code for prediction DFAs. We modified the
> StringTemplate to enclose such declarations:
> 
> static final String DFA1_eotS =
> "\12\uffff";
> static final String DFA1_eofS =
> "\1\1\11\uffff";
> static final String DFA1_minS =
> "\1\5\11\uffff";
> static final String DFA1_maxS =
> "\1\23\11\uffff";
> static final String DFA1_acceptS =
> "\1\uffff\1\2\1\1\7\uffff";
> static final String DFA1_specialS =
> "\12\uffff}>";
> static final String[] DFA1_transitionS = {
> "\1\2\6\uffff\5\2\1\uffff\2\2",
> "",
> "",
> "",
> "",
> "",
> "",
> "",
> "",
> ""
> };
> 
> 
> in static classes. Happily, this fixed the problem.
> 
> Best regards,
> Alex Marin
> 
> On Tue, 03 Nov 2009 12:28:19 -0800, "Jim Idle" <jimi at temporal-wave.com>
> wrote:
> > I think that the issue is more likely something to do with your lexer
> > specification. You should not need to worry about having lots of
> keywords,
> > so one of the other rules must be causing the huge expansion. For
> instance
> > I have problems with the complete lexer for TSQL, which has more
> keywords
> > than you can shake a stick at.
> >
> > Did you ever post your complete lexer spec? I was out of the country
> when
> > you first started this thread.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Alex Marin
> >> Sent: Tuesday, November 03, 2009 10:43 AM
> >> To: Antlr interest
> >> Cc: Etools
> >> Subject: [antlr-interest] Big grammar => static initializer/method
> size
> >> is exceeding the 65535 bytes limit
> >>
> >> Hello,
> >>
> >> I've managed to find an automated solution for one of the previously
> >> reported errors, namely for:
> >>
> >> The code for the static initializer is exceeding the 65535 bytes
> limit
> >>
> >> The "fix" consists of modifying the StringTemplate that generates
> the
> >> parser code so that static initializers are automatically included
> in
> >> speparate classes (and properly referenced). By using static
> classes,
> >> all of the code is contained in a single file, so the change is
> >> transparent from a user's point of view.
> >>
> >> You can find the modified code in the attached file.
> >>
> >> Best regards,
> >> Alex Marin
> >>
> >> PS: In order to use the fix you have to replace the Java.stg from
> >> org.antlr.codegen.templates.Java with this one and recompile antlr.
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address




From jimi at temporal-wave.com  Wed Nov  4 08:01:45 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:01:45 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <4AF18238.3080703@smartshift.de>
Message-ID: <55c6677840c22f4bbe9c5e103fb7dd22@temporal-wave.com>

See previous post about -X options. But it if you do not want to improve parser organization then it is much better to split the grammar up in to a number of 'import' grammars, which will reduce individual class size. You do not want to apply scripts to generated code really :-(

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andreas Meyer
> Sent: Wednesday, November 04, 2009 5:32 AM
> To: Antlr interest
> Subject: Re: [antlr-interest] Big grammar => static initializer/method
> size is exceeding the 65535 bytes limit
> 
> Back in the days when we tried to migrate our ANTLR2 grammar to ANTLR3,
> we also experienced this problem, due to lots of static initializer
> code
> in the _parser_ class. Our solution was to apply some perl-skript
> magic,
> but if Alex Marin now proposes a built-in solution, that is only good
> for ANTLR.
> 
> Andreas
> 
> Jim Idle schrieb:
> > I think that the issue is more likely something to do with your lexer
> specification. You should not need to worry about having lots of
> keywords, so one of the other rules must be causing the huge expansion.
> For instance I have problems with the complete lexer for TSQL, which
> has more keywords than you can shake a stick at.
> >
> > Did you ever post your complete lexer spec? I was out of the country
> when you first started this thread.
> >
> > Jim
> >
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Nov  4 08:05:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:05:12 -0800
Subject: [antlr-interest] BNF to ANTLR
In-Reply-To: <3C2FED32-9492-4B27-9B8B-82CF90177DB1@solenix.ch>
Message-ID: <48836f9f9a45d34fab41482c7f334a9f@temporal-wave.com>

Much better to do it by hand. ANTLRs EBNF notation is close, but remember that ANTLR is LL() and not LALR, which most bnf definitions from normative specs are aimed at. Use ANTLRWorks and build slowly and you should pick it up quite quickly if you understand BNF well.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stefan Frey
> Sent: Wednesday, November 04, 2009 6:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] BNF to ANTLR
> 
> Hi im quite new to ANTLR and compiler generation.
> I have a grammer written in BNF and need to convert it
> to the Format ANTLR supports. So ist there a better/quicker
> solution than by doing it by hand?
> 
> Cheers Stefan
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Nov  4 08:10:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:10:14 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ACA2@imex-is044.corp.imexsystems.com>
Message-ID: <fad8f686c7ba9444b048139056064f6b@temporal-wave.com>

Guys - you are asking for the wrong problem to be fixed (at least of the three of you, at least two will be ;-). Try the new -X options, then look at splitting your grammar into multiple import grammars, then start taking out huge predicates such as (expression)=> or generally (rule)=>. You can stop anywhere along that path if you do not feel that optimizing the grammar is something worth your while and the first and/or second options make the DFA table size issue go away.

There are cases where big DFAs become inevitable, and then you should definitely look at the import capability, which will prevent a single parser class being used for everything and allow you to manage what goes in which class at the grammar level.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Renee Luo
> Sent: Wednesday, November 04, 2009 6:45 AM
> To: Antlr interest
> Subject: Re: [antlr-interest] Big grammar => static initializer/method
> size is exceeding the 65535 bytes limit
> 
> Yes, we are trying to migrate our ANTLR2 grammar to ANTLR2, we are also
> facing this problem. If the static initialize code will be separated
> from parser_class, That's will be great for us.
> 
> Renee
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andreas Meyer
> Sent: Wednesday, November 04, 2009 8:32 AM
> To: Antlr interest
> Subject: Re: [antlr-interest] Big grammar => static initializer/method
> size is exceeding the 65535 bytes limit
> 
> Back in the days when we tried to migrate our ANTLR2 grammar to ANTLR3,
> we also experienced this problem, due to lots of static initializer
> code
> in the _parser_ class. Our solution was to apply some perl-skript
> magic,
> but if Alex Marin now proposes a built-in solution, that is only good
> for ANTLR.
> 
> Andreas
> 
> Jim Idle schrieb:
> > I think that the issue is more likely something to do with your lexer
> specification. You should not need to worry about having lots of
> keywords, so one of the other rules must be causing the huge expansion.
> For instance I have problems with the complete lexer for TSQL, which
> has more keywords than you can shake a stick at.
> >
> > Did you ever post your complete lexer spec? I was out of the country
> when you first started this thread.
> >
> > Jim
> >
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
> 
> This email and its attachments may be confidential and are intended
> solely for the use of the individual to whom it is addressed. Any views
> or opinions expressed are solely those of the author and do not
> necessarily represent those of ImexSystems Inc.
> If you are not the intended recipient of this email and its
> attachments, you must take no action based upon them, nor must you copy
> or show them to anyone.
> Please contact the sender if you believe you have received this email
> in error.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From thomas.dill at teleport.ch  Wed Nov  4 08:33:01 2009
From: thomas.dill at teleport.ch (Thomas Dill)
Date: Wed, 4 Nov 2009 17:33:01 +0100
Subject: [antlr-interest] Define "function" as numerical and alphanumerical
	expression
Message-ID: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>

Hi!

 

I need help for the following problem:

 

I think the best way to describe it, is to show you what I tried. This
produces a bunch of errors. 

 

expression                     :    conditional_expression |
numerical_expression | alphanumerical_expression | function | data_field ;

conditional_expression         :    'IF' arguments 'THEN' value ('ELSE'
(conditional_expression | value))? ;

arguments                      :    argument  (('OR' | 'AND') argument)* |

'(' arguments ')' ;

Argument                      :    value relational_operator value |

                                    (NOT? value IN) ('('
(SingleStringLiteral | NumericLiteral) (COMMA (SingleStringLiteral |
NumericLiteral))* ')' | FILE OBJNAME)  ;

relational_operator            :    RelOp | alphanumerical_relational_op |
numerical_relational_op ;

alphanumerical_relational_op   :    ARelOp ;

numerical_relational_op        :    NRelOp numerical_expression  'TO' ;

value                          :    numerical_expression  |
alphanumerical_expression | function | data_field;

function                       :    FUNCTION function_argument ')';

function_argument              :    (numerical_expression  |
alphanumerical_expression | function | data_field) (COLON
numerical_expression  | alphanumerical_expression | function | data_field)*;

alphanumerical_expression      :    (SingleStringLiteral) (chrOp
(SingleStringLiteral))+;

numerical_expression           :    (numExprA) (NumOp (numExprA))+ |

'('numerical_expression  ')' ;

numExprA                       :    NumericLiteral; 

data_field                     :    PREOP? PREFIX? OBJNAME

 

PREOP                          :
('AVE'|'MAX'|'MIN'|'FST'|'TOT'|'CNT'|'SUM'|'ALL'|'ST'|'CT'|'ASQ'|'PCT'|'RPCT
'|'SEG'|'DST')'.';     

PREFIX                         :    OBJNAME '.';    

FUNCTION                       :    OBJNAME '(';

OBJNAME                        :    ('A'..'Z') ('A'..'Z'|'0'..'9'|'_')*;

NumOp                          :    '**' | '*' | '+' | '-' | '/' | 'AND' |
'OR';     

ChrOp                          :    '|' | '||' ;

RelOp                         :
'EQ'|'IS'|'ISNOT'|'ISFROM'|'EXCEEDS'|'NE'|'GE'|'GT'|'LT'|'LE'|'IS
MISSING'|'ISNOT MISSING'  ;

NRelOp                         :    'FROM'|'ISFROM'|'NOTFROM';

ARelOp                         :
'CONTAINS'|'OMITS'|'INCLUDES'|'EXCLUDES'|'NOT LIKE'|'LIKE';

fragment StringLiteral         :    '"' ~('"')* '"' | SingleStringLiteral ;

SingleStringLiteral            :    '\'' ~('\'')* '\''   ;

NumericLiteral                 :    DecimalLiteral | IntegerLiteral ;

fragment IntegerLiteral        :    DecimalDigit+;

fragment DecimalLiteral        :    DecimalDigit+ '.' DecimalDigit* | '.'
DecimalDigit+ ;

fragment DecimalDigit          :    ('0'..'9') ;

 

I really don't know how to describe the problem but I urgently need some
help.

 

Best regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/e25f8a77/attachment.html 

From jimi at temporal-wave.com  Wed Nov  4 08:41:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:41:15 -0800
Subject: [antlr-interest] Define "function" as numerical and
	alphanumerical expression
In-Reply-To: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
Message-ID: <a3c7a8bef7d54f48b781a2c9115e0e45@temporal-wave.com>

It looks like you are trying to produce a grammar from some kind of normative spec and have made the classic mistake of trying to include context in the expression of the grammar. The problem is that such specs are not written for writing parsers with but more of an explanation of how things go together in general.

 

So, you don't want rules like alphanumerical_expression and so on, you just want expression, and you must make your expression rule left factored and organized for LL() parsers, not just typed in like below. You can steal the expression rule tree from any of the sample grammars (choose one that might be close already), such as java or C.

 

Basically though, you are not going to get very far starting from the grammar below. What is it you are trying to parse?

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Dill
Sent: Wednesday, November 04, 2009 8:33 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Define "function" as numerical and alphanumerical expression

 

Hi!

 

I need help for the following problem:

 

I think the best way to describe it, is to show you what I tried. This produces a bunch of errors. 

 

expression                     :    conditional_expression | numerical_expression | alphanumerical_expression | function | data_field ;

conditional_expression         :    'IF' arguments 'THEN' value ('ELSE' (conditional_expression | value))? ;

arguments                      :    argument  (('OR' | 'AND') argument)* |

'(' arguments ')' ;

Argument                      :    value relational_operator value |

                                    (NOT? value IN) ('(' (SingleStringLiteral | NumericLiteral) (COMMA (SingleStringLiteral | NumericLiteral))* ')' | FILE OBJNAME)  ;

relational_operator            :    RelOp | alphanumerical_relational_op | numerical_relational_op ;

alphanumerical_relational_op   :    ARelOp ;

numerical_relational_op        :    NRelOp numerical_expression  'TO' ;

value                          :    numerical_expression  | alphanumerical_expression | function | data_field;

function                       :    FUNCTION function_argument ')';

function_argument              :    (numerical_expression  | alphanumerical_expression | function | data_field) (COLON numerical_expression  | alphanumerical_expression | function | data_field)*;

alphanumerical_expression      :    (SingleStringLiteral) (chrOp (SingleStringLiteral))+;

numerical_expression           :    (numExprA) (NumOp (numExprA))+ |

'('numerical_expression  ')' ;

numExprA                       :    NumericLiteral; 

data_field                     :    PREOP? PREFIX? OBJNAME

 

PREOP                          :     ('AVE'|'MAX'|'MIN'|'FST'|'TOT'|'CNT'|'SUM'|'ALL'|'ST'|'CT'|'ASQ'|'PCT'|'RPCT'|'SEG'|'DST')'.';     

PREFIX                         :    OBJNAME '.';    

FUNCTION                       :    OBJNAME '(';

OBJNAME                        :    ('A'..'Z') ('A'..'Z'|'0'..'9'|'_')*;

NumOp                          :    '**' | '*' | '+' | '-' | '/' | 'AND' | 'OR';     

ChrOp                          :    '|' | '||' ;

RelOp                         :     'EQ'|'IS'|'ISNOT'|'ISFROM'|'EXCEEDS'|'NE'|'GE'|'GT'|'LT'|'LE'|'IS MISSING'|'ISNOT MISSING'  ;

NRelOp                         :    'FROM'|'ISFROM'|'NOTFROM';

ARelOp                         :    'CONTAINS'|'OMITS'|'INCLUDES'|'EXCLUDES'|'NOT LIKE'|'LIKE';

fragment StringLiteral         :    '"' ~('"')* '"' | SingleStringLiteral ;

SingleStringLiteral            :    '\'' ~('\'')* '\''   ;

NumericLiteral                 :    DecimalLiteral | IntegerLiteral ;

fragment IntegerLiteral        :    DecimalDigit+;

fragment DecimalLiteral        :    DecimalDigit+ '.' DecimalDigit* | '.' DecimalDigit+ ;

fragment DecimalDigit          :    ('0'..'9') ;

 

I really don't know how to describe the problem but I urgently need some help.

 

Best regards,

Tom



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/fda2b64c/attachment.html 

From lgcraymer at yahoo.com  Wed Nov  4 11:05:04 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 4 Nov 2009 11:05:04 -0800 (PST)
Subject: [antlr-interest] BNF to ANTLR
In-Reply-To: <48836f9f9a45d34fab41482c7f334a9f@temporal-wave.com>
References: <48836f9f9a45d34fab41482c7f334a9f@temporal-wave.com>
Message-ID: <867106.7550.qm@web55906.mail.re3.yahoo.com>

Actually, this is easier to do automatically.  Any BNF dialect takes about 2 pages for parser + lexer description of the BNF in ANTLR; it is very easy to write a translator from one BNF dialect to another (ANTLR).  You will still have to rework the resulting grammar.

--Loring



----- Original Message ----
> From: Jim Idle <jimi at temporal-wave.com>
> To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Sent: Wed, November 4, 2009 8:05:12 AM
> Subject: Re: [antlr-interest] BNF to ANTLR
> 
> Much better to do it by hand. ANTLRs EBNF notation is close, but remember that 
> ANTLR is LL() and not LALR, which most bnf definitions from normative specs are 
> aimed at. Use ANTLRWorks and build slowly and you should pick it up quite 
> quickly if you understand BNF well.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Stefan Frey
> > Sent: Wednesday, November 04, 2009 6:33 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] BNF to ANTLR
> > 
> > Hi im quite new to ANTLR and compiler generation.
> > I have a grammer written in BNF and need to convert it
> > to the Format ANTLR supports. So ist there a better/quicker
> > solution than by doing it by hand?
> > 
> > Cheers Stefan
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From jimi at temporal-wave.com  Wed Nov  4 11:07:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 11:07:18 -0800
Subject: [antlr-interest] BNF to ANTLR
In-Reply-To: <867106.7550.qm@web55906.mail.re3.yahoo.com>
Message-ID: <10cec0a4fd2ca649a7ab88668c6f7d1c@temporal-wave.com>

Yeah - the thing is though, that you then don't really learn anything about what you are doing. Unless of course you write the translator in ANTLR first ;-)

Jim

> -----Original Message-----
> From: Loring Craymer [mailto:lgcraymer at yahoo.com]
> Sent: Wednesday, November 04, 2009 11:05 AM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] BNF to ANTLR
> 
> Actually, this is easier to do automatically.  Any BNF dialect takes
> about 2 pages for parser + lexer description of the BNF in ANTLR; it is
> very easy to write a translator from one BNF dialect to another
> (ANTLR).  You will still have to rework the resulting grammar.
> 
> --Loring
> 
> 
> 
> ----- Original Message ----
> > From: Jim Idle <jimi at temporal-wave.com>
> > To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> > Sent: Wed, November 4, 2009 8:05:12 AM
> > Subject: Re: [antlr-interest] BNF to ANTLR
> >
> > Much better to do it by hand. ANTLRs EBNF notation is close, but
> remember that
> > ANTLR is LL() and not LALR, which most bnf definitions from normative
> specs are
> > aimed at. Use ANTLRWorks and build slowly and you should pick it up
> quite
> > quickly if you understand BNF well.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Stefan Frey
> > > Sent: Wednesday, November 04, 2009 6:33 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] BNF to ANTLR
> > >
> > > Hi im quite new to ANTLR and compiler generation.
> > > I have a grammer written in BNF and need to convert it
> > > to the Format ANTLR supports. So ist there a better/quicker
> > > solution than by doing it by hand?
> > >
> > > Cheers Stefan
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > > email-address
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 
> 
> 




From lgcraymer at yahoo.com  Wed Nov  4 11:13:29 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 4 Nov 2009 11:13:29 -0800 (PST)
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <fad8f686c7ba9444b048139056064f6b@temporal-wave.com>
References: <fad8f686c7ba9444b048139056064f6b@temporal-wave.com>
Message-ID: <761217.85598.qm@web55908.mail.re3.yahoo.com>

If DFA size grew linearly with the size of the grammar, Jim would be correct.  The evidence I have seen is that they grow nonlinearly, so partitioning a grammar will not always work, and it is always best if a tool circumvents mysterious "explosions" during development.  Alex's solution is both elegant and easy to  apply, and the net cost is a few more .class files.

--Loring




----- Original Message ----
> From: Jim Idle <jimi at temporal-wave.com>
> To: Antlr interest <antlr-interest at antlr.org>
> Sent: Wed, November 4, 2009 8:10:14 AM
> Subject: Re: [antlr-interest] Big grammar => static initializer/method size is exceeding the 65535 bytes limit
> 
> Guys - you are asking for the wrong problem to be fixed (at least of the three 
> of you, at least two will be ;-). Try the new -X options, then look at splitting 
> your grammar into multiple import grammars, then start taking out huge 
> predicates such as (expression)=> or generally (rule)=>. You can stop anywhere 
> along that path if you do not feel that optimizing the grammar is something 
> worth your while and the first and/or second options make the DFA table size 
> issue go away.
> 
> There are cases where big DFAs become inevitable, and then you should definitely 
> look at the import capability, which will prevent a single parser class being 
> used for everything and allow you to manage what goes in which class at the 
> grammar level.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Renee Luo
> > Sent: Wednesday, November 04, 2009 6:45 AM
> > To: Antlr interest
> > Subject: Re: [antlr-interest] Big grammar => static initializer/method
> > size is exceeding the 65535 bytes limit
> > 
> > Yes, we are trying to migrate our ANTLR2 grammar to ANTLR2, we are also
> > facing this problem. If the static initialize code will be separated
> > from parser_class, That's will be great for us.
> > 
> > Renee
> > 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Andreas Meyer
> > Sent: Wednesday, November 04, 2009 8:32 AM
> > To: Antlr interest
> > Subject: Re: [antlr-interest] Big grammar => static initializer/method
> > size is exceeding the 65535 bytes limit
> > 
> > Back in the days when we tried to migrate our ANTLR2 grammar to ANTLR3,
> > we also experienced this problem, due to lots of static initializer
> > code
> > in the _parser_ class. Our solution was to apply some perl-skript
> > magic,
> > but if Alex Marin now proposes a built-in solution, that is only good
> > for ANTLR.
> > 
> > Andreas
> > 
> > Jim Idle schrieb:
> > > I think that the issue is more likely something to do with your lexer
> > specification. You should not need to worry about having lots of
> > keywords, so one of the other rules must be causing the huge expansion.
> > For instance I have problems with the complete lexer for TSQL, which
> > has more keywords than you can shake a stick at.
> > >
> > > Did you ever post your complete lexer spec? I was out of the country
> > when you first started this thread.
> > >
> > > Jim
> > >
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> > 
> > This email and its attachments may be confidential and are intended
> > solely for the use of the individual to whom it is addressed. Any views
> > or opinions expressed are solely those of the author and do not
> > necessarily represent those of ImexSystems Inc.
> > If you are not the intended recipient of this email and its
> > attachments, you must take no action based upon them, nor must you copy
> > or show them to anyone.
> > Please contact the sender if you believe you have received this email
> > in error.
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From lgcraymer at yahoo.com  Wed Nov  4 11:16:41 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 4 Nov 2009 11:16:41 -0800 (PST)
Subject: [antlr-interest] BNF to ANTLR
In-Reply-To: <10cec0a4fd2ca649a7ab88668c6f7d1c@temporal-wave.com>
References: <10cec0a4fd2ca649a7ab88668c6f7d1c@temporal-wave.com>
Message-ID: <798139.47517.qm@web55902.mail.re3.yahoo.com>

What else would any sane ANTLRophile write a translator in?  BNF translators seem to be the simplest useful example for working with ANTLR.

--Loring




----- Original Message ----
> From: Jim Idle <jimi at temporal-wave.com>
> To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Sent: Wed, November 4, 2009 11:07:18 AM
> Subject: Re: [antlr-interest] BNF to ANTLR
> 
> Yeah - the thing is though, that you then don't really learn anything about what 
> you are doing. Unless of course you write the translator in ANTLR first ;-)
> 
> Jim
> 
> > -----Original Message-----
> > From: Loring Craymer [mailto:lgcraymer at yahoo.com]
> > Sent: Wednesday, November 04, 2009 11:05 AM
> > To: Jim Idle; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] BNF to ANTLR
> > 
> > Actually, this is easier to do automatically.  Any BNF dialect takes
> > about 2 pages for parser + lexer description of the BNF in ANTLR; it is
> > very easy to write a translator from one BNF dialect to another
> > (ANTLR).  You will still have to rework the resulting grammar.
> > 
> > --Loring
> > 
> > 
> > 
> > ----- Original Message ----
> > > From: Jim Idle 
> > > To: "antlr-interest at antlr.org" 
> > > Sent: Wed, November 4, 2009 8:05:12 AM
> > > Subject: Re: [antlr-interest] BNF to ANTLR
> > >
> > > Much better to do it by hand. ANTLRs EBNF notation is close, but
> > remember that
> > > ANTLR is LL() and not LALR, which most bnf definitions from normative
> > specs are
> > > aimed at. Use ANTLRWorks and build slowly and you should pick it up
> > quite
> > > quickly if you understand BNF well.
> > >
> > > Jim
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Stefan Frey
> > > > Sent: Wednesday, November 04, 2009 6:33 AM
> > > > To: antlr-interest at antlr.org
> > > > Subject: [antlr-interest] BNF to ANTLR
> > > >
> > > > Hi im quite new to ANTLR and compiler generation.
> > > > I have a grammer written in BNF and need to convert it
> > > > to the Format ANTLR supports. So ist there a better/quicker
> > > > solution than by doing it by hand?
> > > >
> > > > Cheers Stefan
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-
> > > > email-address
> > >
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > 
> > 
> > 
> > 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From jimi at temporal-wave.com  Wed Nov  4 11:53:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 11:53:49 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <761217.85598.qm@web55908.mail.re3.yahoo.com>
Message-ID: <d8781388d934ff4c98e55a824689ca15@temporal-wave.com>

I think that you are of course somewhat correct in that there seem to be certain ways you can express things that cause such explosions, and perhaps these can be looked at case by case for the reasons why and fixed/improved.

But my experience tells me that the things that cause such explosions are generally not the greatest ways to express things anyway. Sure, if they are mathematically equivalent then they should resolve down to the same code. But there are so many ways to construct things that I think at times practicality gets in the way. Obviously equivalence has to be proven in some finite time, but more than that, just keeping the analysis code manageable seems desirable to some extent. However, as soon as users throw in actions then things like equivalence got out the window anyway.

So, I don't generally end up with such huge explosions and if I do I usually notice that my grammar looks a bit wonky anyway and there is a better/easier way to express things.

Of course, apart from the things that might or might not be improved, there are things that cannot be done because of how users organize things. For instance:

grammar t3;

r : SEQ* EOF ;

SEQ : (INT '.')? INT ;

fragment
INT :	'0'..'9'+
    ;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;

In the SEQ rule, having the optional prefix causes quite a lot of DFA for what it is. However it is clearly equivalent to:

SEQ : INT ('.' INT)? ;

... for all practical purposes, which generates much simpler code. In a parser it is still trivial to write the AST according to what such elements 'mean' and even if you are placing actions directly in the parser, you can still construct it this second way (parser code is much better here - this is just a trivial example to labor a point). However, as soon as a user says:

SEQ : (INT '.' {action because this is present} )? INT ;

Then no amount of analysis can get around the fact that the action has to be executed. I only point out here that writing grammars without much thought to what is going on under the hood is probably not such a good idea in the first place.

In general I have seen that the user's organization of the grammar is the thing that far outweighs any cleverness that is lacking in ANTLR. But, I did say in general and "2 out of 3..." ;-). 

At the end of the day, nothing is better than a well formed left factored grammar. People seem to think that backtracking or lots of predicates adds some readability to a grammar; personally I think it is the opposite and that what happens is that people train themselves to read/see it that way. Train yourself to see it differently and you will find backtracking grammars and lots of predicates totally get in the way of your thinking. 

Of course, horses for courses as they say, but as a professional programmer, one should usually strive to produce neat, well crafted stuff and not throw stuff together and hope the tool set works it out for you. I hasten to add here that I am not throwing that accusation at the people involved here - I have no idea how they put their grammars together.

I personally don't have any objection to putting DFAs in their own space, or otherwise moving around the statics, but I do seem to think that we went down this road and there seemed to be some particularly good reason not to do it. But, either that reason is no longer valid, or I just plain forgot what it was!! The Java target isn't my bag man, so I will leave that up to Ter (I will make a not to ask him to look at it). C does not have this problem per se, but of course if you end up with huge tables of static DFA, then there is a lot of data space in the resulting object code.

Jim

> -----Original Message-----
> From: Loring Craymer [mailto:lgcraymer at yahoo.com]
> Sent: Wednesday, November 04, 2009 11:13 AM
> To: Jim Idle; Antlr interest
> Subject: Re: [antlr-interest] Big grammar => static initializer/method
> size is exceeding the 65535 bytes limit
> 
> If DFA size grew linearly with the size of the grammar, Jim would be
> correct.  The evidence I have seen is that they grow nonlinearly, so
> partitioning a grammar will not always work, and it is always best if a
> tool circumvents mysterious "explosions" during development.  Alex's
> solution is both elegant and easy to  apply, and the net cost is a few
> more .class files.
> 
> --Loring
> 
> 
> 
> 
> ----- Original Message ----
> > From: Jim Idle <jimi at temporal-wave.com>
> > To: Antlr interest <antlr-interest at antlr.org>
> > Sent: Wed, November 4, 2009 8:10:14 AM
> > Subject: Re: [antlr-interest] Big grammar => static
> initializer/method size is exceeding the 65535 bytes limit
> >
> > Guys - you are asking for the wrong problem to be fixed (at least of
> the three
> > of you, at least two will be ;-). Try the new -X options, then look
> at splitting
> > your grammar into multiple import grammars, then start taking out
> huge
> > predicates such as (expression)=> or generally (rule)=>. You can stop
> anywhere
> > along that path if you do not feel that optimizing the grammar is
> something
> > worth your while and the first and/or second options make the DFA
> table size
> > issue go away.
> >
> > There are cases where big DFAs become inevitable, and then you should
> definitely
> > look at the import capability, which will prevent a single parser
> class being
> > used for everything and allow you to manage what goes in which class
> at the
> > grammar level.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Renee Luo
> > > Sent: Wednesday, November 04, 2009 6:45 AM
> > > To: Antlr interest
> > > Subject: Re: [antlr-interest] Big grammar => static
> initializer/method
> > > size is exceeding the 65535 bytes limit
> > >
> > > Yes, we are trying to migrate our ANTLR2 grammar to ANTLR2, we are
> also
> > > facing this problem. If the static initialize code will be
> separated
> > > from parser_class, That's will be great for us.
> > >
> > > Renee
> > >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Andreas Meyer
> > > Sent: Wednesday, November 04, 2009 8:32 AM
> > > To: Antlr interest
> > > Subject: Re: [antlr-interest] Big grammar => static
> initializer/method
> > > size is exceeding the 65535 bytes limit
> > >
> > > Back in the days when we tried to migrate our ANTLR2 grammar to
> ANTLR3,
> > > we also experienced this problem, due to lots of static initializer
> > > code
> > > in the _parser_ class. Our solution was to apply some perl-skript
> > > magic,
> > > but if Alex Marin now proposes a built-in solution, that is only
> good
> > > for ANTLR.
> > >
> > > Andreas
> > >
> > > Jim Idle schrieb:
> > > > I think that the issue is more likely something to do with your
> lexer
> > > specification. You should not need to worry about having lots of
> > > keywords, so one of the other rules must be causing the huge
> expansion.
> > > For instance I have problems with the complete lexer for TSQL,
> which
> > > has more keywords than you can shake a stick at.
> > > >
> > > > Did you ever post your complete lexer spec? I was out of the
> country
> > > when you first started this thread.
> > > >
> > > > Jim
> > > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > > email-address
> > >
> > > This email and its attachments may be confidential and are intended
> > > solely for the use of the individual to whom it is addressed. Any
> views
> > > or opinions expressed are solely those of the author and do not
> > > necessarily represent those of ImexSystems Inc.
> > > If you are not the intended recipient of this email and its
> > > attachments, you must take no action based upon them, nor must you
> copy
> > > or show them to anyone.
> > > Please contact the sender if you believe you have received this
> email
> > > in error.
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > > email-address
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 
> 
> 




From david-sarah at jacaranda.org  Wed Nov  4 13:52:04 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 04 Nov 2009 21:52:04 +0000
Subject: [antlr-interest] Bug report: Unexplainable "no viable
	alternative"
In-Reply-To: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
References: <00f7fbb042fd00e52688978e3d2a79b6@amiq.ro>
Message-ID: <4AF1F784.4050606@jacaranda.org>

alex.marin at amiq.ro wrote:
> Hello,
> 
> We have trouble understanding why we get a "no viable alternative" when
> running the attached parser grammar on the following input:
> 
> bit bitstream [];
> 
> The output is:
> 
> line 1:15 no viable alternative at input ']'
> 
> However, we have found two (very strange) workarounds for the issue:
> 1. Commenting out the 'real' option in the data_type rule
> 2. Using associative_dimension_2 rule instead of associative_dimension_1
> (although the two are equivalent)
> 
> What is the explanation for this behavior?

The problem is the k=1 option. If that is deleted, and neither workaround
is needed. Also delete the redundant syntactic predicate in
<variable_dimension>.

The grammar is not LL(1), because a two-token lookahead is needed to
distinguish between <associative_dimension> and (the first of a sequence of)
<sized_or_unsized_dimension>.

The reason why you didn't get a warning about the too-small k value is
that the use of a syntactic predicate in <variable_dimension> caused the
warning to be suppressed. The syntactic predicate is not necessary because
<associative_dimension> and <sized_or_unsized_dimension> are not mutually
ambiguous.

Removing the predicate (still with k=1) would have given the warning:

  [21:36:45] warning(200): Example.g:43:1: Decision can match input such
  as "LBRACK" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input

which is correct since one-token lookahead is not sufficient in rule
<variable_dimension>.

> Is there a rigorous solution to avoid such behavior?

In general, the k option is rarely if ever necessary. When k is too small,
it can often be the case that apparently equivalent rules cause different
behaviour. This is because ANTLR uses different strategies for lookahead
based on considerations that are fairly unpredictable, and the k value
has different effects on these strategies. (IMHO this should be made
clearer in the documentation; arguably, the statements that k simply causes
ANTLR to use LL(k) parsing are misleadingly incomplete.)

You should also avoid redundant predicates, since they often suppress
useful warnings.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/6124f14e/attachment.bin 

From FranklinChen at cmu.edu  Wed Nov  4 15:49:11 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 18:49:11 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
Message-ID: <19186.4855.256201.577541@swan.talkbank.org>

In a long-delayed ANTLR upgrade, I have encountered a strange bug that
has a critical impact on one of my large projects.

Some detective work showed me that my code works fine in ANTLR 3.1.1
and 3.1.2, but then 3.1.3 breaks it (and 3.2 also does not work).  I
am not sure what I am doing wrong, if anything.  I am doing some tree
manipulations in a parser.  I have created a smallest possible test
project to pinpoint and illustrate the difference in behavior.  I
would appreciate it if someone could tell me whether (1) ANTLR 3.1.3
and up are higher are broken, in which case I must stick with
3.1.1/3.1.2, or (2) I am not using the Tree API properly, and need to
change the way I am doing what I need to do.

Attached is an archive of my sample project.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: merge.zip
Type: application/octet-stream
Size: 2932 bytes
Desc: project illustrating bug in ANTLR 3.1.3+
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/1821bac1/attachment.obj 
-------------- next part --------------


-- 
Franklin

From gwlist at grahamwideman.com  Wed Nov  4 16:48:27 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Wed, 04 Nov 2009 16:48:27 -0800
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <19186.4855.256201.577541@swan.talkbank.org>
Message-ID: <4.1.20091104164711.01c914c0@grahamwideman.com>

....And could you describe what *is* the strange bug you are seeing? Ie: what did you see vs what did you expect?

-- Graham

From sharwell at pixelminegames.com  Wed Nov  4 17:08:25 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 4 Nov 2009 19:08:25 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <19186.4855.256201.577541@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>

Hi Franklin,

You didn't say exactly what the bug was. That said, here's my feedback,
lots of it just my opinion not rules:

* Replace your call to {skip();} with {$channel = HIDDEN;}
* Replace ^(PHO[i, "pho"] $i) with just PHO[i, "pho"]. When you
construct the PHO token from i, it takes on the text and the token
start/stop positions of i, so the child node is redundant.
* In your @after blocks, if you reference a parameter like it, you
should use $it instead of just it.
* I think TIER[c.tree.getToken(), "TIER"] should be
TIER[$c.tree.getToken(), "TIER"]
* I'm pretty sure mainTier can initialize the wordList like this:
mainTier returns [ArrayList<CommonTree> wordList = new
ArrayList<CommonTree>()] and then leave out the @init block.
* When you're using a tree parser, try to move as much logic as possible
to the tree parser instead of the parser. If possible, you should shoot
for having a parser with no actions, parameters, or @init{} @after{}
blocks (obviously this is not always possible). If you meet this goal,
then your parser will work with any target without any changes.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
FranklinChen at cmu.edu
Sent: Wednesday, November 04, 2009 5:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2

In a long-delayed ANTLR upgrade, I have encountered a strange bug that
has a critical impact on one of my large projects.

Some detective work showed me that my code works fine in ANTLR 3.1.1 and
3.1.2, but then 3.1.3 breaks it (and 3.2 also does not work).  I am not
sure what I am doing wrong, if anything.  I am doing some tree
manipulations in a parser.  I have created a smallest possible test
project to pinpoint and illustrate the difference in behavior.  I would
appreciate it if someone could tell me whether (1) ANTLR 3.1.3 and up
are higher are broken, in which case I must stick with 3.1.1/3.1.2, or
(2) I am not using the Tree API properly, and need to change the way I
am doing what I need to do.

Attached is an archive of my sample project.


From FranklinChen at cmu.edu  Wed Nov  4 17:18:49 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 20:18:49 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <4.1.20091104164711.01c914c0@grahamwideman.com>
References: <19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104164711.01c914c0@grahamwideman.com>
Message-ID: <19186.10233.877370.853519@swan.talkbank.org>

Graham Wideman writes:
> ....And could you describe what *is* the strange bug you are seeing?
> Ie: what did you see vs what did you expect?

I expected successful termination of the program (which parses text,
manipulates the tree, passes the tree to a tree parser, which executes
silently).  What I saw with the newer versions of ANTLR was an
exception raised by the tree parser.

-- 
Franklin

From FranklinChen at cmu.edu  Wed Nov  4 17:20:22 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 20:20:22 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
References: <19186.4855.256201.577541@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
Message-ID: <19186.10326.651714.110843@swan.talkbank.org>

> Hi Franklin,
> 
> You didn't say exactly what the bug was. That said, here's my feedback,
> lots of it just my opinion not rules:
> 
> * Replace your call to {skip();} with {$channel = HIDDEN;}
> * Replace ^(PHO[i, "pho"] $i) with just PHO[i, "pho"]. When you
> construct the PHO token from i, it takes on the text and the token
> start/stop positions of i, so the child node is redundant.
> * In your @after blocks, if you reference a parameter like it, you
> should use $it instead of just it.
> * I think TIER[c.tree.getToken(), "TIER"] should be
> TIER[$c.tree.getToken(), "TIER"]
> * I'm pretty sure mainTier can initialize the wordList like this:
> mainTier returns [ArrayList<CommonTree> wordList = new
> ArrayList<CommonTree>()] and then leave out the @init block.
> * When you're using a tree parser, try to move as much logic as possible
> to the tree parser instead of the parser. If possible, you should shoot
> for having a parser with no actions, parameters, or @init{} @after{}
> blocks (obviously this is not always possible). If you meet this goal,
> then your parser will work with any target without any changes.

My tree parser worked fine with ANTLR 3.1.1 and 3.1.2, just failed
mysteriously with ANTLR 3.1.3 and 3.2.

-- 
Franklin

From FranklinChen at cmu.edu  Wed Nov  4 17:27:59 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 20:27:59 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <4.1.20091104164711.01c914c0@grahamwideman.com>
References: <19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104164711.01c914c0@grahamwideman.com>
Message-ID: <19186.10783.892247.70545@swan.talkbank.org>

As in my README file that was attached:

Output from version 3.1.1/3.1.2:

tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))

Output from version 3.1.3/3.2:

tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))
ExprTreeParser.g: node from line 1:12 mismatched tree node: PHO
expecting <UP>

-- 
Franklin

From FranklinChen at cmu.edu  Wed Nov  4 17:46:20 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 20:46:20 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
References: <19186.4855.256201.577541@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
Message-ID: <19186.11884.532180.427795@swan.talkbank.org>

My apologies!  I just noticed that the README file I put into the
archive had not been updated with a save from my editor buffer, and is
missing the description of the error I was reporting.  Here is the
missing text:

Some code used to work with ANTLR 3.1.1 and 3.1.2 but doesn't work
with 3.1.3 or 3.2.

Change ANTLR_JAR to the appropriate path.

Do "make clean; make run" to do the test.

3.1.1 and 3.1.2 work, but 3.1.3 and higher result in a strange failure
in the tree parser:

ExprTreeParser.g: node from line 1:12 mismatched tree node: PHO expecting <UP>

-- 
Franklin

From gwlist at grahamwideman.com  Wed Nov  4 17:58:56 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Wed, 04 Nov 2009 17:58:56 -0800
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <19186.11884.532180.427795@swan.talkbank.org>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
Message-ID: <4.1.20091104175748.015e22a8@grahamwideman.com>

Unless I'm missing something, I'm not seeing an input file to test with.

-- Graham

From FranklinChen at cmu.edu  Wed Nov  4 18:04:34 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 21:04:34 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <4.1.20091104175748.015e22a8@grahamwideman.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104175748.015e22a8@grahamwideman.com>
Message-ID: <19186.12978.915110.710958@swan.talkbank.org>

> Unless I'm missing something, I'm not seeing an input file to test with.

There's a Makefile.

"make run"

runs on a command-line argument:

	java Main 'a b c d ; 0 1 2 3 .'

-- 
Franklin

From david-sarah at jacaranda.org  Wed Nov  4 18:45:37 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 02:45:37 +0000
Subject: [antlr-interest] Define "function" as numerical and
 alphanumerical expression
In-Reply-To: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
References: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
Message-ID: <4AF23C51.4080301@jacaranda.org>

Thomas Dill wrote:
> I think the best way to describe it, is to show you what I tried. This
> produces a bunch of errors. 

This wasn't a very helpful question. See
<http://catb.org/~esr/faqs/smart-questions.html>. In any case,

 - First fix all missing rules (e.g. NOT, FILE, IN, COLON, and COMMA).
   There's no point trying to debug anything else while you have missing
   rule references. If you use ANTLRWorks, it will underline these
   references in red.

 - Parser rule names must start with a lowercase letter, and lexer
   rules with an uppercase letter. For example, change <Argument> to
   <argument>.

 - Change *every* quoted token (e.g. 'IF') to a separate lexer rule.
   This includes each quoted token in lexer rules such as <NRelOp>
   (which will have to become parser rules), including operators.

   This might seem like a lot of extra rules, but if you don't make this
   change, it will just cause more obscure errors. Also, typically you
   want each operator to be treated as a different token in code that
   uses the parser.

   Note that since the set of tokens matched by OBJNAME overlaps
   keywords such as 'IF', OBJNAME has to be defined later in the
   grammar file than the lexer rules for those keywords (assuming that
   keywords are not context-dependent in the language you're parsing).

 - You have no rule for whitespace or line terminators. Such a rule
   might look something like

     WS : (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };

   Also, you have tokens that include whitespace such as 'IS MISSING'.
   Here 'IS' and 'MISSING' should be separate tokens, where <relOp> has
   (IS MISSING) as an alternative.

 - The definition of <SingleStringLiteral> is strange; it doesn't correspond
   to its name. You probably want fragment rules <SingleStringLiteral> and
   <DoubleStringLiteral>, and <StringLiteral> to be a non-fragment rule
   defined with those as alternatives. Then change uses of
   <SingleStringLiteral> to <StringLiteral>.

 - You have rules, such as FUNCTION : OBJNAME '('; and
   PREFIX : OBJNAME '.';, that put what would normally be considered
   separate tokens into a single token.

   This is *probably* trying to do too much in the lexer. It might be
   correct if the language does not allow whitespace between OBJNAME and
   '(' or '.', but if it does allow whitespace there, then you should
   make these parser rules and treat '(' and '.' as tokens.

 - Your grammar needs a start rule, which should match EOF after whatever
   else it matches (probably <expression>).

 - Simplify the grammar by factoring common sets of alternatives.
   For example, the set of alternatives 'numerical_expression |
   alphanumerical_expression | function | data_field' occurs several
   times, and can be replaced in each case with 'value'. That will
   make it easier to see other possible simplifications, for example
   the expression following 'ELSE' can be written just as 'expression'.

   Avoid parser rules that just repeat a lexer rule (such as
   'alphanumerical_relational_op : ARelOp'); they're not helpful.
   Also remove redundant parentheses, for instance '(NOT? value IN)'
   or '(numExprA)' do not need parentheses.

   [Such simplifications can make it easier to see what is going on in
   the next steps.]

 - You might want to rename rules that are misleadingly or inconsistently
   named; for example, <value> is a type of expression, so I would suggest
   calling it <value_expression>.

 - Before trying to resolve more complicated errors and warnings, make
   sure that your grammar is showing "green" in ANTLRWorks, i.e. it has
   no syntax errors, no missing rule references, etc.

 - You have some rules that are not left-factored. For example, consider
   the rule

     argument : value_expression relational_operator value_expression
              | NOT? value_expression IN ...;

   When the NOT is absent, the alternatives both start with
   <value_expression>, so the rule needs to be left-factored as follows:

     argument : value_expression ( relational_operator value_expression
                                 | IN ... )
              | NOT value_expression IN ...;

   (Left-factoring sometimes, as in this case, introduces repetition,
   which is ugly and error-prone. You could reduce the repetition by
   adding a parser rule for the repeated part, shown as '...' here.)

 - Now there are some ambiguities to be resolved. For example, in

     relational_operator : relOp | aRelOp | numerical_relational_op ;

     numerical_relational_op : nRelOp numerical_expression TO ;

   <nRelOp> is ambiguous with <relOp>, since both include 'ISFROM'.
   The fix for this depends on how 'ISFROM' should be interpreted when
   it is not followed by a <numerical_expression> and 'TO' (if I had
   to guess, I'd say that its inclusion in <relOp> is probably an error).

   There are a couple of more complicated ambiguities in this grammar
   surrounding argument lists. Consider the input

     ( 1 )

   matched by the <arguments> rule: is it a parenthesized
   <numerical_expression>, or a parenthesized <arguments>? This
   appears to be a genuine ambiguity (as opposed to one caused only
   by the requirement for left-factoring in an LL grammar).

   If you want it to be resolved in favour of parenthesized
   <arguments>, for example, that would be:

     arguments : { input.LA(1) == LPAREN }? LPAREN arguments RPAREN
               | argument ((OR | AND) argument)* ;

   [LPAREN is the token for '('. This is another reason why you always
   want to define lexer rules for each token; "input.LA(1) == '('" would
   not work.]

   Here's another genuine ambiguity:

     1 AND 2

   Is this an <arguments> list with arguments 1 and 2, or with a
   single argument that is a <numerical_expression> using the 'AND'
   operator?

   Removing 'AND' and 'OR' from the numeric operators resolves this
   ambiguity, although that might not be the correct solution.

   (I think the underlying problem is that the syntax of argument lists
   in this language is rather poorly thought out, although you might
   not be able to do anything about that.)

 - Once you have a grammar that compiles without errors or warnings
   (don't ignore warnings), you can look for possible mistakes that
   might be causing it to parse the wrong language. In particular,
   some rules appear suspiciously restrictive. For instance

     numerical_expression : NumericLiteral (numOp NumericLiteral)+
                          | LPAREN numerical_expression RPAREN ;

   does not allow numeric expressions such as '(1+2)+(3+4)', or
   even '(1)+1' -- was that intended? The following would be less
   restrictive and more similar to other languages:

     primary_expression   : NumericLiteral
                          | LPAREN numerical_expression RPAREN ;

     numerical_expression : primary_expression (numOp primary_expression)*;

   (This follows a pattern called an "operator precedence grammar",
   where a parser rule is created for each level of expression
   precedence. Of course, your language might actually be broken
   enough not to accept such expressions.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/6665c00f/attachment.bin 

From david-sarah at jacaranda.org  Wed Nov  4 18:54:26 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 02:54:26 +0000
Subject: [antlr-interest] Big grammar => static initializer/method size
 is exceeding the 65535 bytes limit
In-Reply-To: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
References: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
Message-ID: <4AF23E62.7000306@jacaranda.org>

Jim Idle wrote:
> I think that the issue is more likely something to do with your lexer specification.
> You should not need to worry about having lots of keywords, so one of the other rules
> must be causing the huge expansion.

Unfortunately, it seems as though just having lots of keywords is enough by
itself to cause this problem, especially if the keywords have lots of common
substrings, as in the case of the grammar posted by Robert Wentworth:
<http://osdir.com/ml/il-antlr-interest/2009-10/msg00384.html>
I could not see any other problem with that grammar.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/b0172670/attachment.bin 

From parrt at cs.usfca.edu  Wed Nov  4 19:31:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Nov 2009 12:31:56 +0900
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <4AF23E62.7000306@jacaranda.org>
References: <151ca4098ad3c34583e7ac639d78de98@temporal-wave.com>
	<4AF23E62.7000306@jacaranda.org>
Message-ID: <1EBB497A-D487-42E6-A883-8BE8F7A0E572@cs.usfca.edu>

Hi gang. i'll be taking a hard look at code gen for ANTLR once I  
finish rebuilting ST v4.  That's going very well. An awesome example  
of bytecode compiler/interpreter combo.

Ter
On Nov 5, 2009, at 11:54 AM, David-Sarah Hopwood wrote:

> Jim Idle wrote:
>> I think that the issue is more likely something to do with your  
>> lexer specification.
>> You should not need to worry about having lots of keywords, so one  
>> of the other rules
>> must be causing the huge expansion.
>
> Unfortunately, it seems as though just having lots of keywords is  
> enough by
> itself to cause this problem, especially if the keywords have lots  
> of common
> substrings, as in the case of the grammar posted by Robert Wentworth:
> <http://osdir.com/ml/il-antlr-interest/2009-10/msg00384.html>
> I could not see any other problem with that grammar.
>
> -- 
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From david-sarah at jacaranda.org  Wed Nov  4 19:33:06 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 03:33:06 +0000
Subject: [antlr-interest] Big grammar => static initializer/method size
 is exceeding the 65535 bytes limit
In-Reply-To: <2d2e951a6635f741b695bf9d5b585af9@temporal-wave.com>
References: <2d2e951a6635f741b695bf9d5b585af9@temporal-wave.com>
Message-ID: <4AF24772.4070607@jacaranda.org>

Jim Idle wrote:
> Yes - what I am saying is that you are getting such huge DFA tables generated
> because your rules are not well organized and it is taking a huge amount of
> analysis and so on to work out how to put it together for you. 

Jim,
You haven't seen the grammar that generated the DFA in question. How on
earth do you know that it is "not well organized"?

I've looked at some of the grammars posted recently that triggered this
issue, and they seemed perfectly well-organized (properly left-factored,
only minimal if any use of predicates, etc.) to me. Indeed they looked
pretty much like the simplest grammars that would work to parse the
intended languages.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/d0a7cb41/attachment.bin 

From lgcraymer at yahoo.com  Wed Nov  4 20:19:15 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 4 Nov 2009 20:19:15 -0800 (PST)
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <d8781388d934ff4c98e55a824689ca15@temporal-wave.com>
References: <d8781388d934ff4c98e55a824689ca15@temporal-wave.com>
Message-ID: <44277.17157.qm@web55904.mail.re3.yahoo.com>

Even if the explosion reflects an ill-formed grammar, do you really think that it should be detected by the Java compiler?  The user experience is then that "ANTLR generates bad code" and "I have no clue as to how to fix the problem".  Showstoppers like this slow the development process; it is far better if ANTLR "always" generates compilable code and ideally produces useful warnings that support successive refinement of a grammar.  Besides that, this behavior is limited to the Java target; shouldn't all targets behave similarly?

Of course, you could be right that the explosion is a feature.  If so, why haven't you attempted to replicate this behavior for generated C code?  :)

Cheers!

--Loring



----- Original Message ----
> From: Jim Idle <jimi at temporal-wave.com>
> To: Antlr interest <antlr-interest at antlr.org>
> Sent: Wed, November 4, 2009 11:53:49 AM
> Subject: Re: [antlr-interest] Big grammar => static initializer/method size is exceeding the 65535 bytes limit
> 
> I think that you are of course somewhat correct in that there seem to be certain 
> ways you can express things that cause such explosions, and perhaps these can be 
> looked at case by case for the reasons why and fixed/improved.
> 
> But my experience tells me that the things that cause such explosions are 
> generally not the greatest ways to express things anyway. Sure, if they are 
> mathematically equivalent then they should resolve down to the same code. But 
> there are so many ways to construct things that I think at times practicality 
> gets in the way. Obviously equivalence has to be proven in some finite time, but 
> more than that, just keeping the analysis code manageable seems desirable to 
> some extent. However, as soon as users throw in actions then things like 
> equivalence got out the window anyway.
> 
> So, I don't generally end up with such huge explosions and if I do I usually 
> notice that my grammar looks a bit wonky anyway and there is a better/easier way 
> to express things.
> 
> Of course, apart from the things that might or might not be improved, there are 
> things that cannot be done because of how users organize things. For instance:
> 
> grammar t3;
> 
> r : SEQ* EOF ;
> 
> SEQ : (INT '.')? INT ;
> 
> fragment
> INT :    '0'..'9'+
>     ;
> 
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
> 
> In the SEQ rule, having the optional prefix causes quite a lot of DFA for what 
> it is. However it is clearly equivalent to:
> 
> SEQ : INT ('.' INT)? ;
> 
> ... for all practical purposes, which generates much simpler code. In a parser 
> it is still trivial to write the AST according to what such elements 'mean' and 
> even if you are placing actions directly in the parser, you can still construct 
> it this second way (parser code is much better here - this is just a trivial 
> example to labor a point). However, as soon as a user says:
> 
> SEQ : (INT '.' {action because this is present} )? INT ;
> 
> Then no amount of analysis can get around the fact that the action has to be 
> executed. I only point out here that writing grammars without much thought to 
> what is going on under the hood is probably not such a good idea in the first 
> place.
> 
> In general I have seen that the user's organization of the grammar is the thing 
> that far outweighs any cleverness that is lacking in ANTLR. But, I did say in 
> general and "2 out of 3..." ;-). 
> 
> At the end of the day, nothing is better than a well formed left factored 
> grammar. People seem to think that backtracking or lots of predicates adds some 
> readability to a grammar; personally I think it is the opposite and that what 
> happens is that people train themselves to read/see it that way. Train yourself 
> to see it differently and you will find backtracking grammars and lots of 
> predicates totally get in the way of your thinking. 
> 
> Of course, horses for courses as they say, but as a professional programmer, one 
> should usually strive to produce neat, well crafted stuff and not throw stuff 
> together and hope the tool set works it out for you. I hasten to add here that I 
> am not throwing that accusation at the people involved here - I have no idea how 
> they put their grammars together.
> 
> I personally don't have any objection to putting DFAs in their own space, or 
> otherwise moving around the statics, but I do seem to think that we went down 
> this road and there seemed to be some particularly good reason not to do it. 
> But, either that reason is no longer valid, or I just plain forgot what it was!! 
> The Java target isn't my bag man, so I will leave that up to Ter (I will make a 
> not to ask him to look at it). C does not have this problem per se, but of 
> course if you end up with huge tables of static DFA, then there is a lot of data 
> space in the resulting object code.
> 
> Jim
> 
> > -----Original Message-----
> > From: Loring Craymer [mailto:lgcraymer at yahoo.com]
> > Sent: Wednesday, November 04, 2009 11:13 AM
> > To: Jim Idle; Antlr interest
> > Subject: Re: [antlr-interest] Big grammar => static initializer/method
> > size is exceeding the 65535 bytes limit
> > 
> > If DFA size grew linearly with the size of the grammar, Jim would be
> > correct.  The evidence I have seen is that they grow nonlinearly, so
> > partitioning a grammar will not always work, and it is always best if a
> > tool circumvents mysterious "explosions" during development.  Alex's
> > solution is both elegant and easy to  apply, and the net cost is a few
> > more .class files.
> > 
> > --Loring
> > 
> > 
> > 
> > 
> > ----- Original Message ----
> > > From: Jim Idle 
> > > To: Antlr interest 
> > > Sent: Wed, November 4, 2009 8:10:14 AM
> > > Subject: Re: [antlr-interest] Big grammar => static
> > initializer/method size is exceeding the 65535 bytes limit
> > >
> > > Guys - you are asking for the wrong problem to be fixed (at least of
> > the three
> > > of you, at least two will be ;-). Try the new -X options, then look
> > at splitting
> > > your grammar into multiple import grammars, then start taking out
> > huge
> > > predicates such as (expression)=> or generally (rule)=>. You can stop
> > anywhere
> > > along that path if you do not feel that optimizing the grammar is
> > something
> > > worth your while and the first and/or second options make the DFA
> > table size
> > > issue go away.
> > >
> > > There are cases where big DFAs become inevitable, and then you should
> > definitely
> > > look at the import capability, which will prevent a single parser
> > class being
> > > used for everything and allow you to manage what goes in which class
> > at the
> > > grammar level.
> > >
> > > Jim
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Renee Luo
> > > > Sent: Wednesday, November 04, 2009 6:45 AM
> > > > To: Antlr interest
> > > > Subject: Re: [antlr-interest] Big grammar => static
> > initializer/method
> > > > size is exceeding the 65535 bytes limit
> > > >
> > > > Yes, we are trying to migrate our ANTLR2 grammar to ANTLR2, we are
> > also
> > > > facing this problem. If the static initialize code will be
> > separated
> > > > from parser_class, That's will be great for us.
> > > >
> > > > Renee
> > > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Andreas Meyer
> > > > Sent: Wednesday, November 04, 2009 8:32 AM
> > > > To: Antlr interest
> > > > Subject: Re: [antlr-interest] Big grammar => static
> > initializer/method
> > > > size is exceeding the 65535 bytes limit
> > > >
> > > > Back in the days when we tried to migrate our ANTLR2 grammar to
> > ANTLR3,
> > > > we also experienced this problem, due to lots of static initializer
> > > > code
> > > > in the _parser_ class. Our solution was to apply some perl-skript
> > > > magic,
> > > > but if Alex Marin now proposes a built-in solution, that is only
> > good
> > > > for ANTLR.
> > > >
> > > > Andreas
> > > >
> > > > Jim Idle schrieb:
> > > > > I think that the issue is more likely something to do with your
> > lexer
> > > > specification. You should not need to worry about having lots of
> > > > keywords, so one of the other rules must be causing the huge
> > expansion.
> > > > For instance I have problems with the complete lexer for TSQL,
> > which
> > > > has more keywords than you can shake a stick at.
> > > > >
> > > > > Did you ever post your complete lexer spec? I was out of the
> > country
> > > > when you first started this thread.
> > > > >
> > > > > Jim
> > > > >
> > > >
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-
> > > > email-address
> > > >
> > > > This email and its attachments may be confidential and are intended
> > > > solely for the use of the individual to whom it is addressed. Any
> > views
> > > > or opinions expressed are solely those of the author and do not
> > > > necessarily represent those of ImexSystems Inc.
> > > > If you are not the intended recipient of this email and its
> > > > attachments, you must take no action based upon them, nor must you
> > copy
> > > > or show them to anyone.
> > > > Please contact the sender if you believe you have received this
> > email
> > > > in error.
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-
> > > > email-address
> > >
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > 
> > 
> > 
> > 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From sharwell at pixelminegames.com  Wed Nov  4 20:36:14 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 4 Nov 2009 22:36:14 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com><19186.4855.256201.577541@swan.talkbank.org><4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE11@martini.ironwillgames.com>

For what it's worth, the code runs without parse errors in the CSharp3
target.

Probably not helpful though. :o

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
FranklinChen at cmu.edu
Sent: Wednesday, November 04, 2009 8:05 PM
To: Graham Wideman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Strange bug in ANTLR version higher than
3.1.2

> Unless I'm missing something, I'm not seeing an input file to test
with.

There's a Makefile.

"make run"

runs on a command-line argument:

	java Main 'a b c d ; 0 1 2 3 .'

-- 
Franklin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rsteiger at ensemblesoft.net  Wed Nov  4 20:49:42 2009
From: rsteiger at ensemblesoft.net (Richard Steiger)
Date: Wed, 4 Nov 2009 20:49:42 -0800
Subject: [antlr-interest] ANTLR Java.g and ver.jar
Message-ID: <033e01ca5dd3$646f0340$2d4d09c0$@net>

Hi Zachary,

 

Did you get any useful responses to
http://www.antlr.org/pipermail/antlr-interest/2009-June/034920.html?  I ran
into the same wall a few months back, and shortly thereafter had to shift my
focus elsewhere.  I'm now just getting back to attempting to find a clean,
correct, and complete grammar definition for Java5.  I'd be happy to share
insights, discoveries, input from others, etc.  

 

Cheers,

 

Richard Steiger

Founder & CTO, Ensemble Software Systems, Inc.

email: rsteiger at ensemblesoft.net

ph: 425.822.7423

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/09af4860/attachment.html 

From FranklinChen at cmu.edu  Wed Nov  4 20:49:48 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 4 Nov 2009 23:49:48 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE11@martini.ironwillgames.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE11@martini.ironwillgames.com>
Message-ID: <19186.22892.847814.466960@swan.talkbank.org>

> For what it's worth, the code runs without parse errors in the CSharp3
> target.
> 
> Probably not helpful though. :o
> 
> Sam

Not really :-(.  I'm curious, though: it runs OK For all the mentioned
versions of ANTLR?  (3.1.3, 3.1.2, 3.1.3, 3.2)

-- 
Franklin

From sharwell at pixelminegames.com  Wed Nov  4 20:51:24 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 4 Nov 2009 22:51:24 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com><19186.4855.256201.577541@swan.talkbank.org><4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>

Hi Franklin,

I generated the files twice - once with the C# port of the tool and a
second time with antlr-3.2.jar just downloaded from antlr.org. Can you
diff the code your version generated for you with these?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
FranklinChen at cmu.edu
Sent: Wednesday, November 04, 2009 8:05 PM
To: Graham Wideman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Strange bug in ANTLR version higher than
3.1.2

> Unless I'm missing something, I'm not seeing an input file to test
with.

There's a Makefile.

"make run"

runs on a command-line argument:

	java Main 'a b c d ; 0 1 2 3 .'

-- 
Franklin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ExprGeneratedCode.zip
Type: application/x-zip-compressed
Size: 12427 bytes
Desc: ExprGeneratedCode.zip
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091104/86c89a71/attachment.bin 

From FranklinChen at cmu.edu  Wed Nov  4 21:07:08 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 00:07:08 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>
Message-ID: <19186.23932.533390.160170@swan.talkbank.org>

> Hi Franklin,
> 
> I generated the files twice - once with the C# port of the tool and a
> second time with antlr-3.2.jar just downloaded from antlr.org. Can you
> diff the code your version generated for you with these?
> 
> Sam

I see in your archive that you have ExprLexer.java, etc., generated
with ANTLR 3.1.2, and ExprLexer2.java, etc., generated with ANTLR 3.2.

I did a diff between my generated 3.2 with your 3.2 and they are
identical except for the first lines that have the version and
generation time stamp.

As for your generated 3.1.2 and my generated 3.1.2, there are some
differences, but structurally they look largely the same, and when I
plugged your 3.1.2 Java sources where my 3.1.2 would go, the resulting
code worked fine, just like my own 3.1.2 did.

I am not sure what your question is.

-- 
Franklin

From sharwell at pixelminegames.com  Wed Nov  4 21:10:53 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 4 Nov 2009 23:10:53 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com><19186.4855.256201.577541@swan.talkbank.org><4.1.20091104175748.015e22a8@grahamwideman.com><19186.12978.915110.710958@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>
	<19186.23932.533390.160170@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com>

The 3.1.2 mark you see in the first set is a bug in the C# version of
the Tool. It is actually a 3.2 version. Both versions I sent you should
be tested as "3.2" versions.

Sam

-----Original Message-----
From: FranklinChen at cmu.edu [mailto:FranklinChen at cmu.edu] 
Sent: Wednesday, November 04, 2009 11:07 PM
To: Sam Harwell
Cc: Graham Wideman; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Strange bug in ANTLR version higher than
3.1.2

> Hi Franklin,
> 
> I generated the files twice - once with the C# port of the tool and a
> second time with antlr-3.2.jar just downloaded from antlr.org. Can you
> diff the code your version generated for you with these?
> 
> Sam

I see in your archive that you have ExprLexer.java, etc., generated
with ANTLR 3.1.2, and ExprLexer2.java, etc., generated with ANTLR 3.2.

I did a diff between my generated 3.2 with your 3.2 and they are
identical except for the first lines that have the version and
generation time stamp.

As for your generated 3.1.2 and my generated 3.1.2, there are some
differences, but structurally they look largely the same, and when I
plugged your 3.1.2 Java sources where my 3.1.2 would go, the resulting
code worked fine, just like my own 3.1.2 did.

I am not sure what your question is.

-- 
Franklin

From FranklinChen at cmu.edu  Wed Nov  4 21:39:10 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 00:39:10 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>
	<19186.23932.533390.160170@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com>
Message-ID: <19186.25854.738965.587075@swan.talkbank.org>

> The 3.1.2 mark you see in the first set is a bug in the C# version of
> the Tool. It is actually a 3.2 version. Both versions I sent you should
> be tested as "3.2" versions.

OK.  Well, it looks like there is no diff between your C# 3.2
generated Java sources and your Java 3.2 generated and my Java 3.2
generated, so I'm still not sure what the question is.  Using any of
these three generated sets of sources, the result when run raises an
exception.

-- 
Franklin

From david-sarah at jacaranda.org  Wed Nov  4 21:43:28 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 05:43:28 +0000
Subject: [antlr-interest] Define "function" as numerical and
 alphanumerical expression
In-Reply-To: <4AF23C51.4080301@jacaranda.org>
References: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
	<4AF23C51.4080301@jacaranda.org>
Message-ID: <4AF26600.9080301@jacaranda.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

David-Sarah Hopwood wrote:
>    There are a couple of more complicated ambiguities in this grammar
>    surrounding argument lists. [...]

Actually <arguments> specifies the condition of an 'if' expression;
the name misled me slightly.

Anyway, I see now what underlying problem is causing these ambiguities
(and also why the numerical_expression seems wrong). The grammar is
trying to maintain a type distinction between numeric expressions, and
boolean expressions. But in doing so, it doesn't allow the conventional
use of parenthesis around any subexpression.

If the language does in fact allow boolean expressions to be
parenthesized, e.g. as in

  NOT ((1+2) < 3 AND (NOT 4 < 5))

then that's not compatible with maintaining the numeric/boolean type
distinction in the grammar (because what is after a '(' can be an
expression of either boolean or numeric type).

My advice would be to use a conventional operator precedence grammar,
as below (now that I've spent the time to fix the grammar I might as
well give you this part of it), and check types after parsing.


grammar Example;

start                        : expression EOF ;

expression                   : conditional_expression
                             | logical_expression ;

conditional_expression       : IF expression THEN logical_expression
                                 (ELSE expression)? ;

logical_expression           : not_expression (logical_op not_expression)* ;

not_expression               : NOT* relational_expression ;

relational_expression        : value_expression
                                 ( relational_op value_expression
                                 | IN in_clause ) ;

value_expression             : numerical_expression
                             | alphanumerical_expression
                             | function_expression
                             | data_field;

numerical_expression         : primary_expression
                                 (numOp primary_expression)* ;

primary_expression           : NumericLiteral
                             | LPAREN expression RPAREN ;

in_clause                    : LPAREN literal (COMMA literal)* RPAREN
                             | FILE OBJNAME ;

literal                      : StringLiteral | NumericLiteral ;

logical_op                   : OR
                             | AND ;

relational_op                : relOp
                             | aRelOp
                             | nRelOp expression TO ;

function_expression          : OBJNAME LPAREN function_arguments RPAREN ;

function_arguments           : expression (COLON expression)* ;

- --
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.12 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iF4EAREIAAYFAkryZfoACgkQWUc8YzyzqAfAngD/bANqb0/k9sIWDXeTgID4qAi5
8YtdKjn2VbEYsxW40z8A/i8gD0f6gk0YSrG2iUOOLJQFx6M+8u2TjYq4XJhYGmgV
=+SIX
-----END PGP SIGNATURE-----

From sharwell at pixelminegames.com  Wed Nov  4 22:08:49 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 5 Nov 2009 00:08:49 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com><19186.4855.256201.577541@swan.talkbank.org><4.1.20091104175748.015e22a8@grahamwideman.com><19186.12978.915110.710958@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com><19186.23932.533390.160170@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com>
	<19186.25854.738965.587075@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE14@martini.ironwillgames.com>

For the 3.2 version, try changing this:

CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);

To this:

BufferedTreeNodeStream nodes = new BufferedTreeNodeStream(tree);

-----Original Message-----
From: FranklinChen at cmu.edu [mailto:FranklinChen at cmu.edu] 
Sent: Wednesday, November 04, 2009 11:39 PM
To: Sam Harwell
Cc: Graham Wideman; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Strange bug in ANTLR version higher than
3.1.2

> The 3.1.2 mark you see in the first set is a bug in the C# version of
> the Tool. It is actually a 3.2 version. Both versions I sent you
should
> be tested as "3.2" versions.

OK.  Well, it looks like there is no diff between your C# 3.2
generated Java sources and your Java 3.2 generated and my Java 3.2
generated, so I'm still not sure what the question is.  Using any of
these three generated sets of sources, the result when run raises an
exception.

-- 
Franklin

From FranklinChen at cmu.edu  Wed Nov  4 22:18:56 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 01:18:56 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE14@martini.ironwillgames.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<19186.4855.256201.577541@swan.talkbank.org>
	<4.1.20091104175748.015e22a8@grahamwideman.com>
	<19186.12978.915110.710958@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com>
	<19186.23932.533390.160170@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com>
	<19186.25854.738965.587075@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE14@martini.ironwillgames.com>
Message-ID: <19186.28240.944449.281122@swan.talkbank.org>

> For the 3.2 version, try changing this:
> 
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> 
> To this:
> 
> BufferedTreeNodeStream nodes = new BufferedTreeNodeStream(tree);

This works!

I also verified that making this simple change also works when I make
it in the driver for my large program that uses a lot of manual tree
restructuring similar to the test case I created.

Thank you very much!  Can you explain to me why the discrepancy when
moving from 3.1.2 to 3.1.3/3.2?

-- 
Franklin

From sharwell at pixelminegames.com  Wed Nov  4 22:20:52 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 5 Nov 2009 00:20:52 -0600
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com><19186.4855.256201.577541@swan.talkbank.org><4.1.20091104175748.015e22a8@grahamwideman.com><19186.12978.915110.710958@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE12@martini.ironwillgames.com><19186.23932.533390.160170@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE13@martini.ironwillgames.com><19186.25854.738965.587075@swan.talkbank.org><DD5A5D428FE040429CCDF377FAA892840152DE14@martini.ironwillgames.com>
	<19186.28240.944449.281122@swan.talkbank.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE15@martini.ironwillgames.com>

Pre-3.2 CommonTreeNodeStream got renamed to BufferedTreeNodeStream for
3.2, and the CommonTreeNodeStream now in its place is unbuffered. The
two classes expose the same API and *should* be interchangeable, but
there's a bug in the Java version that makes it not the case. The C# 3
runtime works on your code with both options.

Sam

-----Original Message-----
From: FranklinChen at cmu.edu [mailto:FranklinChen at cmu.edu] 
Sent: Thursday, November 05, 2009 12:19 AM
To: Sam Harwell
Cc: Graham Wideman; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Strange bug in ANTLR version higher than
3.1.2

> For the 3.2 version, try changing this:
> 
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> 
> To this:
> 
> BufferedTreeNodeStream nodes = new BufferedTreeNodeStream(tree);

This works!

I also verified that making this simple change also works when I make
it in the driver for my large program that uses a lot of manual tree
restructuring similar to the test case I created.

Thank you very much!  Can you explain to me why the discrepancy when
moving from 3.1.2 to 3.1.3/3.2?

-- 
Franklin

From thomas.dill at teleport.ch  Wed Nov  4 23:51:57 2009
From: thomas.dill at teleport.ch (Thomas Dill)
Date: Thu, 5 Nov 2009 08:51:57 +0100
Subject: [antlr-interest] Define "function" as numerical
	and	alphanumerical expression
In-Reply-To: <a3c7a8bef7d54f48b781a2c9115e0e45@temporal-wave.com>
References: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
	<a3c7a8bef7d54f48b781a2c9115e0e45@temporal-wave.com>
Message-ID: <018401ca5dec$db921750$92b645f0$@dill@teleport.ch>

Hi Jim and David-Sarah Hopwood,

 

Thanks for your replies. 

 

@Jim: I'm trying to parse a WebFOCUS report to get its meta data and
automatically make a documentation of the report. That's why I have to get
as much of the information from an expression as possible.  

 

@David-Sarah Hopwood: I first have to study your answers, but I think they
are going to be very helpful. I forgot to write in my question, that the
ANTLR code I sent was just an extract and "simplified" (or not. :o) ). There
are rules for all the missing tokens and there are lexer rules for all
quoted tokens. Thank you as well for the "How To Ask Questions The Smart
Way" link.  Not read it yet, but I'm going to.

 

Best regards,

Tom

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Mittwoch, 4. November 2009 17:41
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Define "function" as numerical and
alphanumerical expression

 

It looks like you are trying to produce a grammar from some kind of
normative spec and have made the classic mistake of trying to include
context in the expression of the grammar. The problem is that such specs are
not written for writing parsers with but more of an explanation of how
things go together in general.

 

So, you don't want rules like alphanumerical_expression and so on, you just
want expression, and you must make your expression rule left factored and
organized for LL() parsers, not just typed in like below. You can steal the
expression rule tree from any of the sample grammars (choose one that might
be close already), such as java or C.

 

Basically though, you are not going to get very far starting from the
grammar below. What is it you are trying to parse?

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Dill
Sent: Wednesday, November 04, 2009 8:33 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Define "function" as numerical and alphanumerical
expression

 

Hi!

 

I need help for the following problem:

 

I think the best way to describe it, is to show you what I tried. This
produces a bunch of errors. 

 

expression                     :    conditional_expression |
numerical_expression | alphanumerical_expression | function | data_field ;

conditional_expression         :    'IF' arguments 'THEN' value ('ELSE'
(conditional_expression | value))? ;

arguments                      :    argument  (('OR' | 'AND') argument)* |

'(' arguments ')' ;

Argument                      :    value relational_operator value |

                                    (NOT? value IN) ('('
(SingleStringLiteral | NumericLiteral) (COMMA (SingleStringLiteral |
NumericLiteral))* ')' | FILE OBJNAME)  ;

relational_operator            :    RelOp | alphanumerical_relational_op |
numerical_relational_op ;

alphanumerical_relational_op   :    ARelOp ;

numerical_relational_op        :    NRelOp numerical_expression  'TO' ;

value                          :    numerical_expression  |
alphanumerical_expression | function | data_field;

function                       :    FUNCTION function_argument ')';

function_argument              :    (numerical_expression  |
alphanumerical_expression | function | data_field) (COLON
numerical_expression  | alphanumerical_expression | function | data_field)*;

alphanumerical_expression      :    (SingleStringLiteral) (chrOp
(SingleStringLiteral))+;

numerical_expression           :    (numExprA) (NumOp (numExprA))+ |

'('numerical_expression  ')' ;

numExprA                       :    NumericLiteral; 

data_field                     :    PREOP? PREFIX? OBJNAME

 

PREOP                          :
('AVE'|'MAX'|'MIN'|'FST'|'TOT'|'CNT'|'SUM'|'ALL'|'ST'|'CT'|'ASQ'|'PCT'|'RPCT
'|'SEG'|'DST')'.';     

PREFIX                         :    OBJNAME '.';    

FUNCTION                       :    OBJNAME '(';

OBJNAME                        :    ('A'..'Z') ('A'..'Z'|'0'..'9'|'_')*;

NumOp                          :    '**' | '*' | '+' | '-' | '/' | 'AND' |
'OR';     

ChrOp                          :    '|' | '||' ;

RelOp                         :
'EQ'|'IS'|'ISNOT'|'ISFROM'|'EXCEEDS'|'NE'|'GE'|'GT'|'LT'|'LE'|'IS
MISSING'|'ISNOT MISSING'  ;

NRelOp                         :    'FROM'|'ISFROM'|'NOTFROM';

ARelOp                         :
'CONTAINS'|'OMITS'|'INCLUDES'|'EXCLUDES'|'NOT LIKE'|'LIKE';

fragment StringLiteral         :    '"' ~('"')* '"' | SingleStringLiteral ;

SingleStringLiteral            :    '\'' ~('\'')* '\''   ;

NumericLiteral                 :    DecimalLiteral | IntegerLiteral ;

fragment IntegerLiteral        :    DecimalDigit+;

fragment DecimalLiteral        :    DecimalDigit+ '.' DecimalDigit* | '.'
DecimalDigit+ ;

fragment DecimalDigit          :    ('0'..'9') ;

 

I really don't know how to describe the problem but I urgently need some
help.

 

Best regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/b9b4ea5d/attachment.html 

From thomas.dill at teleport.ch  Thu Nov  5 00:21:33 2009
From: thomas.dill at teleport.ch (Thomas Dill)
Date: Thu, 5 Nov 2009 09:21:33 +0100
Subject: [antlr-interest] Define "function" as numerical
	and	alphanumerical expression
In-Reply-To: <a3c7a8bef7d54f48b781a2c9115e0e45@temporal-wave.com>
References: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
	<a3c7a8bef7d54f48b781a2c9115e0e45@temporal-wave.com>
Message-ID: <019a01ca5df0$fde38100$f9aa8300$@dill@teleport.ch>

(2nd try with the right email address)

 

Hi Jim and David-Sarah Hopwood,

 

Thanks for your replies. 

 

@Jim: I'm trying to parse a WebFOCUS report to get its meta data and
automatically make a documentation of the report. That's why I have to get
as much of the information from an expression as possible.  

 

@David-Sarah Hopwood: I first have to study your answers, but I think they
are going to be very helpful. I forgot to write in my question, that the
ANTLR code I sent was just an extract and "simplified" (or not. :o) ). There
are rules for all the missing tokens and there are lexer rules for all
quoted tokens. Thank you as well for the "How To Ask Questions The Smart
Way" link.  Not read it yet, but I'm going to.

 

Best regards,

Tom

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Mittwoch, 4. November 2009 17:41
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Define "function" as numerical and
alphanumerical expression

 

It looks like you are trying to produce a grammar from some kind of
normative spec and have made the classic mistake of trying to include
context in the expression of the grammar. The problem is that such specs are
not written for writing parsers with but more of an explanation of how
things go together in general.

 

So, you don't want rules like alphanumerical_expression and so on, you just
want expression, and you must make your expression rule left factored and
organized for LL() parsers, not just typed in like below. You can steal the
expression rule tree from any of the sample grammars (choose one that might
be close already), such as java or C.

 

Basically though, you are not going to get very far starting from the
grammar below. What is it you are trying to parse?

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Dill
Sent: Wednesday, November 04, 2009 8:33 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Define "function" as numerical and alphanumerical
expression

 

Hi!

 

I need help for the following problem:

 

I think the best way to describe it, is to show you what I tried. This
produces a bunch of errors. 

 

expression                     :    conditional_expression |
numerical_expression | alphanumerical_expression | function | data_field ;

conditional_expression         :    'IF' arguments 'THEN' value ('ELSE'
(conditional_expression | value))? ;

arguments                      :    argument  (('OR' | 'AND') argument)* |

'(' arguments ')' ;

Argument                      :    value relational_operator value |

                                    (NOT? value IN) ('('
(SingleStringLiteral | NumericLiteral) (COMMA (SingleStringLiteral |
NumericLiteral))* ')' | FILE OBJNAME)  ;

relational_operator            :    RelOp | alphanumerical_relational_op |
numerical_relational_op ;

alphanumerical_relational_op   :    ARelOp ;

numerical_relational_op        :    NRelOp numerical_expression  'TO' ;

value                          :    numerical_expression  |
alphanumerical_expression | function | data_field;

function                       :    FUNCTION function_argument ')';

function_argument              :    (numerical_expression  |
alphanumerical_expression | function | data_field) (COLON
numerical_expression  | alphanumerical_expression | function | data_field)*;

alphanumerical_expression      :    (SingleStringLiteral) (chrOp
(SingleStringLiteral))+;

numerical_expression           :    (numExprA) (NumOp (numExprA))+ |

'('numerical_expression  ')' ;

numExprA                       :    NumericLiteral; 

data_field                     :    PREOP? PREFIX? OBJNAME

 

PREOP                          :
('AVE'|'MAX'|'MIN'|'FST'|'TOT'|'CNT'|'SUM'|'ALL'|'ST'|'CT'|'ASQ'|'PCT'|'RPCT
'|'SEG'|'DST')'.';     

PREFIX                         :    OBJNAME '.';    

FUNCTION                       :    OBJNAME '(';

OBJNAME                        :    ('A'..'Z') ('A'..'Z'|'0'..'9'|'_')*;

NumOp                          :    '**' | '*' | '+' | '-' | '/' | 'AND' |
'OR';     

ChrOp                          :    '|' | '||' ;

RelOp                         :
'EQ'|'IS'|'ISNOT'|'ISFROM'|'EXCEEDS'|'NE'|'GE'|'GT'|'LT'|'LE'|'IS
MISSING'|'ISNOT MISSING'  ;

NRelOp                         :    'FROM'|'ISFROM'|'NOTFROM';

ARelOp                         :
'CONTAINS'|'OMITS'|'INCLUDES'|'EXCLUDES'|'NOT LIKE'|'LIKE';

fragment StringLiteral         :    '"' ~('"')* '"' | SingleStringLiteral ;

SingleStringLiteral            :    '\'' ~('\'')* '\''   ;

NumericLiteral                 :    DecimalLiteral | IntegerLiteral ;

fragment IntegerLiteral        :    DecimalDigit+;

fragment DecimalLiteral        :    DecimalDigit+ '.' DecimalDigit* | '.'
DecimalDigit+ ;

fragment DecimalDigit          :    ('0'..'9') ;

 

I really don't know how to describe the problem but I urgently need some
help.

 

Best regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/6d1db73c/attachment.html 

From claude.moulin at hds.utc.fr  Thu Nov  5 06:19:32 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Thu, 5 Nov 2009 15:19:32 +0100
Subject: [antlr-interest] repeating the parsing of a subtree
In-Reply-To: <mailman.1.1256410801.8098.antlr-interest@antlr.org>
References: <mailman.1.1256410801.8098.antlr-interest@antlr.org>
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012AB9A7@xena.ad.utc>

Hello,
First a remark: AntLRWorks doesn't display correctly the graph of a rule
containing the . meta-character.
I have found two solutions:
1) Create a tree based interpreter (see p 245 of Terence's last book -
very interesting book)
2) Create a specific walker and launch the rule able to parse the list
tree:

For the tree
^(REPEAT a = atom list = .)

I create the following code:
{
  for (int i = 0; i < $a.r ; i++) {
    CommonTreeNodeStream nodes = new CommonTreeNodeStream(liste);
    MyTreeWalker walker = new MyTreeWalker(nodes); // the same class as
the one generated.
    walker.list_instructions();
  }
}

I am not completely satisfied. 
Claude
------------------------------

Message: 11
Date: Sat, 24 Oct 2009 20:09:17 +0200
From: "Claude Moulin" <claude.moulin at hds.utc.fr>
Subject: [antlr-interest] repeating the parsing of a subtree
To: <antlr-interest at antlr.org>
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB01258E7B at xena.ad.utc>
Content-Type: text/plain; charset="us-ascii"

I never had a good solution to the problem that I resolved before using
(or rendering public) the getNodeIndex method of the
CommonTreeNodeStream

class.

I have the following tree:

^(REPEAT a = atom list = .)

Where list can be parsed with a specific rule: list_instructions. 

atom returns an integer giving the number of times (maybe 0) the list of
instructions has to be executed.

The semantics of the instruction is then clear.

In the previous version of antlr I used the following interpreting Java
code:

{

 for (int i = 0; i < $a.r ; i++) {

   push(list);

   list_instructions();

   pop();

}

Where push and pop method are added to the tree parser:

private void push(CommonTree tree) {

 int n = ((CommonTreeNodeStream)input).getNodeIndex(tree);

 if (n >= 0)

   ((CommonTreeNodeStream)input).push(n);

}

private void pop() {

     ((CommonTreeNodeStream)input).pop();

  }

In version 3.2 CommonTreeNodeStream has been updated and I no longer
understand how to parse a subtree of the AST when it is needed and
possibly several times. The problem was to find the index of a Tree root
in the AST representation.

 

Can someone give the solution?

Thank you

Claude 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL:
http://www.antlr.org/pipermail/antlr-interest/attachments/20091024/01eb9
5ff/attachment-0001.html 

------------------------------

_______________________________________________
antlr-interest mailing list
antlr-interest at antlr.org
http://www.antlr.org/mailman/listinfo/antlr-interest

End of antlr-interest Digest, Vol 59, Issue 25
**********************************************

From jimi at temporal-wave.com  Thu Nov  5 07:20:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 07:20:10 -0800
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
In-Reply-To: <44277.17157.qm@web55904.mail.re3.yahoo.com>
Message-ID: <e93b39f289f10748be44d97199da4173@temporal-wave.com>

> From: Loring Craymer [mailto:lgcraymer at yahoo.com]
> 
> Even if the explosion reflects an ill-formed grammar, do you really
> think that it should be detected by the Java compiler?  

Oh, please don't get me wrong. None of what I am saying here is in the vein of "stupid users should know better..."; far from it. I try to spend a lot of time helping people get started, as most of you know.

Of course, we might say "Why is Java byte code so stupid as to be limited to 32K, why does Java not have static initialization of arrays (well, I think it will in 7) and so on. Basically we all have to deal with what we have right now and so a good discussion helps everyone.

> The user
> experience is then that "ANTLR generates bad code" and "I have no clue
> as to how to fix the problem". 

Hence the list of course - I don't wish to give any impression that I am telling people it's entirely their fault and go away ;-) Besides, it isn't really my place to make such statements.

> Showstoppers like this slow the
> development process; it is far better if ANTLR "always" generates
> compilable code 

Without a doubt, to the extent that this is feasible.

>and ideally produces useful warnings that support
> successive refinement of a grammar.

See my current project rewriting the ANTLR grammars [below].

>  Besides that, this behavior is
> limited to the Java target; shouldn't all targets behave similarly?

Well no, because ANTLR isn't really generating anything incorrectly, it is just that Java has a limitation that causes hoops to be jumped through. Whether ANTLR can do better in any particular case is of course a different issue. We just heard Ter say that he will be working on code generation when he is back from Tokyo and we have been talking about code optimization for a while. 

At the moment though Ter is redoing StringTemplate so that is self contained and has no ANTLR 2 reliance and I am rewriting all the grammars in v3 to be self hosted. One reason for the latter is to solve other user related issues (you mention some of them above) such as error reporting being less than optimal right now. Good reporting will help the user experience a lot. This stuff will probably be a 3.4 release. The structure will allow me to look for patterns in the way things are put together and make some suggestions about improvements. A lint-like mode for the tool might be a cool thing for instance.

> 
> Of course, you could be right that the explosion is a feature.  

Well, not a feature of ANTLR of course, other than the fact that all bugs are unintended features :-) I meant a reflection of the fact that the grammar is structured in a particular way and of course even this might be that ANTLR isn't doing the best job of dealing with such a construct. 

I think that having the LL(*) algorithm is just one thing that shows ANTLR tries to aim at practicality and the Nike development system : "Just Do It!", so of course when you have something like this coming up (and it comes up a lot), then we should really do something about it. Resources are always in short supply of course.

> If so,
> why haven't you attempted to replicate this behavior for generated C
> code?  :)

It's worth mentioning the C target in this respect because I sometimes get questions about why the C object code seems so much bigger than the Java code. In C, the tables are generated such that the compiler can lay out all the tables in data space and there is no runtime initialization code. Hence the DFAs are not run length encoded but laid out just as they are. So, Java looks like it is smaller but in the end is not as efficient and creates all the memory at startup time. C does not have this 32K object code limit (and really Java never should have done either) and so you never get this issue there.

However table driven DFAs are pretty inefficient, especially for C and JIT produced machine code as they tend to defeat the CPU data cache almost immediately and almost always. So the C target now avoids DFA tables as much as possible and produces switch statements. These produce smaller code and don't fail cache lookups and so the C target skips the hassle altogether. We should also be looking at this for Java and C#, but the difference for Java is of course this 32K limit on object code, so it starts to get all target specific on us. A solution needs to be target agnostic if at all possible and many code generation issues that affect one target can be solved in a way that also improves other targets, or at least does not hurt them.

In short then, nobody is ignoring this and the solutions submitted may well be the ones adopted, or maybe there are others.

But, if you all switch to C.... ;-)

Jim
I see there are tons of emails on all this and I will try to answer them all. 




From jimi at temporal-wave.com  Thu Nov  5 07:34:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 07:34:40 -0800
Subject: [antlr-interest] Maven archetype for ANTLR
Message-ID: <41befca3565558489c2718961a6c01c3@temporal-wave.com>

I note that the new Maven Archetype for building a starting project for Maven and the Java target is now synced in the Maven central repository and shows up in the IDEs (at least it shows up in the Netbeans project creation wizard, so it should be seen by other IDEs too). Unfortunately there is no way around specifying the version of the ANTLR archetype to use as this seems to be a deficiency in the archetype process. I have updated the Wiki page to reflect that:

 

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Maven

 

Jim

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/7a95e232/attachment.html 

From jimi at temporal-wave.com  Thu Nov  5 08:04:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 08:04:14 -0800
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <19186.28240.944449.281122@swan.talkbank.org>
Message-ID: <b1fd142daad29f4c8ed0038e6e215eeb@temporal-wave.com>

Franklin,

You also need to fix your ruleid and parameter references to make sure that they use $xxx and not just xxx. You are getting lucky with these at the moment, but that won't always be the case :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of FranklinChen at cmu.edu
> Sent: Wednesday, November 04, 2009 10:19 PM
> To: Sam Harwell
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Strange bug in ANTLR version higher than
> 3.1.2
> 
> > For the 3.2 version, try changing this:
> >
> > CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> >
> > To this:
> >
> > BufferedTreeNodeStream nodes = new BufferedTreeNodeStream(tree);
> 
> This works!
> 
> I also verified that making this simple change also works when I make
> it in the driver for my large program that uses a lot of manual tree
> restructuring similar to the test case I created.
> 
> Thank you very much!  Can you explain to me why the discrepancy when
> moving from 3.1.2 to 3.1.3/3.2?
> 
> --
> Franklin
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Nov  5 08:36:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 08:36:05 -0800
Subject: [antlr-interest] repeating the parsing of a subtree
In-Reply-To: <3402BD9F2C1434438EF1F319BE558FBB012AB9A7@xena.ad.utc>
Message-ID: <2230d40e6d2bac41bad38daa03de7e9a@temporal-wave.com>

Should you not be using the push(index) and pop() of the CommonTreeNodeStream or mark() and rewind()? The index() method will give you the current location when you hit the node that you want to repeat.

Jim




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Claude Moulin
> Sent: Thursday, November 05, 2009 6:20 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] repeating the parsing of a subtree
> 
> Hello,
> First a remark: AntLRWorks doesn't display correctly the graph of a
> rule
> containing the . meta-character.
> I have found two solutions:
> 1) Create a tree based interpreter (see p 245 of Terence's last book -
> very interesting book)
> 2) Create a specific walker and launch the rule able to parse the list
> tree:
> 
> For the tree
> ^(REPEAT a = atom list = .)
> 
> I create the following code:
> {
>   for (int i = 0; i < $a.r ; i++) {
>     CommonTreeNodeStream nodes = new CommonTreeNodeStream(liste);
>     MyTreeWalker walker = new MyTreeWalker(nodes); // the same class as
> the one generated.
>     walker.list_instructions();
>   }
> }
> 
> I am not completely satisfied.
> Claude
> ------------------------------
> 
> Message: 11
> Date: Sat, 24 Oct 2009 20:09:17 +0200
> From: "Claude Moulin" <claude.moulin at hds.utc.fr>
> Subject: [antlr-interest] repeating the parsing of a subtree
> To: <antlr-interest at antlr.org>
> Message-ID: <3402BD9F2C1434438EF1F319BE558FBB01258E7B at xena.ad.utc>
> Content-Type: text/plain; charset="us-ascii"
> 
> I never had a good solution to the problem that I resolved before using
> (or rendering public) the getNodeIndex method of the
> CommonTreeNodeStream
> 
> class.
> 
> I have the following tree:
> 
> ^(REPEAT a = atom list = .)
> 
> Where list can be parsed with a specific rule: list_instructions.
> 
> atom returns an integer giving the number of times (maybe 0) the list
> of
> instructions has to be executed.
> 
> The semantics of the instruction is then clear.
> 
> In the previous version of antlr I used the following interpreting Java
> code:
> 
> {
> 
>  for (int i = 0; i < $a.r ; i++) {
> 
>    push(list);
> 
>    list_instructions();
> 
>    pop();
> 
> }
> 
> Where push and pop method are added to the tree parser:
> 
> private void push(CommonTree tree) {
> 
>  int n = ((CommonTreeNodeStream)input).getNodeIndex(tree);
> 
>  if (n >= 0)
> 
>    ((CommonTreeNodeStream)input).push(n);
> 
> }
> 
> private void pop() {
> 
>      ((CommonTreeNodeStream)input).pop();
> 
>   }
> 
> In version 3.2 CommonTreeNodeStream has been updated and I no longer
> understand how to parse a subtree of the AST when it is needed and
> possibly several times. The problem was to find the index of a Tree
> root
> in the AST representation.
> 
> 
> 
> Can someone give the solution?
> 
> Thank you
> 
> Claude
> 
> 
> 
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://www.antlr.org/pipermail/antlr-
> interest/attachments/20091024/01eb9
> 5ff/attachment-0001.html
> 
> ------------------------------
> 
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
> 
> End of antlr-interest Digest, Vol 59, Issue 25
> **********************************************
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From mark at cs.vu.nl  Thu Nov  5 09:30:15 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Thu, 05 Nov 2009 18:30:15 +0100
Subject: [antlr-interest] Problem parsing unit symbols
Message-ID: <4AF30BA7.9080609@cs.vu.nl>

Hello Antlers,

I'm designing a lexer/parser for units of measure (e.g. meters, 
seconds). In that process I'm trying to match symbols like ? (Ohm) and ? 
(angstrom).

Below is the relevant part of the grammar -  the part that treats 
symbols. The grammar checks out OK in ANTLRWorks, but I get a 
EarlyExitException when I run it on a file that contains two lines with 
on the first the Ohm sign and on the second the angstrom sign. The 
behaviour is different in the interpreter: there the first line is 
parsed OK, but for the second line a NoViableAltException is given.

If I understand correctly an EarlyExitException means that a Expr(..)+
failed because there wasn't anything to match. The rules "file" and 
"expr" thus seem the only suspects. However, they both seem right to me 
and fiddling with them produces other errors.

Any ideas anyone?

Thanks,
Mark van Assem.

-------------------------------------------------------------------------
grammar unitsymbols;

file	:	(expr NEWLINE)+ ;

expr 	:	symbol+;

symbol	:	US;

/* LEXER */

WS	:	' ' {$channel=HIDDEN;} ;
NEWLINE:'\r'? '\n'  ;

// unit symbols like Ohm
US
	: OHM | ALP ;	

fragment OHM	:	'\u2126' | '\u03A9';	// Ohm symbol
fragment ALP	:	'\u0251' | '\u03B1';	// alpha
-------------------------------------------------------------------------

input:

?
?

From jimi at temporal-wave.com  Thu Nov  5 09:41:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 09:41:34 -0800
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF30BA7.9080609@cs.vu.nl>
Message-ID: <47c16bfeec8fb24896d31318ce1aaf94@temporal-wave.com>

When you run the debugger, look along the list of tabs at the bottom and you will find the 'output' tab. Select this and you will see that your lexer is saying:

line 1:0 no viable alternative at character '?'
line 2:0 no viable alternative at character '?'

So either the lexer specs are incorrect, or the characters you pasted here are not in an encoding that matches what Java is looking for. Send them in UTF8 format. The UTF8 version of Ohm is 0xE2 0x84 0xA6 for instance. What encoding are you sending in? When you come to read input files, then you will need to tell the file stream what the file encoding is.

Jim






> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mark van Assem
> Sent: Thursday, November 05, 2009 9:30 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem parsing unit symbols
> 
> Hello Antlers,
> 
> I'm designing a lexer/parser for units of measure (e.g. meters,
> seconds). In that process I'm trying to match symbols like ? (Ohm) and
> ?
> (angstrom).
> 
> Below is the relevant part of the grammar -  the part that treats
> symbols. The grammar checks out OK in ANTLRWorks, but I get a
> EarlyExitException when I run it on a file that contains two lines with
> on the first the Ohm sign and on the second the angstrom sign. The
> behaviour is different in the interpreter: there the first line is
> parsed OK, but for the second line a NoViableAltException is given.
> 
> If I understand correctly an EarlyExitException means that a Expr(..)+
> failed because there wasn't anything to match. The rules "file" and
> "expr" thus seem the only suspects. However, they both seem right to me
> and fiddling with them produces other errors.
> 
> Any ideas anyone?
> 
> Thanks,
> Mark van Assem.
> 
> -----------------------------------------------------------------------
> --
> grammar unitsymbols;
> 
> file	:	(expr NEWLINE)+ ;
> 
> expr 	:	symbol+;
> 
> symbol	:	US;
> 
> /* LEXER */
> 
> WS	:	' ' {$channel=HIDDEN;} ;
> NEWLINE:'\r'? '\n'  ;
> 
> // unit symbols like Ohm
> US
> 	: OHM | ALP ;
> 
> fragment OHM	:	'\u2126' | '\u03A9';	// Ohm symbol
> fragment ALP	:	'\u0251' | '\u03B1';	// alpha
> -----------------------------------------------------------------------
> --
> 
> input:
> 
> ?
> ?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Nov  5 10:06:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 10:06:15 -0800
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF30BA7.9080609@cs.vu.nl>
Message-ID: <33fb043a13d357449ca2c17b3f389c6a@temporal-wave.com>

> 
> fragment OHM	:	'\u2126' | '\u03A9';	// Ohm symbol
> fragment ALP	:	'\u0251' | '\u03B1';	// alpha

I hacked ANTLRWorks to set UTF8 encoding on file input rather than default and your example stuff works except for the fact that the ALP fragment here does not match your Angstrom symbol in your text, which is \u00E5. ALP is something else.

Jim




From david-sarah at jacaranda.org  Thu Nov  5 11:18:40 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 19:18:40 +0000
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF30BA7.9080609@cs.vu.nl>
References: <4AF30BA7.9080609@cs.vu.nl>
Message-ID: <4AF32510.50801@jacaranda.org>

Mark van Assem wrote:
> Hello Antlers,
> 
> I'm designing a lexer/parser for units of measure (e.g. meters, 
> seconds). In that process I'm trying to match symbols like ? (Ohm) and ? 
> (angstrom).

The ?ngstrom symbol is capital-A-ring (\u00C5 or \u212B), by the way.

> Below is the relevant part of the grammar -  the part that treats 
> symbols. The grammar checks out OK in ANTLRWorks, but I get a 
> EarlyExitException when I run it on a file that contains two lines with 
> on the first the Ohm sign and on the second the angstrom sign. The 
> behaviour is different in the interpreter: there the first line is 
> parsed OK, but for the second line a NoViableAltException is given.

The grammar includes alpha, not the ?ngstrom symbol, so that explains
the interpreter behaviour. The behaviour when run on a file is likely
to be a character encoding issue; make sure that the charset parameter
to ANTLRInputStream matches the encoding of your file (probably UTF-8).
Also, either make sure that the file does not contain an initial BOM
(Byte Order Mark, \uFFEF), or match that character in your grammar.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/7e6d3c63/attachment.bin 

From claude.moulin at hds.utc.fr  Thu Nov  5 11:22:05 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Thu, 5 Nov 2009 20:22:05 +0100
Subject: [antlr-interest] repeating the parsing of a subtree
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012ABA9B@xena.ad.utc>

Hello Jim,

Thank you very much.

I did not know how to deal with these methods.

Following your advice my rule is now:

 

repeat 

@init{  int mark_before; }

:              

   ^(REPEAT a = atom  {mark_before = input.mark();}  list = .  ) 

         {     for (int i = 0; i < $a.r ; i++)  {

                   input.rewind(mark_before);

                   list_instructions();

              } 

             input.rewind(input.index() + 1);

             // need to skip one node to reach the right position

          }                    

   ;

 

Claude

------------------------------

 

Message: 33

Date: Thu, 05 Nov 2009 08:36:05 -0800

From: "Jim Idle" <jimi at temporal-wave.com>

Subject: Re: [antlr-interest] repeating the parsing of a subtree

To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>

Message-ID: <2230d40e6d2bac41bad38daa03de7e9a at temporal-wave.com>

Content-Type: text/plain;    charset="us-ascii"

 

Should you not be using the push(index) and pop() of the
CommonTreeNodeStream or mark() and rewind()? The index() method will
give you the current location when you hit the node that you want to
repeat.

 

Jim

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/ab822871/attachment.html 

From david-sarah at jacaranda.org  Thu Nov  5 11:23:16 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 05 Nov 2009 19:23:16 +0000
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF32510.50801@jacaranda.org>
References: <4AF30BA7.9080609@cs.vu.nl> <4AF32510.50801@jacaranda.org>
Message-ID: <4AF32624.5070002@jacaranda.org>

David-Sarah Hopwood wrote:
> Mark van Assem wrote:
>> Hello Antlers,
>>
>> I'm designing a lexer/parser for units of measure (e.g. meters, 
>> seconds). In that process I'm trying to match symbols like ? (Ohm) and ? 
>> (angstrom).
> 
> The ?ngstrom symbol is capital-A-ring (\u00C5 or \u212B), by the way.

Correction:

The ?ngstr?m or angstrom symbol is capital-A-ring (\u00C5 or \u212B).

(S.I. units named after people are lowercase when spelled out, but have
uppercase symbols.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091105/f7c73060/attachment.bin 

From jimi at temporal-wave.com  Thu Nov  5 11:50:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 11:50:01 -0800
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
Message-ID: <bd02ca37f3bd7541a6d8e49db261c5eb@temporal-wave.com>

Franklin,


So I spent some time debugging your parser and basically the problem is to do with the way you are building the tree (well actually the problem might be the syntax of the language you are parsing, but you probably don't control that ;-). The new tree stream is making some assumptions about the parents of siblings and you have not kept those relationships intact. So, you can traverse down and along the tree but the new stream also looks at parents to see if it needs to add UP nodes in to the stream. You parents are the wrong parents, so it makes the wrong decision. The old stream will work because it doesn't need that information as it has buffered them all at once.

I think that the issue may well be that you are doing this directly on the nodes, and not via the tree adaptor, but the same thing would happen if the tree adaptor does not call setParent() - pretty sure it does though. 

So first, here is your grammar rewritten without anything but standard rewrite rules (lexer skipped and compressed for space). You can see that this is somewhat, err... 'simpler' ;-)

start
    : tier+ EOF!
    ;

tier
    : c+=content+ ';' d+=depContent+ '.'
        -> ^(TIER ^(WORD $c $d)+ )
    ;

content
    :   word |   INT
    ;

word
    : ID
    ;

depContent
    : i=INT -> ^(PHO $i)
    ;

This builds exactly the same tree as you do, but builds it correctly. Your tree parser then walks this perfectly. I would stick with something like this myself and if you need to check cardinality, set a validity flag before the rewrite and rewrite conditionally.

But the other reason for doing this is that if you now look at the generated Java code for the tier rule, you will see how to use the adaptor to add children to nodes, and this ought to preserve the parent child relationships properly. Basically, if you feel that you MUST write the tree yourself, then write a small piece of grammar that does what you want to do, and use the code that ANTLR generates - that way you will get it correct.

So there is no bug in the new TreeNodeStream and you should go back to it.

Cheers,

Jim








From FranklinChen at cmu.edu  Thu Nov  5 15:49:28 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 18:49:28 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <bd02ca37f3bd7541a6d8e49db261c5eb@temporal-wave.com>
References: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
	<bd02ca37f3bd7541a6d8e49db261c5eb@temporal-wave.com>
Message-ID: <19187.25736.160174.760498@swan.talkbank.org>

> Franklin,
> 
> 
> So I spent some time debugging your parser and basically the problem
> is to do with the way you are building the tree (well actually the
> problem might be the syntax of the language you are parsing, but you
> probably don't control that ;-). The new tree stream is making some
> assumptions about the parents of siblings and you have not kept
> those relationships intact. So, you can traverse down and along the
> tree but the new stream also looks at parents to see if it needs to
> add UP nodes in to the stream. You parents are the wrong parents, so
> it makes the wrong decision. The old stream will work because it
> doesn't need that information as it has buffered them all at once.
> 
> I think that the issue may well be that you are doing this directly
> on the nodes, and not via the tree adaptor, but the same thing would
> happen if the tree adaptor does not call setParent() - pretty sure
> it does though.
> 
> So first, here is your grammar rewritten without anything but standard rewrite rules (lexer skipped and compressed for space). You can see that this is somewhat, err... 'simpler' ;-)
> 
> start
>     : tier+ EOF!
>     ;
> 
> tier
>     : c+=content+ ';' d+=depContent+ '.'
>         -> ^(TIER ^(WORD $c $d)+ )
>     ;
> 
> content
>     :   word |   INT
>     ;
> 
> word
>     : ID
>     ;
> 
> depContent
>     : i=INT -> ^(PHO $i)
>     ;
> 
> This builds exactly the same tree as you do, but builds it correctly. Your tree parser then walks this perfectly. I would stick with something like this myself and if you need to check cardinality, set a validity flag before the rewrite and rewrite conditionally.
> 
> But the other reason for doing this is that if you now look at the generated Java code for the tier rule, you will see how to use the adaptor to add children to nodes, and this ought to preserve the parent child relationships properly. Basically, if you feel that you MUST write the tree yourself, then write a small piece of grammar that does what you want to do, and use the code that ANTLR generates - that way you will get it correct.
> 
> So there is no bug in the new TreeNodeStream and you should go back to it.
> 
> Cheers,
> 
> Jim

Jim,

Unfortunately, the stripped down grammar you propose is completely
inequivalent to mine (and mine was a stripped down version of the much
more complicated version in my real program, in which I have multiple
alternatives and cases and decisions on what type of tree to create).

Here are some test cases for the stripped down test project:

	java -cp $(CLASSPATH) Main 'a b c d ; 0 1 2 3 .' ;
	java -cp $(CLASSPATH) Main 'a 7 b c d ; 0 1 2 3 .' ;
	java -cp $(CLASSPATH) Main 'a b c d ; 0 1 2 3 4 .' ;
	java -cp $(CLASSPATH) Main 'a b c d ; 0 1 2 .'

My original code results in:

tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))
tree = (TIER (WORD a (PHO 0)) 7 (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))
Ignoring extra pho info 4
tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))
Main line missing pho info WORD
tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d))
ExprTreeParser.g: node from after line 1:6 mismatched tree node: UP expecting PHO

(The last case throws an exception only because, for brevity, I didn't
do the length mismatch check in the parser that I did with the third
case; my real program checks for all these things, and throws an
exception when there is a length mismatch, while deliberately ignoring
INT in the main line without generating the "Ignoring" message.)

Your code results in:

tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d (PHO 3)))
Exception in thread "main" org.antlr.runtime.tree.RewriteCardinalityException: token d
	at org.antlr.runtime.tree.RewriteRuleElementStream._next(RewriteRuleElementStream.java:165)
	at org.antlr.runtime.tree.RewriteRuleElementStream.nextTree(RewriteRuleElementStream.java:145)
	at ExprParser.tier(ExprParser.java:278)
	at ExprParser.start(ExprParser.java:96)
	at Main.main(Main.java:15)
Exception in thread "main" org.antlr.runtime.tree.RewriteCardinalityException: token c
	at org.antlr.runtime.tree.RewriteRuleElementStream._next(RewriteRuleElementStream.java:165)
	at org.antlr.runtime.tree.RewriteRuleElementStream.nextTree(RewriteRuleElementStream.java:145)
	at ExprParser.tier(ExprParser.java:277)
	at ExprParser.start(ExprParser.java:96)
	at Main.main(Main.java:15)
Exception in thread "main" org.antlr.runtime.tree.RewriteCardinalityException: token d
	at org.antlr.runtime.tree.RewriteRuleElementStream._next(RewriteRuleElementStream.java:165)
	at org.antlr.runtime.tree.RewriteRuleElementStream.nextTree(RewriteRuleElementStream.java:145)
	at ExprParser.tier(ExprParser.java:278)
	at ExprParser.start(ExprParser.java:96)
	at Main.main(Main.java:15)

so it behaves nothing like my production code.

What I need cannot be expressed purely by means of the built-in tree
rewrites, because of the conditions and alternatives that occur that
result in considerable tree manipulation to get it into the desired
"canonical" form that my tree parsers then handle.

So I think the right thing for me to do is to study the generated code
for rewrites and mimic the use of the adaptor APIs to link up the
trees correctly.

-- 
Franklin

From FranklinChen at cmu.edu  Thu Nov  5 16:20:30 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 19:20:30 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
References: <19186.4855.256201.577541@swan.talkbank.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE10@martini.ironwillgames.com>
Message-ID: <19187.27598.956503.249557@swan.talkbank.org>

Sam Harwell writes:
> Hi Franklin,
> 
> You didn't say exactly what the bug was. That said, here's my feedback,
> lots of it just my opinion not rules:
> 
> * Replace your call to {skip();} with {$channel = HIDDEN;}
> * Replace ^(PHO[i, "pho"] $i) with just PHO[i, "pho"]. When you
> construct the PHO token from i, it takes on the text and the token
> start/stop positions of i, so the child node is redundant.

For the record, this was a orders-of-magnitude stripped down version
of my actual program, in which I create a huge PHO tree, hence my
introduction of the dummy node; also, depContent creates other kinds
of trees, depending on conditions, other than PHO.

> * In your @after blocks, if you reference a parameter like it, you
> should use $it instead of just it.

Thanks, I am making this correction everywhere relevant.

> * I think TIER[c.tree.getToken(), "TIER"] should be
> TIER[$c.tree.getToken(), "TIER"]

Yes, you are right.

> * I'm pretty sure mainTier can initialize the wordList like this:
> mainTier returns [ArrayList<CommonTree> wordList = new
> ArrayList<CommonTree>()] and then leave out the @init block.

Yes.

> * When you're using a tree parser, try to move as much logic as possible
> to the tree parser instead of the parser. If possible, you should shoot
> for having a parser with no actions, parameters, or @init{} @after{}
> blocks (obviously this is not always possible). If you meet this goal,
> then your parser will work with any target without any changes.

The problem is that I need to do a lot of tree restructuring before I
arrive at a canonical AST that is used by many different tools.  I can
think of no better place to do it than in the parser.  In this
specific toy example, the restructuring involved is taking two lines
of text with various directives within them and then merging them
"word" by "word" like a zipper.

-- 
Franklin

From jimi at temporal-wave.com  Thu Nov  5 16:37:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 16:37:29 -0800
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <19187.25736.160174.760498@swan.talkbank.org>
Message-ID: <d9897414e009be41b0fa2413fb927f9d@temporal-wave.com>



> -----Original Message-----
> From: FranklinChen at cmu.edu [mailto:FranklinChen at cmu.edu]
> > So first, here is your grammar rewritten without anything but
> standard rewrite rules (lexer skipped and compressed for space). You
> can see that this is somewhat, err... 'simpler' ;-)
 
> Unfortunately, the stripped down grammar you propose is completely
> inequivalent to mine (and mine was a stripped down version of the much
> more complicated version in my real program, in which I have multiple
> alternatives and cases and decisions on what type of tree to create).

Produces the same tree ;-). But really the point was to highlight that there is nothing wrong with the stream and that a simple example shows you how to do the tree building yourself.

> 
> Your code results in:
> 
> tree = (TIER (WORD a (PHO 0)) (WORD b (PHO 1)) (WORD c (PHO 2)) (WORD d
> (PHO 3)))


> Exception in thread "main"
> org.antlr.runtime.tree.RewriteCardinalityException: token d
> 	at
> org.antlr.runtime.tree.RewriteRuleElementStream._next(RewriteRuleElemen
> tStream.java:165)
 
> so it behaves nothing like my production code.

Well, I said you needed to do conditional rewrites right? When they imbalance the rewrite streams will throw exceptions, which is all that is happening here.
> 
> So I think the right thing for me to do is to study the generated code
> for rewrites and mimic the use of the adaptor APIs to link up the
> trees correctly.

Yes - this is what I was getting at basically.

Jim




From FranklinChen at cmu.edu  Thu Nov  5 18:12:37 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Thu, 5 Nov 2009 21:12:37 -0500
Subject: [antlr-interest] Strange bug in ANTLR version higher than 3.1.2
In-Reply-To: <d9897414e009be41b0fa2413fb927f9d@temporal-wave.com>
References: <19187.25736.160174.760498@swan.talkbank.org>
	<d9897414e009be41b0fa2413fb927f9d@temporal-wave.com>
Message-ID: <19187.34325.591931.581831@swan.talkbank.org>

> > So I think the right thing for me to do is to study the generated code
> > for rewrites and mimic the use of the adaptor APIs to link up the
> > trees correctly.
> 
> Yes - this is what I was getting at basically.
> 
> Jim

It turned out that it was not useful studying the generated code.
However, I ended up solving my problems by using
adaptor.addChild(parent, adaptor.dupTree(child)) whenever splicing a
tree created earlier in a parse into a new parent.  This is probably
overkill, with a lot of extra copying of subtrees, but it seemed
cleanest and guaranteed to work correctly.

-- 
Franklin

From michael.bedward at gmail.com  Thu Nov  5 20:21:02 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 6 Nov 2009 15:21:02 +1100
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF32624.5070002@jacaranda.org>
References: <4AF30BA7.9080609@cs.vu.nl> <4AF32510.50801@jacaranda.org>
	<4AF32624.5070002@jacaranda.org>
Message-ID: <e24c4c270911052021h54f9431x27cc424ee3db155b@mail.gmail.com>

Hi Mark,

Just out of interest, are working with the units supported by Java
JSR-275  which I think are based on UCUM http://unitsofmeasure.org/ ?

Michael

From michael.bedward at gmail.com  Thu Nov  5 21:45:58 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 6 Nov 2009 16:45:58 +1100
Subject: [antlr-interest] Maven archetype for ANTLR
In-Reply-To: <e24c4c270911052142w1cae54abn91f4cf251590e71f@mail.gmail.com>
References: <41befca3565558489c2718961a6c01c3@temporal-wave.com>
	<e24c4c270911052142w1cae54abn91f4cf251590e71f@mail.gmail.com>
Message-ID: <e24c4c270911052145s69c02a06qd00215fd1be829e1@mail.gmail.com>

Many thanks Jim ! ?Using ANTLR in my maven projects has been a breeze
thanks to your efforts.

Michael

2009/11/6 Jim Idle <jimi at temporal-wave.com>:
> I note that the new Maven Archetype for building a starting project for
> Maven and the Java target is now synced in the Maven central repository and
> shows up in the IDEs (at least it shows up in the Netbeans project creation
> wizard, so it should be seen by other IDEs too). Unfortunately there is no
> way around specifying the version of the ANTLR archetype to use as this
> seems to be a deficiency in the archetype process. I have updated the Wiki
> page to reflect that:
>
>
>
> http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Maven
>
>
>
> Jim
>

From david-sarah at jacaranda.org  Thu Nov  5 23:21:23 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Fri, 06 Nov 2009 07:21:23 +0000
Subject: [antlr-interest] Define "function" as numerical and
 alphanumerical expression
In-Reply-To: <4AF26600.9080301@jacaranda.org>
References: <010a01ca5d6c$79e2d380$6da87a80$@dill@teleport.ch>
	<4AF23C51.4080301@jacaranda.org> <4AF26600.9080301@jacaranda.org>
Message-ID: <4AF3CE73.8080500@jacaranda.org>

David-Sarah Hopwood wrote:
> My advice would be to use a conventional operator precedence grammar,
> as below (now that I've spent the time to fix the grammar I might as
> well give you this part of it), and check types after parsing.
> 
[...]
> logical_expression           : not_expression (logical_op not_expression)* ;
[...]
> numerical_expression         : primary_expression
>                                  (numOp primary_expression)* ;

Incidentally, this treats AND and OR as having the same precedence, and
similarly for all numeric operators. That is probably not what you want
in practice; the grammar should have a separate rule for each precedence
level.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/c1056724/attachment.bin 

From mark at cs.vu.nl  Fri Nov  6 04:18:58 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Fri, 06 Nov 2009 13:18:58 +0100
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <47c16bfeec8fb24896d31318ce1aaf94@temporal-wave.com>
References: <47c16bfeec8fb24896d31318ce1aaf94@temporal-wave.com>
Message-ID: <4AF41432.70804@cs.vu.nl>

Hi Jim,

> So either the lexer specs are incorrect, or the characters you pasted here are not in an encoding that matches what Java is looking for. Send them in UTF8 format. The UTF8 version of Ohm is 0xE2 0x84 0xA6 for instance. What encoding are you sending in? When you come to read input files, then you will need to tell the file stream what the file encoding is.

How can I accomplish this? E.g. notepad allows to save a file in UTF8, 
but how do I get the right character ecodings in? If I e.g. copy them 
from a website this won't work of course.

In your second mail you say that you "hacked ANTRLworks to to set UTF8 
encoding on file input rather than default and your example stuff 
works". This sounds like something that is useful for many people and me 
in particular. Can I somehow get this new version?

Many thanks,
Mark.

>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Mark van Assem
>> Sent: Thursday, November 05, 2009 9:30 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Problem parsing unit symbols
>>
>> Hello Antlers,
>>
>> I'm designing a lexer/parser for units of measure (e.g. meters,
>> seconds). In that process I'm trying to match symbols like ? (Ohm) and
>> ?
>> (angstrom).
>>
>> Below is the relevant part of the grammar -  the part that treats
>> symbols. The grammar checks out OK in ANTLRWorks, but I get a
>> EarlyExitException when I run it on a file that contains two lines with
>> on the first the Ohm sign and on the second the angstrom sign. The
>> behaviour is different in the interpreter: there the first line is
>> parsed OK, but for the second line a NoViableAltException is given.
>>
>> If I understand correctly an EarlyExitException means that a Expr(..)+
>> failed because there wasn't anything to match. The rules "file" and
>> "expr" thus seem the only suspects. However, they both seem right to me
>> and fiddling with them produces other errors.
>>
>> Any ideas anyone?
>>
>> Thanks,
>> Mark van Assem.
>>
>> -----------------------------------------------------------------------
>> --
>> grammar unitsymbols;
>>
>> file	:	(expr NEWLINE)+ ;
>>
>> expr 	:	symbol+;
>>
>> symbol	:	US;
>>
>> /* LEXER */
>>
>> WS	:	' ' {$channel=HIDDEN;} ;
>> NEWLINE:'\r'? '\n'  ;
>>
>> // unit symbols like Ohm
>> US
>> 	: OHM | ALP ;
>>
>> fragment OHM	:	'\u2126' | '\u03A9';	// Ohm symbol
>> fragment ALP	:	'\u0251' | '\u03B1';	// alpha
>> -----------------------------------------------------------------------
>> --
>>
>> input:
>>
>> ?
>> ?
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mark at cs.vu.nl  Fri Nov  6 04:25:27 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Fri, 06 Nov 2009 13:25:27 +0100
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF32510.50801@jacaranda.org>
References: <4AF30BA7.9080609@cs.vu.nl> <4AF32510.50801@jacaranda.org>
Message-ID: <4AF415B7.2060406@cs.vu.nl>

Hi,

> The ?ngstrom symbol is capital-A-ring (\u00C5 or \u212B), by the way.

Correct, I wasn't precise. I have to parse text obtained from Excel 
files made by people, who will probably use many variants of writing the 
same thing down, e.g. "?" "?ngstrom" "?ngstr?m" etcetera.

> The grammar includes alpha, not the ?ngstrom symbol, so that explains
> the interpreter behaviour. The behaviour when run on a file is likely

My bad, I stripped the wrong part of my original file. Thanks for 
spotting this.

> Also, either make sure that the file does not contain an initial BOM
> (Byte Order Mark, \uFFEF), or match that character in your grammar.

How can I see that such a thing is present in a file? Is there an editor 
or viewer or something like that that can assist me in this?

Many thanks,
Mark.

From mark at cs.vu.nl  Fri Nov  6 05:06:20 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Fri, 06 Nov 2009 14:06:20 +0100
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <e24c4c270911052021h54f9431x27cc424ee3db155b@mail.gmail.com>
References: <4AF30BA7.9080609@cs.vu.nl>
	<4AF32510.50801@jacaranda.org>	<4AF32624.5070002@jacaranda.org>
	<e24c4c270911052021h54f9431x27cc424ee3db155b@mail.gmail.com>
Message-ID: <4AF41F4C.9070507@cs.vu.nl>

Hi Michael,

> Just out of interest, are working with the units supported by Java
> JSR-275  which I think are based on UCUM http://unitsofmeasure.org/ ?

I'm trying to detect quantities and units in Excel files and match them 
to an ontology called OUM which contains lots of quantities and units. 
Do I understand correctly that UCUM defines a canonical format for 
units, both in plain text and XML? I stumbled on what seems like a 
parser for UCUM but haven't found documentation yet on how to use it. 
Any tips are welcome.

http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.ohf/plugins/org.eclipse.ohf.h3et.ucum.mif/?root=Technology_Project 


Thanks,
Mark van Assem.

From garym at oedata.com  Fri Nov  6 07:41:10 2009
From: garym at oedata.com (gary mazzaferro)
Date: Fri, 6 Nov 2009 08:41:10 -0700
Subject: [antlr-interest] Nubie: How to approach multiple "required"
	subrules in any order
Message-ID: <73bec9e70911060741p31ace7a0ke00f8fcf0ad5443f@mail.gmail.com>

H,

I'm new to antlr and learning as I'm writing a parser to an ast tree. I'm
not sure how to approach this problem ( I think its simple) and was hoping
someone could help me out.

I have a input stream with a token followed by 3 other rules. Each of the 3
"rules" occurs only once for the parse to be correct, but they can arrive in
any order. If it fails, it should continue on the next characters after
token_big. How do I write the "big_rule" ?

big_rule : token_big  ( rule1 | rule2 | rule3 )  -> " also, what do I put
here ?"
                not right >>>  ^      ^        ^

rule1: token1 '=' STRING -> ^('=' token1 STRING);
rule2: token2 '=' STRING -> ^('=' token2 STRING);
rule3: token3 '=' STRING -> ^('=' token3 STRING);

cheers,
gary
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/c4d4ac3a/attachment.html 

From reneel at imexsystems.com  Fri Nov  6 08:10:19 2009
From: reneel at imexsystems.com (Renee Luo)
Date: Fri, 6 Nov 2009 11:10:19 -0500
Subject: [antlr-interest] about parse key words
Message-ID: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ADFC@imex-is044.corp.imexsystems.com>

Hi there,

I have a problem with parse key words.  Like in PL/SQL "EXIT"  is key word. But some variable names also include this key word.

DECLARE
 CURSOR my_cursor IS
 ........
BEGIN
 OPEN my_cursor;
 LOOP
 ......
 exit WHEN my_cursor%NOTFOUND;
 .......
END LOOP;
CLOSE my_cursor;

:GLOBAL.exit := 'Y'; --------- (if this statement is  :GLOBAL.exit123:= 'Y', no problem)
 EXECUTE_TRIGGER('WHEN-WINDOW-CLOSED');

If my g file is set "exit" as keyword, when the g file analyses the variable name , always go to "statement" rule to match keyword then throw exception. How can let the parser knows the second "exit" is variable( go to varName rule) not key word ( don't  go to "statement" rule)?

statement
                :
                .......
                |
                                "EXIT"^ (expression)? (WHEN! (expression))? SEMI!
                |
                                ...........
                ;
......

varName :
                (COLON)? IDENT^ (DOLLAR IDENT)? ( DOT IDENT )?  ( DOT (IDENT | COMMIT) )? ( DOT (IDENT) )?                  {#varName.setType(VARIABLE_NAME); }
                ;

Someone can help me to solve this problem? Thanks in advance.

Renee

________________________________
This email and its attachments may be confidential and are intended solely for the use of the individual to whom it is addressed. Any views or opinions expressed are solely those of the author and do not necessarily represent those of ImexSystems Inc.
If you are not the intended recipient of this email and its attachments, you must take no action based upon them, nor must you copy or show them to anyone.
Please contact the sender if you believe you have received this email in error.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/93439767/attachment.html 

From jimi at temporal-wave.com  Fri Nov  6 09:55:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Nov 2009 09:55:26 -0800
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF41432.70804@cs.vu.nl>
Message-ID: <a00c0d17e81a354a9447a5c0c1e81385@temporal-wave.com>



> -----Original Message-----
> From: Mark van Assem [mailto:mark at cs.vu.nl]
> Sent: Friday, November 06, 2009 4:19 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problem parsing unit symbols
> 
> Hi Jim,
> 
> > So either the lexer specs are incorrect, or the characters you pasted
> here are not in an encoding that matches what Java is looking for. Send
> them in UTF8 format. The UTF8 version of Ohm is 0xE2 0x84 0xA6 for
> instance. What encoding are you sending in? When you come to read input
> files, then you will need to tell the file stream what the file
> encoding is.
> 
> How can I accomplish this? 

New AntlrFileStream(x, "UTF8");

> E.g. notepad allows to save a file in UTF8,
> but how do I get the right character ecodings in? If I e.g. copy them
> from a website this won't work of course.

Web pages are usually in UTF-8, so it probably would, but cutting and pasting mangles it. I use vim/gvim myself.

> 
> In your second mail you say that you "hacked ANTRLworks to to set UTF8
> encoding on file input rather than default and your example stuff
> works". This sounds like something that is useful for many people and
> me
> in particular. Can I somehow get this new version?

It is only reading files of course, but you can download the source tarball for ANTLRWorks and just change the template that generates the driver stub. You can see the change here:

http://fisheye2.atlassian.com/browse/antlrworks

You need Maven to build it but one installed you just type:

mvn

And a new jar is made under the target directory.

Jim




From jimi at temporal-wave.com  Fri Nov  6 09:57:02 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Nov 2009 09:57:02 -0800
Subject: [antlr-interest] Problem parsing unit symbols
In-Reply-To: <4AF415B7.2060406@cs.vu.nl>
Message-ID: <cafa2b8606ba0c41ac1636ded3de66be@temporal-wave.com>

 
> > Also, either make sure that the file does not contain an initial BOM
> > (Byte Order Mark, \uFFEF), or match that character in your grammar.
> 
> How can I see that such a thing is present in a file? Is there an
> editor
> or viewer or something like that that can assist me in this?
> 

http://www.chmaas.handshake.de/delphi/freeware/xvi32/xvi32.htm

Java will take care of some encodings automatically - read the docs for java IO.

Jim






From jimi at temporal-wave.com  Fri Nov  6 10:08:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Nov 2009 10:08:34 -0800
Subject: [antlr-interest] Nubie: How to approach multiple "required"
	subrules in any order
In-Reply-To: <73bec9e70911060741p31ace7a0ke00f8fcf0ad5443f@mail.gmail.com>
Message-ID: <abc58708eef36844b45fe374c6039ab4@temporal-wave.com>

The trick is not to try and enforce the semantics by encoding them in the grammar, then you have to put the rules together carefully to ensure that recovery happens. I need to write a wiki article about recovery I think.

 

So, you allow any number of those rules in your parser and then when you walk the AST, count the occurrences and issue a good semantic based error about not being allowed to duplicate them. Without testing it, you would have:

 

big_rule : token_big rset -> ^(ROOT token_big rset) ;

rset  : ( r1 | r2 | r3)* ;

r1 : t1 EQ^ STRING;

r2...

 

While you are getting to know this stuff, do not use 'literals' in your parser, make lexer tokens and use their names:

 

EQ : '=';

// Other keywords/operators

STRING ...

ID ...

COMMENT ...

WS :

ANY : . {issue error - unknown character} ; // Always the last rule in the lexer

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of gary mazzaferro
Sent: Friday, November 06, 2009 7:41 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Nubie: How to approach multiple "required" subrules in any order

 

H,

I'm new to antlr and learning as I'm writing a parser to an ast tree. I'm not sure how to approach this problem ( I think its simple) and was hoping someone could help me out. 

I have a input stream with a token followed by 3 other rules. Each of the 3 "rules" occurs only once for the parse to be correct, but they can arrive in any order. If it fails, it should continue on the next characters after token_big. How do I write the "big_rule" ?
                            

big_rule : token_big  ( rule1 | rule2 | rule3 )  -> " also, what do I put here ?"
                not right >>>  ^      ^        ^

rule1: token1 '=' STRING -> ^('=' token1 STRING);
rule2: token2 '=' STRING -> ^('=' token2 STRING);
rule3: token3 '=' STRING -> ^('=' token3 STRING);

cheers,
gary



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/af7fda1f/attachment.html 

From jimi at temporal-wave.com  Fri Nov  6 10:10:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Nov 2009 10:10:58 -0800
Subject: [antlr-interest] about parse key words
In-Reply-To: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ADFC@imex-is044.corp.imexsystems.com>
Message-ID: <57e57b84b83f9b49b6c9554d3065480d@temporal-wave.com>

You need an identifier rule and use that not an ID token, when identifiers can also be keywords:

 

id : ID | t=EXIT { $t.setType(ID); } .... ;

 

It can be done for all SQL keywords:

http://www.temporal-wave.com/index.php?option=com_psrrun <http://www.temporal-wave.com/index.php?option=com_psrrun&view=psrrun&Itemid=56> &view=psrrun&Itemid=56

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Renee Luo
Sent: Friday, November 06, 2009 8:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] about parse key words

 

Hi there,

 

I have a problem with parse key words.  Like in PL/SQL "EXIT"  is key word. But some variable names also include this key word.

 

DECLARE

 CURSOR my_cursor IS 

 ........

BEGIN

 OPEN my_cursor;

 LOOP

 ......

 exit WHEN my_cursor%NOTFOUND;

 .......

END LOOP;

CLOSE my_cursor;

 

:GLOBAL.exit := 'Y'; --------- (if this statement is  :GLOBAL.exit123:= 'Y', no problem)

 EXECUTE_TRIGGER('WHEN-WINDOW-CLOSED');

 

If my g file is set "exit" as keyword, when the g file analyses the variable name , always go to "statement" rule to match keyword then throw exception. How can let the parser knows the second "exit" is variable( go to varName rule) not key word ( don't  go to "statement" rule)?

 

statement

                :               

                .......

                |

                                "EXIT"^ (expression)? (WHEN! (expression))? SEMI!                       

                |

                                ...........   

                ;

......

 

varName : 

                (COLON)? IDENT^ (DOLLAR IDENT)? ( DOT IDENT )?  ( DOT (IDENT | COMMIT) )? ( DOT (IDENT) )?                  {#varName.setType(VARIABLE_NAME); }

                ;

 

Someone can help me to solve this problem? Thanks in advance.

 

Renee

 

  _____  

This email and its attachments may be confidential and are intended solely for the use of the individual to whom it is addressed. Any views or opinions expressed are solely those of the author and do not necessarily represent those of ImexSystems Inc.
If you are not the intended recipient of this email and its attachments, you must take no action based upon them, nor must you copy or show them to anyone.
Please contact the sender if you believe you have received this email in error.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/b22ba3fe/attachment.html 

From david-sarah at jacaranda.org  Fri Nov  6 12:21:49 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Fri, 06 Nov 2009 20:21:49 +0000
Subject: [antlr-interest] about parse key words
In-Reply-To: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ADFC@imex-is044.corp.imexsystems.com>
References: <ADB4EF1A85E5D14AB022703C6D77983E2049E7ADFC@imex-is044.corp.imexsystems.com>
Message-ID: <4AF4855D.1020308@jacaranda.org>

Renee Luo wrote:
> Hi there,
> 
> I have a problem with parse key words.  Like in PL/SQL "EXIT"  is key word.
> But some variable names also include this key word.

This is quite a common requirement. The approach I use is to declare a
keyword rule that has all keyword tokens as alternatives, and then make
the identifier rule explicitly allow either a keyword or a
non-keyword-identifier:

  DECLARE : 'DECLARE' ;
  BEGIN   : 'BEGIN' ;
  ...
  keyword : DECLARE | BEGIN | ... ;

  NonKeywordIdentifier : IdentifierStart IdentifierContinue* ;

  identifier : NonKeywordIdentifier | keyword ;

Note that this may result in grammar ambiguities unless the language has
been very carefully designed to avoid them. Some of these ambiguities might
have to be resolved using predicates.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091106/baac4119/attachment.bin 

From hendrik.brower at gmail.com  Sat Nov  7 08:35:43 2009
From: hendrik.brower at gmail.com (hendrik brower)
Date: Sat, 7 Nov 2009 09:35:43 -0700
Subject: [antlr-interest] AST -> text
Message-ID: <c39fc6230911070835g6fb553ap37c4b0609043ae62@mail.gmail.com>

I'm interested in parsing a stream into an AST, then manipulating the AST by
removing, adding, or replacing nodes.  When replacing or adding nodes, I was
plannig
on creating the new or replacement nodes by passing a replacement stream
through an
appropriate parsing routines and then replacing or adding the generated AST
to the
original AST.

With the modified AST, I'd like to be able to extract the text stream that
reflects
the manipluated streams. Since I'm forming the AST with multiple streams
through
the addition or replacement of nodes generated with distinct streams and
parsing
runs, token streams will be referencing different source streams.  I'm
assuming
that token streams property reference their source streams and so by taking
this
approach, I'm essentially using the AST to reference slices of text from
varous
streams, so generating a text stream seems feasible enough.  Though, I
haven't
figured out how to do this or if the functionality was actually present in
antlr
at this point.

If it is, can someone offer a few pointers to help me get started?

If not, can anyone offer some alternatives?  I suppose I chose this approach
because
I was going to use the nodes of the AST elsewhere within my program and I
didn't
want to re-parse an entire file because it would be slower and it would
sever any
references to the AST nodes that I'm referencing.  It is of course possible
to
add an intermediate layer so that the rest of the code references something
that
"looks up" the correct node, though it adds a substantial level of
complexity that
I can avoid if I take the node manipulation route.

Also, assuming that the manipulation of the AST and extraction of its text
is feasible,
I suspect that the primary issue that I will encounter is propertly
associating hidden
channel data with inserted, removed, and/or replaced elements. For example,
if the
AST represented a c source file and a particular node that was being
replaced
represented a function (the definition, arguments, and body), I'd have to
decide
whether or not to replace the comments before the function, or to leave them
to
preceed the replacement text.  Does anyone have any suggestions to help me
get started with property identifying and manipulation the surrounding
hidden
channel data?

Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091107/8d7e934e/attachment.html 

From smcfarlin at ocsnet.net  Sun Nov  8 00:44:24 2009
From: smcfarlin at ocsnet.net (Steve McFarlin)
Date: Sun, 8 Nov 2009 00:44:24 -0800
Subject: [antlr-interest] Java Target Generation Problem
Message-ID: <F559B81A-4C32-4551-BE10-690343C5DE61@ocsnet.net>

Hello,

ANTLR Version 3.2
Error -  Cannot generate the grammar because:
error(100) : ... : syntax error: antlr: ... : unexpected token: / 
************* comment 2 *********/

This is a very minor issue you could assign a priority of -1 to.  
Placing block comments in a grammar file with nothing between them  
will cause a generation error. e.g.


prog	:	test;

/******
  comment 1
******/

/*********
  comment 2
*********/

test	:	'a' ;



Steve McFarlin



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091108/a026dbbd/attachment.html 

From parrt at cs.usfca.edu  Sun Nov  8 09:05:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 09:05:37 -0800
Subject: [antlr-interest] Java Target Generation Problem
In-Reply-To: <F559B81A-4C32-4551-BE10-690343C5DE61@ocsnet.net>
References: <F559B81A-4C32-4551-BE10-690343C5DE61@ocsnet.net>
Message-ID: <8F8579FE-D57C-4FBC-9539-7C5C0250B2FB@cs.usfca.edu>

/** */ is a javadoc comment and only allowed on rules and grammar  
headers.
T
On Nov 8, 2009, at 12:44 AM, Steve McFarlin wrote:

> Hello,
>
> ANTLR Version 3.2
> Error -  Cannot generate the grammar because:
> error(100) : ... : syntax error: antlr: ... : unexpected token: / 
> ************* comment 2 *********/
>
> This is a very minor issue you could assign a priority of -1 to.  
> Placing block comments in a grammar file with nothing between them  
> will cause a generation error. e.g.
>
>
> prog	:	test;
>
> /******
>  comment 1
> ******/
>
> /*********
>  comment 2
> *********/
>
> test	:	'a' ;
>
>
>
> Steve McFarlin
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091108/5d9705eb/attachment.html 

From jimi at temporal-wave.com  Sun Nov  8 09:18:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 08 Nov 2009 09:18:34 -0800
Subject: [antlr-interest] Java Target Generation Problem
In-Reply-To: <F559B81A-4C32-4551-BE10-690343C5DE61@ocsnet.net>
Message-ID: <f504870d18138b4b834551a56a381f5b@temporal-wave.com>

Actually it is because it thinks it is a documentation comment like Javadoc and you can only have one. The new parsres we are working on will give better error messages about such things.

 

If you used:

/* *****************

 

Then you won't get the issue - the lexer looks for /** at the comment start.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Steve McFarlin
Sent: Sunday, November 08, 2009 12:44 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Java Target Generation Problem

 

Hello,

 

ANTLR Version 3.2

Error -  Cannot generate the grammar because:

error(100) : ... : syntax error: antlr: ... : unexpected token: /************* comment 2 *********/

 

This is a very minor issue you could assign a priority of -1 to. Placing block comments in a grammar file with nothing between them will cause a generation error. e.g.

 

 

prog   :           test;

 

/******

 comment 1

******/

 

/*********

 comment 2

*********/

 

test     :           'a' ;

 

 

 

Steve McFarlin

 

 

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091108/10a6b9bf/attachment.html 

From parrt at cs.usfca.edu  Sun Nov  8 13:18:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 13:18:42 -0800
Subject: [antlr-interest] ST v4 notes page as I work on it
Message-ID: <EFD58133-59E9-40D2-BFCE-6DE71875FB63@cs.usfca.edu>

Hiya. If you want to follow along (to complain or otherwise),  there's  
the page I'm using to track things to do and the differences I noticed:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

Ter

From michael.bedward at gmail.com  Sun Nov  8 22:34:38 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 9 Nov 2009 17:34:38 +1100
Subject: [antlr-interest] tree rewriting - change not propagating upwards
Message-ID: <e24c4c270911082234q68b50d2cm3d62e877fede657b@mail.gmail.com>

Hi folks,

I have a grammar to rewrite an AST, most of which works wonderfully
well. But one bit has had me pulling what remains of my hair out...

The relevant excerpts are:

expr         : ^(FUNC_CALL id=ID expr_list)
                  -> {isPosFunc($id.text)}?
IMAGE_POS_LOOKUP[getProxyVar($id.text)]
                  -> {isInfoFunc($id.text)}?
IMAGE_INFO_LOOKUP[getProxyVar($id.text)]
                  -> ^(FUNC_CALL ID expr_list)

                | var

                |  ...other stuff...
                ;

expr_list    : ^(EXPR_LIST expr*)
                ;

var             :ID
                  -> {isPosVar($ID.text)}? POS_VAR[$ID.text]
                  -> {isImageVar($ID.text)}? IMAGE_VAR[$ID.text]
                  -> {isLocalVar($ID.text)}? LOCAL_VAR[$ID.text]
                  -> {isJiffleConstant($ID.text)}? CONSTANT[$ID.text]
                  -> NON_LOCAL_VAR[$ID.text]
                ;

The "var" rule categorizes an ID token, using some helper methods, and
rewrites it as a specific token type.  This works fine for most
expressions but doesn't seem to work when the expression (expr) is an
element in an expression list (expr_list) used with function calls.

When I follow the generated Java code in the debugger the rewriting
from ID to CONSTANT (for example) works. When the parser moves back up
to the expr_list rule the rewritten token is still visible. However,
when I get back to the FUNC_CALL branch of the expr rule the rewritten
token has been lost and there is just the original ID token type.

I know this will be something stupid and obvious and trivial but I
just can't spot it. Any tips would be much appreciated.

I'm using ANTLR 3.2, Java target.

cheers
Michael

From nandows at gmail.com  Mon Nov  9 09:45:23 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Mon, 9 Nov 2009 15:45:23 -0200
Subject: [antlr-interest] help antlr.jar
Message-ID: <92838bb30911090945i6f064016g3997285ac6d2624e@mail.gmail.com>

Hello people,
       this is my first time with antlr and I am trying to use this tool.

My firt step was the example of the book "The definitive antlr reference".

Folows below the grammar of pag 29.

T.g

grammar T;
/** Match things like "call foo;" */
r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
ID: 'a'..'z' + ;
WS: (' ' |'\n' |'\r' )+ {$channel=HIDDEN;} ; // ignore whitespace


The antlr generate this files:

 TLexer.java  T__.g   T.tokens   TParser.java

Very good!

The next page , shows the Test.java for test it.


folows below


public class Test {
public static void main(String[] args) throws Exception {

// create a CharStream that reads from standard input
ANTLRInputStream input = new ANTLRInputStream(System.in);

// create a lexer that feeds off of input CharStream
TLexer lexer = new TLexer(input);

// create a buffer of tokens pulled from the lexer
CommonTokenStream tokens = new CommonTokenStream(lexer);

// create a parser that feeds off the tokens buffer
TParser parser = new TParser(tokens);

// begin parsing at rule r
parser.r();
}
}



I try to run this Test with some versions : 3.2 ... 3.1

and in this line:

ANTLRInputStream input = new ANTLRInputStream(System.in);

always occurs a infinite looping.


1)  Can someone help me with this problem?


Best Regards
Fernando Freitas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091109/94a4d1df/attachment.html 

From jimi at temporal-wave.com  Mon Nov  9 10:15:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 09 Nov 2009 10:15:17 -0800
Subject: [antlr-interest] help antlr.jar
In-Reply-To: <92838bb30911090945i6f064016g3997285ac6d2624e@mail.gmail.com>
Message-ID: <c7dacfb7d631ad499899040e784331c6@temporal-wave.com>

It's not an infinite loop, it is waiting for you to type something in and press CTRL-D or CTLR-Z. The input stream is System.in.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Fernando Freitas
Sent: Monday, November 09, 2009 9:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] help antlr.jar

 

Hello people, 
       this is my first time with antlr and I am trying to use this tool.

My firt step was the example of the book "The definitive antlr reference".

Folows below the grammar of pag 29.

T.g  

grammar T;
/** Match things like "call foo;" */
r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
ID: 'a'..'z' + ;
WS: (' ' |'\n' |'\r' )+ {$channel=HIDDEN;} ; // ignore whitespace


The antlr generate this files:

 TLexer.java  T__.g   T.tokens   TParser.java

Very good!

The next page , shows the Test.java for test it. 


folows below


public class Test {
public static void main(String[] args) throws Exception {

// create a CharStream that reads from standard input
ANTLRInputStream input = new ANTLRInputStream(System.in);

// create a lexer that feeds off of input CharStream
TLexer lexer = new TLexer(input);

// create a buffer of tokens pulled from the lexer
CommonTokenStream tokens = new CommonTokenStream(lexer);

// create a parser that feeds off the tokens buffer
TParser parser = new TParser(tokens);

// begin parsing at rule r
parser.r();
}
}



I try to run this Test with some versions : 3.2 ... 3.1   

and in this line:  

ANTLRInputStream input = new ANTLRInputStream(System.in);

always occurs a infinite looping.


1)  Can someone help me with this problem? 


Best Regards
Fernando Freitas













-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091109/038b6fdb/attachment.html 

From nandows at gmail.com  Mon Nov  9 10:33:03 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Mon, 9 Nov 2009 16:33:03 -0200
Subject: [antlr-interest] help antlr.jar
In-Reply-To: <c7dacfb7d631ad499899040e784331c6@temporal-wave.com>
References: <92838bb30911090945i6f064016g3997285ac6d2624e@mail.gmail.com>
	<c7dacfb7d631ad499899040e784331c6@temporal-wave.com>
Message-ID: <92838bb30911091033j236ba6bn4e7af2b30d667681@mail.gmail.com>

Thanks Jim.

really it's not an infinite loop.

sorry!


Regards

Fernando

2009/11/9 Jim Idle <jimi at temporal-wave.com>

>  It?s not an infinite loop, it is waiting for you to type something in and
> press CTRL-D or CTLR-Z. The input stream is System.in.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Fernando Freitas
> *Sent:* Monday, November 09, 2009 9:45 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] help antlr.jar
>
>
>
> Hello people,
>        this is my first time with antlr and I am trying to use this tool.
>
> My firt step was the example of the book "The definitive antlr reference".
>
> Folows below the grammar of pag 29.
>
> T.g
>
> grammar T;
> /** Match things like "call foo;" */
> r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
> ID: 'a'..'z' + ;
> WS: (' ' |'\n' |'\r' )+ {$channel=HIDDEN;} ; // ignore whitespace
>
>
> The antlr generate this files:
>
>  TLexer.java  T__.g   T.tokens   TParser.java
>
> Very good!
>
> The next page , shows the Test.java for test it.
>
>
> folows below
>
>
> public class Test {
> public static void main(String[] args) throws Exception {
>
> // create a CharStream that reads from standard input
> ANTLRInputStream input = new ANTLRInputStream(System.in);
>
> // create a lexer that feeds off of input CharStream
> TLexer lexer = new TLexer(input);
>
> // create a buffer of tokens pulled from the lexer
> CommonTokenStream tokens = new CommonTokenStream(lexer);
>
> // create a parser that feeds off the tokens buffer
> TParser parser = new TParser(tokens);
>
> // begin parsing at rule r
> parser.r();
> }
> }
>
>
>
> I try to run this Test with some versions : 3.2 ... 3.1
>
> and in this line:
>
> ANTLRInputStream input = new ANTLRInputStream(System.in);
>
> always occurs a infinite looping.
>
>
> 1)  Can someone help me with this problem?
>
>
> Best Regards
> Fernando Freitas
>
>
>
>
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091109/e3400fbd/attachment.html 

From kaleb.pederson at gmail.com  Mon Nov  9 13:55:23 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Mon, 9 Nov 2009 13:55:23 -0800
Subject: [antlr-interest] Bug: CommonTreeNodeStream not passing adaptor to
	TreeIterator
Message-ID: <f14c01620911091355s553f5050s30ad3ce5a30ad4b9@mail.gmail.com>

The CommonTreeNodeStream constructor fails to pass 'adaptor' into the
TreeIterator:

	public CommonTreeNodeStream(TreeAdaptor adaptor, Object tree) {
        super(adaptor.create(Token.EOF, "EOF")); // set EOF
		this.root = tree;
		this.adaptor = adaptor;
        it = new TreeIterator(root);
        it.eof = this.eof; // make sure tree iterator returns the EOF we want
	}

This results in the following constructor being called:

    public TreeIterator(Object tree) {
        this(new CommonTreeAdaptor(),tree);
    }

Which results in the UP, DOWN, and EOF tokens not being of the correct
class as created by the other TreeIterator constructor:

    public TreeIterator(TreeAdaptor adaptor, Object tree) {
        this.adaptor = adaptor;
        this.tree = tree;
        this.root = tree;
        nodes = new FastQueue();
        down = adaptor.create(Token.DOWN, "DOWN");
        up = adaptor.create(Token.UP, "UP");
        eof = adaptor.create(Token.EOF, "EOF");
    }

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From parrt at cs.usfca.edu  Mon Nov  9 14:00:32 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 14:00:32 -0800
Subject: [antlr-interest] Bug: CommonTreeNodeStream not passing adaptor
	to TreeIterator
In-Reply-To: <f14c01620911091355s553f5050s30ad3ce5a30ad4b9@mail.gmail.com>
References: <f14c01620911091355s553f5050s30ad3ce5a30ad4b9@mail.gmail.com>
Message-ID: <AB8ED938-7D19-42DF-A611-2E02256A08F0@cs.usfca.edu>

added bug

http://www.antlr.org/jira/browse/ANTLR-413

Ter


From kaleb.pederson at gmail.com  Mon Nov  9 14:28:58 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Mon, 9 Nov 2009 14:28:58 -0800
Subject: [antlr-interest] Bug: CommonTreeNodeStream not passing adaptor
	to TreeIterator
In-Reply-To: <AB8ED938-7D19-42DF-A611-2E02256A08F0@cs.usfca.edu>
References: <f14c01620911091355s553f5050s30ad3ce5a30ad4b9@mail.gmail.com>
	<AB8ED938-7D19-42DF-A611-2E02256A08F0@cs.usfca.edu>
Message-ID: <f14c01620911091428m3b06fb36sf6fae7efd088dbaa@mail.gmail.com>

On Mon, Nov 9, 2009 at 2:00 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> added bug
>
> http://www.antlr.org/jira/browse/ANTLR-413
>
> Ter

Thanks Ter,

In case it isn't obvious to anybody interested, the workaround is to
create your own subclass of CommonTreeNodeStream that sets the tree
iterator after calling the superclass constructor:

        it = new TreeIterator(adaptor, root);
        it.eof = this.eof;

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From michael.bedward at gmail.com  Mon Nov  9 19:13:44 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 10 Nov 2009 14:13:44 +1100
Subject: [antlr-interest] tree rewriting - change not propagating upwards
In-Reply-To: <e24c4c270911082234q68b50d2cm3d62e877fede657b@mail.gmail.com>
References: <e24c4c270911082234q68b50d2cm3d62e877fede657b@mail.gmail.com>
Message-ID: <e24c4c270911091913m38682b56o316a6d1a65b0d3e4@mail.gmail.com>

> I know this will be something stupid and obvious and trivial
>

And (sigh) it was...

The problem was not in the grammar, nor in how ANTLR processed it, but
in the way I was using the re-written AST.

As Douglas Adams said: you live and learn; at any rate you live...

Michael

From claude.moulin at hds.utc.fr  Tue Nov 10 01:47:21 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Tue, 10 Nov 2009 10:47:21 +0100
Subject: [antlr-interest] Global Dynamic Scope
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012AC22E@xena.ad.utc>

Hello,

 

I get a strange error using global scope. I use antlr 3.2.

In a tree grammar I define a global scope << pilep >> with several
attributes including one called binit.

 

I get several  times strange error messages like: 

unknown dynamically-scoped attribute for scope pilep: binit

It seems that sometimes antlr doesn't succeed to translate $pilep::binit
into ((pilep_scope)pilep_stack.peek()).binit 

As it does with other scope attributes.

I don't understand the reason.

 

Any idea ?

Thanks,

Claude

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/00e1207f/attachment.html 

From digi+antlr-interest at google.com  Tue Nov 10 06:01:14 2009
From: digi+antlr-interest at google.com (Chris DiGiano)
Date: Tue, 10 Nov 2009 07:01:14 -0700
Subject: [antlr-interest] tree pattern matching and list rewriting
Message-ID: <b9dc5a050911100601ue38e030pb9630cc01f224b6b@mail.gmail.com>

I think I may have uncovered some problems with the new 3.2 Tree
Pattern Matching and rewriting a matching list of AST nodes. I get
errors when I try to:
1. Pair: match against 2 nodes in sequence and return a new parent
node that has the matching nodes as children (error: Can't set single
child to a list)
2. Duplicate: match a node and return a sequence of two nodes
containing the original node and a duplicate (error: Can't set single
child to a list)
3. Delete: match a node and remove it from the AST altogether by
returning nothing (NullPointerException)

To illustrate these problems I extended the scalar-vector
multiplication example found in the new Language Implementation
Patterns book (a wonderful source of ideas, by the way!). I created
three grammars?Pair.g, Dup.g, and Del.g?for each of the above cases.
Below are the "bottomup" rules in each. (Complete grammars and stack
traces are at the very end this message.)

pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
    -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));

dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
    -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
{adaptor.dupTree($e)});

del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
    -> ;

Unless there's something wrong with my grammars, I would claim these 3
kinds of Tree Pattern Matching operations ought to work, especially if
Tree Pattern Matching is being promoted as a kind of AWK replacement.

I was able to work around the pairing problem by patching
TreeVisitor.visit so that the invariant of the for loop continuously
recomputes the child count:
for (int i=0; i<adaptor.getChildCount(t); i++)
But I'm not familiar enough with the source to know how to neatly
solve all three problems.

Is anyone else having trouble with list rewriting? Any better workaround?

Chris

----

tree grammar Pair;
options {
    tokenVocab=VecMath;      // use tokens from VecMath.g
    ASTLabelType=CommonTree; // we're using CommonTree nodes
    output=AST;              // build new ASTs from input AST
    filter=true;             // tree pattern matching mode
    backtrack=true;          // allow backtracking if it's needed
}

bottomup
    :  pair
    ;

pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
    -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));

/*
Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
(= x (* 4 (VEC 0 (* 5 0) 3))) -> (PAIR (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6))
Exception in thread "main" java.lang.IllegalArgumentException: Can't
set single child to a list
  at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
  at org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:225)
  at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
  at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
  at PairTest.main(PairTest.java:33)
 */

----

tree grammar Dup;
options {
    tokenVocab=VecMath;      // use tokens from VecMath.g
    ASTLabelType=CommonTree; // we're using CommonTree nodes
    output=AST;              // build new ASTs from input AST
    filter=true;             // tree pattern matching mode
    backtrack=true;          // allow backtracking if it's needed
}

bottomup
    :  dup
    ;

dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
    -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
{adaptor.dupTree($e)});

/*
Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
(= x (* 4 (VEC 0 (* 5 0) 3))) -> (_= x (* 4 (VEC 0 (* 5 0) 3))) (_= x2
(* 4 (VEC 0 (* 5 0) 3)))
Exception in thread "main" java.lang.IllegalArgumentException: Can't
set single child to a list
  at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
  at org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:225)
  at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
  at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
  at DupTest.main(DupTest.java:33)
 */

----

tree grammar Del;
options {
    tokenVocab=VecMath;      // use tokens from VecMath.g
    ASTLabelType=CommonTree; // we're using CommonTree nodes
    output=AST;              // build new ASTs from input AST
    filter=true;             // tree pattern matching mode
    backtrack=true;          // allow backtracking if it's needed
}

bottomup
    :  del
    ;

del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
    -> ;

/*
Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
Exception in thread "main" java.lang.NullPointerException
  at org.antlr.runtime.tree.BaseTree.replaceChildren(BaseTree.java:183)
  at org.antlr.runtime.tree.CommonTreeAdaptor.replaceChildren(CommonTreeAdaptor.java:165)
  at org.antlr.runtime.tree.CommonTreeNodeStream.replaceChildren(CommonTreeNodeStream.java:142)
  at Del.del(Del.java:188)
  at Del.bottomup(Del.java:83)
  at Del.bottomup(Del.java:1)
  at org.antlr.runtime.tree.TreeRewriter$3.rule(TreeRewriter.java:112)
  at org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:61)
  at org.antlr.runtime.tree.TreeRewriter.applyRepeatedly(TreeRewriter.java:79)
  at org.antlr.runtime.tree.TreeRewriter$1.post(TreeRewriter.java:93)
  at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:39)
  at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:33)
  at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
  at DelTest.main(DelTest.java:33)
 */

From bios.bob.frankel at gmail.com  Tue Nov 10 08:35:05 2009
From: bios.bob.frankel at gmail.com (Bob Frankel)
Date: Tue, 10 Nov 2009 08:35:05 -0800
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
Message-ID: <4AF99639.5030103@gmail.com>

following idioms i've seen posted elsewhere, i've created a MyToken 
class that inherits from CommonToken; my Lexer then overrides Token 
Lexer.emit(), at which time i create instances of MyToken....

things work fine, until the parser encounters a syntactic error....  
from what i can tell, the parser inserts an "error" token of type 
CommonToken; this then leads to a class cast exception in the 
surrounding parser rule when attempting to assign a CommonToken value 
through a generated (MyToken) cast....

i've also noticed a similar problem when my grammar explictly includes 
the special EOF token; again, the token created here is of type 
CommonToken, which leads to a class cast exception when later assigned 
through a (MyToken) cast inside the generated parser class....

is there some other method i should be overriding beyond Token 
Lexer.emit()???

thanks....


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/0bca1fc3/attachment.html 

From jimi at temporal-wave.com  Tue Nov 10 08:48:07 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Nov 2009 08:48:07 -0800
Subject: [antlr-interest] Global Dynamic Scope
In-Reply-To: <3402BD9F2C1434438EF1F319BE558FBB012AC22E@xena.ad.utc>
Message-ID: <8b02470df5d1bd499db21e960899ce21@temporal-wave.com>

Do you have a small(ish) reproducible example?

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Claude Moulin
Sent: Tuesday, November 10, 2009 1:47 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Global Dynamic Scope

 

Hello,

 

I get a strange error using global scope. I use antlr 3.2.

In a tree grammar I define a global scope << pilep >> with several attributes including one called binit.

 

I get several  times strange error messages like: 

unknown dynamically-scoped attribute for scope pilep: binit

It seems that sometimes antlr doesn't succeed to translate $pilep::binit into ((pilep_scope)pilep_stack.peek()).binit 

As it does with other scope attributes.

I don't understand the reason.

 

Any idea ?

Thanks,

Claude

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/32646d7c/attachment.html 

From jimi at temporal-wave.com  Tue Nov 10 08:53:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Nov 2009 08:53:49 -0800
Subject: [antlr-interest] tree pattern matching and list rewriting
In-Reply-To: <b9dc5a050911100601ue38e030pb9630cc01f224b6b@mail.gmail.com>
Message-ID: <0ce14e563fafe040bb7e43a792ffde5f@temporal-wave.com>

Did you try using cardinality in your $e{n} references? Such as $e* $e+ etc? I have not tried that, but it is what my first attempt at typing in would have been ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Chris DiGiano
> Sent: Tuesday, November 10, 2009 6:01 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] tree pattern matching and list rewriting
> 
> I think I may have uncovered some problems with the new 3.2 Tree
> Pattern Matching and rewriting a matching list of AST nodes. I get
> errors when I try to:
> 1. Pair: match against 2 nodes in sequence and return a new parent
> node that has the matching nodes as children (error: Can't set single
> child to a list)
> 2. Duplicate: match a node and return a sequence of two nodes
> containing the original node and a duplicate (error: Can't set single
> child to a list)
> 3. Delete: match a node and remove it from the AST altogether by
> returning nothing (NullPointerException)
> 
> To illustrate these problems I extended the scalar-vector
> multiplication example found in the new Language Implementation
> Patterns book (a wonderful source of ideas, by the way!). I created
> three grammars-Pair.g, Dup.g, and Del.g-for each of the above cases.
> Below are the "bottomup" rules in each. (Complete grammars and stack
> traces are at the very end this message.)
> 
> pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
>     -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));
> 
> dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
>     -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
> {adaptor.dupTree($e)});
> 
> del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
>     -> ;
> 
> Unless there's something wrong with my grammars, I would claim these 3
> kinds of Tree Pattern Matching operations ought to work, especially if
> Tree Pattern Matching is being promoted as a kind of AWK replacement.
> 
> I was able to work around the pairing problem by patching
> TreeVisitor.visit so that the invariant of the for loop continuously
> recomputes the child count:
> for (int i=0; i<adaptor.getChildCount(t); i++)
> But I'm not familiar enough with the source to know how to neatly
> solve all three problems.
> 
> Is anyone else having trouble with list rewriting? Any better
> workaround?
> 
> Chris
> 
> ----
> 
> tree grammar Pair;
> options {
>     tokenVocab=VecMath;      // use tokens from VecMath.g
>     ASTLabelType=CommonTree; // we're using CommonTree nodes
>     output=AST;              // build new ASTs from input AST
>     filter=true;             // tree pattern matching mode
>     backtrack=true;          // allow backtracking if it's needed
> }
> 
> bottomup
>     :  pair
>     ;
> 
> pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
>     -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));
> 
> /*
> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
> (= x (* 4 (VEC 0 (* 5 0) 3))) -> (PAIR (= x (* 4 (VEC 0 (* 5 0) 3))) (=
> y 6))
> Exception in thread "main" java.lang.IllegalArgumentException: Can't
> set single child to a list
>   at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
>   at
> org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:22
> 5)
>   at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
>   at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>   at PairTest.main(PairTest.java:33)
>  */
> 
> ----
> 
> tree grammar Dup;
> options {
>     tokenVocab=VecMath;      // use tokens from VecMath.g
>     ASTLabelType=CommonTree; // we're using CommonTree nodes
>     output=AST;              // build new ASTs from input AST
>     filter=true;             // tree pattern matching mode
>     backtrack=true;          // allow backtracking if it's needed
> }
> 
> bottomup
>     :  dup
>     ;
> 
> dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
>     -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
> {adaptor.dupTree($e)});
> 
> /*
> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
> (= x (* 4 (VEC 0 (* 5 0) 3))) -> (_= x (* 4 (VEC 0 (* 5 0) 3))) (_= x2
> (* 4 (VEC 0 (* 5 0) 3)))
> Exception in thread "main" java.lang.IllegalArgumentException: Can't
> set single child to a list
>   at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
>   at
> org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:22
> 5)
>   at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
>   at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>   at DupTest.main(DupTest.java:33)
>  */
> 
> ----
> 
> tree grammar Del;
> options {
>     tokenVocab=VecMath;      // use tokens from VecMath.g
>     ASTLabelType=CommonTree; // we're using CommonTree nodes
>     output=AST;              // build new ASTs from input AST
>     filter=true;             // tree pattern matching mode
>     backtrack=true;          // allow backtracking if it's needed
> }
> 
> bottomup
>     :  del
>     ;
> 
> del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
>     -> ;
> 
> /*
> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
> Exception in thread "main" java.lang.NullPointerException
>   at org.antlr.runtime.tree.BaseTree.replaceChildren(BaseTree.java:183)
>   at
> org.antlr.runtime.tree.CommonTreeAdaptor.replaceChildren(CommonTreeAdap
> tor.java:165)
>   at
> org.antlr.runtime.tree.CommonTreeNodeStream.replaceChildren(CommonTreeN
> odeStream.java:142)
>   at Del.del(Del.java:188)
>   at Del.bottomup(Del.java:83)
>   at Del.bottomup(Del.java:1)
>   at org.antlr.runtime.tree.TreeRewriter$3.rule(TreeRewriter.java:112)
>   at
> org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:61)
>   at
> org.antlr.runtime.tree.TreeRewriter.applyRepeatedly(TreeRewriter.java:7
> 9)
>   at org.antlr.runtime.tree.TreeRewriter$1.post(TreeRewriter.java:93)
>   at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:39)
>   at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:33)
>   at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>   at DelTest.main(DelTest.java:33)
>  */
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Tue Nov 10 08:55:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Nov 2009 08:55:52 -0800
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AF99639.5030103@gmail.com>
Message-ID: <101097b65edff640bd64e487d3448790@temporal-wave.com>

Do you have:

 

ASTLabelType=MyToken;

 

? I am thinking that you do have that and that is why you are getting the cast problems right? 

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bob Frankel
Sent: Tuesday, November 10, 2009 8:35 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens

 

following idioms i've seen posted elsewhere, i've created a MyToken class that inherits from CommonToken; my Lexer then overrides Token Lexer.emit(), at which time i create instances of MyToken....

things work fine, until the parser encounters a syntactic error....  from what i can tell, the parser inserts an "error" token of type CommonToken; this then leads to a class cast exception in the surrounding parser rule when attempting to assign a CommonToken value through a generated (MyToken) cast....

i've also noticed a similar problem when my grammar explictly includes the special EOF token; again, the token created here is of type CommonToken, which leads to a class cast exception when later assigned through a (MyToken) cast inside the generated parser class....

is there some other method i should be overriding beyond Token Lexer.emit()???

thanks....





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/5947ec1d/attachment.html 

From digi+antlr-interest at google.com  Tue Nov 10 09:33:07 2009
From: digi+antlr-interest at google.com (Chris DiGiano)
Date: Tue, 10 Nov 2009 10:33:07 -0700
Subject: [antlr-interest] tree pattern matching and list rewriting
In-Reply-To: <0ce14e563fafe040bb7e43a792ffde5f@temporal-wave.com>
References: <b9dc5a050911100601ue38e030pb9630cc01f224b6b@mail.gmail.com> 
	<0ce14e563fafe040bb7e43a792ffde5f@temporal-wave.com>
Message-ID: <b9dc5a050911100933u5d00f602g61fe30d8e1613ea3@mail.gmail.com>

I should have mentioned that I traced the errors to when ANTLR is
trying to replace children to affect the rewrite. The replacement
nodes all look well-formed; it's just the mechanics of actually
performing the replacement that seems broken.

Chris

On Tue, Nov 10, 2009 at 9:53 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> Did you try using cardinality in your $e{n} references? Such as $e* $e+ etc? I have not tried that, but it is what my first attempt at typing in would have been ;-)
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Chris DiGiano
>> Sent: Tuesday, November 10, 2009 6:01 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] tree pattern matching and list rewriting
>>
>> I think I may have uncovered some problems with the new 3.2 Tree
>> Pattern Matching and rewriting a matching list of AST nodes. I get
>> errors when I try to:
>> 1. Pair: match against 2 nodes in sequence and return a new parent
>> node that has the matching nodes as children (error: Can't set single
>> child to a list)
>> 2. Duplicate: match a node and return a sequence of two nodes
>> containing the original node and a duplicate (error: Can't set single
>> child to a list)
>> 3. Delete: match a node and remove it from the AST altogether by
>> returning nothing (NullPointerException)
>>
>> To illustrate these problems I extended the scalar-vector
>> multiplication example found in the new Language Implementation
>> Patterns book (a wonderful source of ideas, by the way!). I created
>> three grammars-Pair.g, Dup.g, and Del.g-for each of the above cases.
>> Below are the "bottomup" rules in each. (Complete grammars and stack
>> traces are at the very end this message.)
>>
>> pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
>> ? ? -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));
>>
>> dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
>> ? ? -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
>> {adaptor.dupTree($e)});
>>
>> del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
>> ? ? -> ;
>>
>> Unless there's something wrong with my grammars, I would claim these 3
>> kinds of Tree Pattern Matching operations ought to work, especially if
>> Tree Pattern Matching is being promoted as a kind of AWK replacement.
>>
>> I was able to work around the pairing problem by patching
>> TreeVisitor.visit so that the invariant of the for loop continuously
>> recomputes the child count:
>> for (int i=0; i<adaptor.getChildCount(t); i++)
>> But I'm not familiar enough with the source to know how to neatly
>> solve all three problems.
>>
>> Is anyone else having trouble with list rewriting? Any better
>> workaround?
>>
>> Chris
>>
>> ----
>>
>> tree grammar Pair;
>> options {
>> ? ? tokenVocab=VecMath; ? ? ?// use tokens from VecMath.g
>> ? ? ASTLabelType=CommonTree; // we're using CommonTree nodes
>> ? ? output=AST; ? ? ? ? ? ? ?// build new ASTs from input AST
>> ? ? filter=true; ? ? ? ? ? ? // tree pattern matching mode
>> ? ? backtrack=true; ? ? ? ? ?// allow backtracking if it's needed
>> }
>>
>> bottomup
>> ? ? : ?pair
>> ? ? ;
>>
>> pair: ^(ASSIGN id1=ID e1=.) ^(ASSIGN id2=ID e2=.)
>> ? ? -> ^(PAIR ^(ASSIGN $id1 $e1) ^(ASSIGN $id2 $e2));
>>
>> /*
>> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
>> (= x (* 4 (VEC 0 (* 5 0) 3))) -> (PAIR (= x (* 4 (VEC 0 (* 5 0) 3))) (=
>> y 6))
>> Exception in thread "main" java.lang.IllegalArgumentException: Can't
>> set single child to a list
>> ? at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
>> ? at
>> org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:22
>> 5)
>> ? at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
>> ? at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>> ? at PairTest.main(PairTest.java:33)
>> ?*/
>>
>> ----
>>
>> tree grammar Dup;
>> options {
>> ? ? tokenVocab=VecMath; ? ? ?// use tokens from VecMath.g
>> ? ? ASTLabelType=CommonTree; // we're using CommonTree nodes
>> ? ? output=AST; ? ? ? ? ? ? ?// build new ASTs from input AST
>> ? ? filter=true; ? ? ? ? ? ? // tree pattern matching mode
>> ? ? backtrack=true; ? ? ? ? ?// allow backtracking if it's needed
>> }
>>
>> bottomup
>> ? ? : ?dup
>> ? ? ;
>>
>> dup: ^(ASSIGN ID e=.) {$ASSIGN.text.equals("=")}?
>> ? ? -> ^(ASSIGN["_="] ID $e) ^(ASSIGN["_="] ID[$ID.text + "2"]
>> {adaptor.dupTree($e)});
>>
>> /*
>> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
>> (= x (* 4 (VEC 0 (* 5 0) 3))) -> (_= x (* 4 (VEC 0 (* 5 0) 3))) (_= x2
>> (* 4 (VEC 0 (* 5 0) 3)))
>> Exception in thread "main" java.lang.IllegalArgumentException: Can't
>> set single child to a list
>> ? at org.antlr.runtime.tree.BaseTree.setChild(BaseTree.java:144)
>> ? at
>> org.antlr.runtime.tree.BaseTreeAdaptor.setChild(BaseTreeAdaptor.java:22
>> 5)
>> ? at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:36)
>> ? at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>> ? at DupTest.main(DupTest.java:33)
>> ?*/
>>
>> ----
>>
>> tree grammar Del;
>> options {
>> ? ? tokenVocab=VecMath; ? ? ?// use tokens from VecMath.g
>> ? ? ASTLabelType=CommonTree; // we're using CommonTree nodes
>> ? ? output=AST; ? ? ? ? ? ? ?// build new ASTs from input AST
>> ? ? filter=true; ? ? ? ? ? ? // tree pattern matching mode
>> ? ? backtrack=true; ? ? ? ? ?// allow backtracking if it's needed
>> }
>>
>> bottomup
>> ? ? : ?del
>> ? ? ;
>>
>> del: ^(ASSIGN ID .) {$ID.text.equals("x")}?
>> ? ? -> ;
>>
>> /*
>> Original tree: (= x (* 4 (VEC 0 (* 5 0) 3))) (= y 6)
>> Exception in thread "main" java.lang.NullPointerException
>> ? at org.antlr.runtime.tree.BaseTree.replaceChildren(BaseTree.java:183)
>> ? at
>> org.antlr.runtime.tree.CommonTreeAdaptor.replaceChildren(CommonTreeAdap
>> tor.java:165)
>> ? at
>> org.antlr.runtime.tree.CommonTreeNodeStream.replaceChildren(CommonTreeN
>> odeStream.java:142)
>> ? at Del.del(Del.java:188)
>> ? at Del.bottomup(Del.java:83)
>> ? at Del.bottomup(Del.java:1)
>> ? at org.antlr.runtime.tree.TreeRewriter$3.rule(TreeRewriter.java:112)
>> ? at
>> org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:61)
>> ? at
>> org.antlr.runtime.tree.TreeRewriter.applyRepeatedly(TreeRewriter.java:7
>> 9)
>> ? at org.antlr.runtime.tree.TreeRewriter$1.post(TreeRewriter.java:93)
>> ? at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:39)
>> ? at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:33)
>> ? at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:95)
>> ? at DelTest.main(DelTest.java:33)
>> ?*/
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From digi+antlr-interest at google.com  Tue Nov 10 09:56:32 2009
From: digi+antlr-interest at google.com (Chris DiGiano)
Date: Tue, 10 Nov 2009 10:56:32 -0700
Subject: [antlr-interest] ANTLR Java.g and ver.jar
In-Reply-To: <033e01ca5dd3$646f0340$2d4d09c0$@net>
References: <033e01ca5dd3$646f0340$2d4d09c0$@net>
Message-ID: <b9dc5a050911100956k2d04c758qb53a1188c9dde1a4@mail.gmail.com>

Have you looked at JSObjectizer's Java grammar? It's working well for my team:
http://antlr.org/grammar/1207932239307/Java1_5Grammars

Chris

On Wed, Nov 4, 2009 at 9:49 PM, Richard Steiger
<rsteiger at ensemblesoft.net> wrote:
> Hi Zachary,
>
>
>
> Did you get any useful responses to
> http://www.antlr.org/pipermail/antlr-interest/2009-June/034920.html?? I ran
> into the same wall a few months back, and shortly thereafter had to shift my
> focus elsewhere.? I?m now just getting back to attempting to find a clean,
> correct, and complete grammar definition for Java5.? I?d be happy to share
> insights, discoveries, input from others, etc.
>
>
>
> Cheers,
>
>
>
> Richard Steiger
>
> Founder & CTO, Ensemble Software Systems, Inc.
>
> email: rsteiger at ensemblesoft.net
>
> ph: 425.822.7423
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at mirality.co.nz  Tue Nov 10 11:40:22 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 11 Nov 2009 08:40:22 +1300
Subject: [antlr-interest] Big grammar => static initializer/method size
 is exceeding the 65535 bytes limit
In-Reply-To: <e93b39f289f10748be44d97199da4173@temporal-wave.com>
References: <44277.17157.qm@web55904.mail.re3.yahoo.com>
	<e93b39f289f10748be44d97199da4173@temporal-wave.com>
Message-ID: <20091110194032.6259C341847B@www.antlr.org>

At 04:20 6/11/2009, Jim Idle wrote:
 >At the moment though [...] I am rewriting all the grammars
 >in v3 to be self hosted.

Didn't Sam Harwell already do that for the C# port?


From david-sarah at jacaranda.org  Tue Nov 10 11:45:59 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 10 Nov 2009 19:45:59 +0000
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AF99639.5030103@gmail.com>
References: <4AF99639.5030103@gmail.com>
Message-ID: <4AF9C2F7.7040700@jacaranda.org>

Bob Frankel wrote:
> following idioms i've seen posted elsewhere, i've created a MyToken
> class that inherits from CommonToken; my Lexer then overrides Token
> Lexer.emit(), at which time i create instances of MyToken....
> 
> things work fine, until the parser encounters a syntactic error.... 
> from what i can tell, the parser inserts an "error" token of type
> CommonToken; this then leads to a class cast exception in the
> surrounding parser rule when attempting to assign a CommonToken value
> through a generated (MyToken) cast....

There are two possible causes of this:

a) There was a bug in ANTLR up to version 3.1.3 where the generated code
   would sometimes create tokens using 'new CommonToken', even when the
   TokenLabelType option is set to MyToken. See the thread at
<http://www.antlr.org/pipermail/antlr-interest/2009-July/thread.html#35129>.

   I think this has been fixed in ANTLR 3.2 (although not in the way I
   suggested that would also have fixed point b) below).
   Note your token class will need to have the same constructors as
   CommonToken in order for the fix to work.

b) When the getMissingSymbol method of a parser inserts a token in order to
   recover from an error, the inserted token is of type CommonToken.
   Override it as follows (this implementation also fixes a different bug
   that can cause a NullPointerException):

@parser::members {
  /**
   * Work around an ANTLR bug that causes a NullPointerException when trying
   * to recover at the end of the input stream. Also ensure that inserted
   * tokens are of type MyToken.
   */
  @Override protected Object getMissingSymbol(IntStream input,
      RecognitionException re, int expectedTokenType, BitSet follow) {
    String tokenText = null;

    if (expectedTokenType == Token.EOF) {
      tokenText = "<missing EOF>";
    } else if (expectedTokenType >= 0 &&
               expectedTokenType < getTokenNames().length) {
      tokenText = "<missing " + getTokenNames()[expectedTokenType] + ">";
    } else {
      throw new Error("invalid expectedTokenType " + expectedTokenType);
    }

    MyToken t = new MyToken(expectedTokenType, tokenText);
    Token current = ((TokenStream) input).LT(1);
    if (current == null || current.getType() == Token.EOF) {
      current = ((TokenStream) input).LT(-1);
    }
    if (current != null) {
      // If there are any other position-related fields in your MyToken
      // class, set them here.
      t.setLine(current.getLine());
      t.setCharPositionInLine(current.getCharPositionInLine());
    }
    t.setChannel(DEFAULT_TOKEN_CHANNEL);

    return t;
  }
}

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/e37fd4fa/attachment.bin 

From david-sarah at jacaranda.org  Tue Nov 10 11:52:41 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 10 Nov 2009 19:52:41 +0000
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <101097b65edff640bd64e487d3448790@temporal-wave.com>
References: <101097b65edff640bd64e487d3448790@temporal-wave.com>
Message-ID: <4AF9C489.4070102@jacaranda.org>

Jim Idle wrote:
> Do you have:
> 
> ASTLabelType=MyToken;
> 
> ?

The option is called TokenLabelType; ASTLabelType is for overriding the
Tree subclass and isn't relevant here. Bob Frankel presumably had this
right, because the subject line mentions it.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091110/d32d7e88/attachment.bin 

From greyax at mail.ru  Tue Nov 10 12:27:48 2009
From: greyax at mail.ru (GreyAx)
Date: Tue, 10 Nov 2009 23:27:48 +0300
Subject: [antlr-interest] The idea of semantic analyzer generator
Message-ID: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>

Hello,
I'm looking for topics to investigate in part of my master thesis. I'm interesting in verification, static code analysis and so on.
I have an idea, which I want to implement and integrate with ANTLR, please give me any feedback about it.

I'd started work with ANTLR till some time ago and my colleagues use it sometimes (to create DSL). And as I see, there is some unsolved problems in ANTLR. And IMHO the one of the most important is that user have to write semantic analyzer by hand (of course he or she could and should use tree grammars for doing it and could implement custom actions for checking some semantic rules, but in fact the semantic within such approach is only a code written in some ordinary programming language (C\C#\Java\...).  I wonder would it be useful for user to use semantic analyzer generation module within ANLTR? I think it could be implemented as a new grammar language for describing semantic rules or something like that. Could somebody point out to such things? Are there any semantic analyzer generators? And if there isn't any, is such thing looks not very useful for practical using?

Thank you

From jbb at acm.org  Tue Nov 10 12:53:24 2009
From: jbb at acm.org (John B. Brodie)
Date: Tue, 10 Nov 2009 15:53:24 -0500
Subject: [antlr-interest] The idea of semantic analyzer generator
In-Reply-To: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>
References: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>
Message-ID: <1257886404.13496.13.camel@gecko.home.org>

Greetings!
On Tue, 2009-11-10 at 23:27 +0300, GreyAx wrote:
> I'm looking for topics to investigate in part of my master thesis. I'm interesting in verification, 
> static code analysis and so on. I have an idea, which I want to implement and integrate with ANTLR,
> please give me any feedback about it.
> 
> I'd started work with ANTLR till some time ago and my colleagues use it sometimes (to create DSL).
> And as I see, there is some unsolved problems in ANTLR. And IMHO the one of the most important is 
> that user have to write semantic analyzer by hand (of course he or she could and should use tree
> grammars for doing it and could implement custom actions for checking some semantic rules, but in
> fact the semantic within such approach is only a code written in some ordinary programming
> language (C\C#\Java\...).  I wonder would it be useful for user to use semantic analyzer generation
> module within ANLTR? I think it could be implemented as a new grammar language for describing
> semantic rules or something like that. Could somebody point out to such things? Are there any
> semantic analyzer generators? And if there isn't any, is such thing looks not very useful for
> practical using?
> 

I too am quite interested in this topic -- but have been diverted away
from it for quite some time.

I think the key here is defining the meta-notation for describing the
semantic analysis to be performed. It would seem that in defining the
meta-notation you might just end up with yet another programming
language.....

Altho some researchers appear to have obtained some interesting results.
Google for "action semantics" and "asf+sdf" and i am sure there are
others along those lines.... You might try also googling "suif" and/or
"llvm" but these last two seem to be more related to the code generation
phase rather than the analysis phase.

I quite like the Post system notation that Benjamin Pierce uses in his
book "Types and Programming Languages", MIT Press, 2002, ISBN
0-262-16209-1

Hope this helps
   -jbb





From andreas.meyer at smartshift.de  Tue Nov 10 13:13:40 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 10 Nov 2009 22:13:40 +0100
Subject: [antlr-interest] The idea of semantic analyzer generator
In-Reply-To: <1257886404.13496.13.camel@gecko.home.org>
References: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>
	<1257886404.13496.13.camel@gecko.home.org>
Message-ID: <4AF9D784.8080907@smartshift.de>

John B. Brodie schrieb:
> Greetings!
> On Tue, 2009-11-10 at 23:27 +0300, GreyAx wrote:
>   
>> I'm looking for topics to investigate in part of my master thesis. I'm interesting in verification, 
>> static code analysis and so on. I have an idea, which I want to implement and integrate with ANTLR,
>> please give me any feedback about it.
>>
>> I'd started work with ANTLR till some time ago and my colleagues use it sometimes (to create DSL).
>> And as I see, there is some unsolved problems in ANTLR. And IMHO the one of the most important is 
>> that user have to write semantic analyzer by hand (of course he or she could and should use tree
>> grammars for doing it and could implement custom actions for checking some semantic rules, but in
>> fact the semantic within such approach is only a code written in some ordinary programming
>> language (C\C#\Java\...).  I wonder would it be useful for user to use semantic analyzer generation
>> module within ANLTR? I think it could be implemented as a new grammar language for describing
>> semantic rules or something like that. Could somebody point out to such things? Are there any
>> semantic analyzer generators? And if there isn't any, is such thing looks not very useful for
>> practical using?
>>
>>     

For example, there is jastadd (jastadd.org), which is a generator for 
attribute grammars. I have not used it (yet!), but it seems useful 
enough to build a Java 1.5 compiler with it. Still, there is a slight 
gap between the ANTLR grammar and the jastadd tree grammar, which uses 
its own notation. So, you would need to explicitly build an AST, 
suitable for jastadd: you cannot reuse ANTLRs tree building facility. 
Maybe bridging that gap could be an interesting topic? FYI : currently 
I'm writing a tree parser generator that operates on an already built 
ANTLR tree, which could be useful to bridge this gap (in constrast to 
the ANTLR tree parser, which works on a stream of tokens for the full 
tree, actually). Let me know if you are interested.

Cheers,
Andreas Meyer

From sharwell at pixelminegames.com  Tue Nov 10 14:23:02 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 10 Nov 2009 16:23:02 -0600
Subject: [antlr-interest] Big grammar => static initializer/method size
	is exceeding the 65535 bytes limit
References: <44277.17157.qm@web55904.mail.re3.yahoo.com><e93b39f289f10748be44d97199da4173@temporal-wave.com>
	<20091110194032.6259C341847B@www.antlr.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE29@martini.ironwillgames.com>

I did. The C# ports of the ANTLR Tool and StringTemplate have no
dependency on previous versions - I keep a build of just the files
required to generate files for the CSharp3 target in the bin/Bootstrap
directory.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Tuesday, November 10, 2009 1:40 PM
To: Jim Idle; Antlr interest
Subject: Re: [antlr-interest] Big grammar => static initializer/method
size is exceeding the 65535 bytes limit

At 04:20 6/11/2009, Jim Idle wrote:
 >At the moment though [...] I am rewriting all the grammars
 >in v3 to be self hosted.

Didn't Sam Harwell already do that for the C# port?


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From lgcraymer at yahoo.com  Tue Nov 10 17:11:27 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 10 Nov 2009 17:11:27 -0800 (PST)
Subject: [antlr-interest] The idea of semantic analyzer generator
In-Reply-To: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>
References: <E1N7xJc-0006qq-00.greyax-mail-ru@f70.mail.ru>
Message-ID: <478488.220.qm@web55901.mail.re3.yahoo.com>

What you are describing is an attribute grammar; the idea was first published by Knuth in 1968.  Do a literature search on citeseer or google the web; you will find lots of references (wikipedia has an article, although not a very good one).  Attribute grammars are a perennial research topic, but attribute grammar systems have never made it into the mainstream.  I believe that the big drawback is the monolithic processing (everything in one grammar or dependent on one grammar); multi-pass translation is the mainstream compiler approach.

--Loring



----- Original Message ----
> From: GreyAx <greyax at mail.ru>
> To: antlr-interest at antlr.org
> Sent: Tue, November 10, 2009 12:27:48 PM
> Subject: [antlr-interest] The idea of semantic analyzer generator
> 
> Hello,
> I'm looking for topics to investigate in part of my master thesis. I'm 
> interesting in verification, static code analysis and so on.
> I have an idea, which I want to implement and integrate with ANTLR, please give 
> me any feedback about it.
> 
> I'd started work with ANTLR till some time ago and my colleagues use it 
> sometimes (to create DSL). And as I see, there is some unsolved problems in 
> ANTLR. And IMHO the one of the most important is that user have to write 
> semantic analyzer by hand (of course he or she could and should use tree 
> grammars for doing it and could implement custom actions for checking some 
> semantic rules, but in fact the semantic within such approach is only a code 
> written in some ordinary programming language (C\C#\Java\...).  I wonder would 
> it be useful for user to use semantic analyzer generation module within ANLTR? I 
> think it could be implemented as a new grammar language for describing semantic 
> rules or something like that. Could somebody point out to such things? Are there 
> any semantic analyzer generators? And if there isn't any, is such thing looks 
> not very useful for practical using?
> 
> Thank you
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From david-sarah at jacaranda.org  Tue Nov 10 20:34:30 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 11 Nov 2009 04:34:30 +0000
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AF9DE3B.2030407@gmail.com>
References: <4AF99639.5030103@gmail.com> <4AF9C2F7.7040700@jacaranda.org>
	<4AF9DE3B.2030407@gmail.com>
Message-ID: <4AFA3ED6.20706@jacaranda.org>

Bob Frankel wrote:
> thanks for the help....  recovery from inserted error tokens now works
> just fine, but i'm still finding my EOF token is of type CommonToken....

On closer investigation, it seems that this problem is due to
CommonTokenStream using Token.EOF_TOKEN, which is hardcoded to a
CommonToken.

<http://www.antlr.org/api/Java/_common_token_stream_8java-source.html#l00236>
(lines 248 and 260)
<http://www.antlr.org/api/Java/interfaceorg_1_1antlr_1_1runtime_1_1_token.html#a1b4524a52069a34b14a0761ea43423b>

It is possible to use your own token stream class in place of
CommonTokenStream (or TokenRewriteStream if you need rewriting).
No ANTLR option needs to be set; you just create an instance of
your token stream class in the usual boilerplate for creating a
lexer and parser.

If you are subclassing CommonTokenStream or TokenRewriteStream,
I think it should be sufficient to override the LT method as follows:

   protected static MyToken MY_EOF_TOKEN = new MyToken(CharStream.EOF);

   @Override public Token LT(int k) {
     Token t = super.LT(k);
     return t != Token.EOF_TOKEN ? t : MY_EOF_TOKEN;
   }

(The EOF_TOKEN doesn't actually exist in the token stream; it is
returned only when you look ahead using LT.)

However, I haven't tested this, and I don't know whether there are
any other places where CommonToken is hardcoded.

> i'm currently using 3.1.3 (since that's what my eclipse ide
> supports)....  is there is workaround for 3.1.3???

The workaround I used was:

 - Delete the TokenLabelType option;

 - Change my code so that it no longer assumes that all tokens are
   instances of MyToken. Emitted and error tokens will still be of
   class MyToken, but fragment and EOF tokens might not be.
   (Fragment tokens only occur if you refer to a named child fragment
   in a lexer rule. To check that you're not doing this, search for
   "new CommonToken" in the generated lexer.)

This is obviously quite ugly, although you might be able to clean up
some of the instanceof tests and casting by using a convenience method
such as

   public static MyToken of(Token t) {
     return t instanceof MyToken ? (MyToken) t : new MyToken(t);
   }

It also might not be a sufficient workaround depending on why you are
overriding the token type. (In my case, it turned out to be sufficient
for emitted and error tokens to be of the overridden type.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/08a76654/attachment.bin 

From david-sarah at jacaranda.org  Tue Nov 10 21:06:10 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 11 Nov 2009 05:06:10 +0000
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AFA3ED6.20706@jacaranda.org>
References: <4AF99639.5030103@gmail.com> <4AF9C2F7.7040700@jacaranda.org>
	<4AF9DE3B.2030407@gmail.com> <4AFA3ED6.20706@jacaranda.org>
Message-ID: <4AFA4642.7060508@jacaranda.org>

David-Sarah Hopwood wrote:
> If you are subclassing CommonTokenStream or TokenRewriteStream,
> I think it should be sufficient to override the LT method as follows:
> 
>    protected static MyToken MY_EOF_TOKEN = new MyToken(CharStream.EOF);
> 
>    @Override public Token LT(int k) {
>      Token t = super.LT(k);
>      return t != Token.EOF_TOKEN ? t : MY_EOF_TOKEN;
>    }
> 
> (The EOF_TOKEN doesn't actually exist in the token stream; it is
> returned only when you look ahead using LT.)
> 
> However, I haven't tested this,

I've tested it now; it appears to work.

> and I don't know whether there are any other places where CommonToken is hardcoded.
> 
>> i'm currently using 3.1.3 (since that's what my eclipse ide
>> supports)....  is there is workaround for 3.1.3???
> 
> The workaround I used was:
> 
>  - Delete the TokenLabelType option;
> 
>  - Change my code so that it no longer assumes that all tokens are
>    instances of MyToken. Emitted and error tokens will still be of
>    class MyToken, but fragment and EOF tokens might not be.
>    (Fragment tokens only occur if you refer to a named child fragment
>    in a lexer rule. To check that you're not doing this, search for
>    "new CommonToken" in the generated lexer.)

I forgot to say that this is in addition to overriding getMissingSymbol
as I described earlier.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/ef25821c/attachment.bin 

From antlr at mirality.co.nz  Tue Nov 10 23:23:37 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 11 Nov 2009 20:23:37 +1300
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AFA3ED6.20706@jacaranda.org>
References: <4AF99639.5030103@gmail.com> <4AF9C2F7.7040700@jacaranda.org>
	<4AF9DE3B.2030407@gmail.com> <4AFA3ED6.20706@jacaranda.org>
Message-ID: <20091111072351.62B6634184BA@www.antlr.org>

At 17:34 11/11/2009, David-Sarah Hopwood wrote:
 >On closer investigation, it seems that this problem is due to
 >CommonTokenStream using Token.EOF_TOKEN, which is hardcoded to a
 >CommonToken.

It's probably not too surprising that CommonTokenStream expects to 
have a stream of CommonTokens... :)

Does deriving your custom token type from CommonToken sort out the 
problem?  If so, then things are as I'd expect; if not, that might 
be a codegen bug.


From mark at cs.vu.nl  Wed Nov 11 07:13:13 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Wed, 11 Nov 2009 16:13:13 +0100
Subject: [antlr-interest] Getting CMinus example to work
Message-ID: <4AFAD489.9050904@cs.vu.nl>

Hi,

I'm trying to get the CMinus example from the ANTLR reference book to 
work inside Eclipse (see [1,2]). I used ANTLRworks to generate java code 
for the lexer/parser and the tree walker. (This is all to get an idea 
about how to get my own grammar working.)

I imported the CMinusParser.java, CMinusLexer.java and CMinusWalker.java 
into Eclipse, and added the class TestCMinus.java, a test rig given in 
[3]. I run the code and enter the example input given in [4]. I then 
press CTLR-D/CTRL-Z to end the input file as normal in Eclipse [5], but 
the console does not react at all. I'm wondering whether there's a 
problem with the example or not. I am able to signal EOF in other programs.

I  also tried to compile the generated .java files on the command line, 
but failed:

javac -cp ./antlr-3.0.jar:./antlr-2.7.7.jar:./antlr-runtime-3.0.jar 
TestCMinus.java

gets me errors like "package org.antlr.runtime.tree does not exist". I 
tried the same thing with the antlrworks jar file, but that just starts 
ANTLRworks instead of compiling.

I'm obviously doing something stupid, but I've run out of options to try 
myself. Hope someone can help out this newbie...

Mark van Assem.


[1]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinus.g
[2]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinusWalker.g
[3]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/TestCMinus.java
[4]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/t.cm
[5]http://archive.eclipse.org/eclipse/downloads/drops/R-3.1-200506271435/eclipse-news-part1c.html
-- 
  Mark van Assem - Vrije Universiteit Amsterdam
            http://www.cs.vu.nl/~mark

From mark at cs.vu.nl  Wed Nov 11 08:36:52 2009
From: mark at cs.vu.nl (Mark van Assem)
Date: Wed, 11 Nov 2009 17:36:52 +0100
Subject: [antlr-interest] Getting CMinus example to work
In-Reply-To: <4AFAD489.9050904@cs.vu.nl>
References: <4AFAD489.9050904@cs.vu.nl>
Message-ID: <4AFAE824.7080406@cs.vu.nl>

Hi,

The behaviour seems different now. I get the error:

   java.net.BindException: Address already in use: JVM_Bind

on the code below. Apparently there is some port setting I need to 
change, but DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT is hidden in the 
jar file. I experimentally changed the port to 35505, but to no effect. 
There's no indication in the book that I need ANTLRworks or anything 
else to run on that port.

Anybody an idea?

Thanks,
Mark.

--------------------------------------------------------------------------
public CMinusParser(TokenStream input) {
             this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, 
new RecognizerSharedState());
         }
--------------------------------------------------------------------------

Mark van Assem wrote:
> Hi,
> 
> I'm trying to get the CMinus example from the ANTLR reference book to 
> work inside Eclipse (see [1,2]). I used ANTLRworks to generate java code 
> for the lexer/parser and the tree walker. (This is all to get an idea 
> about how to get my own grammar working.)
> 
> I imported the CMinusParser.java, CMinusLexer.java and CMinusWalker.java 
> into Eclipse, and added the class TestCMinus.java, a test rig given in 
> [3]. I run the code and enter the example input given in [4]. I then 
> press CTLR-D/CTRL-Z to end the input file as normal in Eclipse [5], but 
> the console does not react at all. I'm wondering whether there's a 
> problem with the example or not. I am able to signal EOF in other programs.
> 
> I  also tried to compile the generated .java files on the command line, 
> but failed:
> 
> javac -cp ./antlr-3.0.jar:./antlr-2.7.7.jar:./antlr-runtime-3.0.jar 
> TestCMinus.java
> 
> gets me errors like "package org.antlr.runtime.tree does not exist". I 
> tried the same thing with the antlrworks jar file, but that just starts 
> ANTLRworks instead of compiling.
> 
> I'm obviously doing something stupid, but I've run out of options to try 
> myself. Hope someone can help out this newbie...
> 
> Mark van Assem.
> 
> 
> [1]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinus.g
> [2]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/CMinusWalker.g
> [3]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/TestCMinus.java
> [4]http://media.pragprog.com/titles/tpantlr/code/trees/CMinus/t.cm
> [5]http://archive.eclipse.org/eclipse/downloads/drops/R-3.1-200506271435/eclipse-news-part1c.html

-- 
  Mark van Assem - Vrije Universiteit Amsterdam
            http://www.cs.vu.nl/~mark

From Tony.Gray at ca.schneider-electric.com  Wed Nov 11 09:32:27 2009
From: Tony.Gray at ca.schneider-electric.com (Tony.Gray at ca.schneider-electric.com)
Date: Wed, 11 Nov 2009 09:32:27 -0800
Subject: [antlr-interest] Any doc on syntax diagrams?
Message-ID: <OF3D7494C0.01ACE527-ON8825766B.005FADF7-8825766B.00602162@US.Schneider-Electric.com>

Sorry for the basic question, but what do the numbers in the circles mean 
when you have "Show: NFA" checked?  State numbers?  Can I use that 
information for anything?  Is it significant if they're negative?

I've got Ter's book and can't find it there, and I've been googling for 
half an hour and have missed it.

Thanks!

Tony Gray
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/ade5afa6/attachment.html 

From jimi at temporal-wave.com  Wed Nov 11 09:53:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Nov 2009 09:53:20 -0800
Subject: [antlr-interest] Any doc on syntax diagrams?
In-Reply-To: <OF3D7494C0.01ACE527-ON8825766B.005FADF7-8825766B.00602162@US.Schneider-Electric.com>
Message-ID: <5a5cde3fa367534a8fb02ceb1f6575aa@temporal-wave.com>

The numbers are probably not useful to you to be honest, but you could start here:

 

http://en.wikipedia.org/wiki/Nondeterministic_finite_state_machine

 

if you are interested in what it all means. Generally you will be fine reading the syntax diagrams and looking at generated code if you are not sure what is going on.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tony.Gray at ca.schneider-electric.com
Sent: Wednesday, November 11, 2009 9:32 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Any doc on syntax diagrams?

 


Sorry for the basic question, but what do the numbers in the circles mean when you have "Show: NFA" checked?  State numbers?  Can I use that information for anything?  Is it significant if they're negative? 

I've got Ter's book and can't find it there, and I've been googling for half an hour and have missed it. 

Thanks! 

Tony Gray



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/94e7c5d7/attachment.html 

From Tony.Gray at ca.schneider-electric.com  Wed Nov 11 10:35:40 2009
From: Tony.Gray at ca.schneider-electric.com (Tony.Gray at ca.schneider-electric.com)
Date: Wed, 11 Nov 2009 10:35:40 -0800
Subject: [antlr-interest]  Any doc on syntax diagrams?
Message-ID: <OFDA44C0C0.F8959BE9-ON8825766B.00655EA7-8825766B.0065EB25@US.Schneider-Electric.com>

Thanks for the reply Jim, I've been reading up on NFAs and went through 
the wiki page.  I guess my problem isn't with the NFA 
concepts (though I surely have much to learn) as with the specifics of the 
diagrams shown in AntlrWorks - I still don't
understand which entities those numbers are supposed to correspond to. 

Are they state numbers?  It sort of looks like the negative ones are in 
the parser and the positive ones are in the lexer.

Sorry for being dense,

Tony.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/025b23b7/attachment.html 

From smcfarlin at ocsnet.net  Wed Nov 11 11:08:06 2009
From: smcfarlin at ocsnet.net (Steve McFarlin)
Date: Wed, 11 Nov 2009 11:08:06 -0800
Subject: [antlr-interest] Any doc on syntax diagrams?
In-Reply-To: <OF3D7494C0.01ACE527-ON8825766B.005FADF7-8825766B.00602162@US.Schneider-Electric.com>
References: <OF3D7494C0.01ACE527-ON8825766B.005FADF7-8825766B.00602162@US.Schneider-Electric.com>
Message-ID: <16932663-A8FD-40CC-B6E7-D40E6C34D307@ocsnet.net>

They are the state numbers for the NFA. The negative numbers represent  
entry and accepting states of another NFA. If you are not familiar  
with these diagrams I suggest wikipedia as a very general entry point  
into nonterministic/deterministic finite automata.


steve

On Nov 11, 2009, at 9:32 AM, Tony.Gray at ca.schneider-electric.com wrote:

>
> Sorry for the basic question, but what do the numbers in the circles  
> mean when you have "Show: NFA" checked?  State numbers?  Can I use  
> that information for anything?  Is it significant if they're negative?
>
> I've got Ter's book and can't find it there, and I've been googling  
> for half an hour and have missed it.
>
> Thanks!
>
> Tony Gray
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/0941a3a2/attachment.html 

From kaleb.pederson at gmail.com  Wed Nov 11 11:35:21 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Wed, 11 Nov 2009 11:35:21 -0800
Subject: [antlr-interest] Equivalent of TOKEN{x,y}
Message-ID: <200911111135.21288.kaleb.pederson@gmail.com>

Is there an easy way to enforce in the grammar that a lexical token must be present a certain number of times?

For example, with TOKEN{x,y} as you might see in an extended regular expression, it would require that TOKEN be present at minimum x times and at most y times.

I know I can easily check during semantic analysis, but in this case I'd prefer to do so at the grammar level.

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From jimi at temporal-wave.com  Wed Nov 11 11:40:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Nov 2009 11:40:44 -0800
Subject: [antlr-interest] Equivalent of TOKEN{x,y}
In-Reply-To: <200911111135.21288.kaleb.pederson@gmail.com>
Message-ID: <2b3500c956f49c47b467f9954d7273bd@temporal-wave.com>

Just add counters in the parser rules (scope probably), let there be any number of them, then issue errors if the counts are wrong. You really don't want to do things like this at the grammar level - the messages you will issue will be confusing to users "Error at 'y', expecting '}'" leaves you to guess the meaning. It is generally better to produce a CommonTree, verify it and output whatever you need. Every task is different though.

You can also use gated predicates or ordinary predicates perhaps, but you will end up with a messy grammar that isn't as easy to deal with.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kaleb Pederson
> Sent: Wednesday, November 11, 2009 11:35 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Equivalent of TOKEN{x,y}
> 
> Is there an easy way to enforce in the grammar that a lexical token
> must be present a certain number of times?
> 
> For example, with TOKEN{x,y} as you might see in an extended regular
> expression, it would require that TOKEN be present at minimum x times
> and at most y times.
> 
> I know I can easily check during semantic analysis, but in this case
> I'd prefer to do so at the grammar level.
> 
> Thanks.
> 
> --
> Kaleb Pederson
> 
> Blog - http://kalebpederson.com
> Twitter - http://twitter.com/kalebpederson
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From cross at kojeware.com  Wed Nov 11 11:43:23 2009
From: cross at kojeware.com (Cameron Ross)
Date: Wed, 11 Nov 2009 14:43:23 -0500
Subject: [antlr-interest] Compiling Java source files when using the
	antlr3-maven-plugin
Message-ID: <bc2b292f0911111143o497ec6d3ta52819e56a1a7511@mail.gmail.com>

Hello,

I have a simple maven project with source files configured as follows:

my_project/
    - pom.xml
    - src
        - main
            - antlr3
                - my_package
                    - MyGrammar.g
            - java
                - my_package
                    - MyClass.java


When I execute mvn compile my parser and lexer sources are generated
properly and reside under target/generated-sources as expected.  However,
MyClass.java is not compiled and the process gives me the following error:

...
target/generated-sources/antlr3/my_package/MyParser.java:[105,13] cannot
find symbol
symbol  : constructor MyClass()
 ...

Any help would be greatly appreciated.

Cameron.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/d134586b/attachment.html 

From antlr at mirality.co.nz  Wed Nov 11 11:44:00 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 12 Nov 2009 08:44:00 +1300
Subject: [antlr-interest] Equivalent of TOKEN{x,y}
In-Reply-To: <200911111135.21288.kaleb.pederson@gmail.com>
References: <200911111135.21288.kaleb.pederson@gmail.com>
Message-ID: <20091111194416.2F7183418473@www.antlr.org>

At 08:35 12/11/2009, Kaleb Pederson wrote:
 >Is there an easy way to enforce in the grammar that a lexical 
token
 >must be present a certain number of times?
 >
 >For example, with TOKEN{x,y} as you might see in an extended
 >regular expression, it would require that TOKEN be present at
 >minimum x times and at most y times.

The best way to do it is to use validation code:

rule: (t+=TOKEN)+ { /* check $t and throw an error if the wrong 
number appears */ };

You can also do this purely syntactically, but there isn't a 
"nice" syntax for it and it won't produce as useful an error to 
the user:

// TOKEN{3,5}
rule: TOKEN TOKEN TOKEN (TOKEN TOKEN?)?;


This sort of requirement is fairly unusual for a language 
specification, though.


From jimi at temporal-wave.com  Wed Nov 11 11:54:50 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Nov 2009 11:54:50 -0800
Subject: [antlr-interest] Compiling Java source files when using the
	antlr3-maven-plugin
In-Reply-To: <bc2b292f0911111143o497ec6d3ta52819e56a1a7511@mail.gmail.com>
Message-ID: <8f0b61ad40df4347ab6526483d113a94@temporal-wave.com>

Did you add the package statement to the @arser and @lexer header sections? The output files will generated I the correct place, but you need to add the package yourself, just like in Java.

 

Your best bet is to start here:

 

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Maven

 

and modify the sample project that is produced.

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Ross
Sent: Wednesday, November 11, 2009 11:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Compiling Java source files when using the antlr3-maven-plugin

 

Hello, 

 

I have a simple maven project with source files configured as follows:

 

my_project/

    - pom.xml

    - src

        - main

            - antlr3

                - my_package

                    - MyGrammar.g

            - java

                - my_package

                    - MyClass.java

 

 

When I execute mvn compile my parser and lexer sources are generated properly and reside under target/generated-sources as expected.  However, MyClass.java is not compiled and the process gives me the following error:

 

...

target/generated-sources/antlr3/my_package/MyParser.java:[105,13] cannot find symbol

symbol  : constructor MyClass()

 ...

 

Any help would be greatly appreciated.

 

Cameron.

 

        



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/386ecaa1/attachment.html 

From sharwell at pixelminegames.com  Wed Nov 11 12:26:29 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 11 Nov 2009 14:26:29 -0600
Subject: [antlr-interest] Equivalent of TOKEN{x,y}
References: <2b3500c956f49c47b467f9954d7273bd@temporal-wave.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE32@martini.ironwillgames.com>

Jim doesn't "emphasize" the benefits of doing things this way because by
now we understand that this is "just how things are done."

If you relax checks like this in the grammar and place them in a
post-parse analysis (tree walker for example), some of your benefits
include:

* Faster parsing (sometimes **much** faster)
* Smaller generated code (sometimes **much** smaller)
* Better error messages (**always much** better)
* Everything is more maintainable

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, November 11, 2009 1:41 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Equivalent of TOKEN{x,y}

<snip>

You really don't want to do things like this at the grammar level - the
messages you will issue will be confusing to users "Error at 'y',
expecting '}'" leaves you to guess the meaning. It is generally better
to produce a CommonTree, verify it and output whatever you need.

<snip> 

Jim


From bill at qswtools.com  Wed Nov 11 12:41:34 2009
From: bill at qswtools.com (Bill Cox)
Date: Wed, 11 Nov 2009 12:41:34 -0800
Subject: [antlr-interest] A second Ddefinitive ANTLR book?
Message-ID: <f7372f920911111241p765b7190g7199e54628e4b595@mail.gmail.com>

Hi Folks,

I've been away from the list for a while, so please forgive me if this
is a dumb question.  I was under the impression when I left that Ter
was polishing up a new ANTLR book with special emphasis on
domain-specific languages.

Yet all I can find at Amazon or the Pragmatic Programmers sites is the
2007 book, which I've studied with great interest.

What's so, please, about a new ANTLR book?

Thanks vey much!
Bill

From smcfarlin at ocsnet.net  Wed Nov 11 12:45:49 2009
From: smcfarlin at ocsnet.net (Steve McFarlin)
Date: Wed, 11 Nov 2009 12:45:49 -0800
Subject: [antlr-interest] Semantic Analysis Post Parse?
Message-ID: <DC9C3BB7-B017-4D0F-8309-B9C84353F3BF@ocsnet.net>

Hello,

I have been reading these forms for a short time. There seems to be  
consensus amongst some users that semantic analysis should not be done  
in the parser, but rather in a tree or other data structure. I am  
completing the final phase of a compiler for a compiler class. As of  
now I have the embedded tree grammars in my parser file. I was just  
about to start doing inherited and synthesized attributes in order to  
do semantic analysis on types etc... Is it advisable to do this in a  
tree grammar?



Thanks,
Steve McFarlin

From jimi at temporal-wave.com  Wed Nov 11 12:48:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Nov 2009 12:48:33 -0800
Subject: [antlr-interest] A second Ddefinitive ANTLR book?
In-Reply-To: <f7372f920911111241p765b7190g7199e54628e4b595@mail.gmail.com>
Message-ID: <6f1ea0e49722644cac8ff0276687e405@temporal-wave.com>

Well, did you try the front page of the ANTLR Web site:

http://www.antlr.org/

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bill Cox
> Sent: Wednesday, November 11, 2009 12:42 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] A second Ddefinitive ANTLR book?
> 
> Hi Folks,
> 
> I've been away from the list for a while, so please forgive me if this
> is a dumb question.  I was under the impression when I left that Ter
> was polishing up a new ANTLR book with special emphasis on
> domain-specific languages.
> 
> Yet all I can find at Amazon or the Pragmatic Programmers sites is the
> 2007 book, which I've studied with great interest.
> 
> What's so, please, about a new ANTLR book?
> 
> Thanks vey much!
> Bill
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From tommy.chheng at gmail.com  Wed Nov 11 13:48:40 2009
From: tommy.chheng at gmail.com (Tommy Chheng)
Date: Wed, 11 Nov 2009 13:48:40 -0800
Subject: [antlr-interest] A second Ddefinitive ANTLR book?
In-Reply-To: <f7372f920911111241p765b7190g7199e54628e4b595@mail.gmail.com>
References: <f7372f920911111241p765b7190g7199e54628e4b595@mail.gmail.com>
Message-ID: <4AFB3138.9070905@gmail.com>

is this the book you are looking for?
http://pragprog.com/titles/tpdsl/language-design-patterns

tommy

On 11/11/09 12:41 PM, Bill Cox wrote:
> Hi Folks,
>
> I've been away from the list for a while, so please forgive me if this
> is a dumb question.  I was under the impression when I left that Ter
> was polishing up a new ANTLR book with special emphasis on
> domain-specific languages.
>
> Yet all I can find at Amazon or the Pragmatic Programmers sites is the
> 2007 book, which I've studied with great interest.
>
> What's so, please, about a new ANTLR book?
>
> Thanks vey much!
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    

From david-sarah at jacaranda.org  Wed Nov 11 15:37:50 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 11 Nov 2009 23:37:50 +0000
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <4AFA4642.7060508@jacaranda.org>
References: <4AF99639.5030103@gmail.com> <4AF9C2F7.7040700@jacaranda.org>
	<4AF9DE3B.2030407@gmail.com> <4AFA3ED6.20706@jacaranda.org>
	<4AFA4642.7060508@jacaranda.org>
Message-ID: <4AFB4ACE.5090807@jacaranda.org>

David-Sarah Hopwood wrote:
> David-Sarah Hopwood wrote:
>> If you are subclassing CommonTokenStream or TokenRewriteStream,
>> I think it should be sufficient to override the LT method as follows:
>>
>>    protected static MyToken MY_EOF_TOKEN = new MyToken(CharStream.EOF);

Make this 'public static final' in order for the nextToken() code below
to work.

>>    @Override public Token LT(int k) {
>>      Token t = super.LT(k);
>>      return t != Token.EOF_TOKEN ? t : MY_EOF_TOKEN;
>>    }
>>
>> (The EOF_TOKEN doesn't actually exist in the token stream; it is
>> returned only when you look ahead using LT.)
>>
>> However, I haven't tested this,
> 
> I've tested it now; it appears to work.

I spoke too soon -- there is another method that needs to be overridden
in the lexer:

@lexer::members {
  @Override public Token nextToken() {
    Token t = super.nextToken();
    return t != Token.EOF_TOKEN ? t : MyTokenStream.MY_EOF_TOKEN;
  }
}

This is getting too complicated. Just to ensure that all tokens are of
the overridden type, we have to:

 - set the TokenLabelType option
 - override emit() and nextToken() in the lexer
 - override getMissingSymbol() in the parser
 - override LT() in the token stream
 - upgrade to ANTLR 3.2

and this is all quite fragile and possibly dependent on the Java target.
It clearly calls for a redesign of the way TokenLabelType is handled.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/d825944c/attachment.bin 

From bios.bob.frankel at gmail.com  Wed Nov 11 17:35:26 2009
From: bios.bob.frankel at gmail.com (Bob Frankel)
Date: Wed, 11 Nov 2009 17:35:26 -0800
Subject: [antlr-interest] custom TokenLabelType and EOF/Error tokens
In-Reply-To: <20091111072351.62B6634184BA@www.antlr.org>
References: <4AF99639.5030103@gmail.com>
	<4AF9C2F7.7040700@jacaranda.org>	<4AF9DE3B.2030407@gmail.com>
	<4AFA3ED6.20706@jacaranda.org>
	<20091111072351.62B6634184BA@www.antlr.org>
Message-ID: <4AFB665E.5020003@gmail.com>

as it turns out, my grammar has 'python-like' indentation which is 
handled in an 'IndentedTokenStream' class that already wraps a 
'CommonTokenStream'; i was able to interpolate my own EOF_TOKEN within....

at this point, everything is working just fine....

thanks for all of the help :-)



Gavin Lambert wrote:
> <div class="moz-text-flowed">At 17:34 11/11/2009, David-Sarah Hopwood 
> wrote:
> >On closer investigation, it seems that this problem is due to
> >CommonTokenStream using Token.EOF_TOKEN, which is hardcoded to a
> >CommonToken.
>
> It's probably not too surprising that CommonTokenStream expects to 
> have a stream of CommonTokens... :)
>
> Does deriving your custom token type from CommonToken sort out the 
> problem?  If so, then things are as I'd expect; if not, that might be 
> a codegen bug.
>
>
> </div>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091111/2e6a96e4/attachment.html 

From craig at palantir.co.za  Wed Nov 11 21:00:20 2009
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Thu, 12 Nov 2009 07:00:20 +0200
Subject: [antlr-interest] Referencing Template(s) in a grammar.
Message-ID: <20091112070020.s7ramc74fgowksw0@webmail.palantir.co.za>

Hi,

I have a grammar that I am using to generate sql. My question is: Is there any
easy way to refer to a 'parent' template in a child production.

given:

xpath : d+=declaration* p+=path
        -> sql(declarations={$d}, paths={$p})
;

... many productions later ...

comp : ^('comparison' (op='=' | op='<' | op='>' | op='like') lv=relativePath
rv=relativePath)
       -> {IsIndexed($rangeExpr::path)}? sqlWhere(path={$rangeExpr::path},
lv={$lv.st}, rv={$rv.st}, op={$op})
       -> xmlWhere(path={$rangeExpr::path}, lv={$lv.st}, rv={$rv.st}, op={$op})
;

I now need to reference those declarations in xpath above in the xmlWhere and
sqlWhere templates below. There are many productions in between so it's going
to be hard to carry them all the way though.

I need xmlWhere(declarations={$d}...) but it's not available.

Thanks
Regards
Craig.



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From claude.moulin at hds.utc.fr  Thu Nov 12 02:59:04 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Thu, 12 Nov 2009 11:59:04 +0100
Subject: [antlr-interest] Global Dynamic Scope
References: <9678D80194B5284D93BCCEEB579834B309B90E3D@xena.ad.utc> 
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012ECD72@xena.ad.utc>

Hello Jim,

The bug is very strange and I made many tests in order to identify the
problem.

It is due to comments inserted in scope declarations. Sometimes they are
accepted; in other cases no. It is impossible for me to know why.

When there is a problem, lines like: // $myscope::varname = 0; also give
an error even if they are comments.

I cancelled all the comments in scope declarations and it works
perfectly well.

Thanks,

Claude

---------------------------------------------------------------------

From: "Jim Idle" <jimi at temporal-wave.com>

Subject: Re: [antlr-interest] Global Dynamic Scope

To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>

Message-ID: <8b02470df5d1bd499db21e960899ce21 at temporal-wave.com>

Content-Type: text/plain; charset="us-ascii"

 

Do you have a small(ish) reproducible example?

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Claude Moulin

Sent: Tuesday, November 10, 2009 1:47 AM

To: antlr-interest at antlr.org

Subject: [antlr-interest] Global Dynamic Scope

Hello,

I get a strange error using global scope. I use antlr 3.2.

In a tree grammar I define a global scope << pilep >> with several
attributes including one called binit.

I get several  times strange error messages like: 

unknown dynamically-scoped attribute for scope pilep: binit

It seems that sometimes antlr doesn't succeed to translate $pilep::binit
into ((pilep_scope)pilep_stack.peek()).binit 

As it does with other scope attributes.

I don't understand the reason.

Any idea ?

Thanks,

Claude

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091112/31ed4962/attachment.html 

From 6yearold at gmail.com  Thu Nov 12 11:01:10 2009
From: 6yearold at gmail.com (none none)
Date: Thu, 12 Nov 2009 19:01:10 +0000
Subject: [antlr-interest] Using custom token in rewrite
Message-ID: <c2d14cc50911121101s4b3c5affr176d5b02a3093469@mail.gmail.com>

Hi.
I have following input: four hex digits, representing 32-bit integer value.
It can be defined:
11 22 AA BB
or undefined:
XX XX XX XX

and here is according rule:
dword_ :  BYTE_ BYTE_ BYTE_ BYTE_;

Now i'm trying to construct AST from this rule, which looks like (INT32
0xBBAA2211) or (INT32 UNDEFINED), where INT32 and UNDEFINED - some imaginary
tokens. I'm understand, that i can't just put $text in -> ^(INT32 $text), so
i tried to construct Token object. And here is what i get:

dword_    :    BYTE_ BYTE_ BYTE_ BYTE_
        {
        //this func parses $text and makes new CommonToken
        Token t=makeDwordToken($text);
        //now i'm popping four BYTE_ tokens from stream_BYTE_
        //if i don't do that, i'll get a first byte from dword_ in my tree
        stream_BYTE_.nextNode();
        stream_BYTE_.nextNode();
        stream_BYTE_.nextNode();
        stream_BYTE_.nextNode();

        //now pushing my handmade token
        stream_BYTE_.add(t);
        }
        -> ^( INT_ {stream_BYTE_.nextNode()})
       //and finally make it a tree's child
    ;

Now i'm doubting in what i have wrote, but still can't find other way to
achieve this goal.
Any ideas?

P.S. Sorry for if my English looks terrible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091112/9e951215/attachment.html 

From david-sarah at jacaranda.org  Thu Nov 12 11:05:27 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 12 Nov 2009 19:05:27 +0000
Subject: [antlr-interest] Global Dynamic Scope
In-Reply-To: <3402BD9F2C1434438EF1F319BE558FBB012ECD72@xena.ad.utc>
References: <9678D80194B5284D93BCCEEB579834B309B90E3D@xena.ad.utc>
	<3402BD9F2C1434438EF1F319BE558FBB012ECD72@xena.ad.utc>
Message-ID: <4AFC5C77.9030405@jacaranda.org>

Claude Moulin wrote:
> Hello Jim,
> 
> The bug is very strange and I made many tests in order to identify the
> problem.
> 
> It is due to comments inserted in scope declarations. Sometimes they are
> accepted; in other cases no. It is impossible for me to know why.
> 
> When there is a problem, lines like: // $myscope::varname = 0; also give
> an error even if they are comments.

The $ should be escaped if it is in a comment (or other non-expression
content such as within a string or character literal), i.e.

// \$myscope::varname = 0;

Yes, it's annoying. The reason is that since ANTLR doesn't parse the
target language, it can't tell which parts are comments or literals,
and so it will still report errors if the $-reference is not valid.

(If it is valid to refer to $myscope::varname in that context, then
it should be harmless for it be expanded within a comment, except that
looking at the generated code may be confusing.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091112/4fe3e26c/attachment.bin 

From kaleb.pederson at gmail.com  Thu Nov 12 11:08:16 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Thu, 12 Nov 2009 11:08:16 -0800
Subject: [antlr-interest] Referencing Template(s) in a grammar.
In-Reply-To: <20091112070020.s7ramc74fgowksw0@webmail.palantir.co.za>
References: <20091112070020.s7ramc74fgowksw0@webmail.palantir.co.za>
Message-ID: <f14c01620911121108l6bb8678bx70dae6c8b38efbf5@mail.gmail.com>

On Wed, Nov 11, 2009 at 9:00 PM,  <craig at palantir.co.za> wrote:
> Hi,
>
> I have a grammar that I am using to generate sql. My question is: Is there any
> easy way to refer to a 'parent' template in a child production.

[...snip..]

> I need xmlWhere(declarations={$d}...) but it's not available.

I was going to say that you need to use scopes to make that available
later in your code, but it looks like you're already using scopes.
Can you elaborate a bit on what I may have missed that makes scopes
insufficient for your needs?

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From jonathan.prater at gmail.com  Thu Nov 12 17:53:19 2009
From: jonathan.prater at gmail.com (Jonathan Prater)
Date: Thu, 12 Nov 2009 20:53:19 -0500
Subject: [antlr-interest] Problem running the tutorial
Message-ID: <4AFCBC0F.6070204@gmail.com>

Hi, I'm trying to work through the tutorial for ANTLR, and it's throwing 
this weird error at me at the end of the tutorial, as I step through the 
debugger with the input 2+3*4:  MismatchedTokenException(0!=0).  I see 
that error pop up in the parse tree of the debugger.  In the 
Interpreter, I see a NoViableAltException, instead.

From kaleb.pederson at gmail.com  Thu Nov 12 20:08:11 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Thu, 12 Nov 2009 20:08:11 -0800
Subject: [antlr-interest] Equivalent of TOKEN{x,y}
In-Reply-To: <2b3500c956f49c47b467f9954d7273bd@temporal-wave.com>
References: <2b3500c956f49c47b467f9954d7273bd@temporal-wave.com>
Message-ID: <200911122008.11683.kaleb.pederson@gmail.com>

On Wednesday 11 November 2009 11:40:44 am Jim Idle wrote:
> Just add counters in the parser rules (scope probably), let there be any number of them, then issue errors if the counts are wrong. You really don't want to do things like this at the grammar level - the messages you will issue will be confusing to users "Error at 'y', expecting '}'" leaves you to guess the meaning. It is generally better to produce a CommonTree, verify it and output whatever you need. Every task is different though.

Jim,

Thanks for the counter suggestion, I hadn't thought of that.  Since my token is a fixed length, I started off measuring the total length of the production's child nodes in order to determine the number of tokens, but it didn't sit right with me.

I will definitely need good readable error messages so I've relaxed the main grammar a bit and now I handle the rest in my semantic processing phase.

> You can also use gated predicates or ordinary predicates perhaps, but you will end up with a messy grammar that isn't as easy to deal with.

That's an interesting thought, but I believe you're right, that will make things messy and more intertwined than need be.

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From philippe at faes.net  Fri Nov 13 01:42:20 2009
From: philippe at faes.net (Philippe Faes)
Date: Fri, 13 Nov 2009 10:42:20 +0100
Subject: [antlr-interest] return value during backtracking
Message-ID: <cb16cb310911130142w22b2a814tfda55bdd23749181@mail.gmail.com>

Hi everybody,

I can't figure out how to set a return value during backtracking.
While backtracking, I'd like to do a semantic check on a return value of an
underlying rule, but the return values are not set during backtracking.

Example:

some_rule
  : designator operand {someCheck($designator.text)}? // this will never
work
  ;
designator returns [Node node, String text]
  : identifier { $node = $identifier.node; $text=$identifier.text; }
  | operator_symbol {$node = $operator_symbol.node;
$text=$operator_symbol.text; }
  ;

Any ideas?

Thanks

Philippe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091113/39f980a7/attachment.html 

From harrrrpo at gmail.com  Fri Nov 13 04:10:06 2009
From: harrrrpo at gmail.com (Mohamed Yousef)
Date: Fri, 13 Nov 2009 14:10:06 +0200
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not just
	a token)
Message-ID: <538050a90911130410s1f38126ap89ead0273a4aee39@mail.gmail.com>

Hello all,
i sent before regarding a bug in Control flow  in which a e=. won't define e
, i was suggested by jim to walk tree my self using LT

now i have a problem , consider following

if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g) ^(EIF_THEN e=expr_g)  ) { // examine c and
selectively jump to e }

must be changed to something like

if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e
}  )

and we have a problem
how can we skip the whole EIF_THEN tree (when c is false ) ? , if we try to
use the stopIndex of EIF to jump to it's end
we have the problem that all returned indices ,by all means , don't take UP
& DOWN nodes into accout , where the SEEK macro
takes them into accout
any ideas ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091113/481d4f1d/attachment.html 

From parrt at cs.usfca.edu  Fri Nov 13 11:37:51 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 11:37:51 -0800
Subject: [antlr-interest] return value during backtracking
In-Reply-To: <cb16cb310911130142w22b2a814tfda55bdd23749181@mail.gmail.com>
References: <cb16cb310911130142w22b2a814tfda55bdd23749181@mail.gmail.com>
Message-ID: <DFF057A2-44EB-4583-A195-AEA586065D64@cs.usfca.edu>

Use {{...}} to force action evaluation during backtrack
ter
On Nov 13, 2009, at 1:42 AM, Philippe Faes wrote:

> Hi everybody,
>
> I can't figure out how to set a return value during backtracking.
> While backtracking, I'd like to do a semantic check on a return  
> value of an underlying rule, but the return values are not set  
> during backtracking.
>
> Example:
>
> some_rule
>   : designator operand {someCheck($designator.text)}? // this will  
> never work
>   ;
> designator returns [Node node, String text]
>   : identifier { $node = $identifier.node; $text=$identifier.text; }
>   | operator_symbol {$node = $operator_symbol.node; $text= 
> $operator_symbol.text; }
>   ;
>
> Any ideas?
>
> Thanks
>
> Philippe
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From harrrrpo at gmail.com  Fri Nov 13 13:36:47 2009
From: harrrrpo at gmail.com (Mohamed Yousef)
Date: Fri, 13 Nov 2009 23:36:47 +0200
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <538050a90911130410s1f38126ap89ead0273a4aee39@mail.gmail.com>
References: <538050a90911130410s1f38126ap89ead0273a4aee39@mail.gmail.com>
Message-ID: <538050a90911131336i6eac5ce2i164ab168c173d5c5@mail.gmail.com>

Sorry , it seems i jumped to a wrong result
indices are calculated correctly and UP&Down are taken into consideration
the real problem that i discovered now
is that during tree parsing nodes have no info about the real start and end
positions till respective childs are parsed , so here :

if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e
}  )

EIF would think and respond as c is the end of the world , it has no
knowledge of EIF_THEN

so we have either two solutions :
1) go parse it by hand : tedious , inefficient , probably won't be generic
2) another idea i have now is to store node indices (e.g. for COND , THEN,
ELSE in EIF ) either during parsing or in a separate walk to "flow control"
nodes

i will try both and see
any better ideas ?

2009/11/13 Mohamed Yousef <harrrrpo at gmail.com>

> Hello all,
> i sent before regarding a bug in Control flow  in which a e=. won't define
> e , i was suggested by jim to walk tree my self using LT
>
> now i have a problem , consider following
>
> if_expr
>     :
>       ^(EIF ^(EIF_COND c =expr_g) ^(EIF_THEN e=expr_g)  ) { // examine c
> and selectively jump to e }
>
> must be changed to something like
>
> if_expr
>     :
>       ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e
> }  )
>
> and we have a problem
> how can we skip the whole EIF_THEN tree (when c is false ) ? , if we try to
> use the stopIndex of EIF to jump to it's end
> we have the problem that all returned indices ,by all means , don't take UP
> & DOWN nodes into accout , where the SEEK macro
> takes them into accout
> any ideas ?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091113/17183473/attachment.html 

From scott.oakes62 at googlemail.com  Sat Nov 14 01:08:25 2009
From: scott.oakes62 at googlemail.com (Scott Oakes)
Date: Sat, 14 Nov 2009 09:08:25 +0000
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
Message-ID: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>

Hoping for some newbie help on the following lexer.

  fragment DIGIT:??? ? '0'..'9';
  fragment LETTER: ('a'..'z'|'A'..'Z');

  ID:? (LETTER | '.')+ ('.' DIGIT+)?
   ??? | DIGIT+
??  ? ;

The idea is that ID is things like: "foo", "32", "bar.baz", or
"foo.bar.32". However with input "foo.bar.32", I get two tokens,
"foo.bar." and "32". How could I rewrite this so I get a single ID
token, "foo.bar.32"?

From antlr at mirality.co.nz  Sat Nov 14 04:11:31 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 15 Nov 2009 01:11:31 +1300
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.co
 m>
References: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
Message-ID: <20091114121139.07BF834183F6@www.antlr.org>

At 22:08 14/11/2009, Scott Oakes wrote:
 >  fragment DIGIT:      '0'..'9';
 >  fragment LETTER: ('a'..'z'|'A'..'Z');
 >
 >  ID:  (LETTER | '.')+ ('.' DIGIT+)?
 >       | DIGIT+
 >      ;
 >
 >The idea is that ID is things like: "foo", "32", "bar.baz", or
 >"foo.bar.32". However with input "foo.bar.32", I get two tokens,
 >"foo.bar." and "32". How could I rewrite this so I get a single 
ID
 >token, "foo.bar.32"?

The problem here is that loops match greedily, when possible.  So 
in the input "foo.bar.32", the first loop consumes "foo.bar.", and 
then the optional clause is skipped because it would require yet 
another . in the input (which can't ever happen, because if it 
were there then the first loop would have consumed that too).

There are quite a few options for resolving this, depending on 
what constructs are legal in your language.  One way is to use a 
syntactic predicate:

   ID : (LETTER | ('.' LETTER) => '.')+ ('.' DIGIT+)?
      | DIGIT+
      ;


From scott.oakes62 at googlemail.com  Sat Nov 14 06:14:58 2009
From: scott.oakes62 at googlemail.com (Scott Oakes)
Date: Sat, 14 Nov 2009 14:14:58 +0000
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <4afe9e7a.2a08c00a.04b4.ffffcc1bSMTPIN_ADDED@mx.google.com>
References: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
	<4afe9e7a.2a08c00a.04b4.ffffcc1bSMTPIN_ADDED@mx.google.com>
Message-ID: <8ce33b8f0911140614k2393b7c6sb297f608e6153d46@mail.gmail.com>

On Sat, Nov 14, 2009 at 12:11 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> There are quite a few options for resolving this, depending on what
> constructs are legal in your language.  One way is to use a syntactic
> predicate:
>
>  ID : (LETTER | ('.' LETTER) => '.')+ ('.' DIGIT+)?
>     | DIGIT+
>     ;

That makes sense, although I'm having a bit of trouble getting it to
work when I use this rule -- I still get two tokens from "foo.bar.32".

From jbb at acm.org  Sat Nov 14 08:32:56 2009
From: jbb at acm.org (John B. Brodie)
Date: Sat, 14 Nov 2009 11:32:56 -0500
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
References: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
Message-ID: <1258216376.10863.14.camel@gecko.home.org>

Greetings!
On Sat, 2009-11-14 at 09:08 +0000, Scott Oakes wrote:
> Hoping for some newbie help on the following lexer.
> 
>   fragment DIGIT:      '0'..'9';
>   fragment LETTER: ('a'..'z'|'A'..'Z');
> 
>   ID:  (LETTER | '.')+ ('.' DIGIT+)?
>        | DIGIT+
>       ;
> 
> The idea is that ID is things like: "foo", "32", "bar.baz", or
> "foo.bar.32". However with input "foo.bar.32", I get two tokens,
> "foo.bar." and "32". How could I rewrite this so I get a single ID
> token, "foo.bar.32"?

the following almost works (tested with your samples)

ID : LETTER+ ( '.' LETTER+ )* ('.' DIGIT+)?
     | DIGIT+
     ;

this won't work for things like "." or "..32" or "car..cod" or "..."
which your original rule had POTENTIAL for recognizing. Did you mean for
those to be valid? if so maybe:

ID : LETTER* ( '.' LETTER* )+ DIGIT*
     | DIGIT+
     ;

Hope this helps
   -jbb



From jimi at temporal-wave.com  Sat Nov 14 09:17:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 14 Nov 2009 09:17:53 -0800
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
Message-ID: <1fbc73c942d526469d2c1eb0ee213d14@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Scott Oakes
> Sent: Saturday, November 14, 2009 1:08 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with lexer rule for an optional
> suffix
> 
> Hoping for some newbie help on the following lexer.
> 
>   fragment DIGIT:??? ? '0'..'9';
>   fragment LETTER: ('a'..'z'|'A'..'Z');
> 
>   ID:? (LETTER | '.')+ ('.' DIGIT+)?
>    ??? | DIGIT+
> ??  ? ;

Well this rule is wrong. It allows:

.....99
A..44

But not A.56

You would need:

ID : (LETTER+) (('.' LETTER)=>'.' LETTER+)* (('.' DIGIT)=> '.' DIGIT+)? ;


But you really want to do such things in the parser as you usually want to dissect the identifier. If a part of the id can only be numbers, then you could do it in the lexer, but then any errors will come out from the lexer and be very confusing.

The general idea is to cover everything in the lexer so it does not issue messages, but leave context out of the lexer. Then in the parser, defer as much error handling as possible to the tree walker. This way you get much better error messages. With your example:

a.b4.f.5

Lexer: Unexpected character at '4'
Parser: Extraneous token '4'
Walker (Though you can do this one in the parser): 'b4' is not a valid component of multipart identifier

So:

ID : LETTER+;
NUM : DIGIT+;
id : id_part (DOT^ id_part)*  { actions to check in Java go here if you have no tree walker } ;


Jim




From harrrrpo at gmail.com  Sat Nov 14 09:35:48 2009
From: harrrrpo at gmail.com (Mohamed Yousef)
Date: Sat, 14 Nov 2009 19:35:48 +0200
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <538050a90911131336i6eac5ce2i164ab168c173d5c5@mail.gmail.com>
References: <538050a90911130410s1f38126ap89ead0273a4aee39@mail.gmail.com>
	<538050a90911131336i6eac5ce2i164ab168c173d5c5@mail.gmail.com>
Message-ID: <538050a90911140935q55b502cak4640fac70170b376@mail.gmail.com>

i found a solution - more of a hack - to enable/make it easier to do control
flow avoiding obscure act about token positions
before the real walk we make a small walk (not very expensive) to store
those data

nodes    = antlr3CommonTreeNodeStreamNewTree(yatgAST.tree,
ANTLR3_SIZE_HINT);
pANTLR3_BASE_TREE p;
while(true)
{
            // this should/can be further optimized by adding data to
certain nodes only
            p=nodes->tnstream->_LT(nodes->tnstream,1);

p->savedIndex=nodes->tnstream->istream->index(nodes->tnstream->istream);

if(p->getType(p)==nodes->EOF_NODE.token->getType(nodes->EOF_NODE.token))break;
            nodes->tnstream->istream->consume(nodes->tnstream->istream);
}

it enabled me to implement my IF statement in way i wanted

this is sure not the best way to do it , any ideas ?

Regards,
Mohammed Yousef

2009/11/13 Mohamed Yousef <harrrrpo at gmail.com>

> Sorry , it seems i jumped to a wrong result
> indices are calculated correctly and UP&Down are taken into consideration
> the real problem that i discovered now
> is that during tree parsing nodes have no info about the real start and end
> positions till respective childs are parsed , so here :
>
>
> if_expr
>     :
>       ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e
> }  )
>
> EIF would think and respond as c is the end of the world , it has no
> knowledge of EIF_THEN
>
> so we have either two solutions :
> 1) go parse it by hand : tedious , inefficient , probably won't be generic
> 2) another idea i have now is to store node indices (e.g. for COND , THEN,
> ELSE in EIF ) either during parsing or in a separate walk to "flow control"
> nodes
>
> i will try both and see
> any better ideas ?
>
> 2009/11/13 Mohamed Yousef <harrrrpo at gmail.com>
>
> Hello all,
>> i sent before regarding a bug in Control flow  in which a e=. won't define
>> e , i was suggested by jim to walk tree my self using LT
>>
>> now i have a problem , consider following
>>
>> if_expr
>>     :
>>       ^(EIF ^(EIF_COND c =expr_g) ^(EIF_THEN e=expr_g)  ) { // examine c
>> and selectively jump to e }
>>
>> must be changed to something like
>>
>> if_expr
>>     :
>>       ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to
>> e }  )
>>
>> and we have a problem
>> how can we skip the whole EIF_THEN tree (when c is false ) ? , if we try
>> to use the stopIndex of EIF to jump to it's end
>> we have the problem that all returned indices ,by all means , don't take
>> UP & DOWN nodes into accout , where the SEEK macro
>> takes them into accout
>> any ideas ?
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091114/2cbaed7a/attachment.html 

From jimi at temporal-wave.com  Sat Nov 14 10:03:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 14 Nov 2009 10:03:39 -0800
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <538050a90911140935q55b502cak4640fac70170b376@mail.gmail.com>
Message-ID: <66858a308a155f478581324098533b3c@temporal-wave.com>

Firstly, try to use the macros like LT() rather than following the pointers directly.

Secondly, have you tried the MARK, SEEK and REWIND macros - this kind of thing is what they are designed for.

If your imaginary tokens do not have the start and stop token indexes set, then you are probably rewriting them like this:

 

? ^(GOOONEWITHINDICES X Y ^(THISWONTGETINDICES A B))

 

Move the inner rewrite into a sub rule and it will get indices.

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mohamed Yousef
Sent: Saturday, November 14, 2009 9:36 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [C Target] How to skip a whole sub-tree (not just a token)

 

i found a solution - more of a hack - to enable/make it easier to do control flow avoiding obscure act about token positions
before the real walk we make a small walk (not very expensive) to store those data

nodes    = antlr3CommonTreeNodeStreamNewTree(yatgAST.tree, ANTLR3_SIZE_HINT); 
pANTLR3_BASE_TREE p;
while(true)
{
            // this should/can be further optimized by adding data to certain nodes only
            p=nodes->tnstream->_LT(nodes->tnstream,1);
            p->savedIndex=nodes->tnstream->istream->index(nodes->tnstream->istream);
            if(p->getType(p)==nodes->EOF_NODE.token->getType(nodes->EOF_NODE.token))break;
            nodes->tnstream->istream->consume(nodes->tnstream->istream);
}

it enabled me to implement my IF statement in way i wanted

this is sure not the best way to do it , any ideas ?

Regards,
Mohammed Yousef

2009/11/13 Mohamed Yousef <harrrrpo at gmail.com>

Sorry , it seems i jumped to a wrong result
indices are calculated correctly and UP&Down are taken into consideration
the real problem that i discovered now 
is that during tree parsing nodes have no info about the real start and end positions till respective childs are parsed , so here :



if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e }  )

EIF would think and respond as c is the end of the world , it has no knowledge of EIF_THEN

so we have either two solutions :
1) go parse it by hand : tedious , inefficient , probably won't be generic
2) another idea i have now is to store node indices (e.g. for COND , THEN, ELSE in EIF ) either during parsing or in a separate walk to "flow control" nodes

i will try both and see
any better ideas ?

2009/11/13 Mohamed Yousef <harrrrpo at gmail.com>

 

Hello all,
i sent before regarding a bug in Control flow  in which a e=. won't define e , i was suggested by jim to walk tree my self using LT

now i have a problem , consider following 

if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g) ^(EIF_THEN e=expr_g)  ) { // examine c and selectively jump to e }

must be changed to something like

if_expr
    :
      ^(EIF ^(EIF_COND c =expr_g)  { // examine c and selectively jump to e }  )

and we have a problem
how can we skip the whole EIF_THEN tree (when c is false ) ? , if we try to use the stopIndex of EIF to jump to it's end
we have the problem that all returned indices ,by all means , don't take UP & DOWN nodes into accout , where the SEEK macro
takes them into accout
any ideas ?

 

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091114/935389ad/attachment.html 

From jbb at acm.org  Sat Nov 14 10:15:10 2009
From: jbb at acm.org (John B. Brodie)
Date: Sat, 14 Nov 2009 13:15:10 -0500
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <1fbc73c942d526469d2c1eb0ee213d14@temporal-wave.com>
References: <1fbc73c942d526469d2c1eb0ee213d14@temporal-wave.com>
Message-ID: <1258222510.13521.12.camel@gecko.home.org>

Be wary of mng lexer rules into the parser! see below....
On Sat, 2009-11-14 at 09:17 -0800, Jim Idle wrote:
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Scott Oakes
> > Sent: Saturday, November 14, 2009 1:08 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with lexer rule for an optional
> > suffix
> > 
> > Hoping for some newbie help on the following lexer.
> > 
> >   fragment DIGIT:      '0'..'9';
> >   fragment LETTER: ('a'..'z'|'A'..'Z');
> > 
> >   ID:  (LETTER | '.')+ ('.' DIGIT+)?
> >        | DIGIT+
> >       ;
> 
> Well this rule is wrong. It allows:
> 
> .....99
> A..44
> 
> But not A.56
> 
> You would need:
> 
> ID : (LETTER+) (('.' LETTER)=>'.' LETTER+)* (('.' DIGIT)=> '.' DIGIT+)? ;
> 
> 
> But you really want to do such things in the parser as you usually want to dissect the identifier. If a part of the id can only be numbers, then you could do it in the lexer, but then any errors will come out from the lexer and be very confusing.
> 
> The general idea is to cover everything in the lexer so it does not issue messages, but leave context out of the lexer. Then in the parser, defer as much error handling as possible to the tree walker. This way you get much better error messages. With your example:
> 
> a.b4.f.5
> 
> Lexer: Unexpected character at '4'
> Parser: Extraneous token '4'
> Walker (Though you can do this one in the parser): 'b4' is not a valid component of multipart identifier
> 
> So:
> 
> ID : LETTER+;
> NUM : DIGIT+;
> id : id_part (DOT^ id_part)*  { actions to check in Java go here if you have no tree walker } ;

Jim makes an excellent argument for hoisting these lexer rules up into
the parser -- better error checking.

But you need to be aware of interactions with other lexer rules, in
particular, any token you put on the HIDDEN channel will be accepted in
between (*any*) of your other tokens.

So if you have Jim's 3 rules plus a lexer rule to ignore whitespace,
like:

ID : LETTER+ ;
NUM : DIGIT+ ; 
id : id_part (DOT^ id_part)* ; //also rules for id_part and DOT
WS : (' ' | '\t' | '\n' | '\r')+ { $channel = HIDDEN; } ;



then the input string "foo   .   bar" (observe spaces surrounding the .)
would be accepted by your lexer as the three token sequence ID DOT ID
If this is acceptable in your language, you should definitely follow
Jim's advice...




From claude.moulin at hds.utc.fr  Sat Nov 14 12:25:22 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Sat, 14 Nov 2009 21:25:22 +0100
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree
	(not	just a token)
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012ED331@xena.ad.utc>

Here is the solution I use in Java. The principle is also valid for
loops.

I suppose the CommonTreeNodeStream methods () I use have equivalent
functions in C

push, pop, and mark

 

if_statement 

@init{

  int mark_before_true = 0;

  int mark_before_false = 0;

}     :

 ^(IF e = expbool {mark_before_true = input.mark();} .
({mark_before_false = input.mark();} else_list = .)? ) 

        {

         if ($e.b) {

             push(mark_before_true);

             list_instructions();

             pop();

         }

         else 

         if (else_liste != null) {

             push(mark_before_false);

             list_instructions();

             pop();

         }

        }   

      ;

expbool is a rule returning a Boolean in its b field.

list_instructions is a rule parsing a tree containing instructions in a
list.

input.mark()  gives the index of the following node and in this case it
is the index I want to store.

And in the @members section I add two methods in order to simplify the
code:

  public void push(int index) {

     ((CommonTreeNodeStream)input).push(index);

  }

  public void pop() {

     ((CommonTreeNodeStream)input).pop();

  }

 

I hope it is usefull.

Claude

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091114/67038df5/attachment.html 

From david-sarah at jacaranda.org  Sat Nov 14 14:26:42 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Sat, 14 Nov 2009 22:26:42 +0000
Subject: [antlr-interest] Problem with lexer rule for an optional suffix
In-Reply-To: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
References: <8ce33b8f0911140108t781dc3d5nb4a62bf23fdaa81d@mail.gmail.com>
Message-ID: <4AFF2EA2.9050102@jacaranda.org>

Scott Oakes wrote:
> Hoping for some newbie help on the following lexer.
> 
>   fragment DIGIT:      '0'..'9';
>   fragment LETTER: ('a'..'z'|'A'..'Z');
> 
>   ID:  (LETTER | '.')+ ('.' DIGIT+)?
>        | DIGIT+
>       ;
> 
> The idea is that ID is things like: "foo", "32", "bar.baz", or
> "foo.bar.32". However with input "foo.bar.32", I get two tokens,
> "foo.bar." and "32". How could I rewrite this so I get a single ID
> token, "foo.bar.32"?

This happens because (LETTER | '.')+ greedily matches "foo.bar.",
and then there is no remaining '.', so ('.' DIGIT+) does not match.

There does not appear to be any intended distinction between letters
and digits in your examples. If that is correct, perhaps you want:

  fragment ELEMENT: (LETTER | DIGIT)+;
  ID : ELEMENT ('.' ELEMENT)*;

If elements should not contain mixed letters and digits, then use:

  fragment ELEMENT : LETTER+ | DIGIT+ ;
  ID : ELEMENT ('.' ELEMENT)*;

If an ID should allow empty elements (i.e. initial, final, or consecutive
'.' characters), then this would be simpler:

  ID : (LETTER | DIGIT | '.')+;

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091114/994327a8/attachment.bin 

From harrrrpo at gmail.com  Sat Nov 14 19:50:10 2009
From: harrrrpo at gmail.com (Mohamed Yousef)
Date: Sun, 15 Nov 2009 05:50:10 +0200
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <3402BD9F2C1434438EF1F319BE558FBB012ED331@xena.ad.utc>
References: <3402BD9F2C1434438EF1F319BE558FBB012ED331@xena.ad.utc>
Message-ID: <538050a90911141950yf7e707eicfd66ff7f1a18adc@mail.gmail.com>

Thanks Claude,
if i understand your code correctly , it looks that the "." eats the whole
"Then" tree ( tree executed when condition is true ) so u mark berfore it (
then case) and after it (else cases) , is that true ?

well , if this is true and this is the standard implementation , then this
is a bug in the C Target
in the C Target the macro MATCHANYT() represents the "." , unfortunetly it
matches only a signle token , not a sub-tree , making it really usless

however , it's really easy to modify this in the c target , just confirm me
this is the standard behavior
( a note i thinked of now , can anybody check to see if the java terget
saves the indexes of nodes , and i mean indexes of them as they appear in
the flattened parse tree , coz this is another cause of problems in C Target
)

Thanks
Regards,
Mohammed Yousef


2009/11/14 Claude Moulin <claude.moulin at hds.utc.fr>

>  Here is the solution I use in Java. The principle is also valid for
> loops.
>
> I suppose the CommonTreeNodeStream methods () I use have equivalent
> functions in C
>
> push, pop, and mark
>
>
>
> if_statement
>
> @init{
>
>   int mark_before_true = 0;
>
>   int mark_before_false = 0;
>
> }     :
>
>  ^(IF e = expbool {mark_before_true = input.mark();} . ({mark_before_false
> = input.mark();} else_list = .)? )
>
>         {
>
>          if ($e.b) {
>
>              push(mark_before_true);
>
>              list_instructions();
>
>              pop();
>
>          }
>
>          else
>
>          if (else_liste != null) {
>
>              push(mark_before_false);
>
>              list_instructions();
>
>              pop();
>
>          }
>
>         }
>
>       ;
>
> expbool is a rule returning a Boolean in its b field.
>
> list_instructions is a rule parsing a tree containing instructions in a
> list.
>
> input.mark()  gives the index of the following node and in this case it is
> the index I want to store.
>
> And in the @members section I add two methods in order to simplify the
> code:
>
>   public void push(int index) {
>
>      ((CommonTreeNodeStream)input).push(index);
>
>   }
>
>   public void pop() {
>
>      ((CommonTreeNodeStream)input).pop();
>
>   }
>
>
>
> I hope it is usefull.
>
> Claude
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091115/967f9f1b/attachment.html 

From jimi at temporal-wave.com  Sat Nov 14 22:38:55 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 14 Nov 2009 22:38:55 -0800
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <538050a90911141950yf7e707eicfd66ff7f1a18adc@mail.gmail.com>
Message-ID: <7383aa856355514cb09cd2a730059bcb@temporal-wave.com>

I think I have said more than a few times now that this will be fixed up for 3.2.1 - I thought I had fixed it for 3.2. Sorry it is really useless - sigh. For what it's worth, I think that you are going about this incorrectly, and that's why you are having problems beyond the '.' bug - probably your code is really useless - no offence though right?

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mohamed Yousef
Sent: Saturday, November 14, 2009 7:50 PM
To: Claude Moulin
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [C Target] How to skip a whole sub-tree (not just a token)

 

Thanks Claude,
if i understand your code correctly , it looks that the "." eats the whole "Then" tree ( tree executed when condition is true ) so u mark berfore it ( then case) and after it (else cases) , is that true ?

well , if this is true and this is the standard implementation , then this is a bug in the C Target
in the C Target the macro MATCHANYT() represents the "." , unfortunetly it matches only a signle token , not a sub-tree , making it really usless

however , it's really easy to modify this in the c target , just confirm me this is the standard behavior
( a note i thinked of now , can anybody check to see if the java terget saves the indexes of nodes , and i mean indexes of them as they appear in the flattened parse tree , coz this is another cause of problems in C Target )

Thanks
Regards,
Mohammed Yousef



2009/11/14 Claude Moulin <claude.moulin at hds.utc.fr>

Here is the solution I use in Java. The principle is also valid for loops.

I suppose the CommonTreeNodeStream methods () I use have equivalent functions in C

push, pop, and mark

 

if_statement 

@init{

  int mark_before_true = 0;

  int mark_before_false = 0;

}     :

 ^(IF e = expbool {mark_before_true = input.mark();} . ({mark_before_false = input.mark();} else_list = .)? ) 

        {

         if ($e.b) {

             push(mark_before_true);

             list_instructions();

             pop();

         }

         else 

         if (else_liste != null) {

             push(mark_before_false);

             list_instructions();

             pop();

         }

        }   

      ;

expbool is a rule returning a Boolean in its b field.

list_instructions is a rule parsing a tree containing instructions in a list.

input.mark()  gives the index of the following node and in this case it is the index I want to store.

And in the @members section I add two methods in order to simplify the code:

  public void push(int index) {

     ((CommonTreeNodeStream)input).push(index);

  }

  public void pop() {

     ((CommonTreeNodeStream)input).pop();

  }

 

I hope it is usefull.

Claude



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091114/6529e656/attachment.html 

From claude.moulin at hds.utc.fr  Sun Nov 15 03:35:24 2009
From: claude.moulin at hds.utc.fr (Claude Moulin)
Date: Sun, 15 Nov 2009 12:35:24 +0100
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <538050a90911141950yf7e707eicfd66ff7f1a18adc@mail.gmail.com>
References: <3402BD9F2C1434438EF1F319BE558FBB012ED331@xena.ad.utc>
	<538050a90911141950yf7e707eicfd66ff7f1a18adc@mail.gmail.com>
Message-ID: <3402BD9F2C1434438EF1F319BE558FBB012ED346@xena.ad.utc>

Hello Mohamed,

You are right. The parser consumes the nodes of the tree without doing nothing. I suppose it is based on DOWN and UP node matching. Terrence could explain better than me.

For me the dot (.) metacharacter is only useful if it represents a tree, not a single node. The principle works well with a tree (I have if, for, while statements that which can be nested). If you may have a case with one single node, I advice to create a tree with a node based on an imaginary token.

In my structure I have a IF tree with two or three child nodes which are trees.

To be completely exact I mark before the then case and before the else case (not after the then case as you said). The else case may not be present in the tree and that's why I test if the else_list node is not null.

I wait the parser is ready to parse the instruction after the IF and then I push the index I have marked, because any method built on a rule begins with a pop action. I need to pop after the method I use (list_instructions to actually parse the tree) because this one pushes an index that I have to cancel in order to retrieve the expected situation.

I am sorry but I have no experience with C. I don't know the behavior and the methods to use.

Regards,

Claude

 

 

De : Mohamed Yousef [mailto:harrrrpo at gmail.com] 
Envoy? : dimanche 15 novembre 2009 04:50
? : Claude Moulin
Cc : antlr-interest at antlr.org
Objet : Re: [antlr-interest] [C Target] How to skip a whole sub-tree (not just a token)

 

Thanks Claude,
if i understand your code correctly , it looks that the "." eats the whole "Then" tree ( tree executed when condition is true ) so u mark berfore it ( then case) and after it (else cases) , is that true ?

well , if this is true and this is the standard implementation , then this is a bug in the C Target
in the C Target the macro MATCHANYT() represents the "." , unfortunetly it matches only a signle token , not a sub-tree , making it really usless

however , it's really easy to modify this in the c target , just confirm me this is the standard behavior
( a note i thinked of now , can anybody check to see if the java terget saves the indexes of nodes , and i mean indexes of them as they appear in the flattened parse tree , coz this is another cause of problems in C Target )

Thanks
Regards,
Mohammed Yousef



2009/11/14 Claude Moulin <claude.moulin at hds.utc.fr>

Here is the solution I use in Java. The principle is also valid for loops.

I suppose the CommonTreeNodeStream methods () I use have equivalent functions in C

push, pop, and mark

 

if_statement 

@init{

  int mark_before_true = 0;

  int mark_before_false = 0;

}     :

 ^(IF e = expbool {mark_before_true = input.mark();} . ({mark_before_false = input.mark();} else_list = .)? ) 

        {

         if ($e.b) {

             push(mark_before_true);

             list_instructions();

             pop();

         }

         else 

         if (else_liste != null) {

             push(mark_before_false);

             list_instructions();

             pop();

         }

        }   

      ;

expbool is a rule returning a Boolean in its b field.

list_instructions is a rule parsing a tree containing instructions in a list.

input.mark()  gives the index of the following node and in this case it is the index I want to store.

And in the @members section I add two methods in order to simplify the code:

  public void push(int index) {

     ((CommonTreeNodeStream)input).push(index);

  }

  public void pop() {

     ((CommonTreeNodeStream)input).pop();

  }

 

I hope it is usefull.

Claude



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091115/f65fe8dc/attachment.html 

From harrrrpo at gmail.com  Sun Nov 15 07:07:38 2009
From: harrrrpo at gmail.com (Mohamed Yousef)
Date: Sun, 15 Nov 2009 17:07:38 +0200
Subject: [antlr-interest] [C Target] How to skip a whole sub-tree (not
	just a token)
In-Reply-To: <3402BD9F2C1434438EF1F319BE558FBB012ED346@xena.ad.utc>
References: <3402BD9F2C1434438EF1F319BE558FBB012ED331@xena.ad.utc>
	<538050a90911141950yf7e707eicfd66ff7f1a18adc@mail.gmail.com>
	<3402BD9F2C1434438EF1F319BE558FBB012ED346@xena.ad.utc>
Message-ID: <538050a90911150707j13477146o8fe66141dcc370f8@mail.gmail.com>

well , sorry jim if i sound offensive , i didn't mean it :)
anyway , did you check the indices problem , was i right or was i reading it
from a wrong place
the indices of tokens in parser are the same of them tree parser they are
indices of lexical tokens not tree nodes in stream
take this example

if (c) then 10 else 20

EIF D EIF_COND D OPERAND c U U  EIF_THEN D 10 U  EIF_ELSE D 20 U U
(D => DOWN , U => UP)

EIF.start =0 , EIF.end=11 ( there are 10 lexems , in tree parser it should
be 0,16)
EIF_THEN.start = 8 , EIF_THEN.end=  8 (it's only the "10" lexeme there)

the problem is i'm in the middle of my senior project so i can't go back and
i can't wait wait for 3.2.1
so i had to find a solution myself , it may be useless by 3.2.1 but i can't
wait

@Claude
my approach is a bit different , it's better depicted by the C code (assume
all indices are recorded in savedIndex field) , i don't think Terence would
be counting UP's and DOWN's for jumping this would be really ineffecient
compared to jumping using saved indices

Parser grammar :

if_expr
    :KW_IF cond=expr_g  ( KW_THEN | KW_DO )  then=expr_g  (KW_ELSE
relse=expr_g)?

    -> ^(EIF ^(EIF_COND $cond) ^(EIF_THEN $then) ^(EIF_ELSE ($relse)?)
EIF_END )

    ;

tree Parser :

if_expr
    :
      ^( j= EIF ^(EIF_COND c =expr_g)
{TInterp::IfExpr::Exec($j,$c.start,ctx);}  )

the code for that method

pANTLR3_BASE_TREE r;
//cond is our condition imaginary node
if(*((Tvarp)(cond->u))).bool== BTrue )
{
    r=(pANTLR3_BASE_TREE)(ifnode->getChild(ifnode,1)); //first child is
'then' node
    SEEK(r->savedIndex);
    MATCHT(EIF_THEN,NULL);
    MATCHT(ANTLR3_TOKEN_DOWN,NULL);
    xyz->expr_g(xyz); //xyz is our ctx , generally this parses/interprets
the 'then' statments
    r=(pANTLR3_BASE_TREE)(ifnode->getChild(ifnode,3));//3 is our END_IF node
    SEEK(r->savedIndex);
    MATCHT(EIF_END,NULL);
}
else
{
    r=(pANTLR3_BASE_TREE)(ifnode->getChild(ifnode,2));
    SEEK(r->savedIndex);
    MATCHT(EIF_ELSE,NULL);
    if(LA(1)==ANTLR3_TOKEN_DOWN) //if we can go down , this means there is
'else' statement
    {
        MATCHT(ANTLR3_TOKEN_DOWN,NULL);
        xyz->expr_g(xyz);//go interpret it
    }
    MATCHT(ANTLR3_TOKEN_UP,NULL);
    MATCHT(EIF_END,NULL);
}

Regards,
Mohammed Yousef

2009/11/15 Claude Moulin <claude.moulin at hds.utc.fr>

>  Hello Mohamed,
>
> You are right. The parser consumes the nodes of the tree without doing
> nothing. I suppose it is based on DOWN and UP node matching. Terrence could
> explain better than me.
>
> For me the dot (.) metacharacter is only useful if it represents a tree,
> not a single node. The principle works well with a tree (I have if, for,
> while statements that which can be nested). If you may have a case with one
> single node, I advice to create a tree with a node based on an imaginary
> token.
>
> In my structure I have a IF tree with two or three child nodes which are
> trees.
>
> To be completely exact I mark before the then case and before the else case
> (not after the then case as you said). The else case may not be present in
> the tree and that?s why I test if the else_list node is not null.
>
> I wait the parser is ready to parse the instruction after the IF and then I
> push the index I have marked, because any method built on a rule begins with
> a pop action. I need to pop after the method I use (list_instructions to
> actually parse the tree) because this one pushes an index that I have to
> cancel in order to retrieve the expected situation.
>
> I am sorry but I have no experience with C. I don?t know the behavior and
> the methods to use.
>
> Regards,
>
> Claude
>
>
>
>
>
> *De :* Mohamed Yousef [mailto:harrrrpo at gmail.com]
> *Envoy? :* dimanche 15 novembre 2009 04:50
> *? :* Claude Moulin
> *Cc **:* antlr-interest at antlr.org
> *Objet :* Re: [antlr-interest] [C Target] How to skip a whole sub-tree
> (not just a token)
>
>
>
> Thanks Claude,
> if i understand your code correctly , it looks that the "." eats the whole
> "Then" tree ( tree executed when condition is true ) so u mark berfore it (
> then case) and after it (else cases) , is that true ?
>
> well , if this is true and this is the standard implementation , then this
> is a bug in the C Target
> in the C Target the macro MATCHANYT() represents the "." , unfortunetly it
> matches only a signle token , not a sub-tree , making it really usless
>
> however , it's really easy to modify this in the c target , just confirm me
> this is the standard behavior
> ( a note i thinked of now , can anybody check to see if the java terget
> saves the indexes of nodes , and i mean indexes of them as they appear in
> the flattened parse tree , coz this is another cause of problems in C Target
> )
>
> Thanks
> Regards,
> Mohammed Yousef
>
>  2009/11/14 Claude Moulin <claude.moulin at hds.utc.fr>
>
> Here is the solution I use in Java. The principle is also valid for loops.
>
> I suppose the CommonTreeNodeStream methods () I use have equivalent
> functions in C
>
> push, pop, and mark
>
>
>
> if_statement
>
> @init{
>
>   int mark_before_true = 0;
>
>   int mark_before_false = 0;
>
> }     :
>
>  ^(IF e = expbool {mark_before_true = input.mark();} . ({mark_before_false
> = input.mark();} else_list = .)? )
>
>         {
>
>          if ($e.b) {
>
>              push(mark_before_true);
>
>              list_instructions();
>
>              pop();
>
>          }
>
>          else
>
>          if (else_liste != null) {
>
>              push(mark_before_false);
>
>              list_instructions();
>
>              pop();
>
>          }
>
>         }
>
>       ;
>
> expbool is a rule returning a Boolean in its b field.
>
> list_instructions is a rule parsing a tree containing instructions in a
> list.
>
> input.mark()  gives the index of the following node and in this case it is
> the index I want to store.
>
> And in the @members section I add two methods in order to simplify the
> code:
>
>   public void push(int index) {
>
>      ((CommonTreeNodeStream)input).push(index);
>
>   }
>
>   public void pop() {
>
>      ((CommonTreeNodeStream)input).pop();
>
>   }
>
>
>
> I hope it is usefull.
>
> Claude
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091115/a23b1288/attachment.html 

From fady at legsem.com  Sun Nov 15 08:04:59 2009
From: fady at legsem.com (Fady Moussallam)
Date: Sun, 15 Nov 2009 17:04:59 +0100
Subject: [antlr-interest] ANTLR-based COBOL structure to XML schema
	translator
Message-ID: <003901ca660d$62f9b360$28ed1a20$@com>

Hello listers,

 

I am done with my second project using ANTLR. It is a COBOL structure to XML
Schema translator. All open source at
http://code.google.com/p/legstar-cob2xsd/.

 

I learned a lot by reading postings on this list so I wanted to thank
everyone. A special thanks to Jim Idle, I know we are putting a lot of
stress on him.

 

Fady

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091115/a8b8f2e6/attachment.html 

From garym at oedata.com  Mon Nov 16 08:53:16 2009
From: garym at oedata.com (gary mazzaferro)
Date: Mon, 16 Nov 2009 09:53:16 -0700
Subject: [antlr-interest] AntlrWorks debugger: Class not found exception ?
Message-ID: <73bec9e70911160853u682ba261q1fb5f4b7bb6bdc5e@mail.gmail.com>

Hi,

I was attempting to run the antlrwork debugger, I bumped into a "Class not
found exception". I've tried reconfiguring the paths, with no success. The
only searches reported for a similar problem pertain to eclipse. I suspect
I'm missing something very obvious.

Any suggestions?

BTW, I'm running vista enterprise x64 and JRE 1.6.00.07

java.lang.NoClassDefFoundError: __Test__
Caused by: java.lang.ClassNotFoundException: __Test__
 at java.net.URLClassLoader$1.run(Unknown Source)
 at java.security.AccessController.doPrivileged(Native Method)
 at java.net.URLClassLoader.findClass(Unknown Source)
 at java.lang.ClassLoader.loadClass(Unknown Source)
 at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
 at java.lang.ClassLoader.loadClass(Unknown Source)
 at java.lang.ClassLoader.loadClassInternal(Unknown Source)
Could not find the main class: __Test__.  Program will exit.
Exception in thread "main"
cheers,
gary
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091116/7f14c1c3/attachment.html 

From allengeoffreyjones at gmail.com  Mon Nov 16 13:36:24 2009
From: allengeoffreyjones at gmail.com (Allen Jones)
Date: Mon, 16 Nov 2009 21:36:24 -0000
Subject: [antlr-interest] Problems with implicit "and" in query grammar
	build using Antlr
Message-ID: <000901ca6704$d9b924c0$8d2b6e40$@com>

Hi all.

I have been building a google-like query syntax parser in ANTLR (C#). This
is the first work I have done with ANTLR, or any parser generator, so it has
been quite an experience.

I want the user to be able to use "and" and "or" to combine search terms
e,g. "(apple or microsoft) and tablet and office". But I also want the user
to be able to enter a simple set of words and implicitly treat it as though
they are joined by "and" e.g. "apple tablet office windows" would be treated
as "apple and tablet and office and windows"

So far, I have been unable to get a syntax that correctly handles implicit
"ands" between sets of words.

Here is a snippet of my current grammar that works properly with an explicit
"and":

expression
    : andexpression (OR_OP^ andexpression)*
    ;

andexpression
options {
backtrack=true;
}
    : atom (AND_OP^ atom)*
    ;



The problem is that I need the "and" to form the root of the AST subtree,
which doesn't go well if the "and" isn't actually there. Even with
lookahead/backtrack I can't find the right syntax to make it work.

In wanting the AND_OP to be optional, I had to move away from the tree
construction operators because the following would not work:

andexpression
    : atom (AND_OP?^ atom)*
    ;

Ideally, I thought I needed to make andexpression look like this:

andexpression
options {
backtrack=true;
}
    : l=atom (AND_OP? r=atom)* -> ^(AND_OP $l $r?)+
    ;



But I get RewriteEmptyStreamException parsing strings where words are not
joined by 'and', for example "sheep dog fish".

If anybody has any tips on how to make my "and" optional, it would be much
appreciated.

Regards

Allen Jones

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091116/aa8b647e/attachment.html 

From jimi at temporal-wave.com  Mon Nov 16 13:43:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Nov 2009 13:43:19 -0800
Subject: [antlr-interest] Problems with implicit "and" in query grammar
	build using Antlr
In-Reply-To: <000901ca6704$d9b924c0$8d2b6e40$@com>
Message-ID: <52cf6b4393090548b4902e49be7c863c@temporal-wave.com>

Try:

 

expression

  : andexpression (opand^ andexpression)*

;

 

opand

 : OP_ AND -> OP_AND

| ->OP_AND

;

 

Which will be fine so long as your and expressions are not ambiguous without the AND keyword. I suggest defaulting operators is always fraught with danger though as no one can remember if it means OR or AND and some people will never actually know ;-)

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Allen Jones
Sent: Monday, November 16, 2009 1:36 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problems with implicit "and" in query grammar build using Antlr

 

Hi all.

I have been building a google-like query syntax parser in ANTLR (C#). This is the first work I have done with ANTLR, or any parser generator, so it has been quite an experience.

I want the user to be able to use "and" and "or" to combine search terms e,g. "(apple or microsoft) and tablet and office". But I also want the user to be able to enter a simple set of words and implicitly treat it as though they are joined by "and" e.g. "apple tablet office windows" would be treated as "apple and tablet and office and windows"

So far, I have been unable to get a syntax that correctly handles implicit "ands" between sets of words.

Here is a snippet of my current grammar that works properly with an explicit "and":

expression
    : andexpression (OR_OP^ andexpression)*
    ;

andexpression
options {
backtrack=true;
}
    : atom (AND_OP^ atom)*
    ;

The problem is that I need the "and" to form the root of the AST subtree, which doesn't go well if the "and" isn't actually there. Even with lookahead/backtrack I can't find the right syntax to make it work.

In wanting the AND_OP to be optional, I had to move away from the tree construction operators because the following would not work:

andexpression
    : atom (AND_OP?^ atom)*
    ;

Ideally, I thought I needed to make andexpression look like this:

andexpression
options {
backtrack=true;
}
    : l=atom (AND_OP? r=atom)* -> ^(AND_OP $l $r?)+
    ;

But I get RewriteEmptyStreamException parsing strings where words are not joined by 'and', for example "sheep dog fish".

If anybody has any tips on how to make my "and" optional, it would be much appreciated.

Regards

Allen Jones

 

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091116/41e89e36/attachment.html 

From drichird at hotmail.com  Tue Nov 17 13:06:23 2009
From: drichird at hotmail.com (Rich Parker)
Date: Tue, 17 Nov 2009 13:06:23 -0800
Subject: [antlr-interest] Test Rig
Message-ID: <SNT104-W334699C39A4B8E64753B0AC4A40@phx.gbl>


In ANTLRWorks 1.3 does the "Generate/Generate Code" menu selection always/sometimes/never generate a test rig, or does the test rig have to be written by hand/downloaded?  I have an outdated test rig (incorrect number of arguments passed to parser) and I have tried setting my preferences to both "use default" and also "Text" but neither generates a new test rig, and I can't remember how I got my original one.


 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091117/4e81ac6b/attachment.html 

From antlr-list at arizona-software.ch  Tue Nov 17 15:21:22 2009
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 17 Nov 2009 15:21:22 -0800
Subject: [antlr-interest] ANTLRWorks 1.3.1 released
Message-ID: <F7205867-0B60-456B-A42D-CC8512B3843F@arizona-software.ch>

Hi,

ANTLRWorks 1.3.1 is now available from http://www.antlr.org/works/index.html. It includes the following fixes:
    [AW-256] - NPE when attempting to debug
    [AW-257] - Issue parsing IntelliJ build number (IntelliJ 9)
    [AW-258] - Use UTF-8 encoding for debug input file

Regards,

Jean


From david-sarah at jacaranda.org  Tue Nov 17 17:22:56 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 18 Nov 2009 01:22:56 +0000
Subject: [antlr-interest] ANTLRWorks 1.3.1 released
In-Reply-To: <F7205867-0B60-456B-A42D-CC8512B3843F@arizona-software.ch>
References: <F7205867-0B60-456B-A42D-CC8512B3843F@arizona-software.ch>
Message-ID: <4B034C70.3080401@jacaranda.org>

Jean Bovet wrote:
> Hi,
> 
> ANTLRWorks 1.3.1 is now available from http://www.antlr.org/works/index.html. It includes the following fixes:
>     [AW-256] - NPE when attempting to debug
>     [AW-257] - Issue parsing IntelliJ build number (IntelliJ 9)
>     [AW-258] - Use UTF-8 encoding for debug input file

This hasn't fixed the bug in the tree view pane that was introduced in
ANTLRWorks 1.3:
<http://www.antlr.org/pipermail/antlr-interest/2009-September/036117.html>

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/b0f376fb/attachment.bin 

From manfred.bartz at gmail.com  Tue Nov 17 17:26:31 2009
From: manfred.bartz at gmail.com (Manfred Bartz)
Date: Wed, 18 Nov 2009 12:26:31 +1100
Subject: [antlr-interest] AntlrWorks and "filter" option
Message-ID: <ce10f7610911171726o3ef96166w55fa53449fd30c10@mail.gmail.com>

It looks like AntlrWorks  does not understand "options {filter=true;}" in
the grammar file.
For example I get this:
*error(133): FuzzyJava.g:2:1: illegal option filter*
Is support for this option planned for a future release?

Thanks
--
Manfred
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/fc50a59f/attachment.html 

From indhu.b at s7software.com  Tue Nov 17 20:00:01 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 18 Nov 2009 09:30:01 +0530
Subject: [antlr-interest] AntlrWorks and "filter" option
In-Reply-To: <ce10f7610911171726o3ef96166w55fa53449fd30c10@mail.gmail.com>
References: <ce10f7610911171726o3ef96166w55fa53449fd30c10@mail.gmail.com>
Message-ID: <001201ca6803$9bc0b9d0$d3422d70$@b@s7software.com>

What grammar? 'filter' doesn't work on parser grammar. I don't think it is
planned for future releases too.

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Manfred Bartz
Sent: Wednesday, November 18, 2009 6:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AntlrWorks and "filter" option

 

It looks like AntlrWorks  does not understand "options {filter=true;}" in
the grammar file.
For example I get this:

error(133): FuzzyJava.g:2:1: illegal option filter

Is support for this option planned for a future release?

Thanks
--
Manfred



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/2b9477be/attachment.html 

From indhu.b at s7software.com  Tue Nov 17 20:09:21 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 18 Nov 2009 09:39:21 +0530
Subject: [antlr-interest] AntlrWorks and "filter" option
In-Reply-To: <001201ca6803$9bc0b9d0$d3422d70$@b@s7software.com>
References: <ce10f7610911171726o3ef96166w55fa53449fd30c10@mail.gmail.com>
	<001201ca6803$9bc0b9d0$d3422d70$@b@s7software.com>
Message-ID: <001d01ca6804$e8ddfa60$ba99ef20$@b@s7software.com>

It works for lexer and tree grammars and AW recognizes both.

 

Looks like there is a 'todo' to introduce it in parser to

http://www.antlr.org/wiki/display/ANTLR3/filters+and+pattern+matching+for+pa
rser

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi
Sent: Wednesday, November 18, 2009 9:30 AM
To: 'Manfred Bartz'; antlr-interest at antlr.org
Subject: Re: [antlr-interest] AntlrWorks and "filter" option

 

What grammar? 'filter' doesn't work on parser grammar. I don't think it is
planned for future releases too.

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Manfred Bartz
Sent: Wednesday, November 18, 2009 6:57 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AntlrWorks and "filter" option

 

It looks like AntlrWorks  does not understand "options {filter=true;}" in
the grammar file.
For example I get this:

error(133): FuzzyJava.g:2:1: illegal option filter

Is support for this option planned for a future release?

Thanks
--
Manfred

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/1cdbff53/attachment.html 

From mohan.agarwal25 at gmail.com  Tue Nov 17 21:23:23 2009
From: mohan.agarwal25 at gmail.com (Mohan Agarwal)
Date: Wed, 18 Nov 2009 10:53:23 +0530
Subject: [antlr-interest] Sample Client code for Antlr Runtime api
Message-ID: <c1012be40911172123n719e2b04j9cacbd04d9687c1c@mail.gmail.com>

Hi,
    Can someone provide me tutorial or sample client code for using antlr
runtime api.

Thanking You
Mohan Agarwal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/cda7c88e/attachment.html 

From indhu.b at s7software.com  Tue Nov 17 21:35:40 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 18 Nov 2009 11:05:40 +0530
Subject: [antlr-interest] Sample Client code for Antlr Runtime api
In-Reply-To: <c1012be40911172123n719e2b04j9cacbd04d9687c1c@mail.gmail.com>
References: <c1012be40911172123n719e2b04j9cacbd04d9687c1c@mail.gmail.com>
Message-ID: <004f01ca6810$f7430350$e5c909f0$@b@s7software.com>

Did you visit the ANTLR homepage (http://www.antlr.org/)? 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mohan Agarwal
Sent: Wednesday, November 18, 2009 10:53 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Sample Client code for Antlr Runtime api

 

Hi,
    Can someone provide me tutorial or sample client code for using antlr
runtime api.

Thanking You
Mohan Agarwal

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/ca4ef35c/attachment.html 

From mohan.agarwal25 at gmail.com  Tue Nov 17 21:38:14 2009
From: mohan.agarwal25 at gmail.com (Mohan Agarwal)
Date: Wed, 18 Nov 2009 11:08:14 +0530
Subject: [antlr-interest] Problem regarding AntlrWorks Source Code
Message-ID: <c1012be40911172138m2920b1a3i6a5f7ba588f6c06d@mail.gmail.com>

Hi,
     I have downloaded the source code of AntlrWorks , but I am facing
various difficulties while navigating the source code ,since there is no
java doc mentioned over the classes and nor I have any design documentation
of AntlrWorks source code.
    Can some one provide me the java doc and design documentation of
AntlrWorks source code.

Thanking You
Mohan Agarwal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/cbc6821f/attachment.html 

From jimi at temporal-wave.com  Tue Nov 17 23:21:08 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Nov 2009 23:21:08 -0800
Subject: [antlr-interest] Problem regarding AntlrWorks Source Code
In-Reply-To: <c1012be40911172138m2920b1a3i6a5f7ba588f6c06d@mail.gmail.com>
Message-ID: <75abc026e669d643bde943bf5fa20d3e@temporal-wave.com>

mvn javadoc:javadoc

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mohan Agarwal
Sent: Tuesday, November 17, 2009 9:38 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problem regarding AntlrWorks Source Code

 

Hi,
     I have downloaded the source code of AntlrWorks , but I am facing various difficulties while navigating the source code ,since there is no java doc mentioned over the classes and nor I have any design documentation of AntlrWorks source code. 
    Can some one provide me the java doc and design documentation of AntlrWorks source code.

Thanking You
Mohan Agarwal



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091117/d44bc6d5/attachment.html 

From craig at palantir.co.za  Wed Nov 18 00:42:53 2009
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Wed, 18 Nov 2009 10:42:53 +0200
Subject: [antlr-interest] Referencing Template(s) in a grammar.
Message-ID: <20091118104253.nl25wsmpvocoo0wc@webmail.palantir.co.za>

Hi Kaleb,

Sorry for the late response, I have been away.

My question then is how do I put a 'tempate' into a scope so that I can use it
again.

If I have:
xpath: d+=declaration p+=path
       ->template(d=d, p=p) .. do stuff.

... (Lots of productions)

comp: ^('comparison' (op= ... // etc
       ->xmlWhere(declarations=d)

I need the 'd' template from the top production in xmlWhere which is a template
in a much lower production, how do I add the template to a scope in xpath so
that the same template is available as a parameter in xmlWhere.

I am sure that a scope will work. I have used the scopes before, but don't know
how to keep a template in the scope and use it again.
how do I reference the 'd' from 'd+=declaration' in the child production.

Thanks
Regards
Craig.


On Wed, Nov 11, 2009 at 9:00 PM,  <craig at palantir.co.za> wrote:
> Hi,
>
> I have a grammar that I am using to generate sql. My question is: Is
> there any easy way to refer to a 'parent' template in a child production.

[...snip..]

> I need xmlWhere(declarations={$d}...) but it's not available.

I was going to say that you need to use scopes to make that available later in
your code, but it looks like you're already using scopes.
Can you elaborate a bit on what I may have missed that makes scopes insufficient
for your needs?

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson




----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From Heiko.Folkerts at david-bs.de  Wed Nov 18 02:20:03 2009
From: Heiko.Folkerts at david-bs.de (Heiko Folkerts)
Date: Wed, 18 Nov 2009 11:20:03 +0100
Subject: [antlr-interest] Can the C Target be used with String template?
Message-ID: <93FCBF72DCE7634481C5DF1654D8FF1303406A38@DC2>

Hi,
I'd like to write a translator as explained in the ANTLR book using the String Template Library. When I try to run antlr I get an error that the file "ST.stg" was not found. Changing the target language to jave e.g. results in other errors which propably come from erros in my grammar.

So, can the C Target be used together with the String template library?
If not, are there alternatives beside print statements?
Regards
Heiko


Mit freundlichem Gru?
Heiko Folkerts
Systementwicklung und -design
--
______________________________________________
DAVID GmbH ? Wendenring 1 ? 38114 Braunschweig
Tel.: +49 531 24379-14
Fax.: +49 531 24379-79
E-Mail: mailto:Heiko.Folkerts at david-bs.de
WWW:   http://www.david-bs.de?
Eintragung: Amtsgericht Braunschweig, HRB 3167
Gesch?ftsf?hrer: Frank Ptok
______________________________________________

 

From mohan.agarwal25 at gmail.com  Wed Nov 18 03:15:28 2009
From: mohan.agarwal25 at gmail.com (Mohan Agarwal)
Date: Wed, 18 Nov 2009 16:45:28 +0530
Subject: [antlr-interest] Problem regarding AntlrWorks Source Code
In-Reply-To: <75abc026e669d643bde943bf5fa20d3e@temporal-wave.com>
References: <c1012be40911172138m2920b1a3i6a5f7ba588f6c06d@mail.gmail.com>
	<75abc026e669d643bde943bf5fa20d3e@temporal-wave.com>
Message-ID: <c1012be40911180315y35da2517k3c461ae8a819a106@mail.gmail.com>

Hi Indhu,
    Let me explain the my scenario in more detail. Presently I am working on
Hadoop, to execute a job on hadoop I am using Hive (which create a database
management system over hadoop). This hive has it's own query language called
Hive Query Language whose grammar is made by using AntlrWorks. Now I have
created a Hive Browser from where user can submit a hive query and see the
result. I also want to create a Interactive Query Builder to create a query,
so that user don't have to write a query in a query editor to execute it.
I want this query builder to work for all kind of queries with all possible
rules and restrictions. To accomplish I have to parse the grammar file for
Hive (i.e. Hive.g) and take out all the rule inside side it. When user
select any rule like selectSatetment all the information ( parser, literals
etc) will be shown on the dialog. Somewhere it is same as AntlrWorks ,which
also parse the grammar file and show all the rules in the tree . When user
click on any rule ,the syntax diagram for that rule comes on the bottom
panel. For this reason I was navigating the source code of AntlrWorls.
        I am attaching the grammar file for Hive (i.e. Hive.g).

Please help me to solve this problem.

Thanking You
Mohan Agarwal

On Wed, Nov 18, 2009 at 12:51 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  mvn javadoc:javadoc
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Mohan Agarwal
> *Sent:* Tuesday, November 17, 2009 9:38 PM
>
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Problem regarding AntlrWorks Source Code
>
>
>
> Hi,
>
>      I have downloaded the source code of AntlrWorks , but I am facing
> various difficulties while navigating the source code ,since there is no
> java doc mentioned over the classes and nor I have any design documentation
> of AntlrWorks source code.
>     Can some one provide me the java doc and design documentation of
> AntlrWorks source code.
>
> Thanking You
> Mohan Agarwal
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/e2ac79dc/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Hive.g
Type: application/octet-stream
Size: 35720 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/e2ac79dc/attachment.obj 

From sharwell at pixelminegames.com  Wed Nov 18 07:49:59 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 18 Nov 2009 09:49:59 -0600
Subject: [antlr-interest] Can the C Target be used with String template?
References: <93FCBF72DCE7634481C5DF1654D8FF1303406A38@DC2>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE42@martini.ironwillgames.com>

StringTemplate relies *heavily* on the reflection abilities and runtime type information of Java. For that reason, I was able to make a C# port of it where similar features are available, but it's been pretty conclusively established that there won't be a C/C++ version of it.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Heiko Folkerts
Sent: Wednesday, November 18, 2009 4:20 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can the C Target be used with String template?

Hi,
I'd like to write a translator as explained in the ANTLR book using the String Template Library. When I try to run antlr I get an error that the file "ST.stg" was not found. Changing the target language to jave e.g. results in other errors which propably come from erros in my grammar.

So, can the C Target be used together with the String template library?
If not, are there alternatives beside print statements?
Regards
Heiko


Mit freundlichem Gru?
Heiko Folkerts
Systementwicklung und -design
--
______________________________________________
DAVID GmbH ? Wendenring 1 ? 38114 Braunschweig
Tel.: +49 531 24379-14
Fax.: +49 531 24379-79
E-Mail: mailto:Heiko.Folkerts at david-bs.de
WWW:   http://www.david-bs.de?
Eintragung: Amtsgericht Braunschweig, HRB 3167
Gesch?ftsf?hrer: Frank Ptok
______________________________________________

 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Nov 18 09:06:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Nov 2009 09:06:24 -0800
Subject: [antlr-interest] Can the C Target be used with String template?
In-Reply-To: <93FCBF72DCE7634481C5DF1654D8FF1303406A38@DC2>
Message-ID: <16b4d690a66bfe40ae699f1996eae535@temporal-wave.com>

StringTemplate is an object oriented system that relies on run time type information and so on. It does not work with C. You need to construct a small set of C functions that can accumulate strings, or use the builtin ANTLR3_STRING stuff that I provide (but make sure you understand it first so you don't use too much memory to achieve your ends - it is a convenience thing in the library and better to have your own specific things to suit your purpose). Avoid printf directly - best to build a buffer then do what you need to do with that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Heiko Folkerts
> Sent: Wednesday, November 18, 2009 2:20 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can the C Target be used with String
> template?
> 
> Hi,
> I'd like to write a translator as explained in the ANTLR book using the
> String Template Library. When I try to run antlr I get an error that
> the file "ST.stg" was not found. Changing the target language to jave
> e.g. results in other errors which propably come from erros in my
> grammar.
> 
> So, can the C Target be used together with the String template library?
> If not, are there alternatives beside print statements?
> Regards
> Heiko
> 
> 
> Mit freundlichem Gru?
> Heiko Folkerts
> Systementwicklung und -design
> --
> ______________________________________________
> DAVID GmbH ? Wendenring 1 ? 38114 Braunschweig
> Tel.: +49 531 24379-14
> Fax.: +49 531 24379-79
> E-Mail: mailto:Heiko.Folkerts at david-bs.de
> WWW:   http://www.david-bs.de
> Eintragung: Amtsgericht Braunschweig, HRB 3167
> Gesch?ftsf?hrer: Frank Ptok
> ______________________________________________
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From cross at kojeware.com  Wed Nov 18 13:03:36 2009
From: cross at kojeware.com (Cameron Ross)
Date: Wed, 18 Nov 2009 16:03:36 -0500
Subject: [antlr-interest] Testing lexer grammars with gunit
Message-ID: <bc2b292f0911181303x43354c77x70f834cee2ddaddd@mail.gmail.com>

Hi,

I have a lexer grammar that I'd like to test using gunit.  However, the way
I have things configured, gunit assumes a composite grammar.  Is there a way
that I can tell gunit that the grammar being tested is a lexer grammar?

Thanks,
Cameron.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091118/7505912e/attachment.html 

From tmeyer at juniper.net  Fri Nov 20 08:46:02 2009
From: tmeyer at juniper.net (Tom Meyer)
Date: Fri, 20 Nov 2009 11:46:02 -0500
Subject: [antlr-interest] unsubscribe
In-Reply-To: <bc2b292f0911181303x43354c77x70f834cee2ddaddd@mail.gmail.com>
References: <bc2b292f0911181303x43354c77x70f834cee2ddaddd@mail.gmail.com>
Message-ID: <DF7F294AF4153D498141CBEFADB177049A1040B0C1@EMBX01-WF.jnpr.net>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091120/96d103ae/attachment.html 

From nandows at gmail.com  Fri Nov 20 11:18:12 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Fri, 20 Nov 2009 17:18:12 -0200
Subject: [antlr-interest] AST nodos
Message-ID: <92838bb30911201118x31695fbbwcfd478aa406e3271@mail.gmail.com>

Hi people,
      I am working with AST + java grammar. I am doing a parser in a
java.class ...
It return to me a tree with nodo of JavaTokenTypes.

In METHOD_DEF nodo, there is a Slist nodo with the body of my method.

1) Is there a way that recover it in code (String)?


Best Regards

Fernando
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091120/2efcc6e8/attachment.html 

From nandows at gmail.com  Fri Nov 20 11:21:02 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Fri, 20 Nov 2009 17:21:02 -0200
Subject: [antlr-interest] AST nodos
In-Reply-To: <92838bb30911201118x31695fbbwcfd478aa406e3271@mail.gmail.com>
References: <92838bb30911201118x31695fbbwcfd478aa406e3271@mail.gmail.com>
Message-ID: <92838bb30911201121i384c9f71s86731f2db00a37d0@mail.gmail.com>

1) 1) Is there a way that recover the body of method in code (String)?

2009/11/20 Fernando Freitas <nandows at gmail.com>

> Hi people,
>       I am working with AST + java grammar. I am doing a parser in a
> java.class ...
> It return to me a tree with nodo of JavaTokenTypes.
>
> In METHOD_DEF nodo, there is a Slist nodo with the body of my method.
>
> 1) Is there a way that recover it in code (String)?
>
>
> Best Regards
>
> Fernando
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091120/fed5449f/attachment.html 

From jean.morissette at gmail.com  Fri Nov 20 18:41:35 2009
From: jean.morissette at gmail.com (Jean Morissette)
Date: Fri, 20 Nov 2009 21:41:35 -0500
Subject: [antlr-interest] Unable to determine generated class
Message-ID: <97ad10900911201841o5e64e472h90626edceb3b56f4@mail.gmail.com>

Hi,

I'm trying to run Antlr3 Ant task but I get this error: "Unable to
determine generated class". What can possibly causes this error?

Thanks for your help,
Jean

From vipul.delwadia at gmail.com  Sun Nov 22 14:20:59 2009
From: vipul.delwadia at gmail.com (Vipul Delwadia)
Date: Mon, 23 Nov 2009 11:20:59 +1300
Subject: [antlr-interest] Parsing with inverse matches
Message-ID: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>

Hi,

Suppose I have a very simple grammar:

line:	x;

x	:	STRING+;

fragment BACKSLASH
	:	'\\';

NOTA:	BACKSLASH A;

A	:	'a';

STRING
	:	(~(A)|NOTA)+;

Now I want x to be able to match any sequence which doesn't have "a"
in it, including sequences which have "\a". This works for the most
part except when I try and match just "\a", at which point I get a
MismatchTokenException (or sometimes a NoViableAltException). However,
in the ANTLRWorks IDE if I parse it using the interpreter starting
from the STRING rule, it seems to match it just fine.

Any ideas?

Cheers,
Vipul

From kirby.bohling at gmail.com  Sun Nov 22 14:39:43 2009
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Sun, 22 Nov 2009 16:39:43 -0600
Subject: [antlr-interest] Parsing with inverse matches
In-Reply-To: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
References: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
Message-ID: <3cac8fdf0911221439x74bd8d37s711b348ced378a71@mail.gmail.com>

On Sun, Nov 22, 2009 at 4:20 PM, Vipul Delwadia
<vipul.delwadia at gmail.com> wrote:
> Hi,
>
> Suppose I have a very simple grammar:
>
> line: ? x;
>
> x ? ? ? : ? ? ? STRING+;
>
> fragment BACKSLASH
> ? ? ? ?: ? ? ? '\\';
>
> NOTA: ? BACKSLASH A;
>
> A ? ? ? : ? ? ? 'a';
>
> STRING
> ? ? ? ?: ? ? ? (~(A)|NOTA)+;
>
> Now I want x to be able to match any sequence which doesn't have "a"
> in it, including sequences which have "\a". This works for the most
> part except when I try and match just "\a", at which point I get a
> MismatchTokenException (or sometimes a NoViableAltException). However,
> in the ANTLRWorks IDE if I parse it using the interpreter starting
> from the STRING rule, it seems to match it just fine.
>
> Any ideas?

If I understand it correctly, the '\' is matched by the ~(A) portion
of the rule, and then it is incapable of matching the 'a' character.
I'm not sure what the best way to handle that is.  You can use
semantic or syntactic predicates to resolve these issues.  There are
subtle issues that I don't fully understand in the difference between
those.  I'd review the list posts to see what they discuss.

I think something like this:

((NOTA) => (NOTA)|~A)+

Would work, but I haven't actually tried it.

Kirby


>
> Cheers,
> Vipul
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From antlr at mirality.co.nz  Sun Nov 22 23:15:43 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 23 Nov 2009 20:15:43 +1300
Subject: [antlr-interest] Parsing with inverse matches
In-Reply-To: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.co
 m>
References: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
Message-ID: <20091123071607.975283418384@www.antlr.org>

At 11:20 23/11/2009, Vipul Delwadia wrote:
 >x	:	STRING+;
 >
 >fragment BACKSLASH
 >	:	'\\';
 >
 >NOTA:	BACKSLASH A;
 >
 >A	:	'a';
 >
 >STRING
 >	:	(~(A)|NOTA)+;
[...]
 > This works for the most part except when I try and match
 > just "\a", at which point I get a MismatchTokenException
 > (or sometimes a NoViableAltException).

The input "\a" by itself will produce a NOTA token, since that's 
the best-fit non-fragment rule.

Your parser is however not expecting that.  Almost certainly, both 
A and NOTA should be fragment rules.

(In general, you be suspicious any time a non-fragment lexer rule 
refers to any other non-fragment lexer rule.  It's not illegal, 
and sometimes it's essential, but unless you're really careful 
it's easy to break things by doing so.)


Also, as Kirby said, inside the STRING rule itself you have one 
alt which is a subset of the other.  Whenever you do this you 
should normally list the most general alt last, so NOTA should 
come before ~A.


From david-sarah at jacaranda.org  Sun Nov 22 23:45:04 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Mon, 23 Nov 2009 07:45:04 +0000
Subject: [antlr-interest] Parsing with inverse matches
In-Reply-To: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
References: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
Message-ID: <4B0A3D80.9030502@jacaranda.org>

Vipul Delwadia wrote:
> Hi,
>
> Suppose I have a very simple grammar:
>
> line:	x;
>
> x	:	STRING+;
>
> fragment BACKSLASH
> 	:	'\\';
>
> NOTA:	BACKSLASH A;
>
> A	:	'a';
>
> STRING
> 	:	(~(A)|NOTA)+;
>
> Now I want x to be able to match any sequence which doesn't have "a"
> in it, including sequences which have "\a".

A and NOTA should be fragment rules, but there are other problems,
for example (~(A)|NOTA) is ambiguous because ~(A) includes '\\'.
This should work (untested):

STRING : (~('a'|'\\') | ('\\' .))+ '\\'?;

Note that this will not allow a double-backslash followed by 'a'.
(In most languages, that would be an escaped backslash, so it
shouldn't be allowed.) You may or may not want to allow the
optional unterminated backslash ('\\'?) at the end.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/184766de/attachment.bin 

From stefan.frey at solenix.ch  Mon Nov 23 02:11:59 2009
From: stefan.frey at solenix.ch (Stefan Frey)
Date: Mon, 23 Nov 2009 11:11:59 +0100
Subject: [antlr-interest] How to start?
Message-ID: <32F56541-23CD-4FCA-A43C-CF2FAC4B79B9@solenix.ch>

Hi there i need some help,

i'm quite new to ANTLR and this is my first attempt. I'm trying to write a translator which converts files written in an so called operational language into java. 
Here a short example:

if (Demo1<> 0) and (Demo2<> 0) and (Demo3 <> 65535) and (Demo3 <> 0) then
	if (Demo3 >= 32768) then
		1.0 * Demo3 / Demo1 * Const1;
	else
		1.0 * Demo3 / Demo2 * Const2;
	endif;
else
	0;
endif;


should be converted to something like this:


public class Demo extends Synthetic {

	public Demo() {
		super();
	}

	protected boolean init() {
		String[] list = { "Demo1", "Demo2", "Demo3" };
		return setParametersNeeded(list);
	}

	protected void doComputation() {
		double Demo1= getValue("Demo1");
		double Demo2 = getValue("Demo2");
		double Demo3 = getValue("Demo3");
		double Const1 = Constants.Const1;
		double Const2 = Constants.Const2;

		if ((Demo1!= 0) && (Demo2 != 0) && (Demo3 != 65535)
				&& (Demo3 != 0)) {
			if (Demo3 >= 32768) {
				syntheticValue = Demo3 / Demo1* Const1;
			} else {
				syntheticValue = Demo3 / Demo2 * Const2;
			}
		} else {
			syntheticValue = 0;
		}
	}
}


So here are some of my questions :)
Is it possible to do this and how much effort will i probably take?
Where and how should i start? Are there any Examples or Samples of anything similar?


Cheers Stefan

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/02913450/attachment.html 

From alex at lexoft.eu  Mon Nov 23 02:43:52 2009
From: alex at lexoft.eu (Alexandru Nedelcu)
Date: Mon, 23 Nov 2009 12:43:52 +0200
Subject: [antlr-interest] Strange grammar errors
Message-ID: <1258973032.7823.42.camel@gathern.lan>

I'm reading "Programming Language Processors in Java" while
experimenting with Antlr at the same time, and I tried converting the
first example of a BNF specification to Antlr.

See here (the lines with errors reported are highlighted) ...
    http://pastebin.com/m51e453e4

As you can see it is very simple, and I eliminated left-recursions, but
I'm getting the errors posted here ...
    http://pastebin.com/m54d656a6

I'm using Antlr 3.2 and ANTLRWorks 1.3.1 for editing. Antlrworks says
that the grammar is OK, until I try compiling it.

I don't really know what I'm doing wrong, is this a bug? It looks like
an Antlr syntax-error, but I couldn't figure it out.

Thanks,


-- 
Alexandru Nedelcu
http://alexn.org


From nandows at gmail.com  Mon Nov 23 04:26:03 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Mon, 23 Nov 2009 10:26:03 -0200
Subject: [antlr-interest] Example with grammar javatree15.g and java15.g
Message-ID: <92838bb30911230426p392d6943n6bea4e5c80c8946c@mail.gmail.com>

I was testing this example. Follows below:

http://jvalentino.blogspot.com/2007/04/creating-source-code-syntax-parser-in.html

so, I am trying to do it:

 CLASS_DEF
       |
       |
          --- OBJBLOCK
                  |
                  |
                  METHOD_DEF
                      |
                      |
                        ---- SLIST



  In SLIST I have all the code of Method body .


1) How should I do to get this code ?   How could I do to put the method
body in a string.

2) Is there a easy way to do it?

Anybody know?


Thanks and best Regards
Fernando
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/1e3d01c7/attachment.html 

From nandows at gmail.com  Mon Nov 23 05:03:44 2009
From: nandows at gmail.com (Fernando Freitas)
Date: Mon, 23 Nov 2009 11:03:44 -0200
Subject: [antlr-interest] Example with grammar javatree15.g and java15.g
In-Reply-To: <92838bb30911230426p392d6943n6bea4e5c80c8946c@mail.gmail.com>
References: <92838bb30911230426p392d6943n6bea4e5c80c8946c@mail.gmail.com>
Message-ID: <92838bb30911230503y49de096ds1cf87e7f77fa31be@mail.gmail.com>

I wanna do a inverse operation.  Get from the  tree and put in the code.


Do you have any idea about... how should I do to do it?

Cheers

Fernando


2009/11/23 Fernando Freitas <nandows at gmail.com>

> I was testing this example. Follows below:
>
>
> http://jvalentino.blogspot.com/2007/04/creating-source-code-syntax-parser-in.html
>
> so, I am trying to do it:
>
>  CLASS_DEF
>        |
>        |
>           --- OBJBLOCK
>                   |
>                   |
>                   METHOD_DEF
>                       |
>                       |
>                         ---- SLIST
>
>
>
>   In SLIST I have all the code of Method body .
>
>
> 1) How should I do to get this code ?   How could I do to put the method
> body in a string.
>
> 2) Is there a easy way to do it?
>
> Anybody know?
>
>
> Thanks and best Regards
> Fernando
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/585ca782/attachment.html 

From cross at kojeware.com  Mon Nov 23 06:06:23 2009
From: cross at kojeware.com (Cameron Ross)
Date: Mon, 23 Nov 2009 09:06:23 -0500
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <bc2b292f0911181303x43354c77x70f834cee2ddaddd@mail.gmail.com>
References: <bc2b292f0911181303x43354c77x70f834cee2ddaddd@mail.gmail.com>
Message-ID: <bc2b292f0911230606k14a21e21x759c74b76c0257b7@mail.gmail.com>

Anyone?

On Wed, Nov 18, 2009 at 4:03 PM, Cameron Ross <cross at kojeware.com> wrote:

> Hi,
>
> I have a lexer grammar that I'd like to test using gunit.  However, the way
> I have things configured, gunit assumes a composite grammar.  Is there a way
> that I can tell gunit that the grammar being tested is a lexer grammar?
>
> Thanks,
> Cameron.
>



-- 
Cameron Ross
Director of Technology
Kojeware Corporation
705-929-1492
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/744dcb18/attachment.html 

From vipul.delwadia at gmail.com  Mon Nov 23 13:32:44 2009
From: vipul.delwadia at gmail.com (Vipul Delwadia)
Date: Tue, 24 Nov 2009 10:32:44 +1300
Subject: [antlr-interest] Parsing with inverse matches
In-Reply-To: <4B0A3D80.9030502@jacaranda.org>
References: <76d9a6320911221420h3f766b66uec8fbd79078ae3a3@mail.gmail.com>
	<4B0A3D80.9030502@jacaranda.org>
Message-ID: <FC19E7C3-BC9C-4B97-A01B-A61C5A47CA15@gmail.com>

On 23/11/2009, at 8:45 PM, David-Sarah Hopwood wrote:
> A and NOTA should be fragment rules ...

On 23/11/2009, at 8:15 PM, Gavin Lambert wrote:
> The input "\a" by itself will produce a NOTA token, since that's the best-fit non-fragment rule.
> 
> Your parser is however not expecting that.  Almost certainly, both A and NOTA should be fragment rules.

You're both quite right, changing the rules to be fragment solved the issue.

Thanks for the help!

Vipul

From jimi at temporal-wave.com  Mon Nov 23 13:42:16 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Nov 2009 13:42:16 -0800
Subject: [antlr-interest] Strange grammar errors
In-Reply-To: <1258973032.7823.42.camel@gathern.lan>
Message-ID: <e9f58be27eb2724999bd04f1176e2e75@temporal-wave.com>

You have a spurious single quote at the end of this line:

| 'if' expression 'then' single_command 'else' single_command'
                                                             ^

I suggest that you don't use inline 'literals' in the parser, create lexer tokens for them all - when you are starting out, they tend to get you in to trouble :-)

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alexandru Nedelcu
> Sent: Monday, November 23, 2009 2:44 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Strange grammar errors
> 
> I'm reading "Programming Language Processors in Java" while
> experimenting with Antlr at the same time, and I tried converting the
> first example of a BNF specification to Antlr.
> 
> See here (the lines with errors reported are highlighted) ...
>     http://pastebin.com/m51e453e4
> 
> As you can see it is very simple, and I eliminated left-recursions, but
> I'm getting the errors posted here ...
>     http://pastebin.com/m54d656a6
> 
> I'm using Antlr 3.2 and ANTLRWorks 1.3.1 for editing. Antlrworks says
> that the grammar is OK, until I try compiling it.
> 
> I don't really know what I'm doing wrong, is this a bug? It looks like
> an Antlr syntax-error, but I couldn't figure it out.
> 
> Thanks,
> 
> 
> --
> Alexandru Nedelcu
> http://alexn.org
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Mon Nov 23 13:48:25 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Nov 2009 13:48:25 -0800
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <bc2b292f0911230606k14a21e21x759c74b76c0257b7@mail.gmail.com>
Message-ID: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>

Not sure myself - it might be coded for composite grammars I suppose. What you could do though is create a small grammar that imports your lexer and has a dummy parse rule, then test that grammar. This would be a workaround of course.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Ross
Sent: Monday, November 23, 2009 6:06 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Testing lexer grammars with gunit

 

Anyone?

On Wed, Nov 18, 2009 at 4:03 PM, Cameron Ross <cross at kojeware.com> wrote:

Hi,

 

I have a lexer grammar that I'd like to test using gunit.  However, the way I have things configured, gunit assumes a composite grammar.  Is there a way that I can tell gunit that the grammar being tested is a lexer grammar?

 

Thanks,

Cameron.




-- 
Cameron Ross
Director of Technology
Kojeware Corporation
705-929-1492



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/74c4d47a/attachment.html 

From leon.antlr at mac.com  Mon Nov 23 23:54:22 2009
From: leon.antlr at mac.com (Leon Su)
Date: Mon, 23 Nov 2009 23:54:22 -0800
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
References: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
Message-ID: <03EB1792-B35C-4DDC-88A7-F54D2541CF48@mac.com>

Yes, the current version of gUnit only accepts a composite grammar,  
i.e. you can only test lexical rules within a composite grammar.  What  
Jim suggested is a good way for testing your lexer grammar for now.   
Assuming that you have a lexer grammar L, and another grammar P which  
imports L and has only one dummy parser rule is created.  Then you can  
test all lexical rules as below.

gUnit P;
lexical-rule-name:
"input" OK
...

By the way, the next release of gUnit will allow you to test a lexer  
grammar individually with the syntax: gUnit lexer L;

Leon

On Nov 23, 2009, at 1:48 PM, Jim Idle wrote:

> Not sure myself ? it might be coded for composite grammars I  
> suppose. What you could do though is create a small grammar that  
> imports your lexer and has a dummy parse rule, then test that  
> grammar. This would be a workaround of course.
>
> Jim
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org 
> ] On Behalf Of Cameron Ross
> Sent: Monday, November 23, 2009 6:06 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Testing lexer grammars with gunit
>
> Anyone?
>
> On Wed, Nov 18, 2009 at 4:03 PM, Cameron Ross <cross at kojeware.com>  
> wrote:
> Hi,
>
> I have a lexer grammar that I'd like to test using gunit.  However,  
> the way I have things configured, gunit assumes a composite  
> grammar.  Is there a way that I can tell gunit that the grammar  
> being tested is a lexer grammar?
>
> Thanks,
> Cameron.
>
>
>
> -- 
> Cameron Ross
> Director of Technology
> Kojeware Corporation
> 705-929-1492
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091123/38ac2ca2/attachment.html 

From antlr at mirality.co.nz  Tue Nov 24 00:02:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 24 Nov 2009 21:02:21 +1300
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
References: <bc2b292f0911230606k14a21e21x759c74b76c0257b7@mail.gmail.com>
	<4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
Message-ID: <20091124080237.E027F3418478@www.antlr.org>

At 10:48 24/11/2009, Jim Idle wrote:
>Not sure myself ? it might be coded for 
>composite grammars I suppose. What you could do 
>though is create a small grammar that imports 
>your lexer and has a dummy parse rule, then test 
>that grammar. This would be a workaround of course.

Or just use your favourite brand of 
regular-code-unit-tester.  That's what I 
do.  Pumping some text in and verifying the token 
stream coming out is fairly straightforward, after all.


From antlr at mirality.co.nz  Tue Nov 24 00:17:46 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 24 Nov 2009 21:17:46 +1300
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <03EB1792-B35C-4DDC-88A7-F54D2541CF48@mac.com>
References: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
	<03EB1792-B35C-4DDC-88A7-F54D2541CF48@mac.com>
Message-ID: <20091124081841.1FC1A3418483@www.antlr.org>

At 20:54 24/11/2009, Leon Su wrote:
>gUnit P;
>lexical-rule-name:
>"input" OK
>...
>
>By the way, the next release of gUnit will allow you to test a 
>lexer grammar individually with the syntax: gUnit lexer L;

Does gUnit only support that kind of limited testing?  (I ask out 
of ignorance; I've never really looked at it.)

For lexer rules in particular, "OK" is a fairly meaningless 
test.  What'd be better is something like:

gUnit P;
LEXER:
   "abc" ID
   "abc123" ID
   "123" INT
   "a+b" ID["a"] PLUS ID["b"]
   "a--b" ID DECREMENT ID
   "a- -b" ID MINUS MINUS ID

etc.  Then you could do lexer-only testing for lexer grammars and 
lexer-and-parser testing for combined grammars.


From caetanosauer at gmail.com  Tue Nov 24 05:34:09 2009
From: caetanosauer at gmail.com (Caetano Sauer)
Date: Tue, 24 Nov 2009 14:34:09 +0100
Subject: [antlr-interest] AST for repeated occurrences of binary operators
Message-ID: <56ddf5f00911240534k78789bb5t3709aa32f45f723f@mail.gmail.com>

Hello everyone,

I am trying to generate an AST node for a logical OR operator. This would be
a parent OrExpr token with all the operands as children, for example:

a OR b OR c -> ^(OrExpr a b c)

My question is not how to do it, but I am wondering if the solution I found
is the best, since similar situations occur quite often in my grammar. Here
is the rule;

orExpr
    :    firstOperand=andExpr
        (OR furtherOperands+=andExpr)*
        -> { furtherOperands != null }? ^(OrExpr andExpr+)
        -> $firstOperand
    ;

The important thing here is that I want it to skip straight to andExpr in
case there is no OR token.

Thank you very much and regards,
Caetano.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091124/509b85ba/attachment.html 

From craig at palantir.co.za  Tue Nov 24 06:49:14 2009
From: craig at palantir.co.za (Craig Main)
Date: Tue, 24 Nov 2009 16:49:14 +0200
Subject: [antlr-interest]  Referencing Template(s) in a grammar.
Message-ID: <01eb01ca6d15$4a5a1980$df0e4c80$@co.za>


How do I put a 'tempate' into a scope so that I can expand it again.

If I have:


xpath: decl+=declaration p+=path
       ->template(decl=decl, p=p) .. do stuff.

... (Lots of productions)

comp: ^('comparison' (op= ... // etc
       ->xmlWhere(declarations=decl)

I need the 'decl' template from the top production in xmlWhere which is a
template
in a much lower production, how do I add the template to a scope in xpath so
that the same template is available as a parameter in xmlWhere.

I am sure that a scope will work. I have used the scopes before, but don't
know
how to keep a template in the scope and use it again.
how do I reference the 'decl' from 'decl+=declaration' in the child
production.

Is it even possible to reference upwards?

Thanks
Regards
Craig.



From pfa at isep.ipp.pt  Tue Nov 24 07:23:51 2009
From: pfa at isep.ipp.pt (pfa at isep.ipp.pt)
Date: Tue, 24 Nov 2009 16:23:51 +0100
Subject: [antlr-interest] tpantlr.code bundle, string template example
Message-ID: <77784d843a218068079beadfa4f50539@isep.ipp.pt>



Hi, 

Running string template example, T.g grammar, in a command line
console, works fine after changing the return type from getTemplate method
of the s_return class of the generated TParser. 

From: 

 public static
class s_return extends ParserRuleReturnScope { 

 public StringTemplate st;


 public Object getTemplate() { return st; } 

 public String toString() {
return st==null?null:st.toString(); } 

 };  

To: 

 public static class
s_return extends ParserRuleReturnScope { 

 public StringTemplate st; 


public StringTemplate getTemplate() { return st; } // here 

 public String
toString() { return st==null?null:st.toString(); } 

 }; 

Pedro 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091124/014171ca/attachment.html 

From pfa at isep.ipp.pt  Tue Nov 24 08:04:05 2009
From: pfa at isep.ipp.pt (pfa at isep.ipp.pt)
Date: Tue, 24 Nov 2009 17:04:05 +0100
Subject: [antlr-interest] Antlrworks 1.3.1 and string template
Message-ID: <6bb1ab43416b744faf3970a2ea2a32a9@isep.ipp.pt>



Hi, 

I'm trying, without sucess, to run in antlrworks a simple string
template example, from the tpantlr-bundle. The following error occur:


Exception in thread "main" java.lang.IllegalArgumentException: Can't find
template assign.st; group hierarchy is [TParserTemplates] 

 at
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)


 at
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)


 at
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)


 at
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:412)


 at TParser.s(TParser.java:125) 

 at __Test__.main(__Test__.java:14)


The assign rule belongs to the T group (T.stg file), which is in the
project root dir (with T.g grammar). The settings are the defaults ones:
output directory, for the java files, and outputclasses directory for the
classes. 

Pursuing this problem I tried 2 differents approaches: 

1.
changing the generated __Test__.java code 

2. replacing the generated
__Test__.java with the "hand made" Test.java (from the bundle) 

In both
cases I was unable to solve the problem. Meantime I collected some more
questions: 

1. In antlrworks can I use a specific test rig? I know about
the "Edit *.g Test Rig for Java" of the Run menu, and also the "Test Rig"
from the Preferences toolbox. But, what is suppose to write there, a
template? java code? I'm in the dark! 

2. How can I disable the remote
debugging? In some of my tests the reported error was timeout from port
49153! But as far as I understood this is only used for remote testing. My
scenario is standalone. 

I did searched for an answer in the email
repository and also in the antlrworks/antlr site. But didn't find anything.


Comments are welcome. 

Pedro 

  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091124/658302c2/attachment.html 

From jimi at temporal-wave.com  Tue Nov 24 10:46:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Nov 2009 10:46:38 -0800
Subject: [antlr-interest] AST for repeated occurrences of binary
	operators
In-Reply-To: <56ddf5f00911240534k78789bb5t3709aa32f45f723f@mail.gmail.com>
Message-ID: <addeb5443eb1914bbca7ce4998277e00@temporal-wave.com>

expr : ^(OR expr expr)

          | ^(AND expr expr)

          | atoms

          ;

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Caetano Sauer
Sent: Tuesday, November 24, 2009 5:34 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AST for repeated occurrences of binary operators

 

Hello everyone,

I am trying to generate an AST node for a logical OR operator. This would be a parent OrExpr token with all the operands as children, for example:

a OR b OR c -> ^(OrExpr a b c)

My question is not how to do it, but I am wondering if the solution I found is the best, since similar situations occur quite often in my grammar. Here is the rule;

orExpr
    :    firstOperand=andExpr
        (OR furtherOperands+=andExpr)*
        -> { furtherOperands != null }? ^(OrExpr andExpr+)
        -> $firstOperand
    ;

The important thing here is that I want it to skip straight to andExpr in case there is no OR token.

Thank you very much and regards,
Caetano.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091124/3bd1b937/attachment.html 

From jimi at temporal-wave.com  Tue Nov 24 10:59:35 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Nov 2009 10:59:35 -0800
Subject: [antlr-interest] Referencing Template(s) in a grammar.
In-Reply-To: <01eb01ca6d15$4a5a1980$df0e4c80$@co.za>
Message-ID: <6b9a064e0a345449a86360d89321f5b3@temporal-wave.com>

Can you not just return the template up the rule chain, or the thing that the xmlWhere template needs to reference down the rule chain, or just put that thing itself in the scope and set it when you create the template? 

However you just need a StringTemplate field in a scope and set it to whatever. $st refers to the current rules ST.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Craig Main
> Sent: Tuesday, November 24, 2009 6:49 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Referencing Template(s) in a grammar.
> 
> 
> How do I put a 'tempate' into a scope so that I can expand it again.
> 
> If I have:
> 
> 
> xpath: decl+=declaration p+=path
>        ->template(decl=decl, p=p) .. do stuff.
> 
> ... (Lots of productions)
> 
> comp: ^('comparison' (op= ... // etc
>        ->xmlWhere(declarations=decl)
> 
> I need the 'decl' template from the top production in xmlWhere which is
> a
> template
> in a much lower production, how do I add the template to a scope in
> xpath so
> that the same template is available as a parameter in xmlWhere.
> 
> I am sure that a scope will work. I have used the scopes before, but
> don't
> know
> how to keep a template in the scope and use it again.
> how do I reference the 'decl' from 'decl+=declaration' in the child
> production.
> 
> Is it even possible to reference upwards?
> 
> Thanks
> Regards
> Craig.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From parrt at cs.usfca.edu  Tue Nov 24 12:02:34 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Nov 2009 12:02:34 -0800
Subject: [antlr-interest] Antlrworks 1.3.1 and string template
In-Reply-To: <6bb1ab43416b744faf3970a2ea2a32a9@isep.ipp.pt>
References: <6bb1ab43416b744faf3970a2ea2a32a9@isep.ipp.pt>
Message-ID: <EAF20F6F-5F60-4EA1-8533-B814E1C67367@cs.usfca.edu>

no doubt this is a class path issue; Java only likes to look in the jar it started up a program in for resources and classes. If assign.st isn't in that jar, Java won't see it.
Ter
On Nov 24, 2009, at 8:04 AM, <pfa at isep.ipp.pt> <pfa at isep.ipp.pt> wrote:

> Hi,
> 
> I'm trying, without sucess, to run in antlrworks a simple string template example, from the tpantlr-bundle. The following error occur:
> 
> 
> Exception in thread "main" java.lang.IllegalArgumentException: Can't find template assign.st; group hierarchy is [TParserTemplates]
> 
>  at org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
> 
>  at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
> 
>  at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
> 
>  at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:412)
> 
>  at TParser.s(TParser.java:125)
> 
>  at __Test__.main(__Test__.java:14)
> 
> The assign rule belongs to the T group (T.stg file), which is in the project root dir (with T.g grammar). The settings are the defaults ones: output directory, for the java files, and output\classes directory for the classes.
> 
> Pursuing this problem I tried 2 differents approaches:
> 
> 1. changing the generated  __Test__.java code
> 
> 2. replacing the generated __Test__.java with the "hand made" Test.java (from the bundle)
> 
> In both cases I was unable to solve the problem. Meantime I collected some more questions:
> 
> 1. In antlrworks can I use a specific test rig? I know about the "Edit *.g Test Rig for Java" of the Run menu, and also the "Test Rig" from the Preferences toolbox. But, what is suppose to write there, a template? java code? I'm in the dark!
> 
> 2. How can I disable the remote debugging? In some of my tests the reported error was timeout from port 49153! But as far as I understood this is only used for remote testing. My scenario is standalone.
> 
> I did searched for an answer in the email repository and also in the antlrworks/antlr site. But didn't find anything.
> 
> Comments are welcome.
> 
> Pedro
> 
>  
>  
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From boughtonp at gmail.com  Tue Nov 24 12:08:28 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Tue, 24 Nov 2009 20:08:28 +0000
Subject: [antlr-interest] Parser hanging at proxy.handshake call ?
Message-ID: <5d97c170911241208o4515a989j155a224b96174dbd@mail.gmail.com>

Hi all,

I am attempting to get a basic ECMAScript parser working, and found a
complete grammar here:
http://research.xebic.com/es3/

And that appears to compile and produce the appropriate Java files ok.
( I'm using the ANTLR IDE Eclipse plugin, running on Eclipse 3.5 )

However, when actually trying to use it with a simple test, it just hangs.
( following guide at
http://www.antlr.org/wiki/pages/viewpage.action?pageId=789 )

I've tracked down the problem to a function call of proxy.handshake()
which ultimately comes from
org.antlr.runtime.debug.DebugEventSocketProxy, but I don't know what
to try next - do I even need debugging; can I disable it somehow and
see if that helps?

Searching on the problem finds only one related problem, but with no resolution:
http://www.mail-archive.com/il-antlr-interest at googlegroups.com/msg04633.html


Anyone have any idea how I stop it hanging and get it to work?


Thanks,

Peter

From david-sarah at jacaranda.org  Tue Nov 24 12:37:40 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 24 Nov 2009 20:37:40 +0000
Subject: [antlr-interest] AST for repeated occurrences of binary
	operators
In-Reply-To: <addeb5443eb1914bbca7ce4998277e00@temporal-wave.com>
References: <addeb5443eb1914bbca7ce4998277e00@temporal-wave.com>
Message-ID: <4B0C4414.3000508@jacaranda.org>

Jim Idle wrote:
> expr : ^(OR expr expr)
>      | ^(AND expr expr)
>      | atoms
>      ;

That's not equivalent; you want just

  expr : andExpr (^OR andExpr)*;

> The important thing here is that I want it to skip straight to andExpr in case there is no OR token.

The above syntax will do that.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091124/4c06c02d/attachment.bin 

From liblit at cs.wisc.edu  Tue Nov 24 13:55:22 2009
From: liblit at cs.wisc.edu (Ben Liblit)
Date: Tue, 24 Nov 2009 15:55:22 -0600
Subject: [antlr-interest] keeping derived attributes after initial parse
Message-ID: <4B0C564A.3000107@cs.wisc.edu>

My AST contains the basic syntax of the language I am parsing.  I would 
like to augment that with some derived information.  For example, I have 
struct-like aggregates where each field knows its size, and I would like 
the overall aggregate to know its overall size (summed across all fields).

This derived information is very easy to express using "returns" 
attributes.  For example:

	aggregate returns [int size]
	  : '{' (field { $size += $field.size })+ '}'
	  -> ... ;

	field returns [int size]
	  : ... { $size = ... }
	  -> ... ;

However, these returned attributes seem too transient for my use.  The 
size of the aggregate will be visible to the rule that invoked the 
aggregate rule, but I need to keep this information around long after 
initial parsing is done.  In particular, I would like to refer to the 
aggregate's already-computed size in later tree grammar passes that emit 
string templates.  For example:

	tree grammar ... ;

	aggregate: ... -> aggregate(size={????}, fields={$fields}) ;

I cannot find any way to access the computed size attribute in order to 
fill in that "????" spot.  It seems that the returned attributes are 
quite transient, no longer accessible once the initial parse is over.

I considered stashing the computed attribute values in the text of extra 
(imaginary) tokens, but that requires converting all such values to 
strings, which would be painful in many cases.  Where / how should I 
keep this extra information around?  Should I be creating my own 
CommonTree subclass with extra fields to store this stuff?  Or is there 
some more standard way of carrying this extra information around?

-- Ben

From david-sarah at jacaranda.org  Tue Nov 24 16:22:29 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 25 Nov 2009 00:22:29 +0000
Subject: [antlr-interest] AST for repeated occurrences of binary
	operators
In-Reply-To: <56ddf5f00911241318x66504c45s6a6d6709723a3d84@mail.gmail.com>
References: <addeb5443eb1914bbca7ce4998277e00@temporal-wave.com>	
	<4B0C4414.3000508@jacaranda.org>
	<56ddf5f00911241318x66504c45s6a6d6709723a3d84@mail.gmail.com>
Message-ID: <4B0C78C5.4050805@jacaranda.org>

Caetano Sauer wrote:
>> On Nov 24, 2009 9:38 PM, "David-Sarah Hopwood" <david-sarah at jacaranda.org>
>> wrote:
>>  expr : andExpr (^OR andExpr)*;
>
> I am not sure if that's equivalent. In the a OR b OR c case, it would
> generate the tree (OR a (OR b (OR c))).

Actually it would produce (OR a (OR b c)).

> What I want is (OR a b c).

I think that will be produced by:

  orExpr : andExpr (^OR andExpr (OR! andExpr)*)?;

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/19857032/attachment.bin 

From jimi at temporal-wave.com  Tue Nov 24 16:29:45 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Nov 2009 16:29:45 -0800
Subject: [antlr-interest] AST for repeated occurrences of binary
	operators
In-Reply-To: <4B0C78C5.4050805@jacaranda.org>
Message-ID: <ded176af4384e14fb11eb59e3c01cd09@temporal-wave.com>

expr : ae+=andExpr (OR ae+=andExpr)* -> ^(OR $ae+) ;

But usually that isn't the best way to organize the tree and:

expr : andExpr (^OR andExpr)*;

Is what is needed. Then you walk the tree using the AST syntax I gave you before when I thought that that was what you were asking for.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Tuesday, November 24, 2009 4:22 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] AST for repeated occurrences of binary
> operators
> 
> Caetano Sauer wrote:
> >> On Nov 24, 2009 9:38 PM, "David-Sarah Hopwood"
> >> <david-sarah at jacaranda.org>
> >> wrote:
> >>  expr : andExpr (^OR andExpr)*;
> >
> > I am not sure if that's equivalent. In the a OR b OR c case, it would
> > generate the tree (OR a (OR b (OR c))).
> 
> Actually it would produce (OR a (OR b c)).
> 
> > What I want is (OR a b c).
> 
> I think that will be produced by:
> 
>   orExpr : andExpr (^OR andExpr (OR! andExpr)*)?;
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From david-sarah at jacaranda.org  Tue Nov 24 20:24:29 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 25 Nov 2009 04:24:29 +0000
Subject: [antlr-interest] AST for repeated occurrences of
	binary	operators
In-Reply-To: <ded176af4384e14fb11eb59e3c01cd09@temporal-wave.com>
References: <ded176af4384e14fb11eb59e3c01cd09@temporal-wave.com>
Message-ID: <4B0CB17D.6030206@jacaranda.org>

Jim Idle wrote:
> David-Sarah Hopwood wrote:
>> Caetano Sauer wrote:
>>> What I want is (OR a b c).
>>
>> I think that will be produced by:
>>
>>   orExpr : andExpr (^OR andExpr (OR! andExpr)*)?;
>
> expr : ae+=andExpr (OR ae+=andExpr)* -> ^(OR $ae+) ;

That isn't what the poster asked for: it will produce '(OR a)' when
the input is an andExpr, whereas what I posted above should produce
just 'a', if I haven't made a mistake.

> But usually that isn't the best way to organize the tree and:
> 
> expr : andExpr (^OR andExpr)*;
> 
> Is what is needed.

I agree. For binary operators, a binary AST is easier to deal with.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/24006c16/attachment.bin 

From sivaits4u at gmail.com  Tue Nov 24 23:27:43 2009
From: sivaits4u at gmail.com (Siva B)
Date: Wed, 25 Nov 2009 12:57:43 +0530
Subject: [antlr-interest] variable number of arguments to a function
Message-ID: <581ce2790911242327r73d3f95es84d8e04d9b705bf8@mail.gmail.com>

Hi All,

I am trying to write a small interpreter.
I have a small issue with function and its unknown number of arguments.
If I have different functions in my source and if want to call the
particular function based on the input , my grammar is like this.

functionCall {Result arg;}:
  id:IDENTIFIER ( arg=expr { arguments.add(arg); })*
  { callFunc(#id.getText(), arguments); }

But here arguments is an array .
So the arguments array is passed to that function.
I don't want to pass array a parameter . I want to pass the elements inside
the array as parameters.
Can Anybody post me some solution ASAP ???

plz let me know if you have any doubts...

Thanks in Advance,
Siva
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/24f3c4a7/attachment.html 

From leon.antlr at mac.com  Wed Nov 25 00:16:16 2009
From: leon.antlr at mac.com (Leon Su)
Date: Wed, 25 Nov 2009 00:16:16 -0800
Subject: [antlr-interest] Testing lexer grammars with gunit
In-Reply-To: <0KTL00GIHTR51CL0@smtpin128.mac.com>
References: <4b9779948a70c04da25b7df9785a01cb@temporal-wave.com>
	<03EB1792-B35C-4DDC-88A7-F54D2541CF48@mac.com>
	<0KTL00GIHTR51CL0@smtpin128.mac.com>
Message-ID: <BFA0F397-961A-47E5-AF71-2D12CB1267A0@mac.com>


On Nov 24, 2009, at 12:17 AM, Gavin Lambert wrote:

> At 20:54 24/11/2009, Leon Su wrote:
>> gUnit P;
>> lexical-rule-name:
>> "input" OK
>> ...
>>
>> By the way, the next release of gUnit will allow you to test a  
>> lexer grammar individually with the syntax: gUnit lexer L;
>
> Does gUnit only support that kind of limited testing?  (I ask out of  
> ignorance; I've never really looked at it.)
>
> For lexer rules in particular, "OK" is a fairly meaningless test.   
> What'd be better is something like:
>
> gUnit P;
> LEXER:
>  "abc" ID
>  "abc123" ID
>  "123" INT
>  "a+b" ID["a"] PLUS ID["b"]
>  "a--b" ID DECREMENT ID
>  "a- -b" ID MINUS MINUS ID
>
> etc.  Then you could do lexer-only testing for lexer grammars and  
> lexer-and-parser testing for combined grammars.


gUnit treats every rule as a unit which is the smallest testable part  
of a grammar, and it tests whether individual units of the grammar are  
fit for use.
Therefore, the test you recommended above could be rewritten in the  
gUnit format as below:

gUnit P;
ID:
"abc" OK
"abc123" OK
"a" OK
"b" OK
INT:
"123" OK
PLUS:
"+" OK
"-" FAIL
...

But I also like your idea of the token-stream style testing for lexer  
grammars.

-L

From antlr at mirality.co.nz  Wed Nov 25 02:01:37 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 25 Nov 2009 23:01:37 +1300
Subject: [antlr-interest] AST for repeated occurrences of
 binary	operators
In-Reply-To: <4B0CB17D.6030206@jacaranda.org>
References: <ded176af4384e14fb11eb59e3c01cd09@temporal-wave.com>
	<4B0CB17D.6030206@jacaranda.org>
Message-ID: <20091125100148.023643418483@www.antlr.org>

At 17:24 25/11/2009, David-Sarah Hopwood wrote:
 >Jim Idle wrote:
 >> expr : ae+=andExpr (OR ae+=andExpr)* -> ^(OR $ae+) ;
 >
 >That isn't what the poster asked for: it will produce '(OR a)'
 >when the input is an andExpr, whereas what I posted above
 >should produce just 'a', if I haven't made a mistake.

I think the += based equivalent is this:

expr
   : (andExpr -> andExpr)
     ((OR ae+=andExpr)+ -> ^(OR $expr $ae+))?
   ;

A fair bit harder to read, although it can be expanded to do 
weirder things a bit easier. :)


From michael.bedward at gmail.com  Wed Nov 25 03:24:49 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 25 Nov 2009 22:24:49 +1100
Subject: [antlr-interest] variable number of arguments to a function
In-Reply-To: <581ce2790911242327r73d3f95es84d8e04d9b705bf8@mail.gmail.com>
References: <581ce2790911242327r73d3f95es84d8e04d9b705bf8@mail.gmail.com>
Message-ID: <e24c4c270911250324o9d10ba0l3339ace59139ab9a@mail.gmail.com>

Hello Siva,

Instead of have arguments or expressions explicitly in your function
rule, have an expression list rule.  The list is then the single
argument to the function.  That will take care of functions with any
number of arguments, including 0.

Example...

func_call       : ID LPAR expr_list RPAR -> ^(FUNC_CALL ID expr_list)
                ;

expr_list       : (expr (',' expr)* )? -> ^(EXPR_LIST expr*)
		;

That was taken from a grammar in one of my own projects...
http://jai-tools.googlecode.com/svn/trunk/jiffle/src/main/antlr3/jaitools/jiffle/parser/Jiffle.g

You can see plenty more examples in the grammars section of the ANTLR site.

Hope this helps.
Michael

From isabelle.perseil at enst.fr  Wed Nov 25 11:07:26 2009
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Wed, 25 Nov 2009 20:07:26 +0100
Subject: [antlr-interest] =?iso-8859-1?q?_LAST_CALL_FOR_PAPERS_=3A_UML=26A?=
 =?iso-8859-1?q?ADL=922010?=
Message-ID: <353d00a579758bc680ae2c93c4c70b4a.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  UML&AADL?2010
           http://www.artist-embedded.org/artist/UML-AADL-2010.html

                Workshop held in conjunction with ICECCS 2010
                The fifteenth IEEE International Conference on
                    Engineering of Complex Computer Systems
                    http://web.comlab.ox.ac.uk/ICECCS2010/
                               March 24th, 2010
                           University of Oxford, UK

************************************************************************

                   Submission deadline: November 30th, 2010
                   ----------------------------------------



Topics
======
New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favor the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behavior modeling and
model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behavior and/or architecture models. To this
end, we solicit papers (no more than 6 pages long) related to, but not
limited to, the following principal topics:

    - Model-based methodologies
    - Multi-domain specific modeling languages
    - Model-based engineering Process with AADL
    - Architectural analysis domain methods

    - Real-time Software/System development issues

    - Integration of different formalisms (e.g., Simulink/StateFlow,
      StateMate and Scade-drive)
    - Integration of multiple domains of architectural analysis
    - Model transformation and generative approaches

    - Model Checking of architecture specifications
    - ADLs behavioral models simulation, Scheduling analysis and Worst-case
      execution time prediction
    - Assuring implementation correctness to architectural specification and
      analysis

    - Tool chains facilitating architecture centric development


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper to
agusti[dot]canals[at]c-s[dot]fr with ?ICECCS 2010 UML&AADL Workshop? in
the title. Papers should not exceed 6 pages. Submitted manuscripts should
be in English and formatted in the style of the IEEE Computer Society
Proceedings Format. Preferably, submissions should be in PDF format.

All selected papers will be published in the IEEE Computer Society Press
Proceedings.


IMPORTANT DATES
===============
Submission deadline:             November 30th, 2009
All Notification of acceptance:  December 18th, 2009
Final version due:               January  22th, 2010
Workshop date:                   March    24th, 2010


Organizational sponsors
=======================
ARTIST NoE
OMG


Organizers and Programme Steering Committee
===========================================

Jean-Michel Bruel (IRIT, France)
Agusti Canals (CS, France)
Robert de Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Elie Najm (Telecom ParisTech, France)
Isabelle Perseil (Telecom ParisTech / INSERM, France)


Publicity Chair
===============
Sun Meng (CWI, The Netherlands)


IEEE CS TCCX Coordinator
========================
Mike Hinchey (NASA GSFC and Loyola College in Maryland, USA)


Programme Committee
===================

-* Yamine Ait Ameur (LISI / ENSMA, France)
-* Keijiro Araki (Kyushu University, Japan)
-* Grady Booch (IBM Fellow, USA)
-* Agusti Canals (CS, France)
-* DeJiu Chen (KTH, Sweden)
-* Juan Antonio de la Puente (Universidad Polit?cnica de Madrid, Spain)
-* Sebastien Demathieu (THALES, France)
-* Dionisio De Niz Villasenor (SEI, Carnegie Mellon, USA)
-* Vincent Englebert (University of Namur, Belgium)
-* Madeleine Faug?re (THALES, France)
-* Sandra C. P. Ferraz Fabbri (Federal University of S?o Carlos, Brazil)
-* Mamoun Filali (IRIT, France)
-* Robert France (Colorado State University, USA)
-* S?bastien G?rard (CEA-LIST, France)
-* Itana Maria de Souza Gimenes (UEM, Brazil)
-* Patrick Heymans (University of Namur, Belgium)
-* Irfan Hamid (Microsoft Corp, Canada)
-* J.J.M. Hooman (Embedded Systems Institute, The Netherlands)
-* J?r?me Hugues (ISAE, France)
-* Bruce Lewis (US Army AMCOM)
-* Johan Lilius (?bo Akademi University, Finland)
-* Ricardo J. Machado (University of Minho, Portugal)
-* Sun Meng (CWI, The Netherlands)
-* Dominique Mery (LORIA, France)
-* Thierry Millan (IRIT, France)
-* Elie Najm (Telecom ParisTech, France)
-* Laurent Pautet (Telecom ParisTech, France)
-* Alek  Radjenovic (University of York, United Kingdom)
-* Marc Reynolds (University of Western Australia, Australia)
-* Jos? Ra?l Romero Salguero (Universidad de C?rdoba, Spain)
-* Bernhard Rumpe (Braunschweig University of Technology, Germany)
-* Douglas C. Schmidt (Vanderbild University, USA)
-* Fran?oise Simonot Lion (LORIA, France)
-* Oleg Sokolsky (University of Pennsylvania, USA)
-* Roy Sterritt (University of Ulster, United Kingdom)
-* J?rn Guy S?? ( University of Queensland, Australia)
-* Jing Sun (University of Auckland, New Zealand)
-* Bedir Tekinerdo&#287;an (Bilkent University, Turkey)
-* Tullio Vardanega (University of Padua, Italy)
-* Fran?ois Vernadat (CNRS-LAAS, France)
-* Thomas Vergnaud (THALES, France)
-* Eugenio Villar (Universidad de Cantabria, Spain)
-* Andr? Windisch (EADS, Military Air Systems, Germany)
-* Sergio Yovine (CNRS-Verimag, France / Universidad de Buenos Aires)
-* Roberto V. Zicari (Goethe University Frankfurt, Germany)




From isabelle.perseil at enst.fr  Wed Nov 25 12:29:06 2009
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Wed, 25 Nov 2009 21:29:06 +0100
Subject: [antlr-interest] =?iso-8859-1?q?_LAST_CALL_FOR_PAPERS_=3A_UML=26A?=
 =?iso-8859-1?q?ADL=922010?=
Message-ID: <c800057e550341b62cb593b1190921dc.squirrel@webmail1.telecom-paristech.fr>

The deadline is November 30th, 2009
**********************************************************************
                     CALL FOR PAPERS:  UML&AADL?2010
           http://www.artist-embedded.org/artist/UML-AADL-2010.html

                Workshop held in conjunction with ICECCS 2010
                The fifteenth IEEE International Conference on
                    Engineering of Complex Computer Systems
                    http://web.comlab.ox.ac.uk/ICECCS2010/
                               March 24th, 2010
                           University of Oxford, UK

************************************************************************

                   Submission deadline: November 30th, 2009
                   ----------------------------------------



Topics
======
New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favor the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behavior modeling and
model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behavior and/or architecture models. To this
end, we solicit papers (no more than 6 pages long) related to, but not
limited to, the following principal topics:

    - Model-based methodologies
    - Multi-domain specific modeling languages
    - Model-based engineering Process with AADL
    - Architectural analysis domain methods

    - Real-time Software/System development issues

    - Integration of different formalisms (e.g., Simulink/StateFlow,
      StateMate and Scade-drive)
    - Integration of multiple domains of architectural analysis
    - Model transformation and generative approaches

    - Model Checking of architecture specifications
    - ADLs behavioral models simulation, Scheduling analysis and Worst-case
      execution time prediction
    - Assuring implementation correctness to architectural specification and
      analysis

    - Tool chains facilitating architecture centric development


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper to
agusti[dot]canals[at]c-s[dot]fr with ?ICECCS 2010 UML&AADL Workshop? in
the title. Papers should not exceed 6 pages. Submitted manuscripts should
be in English and formatted in the style of the IEEE Computer Society
Proceedings Format. Preferably, submissions should be in PDF format.

All selected papers will be published in the IEEE Computer Society Press
Proceedings.


IMPORTANT DATES
===============
Submission deadline:             November 30th, 2009
All Notification of acceptance:  December 18th, 2009
Final version due:               January  22th, 2010
Workshop date:                   March    24th, 2010


Organizational sponsors
=======================
ARTIST NoE
OMG


Organizers and Programme Steering Committee
===========================================

Jean-Michel Bruel (IRIT, France)
Agusti Canals (CS, France)
Robert de Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Elie Najm (Telecom ParisTech, France)
Isabelle Perseil (Telecom ParisTech / INSERM, France)


Publicity Chair
===============
Sun Meng (CWI, The Netherlands)


IEEE CS TCCX Coordinator
========================
Mike Hinchey (NASA GSFC and Loyola College in Maryland, USA)


Programme Committee
===================

-* Yamine Ait Ameur (LISI / ENSMA, France)
-* Keijiro Araki (Kyushu University, Japan)
-* Grady Booch (IBM Fellow, USA)
-* Agusti Canals (CS, France)
-* DeJiu Chen (KTH, Sweden)
-* Juan Antonio de la Puente (Universidad Polit?cnica de Madrid, Spain)
-* Sebastien Demathieu (THALES, France)
-* Dionisio De Niz Villasenor (SEI, Carnegie Mellon, USA)
-* Vincent Englebert (University of Namur, Belgium)
-* Madeleine Faug?re (THALES, France)
-* Sandra C. P. Ferraz Fabbri (Federal University of S?o Carlos, Brazil)
-* Mamoun Filali (IRIT, France)
-* Robert France (Colorado State University, USA)
-* S?bastien G?rard (CEA-LIST, France)
-* Itana Maria de Souza Gimenes (UEM, Brazil)
-* Patrick Heymans (University of Namur, Belgium)
-* Irfan Hamid (Microsoft Corp, Canada)
-* J.J.M. Hooman (Embedded Systems Institute, The Netherlands)
-* J?r?me Hugues (ISAE, France)
-* Bruce Lewis (US Army AMCOM)
-* Johan Lilius (?bo Akademi University, Finland)
-* Ricardo J. Machado (University of Minho, Portugal)
-* Sun Meng (CWI, The Netherlands)
-* Dominique Mery (LORIA, France)
-* Thierry Millan (IRIT, France)
-* Elie Najm (Telecom ParisTech, France)
-* Laurent Pautet (Telecom ParisTech, France)
-* Alek  Radjenovic (University of York, United Kingdom)
-* Marc Reynolds (University of Western Australia, Australia)
-* Jos? Ra?l Romero Salguero (Universidad de C?rdoba, Spain)
-* Bernhard Rumpe (Braunschweig University of Technology, Germany)
-* Douglas C. Schmidt (Vanderbild University, USA)
-* Fran?oise Simonot Lion (LORIA, France)
-* Oleg Sokolsky (University of Pennsylvania, USA)
-* Roy Sterritt (University of Ulster, United Kingdom)
-* J?rn Guy S?? ( University of Queensland, Australia)
-* Jing Sun (University of Auckland, New Zealand)
-* Bedir Tekinerdo&#287;an (Bilkent University, Turkey)
-* Tullio Vardanega (University of Padua, Italy)
-* Fran?ois Vernadat (CNRS-LAAS, France)
-* Thomas Vergnaud (THALES, France)
-* Eugenio Villar (Universidad de Cantabria, Spain)
-* Andr? Windisch (EADS, Military Air Systems, Germany)
-* Sergio Yovine (CNRS-Verimag, France / Universidad de Buenos Aires)
-* Roberto V. Zicari (Goethe University Frankfurt, Germany)




From marcel at schaible-consulting.de  Wed Nov 25 14:43:31 2009
From: marcel at schaible-consulting.de (Marcel Schaible)
Date: Wed, 25 Nov 2009 23:43:31 +0100
Subject: [antlr-interest] Problem parsing float numbers
Message-ID: <5F9EEBF2-39A9-42AD-BDB5-BB3E92B44D81@schaible-consulting.de>

Hello everybody,

I have a problem with parsing floating point numbers:

My grammar contains the following part for recognizing floats:

fragment DIGIT : '0'..'9' ;
fragment INT   : DIGIT + ;
NUM     : INT ( '.' INT)? ;
EXP     : ( 'E' | 'e' ) ( '-' | '+')? NUM  ;
ENUM    : NUM ( EXP )? ;

When I feed into the parser 1.0 I got the following error message:

line 1:0 required (...)+ loop did not match anything at input '1.0'

I did not see the problem. Any ideas and comments are welcome!

Thanks in advance for your help.

Marcel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/9b6c9632/attachment.html 

From smcfarlin at ocsnet.net  Wed Nov 25 14:58:32 2009
From: smcfarlin at ocsnet.net (Steve McFarlin)
Date: Wed, 25 Nov 2009 14:58:32 -0800
Subject: [antlr-interest] Problem parsing float numbers
In-Reply-To: <5F9EEBF2-39A9-42AD-BDB5-BB3E92B44D81@schaible-consulting.de>
References: <5F9EEBF2-39A9-42AD-BDB5-BB3E92B44D81@schaible-consulting.de>
Message-ID: <B590930C-0B66-44ED-AA2D-14C4CA35C907@ocsnet.net>

How are you using these lexer rules? Check the parse tree in  
ANTLRWorks interpreter or debugger. You should be able to determine  
what lexer rule is being used for your input. This works for me with  
input 1.0


prog	:	start* ;

start:	NUM | EXP | ENUM ;

fragment DIGIT : '0'..'9' ;
fragment INT   : DIGIT + ;
NUM     : INT ( '.' INT)? ;
EXP     : ( 'E' | 'e' ) ( '-' | '+')? NUM  ;
ENUM    : NUM ( EXP )? ;


steve

On Nov 25, 2009, at 2:43 PM, Marcel Schaible wrote:

> Hello everybody,
>
> I have a problem with parsing floating point numbers:
>
> My grammar contains the following part for recognizing floats:
>
> fragment DIGIT : '0'..'9' ;
> fragment INT   : DIGIT + ;
> NUM     : INT ( '.' INT)? ;
> EXP     : ( 'E' | 'e' ) ( '-' | '+')? NUM  ;
> ENUM    : NUM ( EXP )? ;
>
> When I feed into the parser 1.0 I got the following error message:
>
> line 1:0 required (...)+ loop did not match anything at input '1.0'
>
> I did not see the problem. Any ideas and comments are welcome!
>
> Thanks in advance for your help.
>
> Marcel
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/99c68667/attachment.html 

From jimi at temporal-wave.com  Wed Nov 25 16:18:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Nov 2009 16:18:29 -0800
Subject: [antlr-interest] Problem parsing float numbers
In-Reply-To: <5F9EEBF2-39A9-42AD-BDB5-BB3E92B44D81@schaible-consulting.de>
Message-ID: <8c4bcc41812ca74caa7acfd0a22a1df2@temporal-wave.com>

Well, these rules are all ambiguous. I am sure you are getting errors about that? You can do two things:

 

Steal number parsing from a grammar that already supports the types you want.

 

See the FAQ:

 

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs

 

Though this does more than you are asking here, you can just take the pieces you need.

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcel Schaible
Sent: Wednesday, November 25, 2009 2:44 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problem parsing float numbers

 

Hello everybody,

 

I have a problem with parsing floating point numbers:

 

My grammar contains the following part for recognizing floats:

 

fragment DIGIT : '0'..'9' ;

fragment INT   : DIGIT + ;

NUM     : INT ( '.' INT)? ;

EXP     : ( 'E' | 'e' ) ( '-' | '+')? NUM  ;

ENUM    : NUM ( EXP )? ;

 

When I feed into the parser 1.0 I got the following error message:

 

line 1:0 required (...)+ loop did not match anything at input '1.0'

 

I did not see the problem. Any ideas and comments are welcome!

 

Thanks in advance for your help.

 

Marcel



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091125/00805a89/attachment.html 

From Heiko.Folkerts at david-bs.de  Thu Nov 26 01:37:15 2009
From: Heiko.Folkerts at david-bs.de (Heiko Folkerts)
Date: Thu, 26 Nov 2009 10:37:15 +0100
Subject: [antlr-interest] Catching multiple errors in a tree parser
Message-ID: <93FCBF72DCE7634481C5DF1654D8FF1303406EE0@DC2>

Hi all,
I want to catch more then one error within my tree parser. I read somewhere that tree parsers don't recover from the first error since parsing errors in tree grammars are the programmers fault. Have I got that wrong?

Since we use several parsers to create and validate our AST sometimes we have to report more than one error from within the tree parser but only the first one is reported via the displayError routine.

So my question is: how can I make the parser report every error that is encountered instead of only the first?

For our errors we create exceptions and attach the info we need to the custom pointer from within the grammar. 

Regareds 
Heiko


Mit freundlichem Gru?
Heiko Folkerts
Systementwicklung und -design
--
______________________________________________
DAVID GmbH ? Wendenring 1 ? 38114 Braunschweig
Tel.: +49 531 24379-14
Fax.: +49 531 24379-79
E-Mail: mailto:Heiko.Folkerts at david-bs.de
WWW:   http://www.david-bs.de?
Eintragung: Amtsgericht Braunschweig, HRB 3167
Gesch?ftsf?hrer: Frank Ptok
______________________________________________

 

From csp7kk3 at cs.ucy.ac.cy  Thu Nov 26 09:10:21 2009
From: csp7kk3 at cs.ucy.ac.cy (Konstantinos Kakousis)
Date: Thu, 26 Nov 2009 19:10:21 +0200
Subject: [antlr-interest] Grammar mismatch
Message-ID: <4B0EB67D.7020802@cs.ucy.ac.cy>

Hello,

First of all let me thank you for providing such a great tool.
Now to the reason I?m posting here: After reading ?The Definite ANTLR 
Reference? I have managed to create my DSL grammar.
I use anltrworks 1.3.1 and everything works fine as long as no ASTs are 
involved.
Just to be sure that there is nothing wrong with my grammar, the same 
problem occurs with the simple example of: Expr.g and Eval.g,
found in the book.( I just copy-pasted the code from the web).

After compiling successfully both, grammar and tree grammar when I 
attempt to run or debug the tree grammar (parser grammar run and debugs ok)
I get:
1) Grammar Mismatch popup: Warning the grammar used by the remote parser 
is not the same (Expr.g)
2) In output tabt :

(+ 4 5) java.net.SocketException: Unrecognized Windows Sockets error: 0: 
JVM_Bind java.net.SocketException: Unrecognized Windows Sockets error: 
0: JVM_Bind at java.net.PlainSocketImpl.socketBind(Native Method)
at java.net.PlainSocketImpl.bind(Unknown Source)
at java.net.ServerSocket.bind(Unknown Source)
at java.net.ServerSocket.<init>(Unknown Source)
at java.net.ServerSocket.<init>(Unknown Source)
at 
org.antlr.runtime.debug.DebugEventSocketProxy.handshake(DebugEventSocketProxy.java:75)
at Eval.<init>(Eval.java:49)
at Eval.<init>(Eval.java:41)
at __Test__.main(__Test__.java:19)
Exception in thread "main" java.lang.NullPointerException
at 
org.antlr.runtime.debug.DebugEventSocketProxy.transmit(DebugEventSocketProxy.java:116)
at 
org.antlr.runtime.debug.DebugEventSocketProxy.exitRule(DebugEventSocketProxy.java:130)
at Eval.prog(Eval.java:149)
at __Test__.main(__Test__.java:21)

3) Consol reports a huge amount of exceptions starting with:
[18:56:42] java.lang.ClassCastException: 
org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken cannot 
be cast to org.antlr.works.debugger.tree.DBTreeToken
at 
org.antlr.works.debugger.input.DBInputProcessorTree.getNode(DBInputProcessorTree.java:199)
at 
org.antlr.works.debugger.input.DBInputProcessorTree.processToken(DBInputProcessorTree.java:14
.....

I have managed to avoid this behavior a couple of times by restarting 
antlrworks, rebooting etc. but now it insists not to work even for the 
simplest grammar.
I also tried unsuccessfully to change debugger port, I googled the 
problem but I didn?t find anything similar, obviously I?m missing 
something out here.
Any ideas? Is it something really simple or is it the first time that 
this is reported.

Thanks for your time!
BR,


From smcfarlin at ocsnet.net  Thu Nov 26 09:24:57 2009
From: smcfarlin at ocsnet.net (Steve McFarlin)
Date: Thu, 26 Nov 2009 09:24:57 -0800
Subject: [antlr-interest] Grammar mismatch
In-Reply-To: <4B0EB67D.7020802@cs.ucy.ac.cy>
References: <4B0EB67D.7020802@cs.ucy.ac.cy>
Message-ID: <4F874953-4F14-4D40-9839-B7DFE9F93AE8@ocsnet.net>

Hello,

1) (For me) This occurs if I generate and debug the parser grammar,  
and then generate the tree grammar. What I usually do is clean the  
entire output directory, generate the parser grammar code, and then  
generate the tree grammar code. Debugging the tree grammar should be  
fine now.

2) You should be able to change the port in the properties for  
ANTLRWoks. The generated __Test__ file should reflect these changes.  
Beyond this I would not know what is occurring.

3) This sounds like an issue between debug and release code.


Generally, I always clean the output directory between release and  
debug sessions. Hope this helps. I am sure someone will soon give you  
a precise answer(s).


steve

On Nov 26, 2009, at 9:10 AM, Konstantinos Kakousis wrote:

> Hello,
>
> First of all let me thank you for providing such a great tool.
> Now to the reason I?m posting here: After reading ?The Definite ANTLR
> Reference? I have managed to create my DSL grammar.
> I use anltrworks 1.3.1 and everything works fine as long as no ASTs  
> are
> involved.
> Just to be sure that there is nothing wrong with my grammar, the same
> problem occurs with the simple example of: Expr.g and Eval.g,
> found in the book.( I just copy-pasted the code from the web).
>
> After compiling successfully both, grammar and tree grammar when I
> attempt to run or debug the tree grammar (parser grammar run and  
> debugs ok)
> I get:
> 1) Grammar Mismatch popup: Warning the grammar used by the remote  
> parser
> is not the same (Expr.g)
> 2) In output tabt :
>
> (+ 4 5) java.net.SocketException: Unrecognized Windows Sockets  
> error: 0:
> JVM_Bind java.net.SocketException: Unrecognized Windows Sockets error:
> 0: JVM_Bind at java.net.PlainSocketImpl.socketBind(Native Method)
> at java.net.PlainSocketImpl.bind(Unknown Source)
> at java.net.ServerSocket.bind(Unknown Source)
> at java.net.ServerSocket.<init>(Unknown Source)
> at java.net.ServerSocket.<init>(Unknown Source)
> at
> org 
> .antlr 
> .runtime 
> .debug.DebugEventSocketProxy.handshake(DebugEventSocketProxy.java:75)
> at Eval.<init>(Eval.java:49)
> at Eval.<init>(Eval.java:41)
> at __Test__.main(__Test__.java:19)
> Exception in thread "main" java.lang.NullPointerException
> at
> org 
> .antlr 
> .runtime 
> .debug.DebugEventSocketProxy.transmit(DebugEventSocketProxy.java:116)
> at
> org 
> .antlr 
> .runtime 
> .debug.DebugEventSocketProxy.exitRule(DebugEventSocketProxy.java:130)
> at Eval.prog(Eval.java:149)
> at __Test__.main(__Test__.java:21)
>
> 3) Consol reports a huge amount of exceptions starting with:
> [18:56:42] java.lang.ClassCastException:
> org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken  
> cannot
> be cast to org.antlr.works.debugger.tree.DBTreeToken
> at
> org 
> .antlr 
> .works 
> .debugger 
> .input.DBInputProcessorTree.getNode(DBInputProcessorTree.java:199)
> at
> org 
> .antlr 
> .works 
> .debugger 
> .input.DBInputProcessorTree.processToken(DBInputProcessorTree.java:14
> .....
>
> I have managed to avoid this behavior a couple of times by restarting
> antlrworks, rebooting etc. but now it insists not to work even for the
> simplest grammar.
> I also tried unsuccessfully to change debugger port, I googled the
> problem but I didn?t find anything similar, obviously I?m missing
> something out here.
> Any ideas? Is it something really simple or is it the first time that
> this is reported.
>
> Thanks for your time!
> BR,
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From eric at ericjbell.com  Thu Nov 26 11:41:53 2009
From: eric at ericjbell.com (Eric Bell)
Date: Thu, 26 Nov 2009 11:41:53 -0800
Subject: [antlr-interest] How to handle python-like indented code blocks
Message-ID: <055F151AD5C84C38AB35E986D51E133D@prosperity>

Could someone get me pointed in the right direction for how to parse
grammars that use indenting to identify code blocks ... like in Python?
 
I searched around and looked through the source code for boo, which uses a
python-like grammar, but I am a newbie to this and it's too much code for me
to figure out.

I am trying to parse a file that defines nodes in a tree. Indenting is used
to show that nodes are children of a parent, like this:

              s4\0 [n c] [r 0\22\33]
                     s4s4\# [n t] [p s4]
                     s4s5\.1 [n t] [p s5]

"s4", "s4s4", "s4s5" are node-names, with "s4s4" and "s4s5" being children
of node "s4". The indenting uses a tab character, with one tab per indent
level.

Thanks, 

--eric


From jimi at temporal-wave.com  Thu Nov 26 11:59:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Nov 2009 11:59:52 -0800
Subject: [antlr-interest] Catching multiple errors in a tree parser
In-Reply-To: <93FCBF72DCE7634481C5DF1654D8FF1303406EE0@DC2>
Message-ID: <49479b672f534240bb3a1729fd7feb1b@temporal-wave.com>

Heiko,

If there are structural errors in your tree, then it is indeed a programming mistake and recovery in a tree parser does not usually make any sense as you are responsible for making sure it is a valid tree. So, you should debug the parsers that produce the tree. If you have some very special case where you feel that recovery in the tree parser is valid, then you would have to implement the special recovery yourself by overriding the relevant methods in your tree parser (use a superClass=xxx; option to do this) as there is no generic way to know what makes sense recovery wise in tree parsers (well not one that makes much sense to me anyway ;-).

If you mean that the errors are semantic errors, then you need to implement your own error log. I generally implement a universal log that the lexer, parsers and walkers can all contribute to, extracting relevant information from text, offsets, tokens and nodes. The lexers and parsers can also contribute to the log via an override of displayRecognitionError, but the AST walker is all semantic action based errors.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Heiko Folkerts
> Sent: Thursday, November 26, 2009 1:37 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Catching multiple errors in a tree parser
> 
> Hi all,
> I want to catch more then one error within my tree parser. I read
> somewhere that tree parsers don't recover from the first error since
> parsing errors in tree grammars are the programmers fault. Have I got
> that wrong?
> 
> Since we use several parsers to create and validate our AST sometimes
> we have to report more than one error from within the tree parser but
> only the first one is reported via the displayError routine.
> 
> So my question is: how can I make the parser report every error that is
> encountered instead of only the first?
> 
> For our errors we create exceptions and attach the info we need to the
> custom pointer from within the grammar.
> 
> Regareds
> Heiko
> 
> 
> Mit freundlichem Gru?
> Heiko Folkerts
> Systementwicklung und -design
> --
> ______________________________________________
> DAVID GmbH ? Wendenring 1 ? 38114 Braunschweig
> Tel.: +49 531 24379-14
> Fax.: +49 531 24379-79
> E-Mail: mailto:Heiko.Folkerts at david-bs.de
> WWW:   http://www.david-bs.de
> Eintragung: Amtsgericht Braunschweig, HRB 3167
> Gesch?ftsf?hrer: Frank Ptok
> ______________________________________________
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Nov 26 12:02:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Nov 2009 12:02:44 -0800
Subject: [antlr-interest] Grammar mismatch
In-Reply-To: <4B0EB67D.7020802@cs.ucy.ac.cy>
Message-ID: <4b29cb2d6950dc40ba48135f58c1586d@temporal-wave.com>

You should not need to change the default debugging port, unless omsething else on your system is already using it, which it looks like it isn't.

Generally if the debugger never connects and the target of the debugger never stops, this means that you have an empty lexer rule:  XXX : ; by accident. Then you have to manually kill the debugging target's process.

Here, it also looks like you have generated the various components lexer->parser->treeparser out of sequence (the order you generate is important but look at the -make option or better still Maven).

Finally, check that what you are running is the correct version of your programs and not some old version in CLASSPATH somewhere.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Konstantinos Kakousis
> Sent: Thursday, November 26, 2009 9:10 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Grammar mismatch
> 
> Hello,
> 
> First of all let me thank you for providing such a great tool.
> Now to the reason I'm posting here: After reading "The Definite ANTLR
> Reference" I have managed to create my DSL grammar.
> I use anltrworks 1.3.1 and everything works fine as long as no ASTs are
> involved.
> Just to be sure that there is nothing wrong with my grammar, the same
> problem occurs with the simple example of: Expr.g and Eval.g,
> found in the book.( I just copy-pasted the code from the web).
> 
> After compiling successfully both, grammar and tree grammar when I
> attempt to run or debug the tree grammar (parser grammar run and debugs
> ok)
> I get:
> 1) Grammar Mismatch popup: Warning the grammar used by the remote
> parser
> is not the same (Expr.g)
> 2) In output tabt :
> 
> (+ 4 5) java.net.SocketException: Unrecognized Windows Sockets error:
> 0:
> JVM_Bind java.net.SocketException: Unrecognized Windows Sockets error:
> 0: JVM_Bind at java.net.PlainSocketImpl.socketBind(Native Method)
> at java.net.PlainSocketImpl.bind(Unknown Source)
> at java.net.ServerSocket.bind(Unknown Source)
> at java.net.ServerSocket.<init>(Unknown Source)
> at java.net.ServerSocket.<init>(Unknown Source)
> at
> org.antlr.runtime.debug.DebugEventSocketProxy.handshake(DebugEventSocke
> tProxy.java:75)
> at Eval.<init>(Eval.java:49)
> at Eval.<init>(Eval.java:41)
> at __Test__.main(__Test__.java:19)
> Exception in thread "main" java.lang.NullPointerException
> at
> org.antlr.runtime.debug.DebugEventSocketProxy.transmit(DebugEventSocket
> Proxy.java:116)
> at
> org.antlr.runtime.debug.DebugEventSocketProxy.exitRule(DebugEventSocket
> Proxy.java:130)
> at Eval.prog(Eval.java:149)
> at __Test__.main(__Test__.java:21)
> 
> 3) Consol reports a huge amount of exceptions starting with:
> [18:56:42] java.lang.ClassCastException:
> org.antlr.runtime.debug.RemoteDebugEventSocketListener$ProxyToken
> cannot
> be cast to org.antlr.works.debugger.tree.DBTreeToken
> at
> org.antlr.works.debugger.input.DBInputProcessorTree.getNode(DBInputProc
> essorTree.java:199)
> at
> org.antlr.works.debugger.input.DBInputProcessorTree.processToken(DBInpu
> tProcessorTree.java:14
> .....
> 
> I have managed to avoid this behavior a couple of times by restarting
> antlrworks, rebooting etc. but now it insists not to work even for the
> simplest grammar.
> I also tried unsuccessfully to change debugger port, I googled the
> problem but I didn't find anything similar, obviously I'm missing
> something out here.
> Any ideas? Is it something really simple or is it the first time that
> this is reported.
> 
> Thanks for your time!
> BR,
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Nov 26 12:13:45 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Nov 2009 12:13:45 -0800
Subject: [antlr-interest] How to handle python-like indented code blocks
In-Reply-To: <055F151AD5C84C38AB35E986D51E133D@prosperity>
Message-ID: <5d198b347f5afc4cb83836f29b11d1f3@temporal-wave.com>

Eric,

What you need to do is either let TABs though and count them in the parser, or if they can only be at the start of the line, then set a flag to true when the lexer starts and whenever you hit newline. Based on the truth of that flag, you can let the tab through, count them and issue LEVEL1, LEVEL2, etc, or skip() them if the flag is false:

@lexer::members {
boolean countTabs = true;
}

fragment LEVEL1:;
fragment LEVEL2:;
fragment LEVEL3:;

TAB
@init {
int tabCount = 0;
}
: ('\n' { tabCount++; })+
  {
    if (countTabs) {
        switch (tabCount) {
          case 1: $type = LEVEL1; break;
          case 2: $type = LEVEL2; break;
          case 3: $type = LEVEL3; break;
          default: skip(); // too many levels error
        }
    }
    else {
        skip();
    }
    countTabs = false;
  }
;

NL : '\r'? '\n' { countTabs = true; skip(); }


Then you parser says:

struct : element+;

element : (elementAtom | level1Element)+ ;
level1Element : (LEVEL1 elementAtom | level2Element)+ ;

Or something similar to that - you can be smarter than that of course, for the sake of error processing/recovery.

Jim

PS: There did used to be a Python example that overrode nextToken() as well - look in the grammars section of the web site.


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric Bell
> Sent: Thursday, November 26, 2009 11:42 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to handle python-like indented code
> blocks
> 
> Could someone get me pointed in the right direction for how to parse
> grammars that use indenting to identify code blocks ... like in Python?
> 
> I searched around and looked through the source code for boo, which
> uses a
> python-like grammar, but I am a newbie to this and it's too much code
> for me
> to figure out.
> 
> I am trying to parse a file that defines nodes in a tree. Indenting is
> used
> to show that nodes are children of a parent, like this:
> 
>               s4\0 [n c] [r 0\22\33]
>                      s4s4\# [n t] [p s4]
>                      s4s5\.1 [n t] [p s5]
> 
> "s4", "s4s4", "s4s5" are node-names, with "s4s4" and "s4s5" being
> children
> of node "s4". The indenting uses a tab character, with one tab per
> indent
> level.
> 
> Thanks,
> 
> --eric
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From eric at ericjbell.com  Thu Nov 26 12:27:49 2009
From: eric at ericjbell.com (Eric Bell)
Date: Thu, 26 Nov 2009 12:27:49 -0800
Subject: [antlr-interest] How to handle python-like indented code blocks
In-Reply-To: <5d198b347f5afc4cb83836f29b11d1f3@temporal-wave.com>
References: <055F151AD5C84C38AB35E986D51E133D@prosperity>
	<5d198b347f5afc4cb83836f29b11d1f3@temporal-wave.com>
Message-ID: <B55B40268EC14FE3BC023EAC064B761C@prosperity>

Jim--

Thanks for the quick reply!

I think the approach you suggest may be too limited for my application ... I
don't want to have to define different LEVELn's and have a maximum number of
levels ... I would have to place an arbitrary limit on the depth of my trees
and my grammar would get hideously large if I wanted to support a reasonable
maximum depth like several hundred.

The good news is that I found the Python grammar you mentioned and I see
some something that looks promising:

tokens
{
	INDENT;
	DEDENT;
}
.
.
.
suite		: simple_stmt
		| NEWLINE INDENT ( stmt )+ DEDENT
		; 

I am going to focus my attention on that approach and see where it leads.

Thanks again!

--eric


From boughtonp at gmail.com  Thu Nov 26 16:15:51 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Fri, 27 Nov 2009 00:15:51 +0000
Subject: [antlr-interest] How do I turn off debugging in generated code?
Message-ID: <5d97c170911261615xb872c18ia5876e4375799527@mail.gmail.com>

What do I need to do to generate Java code without
DebugEventSocketProxy/related code in it?

From ronald.sok at gmail.com  Thu Nov 26 19:47:36 2009
From: ronald.sok at gmail.com (Ronald Sok)
Date: Thu, 26 Nov 2009 21:47:36 -0600
Subject: [antlr-interest] Tokens
Message-ID: <4B0F4BD8.4010502@gmail.com>

Being not too familiar with language grammars and ANTLR
I ended up with a grammar which I am not too happy with.

I don't want to bother you with my entire grammar so I created
a very simple example demonstrating my problem.
I want to parse the following :

BEGIN_SOMETHING
    Name: Pear
    Type: Apple
END_SOMETHING


The tokens BEGIN_SOMETHING and END_SOMETHING indicate
the start and end markers of the block. The Name can have any value and
the Type can be one from the list Apple, Pear, Orange. The problem
I have is that the Name, as seen in the example, can also have the value
from one of the Type list, in this case Pear.

The grammar I have is this:
grammar Some;

someFile
    :    'BEGIN_SOMETHING' NEWLINE someName someType 'END_SOMETHING' NEWLINE
    ;
   
someName
    :    'Name:' ID NEWLINE
    ;

someType
    :    'Type:' someTypeOption NEWLINE
    ;
   
someTypeOption
    :    APPLE
    |    PEAR
    |    ORANGE
    ;
   
APPLE
    :    'Apple'
    ;

PEAR
    :    'Pear'
    ;

ORANGE
    :    'Orange'
    ;   
   
ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

NEWLINE
    :    '\r'? '\n'
    ;
   
WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;


Obviously this grammar is unable to recognize the sequence 'Name: Pear',
because 'Pear' is matched by the token PEAR and not by ID. I can ofcourse
add the tokens APPLE,PEAR and ORANGE to the rule someName:

someName
    :    'Name:' (APPLE|PEAR|ORANGE|ID) NEWLINE
    ;

But my feeling tells me this is not the way to go. I hope somebody can 
clarify this for me.

Thanks.

Ronald




From cummings at kjchome.homeip.net  Thu Nov 26 20:05:19 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 26 Nov 2009 23:05:19 -0500
Subject: [antlr-interest] Tokens
In-Reply-To: <4B0F4BD8.4010502@gmail.com>
References: <4B0F4BD8.4010502@gmail.com>
Message-ID: <4B0F4FFF.6060803@kjchome.homeip.net>

On 11/26/2009 10:47 PM, Ronald Sok wrote:
> Being not too familiar with language grammars and ANTLR
> I ended up with a grammar which I am not too happy with.
> 
> I don't want to bother you with my entire grammar so I created
> a very simple example demonstrating my problem.
> I want to parse the following :
> 
> BEGIN_SOMETHING
>     Name: Pear
>     Type: Apple
> END_SOMETHING
> 
> 
> The tokens BEGIN_SOMETHING and END_SOMETHING indicate
> the start and end markers of the block. The Name can have any value and
> the Type can be one from the list Apple, Pear, Orange. The problem
> I have is that the Name, as seen in the example, can also have the value
> from one of the Type list, in this case Pear.
> 
> The grammar I have is this:
> grammar Some;
> 
> someFile
>     :    'BEGIN_SOMETHING' NEWLINE someName someType 'END_SOMETHING' NEWLINE
>     ;
>    
> someName
>     :    'Name:' ID NEWLINE
>     ;
> 
> someType
>     :    'Type:' someTypeOption NEWLINE
>     ;
>    
> someTypeOption
>     :    APPLE
>     |    PEAR
>     |    ORANGE
>     ;
>    
> APPLE
>     :    'Apple'
>     ;
> 
> PEAR
>     :    'Pear'
>     ;
> 
> ORANGE
>     :    'Orange'
>     ;   
>    
> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>     ;
> 
> NEWLINE
>     :    '\r'? '\n'
>     ;
>    
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
> 
> 
> Obviously this grammar is unable to recognize the sequence 'Name: Pear',
> because 'Pear' is matched by the token PEAR and not by ID. I can ofcourse
> add the tokens APPLE,PEAR and ORANGE to the rule someName:
> 
> someName
>     :    'Name:' (APPLE|PEAR|ORANGE|ID) NEWLINE
>     ;
> 
> But my feeling tells me this is not the way to go. I hope somebody can 
> clarify this for me.

You are close.  What you have here is keywords as opposed to reserved
words.  When implementing the former, you will need to do something like
(at least this is what I do using ANTLR 2.7.7):

id : ID
   | k:keyword
      { #k->setType(ID); }
      // This changes the token type of a keyword to an ID
   ;

keyword
   : APPLE | PEAR | ORANGE
   ;

someName
   :     'Name:' id NEWLINE
   ;

You could reduce the number of productions by folding, but the principal
of changing the token type of keywords is what is important here.  And
you may have to find out how to do this with ANTLR 3.x.

[Of course, I have problems with the token 'Name:' containing the ":"
character, but that's just me.  (":" is usually a delimiter and usually
parsed as its own token.)  Plus, you don't seem to be treating NEWLINE
as whitespace, but maybe your grammar requires that too.]

> Thanks.
> 
> Ronald

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From stevagewp at gmail.com  Thu Nov 26 23:38:33 2009
From: stevagewp at gmail.com (Steve Bennett)
Date: Fri, 27 Nov 2009 18:38:33 +1100
Subject: [antlr-interest] Tokens
In-Reply-To: <4B0F4BD8.4010502@gmail.com>
References: <4B0F4BD8.4010502@gmail.com>
Message-ID: <b8ceeef70911262338x28ab3c32jff45021fdcca5fca@mail.gmail.com>

> APPLE
> ? ?: ? ?'Apple'
> ? ?;
>
> PEAR
> ? ?: ? ?'Pear'
> ? ?;
>
> ORANGE
> ? ?: ? ?'Orange'
> ? ?;
>
> ID ?: ? ?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
> ? ?;

Kevin's answer is probably the right one, but what I have done sometimes is:

ID: ('a'..'z'|'A'..'Z'|'_'|APPLE|PEAR|ORANGE)
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|APPLE|PEAR|ORANGE)*

If I'm not misremembering how lexing works...it's been a little while.

Steve

From pfa at isep.ipp.pt  Fri Nov 27 05:45:18 2009
From: pfa at isep.ipp.pt (pfa at isep.ipp.pt)
Date: Fri, 27 Nov 2009 14:45:18 +0100
Subject: [antlr-interest]
	tpantlr-code\code\templates\generator\1pass\ExprParser.java
Message-ID: <6271a1cfe4929db743b9e9ede7920f11@isep.ipp.pt>



Hi, 

Javac compliants about ops, type ExprParser.addOp_return, in case
2, of ExprParser.java. 

In this case ops type should be subOp_return and
not addOp_return. 

Changed the generated code to include a new var opss in
expr(): 

// $ANTLR 3.1.2 Expr.g 

(...) 

public final
ExprParser.expr_return expr() throws RecognitionException { 

 (...) 


ExprParser.subOp_return opss = null; 

 (...) 

  case 2 : 

   //
Expr.g:51:33: ops+= subOp 

   { 

   pushFollow(FOLLOW_subOp_in_expr244);


   opss=subOp(); 

   state._fsp--; 

   if (list_ops==null) list_ops=new
ArrayList(); 

   list_ops.add(opss.getTemplate()); 

   } 

   break; 


(...) 

Pedro 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091127/411aa217/attachment.html 

From ronald.sok at gmail.com  Fri Nov 27 05:53:08 2009
From: ronald.sok at gmail.com (Ronald Sok)
Date: Fri, 27 Nov 2009 07:53:08 -0600
Subject: [antlr-interest] Tokens
In-Reply-To: <4B0F4FFF.6060803@kjchome.homeip.net>
References: <4B0F4BD8.4010502@gmail.com> <4B0F4FFF.6060803@kjchome.homeip.net>
Message-ID: <4B0FD9C4.9060005@gmail.com>



Kevin J. Cummings wrote:
> On 11/26/2009 10:47 PM, Ronald Sok wrote:
>   
>> Being not too familiar with language grammars and ANTLR
>> I ended up with a grammar which I am not too happy with.
>>
>> I don't want to bother you with my entire grammar so I created
>> a very simple example demonstrating my problem.
>> I want to parse the following :
>>
>> BEGIN_SOMETHING
>>     Name: Pear
>>     Type: Apple
>> END_SOMETHING
>>
>>
>> The tokens BEGIN_SOMETHING and END_SOMETHING indicate
>> the start and end markers of the block. The Name can have any value and
>> the Type can be one from the list Apple, Pear, Orange. The problem
>> I have is that the Name, as seen in the example, can also have the value
>> from one of the Type list, in this case Pear.
>>
>> The grammar I have is this:
>> grammar Some;
>>
>> someFile
>>     :    'BEGIN_SOMETHING' NEWLINE someName someType 'END_SOMETHING' NEWLINE
>>     ;
>>    
>> someName
>>     :    'Name:' ID NEWLINE
>>     ;
>>
>> someType
>>     :    'Type:' someTypeOption NEWLINE
>>     ;
>>    
>> someTypeOption
>>     :    APPLE
>>     |    PEAR
>>     |    ORANGE
>>     ;
>>    
>> APPLE
>>     :    'Apple'
>>     ;
>>
>> PEAR
>>     :    'Pear'
>>     ;
>>
>> ORANGE
>>     :    'Orange'
>>     ;   
>>    
>> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>     ;
>>
>> NEWLINE
>>     :    '\r'? '\n'
>>     ;
>>    
>> WS  :   ( ' '
>>         | '\t'
>>         | '\r'
>>         | '\n'
>>         ) {$channel=HIDDEN;}
>>     ;
>>
>>
>> Obviously this grammar is unable to recognize the sequence 'Name: Pear',
>> because 'Pear' is matched by the token PEAR and not by ID. I can ofcourse
>> add the tokens APPLE,PEAR and ORANGE to the rule someName:
>>
>> someName
>>     :    'Name:' (APPLE|PEAR|ORANGE|ID) NEWLINE
>>     ;
>>
>> But my feeling tells me this is not the way to go. I hope somebody can 
>> clarify this for me.
>>     
>
> You are close.  What you have here is keywords as opposed to reserved
> words.  When implementing the former, you will need to do something like
> (at least this is what I do using ANTLR 2.7.7):
>
> id : ID
>    | k:keyword
>       { #k->setType(ID); }
>       // This changes the token type of a keyword to an ID
>    ;
>   
This seems very useful and appears to solve my problem. Thank you very much.


> keyword
>    : APPLE | PEAR | ORANGE
>    ;
>
> someName
>    :     'Name:' id NEWLINE
>    ;
>
> You could reduce the number of productions by folding, but the principal
> of changing the token type of keywords is what is important here.  And
> you may have to find out how to do this with ANTLR 3.x.
>
> [Of course, I have problems with the token 'Name:' containing the ":"
> character, but that's just me.  (":" is usually a delimiter and usually
> parsed as its own token.)  Plus, you don't seem to be treating NEWLINE
> as whitespace, but maybe your grammar requires that too.]
>
>   
I follow you on this one and agree that ':' should be considered as a 
seperate token.
The NEWLINE token I use to force that the input is line seperated. So 
that I don't
accept input like:

BEGIN_SOMETHING Name: Pear Type: Apple END_SOMETHING

But maybe I am being too strict here.
Thank you for your pointer.

>> Thanks.
>>
>> Ronald
>>     
>
>   

From boughtonp at gmail.com  Fri Nov 27 11:44:38 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Fri, 27 Nov 2009 19:44:38 +0000
Subject: [antlr-interest] How do I turn off debugging in generated code?
In-Reply-To: <5d97c170911261615xb872c18ia5876e4375799527@mail.gmail.com>
References: <5d97c170911261615xb872c18ia5876e4375799527@mail.gmail.com>
Message-ID: <5d97c170911271144x44618b05g6f7e4a375e710290@mail.gmail.com>

Ok, so eventually I discovered the answer myself.

In ANTLR Eclipse plugin settings, Code Generator page, there is a
"General" section, at the bottom, which is collapsed by default.

Inside that General section, the first option is "-debug (generate a
parser that emits debugging events)" and it defaults to being ticked -
simply untick it and the debugging code doesn't get generated.

From david-sarah at jacaranda.org  Fri Nov 27 12:10:01 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Fri, 27 Nov 2009 20:10:01 +0000
Subject: [antlr-interest] Tokens
In-Reply-To: <b8ceeef70911262338x28ab3c32jff45021fdcca5fca@mail.gmail.com>
References: <4B0F4BD8.4010502@gmail.com>
	<b8ceeef70911262338x28ab3c32jff45021fdcca5fca@mail.gmail.com>
Message-ID: <4B103219.4060209@jacaranda.org>

Steve Bennett wrote:
>> APPLE
>>    :    'Apple'
>>    ;
>>
>> PEAR
>>    :    'Pear'
>>    ;
>>
>> ORANGE
>>    :    'Orange'
>>    ;
>>
>> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>    ;
> 
> Kevin's answer is probably the right one, but what I have done sometimes is:
> 
> ID: ('a'..'z'|'A'..'Z'|'_'|APPLE|PEAR|ORANGE)
> ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|APPLE|PEAR|ORANGE)*
> 
> If I'm not misremembering how lexing works...it's been a little while.

That won't work. Lexer rules are matched in order of their appearance
in the grammar, first being highest priority, so 'Apple' will match
APPLE and not ID regardless of the change above. Actually the second
version of ID is completely equivalent to the first.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091127/e439988f/attachment.bin 

From jimi at temporal-wave.com  Fri Nov 27 12:18:00 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 27 Nov 2009 12:18:00 -0800
Subject: [antlr-interest] How do I turn off debugging in generated code?
In-Reply-To: <5d97c170911271144x44618b05g6f7e4a375e710290@mail.gmail.com>
Message-ID: <76934ba3e9944b48bf0947fd08a40198@temporal-wave.com>

When asking questions, you need to state what your environment is as there was no way to know that you meant in ANTLR Eclipse.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Boughton
> Sent: Friday, November 27, 2009 11:45 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How do I turn off debugging in generated
> code?
> 
> Ok, so eventually I discovered the answer myself.
> 
> In ANTLR Eclipse plugin settings, Code Generator page, there is a
> "General" section, at the bottom, which is collapsed by default.
> 
> Inside that General section, the first option is "-debug (generate a
> parser that emits debugging events)" and it defaults to being ticked -
> simply untick it and the debugging code doesn't get generated.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From boughtonp at gmail.com  Fri Nov 27 12:42:03 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Fri, 27 Nov 2009 20:42:03 +0000
Subject: [antlr-interest] Parser hanging at proxy.handshake call ?
In-Reply-To: <5d97c170911241208o4515a989j155a224b96174dbd@mail.gmail.com>
References: <5d97c170911241208o4515a989j155a224b96174dbd@mail.gmail.com>
Message-ID: <5d97c170911271242t770cae3g967690c8ce18129f@mail.gmail.com>

Update: I avoided this problem by turning off debugging for the
generated code (IDE option in ANTLR IDE Eclipse plugin), which then
allows the parser to be successfully created and continues on to
create the AST.

From ronald.sok at gmail.com  Fri Nov 27 15:05:56 2009
From: ronald.sok at gmail.com (Ronald Sok)
Date: Fri, 27 Nov 2009 17:05:56 -0600
Subject: [antlr-interest] Tokens
In-Reply-To: <4B0F4FFF.6060803@kjchome.homeip.net>
References: <4B0F4BD8.4010502@gmail.com> <4B0F4FFF.6060803@kjchome.homeip.net>
Message-ID: <4B105B54.2040902@gmail.com>



Kevin J. Cummings wrote:
> You are close.  What you have here is keywords as opposed to reserved
> words.  When implementing the former, you will need to do something like
> (at least this is what I do using ANTLR 2.7.7):
>
> id : ID
>    | k:keyword
>       { #k->setType(ID); }
>       // This changes the token type of a keyword to an ID
>    ;
>
> keyword
>    : APPLE | PEAR | ORANGE
>    ;
>
> someName
>    :     'Name:' id NEWLINE
>    ;
>
> You could reduce the number of productions by folding, but the principal
> of changing the token type of keywords is what is important here.  And
> you may have to find out how to do this with ANTLR 3.x.
>
>
>   
Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
the result of keyword is a subtype of ParserRuleReturnScope, which
definitely is not a Token type. So trying to change the type of the token
like how you showed in ANTLR 2.7.7 syntax does not work for me.
This is what I have, which results in an error while generating the grammar.

id : ID
   | keyword
      { $type=ID; }
      // from http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
   ;




Ronald

From cummings at kjchome.homeip.net  Fri Nov 27 15:25:51 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 27 Nov 2009 18:25:51 -0500
Subject: [antlr-interest] Tokens
In-Reply-To: <4B105B54.2040902@gmail.com>
References: <4B0F4BD8.4010502@gmail.com> <4B0F4FFF.6060803@kjchome.homeip.net>
	<4B105B54.2040902@gmail.com>
Message-ID: <4B105FFF.40702@kjchome.homeip.net>

On 11/27/2009 06:05 PM, Ronald Sok wrote:
> 
> 
> Kevin J. Cummings wrote:
>> You are close.  What you have here is keywords as opposed to reserved
>> words.  When implementing the former, you will need to do something like
>> (at least this is what I do using ANTLR 2.7.7):
>>
>> id : ID
>>    | k:keyword
>>       { #k->setType(ID); }
>>       // This changes the token type of a keyword to an ID
>>    ;
>>
>> keyword
>>    : APPLE | PEAR | ORANGE
>>    ;
>>
>> someName
>>    :     'Name:' id NEWLINE
>>    ;
>>
>> You could reduce the number of productions by folding, but the principal
>> of changing the token type of keywords is what is important here.  And
>> you may have to find out how to do this with ANTLR 3.x.
>>
>>
>>   
> Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
> the result of keyword is a subtype of ParserRuleReturnScope, which

Sorry, my bad, should be KEYWORD and done in the lexer, not the parser!

> definitely is not a Token type. So trying to change the type of the token
> like how you showed in ANTLR 2.7.7 syntax does not work for me.
> This is what I have, which results in an error while generating the grammar.
> 
> id : ID
>    | keyword
>       { $type=ID; }
>       // from http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
>    ;
> 
> 
> 
> 
> Ronald
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From david-sarah at jacaranda.org  Fri Nov 27 17:28:47 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Sat, 28 Nov 2009 01:28:47 +0000
Subject: [antlr-interest] Tokens
In-Reply-To: <4B105B54.2040902@gmail.com>
References: <4B0F4BD8.4010502@gmail.com> <4B0F4FFF.6060803@kjchome.homeip.net>
	<4B105B54.2040902@gmail.com>
Message-ID: <4B107CCF.8020805@jacaranda.org>

Ronald Sok wrote:
> Kevin J. Cummings wrote:
>> You are close.  What you have here is keywords as opposed to reserved
>> words.  When implementing the former, you will need to do something like
>> (at least this is what I do using ANTLR 2.7.7):
>>
>> id : ID
>>    | k:keyword
>>       { #k->setType(ID); }
>>       // This changes the token type of a keyword to an ID
>>    ;
>>
>> keyword
>>    : APPLE | PEAR | ORANGE
>>    ;
>>
>> someName
>>    :     'Name:' id NEWLINE
>>    ;
[...]
> Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
> the result of keyword is a subtype of ParserRuleReturnScope, which
> definitely is not a Token type. So trying to change the type of the token
> like how you showed in ANTLR 2.7.7 syntax does not work for me.
> This is what I have, which results in an error while generating the grammar.
> 
> id : ID
>    | keyword
>       { $type=ID; }
>       // from http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
>    ;

It's not necessary to change the type of the token unless you're actually
going to depend on that type in some other rule that uses 'id'. I.e. just
omitting '{ $type = ID; }' will work in most situtations.

If you do want to change it, then that can't be done in this case using
'$type =', which only works in a lexer rule. To change the type of the
token that is at the root of a particular subtree in a parser rule, use:

  id : ID
     | k=keyword { if ($k.tree != null) $k.tree.getToken().setType(ID); }
     ;

(Yes, it's a bit ugly. It is possible for $k.tree to be null in certain
error cases, unfortunately. If anyone has a way of doing this that is less
ugly but always works, I'd like to hear it.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/51f05225/attachment.bin 

From david-sarah at jacaranda.org  Fri Nov 27 17:39:23 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Sat, 28 Nov 2009 01:39:23 +0000
Subject: [antlr-interest] Tokens
In-Reply-To: <4B105FFF.40702@kjchome.homeip.net>
References: <4B0F4BD8.4010502@gmail.com>
	<4B0F4FFF.6060803@kjchome.homeip.net>	<4B105B54.2040902@gmail.com>
	<4B105FFF.40702@kjchome.homeip.net>
Message-ID: <4B107F4B.1060001@jacaranda.org>

Kevin J. Cummings wrote:
> On 11/27/2009 06:05 PM, Ronald Sok wrote:
>> Kevin J. Cummings wrote:
>>> You are close.  What you have here is keywords as opposed to reserved
>>> words.  When implementing the former, you will need to do something like
>>> (at least this is what I do using ANTLR 2.7.7):
>>>
>>> id : ID
>>>    | k:keyword
>>>       { #k->setType(ID); }
>>>       // This changes the token type of a keyword to an ID
>>>    ;
>>>
>>> keyword
>>>    : APPLE | PEAR | ORANGE
>>>    ;
>>>
>>> someName
>>>    :     'Name:' id NEWLINE
>>>    ;
>>>
>>> You could reduce the number of productions by folding, but the principal
>>> of changing the token type of keywords is what is important here.  And
>>> you may have to find out how to do this with ANTLR 3.x.
>>
>> Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
>> the result of keyword is a subtype of ParserRuleReturnScope, which
> 
> Sorry, my bad, should be KEYWORD and done in the lexer, not the parser!

That won't work because either:
 - KEYWORD is before APPLE, PEAR and ORANGE, in which case it always takes
   priority and the type of a Token will never be APPLE, PEAR or ORANGE;

 - or, KEYWORD is after APPLE, PEAR and ORANGE, in which case those rules
   take priority and the type of a Token will never initially be KEYWORD.
   You could override it, but if you do that in a lexer rule then you
   don't have enough context to determine what it should be (and '$type ='
   can't be used in a parser rule).

As I said in my other followup, it's usually not necessary to change the
type (but you can do so using the code given in that post if you want).

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/b838671c/attachment.bin 

From cummings at kjchome.homeip.net  Fri Nov 27 18:17:39 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 27 Nov 2009 21:17:39 -0500
Subject: [antlr-interest] Tokens
In-Reply-To: <4B107F4B.1060001@jacaranda.org>
References: <4B0F4BD8.4010502@gmail.com>	<4B0F4FFF.6060803@kjchome.homeip.net>	<4B105B54.2040902@gmail.com>	<4B105FFF.40702@kjchome.homeip.net>
	<4B107F4B.1060001@jacaranda.org>
Message-ID: <4B108843.80005@kjchome.homeip.net>

On 11/27/2009 08:39 PM, David-Sarah Hopwood wrote:
> Kevin J. Cummings wrote:
>> On 11/27/2009 06:05 PM, Ronald Sok wrote:
>>> Kevin J. Cummings wrote:
>>>> You are close.  What you have here is keywords as opposed to reserved
>>>> words.  When implementing the former, you will need to do something like
>>>> (at least this is what I do using ANTLR 2.7.7):
>>>>
>>>> id : ID
>>>>    | k:keyword
>>>>       { #k->setType(ID); }
>>>>       // This changes the token type of a keyword to an ID
>>>>    ;
>>>>
>>>> keyword
>>>>    : APPLE | PEAR | ORANGE
>>>>    ;
>>>>
>>>> someName
>>>>    :     'Name:' id NEWLINE
>>>>    ;
>>>>
>>>> You could reduce the number of productions by folding, but the principal
>>>> of changing the token type of keywords is what is important here.  And
>>>> you may have to find out how to do this with ANTLR 3.x.
>>>
>>> Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
>>> the result of keyword is a subtype of ParserRuleReturnScope, which
>>
>> Sorry, my bad, should be KEYWORD and done in the lexer, not the parser!
> 
> That won't work because either:
>  - KEYWORD is before APPLE, PEAR and ORANGE, in which case it always takes
>    priority and the type of a Token will never be APPLE, PEAR or ORANGE;
> 
>  - or, KEYWORD is after APPLE, PEAR and ORANGE, in which case those rules
>    take priority and the type of a Token will never initially be KEYWORD.
>    You could override it, but if you do that in a lexer rule then you
>    don't have enough context to determine what it should be (and '$type ='
>    can't be used in a parser rule).

Hmmm, in the context I used it in, I had to be able to tell when a
keyword was being used as an identifier.  In ANTLR-2, I could override
the token's type in the parser.  (Makes expression evaluation a whole
lot easier further down the line when checking for an identifier....)

> As I said in my other followup, it's usually not necessary to change the
> type (but you can do so using the code given in that post if you want).

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From ronald.sok at gmail.com  Fri Nov 27 19:12:32 2009
From: ronald.sok at gmail.com (Ronald Sok)
Date: Fri, 27 Nov 2009 21:12:32 -0600
Subject: [antlr-interest] Tokens
In-Reply-To: <4B107F4B.1060001@jacaranda.org>
References: <4B0F4BD8.4010502@gmail.com>	<4B0F4FFF.6060803@kjchome.homeip.net>	<4B105B54.2040902@gmail.com>	<4B105FFF.40702@kjchome.homeip.net>
	<4B107F4B.1060001@jacaranda.org>
Message-ID: <4B109520.7030002@gmail.com>



David-Sarah Hopwood wrote:
> Kevin J. Cummings wrote:
>   
>> On 11/27/2009 06:05 PM, Ronald Sok wrote:
>>     
>>> Kevin J. Cummings wrote:
>>>       
>>>> You are close.  What you have here is keywords as opposed to reserved
>>>> words.  When implementing the former, you will need to do something like
>>>> (at least this is what I do using ANTLR 2.7.7):
>>>>
>>>> id : ID
>>>>    | k:keyword
>>>>       { #k->setType(ID); }
>>>>       // This changes the token type of a keyword to an ID
>>>>    ;
>>>>
>>>> keyword
>>>>    : APPLE | PEAR | ORANGE
>>>>    ;
>>>>
>>>> someName
>>>>    :     'Name:' id NEWLINE
>>>>    ;
>>>>
>>>> You could reduce the number of productions by folding, but the principal
>>>> of changing the token type of keywords is what is important here.  And
>>>> you may have to find out how to do this with ANTLR 3.x.
>>>>         
>>> Ok, I tried to change this into ANTLR 3 syntax, but ran into the fact that
>>> the result of keyword is a subtype of ParserRuleReturnScope, which
>>>       
>> Sorry, my bad, should be KEYWORD and done in the lexer, not the parser!
>>     
>
> That won't work because either:
>  - KEYWORD is before APPLE, PEAR and ORANGE, in which case it always takes
>    priority and the type of a Token will never be APPLE, PEAR or ORANGE;
>
>  - or, KEYWORD is after APPLE, PEAR and ORANGE, in which case those rules
>    take priority and the type of a Token will never initially be KEYWORD.
>    You could override it, but if you do that in a lexer rule then you
>    don't have enough context to determine what it should be (and '$type ='
>    can't be used in a parser rule).
>
> As I said in my other followup, it's usually not necessary to change the
> type (but you can do so using the code given in that post if you want).
>
>   
Placing KEYWORD in the lexer indeed did not work for me for the reasons you
described. I agree that omitting {$type=ID;} and therefore not changing the
type of the token works well enough for me and my grammar.

Thanks all for helping me out.

Ronald

From jimi at temporal-wave.com  Fri Nov 27 20:50:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 27 Nov 2009 20:50:30 -0800
Subject: [antlr-interest] Tokens
In-Reply-To: <4B108843.80005@kjchome.homeip.net>
Message-ID: <b5a08f6d1672394caa961e5403b223b2@temporal-wave.com>

You can, and should, override the type in the parser easily if the output of the parser is a tree parser. Then your tree parser is much simpler and will not need a special id rule in the tree grammar, which will reduce the complexity (and code size) of the tree parser grammar that you will need to walk it. 

Don't try to do any manipulation in the lexer unless it is trivial and very deterministic, such as keywords only being keywords after some delimiter, or at the start of a line and so on.

All you need for a tree producing parser (which is generally what you should be using), is:

id
	: ID
	| k=keywords  ->ID[$k.start]
	;

You could also use the tree node API to set the type if that feels clearer to you.

For a parser that does not produce a tree, just do (off the top of my head):

keywords
   : (
         k=A
       | k=B
        ... etc
     )
     {
         $k.setType(ID);
     }
   ;

While you can deal with the token without changing its type, unless you need to know that it was a keyword, it is probably simpler for debugging etc if you change it to be an ID type.

For lexers, just follow:

First list all the known, deterministic things, such as keywords, followed by any general rules that would otherwise match the same things:

K1 : 'K1' ;
K2 : 'K2' ;
...

ID : ('A'..'Z' | 'a'..'z') ('A'..'Z' | 'a'..'z'| '0'..'9')* ;

Where there is not a conflict between things of indeterminate length, then ANTLR will work out what it has to do to distinguish anyway, such as '/' vs '/=' and so on, though for clarity you might list the longer sequences first.

Play with the order of a few simple lexer rules, and you will soon pick it up from the fact that ANTLR gives you a warning or an error:

ID : ('A'..'Z' | 'a'..'z') ('A'..'Z' | 'a'..'z'| '0'..'9')* ;
K1 : 'K1';

[20:50:00] error(208): T.g:16:1: The following token definitions can never be matched because prior tokens match the same input: K1

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kevin J. Cummings
> Sent: Friday, November 27, 2009 6:18 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tokens
> 
> On 11/27/2009 08:39 PM, David-Sarah Hopwood wrote:
> > Kevin J. Cummings wrote:
> >> On 11/27/2009 06:05 PM, Ronald Sok wrote:
> >>> Kevin J. Cummings wrote:
> >>>> You are close.  What you have here is keywords as opposed to
> reserved
> >>>> words.  When implementing the former, you will need to do
> something like
> >>>> (at least this is what I do using ANTLR 2.7.7):
> >>>>
> >>>> id : ID
> >>>>    | k:keyword
> >>>>       { #k->setType(ID); }
> >>>>       // This changes the token type of a keyword to an ID
> >>>>    ;
> >>>>
> >>>> keyword
> >>>>    : APPLE | PEAR | ORANGE
> >>>>    ;
> >>>>
> >>>> someName
> >>>>    :     'Name:' id NEWLINE
> >>>>    ;
> >>>>
> >>>> You could reduce the number of productions by folding, but the
> principal
> >>>> of changing the token type of keywords is what is important here.
> And
> >>>> you may have to find out how to do this with ANTLR 3.x.
> >>>
> >>> Ok, I tried to change this into ANTLR 3 syntax, but ran into the
> fact that
> >>> the result of keyword is a subtype of ParserRuleReturnScope, which
> >>
> >> Sorry, my bad, should be KEYWORD and done in the lexer, not the
> parser!
> >
> > That won't work because either:
> >  - KEYWORD is before APPLE, PEAR and ORANGE, in which case it always
> takes
> >    priority and the type of a Token will never be APPLE, PEAR or
> ORANGE;
> >
> >  - or, KEYWORD is after APPLE, PEAR and ORANGE, in which case those
> rules
> >    take priority and the type of a Token will never initially be
> KEYWORD.
> >    You could override it, but if you do that in a lexer rule then you
> >    don't have enough context to determine what it should be (and
> '$type ='
> >    can't be used in a parser rule).
> 
> Hmmm, in the context I used it in, I had to be able to tell when a
> keyword was being used as an identifier.  In ANTLR-2, I could override
> the token's type in the parser.  (Makes expression evaluation a whole
> lot easier further down the line when checking for an identifier....)
> 
> > As I said in my other followup, it's usually not necessary to change
> the
> > type (but you can do so using the code given in that post if you
> want).
> 
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From codeman at bytefusion.de  Sat Nov 28 01:08:05 2009
From: codeman at bytefusion.de (codeman at bytefusion.de)
Date: Sat, 28 Nov 2009 10:08:05 +0100
Subject: [antlr-interest] same char but different context
Message-ID: <564251301.20091128100805@bytefusion.de>

Given is a record-per-line format like this:

<single-char><sequence-of-chars><crlf>

<single-char> => single letter
<sequence-of-chars> => any except end-of-line
<crlf> => end of line

My problem is the following:

WHello World

"W" => recognized as single char
"Hello " is broken, W seems to be a new start char

Here is my grammer. Aimed target is to parse a quicken interchange
format file. Any ideas?


grammar myExample;

options {
        output=AST;
}

tokens {
TYPE_DATE               =   'D'; 
TYPE_AMOUNT             =   'T'; 
TYPE_MEMO               =   'M';
TYPE_CLEARED            =   'C';
TYPE_CHECK_NUMBER       =   'N';
TYPE_PAYEE              =   'P';
TYPE_PAYEE_ADDRESS      =   'A';
TYPE_CATEGORY           =   'L';
TYPE_REIMBURSE          =   'F';
TYPE_SPLIT_CATEGORY     =   'S';
TYPE_SPLIT_MEMO         =   'E';
TYPE_SPLIT_AMOUNT       =   '$';
TYPE_SPLIT_PERCENTAGE   =   '%';
TYPE_SECURITY_NAME      =   'Y';
TYPE_PRICE              =   'I';
TYPE_SHARE_QUANTITY     =   'Q';
TYPE_COMMISSION_COSTS   =   'O';

}
 
start       :   header record+ NEWLINE* EOF;

header      :   KEYWORD_TYPE description NEWLINE;

description :   ANY+;

record      :   item+ END_OF_RECORD;

item        :   item_type description NEWLINE;

item_type   :   (TYPE_DATE
                |TYPE_AMOUNT
                |TYPE_MEMO
                |TYPE_CLEARED
                |TYPE_CHECK_NUMBER
                |TYPE_PAYEE
                |TYPE_PAYEE_ADDRESS
                |TYPE_CATEGORY
                |TYPE_REIMBURSE
                |TYPE_SPLIT_CATEGORY
                |TYPE_SPLIT_MEMO
                |TYPE_SPLIT_AMOUNT
                |TYPE_SPLIT_PERCENTAGE
                |TYPE_SECURITY_NAME
                |TYPE_PRICE
                |TYPE_SHARE_QUANTITY
                |TYPE_COMMISSION_COSTS
                );


KEYWORD_TYPE            :   '!Type:';
NEWLINE                 :   ('\r'|'\n'|'\r\n');
END_OF_RECORD           :   '^';
ANY                     :   ~(NEWLINE);





From jimi at temporal-wave.com  Sat Nov 28 10:38:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 28 Nov 2009 10:38:20 -0800
Subject: [antlr-interest] same char but different context
In-Reply-To: <564251301.20091128100805@bytefusion.de>
Message-ID: <7d9605366ac86941ac13f510ea7ae24a@temporal-wave.com>

Hard to tell what the format is from this, but presumably each new single character type introducer is the first non-whitespace after a newline. If this is the case then you need to take the lexer tokens out of the tokens section and create real LEXER rules that have a predicate based on a Boolean switch, which is set to true after seeing a newline and set to false after seeing the single character. Then you don't want an ANY rule, you want a rule that consumes to end of line. So you want something like this:

grammar T;

 options {
         output = AST;
}
 
@lexer::members {
   boolean isType = true;
}
 
 start       :   header record+  EOF;
 
 header      :   KEYWORD_TYPE RECORD ;
 
 record      :   item+ END_OF_RECORD;
 
 item        :   item_type RECORD ;
 
 item_type   :   (TYPE_DATE
                 |TYPE_AMOUNT
                 |TYPE_MEMO
                 |TYPE_CLEARED
                 |TYPE_CHECK_NUMBER
                 |TYPE_PAYEE
                 |TYPE_PAYEE_ADDRESS
                 |TYPE_CATEGORY
                 |TYPE_REIMBURSE
                 |TYPE_SPLIT_CATEGORY
                 |TYPE_SPLIT_MEMO
                 |TYPE_SPLIT_AMOUNT
                 |TYPE_SPLIT_PERCENTAGE
                 |TYPE_SECURITY_NAME
                 |TYPE_PRICE
                 |TYPE_SHARE_QUANTITY
                 |TYPE_COMMISSION_COSTS
                 );
 
KEYWORD_TYPE            : ('!Type:')=>'!Type:'         { isType=false;  };
END_OF_RECORD           : '^';
TYPE_DATE               : {isType}?=>  'D' { isType=false; };
TYPE_AMOUNT             : {isType}?=>  'T' { isType=false; };
TYPE_MEMO               : {isType}?=>  'M' { isType=false; };
TYPE_CLEARED            : {isType}?=>  'C' { isType=false; };
TYPE_CHECK_NUMBER       : {isType}?=>  'N' { isType=false; };
TYPE_PAYEE              : {isType}?=>  'P' { isType=false; };
TYPE_PAYEE_ADDRESS      : {isType}?=>  'A' { isType=false; };
TYPE_CATEGORY           : {isType}?=>  'L' { isType=false; };
TYPE_REIMBURSE          : {isType}?=>  'F' { isType=false; };
TYPE_SPLIT_CATEGORY     : {isType}?=>  'S' { isType=false; };
TYPE_SPLIT_MEMO         : {isType}?=>  'E' { isType=false; };
TYPE_SPLIT_AMOUNT       : {isType}?=>  '$' { isType=false; };
TYPE_SPLIT_PERCENTAGE   : {isType}?=>  '%' { isType=false; };
TYPE_SECURITY_NAME      : {isType}?=>  'Y' { isType=false; };
TYPE_PRICE              : {isType}?=>  'I' { isType=false; };
TYPE_SHARE_QUANTITY     : {isType}?=>  'Q' { isType=false; };
TYPE_COMMISSION_COSTS   : {isType}?=>  'O' { isType=false; };
 

fragment NLCHARS        : '\r'|'\n';
NEWLINE                 : ('\r'? '\n')+ { isType=true; $channel=99; };
RECORD                  : {!isType}?=>(~NLCHARS)+ ;


This only works if NEWLINE is the end of one record, signifying the start of another. To be honest, this is so simple that a simple program to scan it and build it all at once may be simpler and better for you - it looks like the record format was designed for a simple scanner. Note that your example uses the command 'H', which is not in your command set, that I have assumed you end of record is on a new line of its own (if not then the record token also needs to exclude '^' in its set). Also note that this is just my best guess from trying to interpolate from the grammar you posted.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of codeman at bytefusion.de
> Sent: Saturday, November 28, 2009 1:08 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] same char but different context
> 
> Given is a record-per-line format like this:
> 
> <single-char><sequence-of-chars><crlf>
> 
> <single-char> => single letter
> <sequence-of-chars> => any except end-of-line
> <crlf> => end of line
> 
> My problem is the following:
> 
> WHello World
> 
> "W" => recognized as single char
> "Hello " is broken, W seems to be a new start char
> 
> Here is my grammer. Aimed target is to parse a quicken interchange
> format file. Any ideas?
> 
> 
> grammar myExample;
> 
> options {
>         output=AST;
> }
> 
> tokens {
> TYPE_DATE               =   'D';
> TYPE_AMOUNT             =   'T';
> TYPE_MEMO               =   'M';
> TYPE_CLEARED            =   'C';
> TYPE_CHECK_NUMBER       =   'N';
> TYPE_PAYEE              =   'P';
> TYPE_PAYEE_ADDRESS      =   'A';
> TYPE_CATEGORY           =   'L';
> TYPE_REIMBURSE          =   'F';
> TYPE_SPLIT_CATEGORY     =   'S';
> TYPE_SPLIT_MEMO         =   'E';
> TYPE_SPLIT_AMOUNT       =   '$';
> TYPE_SPLIT_PERCENTAGE   =   '%';
> TYPE_SECURITY_NAME      =   'Y';
> TYPE_PRICE              =   'I';
> TYPE_SHARE_QUANTITY     =   'Q';
> TYPE_COMMISSION_COSTS   =   'O';
> 
> }
> 
> start       :   header record+ NEWLINE* EOF;
> 
> header      :   KEYWORD_TYPE description NEWLINE;
> 
> description :   ANY+;
> 
> record      :   item+ END_OF_RECORD;
> 
> item        :   item_type description NEWLINE;
> 
> item_type   :   (TYPE_DATE
>                 |TYPE_AMOUNT
>                 |TYPE_MEMO
>                 |TYPE_CLEARED
>                 |TYPE_CHECK_NUMBER
>                 |TYPE_PAYEE
>                 |TYPE_PAYEE_ADDRESS
>                 |TYPE_CATEGORY
>                 |TYPE_REIMBURSE
>                 |TYPE_SPLIT_CATEGORY
>                 |TYPE_SPLIT_MEMO
>                 |TYPE_SPLIT_AMOUNT
>                 |TYPE_SPLIT_PERCENTAGE
>                 |TYPE_SECURITY_NAME
>                 |TYPE_PRICE
>                 |TYPE_SHARE_QUANTITY
>                 |TYPE_COMMISSION_COSTS
>                 );
> 
> 
> KEYWORD_TYPE            :   '!Type:';
> NEWLINE                 :   ('\r'|'\n'|'\r\n');
> END_OF_RECORD           :   '^';
> ANY                     :   ~(NEWLINE);
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From andrew.bradnan at gmail.com  Sat Nov 28 11:13:59 2009
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Sat, 28 Nov 2009 11:13:59 -0800
Subject: [antlr-interest] Rule parameter troubles
Message-ID: <8a5e9b780911281113l44f54304v20da930e1a95435b@mail.gmail.com>

I was trying to use a rule parameter and can't call another rule with that
parameter when I use +.  An example will make more sense.

test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[$wtf]+;    // attribute is not a token, parameter,
or return value: wtf
test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[$wtf];    // works fine

test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[false]+;  // works fine as well

test2 [bool wtf2]:
    {$wtf2}?=>'foobar';
If I take the gated semantic predicate out of test2, then all the above
work.
test2 [bool wtf2]:
    'foobar';    // works for all the above
What did I miss?
Thanks
-- 
/Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/2ea7f94f/attachment.html 

From jimi at temporal-wave.com  Sat Nov 28 11:35:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 28 Nov 2009 11:35:29 -0800
Subject: [antlr-interest] Rule parameter troubles
In-Reply-To: <8a5e9b780911281113l44f54304v20da930e1a95435b@mail.gmail.com>
Message-ID: <0a520cd03dcaa942935bab6612a72373@temporal-wave.com>

When you use the predicate, it is being hoisted into other rules, where it is out of context. So, rather than pass as a parameter, use in a scope at a high enough rule level and then use the scope reference in your predicate.

 

Also, if you can, allow all syntax through in the parser even if it makes no semantic sense, and reject it with a better error message at a later semantic phase (usually a tree parser). Then you won't need the flags unless allowing such a syntactic construct means an ambiguous grammar of some kind. Basically you are trying to trade "Syntax error at 'wtf'" for "You cannot have more than one 'wtf' constructs with a 'foo'"

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andrew Bradnan
Sent: Saturday, November 28, 2009 11:14 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Rule parameter troubles

 

I was trying to use a rule parameter and can't call another rule with that parameter when I use +.  An example will make more sense.

 

test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[$wtf]+;    // attribute is not a token, parameter, or return value: wtf

test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[$wtf];    // works fine

 

test [bool wtf] returns [int n]:
    {$wtf}?=>'wtf' test2[false]+;  // works fine as well

test2 [bool wtf2]:
    {$wtf2}?=>'foobar';

If I take the gated semantic predicate out of test2, then all the above work.
test2 [bool wtf2]:
    'foobar';    // works for all the above

What did I miss?

Thanks
-- 
/Andrew



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/89d60cff/attachment.html 

From parrt at cs.usfca.edu  Sat Nov 28 12:25:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Nov 2009 12:25:56 -0800
Subject: [antlr-interest] ST visualizer GUI prototype
Message-ID: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>

well, that was easy. 5 or 6 hours cutting/pasting from web and I have  
an initial prototype ST viewer.  It shows tree of template evals on  
left, template eval stack on lower left, attributes to the right of  
that, output on top right, and template pattern on lower right.  As  
you click around templates, the various displays update.

Next I need to reverse it so you can click in output to find which  
template generated it.  Also, I am tracking what code sets attributes  
and creates St instances.  I'm going to patch that in so it can show  
you where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this  
point.

So easy, not sure if it's worth a serialization protocol to handle C#  
and Python...takes a day to build the GUI and it's easier playing with  
real ST objects in the native language.

Ter

-------------- next part --------------
A non-text attachment was scrubbed...
Name: viz1.gif
Type: image/gif
Size: 14836 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/77b06118/attachment.gif 
-------------- next part --------------


-------------- next part --------------
A non-text attachment was scrubbed...
Name: viz2.gif
Type: image/gif
Size: 12052 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/77b06118/attachment-0001.gif 
-------------- next part --------------




From sharwell at pixelminegames.com  Sat Nov 28 13:08:15 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 28 Nov 2009 15:08:15 -0600
Subject: [antlr-interest] ST visualizer GUI prototype
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>

No need for a serialization protocol for C# - I already have ST4 ported
locally and can build a GUI even easier with WPF/data binding.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, November 28, 2009 2:26 PM
To: StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: [antlr-interest] ST visualizer GUI prototype

well, that was easy. 5 or 6 hours cutting/pasting from web and I have an
initial prototype ST viewer.  It shows tree of template evals on left,
template eval stack on lower left, attributes to the right of that,
output on top right, and template pattern on lower right.  As you click
around templates, the various displays update.

Next I need to reverse it so you can click in output to find which
template generated it.  Also, I am tracking what code sets attributes
and creates St instances.  I'm going to patch that in so it can show you
where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this
point.

So easy, not sure if it's worth a serialization protocol to handle C#
and Python...takes a day to build the GUI and it's easier playing with
real ST objects in the native language.

Ter


From sharwell at pixelminegames.com  Sat Nov 28 13:15:54 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 28 Nov 2009 15:15:54 -0600
Subject: [antlr-interest] ST visualizer GUI prototype
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840E4BE7@martini.ironwillgames.com>

It wouldn't be too much different from my AST Explorer that I wrote
about in April:
http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/97705
305/attachment.png

Let me know when you have the current version in P4 and I can work on
something similar.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Saturday, November 28, 2009 3:08 PM
To: Terence Parr; StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] ST visualizer GUI prototype

No need for a serialization protocol for C# - I already have ST4 ported
locally and can build a GUI even easier with WPF/data binding.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, November 28, 2009 2:26 PM
To: StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: [antlr-interest] ST visualizer GUI prototype

well, that was easy. 5 or 6 hours cutting/pasting from web and I have an
initial prototype ST viewer.  It shows tree of template evals on left,
template eval stack on lower left, attributes to the right of that,
output on top right, and template pattern on lower right.  As you click
around templates, the various displays update.

Next I need to reverse it so you can click in output to find which
template generated it.  Also, I am tracking what code sets attributes
and creates St instances.  I'm going to patch that in so it can show you
where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this
point.

So easy, not sure if it's worth a serialization protocol to handle C#
and Python...takes a day to build the GUI and it's easier playing with
real ST objects in the native language.

Ter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Sat Nov 28 13:24:50 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Nov 2009 13:24:50 -0800
Subject: [antlr-interest] ST visualizer GUI prototype
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
Message-ID: <6390075D-4A81-44B0-9506-376D930F6EFF@cs.usfca.edu>


On Nov 28, 2009, at 1:08 PM, Sam Harwell wrote:

> No need for a serialization protocol for C# - I already have ST4  
> ported
> locally and can build a GUI even easier with WPF/data binding.

ha! cool. i'm going to clean it all up a bunch so might not want to  
follow too closely behind me.

GUI now tracks which template generated output whe you click in output  
window.  it's in p4 depot.  hideous code just trying to make it work.  
not sure how to integrate debug events...perhaps with a DebugST  
subclass.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Saturday, November 28, 2009 2:26 PM
> To: StringTemplate Mailing List
> Cc: ANTLR Interest Mailing List
> Subject: [antlr-interest] ST visualizer GUI prototype
>
> well, that was easy. 5 or 6 hours cutting/pasting from web and I  
> have an

BTW, for license purity reasons, let me say I didn't cut/paste code  
blocks; i grabbed appropriate class, interface, method names etc...  
it's all very easy stuff.

Ter

From rschumeyer at gmail.com  Sat Nov 28 17:20:22 2009
From: rschumeyer at gmail.com (Rick Schumeyer)
Date: Sat, 28 Nov 2009 20:20:22 -0500
Subject: [antlr-interest] How to skip to end of line on error?
Message-ID: <95b1cc100911281720v6a4a208we5875addae825055@mail.gmail.com>

I've read the section on error reporting and recovery from "the book" but
still can't figure out what may be a simple problem.

I want to parse a file that consists of bibliographic entries.  Each entry
is on one line (so each record ends with \n).

If a record does not match, I just want to print an error message, and skip
to the end of line and start again with the next record.

If I understand chapter 10 correctly, then '\n' should be in the
resynchronization set, and the parser will consume tokens until it finds
one.

This isn't happening.  Once I get an error, the parser never recovers.  I
get a bunch of NoViableAlt exceptions.  I'm hoping someone can explain what
I'm doing wrong.

Here is a sample input file.  The 1st and 3rd lines are ok, the 2nd line is
an error.

Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.
Name. "Title," Periodical, 2005, v41(3,Oct), Article 2.
Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.

Here is the grammar:

grammar Periodical;

article_list
    :    (article NL)* article NL?
    ;

article
    :    a=authors PERIOD SPACE QUOTE t=title COMMA QUOTE SPACE j=journal
COMMA SPACE y=year COMMA SPACE v=volume COMMA SPACE p=pages PERIOD SPACE*
    ;

authors    :    (~QUOTE)+;

title    :    (~QUOTE)+;

journal    :    (LETTER|SPACE|COMMA|DASH)+;

volume    :    (LETTER|DIGIT)+
    |    (LETTER|DIGIT)+ '(' (LETTER|DIGIT|SLASH|COMMA)+ ')'
    ;

year    :    DIGIT DIGIT DIGIT DIGIT;

pages    :    DIGIT+ DASH DIGIT+;



PERIOD    :    '.';
QUOTE    :    '"';
COMMA    :    ',';
SPACE    :    ' ';
DIGIT    :    '0'..'9';
LETTER  :    ('a'..'z')|('A'..'Z');
DASH    :    '-';
SLASH    :    '/';
NL    :    '\r'? '\n';
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091128/e5154136/attachment.html 

From jimi at temporal-wave.com  Sun Nov 29 10:54:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Nov 2009 10:54:52 -0800
Subject: [antlr-interest] How to skip to end of line on error?
In-Reply-To: <95b1cc100911281720v6a4a208we5875addae825055@mail.gmail.com>
Message-ID: <9090601858113f47994b992426d17d0d@temporal-wave.com>

This is something I need to write a Wiki article on as it comes up a lot and the solutions are not obvious. Basically, you need to prevent the parsing loop from dropping all the way out of the current rule because it finds an error (in your case within the article rule.) You will also find this much easier if rather than trying to accommodate files without a terminating NL, you just always add an NL to the incoming input, then you will not need the trailing article NL? But can have (article NL)* EOF.

 

So, when an error occurs in the article rule, it will drop out of that rule, but may not resync, so you want to force the resync to the NL when the article rule returns. This is pretty simple, but requires quite a bit of 'inside' knowledge of the ANTLR behavior. What you need to do is create a rule with just the epsilon (nothing) alt, and invoke it directly before the article call but more especially directly after it:

 

articleList

    : reSync  (article reSync NL)* EOF // Assuming that this is where EOF should be

    ;

 

Next, in your resSync rule, you want to resync to the follow set that will now be on the stack, which is actually the same as the first set for the following rule (because ruleSync is empty). Here we know that the followSet will only be NL, so you could hard code that, but this is a generally good technique to know, so let's use it generically). If you don't really understand this, don't worry too much, you can just copy the code and empty rule and it will work:

 

reSync

@init

{

    syncToFirstSet(); // Consume tokens until LA(1) is in the followset at the top of the followSet stack

}

: // Deliberately match nothing, but will be invoked anyway

;

 

Then in your superClass (best) or @members, implement the syncToFirstSet method:

 

    protected void syncToFirstSet ()

    {

        // Compute the followset that is in context where ever we are in the

        // rule chain/stack

        //

         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

 

         syncToFirstSet (follow);

    }

 

    protected void syncToFirstSet (BitSet follow)

    {

        int mark = -1;

 

        try {

 

            mark = input.mark();

 

            // Consume all tokens in the stream until we find a member of the follow

            // set, which means the next production should be guarenteed to be happy.

            //

            while (! follow.member(input.LA(1)) ) {

 

                if  (input.LA(1) == Token.EOF) {

 

                    // Looks like we didn't find anything at all that can help us here

                    // so we need to rewind to where we were and let normal error handling

                    // bail out.

                    //

                    input.rewind();

                    mark = -1;

                    return;

                }

                input.consume();

            }

        } catch (Exception e) {

 

          // Just ignore any errors here, we will just let the recognizer

          // try to resync as normal - something must be very screwed.

          //

        }

        finally {

 

            // Always release the mark we took

            //

            if  (mark != -1) {

                input.release(mark);

            }

        }

 

    }

 

And that's it. Every time you mention reSync in a rule, it will resync the input to a member of the current followSet, which will be the first set of the rule that follows reSync in the current production and you will therefore not drop out of the parsing loop, but reenter your article rule. The first invocation is just in case there is junk before the first article starts (depending on how this rule is invoked, you may need to resync before the articleList rule).

 

I will make a wiki article of this soon as it is commonly required and not particularly obvious.

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rick Schumeyer
Sent: Saturday, November 28, 2009 5:20 PM
To: antlr-interest
Subject: [antlr-interest] How to skip to end of line on error?

 

I've read the section on error reporting and recovery from "the book" but still can't figure out what may be a simple problem.

I want to parse a file that consists of bibliographic entries.  Each entry is on one line (so each record ends with \n).

If a record does not match, I just want to print an error message, and skip to the end of line and start again with the next record.

If I understand chapter 10 correctly, then '\n' should be in the resynchronization set, and the parser will consume tokens until it finds one.

This isn't happening.  Once I get an error, the parser never recovers.  I get a bunch of NoViableAlt exceptions.  I'm hoping someone can explain what I'm doing wrong.

Here is a sample input file.  The 1st and 3rd lines are ok, the 2nd line is an error.

Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.
Name. "Title," Periodical, 2005, v41(3,Oct), Article 2.
Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.

Here is the grammar:

grammar Periodical;

article_list 
    :    (article NL)* article NL?
    ;

article
    :    a=authors PERIOD SPACE QUOTE t=title COMMA QUOTE SPACE j=journal COMMA SPACE y=year COMMA SPACE v=volume COMMA SPACE p=pages PERIOD SPACE*
    ;

authors    :    (~QUOTE)+;

title    :    (~QUOTE)+;

journal    :    (LETTER|SPACE|COMMA|DASH)+;

volume    :    (LETTER|DIGIT)+
    |    (LETTER|DIGIT)+ '(' (LETTER|DIGIT|SLASH|COMMA)+ ')' 
    ;

year    :    DIGIT DIGIT DIGIT DIGIT;

pages    :    DIGIT+ DASH DIGIT+;



PERIOD    :    '.';
QUOTE    :    '"';
COMMA    :    ',';
SPACE    :    ' ';
DIGIT    :    '0'..'9';
LETTER  :    ('a'..'z')|('A'..'Z');
DASH    :    '-';
SLASH    :    '/';
NL    :    '\r'? '\n';



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091129/387efe09/attachment.html 

From parrt at antlr.org  Sun Nov 29 16:05:49 2009
From: parrt at antlr.org (Terence Parr)
Date: Sun, 29 Nov 2009 16:05:49 -0800
Subject: [antlr-interest] more snapshots of prototype
Message-ID: <2F128325-91D1-4BC2-9482-A878290A3AB3@antlr.org>

Ok, got most of what I want. see images here:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

now i clean up.

Ter

From sivaits4u at gmail.com  Mon Nov 30 04:05:21 2009
From: sivaits4u at gmail.com (Siva B)
Date: Mon, 30 Nov 2009 17:35:21 +0530
Subject: [antlr-interest] handle extra things
Message-ID: <581ce2790911300405q1910330eldb895ad50e337b20@mail.gmail.com>

Hi all,

I have a problem when I am doing a function call with unknown number of
parameters.

suppose when I am writing grammar for sum of listed elements(no of elements
not fixed i mean an array of elements)
my code

functionCall :   'sum'  '(' arg=expr {arguments=list();
arguments.append($arg.value); }  (',' e=expr {arguments.append($e.value);})*
 ')' { print  sum(arguments);};

this works fine with               sum(1,2,3)
and also works fine with        sum(1,2,3,)


but the next statemnts(  let sum(2,3,4) .... )are not getting executed
because of the extra comma present in the second function call sum. i mean
interpreter is exiting.
I am not able to find solution.
plz help me

Thanks in Advance
Siva
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/ea355f80/attachment.html 

From boughtonp at gmail.com  Mon Nov 30 04:59:37 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Mon, 30 Nov 2009 12:59:37 +0000
Subject: [antlr-interest] handle extra things
In-Reply-To: <581ce2790911300405q1910330eldb895ad50e337b20@mail.gmail.com>
References: <581ce2790911300405q1910330eldb895ad50e337b20@mail.gmail.com>
Message-ID: <5d97c170911300459s55f27d9bm2e41f763f78a6468@mail.gmail.com>

I'm not sure if this will work, but if you want to allow a trailing
comma, my guess would be that you want ','? immediately before the ')'
and it will then keep going?

From KLPauba at west.com  Mon Nov 30 09:31:21 2009
From: KLPauba at west.com (Pauba, Kevin L)
Date: Mon, 30 Nov 2009 11:31:21 -0600
Subject: [antlr-interest] Help with a tree grammar: losing a list of
	statements
Message-ID: <226316B3E1F749498E28ACA66321D5BA4E560626@oma00cexmbx03.corp.westworlds.com>

I have a parser and tree grammar written to add better flow control constructs to an assembly language-like DSL.

Here's the parser grammar rule of interest:

        |       KW_while l=string condition=string r=string statement+ KW_endwhile
                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

In ANTLRWorks it shows what I expect for an AST using the following text:

while $99 > 0
                let $99 - 1
                let $98 + 1
endwhile

The expected AST includes a tree with a root of KW_while and two children (the EXPR and the SLIST (the list of two statement trees).  I hope that makes sense.

I have a tree-walking grammar that uses "output=template" and "rewrite = true" with the following rule:

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))
                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s})
                <<
L:
        ; while <lhs> <operator> <rhs>
        test <lhs> <operator> <rhs> L_END:
        <stats>
        goto L:
L_END:
                >>

I'm doing something wrong as the "<stats>" ends up being null and I get the following output:

L:
        ; while $99 > 0
        test $99 > 0 L_END:
        goto L:
L_END:

What is wrong with my rewrite grammar?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/513fa63b/attachment.html 

From david-sarah at jacaranda.org  Mon Nov 30 11:44:12 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Mon, 30 Nov 2009 19:44:12 +0000
Subject: [antlr-interest] handle extra things
In-Reply-To: <581ce2790911300405q1910330eldb895ad50e337b20@mail.gmail.com>
References: <581ce2790911300405q1910330eldb895ad50e337b20@mail.gmail.com>
Message-ID: <4B14208C.90600@jacaranda.org>

Siva B wrote:
> Hi all,
> 
> I have a problem when I am doing a function call with unknown number of
> parameters.
> 
> suppose when I am writing grammar for sum of listed elements(no of elements
> not fixed i mean an array of elements)
> my code
> 
> functionCall :   'sum'  '(' arg=expr {arguments=list();
> arguments.append($arg.value); }  (',' e=expr {arguments.append($e.value);})*
>  ')' { print  sum(arguments);};
> 
> this works fine with               sum(1,2,3)
> and also works fine with        sum(1,2,3,)

Something like this should work (untested):

functionCall
@init { arguments = list(); }
  : 'sum' '(' ( restOfArguments[arguments] | ')' )
      { print sum(arguments); }
  ;

restOfArguments[arguments]
  : e=expr {arguments.append($e.value);} ( ',' restOfArguments[arguments]
                                         | ','? ')' )
  ;

(I'm assuming you want to allow zero arguments. If not, delete the "| ')'"
alternative from functionCall.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/37b8ca7e/attachment.bin 

From brian at krahmer.com  Mon Nov 30 14:05:18 2009
From: brian at krahmer.com (Brian Krahmer)
Date: Mon, 30 Nov 2009 15:05:18 -0700
Subject: [antlr-interest] Please help with grammar tweak
Message-ID: <4B14419E.5070908@krahmer.com>

Hello,
  I have a small issue with a grammar file, and really don't know what 
I'm doing.  :)  Can anyone help me please?

Applicable part of my grammar:

const_array : lb:LBRACK list_array_data RBRACK! ;
list_array_data : array_data (COMMA! array_data)? ;
array_data  : atom  |  (STRING1 | STRING2) ARROW^ atom ;

"foo = [1, 2];" works.  However, I need to be able to have 1..n 
array_data elements, such as "foo = [1, 2, 3, 4];"

I'm sure this is probably a small tweak, but I'm not sure how to fix 
it.  Thanks in advance!


From jimi at temporal-wave.com  Mon Nov 30 14:13:08 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Nov 2009 14:13:08 -0800
Subject: [antlr-interest] Please help with grammar tweak
In-Reply-To: <4B14419E.5070908@krahmer.com>
Message-ID: <6f2e721946ad67449d531126b50db0aa@temporal-wave.com>

Change:

(COMMA! array_data)?

To:

(COMMA! array_data)*

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Brian Krahmer
> Sent: Monday, November 30, 2009 2:05 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Please help with grammar tweak
> 
> Hello,
>   I have a small issue with a grammar file, and really don't know what
> I'm doing.  :)  Can anyone help me please?
> 
> Applicable part of my grammar:
> 
> const_array : lb:LBRACK list_array_data RBRACK! ;
> list_array_data : array_data (COMMA! array_data)? ;
> array_data  : atom  |  (STRING1 | STRING2) ARROW^ atom ;
> 
> "foo = [1, 2];" works.  However, I need to be able to have 1..n
> array_data elements, such as "foo = [1, 2, 3, 4];"
> 
> I'm sure this is probably a small tweak, but I'm not sure how to fix
> it.  Thanks in advance!
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Mon Nov 30 14:15:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Nov 2009 14:15:34 -0800
Subject: [antlr-interest] Customizing Error Recovery
Message-ID: <21f753afdc82fe4591d20a835ad34d69@temporal-wave.com>

As this subject comes up fairly often, I thought I would write an article showing some of the ways you can influence, hijack, or otherwise coerce the error recovery mechanisms within your parser. You can find the article here:

 

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

 

Please feel free to provide feedback (via the list is best I think) if anything does not appear to be clear, or you spot typos or errors J

 

Jim



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/c175566e/attachment.html 

From tony at leotta.com  Mon Nov 30 14:16:09 2009
From: tony at leotta.com (tony at leotta.com)
Date: Mon, 30 Nov 2009 22:16:09 +0000 (GMT)
Subject: [antlr-interest] multiple input files using python
References: <mailman.0.1259618636.13647.antlr-interest@antlr.org>
Message-ID: <71367096.23991.1259619369498.JavaMail.mail@webmail09>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/a588504e/attachment.html 

From mcoupland at gmail.com  Mon Nov 30 15:27:40 2009
From: mcoupland at gmail.com (Michael Coupland)
Date: Mon, 30 Nov 2009 15:27:40 -0800
Subject: [antlr-interest] Over-eager lexer?
Message-ID: <d15e4d100911301527r659c185ar4e7ccb6e5876ef6a@mail.gmail.com>

Hi,

I'm trying to use ANTLR to extract portions of a text file, and I'm
having a strange lexer problem. I've boiled my problem down to a
pretty simple case:

I want to match the interesting segments of C-like input, as
delineated by the keyword 'interesting' and matching braces:

        /* blah blah blah - this part should be ignored */
        interesting { /* this is the part */ { /* that is matched */ } }
        /* also ignored */


Here's my ANTLR file:

        grammar test;

        root
        : ignored_segment (interesting_segment ignored_segment)*
        ;

        ignored_segment
        : ( ~ INTERESTING_KEYWORD )*
        ;

        interesting_segment
        : INTERESTING_KEYWORD brace_scope
        ;

        brace_scope
        : OPEN_BRACE (
          ( options {greedy=true;} : ~( OPEN_BRACE | CLOSE_BRACE )
          | brace_scope )
        )* CLOSE_BRACE
        ;

        WS
        : (' '|'\t'|'\n'|'\r')+
        {
                $channel=HIDDEN;
        };

        INTERESTING_KEYWORD : 'interesting' ;
        OPEN_BRACE : '{' ;
        CLOSE_BRACE : '}' ;
        UNMATCHED : . ;

When I run the grammar on the following input, I get the expected behavior.

        humdrum
        interesting { xxx }
        humdrum


However, running a slightly different input through the ANTLRWorks
debugger (or C runtime generated code) gives an error:

        boring
        interesting { xxx }
        boring


I get the following lexer complaint in the debugger output:

        line 1:5 mismatched character 'g' expecting 't'


It's like the lexer sees the 'in' in 'boring' and then refuses to give
up trying to match an 'interesting' token. Can someone explain why
this is happening, and how to solve it? I realize I'm kinda abusing
the lexer/parser, but the grammar seems like the best way to
accomplish my goal.

Thanks!
	Michael

PS. I?m vaguely aware of the concept of filter lexers, but I don?t
think I can do the brace matching I need with them? Also, I can?t
meaningfully test them in ANTLRWorks, since it doesn?t show the lexer
results. I rely on ANTLRWorks heavily to author my grammars before
running them in the ANTLR C Runtime.

From jimi at temporal-wave.com  Mon Nov 30 15:49:35 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Nov 2009 15:49:35 -0800
Subject: [antlr-interest] Over-eager lexer?
In-Reply-To: <d15e4d100911301527r659c185ar4e7ccb6e5876ef6a@mail.gmail.com>
Message-ID: <e864507629c82345b38a3f6a9c1bba56@temporal-wave.com>

The 'in' in boring is enough for the lexer to decide you are trying to write interesting and when it gets to the 'g' it finds your lexer rule is in error. Because there is nothing else to consume such a word, you cannot use a predicate as ANTLR will see that it does not need the predicate.

If you do this though:

grammar T;

 root
: ignored_segment (interesting_segment ignored_segment)*
;
ignored_segment
: ( ~ INTERESTING_KEYWORD )*
;

interesting_segment
: INTERESTING_KEYWORD brace_scope
;

brace_scope
: OPEN_BRACE 
   (
        ~( OPEN_BRACE | CLOSE_BRACE )
        | brace_scope 
   )* 
  CLOSE_BRACE
;



INTERESTING_KEYWORD : 'interesting' ;
WORDS               : ('a'..'z')+  {$type = UNMATCHED; } ;
OPEN_BRACE          : '{' ;
CLOSE_BRACE : '}' ;
WS
: (' '|'\t'|'\n'|'\r')+
{
$channel=HIDDEN;
};

UNMATCHED : . ;


You will see that it does more checking before selecting the INTERESTING_KEYWORD rule.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael Coupland
> Sent: Monday, November 30, 2009 3:28 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Over-eager lexer?
> 
> Hi,
> 
> I'm trying to use ANTLR to extract portions of a text file, and I'm
> having a strange lexer problem. I've boiled my problem down to a
> pretty simple case:
> 
> I want to match the interesting segments of C-like input, as
> delineated by the keyword 'interesting' and matching braces:
> 
>         /* blah blah blah - this part should be ignored */
>         interesting { /* this is the part */ { /* that is matched */ }
> }
>         /* also ignored */
> 
> 
> Here's my ANTLR file:
> 
>         grammar test;
> 
>         root
>         : ignored_segment (interesting_segment ignored_segment)*
>         ;
> 
>         ignored_segment
>         : ( ~ INTERESTING_KEYWORD )*
>         ;
> 
>         interesting_segment
>         : INTERESTING_KEYWORD brace_scope
>         ;
> 
>         brace_scope
>         : OPEN_BRACE (
>           ( options {greedy=true;} : ~( OPEN_BRACE | CLOSE_BRACE )
>           | brace_scope )
>         )* CLOSE_BRACE
>         ;
> 
>         WS
>         : (' '|'\t'|'\n'|'\r')+
>         {
>                 $channel=HIDDEN;
>         };
> 
>         INTERESTING_KEYWORD : 'interesting' ;
>         OPEN_BRACE : '{' ;
>         CLOSE_BRACE : '}' ;
>         UNMATCHED : . ;
> 
> When I run the grammar on the following input, I get the expected
> behavior.
> 
>         humdrum
>         interesting { xxx }
>         humdrum
> 
> 
> However, running a slightly different input through the ANTLRWorks
> debugger (or C runtime generated code) gives an error:
> 
>         boring
>         interesting { xxx }
>         boring
> 
> 
> I get the following lexer complaint in the debugger output:
> 
>         line 1:5 mismatched character 'g' expecting 't'
> 
> 
> It's like the lexer sees the 'in' in 'boring' and then refuses to give
> up trying to match an 'interesting' token. Can someone explain why
> this is happening, and how to solve it? I realize I'm kinda abusing
> the lexer/parser, but the grammar seems like the best way to
> accomplish my goal.
> 
> Thanks!
> 	Michael
> 
> PS. I'm vaguely aware of the concept of filter lexers, but I don't
> think I can do the brace matching I need with them? Also, I can't
> meaningfully test them in ANTLRWorks, since it doesn't show the lexer
> results. I rely on ANTLRWorks heavily to author my grammars before
> running them in the ANTLR C Runtime.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ToddStevenson at ge.com  Mon Nov 30 15:59:39 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Mon, 30 Nov 2009 18:59:39 -0500
Subject: [antlr-interest] Building composite grammars with output=AST
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80EBFE59D@CINMLVEM11.e2k.ad.ge.com>

I have a lexer/parser grammar that I am attempting to decouple into a
parser, lexer, and a root composite grammar.  This grammar has an
output=AST that is to be read by a tree grammar parser.  
 
When I run the grammar, I get a 'mismatched input' on the first token of
the source.   The symptom seems to indicate that the generated tokens
aren't in sync.  Is there a trick to setting up the parser/lexer files
so that everything is generated correct?   I've noticed that I can't use
the 'TokenVocab=lex' option anymore.  Instead I need to import the lexer
along with the parser.
 
Also, if I import the lexer before the parser, it appears to parse
correctly, but crashes in the tree parser with a null pointer exception.
 
thanks.
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091130/ee836d18/attachment.html 

From david-sarah at jacaranda.org  Mon Nov 30 18:22:34 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 01 Dec 2009 02:22:34 +0000
Subject: [antlr-interest] Customizing Error Recovery
In-Reply-To: <21f753afdc82fe4591d20a835ad34d69@temporal-wave.com>
References: <21f753afdc82fe4591d20a835ad34d69@temporal-wave.com>
Message-ID: <4B147DEA.7040700@jacaranda.org>

Jim Idle wrote:
> As this subject comes up fairly often, I thought I would write an article
> showing some of the ways you can influence, hijack, or otherwise coerce
> the error recovery mechanisms within your parser. You can find the
> article here:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

The '[ListBuffer<JFXTree> mems]' argument to syncClass should be removed.

'protected void syncToSet(BitSet follow)' should be called
'syncToGoodToken' if it's to be consistent with the call in 'syncToSet()'.

A more serious problem is that this code seems to be suppressing errors,
as opposed to recovering from them. That is, syncToSet will just discard
invalid tokens, rather than reporting that an invalid token was found
before syncing to the next good token.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/498703bb/attachment.bin 

From jimi at temporal-wave.com  Mon Nov 30 18:38:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Nov 2009 18:38:01 -0800
Subject: [antlr-interest] Customizing Error Recovery
In-Reply-To: <4B147DEA.7040700@jacaranda.org>
Message-ID: <5d5684dc2246084b9eebce5785e9ea39@temporal-wave.com>

The function has been renamed already, I will double check. The parameter should go as you say, this was taken from the JavaFX compiler.

Err, the point of consuming the tokens is to suppress spurious errors so you can sync back to a decent restart point. Any syntax error in the previous subrule will be caught and displayed because the exception will throw in that rule and you will be back in the class rule, where you want to resync to a good point so you don't drop out of the loop.

Now, if you want to be more clever, then you can see if there were any errors in the previous rule, then if there are spurious tokens after the class member then you can show an error about them. The point is not the actual recovery mechanism you employ, but how to get NATLR to let you do such a thing of course. I will add something to this effect to the article tomorrow.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Monday, November 30, 2009 6:23 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Customizing Error Recovery
> 
> Jim Idle wrote:
> > As this subject comes up fairly often, I thought I would write an
> > article showing some of the ways you can influence, hijack, or
> > otherwise coerce the error recovery mechanisms within your parser.
> You
> > can find the article here:
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> 
> The '[ListBuffer<JFXTree> mems]' argument to syncClass should be
> removed.
> 
> 'protected void syncToSet(BitSet follow)' should be called
> 'syncToGoodToken' if it's to be consistent with the call in
> 'syncToSet()'.
> 
> A more serious problem is that this code seems to be suppressing
> errors, as opposed to recovering from them. That is, syncToSet will
> just discard invalid tokens, rather than reporting that an invalid
> token was found before syncing to the next good token.
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From jimi at temporal-wave.com  Mon Nov 30 19:10:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Nov 2009 19:10:37 -0800
Subject: [antlr-interest] Customizing Error Recovery
In-Reply-To: <4B147DEA.7040700@jacaranda.org>
Message-ID: <9f32fee58957504ab71ade101853ed4e@temporal-wave.com>

I added an explanation of where to raise an error because you are consuming spurious tokens and correct the method call name in the Java code. Thanks for the input.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Monday, November 30, 2009 6:23 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Customizing Error Recovery
> 
> Jim Idle wrote:
> > As this subject comes up fairly often, I thought I would write an
> > article showing some of the ways you can influence, hijack, or
> > otherwise coerce the error recovery mechanisms within your parser.
> You
> > can find the article here:
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> 
> The '[ListBuffer<JFXTree> mems]' argument to syncClass should be
> removed.
> 
> 'protected void syncToSet(BitSet follow)' should be called
> 'syncToGoodToken' if it's to be consistent with the call in
> 'syncToSet()'.
> 
> A more serious problem is that this code seems to be suppressing
> errors, as opposed to recovering from them. That is, syncToSet will
> just discard invalid tokens, rather than reporting that an invalid
> token was found before syncing to the next good token.
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From kodogo at gmail.com  Mon Nov 30 19:34:55 2009
From: kodogo at gmail.com (Andrew Simmons)
Date: Tue, 1 Dec 2009 16:34:55 +1300
Subject: [antlr-interest] Postscript parsing
Message-ID: <44671b480911301934n102d7928naa867e77389b7c9@mail.gmail.com>

Hi

I was wondering if anyone had any views on the suitability or
otherwise of ANTLR for parsing Postscript. There was a discussion here
a few years back about this general area, and there's Mr Parr's lab
exercise on the site. However,  I'm wondering if it really makes sense
to use a recursive descent parser to handle a stack-based interpreted
language, as opposed to hand-crafting the lexer and interpreter. Any
views gratefully received.

Thanks
Andrew

From david-sarah at jacaranda.org  Mon Nov 30 20:04:36 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 01 Dec 2009 04:04:36 +0000
Subject: [antlr-interest] Customizing Error Recovery
In-Reply-To: <5d5684dc2246084b9eebce5785e9ea39@temporal-wave.com>
References: <5d5684dc2246084b9eebce5785e9ea39@temporal-wave.com>
Message-ID: <4B1495D4.8000703@jacaranda.org>

Jim Idle wrote:
> Err, the point of consuming the tokens is to suppress spurious errors
> so you can sync back to a decent restart point. Any syntax error in the
> previous subrule will be caught and displayed because the exception will
> throw in that rule and you will be back in the class rule, where you want
> to resync to a good point so you don't drop out of the loop.

I may be misunderstanding somthing, but it doesn't look to me as though
syntax errors due to spurious tokens will cause exceptions or be displayed.

For example, suppose that '=' is not a valid starting token for a
declaration. Then for the input

  class Foo {
    =
    int validDeclaration;
  }

syncToSet will skip the '=' token without reporting an error, even though
a syntax error should have been reported.

> Now, if you want to be more clever, then you can see if there were any
> errors in the previous rule, then if there are spurious tokens after the
> class member

... or before the first class member ...

> then you can show an error about them.

Well, then I suppose my point is that you should always do this -- it's
not a matter of being clever, but of being minimally correct.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/9e17416b/attachment.bin 

From parrt at cs.usfca.edu  Mon Nov 30 21:03:21 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 21:03:21 -0800
Subject: [antlr-interest] Postscript parsing
In-Reply-To: <44671b480911301934n102d7928naa867e77389b7c9@mail.gmail.com>
References: <44671b480911301934n102d7928naa867e77389b7c9@mail.gmail.com>
Message-ID: <17ACA38A-FBD0-4EA0-A2D2-CE0408E80BAC@cs.usfca.edu>

Hi. i think it's overkill. A lexer plus a simple interpreter around  
the token stream is good enough.
Ter

On Nov 30, 2009, at 7:34 PM, Andrew Simmons wrote:

> Hi
>
> I was wondering if anyone had any views on the suitability or
> otherwise of ANTLR for parsing Postscript. There was a discussion here
> a few years back about this general area, and there's Mr Parr's lab
> exercise on the site. However,  I'm wondering if it really makes sense
> to use a recursive descent parser to handle a stack-based interpreted
> language, as opposed to hand-crafting the lexer and interpreter. Any
> views gratefully received.
>
> Thanks
> Andrew
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


