From sunjigang1965 at yahoo.com.cn  Mon May  1 07:42:26 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Mon May  1 07:42:31 2006
Subject: [antlr-interest] token position detection problem 
Message-ID: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>

I have set one TAB occupies 4 spaces by doing '\t' {setTabSize(4);} in lexer grammar. It is not
always working, some TABs are still counted as 8, while some are taken as 4 as expected.


		
____________________________________________________

From duboimat at iro.umontreal.ca  Mon May  1 09:14:10 2006
From: duboimat at iro.umontreal.ca (duboimat@iro.umontreal.ca)
Date: Mon May  1 09:14:17 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
Message-ID: <20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>


We would like to create a VHDL parser (with AST).

Is it possible to create this parser in one month?

Mat





----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From sohail at taggedtype.net  Mon May  1 09:44:09 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May  1 09:44:28 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
	<20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
Message-ID: <1146501850.5732.4.camel@localhost.localdomain>

On Mon, 2006-05-01 at 12:14 -0400, duboimat@iro.umontreal.ca wrote:
> We would like to create a VHDL parser (with AST).
> 
> Is it possible to create this parser in one month?

Its possible if you know antlr+VHDL well enough.

From ewbank at gmail.com  Mon May  1 10:59:48 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon May  1 10:59:50 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
	<20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
Message-ID: <dd3a065f0605011059j703e682bo5afcc428145b2574@mail.gmail.com>

Hmm...

Create an ANTLR-based parser that generates trees - Yes.

Create and test an ANTLR-based parser - Maybe.

Create a production system based on a parser that does something
meaningful - No.

What do you want to do once you have the input file in tree format? 
Just exit?  Gather information?  Emit it as silicon?  How many people
are involved?  Who's writing test cases?  Who knows VHDL?


On 5/1/06, duboimat@iro.umontreal.ca <duboimat@iro.umontreal.ca> wrote:
> We would like to create a VHDL parser (with AST).
> Is it possible to create this parser in one month?
>
> Mat
From ewbank at gmail.com  Mon May  1 11:03:15 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon May  1 11:03:17 2006
Subject: [antlr-interest] token position detection problem
In-Reply-To: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
Message-ID: <dd3a065f0605011103p3b17379pb988c03a8a03240f@mail.gmail.com>

Q2FuIHlvdSBkZXNjcmliZSB0aGUgcGxhY2VzIHdoZXJlIFRBQiBpcyBub3QgYmVpbmcgY29ycmVj
dGx5IHNldD8KClBlcmhhcHMgaXQncyBhbHdheXMgdGhlIHNlY29uZCAoYW5kIGZvbGxvd2luZykg
dGFicz8KUGVyaGFwcyBqdXN0IHRhYnMgdGhhdCBhcmUgbm90IGluIHRoZSBsZWFkaW5nIHdoaXRl
c3BhY2Ugb2YgYSBsaW5lPwpQZXJoYXBzIGp1c3QgdGFicyB3aXRoaW4gY29tbWVudHM/ClBlcmhh
cHMgdGhlcmUncyBhIHJ1bGUgdGhhdCB1c2VzIFx0IGluc3RlYWQgb2YgVEFCPwoKVGhlcmUgbXVz
dCBiZSBzb21lIHJlZ3VsYXJpdHkgdG8gdGhlIHByb2JsZW0uICBGaW5kaW5nIGl0IHRoYXQgbWF5
IGJlCmhhcmQsIGJ1dCBpdCBtdXN0IGJlIHRoZXJlLgoKCgpPbiA1LzEvMDYsIMvvvM241SBKaWdh
bmcgKFJvYmVydCkgU3VuIDxzdW5qaWdhbmcxOTY1QHlhaG9vLmNvbS5jbj4gd3JvdGU6Cj4gSSBo
YXZlIHNldCBvbmUgVEFCIG9jY3VwaWVzIDQgc3BhY2VzIGJ5IGRvaW5nICdcdCcge3NldFRhYlNp
emUoNCk7fSBpbgo+IGxleGVyIGdyYW1tYXIuIEl0IGlzIG5vdCBhbHdheXMgd29ya2luZywgc29t
ZSBUQUJzIGFyZSBzdGlsbCBjb3VudGVkIGFzIDgsCj4gd2hpbGUgc29tZSBhcmUgdGFrZW4gYXMg
NCBhcyBleHBlY3RlZC4K
From gt54-antlr at cyconix.com  Mon May  1 12:06:33 2006
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon May  1 12:06:56 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
	<20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
Message-ID: <44565C39.4010302@cyconix.com>

duboimat@iro.umontreal.ca wrote:
> 
> We would like to create a VHDL parser (with AST).
> 
> Is it possible to create this parser in one month?

VHDL is difficult. If you're an expert at VHDL (and only a handful of 
people are), then I'd suggest giving yourself ~6 weeks to get proficient 
at antlr (which presumably you don't know yet), and at least 6 months 
just to get to useable ASTs. Doing anything useful with the AST is going 
to take a lot longer.

If you're *not* an expert at VHDL, then forget it...  :)

Paul
From sohail at taggedtype.net  Mon May  1 09:44:09 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May  1 12:40:18 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
References: <20060501144226.35972.qmail@web15704.mail.cnb.yahoo.com>
	<20060501121410.91ehvf8vy8ow4g4w@webmail.iro.umontreal.ca>
Message-ID: <1146501850.5732.4.camel@localhost.localdomain>

On Mon, 2006-05-01 at 12:14 -0400, duboimat@iro.umontreal.ca wrote:
> We would like to create a VHDL parser (with AST).
> 
> Is it possible to create this parser in one month?

Its possible if you know antlr+VHDL well enough.

From canfield at computer.org  Mon May  1 13:31:11 2006
From: canfield at computer.org (Bill Canfield)
Date: Mon May  1 13:43:32 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <20060501190003.DEAA8DCCF6@www.antlr.org>
References: <20060501190003.DEAA8DCCF6@www.antlr.org>
Message-ID: <4456700F.30401@computer.org>

> We would like to create a VHDL parser (with AST).
> 
> Is it possible to create this parser in one month?
> 

Short answer:  no.

As others have indicated, the grammar itself might get done in a month.
But ANTLR ASTs are so generic, that you're likely to want to create a
more VHDL-flavored class library.  That will take some time.

For most applications, an HDL parser is useless without code to
elaborate the design.  That's a non-trivial task.

As a data point, my current project put 6-12 man-months into a
SystemVerilog parser/elaborator in ANTLR/C++.
From sunjigang1965 at yahoo.com.cn  Mon May  1 14:00:12 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Mon May  1 14:00:17 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20Re:=20[antlr-interest]=20token=20position?=
	=?gb2312?q?=20detection=20problem?=
In-Reply-To: <dd3a065f0605011103p3b17379pb988c03a8a03240f@mail.gmail.com>
Message-ID: <20060501210012.3437.qmail@web15705.mail.cnb.yahoo.com>

As showed on the attached picture, in the 4th line "	System.out.println(8);", the position of '8'
is detected as line = 4, column=28,the only TAB character before "System" is conted as 8 spaces; I
made an exact  same text by copy and paste,this time the position of 8 inside method add is
line=17, column=24, the TAB inside is counted as 4 correctly.

Thanks.

Jigang




--- Bryan Ewbank <ewbank@gmail.com>–¥µ¿:

> Can you describe the places where TAB is not being correctly set?
> 
> Perhaps it's always the second (and following) tabs?
> Perhaps just tabs that are not in the leading whitespace of a line?
> Perhaps just tabs within comments?
> Perhaps there's a rule that uses \t instead of TAB?
> 
> There must be some regularity to the problem.  Finding it that may be
> hard, but it must be there.
> 
> 
> 
> On 5/1/06, ÀÔºÕ∏’ Jigang (Robert) Sun <sunjigang1965@yahoo.com.cn> wrote:
> > I have set one TAB occupies 4 spaces by doing '\t' {setTabSize(4);} in
> > lexer grammar. It is not always working, some TABs are still counted as 8,
> > while some are taken as 4 as expected.
> 


	

	
		
___________________________________________________________ 
—≈ª¢1G√‚∑—” œ‰∞Ÿ∑÷∞Ÿ∑¿¿¨ª¯–≈ 
http://cn.mail.yahoo.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Untitled-2.gif
Type: image/gif
Size: 6956 bytes
Desc: 1276105912-Untitled-2.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060502/73a743e7/Untitled-2.gif
From craymer at warpiv.com  Mon May  1 15:38:16 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon May  1 15:38:18 2006
Subject: [antlr-interest] estimate about creating a parser
In-Reply-To: <1146501850.5732.4.camel@localhost.localdomain>
Message-ID: <006601c66d6f$f1168460$8a02a8c0@Fafnir>

This is one of those cases where you should be looking to borrow rather than
build, given the time constraints.  Google "VHDL ANTLR" and you will get a
number of useful hits, including the VHDL parser posted on antlr.org
(http://www.antlr.org/grammar/1086696923011/vhdlams/index.html).

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Sohail Somani
> Sent: Monday, May 01, 2006 9:44 AM
> To: duboimat@iro.umontreal.ca
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] estimate about creating a parser
> 
> On Mon, 2006-05-01 at 12:14 -0400, duboimat@iro.umontreal.ca wrote:
> > We would like to create a VHDL parser (with AST).
> >
> > Is it possible to create this parser in one month?
> 
> Its possible if you know antlr+VHDL well enough.


From open.zone at virgin.net  Mon May  1 17:50:14 2006
From: open.zone at virgin.net (Micheal J)
Date: Mon May  1 17:32:50 2006
Subject: =?iso-8859-1?Q?RE:_=BB=D8=B8=B4=A3=BA_Re:_=5Bantlr-interest=5D_token_po?=
	=?iso-8859-1?Q?sition_detection_problem?=
In-Reply-To: <20060501210012.3437.qmail@web15705.mail.cnb.yahoo.com>
Message-ID: <003201c66d82$606fe600$6702a8c0@hercules>

Hi Robert,

> As showed on the attached picture, in the 4th line "	
> System.out.println(8);", the position of '8'
> is detected as line = 4, column=28,the only TAB character 
> before "System" is conted as 8 spaces; I made an exact  same 
> text by copy and paste,this time the position of 8 inside 
> method add is line=17, column=24, the TAB inside is counted 
> as 4 correctly.

Do you have a test case for this?. Perhaps a small grammar, driver program
that runs it and a test input file that demonstrates the problem.

Cheers,

Micheal

From david.crosson at wanadoo.fr  Tue May  2 05:24:03 2006
From: david.crosson at wanadoo.fr (David CROSSON)
Date: Tue May  2 05:24:06 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account in
 automatically generated lexer java code...
Message-ID: <23623699.1146572643439.JavaMail.www@wwinf1620>

Hello,

The @header content information, such as package declaration, is included
in the generated grammar java source code but not in the automatically
generated lexer java source code.

// ----------------------------
grammar BeaStackDumpParser;
options {
    filter=true;
    output=AST;
}

@header {
  package stackdumpparser.parsers;
  import stackdumpparser.model.*;
}
... my rules, no lexer declaration ...
// ----------------------------

The following files are generated :
- BeaStackDumpParser.java
- BeaStackDumpParser.lexer.g
- BeaStackDumpParser.tokens
- BeaStackDumpParserLexer.java
- BeaStackDumpParserLexer.token

BeaStackDumpParser.java contains header information but
not the BeaStackDumpParserLexer file.


Any idea ? May be the generated "BeaStackDumpParser.lexer.g"
should include the same header section ?

Best regards,
David Crosson.

ps : thanks Terence, for your response to my previous mail, you were right
I forgot to add the "output=AST;" option to my grammar file.



From jimi at temporal-wave.com  Tue May  2 06:00:30 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue May  2 06:01:41 2006
Subject: [antlr-interest] calling all ANTLR v3 aficiandos
References: <735AB18E-4B0A-47B0-9B56-B7D30872E72B@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A5B8@wavemachine.temporal-wave.com>
	<D26B9106-4C21-4820-BD58-BFE9CE97D900@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5BC@wavemachine.temporal-wave.com>

I have some of this on my MacBook now and as soon as I find a VPN client that works on Intel MAC I will transfer to the wiki ;-)
 
Jim

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Terence Parr
Sent: Fri 4/28/2006 5:22 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] calling all ANTLR v3 aficiandos




On Apr 28, 2006, at 7:17 AM, Jim Idle wrote:

> I'll start it this weekend, starting with some basic structure and 
> then anyone can go in and correct mistakes or add additional 
> information.

Awesome...i'll help :)
Ter



From jimi at temporal-wave.com  Tue May  2 06:05:33 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue May  2 06:07:22 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account
	in automatically generated lexer java code...
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>

In ANTLR3 the header section is taken to mean you want this in the parser generated code and not the lexer generated code. They are separate directives. You want:
 
@lexer::header {
}
 
To place things in  the lexer explicitly.

Jim

________________________________

From: antlr-interest-bounces@antlr.org on behalf of David CROSSON
Sent: Tue 5/2/2006 2:24 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account in automatically generated lexer java code...



Hello,

The @header content information, such as package declaration, is included
in the generated grammar java source code but not in the automatically
generated lexer java source code.

// ----------------------------
grammar BeaStackDumpParser;
options {
    filter=true;
    output=AST;
}

@header {
  package stackdumpparser.parsers;
  import stackdumpparser.model.*;
}
... my rules, no lexer declaration ...
// ----------------------------

The following files are generated :
- BeaStackDumpParser.java
- BeaStackDumpParser.lexer.g
- BeaStackDumpParser.tokens
- BeaStackDumpParserLexer.java
- BeaStackDumpParserLexer.token

BeaStackDumpParser.java contains header information but
not the BeaStackDumpParserLexer file.


Any idea ? May be the generated "BeaStackDumpParser.lexer.g"
should include the same header section ?

Best regards,
David Crosson.

ps : thanks Terence, for your response to my previous mail, you were right
I forgot to add the "output=AST;" option to my grammar file.





From parrt at cs.usfca.edu  Tue May  2 11:42:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  2 11:42:48 2006
Subject: [antlr-interest] ANTLR v3 FAQ started on wiki
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5BC@wavemachine.temporal-wave.com>
References: <735AB18E-4B0A-47B0-9B56-B7D30872E72B@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A5B8@wavemachine.temporal-wave.com>
	<D26B9106-4C21-4820-BD58-BFE9CE97D900@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A5BC@wavemachine.temporal-wave.com>
Message-ID: <4A24D300-EBBC-45BD-92F2-05C645122643@cs.usfca.edu>


On May 2, 2006, at 6:00 AM, Jim Idle wrote:

> I have some of this on my MacBook now and as soon as I find a VPN  
> client that works on Intel MAC I will transfer to the wiki ;-)

Great! let's start a faq.  I just read

http://confluence.atlassian.com/pages/viewpage.action?pageId=151114

and it looks like we want this approach (2nd paragraph):
"Another simple approach is to use subpages where each entry becomes  
its own page. Typically such an FAQ will have a main page, a series  
of topic pages which break the FAQ into sections, and then the  
individual entries. Adding a new entry now just involves adding a new  
page to the correct topic page. Each topic page will list its  
children so they will be automatically updated. This solution scales  
more naturally than the first approach and allows comments to be  
added to an individual entry. The one downside is that each entry can  
only live within one topic which is not a restriction of the first  
approach.

The approach used by this FAQ is to use the power of Confluence's  
labels. As with the previous approach, each entry is added to a topic  
page which is added to the main page. However, instead of listing the  
children of a page, each topic page lists all entries that have  
specified a particular label using the contentbylabel macro. Now an  
entry can appear under multiple topics by specifying multiple labels  
on its page. This FAQ uses a convention of prefixing all labels with  
'faq_' to avoid collisions with other labels in the space."

Ok, i started it:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ

There are topic subpages and each faq entry has labels that indicate  
which of multiple topics it can be in.  There are subtopic pages to  
which you add new subpages.  Put the faq entry in the primary topic's  
topic subpage but you can put labels to indicate what other topics  
it's in.  Please look at how I've done this with faq_label.

Ter
From mail at martin-probst.com  Tue May  2 11:58:55 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue May  2 11:59:04 2006
Subject: =?UTF-8?Q?Re:_=E5=9B=9E=E5=A4=8D=EF=BC=9A_Re:_[antlr-interest]_t?=
	=?UTF-8?Q?oken_position_detection_problem?=
In-Reply-To: <20060501210012.3437.qmail@web15705.mail.cnb.yahoo.com>
References: <20060501210012.3437.qmail@web15705.mail.cnb.yahoo.com>
Message-ID: <66511B93-403B-475C-B273-3B46BFFB4DC2@martin-probst.com>


> As showed on the attached picture, in the 4th line "	 
> System.out.println(8);", the position of '8'
> is detected as line = 4, column=28,the only TAB character before  
> "System" is conted as 8 spaces; I
> made an exact  same text by copy and paste,this time the position  
> of 8 inside method add is
> line=17, column=24, the TAB inside is counted as 4 correctly.

I might be mistaken (no ANTLR source tree at hands) but aren't you  
supposed to do:
"setTabWidth(4);" before starting to parse? E.g.

Parser myParser = new Parser();
myParser.setTabWidth(4);
myParser.axiom();

I think you're setting it every time you encounter a tab, but only  
after actually consuming the tab. This way, the first tab will always  
be mistaken, subsequent ones will be read correctly.

Regards,
Martin

From pdeva at placidsystems.com  Tue May  2 12:57:23 2006
From: pdeva at placidsystems.com (Prashant Deva)
Date: Tue May  2 12:57:30 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account
	in automatically generated lexer java code...
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
Message-ID: <41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>

In ANTLR3 the header section is taken to mean you want this in the parser
> generated code and not the lexer generated code. They are separate
> directives. You want:
>
> @lexer::header {
> }


This does not seem like uniform syntax. It can be confusing as was in this
case.

I propose we put the header syntax as -
@header::(parser|lexer) {
}

That way it would be much less confusing for beginners.

PRASHANT
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060503/80c19033/attachment.html
From parrt at cs.usfca.edu  Tue May  2 13:02:28 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  2 13:02:32 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account
	in automatically generated lexer java code...
In-Reply-To: <41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
Message-ID: <9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>

On May 2, 2006, at 12:57 PM, Prashant Deva wrote:
> This does not seem like uniform syntax.

uniform with what?

> It can be confusing as was in this case.
>
> I propose we put the header syntax as -
> @header::(parser|lexer) {
> }
>
> That way it would be much less confusing for beginners.

Seems more confusing to me.  It's just that there is no doc. ;)

@scopename::actionname {...}

is the syntax...works great. :)

It's uniform with $scopename::attribute as well :)

Ter
From prashant.deva at gmail.com  Tue May  2 13:09:46 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue May  2 13:09:49 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account
	in automatically generated lexer java code...
In-Reply-To: <9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
	<9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
Message-ID: <41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>

No, what i meant was this-
According to the parent post, it seems if we want to declare a header for a
parser, we just use-
@header{}

But to declare a header for lexer, we gotta use-
@lexer::header{}

That is where it doesnt feel uniform.

Dont you think it would be better if we used -
@parser::header{}
&
@lexer::header{}
for both the lexer & the parser.

That way it would seem more uniform :)

PRASHANT
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060503/92e3b88f/attachment.html
From parrt at cs.usfca.edu  Tue May  2 13:45:22 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  2 13:45:26 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into account
	in automatically generated lexer java code...
In-Reply-To: <41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
	<9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
	<41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
Message-ID: <C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu>


On May 2, 2006, at 1:09 PM, Prashant Deva wrote:

> No, what i meant was this-
> According to the parent post, it seems if we want to declare a  
> header for a parser, we just use-
> @header{}
>
> But to declare a header for lexer, we gotta use-
> @lexer::header{}

That is *only* if you are combining lexer and parser :)

> That is where it doesnt feel uniform.

@header{} is used if it's in the lexer by itself I believe.

> Dont you think it would be better if we used -
> @parser::header{}
> &
> @lexer::header{}
> for both the lexer & the parser.

I believe parser::header works; just implied.

> That way it would seem more uniform :)

Yep
Ter
From sunjigang1965 at yahoo.com.cn  Tue May  2 16:06:42 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Tue May  2 16:06:47 2006
Subject: =?gb2312?q?=BB=D8=B8=B4=A3=BA=20Re:=20=BB=D8=B8=B4=A3=BA=20Re:=20[antlr-i?=
	=?gb2312?q?nterest]=20token=20position=20detection=20problem?=
In-Reply-To: <66511B93-403B-475C-B273-3B46BFFB4DC2@martin-probst.com>
Message-ID: <20060502230642.6611.qmail@web15701.mail.cnb.yahoo.com>

Thanks a lot.

In lexer grammar, I changed "  '\t' {setTabSize(4);} " to " |  {setTabSize(4);} '\t' ". Works ok.
I am sure, in this way, TAB width had changed from 8 to 4 before the first TAB met. 


Jigang


--- Martin Probst <mail@martin-probst.com>–¥µ¿:

> 
> > As showed on the attached picture, in the 4th line "	 
> > System.out.println(8);", the position of '8'
> > is detected as line = 4, column=28,the only TAB character before  
> > "System" is conted as 8 spaces; I
> > made an exact  same text by copy and paste,this time the position  
> > of 8 inside method add is
> > line=17, column=24, the TAB inside is counted as 4 correctly.
> 
> I might be mistaken (no ANTLR source tree at hands) but aren't you  
> supposed to do:
> "setTabWidth(4);" before starting to parse? E.g.
> 
> Parser myParser = new Parser();
> myParser.setTabWidth(4);
> myParser.axiom();
> 
> I think you're setting it every time you encounter a tab, but only  
> after actually consuming the tab. This way, the first tab will always  
> be mistaken, subsequent ones will be read correctly.
> 
> Regards,
> Martin
> 
> 



	

	
		
___________________________________________________________ 
—≈ª¢1G√‚∑—” œ‰∞Ÿ∑÷∞Ÿ∑¿¿¨ª¯–≈ 
http://cn.mail.yahoo.com/
From diparfitt at gmail.com  Tue May  2 18:53:19 2006
From: diparfitt at gmail.com (David Parfitt)
Date: Tue May  2 18:53:22 2006
Subject: [antlr-interest] tree walking errors to line/col
Message-ID: <3c220db00605021853w75261c27t33f4021296287205@mail.gmail.com>

Hello -
  I've been working on a hobby compiler for a couple weeks now and I have a
general Antlr/compiler question.

I was wondering what the best approach to linking errors found during tree
walking (generated from code in actions) to lines and columns in the source
file?

Thanks -
Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060502/9830a91b/attachment.html
From open.zone at virgin.net  Wed May  3 01:00:26 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May  3 00:43:00 2006
Subject: [antlr-interest] ANTLR v3 FAQ started on wiki
In-Reply-To: <4A24D300-EBBC-45BD-92F2-05C645122643@cs.usfca.edu>
Message-ID: <005701c66e87$a459d9b0$6702a8c0@hercules>

> > I have some of this on my MacBook now and as soon as I find a VPN
> > client that works on Intel MAC I will transfer to the wiki ;-)
> 
> Great! let's start a faq.  I just read
> 
> http://confluence.atlassian.com/pages/viewpage.action?pageId=151114
> 
> and it looks like we want this approach (2nd paragraph): "Another 
> simple approach is to use subpages where each entry becomes  
> its own page. Typically such an FAQ will have a main page, a series  
> of topic pages which break the FAQ into sections, and then the  
> individual entries. Adding a new entry now just involves adding a new  
> page to the correct topic page. Each topic page will list its  
> children so they will be automatically updated. This solution scales  
> more naturally than the first approach and allows comments to be  
> added to an individual entry. The one downside is that each entry can  
> only live within one topic which is not a restriction of the first  
> approach.
....
> Ok, i started it:
> 
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ

The multipage approaches have the disadvantage that it will not be possible
to print the entire FAQ easily (e.g. as a PDF for offline use).

I think printing support is important.


Cheers,

Micheal

From jimi at temporal-wave.com  Wed May  3 01:22:43 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed May  3 01:22:50 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into accountin
	automatically generated lexer java code...
References: <23623699.1146572643439.JavaMail.www@wwinf1620><B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com><41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com><9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu><41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
	<C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.temporal-wave.com>

Just to clarify Ter's post here, @parser::header will work as well as @lexer::grammar, but there are 3 situations:
 
lexer grammar
parser grammar
combined lexer/parser grammar
 
Hence in a combined grammar you need to be explicit about where you want this header stuff to go. In a lexer or parser grammar you do not need to be. If you do not explicitly say so in a combined grammar, then the header stuff will go to the parser. I suppose there is an argument that if not explicit in a combined grammar then the information should go in both, but I suspect that once we have some docs this will make a lot more sense. The grammar syntax in ANTLR3 is a lot more orthogonal than it has ever been before and the whole process is very much more 'obvious' once you get going.
 
Jim 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Terence Parr
Sent: Tue 5/2/2006 10:45 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Antlr v3.0ea8 : @header not taken into accountin automatically generated lexer java code...




On May 2, 2006, at 1:09 PM, Prashant Deva wrote:

> No, what i meant was this-
> According to the parent post, it seems if we want to declare a 
> header for a parser, we just use-
> @header{}
>
> But to declare a header for lexer, we gotta use-
> @lexer::header{}

That is *only* if you are combining lexer and parser :)

> That is where it doesnt feel uniform.

@header{} is used if it's in the lexer by itself I believe.

> Dont you think it would be better if we used -
> @parser::header{}
> &
> @lexer::header{}
> for both the lexer & the parser.

I believe parser::header works; just implied.

> That way it would seem more uniform :)

Yep
Ter


From jimi at temporal-wave.com  Wed May  3 01:23:19 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed May  3 01:24:48 2006
Subject: [antlr-interest] ANTLR v3 FAQ started on wiki
References: <005701c66e87$a459d9b0$6702a8c0@hercules>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5C4@wavemachine.temporal-wave.com>

I agree with you on this Michael. However, perhaps some judicious cutting and pasting can gives us two views of the same thing. I also believe that there are ways to embed pages within other pages and this might give us both options.
 
Jim

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Micheal J
Sent: Wed 5/3/2006 10:00 AM
To: 'ANTLR Interest'
Subject: RE: [antlr-interest] ANTLR v3 FAQ started on wiki


>
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ

The multipage approaches have the disadvantage that it will not be possible
to print the entire FAQ easily (e.g. as a PDF for offline use).

I think printing support is important.


Cheers,

Micheal



From ewbank at gmail.com  Wed May  3 02:26:17 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed May  3 02:26:22 2006
Subject: [antlr-interest] tree walking errors to line/col
In-Reply-To: <3c220db00605021853w75261c27t33f4021296287205@mail.gmail.com>
References: <3c220db00605021853w75261c27t33f4021296287205@mail.gmail.com>
Message-ID: <dd3a065f0605030226j72986ce4o39addecfaeef4324@mail.gmail.com>

I'm not sure about "best"... What we've done is to capture file/line
as we tokenize the input, then keep that info on the nodes generated
from the tokens.  For generated nodes, we just chase the
"getFirstChild" - by construction, we guarantee that there's a token
with file/line somewhere down there.

On 5/2/06, David Parfitt <diparfitt@gmail.com> wrote:
> Hello -
>   I've been working on a hobby compiler for a couple weeks now and I have a
> general Antlr/compiler question.
>
> I was wondering what the best approach to linking errors found during tree
> walking (generated from code in actions) to lines and columns in the source
> file?
>
> Thanks -
> Dave
>
>
>
From luis.gervaso at gmail.com  Wed May  3 04:47:28 2006
From: luis.gervaso at gmail.com (Luis Gervaso)
Date: Wed May  3 04:47:33 2006
Subject: [antlr-interest] Parse expression
Message-ID: <e91c73110605030447q4f11441al841874fdc350f80f@mail.gmail.com>

Hello,

I hava a hasmap like this

5001 - 1.5
5002 - 2.5
...
600 - 3.5

and if user types

"500?" antlr evaluate 5001 + 5002 = 4

my treeparser is

{import java.util.Map;}
class CalcTreeWalker extends TreeParser;

expr [Map balance] returns [double r] { double a, b; r = 0; }
        : #(PLUS a=expr[balance] b=expr[balance] ) {r=a+b;}
        | #(MINUS a=expr[balance] b=expr[balance] ) {r=a-b;}
        | #(STAR a=expr[balance] b=expr[balance] ) {r=a*b;}
        | #(SLASH a=expr[balance] b=expr[balance] ) {r=a/b;}
        | i:NUM {r=(Double) balance.get(i.getText());}
        ;

I need exploit regular expression in order to evaluate

regards


--
-------------------------------------------
Luis Alberto Gervaso Martin
J2EE Architect & Instructor
C/ San Sebastian 1, 2?B
Getafe (Madrid)
SPAIN
mobile: (+34) 627983344
luis.gervaso@gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060503/15ae3c10/attachment.html
From mail at martin-probst.com  Wed May  3 05:20:20 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May  3 05:20:25 2006
Subject: [antlr-interest] Parse expression
In-Reply-To: <e91c73110605030447q4f11441al841874fdc350f80f@mail.gmail.com>
References: <e91c73110605030447q4f11441al841874fdc350f80f@mail.gmail.com>
Message-ID: <F044207C-9255-4C18-91D7-0CB01BCBC950@martin-probst.com>

Hi,

> I need exploit regular expression in order to evaluate

That's certainly possible.

Regards,
Martin
From parrt at cs.usfca.edu  Wed May  3 08:42:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May  3 08:42:12 2006
Subject: [antlr-interest] ANTLR v3 FAQ started on wiki
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5C4@wavemachine.temporal-wave.com>
References: <005701c66e87$a459d9b0$6702a8c0@hercules>
	<B36CCC332A32904F8FA3DE134A23533608A5C4@wavemachine.temporal-wave.com>
Message-ID: <1A19CD6A-046D-4C8A-8DF2-30BAD8418AD8@cs.usfca.edu>


On May 3, 2006, at 1:23 AM, Jim Idle wrote:

> I agree with you on this Michael. However, perhaps some judicious  
> cutting and pasting can gives us two views of the same thing. I  
> also believe that there are ways to embed pages within other pages  
> and this might give us both options.

I like electronic organization :)  I'm sure as coders we can find a  
way to print in one go...i might call that the book ;)

Ter

From aheller at gmx.at  Wed May  3 10:56:22 2006
From: aheller at gmx.at (Arnulf Heller)
Date: Wed May  3 10:56:35 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into
	accountin automatically generated lexer java code...
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.tempora
	l-wave.com>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
	<9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
	<41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
	<C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.temporal-wave.com>
Message-ID: <7.0.1.0.0.20060503194407.01ec4d68@gmx.at>

I would settle for a different approach: use one header section and 
include that stuff in the lexer *and* in the parser. Keeps things 
simple and I suppose that everyone can live with the slight 
performance penalty.

What does one want to include? Helper classes? Glue logic? One might 
want to include that in the parser and the lexer anyway.

That brings me to another point: usage of precompiled headers (for 
the C++ target). In v2, I used a small trick to get my precompiled 
headers working:

header "pre_include_hpp" {
         #ifndef PRECOMPILEDHEADERS
}

header "post_include_hpp" {
         #endif // PRECOMPILEDHEADERS
         #include "BaseParserTokenTypes.hpp"
}

header "pre_include_cpp" {
         #include "StdAfx.h"
         #ifndef PRECOMPILEDHEADERS
}

header "post_include_cpp" {
         #endif // PRECOMPILEDHEADERS
         #include "BaseParser.hpp"
}

Rather cumbersome, but it worked.

An option would be fine here ...

Arnulf

At 10:22 03.05.2006, you wrote:
>Just to clarify Ter's post here, @parser::header will work as well 
>as @lexer::grammar, but there are 3 situations:
>
>lexer grammar
>parser grammar
>combined lexer/parser grammar
>
>Hence in a combined grammar you need to be explicit about where you 
>want this header stuff to go. In a lexer or parser grammar you do 
>not need to be. If you do not explicitly say so in a combined 
>grammar, then the header stuff will go to the parser. I suppose 
>there is an argument that if not explicit in a combined grammar then 
>the information should go in both, but I suspect that once we have 
>some docs this will make a lot more sense. The grammar syntax in 
>ANTLR3 is a lot more orthogonal than it has ever been before and the 
>whole process is very much more 'obvious' once you get going.
>
>Jim
>
>________________________________
>
>From: antlr-interest-bounces@antlr.org on behalf of Terence Parr
>Sent: Tue 5/2/2006 10:45 PM
>To: ANTLR Interest
>Subject: Re: [antlr-interest] Antlr v3.0ea8 : @header not taken into 
>accountin automatically generated lexer java code...
>
>
>
>
>On May 2, 2006, at 1:09 PM, Prashant Deva wrote:
>
> > No, what i meant was this-
> > According to the parent post, it seems if we want to declare a
> > header for a parser, we just use-
> > @header{}
> >
> > But to declare a header for lexer, we gotta use-
> > @lexer::header{}
>
>That is *only* if you are combining lexer and parser :)
>
> > That is where it doesnt feel uniform.
>
>@header{} is used if it's in the lexer by itself I believe.
>
> > Dont you think it would be better if we used -
> > @parser::header{}
> > &
> > @lexer::header{}
> > for both the lexer & the parser.
>
>I believe parser::header works; just implied.
>
> > That way it would seem more uniform :)
>
>Yep
>Ter

From parrt at cs.usfca.edu  Wed May  3 11:53:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May  3 11:53:41 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into accountin
	automatically generated lexer java code...
In-Reply-To: <7.0.1.0.0.20060503194407.01ec4d68@gmx.at>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
	<9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
	<41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
	<C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.temporal-wave.com>
	<7.0.1.0.0.20060503194407.01ec4d68@gmx.at>
Message-ID: <5FC5F5C4-A3BD-49C5-B595-D3CBF09B751A@cs.usfca.edu>


On May 3, 2006, at 10:56 AM, Arnulf Heller wrote:

> I would settle for a different approach: use one header section and  
> include that stuff in the lexer *and* in the parser. Keeps things  
> simple and I suppose that everyone can live with the slight  
> performance penalty.

It turns out this doesn't work...sometimes you have mutually  
exclusive needs...i started as you indicated and had to invent new way.

> That brings me to another point: usage of precompiled headers (for  
> the C++ target). In v2, I used a small trick to get my precompiled  
> headers working:
>
> header "pre_include_hpp" {
>         #ifndef PRECOMPILEDHEADERS
> }
>
> header "post_include_hpp" {
>         #endif // PRECOMPILEDHEADERS
>         #include "BaseParserTokenTypes.hpp"
> }
>
> header "pre_include_cpp" {
>         #include "StdAfx.h"
>         #ifndef PRECOMPILEDHEADERS
> }
>
> header "post_include_cpp" {
>         #endif // PRECOMPILEDHEADERS
>         #include "BaseParser.hpp"
> }
>
> Rather cumbersome, but it worked.
>
> An option would be fine here ...

I will let the C, C++ folks answer here.

Ter
From r.paterson at ioof.com.au  Wed May  3 15:33:30 2006
From: r.paterson at ioof.com.au (PATERSON, Robert)
Date: Wed May  3 15:33:34 2006
Subject: [antlr-interest] Antlr v3.0ea8 : Rule return types?
Message-ID: <FB120A6865FF7741A38A948247A91F12030C6F5B@MELSSRV007.ioof.com.au>

I've been playing with Antlr/Antlrworks 3.0ea8 - a fantastic
combination, but....

I'm having trouble getting my rules to return values. Have they been
replaced with some feature of the @scope mechanism?

If I try something like:

aRule returns [MyClass anInstance] : SOME TOKEN STUFF ;

I get code that looks like:

public MyClass aRule {
 
  MyClass anInstance;
.
.
.

  return anInstance;

}

Which refuses to compile with a 'anInstance may not have been
initialised' error.


If I try:

aRule returns [MyClass anInstance = null] : SOME TOKEN STUFF ;


I get something like:

public void MyClass = aRule() {
.
.
.
}


(Something like that, I don't have the code here at work).


I'm sure it's something I'm doing wrong, any ideas what it might be?


****************************************************************************
IMPORTANT - PLEASE READ
This communication is intended only for the use of the addressee and 
may contain personal information, confidential information or legally 
privileged information. If personal information is contained in this e-mail, 
then it is governed by the Privacy Act 1988 and must be treated in 
accordance with the Privacy Act 1988 by the recipient. The legal 
privilege and confidentiality attached to this e-mail is not waivered, 
lost or destroyed by reason of mistaken delivery to you. If you are not 
the intended recipient, we would appreciate immediate notification by 
return e-mail or telephoning +61-3-8614-4444 and ask that the message 
be permanently deleted from your system. If you are the intended 
recipient of this communication you should not copy, disclose or distribute this communication without the authority of IOOF or its related entities (the IOOF Group).
Any views expressed in this message are those of the individual sender, 
except where they are specifically stated to be the views of the IOOF 
Group.
This e-mail and any attachments have been scanned for computer viruses 
using anti-viral software, but you should also perform your own scan. We 
do not accept liability for any loss or damage, whether caused by our own negligence or not, that results from a computer virus or a defect in the transmission of the e-mail or any attached file.
****************************************************************************

From frankhileman at yahoo.com  Wed May  3 16:55:24 2006
From: frankhileman at yahoo.com (Frank Hileman)
Date: Wed May  3 16:55:27 2006
Subject: [antlr-interest] Goto instead of exceptions for normal parsing in C#
Message-ID: <20060503235524.36409.qmail@web50709.mail.yahoo.com>

Antlr is wonderful!

Is there a trick to get Antlr to generate code that
uses goto instead of throwing exceptions for normal
parsing (not parse errors), using the C# generator?
The exceptions make it harder to debug.

Also is there any C# generator and non-java binary
builds for antlr 3 that can be downloaded?

Thanks,
Frank Hileman

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Wed May  3 17:11:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May  3 17:11:31 2006
Subject: [antlr-interest] Antlr v3.0ea8 : Rule return types?
In-Reply-To: <FB120A6865FF7741A38A948247A91F12030C6F5B@MELSSRV007.ioof.com.au>
References: <FB120A6865FF7741A38A948247A91F12030C6F5B@MELSSRV007.ioof.com.au>
Message-ID: <3B376389-9363-4E37-B234-4F0850C3725E@cs.usfca.edu>


On May 3, 2006, at 3:33 PM, PATERSON, Robert wrote:

> I've been playing with Antlr/Antlrworks 3.0ea8 - a fantastic
> combination, but....
> aRule returns [MyClass anInstance = null] : SOME TOKEN STUFF ;

I have not yet gotten that working...try

a returns [int x]
@init {x=0;}
	:	...
	;

THanks,
Ter

From Mark.Pollack at codestreet.com  Wed May  3 21:45:31 2006
From: Mark.Pollack at codestreet.com (Mark Pollack)
Date: Wed May  3 21:45:41 2006
Subject: [antlr-interest] Goto instead of exceptions for normal
	parsing in C#
References: <20060503235524.36409.qmail@web50709.mail.yahoo.com>
Message-ID: <422539CFD78B784896418166FDA60D4713A167@MI8NYCMAIL10.Mi8.com>

Hi,
 
I'm also keenly interested in that.  There was a thread a while ago that V3 would improve in this area of C# code generation.  How is that progressing?  Also related is the need we have found (in Spring.NET) to lock at the highest level in order to perform expression evaluation in a multithreaded environment (i.e. ASP.NET) due to the use of static variables in the code.  There were some other reasons leading us in that direction, I'd have to dig up the details.
 
Cheers,
Mark
 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Frank Hileman
Sent: Wed 5/3/2006 7:55 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Goto instead of exceptions for normal parsing in C#



Antlr is wonderful!

Is there a trick to get Antlr to generate code that
uses goto instead of throwing exceptions for normal
parsing (not parse errors), using the C# generator?
The exceptions make it harder to debug.

Also is there any C# generator and non-java binary
builds for antlr 3 that can be downloaded?

Thanks,
Frank Hileman

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around
http://mail.yahoo.com




From open.zone at virgin.net  Wed May  3 23:04:28 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May  3 22:47:01 2006
Subject: [antlr-interest] Goto instead of exceptions for normal parsing in
	C#
In-Reply-To: <20060503235524.36409.qmail@web50709.mail.yahoo.com>
Message-ID: <002201c66f40$9b63b1f0$6502a8c0@hercules>

> Antlr is wonderful!

Can't argue with that.  ;-)

> Is there a trick to get Antlr to generate code that
> uses goto instead of throwing exceptions for normal
> parsing (not parse errors), using the C# generator?
> The exceptions make it harder to debug.

Not unless you plan to develop an alternative V2 runtime lib and codegen.

> Also is there any C# generator and non-java binary
> builds for antlr 3 that can be downloaded?

ANTLR v3 is still in development and codegen infrastructure is still
changing. Most codegen would be necessarily very similar until the basic
interfaces settle I think.

We hope to include something with the next EA. Current C# code hasn't been
updated for the latest round of commits related to changes for tree
building/debugging etc iirc.


Micheal

From mail at martin-probst.com  Wed May  3 23:31:22 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May  3 23:31:28 2006
Subject: [antlr-interest] Goto instead of exceptions for normal parsing in
	C#
In-Reply-To: <422539CFD78B784896418166FDA60D4713A167@MI8NYCMAIL10.Mi8.com>
References: <20060503235524.36409.qmail@web50709.mail.yahoo.com>
	<422539CFD78B784896418166FDA60D4713A167@MI8NYCMAIL10.Mi8.com>
Message-ID: <8C260404-8BEB-4767-94A0-8859CE0F5FB8@martin-probst.com>

Hi,

do you mean you can't run stuff multi threaded *after* parsing or  
that the generated parser is non-reentrant (e.g. non-threadable)? The  
latter is a well known fact, the first would be new to me.

Martin

Am 04.05.2006 um 06:45 schrieb Mark Pollack:

> Hi,
>
> I'm also keenly interested in that.  There was a thread a while ago  
> that V3 would improve in this area of C# code generation.  How is  
> that progressing?  Also related is the need we have found (in  
> Spring.NET) to lock at the highest level in order to perform  
> expression evaluation in a multithreaded environment (i.e. ASP.NET)  
> due to the use of static variables in the code.  There were some  
> other reasons leading us in that direction, I'd have to dig up the  
> details.
>
> Cheers,
> Mark
>
>
> ________________________________
>
> From: antlr-interest-bounces@antlr.org on behalf of Frank Hileman
> Sent: Wed 5/3/2006 7:55 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Goto instead of exceptions for normal  
> parsing in C#
>
>
>
> Antlr is wonderful!
>
> Is there a trick to get Antlr to generate code that
> uses goto instead of throwing exceptions for normal
> parsing (not parse errors), using the C# generator?
> The exceptions make it harder to debug.
>
> Also is there any C# generator and non-java binary
> builds for antlr 3 that can be downloaded?
>
> Thanks,
> Frank Hileman
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
>
>
>
>
>

From jimi at temporal-wave.com  Thu May  4 00:51:39 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu May  4 00:51:43 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into
	accountinautomatically generated lexer java code...
References: <23623699.1146572643439.JavaMail.www@wwinf1620><B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com><41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com><9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu><41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com><C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.temporal-wave.com><7.0.1.0.0.20060503194407.01ec4d68@gmx.at>
	<5FC5F5C4-A3BD-49C5-B595-D3CBF09B751A@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5C5@wavemachine.temporal-wave.com>

 
> > header "post_include_cpp" {
> >         #endif // PRECOMPILEDHEADERS
> >         #include "BaseParser.hpp"
> > }
> >
> > Rather cumbersome, but it worked.
> >
> > An option would be fine here ...

> I will let the C, C++ folks answer here.

The original question wwas more C++ oriented and seesm to require positional includes other than just at the top of the translation unit. Fortunately, ANTLR3 has mechanisms in the codegen whereby a particular target can allow sections that are peculiar to itself. I starterd to play with this a bit, but it did not work immediately and I did not have time to find out if that was my fault or a buglette in the codegen interface - eithe rway it is a simple debugging matter I think.
 
Hence, while C++ may well have different requirements to C, it is just a matter of defining some additional sections that make sense such as @postinclude or something similar. With C, I would wish to discourage the use of include files that carry code, in favor of solving any issues that people find this to be the only solution for, in a more elegant fashion. The C output, and I suspect that the other codegen authors have the same objective is meant to be as readable as it can be and it tries to produce code that you might actually type in - hopefully people don't generally put C functions in .h files ... (ha! Sometimes I even amuse myself ;-)).
 
Suffice it to say then, that I believe the solution to be much more elegant with ANTLR3, but the specific answer lies with the C++ codegen guy, which I believe is still Ric?
 
Jim
From chinoke at gmail.com  Thu May  4 08:30:32 2006
From: chinoke at gmail.com (Dead Wolf)
Date: Thu May  4 08:30:40 2006
Subject: [antlr-interest] some help in java.tree.g
Message-ID: <d6bf58b00605040830q263b35f4n4857b3a03462e4ee@mail.gmail.com>

 well i'm a computer science student and i'm working on my senior project
which convert a simple java source code into rmi. i'm using the ANTLR in
order to parse the java code and transfer it into xml file. i got the files
"java15.g and java15.tree.g" from the ANTLR website(*michaelstudman.com -
Java 5 (aka 1.5) grammar*). the java15.g gives me a complete AST but when
i'm trying to use java15.tree.g in order to transfer the AST into xml file;
i'm getting an empty SLIST whenever there is a "SUPER_CTOR_CALL" in the
constructor. i notice that the structure of java15.g is different (updated)
than java15.tree.g

my question is how can i generate a new java15.tree.g from java15.g if
java15.tree.g is correpted to solve the "SUPER_CTOR_CALL" problem
or if there is any other solutions.

Thx for you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060504/7378795f/attachment.html
From dcaton at shorelinesoftware.com  Thu May  4 08:59:51 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Thu May  4 09:00:16 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken
	intoaccountinautomatically generated lexer java code...
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5C5@wavemachine.temporal-wave.com>
Message-ID: <007001c66f93$c79e6500$030fa8c0@ssdev1>

Jim:

> I would wish to discourage the use of include files that 
> carry code, in favor of solving any issues that people find 
> this to be the only solution for, in a more elegant fashion. 

In general I agree, but the problem is mixed-language programming.

I put any non-trivial code in a header file that's included in the lexer or
parser's generated code.  This allows me to edit the C++ code in the normal
code editor (I use Visual Studio) and retain all the benefits of syntax
highlighting, Intellisense, and all the other stuff you get in a
language-aware code editor.

When I load a .g file into Visual Studio, it has no idea what the syntax is
and I'm basically editing a plain text file, with no assistance from the
editor.

The solution is a language add-in for Visual Studio that understands .g
files, but it would also have to understand any other language that was used
to create actions (e.g. C++, C#, etc.).  While possible, writing a VS
language package is not a trivial task, and even more so when you have to
parse a complex language like C++ that's embedded within the Antlr syntax.

Until (or even if) some other editing mechanism is available, the need to
put C functions in .h files is (IMO) a necessary evil when writing any sort
of non-trivial parsers with Antlr.

Don


From open.zone at virgin.net  Thu May  4 11:31:50 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu May  4 11:14:32 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken
	intoaccountinautomatically generated lexer java code...
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5C5@wavemachine.temporal-wave.com>
Message-ID: <003f01c66fa9$03a4b580$6502a8c0@hercules>

> The C output, and I suspect that the other codegen authors 
> have the same objective is meant to be as readable as it can 
> be and it tries to produce code that you might actually type 
> in 

Excepting the DFA bits of course  ;-)

Micheal

From jimi at temporal-wave.com  Thu May  4 23:40:50 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu May  4 23:40:54 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not
	takenintoaccountinautomatically generated lexer java code...
References: <007001c66f93$c79e6500$030fa8c0@ssdev1>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5C8@wavemachine.temporal-wave.com>

 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Don Caton
Sent: Thu 5/4/2006 5:59 PM
To: 'ANTLR Interest'
Subject: RE: [antlr-interest] Antlr v3.0ea8 : @header not takenintoaccountinautomatically generated lexer java code...



Jim:

> I would wish to discourage the use of include files that
> carry code, in favor of solving any issues that people find
> this to be the only solution for, in a more elegant fashion.

> In general I agree, but the problem is mixed-language programming.

> I put any non-trivial code in a header file that's included in the lexer or
> parser's generated code.  This allows me to edit the C++ code in the normal
> code editor (I use Visual Studio) and retain all the benefits of syntax
> highlighting, Intellisense, and all the other stuff you get in a
> language-aware code editor.


Understood in an ANTLR2 context - however, at least for C actions, I intend to produce the Visual Studio 2005 plug-in that is able to deal with this. ANTLR3 makes it pretty easy to switch between embedded languages. 

However, the C generator is such that you will be able to deal with code that is not action code in a 'more elegant fashion' ;-). The grammar will produce a .h file that you can include in other C files and reference the parser/lexer elements. Hence you will get teh intellisense etc in the natural fashion, and compile and link the individual source files.

I deliberately constructed the header and typedefs and so on such that Visual Studio, and I presume other IDEs, are able to pick up all the intellisense information correctly (no macros with code that hides such information for instance), and when you wish to do things like install your own error handler, you do this by intializing the parser/lexer and then install ing a pointer to your own function that matches the declared function spec. There are no non-static globals and therefore you should find, in C, that there is no need to include other C functions in the generated translation unit. My intent is that as people come to use this, I will attempt to accomodate any particular/peculiar requirements in a similar fashion.

I hasten to add that this has not been written with Windows only in mind though. It will be available for UNIX and OpenVMS from the start. 

Later, I may look at adding other languages in to the VS2005 add-in, or perhaps the other codegen authors would be able to. Still a little way out from here though. I need to finish off the tree parser support next week and then hopefully the C codegen will be ready for Ter's next EA release.

Jim

From jimi at temporal-wave.com  Thu May  4 23:41:07 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu May  4 23:44:26 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not
	takenintoaccountinautomatically generated lexer java code...
References: <003f01c66fa9$03a4b580$6502a8c0@hercules>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5C9@wavemachine.temporal-wave.com>

 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Micheal J




> > The C output, and I suspect that the other codegen authors
> > have the same objective is meant to be as readable as it can
> > be and it tries to produce code that you might actually type
> > in

> Excepting the DFA bits of course  ;-)

> Micheal

Well, to the point that if you were in the habit of constructing complex DFA's in your head then typing them in C, then you would probably type them in C in the same way that they are generated ;-) But if we were able to construct such things in our head in a trivial fashion then we wouldn't need ANTLR per se ;-)

Jim

From ric.klaren at gmail.com  Fri May  5 01:08:12 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri May  5 01:08:15 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header not taken into accountin
	automatically generated lexer java code...
In-Reply-To: <7.0.1.0.0.20060503194407.01ec4d68@gmx.at>
References: <23623699.1146572643439.JavaMail.www@wwinf1620>
	<B36CCC332A32904F8FA3DE134A23533608A5BE@wavemachine.temporal-wave.com>
	<41fed8f80605021257h5cf04fd9y828e09676c128c77@mail.gmail.com>
	<9F1AC2AC-F4B6-4C81-83C5-D417F73D9DF8@cs.usfca.edu>
	<41fed8f80605021309s5a378452g8d50260f280c6423@mail.gmail.com>
	<C5478C6E-3CFE-4146-99B9-50162C2957AC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A5C3@wavemachine.temporal-wave.com>
	<7.0.1.0.0.20060503194407.01ec4d68@gmx.at>
Message-ID: <bc607a4e0605050108i6a0ea65er9aa5b982d1b86100@mail.gmail.com>

Hi,

On 5/3/06, Arnulf Heller <aheller@gmx.at> wrote:
> I would settle for a different approach: use one header section and
> include that stuff in the lexer *and* in the parser. Keeps things
> simple and I suppose that everyone can live with the slight
> performance penalty.

Not really a fan of the idea. As soon as the syntax is well documented
it should not be a problem. Going from more to less seems to me a
wrong approach.

> That brings me to another point: usage of precompiled headers (for
> the C++ target). In v2, I used a small trick to get my precompiled
> headers working:
>
> header "pre_include_hpp" {
>          #ifndef PRECOMPILEDHEADERS
> }
>
> header "post_include_hpp" {
>          #endif // PRECOMPILEDHEADERS
>          #include "BaseParserTokenTypes.hpp"
> }
>
> header "pre_include_cpp" {
>          #include "StdAfx.h"
>          #ifndef PRECOMPILEDHEADERS
> }
>
> header "post_include_cpp" {
>          #endif // PRECOMPILEDHEADERS
>          #include "BaseParser.hpp"
> }
>
> Rather cumbersome, but it worked.

With V3 it should not be a problem to override a few template parts to
do this automagically. For V2 I probably won't bother myself unless I
receive a patch for it, although I dislike building compiler specifics
into the tool.

Cheers,

Ric
From eds_2 at yahoo.com  Fri May  5 09:32:31 2006
From: eds_2 at yahoo.com (Eric Scharff)
Date: Fri May  5 09:32:33 2006
Subject: [antlr-interest] Basic AST tree generation
Message-ID: <20060505163231.76988.qmail@web32501.mail.mud.yahoo.com>

I have a grammar with rules like

expr_list : expr ( COMMA! expr )* ;
expr : term ( operator term ) * ;
operator : OP1 | OP2 | OP3 ;
term : identifier ( postfix_operator )? ;
identifier : IDENT ;
postfix_operator :
	( (DOT^ identifier) | LPAREN^ expr_list RPAREN ) (
postfix_operator )? ;

and I would like to use Antlr's automatic tree generation.

If I re-factor the grammar as

	expr : term ( (OP1^ | OP2^ | OP3^) term ) * ;

I get what I would expect, a left-associative parse tree, eg.

	a * b / c ==> (/ (* a b) c)

but with the current grammar, I would just get a linear stream
of tokens:

	a * b / c ==> a * b / c

Furthermore, I want the term rule to be left associative

	a.b.c(x).d  ==> (FIELDREF (FUNCAPPLY (FIELDREF (DOT a b) c)
(ARGS x)) d)
	
Again, by default, antlr generates a linear list.

I'd rather not factor operator into expr (because I use operator
in other places, not just expr), and I'm not sure how to get any
meaningful tree construction from the term rule.

I'm sure this is a basic question, but I just can't get my head
around antlr's tree construction system.

-Eric

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From dcaton at shorelinesoftware.com  Fri May  5 09:54:28 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Fri May  5 09:54:59 2006
Subject: [antlr-interest] Antlr v3.0ea8 : @header
	nottakenintoaccountinautomatically generated lexer java code...
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A5C8@wavemachine.temporal-wave.com>
Message-ID: <003f01c67064$9346a980$030fa8c0@ssdev1>

Jim:		

> Understood in an ANTLR2 context - however, at least for C 
> actions, I intend to produce the Visual Studio 2005 plug-in 
> that is able to deal with this. ANTLR3 makes it pretty easy 
> to switch between embedded languages. 

You're not going to be able to do this with a simple plug-in, you're going
to need to write a language service package, and implement among other
things, the IVsContainedLanuage interface.  I've written a language service
for VS, but not one that implements "contained" languages, and it's not a
trivial undertaking.  I'm up to my eyeballs in work and will be for the
forseeable future, or else I'd offer to help.

> However, the C generator is such that you will be able to 
> deal with code that is not action code in a 'more elegant 
> fashion' ;-). The grammar will produce a .h file that you can 
> include in other C files and reference the parser/lexer 
> elements. Hence you will get teh intellisense etc in the 
> natural fashion, and compile and link the individual source files.

Not following you here.  The C++ code generator already generates .hpp files
that can be used to reference parser/lexer elements.  I'm talking about
action code.  In general, I really dislike the way you have to have C++ (or
whatever) language embedded in the .g file.  I'd love to see some sort of
code-behind model that associates .g files with .cpp (or whatever) files,
like the model used for ASP.NET.

> I deliberately constructed the header and typedefs and so on ...

All this sounds good, at least for C users.  I hope the C++ codegen does the
same.  Personally, I don't have any need for C code generation.

Don


From Mark.Pollack at codestreet.com  Fri May  5 11:56:17 2006
From: Mark.Pollack at codestreet.com (Mark Pollack)
Date: Fri May  5 11:56:29 2006
Subject: [antlr-interest] Goto instead of exceptions for normal
	parsing in C#
Message-ID: <422539CFD78B784896418166FDA60D4701CC1241@MI8NYCMAIL10.Mi8.com>

Hi,

I'm attaching a reply from my college Aleks Seovic who is most involved
in using Antlr.  The email was mistakenly send directly to Martin.
Anyway, here is a link to a previous discussion on the mailing list that
raised pretty much the same points.
http://www.antlr.org/pipermail/antlr-interest/2005-November/014300.
html  

- Mark

--- <snip> ---

Hi Martin,

As you guessed, it's the latter -- parser itself is not thread-safe
because of the static instancePool_ field within ASTPair class. It is a
pretty big problem for us, because we use Antlr to parse our expression
language, and expression language is used within Spring.NET in many
places: for property names within core IoC framework, for validation
framework, for data binding framework, etc.

We have a static factory method (Expression.Parse), that receives string
expression as a parameter, creates instance of the lexer and parser, and
parses the expression into an AST tree that we use to evaluate
expression. I thought originally this should be thread-safe, as each
call to Expression.Parse creates new instance of both lexer and parser,
but then I found out that *all* instances of ASTPair share the state
because static field is used. This leads to all kinds of collisions and
threading issues within web applications, when multiple request threads
parse data binding expressions for the page, for example.

Right now I solved the problem on our end, by placing a lock on the
whole Expression.Parse method, effectively serializing all expression
parsing, but this is far from the ideal solution because of its
performance and scalability implications. If you can figure out how to
get rid of the shared state and make at least calls to *different*
instances of the parser thread-safe, it would really help us a lot.

On another topic, it would be nice to change parser generator so it
doesn't use exceptions for flow control. Right now, we are getting a lot
of exceptions during parsing as parser tests each alternative in a
grammar, which both affects performance and displays annoying error
messages within Visual Studio debug window.

Finally, not sure if Mark mentioned it or not, it would be nice if
released Antlr binaries were signed ("strongly named"), because right
now we have to sign them ourselves in order to be able to use them from
our code, which is itself in signed assemblies.

Please let us know if these two issues can be fixed in a forseeable
future, or should we even hope that they will be fixed eventually, so we
know where we stand.

Regards,

	Aleks

 

> -----Original Message-----
> From: Martin Probst [mailto:mail@martin-probst.com] 
> Sent: Thursday, May 04, 2006 2:31 AM
> To: Mark Pollack
> Cc: Frank Hileman; antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Goto instead of exceptions for 
> normal parsing in C#
> 
> Hi,
> 
> do you mean you can't run stuff multi threaded *after* 
> parsing or that the generated parser is non-reentrant (e.g. 
> non-threadable)? The latter is a well known fact, the first 
> would be new to me.
> 
> Martin
> 
> Am 04.05.2006 um 06:45 schrieb Mark Pollack:
> 
> > Hi,
> >
> > I'm also keenly interested in that.  There was a thread a while ago 
> > that V3 would improve in this area of C# code generation.  
> How is that 
> > progressing?  Also related is the need we have found (in
> > Spring.NET) to lock at the highest level in order to perform 
> > expression evaluation in a multithreaded environment (i.e. ASP.NET) 
> > due to the use of static variables in the code.  There were 
> some other 
> > reasons leading us in that direction, I'd have to dig up 
> the details.
> >
> > Cheers,
> > Mark
> >
> >
> > ________________________________
> >
> > From: antlr-interest-bounces@antlr.org on behalf of Frank Hileman
> > Sent: Wed 5/3/2006 7:55 PM
> > To: antlr-interest@antlr.org
> > Subject: [antlr-interest] Goto instead of exceptions for normal 
> > parsing in C#
> >
> >
> >
> > Antlr is wonderful!
> >
> > Is there a trick to get Antlr to generate code that uses 
> goto instead 
> > of throwing exceptions for normal parsing (not parse errors), using 
> > the C# generator?
> > The exceptions make it harder to debug.
> >
> > Also is there any C# generator and non-java binary builds 
> for antlr 3 
> > that can be downloaded?
> >
> > Thanks,
> > Frank Hileman
> >
> > __________________________________________________
> > Do You Yahoo!?
> > Tired of spam?  Yahoo! Mail has the best spam protection around 
> > http://mail.yahoo.com
> >
> >
> >
> >
> >
> 
> 
> 

From open.zone at virgin.net  Fri May  5 15:24:43 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri May  5 15:07:19 2006
Subject: [antlr-interest] Goto instead of exceptions for normalparsing in
	C#
In-Reply-To: <422539CFD78B784896418166FDA60D4701CC1241@MI8NYCMAIL10.Mi8.com>
Message-ID: <000901c67092$b7719c10$6502a8c0@hercules>

Hi Martin,

> As you guessed, it's the latter -- parser itself is not 
> thread-safe because of the static instancePool_ field within 
> ASTPair class.

This relates to version ANTLR v2.7.5. Version 2.7.6 has been out for a long
time now.

> Finally, not sure if Mark mentioned it or not, it would be 
> nice if released Antlr binaries were signed ("strongly 
> named"), because right now we have to sign them ourselves in 
> order to be able to use them from our code, which is itself 
> in signed assemblies.

Runtime assembly would be signed for upcoming ANTLR releases.

> Please let us know if these two issues can be fixed in a 
> forseeable future, or should we even hope that they will be 
> fixed eventually, so we know where we stand.

First issue is already fixed. Second issue just needs wider distribution.


Cheers,

Micheal

From parrt at cs.usfca.edu  Fri May  5 15:34:54 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri May  5 15:35:01 2006
Subject: [antlr-interest] started antlr v3 tree wiki entry
Message-ID: <99C6FE78-D10D-48C6-A5EF-0B5A5EE9A5A6@cs.usfca.edu>

http://www.antlr.org/wiki/pages/viewpage.action?pageId=754

Ter
From Mark.Pollack at codestreet.com  Fri May  5 15:58:20 2006
From: Mark.Pollack at codestreet.com (Mark Pollack)
Date: Fri May  5 15:58:29 2006
Subject: [antlr-interest] Goto instead of exceptions for
	normalparsing in C#
Message-ID: <422539CFD78B784896418166FDA60D4701CC146A@MI8NYCMAIL10.Mi8.com>

Hi,

We will upgrade to 2.7.6, sorry to miss that.  Not to be thick here but
what, if any, are plans for changing the use of exceptions for flow
control in the generated C# code?

Thanks for the quick replies.

Cheers,
Mark


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Micheal J
> Sent: Friday, May 05, 2006 6:25 PM
> To: antlr-interest@antlr.org
> Subject: RE: [antlr-interest] Goto instead of exceptions for 
> normalparsing in C#
> 
> Hi Martin,
> 
> > As you guessed, it's the latter -- parser itself is not thread-safe 
> > because of the static instancePool_ field within ASTPair class.
> 
> This relates to version ANTLR v2.7.5. Version 2.7.6 has been 
> out for a long time now.
> 
> > Finally, not sure if Mark mentioned it or not, it would be nice if 
> > released Antlr binaries were signed ("strongly named"), 
> because right 
> > now we have to sign them ourselves in order to be able to use them 
> > from our code, which is itself in signed assemblies.
> 
> Runtime assembly would be signed for upcoming ANTLR releases.
> 
> > Please let us know if these two issues can be fixed in a forseeable 
> > future, or should we even hope that they will be fixed 
> eventually, so 
> > we know where we stand.
> 
> First issue is already fixed. Second issue just needs wider 
> distribution.
> 
> 
> Cheers,
> 
> Micheal
> 
> 
> 

From ajr at mekkanis.com  Fri May  5 17:44:01 2006
From: ajr at mekkanis.com (Arni J. Reginsson)
Date: Fri May  5 19:08:25 2006
Subject: [antlr-interest] RE: Combination of TokenStreamHiddenTokenFilter
	and TokenStreamSelector
Message-ID: <948735BE031C884B86B98B27AAE810670497D8@mars.mekkanis.local>

Last week I posted this question to the list, but I haven't received a single reply?

 

Do we not have any subscribers to this list that have experience with using the TokenStreamHiddenTokenFilter together with the TokenStreamSelector?

 

I am in a dead-end here and all help will be greatly appreciated

 

Best regards,

Arni

 

________________________________

From: Arni J. Reginsson 
Sent: 27. apr?l 2006 08:08
To: 'antlr-interest@antlr.org'
Subject: Combination of TokenStreamHiddenTokenFilter and TokenStreamSelector

 

Hello,

 

First the context that we are working in: 

        We are using antlr-2.7.6

        The C# version of the library

 

Then the solution we are building using ANTLR:

We have successfully implemented a Microsoft Pascal ==> C# translator that uses multiple lexers and the TokenStreamSelector to translate complicated Pascal programs (that use interfaces and include statements) to C#. We have already translated more than 200K of pascal lines to c#.

 

So far we have not found a sound solution to extend the translator to preserve pascal comments. But we have been extending the translator using the whitepaper "Preserving Whitespace During Translation <http://antlr.org/article/whitespace/index.html>" as a guideline, and here we step into a problem.

 

The problem:

On a change of lexers (forced by our PascalLexer uponEOF()) the TokenStreamHiddenTokenFilter method IToken nextToken() 

skips the last token of the file currently being parsed/lexed and returns as the next token the first token of next $include (pascal interface) statement.

 

The pascal file that we are translating begins with several $include statements liken:

(*$INCLUDE:'MIS_INTF.PAS'*)

(*$INCLUDE:'CIO_INTF.PAS'*)

...

 

The first $include (MIS_INTF.PAS) is lexed/parsed correctly upon the point where it reaches the end of the file:

...

        BEGIN

        END;

 

At this point the parser expects SEMI token as the last token in the stream, but the TokenStreamHiddenTokenFilter nextToken returns the first statement of CIO_INTF.PAS (i.e, the token INTERFACE) instead of SEMI.

 

The code that is giving us problems is (from the PascalParser.cs file):

 

public void interfacePart() //throws RecognitionException, TokenStreamException

{

            

            returnAST = null;

            ASTPair currentAST = new ASTPair();

            OpusAllt.MekkanisAST interfacePart_AST = null;

            

            interfaceHeading();

            astFactory.addASTChild(ref currentAST, (AST)returnAST);

            match(BEGIN);

            match(END);

            match(SEMI);

            interfacePart_AST = (OpusAllt.MekkanisAST)currentAST.root;

            returnAST = interfacePart_AST;

}

 

The match(SEMI) calls ends in (TokenStreamHiddenTokenFilter.cs file):

 

            override public IToken nextToken()

            {

< -- clip -- >

                  IHiddenStreamToken monitored = LA(1);

                  // point to hidden tokens found during last invocation

                  monitored.setHiddenBefore(lastHiddenToken);

                  lastHiddenToken = null;

                  

                  // Look for hidden tokens, hook them into list emanating

                  // from the monitored tokens.

                  consume();

                  IHiddenStreamToken p = monitored;

                  // while hidden or discarded scarf tokens

                  while (hideMask.member(LA(1).Type) || discardMask.member(LA(1).Type))

                  {

                        if (hideMask.member(LA(1).Type))

                        {

                              // attach the hidden token to the monitored in a chain

                              // link forwards

                              p.setHiddenAfter(LA(1));

                              // link backwards

                              if (p != monitored)

                              {

                                    //hidden cannot point to monitored tokens

                                    LA(1).setHiddenBefore(p);

                              }

                              p = (lastHiddenToken = LA(1));

                        }

                        consume();

                  }

                  return monitored;

            }

 

When we reach the point after the < -- clip -- > statement the "monitored" variable and "nextMonitoredToken" contains {[";",<30>,line=51,col=4]} which is correct.

 

BUT after the first "consume ()" (before the while loop) method has been called "nextMonitoredToken" (LA(1)) is still {[";",<30>,line=51,col=4]} (again still correct) but the "monitored" token now contains {["INTERFACE",<31>,line=24,col=1]} (incorrect) which is returned as the next token.

 

I therefore think that the implementation of TokenStreamHiddenTokenFilter nextToken might not been correct with regards to the multilexer implementations like we are using. 

 

The code for uponEOF, which we have been successfully using for a while now is also shown below - in case there is some better way to switch back the lexers after we hit an EOF in an include file:

 

    public override void uponEOF() {

            PascalMain.currentInstance.currentFileName = PascalMain.currentInstance.oldtranslateFileName;

            if ( PascalMain.currentInstance.selector.getCurrentStream() != PascalMain.currentInstance.mainLexer ) {

                  // don't allow EOF until main lexer.  Force the

                  // selector to retry for another token.

                  PascalMain.currentInstance.selector.pop(); // return to old lexer/stream

                  PascalMain.currentInstance.selector.retry();

            }

            else {

                  Console.WriteLine ("Hit EOF of main file");

            }

      }

 

Is this a known problem? Do you have a workaround?

 

Best regards,

Arni Jon Reginsson

www.mekkanis.is

 

 

  

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060506/1f394f48/attachment-0001.html
From open.zone at virgin.net  Fri May  5 22:51:39 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri May  5 22:34:12 2006
Subject: [antlr-interest] Goto instead of exceptions for normalparsing in
	C#
In-Reply-To: <422539CFD78B784896418166FDA60D4701CC146A@MI8NYCMAIL10.Mi8.com>
Message-ID: <001001c670d1$25c79370$6502a8c0@hercules>

Mark,

> We will upgrade to 2.7.6, sorry to miss that.  Not to be 
> thick here but what, if any, are plans for changing the use 
> of exceptions for flow control in the generated C# code?

Firstly, I'd like to turn that around a little. ;-)

I'd like Aleks and/or yourself to pick a snippet of code that uses
exceptions and post an example of what you might change it to so that it
doesn't. 

If there any other lurkers with an interest in this, please feel free to do
the same.

Micheal

From vidar at hawkis.com  Sat May  6 07:11:37 2006
From: vidar at hawkis.com (Vidar =?iso-8859-1?q?H=E5kestad?=)
Date: Sat May  6 07:11:43 2006
Subject: [antlr-interest] Grammar StdCParser not defined
Message-ID: <200605061611.37747.vidar@hawkis.com>

Hi
I'm trying to compile a grammar (actually the GNU C grammars), where Antlr 
2.7.6.b2 complains about not seeing the grammar it extends.

The StdParser is defined as (in StdCParser.g) as:
class StdCParser extends Parser;

The GnuCParser is defined (in GnuCParser.g) as:
class GnuCParser extends StdCParser;

Both grammars (and generated .java/.class files) resides in same folder.

Are there any settings (have read the chapter 'Grammar Inheritance' in the 
manual) that I have overlooked?

reagrds
hawkis
From open.zone at virgin.net  Sat May  6 08:14:14 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat May  6 07:56:46 2006
Subject: [antlr-interest] Grammar StdCParser not defined
In-Reply-To: <200605061611.37747.vidar@hawkis.com>
Message-ID: <002f01c6711f$bd65d450$6502a8c0@hercules>

> Hi
> I'm trying to compile a grammar (actually the GNU C 
> grammars), where Antlr 
> 2.7.6.b2 complains about not seeing the grammar it extends.

2.7.6 beta2?. 2.7.6 has been released for a while now.

In any case, this could just be a command-line issue. Iirc, you have to list
the grammars you extend on the command-line used for runiing the antlr.Tool
as well. There's an option I think.

Micheal

From canfield at zocalo-tech.com  Sat May  6 09:35:09 2006
From: canfield at zocalo-tech.com (Bill Canfield)
Date: Sat May  6 09:37:35 2006
Subject: [antlr-interest] RE: Combination of,
	TokenStreamHiddenTokenFilter	and TokenStreamSelector
In-Reply-To: <20060506020827.B0941DCEA0@www.antlr.org>
References: <20060506020827.B0941DCEA0@www.antlr.org>
Message-ID: <445CD03D.7030101@zocalo-tech.com>

>> The problem:
>> 
>> On a change of lexers (forced by our PascalLexer uponEOF()) the
>> TokenStreamHiddenTokenFilter method IToken nextToken()
>> 
>> skips the last token of the file currently being parsed/lexed and
>> returns as the next token the first token of next $include (pascal
>> interface) statement.

Hi Arni:

I don't use TokenStreamHiddenToken, but it sounds like uponEOF() is
getting called when lookahead LA(1) sees EOF.

Don't know about C#, but in C++, TokenStreamSelector has a couple
defects:  1. there is a memory leak unless you delete pop()ped lexers,
and 2. retry() called by the default uponEOF() throws an exception,
which is a performance loser.

You might try deriving your own TSS subclass which deals with
include/EOF on its own.  I gave a sketch of this at ANTLR 2005:

http://www.antlr.org/workshop/ANTLR2005/presentations/Verilog.ppt

-- 
Bill Canfield
Lead Software Developer
Zocalo Tech, Inc.
http://www.zocalo-tech.com/

From mail at martin-probst.com  Sun May  7 03:21:58 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun May  7 03:22:11 2006
Subject: [antlr-interest] Basic AST tree generation
In-Reply-To: <20060505163231.76988.qmail@web32501.mail.mud.yahoo.com>
References: <20060505163231.76988.qmail@web32501.mail.mud.yahoo.com>
Message-ID: <E4CBC4CC-3BB0-4C20-8306-82BDAD50802F@martin-probst.com>

Hi,

> I'd rather not factor operator into expr (because I use operator
> in other places, not just expr), and I'm not sure how to get any
> meaningful tree construction from the term rule.

Well, if it was my grammar, I'd certainly factor. But if you don't  
like that, you can go with something like this:

expr: term ( o:operator! term { ## = #(#o, ##); })*

## means current tree, the ! tells ANTLR not to add "operator" to the  
tree (because we do it manually), #( head, child1, child2, ... )  
means "construct a new subtree with head "head" and children 1, 2  
etc. - if you pass an AST list to it ("##" here) it will add all the  
elements.

HTH,
Martin
From dieter_frej at gmx.net  Mon May  8 02:30:13 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Mon May  8 02:31:47 2006
Subject: [antlr-interest] started antlr v3 tree wiki entry
In-Reply-To: <99C6FE78-D10D-48C6-A5EF-0B5A5EE9A5A6@cs.usfca.edu>
References: <99C6FE78-D10D-48C6-A5EF-0B5A5EE9A5A6@cs.usfca.edu>
Message-ID: <445F0FA5.50304@gmx.net>

Hi Terence,

is there any way to help building that wiki?

The technical parts are explained pretty good, but some pratical
information are missing...

- Didi



Terence Parr wrote:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=754
> 
> Ter
> 
> 

From sb at sebastian-bergmann.de  Mon May  8 03:59:48 2006
From: sb at sebastian-bergmann.de (Sebastian Bergmann)
Date: Mon May  8 03:59:59 2006
Subject: [antlr-interest] Re: php grammar?
In-Reply-To: <243773d2438db8.2438db8243773d@usfca.edu>
References: <243773d2438db8.2438db8243773d@usfca.edu>
Message-ID: <e3n8b4$mai$1@sea.gmane.org>

Bernardo Elayda wrote:
> I was wondering if anyone had a php grammar

 And I am wondering how the code generation target for PHP [1] is coming
 along.

 --
 [1] http://www.antlr.org/v3/index.html

-- 
Sebastian Bergmann                      http://www.sebastian-bergmann.de/
GnuPG Key: 0xB85B5D69 / 27A7 2B14 09E4 98CD 6277 0E5B 6867 C514 B85B 5D69

From sb at sebastian-bergmann.de  Mon May  8 05:44:15 2006
From: sb at sebastian-bergmann.de (Sebastian Bergmann)
Date: Mon May  8 05:44:41 2006
Subject: [antlr-interest] Re: php grammar?
In-Reply-To: <e3n8b4$mai$1@sea.gmane.org>
References: <243773d2438db8.2438db8243773d@usfca.edu>
	<e3n8b4$mai$1@sea.gmane.org>
Message-ID: <e3neev$mai$4@sea.gmane.org>

Sebastian Bergmann wrote:
> And I am wondering how the code generation target for PHP [1] is coming
> along.

 I added this as an idea for the PHP Project's Google Summer of Code
 participation [1].

 --
 [1] http://www.php.net/ideas.php (will take a while until it updates)

-- 
Sebastian Bergmann                      http://www.sebastian-bergmann.de/
GnuPG Key: 0xB85B5D69 / 27A7 2B14 09E4 98CD 6277 0E5B 6867 C514 B85B 5D69

From parrt at cs.usfca.edu  Mon May  8 08:52:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May  8 08:52:10 2006
Subject: [antlr-interest] started antlr v3 tree wiki entry
In-Reply-To: <445F0FA5.50304@gmx.net>
References: <99C6FE78-D10D-48C6-A5EF-0B5A5EE9A5A6@cs.usfca.edu>
	<445F0FA5.50304@gmx.net>
Message-ID: <DD0E17EA-41CC-4E4E-8336-3016FA1E42BF@cs.usfca.edu>

Sure.  Anyone can register and start hacking away. :)  We have daily  
backups in case of mischief ;)

Ter

From parrt at cs.usfca.edu  Mon May  8 08:53:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May  8 08:53:42 2006
Subject: [antlr-interest] Google's summer of code suggestions
In-Reply-To: <e3neev$mai$4@sea.gmane.org>
References: <243773d2438db8.2438db8243773d@usfca.edu>
	<e3n8b4$mai$1@sea.gmane.org> <e3neev$mai$4@sea.gmane.org>
Message-ID: <08000B09-B8AD-42DF-9FF5-0D7F269AE7E0@cs.usfca.edu>


On May 8, 2006, at 5:44 AM, Sebastian Bergmann wrote:

> Sebastian Bergmann wrote:
>> And I am wondering how the code generation target for PHP [1] is  
>> coming
>> along.
>
>  I added this as an idea for the PHP Project's Google Summer of Code
>  participation [1].

Great idea.  One of our best students here at U of San Francisco  
wants to build it, but he's pretty busy.

Anyway, what other things should we add to the google summer of code?

Ter
From sb at sebastian-bergmann.de  Mon May  8 11:32:10 2006
From: sb at sebastian-bergmann.de (Sebastian Bergmann)
Date: Mon May  8 11:32:33 2006
Subject: [antlr-interest] Re: Google's summer of code suggestions
In-Reply-To: <08000B09-B8AD-42DF-9FF5-0D7F269AE7E0@cs.usfca.edu>
References: <243773d2438db8.2438db8243773d@usfca.edu>	<e3n8b4$mai$1@sea.gmane.org>
	<e3neev$mai$4@sea.gmane.org>
	<08000B09-B8AD-42DF-9FF5-0D7F269AE7E0@cs.usfca.edu>
Message-ID: <e3o2ra$qse$1@sea.gmane.org>

Terence Parr wrote:
> Great idea.  One of our best students here at U of San Francisco wants
> to build it, but he's pretty busy.

 Just keep in mind that the deadline is today.

-- 
Sebastian Bergmann                      http://www.sebastian-bergmann.de/
GnuPG Key: 0xB85B5D69 / 27A7 2B14 09E4 98CD 6277 0E5B 6867 C514 B85B 5D69

From tom_meyer at comcast.net  Mon May  8 15:04:26 2006
From: tom_meyer at comcast.net (tom_meyer@comcast.net)
Date: Mon May  8 15:04:30 2006
Subject: [antlr-interest] (no subject)
Message-ID: <050820062204.25832.445FC069000F0679000064E822070209539D0A970A03A103019B@comcast.net>

Hello,
 
How are custom attributes of a custom lexer token supposed to be set?
 
My token factory is set up to create MyToken objects, with
RefMyToken being a reference to one of these.  MyToken is
derived from other classes which track the usual text, line,
and column information.  In some cases I want to set an
additional attribute on the token.  
 
How is this supposed to be done?  I have followed the
information on how to create my own extended token class,
but don't know of any information on how to use it and set
fields from the lexer.
 
Below is an example of how I tried to set 'my_attribute'.  I
get a crash when I hack the code this way because _token is
NULL.  I see the methods like $setText(x) and $setToken(x).
I don't want to use $setToken(x) because the token gets
constructed fine, I just want to set an additional
attribute on the token.
 
 
      PLUS  : "+"
               {
                  RefMyToken my_token = RefMyToken( _token );
 
                  my_token->my_attribute = 99;
               }
            ;
 
Thanks,
-Tom
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060508/a1dabc1c/attachment.html
From tom_meyer at comcast.net  Mon May  8 21:28:40 2006
From: tom_meyer at comcast.net (tom_meyer@comcast.net)
Date: Mon May  8 21:28:46 2006
Subject: [antlr-interest] How to set custom token attributes
Message-ID: <050920060428.5217.44601A78000522770000146122007623029D0A970A03A103019B@comcast.net>

Hello,

How are custom attributes of a custom lexer token supposed to be set?

My token factory is set up to create MyToken objects, with
RefMyToken being a reference to one of these.  MyToken is
derived from other classes which track the usual text, line,
and column information.  In some cases I want to set an
additional attribute on the token.  
 
How is this supposed to be done?  I have followed the
information on how to create my own extended token class,
but don't know of any information on how to use it and set
fields from the lexer.
 
Below is an example of how I tried to set 'my_attribute'.  I
get a crash when I hack the code this way because _token is
NULL.  I see the methods like $setText(x) and $setToken(x).
I don't want to use $setToken(x) because the token gets
constructed fine, I just want to set an additional
attribute on the token.
 
 
      PLUS  : "+"
               {
                  RefMyToken my_token = RefMyToken( _token );
 
                  my_token->my_attribute = 99;
               }
            ;
 
Thanks,
-Tom
From mail at martin-probst.com  Tue May  9 00:28:55 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue May  9 00:29:01 2006
Subject: [antlr-interest] (no subject)
In-Reply-To: <050820062204.25832.445FC069000F0679000064E822070209539D0A970A03A103019B@comcast.net>
References: <050820062204.25832.445FC069000F0679000064E822070209539D0A970A03A103019B@comcast.net>
Message-ID: <E045E55C-BAA7-405A-9C01-EEF7D6E3EDC5@martin-probst.com>

Sorry, but are you aware that your email program is sending emails as  
invalid HTML (which is bad), referencing a stylesheet  
("MsoPlainText") that is probably only available to your email  
client, and setting the font to Courier New Size 2 (!!!)? If you  
don't want your emails to be read, that's certainly the way to go ...

Martin
From dtliu at essware.com  Tue May  9 02:25:34 2006
From: dtliu at essware.com (Liu Detang)
Date: Tue May  9 02:25:46 2006
Subject: [antlr-interest] RFC syntax extractor/convertor
Message-ID: <4460600E.9080804@essware.com>

Hi

Is there any RFC syntax extractor (convertor to ANTLR grammar)?

Thanks,
Detang

From mranga at nist.gov  Tue May  9 02:40:01 2006
From: mranga at nist.gov (M. Rangnathan)
Date: Tue May  9 02:40:13 2006
Subject: [antlr-interest] RFC syntax extractor/convertor
In-Reply-To: <4460600E.9080804@essware.com>
References: <4460600E.9080804@essware.com>
Message-ID: <44606371.6090609@nist.gov>

I realise I am posting to a group of antlr fans so excuse me for posting 
a frank *opinion*.

I have found direct hand parsing of RFC syntax to be the best 
alternative. Antlr generates a huge amount of  inefficient code for this 
purpose. For example, I tried to convert the sip grammar into an antlr 
parser. The syntax of antr rules make it appear to be straightforward 
but one quickly runs into trouble. By the time I got done, there were so 
many "semantic" lookaheads ( read "hacks" ) necessary for the purpose 
that I finally gave up the approach (after having actually succeeded in 
building the parser) and wrote a hand parser for the whole thing. It ran 
a lot faster and was a lot smaller.

Lesson learned: RFC syntax is generally not amenable to automatic parser 
generation because it does not conform to normal LALR or LL1 constraints 
(tends to be rather free form). It winds up being context sensitive, 
ncessitating the use of semantic lookahead and other tricks. A real 
mess. On the other hand, it was not too hard to write a hand parser. I 
actually looked at the code outputted by antlr and used it as a guide.

Regards,

Ranga

Liu Detang wrote:

> Hi
>
> Is there any RFC syntax extractor (convertor to ANTLR grammar)?
>
> Thanks,
> Detang
>
>
>


-- 
M. Ranganathan 

Advanced Networking Technologies Division,
National Institute of Standards and Technology (NIST),
100 Bureau Drive, Stop 8920, Gaithersburg, MD 20899. 
tel:301 975 3664 , fax:301 590 0932 http://w3.antd.nist.gov/
Advanced Networking Technologies For the People!  


From jimi at temporal-wave.com  Tue May  9 10:43:17 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue May  9 10:45:50 2006
Subject: [antlr-interest] Antlr v3.0ea8 :
	@headernottakenintoaccountinautomatically generated lexer java code...
References: <003f01c67064$9346a980$030fa8c0@ssdev1>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5D6@wavemachine.temporal-wave.com>

 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Don Caton
Sent: Fri 5/5/2006 6:54 PM
To: 'ANTLR Interest'
Subject: RE: [antlr-interest] Antlr v3.0ea8 : @headernottakenintoaccountinautomatically generated lexer java code...



Jim:           

> Understood in an ANTLR2 context - however, at least for C
> actions, I intend to produce the Visual Studio 2005 plug-in
> that is able to deal with this. ANTLR3 makes it pretty easy
> to switch between embedded languages.

You're not going to be able to do this with a simple plug-in, you're going
to need to write a language service package, and implement among other
things, the IVsContainedLanuage interface.  I've written a language service
for VS, but not one that implements "contained" languages, and it's not a
trivial undertaking.  I'm up to my eyeballs in work and will be for the
forseeable future, or else I'd offer to help.

Yes - I understand this. Plug-in was just the obvious word choice, but it means something specific of course. 

> natural fashion, and compile and link the individual source files.

Not following you here.  The C++ code generator already generates .hpp files
that can be used to reference parser/lexer elements.  I'm talking about
action code.  In general, I really dislike the way you have to have C++ (or
whatever) language embedded in the .g file.  I'd love to see some sort of
code-behind model that associates .g files with .cpp (or whatever) files,
like the model used for ASP.NET.


For that, you can use the string template output model. Then you can switch templates, but you still don't necessarilly have the intellisense stuff available of course :-(

Jim

From parrt at cs.usfca.edu  Tue May  9 13:28:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  9 13:28:15 2006
Subject: [antlr-interest] executing actions during backtrack
Message-ID: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>

Howdy,

We need to discuss v3's behavior for executing actions during  
backtracking (guessing).  ANTLR must parse ahead to see if something  
matches.  If it fails, then ANTLR tries the next viable alt.  Upon  
failure, it's pretty hard to undo actions in general so ANTLR gates  
actions out with something like this:

if ( backtracking==0 ) {
      SymbolTable.getPredefinedType("void"), symtab.getDefaultPkg());
}

Labels are still defined, because semantic preds might need them:

                             packageDefinition1=packageDefinition();

AST actions are off during backtracking:

                             if ( backtracking==0 )  
list_packageDefinition.add(packageDefinition1.tree);

Upon success, antlr still rewinds the input and then does the same  
parse again "with feeling". ;)

Clearly you don't want actions executed when that alt ultimately  
doesn't succeed.  Similarly, when the alt does succeed, you do not  
want actions executed twice.  This all makes sense.

The problem arises when you want actions to execute *during*  
backtracking so that semantic predicates make sense during  
backtracking.  If you are combining backtracking (syntactic  
predicates) and semantic predicates for tough languages like C++ then  
you must execute actions during the backtrack but then avoid them  
during the parse.

In v2, a quirk of implementation became a feature: init actions for  
rules, subrules were not gated out:

( {always do this} foo | bar )

This was "wrong" in the sense that it executed the action twice.

Anybody have a suggestion?  We have named actions now, perhaps  
instead of @init{...} or plain {...} we do @guessing{...} or something?

Ter
From Cyang at infobal.com  Tue May  9 13:50:18 2006
From: Cyang at infobal.com (Charlie Yang)
Date: Tue May  9 13:45:29 2006
Subject: [antlr-interest] how to concatenate string nodes into one node when
	create AST?
Message-ID: <96AD91D781CCD511A66000B0D0D15C490345FD90@mail.infobal.com>

Hi:

I'm doing kind of SQL parser, want to control the Construction of AST.


if I do like below in the grammar, 
.....
argument ! :
      	an:argument_name  at:argument_type
	{ #argument = #([FUNCTION_ARGU, "argu"], #an, #at  ); }
.....

the output AST sub tree would be:
	("argu",        argument_name, argument_type ).   "argu" is root,
and two others are children.
      

How can I combine string type child nodes into single one child node like
that ?:
	("argu",          argument_name + argument_type ) 
         or    ("argu",        argument_name + SPACE + argument_type ) 


Thanks,
Charlie
From dragonoe at mcmaster.ca  Tue May  9 13:58:06 2006
From: dragonoe at mcmaster.ca (O.E. Dragon)
Date: Tue May  9 13:58:09 2006
Subject: [antlr-interest] how to concatenate string nodes into one
	node when	create AST?
In-Reply-To: <96AD91D781CCD511A66000B0D0D15C490345FD90@mail.infobal.com>
Message-ID: <web-125739468@cgpsrv2.cis.mcmaster.ca>

On Tue, 9 May 2006 16:50:18 -0400 
 Charlie Yang <Cyang@infobal.com> wrote:
> if I do like below in the grammar, 
> .....
> argument ! :
>       	an:argument_name  at:argument_type
> 	{ #argument = #([FUNCTION_ARGU, "argu"], #an, #at  ); }
> .....
> 
> the output AST sub tree would be:
> 	("argu",        argument_name, argument_type ).   "argu" is root,
> and two others are children.
>       
> 
> How can I combine string type child nodes into single one child node
> like
> that ?:
> 	("argu",          argument_name + argument_type ) 
>          or    ("argu",        argument_name + SPACE + argument_type
> ) 


Something like this?


  { #argument = #([FUNCTION_ARGU, "argu"], [SOMETYPE, #an.getText() +
#at.getType()] ); }

If you're looking for the _name_ of the type instead of the integer,
you'll have to do a reverse lookup with tokenNames (one of the parser
object's fields. getTokenNames() gets it for you I think). Of course
this would be simpler if token types were in an enum (Java 1.5
codegen... maybe for v3).

-Olivier
From oliver.zeigermann at gmail.com  Tue May  9 13:59:13 2006
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue May  9 13:59:19 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
Message-ID: <9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>

I guess you need something like an inverse action that applies when
backtracking fails. So you might need a pair of actions. This way all
actions executed inside backtracking are undone when backtracking is
done. Maybe it is enough to add an inverse action to indicate it
should be executed inside backtracking?

OIiver

2006/5/9, Terence Parr <parrt@cs.usfca.edu>:
> Howdy,
>
> We need to discuss v3's behavior for executing actions during
> backtracking (guessing).  ANTLR must parse ahead to see if something
> matches.  If it fails, then ANTLR tries the next viable alt.  Upon
> failure, it's pretty hard to undo actions in general so ANTLR gates
> actions out with something like this:
>
> if ( backtracking==0 ) {
>       SymbolTable.getPredefinedType("void"), symtab.getDefaultPkg());
> }
>
> Labels are still defined, because semantic preds might need them:
>
>                              packageDefinition1=packageDefinition();
>
> AST actions are off during backtracking:
>
>                              if ( backtracking==0 )
> list_packageDefinition.add(packageDefinition1.tree);
>
> Upon success, antlr still rewinds the input and then does the same
> parse again "with feeling". ;)
>
> Clearly you don't want actions executed when that alt ultimately
> doesn't succeed.  Similarly, when the alt does succeed, you do not
> want actions executed twice.  This all makes sense.
>
> The problem arises when you want actions to execute *during*
> backtracking so that semantic predicates make sense during
> backtracking.  If you are combining backtracking (syntactic
> predicates) and semantic predicates for tough languages like C++ then
> you must execute actions during the backtrack but then avoid them
> during the parse.
>
> In v2, a quirk of implementation became a feature: init actions for
> rules, subrules were not gated out:
>
> ( {always do this} foo | bar )
>
> This was "wrong" in the sense that it executed the action twice.
>
> Anybody have a suggestion?  We have named actions now, perhaps
> instead of @init{...} or plain {...} we do @guessing{...} or something?
>
> Ter
>
From parrt at cs.usfca.edu  Tue May  9 14:24:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  9 14:24:26 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
	<9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
Message-ID: <B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>


On May 9, 2006, at 1:59 PM, Oliver Zeigermann wrote:

> I guess you need something like an inverse action that applies when
> backtracking fails. So you might need a pair of actions. This way all
> actions executed inside backtracking are undone when backtracking is
> done. Maybe it is enough to add an inverse action to indicate it
> should be executed inside backtracking?

Hi :)  Yep, thought about that and decided it's probably very hard to  
always do an undo.  That said, for symbol tables it might be doable.   
Might have to track stuff in a data structure to manage the undos.   
What if we did "software transaction" like stuff to auto-rewind?

Ter

From Jeff.Barnes at codesic.com  Tue May  9 15:03:12 2006
From: Jeff.Barnes at codesic.com (Jeff Barnes)
Date: Tue May  9 15:01:33 2006
Subject: [antlr-interest] executing actions during backtrack
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu><9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
	<B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
Message-ID: <FC6B2BF8B2FE854EAE0C380E55CA5734119DDF@HQ-APP2.CODESIC.COM>

Like the Command Stack pattern? Gamma et al.

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Terence Parr
Sent: Tue 5/9/2006 2:24 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] executing actions during backtrack




On May 9, 2006, at 1:59 PM, Oliver Zeigermann wrote:

> I guess you need something like an inverse action that applies when
> backtracking fails. So you might need a pair of actions. This way all
> actions executed inside backtracking are undone when backtracking is
> done. Maybe it is enough to add an inverse action to indicate it
> should be executed inside backtracking?

Hi :)  Yep, thought about that and decided it's probably very hard to 
always do an undo.  That said, for symbol tables it might be doable.  
Might have to track stuff in a data structure to manage the undos.  
What if we did "software transaction" like stuff to auto-rewind?

Ter


From kroepke at dolphin-services.de  Tue May  9 15:26:17 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Tue May  9 15:26:25 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
	<9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
Message-ID: <FF5C6B60-7296-4636-9E5D-C1FF11C64E87@dolphin-services.de>


On 9. May 2006, at 22:59 Uhr, Oliver Zeigermann wrote:

> I guess you need something like an inverse action that applies when
> backtracking fails. So you might need a pair of actions. This way all
> actions executed inside backtracking are undone when backtracking is
> done. Maybe it is enough to add an inverse action to indicate it
> should be executed inside backtracking?

I concur. It would be helpful to have both, though.
@guessing{} for those actions I only want to be doing while guessing  
and a "@unguessing{}" or rather "@backtrack{}"
for unrolling the things I have done previously (if any).

It would be cool if the @guessing{} part would be executed again like  
a normal action when doing the actual "parse with feeling" (I like  
that :))
so users don't have to write the same action twice, though it might  
be hard to decide whether or not the user actually wants this. Dunno.

-k


From kroepke at dolphin-services.de  Tue May  9 15:30:09 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Tue May  9 15:30:15 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
	<9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
	<B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
Message-ID: <D33B1D11-0F9F-432E-84FA-260BAC000D0B@dolphin-services.de>


On 9. May 2006, at 23:24 Uhr, Terence Parr wrote:

>
> On May 9, 2006, at 1:59 PM, Oliver Zeigermann wrote:
>
>> I guess you need something like an inverse action that applies when
>> backtracking fails. So you might need a pair of actions. This way all
>> actions executed inside backtracking are undone when backtracking is
>> done. Maybe it is enough to add an inverse action to indicate it
>> should be executed inside backtracking?
>
> Hi :)  Yep, thought about that and decided it's probably very hard  
> to always do an undo.  That said, for symbol tables it might be  
> doable.  Might have to track stuff in a data structure to manage  
> the undos.  What if we did "software transaction" like stuff to  
> auto-rewind?

Perl does something like that, but of course that only applies to  
changes to locally scoped variables when you embed code in regexes.
Stacking those guessing code blocks and executing the undo blocks on  
the way back would be the way to do, methinks.
If a user does something that absolutely should only happen once, one  
would assume that he tests for guessing mode anyway. We can't second  
guess them
there (as much as we wanted to ;))

-k
From parrt at cs.usfca.edu  Tue May  9 18:10:18 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  9 18:10:23 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <FC6B2BF8B2FE854EAE0C380E55CA5734119DDF@HQ-APP2.CODESIC.COM>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu><9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
	<B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
	<FC6B2BF8B2FE854EAE0C380E55CA5734119DDF@HQ-APP2.CODESIC.COM>
Message-ID: <ECE7DC4E-4D35-4701-9ECE-B16B7555F0E7@cs.usfca.edu>


On May 9, 2006, at 3:03 PM, Jeff Barnes wrote:

> Like the Command Stack pattern? Gamma et al.

Yes, but for arbitrary actions.  Some statements like prints will  
never be "undoable", but for symbol tables it could work.  I'd prefer  
an automatic mechanism.

Ter

From parrt at cs.usfca.edu  Tue May  9 18:28:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May  9 18:28:14 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <D33B1D11-0F9F-432E-84FA-260BAC000D0B@dolphin-services.de>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
	<9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
	<B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
	<D33B1D11-0F9F-432E-84FA-260BAC000D0B@dolphin-services.de>
Message-ID: <EE2AE059-D1E8-4C30-A8E6-ED4C240FB808@cs.usfca.edu>


On May 9, 2006, at 3:30 PM, Kay Roepke wrote:
>>> I guess you need something like an inverse action that applies when
>>> backtracking fails. So you might need a pair of actions. This way  
>>> all
>>> actions executed inside backtracking are undone when backtracking is
>>> done. Maybe it is enough to add an inverse action to indicate it
>>> should be executed inside backtracking?
>>
>> Hi :)  Yep, thought about that and decided it's probably very hard  
>> to always do an undo.  That said, for symbol tables it might be  
>> doable.  Might have to track stuff in a data structure to manage  
>> the undos.  What if we did "software transaction" like stuff to  
>> auto-rewind?
>
> Perl does something like that, but of course that only applies to  
> changes to locally scoped variables when you embed code in regexes.
> Stacking those guessing code blocks and executing the undo blocks  
> on the way back would be the way to do, methinks.
> If a user does something that absolutely should only happen once,  
> one would assume that he tests for guessing mode anyway. We can't  
> second guess them
> there (as much as we wanted to ;))

What if we could auto unroll any object/data-structured you  
identified somehow as transactional?  You would give me an undo()  
method for each object, like a hashtable.  I could record the  
arguments to pass to undo so it knows how to undo.  This would not be  
perfect as the arguments could point at stuff that could change (like  
a stringbuffer), but would be a poor man's transactions.

We need to keep in mind that MOST of the time, this feature is  
unnecessary.  It's only needed when you need both syn and sem preds  
and they interact.

Let's see.  Here's a simple example to chew on:

{
Scope scope = null; // current scope
}

a	:	(block '.')=>block '.' // dummy rule to force backtrack of block
	|	block '!'
	;

block
	:	{scope = new LocalScope(scope);} // push new scope
		'{' statement* '}'
		{scope = scope.parent;} // pop scope
	;

statement
	:	"int" ID ';' {scope.define($ID.text, new VariableSymbol($ID.text));}
	|	"if" ...
	;

First time through on input

{ int i; }.

ANTLR backtracks through block and statement doing no actions.  Then  
upon success, rewinds, and does it again with feeling.  Upon input

{ int i; }!

ANTLR backtracks through block and statement doing no actions.  Upon  
failure, it rewinds and does 2nd alt, calling block with feeling.

This is the normal case.  What if we needed a semantic predicate in  
statement that needed to know whether an ID was a var?

statement
	:	"int" ID ';' {scope.define($ID.text, new VariableSymbol($ID.text));}
	|	"if" ...
	|	{isVar(input.LT(1))}? ID ... // some alt predicated upon ID being  
a variable name
	;

Here, you MUST have the define() function call executed or else the  
{...}? sem pred will always fail.

Alright.  We need to unroll the define() action for sure but we could  
avoid if by throwing out the entire scope.  If we executed the push/ 
pop scope actions, the definitions would actually disappear already  
and automatically!  Wow, interesting!

Let's keep going with the undo() method though.  I'd need to track  
the scope and ID.text and VariableSymbol objects so undo would know  
what to do.  How can I know what to track?  Impossible.  Users will  
have to provide a specific undo action that I can execute:

statement
	:	"int" ID ';'
		{scope.define($ID.text, new VariableSymbol($ID.text));}
		@undo {scope.remove($ID.text);}
	|	"if" ...
	|	{isVar(input.LT(1))}? ID ... // some alt predicated upon ID being  
a variable name
	;

That would unroll it no problem.  Let's assume that plain {...}  
actions always exec when an @undo is provided (heh, I like that).

Where would the undo action get executed though?  What if the undo  
action references a local variable?  It won't even compile if I move  
it out to the commit/rollback of the synpred up in a().  The undo  
cannot be done in the rule as statement will be called multiple  
times.  It has t be at the transaction end (synpred fail/success)  
where I roll back the input.  Oh!  Also, if it references input.LT(1)  
that will be at some unknown location during the undo action's  
rollback!  There would have to be lots of restrictions on the undo  
actions.  For example, I can see already that $ID.text will be  
unavailable in the rollback action in a().

Ok, taking the cue from Jeff Barnes, perhaps the undo action actually  
creates an object that parameterizes the action and executes it  
during rollback in reverse order:

@undo(Scope s=scope, String id=$ID.text) {s.remove(id);}

Here it would evaluate scope and $ID.text in it's original context  
but execute the action during rollback.  The object could be:

class Action324 extends UndoAction {
	Scope s;
	String id;
	public Action324(Scope s, String id) {...set fields...}
	public void undo() { s.remove(id); }
}

The action would be translated to:

undoActions.add(new Action324(scope,$ID.text));

Later we can walk undoActions and undo everything.

Hmm...would this work?  Surely in this case.  The key is passing all  
necessary data to the undo as evaluated in its original context.

Ter
From kroepke at dolphin-services.de  Tue May  9 18:56:55 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Tue May  9 18:57:02 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <EE2AE059-D1E8-4C30-A8E6-ED4C240FB808@cs.usfca.edu>
References: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
	<9da4f4520605091359r74381d32l613cf2129349d383@mail.gmail.com>
	<B0A8C048-75D6-4FD6-8D2A-118F13AE6A5A@cs.usfca.edu>
	<D33B1D11-0F9F-432E-84FA-260BAC000D0B@dolphin-services.de>
	<EE2AE059-D1E8-4C30-A8E6-ED4C240FB808@cs.usfca.edu>
Message-ID: <B4299A91-ECC5-4C12-9567-A2BBB704E88F@dolphin-services.de>


On 10. May 2006, at 3:28 Uhr, Terence Parr wrote:

> The action would be translated to:
>
> undoActions.add(new Action324(scope,$ID.text));
>
> Later we can walk undoActions and undo everything.
>
> Hmm...would this work?  Surely in this case.  The key is passing  
> all necessary data to the undo as evaluated in its original context.

Yes, this should work in the general case, too, since if you supply  
the information and code necessary to undo the actions you have been  
executing,
there are no external dependencies and you're fine. Just hand it the  
proper undo object and call it later on if necessary. We could  
actually skip out
on reparsing and executing actions in this case to make up for the  
hassle you had to go through to set it up in the first place :)

This is exactly how the undo mechanism works in Apple's Cocoa  
framework. Guess it's modeled after the Command Execute pattern, too  
(or predates it or whatever,
who cares, it works...).

I'd like to see a close proximity between plain actions and @undo  
actions though, otherwise more complicated grammars could be pretty  
hard to grok. But maybe
that's simply a requirement for a good editor to visually indicate  
something fancy going on in that rule. I like the @undo name.

-k
From jbarnesweb at yahoo.com  Tue May  9 21:22:57 2006
From: jbarnesweb at yahoo.com (Jeff Barnes)
Date: Tue May  9 21:23:00 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <EE2AE059-D1E8-4C30-A8E6-ED4C240FB808@cs.usfca.edu>
Message-ID: <20060510042257.8908.qmail@web54504.mail.yahoo.com>

To the list this time...


> What if we could auto unroll any
> object/data-structured you  
> identified somehow as transactional?  

Like perhaps with a checkpoint.

> You would give
> me an undo()  
> method for each object, like a hashtable. 

Or just a way to serialize it. Make a copy of the
model (or portion of the model) for each Command so
ConcreteCommand could undo itself. And if you want to
get fancy have an accessor for a ConstraintSolver that
encapsulates the sem pred (would it work for a syn
pred?) that prompted the decision. 

>  How can I know what to track? 
> Impossible.  Users will  
> have to provide a specific undo action that I can
> execute:

Not sure why... a checkpoint would manage that for
you. A redo "log" would provide snapshots of the state
along with the Command object that caused that change
of state. Command would by its nature change the state
of the model. Nothing else matters.

> 
> Where would the undo action get executed though? 

Not an action. Just restore the model to its
serialized state at the decision point.

> 
> Ok, taking the cue from Jeff Barnes, perhaps the
> undo action actually  
> creates an object that parameterizes the action and
> executes it  
> during rollback in reverse order:
> 
> @undo(Scope s=scope, String id=$ID.text)
> {s.remove(id);}

Scope would need an isVisible() function wouldn't it?
I'm kinda scared of a first class Scope object without
it.



Jeff Barnes       

From mail at martin-probst.com  Wed May 10 00:00:45 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May 10 00:00:51 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <20060510042257.8908.qmail@web54504.mail.yahoo.com>
References: <20060510042257.8908.qmail@web54504.mail.yahoo.com>
Message-ID: <5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com>

Hi,

>>  How can I know what to track?
>> Impossible.  Users will
>> have to provide a specific undo action that I can
>> execute:
>
> Not sure why... a checkpoint would manage that for
> you. A redo "log" would provide snapshots of the state
> along with the Command object that caused that change
> of state. Command would by its nature change the state
> of the model. Nothing else matters.

What would you checkpoint then, the entire heap & stack? Somehow the  
user needs to tell you what is going to be changed as you can't find  
it out from looking at the code, at least not generally (Turing  
anyone?) and certainly not easily in imperative languages. You can't  
generate a checkpoint without either knowing what to save or copying  
the whole machine. And even if you generally know what to save (e.g.  
all member variables of the parser class) it might get horribly  
inefficient, as for many actions you wouldn't really need to save  
them all. Then you get copy on write etc., this is the way to a lot  
of complexity and completely out of the scope of ANTLR.

This is why we have databases with special query languages, they are  
explicitly designed so that you can analyze what gets modified or  
accessed...

Martin

From craymer at warpiv.com  Wed May 10 01:46:01 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Wed May 10 01:46:04 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com>
Message-ID: <000f01c6740e$2b5283f0$6402a8c0@Fafnir>

This is really one of those situations where building a solution into ANTLR
is probably a mistake: simplicity is a virtue.  As a user, you can always do
something like

{ saveState(); } (synpred) => <grammar fragment>
| { recover(); } <alt fragment>


if you ever encounter a situation where a rollback is really needed.  I've
never seen a case where that was true, although I have done the "wouldn't it
be nice" thinking.  Like everyone else, I sometimes try to provide solutions
to non-problems and regret it later.

Does anyone out there have an example that justifies the implementation
effort?  That would probably be good to know before Ter does the work.

--Loring


From open.zone at virgin.net  Wed May 10 04:30:13 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May 10 04:12:52 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
Message-ID: <007801c67425$1dd702c0$6502a8c0@hercules>

Ter,

> Anybody have a suggestion?  We have named actions now, perhaps  
> instead of @init{...} or plain {...} we do @guessing{...} or 
> something?

Depends on the number of time that a... say @guessing{..} ...block might
execute. I'm thinking here of nested rules that independently trigger
backtracking (this was possible in ANTLR2). Would the @guessing action block
always run?

If these blocks can be executed more than once while backtracking, it is
probably best to simply document the fact that the backtracking attribute
can be used to check action execution context (and backtracking nesting
depth?). We should also include example(s) in the docs of how that might be
used to control action execution effectively.

Oh, "@guessing" sounds as good as any... ;-)


Cheers,

Micheal

From open.zone at virgin.net  Wed May 10 04:30:13 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May 10 04:12:59 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <EE2AE059-D1E8-4C30-A8E6-ED4C240FB808@cs.usfca.edu>
Message-ID: <007901c67425$21ca8410$6502a8c0@hercules>

Ter,

> What if we could auto unroll any object/data-structured you  
> identified somehow as transactional?  You would give me an undo()  
> method for each object, like a hashtable.  I could record the  
> arguments to pass to undo so it knows how to undo.  This 
> would not be  
> perfect as the arguments could point at stuff that could 
> change (like  
> a stringbuffer), but would be a poor man's transactions.
.....
.....
.....
> undoActions.add(new Action324(scope,$ID.text));
> 
> Later we can walk undoActions and undo everything.
> 
> Hmm...would this work?  Surely in this case.  The key is passing all  
> necessary data to the undo as evaluated in its original context.

The value of the 'backtracking' attribute already serves as a state flag to
ANTLR users concerned about the interactions of actions and backtracking. I
vote we leave it there.

Stripped down, fast-as-possible, easy to read/debug source code (well easier
to read than LR equivalents) for ANTLR generated language processors remains
the goal right?


Micheal


From open.zone at virgin.net  Wed May 10 04:30:38 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May 10 04:13:15 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <7E495C08-5429-4F4A-9C4C-C4036C0BD759@cs.usfca.edu>
Message-ID: <007a01c67425$2a9d1f30$6502a8c0@hercules>

Ter,

> Anybody have a suggestion?  We have named actions now, perhaps  
> instead of @init{...} or plain {...} we do @guessing{...} or 
> something?

Depends on the number of time that a... say @guessing{..} ...block might
execute. I'm thinking here of nested rules that independently trigger
backtracking (this was possible in ANTLR2). Would the @guessing action block
always run?

If these blocks can be executed more than once while backtracking, it is
probably best to simply document the fact that the backtracking attribute
can be used to check action execution context (and backtracking nesting
depth?). We should also include example(s) in the docs of how that might be
used to control action execution effectively.

Oh, "@guessing" sounds as good as any... ;-)


Cheers,

Micheal

From jose.ventura.roda at gmail.com  Wed May 10 04:37:00 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Wed May 10 04:37:05 2006
Subject: [antlr-interest] Help with nondeterminism in cobol grammar
Message-ID: <e39abda10605100437v272b7f66i8666c7262e01ffef@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
/*header 
{
	package cobol;
}
	*/
class CobolLex extends Lexer;
options 
{ 
	k=1;
	charVocabulary = '\3'..'\377'; // Unicodes usuales
	caseSensitive=false;
	caseSensitiveLiterals=false;
	testLiterals=false;
	exportVocab=CobolLexVocab;

} 
tokens										// MUST be kept in sync with "keywordsTable" Hashtable below!!
{
	FIN_TODO;
	NUM;
    IDENT;
	LIT_HEXADECIMAL;
	LIT_PIC;
	LIT_COPY;
	FECHA;
	IGUAL;
	MAYOR_IGUAL;
	MENOR_IGUAL;
	NOT_REL;
    
    IDENTIFICATION="IDENTIFICATION";
	ID="ID";
	ENVIRONMENT="ENVIRONMENT";
	DATA="DATA";
	WORKING="WORKING-STORAGE";
	LINKAGE="LINKAGE";
	DIVISION="DIVISION";
	PROGRAM_ID="PROGRAM-ID";
	PROCEDURE="PROCEDURE";
	SECTION="SECTION";

	ACCEPT="ACCEPT";
	ADD="ADD";
	ALL="ALL";
	ALSO="ALSO";
	ALTER="ALTER";
	AND="AND";
	AT="AT";
	BLANK="BLANK";
	BY="BY";
	CALL="CALL";
	CANCEL="CANCEL";
	CICS="CICS";
	CLOSE="CLOSE";
	COMPUTE="COMPUTE";
	COMMAREA="COMMAREA";
	COMMIT="COMMIT";
	CONTINUE="CONTINUE";
	CORR="CORR";
	CORRESPONDING="CORRESPONDING";
	DELETE="DELETE";
	DELIMITED="DELIMITED";
	DISPLAY="DISPLAY";
	DIVIDE="DIVIDE";
	ELSE="ELSE";
	END="END";
	END_ADD="END-ADD";
	END_CALL="END-CALL";
	END_COMPUTE="END-COMPUTE";
	END_DIVIDE="END-DIVIDE";
	END_EVALUATE="END-EVALUATE";
	END_EXEC="END-EXEC";
	END_IF="END-IF";
	END_MULTIPLY="END-MULTIPLY";
	END_PERFORM="END-PERFORM";
	END_SEARCH="END-SEARCH";
	END_STRING="END-STRING";
	END_UNSTRING="END-UNSTRING";
	END_SUBTRACT="END-SUBTRACT";
	END_READ="END-READ";
	END_WRITE="END-WRITE";
	ENTRY="ENTRY";
	EVALUATE="EVALUATE";
	EXEC="EXEC";
	EXIT="EXIT";
	METHOD="METHOD";
	PROGRAM="PROGRAM";
	GIVING="GIVING";
	GOBACK="GOBACK";
	GO_TO="GO TO";
	IF="IF";
	IN="IN";
	INITIALIZE="INITIALIZE";
	INSPECT="INSPECT";
	INTO="INTO";
	INVOKE="INVOKE";
	LINK="LINK";
	MERGE="MERGE";
	MOVE="MOVE";
	MULTIPLY="MULTIPLY";
	OF="OF";
	OPEN="OPEN";
	OR="OR";
	OTHER="OTHER";
	PERFORM="PERFORM";
	POINTER="POINTER";
	READ="READ";
	RECEIVE="RECEIVE";
	REDEFINES="REDEFINES";
	RELEASE="RELEASE";
	REPLACING="REPLACING";
	TALLYING="TALLYING";
	RETURN="RETURN";
	REWRITE="REWRITE";
	ROLLBACK="ROLLBACK";
	SEARCH="SEARCH";
	SEND="SEND";
	SET="SET";
	SQL="SQL";
	SORT="SORT";
	SPACE="SPACE";
	SPACES="SPACES";
	START="START";
	STOP="STOP";
	STRING="STRING";
	SUBTRACT="SUBTRACT";
	SYNCPOINT="SYNCPOINT";
	TO="TO";
	THEN="THEN";
	UNSTRING="UNSTRING";
	WRITE="WRITE";
	ZERO="ZERO";
	ZEROS="ZEROS";
	ZEROES="ZEROES";
	THROUGH="THROUGH";
	THRU="THRU";
	VARYING="VARYING";
	UNTIL="UNTIL";
	USING="USING";
	WHEN="WHEN";
	WITH="WITH";
	TEST="TEST";
	BEFORE="BEFORE";
	AFTER="AFTER";
	JUSTIFIED="JUSTIFIED";
	JUST="JUST";
	OCCURS="OCCURS";
	ASCENDING="ASCENDING";
	DESCENDING="DESCENDING";
	KEY="KEY";
	INDEXED="INDEXED";
	PIC="PIC";
	PICTURE="PICTURE";
	USAGE="USAGE";
	VALUE="VALUE";
	VALUES="VALUES";
	ARE="ARE";
	RENAMES="RENAMES";
	COPY="COPY";
	// los tipos de campos BINARY..DISPLAY1 deben estar contiguos
	// ver rutina Programa.calcularLong()
	BINARY="BINARY";
	COMP="COMP";
	COMP1="COMP-1";
	COMP2="COMP-2";
	COMP3="COMP-3";
	COMP4="COMP-4";
	COMPUTATIONAL="COMPUTATIONAL";
	COMPUTATIONAL1="COMPUTATIONAL-1";
	COMPUTATIONAL2="COMPUTATIONAL-2";
	COMPUTATIONAL3="COMPUTATIONAL-3";
	COMPUTATIONAL4="COMPUTATIONAL-4";
	PACKED_DECIMAL="PACKED-DECIMAL";
	DISPLAY1="DISPLAY-1";
	//Fin de tipos.
	INDEX="INDEX";
	CHARACTERS="CHARACTERS";
	LEADING="LEADING";
	FIRST="FIRST";
	INITIAL="INITIAL";
	CONVERTING="CONVERTING";
	FOR="FOR";
	UP="UP";
	DOWN="DOWN";
	NOT="NOT";
	NULL="NULL";
	ON="ON";
	SIZE="SIZE";
	ERROR="ERROR";
	THAN="THAN";
	GREATER="GREATER";
	LESS="LESS";
	EQUAL="EQUAL";
	NUMERIC="NUMERIC";
	ALPHABETIC="ALPHABETIC";
	ALPHANUMERIC="ALPHANUMERIC";
	POSITIVE="POSITIVE";
	NEGATIVE="NEGATIVE";
	FROM="FROM";
	COUNT="COUNT";
	DELIMITIER="DELIMITER";
	INCLUDE="INCLUDE";
	NEXT="NEXT";
	SENTENCE="SENTENCE";
	ROUNDED="ROUNDED";
	WRITEQ="WRITEQ";
	READQ="READQ";
	TS="TS";
	TD="TD";
	QUEUE="QUEUE";
	NUMITEMS="NUMITEMS";
	ITEM="ITEM";
	MAIN="MAIN";
	LENGTH="LENGTH";
	RESP="RESP";
	NOHANDLE="NOHANDLE";
	ERASE="ERASE";
	DEPENDING="DEPENDING";
	TIMES="TIMES";
	DLI="DLI";
	FILE="FILE";
	FD="FD";
	SD="SD";
	EXTERNAL="EXTERNAL";
	GLOBAL="GLOBAL";
	BLOCK="BLOCK";
	CONTAINS="CONTAINS";
	RECORDS="RECORDS";
	RECORD="RECORD";
	LABEL="LABEL";
	STANDARD="STANDARD";
	OMITTED="OMITTED";
	RECORDING="RECORDING";
	MODE="MODE";
	INPUT="INPUT";
	OUTPUT="OUTPUT";
	UPON="UPON";
	NO="NO";
	ADVANCING="ADVANCING";
	DUPLICATES="DUPLICATES";
	ORDER="ORDER";
	SEQUENCE="SEQUENCE";
	COLLATING="COLLATING";
	
	

}

{ // Comienza la zona de c?digo nativo

boolean ultPic=false;
boolean enExec=false;
protected Token makeToken(int type)
{
	// Usamos la implementaci?n de la superclase...
	Token result = null;
	int tipo=type;

	
// while I don't have a parser for CICS and SQL DLI

	if (enExec)
	{
		if (type==END_EXEC||
			type==RETURN ||
			type==RECEIVE ||
			type==SEND   ||
			type==SYNCPOINT ||
			type==LINK ||
			type==WRITEQ ||
			type==READQ ||
			type==INCLUDE
			)
		{
			enExec=false;
		}
		else
		{
			tipo=IDENT;
		}
	}
	else
	{
		if (type==NOT)
			tipo=tipoNot();
		else
			enExec=(type==SQL||type==CICS||type==DLI);
	}

	result = super.makeToken(tipo);
	ultPic =(type==PIC||type==PICTURE);
	// ... a?adimos informaci?n del nombre de fichero
	result.setFilename(super.getFilename());
	// ... y devolvemos el token
	return (result);
	
}

protected int tipoNot ()
{
	int tipo = NOT;
	int marca = mark();
	int saveLong = text.length();
	
	try
	{
		while ( LA(1)==' ')
		{
			try
			{
				match(' ');
			}
			catch (MismatchedCharException m)
			{
				System.out.println ("Error in space following NOT. "+m.getMessage());
			}
		}
		switch (LA(1))
		{
			case '=':
			    match ("=");
				tipo = NOT_REL;
				break;
			case '>':
			    match (">");
				tipo = NOT_REL;
				break;
			case '<':
			    match ("<");
				tipo = NOT_REL;
				break;
			case 'g':
				tipo = NOT_REL;
				match("greater ");
				break;
			case 'l':
				tipo = NOT_REL;
				match("less ");
				break;
			case 'e':
				tipo = NOT_REL;
				match("equal ");
				break;
		}
	}
	catch (CharStreamException c)
	{
		System.out.println ("Problem with input buffer when it analize the NOT.");
	}
	catch (MismatchedCharException m)
	{
		tipo = NOT;

	}
	rewind (marca);
	text.setLength(saveLong);
	return (tipo);
}

}
COMENTARIO:
	'@' ( ~('\n'|'\r') )* 
	{$setType(Token.SKIP);}
	;

PAR_AB
	: {!ultPic }? '('
	;
PAR_CE
	: {!ultPic }? ')'
	;
CAD_COPY
	: ("==") => "==" ( ~('=') )*	"=="
	{ $setType(LIT_COPY); }
	| '='
	{ $setType(IGUAL); }
	;
DOSPUNTOS
	: ':'
	;

MAS
	: {!ultPic }? 
	  '+' {$setType(MAS);}
	  (
	  		(DIGITO)+ (',' (DIGITO)+)? 
			{$setType(NUM);}
	   )?
	;
	
MENOS
	: {!ultPic }?
	  '-' {$setType(MENOS);}
	  (
	  		(DIGITO)+ ({LA(2)==DIGITO}?',' (DIGITO)+)? 
			{$setType(NUM);}
	   )?
	;
	
PUNTO
	: {!ultPic }?
	  '.' {$setType(FIN_TODO);}
	  (
	  	(DIGITO)+ {_ttype=NUM;}
	   )?
	 ;
COMA
	: {!ultPic }?
	  ',' {_ttype=COMA;} 
	  (
	  	(DIGITO)+ {_ttype=NUM;}
	   )?
	 ;
	 
POR
	: {!ultPic }? '*'
	;

DIV
	: '/'
	;

MAYOR
	: '>'
		('=' {_ttype=MAYOR_IGUAL;})?
	;
MENOR: '<'
		('=' {_ttype=MENOR_IGUAL;})?
	;

protected
LETRA
	: 'a'..'z'
	;

protected
DIGITO
	: '0'..'9'
	;


protected 
NL :
		(
		 ("\r\n") => "\r\n" // MS-DOS
		 | '\r' // MACINTOSH
		 | '\n' // UNIX
		 )
		 {newline(); }
		 ;

BLANCO :
		( ' '
		| '\t'
		| NL
		) 
		{ $setType(Token.SKIP); } // La acci?n del blanco: ignorar
		;

IDENT_NUM  options {testLiterals=true;}
	:{ ultPic }? ('+'|'-'|'$'|'b'|','|'e'|('0'..'9')|'x'|'s'|'v'|'z'|'*'|'('|')'|
	               {LA(2)!=' '&&LA(2)!='\n'&&LA(2)!='\r'}? '.')+  
	 {$setType (LIT_PIC);}
	|('x' '\'') => 'x' '\''( ~('\''|'\n'|'\r'|'\t') )*	'\'' 
	 {$setType (LIT_HEXADECIMAL);}
	| LETRA (LETRA|DIGITO|'-'|'_')*
	 {String s = $getText;
	  if (s.equals("IS"))
	  	$setType(Token.SKIP);
	  else
	  	$setType(IDENT);
	 }
	|((DIGITO)+ (LETRA|'-'|'_')) =>(DIGITO)+ (LETRA|'-'|'_') (LETRA|DIGITO|'-'|'_')*
	 {$setType (IDENT);}
	|((DIGITO)+ '/' )=> (DIGITO)+ '/' (DIGITO|'/')+
	 {$setType (FECHA);}
	| (DIGITO)+  ({LA(2)!=' '&&LA(2)!='\n'&&LA(2)!='\r'}? ',' (DIGITO)+)?
	 {$setType (NUM);}
	| '_' (LETRA|DIGITO|'_')*
	 {$setType (IDENT);}
	;

CADENA :
	'\''! 
	( ~('\''|'\n'|'\r'|'\t') )*
	'\''!
	| '"'! ( ~('"'|'\n'|'\r'|'\t') )* '"'!
	;










-------------- next part --------------
header 
{
	import java.util.*;
	import antlr.CommonToken;
}
class CobolCommand extends Parser; 
options {
	buildAST = true;
	importVocab = CobolLexVocab;
	exportVocab = CobolCommandVocab;
}
tokens {
/* tokens */
    PROGRAMA;
	SENTENCIAS;
	PARRAFO;
	PERFORM_PARRAFO;
	PERFORM_INLINE;
	CICS_GENERICO;
	SQL_GENERICO;
	CONDICION;
	LIST_EXPRESIONES;
	DECLARACION;
	CAMPO;
	MOD_TEXTO;
	INDICE;
	OPERADOR;
	EXPRESION;
	LENGTHOF;
}

sentencia_interna [String tipo]
	: sentencia  
	;
sentencia 
	:
	(options {greedy=true;}:c:comando) *  
	;
	
comando 
	: comando_if 
   	|comando_perform 
	|comando_call   
	|comando_move
	|comando_unstring
	|comando_inspect 
	|comando_add
	|comando_evaluate
	|comando_initialize
	|comando_string
	|comando_set
	|comando_search
	|comando_subtract
	|comando_multiply
	|comando_compute
	|comando_divide
	|comando_open
	|comando_close
	|comando_read
	|comando_write
	|comando_display
	|comando_sort
	|(EXIT PROGRAM) => EXIT PROGRAM!
	|EXIT!
	|CONTINUE!
	|NEXT! SENTENCE!
	|GOBACK
	;		 
		 
				  
comando_if
	: IF^ condicion parte_then (options {greedy=true;}: ELSE! parte_else)? (options {greedy=true;}: END_IF!)? 				
	;
condicion //returns [String s]
	: c:condicionOR
	{## = #( #[CONDICION, "CONDICION"] ,##);}
	;

listaAritmetica
	: expresionSuma 
	(COMA! expresionSuma)*
	{## = #( #[LIST_EXPRESIONES, "LIST_EXPRESIONES"] ,##);}
	;

condicionOR 
	: condicionAND (OR^ condicionAND)*
	;

condicionAND 
	: expresionRelacional (AND^ expresionRelacional)*
	;

expresionRelacional 
	: (expresionSuma)? (operador_relacional expresionSuma)*
	{## = #( #[EXPRESION, "EXPRESION"] ,##);}
	;
	
expresionSuma
	: expresionPor ( (MAS^|MENOS^) expresionPor)*
	;

expresionPor 
	: expresionUnitaria ( (POR^|DIV^) expresionUnitaria)*
	;
	
expresionUnitaria 
	: MENOS^ expresionUnitaria 
	| MAS^ expresionUnitaria 
	| expresionUnitariaNoMasMenos
	;
expresionUnitariaNoMasMenos 
	: NOT^ expresionUnitaria 
	| expresionPrimaria ((NOT)? (POSITIVE|NEGATIVE|NUMERIC|ALPHABETIC))? 
	;
	
expresionPrimaria
	: campo 
	| literal 
	| PAR_AB! condicion PAR_CE! 
	;

operador_relacional  
	: (NOT_REL )? 
	(GREATER (THAN)? (OR EQUAL (TO)?)?
	|MAYOR_IGUAL
	|MAYOR 
	|LESS (THAN)? (OR EQUAL (TO)?)?
	|MENOR_IGUAL 
	|MENOR 
	|EQUAL (TO)?
	|IGUAL
	)
	{## = #( #[OPERADOR, "OPERADOR"] ,##);}
	;
	
parte_then
	: (THEN!)? sentencia_interna ["THEN"]
	;
parte_else  
	: sentencia_interna["ELSE"] 
	;
fin_if
	: END_IF!
	;
comando_perform
	{String p2 = "";}
	: (PERFORM IDENT)=> 
	   PERFORM i1:IDENT! 
	            ((THROUGH!|THRU!) i2:IDENT!{p2=#i2.getText();})?
				perform_opc
	{ String p = #i1.getText() + ((p2=="")?"":"/"+p2);
	  {## = #( #[PERFORM_PARRAFO, p] ,##);}
	}

	| PERFORM {## = #( #[PERFORM_INLINE, "PERFORM_INLINE"] ,##);}
	  perform_opc sentencia_interna ["PERFORM"] END_PERFORM!
	;

perform_opc
	: (test)? (perform_varying)? (perform_until)?	
	;
perform_varying
	: VARYING^ campo FROM (campo|literal) BY (campo|literal)
	;
perform_until
	: UNTIL^ condicion
	;

test!
	: (WITH)? TEST (BEFORE|AFTER)
	;

	
comando_call
	: CALL^ (campo|CADENA) (call_using)?
	;
	
call_using
	: USING^ (campo)+
	;
	

comando_move
	:  MOVE^ (CORRESPONDING!|CORR!)? (literal|campo) TO (campo (COMA!)?)+
	;

comando_unstring
	: UNSTRING^ campo (unstring_delimited)? unstring_into (unstring_with)? (unstring_tallying)?
     (END_UNSTRING)?
	;
unstring_into
	: INTO^ ( campo (delimitador)? (contador)?)+
	;
delimitador!
	:DELIMITER^ (IN!)? campo
	;
contador
	:COUNT^ (IN!)? campo
	;
unstring_delimited!
	: DELIMITED^ (BY!)? (ALL!)? (campo|literal|SIZE) (OR (ALL)? (campo|literal|SIZE))*
	;
unstring_with
	: (WITH!)? POINTER^ campo
	;
unstring_tallying
	: TALLYING^ (IN!)? campo
	;
	
comando_string
	: STRING^ (lista_string)+ string_into (unstring_with)? (END_STRING!)?
	;
string_into
	: INTO^ lista_string
	;
	
lista_string
	: (options {greedy=true;}:campo|literal)+ (DELIMITED! (BY!)? (campo!|literal!|SIZE!))?
	;

comando_inspect
	: INSPECT^ campo (parte_tallying 
	                  |parte_replacing
					  |parte_converting)+
	;
	
parte_tallying
	: TALLYING^ ( campo FOR ( (CHARACTERS (before_after)*| (ALL|LEADING) ((campo|literal) (before_after)*)+))+)+
	;
parte_replacing
	: REPLACING^ ( (CHARACTERS BY (campo|literal) (before_after)*
	    |(ALL|LEADING|FIRST) (parte_by (before_after)*)+))+
	;
parte_by
	: un_by (options {greedy=true;}:(COMA!)? un_by)*
	;
un_by:
	(campo|literal) BY (campo|literal) 
	;
parte_converting
	: CONVERTING^ (campo|literal) TO (campo|literal) (before_after)*
	;
before_after
	: (BEFORE|AFTER) (INITIAL)? (campo|literal)
	;


comando_initialize
	: INITIALIZE^ (campo)+ (initialize_replacing)?
	;
	
initialize_replacing
	:REPLACING^ (tipo_dato )+ 
	;
tipo_dato
	: (ALPHABETIC^|NUMERIC^|ALPHANUMERIC^) (DATA!)? BY (campo|literal)
	;
	
comando_evaluate
	: EVALUATE^ objeto_evaluate (ALSO objeto_evaluate)* (subcomando_when)+ (END_EVALUATE!)
	;

subcomando_when
	: WHEN^ ((condicion_when (ALSO condicion_when)*)|OTHER) (options {greedy=true;}:sentencia_interna ["WHEN"])?
	;
condicion_when
	: condicion (THRU condicion)?
	;
objeto_evaluate
	: (campo|literal) ((THROUGH!|THRU!) (campo|literal))?
	;

comando_set!
	: SET^ (campo)+  (TO|(UP|DOWN) BY) (campo|literal)
	;

comando_search
	: SEARCH^ campo (VARYING^ campo)? ((AT!)? END^ sentencia_interna["AT-END"])?
	  (options {greedy=true;}:subcomando_when)+ (options {greedy=true;}:END_SEARCH!)?
	;

comando_add
	:  ADD^ (literal|campo) 
	   TO (campo (ROUNDED)?)+ 
	   (giving)? 
	   (size_error)? 
	   (options {greedy=true;}:END_ADD!)?
	;
	
comando_compute
	: COMPUTE^ campo (ROUNDED)? IGUAL (expresionSuma)?
	;

comando_subtract!
	: SUBTRACT^ (campo|literal) FROM (campo|literal) (ROUNDED)?  (giving)? (size_error)? (options {greedy=true;}:END_SUBTRACT!)?
	;
	
comando_multiply
	: MULTIPLY^ (campo|literal) BY (campo|literal) (ROUNDED)? (giving)? (size_error)? (options {greedy=true;}:END_MULTIPLY)?
	;
	
comando_divide
	: DIVIDE^ (campo|literal) (INTO|BY) (campo|literal) (ROUNDED)? (giving)? (size_error)? (options {greedy=true;}:END_DIVIDE)?
	;
	
size_error
	: (NOT)? (ON!)? SIZE ERROR! sentencia_interna["SIZE-ERROR"]
//	: SIZE ERROR! sentencia_interna["SIZE-ERROR"]
//	| NOT (ON!)? SIZE ERROR! sentencia_interna["NOT-SIZE-ERROR"]
	;
giving
	: GIVING campo (ROUNDED)?
	;

comando_open
	: OPEN^ ((INPUT|OUTPUT) IDENT)+
	;
	
comando_close
	: CLOSE^ (IDENT)+
	;
	
comando_read
	: READ^ IDENT (read_into)? (read_end)? (read_no_end)? (options {greedy=true;}:END_READ!)?
	;
next_record
	: NEXT (RECORD)?
	| RECORD
	;

read_into
	: INTO^ campo
	;

read_end
	: AT! END sentencia_interna["END"]
	;
read_no_end
	: NOT AT! END sentencia_interna["NOT-END"]
	;

comando_write
	: WRITE^ campo FROM! IDENT (options {greedy=true;}:END_WRITE!)?
	;

comando_display
	: DISPLAY^ (campo|literal)+ (display_upon)? (display_with)?
	;
display_upon
	: UPON^ IDENT
	;
display_with
	: (WITH!)? NO ADVANCING!
	;
	
comando_sort
	: SORT IDENT (ON!)? (ASCENDING|DESCENDING) (KEY!) IDENT
	  ( (WITH!) DUPLICATES (IN!) (ORDER!)? )?
	  ( (COLLATING!)? SEQUENCE IDENT)?
	  (  (USING IDENT)
	    |(INPUT PROCEDURE! IDENT ((THRU|THROUGH) IDENT)?)
	  )
	  (  (GIVING IDENT)
	    |(OUTPUT PROCEDURE! IDENT ((THRU|THROUGH) IDENT)?)
	  )
	  ;
	
literal
	: NUM
	| CADENA
	| cero
	| SPACE
	| SPACES
	| LIT_HEXADECIMAL
	| NULL
	| LENGTH^ {##.setType(LENGTHOF);} OF! campo
	;
cero
	: ZERO
	| ZEROS
	| ZEROES
	;
	

campo 
	: in_of	( options {greedy=true;}:modif_campo)*
	;

in_of 
	: IDENT ( options {greedy=true;}:( IN!|OF!) IDENT^)*
	;
	
modif_campo  
	: (PAR_AB expresionSuma DOSPUNTOS) => PAR_AB! expresionSuma DOSPUNTOS!  
										  (expresionSuma)?PAR_CE!
	                                      {##= #( #[MOD_TEXTO,"MOD_TEXTO"],##)}
	| PAR_AB! listaAritmetica PAR_CE!
	 {##= #( #[INDICE,"INDICE"],##)}
	;
	
punto_fin!
	: FIN_TODO
	;






From Jeff.Barnes at codesic.com  Wed May 10 11:09:26 2006
From: Jeff.Barnes at codesic.com (Jeff Barnes)
Date: Wed May 10 11:07:05 2006
Subject: [antlr-interest] executing actions during backtrack
References: <20060510042257.8908.qmail@web54504.mail.yahoo.com>
	<5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com>
Message-ID: <FC6B2BF8B2FE854EAE0C380E55CA5734119DE2@HQ-APP2.CODESIC.COM>

> What would you checkpoint then, the entire heap & stack? Somehow the 
> user needs to tell you what is going to be changed as you can't find 
> it out from looking at the code, at least not generally (Turing 
> anyone?) and certainly not easily in imperative languages. You can't 
> generate a checkpoint without either knowing what to save or copying 
> the whole machine. 
 
 
We're still talking DFA's right? Depending on whether the DFA is state-centric or transition-centric, you would put the Command stucturally in a State or Transition... Just thinking out loud here.
 
I think the size of the serialization 'file' should be configurable on startup. A circular log would prevent runaway log size. If the user had a really large walk from node to node before a confirmed match, they would have to make sure the log file size was configured large enough.
 
Jeff
From wyang at alk.com  Wed May 10 14:20:54 2006
From: wyang at alk.com (Winston Yang)
Date: Wed May 10 14:21:05 2006
Subject: [antlr-interest] translating C++ to Java
Message-ID: <001401c67477$9f2721f0$490a15ac@alk.domain>

Is there a program that translates (not necessarily perfectly) C++ to Java?
 
Winston
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060510/c9259e7c/attachment.html
From Ivo.Spaleny at bsp.cz  Wed May 10 14:54:46 2006
From: Ivo.Spaleny at bsp.cz (=?iso-8859-2?B?U3DhbGVu/SBJdm8=?=)
Date: Wed May 10 14:54:50 2006
Subject: [antlr-interest] Multi-level format parsing
Message-ID: <A0C698600C277342A6A369521C1895C3081EAE@pssserver.bsp.cz>

Hi,

 

How can I create a grammar for multi-level parsing in ANTLR?

 

For an example - encoded literal, quote escaped. I need to read and parse code in its value too.

 

CodeParam = "Var2 = ""text"""

 

where CodeParam includes another code:

 

Var = "text"

 

So the resulting tree is something like this:

(to avoid semigraphics experiments, I used XML-like tree)

 

<nodes>

=

<leftchild>

            CodeParam

</leftchild>

<rightchild>

            EncodedString

<leftchild>

=

<leftchild>

            Var

</leftchild>

<rightchild>

            "text"

</rightchild>

</leftchild>

</rightchild>

</nodes>

 

I can define a grammar rule:

 

stmt_assign : LITERAL EQU QUOTEDLITERAL ;

 

And later, after 1st level parsing, I remove quotes from QUOTEDLITERAL and parse it again. 

 

But I would like to add this code directly to ANTLR grammar.  

 

Thank you for any suggestions,

 

Ivo Spaleny

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060510/1763be85/attachment.html
From craymer at warpiv.com  Wed May 10 18:56:15 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Wed May 10 18:56:19 2006
Subject: [antlr-interest] Multi-level format parsing
In-Reply-To: <A0C698600C277342A6A369521C1895C3081EAE@pssserver.bsp.cz>
Message-ID: <002901c6749e$17713df0$6402a8c0@Fafnir>

My impression is that what you are describing is not a multi-level grammar,
but more a problem with differentiating levels of quoting.  If you identify
start and end quotes by

 

{ int quoteLevel = 0; }

QUOTE 

{ int temp = 0; }

:

 ( ???  { temp++; } )+

{           if (temp == quoteLevel)

                        $setType(END_QUOTE);

            else if (temp == quoteLevel + 1)

                        quoteLevel++;

            else

                        // error!!!

}

;

/* END_QUOTE is defined in the ?tokens? section */

And the parser recognizes

 

quoted_expr :

            QUOTE expr END_QUOTE

            ;

 

Then you don?t have to worry about stripping quotes and repeating the lex
and parse steps.  It gets a bit messier if you recognize different tokens
inside of quotes than you do outside, but not more difficult.

 

--Loring

 

  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Sp?len? Ivo
Sent: Wednesday, May 10, 2006 2:55 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Multi-level format parsing

 

Hi,

 

How can I create a grammar for multi-level parsing in ANTLR?

 

For an example ? encoded literal, quote escaped. I need to read and parse
code in its value too.

 

CodeParam = "Var2 = ""text"""

 

where CodeParam includes another code:

 

Var = "text"

 

So the resulting tree is something like this:

(to avoid semigraphics experiments, I used XML-like tree)

 

<nodes>

=

<leftchild>

            CodeParam

</leftchild>

<rightchild>

            EncodedString

<leftchild>

=

<leftchild>

            Var

</leftchild>

<rightchild>

            ?text?

</rightchild>

</leftchild>

</rightchild>

</nodes>

 

I can define a grammar rule:

 

stmt_assign : LITERAL EQU QUOTEDLITERAL ;

 

And later, after 1st level parsing, I remove quotes from QUOTEDLITERAL and
parse it again. 

 

But I would like to add this code directly to ANTLR grammar.  

 

Thank you for any suggestions,

 

Ivo Spaleny

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060510/ef5008b4/attachment-0001.html
From mail at martin-probst.com  Wed May 10 23:50:44 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May 10 23:50:49 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <FC6B2BF8B2FE854EAE0C380E55CA5734119DE2@HQ-APP2.CODESIC.COM>
References: <20060510042257.8908.qmail@web54504.mail.yahoo.com>
	<5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com>
	<FC6B2BF8B2FE854EAE0C380E55CA5734119DE2@HQ-APP2.CODESIC.COM>
Message-ID: <8ACC13BF-F6E0-43C8-A342-8CB58CF8A90A@martin-probst.com>

Hi,

> We're still talking DFA's right? Depending on whether the DFA is  
> state-centric or transition-centric, you would put the Command  
> stucturally in a State or Transition... Just thinking out loud here.

Well yes, but we're talking about saving arbitrary user data, or not?

> I think the size of the serialization 'file' should be configurable  
> on startup. A circular log would prevent runaway log size. If the  
> user had a really large walk from node to node before a confirmed  
> match, they would have to make sure the log file size was  
> configured large enough.

Sorry, but that sounds a lot like implementing a database, but at all  
like implementing a parser generator, at least to me. And you didn't  
even start about all the concurrency issues with the log ;-)

Martin
From mail at martin-probst.com  Wed May 10 23:55:42 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May 10 23:55:48 2006
Subject: [antlr-interest] Multi-level format parsing
In-Reply-To: <A0C698600C277342A6A369521C1895C3081EAE@pssserver.bsp.cz>
References: <A0C698600C277342A6A369521C1895C3081EAE@pssserver.bsp.cz>
Message-ID: <5960FD76-D245-4823-A5D9-C4AF8D2C9741@martin-probst.com>

Hi,
> stmt_assign : LITERAL EQU QUOTEDLITERAL ;
>
> And later, after 1st level parsing, I remove quotes from  
> QUOTEDLITERAL and parse it again.
>
> But I would like to add this code directly to ANTLR grammar.
Does every literal contain executable code? How do you detect if it's  
supposed to contain code?

You could probably do something with nested parsers and lexers, but  
maybe you could also employ some sort of hack with lexer states, so  
like if the literal before the EQU was "CodeParam" then ignore the  
quotes and parse the code directly.

An important question is maybe also how you want to disambiguate between
CodeParam = "Var2 = ""text"""
and
CodeParam = Var2 = ""text""

Martin
From henryb at ntlworld.com  Thu May 11 05:03:38 2006
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu May 11 05:03:41 2006
Subject: [antlr-interest] Bash Grammer
Message-ID: <4463281A.10305@ntlworld.com>

Hi Guys,
Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
Could be an interesting project ?

Regards Henry

From akiskal at hol.gr  Thu May 11 05:21:59 2006
From: akiskal at hol.gr (Vaios Kalpias)
Date: Thu May 11 05:22:06 2006
Subject: [antlr-interest] Java - adding new keyword question
Message-ID: <44632C67.3030407@hol.gr>

Hi everybody.

I am creating a preprocessor of .java files, that makes use of a new 
custom keyword named  /level/. Let me demonstrate an example of its use:

level(1) class BeyondClass
{  
//
//
}

In this case the preprocessor will transform the above code into

class BeyondClass_level1
{
    //
    //
 }

The idea behind level is to have different classes and methods grouped 
in a number of different levels.. So for example we could have

level(1)
{
    class Class1    //(the preprocessor will name this Class1_level1
    {  
        //
        //
    }
    class Class2   //(the preprocessor will name this Class2_level1
    {  
        //
        //
    }
}

The preprocessor will then take this code, create an ast of the java 
grammar (where a LEVEL_DEF node will have these classes as its children) 
and then output working code using the JavaEmitter class. Another use of 
/level/ is this:

class BeyondMethod {
   
        level(1) {
            public void foo() {
                //...
            }
        }
       
        level(2) {
            public void foo() {
                //...
            }
        }
       
        // 0 all the rest
        level(0) {
            public void foo() {
                //...
            }
        }
       
}

which will be transformed into

class BeyondMethod_Mutative {
   
    public void foo_level1() {
        //...
    }

    public void foo_level2() {
        //...
    }
    public void foo_level0() {
        //...
    }
}

Now to my questions. Using the java 1.5 grammar found in the public 
domain, I'm thinking about changing the typeDefinitionInternal rule to:

protected typeDefinitionInternal[AST mods]
    :    classDefinition[#mods]        // inner class
    |    interfaceDefinition[#mods]    // inner interface
    |    enumDefinition[#mods]        // inner enum
    |    annotationDefinition[#mods]    // inner annotation
    |    levelDefinition[#mods]        // inner level definition (add 
this code here)
    ;

levelDefinition should be something like this:
// Definition of a mutative level
levelDefinition![AST modifiers]
    :    "level"
        // level parameter
        lp:levelParameters
        (
            // it _might_ define a class
            cd:classDefinition[modifiers]
        |
            // now parse the body of the level
            lb:levelBlock
        )
        {#levelDefinition = #(#[LEVEL_DEF,"LEVEL_DEF"],
                                lp,cd,lb);}
    ;

and I think that levelBlock will be the same as classBlock... My problem 
is that I'm not sure if this is the right approach and also that since I 
made thiese changes, whenever I  parse a .java file I get an error like 
this: Unexpected AST node : X
I noticed that no matter if I use level in the file to be parsed, this 
error always comes up with X being the first node in the ast...

Any feedback would be greatly appreciated! Thank you



From mail at martin-probst.com  Thu May 11 06:55:46 2006
From: mail at martin-probst.com (Martin Probst)
Date: Thu May 11 06:55:52 2006
Subject: [antlr-interest] Bash Grammer
In-Reply-To: <4463281A.10305@ntlworld.com>
References: <4463281A.10305@ntlworld.com>
Message-ID: <AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>

Hi,

I've not heard of one and there is none on the ANTLR grammar page.  
However I would think that this might be the most horrible language  
to parse on earth. There is nothing as inconsequent, ambiguous and  
plain senseless as the standard "sh" language. I would really pity  
anyone having to write a grammar for that.

Martin

Am 11.05.2006 um 14:03 schrieb Henry Butowsky:

> Hi Guys,
> Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
> Could be an interesting project ?
>
> Regards Henry
>
>

From sohail at taggedtype.net  Thu May 11 07:30:04 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu May 11 07:30:13 2006
Subject: [antlr-interest] Bash Grammer
In-Reply-To: <AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>
References: <4463281A.10305@ntlworld.com>
	<AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>
Message-ID: <1147357804.10979.0.camel@localhost.localdomain>

Phew, I thought I was the only one :)

On Thu, 2006-05-11 at 15:55 +0200, Martin Probst wrote:
> Hi,
> 
> I've not heard of one and there is none on the ANTLR grammar page.  
> However I would think that this might be the most horrible language  
> to parse on earth. There is nothing as inconsequent, ambiguous and  
> plain senseless as the standard "sh" language. I would really pity  
> anyone having to write a grammar for that.
> 
> Martin
> 
> Am 11.05.2006 um 14:03 schrieb Henry Butowsky:
> 
> > Hi Guys,
> > Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
> > Could be an interesting project ?
> >
> > Regards Henry
> >
> >
> 

From antlr at jazillian.com  Thu May 11 07:53:30 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu May 11 07:53:39 2006
Subject: [antlr-interest] Bash Grammer
In-Reply-To: <1147357804.10979.0.camel@localhost.localdomain>
References: <4463281A.10305@ntlworld.com>	<AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>
	<1147357804.10979.0.camel@localhost.localdomain>
Message-ID: <44634FEA.3050404@jazillian.com>

A quick google for "shell grammar parser" lead to this...
http://compilers.iecc.com/comparch/article/05-10-058

...which leads to a mention of a bash-like shell called 'rc', part of 
plan9, which has
a grammar written in yacc:
http://plan9.bell-labs.com/sys/doc/rc.pdf

...and plan9 source seems to be available under an OSI-approved license:
http://plan9.bell-labs.com/plan9/download.html

How did we ever find anything before google? :)
Andy

Sohail Somani wrote:

>Phew, I thought I was the only one :)
>
>On Thu, 2006-05-11 at 15:55 +0200, Martin Probst wrote:
>  
>
>>Hi,
>>
>>I've not heard of one and there is none on the ANTLR grammar page.  
>>However I would think that this might be the most horrible language  
>>to parse on earth. There is nothing as inconsequent, ambiguous and  
>>plain senseless as the standard "sh" language. I would really pity  
>>anyone having to write a grammar for that.
>>
>>Martin
>>
>>Am 11.05.2006 um 14:03 schrieb Henry Butowsky:
>>
>>    
>>
>>>Hi Guys,
>>>Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
>>>Could be an interesting project ?
>>>
>>>Regards Henry
>>>
>>>
>>>      
>>>
>
>  
>

From david.crosson at wanadoo.fr  Thu May 11 09:15:36 2006
From: david.crosson at wanadoo.fr (David CROSSON)
Date: Thu May 11 09:15:40 2006
Subject: [antlr-interest] antlr3, no class such as ANTLRInputStream...
Message-ID: <20991616.1147364136168.JavaMail.www@wwinf1514>

Hello,

  why not adding a new class to ANTLR3 in order to help
using any kind of input stream.
I'd like to be able to write such java code :

InputStream is = new GZIPInputStream(new FileInputStream(file));
CharStream in = new ANTLRInputStream(is);
Lexer lexer = new BeaStackDumpParserLexer(in);
CommonTokenStream tokens = new CommonTokenStream(lexer);
Parser parser = new MyParser(tokens);
...

I was also wondering why the ANTLRFileStream class, which is a CharStream,
doesn't take a charset parameter ?

Best Regards,
David.

From parrt at cs.usfca.edu  Thu May 11 10:16:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 11 10:16:21 2006
Subject: [antlr-interest] antlr3, no class such as ANTLRInputStream...
In-Reply-To: <20991616.1147364136168.JavaMail.www@wwinf1514>
References: <20991616.1147364136168.JavaMail.www@wwinf1514>
Message-ID: <3A7D11DA-552E-4B82-B141-6F1F0DCA477C@cs.usfca.edu>

On May 11, 2006, at 9:15 AM, David CROSSON wrote:

> Hello,
>
>   why not adding a new class to ANTLR3 in order to help
> using any kind of input stream.
> I'd like to be able to write such java code :
>
> InputStream is = new GZIPInputStream(new FileInputStream(file));
> CharStream in = new ANTLRInputStream(is);
> Lexer lexer = new BeaStackDumpParserLexer(in);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> Parser parser = new MyParser(tokens);
> ...
>
> I was also wondering why the ANTLRFileStream class, which is a  
> CharStream,
> doesn't take a charset parameter ?

I forgot about encodings... sorry.  Also, thank you for the  
suggestions on the input streams...we do need that.  One for Reader  
too, right?

Ter
From mail at martin-probst.com  Thu May 11 10:34:02 2006
From: mail at martin-probst.com (Martin Probst)
Date: Thu May 11 10:34:13 2006
Subject: [antlr-interest] antlr3, no class such as ANTLRInputStream...
In-Reply-To: <3A7D11DA-552E-4B82-B141-6F1F0DCA477C@cs.usfca.edu>
References: <20991616.1147364136168.JavaMail.www@wwinf1514>
	<3A7D11DA-552E-4B82-B141-6F1F0DCA477C@cs.usfca.edu>
Message-ID: <F94424C0-B972-44E5-9B70-2F9B4024CE81@martin-probst.com>

Hello,

> I forgot about encodings... sorry.  Also, thank you for the  
> suggestions on the input streams...we do need that.  One for Reader  
> too, right?

Yes, and please do not forget about encodings this time. People who  
write funky chars like ? on a daily basis will thank you :-)

Martin

From parrt at cs.usfca.edu  Thu May 11 10:42:18 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 11 10:42:20 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <000f01c6740e$2b5283f0$6402a8c0@Fafnir>
References: <000f01c6740e$2b5283f0$6402a8c0@Fafnir>
Message-ID: <2EF93234-59E6-4146-AF90-D2A7E923424A@cs.usfca.edu>


On May 10, 2006, at 1:46 AM, Loring Craymer wrote:

> This is really one of those situations where building a solution  
> into ANTLR
> is probably a mistake: simplicity is a virtue.  As a user, you can  
> always do
> something like
>
> { saveState(); } (synpred) => <grammar fragment>
> | { recover(); } <alt fragment>
>
>
> if you ever encounter a situation where a rollback is really  
> needed.  I've
> never seen a case where that was true, although I have done the  
> "wouldn't it
> be nice" thinking.  Like everyone else, I sometimes try to provide  
> solutions
> to non-problems and regret it later.
>
> Does anyone out there have an example that justifies the  
> implementation
> effort?  That would probably be good to know before Ter does the work.

Yep, coming to the conclusion that it's only symbol table stuff that  
needs to go in and that naturally unrolls itself...IF actions are  
executed.  Currently there is no way to specify that an action must  
execute even when backtracking.  That we still need a suggestion  
for.  I almost wonder if it's a global flag like "always exec  
actions" and then if you need a few not-executed, you can manually  
gate with "if ( !guessing )".

Hmm....

Ter

From Jeff.Barnes at codesic.com  Thu May 11 12:13:03 2006
From: Jeff.Barnes at codesic.com (Jeff Barnes)
Date: Thu May 11 12:10:41 2006
Subject: [antlr-interest] executing actions during backtrack
References: <20060510042257.8908.qmail@web54504.mail.yahoo.com>
	<5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com>
	<FC6B2BF8B2FE854EAE0C380E55CA5734119DE2@HQ-APP2.CODESIC.COM>
	<8ACC13BF-F6E0-43C8-A342-8CB58CF8A90A@martin-probst.com>
Message-ID: <FC6B2BF8B2FE854EAE0C380E55CA5734119DE7@HQ-APP2.CODESIC.COM>

Martin sez:

Sorry, but that sounds a lot like implementing a database, but at all 
like implementing a parser generator, at least to me. And you didn't 
even start about all the concurrency issues with the log ;-)
 
Jeff sez:
Sounds like an undo stack to me. Yeah, some databases do it that way, Oracle in particular. But the GOF patterns (Command and Memento) are more general than that. 
 
The technical problem with this and the new ground that Ter is breaking, as I understand, is having a DFA-based LL(*) parser. Even more expressive and therefore difficult would be to implement NFA with an undo stack.
 
Just curious, why would there be concurrency issues? The issue to me would be solved at the same time as a concurrency issue with a shared input stream.
 
Regards,
Jeff

From parrt at cs.usfca.edu  Thu May 11 14:56:18 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 11 14:56:23 2006
Subject: [antlr-interest] antlr predicates versus parser expression grammars
Message-ID: <FBB5CB4A-F5FC-44CE-8C78-41DEFB800B07@cs.usfca.edu>

Added a blog entry:

http://www.antlr.org/blog/antlr3/lookahead.tml

Ter
From craymer at warpiv.com  Thu May 11 15:48:22 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Thu May 11 15:48:26 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <2EF93234-59E6-4146-AF90-D2A7E923424A@cs.usfca.edu>
Message-ID: <003a01c6754d$01cab030$6402a8c0@Fafnir>

Ter--

I like it.  The flag approach has minimal implementation cost, allows
dynamic accumulation of semantics (need actions to compute semantics) in
multi-pass translators, yet allows one-pass processing for friendly
grammars.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Thursday, May 11, 2006 10:42 AM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] executing actions during backtrack
> 
> 
> On May 10, 2006, at 1:46 AM, Loring Craymer wrote:
> 
> > This is really one of those situations where building a solution
> > into ANTLR
> > is probably a mistake: simplicity is a virtue.  As a user, you can
> > always do
> > something like
> >
> > { saveState(); } (synpred) => <grammar fragment>
> > | { recover(); } <alt fragment>
> >
> >
> > if you ever encounter a situation where a rollback is really
> > needed.  I've
> > never seen a case where that was true, although I have done the
> > "wouldn't it
> > be nice" thinking.  Like everyone else, I sometimes try to provide
> > solutions
> > to non-problems and regret it later.
> >
> > Does anyone out there have an example that justifies the
> > implementation
> > effort?  That would probably be good to know before Ter does the work.
> 
> Yep, coming to the conclusion that it's only symbol table stuff that
> needs to go in and that naturally unrolls itself...IF actions are
> executed.  Currently there is no way to specify that an action must
> execute even when backtracking.  That we still need a suggestion
> for.  I almost wonder if it's a global flag like "always exec
> actions" and then if you need a few not-executed, you can manually
> gate with "if ( !guessing )".
> 
> Hmm....
> 
> Ter


From open.zone at virgin.net  Thu May 11 17:11:28 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu May 11 16:53:58 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <2EF93234-59E6-4146-AF90-D2A7E923424A@cs.usfca.edu>
Message-ID: <002201c67558$9e8d73c0$c704a8c0@hercules>

> Currently there is no way to specify that an action must  
> execute even when backtracking.  That we still need a suggestion  
> for.  I almost wonder if it's a global flag like "always exec  
> actions" and then if you need a few not-executed, you can manually  
> gate with "if ( !guessing )".

As per my previous message: 

- Can backtracking still be nested?

- Can an action block execute multiple times due to [possibly nested]
backtracking?


Micheal

From sohail at taggedtype.net  Thu May 11 07:30:04 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu May 11 18:24:22 2006
Subject: [antlr-interest] Bash Grammer
In-Reply-To: <AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>
References: <4463281A.10305@ntlworld.com>
	<AA945EFB-6386-41D3-B8C1-9F3FBDBB4DA5@martin-probst.com>
Message-ID: <1147357804.10979.0.camel@localhost.localdomain>

Phew, I thought I was the only one :)

On Thu, 2006-05-11 at 15:55 +0200, Martin Probst wrote:
> Hi,
> 
> I've not heard of one and there is none on the ANTLR grammar page.  
> However I would think that this might be the most horrible language  
> to parse on earth. There is nothing as inconsequent, ambiguous and  
> plain senseless as the standard "sh" language. I would really pity  
> anyone having to write a grammar for that.
> 
> Martin
> 
> Am 11.05.2006 um 14:03 schrieb Henry Butowsky:
> 
> > Hi Guys,
> > Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
> > Could be an interesting project ?
> >
> > Regards Henry
> >
> >
> 

From parrt at cs.usfca.edu  Thu May 11 18:43:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 11 18:43:43 2006
Subject: [antlr-interest] executing actions during backtrack
In-Reply-To: <002201c67558$9e8d73c0$c704a8c0@hercules>
References: <002201c67558$9e8d73c0$c704a8c0@hercules>
Message-ID: <477F6B27-30D7-4940-9984-9D62BDFF8FA1@cs.usfca.edu>


On May 11, 2006, at 5:11 PM, Micheal J wrote:

>> Currently there is no way to specify that an action must
>> execute even when backtracking.  That we still need a suggestion
>> for.  I almost wonder if it's a global flag like "always exec
>> actions" and then if you need a few not-executed, you can manually
>> gate with "if ( !guessing )".
>
> As per my previous message:
>
> - Can backtracking still be nested?

Sure.

> - Can an action block execute multiple times due to [possibly nested]
> backtracking?

Yes, but not for the same input position.  The same rule can only  
parse once for any giving input position no matter how deep the nesting.

Ter
From craymer at warpiv.com  Thu May 11 21:47:19 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Thu May 11 21:47:24 2006
Subject: [antlr-interest] Bash Grammer
In-Reply-To: <1147357804.10979.0.camel@localhost.localdomain>
Message-ID: <003e01c6757f$27aca4c0$6402a8c0@Fafnir>

Given that there is a yacc grammar in the GNU bash distro, the easiest
approach is probably to write a yacc-to-antlr BNF translator (easier than
editing a 4 KLOC .y file) and go from there.

>From the level of opposition to the idea, I would tend to believe that there
is a fortune to be made from developing a bash grammar and translator.  I
don't see it--a perl translator seems more likely to be viable--but that
could be me.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Sohail Somani
> Sent: Thursday, May 11, 2006 7:30 AM
> To: Martin Probst
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Bash Grammer
> 
> Phew, I thought I was the only one :)
> 
> On Thu, 2006-05-11 at 15:55 +0200, Martin Probst wrote:
> > Hi,
> >
> > I've not heard of one and there is none on the ANTLR grammar page.
> > However I would think that this might be the most horrible language
> > to parse on earth. There is nothing as inconsequent, ambiguous and
> > plain senseless as the standard "sh" language. I would really pity
> > anyone having to write a grammar for that.
> >
> > Martin
> >
> > Am 11.05.2006 um 14:03 schrieb Henry Butowsky:
> >
> > > Hi Guys,
> > > Out of interst has anybody done a bash (sh)  grammer with  ANTLR --
> > > Could be an interesting project ?
> > >
> > > Regards Henry
> > >
> > >
> >


From kroepke at dolphin-services.de  Fri May 12 00:38:17 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri May 12 00:38:25 2006
Subject: [antlr-interest] antlr3, no class such as ANTLRInputStream...
In-Reply-To: <F94424C0-B972-44E5-9B70-2F9B4024CE81@martin-probst.com>
References: <20991616.1147364136168.JavaMail.www@wwinf1514>
	<3A7D11DA-552E-4B82-B141-6F1F0DCA477C@cs.usfca.edu>
	<F94424C0-B972-44E5-9B70-2F9B4024CE81@martin-probst.com>
Message-ID: <72A5A449-CA42-4906-9FB3-8F4F8C842C1A@dolphin-services.de>


On 11. May 2006, at 19:34 Uhr, Martin Probst wrote:

> Yes, and please do not forget about encodings this time. People who  
> write funky chars like ? on a daily basis will thank you :-)

Th?se pe?ple will be the first ?n the w?ll when the rev?l?ti?n  
c?mes...;)

BTW, to get on topic again, how does Java (= the library) deal with  
encodings? Is that something that's built in, or does one have to
hack around a lot?

-k

From mail at martin-probst.com  Fri May 12 00:42:23 2006
From: mail at martin-probst.com (Martin Probst)
Date: Fri May 12 00:42:38 2006
Subject: [antlr-interest] antlr3, no class such as ANTLRInputStream...
In-Reply-To: <72A5A449-CA42-4906-9FB3-8F4F8C842C1A@dolphin-services.de>
References: <20991616.1147364136168.JavaMail.www@wwinf1514>
	<3A7D11DA-552E-4B82-B141-6F1F0DCA477C@cs.usfca.edu>
	<F94424C0-B972-44E5-9B70-2F9B4024CE81@martin-probst.com>
	<72A5A449-CA42-4906-9FB3-8F4F8C842C1A@dolphin-services.de>
Message-ID: <D80C59AD-E874-4924-BF6A-F185896F9ACC@martin-probst.com>

Hi,

> BTW, to get on topic again, how does Java (= the library) deal with  
> encodings? Is that something that's built in, or does one have to
> hack around a lot?

Actually, it's built in in a way that makes it a real pain not to  
handle it, normally. In Java you have InputStreams for binary and  
Readers for characters. You can only create a Reader from an  
InputStream by specifying the charset (well, or leaving it to take  
the platform default).

My general impression is that those encoding issues are a much bigger  
problem on Windows than on any other platform, with Cp1252, UTF-8,  
UCS-2 etc. mixed heavily. Most Linux systems I've seen simply use  
UTF-8 or ASCII (for old systems).

Martin
From jose.ventura.roda at gmail.com  Fri May 12 02:34:06 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Fri May 12 02:34:08 2006
Subject: [antlr-interest] unexpected char: 0xAC
Message-ID: <e39abda10605120234o1bf69007u6888779eb372e4ac@mail.gmail.com>

Hi,

I don't know to put the character 0xAC in the charVocabulary.

The sentence of my lexer is: "charVocabulary = '\0'..'\377' | '\u2018' |
'\u0153' | '\u00AC'; "

How do I must to make?.

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060512/fe29d79c/attachment.html
From jimi at temporal-wave.com  Fri May 12 08:04:46 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri May 12 08:04:50 2006
Subject: [antlr-interest] executing actions during backtrack
References: <20060510042257.8908.qmail@web54504.mail.yahoo.com><5D764587-E0AC-449E-A431-B41683224A82@martin-probst.com><FC6B2BF8B2FE854EAE0C380E55CA5734119DE2@HQ-APP2.CODESIC.COM>
	<8ACC13BF-F6E0-43C8-A342-8CB58CF8A90A@martin-probst.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A5E5@wavemachine.temporal-wave.com>

Having written database for a living for quite a bit of my life I find myself nodding my head in furious agreement at Martin's comments. To implement such a thing would be more work than the parser generator itself. 
 
My vote would be not to go there at all and perhaps come up with a few grammar examples that show how to go about dealing with such a situation.
 
If we are not talking about arbtrary variables, structure and state in mutliple structures in mutliple target languages but something much simpler, then it woudl seem just simplest of all for the grammar programmar to deal with it in context to me.
 
Jim

 
________________________________

From: antlr-interest-bounces@antlr.org on behalf of Martin Probst
Sent: Thu 5/11/2006 8:50 AM
To: Jeff Barnes
Cc: ANTLR Interest
Subject: Re: [antlr-interest] executing actions during backtrack



Hi,

> We're still talking DFA's right? Depending on whether the DFA is 
> state-centric or transition-centric, you would put the Command 
> stucturally in a State or Transition... Just thinking out loud here.

Well yes, but we're talking about saving arbitrary user data, or not?

> I think the size of the serialization 'file' should be configurable 
> on startup. A circular log would prevent runaway log size. If the 
> user had a really large walk from node to node before a confirmed 
> match, they would have to make sure the log file size was 
> configured large enough.

Sorry, but that sounds a lot like implementing a database, but at all 
like implementing a parser generator, at least to me. And you didn't 
even start about all the concurrency issues with the log ;-)

Martin


From antlr at jazillian.com  Fri May 12 09:07:53 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Fri May 12 09:07:56 2006
Subject: [antlr-interest] translating C++ to Java
In-Reply-To: <001401c67477$9f2721f0$490a15ac@alk.domain>
References: <001401c67477$9f2721f0$490a15ac@alk.domain>
Message-ID: <4464B2D9.6020705@jazillian.com>

Winston Yang wrote:

> Is there a program that translates (not necessarily perfectly) C++ to 
> Java?
>  
> Winston

My company, Jazillian (http://www.jazillian.com) makes a (not 
necessarily perfectly)
C-to-Java product/service. We'll be announcing a COBOL-to-Java product 
at next
week's JavaOne show, and we're currently working on C++-to-Java.

Andy

From matthew at mastracci.com  Fri May 12 12:59:37 2006
From: matthew at mastracci.com (Matthew Mastracci)
Date: Fri May 12 13:10:12 2006
Subject: [antlr-interest] Runtime rule multiplicity
Message-ID: <e42pfe$23q$1@sea.gmane.org>

Is it possible in ANTLR3 to generate rules that have a multiplicity
determined at runtime?  For instance, in a grammer where parameters and
functions are somewhat ambiguous (ie: not delimited in any way), you may
have something like this:

func1 1 func2 2

At run-time, it would be determined that func1 has two parameters: "1"
and "func2 2".  For another run it might be determined that func1 has
three parameters and func2 has none.

So far, it looks like the only solution to this problem is to run the
lexer to get a list of tokens and generate a hand-rolled parser to
process it.

After reading through the ANTLR blogs, I suppose it might also be 
possible to use a gated semantic predicate to  continue the rule iff 
there are remaining parameters, or the optional subrules stuff, but I'm 
not entirely sure what the syntax of these would look like.  Are there 
any examples?

Any suggestions? I'd like to use ANTLR for both the parser and the 
lexer, if possible.

Matt.

From wyang at alk.com  Fri May 12 13:45:45 2006
From: wyang at alk.com (Winston Yang)
Date: Fri May 12 13:45:55 2006
Subject: [antlr-interest] RE: antlr-interest Digest, Vol 18, Issue 19
In-Reply-To: <20060512190003.0D262DCF00@www.antlr.org>
Message-ID: <001601c67605$0ae03e20$490a15ac@alk.domain>

Andy,

Thank you.

Winston 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of
antlr-interest-request@antlr.org
Sent: Friday, May 12, 2006 3:00 PM
To: antlr-interest@antlr.org
Subject: antlr-interest Digest, Vol 18, Issue 19

Send antlr-interest mailing list submissions to
	antlr-interest@antlr.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://www.antlr.org/mailman/listinfo/antlr-interest
or, via email, send a message with subject or body 'help' to
	antlr-interest-request@antlr.org

You can reach the person managing the list at
	antlr-interest-owner@antlr.org

When replying, please edit your Subject line so it is more specific than
"Re: Contents of antlr-interest digest..."


Today's Topics:

   1. Re: translating C++ to Java (Andy Tripp)


----------------------------------------------------------------------

Message: 1
Date: Fri, 12 May 2006 12:07:53 -0400
From: Andy Tripp <antlr@jazillian.com>
Subject: Re: [antlr-interest] translating C++ to Java
Cc: antlr-interest@antlr.org
Message-ID: <4464B2D9.6020705@jazillian.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed

Winston Yang wrote:

> Is there a program that translates (not necessarily perfectly) C++ to 
> Java?
>  
> Winston

My company, Jazillian (http://www.jazillian.com) makes a (not necessarily
perfectly) C-to-Java product/service. We'll be announcing a COBOL-to-Java
product at next week's JavaOne show, and we're currently working on
C++-to-Java.

Andy



------------------------------

_______________________________________________
antlr-interest mailing list
antlr-interest@antlr.org
http://www.antlr.org/mailman/listinfo/antlr-interest


End of antlr-interest Digest, Vol 18, Issue 19
**********************************************


From parrt at cs.usfca.edu  Fri May 12 14:28:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri May 12 14:28:10 2006
Subject: [antlr-interest] Runtime rule multiplicity
In-Reply-To: <e42pfe$23q$1@sea.gmane.org>
References: <e42pfe$23q$1@sea.gmane.org>
Message-ID: <FFA6F56D-8595-4719-9D0E-DE0BE56C17BC@cs.usfca.edu>


On May 12, 2006, at 12:59 PM, Matthew Mastracci wrote:

> Is it possible in ANTLR3 to generate rules that have a multiplicity
> determined at runtime?  For instance, in a grammer where parameters  
> and
> functions are somewhat ambiguous (ie: not delimited in any way),  
> you may
> have something like this:
>
> func1 1 func2 2
>
> At run-time, it would be determined that func1 has two parameters: "1"
> and "func2 2".  For another run it might be determined that func1 has
> three parameters and func2 has none.

This is a highly context sensitive issue if you try to resolve with  
the parser. I.e., context-free grammars tend not to be so nice ;)   
You can use semantic predicates to look for only a certain number of  
parameters:

( {count<=max}?=> ID)?

I *think* that will work.

> So far, it looks like the only solution to this problem is to run the
> lexer to get a list of tokens and generate a hand-rolled parser to
> process it.
>
> After reading through the ANTLR blogs, I suppose it might also be  
> possible to use a gated semantic predicate to  continue the rule  
> iff there are remaining parameters, or the optional subrules stuff,  
> but I'm not entirely sure what the syntax of these would look  
> like.  Are there any examples?

The above might work. ;)

Ter
From matthew at mastracci.com  Fri May 12 15:54:57 2006
From: matthew at mastracci.com (Matthew Mastracci)
Date: Fri May 12 15:55:29 2006
Subject: [antlr-interest] Re: Runtime rule multiplicity
In-Reply-To: <FFA6F56D-8595-4719-9D0E-DE0BE56C17BC@cs.usfca.edu>
References: <e42pfe$23q$1@sea.gmane.org>
	<FFA6F56D-8595-4719-9D0E-DE0BE56C17BC@cs.usfca.edu>
Message-ID: <44651241.6050805@mastracci.com>

Terence Parr wrote:

> ( {count<=max}?=> ID)?

I guess once the rule parameters are implemented, this might work (I 
omitted nested function calls for brevity):

statement
         : ID <parameter(0, resolveParameterCount($ID.text))>;

parameter(int current, int max)
         : NUMBER ( {current < max}? => <parameter(current + 1, max)> );

In the meantime, I suppose it might be possible to use inline code to 
push and pop parameter counts on a member Stack and use them:

@members {
         Stack<int> current = new Stack<int>();
         Stack<int> max = new Stack<int>();
}

statement
         : ID { current.push(0); 
max.push(resolveParameterCount($ID.text)); }
                 parameter;

parameter
         : NUMBER ( {current.peek() < max.peek()}? => {
                  current.push(current.pop + 1); } parameter|statement );


From matthew at mastracci.com  Fri May 12 19:15:53 2006
From: matthew at mastracci.com (Matthew Mastracci)
Date: Fri May 12 19:16:18 2006
Subject: [antlr-interest] Re: Runtime rule multiplicity
In-Reply-To: <44651241.6050805@mastracci.com>
References: <e42pfe$23q$1@sea.gmane.org>	<FFA6F56D-8595-4719-9D0E-DE0BE56C17BC@cs.usfca.edu>
	<44651241.6050805@mastracci.com>
Message-ID: <e43fgr$pj1$1@sea.gmane.org>

I found something that works, but I think I might be running into a
minor bug in the state machine code.  This is the grammar I'm using - it
works for the two test cases I fed it, but the first case throws a
spurious NoViableAltException:

ID NUMBER NUMBER NUMBER ID NUMBER NUMBER NUMBER
and
ID NUMBER NUMBER ID NUMBER NUMBER NUMBER

parser grammar Test;

options {
	output=AST;
	ASTLabelType=CommonTree;
}

tokens { ID; NUMBER; }

@members {
         Stack<Integer> current = new Stack<Integer>();
         Stack<Integer> max = new Stack<Integer>();
       	
       	private int resolveArgumentCount(String name) {
       		return 3;
       	}
}

start
	: statement+;

statement
         : ID { current.push(0);
max.push(resolveArgumentCount($ID.text)); System.out.println("statement"); }
                 parameter
                 { System.out.println("statement done"); };

parameter
         : { System.out.println("parameter " + (current.peek() + 1) + "
of " + max.peek()); }
        	parameter_contents
        	( {current.peek() + 1 < max.peek()}? =>
         		{ current.push(current.pop() + 1); } parameter )?;

parameter_contents
	: NUMBER { System.out.println("number"); } | statement {
System.out.println("statement"); } ;

The only problem is that the parameter state machine seems to be
throwing a NoViableAltException in the case where the syntactic
predicate fails, rather than returning gracefully like I would have
expected.  I might be misunderstanding the generated parser a bit, but
it seems like it throwing an exception where it could just be doing
nothing via the empty alt2 case label.

The first two states make sense, but I think that

             if ( LA2_0==NUMBER && current.peek() + 1 < max.peek()) {
                 int LA2_1 = input.LA(2);
                 if ( current.peek() + 1 < max.peek() ) {
                     alt2=1;
                 }
                 else if ( current.peek() + 1 < max.peek() ) {
                     alt2=2;
                 }
                 else {
                     NoViableAltException nvae =
                         new NoViableAltException("36:9: ({...}? =>
parameter )?", 2, 1, input);

                     throw nvae;
                 }
             }
             else if ( LA2_0==ID && current.peek() + 1 < max.peek()) {
                 int LA2_2 = input.LA(2);
                 if ( current.peek() + 1 < max.peek() ) {
                     alt2=1;
                 }
                 else if ( true ) {
                     alt2=2;
                 }
                 else {
                     NoViableAltException nvae =
                         new NoViableAltException("36:9: ({...}? =>
parameter )?", 2, 2, input);

                     throw nvae;
                 }
             }
             else if ( LA2_0==-1 ) {
                 alt2=2;
             }
             else {
                 NoViableAltException nvae =
                     new NoViableAltException("36:9: ({...}? =>
parameter )?", 2, 0, input);

                 throw nvae;
             }

Shouldn't this state machine end in alt2=2 for all cases instead?

            if ( LA2_0==NUMBER && current.peek() + 1 < max.peek()) {
                 int LA2_1 = input.LA(2);
                 if ( current.peek() + 1 < max.peek() ) {
                     alt2=1;
                 }
                 else if ( current.peek() + 1 < max.peek() ) {
                     alt2=2;
                 }
                 else {
                     NoViableAltException nvae =
                         new NoViableAltException("36:9: ({...}? =>
parameter )?", 2, 1, input);

                     throw nvae;
                 }
             }
             else if ( LA2_0==ID && current.peek() + 1 < max.peek()) {
                 int LA2_2 = input.LA(2);
                 if ( current.peek() + 1 < max.peek() ) {
                     alt2=1;
                 }
                 else if ( true ) {
                     alt2=2;
                 }
                 else {
                     NoViableAltException nvae =
                         new NoViableAltException("36:9: ({...}? =>
parameter )?", 2, 2, input);

                     throw nvae;
                 }
             }
             else {
                 alt2=2;
             }


From avimalik at gmail.com  Sat May 13 04:24:06 2006
From: avimalik at gmail.com (Avinash Malik)
Date: Sat May 13 04:24:09 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
Message-ID: <c1cd9c970605130424x29a444fbi99145fe365bcb78@mail.gmail.com>

Hello,
       I was trying some examples in the examples-v3 I was trying out
this perticular example with, C- language I used the AntlrWorks to
actually verify the grammar but when It came to making the template
output this is what I get when I try to put the input through the
parser,

internal error:
org.antlr.runtime.debug.DebugParser.reportError(DebugParser.java:87):
java.net.BindException: Address already in use: JVM_Bind

What exactly is the problem here??

-- 
Avinash Malik
From vidar at hawkis.com  Sat May 13 04:31:37 2006
From: vidar at hawkis.com (Vidar =?iso-8859-1?q?H=E5kestad?=)
Date: Sat May 13 04:31:42 2006
Subject: [antlr-interest] Unexpected token (antlr 2.7.6)
Message-ID: <200605131331.37700.vidar@hawkis.com>

The Antlr compiler generates the error message:

line x:y: unexpected token: class

when I put a Java documentation in front of my lexer class definition in the 
grammar:

/**
 * Some description of the MyLexer
 */
class MyLexer extends Lexer;

I'm mostly using the plugin for Eclipse.
Do not experience this using the commend line tool, but that i version 2.7.5.

Anyone else experiencing the same?


Regards
Hawkis
From prashant.deva at gmail.com  Sat May 13 05:42:19 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sat May 13 05:42:24 2006
Subject: [antlr-interest] Unexpected token (antlr 2.7.6)
In-Reply-To: <200605131331.37700.vidar@hawkis.com>
References: <200605131331.37700.vidar@hawkis.com>
Message-ID: <41fed8f80605130542r37c50a78p3c597d23f07d7cc4@mail.gmail.com>

You can put javadoc style comments only at the begining of rules in an antlr
grammar.
For the rest, you gotta use the normal multi-line style comments.

You are getting an error message cause antlr was expecting a rule definition
after the javadoc comment.



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com

On 5/13/06, Vidar H?kestad <vidar@hawkis.com> wrote:
>
> The Antlr compiler generates the error message:
>
> line x:y: unexpected token: class
>
> when I put a Java documentation in front of my lexer class definition in
> the
> grammar:
>
> /**
> * Some description of the MyLexer
> */
> class MyLexer extends Lexer;
>
> I'm mostly using the plugin for Eclipse.
> Do not experience this using the commend line tool, but that i version
> 2.7.5.
>
> Anyone else experiencing the same?
>
>
> Regards
> Hawkis
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060513/932c2aa1/attachment.html
From parrt at cs.usfca.edu  Sat May 13 09:11:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 13 09:11:17 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
In-Reply-To: <c1cd9c970605130424x29a444fbi99145fe365bcb78@mail.gmail.com>
References: <c1cd9c970605130424x29a444fbi99145fe365bcb78@mail.gmail.com>
Message-ID: <F9A2A27D-32F6-4B86-B487-35B87AB09DD6@cs.usfca.edu>


On May 13, 2006, at 4:24 AM, Avinash Malik wrote:

> Hello,
>       I was trying some examples in the examples-v3 I was trying out
> this perticular example with, C- language I used the AntlrWorks to
> actually verify the grammar but when It came to making the template
> output this is what I get when I try to put the input through the
> parser,
>
> internal error:
> org.antlr.runtime.debug.DebugParser.reportError(DebugParser.java:87):
> java.net.BindException: Address already in use: JVM_Bind
>
> What exactly is the problem here??

You have multiple parsers running; the second is trying to open a  
server socket on the same port to communicate with AW.  Kill all  
running parsers and try again :)
Ter

From parrt at cs.usfca.edu  Sat May 13 10:45:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 13 10:45:14 2006
Subject: [antlr-interest] Re: Runtime rule multiplicity
In-Reply-To: <e43fgr$pj1$1@sea.gmane.org>
References: <e42pfe$23q$1@sea.gmane.org>	<FFA6F56D-8595-4719-9D0E-DE0BE56C17BC@cs.usfca.edu>
	<44651241.6050805@mastracci.com> <e43fgr$pj1$1@sea.gmane.org>
Message-ID: <39303B02-29F0-48D3-B560-AD67435A6F23@cs.usfca.edu>


On May 12, 2006, at 7:15 PM, Matthew Mastracci wrote:

> I found something that works, but I think I might be running into a
> minor bug in the state machine code.

There is a known bug in 3.0ea8, fixed in upcoming ea9, that causes  
predicates for cyclic DFAs to fail.  Want a tarball?

Ter

From avimalik at gmail.com  Sat May 13 16:03:28 2006
From: avimalik at gmail.com (Avinash Malik)
Date: Sat May 13 16:03:30 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
Message-ID: <c1cd9c970605131603m2573efaer3255e11eb21a5e29@mail.gmail.com>

Hello,
        I have set up an Eclipse project, which runs C-, and traslates
it using StringTemplates.
Earlier I used to get a JVM_Bind error by putting all the class files
into classes directory, I have overcome that error, but now when I run
Main.java it reaches parser statement and then just gets hung, I mean
how long is it supposed to take to parse such a small grammar.
What should I do--> Or is it that it does not work in Eclipse??

regards,

-- 
Avinash Malik
From kroepke at dolphin-services.de  Sat May 13 16:14:42 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat May 13 16:14:50 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
In-Reply-To: <c1cd9c970605131603m2573efaer3255e11eb21a5e29@mail.gmail.com>
References: <c1cd9c970605131603m2573efaer3255e11eb21a5e29@mail.gmail.com>
Message-ID: <D21721BB-F163-445E-8505-1570FBC03AF0@dolphin-services.de>


On 14. May 2006, at 1:03 Uhr, Avinash Malik wrote:

> Hello,
>        I have set up an Eclipse project, which runs C-, and traslates
> it using StringTemplates.
> Earlier I used to get a JVM_Bind error by putting all the class files
> into classes directory, I have overcome that error, but now when I run
> Main.java it reaches parser statement and then just gets hung, I mean
> how long is it supposed to take to parse such a small grammar.
> What should I do--> Or is it that it does not work in Eclipse??

Does the code in Main.java try to read sth. from STDIN (or whatever  
the equivalent in Java is)?
It sounds like it is waiting for some kind input.

Do you get any error messages on the console/output window? Could you  
set a breakpoint and see what's going on?
Normally the parser should be fast enough not to notice any real delay.

-k

From avimalik at gmail.com  Sun May 14 01:36:27 2006
From: avimalik at gmail.com (Avinash Malik)
Date: Sun May 14 01:36:31 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
In-Reply-To: <D21721BB-F163-445E-8505-1570FBC03AF0@dolphin-services.de>
References: <c1cd9c970605131603m2573efaer3255e11eb21a5e29@mail.gmail.com>
	<D21721BB-F163-445E-8505-1570FBC03AF0@dolphin-services.de>
Message-ID: <c1cd9c970605140136m6558f6f5y37826595fd7d9065@mail.gmail.com>

Hello,
        I do not get any error messages at all I debugged it and this
is the class where it enters and then just remains there, I have given
it an input I can see the tokens for the input file.

This is the class file where it stops, DebugTokenStream.class although
there is an input and the arrayList is full of tokens, but the arg0 is
null, because of which the whole thing just hangs?? -->Dont know what
to do??

On 5/13/06, Kay Roepke <kroepke@dolphin-services.de> wrote:
>
> On 14. May 2006, at 1:03 Uhr, Avinash Malik wrote:
>
> > Hello,
> >        I have set up an Eclipse project, which runs C-, and traslates
> > it using StringTemplates.
> > Earlier I used to get a JVM_Bind error by putting all the class files
> > into classes directory, I have overcome that error, but now when I run
> > Main.java it reaches parser statement and then just gets hung, I mean
> > how long is it supposed to take to parse such a small grammar.
> > What should I do--> Or is it that it does not work in Eclipse??
>
> Does the code in Main.java try to read sth. from STDIN (or whatever
> the equivalent in Java is)?
> It sounds like it is waiting for some kind input.
>
> Do you get any error messages on the console/output window? Could you
> set a breakpoint and see what's going on?
> Normally the parser should be fast enough not to notice any real delay.
>
> -k
>
>


-- 
Avinash Malik
From avimalik at gmail.com  Sun May 14 01:48:19 2006
From: avimalik at gmail.com (Avinash Malik)
Date: Sun May 14 01:48:21 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
In-Reply-To: <c1cd9c970605140136m6558f6f5y37826595fd7d9065@mail.gmail.com>
References: <c1cd9c970605131603m2573efaer3255e11eb21a5e29@mail.gmail.com>
	<D21721BB-F163-445E-8505-1570FBC03AF0@dolphin-services.de>
	<c1cd9c970605140136m6558f6f5y37826595fd7d9065@mail.gmail.com>
Message-ID: <c1cd9c970605140148j10c7397y437a3e4e4f5e8f85@mail.gmail.com>

Hello,
       Sorry I was wrong the last-time. It seems that, the handshake()
in the DebugEventSocketProxy, gets hung up, the port is 49153. The
host is 0.0.0.0. I haven't looked into it but if some one could help
me out with this it would be great since I want to use
StringTemaplates.....

regards,


On 5/14/06, Avinash Malik <avimalik@gmail.com> wrote:
> Hello,
>         I do not get any error messages at all I debugged it and this
> is the class where it enters and then just remains there, I have given
> it an input I can see the tokens for the input file.
>
> This is the class file where it stops, DebugTokenStream.class although
> there is an input and the arrayList is full of tokens, but the arg0 is
> null, because of which the whole thing just hangs?? -->Dont know what
> to do??
>
> On 5/13/06, Kay Roepke <kroepke@dolphin-services.de> wrote:
> >
> > On 14. May 2006, at 1:03 Uhr, Avinash Malik wrote:
> >
> > > Hello,
> > >        I have set up an Eclipse project, which runs C-, and traslates
> > > it using StringTemplates.
> > > Earlier I used to get a JVM_Bind error by putting all the class files
> > > into classes directory, I have overcome that error, but now when I run
> > > Main.java it reaches parser statement and then just gets hung, I mean
> > > how long is it supposed to take to parse such a small grammar.
> > > What should I do--> Or is it that it does not work in Eclipse??
> >
> > Does the code in Main.java try to read sth. from STDIN (or whatever
> > the equivalent in Java is)?
> > It sounds like it is waiting for some kind input.
> >
> > Do you get any error messages on the console/output window? Could you
> > set a breakpoint and see what's going on?
> > Normally the parser should be fast enough not to notice any real delay.
> >
> > -k
> >
> >
>
>
> --
> Avinash Malik
>


-- 
Avinash Malik
From open.zone at virgin.net  Sun May 14 05:00:50 2006
From: open.zone at virgin.net (Micheal J)
Date: Sun May 14 04:43:16 2006
Subject: [antlr-interest] Regarding using Antlr-3.0ea8
In-Reply-To: <c1cd9c970605140148j10c7397y437a3e4e4f5e8f85@mail.gmail.com>
Message-ID: <001001c6774e$0c3126a0$c704a8c0@hercules>

> Hello,
>        Sorry I was wrong the last-time. It seems that, the 
> handshake() in the DebugEventSocketProxy, gets hung up, the 
> port is 49153. The host is 0.0.0.0. I haven't looked into it 
> but if some one could help me out with this it would be great 
> since I want to use StringTemaplates.....

Sounds like you have a parser running and waiting to attach to a debugger
when there is none (AntlrWorks is the only ANTLR v3 debugger available
afaik).

Regenerate a non-debug parser. Use that within your eclipse environment.


Micheal

From sunjigang1965 at yahoo.com.cn  Sun May 14 04:50:44 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Sun May 14 04:50:55 2006
Subject: [antlr-interest] question about continuation based i/o in Andrew w
	Appel's book
Message-ID: <20060514115044.99138.qmail@web15702.mail.cnb.yahoo.com>

The following is extracted from Andrew W Appel's book Modern Compiler 
Implementation in Java, Second Edition, section 15.3 page 304. I do not 
understand the built-in type "answer". Besides the following 
paragraphs, no other explanation was given in this book. It seems that 
continuation i/o and the type answer is supposed known to his readers 
as backgroud knowledge; but I have no ideas about it. 

Could anyone tell me relevant links or tutorials, course notes, etc 
talking about the type. I want to know what it is and how it is 
implemented. 


Thanks in advance. 


Robert 


CONTINUATION-BASED I/O 
Producing new data structures instead of updating old ones makes it 
possible to obey the "no assignments" rules, but how is the program to 
do input/output? The technique of continuation-based I/O expresses 
input/output in a functional framework. As shown in Program 15.4, the 
predefined types and functions in PureFunJava rely on the notion of an 
answer: This is the "result" returned by the entire program. 


PROGRAM 15.4: Built-in types and functions for PureFunJava. 


type answer // a special, built-in type 
type intConsumer = int -> answer 
type cont = () -> answer 

class ContIO 
{ 
    public answer readByte (intConsumer c); 
    public answer putByte (int i, cont c); 
    public answer exit(); 
} 


MiniJava doesn't have an input function, but if it did, the type would 
be straightforward: something like int readByte(). To express this 
without side effects, PureFunJava's readByte takes an argument that is 
a int-Consumer and passes the newly read integer to that consumer. 
Whatever answer the consumer produces will also be the answer of the 
readByte. 

Similarly, putByte takes a character to print as well as a continuation 
(cont); putByte outputs a character and then calls the cont to produce 
an answer. 


The point of these arrangements is to allow input/output while 
preserving equational reasoning. Interestingly, input/output is now 
"visible" to the typechecker: Any function which does I/O will have 
answer in its result type. 





		
___________________________________________________________ 
«¿◊¢—≈ª¢√‚∑—” œ‰-3.5G»›¡ø£¨20M∏Ωº˛£° 
http://cn.mail.yahoo.com
From kroepke at dolphin-services.de  Sun May 14 17:31:07 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sun May 14 17:31:13 2006
Subject: [antlr-interest] question about continuation based i/o in Andrew
	w Appel's book
In-Reply-To: <20060514115044.99138.qmail@web15702.mail.cnb.yahoo.com>
References: <20060514115044.99138.qmail@web15702.mail.cnb.yahoo.com>
Message-ID: <832F5FF2-30EE-4D2D-A0B9-EB6B1D88CC26@dolphin-services.de>


On 14. May 2006, at 13:50 Uhr, ??? Jigang (Robert) Sun wrote:

> Could anyone tell me relevant links or tutorials, course notes, etc
> talking about the type. I want to know what it is and how it is
> implemented.

Hi!

You might want to read http://www.haskell.org/hawiki/UsingIo
The IO type is the same thing as the "answer" type in that book.
It all comes down to this: http://www.haskell.org/hawiki/ 
ReferentialTransparency

HTH,

-k

From matthias.gutheil at informatik.uni-mannheim.de  Mon May 15 05:17:57 2006
From: matthias.gutheil at informatik.uni-mannheim.de (Matthias Gutheil)
Date: Mon May 15 05:18:07 2006
Subject: [antlr-interest] Special Characters in Identifiers
Message-ID: <44687175.2000806@informatik.uni-mannheim.de>

Hello,

I am not yet an expert in writing grammars, until now I only worked with the 
generated AST.

We want to allow * and ? in classnames or methodnames e.g.

class k*
class k?
class hello*orld

Could that work with my own extension with something like:

identifierStarQuestion
     :    IDENT
         ( STAR IDENT )*
         ( QUESTION IDENT  )*
     ;

And in the grammar I will change from identifier to
identifierStarQuestion e.g. after class is recognized.

Cheers
Matthias

-- 
Matthias Gutheil, Dipl. Inform.
Universit?t Mannheim
Lehrstuhl f?r Softwaretechnik
A5, 6, Geb?udeteil B
68131 Mannheim
Germany

E-Mail: matthias.gutheil@informatik.uni-mannheim.de
Tel: (+49) 621 181 3913

From mail at martin-probst.com  Mon May 15 07:54:30 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon May 15 07:54:36 2006
Subject: [antlr-interest] Special Characters in Identifiers
In-Reply-To: <44687175.2000806@informatik.uni-mannheim.de>
References: <44687175.2000806@informatik.uni-mannheim.de>
Message-ID: <8C88A587-9739-4E36-A40C-94217356DDF9@martin-probst.com>

Hi,

> I am not yet an expert in writing grammars, until now I only worked  
> with the generated AST.

so good luck getting one, it's actually not that difficult with ANTLR.

> We want to allow * and ? in classnames or methodnames e.g.
>
> class k*
> class k?
> class hello*orld
>
> Could that work with my own extension with something like:
>
> identifierStarQuestion
>     :    IDENT
>         ( STAR IDENT )*
>         ( QUESTION IDENT  )*
>     ;

Probably not, this does not allow a star at the end of an identifier  
(e.g. always needs trailing IDENT) and it doesn't allow question  
marks before stars, e.g. foo?bar*baz is not allowed, too. Probably

identifierStarQuestion:
	IDENT ( STAR | QUESTION )? identifierStarQuestion?;

This will allow everything as an identifier which starts with an  
identifier, and then contains any amount of STARs and QUESTION marks,  
but not two consecutive wildcards. It may or may not end in an  
indentifier part. Please note that this is running recursive, so you  
shouldn't put code into identifierStarQuestion that is supposed to  
run only once - you can fix that by using another intermediate rule.  
This might lead to ambiguity wrt. the grammar (Java?), but I'm not  
sure. ANTLR will probably tell you :-)

Martin
From martin.eklund at farmbio.uu.se  Mon May 15 08:48:10 2006
From: martin.eklund at farmbio.uu.se (Martin Eklund)
Date: Mon May 15 08:48:18 2006
Subject: [antlr-interest] Parsing tab delimited datamatrix
Message-ID: <1147708091.7731.30.camel@localhost.localdomain>

Hi,

I'm a complete newbie when it comes to ANTLR and would be very thankful
to get a few pointers. I would like to parse a file containing a tab
delimited datamatrix. The first row of the file contains column headers,
whereas all the other rows contain first an identifier and then doubles
separated by tabs. Ex:

I'd	like	to	parse
this	12.3	1.2	3
type	1.54	5	21.1
of	12.3	1	4
file	7	1	4.9

During the parsing I would like to put the column header identifiers
into a array of string, the row "header" identifiers into another aray
of strings and the doubles into a jama matrix (basically just a
double[][]). My idea is that the wee parser and lexer below is pretty
much what I need. However, I suppose I need to add some actions where
the start are (please see below). The problem is what to add... How do I
for instance know how big to make the String[] and the double[][]..?


============================================================
class pcmParser extends Parser;

// Match one-or-more column headers
columnHeaders
	: (TEXT)+ NEWLINE
	***** What goes here? *****
	;
rows
	:TEXT (NUM)+
	***** And what goes here? *****
	;

class pcmLexer extends Lexer;

TEXT	options { testLiterals = true;}
	:('a'..'z'|'A'..'Z'|'0'..'9'|'_')+
	;

DIGIT   : '0'..'9' ;

NUM     : (DIGIT)+ ('.' (DIGIT)+ )? ;

WS
	: (	' '
	|	'\t'
	)
	{$setType(Token.SKIP);}
	;

NEWLINE
    :   '\r' '\n'   // DOS
    |   '\n'        // UNIX
    ;
============================================================

Thank you in advance for any help!

Cheers,

Martin.


-- 
========================================
Martin Eklund
PhD Student
Department of Pharmaceutical Biosciences
Uppsala University, Sweden
Ph: +46-18-4714281
========================================

From jbb at acm.org  Mon May 15 10:33:43 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon May 15 10:33:55 2006
Subject: [antlr-interest] Parsing tab delimited datamatrix
In-Reply-To: <1147708091.7731.30.camel@localhost.localdomain> (message from
	Martin Eklund on Mon, 15 May 2006 17:48:10 +0200)
References: <1147708091.7731.30.camel@localhost.localdomain>
Message-ID: <E1Ffgwx-0000cr-00@gecko>

on Mon, 15 May 2006 17:48:10 +0200, Martin Eklund wrote:
>I'm a complete newbie when it comes to ANTLR and would be very thankful
>to get a few pointers. I would like to parse a file containing a tab
>delimited datamatrix. The first row of the file contains column headers,
>whereas all the other rows contain first an identifier and then doubles
>separated by tabs. Ex:
>
>I'd	like	to	parse
>this	12.3	1.2	3
>type	1.54	5	21.1
>of	12.3	1	4
>file	7	1	4.9

I respectfully suggest that using Antlr (or any other parser
generation tool) is over-kill for this task.

Why not just write the few lines it takes to do this using Java's
Scanner class (please see the API description for java.util.Scanner).

>During the parsing I would like to put the column header identifiers
>into a array of string, the row "header" identifiers into another aray
>of strings and the doubles into a jama matrix (basically just a
>double[][]). My idea is that the wee parser and lexer below is pretty
>much what I need. However, I suppose I need to add some actions where
>the start are (please see below). The problem is what to add... How do I
>for instance know how big to make the String[] and the double[][]..?

I would also suggest use of java.util.Vector rather than an array;
thus avoiding the need to know in advance how big to make each of the
arrays.  If arrays are a requirement, then gather the data into
Vectors (or Lists) and, at the end of the input, translate those
results into the necessary arrays.

>columnHeaders
>	: (TEXT)+ NEWLINE
>	***** What goes here? *****
>	;
>rows
>	:TEXT (NUM)+
>	***** And what goes here? *****
>	;


If you insist on an Antlr solution, here is my suggestion (note that
this just off the top of my head, have not actually tried to run it
through the Antlr tool):

file : // main entry point for the parser, process an entire file.
    {
      Vector<String> heading = new Vector<String>();
      Vector<String> row_ids = new Vector<String>();
      Vector<Vector<Double>> data = new Vector<Vector<Double>>();
      // passing these results back out of the Antlr generated code is
      // left as an exercise for the reader...
    }

    columnHeaders[heading]

    (
      { Vector<Double> aRow=null; }
      aRow=rows[row_ids] {data.addElement(aRow);}
    )+

    EOF
    ;

columnHeaders [ Vector<String> h ] :
	(t:TEXT { h.addElement(t.getText()); } )+ NEWLINE
	;

rows [ Vector<String> r ] returns [ Vector<Double> d ] :

     { d = new Vector<Double>(); }

     t:TEXT { r.addElement(t.getText()); }

     ( n:NUM { d.addElement(Double.parseDouble(n.getText())); } )+

     NEWLINE
     ;

Hope this helps...
   -jbb
From e.papegaaij at student.utwente.nl  Mon May 15 12:50:59 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon May 15 12:51:03 2006
Subject: [antlr-interest] Parsing tab delimited datamatrix
In-Reply-To: <E1Ffgwx-0000cr-00@gecko>
References: <1147708091.7731.30.camel@localhost.localdomain>
	<E1Ffgwx-0000cr-00@gecko>
Message-ID: <200605152150.59407.e.papegaaij@student.utwente.nl>

On Monday 15 May 2006 19:33, John B. Brodie wrote:
> >During the parsing I would like to put the column header identifiers
> >into a array of string, the row "header" identifiers into another aray
> >of strings and the doubles into a jama matrix (basically just a
> >double[][]). My idea is that the wee parser and lexer below is pretty
> >much what I need. However, I suppose I need to add some actions where
> >the start are (please see below). The problem is what to add... How do I
> >for instance know how big to make the String[] and the double[][]..?
>
> I would also suggest use of java.util.Vector rather than an array;
> thus avoiding the need to know in advance how big to make each of the
> arrays.  If arrays are a requirement, then gather the data into
> Vectors (or Lists) and, at the end of the input, translate those
> results into the necessary arrays.

I'd recommend not to use Vector for various reasons. First of all, it is 
synchronized, making it slower. ArrayList should be used in a non-threaded 
environment. However both implementations are not optimised for incremental 
growth. LinkedList should be more efficient for a growing list. It's also the 
best implementation for lineair list traversal.

Best regards,
Emond Papegaaij
From brannonking at yahoo.com  Mon May 15 13:59:12 2006
From: brannonking at yahoo.com (Brannon King)
Date: Mon May 15 13:58:21 2006
Subject: [antlr-interest] big XML file support
Message-ID: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>

Suppose I have a file that looks like this:

<a>
  <b>
    <c>
      <d /> <d /> <d /> ... For a few GB worth
    </c>
    <c binary="true">
<CDATA[[ about 10GB of binary data ]]>
    </c>
  </b>
</a>

I need a parser to go through and build up a structure with the tree but
without any <d> or binary data. Instead, I just want to record the file
locations for those and I'll go pull them from the file when I need them. Is
ANTLR a good tool to do that or am I better off parsing by hand? Or should I
use Xerces? Or, the real question, does ANTLR have some ability to do
XML-type structures easily? What are the largest files you've parsed using
ANTLR? I'm using C++. Thanks for your time.
 
______________________________
Brannon King

From scott at javadude.com  Mon May 15 15:42:53 2006
From: scott at javadude.com (Scott Stanchfield)
Date: Mon May 15 14:57:41 2006
Subject: [antlr-interest] big XML file support
Message-ID: <25443.12.173.51.158.1147732973.squirrel@www.javadude.com>

Check out ANTXR (http://javadude.com/tools/antxr). It's an antlr
derivative that I wrote to make XML parsing nice and simple.

You can use a SAX or XMLPULL front end for the scanner.

LMK if you have any questions,
-- Scott

> Suppose I have a file that looks like this:
>
> <a>
>   <b>
>     <c>
>       <d /> <d /> <d /> ... For a few GB worth
>     </c>
>     <c binary="true">
> <CDATA[[ about 10GB of binary data ]]>
>     </c>
>   </b>
> </a>
>
> I need a parser to go through and build up a structure with the tree but
> without any <d> or binary data. Instead, I just want to record the file
> locations for those and I'll go pull them from the file when I need them.
> Is
> ANTLR a good tool to do that or am I better off parsing by hand? Or should
> I
> use Xerces? Or, the real question, does ANTLR have some ability to do
> XML-type structures easily? What are the largest files you've parsed using
> ANTLR? I'm using C++. Thanks for your time.
>
> ______________________________
> Brannon King
>


From scott at javadude.com  Mon May 15 15:42:51 2006
From: scott at javadude.com (Scott Stanchfield)
Date: Mon May 15 14:58:33 2006
Subject: [antlr-interest] big XML file support
In-Reply-To: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>
References: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>
Message-ID: <25529.12.173.51.158.1147732971.squirrel@www.javadude.com>

Check out ANTXR (http://javadude.com/tools/antxr). It's an antlr
derivative that I wrote to make XML parsing nice and simple.

You can use a SAX or XMLPULL front end for the scanner.

LMK if you have any questions,
-- Scott

> Suppose I have a file that looks like this:
>
> <a>
>   <b>
>     <c>
>       <d /> <d /> <d /> ... For a few GB worth
>     </c>
>     <c binary="true">
> <CDATA[[ about 10GB of binary data ]]>
>     </c>
>   </b>
> </a>
>
> I need a parser to go through and build up a structure with the tree but
> without any <d> or binary data. Instead, I just want to record the file
> locations for those and I'll go pull them from the file when I need them.
> Is
> ANTLR a good tool to do that or am I better off parsing by hand? Or should
> I
> use Xerces? Or, the real question, does ANTLR have some ability to do
> XML-type structures easily? What are the largest files you've parsed using
> ANTLR? I'm using C++. Thanks for your time.
>
> ______________________________
> Brannon King
>


From sdb at geekworld.co.uk  Mon May 15 16:01:22 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Mon May 15 16:01:27 2006
Subject: [antlr-interest] big XML file support
In-Reply-To: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>
References: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>
Message-ID: <44690842.1010609@geekworld.co.uk>

Brannon King wrote:
> Suppose I have a file that looks like this:
> 
> <a>
>   <b>
>     <c>
>       <d /> <d /> <d /> ... For a few GB worth
>     </c>
>     <c binary="true">
> <CDATA[[ about 10GB of binary data ]]>
>     </c>
>   </b>
> </a>
> 
> I need a parser to go through and build up a structure with the tree but
> without any <d> or binary data. Instead, I just want to record the file
> locations for those and I'll go pull them from the file when I need them. Is
> ANTLR a good tool to do that or am I better off parsing by hand? Or should I
> use Xerces? Or, the real question, does ANTLR have some ability to do
> XML-type structures easily? What are the largest files you've parsed using
> ANTLR? I'm using C++. Thanks for your time.

I know I'm sidestepping the issue, but it might be worth using a
dedicated XML parses. XERCES-C++ from Apache is probably a good bet for
you, and it supports SAX, DOM, and DOMasSAX, IIRC. Otherwise it's easy
to write a DOMasSAX layer yourself...

Sam
From mail at martin-probst.com  Mon May 15 23:24:30 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon May 15 23:24:34 2006
Subject: [antlr-interest] Parsing tab delimited datamatrix
In-Reply-To: <200605152150.59407.e.papegaaij@student.utwente.nl>
References: <1147708091.7731.30.camel@localhost.localdomain>
	<E1Ffgwx-0000cr-00@gecko>
	<200605152150.59407.e.papegaaij@student.utwente.nl>
Message-ID: <6F61F147-B54E-4967-96FB-7ECDD4D7FA10@martin-probst.com>

Hi,

> I'd recommend not to use Vector for various reasons. First of all,  
> it is
> synchronized, making it slower. ArrayList should be used in a non- 
> threaded
> environment. However both implementations are not optimised for  
> incremental
> growth. LinkedList should be more efficient for a growing list.  
> It's also the
> best implementation for lineair list traversal.

In theory - yes. But in practice, test results are either indifferent  
or better for ArrayList - don't ask me why. Probably allocating a lot  
of the linked list container objects is more expensive (also for GC)  
than a single array. However you will almost certainly not notice any  
difference between them if you're not iterating over more than a  
million elements in a tight loop - and compared to the parsing  
overhead (character comparison etc) it's almost certainly insignificant.

Plus, all of this is of course premature optimization :-)

Martin
From mail at martin-probst.com  Mon May 15 23:26:26 2006
From: mail at martin-probst.com (Martin Probst)
Date: Mon May 15 23:26:34 2006
Subject: [antlr-interest] big XML file support
In-Reply-To: <44690842.1010609@geekworld.co.uk>
References: <000f01c67862$6bab62c0$110a0a0a@starbridgesystems.com>
	<44690842.1010609@geekworld.co.uk>
Message-ID: <FFDA5FC8-3216-45E5-9719-883CF4A37C2E@martin-probst.com>

> I know I'm sidestepping the issue, but it might be worth using a
> dedicated XML parses. XERCES-C++ from Apache is probably a good bet  
> for
> you, and it supports SAX, DOM, and DOMasSAX, IIRC. Otherwise it's easy
> to write a DOMasSAX layer yourself...

I'd rather go with expat, Xerces is a bit big for such a simple task.

Martin

From parrt at cs.usfca.edu  Tue May 16 10:02:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 10:02:26 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
Message-ID: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>

Soon we will need case insensitive lexing for v3.  I am hoping to  
leave the input stream stuff alone and just subclass Lexer as  
CaseInsensitiveLexer, which overrides match()
methods.  Then alter code gen for char set matching (because it's  
generated inline).

The tokens would have the unmolested input chars.

Does this sound right?

Ter

From mail at martin-probst.com  Tue May 16 10:50:28 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue May 16 10:50:34 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
Message-ID: <3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>

> Soon we will need case insensitive lexing for v3.  I am hoping to  
> leave the input stream stuff alone and just subclass Lexer as  
> CaseInsensitiveLexer, which overrides match()
> methods.  Then alter code gen for char set matching (because it's  
> generated inline).
>
> The tokens would have the unmolested input chars.
>
> Does this sound right?

No idea, but did you think about internationalization issues? I mean,  
in European languages there is a clear, defined concept of upper case  
and lower case. However I think there are some asian languages etc  
where this is not exactly true, and java.lang.String#equalsIgnoreCase 
() doesn't get it right as far as I know. Maybe provide an  
overridable (ouch) method of some kind?

Martin

From parrt at cs.usfca.edu  Tue May 16 10:58:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 10:58:12 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
	<3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
Message-ID: <6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>


On May 16, 2006, at 10:50 AM, Martin Probst wrote:

>> Soon we will need case insensitive lexing for v3.  I am hoping to  
>> leave the input stream stuff alone and just subclass Lexer as  
>> CaseInsensitiveLexer, which overrides match()
>> methods.  Then alter code gen for char set matching (because it's  
>> generated inline).
>>
>> The tokens would have the unmolested input chars.
>>
>> Does this sound right?
>
> No idea, but did you think about internationalization issues? I  
> mean, in European languages there is a clear, defined concept of  
> upper case and lower case. However I think there are some asian  
> languages etc where this is not exactly true, and  
> java.lang.String#equalsIgnoreCase() doesn't get it right as far as  
> I know. Maybe provide an overridable (ouch) method of some kind?

If I override match(char c) so that it uses Character.toUpperCase()  
or whatever, it should be ok I think.

Ter

From parrt at cs.usfca.edu  Tue May 16 11:27:32 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 11:27:35 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
	<3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
	<6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
Message-ID: <0579DEFD-16D8-4463-81E6-99C51A8AA1FA@cs.usfca.edu>


On May 16, 2006, at 10:58 AM, Terence Parr wrote:

>
> On May 16, 2006, at 10:50 AM, Martin Probst wrote:
>
>>> Soon we will need case insensitive lexing for v3.  I am hoping to  
>>> leave the input stream stuff alone and just subclass Lexer as  
>>> CaseInsensitiveLexer, which overrides match()
>>> methods.  Then alter code gen for char set matching (because it's  
>>> generated inline).
>>>
>>> The tokens would have the unmolested input chars.
>>>
>>> Does this sound right?
>>
>> No idea, but did you think about internationalization issues? I  
>> mean, in European languages there is a clear, defined concept of  
>> upper case and lower case. However I think there are some asian  
>> languages etc where this is not exactly true, and  
>> java.lang.String#equalsIgnoreCase() doesn't get it right as far as  
>> I know. Maybe provide an overridable (ouch) method of some kind?
>
> If I override match(char c) so that it uses Character.toUpperCase()  
> or whatever, it should be ok I think.

We should also probably let people set the locale for the  
uppercasing, right?

Ter

From dcaton at shorelinesoftware.com  Tue May 16 12:00:41 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue May 16 12:01:02 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <0579DEFD-16D8-4463-81E6-99C51A8AA1FA@cs.usfca.edu>
Message-ID: <003a01c6791b$0755cfe0$0202fea9@ssdev1>

Ter:

Just my 2 cents, FWIW...

I don't think Antlr should concern itself with any of this.  Keep things as
simple as possible, and only do exact ordinal comparisons of strings.

If you need a case-insensitive lexer, the end user should implement that by
overriding an appropriate method in the lexer and use whatever comparison is
appropriate for their particular needs.  There is no universal upper or
lower-casing function that is appropriate for every possible locale, so why
even go down that road?   Keep the core of Antlr simple, and just provide
extensibility points (with samples) where appropriate.

This is probably a codegen issue more than a core Antlr issue, but one of
the biggest frustrations for me in Antlr 2.x is that the whole thing assumes
8-byte characters and strings.  There are hard-coded references to string,
stream, char, LPSTR, cout, etc. throughout the generated code as well as the
runtime code.  These should be defines or typedefs, so generating a Unicode
parser (UTF-16) would be as simple as doing something like '#define
ANTLR_STRING wstring', '#define ANTLR_CHAR wchar_t', and so on.

Another problem is the various hard-coded ANSI, English strings in error
messages, and hard coded references to cout.  Please abstract anything like
this so that it can be overridden, so error messages can be localized, and
other output mechanisms can be used other than an ANSI console.  It's a big
world out there and modern applications today need to support Unicode and
easy localization.

Don
 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, May 16, 2006 2:28 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] case sensitivity for ANTLR v3 lexers
> 
> 
> On May 16, 2006, at 10:58 AM, Terence Parr wrote:
> 
> >
> > On May 16, 2006, at 10:50 AM, Martin Probst wrote:
> >
> >>> Soon we will need case insensitive lexing for v3.  I am hoping to 
> >>> leave the input stream stuff alone and just subclass Lexer as 
> >>> CaseInsensitiveLexer, which overrides match() methods.  
> Then alter 
> >>> code gen for char set matching (because it's generated inline).
> >>>
> >>> The tokens would have the unmolested input chars.
> >>>
> >>> Does this sound right?
> >>
> >> No idea, but did you think about internationalization 
> issues? I mean, 
> >> in European languages there is a clear, defined concept of 
> upper case 
> >> and lower case. However I think there are some asian languages etc 
> >> where this is not exactly true, and
> >> java.lang.String#equalsIgnoreCase() doesn't get it right 
> as far as I 
> >> know. Maybe provide an overridable (ouch) method of some kind?
> >
> > If I override match(char c) so that it uses 
> Character.toUpperCase() or 
> > whatever, it should be ok I think.
> 
> We should also probably let people set the locale for the 
> uppercasing, right?
> 
> Ter
> 


From mail at martin-probst.com  Tue May 16 12:37:02 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue May 16 12:37:07 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
References: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
Message-ID: <56841558-FFF8-4928-8E11-4D12300F8B23@martin-probst.com>

Hi,

> If you need a case-insensitive lexer, the end user should implement  
> that by
> overriding an appropriate method in the lexer and use whatever  
> comparison is
> appropriate for their particular needs.  There is no universal  
> upper or
> lower-casing function that is appropriate for every possible  
> locale, so why
> even go down that road?   Keep the core of Antlr simple, and just  
> provide
> extensibility points (with samples) where appropriate.

It depends on how common the case insensitive lexer thing is. I have  
personally never used a case insensitive programming language since  
PASCAL (that was case insensitive, wasn't it?). It should only be an  
option if really a lot of people need it, otherwise allow for the  
overriding, provide a Wiki article and a FAQ entry and that's it.  
Maybe some more detailed Wiki article about using IBM ICU would be  
nice, but not really needed.

Martin

From mail at martin-probst.com  Tue May 16 12:39:02 2006
From: mail at martin-probst.com (Martin Probst)
Date: Tue May 16 12:39:09 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <0579DEFD-16D8-4463-81E6-99C51A8AA1FA@cs.usfca.edu>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
	<3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
	<6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
	<0579DEFD-16D8-4463-81E6-99C51A8AA1FA@cs.usfca.edu>
Message-ID: <22AFEB95-6BD9-4909-99E2-8BD1EF58062C@martin-probst.com>

Hi,

> We should also probably let people set the locale for the  
> uppercasing, right?

Doesn't it (=Java) use the correct locale by default? I'm not sure  
there is a difference within Latin character sets, and for other  
stuff you need to use IBM ICU or something comparable anyways. Maybe  
just allowing to override matches(char c) is indeed enough.

Martin
From sdb at geekworld.co.uk  Tue May 16 12:53:18 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Tue May 16 12:53:24 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>	<3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
	<6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
Message-ID: <446A2DAE.30801@geekworld.co.uk>

Terence Parr wrote:
> 
> On May 16, 2006, at 10:50 AM, Martin Probst wrote:
> 
>>> Soon we will need case insensitive lexing for v3.  I am hoping to 
>>> leave the input stream stuff alone and just subclass Lexer as 
>>> CaseInsensitiveLexer, which overrides match()
>>> methods.  Then alter code gen for char set matching (because it's 
>>> generated inline).
>>>
>>> The tokens would have the unmolested input chars.
>>>
>>> Does this sound right?
>>
>>
>> No idea, but did you think about internationalization issues? I  mean,
>> in European languages there is a clear, defined concept of  upper case
>> and lower case. However I think there are some asian  languages etc
>> where this is not exactly true, and 
>> java.lang.String#equalsIgnoreCase() doesn't get it right as far as  I
>> know. Maybe provide an overridable (ouch) method of some kind?
> 
> 
> If I override match(char c) so that it uses Character.toUpperCase()  or
> whatever, it should be ok I think.

IIRC, Unicode itself has case definition stuff, so *if* (and it's a big
if) the version of Java in use supports that correctly, then
toUpperCase() and appropriate locale should all work nicely. Just a very
big if.

And to avoid posting twice, I think case-insensitivity is really a good
idea, as it's not too unusual to be faced with very imprecise docs to
work to. I've certainly been there before. Plus it's not inconceivable
that people will use ANTLR for some very loose grammars and parsing
tasks and want to match "Abstract:", "ABSTRACT:" or "abstract:", for
example - another case from my own experience, although I wasn't using
ANTLR or anything similar at the time, being young and foolish.

Sam

From dcaton at shorelinesoftware.com  Tue May 16 13:18:48 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue May 16 13:19:11 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <56841558-FFF8-4928-8E11-4D12300F8B23@martin-probst.com>
Message-ID: <004301c67925$f344a1b0$0202fea9@ssdev1>

Martin:

I don't think it matters how common a need for case-insensitivity is.

My point really was that there is no universal concept of
"case-insensitivity", it depends on what particular language you're parsing
and the culture you're doing it in.  There's no way Antlr can anticipate
that, so just make Antlr extensible in this area and leave the
implementation up to the end user.  It's also less that Ter needs to write,
test and maintain.

Don
 

> -----Original Message-----
> From: Martin Probst [mailto:mail@martin-probst.com] 
> Sent: Tuesday, May 16, 2006 3:37 PM
> To: Don Caton
> Cc: 'ANTLR Interest'
> Subject: Re: [antlr-interest] case sensitivity for ANTLR v3 lexers
> 
> Hi,
> 
> > If you need a case-insensitive lexer, the end user should implement 
> > that by overriding an appropriate method in the lexer and 
> use whatever 
> > comparison is appropriate for their particular needs.  There is no 
> > universal upper or lower-casing function that is 
> appropriate for every 
> > possible locale, so why
> > even go down that road?   Keep the core of Antlr simple, and just  
> > provide
> > extensibility points (with samples) where appropriate.
> 
> It depends on how common the case insensitive lexer thing is. 
> I have personally never used a case insensitive programming 
> language since PASCAL (that was case insensitive, wasn't 
> it?). It should only be an option if really a lot of people 
> need it, otherwise allow for the overriding, provide a Wiki 
> article and a FAQ entry and that's it.  
> Maybe some more detailed Wiki article about using IBM ICU 
> would be nice, but not really needed.
> 
> Martin
> 


From dragonoe at mcmaster.ca  Tue May 16 13:44:47 2006
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Tue May 16 13:37:44 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <56841558-FFF8-4928-8E11-4D12300F8B23@martin-probst.com>
References: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
	<56841558-FFF8-4928-8E11-4D12300F8B23@martin-probst.com>
Message-ID: <20060516204447.GB6860@dragon.homelinux.org>

On Tue, May 16, 2006 at 09:37:02PM +0200, Martin Probst wrote:
> Hi,
> 
> >If you need a case-insensitive lexer, the end user should implement  
> >that by
> >overriding an appropriate method in the lexer and use whatever  
> >comparison is
> >appropriate for their particular needs.  There is no universal  
> >upper or
> >lower-casing function that is appropriate for every possible  
> >locale, so why
> >even go down that road?   Keep the core of Antlr simple, and just  
> >provide
> >extensibility points (with samples) where appropriate.
> 
> It depends on how common the case insensitive lexer thing is. I have  
> personally never used a case insensitive programming language since  
> PASCAL (that was case insensitive, wasn't it?). It should only be an  
> option if really a lot of people need it, otherwise allow for the  
> overriding, provide a Wiki article and a FAQ entry and that's it.  
> Maybe some more detailed Wiki article about using IBM ICU would be  
> nice, but not really needed.

I'd be forced to agree with Don here. FORTRAN 77 (which I need ANTLR
for) and SQL are but two languages I know of which are case insensitive.

I would most definetly agree with a small simple core design allowing
extensions where needed. A "default" extension could be provided with
ANTLR for an english/ascii lexer both as a convenience, as I suspect
most users will be using it, and as an example of subclassing
/extending/ifdefing for those who don't. This should obviously be
supplemented with the proper documentation as you suggested.

In any case, hard coding character handling and string messages like in
2.x in the codegen is a terrible idea. Especially if you're already
using StringTemplate: there are no excuses.

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   ( dragon.homelinux.org  \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060516/d2fc64b7/attachment.bin
From parrt at cs.usfca.edu  Tue May 16 14:01:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 14:01:42 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <22AFEB95-6BD9-4909-99E2-8BD1EF58062C@martin-probst.com>
References: <CF40B053-4190-4B80-944C-91608234D24A@cs.usfca.edu>
	<3D22744F-09F4-441E-A56D-C60E52D523CD@martin-probst.com>
	<6A72D164-03C1-42DA-9B0C-99E253FDD4A5@cs.usfca.edu>
	<0579DEFD-16D8-4463-81E6-99C51A8AA1FA@cs.usfca.edu>
	<22AFEB95-6BD9-4909-99E2-8BD1EF58062C@martin-probst.com>
Message-ID: <46C7278D-2639-4280-AD82-AC09A89F3BEF@cs.usfca.edu>


On May 16, 2006, at 12:39 PM, Martin Probst wrote:

> Hi,
>
>> We should also probably let people set the locale for the  
>> uppercasing, right?
>
> Doesn't it (=Java) use the correct locale by default? I'm not sure  
> there is a difference within Latin character sets, and for other  
> stuff you need to use IBM ICU or something comparable anyways.  
> Maybe just allowing to override matches(char c) is indeed enough.

Yep, but you might be reading a file from another locale...across a  
socket for example.

Ter

From parrt at cs.usfca.edu  Tue May 16 14:04:46 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 14:04:48 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
References: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
Message-ID: <F6BCF18D-6D84-4B53-AF3A-47C2B353FB50@cs.usfca.edu>


On May 16, 2006, at 12:00 PM, Don Caton wrote:

> Ter:
>
> Just my 2 cents, FWIW...
>
> I don't think Antlr should concern itself with any of this.  Keep  
> things as
> simple as possible, and only do exact ordinal comparisons of strings.

Well, people can subclass and change match if they want except that  
sets are matched inline without calling a method (because they are  
complicated beasts).  Those cannot be changed w/o ANTLR code  
generation changes.

Hm...well, people could do the following: come up with a char stream  
that yields uppercase to the lexer but stores the real char.  Then  
all char refs just have to be uppercase in the lexer and we're cool,  
right?  That way I don't have to mess with it...somebody can perhaps  
override a standard char stream.

> This is probably a codegen issue more than a core Antlr issue, but  
> one of
> the biggest frustrations for me in Antlr 2.x is that the whole  
> thing assumes
> 8-byte characters and strings.  There are hard-coded references to  
> string,
> stream, char, LPSTR, cout, etc. throughout the generated code as  
> well as the
> runtime code.  These should be defines or typedefs, so generating a  
> Unicode
> parser (UTF-16) would be as simple as doing something like '#define
> ANTLR_STRING wstring', '#define ANTLR_CHAR wchar_t', and so on.

I think Ric is thinking about this.

> Another problem is the various hard-coded ANSI, English strings in  
> error
> messages, and hard coded references to cout.  Please abstract  
> anything like
> this so that it can be overridden, so error messages can be  
> localized, and
> other output mechanisms can be used other than an ANSI console.   
> It's a big
> world out there and modern applications today need to support  
> Unicode and
> easy localization.

All error strings are in a template group now :)  People will be able  
to send in their language.stg files and errors will come out in the  
locale's strings. :)  All ST stuff allows char encoding ...

Ter

From gt54-antlr at cyconix.com  Tue May 16 14:42:19 2006
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Tue May 16 14:42:26 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <20060516204447.GB6860@dragon.homelinux.org>
References: <003a01c6791b$0755cfe0$0202fea9@ssdev1>	<56841558-FFF8-4928-8E11-4D12300F8B23@martin-probst.com>
	<20060516204447.GB6860@dragon.homelinux.org>
Message-ID: <446A473B.4030008@cyconix.com>

Olivier Dragon wrote:

> I'd be forced to agree with Don here. FORTRAN 77 (which I need ANTLR
> for) and SQL are but two languages I know of which are case insensitive.

And VHDL, which pops up occasionally here.
From dcaton at shorelinesoftware.com  Tue May 16 16:09:25 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue May 16 16:09:45 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <F6BCF18D-6D84-4B53-AF3A-47C2B353FB50@cs.usfca.edu>
Message-ID: <005101c6793d$c6c9aeb0$0202fea9@ssdev1>

Ter:

> All error strings are in a template group now :)  People will 
> be able to send in their language.stg files and errors will 
> come out in the locale's strings. :)  All ST stuff allows 
> char encoding ...

Not sure what that means.  I looked at ST a few times but I never really
grokked it.  Your "about" article talks mostly about web page generation,
and there's no C++ version to play with, so I really had no reason to look
at it any further.

I understand that you're using ST to generate code in 3.0, but how is that
relevant at runtime?  Will ST be required at runtime as well?

All I'm really looking for is an overridable "getErrorString()" method, or
something like that, so I can supply an appropriate error message depending
on the end user's locale.  The default implementation could use the English
messages, please just allow some clean way of overriding them at runtime.

Don


From parrt at cs.usfca.edu  Tue May 16 16:28:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 16:28:41 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <005101c6793d$c6c9aeb0$0202fea9@ssdev1>
References: <005101c6793d$c6c9aeb0$0202fea9@ssdev1>
Message-ID: <D317491A-5950-4BAA-8B0F-75D91CB30FB2@cs.usfca.edu>


On May 16, 2006, at 4:09 PM, Don Caton wrote:

> Ter:
>
>> All error strings are in a template group now :)  People will
>> be able to send in their language.stg files and errors will
>> come out in the locale's strings. :)  All ST stuff allows
>> char encoding ...
>
> Not sure what that means.  I looked at ST a few times but I never  
> really
> grokked it.  Your "about" article talks mostly about web page  
> generation,
> and there's no C++ version to play with, so I really had no reason  
> to look
> at it any further.

Well, it kinda needs reflection...C++ would make this challenging.

See my latest language oriented article?  See st.org

> I understand that you're using ST to generate code in 3.0, but how  
> is that
> relevant at runtime?  Will ST be required at runtime as well?

Oh, sorry...i meant ANTLR v3 errors not parse errors.  Just override  
reportError(Exception e) and you're groovy!

> All I'm really looking for is an overridable "getErrorString()"  
> method, or
> something like that, so I can supply an appropriate error message  
> depending
> on the end user's locale.  The default implementation could use the  
> English
> messages, please just allow some clean way of overriding them at  
> runtime.

You have, sir!  See the runtime stuff...doesn't use ST at all.

Ter

From dcaton at shorelinesoftware.com  Tue May 16 17:39:42 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue May 16 17:40:00 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <D317491A-5950-4BAA-8B0F-75D91CB30FB2@cs.usfca.edu>
Message-ID: <005501c6794a$633ef910$0202fea9@ssdev1>

Ter:

> > I understand that you're using ST to generate code in 3.0, 
> but how is 
> > that relevant at runtime?  Will ST be required at runtime as well?
> 
> Oh, sorry...i meant ANTLR v3 errors not parse errors.  Just 
> override reportError(Exception e) and you're groovy!

That doesn't work, at least not in 2.x.  By the time reportError() is
called, the exception object (and its textual message) have already been
created, using strings that are hard-coded in the various exception classes.

Take a look at MismatchedCharExpression:getMessage(), for example.  Even if
I subclassed this object, there's no way to get the generated code to use
it.  The only way to fix this is to modify the code every time a new version
is released.

> > All I'm really looking for is an overridable "getErrorString()"  
> > method, or
> > something like that, so I can supply an appropriate error message 
> > depending on the end user's locale.  The default 
> implementation could 
> > use the English messages, please just allow some clean way of 
> > overriding them at runtime.
> 
> You have, sir!  See the runtime stuff...doesn't use ST at all.

I thought the C++ runtime stuff wasn't written yet?  Or am I not looking in
the right place?

Don


From parrt at cs.usfca.edu  Tue May 16 17:57:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 17:57:04 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <005501c6794a$633ef910$0202fea9@ssdev1>
References: <005501c6794a$633ef910$0202fea9@ssdev1>
Message-ID: <A120E753-C7C9-4360-98C5-63C52482ED61@cs.usfca.edu>


On May 16, 2006, at 5:39 PM, Don Caton wrote:

> Ter:
>
>>> I understand that you're using ST to generate code in 3.0,
>> but how is
>>> that relevant at runtime?  Will ST be required at runtime as well?
>>
>> Oh, sorry...i meant ANTLR v3 errors not parse errors.  Just
>> override reportError(Exception e) and you're groovy!
>
> That doesn't work, at least not in 2.x.  By the time reportError() is
> called, the exception object (and its textual message) have already  
> been
> created, using strings that are hard-coded in the various exception  
> classes.

Sample v3 output:

         catch (RecognitionException re) {
             reportError(re);
             recover(input,re);
         }

note not a single literal in the output...almost as if i'd learned my  
lesson!  Yep, you shall revel in the joy that is v3.

> Take a look at MismatchedCharExpression:getMessage(), for example.   
> Even if
> I subclassed this object, there's no way to get the generated code  
> to use
> it.  The only way to fix this is to modify the code every time a  
> new version
> is released.

If you override reportError you are golden...no strings...

	/** Report a recognition problem.  Java is not polymorphic on the
	 *  argument types so you have to check the type of exception yourself.
	 *  That's not very clean but it's better than generating a bunch of
	 *  catch clauses in each rule and makes it easy to extend with
	 *  more exceptions w/o breaking old code.
	 *
	 *  This method sets errorRecovery to indicate the parser is recovering
	 *  not parsing.  Once in recovery mode, no errors are generated.
	 *  To get out of recovery mode, the parser must successfully match
	 *  a token (after a resync).  So it will go:
	 *
	 * 		1. error occurs
	 * 		2. enter recovery mode, report error
	 * 		3. consume until token found in resynch set
	 * 		4. try to resume parsing
	 * 		5. next match() will reset errorRecovery mode
	 */
	public void reportError(RecognitionException e) {
		// if we've already reported an error and have not matched a token
		// yet successfully, don't report any errors.
		if ( errorRecovery ) {
			//System.err.print("[SPURIOUS] ");
			return;
		}
		errorRecovery = true;

		displayRecognitionError(this.getClass().getName(),
								this.getTokenNames(),
								e);
	}


>>> All I'm really looking for is an overridable "getErrorString()"
>>> method, or
>>> something like that, so I can supply an appropriate error message
>>> depending on the end user's locale.  The default
>> implementation could
>>> use the English messages, please just allow some clean way of
>>> overriding them at runtime.
>>
>> You have, sir!  See the runtime stuff...doesn't use ST at all.
>
> I thought the C++ runtime stuff wasn't written yet?  Or am I not  
> looking in
> the right place?

Well, I'm assuming Ric follows my lead on this...

Ter

From dcaton at shorelinesoftware.com  Tue May 16 19:30:45 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue May 16 19:31:06 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <A120E753-C7C9-4360-98C5-63C52482ED61@cs.usfca.edu>
Message-ID: <000f01c67959$e78aa070$0202fea9@ssdev1>

Ter:

> Sample v3 output:
> 
>          catch (RecognitionException re) {
>              reportError(re);
>              recover(input,re);
>          }
>
> note not a single literal in the output...almost as if i'd 
> learned my lesson!  Yep, you shall revel in the joy that is v3.

Doesn't look any different than v2.  The problem is not here, the problem is
in the exception classes.

> If you override reportError you are golden...no strings...

No, I think you're missing the point (or maybe the Java implementation is
completely different than C++).

The default reportError() does nothing more than call re.toString() and send
it to cerr.  It makes sense to override it if you want to direct the error
message to a destination other than cerr.  

It doesn't make any sense to override reportError() to change the behavior
of RecognitionException.  Why should reportError() have any knowledge of the
implementation details of any of the exception classes?

All I'm saying is that the exception subclasses should not have hard-coded
strings, they should call some sort of helper or utility method to obtain
the string.  A simple example is in NoViableAltForCharException's
toString(), which is:

   return string("unexpected char: ")+charName(foundChar);

This is bad.  It ought to be something like:

   sprintf( buffer, getString( ANTLR_UNEXPECTED_CHAR ), charName( foundChar
) );
   return string( buffer );

Sprintf probably isn't the best thing to use since you can't rearrange the
order of the arguments in the format string, but I think you get the idea.
There shouldn't be a hard-coded string anywhere in the code, other than the
default English strings (or whatever other languages you want to include).
I don't know exactly where something like getString() ought to reside, maybe
in some sort of utility class or whatever, but it should be overridable in
some manner.

Don


From parrt at cs.usfca.edu  Tue May 16 23:24:00 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 16 23:24:03 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <000f01c67959$e78aa070$0202fea9@ssdev1>
References: <000f01c67959$e78aa070$0202fea9@ssdev1>
Message-ID: <C72E860D-A6EB-45AD-AC9A-53F45F171DB3@cs.usfca.edu>


On May 16, 2006, at 7:30 PM, Don Caton wrote:
> Doesn't look any different than v2.  The problem is not here, the  
> problem is
> in the exception classes.

They have no strings except place holder toStrings for debugging.   
All the meat is here in BaseRecognizer:

     public static void displayRecognitionError(String name,
                                                Object[] tokenNames,
                                                RecognitionException e)
     {
           System.err.print(getRuleInvocationStack(e, name)+
                          ": line "+e.line+":"+e.charPositionInLine+"  
");
	...

override that i guess...ooops.

>> If you override reportError you are golden...no strings...
>
> No, I think you're missing the point (or maybe the Java  
> implementation is
> completely different than C++).
>
> The default reportError() does nothing more than call re.toString()  
> and send
> it to cerr.  It makes sense to override it if you want to direct  
> the error
> message to a destination other than cerr.

uh, that's not what the code says that I sent.  it clearly calls the  
display function, right?

> It doesn't make any sense to override reportError() to change the  
> behavior
> of RecognitionException.  Why should reportError() have any  
> knowledge of the
> implementation details of any of the exception classes?

it doesn't...per the code I sent.

> All I'm saying is that the exception subclasses should not have  
> hard-coded
> strings,

they are no longer this way. :)

> they should call some sort of helper or utility method to obtain
> the string.

per the code I sent.  yes.

>   A simple example is in NoViableAltForCharException's
> toString(), which is:
>
>    return string("unexpected char: ")+charName(foundChar);
>
> This is bad.  It ought to be something like:
>
>    sprintf( buffer, getString( ANTLR_UNEXPECTED_CHAR ), charName 
> ( foundChar
> ) );
>    return string( buffer );

I think it's easy enough to override the display function to do just  
what you need. :) Presumably this would load a message from a  
template file for a specific app just like you're asking for. :)

Ter
From dcaton at shorelinesoftware.com  Wed May 17 06:15:21 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Wed May 17 06:15:46 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <C72E860D-A6EB-45AD-AC9A-53F45F171DB3@cs.usfca.edu>
Message-ID: <002901c679b3$f3976510$0202fea9@ssdev1>

Ter:

Ok, I think I should just wait until there's a C++ version and see how it
works.  No sense comparing 2.x to 3.0 if 3.0 addresses these problems
already.

I presume the 2.x versions have pretty much reached maturity and won't go
any further, correct?

Don


From parrt at cs.usfca.edu  Wed May 17 13:33:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 13:33:21 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <002901c679b3$f3976510$0202fea9@ssdev1>
References: <002901c679b3$f3976510$0202fea9@ssdev1>
Message-ID: <93776711-692D-4DC8-8911-4D676F585660@cs.usfca.edu>


On May 17, 2006, at 6:15 AM, Don Caton wrote:

> Ter:
>
> Ok, I think I should just wait until there's a C++ version and see  
> how it
> works.  No sense comparing 2.x to 3.0 if 3.0 addresses these problems
> already.

Correct...we'll have to see what Ric comes up with.  I support your  
suggestion and have done it for Java output.

> I presume the 2.x versions have pretty much reached maturity and  
> won't go
> any further, correct?

That is likely I'm afraid.

Ter

From kroepke at dolphin-services.de  Wed May 17 13:36:44 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Wed May 17 13:36:51 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <93776711-692D-4DC8-8911-4D676F585660@cs.usfca.edu>
References: <002901c679b3$f3976510$0202fea9@ssdev1>
	<93776711-692D-4DC8-8911-4D676F585660@cs.usfca.edu>
Message-ID: <75023021-519F-416E-B9B7-165FBACBC55D@dolphin-services.de>


On 17. May 2006, at 22:33 Uhr, Terence Parr wrote:

> That is likely I'm afraid.

Well, it's about time to move on, isn't it? I don't think there's too  
much to be won to put a lot of effort into v2, but instead focus
on v3 to reach beta status soon, so people can appreciate the hard  
work you put into it :)

my 2?

-k
From gudnabrsam at yahoo.com  Wed May 17 16:18:09 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Wed May 17 16:18:12 2006
Subject: [antlr-interest] Re: [antlr-dev] ANT build cruft?
In-Reply-To: <C5587697-236E-4FB6-94DB-B190A35E430A@cs.usfca.edu>
Message-ID: <20060517231809.28648.qmail@web30910.mail.mud.yahoo.com>



--- Terence Parr <parrt@cs.usfca.edu> wrote:

> 
> On May 17, 2006, at 1:19 AM, Jim Idle wrote:
> 
> >
> >
> >
> > On 5/16/06 8:25 PM, "yawl.20884287@bloglines.com"
> > <yawl.20884287@bloglines.com> wrote:
> >
> >> Hi Terence,
> >> Almost all projects I know put them in the main
> directory.
> >>
> >
> > Though, the ones I use with netbeans seem to be
> able to live  
> > anywhere in
> > fact so long as you set the root paths and so on
> and use variables  
> > for the
> > locations.
> >
> > This reminds me though that the current ANT task
> for V2 is not quite
> > compatible with the one required for V3. I started
> to look at it,  
> > but there
> > are few comments and it seems that you have to
> know more about ANT  
> > than I
> > want to. So, it seems we need to find a volunteer
> to update the V2  
> > ANT task
> > for V3?
> 
> I guess you're right!  Ewwww...i dont' want to get
> too close to it  
> lest the "stank" wear off me ;)
> 
> Ter
> 

I can't commit to writing the task... I may do it
anyway, I just can't officially commit to it as I'm
extremely busy lately.  What I would like to see:

- ANTLR hosts the antlr3 task.  It is just sensible
for non-core tasks to be hosted by the related product
or an interested third party (Scott? ;).  It might
look cool packaged as an antlib, so that a user would
commonly declare an "antlr" namespace and invoke

<antlr:tool> or whatever the v3 idiom is.

- The new task addresses the shortcomings of the
existing apache-hosted task.  I don't remember what
they are actually; having gotten frustrated with that
task many years ago I have actually used <java
class="antlr.Tool"> or the commandline since.  Can any
current users offer input here (except for that silly
"ANTLR task should create its own output dir" stuff).

- Oh, yeah, the current task has to parse the grammar
files to figure out the destination file(s) for a
given grammar.  Having this info determined by some
kind of "official" ANTLR utility code would be nice. 
I imagine all codegen authors have to determine this
info somehow; could ANTLR3 make this info available
via an API call (does it already)?

It'd be nice to make the new task as slick as
possible.  If I had enough info to start with I could
probably slap something together pretty quickly.

-Matt

> _______________________________________________
> antlr-dev mailing list
> antlr-dev@antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Wed May 17 16:52:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 16:52:34 2006
Subject: [antlr-interest] ANT build cruft?
In-Reply-To: <20060517231809.28648.qmail@web30910.mail.mud.yahoo.com>
References: <20060517231809.28648.qmail@web30910.mail.mud.yahoo.com>
Message-ID: <9CAB7971-F5F9-4724-A106-1A02038888B0@cs.usfca.edu>


On May 17, 2006, at 4:18 PM, Matt Benson wrote:
> I can't commit to writing the task... I may do it
> anyway, I just can't officially commit to it as I'm
> extremely busy lately.  What I would like to see:

[snip]

all sounds good...yeah i should host at antlr.org

Ter

From parrt at cs.usfca.edu  Wed May 17 16:58:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 16:58:07 2006
Subject: [antlr-interest] file names and grammar names
Message-ID: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>

Currently you can name your grammar file anything and then have any  
grammar name inside. E.g., t.g can have

grammar Foo

in it.  When we go looking for other grammar vocabularies etc... it  
would be nice to be able to tell (like Java does) from the filename  
what's inside...

Do people think I should force the grammar name (including case) to  
be same as filename (with .g suffix)?

Ter
From kroepke at dolphin-services.de  Wed May 17 17:09:25 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Wed May 17 17:09:33 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
Message-ID: <674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>


On 18. May 2006, at 1:58 Uhr, Terence Parr wrote:

> Currently you can name your grammar file anything and then have any  
> grammar name inside. E.g., t.g can have
>
> grammar Foo
>
> in it.  When we go looking for other grammar vocabularies etc... it  
> would be nice to be able to tell (like Java does) from the filename  
> what's inside...
>
> Do people think I should force the grammar name (including case) to  
> be same as filename (with .g suffix)?

Well, personally I have always disliked that but I can see the merit  
for getting vocabs. If it's clearly spelled out in the docs, it  
shouldn't really be a problem.

What would lexer grammar file names look like? Foo.lexer.g (like  
those coming out of combined grammars)?

-k
From parrt at cs.usfca.edu  Wed May 17 17:13:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 17:13:04 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
Message-ID: <C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>


On May 17, 2006, at 5:09 PM, Kay Roepke wrote:
>> Do people think I should force the grammar name (including case)  
>> to be same as filename (with .g suffix)?
>
> Well, personally I have always disliked that but I can see the  
> merit for getting vocabs. If it's clearly spelled out in the docs,  
> it shouldn't really be a problem.
>
> What would lexer grammar file names look like? Foo.lexer.g (like  
> those coming out of combined grammars)?

Good point.  It would have to go like this:

T.g:
grammar T;

TLexer.g:
grammar TLexer;

Ter
From kroepke at dolphin-services.de  Wed May 17 17:24:39 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Wed May 17 17:24:45 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
	<C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>
Message-ID: <2BBEC361-CD55-4277-BA64-1B5EF84FCEC6@dolphin-services.de>


On 18. May 2006, at 2:13 Uhr, Terence Parr wrote:

> Good point.  It would have to go like this:
>
> T.g:
> grammar T;
>
> TLexer.g:
> grammar TLexer;

Ok, so the naming of the implicit lexer in combined grammars would  
have to change, too, right?

-k

From lstals at swin.edu.au  Wed May 17 17:29:31 2006
From: lstals at swin.edu.au (Lucien Stals)
Date: Wed May 17 17:29:31 2006
Subject: [antlr-interest] help with grammar
Message-ID: <446BBFEB.3030208@swin.edu.au>

I'm working on a project which involves parsing a file in ASAP2 format. 
Has anyone had experience with this format before?

I am inexperienced with writing parser grammars and there has been a 
steep learning curve for me (which I'm not complaining about), but I 
have hit a bit of a wall.

The files I'm working with basically have a header section for which I 
have been able to write grammar rules for. Then there is a meta data 
section which describes how the rest of the document is structured. In 
some ways this is like an XML schema in that the exact format is not 
known until the schema is read.

To me, it's starting to look like I have to write on grammar to read the 
meta section and then generate a *second* grammar on the fly to read the 
rest of the document. This seems like a lot of work and I want to know 
I'm not barking up the wrong tree before I go too far with this.

Has anyone had experience with this file format before (ASAP2 with A2ML 
as the meta section)?

Or has anyone had experience with something similar?

I'd love to talk to you about your experiences is you have. Or can 
anyone point me in the direction of somebody I could talk to about this.

Thanks heaps.

Lucien.

-- 
      Lucien Stals
    Research Engineer
  Faculty of Information and Communication Technologies
   Swinburne University of Technology
  PO Box 218 Hawthorn, 3122, Australia
      email: lstals@swin.edu.au
  telephone: +61 3 9214 5735
        fax: +61 3 9819 0823
     office: EW307a

From parrt at cs.usfca.edu  Wed May 17 17:39:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 17:39:25 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <2BBEC361-CD55-4277-BA64-1B5EF84FCEC6@dolphin-services.de>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
	<C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>
	<2BBEC361-CD55-4277-BA64-1B5EF84FCEC6@dolphin-services.de>
Message-ID: <FA92D569-405A-44B0-90B9-E7786FCD353A@cs.usfca.edu>

On May 17, 2006, at 5:24 PM, Kay Roepke wrote:
> On 18. May 2006, at 2:13 Uhr, Terence Parr wrote:
>
>> Good point.  It would have to go like this:
>>
>> T.g:
>> grammar T;
>>
>> TLexer.g:
>> grammar TLexer;
>
> Ok, so the naming of the implicit lexer in combined grammars would  
> have to change, too, right?

Yup.

Ter
From prashant.deva at gmail.com  Wed May 17 18:25:24 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed May 17 18:25:27 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <FA92D569-405A-44B0-90B9-E7786FCD353A@cs.usfca.edu>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
	<C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>
	<2BBEC361-CD55-4277-BA64-1B5EF84FCEC6@dolphin-services.de>
	<FA92D569-405A-44B0-90B9-E7786FCD353A@cs.usfca.edu>
Message-ID: <41fed8f80605171825u71a922f6i8649422470d5e431@mail.gmail.com>

Does this mean we will be forced to have separate files for parser and lexer
grammars?

On 5/18/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> On May 17, 2006, at 5:24 PM, Kay Roepke wrote:
> > On 18. May 2006, at 2:13 Uhr, Terence Parr wrote:
> >
> >> Good point.  It would have to go like this:
> >>
> >> T.g:
> >> grammar T;
> >>
> >> TLexer.g:
> >> grammar TLexer;
> >
> > Ok, so the naming of the implicit lexer in combined grammars would
> > have to change, too, right?
>
> Yup.
>
> Ter
>



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060518/69fdfec3/attachment-0001.html
From parrt at cs.usfca.edu  Wed May 17 18:28:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 17 18:28:48 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <41fed8f80605171825u71a922f6i8649422470d5e431@mail.gmail.com>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
	<C48C0BFA-FB2D-4253-976E-25F76C3F870A@cs.usfca.edu>
	<2BBEC361-CD55-4277-BA64-1B5EF84FCEC6@dolphin-services.de>
	<FA92D569-405A-44B0-90B9-E7786FCD353A@cs.usfca.edu>
	<41fed8f80605171825u71a922f6i8649422470d5e431@mail.gmail.com>
Message-ID: <CB36D175-86B4-436E-B3AA-DB5E77D83B0A@cs.usfca.edu>


On May 17, 2006, at 6:25 PM, Prashant Deva wrote:

> Does this mean we will be forced to have separate files for parser  
> and lexer grammars?

Nope.   Combined grammars still :)

Ter
From mail at martin-probst.com  Thu May 18 00:40:15 2006
From: mail at martin-probst.com (Martin Probst)
Date: Thu May 18 00:40:23 2006
Subject: [antlr-interest] Re: [antlr-dev] ANT build cruft?
In-Reply-To: <20060517231809.28648.qmail@web30910.mail.mud.yahoo.com>
References: <20060517231809.28648.qmail@web30910.mail.mud.yahoo.com>
Message-ID: <BA022380-629E-46BB-953B-C54D46E12720@martin-probst.com>

Hi,

> - The new task addresses the shortcomings of the
> existing apache-hosted task.  I don't remember what
> they are actually; having gotten frustrated with that
> task many years ago I have actually used <java
> class="antlr.Tool"> or the commandline since.  Can any
> current users offer input here (except for that silly
> "ANTLR task should create its own output dir" stuff).

The problem is dependency management and time stamps. To ANT it looks  
like ANTLR has one input file, foo.g, and potentially several output  
files, fooLexer.java, FooParser.java, etc. Now if I change the  
grammar, ANT thinks it needs to update all three files. But when it  
runs ANTLR, ANTLR only updates the files it really has to. So there  
can be changes which actually don't change anything in the files, and  
changes which only change some of the files. In any of these, ANT  
keeps running the ANTLR task every time because it doesn't expect  
this behaviour.

For C++ people this careful behaviour about modifying/touching files  
might actually be very nice (less C++ compiling), but for Java it's  
generally a lot more annoying to have ANTLR running every time than  
compiling two Java files once more than absolutely necessary. I think  
anyone with a real build system uses the old "touch file" strategy,  
which actually results in an optimal solution. However I think a  
built-in task can hardly start creating magic "touch" files, so it  
should maybe resort to saying: "one of the output files is newer than  
the grammar" instead of "all of the output files are newer than the  
grammar", if that's possible in ANT?

Martin
From JConner at ssp-uk.com  Thu May 18 00:54:59 2006
From: JConner at ssp-uk.com (JConner@ssp-uk.com)
Date: Thu May 18 00:56:00 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
Message-ID: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>

Hi All,

I've started to get my feet wet with ANTLR a little, and I've come across a
few things that I thought would be handled by lexer rules, but seem to be
handled in general by parser rules.  For example, most of the examples I've
seen handle numbers (floating, exponents, sign, etc) with parser rules,
whereas I would have expected these to have been handled by the lexer and
presented to the parser as one entity (ie, as just a number).  Am I
misunderstanding something?

John

________________________________________________________________________
This communication and any attachments contain information which is confidential and may also be privileged.  It is for the exclusive use of the intended recipient(s).  If you are not the intended recipient(s) please note that any form of disclosure, distribution, copying or use of this communication or the information in it or in any attachments is strictly prohibited and may be unlawful.

If you have received this communication in error, please return it with the title received in error to networks@ssp-uk.com then delete the email and destroy any copies of it.

E-mail communications cannot be guaranteed to be secure or error free, as information could be intercepted, corrupted, amended, lost, destroyed, arrive late or incomplete, or contain viruses.  We do not accept liability for any such matters or their consequences.  

Anyone who communicates with us by e-mail is taken to accept the risks in doing so.

All correspondence is supplied on a confidential basis and remains the property of Software Solutions Partners Limited.  Opinions, conclusions and other information in this e-mail and any attachments which do not relate to the official business of the firm are neither given nor endorsed by it.
________________________________________________________________________

From avimalik at gmail.com  Thu May 18 01:15:31 2006
From: avimalik at gmail.com (Avinash Malik)
Date: Thu May 18 01:15:33 2006
Subject: [antlr-interest] Regarding using StringTemplates
Message-ID: <c1cd9c970605180115y2f76cf0ew74af383a4a734d12@mail.gmail.com>

Hello,
       I have just started using String emplates and when I write a
String-Template Group
I have to use $...$ instead of using <...> why is that??
When I put <......> in then I get the same thing printed out the
things inside are not replaced at all.


regards,
-- 
Avinash Malik
From sdb at geekworld.co.uk  Thu May 18 02:01:01 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Thu May 18 02:01:13 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
Message-ID: <446C37CD.5030505@geekworld.co.uk>

Kay Roepke wrote:
> 
> On 18. May 2006, at 1:58 Uhr, Terence Parr wrote:
> 
>> Currently you can name your grammar file anything and then have any 
>> grammar name inside. E.g., t.g can have
>>
>> grammar Foo
>>
>> in it.  When we go looking for other grammar vocabularies etc... it 
>> would be nice to be able to tell (like Java does) from the filename 
>> what's inside...
>>
>> Do people think I should force the grammar name (including case) to 
>> be same as filename (with .g suffix)?
<SNIP>
> 
> What would lexer grammar file names look like? Foo.lexer.g (like  those
> coming out of combined grammars)?

I would say that it would be sensible for, say, Foo.g to be able to
contain FooParser, FooLexer, and FooTreeParser, for example.

Sam

From Kai.Koehne at student.hpi.uni-potsdam.de  Thu May 18 02:12:04 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Thu May 18 02:13:50 2006
Subject: AW: [antlr-interest] Re: [antlr-dev] ANT build cruft?
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E81@3mxstu1r.hpi.uni-potsdam.de>

Hi,

another annoyance with the current antlr task is that it does not know anything about the dependencies between several grammars which are caused by common vocab files. If the parser generates a new vocabulary file, the consuming treewalker is not recompiled ... and you get bugs that you just do not understand :-( It would be great if new versions would support this :-)

Regards,

Kai Koehne

________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Matt Benson
Gesendet: Do 18.05.2006 01:18
An: Antlr List
Betreff: [antlr-interest] Re: [antlr-dev] ANT build cruft?
[...]

- The new task addresses the shortcomings of the
existing apache-hosted task.  I don't remember what
they are actually; having gotten frustrated with that
task many years ago I have actually used <java
class="antlr.Tool"> or the commandline since.  Can any
current users offer input here (except for that silly
"ANTLR task should create its own output dir" stuff).
[...]


From dieter_frej at gmx.net  Thu May 18 06:53:29 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu May 18 06:53:35 2006
Subject: [antlr-interest] resolving left-recursive rules
Message-ID: <446C7C59.7030900@gmx.net>

Hi everybody,

at the weekend I had to much time and started copying the Java grammar
from the Java language specification to antlr v3. Unfortunately, this
grammar contains a lot of left-recursive rules and antlr does not like
left-recursiveness.

An example is
EnumConstants:
EnumConstant
EnumConstants , EnumConstant

My question is now what is the best ways to solve such left-recursive
rules? antlrworks provides some automatic resolving, but I have no idea
if it is doing it the right why. Or with other words: I would like to
understand what it is doing ;-)

Thanks in advance

- Didi
From gudnabrsam at yahoo.com  Thu May 18 08:51:53 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu May 18 08:51:57 2006
Subject: [antlr-interest] Re: [antlr-dev] ANT build cruft?
In-Reply-To: <BA022380-629E-46BB-953B-C54D46E12720@martin-probst.com>
Message-ID: <20060518155153.54761.qmail@web30909.mail.mud.yahoo.com>

--- Martin Probst <mail@martin-probst.com> wrote:

> Hi,
> 
> > - The new task addresses the shortcomings of the
> > existing apache-hosted task.  I don't remember
> what
> > they are actually; having gotten frustrated with
> that
> > task many years ago I have actually used <java
> > class="antlr.Tool"> or the commandline since.  Can
> any
> > current users offer input here (except for that
> silly
> > "ANTLR task should create its own output dir"
> stuff).
> 
> The problem is dependency management and time
> stamps. To ANT it looks  
> like ANTLR has one input file, foo.g, and
> potentially several output  
> files, fooLexer.java, FooParser.java, etc. Now if I
> change the  
> grammar, ANT thinks it needs to update all three
> files. But when it  
> runs ANTLR, ANTLR only updates the files it really
> has to. So there  
> can be changes which actually don't change anything
> in the files, and  
> changes which only change some of the files. In any
> of these, ANT  
> keeps running the ANTLR task every time because it
> doesn't expect  
> this behaviour.
> 
> For C++ people this careful behaviour about
> modifying/touching files  
> might actually be very nice (less C++ compiling),
> but for Java it's  
> generally a lot more annoying to have ANTLR running
> every time than  
> compiling two Java files once more than absolutely
> necessary. I think  
> anyone with a real build system uses the old "touch
> file" strategy,  
> which actually results in an optimal solution.
> However I think a  
> built-in task can hardly start creating magic
> "touch" files, so it  
> should maybe resort to saying: "one of the output
> files is newer than  
> the grammar" instead of "all of the output files are
> newer than the  
> grammar", if that's possible in ANT?

I am 99% sure that is doable using existing features;
if not it would be trivial.  It still remains that it
would be nice to have a uniform way of knowing what
those target files are.  If this could be accessed via
some forthcoming ANTLR API we could wrap that up into
an Ant file mapper (these can have multiple outputs
for a given input).  The API is IMO necessary due to
ANTLR's myriad implementation languages.

-Matt

> 
> Martin
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From gudnabrsam at yahoo.com  Thu May 18 08:57:01 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu May 18 08:57:03 2006
Subject: AW: [antlr-interest] Re: [antlr-dev] ANT build cruft?
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E81@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <20060518155701.57103.qmail@web30909.mail.mud.yahoo.com>



--- Koehne Kai <Kai.Koehne@student.hpi.uni-potsdam.de>
wrote:

> Hi,
> 
> another annoyance with the current antlr task is
> that it does not know anything about the
> dependencies between several grammars which are
> caused by common vocab files. If the parser
> generates a new vocabulary file, the consuming
> treewalker is not recompiled ... and you get bugs
> that you just do not understand :-( It would be
> great if new versions would support this :-)

Thanks for your input, Kai.  I would think this would
be another place where it would make sense for ANTLR
to provide a hook to these types of calculations,
which could then be leveraged by an Ant task.  I am
not sure how trivial this would be, however; it might
become rather onerous given a large number of input
files.  The ongoing file naming convention talks might
bear fruit that would simplify such work...

-Matt

> 
> Regards,
> 
> Kai Koehne
> 
> ________________________________
> 
> Von: antlr-interest-bounces@antlr.org im Auftrag von
> Matt Benson
> Gesendet: Do 18.05.2006 01:18
> An: Antlr List
> Betreff: [antlr-interest] Re: [antlr-dev] ANT build
> cruft?
> [...]
> 
> - The new task addresses the shortcomings of the
> existing apache-hosted task.  I don't remember what
> they are actually; having gotten frustrated with
> that
> task many years ago I have actually used <java
> class="antlr.Tool"> or the commandline since.  Can
> any
> current users offer input here (except for that
> silly
> "ANTLR task should create its own output dir"
> stuff).
> [...]
> 
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Thu May 18 10:49:58 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 10:50:03 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>
Message-ID: <B203788F-097F-4D71-BB71-824DDFEEB919@cs.usfca.edu>


On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com> <JConner@ssp- 
uk.com> wrote:

> Hi All,
>
> I've started to get my feet wet with ANTLR a little, and I've come  
> across a
> few things that I thought would be handled by lexer rules, but seem  
> to be
> handled in general by parser rules.  For example, most of the  
> examples I've
> seen handle numbers (floating, exponents, sign, etc) with parser  
> rules,

Those should be lexer rules...most places I've seen.  Remember FLOAT  
means lexer rule :)

Ter

From parrt at cs.usfca.edu  Thu May 18 10:50:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 10:50:46 2006
Subject: [antlr-interest] Regarding using StringTemplates
In-Reply-To: <c1cd9c970605180115y2f76cf0ew74af383a4a734d12@mail.gmail.com>
References: <c1cd9c970605180115y2f76cf0ew74af383a4a734d12@mail.gmail.com>
Message-ID: <908657F4-2139-40A2-84B9-6F2C957BF009@cs.usfca.edu>


On May 18, 2006, at 1:15 AM, Avinash Malik wrote:

> Hello,
>       I have just started using String emplates and when I write a
> String-Template Group
> I have to use $...$ instead of using <...> why is that??
> When I put <......> in then I get the same thing printed out the
> things inside are not replaced at all.

the default for group file format in 2.3b7 (due out in days) is  
<...>  Currently it's $..$.  Look through unit tests or doc and see  
AngleBracket... thingie.
Ter

From parrt at cs.usfca.edu  Thu May 18 10:52:00 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 10:52:05 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <446C37CD.5030505@geekworld.co.uk>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<674CCE11-AD03-4167-A07D-12A936C8AB66@dolphin-services.de>
	<446C37CD.5030505@geekworld.co.uk>
Message-ID: <9AF9D0CE-3D24-4A30-8FD4-569B0147343D@cs.usfca.edu>


On May 18, 2006, at 2:01 AM, Sam Barnett-Cormack wrote:
>> What would lexer grammar file names look like? Foo.lexer.g (like   
>> those
>> coming out of combined grammars)?
>
> I would say that it would be sensible for, say, Foo.g to be able to
> contain FooParser, FooLexer, and FooTreeParser, for example.

I decided that, since I need to find grammars and vocabs, it is  
better to keep it as 1 grammar, 1 file.

Ter
From parrt at cs.usfca.edu  Thu May 18 10:54:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 10:54:42 2006
Subject: [antlr-interest] resolving left-recursive rules
In-Reply-To: <446C7C59.7030900@gmx.net>
References: <446C7C59.7030900@gmx.net>
Message-ID: <5CB8F672-6FC9-462B-8A24-74A4EE86B97C@cs.usfca.edu>


On May 18, 2006, at 6:53 AM, Dieter Frej wrote:

> Hi everybody,
>
> at the weekend I had to much time and started copying the Java grammar
> from the Java language specification to antlr v3

Hooray!

> . Unfortunately, this
> grammar contains a lot of left-recursive rules and antlr does not like
> left-recursiveness.
>
> An example is
> EnumConstants:
> EnumConstant
> EnumConstants , EnumConstant
>
> My question is now what is the best ways to solve such left-recursive
> rules? antlrworks provides some automatic resolving, but I have no  
> idea
> if it is doing it the right why. Or with other words: I would like to
> understand what it is doing ;-)

Let ANTLRWorks do its thing and then check a textbook or web search :)

Ter

From parrt at cs.usfca.edu  Thu May 18 10:56:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 10:56:15 2006
Subject: AW: [antlr-interest] Re: [antlr-dev] ANT build cruft?
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E81@3mxstu1r.hpi.uni-potsdam.de>
References: <D90489B77ED9F8439A3C784F732BEC9C737E81@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <AA9812AB-DDF5-4A7C-910C-B40A57AB9AE6@cs.usfca.edu>


On May 18, 2006, at 2:12 AM, Koehne Kai wrote:

> Hi,
>
> another annoyance with the current antlr task is that it does not  
> know anything about the dependencies between several grammars which  
> are caused by common vocab files. If the parser generates a new  
> vocabulary file, the consuming treewalker is not recompiled ... and  
> you get bugs that you just do not understand :-( It would be great  
> if new versions would support this :-)

This is why I want to make filenames correspond to grammar names;  
should make this easier.

Ter

From parrt at cs.usfca.edu  Thu May 18 15:11:46 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 18 15:11:50 2006
Subject: [antlr-interest] almost ready for ST 2.3eb7 :)
Message-ID: <7F843A1F-40C2-426C-99C8-983FD45EFF09@cs.usfca.edu>

Hi,

I have just finished a big list of bug fixes.  Kunle is almost caught  
up with the C# version.  We should be able to push in a matter of  
days.  This will be damn close to a 2.3 full release.  I want some  
more features, but I should get this version out and leave room for  
2.4 :)

Ter
From ric.klaren at gmail.com  Fri May 19 04:37:54 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri May 19 04:37:56 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
Message-ID: <bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>

Hi,

On 5/18/06, Terence Parr <parrt@cs.usfca.edu> wrote:
> Currently you can name your grammar file anything and then have any
> grammar name inside. E.g., t.g can have
>
> grammar Foo
>
> in it.  When we go looking for other grammar vocabularies etc... it
> would be nice to be able to tell (like Java does) from the filename
> what's inside...
>
> Do people think I should force the grammar name (including case) to
> be same as filename (with .g suffix)?

Dunno. I don't like the force thingy ;) Including case might give
problem on filesystems not supporting (or faking) case sensitivity.
Maybe a case if it's not broken don't fix it?

Cheers,

Ric
From kroepke at dolphin-services.de  Fri May 19 04:49:39 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri May 19 04:49:46 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
	<bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
Message-ID: <CA964779-3D41-49AD-B01B-228ABB67F737@dolphin-services.de>


On 19. May 2006, at 13:37 Uhr, Ric Klaren wrote:

> Including case might give
> problem on filesystems not supporting (or faking) case sensitivity.

I thought about that, too, but the only (relevant) filesystem I can  
think of is HFS+. But while being
case-insensitive, it is case preserving, thus I don't think there  
will be any problem with it. At least I've
never encountered any problems.
But for good measure we could output a helpful message indicating  
potential case mismat when ANTLR cannot find
a file.

-k
From antlr at shmuelhome.mine.nu  Fri May 19 05:16:22 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri May 19 05:16:07 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <CA964779-3D41-49AD-B01B-228ABB67F737@dolphin-services.de>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>	<bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
	<CA964779-3D41-49AD-B01B-228ABB67F737@dolphin-services.de>
Message-ID: <446DB716.3020204@shmuelhome.mine.nu>

Kay Roepke wrote:
> 
> On 19. May 2006, at 13:37 Uhr, Ric Klaren wrote:
> 
>> Including case might give
>> problem on filesystems not supporting (or faking) case sensitivity.
> 
> I thought about that, too, but the only (relevant) filesystem I can 
> think of is HFS+. But while being
> case-insensitive, it is case preserving, thus I don't think there will 
> be any problem with it. At least I've
> never encountered any problems.
> But for good measure we could output a helpful message indicating 
> potential case mismat when ANTLR cannot find
> a file.
> 
> -k
> 
I have run into this problem using Eclipse on win2k. Java complains that 
the class name doesn't match the file name because of case sensitivity. 
Eclipse won't let me change the file name to the same name with 
different case, because a file of that name already exists. Instead I 
have to change the file name to a temporary name and then to the name 
that I really want.



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.6.1/343 - Release Date: 5/18/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.6.1/343 - Release Date: 5/18/2006

From open.zone at virgin.net  Fri May 19 05:34:20 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri May 19 05:16:55 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
Message-ID: <010501c67b40$903abdd0$c704a8c0@hercules>

Ric,

> > Do people think I should force the grammar name (including 
> case) to be 
> > same as filename (with .g suffix)?
> 
> Dunno. I don't like the force thingy ;) Including case might 
> give problem on filesystems not supporting (or faking) case 
> sensitivity. Maybe a case if it's not broken don't fix it?

Perhaps it was "broken" and we just got used to it?  ;-)

Anyhooo, it was part of the reason I stopped the VS.NET [codegen]
integration for ANTLR way back when. The multiple [possibly unrelated]
language processors from one grammar file issue was another. VS.NET just
couldn't handle that with any of it's straightforward-integration options.

I like the flexibility even though I most often use a
one-langauge-processor-per-file scheme. Perhaps we could consider providing
a tiny support library that can be used to determine the output files for a
given grammar file. This library would be distinct from the runtime library.
It is really meant to be used by/with build tools and could be available in
Java, C (or perhaps C++) and C# to cover most build platforms.

I don't much like Java's inflexible naming scheme but, I'd like to see a
Nant/MSBuild task too.


Micheal

From kroepke at dolphin-services.de  Fri May 19 05:34:32 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri May 19 05:34:41 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <446DB716.3020204@shmuelhome.mine.nu>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>	<bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
	<CA964779-3D41-49AD-B01B-228ABB67F737@dolphin-services.de>
	<446DB716.3020204@shmuelhome.mine.nu>
Message-ID: <4E05DD96-29F4-42C8-A93F-BC4F530A19EC@dolphin-services.de>


On 19. May 2006, at 14:16 Uhr, shmuel siegel wrote:

> I have run into this problem using Eclipse on win2k. Java complains  
> that the class name doesn't match the file name because of case  
> sensitivity. Eclipse won't let me change the file name to the same  
> name with different case, because a file of that name already  
> exists. Instead I have to change the file name to a temporary name  
> and then to the name that I really want.

Mmmh..what filesystem was that? FAT32? Damn, I though it was case- 
sensitive, but it's long ago that I had to use it.
What's the default for newer MS systems? NTFS? But that's case- 
sensitive, right?

-k
From antlr at shmuelhome.mine.nu  Fri May 19 06:04:44 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri May 19 06:04:07 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <4E05DD96-29F4-42C8-A93F-BC4F530A19EC@dolphin-services.de>
References: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>	<bc607a4e0605190437s168985do22ec48eee65e588@mail.gmail.com>
	<CA964779-3D41-49AD-B01B-228ABB67F737@dolphin-services.de>
	<446DB716.3020204@shmuelhome.mine.nu>
	<4E05DD96-29F4-42C8-A93F-BC4F530A19EC@dolphin-services.de>
Message-ID: <446DC26C.3000809@shmuelhome.mine.nu>

Kay Roepke wrote:
> 
> On 19. May 2006, at 14:16 Uhr, shmuel siegel wrote:
> 
>> I have run into this problem using Eclipse on win2k. Java complains 
>> that the class name doesn't match the file name because of case 
>> sensitivity. Eclipse won't let me change the file name to the same 
>> name with different case, because a file of that name already exists. 
>> Instead I have to change the file name to a temporary name and then to 
>> the name that I really want.
> 
> Mmmh..what filesystem was that? FAT32? Damn, I though it was 
> case-sensitive, but it's long ago that I had to use it.
> What's the default for newer MS systems? NTFS? But that's 
> case-sensitive, right?
> 
> -k
> 
No NTFS is case insensitive but case preserving. The old DOS programs 
still need to work.



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.6.1/343 - Release Date: 5/18/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.6.1/343 - Release Date: 5/18/2006

From dcaton at shorelinesoftware.com  Fri May 19 07:08:17 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Fri May 19 07:08:45 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <2B17206E-FA2A-4FC8-86C8-4480782EA43A@cs.usfca.edu>
Message-ID: <003001c67b4d$adc98040$030fa8c0@ssdev1>

Ter:

> Do people think I should force the grammar name (including 
> case) to be same as filename (with .g suffix)?

Yes.  This is standard behavior.  If you compile foo.cpp, by default you get
foo.obj out the other end.  Any other generated files also have the same
base name 'foo' as well.

If you want an output name that's different that the input file name,
provide a command line switch to override the output name.  That should
satisfy both needs.  I don't think you need a 'grammar foo' statement at
all.

And even if foo.g hasn't changed, the timestamps of the output files should
be guaranteed to be later than foo.g.

Please don't perpetuate this weird behavior in Antlr 3, it causes lots of
grief for those of us who try to integrate Antlr into a normal build system
that depends on timestamps.  Or provide another command line switch so we
can choose the behavior that's appropriate for our particular build systems.

Don


From Kai.Koehne at student.hpi.uni-potsdam.de  Fri May 19 08:49:11 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Fri May 19 08:49:17 2006
Subject: [antlr-interest] Problem parsing left-recursive expressions (AntLR
	2.7.5)
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E86@3mxstu1r.hpi.uni-potsdam.de>

Hi,
 
I have a rather nasty left-recursive structure to parse which I just cannot manage to handle correctly :-( Maybe I am just to blind to see, and you can enlighten me :-)
 
Here is the grammar I started with:
 
  variable:
    NAME
  | variable LBRACK expression RBRACK
  | LBRACK variable FROM base (FOR count)? RBRACK
  ;
 
Which is left-recursive. So I tried to refactore it a bit:
 
  variable:
    (LBRACK)* NAME
      ( 
           ( FROM base ( FOR count )? RBRACK )
         | ( LBRACK expression RBRACK )
      )*
  ;
 
which is not exactly the same - it is not ensured that there is an equal number of LBRACK and RBRACK tokens. This is why further augmented it:
 
  variable:
  {
    int openBrackets = 0;
  }
    (LBRACK {openBrackets++;})* NAME
      ( 
           ( openBrackets > 0 )?
           ( FROM base ( FOR count )? RBRACK  { openBrackets--;} )
         | 
           ( LBRACK expression RBRACK )
      )*
  {
    if (openBrackets > 0)
      throw new SemanticException();
  }
  ;
 
Which works most of the time. UNLESS it is used in a syntactic predicate, where all the openBracket stuff is not executed, and applies incorrectly to stuff like "LBRACK NAME".
 
So my questions are:
  - Is there another clever way to refactor the rules?
  - If not, how can I ensure that the openBracket checks are even executed the guessing mode? I already tried things like faking the "inputState.guessing" setting, embedding everything in syntactic predicates which are always true ... but nothing worked out.
  - I would even consider to hand-code the variable rule. Is this somehow possible?
 
Thanks in advance,
 
Kai Koehne
From jbb at acm.org  Fri May 19 09:41:26 2006
From: jbb at acm.org (John B. Brodie)
Date: Fri May 19 09:42:24 2006
Subject: [antlr-interest] Problem parsing left-recursive expressions (AntLR
	2.7.5)
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E86@3mxstu1r.hpi.uni-potsdam.de>
	(message from Koehne Kai on Fri, 19 May 2006 17:49:11 +0200)
References: <D90489B77ED9F8439A3C784F732BEC9C737E86@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <E1Fh82Y-0008R7-00@gecko>

on Fri, 19 May 2006 17:49:11 +0200, Kai Koehne asked:
>I have a rather nasty left-recursive structure to parse which I just
>cannot manage to handle correctly ...
> 
>  variable:
>    NAME
>  | variable LBRACK expression RBRACK
>  | LBRACK variable FROM base (FOR count)? RBRACK
>  ;
>...

how about (haven't actually tested it...):

variable :
    ( NAME | ( LBRACK variable FROM base (FOR count)? RBRACK ) )
    ( LBRACK expression RBRACK )*
  ;

Hope this helps...
   -jbb
From open.zone at virgin.net  Fri May 19 13:00:26 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri May 19 12:42:50 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <003001c67b4d$adc98040$030fa8c0@ssdev1>
Message-ID: <011301c67b7e$e030ad20$c704a8c0@hercules>

> Ter:
> 
> > Do people think I should force the grammar name (including
> > case) to be same as filename (with .g suffix)?
> 
> Yes.  This is standard behavior.  If you compile foo.cpp, by 
> default you get foo.obj out the other end.  Any other 
> generated files also have the same base name 'foo' as well.

Not quite the same. And not standard at all. Foo.cpp may actually contain
types NotFoo<T> and SomethingElse. Same with Foo.cs, Foo.C, Foo.py etc

Only Java has this as standard behaviour afaict. Not nice but, may just work
for ANTLR given the past fews days discussion.

> And even if foo.g hasn't changed, the timestamps of the 
> output files should be guaranteed to be later than foo.g.

You mean due to a previous build right?. Not suggesting the outputfiles be
touched always?

> Please don't perpetuate this weird behavior in Antlr 3, it 
> causes lots of grief for those of us who try to integrate 
> Antlr into a normal build system that depends on timestamps.  
> Or provide another command line switch so we can choose the 
> behavior that's appropriate for our particular build systems.

Making it an option is more user-friendly than my previous API/library
suggestion. Not as flexible mind but...


Micheal

From dcaton at shorelinesoftware.com  Fri May 19 13:24:32 2006
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Fri May 19 13:24:54 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <011301c67b7e$e030ad20$c704a8c0@hercules>
Message-ID: <005701c67b82$3d37f480$030fa8c0@ssdev1>

Micheal:

> Not quite the same. And not standard at all. Foo.cpp may 
> actually contain types NotFoo<T> and SomethingElse. Same with 
> Foo.cs, Foo.C, Foo.py etc

I typed that message too fast, what I meant was standard behavior as far as
the naming of output files is concerned, which generally doesn't have
anything to do with the actual contents of the file.

Perhaps using cpp files wasn't a good analogy.  What I was trying to say is
that if you have a grammar in fooParser.g then (IMO) it is reasonable to
emit fooParser.hpp and fooParser.cpp as defaults (or .cs, .py or whatever is
appropriate for the target language).  That makes things much simpler as far
as build systems go, and you can override the output names if you want.

> > And even if foo.g hasn't changed, the timestamps of the 
> output files 
> > should be guaranteed to be later than foo.g.
> 
> You mean due to a previous build right?. Not suggesting the 
> outputfiles be touched always?

Yes.  If you run antlr against any given input, every output file should be
touched (assuming no errors occur).  I'm not sure why Antlr tries to be
clever about not updating output files that don't need to change, but it
ends up requiring workarounds to prevent unnecessary rebuilding in any
system that uses timestamps to figure out what's out of date.

> Making it an option is more user-friendly than my previous 
> API/library suggestion. Not as flexible mind but...

The API/library idea isn't bad, but then you need an implementation for all
the different platforms someone might run Antlr on.  Probably better if
that's in the tool itself.

Don
 


From parrt at cs.usfca.edu  Fri May 19 15:33:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri May 19 15:33:19 2006
Subject: [antlr-interest] file names and grammar names
In-Reply-To: <005701c67b82$3d37f480$030fa8c0@ssdev1>
References: <005701c67b82$3d37f480$030fa8c0@ssdev1>
Message-ID: <2C2BFF17-DE29-4502-941F-DC86F17C2114@cs.usfca.edu>


On May 19, 2006, at 1:24 PM, Don Caton wrote:
> Perhaps using cpp files wasn't a good analogy.  What I was trying  
> to say is
> that if you have a grammar in fooParser.g then (IMO) it is  
> reasonable to
> emit fooParser.hpp and fooParser.cpp as defaults (or .cs, .py or  
> whatever is
> appropriate for the target language).  That makes things much  
> simpler as far
> as build systems go, and you can override the output names if you  
> want.

I'm pretty much in agreement with this...build tools and antlr itself  
will find it nices that X.g produces X.java *and* X's vocabulary  
file, X.tokens

>>> And even if foo.g hasn't changed, the timestamps of the
>> output files
>>> should be guaranteed to be later than foo.g.
>>
>> You mean due to a previous build right?. Not suggesting the
>> outputfiles be touched always?
>
> Yes.  If you run antlr against any given input, every output file  
> should be
> touched (assuming no errors occur).  I'm not sure why Antlr tries  
> to be
> clever about not updating output files that don't need to change,  
> but it
> ends up requiring workarounds to prevent unnecessary rebuilding in any
> system that uses timestamps to figure out what's out of date.

Yeah, I don't like the "don't touch files that haven't changed"  
bit...I left it in, in deference to Ric's preference or some other C+ 
+ person I think.

I've pretty much made up my mind to enforce grammar name and filename  
correspondence.  Thanks for the great discussion!

Ter
From jeff_c_lin at yahoo.com  Fri May 19 21:59:19 2006
From: jeff_c_lin at yahoo.com (Jeffrey Lin)
Date: Fri May 19 21:59:22 2006
Subject: [antlr-interest] [UNSUBSCRIBE]
In-Reply-To: <200603031748.35703.kibab@icehouse.net>
Message-ID: <20060520045919.24816.qmail@web31003.mail.mud.yahoo.com>

[UNSUBSCRIBE]

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From dieter_frej at gmx.net  Sat May 20 02:33:46 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sat May 20 02:33:50 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <B203788F-097F-4D71-BB71-824DDFEEB919@cs.usfca.edu>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>
	<B203788F-097F-4D71-BB71-824DDFEEB919@cs.usfca.edu>
Message-ID: <446EE27A.401@gmx.net>

ok, even though I might look like a total newbie I have to ask that:
Are there any rule of thumb on how to decide what a literal is and what
a rule is? (respectively what goes into the parser and what into the
lexer?)

Digits:
Digit
Digits Digit

Digit:
0
NonZeroDigit

NonZeroDigit: one of
1 2 3 4 5 6 7 8 9

I would say NonZeroDigit is a literal and goes into the lexer, right?
What about the other two? Should both go into the parser?

- Didi



Terence Parr wrote:
> 
> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com> <JConner@ssp-uk.com> 
> wrote:
> 
>> Hi All,
>>
>> I've started to get my feet wet with ANTLR a little, and I've come 
>> across a
>> few things that I thought would be handled by lexer rules, but seem to be
>> handled in general by parser rules.  For example, most of the examples 
>> I've
>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
> 
> Those should be lexer rules...most places I've seen.  Remember FLOAT 
> means lexer rule :)
> 
> Ter
> 
> 

From sdb at geekworld.co.uk  Sat May 20 05:25:39 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Sat May 20 05:25:48 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <446EE27A.401@gmx.net>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>	<B203788F-097F-4D71-BB71-824DDFEEB919@cs.usfca.edu>
	<446EE27A.401@gmx.net>
Message-ID: <446F0AC3.6040603@geekworld.co.uk>

Dieter Frej wrote:
> ok, even though I might look like a total newbie I have to ask that:
> Are there any rule of thumb on how to decide what a literal is and what
> a rule is? (respectively what goes into the parser and what into the
> lexer?)
> 
> Digits:
> Digit
> Digits Digit
> 
> Digit:
> 0
> NonZeroDigit
> 
> NonZeroDigit: one of
> 1 2 3 4 5 6 7 8 9
> 
> I would say NonZeroDigit is a literal and goes into the lexer, right?
> What about the other two? Should both go into the parser?

Ignoring the use of the term 'literal', which can be ambiguous if we
don't know if you're talking about the perspective of antlr, or the
perspective of the language being parsed...

All of those should be lexer rules. Of course, that means that they
ought to be DIGIT, DIGITS, and NONZERODIGIT...

Think about it in terms of tokens. The lexer produces tokens, which the
parser then interprets. So all the parser ought to know is that it's
getting, say, an INT followed by EQUALS followed by a FLOAT followed by
a TERMINATOR.

Literals, on the other hand, are a more complex subject, and I can't be
bothered to explain it now... I'd probably mess up, as I haven't had my
narcolepsy meds yet.

Sam

> Terence Parr wrote:
> 
>>
>> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com>
>> <JConner@ssp-uk.com> wrote:
>>
>>> Hi All,
>>>
>>> I've started to get my feet wet with ANTLR a little, and I've come
>>> across a
>>> few things that I thought would be handled by lexer rules, but seem
>>> to be
>>> handled in general by parser rules.  For example, most of the
>>> examples I've
>>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
>>
>>
>> Those should be lexer rules...most places I've seen.  Remember FLOAT
>> means lexer rule :)
>>
>> Ter
>>
>>
> 

From open.zone at virgin.net  Sat May 20 07:42:59 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat May 20 07:25:23 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <446EE27A.401@gmx.net>
Message-ID: <001101c67c1b$b21ec500$c704a8c0@hercules>

Dieter,

> ok, even though I might look like a total newbie I have to 
> ask that: Are there any rule of thumb on how to decide what a 
> literal is and what a rule is? (respectively what goes into 
> the parser and what into the
> lexer?)

Your use of "literals" and "rule" is very ambiguous. Don't know what you
mean.

As for what goes into lexer vs parser, well lexers tokenize the input
character stream. A lexer should identify all substrings that are classed as
"tokens" in the language your are lexing/parsing.

In your example:

> Digits:
> Digit
> Digits Digit
> 
> Digit:
> 0
> NonZeroDigit
> 
> NonZeroDigit: one of
> 1 2 3 4 5 6 7 8 9
> 
> I would say NonZeroDigit is a literal and goes into the 
> lexer, right? What about the other two? Should both go into 
> the parser?

I can't comment on your aprticular application but I can say that for most
programmaing languages, none of these would likely be classed as a token.

A parser is much happier seeing:
	FLOAT(134.8) or
	FLOAT_LITERAL(134.8) or
	NUMBER(134.8)
than this:
	DIGIT(1) DIGIT(3) DIGIT(4) DOT(.) DIGIT(8) 
in it's input token stream.


Micheal

From sdb at geekworld.co.uk  Sat May 20 07:47:45 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Sat May 20 07:47:54 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <446EE27A.401@gmx.net>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>	<B203788F-097F-4D71-BB71-824DDFEEB919@cs.usfca.edu>
	<446EE27A.401@gmx.net>
Message-ID: <446F2C11.9070507@geekworld.co.uk>

Dieter Frej wrote:
> ok, even though I might look like a total newbie I have to ask that:
> Are there any rule of thumb on how to decide what a literal is and what
> a rule is? (respectively what goes into the parser and what into the
> lexer?)
> 
> Digits:
> Digit
> Digits Digit
> 
> Digit:
> 0
> NonZeroDigit
> 
> NonZeroDigit: one of
> 1 2 3 4 5 6 7 8 9
> 
> I would say NonZeroDigit is a literal and goes into the lexer, right?
> What about the other two? Should both go into the parser?

On further thinking, your questions seem to suggest (to me) that you
might do well to read a book/take a course on languages and grammars and
so on. You seem to be unfamiliar with a lot of the terms, or at best not
using them in the way they are normally used.

I mean no offence by this, just suggesting a profitable course of action.

Sam

> Terence Parr wrote:
> 
>>
>> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com>
>> <JConner@ssp-uk.com> wrote:
>>
>>> Hi All,
>>>
>>> I've started to get my feet wet with ANTLR a little, and I've come
>>> across a
>>> few things that I thought would be handled by lexer rules, but seem
>>> to be
>>> handled in general by parser rules.  For example, most of the
>>> examples I've
>>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
>>
>>
>> Those should be lexer rules...most places I've seen.  Remember FLOAT
>> means lexer rule :)
>>
>> Ter
>>
>>
> 

From vidar at hawkis.com  Sat May 20 10:18:19 2006
From: vidar at hawkis.com (Vidar =?iso-8859-1?q?H=E5kestad?=)
Date: Sat May 20 10:18:25 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <446F2C11.9070507@geekworld.co.uk>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>
	<446EE27A.401@gmx.net> <446F2C11.9070507@geekworld.co.uk>
Message-ID: <200605201918.19468.vidar@hawkis.com>

Antlr just have rules, they beeing parser or lexer ones. No literals.
A rule in the Antlr grammar syntax is a production modeled after the EBNF 
method of specifying sequence of language constructs.

What is lexing, and what is parsing?
Lexing is interpretation of character sequences.
Parsing is interpretation of token sequences.
On a supplied sequence of characters, the lexer definitions creates tokens 
from which the parser then vegetates (nextToken()).
In this respect, neither the lexer nor the parser have any knowledge of the 
concept of literals. You may specify character sequences in both parts of the 
grammar files, but the context is different. A literal becomes a literal 
because you define it that way in either lexer or parser rules.

What Terrence is suggesting is that when a rule starts with a Capital letter 
it is interpreted in Antlr (i.e in the Antlr grammar interpretor) as a lexer 
rule. When it starts with a lower case letter it is interpreted as a parser 
rule.
These are strict Anltr grammar interpretor syntactic rules, so if you want to 
use the generator, you have to obide by those rules.

It is also important to know that the lexer is always created before a parser, 
so that lexer definitions have to 'know' what the parser will expect.

The general answer to your general question will be:
Try to partition your language into as big chunks of character sequences as 
possible. Those partitions will go into your lexer as lexer rules. The rest 
of the logic of your language will go into your parser rules.

regards
Hawkis

On Saturday 20 May 2006 16:47, Sam Barnett-Cormack wrote:
> Dieter Frej wrote:
> > ok, even though I might look like a total newbie I have to ask that:
> > Are there any rule of thumb on how to decide what a literal is and what
> > a rule is? (respectively what goes into the parser and what into the
> > lexer?)
> >
> > Digits:
> > Digit
> > Digits Digit
> >
> > Digit:
> > 0
> > NonZeroDigit
> >
> > NonZeroDigit: one of
> > 1 2 3 4 5 6 7 8 9
> >
> > I would say NonZeroDigit is a literal and goes into the lexer, right?
> > What about the other two? Should both go into the parser?
>
> On further thinking, your questions seem to suggest (to me) that you
> might do well to read a book/take a course on languages and grammars and
> so on. You seem to be unfamiliar with a lot of the terms, or at best not
> using them in the way they are normally used.
>
> I mean no offence by this, just suggesting a profitable course of action.
>
> Sam
>
> > Terence Parr wrote:
> >> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com>
> >>
> >> <JConner@ssp-uk.com> wrote:
> >>> Hi All,
> >>>
> >>> I've started to get my feet wet with ANTLR a little, and I've come
> >>> across a
> >>> few things that I thought would be handled by lexer rules, but seem
> >>> to be
> >>> handled in general by parser rules.  For example, most of the
> >>> examples I've
> >>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
> >>
> >> Those should be lexer rules...most places I've seen.  Remember FLOAT
> >> means lexer rule :)
> >>
> >> Ter
From Sanus at gmx.de  Sat May 20 10:29:10 2006
From: Sanus at gmx.de (Christian Hoffmann)
Date: Sat May 20 10:29:27 2006
Subject: [antlr-interest] C++ Crash in consumeUntil()
Message-ID: <3310235150.20060520192910@gmx.de>

Hi,

in January Andrew Bell wrote about a possible Bug in ANTLR/C++-Runtime when throwing a SemanticException in a parser action.


> I am throwing a SemanticException in a parser action. It gets caught 
> by the default handler which catches the exception as a 
> RecognitionException. The exception handler calls reportError() and 
> then dies when it calls recover().
> Anyway, the problem seems to be that recover(), calls consume() 
> without regard to whether there is anything to consume. This 
> condition would be caught by the assert clause in 
> CircularQueue::removeItems() in debug mode, but the assert is a NOOP 
> if not build with debug. 

Try removing the assert does not fix the problem. Then, the code crashes a few lines later.
Is there any chance to solve the problem?

Thanks in advance,

Christian 


From parrt at cs.usfca.edu  Sat May 20 11:49:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 20 11:49:14 2006
Subject: [antlr-interest] ST 2.3b7 released
Message-ID: <A88AE9EE-60F2-4A1A-8030-332465F99AFD@cs.usfca.edu>

Howdy,

Pushed another beta of ST 2.3, very close to final.

Changes:

http://www.stringtemplate.org/bugs.tml

Download:

http://www.antlr.org/download/stringtemplate-2.3b7.tar.gz

A few backward compatibility issues: no dots in attr or template  
names, <..> are default delimiters for group files now.

Ter
From parrt at cs.usfca.edu  Sat May 20 12:25:36 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 20 12:25:40 2006
Subject: [antlr-interest] ANTLR 3.0ea9 available
Message-ID: <231363CB-FA48-43E6-8992-7AE5B6FD2121@cs.usfca.edu>

Howdy,

Cut a nice new early access version before embarking on some major  
restructuring of $x.y attribute translation and DFA generation  
(moving to a simpler state machine).

http://www.antlr.org/download/antlr-3.0ea9.tar.gz

See the changes here (search string "CHANGES"):

http://www.antlr.org/v3/README.txt

Please help build the new FAQ:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+v3+FAQ

I will release a version of the Mantra programming language prototype:

http://www.linguamantra.org/

soon as it's a great example of how to use v3.  4 pass translator and  
uses StringTemplate.

Terence
From parrt at cs.usfca.edu  Sat May 20 13:14:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 20 13:14:53 2006
Subject: [antlr-interest] released Mantra prototype 0.1 as ANTLR v3 example
Message-ID: <8E9972AA-8896-449B-8AA6-C1350E0ED81D@cs.usfca.edu>

Hi,

To see a real example with v3 (4 pass translator incorporating  
StringTemplate for code generation), please see:

http://www.linguamantra.org

You'll see I've updated the page to have a real working example.   
Mantra looks really great if you ask me! ;)

Requires latest ST and ANTLR (released today).

Ter

From brannonking at yahoo.com  Sat May 20 15:29:37 2006
From: brannonking at yahoo.com (Brannon King)
Date: Sat May 20 15:29:43 2006
Subject: [antlr-interest] ANTLR 3.0ea9 available
In-Reply-To: <231363CB-FA48-43E6-8992-7AE5B6FD2121@cs.usfca.edu>
References: <231363CB-FA48-43E6-8992-7AE5B6FD2121@cs.usfca.edu>
Message-ID: <446F9851.9000807@yahoo.com>

See the changes here (search string "CHANGES"):
>
> http://www.antlr.org/v3/README.txt
>

Concerning the garbage collection issues, you may want to go read this:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=118335

There have been some JVM issues with how the Java threading maps to the 
OS's threading model. Most of those seem to be fixed in the current 
1.5.06, though it is still possible to lower the priority on the thread 
running the garbage collection.
From parrt at cs.usfca.edu  Sun May 21 10:41:37 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun May 21 10:41:44 2006
Subject: [antlr-interest] ANTLR 3.0ea9 available
In-Reply-To: <446F9851.9000807@yahoo.com>
References: <231363CB-FA48-43E6-8992-7AE5B6FD2121@cs.usfca.edu>
	<446F9851.9000807@yahoo.com>
Message-ID: <3BAB95E6-CB27-49AA-B748-784A8F9AF932@cs.usfca.edu>


On May 20, 2006, at 3:29 PM, Brannon King wrote:
> Concerning the garbage collection issues, you may want to go read  
> this:
>
> https://bugs.eclipse.org/bugs/show_bug.cgi?id=118335
>
> There have been some JVM issues with how the Java threading maps to  
> the OS's threading model. Most of those seem to be fixed in the  
> current 1.5.06, though it is still possible to lower the priority  
> on the thread running the garbage collection.

Interesting...I should try nice'ing the GC thread down to see if it  
helps even single-threaded antlr ;)  Why GC when it's going to stop  
in 5 seconds?

Ter
From parrt at cs.usfca.edu  Sun May 21 11:06:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun May 21 11:07:01 2006
Subject: [antlr-interest] ANTLR 3.0ea9 available
In-Reply-To: <446F9851.9000807@yahoo.com>
References: <231363CB-FA48-43E6-8992-7AE5B6FD2121@cs.usfca.edu>
	<446F9851.9000807@yahoo.com>
Message-ID: <8BFF03DA-CE2F-49FE-A217-D8062A1A0C17@cs.usfca.edu>


On May 20, 2006, at 3:29 PM, Brannon King wrote:
> There have been some JVM issues with how the Java threading maps to  
> the OS's threading model. Most of those seem to be fixed in the  
> current 1.5.06, though it is still possible to lower the priority  
> on the thread running the garbage collection.

I just used those options:

time java -Xms40m -Xmx256m -Xoptimize -Xconcgc - 
XX:ThreadPriorityPolicy=0 -XX:JavaPriority1_To_OSPriority=1 - 
XX:JavaPriority2_To_OSPriority=2 -XX:JavaPriority3_To_OSPriority=2 - 
XX:JavaPriority4_To_OSPriority=3 -XX:JavaPriority5_To_OSPriority=3 - 
XX:JavaPriority6_To_OSPriority=4 -XX:JavaPriority7_To_OSPriority=5 - 
XX:JavaPriority8_To_OSPriority=6 -XX:JavaPriority9_To_OSPriority=7 - 
XX:JavaPriority10_To_OSPriority=8 org.antlr.Tool java.g

and it ran 10-20% faster.  Interesting...2nd CPU still kickin' though.

Any way to turn OFF the GC?

Ter

From wiggjd at lsbu.ac.uk  Mon May 22 06:29:50 2006
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Mon May 22 06:28:22 2006
Subject: [antlr-interest] MSVC 6.0 Compiler accuracy?
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>

I am the latest author of the C++ parser available from the Antlr
website.
 
It has been brought to my attention that it does not parse the
following properly because of declarations in conditions,
 
bool fun()
 {
 int i, j, k, l = 0;
 
 if(int i = 1)   // MSVC++ 6.0 accepts declaration and redefinition of
i.
  {
  printf("%d ",i);
  }
 
 switch(int j = 1)   // MSVC++ 6.0 accepts declaration and
redefinition of j.    
  {
 case 1:
  return true;
 default:
  return false;
  }
 
 while(int k = 2)   // MSVC++ 6.0 accepts declaration and redefinition
of k.
  {
  k--;
  printf("%d ",k);
  }
 
 for(int i = 5; int l = i; i--) // MSVC++ 6.0 rejects redefinition of
i and
  {                                // declaration in condition   
  printf("%d ",l);
  } 
 
I have not made allowance for the apparently legal possibility
according to reliable grammar definitions of declaring a variable in
the condition statement of these four statements.
 
I am told that gcc 3.3.3 accepts the declaration in the above "for"
statement.
 
It therefore looks as though MSVC++ 6.0 is incorrect in this instance.
I would be grateful if someone would confirm this. Perhaps there is a
later version of MSVC which parses this "for" statement correctly?
 
I presume that each of these four statements opens a new scope.
 
I have been parsing various C++ programs for some years now and never
come across the declaration of variables in conditions. I suppose this
is not surprising. I can't think why one would want to do it. It seems
illogical to allow this in iteration statements since the condition
would appear to redeclare the variable on each iteration!
 
It would be interesting to hear of any use for this feature.
 
David
Centre for Systems and Software Engineering
London South Bank University
UK.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060522/4ccf35d3/attachment.html
From antlr at jazillian.com  Mon May 22 08:23:30 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Mon May 22 08:23:31 2006
Subject: [antlr-interest] MSVC 6.0 Compiler accuracy?
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <4471D772.50305@jazillian.com>

According to the ISO/IEC 14882:1998 C++ standard, all those
declarations inside conditions are, in fact, legal. So if MSVC++ doesn't 
accept them,
it's a problem with MSVC++ - perhaps there's a "standards compatible 
mode" option?
Yes, each of these statements opens a new scope, the variable is 
declared once, and
its scope is what is should be :)

Andy

Wigg, J D wrote:

> I am the latest author of the C++ parser available from the Antlr website.
>  
> It has been brought to my attention that it does not parse the 
> following properly because of declarations in conditions,
>  
> bool fun()
>  {
>  int i, j, k, l = 0;
>  
>  if(int i = 1)   // MSVC++ 6.0 accepts declaration and redefinition of i.
>   {
>   printf("%d ",i);
>   }
>  
>  switch(int j = 1)   // MSVC++ 6.0 accepts declaration and 
> redefinition of j.   
>   {
>  case 1:
>   return true;
>  default:
>   return false;
>   }
>  
>  while(int k = 2)   // MSVC++ 6.0 accepts declaration and redefinition 
> of k.
>   {
>   k--;
>   printf("%d ",k);
>   }
>  
>  for(int i = 5; int l = i; i--) // MSVC++ 6.0 rejects redefinition of 
> i and
>   {                                // declaration in condition  
>   printf("%d ",l);
>   }
>  
> I have not made allowance for the apparently legal possibility 
> according to reliable grammar definitions of declaring a variable in 
> the condition statement of these four statements.
>  
> I am told that gcc 3.3.3 accepts the declaration in the above "for" 
> statement.
>  
> It therefore looks as though MSVC++ 6.0 is incorrect in this instance. 
> I would be grateful if someone would confirm this. Perhaps there is a 
> later version of MSVC which parses this "for" statement correctly?
>  
> I presume that each of these four statements opens a new scope.
>  
> I have been parsing various C++ programs for some years now and never 
> come across the declaration of variables in conditions. I suppose this 
> is not surprising. I can't think why one would want to do it. It seems 
> illogical to allow this in iteration statements since the condition 
> would appear to redeclare the variable on each iteration!
>  
> It would be interesting to hear of any use for this feature.
>  
> David
> Centre for Systems and Software Engineering
> London South Bank University
> UK.
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  
>  


From sohail at taggedtype.net  Mon May 22 09:08:17 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 09:08:35 2006
Subject: [antlr-interest] MSVC 6.0 Compiler accuracy?
In-Reply-To: <4471D772.50305@jazillian.com>
References: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
	<4471D772.50305@jazillian.com>
Message-ID: <1148314097.6716.3.camel@localhost.localdomain>

The standards compatible mode is upgrade to 7.1 or later. VC6 is
prestandard.

On Mon, 2006-05-22 at 11:23 -0400, Andy Tripp wrote:
> According to the ISO/IEC 14882:1998 C++ standard, all those
> declarations inside conditions are, in fact, legal. So if MSVC++ doesn't 
> accept them,
> it's a problem with MSVC++ - perhaps there's a "standards compatible 
> mode" option?
> Yes, each of these statements opens a new scope, the variable is 
> declared once, and
> its scope is what is should be :)
> 
> Andy
> 
> Wigg, J D wrote:
> 
> > I am the latest author of the C++ parser available from the Antlr website.
> >  
> > It has been brought to my attention that it does not parse the 
> > following properly because of declarations in conditions,
> >  
> > bool fun()
> >  {
> >  int i, j, k, l = 0;
> >  
> >  if(int i = 1)   // MSVC++ 6.0 accepts declaration and redefinition of i.
> >   {
> >   printf("%d ",i);
> >   }
> >  
> >  switch(int j = 1)   // MSVC++ 6.0 accepts declaration and 
> > redefinition of j.   
> >   {
> >  case 1:
> >   return true;
> >  default:
> >   return false;
> >   }
> >  
> >  while(int k = 2)   // MSVC++ 6.0 accepts declaration and redefinition 
> > of k.
> >   {
> >   k--;
> >   printf("%d ",k);
> >   }
> >  
> >  for(int i = 5; int l = i; i--) // MSVC++ 6.0 rejects redefinition of 
> > i and
> >   {                                // declaration in condition  
> >   printf("%d ",l);
> >   }
> >  
> > I have not made allowance for the apparently legal possibility 
> > according to reliable grammar definitions of declaring a variable in 
> > the condition statement of these four statements.
> >  
> > I am told that gcc 3.3.3 accepts the declaration in the above "for" 
> > statement.
> >  
> > It therefore looks as though MSVC++ 6.0 is incorrect in this instance. 
> > I would be grateful if someone would confirm this. Perhaps there is a 
> > later version of MSVC which parses this "for" statement correctly?
> >  
> > I presume that each of these four statements opens a new scope.
> >  
> > I have been parsing various C++ programs for some years now and never 
> > come across the declaration of variables in conditions. I suppose this 
> > is not surprising. I can't think why one would want to do it. It seems 
> > illogical to allow this in iteration statements since the condition 
> > would appear to redeclare the variable on each iteration!
> >  
> > It would be interesting to hear of any use for this feature.
> >  
> > David
> > Centre for Systems and Software Engineering
> > London South Bank University
> > UK.
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> >  
> 
> 

From sohail at taggedtype.net  Mon May 22 09:09:55 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 09:14:01 2006
Subject: [antlr-interest] MSVC 6.0 Compiler accuracy?
In-Reply-To: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
References: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <1148314196.6716.6.camel@localhost.localdomain>

On Mon, 2006-05-22 at 14:29 +0100, Wigg, J D wrote:
> I have been parsing various C++ programs for some years now and never
> come across the declaration of variables in conditions. I suppose this
> is not surprising. I can't think why one would want to do it. It seems
> illogical to allow this in iteration statements since the condition
> would appear to redeclare the variable on each iteration!

normal usage:

if((T * p = dynamic_cast<T *>(Tparent))==NULL)

From sohail at taggedtype.net  Mon May 22 09:45:48 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 09:45:53 2006
Subject: [antlr-interest] MSVC 6.0 Compiler accuracy?
In-Reply-To: <1148314097.6716.3.camel@localhost.localdomain>
References: <10A786EB5741DE4DB252F7B9B9423D3A01085A6B@CSD-EXBE-VS2.lsbu.ac.uk>
	<4471D772.50305@jazillian.com>
	<1148314097.6716.3.camel@localhost.localdomain>
Message-ID: <1148316348.6716.8.camel@localhost.localdomain>

Before I forget, you also want to use the /Za switch otherwise the
wonderful VC++ 6 behaviour will persist.

On Mon, 2006-05-22 at 09:08 -0700, Sohail Somani wrote:
> The standards compatible mode is upgrade to 7.1 or later. VC6 is
> prestandard.
> 
> On Mon, 2006-05-22 at 11:23 -0400, Andy Tripp wrote:
> > According to the ISO/IEC 14882:1998 C++ standard, all those
> > declarations inside conditions are, in fact, legal. So if MSVC++ doesn't 
> > accept them,
> > it's a problem with MSVC++ - perhaps there's a "standards compatible 
> > mode" option?
> > Yes, each of these statements opens a new scope, the variable is 
> > declared once, and
> > its scope is what is should be :)


From anh23 at pitt.edu  Mon May 22 12:07:15 2006
From: anh23 at pitt.edu (Anthony Harrison)
Date: Mon May 22 12:07:18 2006
Subject: [antlr-interest] ANTLR 3(ea8) TreeNodeStream DOWN & UP insertion
	question.
Message-ID: <a7ec19f0605221207l41924f12na7d23d6ca2882abc@mail.gmail.com>

I'm not sure if this is a bug or just a general misunderstanding on my
part, but something seems wonky when running a tree parser over a tree
that only has optional children. Specifically, something like ^(ROOT
OPTIONAL_CHILD*) will throw mismatches when no children are present
because DOWN & UP are not being inserted by the TreeNodeStream.

My tree parser looks something like this (cutting out all the irrelevant bits):

//model must be ^(MODEL_TOKEN NAME_TOKEN MODULES_TOKEN PARAMETERS_TOKEN)
model : ^(MODEL_TOKEN NAME_TOKEN modules parameters);

// must always have MODULES tag, and possibly individual module trees
modules : ^(MODULES_TOKEN module*);

module : ^(MODULE_TOKEN CLASS_TOKEN); //just a class name ref

//must have PARAMETERS token and maybe some parameters
parameters : ^(PARAMETERS_TOKEN parameter*);

parameter : ^(PARAMETER_TOKEN NAME_TOKEN STRING_TOKEN);


Model must have three children: NAME_TOKEN, MODULES_TOKEN, and
PARAMETERS_TOKEN. Both MODULES_TOKEN and PARAMETERS_TOKEN may or may
not have additional children.

When I provide it with this tree, everything is fine:

^(MODEL_TOKEN NAME_TOKEN
       ^(MODULES_TOKEN
            (MODULE_TOKEN CLASS_TOKEN))
       ^(PARAMETERS_TOKEN
            (PARAMETER_TOKEN NAME_TOKEN STRING_TOKEN)))

Fine and dandy.

However.

When I provide it with a tree where either modules or parameters has
no children, I get oodles of mismatches because it is looking for DOWN
(2) and UP(3), which aren't being generated. (specifically
MismatchedTreeNodeEx (0!=2) or 3)

^(MODEL_TOKEN NAME_TOKEN
       ^(MODULES_TOKEN )
       ^(PARAMETERS_TOKEN ))

Since the TreeParser code generated demands the matching of DOWN token
regardless of their being any children, shouldn't the TreeNodeStream
be inserting the DOWN & UPs in this case regardless of the presence of
said children?

Any help with this (most likely) misunderstanding on my part would really help.


the full grammar is attached, with static test methods.

TestParser.testGoodModel() will traverse the fully specified tree
(generated via createWorkingTree())
TestParser.testBadModel() will try to traverse the partially specified
tree (generated via createFailingButValidModelTree())


Many thanks to anyone who can show me the errs of my ways.
-- 
+------------------------------------------------------------+
  "Theories are more like graduate students -
    once admitted you try hard to avoid flunking
    them out, it being much better for them and
    for the world if they can become long-term
    contributors to society."
                - Allen Newell, 1990

  Anthony M. Harrison
  http://simon.lrdc.pitt.edu/~harrison/
  anh23@pitt.edu
  Learning Research and Development Center
  University of Pittsburgh
-------------- next part --------------
A non-text attachment was scrubbed...
Name: parser.g
Type: application/octet-stream
Size: 3817 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060522/a96776c1/parser.obj
From parrt at cs.usfca.edu  Mon May 22 13:59:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May 22 13:59:26 2006
Subject: [antlr-interest] ANTLR 3(ea8) TreeNodeStream DOWN & UP insertion
	question.
In-Reply-To: <a7ec19f0605221207l41924f12na7d23d6ca2882abc@mail.gmail.com>
References: <a7ec19f0605221207l41924f12na7d23d6ca2882abc@mail.gmail.com>
Message-ID: <09035164-A9E5-417D-834D-02C64B111387@cs.usfca.edu>


On May 22, 2006, at 12:07 PM, Anthony Harrison wrote:

> I'm not sure if this is a bug or just a general misunderstanding on my
> part, but something seems wonky when running a tree parser over a tree
> that only has optional children.

You're right!  It's wonky.  From my bug list:

o ^(ROOT ID?) doesn't work.

> Specifically, something like ^(ROOT
> OPTIONAL_CHILD*) will throw mismatches when no children are present
> because DOWN & UP are not being inserted by the TreeNodeStream.

yep, same thing.

I continue by saying:

generate:

ROOT (DOWN alpha UP)?

rather than

ROOT DOWN alpha UP

if it sees possibility, but *only* if it sees a nullable child list.
This is a code gen issue not a NFA alteration.  Can just add a

if ( input.LA(1)==DOWN ) {
   match(DOWN);
   alpha
   match(UP);
}

I know the fix, but didn't get it into 3.0ea9...sorry!

Ter
From parrt at cs.usfca.edu  Mon May 22 14:00:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May 22 14:00:29 2006
Subject: [antlr-interest] workaround for: ANTLR 3(ea8) TreeNodeStream DOWN
	& UP insertion question.
In-Reply-To: <a7ec19f0605221207l41924f12na7d23d6ca2882abc@mail.gmail.com>
References: <a7ec19f0605221207l41924f12na7d23d6ca2882abc@mail.gmail.com>
Message-ID: <3A2AE81F-DFCF-449B-B326-BB22EF11A4D6@cs.usfca.edu>


On May 22, 2006, at 12:07 PM, Anthony Harrison wrote:
> that only has optional children. Specifically, something like ^(ROOT
> OPTIONAL_CHILD*) will throw mismatches when no children are present

You can alter ^(A B*) to ( ^(A B+) | A ) I believe.

Ter


From parrt at cs.usfca.edu  Mon May 22 15:15:18 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May 22 15:15:27 2006
Subject: [antlr-interest] holy crap! optimization from allah!
Message-ID: <D09B7F30-EC01-4D81-9FF8-8DFA7FA716A7@cs.usfca.edu>

You know how somedays things just go right?  Well I have been trying  
to solve a problem with the ASN grammar as submitted to me by Magne  
Rasmussen...at first I thought it was a bug but now I think it is  
just hitting an exponentiality in the algorithm.  So I started  
thinking again about how to speed the analysis up...I have spent  
hours thinking and thinking about how the algorithm works, which is  
how I decided it was still solid.  I did think of one minor  
optimization...when I added it (1 IF statement!), analysis dropped by  
90% or so!!!  Hooray!  Analysis is now down to about 10% of total  
time from 1/3. :)

The optimization avoid computing the closure operation on states that  
are only capable of predicting a single alternative (as analysis will  
stop with that state); no point in computing closure, which is very  
expensive.

Magne: still hitting landmines in the grammar, but I am still working  
on it!

Ter 
From sohail at taggedtype.net  Mon May 22 15:34:24 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 15:34:31 2006
Subject: [antlr-interest] Elsa parser
Message-ID: <1148337264.9553.3.camel@localhost.localdomain>

Have any of you heard of the elsa parser?

What this does is build up a bunch of alternative parses and allows the
developer to choose an alternative when it is appropriate to make a
decision (based on semantics).

Does antlr do something like this? Backtracking kind of does it but you
can still only have one valid parse at any given time. If it doesn't do
this, is there a reason to do or not do it?

Thanks!

Sohail

From prashant.deva at gmail.com  Mon May 22 15:47:47 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon May 22 15:47:57 2006
Subject: [antlr-interest] Re: [antlr-dev] holy crap! optimization from allah!
In-Reply-To: <D09B7F30-EC01-4D81-9FF8-8DFA7FA716A7@cs.usfca.edu>
References: <D09B7F30-EC01-4D81-9FF8-8DFA7FA716A7@cs.usfca.edu>
Message-ID: <41fed8f80605221547s7256b51dk2a5ef35acbc67bca@mail.gmail.com>

You should write a blog entry about it.
This way all of us who are not following the code changes itself can find
out what the super optimization was, too :)

On 5/23/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> You know how somedays things just go right?  Well I have been trying
> to solve a problem with the ASN grammar as submitted to me by Magne
> Rasmussen...at first I thought it was a bug but now I think it is
> just hitting an exponentiality in the algorithm.  So I started
> thinking again about how to speed the analysis up...I have spent
> hours thinking and thinking about how the algorithm works, which is
> how I decided it was still solid.  I did think of one minor
> optimization...when I added it (1 IF statement!), analysis dropped by
> 90% or so!!!  Hooray!  Analysis is now down to about 10% of total
> time from 1/3. :)
>
> The optimization avoid computing the closure operation on states that
> are only capable of predicting a single alternative (as analysis will
> stop with that state); no point in computing closure, which is very
> expensive.
>
> Magne: still hitting landmines in the grammar, but I am still working
> on it!
>
> Ter
> _______________________________________________
> antlr-dev mailing list
> antlr-dev@antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
>



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060523/eec37ec0/attachment.html
From craymer at warpiv.com  Mon May 22 16:00:14 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Mon May 22 16:00:27 2006
Subject: [antlr-interest] Elsa parser
In-Reply-To: <1148337264.9553.3.camel@localhost.localdomain>
Message-ID: <000c01c67df3$7d8f5c30$6402a8c0@Fafnir>

Ok, I got curious and took a look.  Elsa is specifically a C/C++ parser
developed in Elkhound, a GLR parser generator (that fits with your
"alternative parses" statement--GLR parser generators are usually described
as selecting from a set of alternative parses).

>From the Elsa disambiguation description (in the "AST disambiguation"
section), it looks like they something equivalent to what syntactic
predicates would do (except they are implemented by hand) when fixing up
ASTs.

The short answer is that GLR parsers are "bottom up" and ANTLR is "top
down", and the behavioral differences are a direct side effect of the
different parsing paradigms.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Sohail Somani
> Sent: Monday, May 22, 2006 3:34 PM
> To: antlr-interest
> Subject: [antlr-interest] Elsa parser
> 
> Have any of you heard of the elsa parser?
> 
> What this does is build up a bunch of alternative parses and allows the
> developer to choose an alternative when it is appropriate to make a
> decision (based on semantics).
> 
> Does antlr do something like this? Backtracking kind of does it but you
> can still only have one valid parse at any given time. If it doesn't do
> this, is there a reason to do or not do it?
> 
> Thanks!
> 
> Sohail


From parrt at cs.usfca.edu  Mon May 22 16:02:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May 22 16:02:09 2006
Subject: [antlr-interest] Re: [antlr-dev] holy crap! optimization from allah!
In-Reply-To: <41fed8f80605221547s7256b51dk2a5ef35acbc67bca@mail.gmail.com>
References: <D09B7F30-EC01-4D81-9FF8-8DFA7FA716A7@cs.usfca.edu>
	<41fed8f80605221547s7256b51dk2a5ef35acbc67bca@mail.gmail.com>
Message-ID: <E086F807-A575-4369-837F-030F6B792930@cs.usfca.edu>


On May 22, 2006, at 3:47 PM, Prashant Deva wrote:

> You should write a blog entry about it.
> This way all of us who are not following the code changes itself  
> can find out what the super optimization was, too :)

It comes down to

a : A
   | B
   ;

When building a DFA, you have 3 states

s1 -A-> s2
s1 -B-> s3

where s2, s3 are accept states and predict alt 1, 2 respectively.   
The point is that s2 and s3 are not going to lead to any other  
states..ever.  They uniquely predict alts 1 and 2.  Do not compute  
closure on these as there is no need.  Worse, it amounts to computing  
FOLLOW(a), which will find all refs to rule a and then do a closure  
on every state that can follow that state etc...

Saves a lot apparently ;)

Ter
From sohail at taggedtype.net  Mon May 22 17:20:11 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 17:20:17 2006
Subject: [antlr-interest] v3 stream input
Message-ID: <1148343611.13496.3.camel@localhost.localdomain>

Is there a way to tie System.in into the lexer as input?

Thanks,

Sohail

From parrt at cs.usfca.edu  Mon May 22 17:25:30 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon May 22 17:25:34 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <1148343611.13496.3.camel@localhost.localdomain>
References: <1148343611.13496.3.camel@localhost.localdomain>
Message-ID: <23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>


On May 22, 2006, at 5:20 PM, Sohail Somani wrote:

> Is there a way to tie System.in into the lexer as input?

Yeah, i think it's a big hole at the moment...we only have string and  
file readers...

Ter

From sohail at taggedtype.net  Mon May 22 20:00:27 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon May 22 20:00:35 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
Message-ID: <1148353227.13496.11.camel@localhost.localdomain>

On Mon, 2006-05-22 at 17:25 -0700, Terence Parr wrote:
> On May 22, 2006, at 5:20 PM, Sohail Somani wrote:
> 
> > Is there a way to tie System.in into the lexer as input?
> 
> Yeah, i think it's a big hole at the moment...we only have string and  
> file readers...

I suppose what I'll do is just have a FiniteInputStream as a child of
ANTLRStringStream and just do what ANTLRFileStream does.

Sohail

From mathieu.clabaut at gmail.com  Tue May 23 01:33:17 2006
From: mathieu.clabaut at gmail.com (Mathieu Clabaut)
Date: Tue May 23 01:33:21 2006
Subject: [antlr-interest] doxygne comments in inherited grammar (v2.7.5)
Message-ID: <db9360ca0605230133u1ad18875u7a6000923e4796fb@mail.gmail.com>

 Hello everybody,

 I use doxygen to document the grammar and the generated files. But it
seems that in v2.7.5
the class and method comments get lost for inherited grammar (i.e.
Comments which are presents in the grammar which extends the main
grammar).

 Is their a trick to get those comments back (for now I put them in an
empy {} block and add doxygen specific tag such as /** @class
classname ....
 but if it works well for the generated documentation, it gives an
unatural way of documenting source grammar...

 Any tip appreciated...

 Happy antlring (oups quite cumbersom to say ... :-)
From digobaptista at gmail.com  Tue May 23 09:14:56 2006
From: digobaptista at gmail.com (Rodrigo Baptista)
Date: Tue May 23 09:14:59 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
	with Antlr
Message-ID: <b69b16780605230914i2b6cd988x85c8e63c61af2f1e@mail.gmail.com>

Hello,

Im using ANTLR to generate a compiler in C# for a DSL and I would like to
know how to pass to the Lexer multiple input files (something similar to the
control of "yyin" using "yywrap()" in flex) in order to be able to switch
the source stream.

I know that I could concatenate all the input files in a stream and pass it
to the Lexer but I still want to know if ANTLR has some tool to prevent this
option.

This is a typical way to process "<include/import xpto>" files.

Regards,

Rodrigo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060523/f55941e4/attachment.html
From parrt at cs.usfca.edu  Tue May 23 10:48:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 23 10:48:05 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <1148353227.13496.11.camel@localhost.localdomain>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
Message-ID: <A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>


On May 22, 2006, at 8:00 PM, Sohail Somani wrote:

> On Mon, 2006-05-22 at 17:25 -0700, Terence Parr wrote:
>> On May 22, 2006, at 5:20 PM, Sohail Somani wrote:
>>
>>> Is there a way to tie System.in into the lexer as input?
>>
>> Yeah, i think it's a big hole at the moment...we only have string and
>> file readers...
>
> I suppose what I'll do is just have a FiniteInputStream as a child of
> ANTLRStringStream and just do what ANTLRFileStream does.

How about just ANTLRReaderStream and/or ANTLRInputStream?

Ter
From craymer at warpiv.com  Tue May 23 11:09:35 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Tue May 23 11:09:38 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <b69b16780605230914i2b6cd988x85c8e63c61af2f1e@mail.gmail.com>
Message-ID: <000301c67e94$0d3c40f0$6402a8c0@Fafnir>

Handling keywords in grammars is an awkward problem.  Languages handle
keywords in one of two ways:  1.)  keywords are uniquely named, or 2.)
keyword names can be used for other language elements (variable names,
etc.).  ANTLR 2 preferentially supports option 1; PCCTS allowed either, but
directly supported neither (option 1 could be supported by adding symbol
table lookup in lexer actions; option 2 could be supported by predicate
hoisting).

 

It strikes me that the difference is solely a matter of when types are bound
to tokens.  For option 1, types are bound to tokens in the lexer.  For
option 2, literal types should be bound in the parser:  that is, the lexer
binds the generic type to the token (TEXT or NUMBER, for example) and the
dynamically looks up the next token in the literals table whenever
attempting to match a literal.  That is, "if" would be first typed as TEXT
but matched (and retyped) as LITERAL_if when matching an occurrence of "if"
in the parser.

 

I was concerned that this might not work with the LL(*) DFAs of ANTLR 3,
until I realized that the predicate hoisting mechanism provides almost all
of the support needed.  (Some sort of type patching table may also be
required; "if" might be matched by a state that allowed either LITERAL_if or
TEXT as the type for that token; for a first implementation, the type
patching may not be necessary since tree walkers could also do dynamic
lookup when matching literals.  Patching, though, seems preferable over the
longer term.)

 

Comments, anyone?  As far as I can see, the only downside to providing an
option to select a keyword mechanism is that we will need to find a
replacement topic for ANTLR workshop discussions-I can remember being in
discussions on this topic at every one of the past workshops!

 

--Loring

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060523/4d1e656d/attachment.html
From parrt at cs.usfca.edu  Tue May 23 12:37:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 23 12:37:05 2006
Subject: [antlr-interest] still more optimization
Message-ID: <605CB58C-E054-4878-B4B4-645C037D8DF2@cs.usfca.edu>

Looks like I have reduced the ASN1 grammar Magne problem submitted to  
actually terminate in 3 minutes as opposed to run out of 600M of ram  
and crashing.  It only uses 40M max now. :)  Still have some issues  
with it...i'll keep cranking...

Ter
From parrt at cs.usfca.edu  Tue May 23 13:34:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue May 23 13:34:20 2006
Subject: [antlr-interest] Re: [antlr-dev] still more optimization
In-Reply-To: <BAY101-DAV81E59383F44EA444BBAB8819B0@phx.gbl>
References: <605CB58C-E054-4878-B4B4-645C037D8DF2@cs.usfca.edu>
	<BAY101-DAV81E59383F44EA444BBAB8819B0@phx.gbl>
Message-ID: <0E3619B3-9132-4820-A85E-AFA94CF3AD3D@cs.usfca.edu>


On May 23, 2006, at 1:46 PM, Kunle Odutola wrote:

>> Looks like I have reduced the ASN1 grammar Magne problem submitted to
>> actually terminate in 3 minutes as opposed to run out of 600M of ram
>> and crashing.  It only uses 40M max now. :)  Still have some issues
>> with it...i'll keep cranking...
>
> Is this 600M used by a running lexer/parser or, 600M used by the  
> Antlr tool
> trying to analyze the lexer/parser grammar and generate code?

Running antlr itself...

> If the latter, how big is the grammar?. File size and approximate % of
> comments is a good enough indicator.

The ASN1.g grammar w/o lexer rules is like 1600 lines. no comments

Ter
From antlr at shmuelhome.mine.nu  Tue May 23 15:50:04 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue May 23 15:50:02 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <000301c67e94$0d3c40f0$6402a8c0@Fafnir>
References: <000301c67e94$0d3c40f0$6402a8c0@Fafnir>
Message-ID: <4473919C.7000204@shmuelhome.mine.nu>

Loring Craymer wrote:
>...
> For option 2, literal types should be bound in the parser:  that is, the 
> lexer binds the generic type to the token (TEXT or NUMBER, for example) 
> and the dynamically looks up the next token in the literals table 
> whenever attempting to match a literal.  That is, ?if? would be first 
> typed as TEXT but matched (and retyped) as LITERAL_if when matching an 
> occurrence of ?if? in the parser.
> 

Why are you limiting yourself to this type of situation. Why don't we 
expand the concept. Why not let the lexer return a set of token types 
that match the TEXT. The parser rule would have to resolve the 
ambiguity. The grammar rule would be considered ambiguous if the parser 
would accept two different types that had the same TEXT.

Let's say that I have a positional parameter in a function call that can 
take on the number zero or an empty string (I actually have such a 
grammar). It would be nice to be able to specify this explicitly 
(without predicates) even though "zero" is also an "integer" and "empty 
string" is also a "string".

Or is this what you are saying?

Shmuel


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.7.0/345 - Release Date: 5/22/2006



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.392 / Virus Database: 268.7.0/345 - Release Date: 5/22/2006

From craymer at warpiv.com  Tue May 23 16:06:07 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Tue May 23 16:06:09 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <4473919C.7000204@shmuelhome.mine.nu>
Message-ID: <000e01c67ebd$7a5223c0$6402a8c0@Fafnir>

The example fits, although the mechanism does quite not match your
description.  The lexer would return a token for 0 with type INTEGER; the
parser would try to match "0", logically as type LITERAL_0; since the text
matches, the token would be matched as a LITERAL_0 and the type field
changed.

--Loring



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of shmuel siegel
> Sent: Tuesday, May 23, 2006 3:50 PM
> To: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] A proposal for keywords
> 
> Loring Craymer wrote:
> >...
> > For option 2, literal types should be bound in the parser:  that is, the
> > lexer binds the generic type to the token (TEXT or NUMBER, for example)
> > and the dynamically looks up the next token in the literals table
> > whenever attempting to match a literal.  That is, "if" would be first
> > typed as TEXT but matched (and retyped) as LITERAL_if when matching an
> > occurrence of "if" in the parser.
> >
> 
> Why are you limiting yourself to this type of situation. Why don't we
> expand the concept. Why not let the lexer return a set of token types
> that match the TEXT. The parser rule would have to resolve the
> ambiguity. The grammar rule would be considered ambiguous if the parser
> would accept two different types that had the same TEXT.
> 
> Let's say that I have a positional parameter in a function call that can
> take on the number zero or an empty string (I actually have such a
> grammar). It would be nice to be able to specify this explicitly
> (without predicates) even though "zero" is also an "integer" and "empty
> string" is also a "string".
> 
> Or is this what you are saying?
> 
> Shmuel
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.392 / Virus Database: 268.7.0/345 - Release Date: 5/22/2006
> 
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.392 / Virus Database: 268.7.0/345 - Release Date: 5/22/2006


From sohail at taggedtype.net  Tue May 23 19:17:53 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Tue May 23 19:18:00 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
Message-ID: <1148437073.5596.13.camel@localhost.localdomain>

On Tue, 2006-05-23 at 10:48 -0700, Terence Parr wrote:
> On May 22, 2006, at 8:00 PM, Sohail Somani wrote:
> 
> > On Mon, 2006-05-22 at 17:25 -0700, Terence Parr wrote:
> >> On May 22, 2006, at 5:20 PM, Sohail Somani wrote:
> >>
> >>> Is there a way to tie System.in into the lexer as input?
> >>
> >> Yeah, i think it's a big hole at the moment...we only have string and
> >> file readers...
> >
> > I suppose what I'll do is just have a FiniteInputStream as a child of
> > ANTLRStringStream and just do what ANTLRFileStream does.
> 
> How about just ANTLRReaderStream and/or ANTLRInputStream?

Oh sure, if you want to use it.. Or are you referring to existing
classes?

From antlr at shmuelhome.mine.nu  Wed May 24 03:36:13 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed May 24 03:36:23 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <000e01c67ebd$7a5223c0$6402a8c0@Fafnir>
References: <000e01c67ebd$7a5223c0$6402a8c0@Fafnir>
Message-ID: <4474371D.2040609@shmuelhome.mine.nu>

I have a problem with the simple reading of your suggestion. My lexer 
rule for STRING strips off quotes because I don't need or want them in 
my later processing. Therefore the textual test for LITERAL_0 will  not 
only match the token 0 but it will also match the token "0". I don't 
want it to match the token "0". I therefore wanted the matching rule for 
LITERAL_0 to take into account that the token type is INTEGER.

This is not a hypothetical scenario. I have had the problem of STRINGs 
being interpreted as keyword. I have added the following code to my 
2.7.6 lexer.
    /**
     * Don't want to override strings
     * The strings were meant to stay strings
     */
    public int testLiteralsTable(int ttype)
    {
        if(ttype == STRING)
            return ttype;
        else
            return super.testLiteralsTable(ttype);
    }

Shmuel


Loring Craymer wrote:
> The example fits, although the mechanism does quite not match your
> description.  The lexer would return a token for 0 with type INTEGER; the
> parser would try to match "0", logically as type LITERAL_0; since the text
> matches, the token would be matched as a LITERAL_0 and the type field
> changed.
>
> --Loring
>
>
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
>> bounces@antlr.org] On Behalf Of shmuel siegel
>> Sent: Tuesday, May 23, 2006 3:50 PM
>> To: antlr-interest@antlr.org
>> Subject: Re: [antlr-interest] A proposal for keywords
>>
>> Loring Craymer wrote:
>>     
>>> ...
>>> For option 2, literal types should be bound in the parser:  that is, the
>>> lexer binds the generic type to the token (TEXT or NUMBER, for example)
>>> and the dynamically looks up the next token in the literals table
>>> whenever attempting to match a literal.  That is, "if" would be first
>>> typed as TEXT but matched (and retyped) as LITERAL_if when matching an
>>> occurrence of "if" in the parser.
>>>
>>>       
>> Why are you limiting yourself to this type of situation. Why don't we
>> expand the concept. Why not let the lexer return a set of token types
>> that match the TEXT. The parser rule would have to resolve the
>> ambiguity. The grammar rule would be considered ambiguous if the parser
>> would accept two different types that had the same TEXT.
>>
>> Let's say that I have a positional parameter in a function call that can
>> take on the number zero or an empty string (I actually have such a
>> grammar). It would be nice to be able to specify this explicitly
>> (without predicates) even though "zero" is also an "integer" and "empty
>> string" is also a "string".
>>
>> Or is this what you are saying?
>>
>> Shmuel
>>     
From OJAY78 at gmx.de  Wed May 24 04:33:29 2006
From: OJAY78 at gmx.de (OJAY78@gmx.de)
Date: Wed May 24 04:33:32 2006
Subject: [antlr-interest] (no subject)
Message-ID: <20060524113329.20010@gmx.net>

Hi @ all,

I am trying desperately to write my grammar with antlr and hope anyone can help me a bit. 
Because I am new in this topic I spent a few days with reading about parsing generators. I read a lot about automata for the recognitions of the tokens and contextfree grammars for the parsing. As I understand that a bit better I startet to read a few ANTLR tutorials and found one with a grammar for a calculator. I extended this example a bit but now I get stuck. What I have is a grammar for a calculator and relational Operators for Integers Example
((4+4)>(2+3*1)) -->1(true)

This was a big step for me to get to that. What I want is to generate a language which can handle expressions like this.

((myfunction+myfunction1)>5) AND (myBoolFunction OR myBoolFunction)

Myfunction could be any function that I want to implement. 

What I have done so far is to write a grammar and a lexxer. The grammar uses the buildAST=true option so that I build my parsetree manualy, at least I understand this so. Finally I created a treewalker for this tree.

Ok here is the code of the calculator that works

class ExpressionParser extends Parser;
options { buildAST=true; }
mathexpr 	: LPAREN^ sumExpr RPAREN! ;
sumExpr  	: prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr 	: powExpr ((MUL^|DIV^|MOD^) powExpr)* ;
powExpr  	: relationalExpression (POW^ relationalExpression)? ;
relationalExpression	  : atom ((EQUALS^|GT^|LT^) atom)*;
atom     : INT | mathexpr ;  



class ExpressionLexer extends Lexer;

PLUS  	: '+' ;
MINUS 	: '-' ;
MUL   	: '*' ;
DIV   	: '/' ;
MOD   	: '%' ;
POW   	: '^' ;
SEMI  	: ';' ;
protected DIGIT : '0'..'9' ;
INT   	: (DIGIT)+ ;
RPAREN	: ')';
LPAREN	: '(';
EQUALS	:'=';
LT		:'<';
GT		:'>';

{import java.lang.Math;
}
class ExpressionTreeWalker extends TreeParser;
options {

}
mathexpr returns [double r]
  { double a,b; r=0; } 


  : #(LPAREN a=mathexpr)	 	{ r=a;   }
  | #(PLUS   a=mathexpr b=mathexpr)  	{ r=a+b; }
  | #(MINUS  a=mathexpr b=mathexpr)  	{ r=a-b; }
  | #(MUL    a=mathexpr b=mathexpr)  	{ r=a*b; }
  | #(DIV    a=mathexpr b=mathexpr)  	{ r=a/b; }
  | #(MOD    a=mathexpr b=mathexpr)  	{ r=a%b; }
  | #(POW    a=mathexpr b=mathexpr)  	{ r=Math.pow(a,b); }
  | #(EQUALS a=mathexpr b=mathexpr) 	{ if (a==b) r=1; else r=0;  	}
  | #(LT     a=mathexpr b=mathexpr)	{ if (a<b)  r=1; else r=0; } 
  | #(GT     a=mathexpr b=mathexpr)	{ if (a>b)  r=1; else r=0; }
  | i:INT 		{ r=(double)Integer.parseInt(i.getText()); };


Now I want to extend this grammar with that

expression	:term (OR^ term | XOR^ term)*;
term		:function (AND^ function)*;
function	:boolFunction | mathexpr;
boolFunction:MYFUNCTIONS | mathexpr;

but I do not really understand how I have to build the tree. Can anyone help how to get that work together?

I am thankful for any advise

Best Regards 
Oliver


-- 


Bis zu 70% Ihrer Onlinekosten sparen: GMX SmartSurfer!
      Kostenlos downloaden: http://www.gmx.net/de/go/smartsurfer
    
From OJAY78 at gmx.de  Wed May 24 04:35:23 2006
From: OJAY78 at gmx.de (OJAY78@gmx.de)
Date: Wed May 24 04:35:30 2006
Subject: [antlr-interest] tree construction problem
Message-ID: <20060524113329.20010@gmx.net>

Ups.. I forget the subject.

Hi @ all,


I am trying desperately to write my grammar with antlr and hope anyone can help me a bit. 
Because I am new in this topic I spent a few days with reading about parsing generators. I read a lot about automata for the recognitions of the tokens and contextfree grammars for the parsing. As I understand that a bit better I startet to read a few ANTLR tutorials and found one with a grammar for a calculator. I extended this example a bit but now I get stuck. What I have is a grammar for a calculator and relational Operators for Integers Example
((4+4)>(2+3*1)) -->1(true)

This was a big step for me to get to that. What I want is to generate a language which can handle expressions like this.

((myfunction+myfunction1)>5) AND (myBoolFunction OR myBoolFunction)

Myfunction could be any function that I want to implement. 

What I have done so far is to write a grammar and a lexxer. The grammar uses the buildAST=true option so that I build my parsetree manualy, at least I understand this so. Finally I created a treewalker for this tree.

Ok here is the code of the calculator that works

class ExpressionParser extends Parser;
options { buildAST=true; }
mathexpr 	: LPAREN^ sumExpr RPAREN! ;
sumExpr  	: prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr 	: powExpr ((MUL^|DIV^|MOD^) powExpr)* ;
powExpr  	: relationalExpression (POW^ relationalExpression)? ;
relationalExpression	  : atom ((EQUALS^|GT^|LT^) atom)*;
atom     : INT | mathexpr ;  



class ExpressionLexer extends Lexer;

PLUS  	: '+' ;
MINUS 	: '-' ;
MUL   	: '*' ;
DIV   	: '/' ;
MOD   	: '%' ;
POW   	: '^' ;
SEMI  	: ';' ;
protected DIGIT : '0'..'9' ;
INT   	: (DIGIT)+ ;
RPAREN	: ')';
LPAREN	: '(';
EQUALS	:'=';
LT		:'<';
GT		:'>';

{import java.lang.Math;
}
class ExpressionTreeWalker extends TreeParser;
options {

}
mathexpr returns [double r]
  { double a,b; r=0; } 


  : #(LPAREN a=mathexpr)	 	{ r=a;   }
  | #(PLUS   a=mathexpr b=mathexpr)  	{ r=a+b; }
  | #(MINUS  a=mathexpr b=mathexpr)  	{ r=a-b; }
  | #(MUL    a=mathexpr b=mathexpr)  	{ r=a*b; }
  | #(DIV    a=mathexpr b=mathexpr)  	{ r=a/b; }
  | #(MOD    a=mathexpr b=mathexpr)  	{ r=a%b; }
  | #(POW    a=mathexpr b=mathexpr)  	{ r=Math.pow(a,b); }
  | #(EQUALS a=mathexpr b=mathexpr) 	{ if (a==b) r=1; else r=0;  	}
  | #(LT     a=mathexpr b=mathexpr)	{ if (a<b)  r=1; else r=0; } 
  | #(GT     a=mathexpr b=mathexpr)	{ if (a>b)  r=1; else r=0; }
  | i:INT 		{ r=(double)Integer.parseInt(i.getText()); };


Now I want to extend this grammar with that

expression	:term (OR^ term | XOR^ term)*;
term		:function (AND^ function)*;
function	:boolFunction | mathexpr;
boolFunction:MYFUNCTIONS | mathexpr;

but I do not really understand how I have to build the tree. Can anyone help how to get that work together?

I am thankful for any advise

Best Regards 
Oliver


-- 


Bis zu 70% Ihrer Onlinekosten sparen: GMX SmartSurfer!
      Kostenlos downloaden: http://www.gmx.net/de/go/smartsurfer
    

-- 


Bis zu 70% Ihrer Onlinekosten sparen: GMX SmartSurfer!
      Kostenlos downloaden: http://www.gmx.net/de/go/smartsurfer
    
From digobaptista at gmail.com  Wed May 24 05:05:46 2006
From: digobaptista at gmail.com (Rodrigo Baptista)
Date: Wed May 24 05:05:49 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
Message-ID: <b69b16780605240505g2d74efb4i70779211c29ad9a4@mail.gmail.com>

Hello again and sorry for being repeated but i suppose that people from the
mailing list thought that someone already answered to my question because
Loring Craymer posted his question on my thread and so on, but unfortunetly
not.

Im using ANTLR to generate a compiler in C# for a DSL and I would like to
know how to pass to the Lexer multiple input files (something similar to the
control of "yyin" using "yywrap()" in flex) in order to be able to switch
the source stream.

I know that I could concatenate all the input files in a stream and pass it
to the Lexer but I still want to know if ANTLR has some tool to prevent this
option.

This is a typical way to process "<include/import xpto>" files.

Regards,

Rodrigo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060524/68d23896/attachment-0001.html
From open.zone at virgin.net  Wed May 24 07:58:41 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed May 24 07:41:09 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
In-Reply-To: <b69b16780605240505g2d74efb4i70779211c29ad9a4@mail.gmail.com>
Message-ID: <00a401c67f42$8cb85ea0$c704a8c0@hercules>

Hi Rodrigo,
 
See the includeFile sample included with ANTLR. 
 
Cheers,
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rodrigo Baptista
Sent: 24 May 2006 13:06
To: antlr-interest@antlr.org
Subject: [antlr-interest] Wrapping input files to process multiple sources


Hello again and sorry for being repeated but i suppose that people from the
mailing list thought that someone already answered to my question because
Loring Craymer posted his question on my thread and so on, but unfortunetly
not. 


Im using ANTLR to generate a compiler in C# for a DSL and I would like to
know how to pass to the Lexer multiple input files (something similar to the
control of "yyin" using "yywrap()" in flex) in order to be able to switch
the source stream.

I know that I could concatenate all the input files in a stream and pass it
to the Lexer but I still want to know if ANTLR has some tool to prevent this
option.

This is a typical way to process "<include/import xpto>" files.

Regards,


Rodrigo


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060524/fe327e91/attachment.html
From parrt at cs.usfca.edu  Wed May 24 11:21:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 24 11:21:13 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <000301c67e94$0d3c40f0$6402a8c0@Fafnir>
References: <000301c67e94$0d3c40f0$6402a8c0@Fafnir>
Message-ID: <0F95C383-D829-42C0-975F-67F237FFF342@cs.usfca.edu>


On May 23, 2006, at 11:09 AM, Loring Craymer wrote:

> I was concerned that this might not work with the LL(*) DFAs of  
> ANTLR 3, until I realized that the predicate hoisting mechanism  
> provides almost all of the support needed.  (Some sort of type  
> patching table may also be required; ?if? might be matched by a  
> state that allowed either LITERAL_if or TEXT as the type for that  
> token; for a first implementation, the type patching may not be  
> necessary since tree walkers could also do dynamic lookup when  
> matching literals.  Patching, though, seems preferable over the  
> longer term.)

Hi...seems like we can just let preds handle it.  There is a cool  
example in the examples-v3 dir about turning enum on / off, but this  
concept needs a different example.  I think this will work:

stat : if ... | ID '=' expr | ... ;

if : {input.LT(1).getText().equals("if")}? ID ;

but, that's expensive doing the compare all the time.  Another way is  
to simply list the keywords:

id : ID | 'if' | 'then' | 'begin' | ... ;

then use like

stat : 'if' ... | id '=' expr | ... ;

What that do what you want?

Ter
From parrt at cs.usfca.edu  Wed May 24 11:21:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 24 11:22:01 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <1148437073.5596.13.camel@localhost.localdomain>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
Message-ID: <B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>


On May 23, 2006, at 7:17 PM, Sohail Somani wrote:
>>> I suppose what I'll do is just have a FiniteInputStream as a  
>>> child of
>>> ANTLRStringStream and just do what ANTLRFileStream does.
>>
>> How about just ANTLRReaderStream and/or ANTLRInputStream?
>
> Oh sure, if you want to use it.. Or are you referring to existing
> classes?

I'm just saying that if you create this, might as well use those  
names and share :) though I assume it's a simple subclass...

Ter

From anh23 at pitt.edu  Wed May 24 11:35:23 2006
From: anh23 at pitt.edu (Anthony Harrison)
Date: Wed May 24 11:35:26 2006
Subject: [antlr-interest] streamlining grammars to avoid out of memory errors
Message-ID: <a7ec19f0605241135o93df10fq83a7ed5ab5b0ce6d@mail.gmail.com>

Folks who know:
 I poked around the wiki and the rest of the site and found no hints
regarding this question, so I turn to the folks who know.
 Do you have an general heuristics for grammar writing to limit the
memory consumption?
A quick look at the code generated doesn't lead me to any obvious
conclusions other than perhaps limiting the number of options within a
rule.

 Any thoughts are greatly appreciated.

 Oh, what a wiki page this would make. ;-)

-- 
+------------------------------------------------------------+
  Anthony M. Harrison
  http://simon.lrdc.pitt.edu/~harrison/
  anh23@pitt.edu
  Learning Research and Development Center
  University of Pittsburgh
From Erik.Putrycz at nrc-cnrc.gc.ca  Wed May 24 12:17:57 2006
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Wed May 24 12:18:00 2006
Subject: [antlr-interest] streamlining grammars to avoid out of memory
	errors
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E9023AFDF9@nrccenexb1.nrc.ca>

Are you hitting out of memory on Java or on C/C++? 

To what I've seen, the Java generated code is very optimized... That far
I have not seen any serious memory usage in Java and I'm not sure how
the number of options would affect the memory usage. Are you generating
an AST?

Erik Putrycz, Ph.D - Research Associate / erik.putrycz@nrc-cnrc.gc.ca /
(613) 990 0681
Institute for Information Technology - Software Engineering Group
National Research Council, Canada - Building M-50, 1200 Montreal Road
Ottawa, Ontario, CANADA K1A 0R6

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Anthony Harrison
Sent: May 24, 2006 14:35
To: antlr-interest@antlr.org
Subject: [antlr-interest] streamlining grammars to avoid out of memory
errors

Folks who know:
 I poked around the wiki and the rest of the site and found no hints
regarding this question, so I turn to the folks who know.
 Do you have an general heuristics for grammar writing to limit the
memory consumption?
A quick look at the code generated doesn't lead me to any obvious
conclusions other than perhaps limiting the number of options within a
rule.

 Any thoughts are greatly appreciated.

 Oh, what a wiki page this would make. ;-)

-- 
+------------------------------------------------------------+
  Anthony M. Harrison
  http://simon.lrdc.pitt.edu/~harrison/
  anh23@pitt.edu
  Learning Research and Development Center
  University of Pittsburgh
From craymer at warpiv.com  Wed May 24 13:00:59 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Wed May 24 13:01:03 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <0F95C383-D829-42C0-975F-67F237FFF342@cs.usfca.edu>
Message-ID: <001801c67f6c$c7805630$6402a8c0@Fafnir>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, May 24, 2006 11:21 AM
> To: antlr-interest List
> Subject: Re: [antlr-interest] A proposal for keywords
> 
> 
> On May 23, 2006, at 11:09 AM, Loring Craymer wrote:
> 
> > I was concerned that this might not work with the LL(*) DFAs of
> > ANTLR 3, until I realized that the predicate hoisting mechanism
> > provides almost all of the support needed.  (Some sort of type
> > patching table may also be required; "if" might be matched by a
> > state that allowed either LITERAL_if or TEXT as the type for that
> > token; for a first implementation, the type patching may not be
> > necessary since tree walkers could also do dynamic lookup when
> > matching literals.  Patching, though, seems preferable over the
> > longer term.)
> 
> Hi...seems like we can just let preds handle it.  There is a cool

Mechanistically, yes.  However, the preds should be automatically generated,
not specified by the user.  I would like to set a flag and have parser
literals cause the parser to match and retype tokens instead of having the
lexer do the work of literal lookup.

> example in the examples-v3 dir about turning enum on / off, but this
> concept needs a different example.  I think this will work:
> 
> stat : if ... | ID '=' expr | ... ;
> 
> if : {input.LT(1).getText().equals("if")}? ID ;
> 
> but, that's expensive doing the compare all the time.  Another way is

Actually, it just "feels" expensive.  Since you don't hash every ID, it's
faster than doing the "testLiterals" thing--you only do a compare when you
need to.  You can also optimize to not do more than one string compare per
literal by keeping a record of the matched type (LITERAL_if in this case).

> to simply list the keywords:
> 
> id : ID | 'if' | 'then' | 'begin' | ... ;
> 
> then use like
> 
> stat : 'if' ... | id '=' expr | ... ;
> 
> What that do what you want?

Not quite--that handles option 1 (identify keywords in lexer).  I'm thinking
that the matching machinery for your "if" example above can be done "under
the hood" so that instead of

> if : {input.LT(1).getText().equals("if")}? ID ;

You do

if : "if" ;

with an option flag set and the _parser_ automagically matches a token with
text "if" as LITERAL_if.

Shmuel's desire--that a token must already be of a desired type before
coercion (TEXT, for example)--could also be satisfied, but it would add to
the implementation cost.  You would have to run an interpreted version of
the lexer to be generated over keyword strings to identify the default type.
I would think that overkill.

> 
> Ter

From jimi at temporal-wave.com  Wed May 24 13:02:28 2006
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed May 24 13:02:35 2006
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <003a01c6791b$0755cfe0$0202fea9@ssdev1>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>


I believe that the ICU package is about as close as can be on that
issue. But in general convering the simpler languages that java handles
naturally would be enough. Very special cases can be hand crafted by the
implementer, but most cases are not like this.

The C runtime for ANLTR3 uses UTF32 internally and expects any character
stream to provide its own conversion from the original input character
set (which is preserved in the original format however). I have provided
latin-1 and will provide a few other input streams for people to use as
templates for anything else. Typedefs are used for pointers so that you
can specifically say if the source is 8 bit characters, UTF32 etc.
ANTLR3_foobar and so on.

Also, don't forget that though we may want a case insensitive match, the
original case of the matching text is probably what is required for the
token.

I have not finished error handling yet (C) but in fact it will be easy
to override the output methods and so on as it will get an error message
code which you can use to do whatever you like.

Jim



-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-

> If you need a case-insensitive lexer, the end user should implement
that by
overriding an appropriate method in the lexer and use whatever
comparison is
appropriate for their particular needs.  There is no universal upper or
lower-casing function that is appropriate for every possible locale, so
why
even go down that road?   Keep the core of Antlr simple, and just
provide
extensibility points (with samples) where appropriate.



This is probably a codegen issue more than a core Antlr issue, but one
of
the biggest frustrations for me in Antlr 2.x is that the whole thing
assumes
8-byte characters and strings.  There are hard-coded references to
string,
stream, char, LPSTR, cout, etc. throughout the generated code as well as
the
runtime code.  These should be defines or typedefs, so generating a
Unicode
parser (UTF-16) would be as simple as doing something like '#define
ANTLR_STRING wstring', '#define ANTLR_CHAR wchar_t', and so on.

Another problem is the various hard-coded ANSI, English strings in error
messages, and hard coded references to cout.  Please abstract anything
like
this so that it can be overridden, so error messages can be localized,
and
other output mechanisms can be used other than an ANSI console.  It's a
big
world out there and modern applications today need to support Unicode
and
easy localization.

Don
 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, May 16, 2006 2:28 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] case sensitivity for ANTLR v3 lexers
> 
> 
> On May 16, 2006, at 10:58 AM, Terence Parr wrote:
> 
> >
> > On May 16, 2006, at 10:50 AM, Martin Probst wrote:
> >
> >>> Soon we will need case insensitive lexing for v3.  I am hoping to 
> >>> leave the input stream stuff alone and just subclass Lexer as 
> >>> CaseInsensitiveLexer, which overrides match() methods.  
> Then alter 
> >>> code gen for char set matching (because it's generated inline).
> >>>
> >>> The tokens would have the unmolested input chars.
> >>>
> >>> Does this sound right?
> >>
> >> No idea, but did you think about internationalization 
> issues? I mean, 
> >> in European languages there is a clear, defined concept of 
> upper case 
> >> and lower case. However I think there are some asian languages etc 
> >> where this is not exactly true, and
> >> java.lang.String#equalsIgnoreCase() doesn't get it right 
> as far as I 
> >> know. Maybe provide an overridable (ouch) method of some kind?
> >
> > If I override match(char c) so that it uses 
> Character.toUpperCase() or 
> > whatever, it should be ok I think.
> 
> We should also probably let people set the locale for the 
> uppercasing, right?
> 
> Ter
> 


From bond at research.att.com  Wed May 24 13:06:40 2006
From: bond at research.att.com (Gregory W. Bond)
Date: Wed May 24 13:06:40 2006
Subject: [antlr-interest] Bug and Fix for Python ANTLR 2.7.6
Message-ID: <3c17852aa27007cb2176eae94bcb34f7@research.att.com>

i encountered a bug related to the implementation of hidden token  
streams in the Python implementation of ANTLR 2.7.6 - the bug causes an  
exception to be thrown from deep inside antlr.py during parsing - a  
search of the antlr-interest email archives revealed that someone else  
experienced problems with the 2.7.5 version (see  
http://www.antlr.org/pipermail/antlr-interest/2005-May/ 
012173.html) - the poster included a patch for antlr.py v2.7.5 that  
fixed his problems - i applied a variation of his patch to antlr.py  
v2.7.6 which has fixed the problem for me - i've notified the PyANTLR  
maintainers but i haven't received a response from them - since it's  
not clear to me how to formally submit a bug fix i include my patch  
here:

--- antlr-2.7.6/lib/python/antlr/antlr.py    Wed Dec  7 13:00:36 2005
+++ antlr.py    Wed May 24 15:32:47 2006
@@ -1007,7 +1007,7 @@
          if isinstance(m,int):
              self.hideMask.add(m)
              return
-        if isinstance(m.BitMask):
+        if isinstance(m,BitMask):
              self.hideMask = m
              return

@@ -1630,10 +1630,13 @@
          self.set(bit,not off)

      def at(self,bit):
-        i = self.wordNumber(bit)
-        v = self.data[i]
-        m = self.bitMask(bit)
-        return v & m
+        try:
+            i = self.wordNumber(bit)
+            v = self.data[i]
+            m = self.bitMask(bit)
+            return v & m
+        except IndexError:
+            return False


  ###xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx###
@@ -2553,7 +2556,7 @@
          CommonAST.initialize(self,*args)
          if args and isinstance(args[0],Token):
              assert isinstance(args[0],CommonHiddenStreamToken)
-            self.hideenBefore = args[0].getHiddenBefore()
+            self.hiddenBefore = args[0].getHiddenBefore()
              self.hiddenAfter  = args[0].getHiddenAfter()

  ###xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx###


--
Gregory W. Bond
AT&T Labs - Research
180 Park Avenue, Rm. D273, Bldg. 103
Florham Park, NJ, 07932-0971, USA
tel: 973 360 7216 fax: 973 360 8092

From craymer at warpiv.com  Wed May 24 13:11:06 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Wed May 24 13:11:28 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <4474371D.2040609@shmuelhome.mine.nu>
Message-ID: <001901c67f6e$31a33ef0$6402a8c0@Fafnir>

Shmuel--

This is an implementation problem.  To specifically look for a token with
text "0" and type NUMBER would require running an interpreted version of the
lexer over keyword tokens in the parser grammar during ANTLR analysis.  You
can "manually" differentiate and identify already (ANTLR 3, not ANTLR 2)
with a semantic predicate.  As long as there is machinery for fine-tuning, I
would rather see a simple mechanism that handles most of the cases than
request significant extra machinery.  Ter has enough to do already.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of shmuel siegel
> Sent: Wednesday, May 24, 2006 3:36 AM
> To: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] A proposal for keywords
> 
> I have a problem with the simple reading of your suggestion. My lexer
> rule for STRING strips off quotes because I don't need or want them in
> my later processing. Therefore the textual test for LITERAL_0 will  not
> only match the token 0 but it will also match the token "0". I don't
> want it to match the token "0". I therefore wanted the matching rule for
> LITERAL_0 to take into account that the token type is INTEGER.
> 
> This is not a hypothetical scenario. I have had the problem of STRINGs
> being interpreted as keyword. I have added the following code to my
> 2.7.6 lexer.
>     /**
>      * Don't want to override strings
>      * The strings were meant to stay strings
>      */
>     public int testLiteralsTable(int ttype)
>     {
>         if(ttype == STRING)
>             return ttype;
>         else
>             return super.testLiteralsTable(ttype);
>     }
> 
> Shmuel
> 
> 
> Loring Craymer wrote:
> > The example fits, although the mechanism does quite not match your
> > description.  The lexer would return a token for 0 with type INTEGER;
> the
> > parser would try to match "0", logically as type LITERAL_0; since the
> text
> > matches, the token would be matched as a LITERAL_0 and the type field
> > changed.
> >
> > --Loring
> >
> >
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> >> bounces@antlr.org] On Behalf Of shmuel siegel
> >> Sent: Tuesday, May 23, 2006 3:50 PM
> >> To: antlr-interest@antlr.org
> >> Subject: Re: [antlr-interest] A proposal for keywords
> >>
> >> Loring Craymer wrote:
> >>
> >>> ...
> >>> For option 2, literal types should be bound in the parser:  that is,
> the
> >>> lexer binds the generic type to the token (TEXT or NUMBER, for
> example)
> >>> and the dynamically looks up the next token in the literals table
> >>> whenever attempting to match a literal.  That is, "if" would be first
> >>> typed as TEXT but matched (and retyped) as LITERAL_if when matching an
> >>> occurrence of "if" in the parser.
> >>>
> >>>
> >> Why are you limiting yourself to this type of situation. Why don't we
> >> expand the concept. Why not let the lexer return a set of token types
> >> that match the TEXT. The parser rule would have to resolve the
> >> ambiguity. The grammar rule would be considered ambiguous if the parser
> >> would accept two different types that had the same TEXT.
> >>
> >> Let's say that I have a positional parameter in a function call that
> can
> >> take on the number zero or an empty string (I actually have such a
> >> grammar). It would be nice to be able to specify this explicitly
> >> (without predicates) even though "zero" is also an "integer" and "empty
> >> string" is also a "string".
> >>
> >> Or is this what you are saying?
> >>
> >> Shmuel
> >>

From mail at martin-probst.com  Wed May 24 15:37:18 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed May 24 15:37:23 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <001901c67f6e$31a33ef0$6402a8c0@Fafnir>
References: <4474371D.2040609@shmuelhome.mine.nu>
	<001901c67f6e$31a33ef0$6402a8c0@Fafnir>
Message-ID: <14431.14632.130.76.32.145.1148510238.squirrel@webmailer.hosteurope.de>

I would recommend not changing the text of a token anyways, but rather
having a field "parsed text", or "modified text", or whatever.

Rationale is that you want to have the original token text for error
reporting, plus it's not actually expensive to have the string around
(it's not a copy, it's just offsets into the original string). So I'd
create a method called getModifiedText() that defaults to return the
original text (if modified text is null).
From antlr at shmuelhome.mine.nu  Wed May 24 15:51:07 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed May 24 15:50:50 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <001901c67f6e$31a33ef0$6402a8c0@Fafnir>
References: <001901c67f6e$31a33ef0$6402a8c0@Fafnir>
Message-ID: <4474E35B.9090706@shmuelhome.mine.nu>

Loring Craymer wrote:
> Shmuel--
> 
> This is an implementation problem.  To specifically look for a token with
> text "0" and type NUMBER would require running an interpreted version of the
> lexer over keyword tokens in the parser grammar during ANTLR analysis.  You
> can "manually" differentiate and identify already (ANTLR 3, not ANTLR 2)
> with a semantic predicate.  As long as there is machinery for fine-tuning, I
> would rather see a simple mechanism that handles most of the cases than
> request significant extra machinery.  Ter has enough to do already.
> 
> --Loring
> 
I was thinking that the basis of the mechanism that I wanted was already 
there. ANTLR3 already has a sophisticated mechanism for detecting 
ambiguous rules. I thought that the DFA for the lexer can be configured 
to return a token set. The definition of "match" then changes to contains.
But ultimately I agree with you. Since I can manually handle it with 
slightly awkward syntax, it is not worth delaying ANTLR 3.0 for this 
feature. If it causes a significant delay or a risk of introducing bugs, 
delay it till version 3.1

Shmuel
From antlr at shmuelhome.mine.nu  Wed May 24 16:00:14 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed May 24 15:58:51 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <14431.14632.130.76.32.145.1148510238.squirrel@webmailer.hosteurope.de>
References: <4474371D.2040609@shmuelhome.mine.nu>
	<001901c67f6e$31a33ef0$6402a8c0@Fafnir>
	<14431.14632.130.76.32.145.1148510238.squirrel@webmailer.hosteurope.de>
Message-ID: <4474E57E.2080209@shmuelhome.mine.nu>

Martin Probst wrote:
> I would recommend not changing the text of a token anyways, but rather
> having a field "parsed text", or "modified text", or whatever.
> 
> Rationale is that you want to have the original token text for error
> reporting, plus it's not actually expensive to have the string around
> (it's not a copy, it's just offsets into the original string). So I'd
> create a method called getModifiedText() that defaults to return the
> original text (if modified text is null).
> 
> 

Are you saying that you recommend creating my own AST class rather than 
use "!" in a lexer rule? Do you believe that the following rule is bad form?

STRING: '"'! ( ESCAPE | ~('"'|'\\') )* '"'! ;
From kroepke at dolphin-services.de  Wed May 24 20:46:05 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Wed May 24 20:46:11 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <4474E57E.2080209@shmuelhome.mine.nu>
References: <4474371D.2040609@shmuelhome.mine.nu>
	<001901c67f6e$31a33ef0$6402a8c0@Fafnir>
	<14431.14632.130.76.32.145.1148510238.squirrel@webmailer.hosteurope.de>
	<4474E57E.2080209@shmuelhome.mine.nu>
Message-ID: <F403CB46-9FAC-4A24-B86C-012610E84B39@dolphin-services.de>


On 25. May 2006, at 1:00 Uhr, shmuel siegel wrote:

> Are you saying that you recommend creating my own AST class rather  
> than use "!" in a lexer rule? Do you believe that the following  
> rule is bad form?
>
> STRING: '"'! ( ESCAPE | ~('"'|'\\') )* '"'! ;

I wouldn't say that this is bad practice. Indeed I submitted a patch  
to Ter middle of February to make it working again in v3.
Altough that it is currently always copying the text, we could  
probably optimize for the case of leading/trailing bang modifiers.
Incidentally, Ter and me were talking about this very thing a week  
ago or so, so I think it will be in an upcoming release, in the depot
soon.

-k
From sohail at taggedtype.net  Wed May 24 20:54:58 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Wed May 24 20:55:06 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
	<B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
Message-ID: <1148529298.11289.7.camel@localhost.localdomain>

On Wed, 2006-05-24 at 11:21 -0700, Terence Parr wrote:
> On May 23, 2006, at 7:17 PM, Sohail Somani wrote:
> >>> I suppose what I'll do is just have a FiniteInputStream as a  
> >>> child of
> >>> ANTLRStringStream and just do what ANTLRFileStream does.
> >>
> >> How about just ANTLRReaderStream and/or ANTLRInputStream?
> >
> > Oh sure, if you want to use it.. Or are you referring to existing
> > classes?
> 
> I'm just saying that if you create this, might as well use those  
> names and share :) though I assume it's a simple subclass...

Madam:

// My java.io isn't that great :)
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.CharArrayWriter;
import java.io.BufferedWriter;
import org.antlr.runtime.ANTLRStringStream;

public class ANTLRInputStream extends ANTLRStringStream {

	public ANTLRInputStream(InputStream stream) throws IOException 
	{
		load(stream);
	}

	public void load(InputStream istream) throws IOException 
	{
		BufferedReader br = new BufferedReader(new 
			InputStreamReader(istream));
		CharArrayWriter wr = new CharArrayWriter();
		BufferedWriter bw = new BufferedWriter(wr); 
		String line=null;
		while((line=br.readLine())!=null)
		{
			bw.write(line);
			// TODO: This may not be what you want
			bw.newLine(); 
		}
		bw.close();
		data = wr.toCharArray();
	}
}


From antlr-interest at schraverus.com  Thu May 25 01:08:13 2006
From: antlr-interest at schraverus.com (Corno)
Date: Thu May 25 01:08:18 2006
Subject: [antlr-interest] ambiguity when calling rule
Message-ID: <20060525080815.6ECB632C02A@smtpauth00.csee.siteprotect.com>

Hi all,

I'm trying to understand why my grammar gives an error for ambiguity. First
I thought that the problem was somehow related to ll(k) and that it would
disappear when I reworked it to ll(*). Today I tried that with antlr3 but
the problem persisted.

Basically the problem is as follows; when I have 1 rule, say X, that is
called by both A and B, I get an error. When I literally copy the rule,
rename the copy to Y and let B call Y (while A still calls X) the error
disappears. I know that the combination A-X needs another lookahead than B-Y
but I thought ll(*) would determine a solution that fits both needs.

example

selection  :	'v' ( '.' 'w' )* ;
selection2 :	'v' ( '.' 'w' )* ;

statement 
:
	'<'
	(
		(
			'x' selection statement //error
			//'x' selection2 statement //fine
		|
			'y' selection '.' 'w' '<' ( 'z' ) *	'>'
		)
	) *
	'>'
;

Can somebody explain why this is and if there is a way to prevent having to
copy rules?

TIA,

Corno



From sunjigang1965 at yahoo.com.cn  Thu May 25 06:05:02 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Thu May 25 06:05:10 2006
Subject: [antlr-interest] about lexer 
Message-ID: <20060525130502.54983.qmail@web15709.mail.cnb.yahoo.com>

To keep lexical grammar tidy, I would like define a rule in several lines, for example,

ID: UpperCase | LowerCase;

UpperCase: 'A'..'Z';
LowerCase: 'a'..'z';

The UpperCase and LowerCase are only used for convenience, there is no such token name used in
parser. But it complains. 

Is any  way to sort it out?

Thanks.

Jigang


	

	
		
___________________________________________________________ 
Mp3∑ËøÒÀ—-–¬∏Ë»»∏Ë∏ﬂÀŸœ¬
http://music.yahoo.com.cn/?source=mail_mailbox_footer
From mike.quilleash at azuresolutions.com  Thu May 25 06:13:43 2006
From: mike.quilleash at azuresolutions.com (Mike Quilleash)
Date: Thu May 25 06:13:51 2006
Subject: [antlr-interest] about lexer 
Message-ID: <F1689FB09456E347A6E38343B99E680D01EC5614@THHS2EXBE2X.hostedservice2.net>

Make the UpperCase and Lowercase protected, then they will be considered =
tokens internal to the lexer for building other lexer tokens not tokens =
in their own right.=20

-----Original Message-----
From: antlr-interest-bounces@antlr.org =
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of ??? Jigang =
(Robert) Sun
Sent: 25 May 2006 14:05
To: antlr-interest@antlr.org
Subject: [antlr-interest] about lexer=20

To keep lexical grammar tidy, I would like define a rule in several =
lines, for example,

ID: UpperCase | LowerCase;

UpperCase: 'A'..'Z';
LowerCase: 'a'..'z';

The UpperCase and LowerCase are only used for convenience, there is no =
such token name used in parser. But it complains.=20

Is any  way to sort it out?

Thanks.

Jigang


=09

=09
	=09
___________________________________________________________
Mp3=B7=E8=BF=F1=CB=D1-=D0=C2=B8=E8=C8=C8=B8=E8=B8=DF=CB=D9=CF=C2
http://music.yahoo.com.cn/?source=3Dmail_mailbox_footer
From kroepke at dolphin-services.de  Thu May 25 09:12:23 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Thu May 25 09:12:31 2006
Subject: [antlr-interest] ambiguity when calling rule
In-Reply-To: <20060525080815.6ECB632C02A@smtpauth00.csee.siteprotect.com>
References: <20060525080815.6ECB632C02A@smtpauth00.csee.siteprotect.com>
Message-ID: <7BDAB38C-E16D-43F8-92E9-A71DD3B1FE26@dolphin-services.de>


On 25. May 2006, at 10:08 Uhr, Corno wrote:

> Can somebody explain why this is and if there is a way to prevent  
> having to
> copy rules?

I'll try my luck:

ANTLR says:
test.g:3:27: Decision can match input such as "'.' 'w' '<' {'x'..'y',  
'>'}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

That means:
Whenever ANTLR enters 'selection' and would match '.w' input it has  
to two options for matching the last '.' 'w':
1) do the loop in selection ('.' 'w')* (i.e. the last iteration in  
the loop)
2) match the '.' 'w' in rule 'statement'

Without knowing the input (i.e. in analysis) it cannot decide which  
option to pick. But it has to decide because there can only be
one edge leading outward from the DFA state it is on. Consequently it  
picks one option and discards all the others (in this case it's
only one: alternative 2) [Why is this called alternative? They are  
really options not alternatives...sorry pet peeve]
This has nothing to do with lookahead, because for sets as spelled  
out in the warning above, it simply cannot be decided which path to
choose.
When adding selection2 there is a different DFA (the one for  
selection2) and thus no predicament as to which path to take.
Try it in ANTLRWorks to see the DFAs. Especially not the interpreter.  
You can also see the different alts in the graph. Way cool!

Unfortunately I can offer you no solution for this with just one  
rule, as I cannot think of anything to add short of semantic  
predicates to
differentiate between those two uses of 'selection', but that's  
probably a thing you'd like to avoid.

But: What do you actually want to achieve? There might be a way  
around this dilemma...

HTH,

-k
From a_day at list.ru  Thu May 25 09:39:37 2006
From: a_day at list.ru (=?windows-1251?B?3vjg6u7iIMTs6PLw6Ok=?=)
Date: Thu May 25 09:40:00 2006
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
Message-ID: <165776895.20060525203937@list.ru>

My first letter was ignored, i'm tried some voodoo spells, but it didn't
work... now my power get down and deadline turns into noose around
neck :[]
At first please look here http://www.jguru.com/forums/view.jsp?EID=1296048
I've downloaded ANTLR 2.7.5 VisualStudio 7.1 solution (
http://www.antlr.org/share/1114161110276/vc71.zip ),
antlr-2.7.5.tar.gz http://www.antlr.org/download/antlr-2.7.5.tar.gz ,
Dwid Wigg's C++ grammar
http://www.antlr.org/grammar/1132152279791/CPP_parser_v_3.1.zip ,
subset of C/C++ grammar by Peter Morling
http://www.imada.sdu.dk/~morling/walker.g .
And then tried write my own grammar.
All that stuff works, but program crashes on lexer destruction( with
both grammars), exactly when deletes CharScanner::literals. What should i do?



-- 
                      mailto:a_day@list.ru

From aheller at gmx.at  Thu May 25 10:55:47 2006
From: aheller at gmx.at (Arnulf Heller)
Date: Thu May 25 10:56:02 2006
Subject: [antlr-interest] multiple text outputs of ANTLR3+ST in a single pass
Message-ID: <7.0.1.0.0.20060525193508.03eebd68@gmx.at>

We are using ANTLR3+ST to convert textual descriptions of a simple 
protocol into C++ code which generates/parses messages of this protocol.

Currently, we use the grammar along with the protocol description 
file four times with alternating string template files in order to 
produce server/client side header/implementation files (which works great BTW).

What we would like to change is to pass the protocol file through 
ANTLR and StringTemplate only once and produce all four C++ files in 
a single pass. From a post a while ago I know that there are no means 
to do that now with ANTLR+ST, but maybe I have a trivial solution for 
that scenario.

The only missing link is access to sub-templates within a 
StringTemplate. I have sketched that in the commented lines in 
"Test.java" below.

Would that be a viable solution? Or is there another trivial solution 
that I am not aware of?

Thx,
Arnulf

---- Cpp.stg (removed some WS here) ------------

group Cpp;

program(classname) ::= <<
<definition(...)>
<implementation(...)>
 >>

definition(classname) ::= << <classname:classdef()> >>

classdef(classname) ::= <<
class <classname>
{ public: <classname>(); };
 >>

implementation(classname) ::= <<
<classname:include()>
<classname:classdecl()>
 >>

include(classname) ::= << #include "<classname>.h" >>

classdecl(classname) ::= << <classname>::<classname> {} >>

--- Test.java ---
import java.io.*;
import org.antlr.stringtemplate.*;
import org.antlr.stringtemplate.language.*;

public class Test {
     public static StringTemplateGroup templates;

     public static void main(String[] args) throws Exception {
		templates = new StringTemplateGroup(new FileReader("Cpp.stg"), 
AngleBracketTemplateLexer.class);
		StringTemplate stProgram = templates.getInstanceOf("program");
		stProgram.setAttribute("classname","MyFirstClass");
		stProgram.setAttribute("classname","MySecondClass");
		System.out.println(stProgram.toString()); // produces header and 
implementation in a single string
//		StringTemplate stDef = st.getTemplate("definition"); // get definition part
//		System.out.println(stDef.toString());
//		StringTemplate stImpl = st.getTemplate("implementation"); // get 
implementation part
//		System.out.println(stImpl.toString());
     }
}

--- output (removed some WS here) ---
class MyFirstClass { public: MyFirstClass(); };
class MySecondClass { public: MySecondClass(); };

#include "MyFirstClass.h"
#include "MySecondClass.h"

MyFirstClass::MyFirstClass {}
MySecondClass::MySecondClass {}

From wiggjd at lsbu.ac.uk  Thu May 25 12:52:49 2006
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Thu May 25 12:51:17 2006
Subject: [antlr-interest] Complaint on antlr-interest list Vol 18 Issue 40 -
	"Antlr owns me"
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A01085A74@CSD-EXBE-VS2.lsbu.ac.uk>

Hello a_day,
 
Since you mention my name, I might be able to help.
 
When have you written before?
 
You haven't given us very much to work on. What's the problem?
 
Perhaps we should discuss this off list.
 
David Wigg
wiggjd@lsbu.ac.uk <mailto:wiggjd@lsbu.ac.uk> 
 
Message: 7
Date: Thu, 25 May 2006 20:39:37 +0400
From: ?????? ??????? <a_day@list.ru>
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
To: antlr-interest@antlr.org
Message-ID: <165776895.20060525203937@list.ru>
Content-Type: text/plain; charset=us-ascii

My first letter was ignored, i'm tried some voodoo spells, but it
didn't
work... now my power get down and deadline turns into noose around
neck :[]
At first please look here
http://www.jguru.com/forums/view.jsp?EID=1296048
I've downloaded ANTLR 2.7.5 VisualStudio 7.1 solution (
http://www.antlr.org/share/1114161110276/vc71.zip ),
antlr-2.7.5.tar.gz http://www.antlr.org/download/antlr-2.7.5.tar.gz ,
Dwid Wigg's C++ grammar
http://www.antlr.org/grammar/1132152279791/CPP_parser_v_3.1.zip ,
subset of C/C++ grammar by Peter Morling
http://www.imada.sdu.dk/~morling/walker.g .
And then tried write my own grammar.
All that stuff works, but program crashes on lexer destruction( with
both grammars), exactly when deletes CharScanner::literals. What
should i do?



--
                      mailto:a_day@list.ru <mailto:a_day@list.ru> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060525/80528e3b/attachment.html
From ewbank at gmail.com  Thu May 25 13:13:46 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu May 25 13:13:49 2006
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
In-Reply-To: <165776895.20060525203937@list.ru>
References: <165776895.20060525203937@list.ru>
Message-ID: <dd3a065f0605251313u10c91d0fg5c76685d865abf4c@mail.gmail.com>

Hmm.  The first question when C++ crashes is:
(1) Have you created, and used, a factory for the AST nodes?

I don't use an ANTLR lexer (I use flex), so can't help much beyond the
basics...

Can you trace into the destructor for CharScanner::literals?

Hope this helps a bit.  You are not alone, although I (for one) have
not been as fast at responding as I have been - deadlines of my own,
which seem imune to voodoo.

On 5/25/06, ?????? ??????? <a_day@list.ru> wrote:
>
> My first letter was ignored, i'm tried some voodoo spells, but it didn't
> work... now my power get down and deadline turns into noose around
> neck :[]
> At first please look here http://www.jguru.com/forums/view.jsp?EID=1296048
> I've downloaded ANTLR 2.7.5 VisualStudio 7.1 solution (
> http://www.antlr.org/share/1114161110276/vc71.zip ),
> antlr-2.7.5.tar.gz http://www.antlr.org/download/antlr-2.7.5.tar.gz ,
> Dwid Wigg's C++ grammar
> http://www.antlr.org/grammar/1132152279791/CPP_parser_v_3.1.zip ,
> subset of C/C++ grammar by Peter Morling
> http://www.imada.sdu.dk/~morling/walker.g .
> And then tried write my own grammar.
> All that stuff works, but program crashes on lexer destruction( with
> both grammars), exactly when deletes CharScanner::literals. What should i
> do?
>
>
>
> --
>                       mailto:a_day@list.ru
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060525/26f1ee48/attachment.html
From a_day at list.ru  Thu May 25 13:39:53 2006
From: a_day at list.ru (=?koi8-r?B?4NvBy8/XIOTNydTSyco=?=)
Date: Thu May 25 13:40:16 2006
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
In-Reply-To: <dd3a065f0605251313m474869bfr2e0739e62c10a2b3@mail.gmail.com>
References: <165776895.20060525203937@list.ru>
	<dd3a065f0605251313m474869bfr2e0739e62c10a2b3@mail.gmail.com>
Message-ID: <1365771186.20060526003953@list.ru>

Thx for answer.
> (1) Have you created, and used, a factory for the AST nodes?
I'm didn't use AST (buildAST=false;).
> I don't use an ANTLR lexer (I use flex), so can't help much beyond the basics...

> Can you trace into the destructor for CharScanner::literals?
CharScanner::literals is STL map
class(map<ANTLR_USE_NAMESPACE(std)string,int,CharScannerLiteralsLess> literals;)
I'm think better try flex than debug 274K ANTLR source code.







-- 
                        mailto:a_day@list.ru

From rjseagraves at gmail.com  Thu May 25 13:46:41 2006
From: rjseagraves at gmail.com (Rich)
Date: Thu May 25 13:46:44 2006
Subject: [antlr-interest] Unexpected ANTLR action
Message-ID: <f67288960605251346m55453399lce577712a3a84eb5@mail.gmail.com>

According to the "ANTLR Tree Construction" chapter of the antlr manual
"If no suffixes at all are specified in a grammar, then a Parser will
construct a linked-list of the tokens."  However, I'm not getting the
behavior I was expecting.  Consider the following grammar (grammar
simplified to protect the irrelevant):

class SimpleParser extends Parser;

options {
	buildAST = true;	
}

expr
	: id_expr ((DOT)? id_expr)*
	;

id_expr
	: ID
	;

When I test this parser with input "a b c d", I was expecting to get
the list (a b c d).  Instead, I just get "a".  What gives?  Thanks
alot everybody.

-Rich
From parrt at cs.usfca.edu  Thu May 25 14:27:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu May 25 14:27:24 2006
Subject: [antlr-interest] Unexpected ANTLR action
In-Reply-To: <f67288960605251346m55453399lce577712a3a84eb5@mail.gmail.com>
References: <f67288960605251346m55453399lce577712a3a84eb5@mail.gmail.com>
Message-ID: <2005E1A9-4154-4327-9AC7-56E5612C6F37@cs.usfca.edu>


On May 25, 2006, at 1:46 PM, Rich wrote:
> When I test this parser with input "a b c d", I was expecting to get
> the list (a b c d).  Instead, I just get "a".  What gives?  Thanks
> alot everybody.
>

try toStringList().
Ter

From sohail at taggedtype.net  Thu May 25 20:12:48 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu May 25 20:12:59 2006
Subject: [antlr-interest] Voodoo [was Antlr owns me. I'm going to kill
	myself!]
In-Reply-To: <dd3a065f0605251313u10c91d0fg5c76685d865abf4c@mail.gmail.com>
References: <165776895.20060525203937@list.ru>
	<dd3a065f0605251313u10c91d0fg5c76685d865abf4c@mail.gmail.com>
Message-ID: <1148613169.14870.2.camel@localhost.localdomain>

If anyone does figure out how to get deadlines extended using positive
voodoo, please let me know.

Thanks.

On Thu, 2006-05-25 at 16:13 -0400, Bryan Ewbank wrote:
> Hmm.  The first question when C++ crashes is:
> (1) Have you created, and used, a factory for the AST nodes?
> 
> I don't use an ANTLR lexer (I use flex), so can't help much beyond the
> basics...
> 
> Can you trace into the destructor for CharScanner::literals? 
> 
> Hope this helps a bit.  You are not alone, although I (for one) have
> not been as fast at responding as I have been - deadlines of my own,
> which seem imune to voodoo.


From OJAY78 at gmx.de  Fri May 26 00:15:57 2006
From: OJAY78 at gmx.de (OJAY78@gmx.de)
Date: Fri May 26 00:16:01 2006
Subject: [antlr-interest] tree construction problem
Message-ID: <20060526071557.233970@gmx.net>

COuld someone please help me?

Ups.. I forget the subject.

Hi @ all,


I am trying desperately to write my grammar with antlr and hope anyone can help me a bit. 
Because I am new in this topic I spent a few days with reading about parsing generators. I read a lot about automata for the recognitions of the tokens and contextfree grammars for the parsing. As I understand that a bit better I startet to read a few ANTLR tutorials and found one with a grammar for a calculator. I extended this example a bit but now I get stuck. What I have is a grammar for a calculator and relational Operators for Integers Example
((4+4)>(2+3*1)) -->1(true)

This was a big step for me to get to that. What I want is to generate a language which can handle expressions like this.

((myfunction+myfunction1)>5) AND (myBoolFunction OR myBoolFunction)

Myfunction could be any function that I want to implement. 

What I have done so far is to write a grammar and a lexxer. The grammar uses the buildAST=true option so that I build my parsetree manualy, at least I understand this so. Finally I created a treewalker for this tree.

Ok here is the code of the calculator that works

class ExpressionParser extends Parser;
options { buildAST=true; }
mathexpr 	: LPAREN^ sumExpr RPAREN! ;
sumExpr  	: prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr 	: powExpr ((MUL^|DIV^|MOD^) powExpr)* ;
powExpr  	: relationalExpression (POW^ relationalExpression)? ;
relationalExpression	  : atom ((EQUALS^|GT^|LT^) atom)*;
atom     : INT | mathexpr ;  



class ExpressionLexer extends Lexer;

PLUS  	: '+' ;
MINUS 	: '-' ;
MUL   	: '*' ;
DIV   	: '/' ;
MOD   	: '%' ;
POW   	: '^' ;
SEMI  	: ';' ;
protected DIGIT : '0'..'9' ;
INT   	: (DIGIT)+ ;
RPAREN	: ')';
LPAREN	: '(';
EQUALS	:'=';
LT		:'<';
GT		:'>';

{import java.lang.Math;
}
class ExpressionTreeWalker extends TreeParser;
options {

}
mathexpr returns [double r]
  { double a,b; r=0; } 


  : #(LPAREN a=mathexpr)	 	{ r=a;   }
  | #(PLUS   a=mathexpr b=mathexpr)  	{ r=a+b; }
  | #(MINUS  a=mathexpr b=mathexpr)  	{ r=a-b; }
  | #(MUL    a=mathexpr b=mathexpr)  	{ r=a*b; }
  | #(DIV    a=mathexpr b=mathexpr)  	{ r=a/b; }
  | #(MOD    a=mathexpr b=mathexpr)  	{ r=a%b; }
  | #(POW    a=mathexpr b=mathexpr)  	{ r=Math.pow(a,b); }
  | #(EQUALS a=mathexpr b=mathexpr) 	{ if (a==b) r=1; else r=0;  	}
  | #(LT     a=mathexpr b=mathexpr)	{ if (a<b)  r=1; else r=0; } 
  | #(GT     a=mathexpr b=mathexpr)	{ if (a>b)  r=1; else r=0; }
  | i:INT 		{ r=(double)Integer.parseInt(i.getText()); };


Now I want to extend this grammar with that

expression	:term (OR^ term | XOR^ term)*;
term		:function (AND^ function)*;
function	:boolFunction | mathexpr;
boolFunction:MYFUNCTIONS | mathexpr;

but I do not really understand how I have to build the tree. Can anyone help how to get that work together?

I am thankful for any advise

Best Regards 
Oliver
-- 


Bis zu 70% Ihrer Onlinekosten sparen: GMX SmartSurfer!
      Kostenlos downloaden: http://www.gmx.net/de/go/smartsurfer
    
From OJAY78 at gmx.de  Fri May 26 00:16:53 2006
From: OJAY78 at gmx.de (OJAY78@gmx.de)
Date: Fri May 26 00:16:59 2006
Subject: [antlr-interest] tree construction problem 
Message-ID: <20060526071653.233960@gmx.net>

Could someone please help me!

Hi @ all,


I am trying desperately to write my grammar with antlr and hope anyone can help me a bit. 
Because I am new in this topic I spent a few days with reading about parsing generators. I read a lot about automata for the recognitions of the tokens and contextfree grammars for the parsing. As I understand that a bit better I startet to read a few ANTLR tutorials and found one with a grammar for a calculator. I extended this example a bit but now I get stuck. What I have is a grammar for a calculator and relational Operators for Integers Example
((4+4)>(2+3*1)) -->1(true)

This was a big step for me to get to that. What I want is to generate a language which can handle expressions like this.

((myfunction+myfunction1)>5) AND (myBoolFunction OR myBoolFunction)

Myfunction could be any function that I want to implement. 

What I have done so far is to write a grammar and a lexxer. The grammar uses the buildAST=true option so that I build my parsetree manualy, at least I understand this so. Finally I created a treewalker for this tree.

Ok here is the code of the calculator that works

class ExpressionParser extends Parser;
options { buildAST=true; }
mathexpr 	: LPAREN^ sumExpr RPAREN! ;
sumExpr  	: prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr 	: powExpr ((MUL^|DIV^|MOD^) powExpr)* ;
powExpr  	: relationalExpression (POW^ relationalExpression)? ;
relationalExpression	  : atom ((EQUALS^|GT^|LT^) atom)*;
atom     : INT | mathexpr ;  



class ExpressionLexer extends Lexer;

PLUS  	: '+' ;
MINUS 	: '-' ;
MUL   	: '*' ;
DIV   	: '/' ;
MOD   	: '%' ;
POW   	: '^' ;
SEMI  	: ';' ;
protected DIGIT : '0'..'9' ;
INT   	: (DIGIT)+ ;
RPAREN	: ')';
LPAREN	: '(';
EQUALS	:'=';
LT		:'<';
GT		:'>';

{import java.lang.Math;
}
class ExpressionTreeWalker extends TreeParser;
options {

}
mathexpr returns [double r]
  { double a,b; r=0; } 


  : #(LPAREN a=mathexpr)	 	{ r=a;   }
  | #(PLUS   a=mathexpr b=mathexpr)  	{ r=a+b; }
  | #(MINUS  a=mathexpr b=mathexpr)  	{ r=a-b; }
  | #(MUL    a=mathexpr b=mathexpr)  	{ r=a*b; }
  | #(DIV    a=mathexpr b=mathexpr)  	{ r=a/b; }
  | #(MOD    a=mathexpr b=mathexpr)  	{ r=a%b; }
  | #(POW    a=mathexpr b=mathexpr)  	{ r=Math.pow(a,b); }
  | #(EQUALS a=mathexpr b=mathexpr) 	{ if (a==b) r=1; else r=0;  	}
  | #(LT     a=mathexpr b=mathexpr)	{ if (a<b)  r=1; else r=0; } 
  | #(GT     a=mathexpr b=mathexpr)	{ if (a>b)  r=1; else r=0; }
  | i:INT 		{ r=(double)Integer.parseInt(i.getText()); };


Now I want to extend this grammar with that

expression	:term (OR^ term | XOR^ term)*;
term		:function (AND^ function)*;
function	:boolFunction | mathexpr;
boolFunction:MYFUNCTIONS | mathexpr;

but I do not really understand how I have to build the tree. Can anyone help how to get that work together?

I am thankful for any advise

Best Regards 
Oliver
-- 


Bis zu 70% Ihrer Onlinekosten sparen: GMX SmartSurfer!
      Kostenlos downloaden: http://www.gmx.net/de/go/smartsurfer
    
From ric.klaren at gmail.com  Fri May 26 06:20:41 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri May 26 06:20:48 2006
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
In-Reply-To: <165776895.20060525203937@list.ru>
References: <165776895.20060525203937@list.ru>
Message-ID: <bc607a4e0605260620j8013622h22a8f89c3f41bee2@mail.gmail.com>

Hi,

On 5/25/06, ?????? ??????? <a_day@list.ru> wrote:
> My first letter was ignored, i'm tried some voodoo spells, but it didn't
> work... now my power get down and deadline turns into noose around
> neck :[]
> At first please look here http://www.jguru.com/forums/view.jsp?EID=1296048
> I've downloaded ANTLR 2.7.5 VisualStudio 7.1 solution (
> http://www.antlr.org/share/1114161110276/vc71.zip ),
> antlr-2.7.5.tar.gz http://www.antlr.org/download/antlr-2.7.5.tar.gz ,
> Dwid Wigg's C++ grammar
> http://www.antlr.org/grammar/1132152279791/CPP_parser_v_3.1.zip ,
> subset of C/C++ grammar by Peter Morling
> http://www.imada.sdu.dk/~morling/walker.g .
> And then tried write my own grammar.
> All that stuff works, but program crashes on lexer destruction( with
> both grammars), exactly when deletes CharScanner::literals. What should i do?

- How do you initialize your lexer/parser ?
- Did you try a minimal test program that creates a minimal lexer only
recognize tokens and spaces or something similarly simple, Use this
lexer and end the program. Does it crash then?
- You did compile the support libary and program with the same
compiler *and* compiler settings?
- Don't even think of building a DLL unless you got a static built going.

Cheers,

Ric
From sunjigang1965 at yahoo.com.cn  Fri May 26 08:13:04 2006
From: sunjigang1965 at yahoo.com.cn (=?gb2312?q?=CB=EF=BC=CD=B8=D5=20Jigang=20(Robert)=20Sun?=)
Date: Fri May 26 08:13:13 2006
Subject: [antlr-interest] Long puzzuled problem "nondeterminism upon"
Message-ID: <20060526151304.83076.qmail@web15703.mail.cnb.yahoo.com>

Hi,

Warning messaged

par.g:92: warning:nondeterminism upon
par.g:92:     k==1:DERIVES
par.g:92:     between alt 1 and exit branch of block

 generated for grammar:

typeExp
	:
	subTypeExp( DERIVES typeExp)* //line 92, DERIVES stands for "->"
	;
	
subTypeExp
	:
	(LPAREN typeList)=>LPAREN typeList RPAREN DERIVES typeExp //line 97
	|LPAREN typeExp RPAREN
	|typeDenotor
	;
	
typeList
	:
	(typeExp (COMMA typeExp)* )?
	;

typeDenotor
	:
	 ("int" LSQUARE)=> "int" LSQUARE RSQUARE  //int []
	| "int"
	| id:ID {#typeDenotor=#([ID_TYPE,id.getText()], id); typeDenotor_AST.setPos(id_AST.getPos());}
	| "boolean" 
	;

There is no left recursive problem with the grammar. I am suspicious about line 97, but still have
no idea about it.

Thanks.



		
___________________________________________________________ 
—≈ª¢√‚∑—” œ‰-3.5G»›¡ø£¨20M∏Ωº˛ 
http://cn.mail.yahoo.com/
From jbb at acm.org  Fri May 26 09:48:57 2006
From: jbb at acm.org (John B. Brodie)
Date: Fri May 26 09:49:03 2006
Subject: [antlr-interest] Long puzzuled problem "nondeterminism upon"
In-Reply-To: <20060526151304.83076.qmail@web15703.mail.cnb.yahoo.com>
	(sunjigang1965@yahoo.com.cn)
References: <20060526151304.83076.qmail@web15703.mail.cnb.yahoo.com>
Message-ID: <E1FjfUe-0004Zo-00@gecko>

Greetings!

sunjigang1965@yahoo.com.cn asked:
>Warning messaged
>
>par.g:92: warning:nondeterminism upon
>par.g:92:     k==1:DERIVES
>par.g:92:     between alt 1 and exit branch of block
>
> generated for grammar:
>
>typeExp
>	:
>	subTypeExp( DERIVES typeExp)* //line 92, DERIVES stands for "->"
>	;
>	
>subTypeExp
>	:
>	(LPAREN typeList)=>LPAREN typeList RPAREN DERIVES typeExp //line 97
>	|LPAREN typeExp RPAREN
                               \___ i assume this is line 98
>	|typeDenotor
>	;
>	
>typeList
>	:
>	(typeExp (COMMA typeExp)* )?
>	;
>
>typeDenotor
>	:
>	 ("int" LSQUARE)=> "int" LSQUARE RSQUARE  //int []
>	| "int"
>	| id:ID {#typeDenotor=#([ID_TYPE,id.getText()], id); typeDenotor_AST.setPos(id_AST.getPos());}
>	| "boolean" 
>	;
>
>There is no left recursive problem with the grammar. I am suspicious
>about line 97, but still have no idea about it.


Consider this sequence of tokens:

                  LPAREN "int" RPAREN DERIVES "int"

which may be semantic nonsense in your language but seems to be
syntactically permissible.

Please observe that we have two possible derivations of this sequence:

typeExp ==>
   subTypeExp <empty> ==>
      LPAREN typeList RPAREN DERIVES typeExp <empty> ==>
         LPAREN typeExp <empty> RPAREN DERIVES typeExp <empty> ==>
            LPAREN "int" <empty> RPAREN DERIVES typeExp <empty> ==>
               LPAREN "int" <empty> RPAREN DERIVES "int" <empty>

or we can derive it as:

typeExp ==>
   subTypeExp DERIVES typeExp ==>
      LPAREN typeExp RPAREN DERIVES typeExp ==>
         LPAREN "int" RPAREN DERIVES typeExp ==>
            LPAREN "int" RPAREN DERIVES "int"

thus you have a non-determinism. if we parse the initial subTypeExp using
line 97 then there is no "DERIVES" phrase in the typeExp (the exit branch
should be taken). or if we parse the initial subTypeExp using line 98 then
there is one "DERIVES" phrase in the typeExp (alt 1 should be taken).

Antlr can not determine which one is intended.

Hope this helps
   -jbb
From gudnabrsam at yahoo.com  Fri May 26 09:59:40 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri May 26 09:59:43 2006
Subject: [antlr-interest] ANTLR 3 Tool behavior
Message-ID: <20060526165940.22780.qmail@web30912.mail.mud.yahoo.com>

This may be best related to the Ant task thread, but I
started a new one.  I wanted to throw out some
thoughts regarding the way the Tool currently works,
and see if anything came of it... it seems that ANTLR
is basically designed such that your grammar files are
in your source tree.  Obviously there are the output
directory switches, but there is still weirdness if,
e.g. you have two grammar files, Parser/Lexer and
TreeParser, in a directory separate from your source
tree, and want the source for all three generated
elsewhere.  My perspective here may very well be naive
so any thoughts anyone has on this subject are
appreciated.

TIA,
Matt

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From omanuke at md.point.ne.jp  Fri May 26 10:53:23 2006
From: omanuke at md.point.ne.jp (omanuke@md.point.ne.jp)
Date: Fri May 26 10:53:28 2006
Subject: [antlr-interest] problem on doing GettingStarted
Message-ID: <20060527023431.F64A.OMANUKE@md.point.ne.jp>

hi i'm new to ANTLR.
first i've to appologize my limited english.

now I'm trying to do "Getting Started with ANTLR",
but at step 4,Compile the output of ANTLR from the command line with: 
javac *.java ,it give me 100 errors.
It say it can't find sysmbol like TokenBuffer.
How should I do?I'm beginner to Java too.

I need your help.
-- 
 <omanuke@md.point.ne.jp>

From parrt at cs.usfca.edu  Fri May 26 11:29:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri May 26 11:29:19 2006
Subject: [antlr-interest] Re: [antlr-dev] ANTLR 3 Tool behavior
In-Reply-To: <20060526165940.22780.qmail@web30912.mail.mud.yahoo.com>
References: <20060526165940.22780.qmail@web30912.mail.mud.yahoo.com>
Message-ID: <0B8EBB3B-59D9-42D5-8750-87390CE7195F@cs.usfca.edu>


On May 26, 2006, at 9:59 AM, Matt Benson wrote:

> This may be best related to the Ant task thread, but I
> started a new one.  I wanted to throw out some
> thoughts regarding the way the Tool currently works,
> and see if anything came of it... it seems that ANTLR
> is basically designed such that your grammar files are
> in your source tree.  Obviously there are the output
> directory switches, but there is still weirdness if,
> e.g. you have two grammar files, Parser/Lexer and
> TreeParser, in a directory separate from your source
> tree, and want the source for all three generated
> elsewhere.  My perspective here may very well be naive
> so any thoughts anyone has on this subject are
> appreciated.

Well, you can process one by one pulling from other dir or writing to  
other dir.  You can also do *.g from command line etc...  Should be  
able to handle things..
Ter

From gudnabrsam at yahoo.com  Fri May 26 11:59:22 2006
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri May 26 11:59:25 2006
Subject: [antlr-interest] Re: [antlr-dev] ANTLR 3 Tool behavior
In-Reply-To: <0B8EBB3B-59D9-42D5-8750-87390CE7195F@cs.usfca.edu>
Message-ID: <20060526185922.74434.qmail@web30901.mail.mud.yahoo.com>



--- Terence Parr <parrt@cs.usfca.edu> wrote:

> 
> On May 26, 2006, at 9:59 AM, Matt Benson wrote:
> 
> > This may be best related to the Ant task thread,
> but I
> > started a new one.  I wanted to throw out some
> > thoughts regarding the way the Tool currently
> works,
> > and see if anything came of it... it seems that
> ANTLR
> > is basically designed such that your grammar files
> are
> > in your source tree.  Obviously there are the
> output
> > directory switches, but there is still weirdness
> if,
> > e.g. you have two grammar files, Parser/Lexer and
> > TreeParser, in a directory separate from your
> source
> > tree, and want the source for all three generated
> > elsewhere.  My perspective here may very well be
> naive
> > so any thoughts anyone has on this subject are
> > appreciated.
> 
> Well, you can process one by one pulling from other
> dir or writing to  
> other dir.  You can also do *.g from command line

*.g?  In v3?  This doesn't work for me in 2.x; should
it?

Beyond that, for the scenario I gave above I would
typically make my desired output directory my current
directory and process the files one-by-one.  But since
Java doesn't have a CD (actually you can modify
"user.dir" but that's not such a good idea) it makes
it hard to do this in a single VM.

-Matt


> etc...  Should be  
> able to handle things..
> Ter
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From parrt at cs.usfca.edu  Fri May 26 13:21:55 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri May 26 13:22:01 2006
Subject: [antlr-interest] skipping tokens
Message-ID: <3F4E3E81-563D-45C1-B10D-587B7026934E@cs.usfca.edu>

So, should lexer rules do like v2 and set "token = Token.SKIP;" in an  
action so that a token is ignored and another is attempted?  What  
about a method call "skip();" or something?  The method call is more  
flexible, but what if some targets can only skip by setting a local  
var or something in the lexer rule?  The skip() method would not be  
able to alter them.

Perhaps we use skip() as the default action and languages that must  
set locals can force v2 style assignments.  Thoughts?

Ter
From a_day at list.ru  Fri May 26 10:40:08 2006
From: a_day at list.ru (=?koi8-r?B?4NvBy8/XIOTNydTSyco=?=)
Date: Fri May 26 14:23:48 2006
Subject: [antlr-interest] Antlr owns me. I'm going to kill myself!
In-Reply-To: <bc607a4e0605260620j8013622h22a8f89c3f41bee2@mail.gmail.com>
References: <165776895.20060525203937@list.ru>
	<bc607a4e0605260620j8013622h22a8f89c3f41bee2@mail.gmail.com>
Message-ID: <16710293868.20060526214008@list.ru>

Thx for help, trouble fixed. Dunno that caused because i've
replased "ANTLR_USE_NAMESPACE(antlr)RefToken" with "string&" in my
semantic functions or used SOME_TOKEN->getText instead
"SOME_TOKEN.get()->getText"
or used static ANTLR build or got some XP in voodoo magic...
             mailto:a_day@list.ru

From sdb at geekworld.co.uk  Fri May 26 14:33:23 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Fri May 26 14:33:27 2006
Subject: [antlr-interest] skipping tokens
In-Reply-To: <3F4E3E81-563D-45C1-B10D-587B7026934E@cs.usfca.edu>
References: <3F4E3E81-563D-45C1-B10D-587B7026934E@cs.usfca.edu>
Message-ID: <44777423.4060405@geekworld.co.uk>

Terence Parr wrote:
> So, should lexer rules do like v2 and set "token = Token.SKIP;" in an 
> action so that a token is ignored and another is attempted?  What  about
> a method call "skip();" or something?  The method call is more 
> flexible, but what if some targets can only skip by setting a local  var
> or something in the lexer rule?  The skip() method would not be  able to
> alter them.
> 
> Perhaps we use skip() as the default action and languages that must  set
> locals can force v2 style assignments.  Thoughts?

I don't know much about the implementation, certainly virtually nothing
about v3. However, it strikes me that, with all the funky template-based
generation and magic, you ought to be able to have $skip(); or similar
that expands based on the language being generated...

Sam

From sohail at taggedtype.net  Fri May 26 20:53:01 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Fri May 26 20:53:11 2006
Subject: [antlr-interest] antlr3 C++ target
Message-ID: <1148701981.14175.1.camel@localhost.localdomain>

Anyone have a location where I can get the C++ target? I've read its
pretty far along so I'd like to start using it and provide feedback if
the author wants it.

Thanks!

Sohail

From sohail at taggedtype.net  Fri May 26 21:13:09 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Fri May 26 21:13:16 2006
Subject: [antlr-interest] antlr3 C++ target
In-Reply-To: <1148701981.14175.1.camel@localhost.localdomain>
References: <1148701981.14175.1.camel@localhost.localdomain>
Message-ID: <1148703189.14422.1.camel@localhost.localdomain>

On Fri, 2006-05-26 at 20:53 -0700, Sohail Somani wrote:
> Anyone have a location where I can get the C++ target? I've read its
> pretty far along so I'd like to start using it and provide feedback if
> the author wants it.

Ok, never mind I've noticed its part of ea9 in templates. However I
think the directory name needs to be either CPP or CPP.stg should be
renamed to be cpp.stg. Antlr3 appears to require language/language.stg.

If I do that, then I get something like:

.oO(pundai@dev ~/workspace/grml) CLASSPATH=antlr3/antlr-3.0ea9.jar
antlr3 grml.g -o out
ANTLR Parser Generator   Early Access Version 3.0ea9 (May 20, 2006)
1989-2006
internal error: grml.g : java.util.NoSuchElementException: no such
attribute: actions in template context [outputFile]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:735)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:596)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:281)
org.antlr.Tool.processGrammar(Tool.java:297)
org.antlr.Tool.process(Tool.java:234)
org.antlr.Tool.main(Tool.java:72)

So I guess its not as far along as I thought or I'm doing it wrong...

Sohail

From mail at martin-probst.com  Fri May 26 22:19:01 2006
From: mail at martin-probst.com (Martin Probst)
Date: Fri May 26 22:19:08 2006
Subject: [antlr-interest] A proposal for keywords
In-Reply-To: <4474E57E.2080209@shmuelhome.mine.nu>
References: <4474371D.2040609@shmuelhome.mine.nu>
	<001901c67f6e$31a33ef0$6402a8c0@Fafnir>
	<14431.14632.130.76.32.145.1148510238.squirrel@webmailer.hosteurope.de>
	<4474E57E.2080209@shmuelhome.mine.nu>
Message-ID: <2EA8A29D-FBF5-4997-B120-135DA49AAF5E@martin-probst.com>

> Are you saying that you recommend creating my own AST class rather  
> than use "!" in a lexer rule? Do you believe that the following  
> rule is bad form?
>
> STRING: '"'! ( ESCAPE | ~('"'|'\\') )* '"'! ;

I'm not actually using an ANTLR generated lexer, but mine has a  
custom token type deriving antlr.CommonToken, and that one preserves  
the original text, e.g. input.substring(startoffset, endoffset), but  
provides a "parsed text". So I'm all for the "!" operator, as that is  
usually much easier than doing it later, but I think the originally  
parsed text should be preserved - otherwise you get error messages  
where the user thinks "huh, I didn't type that".

Somewhat related: I'm not entirely decided on what is better for the  
AST types. You have three options to carry along payload, one is a  
rather complicated class with many fields for the different payloads,  
e.g.
AST {
   AType aPayload;
   BType bPayload;
   ...
}
where always only one (or at least not all) fields are set to  
something, depending on the type of the AST node. Other possibility is
AST {
   Object payload;
}
where the payload can be of different types, again depending on the  
node type. Last option is
ATypeAST {
   AType payload;
}
BTypeAST {
   BType payload;
}
using the heterogenous AST feature.

I currently tend to think the second option is probably best. In all  
of the cases you actually have to know the type of the AST node from  
the node type, so there's hardly any difference. First one creates  
really complicated classes without adding much convenience, except  
for saving one cast. Third option requires casting and creating  
several different AST classes. The second option doesn't require many  
AST classes and brings just as much type safety as the other ones  
(none), but doesn't take any of the flexibility. With Java 1.5 you  
might also have:
AST<X extends Object> {
   X payload;
}
though that doesn't change much.

Has anyone got an opinion on that? It might help defining the ANTLR API.

Martin
From mail at martin-probst.com  Fri May 26 22:23:24 2006
From: mail at martin-probst.com (Martin Probst)
Date: Fri May 26 22:23:31 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <1148529298.11289.7.camel@localhost.localdomain>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
	<B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
	<1148529298.11289.7.camel@localhost.localdomain>
Message-ID: <3682CECE-2DBF-4A4E-8550-7EEFE113E680@martin-probst.com>

Hi,

> public class ANTLRInputStream extends ANTLRStringStream {
>
> 	public ANTLRInputStream(InputStream stream) throws IOException
> 	{
> 		load(stream);
> 	}
>
> 	public void load(InputStream istream) throws IOException
> 	{
> 		BufferedReader br = new BufferedReader(new
> 			InputStreamReader(istream));
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^

This is the place that is going to bite you some day - you need to  
allow specifying a charset somehow, always taking the system default  
is maybe a bit too optimistic.

> 		CharArrayWriter wr = new CharArrayWriter();
> 		BufferedWriter bw = new BufferedWriter(wr);

I think you don't need to have a buffered writer around an im memory  
char array, but then again, I'm not that great in the complex  
scientific topic that is reading a simple file in Java ;-)

From sohail at taggedtype.net  Fri May 26 22:43:59 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Fri May 26 22:44:07 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <3682CECE-2DBF-4A4E-8550-7EEFE113E680@martin-probst.com>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
	<B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
	<1148529298.11289.7.camel@localhost.localdomain>
	<3682CECE-2DBF-4A4E-8550-7EEFE113E680@martin-probst.com>
Message-ID: <1148708640.16831.9.camel@localhost.localdomain>

On Sat, 2006-05-27 at 07:23 +0200, Martin Probst wrote:
> Hi,
> 
> > public class ANTLRInputStream extends ANTLRStringStream {
> >
> > 	public ANTLRInputStream(InputStream stream) throws IOException
> > 	{
> > 		load(stream);
> > 	}
> >
> > 	public void load(InputStream istream) throws IOException
> > 	{
> > 		BufferedReader br = new BufferedReader(new
> > 			InputStreamReader(istream));
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 
> This is the place that is going to bite you some day - you need to  
> allow specifying a charset somehow, always taking the system default  
> is maybe a bit too optimistic.

Overloaded constructor?

> 
> > 		CharArrayWriter wr = new CharArrayWriter();
> > 		BufferedWriter bw = new BufferedWriter(wr);
> 
> I think you don't need to have a buffered writer around an im memory  
> char array, but then again, I'm not that great in the complex  
> scientific topic that is reading a simple file in Java ;-)

The only other way I know of would require reallocating a char array in
a loop or converting a Char (using Vector) to a char (as you don't know
the length of the file). Of course, an understanding of the complex
scientific topic that is reading a simple file in Java still escapes
me :) 

Maybe this:

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.CharArrayWriter;
import java.io.BufferedWriter;
import org.antlr.runtime.ANTLRStringStream;

public class ANTLRInputStream extends ANTLRStringStream {

        // Overloaded constructor to allow user to specify a reader 
        // with a given charset
        public ANTLRInputStream(InputStreamReader reader) throws
IOException
        {
                load(reader);
        }

        public ANTLRInputStream(InputStream stream) throws IOException
        {
                load(new InputStreamReader(stream));
        }

        public void load(InputStreamReader reader) throws IOException
        {
                BufferedReader br = new BufferedReader(reader);
                CharArrayWriter wr = new CharArrayWriter();
                BufferedWriter bw = new BufferedWriter(wr);
                String line=null;
                while((line=br.readLine())!=null)
                {
                        bw.write(line);
                        bw.newLine(); // TODO: This may not be what you
want
                }
                bw.close();
                data = wr.toCharArray();
        }
}



From ric.klaren at gmail.com  Sat May 27 05:07:59 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sat May 27 05:08:03 2006
Subject: [antlr-interest] antlr3 C++ target
In-Reply-To: <1148703189.14422.1.camel@localhost.localdomain>
References: <1148701981.14175.1.camel@localhost.localdomain>
	<1148703189.14422.1.camel@localhost.localdomain>
Message-ID: <bc607a4e0605270507l24001f40p9a97126beae92e4b@mail.gmail.com>

Hi,

On 5/27/06, Sohail Somani <sohail@taggedtype.net> wrote:
> On Fri, 2006-05-26 at 20:53 -0700, Sohail Somani wrote:
> > Anyone have a location where I can get the C++ target? I've read its
> > pretty far along so I'd like to start using it and provide feedback if
> > the author wants it.

The C++ templates have been pretty much untouched since december. Got
involved in a pretty bad project (time/and energy draining wise). I
hope to be rid of the project end of june and hope to sync up to the
last changes then and finish the prototype stuff I got for the support
library.

Cheers,

Ric
From mail at martin-probst.com  Sat May 27 06:09:41 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sat May 27 06:09:49 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <1148708640.16831.9.camel@localhost.localdomain>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
	<B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
	<1148529298.11289.7.camel@localhost.localdomain>
	<3682CECE-2DBF-4A4E-8550-7EEFE113E680@martin-probst.com>
	<1148708640.16831.9.camel@localhost.localdomain>
Message-ID: <7710B4FD-3627-4921-BF81-54F97DA621E2@martin-probst.com>

>>> 		CharArrayWriter wr = new CharArrayWriter();
>>> 		BufferedWriter bw = new BufferedWriter(wr);
>>
>> I think you don't need to have a buffered writer around an im memory
>> char array, but then again, I'm not that great in the complex
>> scientific topic that is reading a simple file in Java ;-)
>
> The only other way I know of would require reallocating a char  
> array in
> a loop or converting a Char (using Vector) to a char (as you don't  
> know
> the length of the file). Of course, an understanding of the complex
> scientific topic that is reading a simple file in Java still escapes
> me :)

Well, then I'd guess this is what you want:

InputStreamReader r = ...;
BufferedReader br  = new BufferedReader(r);
char[] buf = new char[4096];
int bytes = 0;
StringBuild sb = new StringBuilder();
while ((bytes = br.read(buf)) != -1) {
   sb.append(buf, 0, bytes);
}
String res = sb.toString(); // or to char array or whatever

Though the file encoding problem stays.

Martin

From sohail at taggedtype.net  Sat May 27 09:06:06 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat May 27 09:06:13 2006
Subject: [antlr-interest] v3 stream input
In-Reply-To: <7710B4FD-3627-4921-BF81-54F97DA621E2@martin-probst.com>
References: <1148343611.13496.3.camel@localhost.localdomain>
	<23C4A6F8-F8E5-4A6C-9CB8-91BE40F2A309@cs.usfca.edu>
	<1148353227.13496.11.camel@localhost.localdomain>
	<A27B6234-61B1-44FB-90FF-63A0FB855A94@cs.usfca.edu>
	<1148437073.5596.13.camel@localhost.localdomain>
	<B83F3DB7-4816-44BD-B71D-A92DDB851F5F@cs.usfca.edu>
	<1148529298.11289.7.camel@localhost.localdomain>
	<3682CECE-2DBF-4A4E-8550-7EEFE113E680@martin-probst.com>
	<1148708640.16831.9.camel@localhost.localdomain>
	<7710B4FD-3627-4921-BF81-54F97DA621E2@martin-probst.com>
Message-ID: <1148745967.5518.2.camel@localhost.localdomain>

On Sat, 2006-05-27 at 15:09 +0200, Martin Probst wrote:
> >>> 		CharArrayWriter wr = new CharArrayWriter();
> >>> 		BufferedWriter bw = new BufferedWriter(wr);
> >>
> >> I think you don't need to have a buffered writer around an im memory
> >> char array, but then again, I'm not that great in the complex
> >> scientific topic that is reading a simple file in Java ;-)
> >
> > The only other way I know of would require reallocating a char  
> > array in
> > a loop or converting a Char (using Vector) to a char (as you don't  
> > know
> > the length of the file). Of course, an understanding of the complex
> > scientific topic that is reading a simple file in Java still escapes
> > me :)
> 
> Well, then I'd guess this is what you want:
> ...

I think this satisfies the charset issue and does the io the way I
wanted to do it in the first place, thanks!

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.CharArrayWriter;
import java.io.BufferedWriter;
import java.lang.StringBuilder;
import org.antlr.runtime.ANTLRStringStream;

public class ANTLRInputStream extends ANTLRStringStream {

	public ANTLRInputStream(InputStreamReader reader) throws IOException
	{
		load(reader);
	}
	
	public ANTLRInputStream(InputStream stream) throws IOException 
	{
		load(new InputStreamReader(stream));
	}

	public void load(InputStreamReader reader) throws IOException 
	{
		BufferedReader br = new BufferedReader(reader);
		StringBuilder sb = new StringBuilder();
		char [] buf = new char[4096];
		int bytes=0;
		while((bytes=br.read(buf))!=-1)
		{
			sb.append(buf,0,bytes);
		}
		br.close();
		data = sb.toString().toCharArray();
	}
}


From parrt at cs.usfca.edu  Sat May 27 11:36:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 11:36:32 2006
Subject: [antlr-interest] v3 lexing time
Message-ID: <702C553C-7028-4298-B5E9-875054A95E53@cs.usfca.edu>

[antlr-interest: on antlr-dev we've been discussing parsing/tree  
building speed for v3 vs v2 on java 1.4.2 source]

Hi, ok, i measured lexer time now and it looks like about 1600ms to  
do lexing regardless of tree construction, which is consistent.   
Parsing+lexing is like 6200ms and building trees+parse+lex is about  
10000ms.  I think this implies that doing 1.4.2 java source costs:

lexing	1600ms
parsing	6200-1600 = 4600ms
tree build 10000 - 6200 = 3800ms

Lexing seems to be about 1600 / 6200 = .258 or 26% of total parse  
time.  Trees are pretty expensive at 3.8s.

Now, here is the interesting piece of data.  v2 is mostly lexer!  The  
lexing time is 6950ms out of 9800ms for lexing/parsing/tree  
building.  That seems amazing to me...perhaps I'm measuring the lexer  
wrong...hard to figure out that v2 crap with all of its convoluted  
input stuff.

Here is how I measure v2 lexing speed:

             JavaRecognizer parser = new JavaRecognizer(lexer);
             parser.setFilename(f);
             ParserSharedInputState inputState = parser.getInputState();
             TokenBuffer tokens = inputState.getInput();
             long start = System.currentTimeMillis();
             Token t = null;
             int i = 1;
             do {
                 t = tokens.LT(i);
                 i++;
             } while ( t.getType()!=Token.EOF_TYPE );
             long stop = System.currentTimeMillis();
             lexerTime += stop-start;

Does that look close enough?

Verrrrry interesting.  Except for the lexer, v2 parsers/tree seem  
oddly very fast.

Ok, I'm going to do the DFA stuff now with arrays not classes and see  
what difference that makes.  I do note that v3 lexing is already 4x  
faster than v2 lexing!  The parser has very heavy DFA prediction  
though...  I need to optimize the LL(1) case.

Ter
From parrt at cs.usfca.edu  Sat May 27 11:56:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 11:56:41 2006
Subject: [antlr-interest] followup to v3 speed
Message-ID: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>

Ha!  I knew I was forgetting something.  v3 does much better error  
recovery, but at the cost of a push/pop on a software stack for each  
method call.  When I comment those out, I get

parsing+lexing		3696 ms
lexing:				1503 ms
parsing+lexing+ast	7514 ms

So that means the parsing time is about 2193ms and tree construction  
is about 3818ms.  The relative percentages are now:

lexing	20%
parsing	30%
ast		50%

So, without this extra push/pop, v3 is already 25% faster than v2 for  
java parsing and tree building combined.  If I can get the tree  
building down further, we'll be even faster.  v2 is 2805ms for parsing 
+ast versus 6011ms in v3.  Gotta get that faster.

Now the big question: do I leave in the good error handling by  
default or is that an option?

Ter
From parrt at cs.usfca.edu  Sat May 27 12:27:42 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 12:27:45 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
Message-ID: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>

Hi, so implemented my own stack and it's way faster.

parse+lex 6261ms	using java.util.Stack
parse+lex 3710ms	using no push/pop at all
parse+lex 3860ms	using my own stack

Given that lexing is like 1500ms, adding good error handling,  
recovery only costs us about 150ms or 4% cpu speed.  I'll leave in,  
but make it to use my stack.  Wow.  My stack costs 150ms vs 2551ms  
for java.util.Stack.  What the hell is it doing?  ick.

Ter

From sohail at taggedtype.net  Sat May 27 12:44:56 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat May 27 12:45:06 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
Message-ID: <1148759096.7621.0.camel@localhost.localdomain>

On Sat, 2006-05-27 at 12:27 -0700, Terence Parr wrote:
> Hi, so implemented my own stack and it's way faster.
> 
> parse+lex 6261ms	using java.util.Stack
> parse+lex 3710ms	using no push/pop at all
> parse+lex 3860ms	using my own stack
> 
> Given that lexing is like 1500ms, adding good error handling,  
> recovery only costs us about 150ms or 4% cpu speed.  I'll leave in,  
> but make it to use my stack.  Wow.  My stack costs 150ms vs 2551ms  
> for java.util.Stack.  What the hell is it doing?  ick.

Aren't java containers thread safe or something? Might be
synchronize(this) or something like that...

From parrt at cs.usfca.edu  Sat May 27 12:51:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 12:51:33 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <1148759096.7621.0.camel@localhost.localdomain>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
Message-ID: <26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>


On May 27, 2006, at 12:44 PM, Sohail Somani wrote:
> Aren't java containers thread safe or something? Might be
> synchronize(this) or something like that...

Good point, though I thought that synchronization had gotten much  
faster these days...
Ter

From dragonoe at mcmaster.ca  Sat May 27 14:31:37 2006
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Sat May 27 14:24:17 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
	<26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
Message-ID: <20060527213137.GA6410@dragon.homelinux.org>

On Sat, May 27, 2006 at 12:51:29PM -0700, Terence Parr wrote:
> 
> On May 27, 2006, at 12:44 PM, Sohail Somani wrote:
> >Aren't java containers thread safe or something? Might be
> >synchronize(this) or something like that...
> 
> Good point, though I thought that synchronization had gotten much  
> faster these days...

I think it might also have to do with fact that java.util.Stack is
based on Vector, which is a resizeable array with default size 10. If
your grammar uses more than 10 elements it's going to do a lot of
resizing.

If you're interested in seeing the possible effect of either
synchronisation or resizing, build a stack class using
java.util.ArrayList which is resizeable but not synchronised. I presume
you build your stack with a fixed size array?

Do you know ahead of time the maximum size of the Stack based on the
grammar?

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   ( dragon.homelinux.org  \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060527/f777dfe6/attachment.bin
From parrt at cs.usfca.edu  Sat May 27 14:29:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 14:29:59 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <20060527213137.GA6410@dragon.homelinux.org>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
	<26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
	<20060527213137.GA6410@dragon.homelinux.org>
Message-ID: <E7B21E39-81FC-4F2E-A07C-3EBBB0C250E3@cs.usfca.edu>


On May 27, 2006, at 2:31 PM, Olivier Dragon wrote:
>> Good point, though I thought that synchronization had gotten much
>> faster these days...
>
> I think it might also have to do with fact that java.util.Stack is
> based on Vector, which is a resizeable array with default size 10. If
> your grammar uses more than 10 elements it's going to do a lot of
> resizing.

Oh, right.  Yeah, I set my stack at 75 min.

> If you're interested in seeing the possible effect of either
> synchronisation or resizing, build a stack class using
> java.util.ArrayList which is resizeable but not synchronised. I  
> presume
> you build your stack with a fixed size array?

Yep, but it grows of course when it sees an overflow.

> Do you know ahead of time the maximum size of the Stack based on the
> grammar?

Nope :)

Ter
From dragonoe at mcmaster.ca  Sat May 27 15:02:33 2006
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Sat May 27 14:55:16 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <E7B21E39-81FC-4F2E-A07C-3EBBB0C250E3@cs.usfca.edu>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
	<26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
	<20060527213137.GA6410@dragon.homelinux.org>
	<E7B21E39-81FC-4F2E-A07C-3EBBB0C250E3@cs.usfca.edu>
Message-ID: <20060527220233.GB6868@dragon.homelinux.org>

On Sat, May 27, 2006 at 02:29:57PM -0700, Terence Parr wrote:
> >I think it might also have to do with fact that java.util.Stack is
> >based on Vector, which is a resizeable array with default size 10. If
> >your grammar uses more than 10 elements it's going to do a lot of
> >resizing.
> 
> Oh, right.  Yeah, I set my stack at 75 min.

Maybe try

stack.ensureCapacity(75)

to make things fair :) (and possibly avoid duplicating code that
actually might work fine) There's no way to set the capacity increment
though, which according to the Vector documentation is initially set to
0. At least for a Stack. If you use Vector you can specify it in the
constructor. Hopefully that won't affect things too much.

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   ( dragon.homelinux.org  \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20060527/e48ee3f5/attachment.bin
From kroepke at dolphin-services.de  Sat May 27 15:14:06 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat May 27 15:14:21 2006
Subject: [antlr-interest] we can do push/pop error stuff for 4%
In-Reply-To: <20060527220233.GB6868@dragon.homelinux.org>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
	<26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
	<20060527213137.GA6410@dragon.homelinux.org>
	<E7B21E39-81FC-4F2E-A07C-3EBBB0C250E3@cs.usfca.edu>
	<20060527220233.GB6868@dragon.homelinux.org>
Message-ID: <89747F9E-220F-44DA-B7FE-43AFC3E400DC@dolphin-services.de>


On 28. May 2006, at 0:02 Uhr, Olivier Dragon wrote:

> to make things fair :) (and possibly avoid duplicating code that
> actually might work fine)

Actually, there are numerous people that suggest the java.util.Stack  
is slow and in most cases not the thing to use.
Unless we need the synchronized behavior of Vector (which Stack is  
just a thin wrapper for) we are better off with a
custom stack.
A simple google search on "java.util.Stack performance" shows that  
ANTLR is not the only project suffering from bad
collection classes...:(

If it actually increases the speed of ANTLR manifold, I'd argue  
against java.util.* ;)

-k
From kroepke at dolphin-services.de  Sat May 27 15:19:14 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat May 27 15:19:19 2006
Subject: [antlr-dev] Re: [antlr-interest] we can do push/pop error stuff
	for 4%
In-Reply-To: <89747F9E-220F-44DA-B7FE-43AFC3E400DC@dolphin-services.de>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<1148759096.7621.0.camel@localhost.localdomain>
	<26CD3659-94EB-43BA-96DC-B702BFDCCF38@cs.usfca.edu>
	<20060527213137.GA6410@dragon.homelinux.org>
	<E7B21E39-81FC-4F2E-A07C-3EBBB0C250E3@cs.usfca.edu>
	<20060527220233.GB6868@dragon.homelinux.org>
	<89747F9E-220F-44DA-B7FE-43AFC3E400DC@dolphin-services.de>
Message-ID: <B866946D-B24E-42D7-B824-2AA5D186B6EB@dolphin-services.de>


On 28. May 2006, at 0:14 Uhr, Kay Roepke wrote:

> manifold

manyfold. this ain't math. ;)
From sohail at taggedtype.net  Sat May 27 17:56:48 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat May 27 17:56:55 2006
Subject: [antlr-interest] followup to v3 speed
In-Reply-To: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>
References: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>
Message-ID: <1148777808.12128.0.camel@localhost.localdomain>

On Sat, 2006-05-27 at 11:56 -0700, Terence Parr wrote:
> Now the big question: do I leave in the good error handling by  
> default or is that an option?

What does "good error handling" mean again?

From parrt at cs.usfca.edu  Sat May 27 18:00:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 18:00:13 2006
Subject: [antlr-interest] followup to v3 speed
In-Reply-To: <1148777808.12128.0.camel@localhost.localdomain>
References: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>
	<1148777808.12128.0.camel@localhost.localdomain>
Message-ID: <4D07A252-CE82-46F8-8865-3A59406B556E@cs.usfca.edu>


On May 27, 2006, at 5:56 PM, Sohail Somani wrote:

> On Sat, 2006-05-27 at 11:56 -0700, Terence Parr wrote:
>> Now the big question: do I leave in the good error handling by
>> default or is that an option?
>
> What does "good error handling" mean again?

Better than v2 ;)  See the blogs, various v3 ppt files.

Ter
From sohail at taggedtype.net  Sat May 27 18:15:51 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat May 27 18:15:58 2006
Subject: [antlr-interest] followup to v3 speed
In-Reply-To: <4D07A252-CE82-46F8-8865-3A59406B556E@cs.usfca.edu>
References: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>
	<1148777808.12128.0.camel@localhost.localdomain>
	<4D07A252-CE82-46F8-8865-3A59406B556E@cs.usfca.edu>
Message-ID: <1148778951.13526.1.camel@localhost.localdomain>

On Sat, 2006-05-27 at 18:00 -0700, Terence Parr wrote:
> On May 27, 2006, at 5:56 PM, Sohail Somani wrote:
> 
> > On Sat, 2006-05-27 at 11:56 -0700, Terence Parr wrote:
> >> Now the big question: do I leave in the good error handling by
> >> default or is that an option?
> >
> > What does "good error handling" mean again?
> 
> Better than v2 ;)  See the blogs, various v3 ppt files.

I assume you're referring to the "exceptions as flow control" :) In any
case, it doesn't really bother me which one it is so long as its fast
because I hardly had to debug the generated code, and it was fine to
debug with v2 :)

Although I'm likely to start going with the C or C++ codegen soon :)

You're the man for asking!

Sohail

From parrt at cs.usfca.edu  Sat May 27 18:17:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat May 27 18:17:48 2006
Subject: [antlr-interest] followup to v3 speed
In-Reply-To: <1148778951.13526.1.camel@localhost.localdomain>
References: <7FB06230-8A9E-4E65-9870-8BC3D62851CD@cs.usfca.edu>
	<1148777808.12128.0.camel@localhost.localdomain>
	<4D07A252-CE82-46F8-8865-3A59406B556E@cs.usfca.edu>
	<1148778951.13526.1.camel@localhost.localdomain>
Message-ID: <28DCA7E2-776E-4D32-BE3B-0A8F5B203F25@cs.usfca.edu>


On May 27, 2006, at 6:15 PM, Sohail Somani wrote:

> On Sat, 2006-05-27 at 18:00 -0700, Terence Parr wrote:
>> On May 27, 2006, at 5:56 PM, Sohail Somani wrote:
>>
>>> On Sat, 2006-05-27 at 11:56 -0700, Terence Parr wrote:
>>>> Now the big question: do I leave in the good error handling by
>>>> default or is that an option?
>>>
>>> What does "good error handling" mean again?
>>
>> Better than v2 ;)  See the blogs, various v3 ppt files.
>
> I assume you're referring to the "exceptions as flow control" :) In  
> any
> case, it doesn't really bother me which one it is so long as its fast
> because I hardly had to debug the generated code, and it was fine to
> debug with v2 :)

I mean that the error reporting and recovery are superior...has  
nothing to do with syn preds. :)

> Although I'm likely to start going with the C or C++ codegen soon :)
>
> You're the man for asking!

:)  Gotta give the customer what they want...

Ter
From prashant.deva at gmail.com  Sun May 28 01:09:38 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun May 28 01:09:46 2006
Subject: [antlr-interest] Re: [antlr-dev] we can do push/pop error stuff for
	4%
In-Reply-To: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
Message-ID: <41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>

>From what i read somewhere the Stack & Vector classes of Java are obsolete.
It is recommended to use ArrayList or LinkedList instead.

On 5/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> Hi, so implemented my own stack and it's way faster.
>
> parse+lex 6261ms        using java.util.Stack
> parse+lex 3710ms        using no push/pop at all
> parse+lex 3860ms        using my own stack
>
> Given that lexing is like 1500ms, adding good error handling,
> recovery only costs us about 150ms or 4% cpu speed.  I'll leave in,
> but make it to use my stack.  Wow.  My stack costs 150ms vs 2551ms
> for java.util.Stack.  What the hell is it doing?  ick.
>
> Ter
>
> _______________________________________________
> antlr-dev mailing list
> antlr-dev@antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
>



-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060528/d18c6ce3/attachment.html
From konqueror at gmx.de  Sun May 28 02:45:02 2006
From: konqueror at gmx.de (Michael Koch)
Date: Sun May 28 02:46:13 2006
Subject: [antlr-interest] antlr 2.7.6 and C#
Message-ID: <20060528094502.GE13059@asterix.konqueror.de>

Hello list,


I know you are all working on the antlr 3.0 release series but I have a
problem with antlr 2.7.6. I'm one of the maintainers of antlr in Debian.
Lately we got a bug report to enable C# support in antlr. Unfortunately
C# support is broken in configure(.in) script in antlr 2.7.6.

configure.in contains

    AC_CONFIG_FILES([lib/csharp/Makefile])
    AC_CONFIG_FILES([lib/csharp/src/Makefile])
    AC_CONFIG_FILES([lib/csharp/ASTFrame/Makefile])

but it should be

    AC_CONFIG_FILES([lib/csharp/Makefile])
    AC_CONFIG_FILES([lib/csharp/antlr.astframe/Makefile])
    AC_CONFIG_FILES([lib/csharp/antlr.runtime/Makefile])


Would it be possible to release a bug fix release for this?


Cheers,
Michael
-- 
Escape the Java Trap with GNU Classpath!
http://www.gnu.org/philosophy/java-trap.html

Join the community at http://planet.classpath.org/
From sdb at geekworld.co.uk  Sun May 28 03:45:59 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Sun May 28 03:46:04 2006
Subject: [antlr-interest] Re: [antlr-dev] we can do push/pop error stuff
	for	4%
In-Reply-To: <41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>
Message-ID: <44797F67.1010608@geekworld.co.uk>

Prashant Deva wrote:
>>From what i read somewhere the Stack & Vector classes of Java are obsolete.
> It is recommended to use ArrayList or LinkedList instead.

Vector is not obsolete, it just isn't universal. But then again, neither
is ArrayList or LinkedList. All of them implement the List interface in
different ways, that lead to them being more appropriate in different
circumstances. For example, ArrayList and Vector implement storage in
the same way, but with different growing strategies. Also, one is
synchronised and the other isn't, so if you're not sharing across
threads using the synchronised one is a bit of a waste. LinkedList, on
the other hand, is implemented very much differently, and is cheaper to
use in many ways but expensive for random access.

Stack, on the other hands, isn't described as being bad anywhere
official that I've seen, but I think Ter has prooved that it is.

> On 5/28/06, *Terence Parr * <parrt@cs.usfca.edu
> <mailto:parrt@cs.usfca.edu>> wrote:
> 
>     Hi, so implemented my own stack and it's way faster.
> 
>     parse+lex 6261ms        using java.util.Stack
>     parse+lex 3710ms        using no push/pop at all
>     parse+lex 3860ms        using my own stack
> 
>     Given that lexing is like 1500ms, adding good error handling,
>     recovery only costs us about 150ms or 4% cpu speed.  I'll leave in,
>     but make it to use my stack.  Wow.  My stack costs 150ms vs 2551ms
>     for java.util.Stack.  What the hell is it doing?  ick.

Ter,

being crap, I imagine. Possibly being synchronised unnecessarily. How
did you implement your own? I've done it for my own use before on top of
LinkedList as an adaptor pattern, although the same code would work on
any List. LinkedList, however, seemed to be the best in most situations
I've seen provided it's implemented sanely.

Sam
From mail at martin-probst.com  Sun May 28 04:18:37 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun May 28 04:18:42 2006
Subject: [antlr-interest] Re: [antlr-dev] we can do push/pop error stuff
	for	4%
In-Reply-To: <44797F67.1010608@geekworld.co.uk>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>
	<44797F67.1010608@geekworld.co.uk>
Message-ID: <8011A265-3C54-40B6-95D1-F02E0453EBF1@martin-probst.com>

> LinkedList, however, seemed to be the best in most situations
> I've seen provided it's implemented sanely.

Did you test that? I have seen LinkedLists perform worse then  
ArrayLists in the typical LinkedList use case, e.g. only operating on  
head or tail of the list, no random access. Rationale was that  
LinkedList push/pop operations put more load on the garbage collector  
compared to the array list. So it might make sense to actually test  
that if you use LinkedList - you can probably use ArrayList as a drop  
in replacement anyways.

Martin
From sdb at geekworld.co.uk  Sun May 28 05:00:02 2006
From: sdb at geekworld.co.uk (Sam Barnett-Cormack)
Date: Sun May 28 05:00:11 2006
Subject: [antlr-interest] Re: [antlr-dev] we can do push/pop error stuff
	for	4%
In-Reply-To: <8011A265-3C54-40B6-95D1-F02E0453EBF1@martin-probst.com>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>
	<44797F67.1010608@geekworld.co.uk>
	<8011A265-3C54-40B6-95D1-F02E0453EBF1@martin-probst.com>
Message-ID: <447990C2.5080307@geekworld.co.uk>

Martin Probst wrote:
>> LinkedList, however, seemed to be the best in most situations
>> I've seen provided it's implemented sanely.
> 
> 
> Did you test that? I have seen LinkedLists perform worse then 
> ArrayLists in the typical LinkedList use case, e.g. only operating on 
> head or tail of the list, no random access. Rationale was that 
> LinkedList push/pop operations put more load on the garbage collector 
> compared to the array list. So it might make sense to actually test 
> that if you use LinkedList - you can probably use ArrayList as a drop 
> in replacement anyways.

And it's also very dependent on tuning of GC and the ArrayList parameters.

Sam
From parrt at cs.usfca.edu  Sun May 28 10:45:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun May 28 10:45:12 2006
Subject: [antlr-interest] Re: [antlr-dev] we can do push/pop error stuff
	for	4%
In-Reply-To: <44797F67.1010608@geekworld.co.uk>
References: <FA58ECCE-D460-4B2A-9111-C740C42DDF86@cs.usfca.edu>
	<41fed8f80605280109y6e4cec01h187ae49196fa9b78@mail.gmail.com>
	<44797F67.1010608@geekworld.co.uk>
Message-ID: <1DFC899C-0C0A-4E18-BA0B-08352C097340@cs.usfca.edu>


On May 28, 2006, at 3:45 AM, Sam Barnett-Cormack wrote:
> How
> did you implement your own?

I used an array list to avoid cost to alloc and update pointers etc...

After looking at java.util.List I suspect it's as fast as my specific  
implementation...

Ter
From parrt at cs.usfca.edu  Sun May 28 10:46:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun May 28 10:46:26 2006
Subject: [antlr-interest] antlr 2.7.6 and C#
In-Reply-To: <20060528094502.GE13059@asterix.konqueror.de>
References: <20060528094502.GE13059@asterix.konqueror.de>
Message-ID: <6A3E6960-30DC-4EF7-BDC6-8AFF2DB952F1@cs.usfca.edu>

Hi, we are planning on a 2.7.6 release probably in August.  Passing  
this on to the config genius.
Terence
On May 28, 2006, at 2:45 AM, Michael Koch wrote:

> Hello list,
>
>
> I know you are all working on the antlr 3.0 release series but I  
> have a
> problem with antlr 2.7.6. I'm one of the maintainers of antlr in  
> Debian.
> Lately we got a bug report to enable C# support in antlr.  
> Unfortunately
> C# support is broken in configure(.in) script in antlr 2.7.6.
>
> configure.in contains
>
>     AC_CONFIG_FILES([lib/csharp/Makefile])
>     AC_CONFIG_FILES([lib/csharp/src/Makefile])
>     AC_CONFIG_FILES([lib/csharp/ASTFrame/Makefile])
>
> but it should be
>
>     AC_CONFIG_FILES([lib/csharp/Makefile])
>     AC_CONFIG_FILES([lib/csharp/antlr.astframe/Makefile])
>     AC_CONFIG_FILES([lib/csharp/antlr.runtime/Makefile])
>
>
> Would it be possible to release a bug fix release for this?
>
>
> Cheers,
> Michael
> -- 
> Escape the Java Trap with GNU Classpath!
> http://www.gnu.org/philosophy/java-trap.html
>
> Join the community at http://planet.classpath.org/

From digobaptista at gmail.com  Sun May 28 12:06:23 2006
From: digobaptista at gmail.com (Rodrigo Baptista)
Date: Sun May 28 12:06:26 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
In-Reply-To: <00a401c67f42$8cb85ea0$c704a8c0@hercules>
References: <b69b16780605240505g2d74efb4i70779211c29ad9a4@mail.gmail.com>
	<00a401c67f42$8cb85ea0$c704a8c0@hercules>
Message-ID: <b69b16780605281206j49ee27e1vd95d42622997fd8b@mail.gmail.com>

Hi Micheal,

Thank you for your help! I already checked that sample and I tried to
integrate on my compiler but it seems that something is wrong because the
selector.retry() is throwing TokenStreamRetryException in both places
(uponEOF() method and at INCLUDE production) is it normal?

Im using Visual Studio 2005 and when I run the compiler, VS warns me telling
that the TokenStreamRetryException was thrown 2 times but if I continue with
the compilation it runs fine (it access the included file). Although if I
catch the TokenStreamRetryException for example:

try
{
         selector.retry();
}
catch (TokenStreamRetryException e)
{
         Console.WriteLine(e.Message);
}

It prints the message but it doesnt access to the included file.

Is something that Im missing?

Cheers,

Rodrigo

On 5/24/06, Micheal J <open.zone@virgin.net> wrote:
>
>  Hi Rodrigo,
>
> See the includeFile sample included with ANTLR.
>
> Cheers,
>
> Micheal
>
>
>  -----Original Message-----
> *From:* antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]
> *On Behalf Of *Rodrigo Baptista
> *Sent:* 24 May 2006 13:06
> *To:* antlr-interest@antlr.org
> *Subject:* [antlr-interest] Wrapping input files to process multiple
> sources
>
> Hello again and sorry for being repeated but i suppose that people from
> the mailing list thought that someone already answered to my question
> because Loring Craymer posted his question on my thread and so on, but
> unfortunetly not.
>
> Im using ANTLR to generate a compiler in C# for a DSL and I would like to
> know how to pass to the Lexer multiple input files (something similar to the
> control of "yyin" using "yywrap()" in flex) in order to be able to switch
> the source stream.
>
> I know that I could concatenate all the input files in a stream and pass
> it to the Lexer but I still want to know if ANTLR has some tool to prevent
> this option.
>
> This is a typical way to process "<include/import xpto>" files.
>
> Regards,
>
> Rodrigo
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060528/fde2560c/attachment.html
From joerg at jrsoftware.de  Sun May 28 12:51:37 2006
From: joerg at jrsoftware.de (=?ISO-8859-15?Q?J=F6rg_Rathlev?=)
Date: Sun May 28 12:51:51 2006
Subject: [antlr-interest] How to modify parent of currently parsed subtree?
Message-ID: <4479FF49.201@jrsoftware.de>

Hi,

how can I modify a parent node of the subtree I'm currently matching in
a tree parser?

I am currently working on a project where one of the AST transformations
I have to do involves having to duplicate an expression. Because I
cannot guarantee that the expression does not have side effects, I don't
want to simply duplicate its AST. Instead, I am trying to create a
temporary variable, which needs to be declared in the block (slist) that
contains the expression. I have tried to create a stack of enclosing
blocks and then modify the innermost one this way (in an action that is
located in a subrule of slist):

AST enclosingSList = enclosingSListStack.peek();
AST prevFirstChild = enclosingSList.getFirstChild();
AST tmp = #([VARIABLE_DEF, "VARIABLE_DEF"], ... );
tmp.setNextSibling(prevFirstChild);
enclosingSList.setFirstChild(tmp);
System.out.println(enclosingSList.toStringList());

The AST printed by the last line is the intended one, however, those
changes are not applied to the final AST that the tree parser will
return as its result of parsing.

Why does this happen? And how can I work around this?

Thanks!

Joerg
From open.zone at virgin.net  Sun May 28 14:00:09 2006
From: open.zone at virgin.net (Micheal J)
Date: Sun May 28 13:42:30 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
In-Reply-To: <b69b16780605281206j49ee27e1vd95d42622997fd8b@mail.gmail.com>
Message-ID: <002001c68299$b54e90f0$c704a8c0@hercules>

Rodrigo,
 
Are you saying the the includeFile example doesn't work for you?. I haven't
had any issues [reported] to that effect. I just tried it again and it seems
to work just fine.
 
If you have Nant properly installed (and the .NET SDK), it probably best to
just type "nant" from the directory containing the example.
 
Just in case you're not, ANTLR V2 sometimes often raises exceptions fo
non-exceptional cases. So yes, it's normal for ANTLR V2.
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rodrigo Baptista
Sent: 28 May 2006 20:06
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] Wrapping input files to process multiple
sources


Hi Micheal,

Thank you for your help! I already checked that sample and I tried to
integrate on my compiler but it seems that something is wrong because the
selector.retry() is throwing TokenStreamRetryException in both places
(uponEOF() method and at INCLUDE production) is it normal? 

Im using Visual Studio 2005 and when I run the compiler, VS warns me telling
that the TokenStreamRetryException was thrown 2 times but if I continue with
the compilation it runs fine (it access the included file). Although if I
catch the TokenStreamRetryException for example: 

try 
{
         selector.retry();
}
catch (TokenStreamRetryException e)
{
         Console.WriteLine(e.Message);
}

It prints the message but it doesnt access to the included file.

Is something that Im missing?

Cheers,

Rodrigo


On 5/24/06, Micheal J < open.zone@virgin.net <mailto:open.zone@virgin.net> >
wrote: 

Hi Rodrigo,
 
See the includeFile sample included with ANTLR. 
 
Cheers,

 
Micheal

 

-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:
<mailto:antlr-interest-bounces@antlr.org> antlr-interest-bounces@antlr.org]
On Behalf Of Rodrigo Baptista
Sent: 24 May 2006 13:06
To: antlr-interest@antlr.org
Subject: [antlr-interest] Wrapping input files to process multiple sources


Hello again and sorry for being repeated but i suppose that people from the
mailing list thought that someone already answered to my question because
Loring Craymer posted his question on my thread and so on, but unfortunetly
not. 


Im using ANTLR to generate a compiler in C# for a DSL and I would like to
know how to pass to the Lexer multiple input files (something similar to the
control of "yyin" using "yywrap()" in flex) in order to be able to switch
the source stream.

I know that I could concatenate all the input files in a stream and pass it
to the Lexer but I still want to know if ANTLR has some tool to prevent this
option.

This is a typical way to process "<include/import xpto>" files.

Regards,


Rodrigo



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060528/d46c1210/attachment.html
From Kai.Koehne at student.hpi.uni-potsdam.de  Mon May 29 00:52:44 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Mon May 29 00:53:29 2006
Subject: [antlr-interest] How to modify parent of currently parsed subtree?
References: <4479FF49.201@jrsoftware.de>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E91@3mxstu1r.hpi.uni-potsdam.de>

 
Hi,
 
your example will not work because the parent AST is constructed AFTER all of its child nodes! So there cannot be any method to access the parent AST within a child node ...
 
Try it the other way round: Just push the declaration of the temporary variable to the stack, and include it explicitly while generating the parent AST. That worked for me.

Regards,
 
Kai Koehne

 
________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von J?rg Rathlev
Gesendet: So 28.05.2006 21:51
An: antlr-interest@antlr.org
Betreff: [antlr-interest] How to modify parent of currently parsed subtree?



Hi,

how can I modify a parent node of the subtree I'm currently matching in
a tree parser?

I am currently working on a project where one of the AST transformations
I have to do involves having to duplicate an expression. Because I
cannot guarantee that the expression does not have side effects, I don't
want to simply duplicate its AST. Instead, I am trying to create a
temporary variable, which needs to be declared in the block (slist) that
contains the expression. I have tried to create a stack of enclosing
blocks and then modify the innermost one this way (in an action that is
located in a subrule of slist):

AST enclosingSList = enclosingSListStack.peek();
AST prevFirstChild = enclosingSList.getFirstChild();
AST tmp = #([VARIABLE_DEF, "VARIABLE_DEF"], ... );
tmp.setNextSibling(prevFirstChild);
enclosingSList.setFirstChild(tmp);
System.out.println(enclosingSList.toStringList());

The AST printed by the last line is the intended one, however, those
changes are not applied to the final AST that the tree parser will
return as its result of parsing.

Why does this happen? And how can I work around this?

Thanks!

Joerg


From ora.et.labora at web.de  Mon May 29 01:05:10 2006
From: ora.et.labora at web.de (ora.et.labora@web.de)
Date: Mon May 29 01:05:16 2006
Subject: [antlr-interest] antlr 2.7.6 and C#
Message-ID: <580702669@web.de>

Hi Michael,

a well known problem. Already fixed in upcoming 2.7.7 scheduled for
August 1st.

Cheers,
Wolfgang.


> -----Urspr?ngliche Nachricht-----
> Von: Terence Parr <parrt@cs.usfca.edu>
> Gesendet: 28.05.06 19:46:26
> An: ANTLR Mailing List <antlr-interest@antlr.org>
> Betreff: Re: [antlr-interest] antlr 2.7.6 and C#


> Hi, we are planning on a 2.7.6 release probably in August.  Passing  
> this on to the config genius.
> Terence
> On May 28, 2006, at 2:45 AM, Michael Koch wrote:
> 
> > Hello list,
> >
> >
> > I know you are all working on the antlr 3.0 release series but I  
> > have a
> > problem with antlr 2.7.6. I'm one of the maintainers of antlr in  
> > Debian.
> > Lately we got a bug report to enable C# support in antlr.  
> > Unfortunately
> > C# support is broken in configure(.in) script in antlr 2.7.6.
> >
> > configure.in contains
> >
> >     AC_CONFIG_FILES([lib/csharp/Makefile])
> >     AC_CONFIG_FILES([lib/csharp/src/Makefile])
> >     AC_CONFIG_FILES([lib/csharp/ASTFrame/Makefile])
> >
> > but it should be
> >
> >     AC_CONFIG_FILES([lib/csharp/Makefile])
> >     AC_CONFIG_FILES([lib/csharp/antlr.astframe/Makefile])
> >     AC_CONFIG_FILES([lib/csharp/antlr.runtime/Makefile])
> >
> >
> > Would it be possible to release a bug fix release for this?
> >
> >
> > Cheers,
> > Michael
> > -- 
> > Escape the Java Trap with GNU Classpath!
> > http://www.gnu.org/philosophy/java-trap.html
> >
> > Join the community at http://planet.classpath.org/
> 


__________________________________________________________________________
Erweitern Sie FreeMail zu einem noch leistungsst?rkeren E-Mail-Postfach!		
Mehr Infos unter http://freemail.web.de/home/landingpad/?mc=021131

From joerg at jrsoftware.de  Mon May 29 03:10:05 2006
From: joerg at jrsoftware.de (=?ISO-8859-1?Q?J=F6rg_Rathlev?=)
Date: Mon May 29 03:10:13 2006
Subject: [antlr-interest] How to modify parent of currently parsed subtree?
In-Reply-To: <D90489B77ED9F8439A3C784F732BEC9C737E91@3mxstu1r.hpi.uni-potsdam.de>
References: <4479FF49.201@jrsoftware.de>
	<D90489B77ED9F8439A3C784F732BEC9C737E91@3mxstu1r.hpi.uni-potsdam.de>
Message-ID: <447AC87D.1060109@jrsoftware.de>

Hi,

> your example will not work because the parent AST is constructed 
> AFTER all of its child nodes! So there cannot be any method to access
> the parent AST within a child node ...

ahh, now I realize my mistake. I actually pushed the source AST onto the
stack, not the generated one. Of course that couldn't work.

> Try it the other way round: Just push the declaration of the 
> temporary variable to the stack, and include it explicitly while
> generating the parent AST. That worked for me.

Yes, that should work. Thanks a lot for your help!


Regards,
Joerg

From digobaptista at gmail.com  Mon May 29 04:10:27 2006
From: digobaptista at gmail.com (Rodrigo Baptista)
Date: Mon May 29 04:10:31 2006
Subject: [antlr-interest] Wrapping input files to process multiple sources
In-Reply-To: <002001c68299$b54e90f0$c704a8c0@hercules>
References: <b69b16780605281206j49ee27e1vd95d42622997fd8b@mail.gmail.com>
	<002001c68299$b54e90f0$c704a8c0@hercules>
Message-ID: <b69b16780605290410w380f112dvdca239c723ff6783@mail.gmail.com>

Michael

I didnt tried the includeFile example itself, I just adapted the grammar
from my compiler to support the inclusion of files. I dont understand the
reason that retry() method throws TokenStreamRetryException nevertheless it
works fine, but I still want to clean up my code.

Rodrigo

On 5/28/06, Micheal J <open.zone@virgin.net> wrote:
>
>  Rodrigo,
>
> Are you saying the the includeFile example doesn't work for you?. I
> haven't had any issues [reported] to that effect. I just tried it again and
> it seems to work just fine.
>
> If you have Nant properly installed (and the .NET SDK), it probably best
> to just type "nant" from the directory containing the example.
>
> Just in case you're not, ANTLR V2 sometimes often raises exceptions fo
> non-exceptional cases. So yes, it's normal for ANTLR V2.
>
> Micheal
>
>
>  -----Original Message-----
> *From:* antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]
> *On Behalf Of *Rodrigo Baptista
> *Sent:* 28 May 2006 20:06
> *To:* antlr-interest@antlr.org
> *Subject:* Re: [antlr-interest] Wrapping input files to process multiple
> sources
>
> Hi Micheal,
>
> Thank you for your help! I already checked that sample and I tried to
> integrate on my compiler but it seems that something is wrong because the
> selector.retry() is throwing TokenStreamRetryException in both places
> (uponEOF() method and at INCLUDE production) is it normal?
>
> Im using Visual Studio 2005 and when I run the compiler, VS warns me
> telling that the TokenStreamRetryException was thrown 2 times but if I
> continue with the compilation it runs fine (it access the included file).
> Although if I catch the TokenStreamRetryException for example:
>
> try
> {
>          selector.retry();
> }
> catch (TokenStreamRetryException e)
> {
>          Console.WriteLine(e.Message);
> }
>
> It prints the message but it doesnt access to the included file.
>
> Is something that Im missing?
>
> Cheers,
>
> Rodrigo
>
> On 5/24/06, Micheal J < open.zone@virgin.net> wrote:
> >
> >  Hi Rodrigo,
> >
> > See the includeFile sample included with ANTLR.
> >
> > Cheers,
> >
> > Micheal
> >
> >
> >  -----Original Message-----
> > *From:* antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]
> > *On Behalf Of *Rodrigo Baptista
> > *Sent:* 24 May 2006 13:06
> > *To:* antlr-interest@antlr.org
> > *Subject:* [antlr-interest] Wrapping input files to process multiple
> > sources
> >
> > Hello again and sorry for being repeated but i suppose that people from
> > the mailing list thought that someone already answered to my question
> > because Loring Craymer posted his question on my thread and so on, but
> > unfortunetly not.
> >
> > Im using ANTLR to generate a compiler in C# for a DSL and I would like
> > to know how to pass to the Lexer multiple input files (something similar to
> > the control of "yyin" using "yywrap()" in flex) in order to be able to
> > switch the source stream.
> >
> > I know that I could concatenate all the input files in a stream and pass
> > it to the Lexer but I still want to know if ANTLR has some tool to prevent
> > this option.
> >
> > This is a typical way to process "<include/import xpto>" files.
> >
> > Regards,
> >
> > Rodrigo
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060529/2835e860/attachment.html
From christian.nentwich at gmail.com  Mon May 29 04:16:45 2006
From: christian.nentwich at gmail.com (Christian Nentwich)
Date: Mon May 29 04:16:49 2006
Subject: [antlr-interest] vocabulary inheritance and tokens
Message-ID: <a5f3fe7a0605290416v33f5cc4ak4c6e24dcc429a3ef@mail.gmail.com>

Hi,

I have a smallish problem with vocabulary inheritance: my custom AST
nodes are not being inherited.

I have two grammars, A and B. Grammar A is defined as:

class A extends Parser;
options {
  ...
}
tokens {
  X<AST=my.ast.node.X};
}
...

and Grammar B:

class B extends A;
options {
  ...
}
tokens {
  Y<AST=my.ast.node.Y>;
}


Now, the problem is that whenever an X occurs in an output file, it is
assigned just a base AST, not the AST node I explicitly specify in
grammar A. The only solution I have found to this is to repeat the
entire token section of A in B, which is slightly less than
satisfactory...

Am I getting something basic wrong?

thanks!

Christian
From jose.ventura.roda at gmail.com  Mon May 29 06:58:24 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Mon May 29 06:58:26 2006
Subject: [antlr-interest] Build AST in multilexer
Message-ID: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>

Hi all,

I'm developing a multilexer to test CICS command embedded in cobol program.
I have the next parser sentence (it's reduced):

cobolSentence:
   EXEC^ CICS {
     Main.selector.push("CicsLex");
     CicsParser b = new CicsParser (getInputState());
     b.comando();
     ## = #(##,b.getAST());
    }
  END_EXEC
 ;

I want to build the AST

       EXEC
              |---------->CICS
                                 |------------> "comandoCICS"

but, the result is
        EXEC
              |------------> "comandoCICS"

How the java code after token CICS is executed before of creation CICS node,
the CICS node is lost.
How can I resolve this problem?

Thanks in advance,
Jos? Ventura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060529/89d25469/attachment.html
From ewbank at gmail.com  Mon May 29 11:51:36 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon May 29 11:52:11 2006
Subject: [antlr-interest] Build AST in multilexer
In-Reply-To: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>
References: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>
Message-ID: <dd3a065f0605291151j17291d46ya129790d67168976@mail.gmail.com>

I think you are misreading the problem.  I suspect that you are
overwriting the <CICS> node, rather than having the java code executed
before the CICS node is created.  If you print out the EXEC at the
beginnning of your java block, then again at the end, you will
probably see
   // before
   #( EXEC CICS )
   // after
   #( EXEC comandoCICS )
I don't have my environment handy, so cannot verify this.  What you
most lilely need to do is simply be more careful in building the tree
so that you don't clip off the CICS that is already there.

- Bryan Ewbank

On 5/29/06, Jose Ventura <jose.ventura.roda@gmail.com> wrote:
>
> Hi all,
>
> I'm developing a multilexer to test CICS command embedded in cobol program.
> I have the next parser sentence (it's reduced):
>
> cobolSentence:
>    EXEC^ CICS {
>      Main.selector.push("CicsLex");
>      CicsParser b = new CicsParser (getInputState());
>      b.comando();
>      ## = #(##, b.getAST());
>     }
>   END_EXEC
>  ;
>
> I want to build the AST
>
>        EXEC
>               |---------->CICS
>                                  |------------>
> "comandoCICS"
>
> but, the result is
>
>        EXEC
>               |------------> "comandoCICS"
>
> How the java code after token CICS is executed before of creation CICS node,
> the CICS node is lost.
> How can I resolve this problem?
>
> Thanks in advance,
> Jos? Ventura
From ewbank at gmail.com  Mon May 29 11:51:36 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon May 29 12:05:29 2006
Subject: [antlr-interest] Build AST in multilexer
In-Reply-To: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>
References: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>
Message-ID: <dd3a065f0605291151j17291d46ya129790d67168976@mail.gmail.com>

I think you are misreading the problem.  I suspect that you are
overwriting the <CICS> node, rather than having the java code executed
before the CICS node is created.  If you print out the EXEC at the
beginnning of your java block, then again at the end, you will
probably see
   // before
   #( EXEC CICS )
   // after
   #( EXEC comandoCICS )
I don't have my environment handy, so cannot verify this.  What you
most lilely need to do is simply be more careful in building the tree
so that you don't clip off the CICS that is already there.

- Bryan Ewbank

On 5/29/06, Jose Ventura <jose.ventura.roda@gmail.com> wrote:
>
> Hi all,
>
> I'm developing a multilexer to test CICS command embedded in cobol program.
> I have the next parser sentence (it's reduced):
>
> cobolSentence:
>    EXEC^ CICS {
>      Main.selector.push("CicsLex");
>      CicsParser b = new CicsParser (getInputState());
>      b.comando();
>      ## = #(##, b.getAST());
>     }
>   END_EXEC
>  ;
>
> I want to build the AST
>
>        EXEC
>               |---------->CICS
>                                  |------------>
> "comandoCICS"
>
> but, the result is
>
>        EXEC
>               |------------> "comandoCICS"
>
> How the java code after token CICS is executed before of creation CICS node,
> the CICS node is lost.
> How can I resolve this problem?
>
> Thanks in advance,
> Jos? Ventura
From hugo.leeney at gmail.com  Mon May 29 15:06:23 2006
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Mon May 29 15:06:26 2006
Subject: [antlr-interest] Problems with Examples
Message-ID: <ccbc40a00605291506y19215775tf7bc7068b738892@mail.gmail.com>

I am trying to use ANTLR on an ubuntu system. Installation went fine
and I have got some examples running. Other examples are proving
problematic.

http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html
The first part of this example compiles fine and runs without error.
The problem is that when I run it from the console it behaves
strangely. Here is an example session:

~&java Main
(3+4)



0
 ( + 3 4 ) 7
~$

(The final output varies depening how far along in the tutorial one is.

As you can see when I enter the expression it has no effect. Pressing
enter numerous times has no effect either. When I enter another
expression such as '0', however the program then responds and outputs
correctly. This is confusing.

http://www.jguru.com/faq/view.jsp?EID=78
I have not been able to finish the example on this page as I cannot
get past the first part. First of all I can point out an error in the
first listed main routine. The instantiation of IntAndIDexer should be
an IntAndIDLexer. Even with this correction the example crashes for me
no matter what input I give it with an error similar to:
'exception: line 1:2: unexpected char: 0xA'

I would like to get these examples working as they seem like they
should illustrate the basics of ANTLR well to me and that I can build
from them. I would be very appreciative of any help. Thanks in
advance.

PS Anyone know why jGuru is sooo sloooow (Like 5 minutes per page) ?? ;)
From jose.ventura.roda at gmail.com  Tue May 30 00:02:22 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Tue May 30 00:02:25 2006
Subject: [antlr-interest] Build AST in multilexer
In-Reply-To: <dd3a065f0605291151j17291d46ya129790d67168976@mail.gmail.com>
References: <e39abda10605290658o1bd4a4fbje01c09bb26fc7b88@mail.gmail.com>
	<dd3a065f0605291151j17291d46ya129790d67168976@mail.gmail.com>
Message-ID: <e39abda10605300002g6ac01291n60200cd797aed91e@mail.gmail.com>

Hi Bryan,

You are right. I will change the rule.

Thank's
Jos? Ventura


2006/5/29, Bryan Ewbank <ewbank@gmail.com>:
>
> I think you are misreading the problem.  I suspect that you are
> overwriting the <CICS> node, rather than having the java code executed
> before the CICS node is created.  If you print out the EXEC at the
> beginnning of your java block, then again at the end, you will
> probably see
>   // before
>   #( EXEC CICS )
>   // after
>   #( EXEC comandoCICS )
> I don't have my environment handy, so cannot verify this.  What you
> most lilely need to do is simply be more careful in building the tree
> so that you don't clip off the CICS that is already there.
>
> - Bryan Ewbank
>
> On 5/29/06, Jose Ventura <jose.ventura.roda@gmail.com> wrote:
> >
> > Hi all,
> >
> > I'm developing a multilexer to test CICS command embedded in cobol
> program.
> > I have the next parser sentence (it's reduced):
> >
> > cobolSentence:
> >    EXEC^ CICS {
> >      Main.selector.push("CicsLex");
> >      CicsParser b = new CicsParser (getInputState());
> >      b.comando();
> >      ## = #(##, b.getAST());
> >     }
> >   END_EXEC
> >  ;
> >
> > I want to build the AST
> >
> >        EXEC
> >               |---------->CICS
> >                                  |------------>
> > "comandoCICS"
> >
> > but, the result is
> >
> >        EXEC
> >               |------------> "comandoCICS"
> >
> > How the java code after token CICS is executed before of creation CICS
> node,
> > the CICS node is lost.
> > How can I resolve this problem?
> >
> > Thanks in advance,
> > Jos? Ventura
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060530/ac5498aa/attachment.html
From mark.kattenbelt at gmail.com  Tue May 30 00:56:34 2006
From: mark.kattenbelt at gmail.com (Mark Kattenbelt)
Date: Tue May 30 00:56:38 2006
Subject: [antlr-interest] Namespaces and generated Antlr classes.
In-Reply-To: <20060526151304.83076.qmail@web15703.mail.cnb.yahoo.com>
References: <20060526151304.83076.qmail@web15703.mail.cnb.yahoo.com>
Message-ID: <447BFAB2.6080205@gmail.com>

Hi,

I have a working Lexer/Parser/Treewalker etc. There is one thing bugging
me though, how do I get the generated classes to be a member of a
namespace?

Say I have a dummy.g file which generates a class DummyParser in c++.
However I would like to make sure this class belongs to namespace dummy
as dummy::DummyParser.

Putting this in your .g is not an option:

header
{
namespace dummy
{
}

For obvious reasons.

Any suggestions?

Cheers,

Mark
From craymer at warpiv.com  Tue May 30 01:16:16 2006
From: craymer at warpiv.com (Loring Craymer)
Date: Tue May 30 01:16:24 2006
Subject: [antlr-interest] Namespaces and generated Antlr classes.
In-Reply-To: <447BFAB2.6080205@gmail.com>
Message-ID: <001801c683c1$5548f7d0$6402a8c0@Fafnir>

In the "options" section of a grammar, insert a line that reads

namespace = "dummy";

and you will get the behavior you want.  (Although you may want some
namespace other than "dummy" ...)

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Mark Kattenbelt
> Sent: Tuesday, May 30, 2006 12:57 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Namespaces and generated Antlr classes.
> 
> Hi,
> 
> I have a working Lexer/Parser/Treewalker etc. There is one thing bugging
> me though, how do I get the generated classes to be a member of a
> namespace?
> 
> Say I have a dummy.g file which generates a class DummyParser in c++.
> However I would like to make sure this class belongs to namespace dummy
> as dummy::DummyParser.
> 
> Putting this in your .g is not an option:
> 
> header
> {
> namespace dummy
> {
> }
> 
> For obvious reasons.
> 
> Any suggestions?
> 
> Cheers,
> 
> Mark

From omanuke at md.point.ne.jp  Tue May 30 01:24:41 2006
From: omanuke at md.point.ne.jp (omanuke@md.point.ne.jp)
Date: Tue May 30 01:24:45 2006
Subject: [antlr-interest] to Parse C# 2.0
Message-ID: <20060530172129.61AD.OMANUKE@md.point.ne.jp>

I'm new to Antlr.
I wanna ask you if i try,i can generate code to parse c#2.0 with antlr?
or Is there some problem to do that?
Now I'm trying to use Kcsparse.

From prashant.deva at gmail.com  Tue May 30 01:34:13 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue May 30 01:34:17 2006
Subject: [antlr-interest] to Parse C# 2.0
In-Reply-To: <20060530172129.61AD.OMANUKE@md.point.ne.jp>
References: <20060530172129.61AD.OMANUKE@md.point.ne.jp>
Message-ID: <41fed8f80605300134y1c1283aek44c837920e07c65f@mail.gmail.com>

Well, as long as you can code the grammar correctly, you should have no
trouble parsing c# 2.0 :)
-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060530/1976088b/attachment.html
From omanuke at md.point.ne.jp  Tue May 30 05:39:06 2006
From: omanuke at md.point.ne.jp (omanuke@md.point.ne.jp)
Date: Tue May 30 05:39:12 2006
Subject: [antlr-interest] problem on using kcsparse
Message-ID: <20060530212242.61B7.OMANUKE@md.point.ne.jp>

Now I'm trying to use kcsparse.
But I can't build kcsparse.
first,if type "nant" at specified directory,then message "BUILD FAILED
-0 non-fatal error(s), 7 warning(s)" appears.
and "Could not find file
'c:\antlr^276\examples\csharp\antlr.runtime\bin\antlr.runtime.dll' to
copy.: 
and so on.

second,
I cant compile ANTLR C# runtimes files.
I tried to build ,but i cant.
there are enough source file to build like 
"C:\antlr\276\examples\csharp\java\JavaLexer.cs"

I use ANTLR 2.7.6.
please help me with your wisdom.

From dieter_frej at gmx.net  Tue May 30 05:42:39 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Tue May 30 05:42:44 2006
Subject: [antlr-interest] newbie: lexer rules vs parser rules
In-Reply-To: <200605201918.19468.vidar@hawkis.com>
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>	<446EE27A.401@gmx.net>
	<446F2C11.9070507@geekworld.co.uk>
	<200605201918.19468.vidar@hawkis.com>
Message-ID: <447C3DBF.2030109@gmx.net>

thank you all, guys.

I am not a DAU, I am just not an expert in the community of languages
and parsing ;)

Modifying a grammar and understanding the concepts is one thing, but 
creating a new grammar from scratch is something different. That was the 
reason why I asked.

Coming back to the example I copied & pasted from the Java language
specificitation:

Digits:
Digit
Digits Digit

Digit:
0
NonZeroDigit

NonZeroDigit: one of
1 2 3 4 5 6 7 8 9

If I understand you right: NonZeroDigit should go into the lexer and
both other productions should go into the parser, right?

- Didi



Vidar H?kestad wrote:
> Antlr just have rules, they beeing parser or lexer ones. No literals.
> A rule in the Antlr grammar syntax is a production modeled after the EBNF 
> method of specifying sequence of language constructs.
> 
> What is lexing, and what is parsing?
> Lexing is interpretation of character sequences.
> Parsing is interpretation of token sequences.
> On a supplied sequence of characters, the lexer definitions creates tokens 
> from which the parser then vegetates (nextToken()).
> In this respect, neither the lexer nor the parser have any knowledge of the 
> concept of literals. You may specify character sequences in both parts of the 
> grammar files, but the context is different. A literal becomes a literal 
> because you define it that way in either lexer or parser rules.
> 
> What Terrence is suggesting is that when a rule starts with a Capital letter 
> it is interpreted in Antlr (i.e in the Antlr grammar interpretor) as a lexer 
> rule. When it starts with a lower case letter it is interpreted as a parser 
> rule.
> These are strict Anltr grammar interpretor syntactic rules, so if you want to 
> use the generator, you have to obide by those rules.
> 
> It is also important to know that the lexer is always created before a parser, 
> so that lexer definitions have to 'know' what the parser will expect.
> 
> The general answer to your general question will be:
> Try to partition your language into as big chunks of character sequences as 
> possible. Those partitions will go into your lexer as lexer rules. The rest 
> of the logic of your language will go into your parser rules.
> 
> regards
> Hawkis
> 
> On Saturday 20 May 2006 16:47, Sam Barnett-Cormack wrote:
>> Dieter Frej wrote:
>>> ok, even though I might look like a total newbie I have to ask that:
>>> Are there any rule of thumb on how to decide what a literal is and what
>>> a rule is? (respectively what goes into the parser and what into the
>>> lexer?)
>>>
>>> Digits:
>>> Digit
>>> Digits Digit
>>>
>>> Digit:
>>> 0
>>> NonZeroDigit
>>>
>>> NonZeroDigit: one of
>>> 1 2 3 4 5 6 7 8 9
>>>
>>> I would say NonZeroDigit is a literal and goes into the lexer, right?
>>> What about the other two? Should both go into the parser?
>> On further thinking, your questions seem to suggest (to me) that you
>> might do well to read a book/take a course on languages and grammars and
>> so on. You seem to be unfamiliar with a lot of the terms, or at best not
>> using them in the way they are normally used.
>>
>> I mean no offence by this, just suggesting a profitable course of action.
>>
>> Sam
>>
>>> Terence Parr wrote:
>>>> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com>
>>>>
>>>> <JConner@ssp-uk.com> wrote:
>>>>> Hi All,
>>>>>
>>>>> I've started to get my feet wet with ANTLR a little, and I've come
>>>>> across a
>>>>> few things that I thought would be handled by lexer rules, but seem
>>>>> to be
>>>>> handled in general by parser rules.  For example, most of the
>>>>> examples I've
>>>>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
>>>> Those should be lexer rules...most places I've seen.  Remember FLOAT
>>>> means lexer rule :)
>>>>
>>>> Ter
> 
> 

From open.zone at virgin.net  Tue May 30 06:48:20 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue May 30 06:30:42 2006
Subject: [antlr-interest] to Parse C# 2.0
In-Reply-To: <20060530172129.61AD.OMANUKE@md.point.ne.jp>
Message-ID: <00bf01c683ef$b768d100$c704a8c0@hercules>

Hi,

> I'm new to Antlr.
> I wanna ask you if i try,i can generate code to parse c#2.0 
> with antlr?

Yes.

> or Is there some problem to do that? Now I'm 
> trying to use Kcsparse.

KCSParse (or the csharp_v1 C# sample included with ANTLR) is a good starting
point since it already parses most[*] C# v1 programs correctly.

If you do manage to extend KCSParse/csharp_v1 to parse C# 2.0, please
consider contributing your changes back to us (or just upload it to the
ANTLR site).


Cheers

Micheal


[*]   KSCParse/csharp_v1 cannot parse some uses of #if/elif/else/endif and
some uses of #region/endregion.

From open.zone at virgin.net  Tue May 30 07:02:20 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue May 30 06:44:45 2006
Subject: [antlr-interest] problem on using kcsparse
In-Reply-To: <20060530212242.61B7.OMANUKE@md.point.ne.jp>
Message-ID: <00c001c683f1$accf46a0$c704a8c0@hercules>

Hi,

> Now I'm trying to use kcsparse.
> But I can't build kcsparse.
> first,if type "nant" at specified directory,then message 
> "BUILD FAILED -0 non-fatal error(s), 7 warning(s)" appears. 
> and "Could not find file 
> 'c:\antlr^276\examples\csharp\antlr.runtime\bin\antlr.runtime.dll' to
> copy.: 
> and so on.

This suggests that the antlr C# runtime hasn't been built. It can't find the
dll.

> second,
> I cant compile ANTLR C# runtimes files.
> I tried to build ,but i cant.
> there are enough source file to build like 
> "C:\antlr\276\examples\csharp\java\JavaLexer.cs"

Don't compile the whole solution (it includes the JavaParser sample which
you haven't built). Just compile the runtime project. Or use the Nant file
to build the runtime files.

> I use ANTLR 2.7.6.
> please help me with your wisdom.

Ok, I'm guessing that you are new to ANTLR. If that is the case, you are
probably better off using the version of KCSParse that is included as a C#
example with ANTLR. It is called "csharp_v1".

You need to build the following in order:
1. the ANTLR tool itself (see the docs for how to do that)

2. the ANTLR C#/.NET runtime (if you use the VS.NET files, build just the
runtime project not the whole solution)

3. the csharp_v1 grammar example [it's really KCSParse in disguise] (the
Nant buildfile refers to ANTLR and the runtime files)


Cheers

Micheal


From Kai.Koehne at student.hpi.uni-potsdam.de  Tue May 30 07:20:08 2006
From: Kai.Koehne at student.hpi.uni-potsdam.de (Koehne Kai)
Date: Tue May 30 07:20:11 2006
Subject: AW: [antlr-interest] newbie: lexer rules vs parser rules
References: <OFA1F49473.FEF4D43A-ON80257172.002AFB5F-80257172.002B7DB3@ssp.local>	<446EE27A.401@gmx.net><446F2C11.9070507@geekworld.co.uk><200605201918.19468.vidar@hawkis.com>
	<447C3DBF.2030109@gmx.net>
Message-ID: <D90489B77ED9F8439A3C784F732BEC9C737E93@3mxstu1r.hpi.uni-potsdam.de>

Hi,
 
I would say it depends on the rest of your grammar ... If you only use Digit and NonzeroDigit for the definition of Digits, and nowhere else, just put everything in the lexer. The reason is that in most cases, you want to keep your parser as simple as possible, so everything that can be easily done in the lexer should be done in the lexer. You might leave Digits in the parser, though, if Digit is also used in other parser rules which cannot be put in the lexer. However, in general I agree with Hawkins on his rule of thumb: Whenever you can, put it in the lexer.

Regards
 
Kai Koehne
 
BTW: If you put Digits in the lexer, remember to mark Digit and NonZeroDigit as protected rules!

________________________________

Von: antlr-interest-bounces@antlr.org im Auftrag von Dieter Frej
Gesendet: Di 30.05.2006 14:42
An: Vidar H?kestad
Cc: antlr-interest@antlr.org
Betreff: Re: [antlr-interest] newbie: lexer rules vs parser rules



thank you all, guys.

I am not a DAU, I am just not an expert in the community of languages
and parsing ;)

Modifying a grammar and understanding the concepts is one thing, but
creating a new grammar from scratch is something different. That was the
reason why I asked.

Coming back to the example I copied & pasted from the Java language
specificitation:

Digits:
Digit
Digits Digit

Digit:
0
NonZeroDigit

NonZeroDigit: one of
1 2 3 4 5 6 7 8 9

If I understand you right: NonZeroDigit should go into the lexer and
both other productions should go into the parser, right?

- Didi



Vidar H?kestad wrote:
> Antlr just have rules, they beeing parser or lexer ones. No literals.
> A rule in the Antlr grammar syntax is a production modeled after the EBNF
> method of specifying sequence of language constructs.
>
> What is lexing, and what is parsing?
> Lexing is interpretation of character sequences.
> Parsing is interpretation of token sequences.
> On a supplied sequence of characters, the lexer definitions creates tokens
> from which the parser then vegetates (nextToken()).
> In this respect, neither the lexer nor the parser have any knowledge of the
> concept of literals. You may specify character sequences in both parts of the
> grammar files, but the context is different. A literal becomes a literal
> because you define it that way in either lexer or parser rules.
>
> What Terrence is suggesting is that when a rule starts with a Capital letter
> it is interpreted in Antlr (i.e in the Antlr grammar interpretor) as a lexer
> rule. When it starts with a lower case letter it is interpreted as a parser
> rule.
> These are strict Anltr grammar interpretor syntactic rules, so if you want to
> use the generator, you have to obide by those rules.
>
> It is also important to know that the lexer is always created before a parser,
> so that lexer definitions have to 'know' what the parser will expect.
>
> The general answer to your general question will be:
> Try to partition your language into as big chunks of character sequences as
> possible. Those partitions will go into your lexer as lexer rules. The rest
> of the logic of your language will go into your parser rules.
>
> regards
> Hawkis
>
> On Saturday 20 May 2006 16:47, Sam Barnett-Cormack wrote:
>> Dieter Frej wrote:
>>> ok, even though I might look like a total newbie I have to ask that:
>>> Are there any rule of thumb on how to decide what a literal is and what
>>> a rule is? (respectively what goes into the parser and what into the
>>> lexer?)
>>>
>>> Digits:
>>> Digit
>>> Digits Digit
>>>
>>> Digit:
>>> 0
>>> NonZeroDigit
>>>
>>> NonZeroDigit: one of
>>> 1 2 3 4 5 6 7 8 9
>>>
>>> I would say NonZeroDigit is a literal and goes into the lexer, right?
>>> What about the other two? Should both go into the parser?
>> On further thinking, your questions seem to suggest (to me) that you
>> might do well to read a book/take a course on languages and grammars and
>> so on. You seem to be unfamiliar with a lot of the terms, or at best not
>> using them in the way they are normally used.
>>
>> I mean no offence by this, just suggesting a profitable course of action.
>>
>> Sam
>>
>>> Terence Parr wrote:
>>>> On May 18, 2006, at 12:54 AM, <JConner@ssp-uk.com>
>>>>
>>>> <JConner@ssp-uk.com> wrote:
>>>>> Hi All,
>>>>>
>>>>> I've started to get my feet wet with ANTLR a little, and I've come
>>>>> across a
>>>>> few things that I thought would be handled by lexer rules, but seem
>>>>> to be
>>>>> handled in general by parser rules.  For example, most of the
>>>>> examples I've
>>>>> seen handle numbers (floating, exponents, sign, etc) with parser rules,
>>>> Those should be lexer rules...most places I've seen.  Remember FLOAT
>>>> means lexer rule :)
>>>>
>>>> Ter
>
>



From canfield at zocalo-tech.com  Tue May 30 08:01:05 2006
From: canfield at zocalo-tech.com (Bill Canfield)
Date: Tue May 30 08:00:07 2006
Subject: [antlr-interest] Re: Wrapping input files to process multiple
	sources
Message-ID: <447C5E31.6070508@zocalo-tech.com>

> I didnt tried the includeFile example itself, I just adapted the grammar
> from my compiler to support the inclusion of files. I dont understand the
> reason that retry() method throws TokenStreamRetryException nevertheless it
> works fine, but I still want to clean up my code.
> 

Rodrigo:

If you want to get rid of the double retry()s, subclass
TokenStreamSelector and override nextToken() to handle stream switches
yourself.  I gave a sketch of this at ANTLR2005, see the
TokenStreamSelector section of this presentation:

http://www.antlr.org/workshop/ANTLR2005/presentations/Verilog.ppt

Bill
-- 
Bill Canfield
Lead Software Developer
Zocalo Tech, Inc.
http://www.zocalo-tech.com/

From Erik.Putrycz at nrc-cnrc.gc.ca  Tue May 30 11:30:08 2006
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Tue May 30 11:30:14 2006
Subject: [antlr-interest] insert token in lexer?
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E9023B0282@nrccenexb1.nrc.ca>

Is it possible to insert a token in a lexer rule?

On a specific rule, I'd like to change the type of the token with a
$setType(...) and I'd also would like to insert another token.

I know I could do that with a TokenStream but I'd rather avoid writing
that in Java if possible... 

 

Thanks,

 

Erik Putrycz, Ph.D - Research Associate /
<mailto:erik.putrycz@nrc-cnrc.gc.ca> erik.putrycz@nrc-cnrc.gc.ca / (613)
990 0681

Institute for Information Technology - Software Engineering Group

National Research Council, Canada - Building M-50, 1200 Montreal Road

Ottawa, Ontario, CANADA K1A 0R6

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060530/5e320112/attachment.html
From mail.micke at gmail.com  Wed May 31 00:42:08 2006
From: mail.micke at gmail.com (Mikael Andersson)
Date: Wed May 31 00:42:16 2006
Subject: [antlr-interest] antlrall in maven2 repository
Message-ID: <8eed5c5b0605310042g36832e3bh413a34b69db4317b@mail.gmail.com>

Hi,
I wonder if there are any plans to update the antlrall artifact in the
maven2 repository?

I am asking because there are some things which doesn't work properly for me
when using the maven2 antlr plugin (which uses antlrall 2.7.4), to process a
co-workers antlr grammars. My co-worker uses antlr 2.7.5 .

Regards,
 Micke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060531/05b2b4ef/attachment.html
From Anthony.Youngman at eca-international.com  Wed May 31 08:06:16 2006
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed May 31 08:06:25 2006
Subject: [antlr-interest] A proposal for keywords
Message-ID: <C7FE35004D40FD45AA342991B88CE4040129028D@lnml1.eca-international.local>

Having read the other responses ...
 
What's wrong with a filter to do this? I've always wanted to put a
stateful filter between the lexer and parser to deal with precisely this
sort of scenario. The filter can then change the token type depending on
what came before and after. I'm not sure how to specify it, but certain
sequences are invalid. My favourite example of what needs to be handled
...
 
REM: REM = REM(6,4); REM this shows four uses of REM, as a label,
variable, function and statement.
 
As I've commented previously, this is valid DATABASIC code...
 
Cheers,
Wol

________________________________

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Loring Craymer
Sent: 23 May 2006 19:10
To: antlr-interest@antlr.org
Subject: [antlr-interest] A proposal for keywords



Handling keywords in grammars is an awkward problem.  Languages handle
keywords in one of two ways:  1.)  keywords are uniquely named, or 2.)
keyword names can be used for other language elements (variable names,
etc.).  ANTLR 2 preferentially supports option 1; PCCTS allowed either,
but directly supported neither (option 1 could be supported by adding
symbol table lookup in lexer actions; option 2 could be supported by
predicate hoisting).

 

It strikes me that the difference is solely a matter of when types are
bound to tokens.  For option 1, types are bound to tokens in the lexer.
For option 2, literal types should be bound in the parser:  that is, the
lexer binds the generic type to the token (TEXT or NUMBER, for example)
and the dynamically looks up the next token in the literals table
whenever attempting to match a literal.  That is, "if" would be first
typed as TEXT but matched (and retyped) as LITERAL_if when matching an
occurrence of "if" in the parser.

 

I was concerned that this might not work with the LL(*) DFAs of ANTLR 3,
until I realized that the predicate hoisting mechanism provides almost
all of the support needed.  (Some sort of type patching table may also
be required; "if" might be matched by a state that allowed either
LITERAL_if or TEXT as the type for that token; for a first
implementation, the type patching may not be necessary since tree
walkers could also do dynamic lookup when matching literals.  Patching,
though, seems preferable over the longer term.)

 

Comments, anyone?  As far as I can see, the only downside to providing
an option to select a keyword mechanism is that we will need to find a
replacement topic for ANTLR workshop discussions-I can remember being in
discussions on this topic at every one of the past workshops!

 

--Loring


* ************************************************************************ *

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

* ************************************************************************ *
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20060531/c177b725/attachment.html
From ewbank at gmail.com  Wed May 31 12:12:18 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed May 31 12:14:36 2006
Subject: [antlr-interest] ANTLR (C++) pretty printer?
Message-ID: <dd3a065f0605311212r47a57c03lddb67a697cbbabfa@mail.gmail.com>

Does anyone know of an ANTLR pretty printer? That is, a program which
reads ANTLR *.g files and produces another *.g in a standard form?  If
it makes a difference, I've got C++ actions.

I'm hoping to head off a vi-emacs style war by saying "here's a tool...".

Thanks,
- Bryan Ewbank
From parrt at cs.usfca.edu  Wed May 31 12:17:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed May 31 12:18:35 2006
Subject: [antlr-interest] ANTLR (C++) pretty printer?
In-Reply-To: <dd3a065f0605311212r47a57c03lddb67a697cbbabfa@mail.gmail.com>
References: <dd3a065f0605311212r47a57c03lddb67a697cbbabfa@mail.gmail.com>
Message-ID: <754108A4-D396-46CD-B7A9-E1F5CD3670F7@cs.usfca.edu>


On May 31, 2006, at 12:12 PM, Bryan Ewbank wrote:

> Does anyone know of an ANTLR pretty printer? That is, a program which
> reads ANTLR *.g files and produces another *.g in a standard form?  If
> it makes a difference, I've got C++ actions.
>
> I'm hoping to head off a vi-emacs style war by saying "here's a  
> tool...".

I don't have one and I don't even have one that will print the  
grammar w/o actions!  For v3, I can dump back out but not pretty  
printed (yet).

Ter

From kroepke at dolphin-services.de  Wed May 31 16:55:21 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Wed May 31 16:55:48 2006
Subject: [antlr-interest] insert token in lexer?
In-Reply-To: <E4D07AB09F5F044299333C8D0FEB45E9023B0282@nrccenexb1.nrc.ca>
References: <E4D07AB09F5F044299333C8D0FEB45E9023B0282@nrccenexb1.nrc.ca>
Message-ID: <910A9B33-ADE8-44D5-B339-E41A6B6BB2D1@dolphin-services.de>


On 30. May 2006, at 20:30 Uhr, Putrycz, Erik wrote:

> Is it possible to insert a token in a lexer rule?
>
> On a specific rule, I'd like to change the type of the token with a
> $setType(...) and I'd also would like to insert another token.
>
> I know I could do that with a TokenStream but I'd rather avoid writing
> that in Java if possible...

I'm afraid that it is not possible without doing Java coding.
nextToken() always returns the token in _returnToken. So there can be  
only one token at a time.
Surely you could provide some nextToken replacement in subclass that  
does it differently, and provide some
hooks for adding more than one token. Then let nextToken loop over  
the accumulated tokens until it runs
out and only then let it call another lexer rule. That way you could  
add as many tokens as you want.

But question is, why do you want to do that? It sounds a bit far out ;)

HTH,

-k
From omanuke at md.point.ne.jp  Wed May 31 23:25:07 2006
From: omanuke at md.point.ne.jp (omanuke@md.point.ne.jp)
Date: Wed May 31 23:25:12 2006
Subject: [antlr-interest] Is it possible to connect the position in souces
	and persing.
Message-ID: <20060601152144.61D3.OMANUKE@md.point.ne.jp>

Is it possible to connect the position in souces and persing like
VisualStudio?
for example,VS can indicate the definition of superclass and so on.
to do so,connecting those is necessary.

