From padysrini at hotmail.com  Thu Jan  1 00:27:03 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Thu, 1 Jan 2009 03:27:03 -0500
Subject: [antlr-interest] confused on tree grammar...
Message-ID: <BAY142-DAV34FBF9FA3E7A3FD4CED8FACE50@phx.gbl>


If I have a predicate to make a decision on which node to execute, why would 
antlr lookahead into the node before checking on the decision ? So if I have 
a ast as follows -

root --> { condition, trueBlock, falseBlock }

I want

if ( condition )
   trueBlock;
else
   falseBlock;


So I use a predicate in my tree grammar to define this. But antlr always 
generates,

if ( condition && trueBlock )
   trueBlock;
else if ( !condition && falseBlock )
  falseBlock;


If I were to write my own tree walker, I would be doing the former by just 
gettting the children and executing the child method that corresponds to the 
condition. Why would antlr do a lookahead while handling this predicate ?


Thx

-- pady 


From indhubharathi at gmail.com  Thu Jan  1 03:04:01 2009
From: indhubharathi at gmail.com (indhu bharathi)
Date: Thu, 1 Jan 2009 16:34:01 +0530
Subject: [antlr-interest] Problem with disambiguating semantic
	predicates and the decision DFA
In-Reply-To: <495BAA55.3040104@gmx.at>
References: <495BAA55.3040104@gmx.at>
Message-ID: <54985e480901010304o2a0483bbp9c4d83ce0b94f65f@mail.gmail.com>

This might not be an elegant fix. But it does fix the problem
13c13
<       : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock SEMICOLON
---
>       : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock
17,19c17,19
<       : external
<       | forward
<       | asmBlock
---
>       : external SEMICOLON
>       | forward SEMICOLON
>       | asmBlock SEMICOLON

The season for the problem is, a look ahead is needed at 'subroutineBlock'
to decide which production to use. ANTLR notes that 'asmBlock' has a
semicolon while the other two don't. So now the confusion is between the
other two. It is only at this instance (after deciding lookahead(';') as the
deciding factor for asmBlock), ANTLR looks for the predicates. Predicates is
used to decide between 'external' and 'forward'. Unfortunaly in our case
what follows 'subroutineBlock' (in proceureDecl) is also a SEMICOLON and
that semicolon is looked-ahead and a wrong decision (for asmBlock) is being
made.

In the new modified productions (in the fix), even 'external' and 'forward'
has SEMICOLON following it. So ANTLR cannot now use SEMICOLON as deciding
factor :-)

That said this is only a hackish fix. I would prefer ANTLR using my own
predicates to decide when I have explicitly mentioned the predicate.

Is there an option to ask ANTLR to forcefully use my predicate when I have
specified one?

Cheers,
Indhu Bharathi

PS: I've attached the fixed grammar file with this mail


On Wed, Dec 31, 2008 at 10:52 PM, Markus Stoeger <spamhole at gmx.at> wrote:

> First of all, a happy new year to everyone!
>
> I'm writing a grammar for one of those twisted languages, written by social
> deviants, that allow keywords to be used as variables.
>
> The solution provided in the ANTLR Reference book on page 287 ("Keywords as
> Variables") seems to work fine in most cases.
>
> However I have found one case where my tests fail:
>
> Please have a look at the attached grammar in keywords.g. Debug it with the
> start symbol "procedureDecl" and feed it the input "PROCEDURE Proc;
> FORWARD;"
>
> The problem happens in "subroutineBlock" where the decision dfa chooses the
> wrong alternative 3 (asmBlock) instead of 2 (forward).
>
> To me the generated decision DFA for the symbol "subroutineBlock" (also
> attached) looks erroneous. It correctly evaluates the disambiguating
> semantic predicates for alternatives 1 (external) and 2 (forward), but it
> skips the evaluation for alternative 3 (asmBlock) and makes its decision
> based on the SEMICOLON token, which is wrong because the semicolon can
> belong to the outer procedureDecl.
>
> I have tested this with the latest stable version of the ANTLRWorks bundle
> (1.2.2).
>
> thanks for any hints,
> Markus
>
>
> PROCEDURE Proc; FORWARD;
> grammar keywords;
>
> options {
>        language=Java;
>        k=*;
> }
>
> procedureDecl
>        : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock SEMICOLON
>        ;
>
> subroutineBlock
>        : external
>        | forward
>        | asmBlock
>        ;
>
> asmBlock
>        : assembler SEMICOLON ASM END
>        ;
>
> external: {input.LT(1).getText().toLowerCase().equals("external")}?
> IDENTIFIER;
> forward: {input.LT(1).getText().toLowerCase().equals("forward")}?
> IDENTIFIER;
> assembler: {input.LT(1).getText().toLowerCase().equals("assembler")}?
> IDENTIFIER;
>
> SEMICOLON: ';';
> PROCEDURE: 'PROCEDURE';
> ASM: 'ASM';
> BEGIN: 'BEGIN';
> END: 'END';
> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
> WS: (' '|'\r'|'\n')+ {$channel = HIDDEN;};
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
- Cheers
Indhu Bharathi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090101/52f59afc/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: keywords.g
Type: application/octet-stream
Size: 943 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090101/52f59afc/attachment.obj 

From indhu.b at s7software.com  Thu Jan  1 04:19:30 2009
From: indhu.b at s7software.com (indhu bharathi)
Date: Thu, 1 Jan 2009 17:49:30 +0530
Subject: [antlr-interest] Problem with disambiguating semantic
	predicates and the decision DFA
In-Reply-To: <54985e480901010304o2a0483bbp9c4d83ce0b94f65f@mail.gmail.com>
References: <495BAA55.3040104@gmx.at>
	<54985e480901010304o2a0483bbp9c4d83ce0b94f65f@mail.gmail.com>
Message-ID: <54985e480901010419l518fc27er8892267c34cf72bc@mail.gmail.com>

I guess this can be solved more elegantly. Modify 'subroutineBlock' rule to
force k=1
subroutineBlock
options {k=1;}
: external
| forward
| asmBlock
;

Now since we are forcing "k=1" (k=2 is needed to look-ahead SEMICOLON) ,
ANTLR wont lookahead for SEMICOLON and instead use our predicate.


On Thu, Jan 1, 2009 at 4:34 PM, indhu bharathi <indhubharathi at gmail.com>wrote:

> This might not be an elegant fix. But it does fix the problem
> 13c13
> <       : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock SEMICOLON
> ---
> >       : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock
> 17,19c17,19
> <       : external
> <       | forward
> <       | asmBlock
> ---
> >       : external SEMICOLON
> >       | forward SEMICOLON
> >       | asmBlock SEMICOLON
>
> The season for the problem is, a look ahead is needed at 'subroutineBlock'
> to decide which production to use. ANTLR notes that 'asmBlock' has a
> semicolon while the other two don't. So now the confusion is between the
> other two. It is only at this instance (after deciding lookahead(';') as the
> deciding factor for asmBlock), ANTLR looks for the predicates. Predicates is
> used to decide between 'external' and 'forward'. Unfortunaly in our case
> what follows 'subroutineBlock' (in proceureDecl) is also a SEMICOLON and
> that semicolon is looked-ahead and a wrong decision (for asmBlock) is being
> made.
>
> In the new modified productions (in the fix), even 'external' and 'forward'
> has SEMICOLON following it. So ANTLR cannot now use SEMICOLON as deciding
> factor :-)
>
> That said this is only a hackish fix. I would prefer ANTLR using my own
> predicates to decide when I have explicitly mentioned the predicate.
>
> Is there an option to ask ANTLR to forcefully use my predicate when I have
> specified one?
>
> Cheers,
> Indhu Bharathi
>
> PS: I've attached the fixed grammar file with this mail
>
>
> On Wed, Dec 31, 2008 at 10:52 PM, Markus Stoeger <spamhole at gmx.at> wrote:
>
>> First of all, a happy new year to everyone!
>>
>> I'm writing a grammar for one of those twisted languages, written by
>> social deviants, that allow keywords to be used as variables.
>>
>> The solution provided in the ANTLR Reference book on page 287 ("Keywords
>> as Variables") seems to work fine in most cases.
>>
>> However I have found one case where my tests fail:
>>
>> Please have a look at the attached grammar in keywords.g. Debug it with
>> the start symbol "procedureDecl" and feed it the input "PROCEDURE Proc;
>> FORWARD;"
>>
>> The problem happens in "subroutineBlock" where the decision dfa chooses
>> the wrong alternative 3 (asmBlock) instead of 2 (forward).
>>
>> To me the generated decision DFA for the symbol "subroutineBlock" (also
>> attached) looks erroneous. It correctly evaluates the disambiguating
>> semantic predicates for alternatives 1 (external) and 2 (forward), but it
>> skips the evaluation for alternative 3 (asmBlock) and makes its decision
>> based on the SEMICOLON token, which is wrong because the semicolon can
>> belong to the outer procedureDecl.
>>
>> I have tested this with the latest stable version of the ANTLRWorks bundle
>> (1.2.2).
>>
>> thanks for any hints,
>> Markus
>>
>>
>> PROCEDURE Proc; FORWARD;
>> grammar keywords;
>>
>> options {
>>        language=Java;
>>        k=*;
>> }
>>
>> procedureDecl
>>        : PROCEDURE IDENTIFIER SEMICOLON subroutineBlock SEMICOLON
>>        ;
>>
>> subroutineBlock
>>        : external
>>        | forward
>>        | asmBlock
>>        ;
>>
>> asmBlock
>>        : assembler SEMICOLON ASM END
>>        ;
>>
>> external: {input.LT(1).getText().toLowerCase().equals("external")}?
>> IDENTIFIER;
>> forward: {input.LT(1).getText().toLowerCase().equals("forward")}?
>> IDENTIFIER;
>> assembler: {input.LT(1).getText().toLowerCase().equals("assembler")}?
>> IDENTIFIER;
>>
>> SEMICOLON: ';';
>> PROCEDURE: 'PROCEDURE';
>> ASM: 'ASM';
>> BEGIN: 'BEGIN';
>> END: 'END';
>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>> WS: (' '|'\r'|'\n')+ {$channel = HIDDEN;};
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>
> --
> - Cheers
> Indhu Bharathi
>



-- 
- Cheers
Indhu Bharathi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090101/5a898471/attachment.html 

From padysrini at hotmail.com  Thu Jan  1 07:59:32 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Thu, 1 Jan 2009 10:59:32 -0500
Subject: [antlr-interest] rule += output option error...
Message-ID: <BAY142-DAV1BD45DC204CA0260233A1ACE50@phx.gbl>


I have a simple rule that returns a list...i get an error when compiling...

expressionList returns [ List exprLst ]
    :   e+=expression+  { $exprLst = $e; }
    ;

expression returns [int type, String val]
..
error(134): GwfWalker.g:90:9: rule '+=' list labels are not allowed w/o 
output option: e



Thx

-- pady 


From padysrini at hotmail.com  Thu Jan  1 08:30:28 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Thu, 1 Jan 2009 11:30:28 -0500
Subject: [antlr-interest] rule += output option error...
References: <BAY142-DAV1BD45DC204CA0260233A1ACE50@phx.gbl>
Message-ID: <BAY142-DAV138AF533583ED143B21831ACE50@phx.gbl>


Got around it ( by an idea from another user here...Hendrik Maryns )...

expressionList returns [List exprLst]

@init { $exprLst = new ArrayList(); }

: ( e=expression { $exprLst.add($e.val); } )+

;



Thx



-- pady

----- Original Message ----- 
From: "Pady Srinivasan" <padysrini at hotmail.com>
To: <antlr-interest at antlr.org>
Sent: Thursday, January 01, 2009 10:59 AM
Subject: [antlr-interest] rule += output option error...


>
> I have a simple rule that returns a list...i get an error when 
> compiling...
>
> expressionList returns [ List exprLst ]
>    :   e+=expression+  { $exprLst = $e; }
>    ;
>
> expression returns [int type, String val]
> ..
> error(134): GwfWalker.g:90:9: rule '+=' list labels are not allowed w/o
> output option: e
>
>
>
> Thx
>
> -- pady
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From padysrini at hotmail.com  Thu Jan  1 11:54:29 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Thu, 1 Jan 2009 14:54:29 -0500
Subject: [antlr-interest] commontree toStringTree pretty print...
Message-ID: <BAY142-DAV2D472952B7A1F35DF05EAACE50@phx.gbl>


When one calls, CommonTree.toStringTree(), the ast is printed in a single 
line. Is there an option or utility to pretty print this ?

Thx

-- pady 


From padysrini at hotmail.com  Thu Jan  1 21:24:09 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Fri, 2 Jan 2009 00:24:09 -0500
Subject: [antlr-interest] optional node in tree parser...
Message-ID: <BAY142-DAV5245BE7273CE1CA016650ACE20@phx.gbl>


Can I have some rule as follows ?

rule
: {$p}=> ^(A B) ^(C .)?
;

When I do this, I get an error about "unexpected token '?'". How do I 
indicate that the second subtree might not exist ?


Thanks

-- pady 


From oliver.zeigermann at gmail.com  Fri Jan  2 04:50:25 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri, 2 Jan 2009 13:50:25 +0100
Subject: [antlr-interest] optional node in tree parser...
In-Reply-To: <BAY142-DAV5245BE7273CE1CA016650ACE20@phx.gbl>
References: <BAY142-DAV5245BE7273CE1CA016650ACE20@phx.gbl>
Message-ID: <9da4f4520901020450s79db075bue8a1e8e13b7faf9@mail.gmail.com>

rule
: {$p}=> ^(A B) (^(C .))?
;

2009/1/2 Pady Srinivasan <padysrini at hotmail.com>:
>
> Can I have some rule as follows ?
>
> rule
> : {$p}=> ^(A B) ^(C .)?
> ;
>
> When I do this, I get an error about "unexpected token '?'". How do I
> indicate that the second subtree might not exist ?
>
>
> Thanks
>
> -- pady
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From padysrini at hotmail.com  Fri Jan  2 07:33:33 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Fri, 2 Jan 2009 10:33:33 -0500
Subject: [antlr-interest] generated code for tree walker...
Message-ID: <BAY142-DAV2AF3457895278B8E97D74ACE20@phx.gbl>


If I have a rule as

rule
A : ^(TOK ({$b}=> B | .) )

The code generated ( in method A() )...

if ( DOWN && b )
  alt = 1;  // handle B
else if ( UP )  // this never happens
  alt = 2;  // handle .
else
    NVAE

Shoudnt the "else if (UP)" be "else if ( DOWN )" since you are at the 
beginning of the subtree "TOK" ? As a test, I changed the generated code to 
the later, and my tests work fine. Can somebody point to me what is the 
issue with the rule grammar ?

Thx

-- pady



From cowang at comcast.net  Fri Jan  2 09:41:23 2009
From: cowang at comcast.net (George S. Cowan)
Date: Fri, 2 Jan 2009 12:41:23 -0500
Subject: [antlr-interest] Bug Report: Composite Grammar does not
	delegate Lexer methods (like mLETTER)
Message-ID: <DBE7824DAB584BF7BD1AE59D8E2907BA@gsce0ae1cfad8d>

On Tue Dec 30, 2008, at 10:56 PST, Terrence Parr wrote
> Hi. you'll have to call the lexer methods directly on the generated  
> lexer not using delegates I think
 
As it turns out, I can insert the delegates myself as a workaround.
 
--------- begin C.g ---------
grammar C ;
import L, P2 ;

@lexer::members {
  public final void mLETTER() throws RecognitionException { gL.mLETTER(); }
}

stuff : ( letters spaces )+ ;
--------- end C.g ------------
 
This is a pain for a large grammar, but it will only have to be done once
(assuming all my new development is happening at the top level, and there
are no lexicon updates coming in at the bottom levels). I can find the name
of the delegates, e.g., "gL", in my CLexer.java file. I can find the method
signature lines, e.g. "public final void mLETTER() throws
RecognitionException", in my C_L.java file. Of course, if I override a lexer
rule, I have to remove the delegator, but if I forget, I get a reminder from
the Java compiler:
------------- begin Java compile error message ----------
CLexer.java:52: mLETTER() is already defined in CLexer
    public final void mLETTER() throws RecognitionException {
                      ^
CLexer.java:14: cannot find symbol
symbol  : method mLETTER()
location: class C_L
      public final void mLETTER() throws RecognitionException {
gL.mLETTER(); }
------------ end Java compile error message ----------
 
This should work. But I hope the next release automates the delegation for
the lexer.
 
George
 
--------------------------- begin original message
----------------------------------------
Hi. you'll have to call the lexer methods directly on the generated  
lexer not using delegates I think
Ter
On Dec 30, 2008, at 7:16 AM, George S. Cowan wrote:

> The generated lexer for composite grammars does not generate the  
> delegation methods for lexer rules in the topmost grammar. This is  
> only a problem if one is directly calling the lexer methods, for  
> instance, in unit testing and, in particular, testing lexer rules in  
> gUnit.
>
> Here is the example grammar from the Composite Grammar page
(http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars 
> ) with slight modifications so it will work:
>
> -------------------- begin L.g --------------
> lexer grammar L ;
> LETTER : 'a'..'z' ;
> ---- begin P1.g  ---
> parser grammar P1 ;
> letter : LETTER ;
> spaces : ' '+ ;
> --- begin P2.g ---
> parser grammar P2 ;
> import P1 ;
> letters : letter+ ;
> --------- begin C.g ---------
> grammar C ;
> import L, P2 ;
> stuff : ( letters spaces )+ ;
> --------- end grammar files ------------
>
> Here is the gUnit test file and the exception:
> ------ CTest.testsuite -----
> gunit C;
> LETTER
> : "a"   OK
>   "A"   FAIL
> ------------------------ runtime exception  
> -------------------------------
> java.lang.NoSuchMethodException: CLexer.mLETTER()
>         at java.lang.Class.getMethod(Unknown Source)
>         at org.antlr.gunit.gUnitExecuter.runLexer(gUnitExecuter.java: 
> 211)
>         at  
> org.antlr.gunit.gUnitExecuter.runCorrectParser(gUnitExecuter.java:131)
>         at  
> org.antlr.gunit.gUnitExecuter.executeTests(gUnitExecuter.java:149)
>         at org.antlr.gunit.gUnitExecuter.execTest(gUnitExecuter.java: 
> 97)
>         at org.antlr.gunit.Interp.main(Interp.java:62)
> ------------------------ END  
> --------------------------------------------------
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090102/74e5634a/attachment.html 

From spamhole at gmx.at  Fri Jan  2 16:02:31 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Sat, 03 Jan 2009 01:02:31 +0100
Subject: [antlr-interest] Problem with disambiguating semantic
 predicates and the decision DFA
In-Reply-To: <54985e480901010304o2a0483bbp9c4d83ce0b94f65f@mail.gmail.com>
References: <495BAA55.3040104@gmx.at>
	<54985e480901010304o2a0483bbp9c4d83ce0b94f65f@mail.gmail.com>
Message-ID: <495EAB17.1010606@gmx.at>

I think "the option to ask ANTLR to forcefully use my predicate" ;-) is 
to simply replace the disambiguating semantic predicates {...}? with 
gated semantic predicates {...}?=>. And this seems to work!

I haven't tested it enough yet and the book recommends disambiguating 
semantic predicates on page 287 (Keywords as Variables), but I think it 
should work as the gated semantic predicates are always hoisted into the 
decision DFA, while disambiguating semantic predicates are only hoisted 
when ANTLR finds a syntactic disambiguity in the production rules. There 
is no syntactic disambiguity in the case of my asmBlock so it doesn't 
add the disambiguating semantic predicate, but it cannot skip my gated 
semantic predicate.

So while this seems to be a simple and almost elegant work around to my 
problem, I'm still wondering if ANTLR's behaviour with my previous 
example code is correct or if there is some bug. To me it seems like it 
generates an insufficient prediction DFA. It believes that an Identifier 
followed by a Semicolon is enough to predict an asmBlock.. but that's 
wrong, it needs at least three symbols - Identifier, Semicolon, Asm - to 
correctly identify the asmBlock in that case.

I have slightly modified my example grammar's subroutineBlock and 
removed all semantic predicates. Without the semantic predicates it gets 
the prediction DFA right (see attachment) - it uses the required three 
symbols of lookahead now. But as soon as I add the disambiguating 
semantic predicates again, it's back to two symbols lookahead and fails.

Markus


indhu bharathi schrieb:
> The season for the problem is, a look ahead is needed at 
> 'subroutineBlock' to decide which production to use. ANTLR notes that 
> 'asmBlock' has a semicolon while the other two don't. So now the 
> confusion is between the other two. It is only at this instance (after 
> deciding lookahead(';') as the deciding factor for asmBlock), ANTLR 
> looks for the predicates. Predicates is used to decide between 
> 'external' and 'forward'. Unfortunaly in our case what follows 
> 'subroutineBlock' (in proceureDecl) is also a SEMICOLON and that 
> semicolon is looked-ahead and a wrong decision (for asmBlock) is being 
> made.
>
> In the new modified productions (in the fix), even 'external' and 
> 'forward' has SEMICOLON following it. So ANTLR cannot now use 
> SEMICOLON as deciding factor :-)
>
> That said this is only a hackish fix. I would prefer ANTLR using my 
> own predicates to decide when I have explicitly mentioned the predicate. 
>
> Is there an option to ask ANTLR to forcefully use my predicate when I 
> have specified one?
>
> Cheers,
> Indhu Bharathi
>
> PS: I've attached the fixed grammar file with this mail
>
>
> On Wed, Dec 31, 2008 at 10:52 PM, Markus Stoeger <spamhole at gmx.at 
> <mailto:spamhole at gmx.at>> wrote:
>
>     First of all, a happy new year to everyone!
>
>     I'm writing a grammar for one of those twisted languages, written
>     by social deviants, that allow keywords to be used as variables.
>
>     The solution provided in the ANTLR Reference book on page 287
>     ("Keywords as Variables") seems to work fine in most cases.
>
>     However I have found one case where my tests fail:
>
>     Please have a look at the attached grammar in keywords.g. Debug it
>     with the start symbol "procedureDecl" and feed it the input
>     "PROCEDURE Proc; FORWARD;"
>
>     The problem happens in "subroutineBlock" where the decision dfa
>     chooses the wrong alternative 3 (asmBlock) instead of 2 (forward).
>
>     To me the generated decision DFA for the symbol "subroutineBlock"
>     (also attached) looks erroneous. It correctly evaluates the
>     disambiguating semantic predicates for alternatives 1 (external)
>     and 2 (forward), but it skips the evaluation for alternative 3
>     (asmBlock) and makes its decision based on the SEMICOLON token,
>     which is wrong because the semicolon can belong to the outer
>     procedureDecl.
>
>     I have tested this with the latest stable version of the
>     ANTLRWorks bundle (1.2.2).
>
>     thanks for any hints,
>     Markus
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test2.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/cef9985b/attachment.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test2dfa.png
Type: image/png
Size: 6679 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/cef9985b/attachment.png 

From g.r.vansickle at att.net  Sat Jan  3 02:24:15 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sat, 3 Jan 2009 04:24:15 -0600
Subject: [antlr-interest] Dynamic scopes, pANTLR3_COMMON_TOKEN,
	and the C runtime
Message-ID: <042E4A66365B41D38804B5E653A46597@DFW5RB41>

Why does this segfault on me, and what's the proper way to do this sort of
thing?:


/// \name Tree Expressions
//@{

tree_expression
scope
{
  // A place to save a pointer to the root identifier of the tree or
subtree, so we can
  // use it further down the rule chain.
  pANTLR3_COMMON_TOKEN root;
}
	: IDENTIFIER { $tree_expression::root = $IDENTIFIER; } '('
association_list ')'
	;
	
association_list
    : association*
    ;
 
association
    : tree_expression
    | IDENTIFIER -> ^(ASSOCIATION {$tree_expression::root} IDENTIFIER)
    ;

//@}


I have an analogous construct in a different part of my grammar which does
this same thing with a pANTLR3_BASE_TREE, with no observed ill effect.

-- 
Gary R. Van Sickle


From g.r.vansickle at att.net  Sat Jan  3 06:06:01 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sat, 3 Jan 2009 08:06:01 -0600
Subject: [antlr-interest] Dynamic scopes, pANTLR3_COMMON_TOKEN,
	and the C runtime
In-Reply-To: <042E4A66365B41D38804B5E653A46597@DFW5RB41>
References: <042E4A66365B41D38804B5E653A46597@DFW5RB41>
Message-ID: <AD83B92FC91349D3921B3A7BC6E1A344@DFW5RB41>

Ok, so to answer my own question, it looks like this is one way to do it:


/// \name Tree Expressions
/// Parses tree structures with the following format:
///
/// PrimaryDeliverable
/// (
///   Firmware
///   (
///     Drivers
///     (
///       Driver_EEPROM
///       Driver_LCD
///     )
///     App
///     GUI
///   )
///   Hardware
/// );
///
/// ...and outputs an AST with the tree flattened into a simple list of
parent->child associations:
///
/// (ASSOCIATION PrimaryDeliverable Firmware)
/// (ASSOCIATION Firmware Drivers)
/// (ASSOCIATION Drivers Driver_EEPROM)
/// (ASSOCIATION Drivers Driver_LCD)
/// (ASSOCIATION Firmware App)
/// (ASSOCIATION Firmware GUI)
/// (ASSOCIATION PrimaryDeliverable Hardware))
///
//@{

tree_expression returns [ pANTLR3_BASE_TREE root_identifier ]
scope
{
  // A place to save a pointer to the root IDENTIFIER of the tree or
subtree, so we can
  // use it further down the rule chain.
  pANTLR3_BASE_TREE root;
}
	: IDENTIFIER 
	 {
	   // Save the IDENTIFIER node in our dynamic scope
	   // so that child rules can find out who their parent is.
	   $tree_expression::root =
(pANTLR3_BASE_TREE)(ADAPTOR->create(ADAPTOR, $IDENTIFIER));
	   
	   // Also return the IDENTIFIER node we just created, for the
"tree_expression tree_expression" case
	   // below in the "association" rule.
	   $root_identifier = (pANTLR3_BASE_TREE)(ADAPTOR->create(ADAPTOR,
$IDENTIFIER));
	 } '(' association_list ')' -> association_list
	;
	
association_list
    : association+
    ;
 
association
    // This is to catch the "tree_expression tree_expression" case.
    : te=tree_expression -> ^(ASSOCIATION {$tree_expression::root}
{$te.root_identifier}) tree_expression
    // This handles everything else.
    | IDENTIFIER -> ^(ASSOCIATION {$tree_expression::root} IDENTIFIER)
    ;

//@}


Are there better or more succinct ways to do what I'm trying to do here?


-- 
Gary R. Van Sickle
 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gary 
> R. Van Sickle
> Sent: Saturday, January 03, 2009 4:24 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Dynamic scopes, 
> pANTLR3_COMMON_TOKEN,and the C runtime
> 
> Why does this segfault on me, and what's the proper way to do 
> this sort of
> thing?:
> 
> 
> /// \name Tree Expressions
> //@{
> 
> tree_expression
> scope
> {
>   // A place to save a pointer to the root identifier of the 
> tree or subtree, so we can
>   // use it further down the rule chain.
>   pANTLR3_COMMON_TOKEN root;
> }
> 	: IDENTIFIER { $tree_expression::root = $IDENTIFIER; } '('
> association_list ')'
> 	;
> 	
> association_list
>     : association*
>     ;
>  
> association
>     : tree_expression
>     | IDENTIFIER -> ^(ASSOCIATION {$tree_expression::root} IDENTIFIER)
>     ;
> 
> //@}
> 
> 
> I have an analogous construct in a different part of my 
> grammar which does this same thing with a pANTLR3_BASE_TREE, 
> with no observed ill effect.
> 
> --
> Gary R. Van Sickle
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email
> -address


From prabha_pady at comcast.net  Sat Jan  3 06:24:56 2009
From: prabha_pady at comcast.net (pady)
Date: Sat, 3 Jan 2009 09:24:56 -0500
Subject: [antlr-interest] difference in tree parser..
Message-ID: <B36C40DA4F4A4E41A91AFC701B61F648@PADYLAPTOP>



I have a simple if-else grammar ( attached Gwf.g and GwfWalker.g ). When I
run this, I get issues around even handling simple if-else. I debugged
through the generated code and found that one of the generated tree parser
code was looking for an UP token when deciding on the predicate. So I wrote
a very similar simplified grammar ( attached X.g and XW.g ) which has
similar logic for the if-else rule alone. This one works as expected ( and
the generated java code is exactly as expected ).

Can anybody take a quick look at why this difference is there below ? ( the
"ifStatement" rule in Gwf*.g and the "ifRule" rule in X*.g ).

Gwf.g ( grammar )

ifStatement
  : 'if' boolExpression s1=statement (options {k=1;}: 'else' s2=statement)?
  -> ^('if' boolExpression ^(TRUE_COND $s1 ) (^(FALSE_COND $s2 ))?)
  ;

GwfWalker.g ( tree grammar )


ifStatement
   : ^('if' b=boolExpression
       ^(TRUE_COND ({$b.result}? => statement | .))
       (^(FALSE_COND ({!$b.result}? => statement | .)))?)
   ;


X.g ( grammar )

ifRule
 : 'if' boolExpr r1 r2? -> ^(R1_TOK r1) (^(R2_TOK r2))?
 ;

XW.g ( tree grammar )

ifRule
 : ^('if' b=boolExpr ^(R1_TOK ({$b.res}?=> r1 | .)) (^(R2_TOK ({!$b.res}?=>
r2 | .)))?)
 ;




Thanks

-- pady
-------------- next part --------------
A non-text attachment was scrubbed...
Name: GwfWalker.g
Type: application/octet-stream
Size: 3731 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/44829cda/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Gwf.g
Type: application/octet-stream
Size: 5003 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/44829cda/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: XW.g
Type: application/octet-stream
Size: 271 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/44829cda/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: X.g
Type: application/octet-stream
Size: 301 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090103/44829cda/attachment-0003.obj 

From zenzike at gmail.com  Sat Jan  3 11:56:39 2009
From: zenzike at gmail.com (Zenzike)
Date: Sat, 3 Jan 2009 19:56:39 +0000
Subject: [antlr-interest] Bug? duplicate token type ... when collapsing
	subrule into set
Message-ID: <31e910dd0901031156j11c33acamfcf9149887f03e3a@mail.gmail.com>

Dear all,

I'm using ANTLR with a rather large grammar, and I'm hitting an error
when I add a particular clause.
I'm not sure if it's a bug, but the grammar below displays the behaviour:

>>>
grammar Buggy;

start : (PROSE|HELLO|WORLD)+;


PROSE : ~('hello' | 'world');

HELLO
  :  'hello'
  ;
WORLD
  : 'world'
  ;
>>>

This is the error I get:
>>>
[19:49:51] Checking Grammar...
[19:49:51] error(204): Buggy.g:6:21: duplicate token type 'world' when
collapsing subrule into set
>>>
If I change either, or both, of the 'hello' or 'world' occurrences in
PROSE, into HELLO or WORLD, then I don't get the error.

I'm reluctant to do this in the actual grammar I'm working with, since
the HELLO and WORLD rules have actions associated to them,
which I don't want to invoke in PROSE.

Does anybody know what is going on here?

Many thanks!

From mike at mpagel.de  Sun Jan  4 14:03:00 2009
From: mike at mpagel.de (Mike Pagel)
Date: Sun, 04 Jan 2009 23:03:00 +0100
Subject: [antlr-interest] Iterative parsing?
Message-ID: <49613214.2090705@mpagel.de>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090104/45300530/attachment.html 

From bgedik at gmail.com  Sun Jan  4 16:47:36 2009
From: bgedik at gmail.com (=?ISO-8859-9?Q?Bu=F0ra_Gedik?=)
Date: Sun, 4 Jan 2009 19:47:36 -0500
Subject: [antlr-interest] Compiling source code generated by the C runtime
Message-ID: <e577fe370901041647n9118a63ga9905ab17ead9beb@mail.gmail.com>

Hi (Jim),

  It seems the code generated by the C runtime cannot be compiled with
-W -Wall -Werror

  Would it be possible to improve the situation by taking care of some of
the following type of  warnings in the generated code:
- signed compare
- unused function, variable, parameter

Thanks,
-b
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090104/0ff56ebc/attachment.html 

From jimi at temporal-wave.com  Sun Jan  4 17:08:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 04 Jan 2009 17:08:52 -0800
Subject: [antlr-interest] Compiling source code generated by the C
	runtime
In-Reply-To: <e577fe370901041647n9118a63ga9905ab17ead9beb@mail.gmail.com>
References: <e577fe370901041647n9118a63ga9905ab17ead9beb@mail.gmail.com>
Message-ID: <49615DA4.3060600@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090104/819e054d/attachment.html 

From padysrini at hotmail.com  Sun Jan  4 18:07:43 2009
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Sun, 4 Jan 2009 21:07:43 -0500
Subject: [antlr-interest] generated code for tree walker...
References: <BAY142-DAV2AF3457895278B8E97D74ACE20@phx.gbl>
Message-ID: <BAY142-DAV9F7B3CE862678B885424CACE10@phx.gbl>


Anybody have any ideas/thoughts on my posting below ?

Thx

-- pady


----- Original Message ----- 
From: "Pady Srinivasan" <padysrini at hotmail.com>
To: <antlr-interest at antlr.org>
Sent: Friday, January 02, 2009 10:33 AM
Subject: [antlr-interest] generated code for tree walker...


>
> If I have a rule as
>
> rA
>  : ^(TOK ({$b}=> rB | .) )
>
> The code generated ( in method rA() )...
>
> if ( DOWN && b )
>  alt = 1;  // handle rB
> else if ( UP )  // this never happens
>  alt = 2;  // handle .
> else
>    NVAE
>
> Shoudnt the "else if (UP)" be "else if ( DOWN )" since you are at the
> beginning of the subtree "TOK" ? As a test, I changed the generated code 
> to
> the later, and my tests work fine. Can somebody point to me what is the
> issue with the rule grammar ?
>
> Thx
>
> -- pady
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From chainone at gmail.com  Sun Jan  4 19:57:41 2009
From: chainone at gmail.com (chain one)
Date: Mon, 5 Jan 2009 11:57:41 +0800
Subject: [antlr-interest]  Could the parser and lexer be reused?
Message-ID: <5a92ffb60901041957u6996bb2mcd107ebfe1552b18@mail.gmail.com>

There are many pieces of  inputs , all of which should be parsed by one
parser.Such as :
Input 1:
     Jack 100$
Input 2:
    Tom   200$
Input ......

However, this kind of inputs doesn't come all in one time. They arrive at
different time. Once one input arrives, it needs to be parsed immediately.
So the next piece of pseudo code shows how it is processed by my way:

void ParseOneInput(const char* data)
{
   input  =
antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8) data,strlen(data),NULL);
   lex    = StepDataEntryLexerNew(m_input);
   tokens = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
TOKENSOURCE(lex));
   parser = DataEntryParserNew               (tokens);
    parser  ->entry(parser,1);
    parser ->free(parser);
    tokens ->free(tokens);
    lex    ->free(lex);
    input  ->close(input);
}

Once one input arrives, Function ParseOneInput is called.

It works fine.

The question is , could the parser and lexer in ParseOneInput be reused?
If they could be reused, then it is unnecessary to create/destroy a lexer
and a parser every time an input arrives. If not, I believe it
is inefficient.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/b47deb03/attachment.html 

From jimi at temporal-wave.com  Sun Jan  4 21:16:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 04 Jan 2009 21:16:48 -0800
Subject: [antlr-interest] Could the parser and lexer be reused?
In-Reply-To: <5a92ffb60901041957u6996bb2mcd107ebfe1552b18@mail.gmail.com>
References: <5a92ffb60901041957u6996bb2mcd107ebfe1552b18@mail.gmail.com>
Message-ID: <496197C0.30402@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090104/ea0dcbbb/attachment.html 

From chainone at gmail.com  Mon Jan  5 01:10:09 2009
From: chainone at gmail.com (chain one)
Date: Mon, 5 Jan 2009 17:10:09 +0800
Subject: [antlr-interest] Could the parser and lexer be reused?
In-Reply-To: <496197C0.30402@temporal-wave.com>
References: <5a92ffb60901041957u6996bb2mcd107ebfe1552b18@mail.gmail.com>
	<496197C0.30402@temporal-wave.com>
Message-ID: <5a92ffb60901050110r53c3bbc8s7869db1493394d27@mail.gmail.com>

Thanks for your reply.
As what you said, I searched the API doc and found the reset functions in
the code of lexer and input stream(no parser).
And I tried to reuse the input stream and the lexer.
The following is the difficulties I met:

1. input stream is reused by this way
        if(!m_input)        m_input  =
antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)entry_start,p_semi-entry_start+1,NULL);
    else
    {
        m_input->reset(m_input);
        m_input->data = (pANTLR3_UINT8)entry_start;
        m_input->sizeBuf = p_semi-entry_start+1;
    }

But, at run time this piece of code will make the programme print a lot of
error messages.


2. Lexer is reused in this way:
  m_input  =
antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)entry_start,p_semi-entry_start+1,NULL);
    if(!m_lex)
        m_lex    = StepDataEntryLexerNew(m_input);
    else
        m_lex->pLexer->setCharStream(m_lex->pLexer,m_input);

However, it will make programme crash at line 482 of antlrtokenstream.c

I don't know how to make it work. I would appreciate if you take a look at
this and give some suggestions. : )

Best Regards,
Young







On Mon, Jan 5, 2009 at 1:16 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  chain one wrote:
>
> There are many pieces of  inputs , all of which should be parsed by one
> parser. Such as :
> Input 1:
>      Jack 100$
> Input 2:
>     Tom   200$
> Input ......
>
>  However, this kind of inputs doesn't come all in one time. They arrive at
> different time. Once one input arrives, it needs to be parsed immediately.
> So the next piece of pseudo code shows how it is processed by my way:
>
>  void ParseOneInput(const char* data)
> {
>    input  =
> antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8) data,strlen(data),NULL);
>    lex    = StepDataEntryLexerNew(m_input);
>    tokens = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
> TOKENSOURCE(lex));
>    parser = DataEntryParserNew               (tokens);
>     parser  ->entry(parser,1);
>     parser ->free(parser);
>     tokens ->free(tokens);
>     lex    ->free(lex);
>     input  ->close(input);
> }
>
>  Once one input arrives, Function ParseOneInput is called.
>
>  It works fine.
>
>  The question is , could the parser and lexer in ParseOneInput be reused?
> If they could be reused, then it is unnecessary to create/destroy a lexer
> and a parser every time an input arrives. If not, I believe it
> is inefficient.
>
>  Actually it isn't particularly inefficient, it is justa bit of memory and
> few pointers initialized; though when measured relative to the speed of
> parsing/lexing it may appear to be so :-). However, there is no need to
> recreate the lexer and parser, you can reuse them and reset() them, setting
> their input streams as per the API docs.
>
> Jim
>
> ------------------------------
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/c3925f99/attachment.html 

From isabelle.perseil at enst.fr  Mon Jan  5 07:56:52 2009
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Mon, 5 Jan 2009 16:56:52 +0100 (CET)
Subject: [antlr-interest]   UML&AADL'2009 : CALL FOR PAPERS
Message-ID: <b5fccc16f146ad991c8da15ab4ab2313.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  UML&AADL?2009
           http://www.artist-embedded.org/artist/UML-AADL-2009.html

                Workshop held in conjunction with ICECCS 2009
                The fourteenth IEEE International Conference on
                    Engineering of Complex Computer Systems
                            http://www.iceccs.org/
                               June 02, 2009
                              Potsdam, Germany

************************************************************************

                   Submission deadline: February 20, 2009
                   --------------------------------------



Topics
======
New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favor the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behavior modeling and
model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behavior and/or architecture models. To this
end, we solicit papers (no more than 6 pages long) related to, but not
limited to, the following principal topics:

- Multi-domain specific modeling languages
- Model transformation and generative approaches
- Model-based Methodologies
- Integration of different formalisms (e.g., Simulink/StateFlow, StateMate
  and Scade-drive)
- Model Checking of architecture specifications
- ADLs behavioral models simulation, Scheduling analysis and Worst-case
execution time prediction


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper to
agusti[dot]canals[at]c-s[dot]fr with ?ICECCS09 UML&AADL Workshop? in the
title. Papers should not exceed 6 pages. Submitted manuscripts should be
in English and formatted in the style of the IEEE Computer Society
Proceedings Format. Preferably, submissions should be in PDF format.

All selected papers will be published in the IEEE Computer Society Press
Proceedings.


IMPORTANT DATES
===============
Submission deadline:             February 20, 2009
All Notification of acceptance:  March 05, 2009
Workshop date:           	June 02, 2009


Organizational sponsors
=======================
ARTIST NoE
OMG

Organizers and Programme Steering Committee
===========================================
Jean-Michel Bruel (IRIT, France)
Agusti Canals (CS, France)
Robert de Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Isabelle Perseil (TELECOM ParisTech, France)

Publicity Chair
===============
Sun Meg (CWI, The Netherlands)

IEEE CS TCCX Coordinator
========================
Mike Hinchey (NASA GSFC and Loyola College in Maryland, USA)


Programme Committee
===================
Yamine Ait Ameur (LISI / ENSMA, France)
Keijiro Araki (Kyushu University, Japan)
Grady Booch (IBM Fellow, USA)
Agusti Canals (CS, France)
Juan Antonio de la Puente (Universidad Polit?cnica de Madrid, Spain)
Sebastien Demathieu (THALES, France)
Dionisio De Niz Villasenor (SEI, Carnegie Mellon, USA)
Vincent Englebert (University of Namur, Belgium)
Madeleine Faug?re (THALES, France)
Mamoun Filali (IRIT, France)
Robert France (Colorado State University, USA)
S?bastien G?rard (CEA-LIST, France)
Patrick Heymans (University of Namur, Belgium)
Irfan Hamid (Microsoft Corp, Canada)
J.J.M. Hooman (Embedded Systems Institute, The Netherlands)
Bruce Lewis (US Army AMCOM)
Johan Lilius (?bo Akademi University, Finland)
Ricardo J. Machado (University of Minho, Portugal)
Sun Meg (CWI, The Netherlands)
Dominique Mery (LORIA, France)
Nenad Medvidovic (University of Southern California, USA)
Thierry Millan (IRIT, France)
Richard Paige (University of York, United Kingdom)
Marc Reynolds (University of Western Australia, Australia)
Jos? Ra?l Romero Salguero (Universidad de C?rdoba, Spain)
Bernhard Rumpe (Braunschweig University of Technology, Germany)
Douglas C. Schmidt (Vanderbild University, USA)
Fran?oise Simonot Lion (LORIA, France)
Oleg Sokolsky (University of Pennsylvania, USA)
Roy Sterritt (University of Ulster, United Kingdom)
J?rn Guy S?? ( University of Queensland, Australia)
Jing Sun (University of Auckland, New Zealand)
Bedir Tekinerdogan (Bilkent University, Turkey)
Martin T?rngren (KTH - Royal Institute of Technology, Sweden)
Laurence Tratt (Bournemouth University, United Kingdom)
Tullio Vardanega (University of Padua, Italy)
Fran?ois Vernadat (CNRS-LAAS, France)
Thomas Vergnaud (THALES, France)
Eugenio Villar (Universidad de Cantabria, Spain)
Sergio Yovine (CNRS-Verimag, France)
Roberto V. Zicari (Goethe University Frankfurt, Germany)



From Jack.Pan at Lewtan.com  Mon Jan  5 08:32:40 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Mon, 5 Jan 2009 11:32:40 -0500
Subject: [antlr-interest] Samples to generate heterogeneous tree nodes with
	ANTLR 3 C Target AST?
Message-ID: <A774F8AAACE57E47AB2D82E7317A724806C1DB02@exchange6.corp.lewtan.com>

Hi All,

 

I searched the archive but couldn't find any samples. Like many people
posted here, I already have my tree with heterogeneous nodes in
production use. I would like to use ANTLR3's C target with AST option to
generate that. I like this approach much better than use custom action
to construct the tree as I can debug the tree building process with
ANTLRWorks this way. From what I read so far I just need to provide a
custom TreeAdopter implementation to interact with my tree node types.
Has anyone done something like this before? Where can I find a sample?

 

Thanks,

 

Jack

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/aecb9158/attachment.html 

From mike at mpagel.de  Mon Jan  5 09:24:36 2009
From: mike at mpagel.de (Mike Pagel)
Date: Mon, 05 Jan 2009 18:24:36 +0100
Subject: [antlr-interest] Syntax highlighting considerations
Message-ID: <49624254.20503@mpagel.de>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/94b7295d/attachment.html 

From cowang at comcast.net  Mon Jan  5 09:48:34 2009
From: cowang at comcast.net (George S. Cowan)
Date: Mon, 5 Jan 2009 12:48:34 -0500
Subject: [antlr-interest] Where is the EOF documentation?
Message-ID: <A3E17E5DBD8D4C5B8F3BE9CF5C1FFC25@gsce0ae1cfad8d>

Is there any documentation for the special EOF token? 
 
When the parser reaches the end of file, special things seem to happen. But
I can't find anywhere this is documented. I'm in the middle of my second
pass through the Definitive ANTLR Reference, and I don't recall it occurring
in any of the grammars there, or in fact, being mentioned at all. It isn't
in the index either. 
 
I have seen it mentioned as a magic fix for certain grammars on the website,
e.g.,  <http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554943>
http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554943. 
 
In a search from the ANTLR home page, I found several email list entries
that mentioned EOF frustrations and solutions, but I am still not clear
about when it is needed and when it is not. (When trying to find emails from
a search on the home page, watch out for the "" port in the URLS, it
must be manually removed in order to get to the emails' new location.)
 
Here are the the facts that I have gleaned from reading and experiments:
 
1. EOF is not usually required at the end of your top-level rule in a
grammar, but sometimes it is. When is not clear.
 
2. Some rules cannot be unit tested because directly calling them against a
valid input stream puts an EOF at the end of the input steam and some rules
trip over the EOF. When is not clear.
 
3. EOF is only available in the parser, not the lexer. So, for instance, we
can't make it part of whitespace, or make it ok for a line comment to end
with an EOF as well as a newline.
 
 
I begin to suspect that EOF is not truly a token on the token steam, but
just something to use in the parser when certain special undocumented
handling is wanted. I also suspect that the effect of an end of file is
different depending on DFAs, hoisting, and maybe other things not seen in
the grammar, but going on in the implementation. 
 
A satisfactory response would be, "How true, but a future release will clean
up some of this, and better to wait and document that."
 
Frustrated, but hoping for clarity, 
George
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/d99e7215/attachment.html 

From jimi at temporal-wave.com  Mon Jan  5 09:56:25 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 05 Jan 2009 09:56:25 -0800
Subject: [antlr-interest] Syntax highlighting considerations
In-Reply-To: <49624254.20503@mpagel.de>
References: <49624254.20503@mpagel.de>
Message-ID: <496249C9.5090204@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/5fb54a7e/attachment.html 

From lgcraymer at yahoo.com  Mon Jan  5 10:29:28 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 5 Jan 2009 10:29:28 -0800 (PST)
Subject: [antlr-interest] Where is the EOF documentation?
References: <A3E17E5DBD8D4C5B8F3BE9CF5C1FFC25@gsce0ae1cfad8d>
Message-ID: <307260.32382.qm@web55905.mail.re3.yahoo.com>

EOF is a real token generated when the lexer reaches the end of file.  The EOF symbol appears in a grammar to force processing of all tokens in a file or to generate an error condition if that is not possible.  If all files fed to a grammar-derived parser are well-formed (do not have missing or extra tokens at the end of file and conform to the grammar), then a grammar without EOF will appear to be working.

--Loring




________________________________
From: George S. Cowan <cowang at comcast.net>
To: antlr-interest at antlr.org
Sent: Monday, January 5, 2009 9:48:34 AM
Subject: [antlr-interest] Where is the EOF documentation?

Message 
Is there 
any documentation for the special EOF token? 
 
When the 
parser reaches the end of file, special things seem to happen. But I can't find 
anywhere this is documented. I'm in the middle of my second pass through the 
Definitive ANTLR Reference, and I don't recall it occurring in any of the 
grammars there, or in fact, being mentioned at all. It isn't in the index 
either. 
 
I have seen it 
mentioned as a magic fix for certain grammars on the website, e.g., http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554943. 
 
In a search from the ANTLR home page, I 
found several email list entries that mentioned EOF frustrations and 
solutions, but I am still not clear about when it is needed and when it is not. 
(When trying to find emails from a search on the home page, watch out for the 
"" port in the URLS, it must be manually removed in order to get to the 
emails' new location.)
 
Here are the the 
facts that I have gleaned from reading and experiments:
 
1. EOF is not 
usually required at the end of your top-level rule in a grammar, but 
sometimes it is. When is not clear.
 
2. Some rules cannot 
be unit tested because directly calling them against a valid input 
stream puts an EOF at the end of the input steam and some rules 
trip over the EOF. When is not clear.
 
3. EOF is only 
available in the parser, not the lexer. So, for instance, we can't make it part 
of whitespace, or make it ok for a line comment to end with an EOF as well 
as a newline.
 
 
I begin to suspect 
that EOF is not truly a token on the token steam, but just something 
to use in the parser when certain special undocumented handling is wanted. 
I also suspect that the effect of an end of file is different 
depending on DFAs, hoisting, and maybe other things not seen in the grammar, but 
going on in the implementation. 
 
A satisfactory 
response would be, "How true, but a future release will clean up some of this, 
and better to wait and document that."
 
Frustrated, but hoping for clarity, 
George


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090105/cd8624d2/attachment.html 

From isabelle.perseil at enst.fr  Mon Jan  5 15:22:15 2009
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Tue, 6 Jan 2009 00:22:15 +0100 (CET)
Subject: [antlr-interest]  ICECCS09 : CALL FOR PAPERS
Message-ID: <1f823146d8e3d6eee760eaa40bf58efe.squirrel@webmail1.telecom-paristech.fr>

==========================================================================
Call for Papers for the Fourteenth IEEE International Conference on
        Engineering of Complex Computer Systems (ICECCS09)
                          www.iceccs.org
==========================================================================

The goal of ICECCS is to bring together industrial, academic, and
government experts, from a variety of user domains and software
disciplines, to determine how the disciplines' problems and solution
techniques interact within the whole system.
Researchers, practitioners, tool developers and users, and technology
transition experts are all welcome.
The scope of interest includes long-term research issues, near-term
complex system requirements and promising tools, existing complex systems,
and commercially available tools.


Scope and Topics
----------------
Papers are solicited in all areas related to complex computer-based
systems, including the causes of complexity and means of avoiding,
controlling, or coping with complexity.
Topic areas include, but are not limited to:

-Avionics and Automobile Software
-Content Production and Distribution Systems, Mobile and Multi-channel
Systems
-Context Awareness Computing
-Engineering of Complex Interactive Computer Systems
-Formal Methods and Approaches to Manage and Control Complex Systems
-Human Factors and Collaborative Aspects
-Integration of Heterogeneous Technologies
-Interoperability and Standardization
-Pervasive and Ubiquitous Computing
-Real-time and Embedded Systems
-Sensor Network Systems and Applications
-Software and System Development and Control Processes for Complex Systems
-Software Architecture and System Engineering
-Software Complexity Visualization
-Systems and Software Safety and Security
-Tools, Environments, and Languages for Complex Systems
-Verification Techniques for Complex Software Systems
-Virtual Environments for Managing Complexity
-Web Services Modeling and Compositions

Different kinds of contributions are sought, including research papers,
Lessons learned, status reports, and discussion of practical problems
faced by industry and user domains.
The ultimate goal is to build a rich and comprehensive conference program
that can fit the interests and needs of different classes of attendees:
professionals, researchers, managers, and students. A program goal is to
organize several sessions that include both academic and industrial papers
on a given topic and culminate panels to discuss relationships between
industrial and academic research.
Papers are divided into two categories: Technical Papers and Experience
Reports. The papers submitted to both categories will be reviewed by
program committee members, and papers accepted in either category will be
published in the conference proceedings.
Technical papers should describe original research, and industrial
experience reports should describe practical projects carried out in
industry, and reflect on the lessons learnt from them.


Paper Submission
----------------
Submitted manuscripts should be in English and formatted in the style of
the IEEE Computer Society Proceedings Format:
(ftp://pubftp.computer.org/press/outgoing/proceedings/instruct.doc).
Papers should not exceed 10 pages including figures, references, and
appendices and be in PDF format. Submissions of papers will be carried out
electronically via the Web:

http://sttt.cs.uni-dortmund.de/iceccs09/servlet/Conference

Authors of accepted papers will be required to sign a copyright release
form. IEEE Computer Society Press will publish the proceedings. Final
versions of accepted papers will be limited
to 10 pages in the aforementioned IEEE proceedings format.


Important Dates
-------------
Submission deadline -  2 February, 2009
Start of reviews - 4 February, 2009
Review Deadline - 24 February, 2009
Notification of acceptance - 2 March, 2009
Final version - 13 March, 2009


Workshops
-------------
The Fourth IEEE International workshop UML and AADL - UML&AADL'2009 will
be held in conjunction with ICECCS?09.
Please visit the workshop?s web page for important dates:

http://www.artist-embedded.org/artist/UML-AADL-2009.html


ORGANIZING COMMITTEE
-------------
General Chair
Tiziana Margaria, Potsdam University, Germany

Program Chairs
Karin Breitman, Pontif?cia Universidade Cat?lica do Rio de Janeiro, Brazil
Simone DJ Barbosa, Pontif?cia Universidade Cat?lica do Rio de Janeiro,
Brazil

Program Committee
-------------

Alessandro Fantechi, Univ. Firenze, Italy

Anke Dittmar, University of Rostock, Germany

Armin Eberlein, University of Calgary, Canada

Cristina Seceleanu, M?lardalen University, Sweden

Daniel M. Berry, University of Waterloo, Canada

Declan O"Sullivan, Trinity College Dublin, Republic of Ireland

Emil Sekerinski, McMaster University, Canada

Flavio Recht Wagner, Universidade Federal do Rio Grande do Sul, Brazil

Hardi Hungar, OFFIS, Oldenburg, Germany

Ina Schieferdecker, Fraunhofer FOKUS and TU Berlin, Germany

Isabelle Perseil, TELECOM ParisTech, France

Jing Sun, University of Auckland, New Zealand

Jo?o Falc?o e Cunha, Universidade do Porto, Portugal

Jose Carlos Maldonado, Universidade de S?o Paulo, Brazil

Jos? Creissac Campos, University of Minho, Portugal

Kaisa Sere, Abo Akademi, Turku, Finnland

Klaus David, Univ. Kassel, Germany

Kung-Kiu Lau, University of Manchester, United Kingdom

Lindsay Groves, Victoria University of Wellington, New Zealand

Lisandro Granville, Universidade Federal do Rio Grande do Sul, UFRGS

Manfrey Broy, Technical University of Munich, Germany

Marcelo Blois, PUCRS, Brazil

Mauro Pezze, University of Lugano, Switzerland

Michael Butler, University of Southampton, United Kingdom

Michael Harrison, Newcastle University, United Kingdom

Motoshi Saeki, Tokyo Institute of Technology, Japan

Nelson Maculan, Universidade Federal do Rio de Janeiro, Brazil

Nick Graham, School of Computing, Queen's University, Canada

Oscar Pastor, Valencia University of Technology, Spain

Paolo Nesi, University of Florence, Italy

Peter Forbrig, University of Rostock, Germany

Phillip Laplante, Penn State University, USA

Robert France, Colorado State University, USA

Roy Sterritt, University of Ulster, Nothern Ireland

Shawn Bohner, Rose-Hulman Institute of Technology (RHIT), USA

Thomas Hildebrandt, ITU Copenhagen, Denmark

Thomas Jensen, IRISA/CNRS, France

Vera Werneck, Universidade Estadual do Rio de Janeiro, Brazil

Wolfgang Reisig, Humboldt University Berlin, Germany

Yamine Ait Ameur, ENSMA, France

Zhiming Liu, United Nations University, China


From chainone at gmail.com  Mon Jan  5 19:44:04 2009
From: chainone at gmail.com (chain one)
Date: Tue, 6 Jan 2009 11:44:04 +0800
Subject: [antlr-interest] How to modify this rule?
Message-ID: <5a92ffb60901051944v6e443b5bx3a9753ce8e3f1731@mail.gmail.com>

enumeration_type
: DOT IDENT DOT
;

DOT
: '.'
;
fragment
DIGIT
: '0'..'9'
;

INT
  : '-'? DIGIT+
 ;

FLOAT
:   '.' DIGIT* EXPONENT?
     ;

fragment
EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;



IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

when the input is ".EXTERNAL." , the lexer don't recognize '.' as a DOT but
try to recognize it as a FLOAT. it will fail after ".E" has been recognized.


How to make the lexer capable of back track? That is also to say if it fails
to recognize a FLOAT, it will try DOT.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090106/fa692806/attachment.html 

From cummings at kjchome.homeip.net  Mon Jan  5 19:53:22 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Mon, 05 Jan 2009 22:53:22 -0500
Subject: [antlr-interest] How to modify this rule?
In-Reply-To: <5a92ffb60901051944v6e443b5bx3a9753ce8e3f1731@mail.gmail.com>
References: <5a92ffb60901051944v6e443b5bx3a9753ce8e3f1731@mail.gmail.com>
Message-ID: <4962D5B2.6090502@kjchome.homeip.net>

chain one wrote:
> enumeration_type 
> : DOT IDENT DOT 
> ;
> 
> DOT
> : '.'
> ;
> fragment
> DIGIT
> : '0'..'9'
> ;
>    
> INT
>   : '-'? DIGIT+ 
>  ;
> 
> FLOAT
> :   '.' DIGIT* EXPONENT?
>      ;
>     
> fragment
> EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;
>     
> 
> 
> IDENT
> 
> : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
> ;
> 
> when the input is ".EXTERNAL." , the lexer don't recognize '.' as a DOT 
> but try to recognize it as a FLOAT. it will fail after ".E" has been 
> recognized.

You need to merge your DOT rule with your FLOAT rule and set the type 
manually like below:

fragment
FLOAT :
       ;

DOT : '.' ( DIGIT+ EXPONENT? { $type = FLOAT; }
           | EXPONENT         { $type = FLOAT; } )
     ;

See this page for a larger example:

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs

> How to make the lexer capable of back track? That is also to say if it 
> fails to recognize a FLOAT, it will try DOT.

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From zenzike at gmail.com  Tue Jan  6 06:51:03 2009
From: zenzike at gmail.com (Zenzike)
Date: Tue, 6 Jan 2009 14:51:03 +0000
Subject: [antlr-interest] Allowing lexer modes
Message-ID: <31e910dd0901060651m77295ff8udfb046ab8036c697@mail.gmail.com>

Dear all,

I'm trying to make a lexer that changes modes depending on semantic predicates,
but the grammar is pretty temperamental, sometimes the
PROSE rule is not used at all, and sometimes it is used!

The idea of this grammar is to have prose that is interspersed with
expressions.

expressions are started and ended with the symbols '\[' and '\]'.
One line expressions can be started with %%.
Comments are started with %.

The idea is that the following string is valid:

<<<
prose that might contains operators like + and -
followed by an expression:
[
a + b
x * y - z

f - g

]
and then maybe some comments that
% are invisibile and
cannot be seen. % (and might be in mid sentence!)

Directives are the same as one line math modes
%% [
but they can be interspersed with prose
%% h + j %comments are valid here too
and are not affected at all
%% ]

This includes comments and directives in expressions:
[
u + v % this is just an example
%% w + x - y % as well as directives

]
I think that covers almost everything!
<<<

The grammar I've constructed is below -- could anybody tell me if this
is the right approach?

As an alternative, I've thought about using "island grammars",
triggered by the '\start' and '%%' tokens,
but I'm not sure which would be better.

Thanks,

Zenzike



grammar Modes;

options {
  language = Java;
}

@lexer::members {
static boolean text = true;
static boolean text0 = true;
static boolean frag = false;

public boolean check(String s) {
  for (int i=0; i<s.length(); i++) {
    if (input.LA(i+1) != s.charAt(i))
      return false;
  }
  return true;
}

public boolean isCode() {
  String[] code = {
    "\\begin",
    "\\end",
    "<"
  };


  for (String c:code) {
    if (check(c))
      return true;
  }
  return false;
}
}



prog
  : stat+
  ;
stat
  : BEXPR (expr)+ EEXPR
  ;
expr
  : ID (binop ID)*
  ;
binop
  : PLUS | MINUS | TIMES | DIV | CROSS
  ;


COMMENT : {input.LA(1)=='\%' && input.LA(2)!='\%'}?=> '%' (~NL)* NL*
{
if (frag) {
    frag=false;
    text=text0;
}
$channel=HIDDEN;};

WS      : (' '|'\t') {$channel=HIDDEN;};


VERBATIM: {text}?=> '<' .* '>'  {$channel=HIDDEN;};

BEXPR   : '\\begin'         {text=false;};
EEXPR   : '\\end'         {text=true; };
FRAGMENT: MODMOD      {text0=text;text=false;frag=true;$channel=HIDDEN;};

fragment
MODMOD  : '%%'|'^';

PROSE       : {text && !frag && !isCode() && !check("\%")}?=> .
{
while (!isCode() && !check("\%") && !check("\r") && !check("\n")) {
  matchAny();
  if (state.failed)
    return;
}
}
              NL*
              {$channel=HIDDEN; }
            ;

// I also tried the approaches below ...
//PROSE   : {text && !frag && !isCode()}?=>  ({!isCode() &&
!check("\r") && !check("\n")}?=> ~'%')+ NL* {$channel=HIDDEN;};
/*
PROSE       : {text && !frag && !isCode() && !check("\%") }?=> . NL*
              {$channel=HIDDEN; }
            ;
*/

ENDLINE : NL+
{if (frag) {
    frag=false;
    text=text0;
}
$channel=HIDDEN;};

fragment
NL      : ('\r'|'\n')
        ;

fragment LETTER : 'a'..'z'|'A'..'Z';
fragment DIGIT  : '0'..'9';


PLUS    : '+';
MINUS   : '-';
TIMES   : '*';
DIV     : '/';
CROSS   : 'cross';  \\these should not be tokenized as CROSS or BANG
when in PROSE.
BANG    : '\bang';

ID      : LETTER (LETTER|DIGIT)*
        | '\\' (LETTER|DIGIT)+
        ;

From Jack.Pan at Lewtan.com  Tue Jan  6 11:38:36 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Tue, 6 Jan 2009 14:38:36 -0500
Subject: [antlr-interest] Lexical code to recognize a date?
Message-ID: <A774F8AAACE57E47AB2D82E7317A724805F22E10@exchange6.corp.lewtan.com>

Hi,

I'd like to recognize '2/3/2008' as date, while anything else like '2/3
/ 2008' as division. The following lex code recognizes date fine, but it
messes up division...

I'm fairly new to ANTLR. I'm wondering if someone can point me a
direction for this problem?

DATE
	: DATENUM '/' DATENUM '/' YEARNUM
	;

fragment
DATENUM
	:	('0'..'9') ('0'..'9')?
	;
	
fragment	
YEARNUM
	:	('19'|'20') ('0'..'9')('0'..'9')
	;


Thanks,

Jack




From wbgillis at gmail.com  Tue Jan  6 17:07:27 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Tue, 6 Jan 2009 19:07:27 -0600
Subject: [antlr-interest] Skipping thru text looking for keywords to parse
	...
Message-ID: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>

The ANTLR book and other examples I have demonstrate explicitly delineated comments.

Are there any examples or email archive discussion where the bulk of text being parsed is, implicitly, comments that should be ignored (i.e. there is no metacharacter(s) indicating what is a comment)...and, the parser is only concerned with various keywords?

For example, ...

--------------------------------------- Begin Example  ---------------------------------------
This is a bunch of text we don't care anything about, it is comments and we want to scan
text until we come to a keyword(s) that indicate we have something to parse such as this...

KEYWORD=value1

This is a bunch of text discussion that we do not want parsed, but rather to skip over it until we find yet 
another keyword ... blah blah blah ...

    KEYWORD2=value2        MODIFIER1=modValueA

    A bunch more text we don't care anything about until we find yet another keyword blah blah blah ...

    KEYWORD=valueX        MODIFIER2=modValueB

    blah blah blah etc. etc. ad nausea...
--------------------------------------- End Example  ---------------------------------------

Thanks in advance, 
Ben


 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090106/79a60d89/attachment.html 

From mats.ekberg at arcticgroup.se  Tue Jan  6 22:21:55 2009
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Wed, 07 Jan 2009 07:21:55 +0100
Subject: [antlr-interest] expression parser example Expr.g dont work
Message-ID: <1231309315.10250.4.camel@meg-laptop>

I have stripped the classical expr.g example and when I run it in
ANTLRWorks it dont work.
The input "(1 + 2) * 3 - 4" (with a newline at the end) just recognizes
"( 1 + 2" and the nothing more.
How come?

grammar Expr;

prog:   stat+ ;

stat:   expr NEWLINE 
    |   NEWLINE
    ;

expr
    :   multExpr ( '+' multExpr | '-' multExpr )*
    ;

multExpr 
    :   atom ('*' atom )*
    ; 

atom 
    :   INT 
    |   '(' expr ')'
    ;

INT :   '0'..'9'+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/64dd4655/attachment.html 

From snyder at t-vec.com  Wed Jan  7 06:55:58 2009
From: snyder at t-vec.com (Chris Snyder)
Date: Wed, 7 Jan 2009 09:55:58 -0500
Subject: [antlr-interest] expression parser example Expr.g dont work
In-Reply-To: <1231309315.10250.4.camel@meg-laptop>
References: <1231309315.10250.4.camel@meg-laptop>
Message-ID: <5FC24F25003D4D85A37303A6C02F349F@Gizmo>

stat:   expr NEWLINE 

 

looks like is should just be

 

stat:   expr 

 

The current form hits the '(' and then looks for expr which requires a
NEWLINE after '2' which you don't have.

 

I didn't verify this though.

 

C





  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mats Ekberg
Sent: Wednesday, January 07, 2009 1:22 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] expression parser example Expr.g dont work

 

I have stripped the classical expr.g example and when I run it in ANTLRWorks
it dont work.
The input "(1 + 2) * 3 - 4" (with a newline at the end) just recognizes "( 1
+ 2" and the nothing more.
How come?

grammar Expr;

prog:   stat+ ;

stat:   expr NEWLINE 
    |   NEWLINE
    ;

expr
    :   multExpr ( '+' multExpr | '-' multExpr )*
    ;

multExpr 
    :   atom ('*' atom )*
    ; 

atom 
    :   INT 
    |   '(' expr ')'
    ;

INT :   '0'..'9'+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ; 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/ac27d873/attachment.html 

From mats.ekberg at arcticgroup.se  Wed Jan  7 07:43:29 2009
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Wed, 07 Jan 2009 16:43:29 +0100
Subject: [antlr-interest] expression parser example Expr.g dont work
In-Reply-To: <5FC24F25003D4D85A37303A6C02F349F@Gizmo>
References: <1231309315.10250.4.camel@meg-laptop>
	<5FC24F25003D4D85A37303A6C02F349F@Gizmo>
Message-ID: <1231343009.10250.20.camel@meg-laptop>

I removed the NEWLINE requirement entierly and evaluates "expr" in
ANTLRWorks, same result. Sorry.
The input "(1 + 2) * 3 - 4" (with a newline at the end) just recognizes
"( 1 + 2" and the nothing more.

grammar Expr;

expr
    :   multExpr ( '+' multExpr | '-' multExpr )*
    ;

multExpr 
    :   atom ('*' atom )*
    ; 

atom 
    :   INT 
    |   '(' expr ')'
    ;

INT :   '0'..'9'+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ;

ons 2009-01-07 klockan 09:55 -0500 skrev Chris Snyder:
> stat:   expr NEWLINE 
> 
>  
> 
> looks like is should just be
> 
>  
> 
> stat:   expr 
> 
>  
> 
> The current form hits the ?(? and then looks for expr which requires a
> NEWLINE after ?2? which you don?t have.
> 
>  
> 
> I didn?t verify this though.
> 
>  
> 
> C
> 
> 
> 
> 
>                                    
> ______________________________________________________________________
> 
> From:antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mats Ekberg
> Sent: Wednesday, January 07, 2009 1:22 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] expression parser example Expr.g dont work
> 
> 
> 
>  
> 
> I have stripped the classical expr.g example and when I run it in
> ANTLRWorks it dont work.
> The input "(1 + 2) * 3 - 4" (with a newline at the end) just
> recognizes "( 1 + 2" and the nothing more.
> How come?
> 
> grammar Expr;
> 
> prog:   stat+ ;
> 
> stat:   expr NEWLINE 
>     |   NEWLINE
>     ;
> 
> expr
>     :   multExpr ( '+' multExpr | '-' multExpr )*
>     ;
> 
> multExpr 
>     :   atom ('*' atom )*
>     ; 
> 
> atom 
>     :   INT 
>     |   '(' expr ')'
>     ;
> 
> INT :   '0'..'9'+ ;
> NEWLINE:'\r'? '\n' ;
> WS  :   (' '|'\t')+ {skip();} ; 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/71e74463/attachment.html 

From jimi at temporal-wave.com  Wed Jan  7 08:31:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 07 Jan 2009 08:31:23 -0800
Subject: [antlr-interest] expression parser example Expr.g dont work
In-Reply-To: <1231343009.10250.20.camel@meg-laptop>
References: <1231309315.10250.4.camel@meg-laptop>	<5FC24F25003D4D85A37303A6C02F349F@Gizmo>
	<1231343009.10250.20.camel@meg-laptop>
Message-ID: <4964D8DB.7050204@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/759cfc28/attachment.html 

From khoslavineet79 at yahoo.com  Wed Jan  7 10:15:42 2009
From: khoslavineet79 at yahoo.com (Vineet Khosla)
Date: Wed, 7 Jan 2009 10:15:42 -0800 (PST)
Subject: [antlr-interest] ANTLRWorks - "Find Usage" does not find usages in
	composite grammars
Message-ID: <580386.1436.qm@web36908.mail.mud.yahoo.com>

Hi all,

In ANTLRWorks, "Find Usage" does not find usages in composite grammars.
Does anyone know if this a bug or is an incomplete feature?
Or if someone is using some other IDE which does not have this problem.

Vineet Khosla



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/0ef05e77/attachment.html 

From Jack.Pan at Lewtan.com  Wed Jan  7 10:40:01 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Wed, 7 Jan 2009 13:40:01 -0500
Subject: [antlr-interest] expression parser example Expr.g dont work
Message-ID: <A774F8AAACE57E47AB2D82E7317A724805F22E12@exchange6.corp.lewtan.com>

How does AntlrWorks pick the default starting rule? It is the first rule in alphabetical order, neither is the first rule in grammar file.

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, January 07, 2009 11:31 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] expression parser example Expr.g dont work

 

Mats Ekberg wrote: 

I removed the NEWLINE requirement entierly and evaluates "expr" in ANTLRWorks, same result. Sorry.
The input "(1 + 2) * 3 - 4" (with a newline at the end) just recognizes "( 1 + 2" and the nothing more.


Place an EOF in the mix:

stat : expr? EOF ;

And fix your NEWLINE:

NEWLINE: '\r'? '\n' { $channel = HIDDEN; } ;


Then when you run ANTLR Works, make sure that you are choosing the stat rule as the start rule (and use the debugger, not the interpretter).


Jim




grammar Expr;

expr
    :   multExpr ( '+' multExpr | '-' multExpr )*
    ;

multExpr 
    :   atom ('*' atom )*
    ; 

atom 
    :   INT 
    |   '(' expr ')'
    ;

INT :   '0'..'9'+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ;

ons 2009-01-07 klockan 09:55 -0500 skrev Chris Snyder: 

stat:   expr NEWLINE 

 

looks like is should just be

 

stat:   expr 

 

The current form hits the ?(? and then looks for expr which requires a NEWLINE after ?2? which you don?t have.

 

I didn?t verify this though.

 

C




  _____  

	From:antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mats Ekberg
	Sent: Wednesday, January 07, 2009 1:22 AM
	To: antlr-interest at antlr.org
	Subject: [antlr-interest] expression parser example Expr.g dont work
	
	

	 
	
	I have stripped the classical expr.g example and when I run it in ANTLRWorks it dont work.
	The input "(1 + 2) * 3 - 4" (with a newline at the end) just recognizes "( 1 + 2" and the nothing more.
	How come?
	
	grammar Expr;
	
	prog:   stat+ ;
	
	stat:   expr NEWLINE 
	    |   NEWLINE
	    ;
	
	expr
	    :   multExpr ( '+' multExpr | '-' multExpr )*
	    ;
	
	multExpr 
	    :   atom ('*' atom )*
	    ; 
	
	atom 
	    :   INT 
	    |   '(' expr ')'
	    ;
	
	INT :   '0'..'9'+ ;
	NEWLINE:'\r'? '\n' ;
	WS  :   (' '|'\t')+ {skip();} ; 
	
	

	List: http://www.antlr.org/mailman/listinfo/antlr-interest
	Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
	    

 


  _____  



 
 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
  

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/9dab5ab6/attachment.html 

From wbgillis at gmail.com  Wed Jan  7 11:50:27 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Wed, 7 Jan 2009 13:50:27 -0600
Subject: [antlr-interest] ANTLRWorks Interpreter Tree Diagrams
Message-ID: <41B88E9B807B492C9FEA036F2ECEA00A@homelaptop>

is ANTLRWorks interpreter tab tree diagrams supposed to reflect AST rewrite instructions in the grammar?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/681324f8/attachment.html 

From parrt at cs.usfca.edu  Wed Jan  7 12:24:25 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 7 Jan 2009 12:24:25 -0800
Subject: [antlr-interest] ANTLRWorks Interpreter Tree Diagrams
In-Reply-To: <41B88E9B807B492C9FEA036F2ECEA00A@homelaptop>
References: <41B88E9B807B492C9FEA036F2ECEA00A@homelaptop>
Message-ID: <31FDD79B-0F77-4DF6-B0BA-6DBB1C10DE76@cs.usfca.edu>

nope. interpreter can't do rewrites for now.
Ter
On Jan 7, 2009, at 11:50 AM, Ben Gillis wrote:

> is ANTLRWorks interpreter tab tree diagrams supposed to reflect AST  
> rewrite instructions in the grammar?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/6f0f65df/attachment.html 

From parrt at cs.usfca.edu  Wed Jan  7 12:24:36 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 7 Jan 2009 12:24:36 -0800
Subject: [antlr-interest] ANTLRWorks - "Find Usage" does not find usages
	in composite grammars
In-Reply-To: <580386.1436.qm@web36908.mail.mud.yahoo.com>
References: <580386.1436.qm@web36908.mail.mud.yahoo.com>
Message-ID: <00FDD3D6-34B5-44A4-BF18-AF5B5A0B093D@cs.usfca.edu>

ah. yeah. we'll have to fix that.
Ter
On Jan 7, 2009, at 10:15 AM, Vineet Khosla wrote:

> Hi all,
>
> In ANTLRWorks, "Find Usage" does not find usages in composite  
> grammars.
> Does anyone know if this a bug or is an incomplete feature?
> Or if someone is using some other IDE which does not have this  
> problem.
>
> Vineet Khosla
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/a8097b46/attachment.html 

From wbgillis at gmail.com  Wed Jan  7 12:37:19 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Wed, 7 Jan 2009 14:37:19 -0600
Subject: [antlr-interest] AST Visualization with CSharp2
Message-ID: <B9A8AF7DD6464919A598763356FCB286@homelaptop>

w/ CSharp2 target: anyone graphically visualizing ASTs to see the effects of AST rewrites in the grammar?
if so, is that available/shared?

checking before I possibly reinvent the wheel.

Thanks,
Ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/a1b483fd/attachment.html 

From mats.ekberg at arcticgroup.se  Wed Jan  7 12:47:51 2009
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Wed, 7 Jan 2009 21:47:51 +0100
Subject: [antlr-interest] expression parser example Expr.g dont work
In-Reply-To: <A774F8AAACE57E47AB2D82E7317A724805F22E12@exchange6.corp.lewtan.com>
References: <A774F8AAACE57E47AB2D82E7317A724805F22E12@exchange6.corp.lewtan.com>
Message-ID: <E8D393BB-B800-4781-B271-70208D726C54@arcticgroup.se>

It is selected with a dropbox

Skickat fr?n min iPhone

7 jan 2009 kl. 19.40 skrev "Jack Pan" <Jack.Pan at Lewtan.com>:

> How does AntlrWorks pick the default starting rule? It is the first  
> rule in alphabetical order, neither is the first rule in grammar file.
>
>
>
>
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org 
> ] On Behalf Of Jim Idle
> Sent: Wednesday, January 07, 2009 11:31 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] expression parser example Expr.g dont  
> work
>
>
>
> Mats Ekberg wrote:
>
> I removed the NEWLINE requirement entierly and evaluates "expr" in  
> ANTLRWorks, same result. Sorry.
> The input "(1 + 2) * 3 - 4" (with a newline at the end) just  
> recognizes "( 1 + 2" and the nothing more.
>
>
> Place an EOF in the mix:
>
> stat : expr? EOF ;
>
> And fix your NEWLINE:
>
> NEWLINE: '\r'? '\n' { $channel = HIDDEN; } ;
>
>
> Then when you run ANTLR Works, make sure that you are choosing the  
> stat rule as the start rule (and use the debugger, not the  
> interpretter).
>
>
> Jim
>
>
>
> grammar Expr;
>
> expr
>     :   multExpr ( '+' multExpr | '-' multExpr )*
>     ;
>
> multExpr
>     :   atom ('*' atom )*
>     ;
>
> atom
>     :   INT
>     |   '(' expr ')'
>     ;
>
> INT :   '0'..'9'+ ;
> NEWLINE:'\r'? '\n' ;
> WS  :   (' '|'\t')+ {skip();} ;
>
> ons 2009-01-07 klockan 09:55 -0500 skrev Chris Snyder:
>
> stat:   expr NEWLINE
>
>
>
> looks like is should just be
>
>
>
> stat:   expr
>
>
>
> The current form hits the ?(? and then looks for expr which  
> requires a NEWLINE after ?2? which you don?t have.
>
>
>
> I didn?t verify this though.
>
>
>
> C
>
>
>
> From:antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org 
> ] On Behalf Of Mats Ekberg
> Sent: Wednesday, January 07, 2009 1:22 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] expression parser example Expr.g dont work
>
>
>
>
> I have stripped the classical expr.g example and when I run it in  
> ANTLRWorks it dont work.
> The input "(1 + 2) * 3 - 4" (with a newline at the end) just  
> recognizes "( 1 + 2" and the nothing more.
> How come?
>
> grammar Expr;
>
> prog:   stat+ ;
>
> stat:   expr NEWLINE
>     |   NEWLINE
>     ;
>
> expr
>     :   multExpr ( '+' multExpr | '-' multExpr )*
>     ;
>
> multExpr
>     :   atom ('*' atom )*
>     ;
>
> atom
>     :   INT
>     |   '(' expr ')'
>     ;
>
> INT :   '0'..'9'+ ;
> NEWLINE:'\r'? '\n' ;
> WS  :   (' '|'\t')+ {skip();} ;
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/22259975/attachment.html 

From walters at verbum.org  Wed Jan  7 15:35:14 2009
From: walters at verbum.org (Colin Walters)
Date: Wed, 7 Jan 2009 18:35:14 -0500
Subject: [antlr-interest] lexing shell-like strings
Message-ID: <faa16b610901071535y3b7848c9y207769f70e34f32@mail.gmail.com>

I have a project for which I would like to lex strings that have
somewhat "Unix shell-like" quoting semantics.  Unix shell strings are
quite funky, but I'd be happy if I could express the following:

// Some straightforward stuff
somestring => [Token("somestring")]
"somestring" => [Token("somestring")]
two strings => [Token("two"), Token("strings")]
"one string" => [Token("one string")]
"error => parse error

// Here it gets a bit more subtle
one"string" => [Token("onestring")]
one"string"only =>  [Token("onestringonly")]
one\"string\"only => [Token("one\"string\"only")]

etc.  At this point I don't need to replicate the differences between
' and ", though knowing how to would be interesting.

I'm sort of embarassed to show you my attempts, but I've attached the
closest I have.  It doesn't work for the one\"string\" case though.

One thing I wanted to try but couldn't find much documentation on is
writing a essentially a totally custom lexer; I know how to parse
these strings in raw Java, but it wasn't completely clear to me which
methods to override, etc.  Ideally of course I could express these
strings in the ANTLR lexer language, hopefully someone can point me
the right way there!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: shellLike.g
Type: application/octet-stream
Size: 258 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/ddc15201/attachment.obj 

From wbgillis at gmail.com  Wed Jan  7 19:22:11 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Wed, 7 Jan 2009 21:22:11 -0600
Subject: [antlr-interest] AST Rewrite Question
Message-ID: <B733B73FFFAA48E1A603415D311E4DEF@homelaptop>

I'm curious why labels do not work with AST rewrites in a rule such as this:

myRule : 'KEYWORD' '=' (INTEGER | FLOATNUMBER | HEXNUMBER | identifier | QUOTED_STRING)


per the Definitive Guide to ANTLR, it *seems* like this would work:

myRule : 'KEYWORD' '=' keyvalue=(INTEGER | FLOATNUMBER | HEXNUMBER | identifier | QUOTED_STRING) -> ^(KEYWORD $keyvalue)


and, the above is certainly more intuitive (no?) than what does work:

myRule : 'KEYWORD' '=' (INTEGER | FLOATNUMBER | HEXNUMBER | identifier | QUOTED_STRING) -> ^(KEYWORD INTEGER* FLOATNUMBER* HEXNUMBER* identifier* QUOTED_STRING*)


The keyvalue example throws a RewriteEmptyStreamException because the generated code adds a null node to a RewriteRuleTokenStream, which causes a .NextNode() call to bomb out because there's no tokens in the stream at the time that call is made.  

I'm rather puzzled why that's the case.

Question: would the label format work if I follow some guidelines in subrules???  

Regards,
Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090107/cfc73c22/attachment.html 

From antlr at mirality.co.nz  Wed Jan  7 21:54:36 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 08 Jan 2009 18:54:36 +1300
Subject: [antlr-interest] AST Rewrite Question
In-Reply-To: <B733B73FFFAA48E1A603415D311E4DEF@homelaptop>
References: <B733B73FFFAA48E1A603415D311E4DEF@homelaptop>
Message-ID: <20090108055445.AEB0C341845C@www.antlr.org>

At 16:22 8/01/2009, Ben Gillis wrote:
>per the Definitive Guide to ANTLR, it *seems* like this would 
>work:
>
>myRule : 'KEYWORD' '=' keyvalue=(INTEGER | FLOATNUMBER | 
>HEXNUMBER | identifier | QUOTED_STRING) -> ^(KEYWORD $keyvalue)

You can't assign a label to a () block.  But you can assign one to 
a rule:

myRule : 'KEYWORD' '=' keyvalue=myRuleValue -> ^(KEYWORD 
$keyvalue);
myRuleValue : INTEGER | FLOATNUMBER | HEXNUMBER | identifier | 
QUOTED_STRING;

For that matter, you could leave out the label entirely:

myRule : 'KEYWORD' '=' myRuleValue -> ^(KEYWORD $myRuleValue);
myRuleValue : INTEGER | FLOATNUMBER | HEXNUMBER | identifier | 
QUOTED_STRING;

or:

myRule : 'KEYWORD'^ '='! myRuleValue;
myRuleValue : INTEGER | FLOATNUMBER | HEXNUMBER | identifier | 
QUOTED_STRING;

or:

myRule : 'KEYWORD'^ '='! (INTEGER | FLOATNUMBER | HEXNUMBER | 
identifier | QUOTED_STRING);


(And, yes, ANTLR really ought to issue a compile-time error when 
you try that [or just silently make it work], instead of producing 
code that will generate runtime errors.  Stuff like this will 
hopefully be resolved once ANTLR v3 finally gets self-hosted.)


From antlr at mirality.co.nz  Wed Jan  7 21:57:29 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 08 Jan 2009 18:57:29 +1300
Subject: [antlr-interest] Skipping thru text looking for keywords to
 parse ...
In-Reply-To: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>
References: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>
Message-ID: <20090108055738.CC08A341845C@www.antlr.org>

At 14:07 7/01/2009, Ben Gillis wrote:
>Are there any examples or email archive discussion where the bulk 
>of text being parsed is, implicitly, comments that should be 
>ignored (i.e. there is no metacharacter(s) indicating what is a 
>comment)...and, the parser is only concerned with various 
>keywords?

Look up "filtering lexers" (or the "filter=true" option in a 
lexer-only grammar).  That might be the sort of thing you're 
after.

Alternatively, you could just define a lexer rule that consumes 
(and discards) everything up to (but not including) the next 
interesting keyword.


From vasanthi.ak at gmail.com  Thu Jan  8 03:27:36 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Thu, 8 Jan 2009 16:57:36 +0530
Subject: [antlr-interest] Please provide fix for the errors in STDC Grammar
Message-ID: <307cfdc90901080327o2f37ad62oe040955f100e7723@mail.gmail.com>

Hi All

I get the below 3 errors

How do I fix the above 3 errors?

This is really very very important and urgent.. Please help me in this
regard.
Please provide fix for  the same.

1:

typedef unsigned short int USHORT;
typedef USHORT STATUS;
STATUS status;


When ever it tries to the read the token it gives the below

[ unexpected token: status ]



2:  extern word __extension__({ __uint16_t __swap16gen_x = (word w);
(__uint16_t)((__swap16gen_x & 0xff) << 8 | (__swap16gen_x & 0xff00) >> 8);
});



I get the below error

unexpected token: {

how to I fix it....  in the below code



translationUnit

:

{_cm.enterExternalScope(-1);}

(externalList)?

{_cm.exitExternalScope();}

;

externalList

: (externalDef)+

;

externalDef

{_cm.methodStartLine = _cm.lastIdLine;}

: ( "typedef" | declaration )=> declaration

| (functionDef) => functionDef

| functionDef

| asm_expr



;

asm_expr

: "asm"

("volatile")? LCURLY expr RCURLY (SEMI)+

;

attr_expr

: "__attribute__" LPAREN expr RPAREN

;

declaration

{_cm.beginFunctionDeclaration();}

: (SEMI)* declSpecifiers (initDeclList)? (SEMI)+

{_cm.endFunctionDeclaration();}

;

declSpecifiers

{_cm.lastType ="";_cm.qualifier = "";}

: ( options { warnWhenFollowAmbig = false;}:

storageClassSpecifier

| typeQualifier

| (options {generateAmbigWarnings = false;}:

"struct" | "union" | "enum" | typeSpecifier)=> typeSpecifier

)+

;



3:

 Token *pToken = __builtin_va_arg(ap, Token*);

i get the below error when it tries to read the above line..

unexpected token: *

additiveExpr

: multExpr

((PLUS|MINUS) multExpr)*

;

multExpr

: castExpr

((STAR|DIV|MOD) castExpr)*

;

castExpr

: (("___typeof")? LPAREN typeName RPAREN)=>

("___typeof")? LPAREN typeName RPAREN

(options {generateAmbigWarnings = false;}:castExpr)?

| unaryExpr

// Vasanthi --pearl

| (options {generateAmbigWarnings = false;}:

(typeQualifier)* (typeSpecifier)+ (STAR)?)

=>(typeQualifier)*(typeSpecifier)+ (STAR)?

;



How do I fix the above 3 errors?

This is really very very important and urgent.. Please help me in this
regard.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090108/89a73a85/attachment.html 

From g.r.vansickle at att.net  Thu Jan  8 06:43:31 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Thu, 8 Jan 2009 08:43:31 -0600
Subject: [antlr-interest] Please provide fix for the errors in STDC
	Grammar
In-Reply-To: <307cfdc90901080327o2f37ad62oe040955f100e7723@mail.gmail.com>
References: <307cfdc90901080327o2f37ad62oe040955f100e7723@mail.gmail.com>
Message-ID: <B188C9388F174D1D8A16E46CEBAAB83E@DFW5RB41>

There are several problems with that grammar, but that's not your real
problem:

> Hi All
>  
> I get the below 3 errors 
> 
> How do I fix the above 3 errors?
> 
> This is really very very important and urgent.. Please help 
> me in this regard.
> 

...and also, just a general comment: Regardless of how important and urgent
your problem is, unless you're paying real $$$ for somebody to care, they
simply aren't going to.  In fact it's probably counterproductive; I know for
me personally, the more "important and urgent" a non-paying customer claims
their problem is, the less inclined I am to help.  Just an FYI.  And if you
bought the book, well, I guess you are a paying customer, so nevermind ;-),
but even then, seriously, such statements don't buy you anything.

> Please provide fix for  the same.
>  
> 1:
>  
> typedef unsigned short int USHORT;
> typedef USHORT STATUS;
> STATUS status;
>  
> When ever it tries to the read the token it gives the below
> 
> [ unexpected token: status ]
> 

Last I tried it, this did work.  It's possible you're running into the issue
that the grammar only has one identifier namespace while C actually has four
separate namespaces, but feeding just that 3-line snippet into the grammar
should/did work.

>  
> 
> 2:  extern word __extension__({ __uint16_t __swap16gen_x = 
> (word w); (__uint16_t)((__swap16gen_x & 0xff) << 8 | 
> (__swap16gen_x & 0xff00) >> 8); });
> 
>  
> 
> I get the below error 
> 
> unexpected token: {
> 

That's loaded with GCCisms (__extension__ for one).  You'll have to augment
the lexer and parser grammars to handle these non-ANSI/C89/C0x constructs.
I ran into this one myself, and temporarily got around it by simply
"absorbing" anything that looked like "__extension__ ( <whatever> )".

> 
> 3:
> 
>  Token *pToken = __builtin_va_arg(ap, Token*);
> 

Same thing here, __builtin_va_arg() is a GCC built-in that you'll have to
explicitly handle somehow.

> How do I fix the above 3 errors?
> 
> This is really very very important and urgent.. Please help 
> me in this regard.

Again, see above. 

-- 
Gary R. Van Sickle
 


From ian at telematter.com  Thu Jan  8 09:12:43 2009
From: ian at telematter.com (ian eyberg)
Date: Thu, 8 Jan 2009 11:12:43 -0600
Subject: [antlr-interest] mismatched character
Message-ID: <20090108171243.GA4920@localhost>

Hi list,
  I have a problem with a very simple
grammar. Whenever I try to uncomment the
lexer rule, ANTE, to this grammar it spits out a

line 1:18 mismatched character 's' expecting 'n'


test file:
*** TURN *** [Ad As 6d] [Ts]

the grammar:


grammar Blah;
options {language=Java;}

line  : caction .* NEWLINE
        { System.out.println("YO"); } ;

caction :  TURN cards '] [' ca=cards ']'
          { System.out.println($ca.text); } ;

cards : ((ALPHA | INT) WS?)+ ;

fragment LOWER_LETTER   : 'a'..'z' ;
fragment UPPER_LETTER   : 'A'..'Z' ;
ALPHA : (LOWER_LETTER | UPPER_LETTER)+ ;

COMMA_SP: ',' ' ' ;

fragment DIGIT  : '0'..'9' ;
INT : DIGIT+ COMMA_SP?;

NEWLINE : '\r'? '\n' ;

WS      :   ' '+ ;
COLON_SPACE : ': ' ;

TURN      : '*** TURN *** [' ;
//ANTE  : ' Ante ' ;



Can anyone spot the obvious that I'm missing?

Thanks,
Ian

From ian at telematter.com  Thu Jan  8 10:47:18 2009
From: ian at telematter.com (ian eyberg)
Date: Thu, 8 Jan 2009 12:47:18 -0600
Subject: [antlr-interest] mismatched character
Message-ID: <20090108184718.GA10050@localhost>

>Hi list,
>  I have a problem with a very simple
>grammar. Whenever I try to uncomment the
>lexer rule, ANTE, to this grammar it spits out a
>
>line 1:18 mismatched character 's' expecting 'n'
>
>
>test file:
>*** TURN *** [Ad As 6d] [Ts]
>
>the grammar:
>
>
>grammar Blah;
>options {language=Java;}
>
>line  : caction .* NEWLINE
>        { System.out.println("YO"); } ;
>
>caction :  TURN cards '] [' ca=cards ']'
>          { System.out.println($ca.text); } ;
>
>cards : ((ALPHA | INT) WS?)+ ;
>
>fragment LOWER_LETTER   : 'a'..'z' ;
>fragment UPPER_LETTER   : 'A'..'Z' ;
>ALPHA : (LOWER_LETTER | UPPER_LETTER)+ ;
>
>COMMA_SP: ',' ' ' ;
>
>fragment DIGIT  : '0'..'9' ;
>INT : DIGIT+ COMMA_SP?;
>
>NEWLINE : '\r'? '\n' ;
>
>WS      :   ' '+ ;
>COLON_SPACE : ': ' ;
>
>TURN      : '*** TURN *** [' ;
>//ANTE  : ' Ante ' ;
>
>
>
>Can anyone spot the obvious that I'm missing?
>
>Thanks,
>Ian

I figured it out ...

I re-arranged the grammar to have the
ANTE token by itself with no spaces and
used the WS token surrounding it instead.

Thanks,
Ian

From spamhole at gmx.at  Thu Jan  8 11:17:43 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Thu, 08 Jan 2009 20:17:43 +0100
Subject: [antlr-interest] mismatched character
In-Reply-To: <20090108171243.GA4920@localhost>
References: <20090108171243.GA4920@localhost>
Message-ID: <49665157.7020105@gmx.at>


Oh how many times have I run into this problem... no it's not obvious...

The lexer always tries to return the token that matches the most 
characters *even* if the input characters don't match the whole token.

In your grammar the problem starts at " As". What you'd like to get is a 
WS followed by an ALPHA. But what the lexer tries to give you instead is 
an incomplete ANTE because the WS matches only one character, while ANTE 
matches two characters. So ANTE wins and WS gets discarded. Stupid but 
performant lexer. It throws the exception as the next character required 
to match ANTE isn't 'n' but 's' and since it has already forgotten about 
the correct but discarded WS token.

I see you have already fixed the problem in the meantime. I would also 
have removed the spaces from the ANTE token. I also wonder if you even 
really need the spaces at all. Couldn't you just discard them so they 
don't end up in the parser rules? It doesn't really matter but would 
simplify your rules. Also I wouldn't create tokens like "INT : DIGIT+ 
COMMA_SP?". Better pull that up into parser rules and put as little into 
lexer rules as possible.

hope that helps,
Markus

ian eyberg schrieb:
> Hi list,
>   I have a problem with a very simple
> grammar. Whenever I try to uncomment the
> lexer rule, ANTE, to this grammar it spits out a
>
> line 1:18 mismatched character 's' expecting 'n'
>
>
> test file:
> *** TURN *** [Ad As 6d] [Ts]
>
> the grammar:
>
>
> grammar Blah;
> options {language=Java;}
>
> line  : caction .* NEWLINE
>         { System.out.println("YO"); } ;
>
> caction :  TURN cards '] [' ca=cards ']'
>           { System.out.println($ca.text); } ;
>
> cards : ((ALPHA | INT) WS?)+ ;
>
> fragment LOWER_LETTER   : 'a'..'z' ;
> fragment UPPER_LETTER   : 'A'..'Z' ;
> ALPHA : (LOWER_LETTER | UPPER_LETTER)+ ;
>
> COMMA_SP: ',' ' ' ;
>
> fragment DIGIT  : '0'..'9' ;
> INT : DIGIT+ COMMA_SP?;
>
> NEWLINE : '\r'? '\n' ;
>
> WS      :   ' '+ ;
> COLON_SPACE : ': ' ;
>
> TURN      : '*** TURN *** [' ;
> //ANTE  : ' Ante ' ;
>
>
>
> Can anyone spot the obvious that I'm missing?
>
> Thanks,
> Ian
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From craig.williams at free.fr  Thu Jan  8 11:27:39 2009
From: craig.williams at free.fr (craig.williams at free.fr)
Date: Thu, 08 Jan 2009 20:27:39 +0100
Subject: [antlr-interest] C target issues: winsock.h and duptree()
Message-ID: <1231442859.496653ab8528d@imp.free.fr>

First of all thanks to Terence, Jim et. al. for the new version of Antlr. I last
used v.2.6 with the C++ target about 3 years ago, and appreciate the great
improvements you have made - the book is good too.
I have upgraded my old grammar and tree walker code, so most of my C++ code now
works fine with the new Antlr version.

I have a couple of problems - I hope you have time to point me in the right
direction.

I am also using the ACE libraries in my project, which prefer the winsock2.h
instead of the old winsock.h header. To get around the incompatibility, I put
this workaround in antlr3defs.h

#if defined (_WINSOCKAPI_)
#   include <winsock2.h>
#else
#   include <winsock.h>
#endif /* _WINSOCKAPI_ */

Maybe you have a better idea?

In previous version of Antlr, I was able to copy ASTs while walking the tree and
later in the program, re walk these ASTs independently to perform different
actions:

e.g. in the first walk of the tree, copy the part of the tree of interest:
   ListAST = _t; // walk some more tree, possibly modifying it
   ...
   antlr::RefAST ra = ASTfact.dupList(ListAST);

later in the program, the copied AST was walked a second time to perform
evaluation functions,

passing the copied AST as a parameter:

list = TreeWalker.evalList (ListAST);

In the new version, I can see the equivalent tree copy function:

pANTLR3_BASE_TREE pAST	= (pANTLR3_BASE_TREE)$s->dupTree($s);

but I suspect it may not be the right way to go.

I feel I should be able to reuse the context structure ...Ctx_struct immediately
after the 1st tree walk, and rewalk parts of the tree with the function pointers
of this struct.  Do you have any recommendations on the best way to achieve
this?

Thanks in advance.

Craig

From antlr at jazillian.com  Thu Jan  8 11:54:28 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 08 Jan 2009 14:54:28 -0500
Subject: [antlr-interest] ANTLRv3 AST-creating grammars for C and Java?
Message-ID: <496659F4.5030708@jazillian.com>

Does anyone have a ANTLRv3 C grammar that creates an AST?
How about a Java grammar that creates an AST?
And if either of these exist, how about a treewalker grammar to go with it?

Thanks,
Andy

From Jack.Pan at Lewtan.com  Thu Jan  8 12:56:37 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Thu, 8 Jan 2009 15:56:37 -0500
Subject: [antlr-interest] Overriding C target's pANTLR3_COMMON_TREE_ADAPTOR
	to create heterogeneous tree
Message-ID: <A774F8AAACE57E47AB2D82E7317A724806C1DB0B@exchange6.corp.lewtan.com>

I'm thinking to take a shot at overriding C target's
pANTLR3_COMMON_TREE_ADAPTOR to create heterogeneous tree. Could some
experienced ANTLR user please give it a quick thought if I'm heading to
a brick wall here?

 

What I want to do:

 

I have a parser grammar generating a AST. It's almost java-free so I can
switch target language option easily after I tested it in AntlrWorks.
The tree has exactly the shape I needed.

 

I already have the following tree node classes implemented from
Composite pattern:

 

Class CNode

{

Public:

Vector<CNode> m_children;
};

 

Class CDistributionNode : public CNode {};

Class CTransactionNode : public CNode {};

etc. etc.

 

How difficult will it be to implement my own
pANTLR3_COMMON_TREE_ADAPTOR, to generate the same AST with my own node
types?

 

Then I would like to invoke generated parser code, get the AST from it.
I need to free the parser while keeping the AST in memory for later use.
Is there a way to detach the tree root point from parser?

 

My tree nodes will need to interact with the token object. Should I just
use the token type defined by ANTRL C target runtime, or I should make
copy asap? I'm not sure when the token objects are destroyed. (I have to
say I miss C# or Java here...)

 

Hopefully I can implement this. Then I will send out this as a sample to
implement custom TreeAdaptor in C target. 

 

Thanks,

 

Jack

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090108/428bef9d/attachment.html 

From antlr at jazillian.com  Thu Jan  8 14:11:55 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 08 Jan 2009 17:11:55 -0500
Subject: [antlr-interest] ANTLRv3 AST-creating grammars for C and Java?
In-Reply-To: <A774F8AAACE57E47AB2D82E7317A724805F22E22@exchange6.corp.lewtan.com>
References: <A774F8AAACE57E47AB2D82E7317A724805F22E22@exchange6.corp.lewtan.com>
Message-ID: <49667A2B.4030604@jazillian.com>

I meant "an ANTLRv3 grammar that will produce a lexer/parser for lexing/parsing
the C programming language and produces an AST". i.e. I'm looking for
a C.g that has "output=AST" and lots of little "^" and/or "->" tokens ;)
Same for a java.g grammar. And C.tree.g and java.tree.g to go with them would
be a nice bonus.

My target language happens to be Java, but that doesn't matter.

Andy

Jack Pan wrote:
> If your parser grammar has no embedded code snippet, you can switch
> target language just by changing @options. ie. The parser grammar itself
> is language neutral.
> 
> 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Thursday, January 08, 2009 2:54 PM
> To: antlr-interest
> Subject: [antlr-interest] ANTLRv3 AST-creating grammars for C and Java?
> 
> Does anyone have a ANTLRv3 C grammar that creates an AST?
> How about a Java grammar that creates an AST?
> And if either of these exist, how about a treewalker grammar to go with
> it?
> 
> Thanks,
> Andy
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 


From gerald at certiv.net  Thu Jan  8 23:03:29 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 08 Jan 2009 23:03:29 -0800
Subject: [antlr-interest] AntlrDT 0.6.0 Released
Message-ID: <200901090704.n09740Gv014857@zinc.newtechlaw.com>

Just released the latest version of AntlrDT.

1) Improved the launcher.  Allows any grammar to be automatically 
built and launched with either a string or file as input to any 
chosen rule in the parser.  The parser runs in its own VM so all 
predicates and actions are live.  Normal logging output is routed 
back to the Eclipse console.

2) Added a LaunchUnit view that allows suites of launch 
configurations to be collected, organized, and saved.  Just 
double-click on any launch configuration and AntlrDT will load and run it.

3) Added a RulesView -- a graphic visualization of the actual 
execution path through the parser given a specific entry point rule 
and input text.  A small example is shown here 
http://www.certiv.net/projects/antlrdt.html#screenshot  Each launch 
configuration has a check box to enable graph generation.  The intent 
is to aid in understanding why a parser does not behave as expected, 
aka, the Yosemite Sam problem.  Double clicking on most nodes will 
highlight the corresponding rule, subrule, decision point, and alt of 
the grammar or the look-ahead, consumed, or hidden token chunk of the 
input text.  Hovering over the nodes will give context information in 
an infopop.

Enjoy -- and let me know of any issues you may run into.
Gerald
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From Jack.Pan at Lewtan.com  Fri Jan  9 06:47:46 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Fri, 9 Jan 2009 09:47:46 -0500
Subject: [antlr-interest] ANTLRv3 AST-creating grammars for C and Java?
Message-ID: <A774F8AAACE57E47AB2D82E7317A724805F22E27@exchange6.corp.lewtan.com>

I didn't find one. The only thing close I found is a grammar file to
build JavaScript AST. I ended up combining C.g and that one to get my
grammar working.



-----Original Message-----
From: Andy Tripp [mailto:antlr at jazillian.com] 
Sent: Thursday, January 08, 2009 5:12 PM
To: Jack Pan; antlr-interest
Subject: Re: [antlr-interest] ANTLRv3 AST-creating grammars for C and
Java?

I meant "an ANTLRv3 grammar that will produce a lexer/parser for
lexing/parsing
the C programming language and produces an AST". i.e. I'm looking for
a C.g that has "output=AST" and lots of little "^" and/or "->" tokens ;)
Same for a java.g grammar. And C.tree.g and java.tree.g to go with them
would
be a nice bonus.

My target language happens to be Java, but that doesn't matter.

Andy

Jack Pan wrote:
> If your parser grammar has no embedded code snippet, you can switch
> target language just by changing @options. ie. The parser grammar
itself
> is language neutral.
> 
> 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Thursday, January 08, 2009 2:54 PM
> To: antlr-interest
> Subject: [antlr-interest] ANTLRv3 AST-creating grammars for C and
Java?
> 
> Does anyone have a ANTLRv3 C grammar that creates an AST?
> How about a Java grammar that creates an AST?
> And if either of these exist, how about a treewalker grammar to go
with
> it?
> 
> Thanks,
> Andy
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 




From hgutsche at storm.ca  Fri Jan  9 10:49:44 2009
From: hgutsche at storm.ca (Hartmuth Gutsche)
Date: Fri, 9 Jan 2009 13:49:44 -0500 (EST)
Subject: [antlr-interest] antlr-snapshot down?
Message-ID: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>

Trying to use the snapshot link http://www.antlr.org/antlr-snapshot
from the download page gives me a http status 404 resource not available


From ian at telematter.com  Fri Jan  9 13:59:01 2009
From: ian at telematter.com (ian eyberg)
Date: Fri, 9 Jan 2009 15:59:01 -0600
Subject: [antlr-interest] antlr-snapshot down?
In-Reply-To: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>
References: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>
Message-ID: <20090109215901.GA25999@localhost>

on this note,

  I've been looking up random error messages off the mailing list
today and have noticed the grand majority of indexed links lead to
404s; yes I know I can go look at cached lists elsewhere but when
you have the top spot on google and such it kind of sucks that most
of them are going towards dead resources.

- Ian

On 13:49 Fri 09 Jan     , Hartmuth Gutsche wrote:
> Trying to use the snapshot link http://www.antlr.org/antlr-snapshot
> from the download page gives me a http status 404 resource not available
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From james at mansionfamily.plus.com  Sun Jan 11 00:46:47 2009
From: james at mansionfamily.plus.com (James Mansion)
Date: Sun, 11 Jan 2009 08:46:47 +0000
Subject: [antlr-interest] C target issues: winsock.h and duptree()
In-Reply-To: <1231442859.496653ab8528d@imp.free.fr>
References: <1231442859.496653ab8528d@imp.free.fr>
Message-ID: <4969B1F7.7070706@mansionfamily.plus.com>

craig.williams at free.fr wrote:
> instead of the old winsock.h header. To get around the incompatibility, I put
> this workaround in antlr3defs.h
>
> #if defined (_WINSOCKAPI_)
> #   include <winsock2.h>
> #else
> #   include <winsock.h>
> #endif /* _WINSOCKAPI_ */
>
> Maybe you have a better idea?
>   
Drop winsock.h?  Or at least stop using it as the default?  I can't 
imagine any new software
specifically wanting to use winsock.h except by accident.


From pcc482719 at gmail.com  Sun Jan 11 11:13:44 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Sun, 11 Jan 2009 14:13:44 -0500
Subject: [antlr-interest] Passing user defined exceptions through the parser.
Message-ID: <496A44E8.8030403@gmail.com>

Hello! I'm fairly new to ANTLR so forgive me if this seems like a simple
question.

I'm using ANTLR to generate a Java parser. I would like to raise an
exception of my own inside a method called as part of a rule action. In
particular, if I discover that the input contains a language feature I'm
not (yet) ready to handle, I want to throw an exception that I'm calling
UnsupportedConstructException. This is not a parse error; the input
might be a perfectly legal sentence in the input language. However, my
program just isn't up for dealing with every construct in that language.

Here is a snippet of my grammar.

component
    : REMOTABLE? k=comp_kind IDENTIFIER
       { makeComponentInfo($IDENTIFIER.text, $k.componentKind); }
      component_specification implementation?
       { commitComponentInfo(); } ;

The makeComponentInfo method will raise the exception if it doesn't like
the component kind it has been given. The problem is that the parser
won't compile because the method in the parser for handling the
component rule does not declare that it throws this exception (and
similarly for all the rules that directly or indirectly call the
component rule).

I want to catch this exception at the top level... once it leaves the
ANTLR generated parser entirely. There I will tell the user that I can't
deal with the program because it contains an unsupported kind of
component, blah, blah. My question is: what's the best way for me to
deal with this? Is there some "nice" way for me to get my exception to
pass through all the code generated by ANTLR? I understand that I could
define my exception to be a subclass of RuntimeException, but that
seems... well... wrong.

As an aside this appears to be a good example of why statically checked
exception specifications are not always desirable.

Peter


From sharwell at pixelminegames.com  Sun Jan 11 14:22:34 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 11 Jan 2009 16:22:34 -0600
Subject: [antlr-interest] Passing user defined exceptions through the
	parser.
In-Reply-To: <496A44E8.8030403@gmail.com>
References: <496A44E8.8030403@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>

Here's what I do. This is with the C# target so there are probably a few
differences, but you'll get the idea.

try
{
    MyLexer lexer = new MyLexer( new ANTLRStringStream( text ) );
    CommonTokenStream tokens = new CommonTokenStream( lexer );
    MyParser parser = new MyParser( tokens );
    parser.program();
}
catch ( OperationCanceledException )
{
    // ...
}

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Sunday, January 11, 2009 1:14 PM
To: antlr-interest
Subject: [antlr-interest] Passing user defined exceptions through the
parser.

Hello! I'm fairly new to ANTLR so forgive me if this seems like a simple
question.

I'm using ANTLR to generate a Java parser. I would like to raise an
exception of my own inside a method called as part of a rule action. In
particular, if I discover that the input contains a language feature I'm
not (yet) ready to handle, I want to throw an exception that I'm calling
UnsupportedConstructException. This is not a parse error; the input
might be a perfectly legal sentence in the input language. However, my
program just isn't up for dealing with every construct in that language.

Here is a snippet of my grammar.

component
    : REMOTABLE? k=comp_kind IDENTIFIER
       { makeComponentInfo($IDENTIFIER.text, $k.componentKind); }
      component_specification implementation?
       { commitComponentInfo(); } ;

The makeComponentInfo method will raise the exception if it doesn't like
the component kind it has been given. The problem is that the parser
won't compile because the method in the parser for handling the
component rule does not declare that it throws this exception (and
similarly for all the rules that directly or indirectly call the
component rule).

I want to catch this exception at the top level... once it leaves the
ANTLR generated parser entirely. There I will tell the user that I can't
deal with the program because it contains an unsupported kind of
component, blah, blah. My question is: what's the best way for me to
deal with this? Is there some "nice" way for me to get my exception to
pass through all the code generated by ANTLR? I understand that I could
define my exception to be a subclass of RuntimeException, but that
seems... well... wrong.

As an aside this appears to be a good example of why statically checked
exception specifications are not always desirable.

Peter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From wbgillis at gmail.com  Sun Jan 11 19:46:02 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Sun, 11 Jan 2009 21:46:02 -0600
Subject: [antlr-interest]  Compiler error, CSharp2 target: empty if condition
Message-ID: <E8709E1E82D3467A87EB73DF92449364@homelaptop>

This is probably a known CSharp2 target compile issue, but googling the error message only turned up others with the same problem, no resolution/status.  

Questions: Will it be fixed?  best work-arounds?


The compile error is: Invalid expression term ')'

Anytime I use a token in single quotes in an AST rewrite, I get the above.  For example, 

someRule : 'KEYWORD' 'TOKEN' ->  ^(KEYWORD TOKEN);

which produces an empty condition in a C# if statement: 

    if ( )


If I remove the single quotes, the error is resolved:

someRule : KEYWORD TOKEN ->  ^(KEYWORD TOKEN);


the newly gen'd code being:

if ( stream_KEYWORD.HasNext() )

Regards,
Ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090111/634aa422/attachment.html 

From JALuber at gmx.de  Mon Jan 12 06:20:59 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 12 Jan 2009 15:20:59 +0100
Subject: [antlr-interest] Compiler error,
 CSharp2 target: empty if condition
In-Reply-To: <E8709E1E82D3467A87EB73DF92449364@homelaptop>
References: <E8709E1E82D3467A87EB73DF92449364@homelaptop>
Message-ID: <20090112142059.129420@gmx.net>

> This is probably a known CSharp2 target compile issue, but googling the
> error message only turned up others with the same problem, no
> resolution/status.  
> 
> Questions: Will it be fixed?  best work-arounds?
> 
> 
> The compile error is: Invalid expression term ')'
> 
> Anytime I use a token in single quotes in an AST rewrite, I get the above.
>  For example, 
> 
> someRule : 'KEYWORD' 'TOKEN' ->  ^(KEYWORD TOKEN);
> 
> which produces an empty condition in a C# if statement: 
> 
>     if ( )
> 
> 
> If I remove the single quotes, the error is resolved:
> 
> someRule : KEYWORD TOKEN ->  ^(KEYWORD TOKEN);
> 
> 
> the newly gen'd code being:
> 
> if ( stream_KEYWORD.HasNext() )
> 
> Regards,
> Ben


Could you please provide a sample grammar which showcases the problem? I'm not sure how to do that from the snippets above alone.

Johannes
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From Fred.Brisard at ca.com  Mon Jan 12 09:53:30 2009
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Mon, 12 Jan 2009 12:53:30 -0500
Subject: [antlr-interest] Handling explicit continuation characters
Message-ID: <7D50572C73BC634F92EE211BFF16F4A107459A69@USILMS12.ca.com>

I am parsing a grammar that uses minus or plus at the end of line to
indicate a continuation.

Following are some examples --

*	command parm1-
		  parm2

*	command parm1 -
		  parm2

*	command parm1 par-
		  m2

*	command verylongparmthatextends-
		acrosstwolines-
		oreventhreelines

The general structure of the grammar is

	Command <one or more positional parameters> <one or more keyword
parameters>

	Keyword parameters are keyword with one or more optional
subparameters.

I have developed a parser that successfully parses the language, but I
can't seem to resolve the issue of the continuations in a consistent
fashion due to the way that they can be inserted at any point in the
token stream.

I would like to just absorb them into the hidden stream so that the
input appears to be on a single line.  

If I wanted to make a first pass on the input and just absorb '-\n' and
'+\n' then all would be well.  That seems pretty wasteful to make a pass
to just do that.  It seems like I should be able to do it during the
lexical pass.

One other thing, the + and - continuation characters can be considered
part of the parameter; it's only the case that a + or - at the end of
the line is considered a continuation.  For example

*	command 'this is a literal that includes a --
		  in the text'

should reduce to "command 'this is a literal that includes a -in the
text'"

This seems like this should be a simple thing to do considering that
whitespace and comments are so easily absorbed.  

Any advice or suggestion is appreciated.

Regards, Fred

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090112/455fa0f7/attachment.html 

From parrt at cs.usfca.edu  Mon Jan 12 11:12:08 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Jan 2009 11:12:08 -0800
Subject: [antlr-interest] antlr-snapshot down?
In-Reply-To: <20090109215901.GA25999@localhost>
References: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>
	<20090109215901.GA25999@localhost>
Message-ID: <4CF37A7E-0B31-4638-8044-F172E631397C@cs.usfca.edu>

we changed the port number...i'm hoping that Google eventually catches  
up.

i'll fix the link for the snapshot.

Ter
On Jan 9, 2009, at 1:59 PM, ian eyberg wrote:

> on this note,
>
>  I've been looking up random error messages off the mailing list
> today and have noticed the grand majority of indexed links lead to
> 404s; yes I know I can go look at cached lists elsewhere but when
> you have the top spot on google and such it kind of sucks that most
> of them are going towards dead resources.
>
> - Ian
>
> On 13:49 Fri 09 Jan     , Hartmuth Gutsche wrote:
>> Trying to use the snapshot link http://www.antlr.org/antlr-snapshot
>> from the download page gives me a http status 404 resource not  
>> available
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Mon Jan 12 11:17:50 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Jan 2009 11:17:50 -0800
Subject: [antlr-interest] antlr-snapshot down?
In-Reply-To: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>
References: <5293066db1ae8f6518068fa957294457.squirrel@home.storm.ca>
Message-ID: <62D69306-F4E0-417C-8BCE-F8CB7FC11464@cs.usfca.edu>

fixed.
Ter
On Jan 9, 2009, at 10:49 AM, Hartmuth Gutsche wrote:

> Trying to use the snapshot link http://www.antlr.org/antlr-snapshot
> from the download page gives me a http status 404 resource not  
> available
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Mon Jan 12 11:45:29 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 13 Jan 2009 08:45:29 +1300
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A107459A69@USILMS12.ca.com>
References: <7D50572C73BC634F92EE211BFF16F4A107459A69@USILMS12.ca.com>
Message-ID: <20090112194540.E6F3D341845C@www.antlr.org>

At 06:53 13/01/2009, Brisard, Fred D wrote:
>I am parsing a grammar that uses minus or plus at the end of line 
>to indicate a continuation.
[...]
>I would like to just absorb them into the hidden stream so that 
>the input appears to be on a single line.
>
>If I wanted to make a first pass on the input and just absorb 
>'-\n' and '+\n' then all would be well.  That seems pretty 
>wasteful to make a pass to just do that.  It seems like I should 
>be able to do it during the lexical pass.

You can; you just need to give the lexer enough hinting so that it 
can cope with both cases properly:

MINUS: '-' ('\r'? '\n' { skip(); })?;
PLUS: '+' ('\r'? '\n' { skip(); })?;

(Or instead of skipping, you could change the $type to 
CONTINUATION and the $channel to HIDDEN.)

You will also need to ensure that '-' and '+' won't be consumed by 
other lexer rules (or at least that if they are, it's in contexts 
where a continuation isn't permitted).  And your parser will have 
to be able to cope with getting MINUS and PLUS tokens between 
other tokens.


From Dominic.Tardif at USherbrooke.ca  Mon Jan 12 11:53:58 2009
From: Dominic.Tardif at USherbrooke.ca (Dominic Tardif)
Date: Mon, 12 Jan 2009 14:53:58 -0500
Subject: [antlr-interest] White spaces not allowed
Message-ID: <1231790038.496b9fd68a900@www.usherbrooke.ca>

Hello everyone!  I've been working on this grammar for quite some time now, and
it works quite well except for one little detail: white spaces are not allowed.
 Since the input is user-created, it's supposed to be "user-friendly", thus
more readable with spaces between each elements. I really don't understand this
because I've declared the white spaces to be skipped.  Any help on this issue
would be greatly appreciated!  Here is the input followed by the grammar:

------------
input
------------

#LIB::Logic
sample(a,b,c;g,h;k){
g=a*b;
h=c'+g*k;
k=!g+c;
}
#ENDLIB

------------
grammar
------------
grammar Logic;

options {
  output = AST;
  ASTLabelType = CommonTree;
}

tokens {
INV = '\'';
STMT_END = ';';
}

@header {
import java.util.HashMap;
}

@members {
HashMap<String,Integer> memory = new HashMap<String,Integer>();
}

circuit:    (library {System.out.println($library.tree.toStringTree());})+
      ;

library: lib='#LIB::' ID (NEWLINE)? function+ '#ENDLIB'  -> ^(LIBRARY ID
^(FLIST[$lib, "FLIST "] function+))
  ;

function: user_def bloc (NEWLINE)?    -> ^(FCT function_id bloc)
  ;

bloc:   lc='{' stmt+ '}'  -> ^(SLIST[$lc, "SLIST"] stmt+)
      ;

function_id: ID '(' inparam? ';' outparam ';' ioparam? ')'  -> ^(ID ^(INPARAM
inparam)? ^(OUTPARAM outparam) ^(IOPARAM ioparam)?)
      ;

inparam:  (ids+=ID) (coma=',' ids+=ID)* -> ID+
      ;

outparam:  (ids+=ID) (coma=',' ids+=ID)* -> ID+
      ;

ioparam:  (ids+=ID) (coma=',' ids+=ID)* -> ID+
      ;

stmt:  ID ' ' function_id STMT_END      -> ^(STMT ID function_id)
      |  ID '=' expr STMT_END           -> ^('=' ID expr)
      |  NEWLINE                        ->
      ;

expr:   multExpr ('+'^ multExpr)*
      ;

multExpr:   phase (('*'^|' '^) phase)*
      ;

phase: atom (INV)?  -> ^(PHASE INV? atom)
   |   '!' atom   -> ^(PHASE '\'' atom)
   ;

atom:     ID
      |   '(' expr ')'
      ;

ID:       ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')* | INT;
fragment
INT:      '0'|'1';

NEWLINE:  ('\r'? '\n')+;
WS:       (' '|'\t'|'\r'|'\n')+ {skip();};
COMMENT        : '//' ( options{greedy=false;}: . )* '\n' {skip();}
         | '/*' ( options{greedy=false;}: . )* '*/' {skip();};




From antlr at mirality.co.nz  Mon Jan 12 12:19:45 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 13 Jan 2009 09:19:45 +1300
Subject: [antlr-interest] White spaces not allowed
In-Reply-To: <1231790038.496b9fd68a900@www.usherbrooke.ca>
References: <1231790038.496b9fd68a900@www.usherbrooke.ca>
Message-ID: <20090112201954.A293234184A4@www.antlr.org>

At 08:53 13/01/2009, Dominic Tardif wrote:
 >Hello everyone!  I've been working on this grammar for quite 
some
 >time now, and it works quite well except for one little detail:
 >white spaces are not allowed.
[...]
 >stmt:  ID ' ' function_id STMT_END      -> ^(STMT ID 
function_id)
 >      |  ID '=' expr STMT_END           -> ^('=' ID expr)
 >      |  NEWLINE                        ->
 >      ;

Your grammar is expecting to see NEWLINE tokens...

[...]
 >NEWLINE:  ('\r'? '\n')+;
 >WS:       (' '|'\t'|'\r'|'\n')+ {skip();};

... but your NEWLINE and WS tokens overlap, such that if there is 
any WS before (or possibly even after) a newline then the newline 
will be consumed and skipped without generating a NEWLINE token.

Having said that, I'm not entirely sure why you are using NEWLINE 
tokens in your parser; in most cases it looks like it's optional 
anyway, so it seems like it could just be removed (though you 
might need to change some 'stmt+'s to 'stmt*'s as well).


That's not the real problem, though.  The real problem is that 
quoted space you have in the stmt rule above.  Whenever you use a 
quoted literal in a parser rule, it effectively creates a new 
lexer rule -- so you then have two lexer rules representing 
spaces; one that represents exactly one space and one that 
represents multiple spaces, tabs, and newlines.  The two are going 
to fight.  Just remove this space (it shouldn't be necessary 
anyway) and it should behave.


From Dominic.Tardif at USherbrooke.ca  Mon Jan 12 12:59:12 2009
From: Dominic.Tardif at USherbrooke.ca (Dominic Tardif)
Date: Mon, 12 Jan 2009 15:59:12 -0500
Subject: [antlr-interest] White spaces not allowed
In-Reply-To: <20090112201954.A293234184A4@www.antlr.org>
References: <1231790038.496b9fd68a900@www.usherbrooke.ca>
	<20090112201954.A293234184A4@www.antlr.org>
Message-ID: <1231793952.496baf20db9d1@www.usherbrooke.ca>

Quoting Gavin Lambert <antlr at mirality.co.nz>:

> At 08:53 13/01/2009, Dominic Tardif wrote:
>  >Hello everyone!  I've been working on this grammar for quite
> some
>  >time now, and it works quite well except for one little detail:
>  >white spaces are not allowed.
> [...]
>  >stmt:  ID ' ' function_id STMT_END      -> ^(STMT ID
> function_id)
>  >      |  ID '=' expr STMT_END           -> ^('=' ID expr)
>  >      |  NEWLINE                        ->
>  >      ;
>
> Your grammar is expecting to see NEWLINE tokens...
>
> [...]
>  >NEWLINE:  ('\r'? '\n')+;
>  >WS:       (' '|'\t'|'\r'|'\n')+ {skip();};
>
> ... but your NEWLINE and WS tokens overlap, such that if there is
> any WS before (or possibly even after) a newline then the newline
> will be consumed and skipped without generating a NEWLINE token.
>
> Having said that, I'm not entirely sure why you are using NEWLINE
> tokens in your parser; in most cases it looks like it's optional
> anyway, so it seems like it could just be removed (though you
> might need to change some 'stmt+'s to 'stmt*'s as well).
>
> That's not the real problem, though.  The real problem is that
> quoted space you have in the stmt rule above.  Whenever you use a
> quoted literal in a parser rule, it effectively creates a new
> lexer rule -- so you then have two lexer rules representing
> spaces; one that represents exactly one space and one that
> represents multiple spaces, tabs, and newlines.  The two are going
> to fight.  Just remove this space (it shouldn't be necessary
> anyway) and it should behave.


OK, I've removed the NEWLINE token and changed stmt+ by stmt* and it works just
fine, except that I want to be able to support the ' ' operator, which acts
like a '*'.  If I didn't support it, I don't think I would have had any
problems. Is there a way to have a white space act as an operator as well? If
not, I'll just have to remove it. Thanks again for all your help! ^_^


From Jack.Pan at Lewtan.com  Mon Jan 12 13:41:07 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Mon, 12 Jan 2009 16:41:07 -0500
Subject: [antlr-interest] How to access recognitionException in C Target?
Message-ID: <A774F8AAACE57E47AB2D82E7317A724805F22E2A@exchange6.corp.lewtan.com>


Hi,

In Java, the parser error can be accessed via RecognitionException quite
easily. How can I access this functionality in C target? Is there a
sample?

catch (RecognitionException re) {
	reportError(re); // automatic error reporting and recovery
	recover(input,re);
}

Thanks,

Jack




From pcc482719 at gmail.com  Mon Jan 12 14:14:57 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Mon, 12 Jan 2009 17:14:57 -0500
Subject: [antlr-interest] Passing user defined exceptions through the
 parser.
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>
References: <496A44E8.8030403@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>
Message-ID: <496BC0E1.5090606@gmail.com>

Sam Harwell wrote:

> Here's what I do. This is with the C# target so there are probably a few
> differences, but you'll get the idea.
>
> try
> {
>     MyLexer lexer = new MyLexer( new ANTLRStringStream( text ) );
>     CommonTokenStream tokens = new CommonTokenStream( lexer );
>     MyParser parser = new MyParser( tokens );
>     parser.program();
> }
> catch ( OperationCanceledException )
> {
>     // ...
> }
>   

I'm thinking that this works in C# because C# does not have statically
enforced exception specifications (I could be wrong... I know very
little about C#). In Java an attempt to throw OperationCanceledException
from a method invoked inside a rule will cause the parser to fail to
compile because the parser methods don't declare that exception in their
exception specifications.

Peter


From indhu.b at s7software.com  Mon Jan 12 23:13:03 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 13 Jan 2009 12:43:03 +0530
Subject: [antlr-interest] Why is parsing in antlrworks slower?
Message-ID: <004501c9754e$60990630$21cb1290$@b@s7software.com>

Just curious. Why is parsing inside AntlrWorks (in debug) slower than
parsing using a java program? Is this because of displaying the graphical
parse tree or is there some other reason?

 

- Indhu

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/5c3f0aed/attachment.html 

From JALuber at gmx.de  Tue Jan 13 00:05:07 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 13 Jan 2009 09:05:07 +0100
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <004501c9754e$60990630$21cb1290$@b@s7software.com>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
Message-ID: <20090113080507.27820@gmx.net>

> At 06:53 13/01/2009, Brisard, Fred D wrote:
> >I am parsing a grammar that uses minus or plus at the end of line 
> >to indicate a continuation.
> [...]
> >I would like to just absorb them into the hidden stream so that 
> >the input appears to be on a single line.
> >
> >If I wanted to make a first pass on the input and just absorb 
> >'-\n' and '+\n' then all would be well.  That seems pretty 
> >wasteful to make a pass to just do that.  It seems like I should 
> >be able to do it during the lexical pass.
> 
> You can; you just need to give the lexer enough hinting so that it 
> can cope with both cases properly:
> 
> MINUS: '-' ('\r'? '\n' { skip(); })?;
> PLUS: '+' ('\r'? '\n' { skip(); })?;
> 
> (Or instead of skipping, you could change the $type to 
> CONTINUATION and the $channel to HIDDEN.)
> 
> You will also need to ensure that '-' and '+' won't be consumed by 
> other lexer rules (or at least that if they are, it's in contexts 
> where a continuation isn't permitted).  And your parser will have 
> to be able to cope with getting MINUS and PLUS tokens between 
> other tokens.

Wouldn't it be easier to create an own StringStream (dreived from ANTLRStringStream) which silently swallows the + and - as well the following newline? Then both lexer and parser are cleaner.

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From JALuber at gmx.de  Tue Jan 13 00:08:19 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 13 Jan 2009 09:08:19 +0100
Subject: [antlr-interest] Why is parsing in antlrworks slower?
Message-ID: <20090113080819.27800@gmx.net>

> Just curious. Why is parsing inside AntlrWorks (in debug) slower than
> parsing using a java program? Is this because of displaying the graphical
> parse tree or is there some other reason?

Of course is creating a GUI time-consuming. Also the debugging creates a program which communicates over the network stack, which is a considerable delay alone. This also causes the duplication of the tokens (one in the parser, one for the GUI).

Johannes
> 
>  
> 
> - Indhu
> 
>  
> 

-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a

From micha-1 at fantasymail.de  Tue Jan 13 00:22:23 2009
From: micha-1 at fantasymail.de (micha)
Date: Tue, 13 Jan 2009 09:22:23 +0100
Subject: [antlr-interest] White spaces not allowed
In-Reply-To: <1231793952.496baf20db9d1@www.usherbrooke.ca>
References: <1231790038.496b9fd68a900@www.usherbrooke.ca>
	<20090112201954.A293234184A4@www.antlr.org>
	<1231793952.496baf20db9d1@www.usherbrooke.ca>
Message-ID: <200901130922.23909.micha-1@fantasymail.de>

On Monday 12 January 2009 21:59:12 Dominic Tardif wrote:

>
> OK, I've removed the NEWLINE token and changed stmt+ by stmt* and it works
> just fine, except that I want to be able to support the ' ' operator, which
> acts like a '*'.  If I didn't support it, I don't think I would have had
> any problems. Is there a way to have a white space act as an operator as
> well? If not, I'll just have to remove it. Thanks again for all your help!
> ^_^

maybe (i.e. not tested, just the idea):

WS:  (' ' | '\t' )+ { channel=hidden;}

and:

multExpr: phase ('*'? phase)*

then WS is allowed as '*' .  You can check the hidden channel, if it was 
exactly one ws.

Michael


From sohail at worklogassistant.com  Tue Jan 13 00:21:33 2009
From: sohail at worklogassistant.com (Sohail Somani)
Date: Tue, 13 Jan 2009 00:21:33 -0800
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <20090113080507.27820@gmx.net>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
	<20090113080507.27820@gmx.net>
Message-ID: <gkhiue$tq$1@ger.gmane.org>

Johannes Luber wrote:
>> MINUS: '-' ('\r'? '\n' { skip(); })?;
>> PLUS: '+' ('\r'? '\n' { skip(); })?;
>>
>> (Or instead of skipping, you could change the $type to 
>> CONTINUATION and the $channel to HIDDEN.)
>>
>> You will also need to ensure that '-' and '+' won't be consumed by 
>> other lexer rules (or at least that if they are, it's in contexts 
>> where a continuation isn't permitted).  And your parser will have 
>> to be able to cope with getting MINUS and PLUS tokens between 
>> other tokens.
> 
> Wouldn't it be easier to create an own StringStream (dreived from ANTLRStringStream) which silently swallows the + and - as well the following newline? Then both lexer and parser are cleaner.

I would prefer swallowing it in the lexer as written above. I once did
this for a language that had similar line continuations. By documenting
the full language in the grammar file, I could unambiguously know
exactly what subset (or superset) of the language was supported, atleast
syntactically.

Going Java file spelunking is probably the least fun you could have when
trying to figure out why a syntactically valid file is not parsing with
ANTLR.

Just my thoughts on the subject!

-- 
Sohail Somani
Hassle-free time tracking for JIRA

Website: http://worklogassistant.com
Blog   : http://blog.worklogassistant.com
Twitter: http://twitter.com/somanisoftware


From laurent.caillette at gmail.com  Tue Jan 13 00:39:43 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Tue, 13 Jan 2009 09:39:43 +0100
Subject: [antlr-interest] Passing user defined exceptions through the
	parser.
In-Reply-To: <496BC0E1.5090606@gmail.com>
References: <496A44E8.8030403@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>
	<496BC0E1.5090606@gmail.com>
Message-ID: <3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com>

This should work if you make OperationCanceledException a subclass of
RecognitionException, which is a checked exception thrown by parser's
methods. Then the catch clause does its job.

c.

On Mon, Jan 12, 2009 at 11:14 PM, Peter C. Chapin <pcc482719 at gmail.com> wrote:
> Sam Harwell wrote:
>
>> Here's what I do. This is with the C# target so there are probably a few
>> differences, but you'll get the idea.
>>
>> try
>> {
>>     MyLexer lexer = new MyLexer( new ANTLRStringStream( text ) );
>>     CommonTokenStream tokens = new CommonTokenStream( lexer );
>>     MyParser parser = new MyParser( tokens );
>>     parser.program();
>> }
>> catch ( OperationCanceledException )
>> {
>>     // ...
>> }
>>
>
> I'm thinking that this works in C# because C# does not have statically
> enforced exception specifications (I could be wrong... I know very
> little about C#). In Java an attempt to throw OperationCanceledException
> from a method invoked inside a rule will cause the parser to fail to
> compile because the parser methods don't declare that exception in their
> exception specifications.
>
> Peter
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From chainone at gmail.com  Tue Jan 13 01:10:54 2009
From: chainone at gmail.com (chain one)
Date: Tue, 13 Jan 2009 17:10:54 +0800
Subject: [antlr-interest]  How to write this lexer rule?
Message-ID: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>

I want to recognize a function definition and skip it before passing tokens
to the parser.The function definition starts with "FUNCTION" ,ends with
"END_FUNCTION".
Also it could be nested,for example:
FUNCTION value_range_aggregate_rep_item(agg
   : AGGREGATE OF representation_item) : BOOLEAN;

  FUNCTION cri(agg : AGGREGATE OF representation_item) : BOOLEAN;
   BEGIN
    IF (SIZEOF(agg) = 3)
     AND
    (SIZEOF(QUERY(i1 <* agg | ('AUTOMOTIVE_DESIGN.' +
       'MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i1)))) = 3)
     THEN
      RETURN (TRUE);
     ELSE
      RETURN (FALSE);
    END_IF;
   END;
  END_FUNCTION;
  BEGIN
   IF ((SIZEOF(agg) = 3)
   AND (SIZEOF(QUERY(i <* agg | (
      'AUTOMOTIVE_DESIGN.' +
      'COMPOUND_REPRESENTATION_ITEM' IN TYPEOF(i))
      AND cri(i\compound_representation_item.item_element))) = 1))
    THEN
     RETURN (TRUE);
    ELSE
     RETURN (FALSE);
   END_IF;
  END;
 END_FUNCTION;


How to write this lexer rule?
I tried, but failed. Check the following wrong lexer rule I wrote:

FUNCTION_DECL
: 'FUNCTION'
 {
                       $channel=HIDDEN;
         }
         ( options {greedy=false;} : . )*  FUNCTION_DECL ( options
{greedy=false;} : . )*  'END_FUNCTION' SEMI
;


I couldn't get it complied with no error.
Could anyone help me with this?
Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/3b41d172/attachment.html 

From chainone at gmail.com  Tue Jan 13 01:51:05 2009
From: chainone at gmail.com (chain one)
Date: Tue, 13 Jan 2009 17:51:05 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
Message-ID: <5a92ffb60901130151x15bfd353k1aeb65d3319e7d17@mail.gmail.com>

This also could not work : ( :
fragment
FUNCTION:
'FUNCTION'
;
fragment
END_FUNCTION
:'END_FUNCTION'
;


FUNCTION_DECL
:FUNCTION
 {
                       SKIP();
         }
         ( ~(FUNCTION|END_FUNCTION)
         |
         FUNCTION_DECL
         )*  END_FUNCTION SEMI
;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/2ee3e243/attachment.html 

From antlr at mirality.co.nz  Tue Jan 13 03:01:46 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 00:01:46 +1300
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <20090113080507.27820@gmx.net>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
	<20090113080507.27820@gmx.net>
Message-ID: <20090113110200.90EEE34184A4@www.antlr.org>

At 21:05 13/01/2009, Johannes Luber wrote:
 >Wouldn't it be easier to create an own StringStream (dreived 
from
 >ANTLRStringStream) which silently swallows the + and - as well 
the
 >following newline? Then both lexer and parser are cleaner.

That's certainly a possibility (and perhaps a good one), but 
that'd end up screwing up the line numbering, wouldn't it?


From antlr at mirality.co.nz  Tue Jan 13 03:11:47 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 00:11:47 +1300
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.co
 m>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
Message-ID: <20090113111156.7440334184A4@www.antlr.org>

At 22:10 13/01/2009, chain one wrote:
>I want to recognize a function definition and skip it before 
>passing tokens to the parser.
>The function definition starts with "FUNCTION" ,ends with 
>"END_FUNCTION".
[...]
>FUNCTION_DECL
>: 'FUNCTION'
>{
>                        $channel=HIDDEN;
>          }
>          ( options {greedy=false;} : . )*  FUNCTION_DECL ( 
> options {greedy=false;} : . )*  'END_FUNCTION' SEMI
>;

You might need to be more explicit about it:

FUNCTION_DECL
   : 'FUNCTION' { $channel = HIDDEN; }
     (FUNCTION_DECL | ~'E' | 'E' ~'N' | 'EN' ~'D' | 'END' ~'_' |
      'END_' ~'F' | 'END_F' ~'U' | 'END_FU' ~'N' | 'END_FUN' ~'C' 
|
      'END_FUNC' ~'T' | 'END_FUNCT' ~'I' | 'END_FUNCTI' ~'O' |
      'END_FUNCTIO' ~'N' | 'END_FUNCTION' ~SEMI)*
     'END_FUNCTION' SEMI
   ;

(This assumes that whitespace isn't permitted between END_FUNCTION 
and the semicolon.)

Also, if you're wanting to skip over large chunks of your input, 
then you might want to investigate filtering lexers.

>This also could not work : ( :
>
>fragment
>FUNCTION:
>'FUNCTION'
>;
[...]
>FUNCTION_DECL
>:FUNCTION
>{
>                        SKIP();
>          }
>          ( ~(FUNCTION|END_FUNCTION)
>          |
>          FUNCTION_DECL
>          )*  END_FUNCTION SEMI
>;

The reason why that doesn't work is that ~ can only take the 
inverse of sets, and sets in a lexer rule are alternatives of 
individual characters.  FUNCTION and END_FUNCTION are not sets, 
they're sequences, so it's illegal to use ~ on them.


From chainone at gmail.com  Tue Jan 13 03:29:42 2009
From: chainone at gmail.com (chain one)
Date: Tue, 13 Jan 2009 19:29:42 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
Message-ID: <5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>

Hi Gavin Lamber: Thanks for your reply.
I tried the lexer rule you gave me. But following error comes out:

Alternative 155: after matching input such as
'F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
'A'..'Z', '_',
'a'..'z'}'F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
'A'..'Z', '_', 'a'..'z'}'F''U''N''C''T''I''O'{'\u0000'..'/', ':'..'@', 'N',
'['..'^', '`', '{'..'\uFFFF'} decision cannot predict what comes next due to
recursion overflow to FUNCTION_DECL from FUNCTION_DECL

On Tue, Jan 13, 2009 at 7:11 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 22:10 13/01/2009, chain one wrote:
>
>> I want to recognize a function definition and skip it before passing
>> tokens to the parser.
>> The function definition starts with "FUNCTION" ,ends with "END_FUNCTION".
>>
> [...]
>
>> FUNCTION_DECL
>> : 'FUNCTION'
>> {
>>                       $channel=HIDDEN;
>>         }
>>         ( options {greedy=false;} : . )*  FUNCTION_DECL ( options
>> {greedy=false;} : . )*  'END_FUNCTION' SEMI
>> ;
>>
>
> You might need to be more explicit about it:
>
> FUNCTION_DECL
>  : 'FUNCTION' { $channel = HIDDEN; }
>    (FUNCTION_DECL | ~'E' | 'E' ~'N' | 'EN' ~'D' | 'END' ~'_' |
>     'END_' ~'F' | 'END_F' ~'U' | 'END_FU' ~'N' | 'END_FUN' ~'C' |
>     'END_FUNC' ~'T' | 'END_FUNCT' ~'I' | 'END_FUNCTI' ~'O' |
>     'END_FUNCTIO' ~'N' | 'END_FUNCTION' ~SEMI)*
>    'END_FUNCTION' SEMI
>  ;
>
> (This assumes that whitespace isn't permitted between END_FUNCTION and the
> semicolon.)
>
> Also, if you're wanting to skip over large chunks of your input, then you
> might want to investigate filtering lexers.
>
>  This also could not work : ( :
>>
>> fragment
>> FUNCTION:
>> 'FUNCTION'
>> ;
>>
> [...]
>
>> FUNCTION_DECL
>> :FUNCTION
>> {
>>                       SKIP();
>>         }
>>         ( ~(FUNCTION|END_FUNCTION)
>>         |
>>         FUNCTION_DECL
>>         )*  END_FUNCTION SEMI
>> ;
>>
>
> The reason why that doesn't work is that ~ can only take the inverse of
> sets, and sets in a lexer rule are alternatives of individual characters.
>  FUNCTION and END_FUNCTION are not sets, they're sequences, so it's illegal
> to use ~ on them.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/76f67fa6/attachment.html 

From pcc482719 at gmail.com  Tue Jan 13 04:12:42 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Tue, 13 Jan 2009 07:12:42 -0500
Subject: [antlr-interest] Passing user defined exceptions through the
 parser.
In-Reply-To: <3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com>
References: <496A44E8.8030403@gmail.com>	
	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>	
	<496BC0E1.5090606@gmail.com>
	<3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com>
Message-ID: <496C853A.1040808@gmail.com>

Laurent Caillette wrote:

> This should work if you make OperationCanceledException a subclass of
> RecognitionException, which is a checked exception thrown by parser's
> methods. Then the catch clause does its job.
>   

Okay, thanks. That's a little unsatisfying because the exception in
question really isn't a problem with recognition. Still, I can live with
that. I guess that's life with Java.

Peter


From JALuber at gmx.de  Tue Jan 13 06:12:52 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 13 Jan 2009 15:12:52 +0100
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <20090113110200.90EEE34184A4@www.antlr.org>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
	<20090113080507.27820@gmx.net>
	<20090113110200.90EEE34184A4@www.antlr.org>
Message-ID: <20090113141252.74560@gmx.net>

> At 21:05 13/01/2009, Johannes Luber wrote:
>  >Wouldn't it be easier to create an own StringStream (dreived 
> from
>  >ANTLRStringStream) which silently swallows the + and - as well 
> the
>  >following newline? Then both lexer and parser are cleaner.
> 
> That's certainly a possibility (and perhaps a good one), but 
> that'd end up screwing up the line numbering, wouldn't it?

I don't see, why swallowing the two characters would prevent increasing the line count. Tokens receive the line number from the stream itself and not because the lexer counts newlines.

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From JALuber at gmx.de  Tue Jan 13 06:19:11 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 13 Jan 2009 15:19:11 +0100
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <gkhiue$tq$1@ger.gmane.org>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
	<20090113080507.27820@gmx.net> <gkhiue$tq$1@ger.gmane.org>
Message-ID: <20090113141911.74580@gmx.net>

> Johannes Luber wrote:
> >> MINUS: '-' ('\r'? '\n' { skip(); })?;
> >> PLUS: '+' ('\r'? '\n' { skip(); })?;
> >>
> >> (Or instead of skipping, you could change the $type to 
> >> CONTINUATION and the $channel to HIDDEN.)
> >>
> >> You will also need to ensure that '-' and '+' won't be consumed by 
> >> other lexer rules (or at least that if they are, it's in contexts 
> >> where a continuation isn't permitted).  And your parser will have 
> >> to be able to cope with getting MINUS and PLUS tokens between 
> >> other tokens.
> > 
> > Wouldn't it be easier to create an own StringStream (dreived from
> ANTLRStringStream) which silently swallows the + and - as well the following
> newline? Then both lexer and parser are cleaner.
> 
> I would prefer swallowing it in the lexer as written above. I once did
> this for a language that had similar line continuations. By documenting
> the full language in the grammar file, I could unambiguously know
> exactly what subset (or superset) of the language was supported, atleast
> syntactically.

Nothing prevents you to add a comment explaining the differences from the grammar described to the input which is actually accepted. Doing everything in the lexer will make both lexer and parser more complicated and you might miss a corner case, which won't be fun to debug.
> 
> Going Java file spelunking is probably the least fun you could have when
> trying to figure out why a syntactically valid file is not parsing with
> ANTLR.

Use unit tests to check the code (won't be so difficult that you miss a possible case). Or you could create a separate preprocessor program, which strips the continuations. Then you can compare the clean file against your modifications and you will know, if your modifies stream is the culprit or the grammar.

Johannes
> 
> Just my thoughts on the subject!
> 
> -- 
> Sohail Somani
> Hassle-free time tracking for JIRA
> 
> Website: http://worklogassistant.com
> Blog   : http://blog.worklogassistant.com
> Twitter: http://twitter.com/somanisoftware
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From Fred.Brisard at ca.com  Tue Jan 13 07:49:02 2009
From: Fred.Brisard at ca.com (Brisard, Fred D)
Date: Tue, 13 Jan 2009 10:49:02 -0500
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <20090113141252.74560@gmx.net>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com><20090113080507.27820@gmx.net>
	<20090113110200.90EEE34184A4@www.antlr.org>
	<20090113141252.74560@gmx.net>
Message-ID: <7D50572C73BC634F92EE211BFF16F4A107459F3A@USILMS12.ca.com>

Thanks for the suggestions on this issue.

I'm not concerned about the line count - in fact, I want to know which physical line a token is located for subsequent regeneration of the source.  I'm using this for a "syntax directed" editor.  I just want to absorb the continuations quietly.

I still can't figure out how to handle the case where continuation characters (- and +) are embedded in prior to the end of line.  A + or - is only a continuation if the following character is an end of line.  If this isn't true, then the + or - is a valid character in an token.  

My lexer rules look like this --

/*
	LEXER RULES
*/

ID	: Any+
	| Quote (Any | Blank)* Quote
	;

fragment
Blank	: ' '
	;

fragment
Any	:( AlphaNum | Special | NATL  )
	;

fragment
Quote	:	'\''
	;
fragment
Special :	'_' | '-' | '=' | '+'
	|	'/' | '\\'
	|	':' | ';'
	|	'<' | '>'
	|	'.' | ',' | '?' | '!'
	|	'~' | '%' | '^' | '&' | '*'
	|	'{' | '}' | '[' | ']' | '|'
	;

fragment
AlphaNum:	ALPHA|DIGIT;


fragment
DIGIT   : 	('0'..'9');

fragment
ALPHA
	: 	('a'..'z'|'A'..'Z')
        ;

fragment
NATL 	:  	( '$' | '#' | '@')
        ;

EOS	:
	(	'\r'
	|	'\n'
	)+
	;

CONTINUEMINUS
	:	'-\r'
	|	'-\n'
	|	'-\r\n'
	{ $channel=HIDDEN; }
	;

CONTINUEPLUS
	:	'+\r'
	|	'+\n'
	|	'+\r\n'
	{ $channel=HIDDEN; }
	;

WS  	:
	(   	' '
        |   	'\t'
        )+
        { $channel=HIDDEN; }
    	;

COMMENT
	: '/*' (options {greedy=false;} : . )* '*/'
	{ $channel=HIDDEN; }
	;

I have a problem when I have a statement like the following --

Cmd parm1 parm2 verylong-
parm

The - at the end of the verylongparm is absorbed as part of the ID token.  

The above works OK if there's WS between the last token and the -, but that't not the syntax I have to conform to.

Thanks for any additional feedback.

-----Original Message-----
From: Johannes Luber [mailto:JALuber at gmx.de] 
Sent: Tuesday, January 13, 2009 9:13 AM
To: Gavin Lambert; Brisard, Fred D; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Handling explicit continuation characters

> At 21:05 13/01/2009, Johannes Luber wrote:
>  >Wouldn't it be easier to create an own StringStream (dreived 
> from
>  >ANTLRStringStream) which silently swallows the + and - as well 
> the
>  >following newline? Then both lexer and parser are cleaner.
> 
> That's certainly a possibility (and perhaps a good one), but 
> that'd end up screwing up the line numbering, wouldn't it?

I don't see, why swallowing the two characters would prevent increasing the line count. Tokens receive the line number from the stream itself and not because the lexer counts newlines.

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From sharwell at pixelminegames.com  Tue Jan 13 08:05:34 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 13 Jan 2009 10:05:34 -0600
Subject: [antlr-interest] Passing user defined exceptions through the
	parser.
In-Reply-To: <496C853A.1040808@gmail.com>
References: <496A44E8.8030403@gmail.com>	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>	<496BC0E1.5090606@gmail.com><3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com>
	<496C853A.1040808@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com>

There is a throwsSpec in the ANTLR tool grammar that *should* be able to
be used like this:

my_rule /*returns [Object o]*/ throws RecognitionException,
OperationCanceledException
 : ...
 ;

It doesn't apply to C# so it's not implemented in my CSharp3 target.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Tuesday, January 13, 2009 6:13 AM
Cc: antlr-interest
Subject: Re: [antlr-interest] Passing user defined exceptions through
the parser.

Laurent Caillette wrote:

> This should work if you make OperationCanceledException a subclass of
> RecognitionException, which is a checked exception thrown by parser's
> methods. Then the catch clause does its job.
>   

Okay, thanks. That's a little unsatisfying because the exception in
question really isn't a problem with recognition. Still, I can live with
that. I guess that's life with Java.

Peter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Martin.Brousseau at nstein.com  Tue Jan 13 08:07:51 2009
From: Martin.Brousseau at nstein.com (Martin Brousseau)
Date: Tue, 13 Jan 2009 11:07:51 -0500
Subject: [antlr-interest] Problem with rewrite rule: DebugTokenStream cannot
	be cast to TokenRewriteStream
Message-ID: <B687039EFFE5C045B80D10B1B3D5B9D4B5FC92@nsexbe01.nstein.com>

Hi!

I am testing the rewriting sample from ?The De?nitive ANTLR Reference? (page 125).

With the last version of ANTLRworks used in debugging mode, I get the following stack trace as output:

 

_____________________________________________________________________

Exception in thread "main" java.lang.ClassCastException: org.antlr.runtime.debug.DebugTokenStream cannot be cast to org.antlr.runtime.TokenRewriteStream

      at TParser.type(TParser.java:198)

      at TParser.decl(TParser.java:110)

      at __Test__.main(__Test__.java:14)

______________________________________________________________________

 

Any idea about the cause?

Any help would be greatly appreciated.

Thanks.

 

More info:

I get exactly the same when I try to parse the grammar in a Java main with parser.prog();

 

?

// Create a stream of tokens fed by the lexer

CommonTokenStream tokens = new CommonTokenStream(lexer);

// Create a parser that feeds off the token stream

FactorParser parser = new FactorParser(tokens); // create parser

      

//To use inline rewrite rules

parser.prog();

?

 

 

The grammar used is the following.

 

grammar T;

options {output=template; rewrite=true;}

decl: type ID ';' ; // no translation here

type: 'int' -> template() "Integer" // translate int to Integer

| ID // leave this alone

;

 

ID    :     ('a'..'z'|'A'..'Z')+ ;

WS    :     (' '|'\t'|'\n'|'\r')+ {skip();} ; 

 

 

_______________________________________________

 

Martin Brousseau
Product Designer - Semantic Intelligence
T. 514.908.5406 / 1.877.nstein1 x222
F. 514.908.5407
M. 514.513.7118
W. www.nstein.com <http://www.nstein.com/> 
Powering Digital Publishing

This message (including any attachments) may contain confidential information intended for a specific individual and purpose, and is protected by law. If you are not the intended recipient, you should delete this message and contact the sender.
Ce message (incluant tout document joint) peut contenir de l?information confidentielle destin?e ? un individu en particulier dans un but pr?cis; il est prot?g? par la loi. Si vous n??tes pas le destinataire de ce message, veuillez le d?truire et en aviser son destinateur.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/0fd33a21/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 2094 bytes
Desc: image001.gif
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/0fd33a21/attachment.gif 

From JALuber at gmx.de  Tue Jan 13 08:09:38 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 13 Jan 2009 17:09:38 +0100
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A107459F3A@USILMS12.ca.com>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com><20090113080507.27820@gmx.net>
	<20090113110200.90EEE34184A4@www.antlr.org>
	<20090113141252.74560@gmx.net>
	<7D50572C73BC634F92EE211BFF16F4A107459F3A@USILMS12.ca.com>
Message-ID: <20090113160938.24080@gmx.net>

> Thanks for the suggestions on this issue.
> 
> I'm not concerned about the line count - in fact, I want to know which
> physical line a token is located for subsequent regeneration of the source. 
> I'm using this for a "syntax directed" editor.  I just want to absorb the
> continuations quietly.
> 
> I still can't figure out how to handle the case where continuation
> characters (- and +) are embedded in prior to the end of line.  A + or - is only a
> continuation if the following character is an end of line.  If this isn't
> true, then the + or - is a valid character in an token.  
> 
> My lexer rules look like this --
> 
> /*
> 	LEXER RULES
> */
> 
> ID	: Any+
> 	| Quote (Any | Blank)* Quote
> 	;
> 
> fragment
> Blank	: ' '
> 	;
> 
> fragment
> Any	:( AlphaNum | Special | NATL  )
> 	;
> 
> fragment
> Quote	:	'\''
> 	;
> fragment
> Special :	'_' | '-' | '=' | '+'
> 	|	'/' | '\\'
> 	|	':' | ';'
> 	|	'<' | '>'
> 	|	'.' | ',' | '?' | '!'
> 	|	'~' | '%' | '^' | '&' | '*'
> 	|	'{' | '}' | '[' | ']' | '|'
> 	;
> 
> fragment
> AlphaNum:	ALPHA|DIGIT;
> 
> 
> fragment
> DIGIT   : 	('0'..'9');
> 
> fragment
> ALPHA
> 	: 	('a'..'z'|'A'..'Z')
>         ;
> 
> fragment
> NATL 	:  	( '$' | '#' | '@')
>         ;
> 
> EOS	:
> 	(	'\r'
> 	|	'\n'
> 	)+
> 	;
> 
> CONTINUEMINUS
> 	:	'-\r'
> 	|	'-\n'
> 	|	'-\r\n'
> 	{ $channel=HIDDEN; }
> 	;
> 
> CONTINUEPLUS
> 	:	'+\r'
> 	|	'+\n'
> 	|	'+\r\n'
> 	{ $channel=HIDDEN; }
> 	;
> 
> WS  	:
> 	(   	' '
>         |   	'\t'
>         )+
>         { $channel=HIDDEN; }
>     	;
> 
> COMMENT
> 	: '/*' (options {greedy=false;} : . )* '*/'
> 	{ $channel=HIDDEN; }
> 	;
> 
> I have a problem when I have a statement like the following --
> 
> Cmd parm1 parm2 verylong-
> parm
> 
> The - at the end of the verylongparm is absorbed as part of the ID token. 
> 
> The above works OK if there's WS between the last token and the -, but
> that't not the syntax I have to conform to.
> 
> Thanks for any additional feedback.

IMO, only a modified stream can make this work right. Unless you want to merge/modify the tokens in the parser which is more work and potentially buggy than doing the stream approach (especially if you add an option to the program which allows to swap the modifed stream class with the normal stream class to see if a bug is in the stream or in the grammar).

Johannes
> 
> -----Original Message-----
> From: Johannes Luber [mailto:JALuber at gmx.de] 
> Sent: Tuesday, January 13, 2009 9:13 AM
> To: Gavin Lambert; Brisard, Fred D; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Handling explicit continuation characters
> 
> > At 21:05 13/01/2009, Johannes Luber wrote:
> >  >Wouldn't it be easier to create an own StringStream (dreived 
> > from
> >  >ANTLRStringStream) which silently swallows the + and - as well 
> > the
> >  >following newline? Then both lexer and parser are cleaner.
> > 
> > That's certainly a possibility (and perhaps a good one), but 
> > that'd end up screwing up the line numbering, wouldn't it?
> 
> I don't see, why swallowing the two characters would prevent increasing
> the line count. Tokens receive the line number from the stream itself and not
> because the lexer counts newlines.
> 
> Johannes
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen:
> http://www.gmx.net/de/go/multimessenger

-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a

From sharwell at pixelminegames.com  Tue Jan 13 08:12:34 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 13 Jan 2009 10:12:34 -0600
Subject: [antlr-interest] Passing user defined exceptions through
	theparser.
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com>
References: <496A44E8.8030403@gmail.com>	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>	<496BC0E1.5090606@gmail.com><3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com><496C853A.1040808@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67697@Bloodymary.ironwillgames.com>

I just checked and the feature is not implemented in the code generator
yet. At least in the C# port of the tool it will cause recognition
exceptions if you use it in a grammar right now.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Tuesday, January 13, 2009 10:06 AM
To: Peter C. Chapin
Cc: antlr-interest
Subject: Re: [antlr-interest] Passing user defined exceptions through
theparser.

There is a throwsSpec in the ANTLR tool grammar that *should* be able to
be used like this:

my_rule /*returns [Object o]*/ throws RecognitionException,
OperationCanceledException
 : ...
 ;

It doesn't apply to C# so it's not implemented in my CSharp3 target.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Tuesday, January 13, 2009 6:13 AM
Cc: antlr-interest
Subject: Re: [antlr-interest] Passing user defined exceptions through
the parser.

Laurent Caillette wrote:

> This should work if you make OperationCanceledException a subclass of
> RecognitionException, which is a checked exception thrown by parser's
> methods. Then the catch clause does its job.
>   

Okay, thanks. That's a little unsatisfying because the exception in
question really isn't a problem with recognition. Still, I can live with
that. I guess that's life with Java.

Peter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ian at telematter.com  Tue Jan 13 10:02:23 2009
From: ian at telematter.com (ian eyberg)
Date: Tue, 13 Jan 2009 12:02:23 -0600
Subject: [antlr-interest] =?utf-8?b?J+KAkycgdmVyc3VzICctJw==?=
Message-ID: <20090113180223.GA5539@localhost>

hi everyone,

  just ran across a problem which I hope
someone knows the answer to.

I thought I was trying to parse out a '-'
but on closer examination I need to parse
out a '?'.

looking that up one is called a en dash and the latter
is an em dash.

I tried to throw it into a lexer and a parser rule
to no avail -- do I need to separate this into hex
somehow? How do you guys deal with these?

Thanks,

-Ian

From ian at telematter.com  Tue Jan 13 11:31:51 2009
From: ian at telematter.com (ian eyberg)
Date: Tue, 13 Jan 2009 13:31:51 -0600
Subject: [antlr-interest] =?utf-8?b?J+KAk3ZlcnN1cyAnLSc=?=
Message-ID: <20090113193151.GA9129@localhost>

> hi everyone,
> 
>   just ran across a problem which I hope
> someone knows the answer to.
> 
> I thought I was trying to parse out a '-'
> but on closer examination I need to parse
> out a '?'.
> 
> looking that up one is called a en dash and the latter
> is an em dash.
> 
> I tried to throw it into a lexer and a parser rule
> to no avail -- do I need to separate this into hex
> somehow? How do you guys deal with these?
> 
> Thanks,
> 
> -Ian

awesome! got it!

hex escaped like so:

EMDASH  : '\u2013'

it would've helped to know that I was using a 'en dash' rather than a 'em dash'
they look exactly the same to me in the shell/vim -- guess I need to update my
character sets!

Thanks,
-Ian

From Bernhard.Schmalhofer at gmx.de  Tue Jan 13 12:05:41 2009
From: Bernhard.Schmalhofer at gmx.de (Bernhard Schmalhofer)
Date: Tue, 13 Jan 2009 21:05:41 +0100
Subject: [antlr-interest] =?utf-8?b?J+KAk3ZlcnN1cyAnLSc=?=
In-Reply-To: <20090113193151.GA9129@localhost>
References: <20090113193151.GA9129@localhost>
Message-ID: <496CF415.6050303@gmx.de>

ian eyberg schrieb:
> awesome! got it!
>
> hex escaped like so:
>
> EMDASH  : '\u2013'
>
> it would've helped to know that I was using a 'en dash' rather than a 'em dash'
> they look exactly the same to me in the shell/vim -- guess I need to update my
> character sets!
>   
Alternatively, within vim, you can bring the questionable character 
under die cursor and call ':ascii'.

Regards,
   Bernhard



From antlr at mirality.co.nz  Tue Jan 13 12:21:37 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 09:21:37 +1300
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.co
 m>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
Message-ID: <20090113202147.0E89D3418454@www.antlr.org>

At 00:29 14/01/2009, chain one wrote:
>I tried the lexer rule you gave me. But following error comes 
>out:
>
>Alternative 155: after matching input such as 
>'F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9', 
>'A'..'Z', '_', 
>'a'..'z'}'F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9', 
>'A'..'Z', '_', 'a'..'z'}'F''U''N''C''T''I''O'{'\u0000'..'/', 
>':'..'@', 'N', '['..'^', '`', '{'..'\uFFFF'} decision cannot 
>predict what comes next due to recursion overflow to 
>FUNCTION_DECL from FUNCTION_DECL

Hmm.  Well, another variation (that it might like better) would 
be:

FUNCTION_DECL
   : 'FUNCTION' { $channel = HIDDEN; }
     (FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N' (~'D' | 'D'
       (~'_' | '_' (~'F' | 'F' (~'U' | 'U' (~'N' | 'N'
       (~'C' | 'C' (~'T' | 'T' (~'I' | 'I' (~'O' | 'O'
       (~'N' | 'N' ~SEMI))))))))))))*
     'END_FUNCTION' SEMI
   ;

Another thing that might help is to change the embedded reference 
to FUNCTION_DECL to ('FUNCTION') => FUNCTION_DECL; ie:

FUNCTION_DECL
   : 'FUNCTION' { $channel = HIDDEN; }
     ('FUNCTION') => FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N'
       (~'D' | 'D' (~'_' | '_' (~'F' | 'F' (~'U' | 'U'
       (~'N' | 'N' (~'C' | 'C' (~'T' | 'T' (~'I' | 'I'
       (~'O' | 'O' (~'N' | 'N' ~SEMI))))))))))))*
     'END_FUNCTION' SEMI
   ;


From antlr at mirality.co.nz  Tue Jan 13 12:35:08 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 09:35:08 +1300
Subject: [antlr-interest] Handling explicit continuation characters
In-Reply-To: <7D50572C73BC634F92EE211BFF16F4A107459F3A@USILMS12.ca.com>
References: <004501c9754e$60990630$21cb1290$@b@s7software.com>
	<20090113080507.27820@gmx.net>
	<20090113110200.90EEE34184A4@www.antlr.org>
	<20090113141252.74560@gmx.net>
	<7D50572C73BC634F92EE211BFF16F4A107459F3A@USILMS12.ca.com>
Message-ID: <20090113203534.123F63418454@www.antlr.org>

At 04:49 14/01/2009, Brisard, Fred D wrote:
 >I'm not concerned about the line count - in fact, I want to know 

 >which physical line a token is located for subsequent 
regeneration
 >of the source.  I'm using this for a "syntax directed" 
editor.  I
 >just want to absorb the continuations quietly.

That's kinda what I was getting at though.  I'm not sure whether 
it's the lexer or the stream that maintains the line count -- if 
it's the stream, then a stream replacement solution is definitely 
the way to go, I think.  If it's the lexer, though, then using a 
stream replacement will mean that you'll get the line numbers 
*after continuations are removed*, which will be different than 
the lines in the source file (and hence useless).

 >I still can't figure out how to handle the case where 
continuation
 >characters (- and +) are embedded in prior to the end of 
line.  A +
 >or - is only a continuation if the following character is an end 
of
 >line.  If this isn't true, then the + or - is a valid character 
in
 >an token.
[...]
 >The - at the end of the verylongparm is absorbed as part of the 
ID
 >token.
 >
 >The above works OK if there's WS between the last token and the 
-,
 >but that't not the syntax I have to conform to.

As Johannes said, using a modified stream is definitely the 
easiest way to go here.

Otherwise, you'll need to modify your rules such that they refuse 
to match a - or + if it's followed by a newline.  The issue is 
that once ANTLR is *inside* a lexer rule, it will continue 
consuming characters as long as that rule alone is happy to do so 
-- it doesn't consider the possibility of stopping earlier and 
matching some other rule instead.  (Which at times like this can 
be annoying, but it's also what allows comments and island 
grammars to work.)

One way of doing this would be to modify your rules like so:

CONTINUEPLUS: '+' '\r'? '\n' { $channel = HIDDEN; };
CONTINUEMINUS: '-' '\r'? '\n' { $channel = HIDDEN; };

fragment
Special
  : '_' | '='
  | { input.LA(2) != '\r' && input.LA(2) != '\n' }? => ('+' | '-')
	|	'/' | '\\'
	|	':' | ';'
	|	'<' | '>'
	|	'.' | ',' | '?' | '!'
	|	'~' | '%' | '^' | '&' | '*'
	|	'{' | '}' | '[' | ']' | '|'
	;


From mgering at us.ibm.com  Tue Jan 13 12:50:35 2009
From: mgering at us.ibm.com (Mike Gering)
Date: Tue, 13 Jan 2009 15:50:35 -0500
Subject: [antlr-interest] Newbie Help
Message-ID: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>

I'm learning Antlr (version 2.7.7) and cannot figure out how to 
disambiguate a simple grammar: 

programmatic_unit 
        : simple_name a b
        ;

a 
        : (STAR simple_name )*
                (SLASH simple_name)*
        ;

b 
        :
                ( (STAR) 
                        INT)?
        ;

simple_name 
        : NAME_FRAG 
        ((SPACE)? NAME_FRAG)*
        ;

The generator complains that the "a" rule above is nondeterministic upon 
STAR. I understand (I think) why -- when matching programmatic_unit/a, it 
is ambiguous whether to use "a" or "b" when STAR is the next token. But 
how do I repair the grammar? Any advice would be very welcome. 

Thanks, 
Mike
IBM
(919) 732-5020
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090113/ec731870/attachment.html 

From cp06 at doc.ic.ac.uk  Tue Jan 13 13:39:50 2009
From: cp06 at doc.ic.ac.uk (Chris Pinnick)
Date: Tue, 13 Jan 2009 21:39:50 +0000
Subject: [antlr-interest] Selectively ignoring whitespace
Message-ID: <496D0A26.9020907@doc.ic.ac.uk>

I'd like to ignor white space in general, and am doing so currently using

WS : (' '
    |'t'
   | '\n' )+
     {$channel=HIDDEN;} ;


but would like to include whitespace characters at certain points, e.g.
when reading in a text string beginning with a  '
so I have something like this:

IDENT_WSPACE
         :  LETTER {(LETTER | DIGIT | WS )*;

input_ident: SINGLEQUOTE string=IDENT_WSPACE SINGLEQUOTE;


But it is not currently working, any ideas?

thanks,
chris

From rwallace at thewallacepack.net  Tue Jan 13 15:49:29 2009
From: rwallace at thewallacepack.net (Richard Wallace)
Date: Tue, 13 Jan 2009 16:49:29 -0700
Subject: [antlr-interest] Mismatched token problem
Message-ID: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>

Hello,

I am trying to write a rule to match expressions in the following algebraic form

an+b

But, when the b term is negative it is only allowed to be written as

an-b

It seems easy enough, the problem is that identifiers can have the '-'
character in them.  So I have the following in my grammar

expr
       :       DASH? NUMBER? 'n' S* ( PLUS | DASH ) S* NUMBER
       ;

DASH
       :        '-'
       ;

PLUS
       :       '+'
       ;

IDENT
       :       ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
               ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
'0'..'9')*
       |       DASH ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
               ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
'0'..'9')*
       ;

NUMBER
       :       '-' (('0'..'9')* '.')? ('0'..'9')+
       |       (('0'..'9')* '.')? ('0'..'9')+
       ;
S
       :       ( ' ' | '\t' | '\r' | '\n' | '\f' )
       ;

So, when I try this grammar against 4n+3 it works great.  But, if I
try it against 4n-1 it fails with a MismatchedTokenException.  This
seems to be because when evaluating 4n-1 antlr matches the expression
as NUMBER IDENT instead of NUMBER 'n' DASH NUMBER.  I've tried
changing the lookahead and using backtracking all to no avail.  I'm
out of ideas on how to make antlr stop seeing the n-1 as an IDENT and
instead see it as 'n' DASH NUMBER.  Any suggestions?

Thanks,
Rich

From chainone at gmail.com  Tue Jan 13 18:09:21 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 10:09:21 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
Message-ID: <5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>

Seems it still doesn't work.I am still working on this.
I learned a lot from your rely. Thanks Gavin.

On Wed, Jan 14, 2009 at 4:21 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 00:29 14/01/2009, chain one wrote:
>
>> I tried the lexer rule you gave me. But following error comes out:
>>
>> Alternative 155: after matching input such as
>> 'F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>> 'A'..'Z', '_',
>> 'a'..'z'}'F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>> 'A'..'Z', '_', 'a'..'z'}'F''U''N''C''T''I''O'{'\u0000'..'/', ':'..'@', 'N',
>> '['..'^', '`', '{'..'\uFFFF'} decision cannot predict what comes next due to
>> recursion overflow to FUNCTION_DECL from FUNCTION_DECL
>>
>
> Hmm.  Well, another variation (that it might like better) would be:
>
> FUNCTION_DECL
>  : 'FUNCTION' { $channel = HIDDEN; }
>    (FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N' (~'D' | 'D'
>      (~'_' | '_' (~'F' | 'F' (~'U' | 'U' (~'N' | 'N'
>      (~'C' | 'C' (~'T' | 'T' (~'I' | 'I' (~'O' | 'O'
>      (~'N' | 'N' ~SEMI))))))))))))*
>    'END_FUNCTION' SEMI
>  ;
>
> Another thing that might help is to change the embedded reference to
> FUNCTION_DECL to ('FUNCTION') => FUNCTION_DECL; ie:
>
> FUNCTION_DECL
>  : 'FUNCTION' { $channel = HIDDEN; }
>    ('FUNCTION') => FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N'
>      (~'D' | 'D' (~'_' | '_' (~'F' | 'F' (~'U' | 'U'
>      (~'N' | 'N' (~'C' | 'C' (~'T' | 'T' (~'I' | 'I'
>      (~'O' | 'O' (~'N' | 'N' ~SEMI))))))))))))*
>    'END_FUNCTION' SEMI
>  ;
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/3bb7b32c/attachment.html 

From chainone at gmail.com  Tue Jan 13 18:54:01 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 10:54:01 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
Message-ID: <5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>

I know where the problem isThere is another rule named IDENT:

IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

seems this rule conflicts with the FUNCTION_DECL rule.

On Wed, Jan 14, 2009 at 10:09 AM, chain one <chainone at gmail.com> wrote:

> Seems it still doesn't work.I am still working on this.
> I learned a lot from your rely. Thanks Gavin.
>
> On Wed, Jan 14, 2009 at 4:21 AM, Gavin Lambert <antlr at mirality.co.nz>wrote:
>
>> At 00:29 14/01/2009, chain one wrote:
>>
>>> I tried the lexer rule you gave me. But following error comes out:
>>>
>>> Alternative 155: after matching input such as
>>> 'F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>>> 'A'..'Z', '_',
>>> 'a'..'z'}'F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>>> 'A'..'Z', '_', 'a'..'z'}'F''U''N''C''T''I''O'{'\u0000'..'/', ':'..'@', 'N',
>>> '['..'^', '`', '{'..'\uFFFF'} decision cannot predict what comes next due to
>>> recursion overflow to FUNCTION_DECL from FUNCTION_DECL
>>>
>>
>> Hmm.  Well, another variation (that it might like better) would be:
>>
>> FUNCTION_DECL
>>  : 'FUNCTION' { $channel = HIDDEN; }
>>    (FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N' (~'D' | 'D'
>>      (~'_' | '_' (~'F' | 'F' (~'U' | 'U' (~'N' | 'N'
>>      (~'C' | 'C' (~'T' | 'T' (~'I' | 'I' (~'O' | 'O'
>>      (~'N' | 'N' ~SEMI))))))))))))*
>>    'END_FUNCTION' SEMI
>>  ;
>>
>> Another thing that might help is to change the embedded reference to
>> FUNCTION_DECL to ('FUNCTION') => FUNCTION_DECL; ie:
>>
>> FUNCTION_DECL
>>  : 'FUNCTION' { $channel = HIDDEN; }
>>    ('FUNCTION') => FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N'
>>      (~'D' | 'D' (~'_' | '_' (~'F' | 'F' (~'U' | 'U'
>>      (~'N' | 'N' (~'C' | 'C' (~'T' | 'T' (~'I' | 'I'
>>      (~'O' | 'O' (~'N' | 'N' ~SEMI))))))))))))*
>>    'END_FUNCTION' SEMI
>>  ;
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/e639671f/attachment.html 

From cummings at kjchome.homeip.net  Tue Jan 13 19:59:10 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Tue, 13 Jan 2009 22:59:10 -0500
Subject: [antlr-interest] Mismatched token problem
In-Reply-To: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
Message-ID: <496D630E.1090403@kjchome.homeip.net>

Richard Wallace wrote:
> Hello,
> 
> I am trying to write a rule to match expressions in the following algebraic form
> 
> an+b
> 
> But, when the b term is negative it is only allowed to be written as
> 
> an-b
> 
> It seems easy enough, the problem is that identifiers can have the '-'
> character in them.  So I have the following in my grammar
> 
> expr
>        :       DASH? NUMBER? 'n' S* ( PLUS | DASH ) S* NUMBER
>        ;
> 
> DASH
>        :        '-'
>        ;
> 
> PLUS
>        :       '+'
>        ;
> 
> IDENT
>        :       ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>                ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
> '0'..'9')*
>        |       DASH ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>                ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
> '0'..'9')*
>        ;
> 
> NUMBER
>        :       '-' (('0'..'9')* '.')? ('0'..'9')+
>        |       (('0'..'9')* '.')? ('0'..'9')+
>        ;
> S
>        :       ( ' ' | '\t' | '\r' | '\n' | '\f' )
>        ;
> 
> So, when I try this grammar against 4n+3 it works great.  But, if I
> try it against 4n-1 it fails with a MismatchedTokenException.  This
> seems to be because when evaluating 4n-1 antlr matches the expression
> as NUMBER IDENT instead of NUMBER 'n' DASH NUMBER.  I've tried
> changing the lookahead and using backtracking all to no avail.  I'm
> out of ideas on how to make antlr stop seeing the n-1 as an IDENT and
> instead see it as 'n' DASH NUMBER.  Any suggestions?

Take the '-' out of the NUMBER production (ie remove the first alternative)

NUMBER : (('0'..'9')* '.')? ('0'..'9')+
        ;

Why is '-' a valid IDENT character?  And are you using IDENT anywhere 
else in your grammar?  I don't see it referenced in the snippet above.
If you need to use '-' in IDENT names, you may need to use a predicate 
so it doesn't get confused with the usage in the expr.  Where can IDENTs 
be used?  By default antlr will try and match as much as TOKENs as it 
can.  This happens long before it starts parsing.  IDENT is a Lexer rule 
(ie made up of characters) whereas expr is a Parser rule (made up of 
tokens).

> Thanks,
> Rich

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From chainone at gmail.com  Tue Jan 13 20:01:27 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 12:01:27 +0800
Subject: [antlr-interest] Why these lex rules make the generated .c source
	file grow to over 40M size?
Message-ID: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>

ENTITY_DECL
: 'BEGIN_ENTITY' ( options {greedy=false;} : . )* 'END_ENTITY' SEMI
;
PROCEDURE_DECL
: 'PROCEDURE' ( options {greedy=false;} : . )* 'END_PROCEDURE' SEMI
;

TYPE_DECL
: 'TYPE' ( options {greedy=false;} : . )* 'END_TYPE' SEMI
;
SUBTYPE_CONSTRAINT_DECL
: 'SUBTYPE_CONSTRAINT' ( options {greedy=false;} : . )*
'END_SUBTYPE_CONSTRAINT' SEMI
;

RULE_DECL
: 'RULE' ( options {greedy=false;} : . )* 'END_RULE' SEMI
;

CONSTANT_DECL
: 'CONSTANT' ( options {greedy=false;} : . )*  'END_CONSTANT'
;

REFERENCE_CLAUSE
: 'REFERENCE'  'FROM' ( options {greedy=false;} : . )*  SEMI
;
USE_CLAUSE
:  'USE' 'FROM' ( options {greedy=false;} : . )*  SEMI
;

COMMENT
       :       '(*'
               {
                       $channel=HIDDEN;
               }
               (       ~('('|'*')
                       |       ('(' ~'*') => '('
                       |       ('*' ~')') => '*'
                       |       COMMENT
               )*
               '*)'
       ;
LINECOMMENT
:
'--' ( ~('\n'|'\r') )*
{  $channel=HIDDEN; }
;

SEMI
: ';'
;


LPAREN
: '('
;

RPAREN
: ')'
;

LBRACK
: '['
;

RBRACK
: ']'
;

LCURLY
: '{'
;

RCURLY
: '}'
;

STRING
:
'\''
(~'\'')*
'\''
;

WS
: ( ' '
| '\f'
| '\t'
| ( '\r\n' // Evil Dos
| '\n\r' // Unknown
| '\n' // Unix
| '\r' // Macintosh
)
 )
{ $channel=HIDDEN; }
;

IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;



//==========================================
The size of this generated .c file is so so so large.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/c1ddd950/attachment.html 

From indhu.b at s7software.com  Tue Jan 13 21:01:34 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 14 Jan 2009 10:31:34 +0530
Subject: [antlr-interest] Selectively ignoring whitespace
In-Reply-To: <496D0A26.9020907@doc.ic.ac.uk>
References: <496D0A26.9020907@doc.ic.ac.uk>
Message-ID: <000b01c97605$2d0adb10$87209130$@b@s7software.com>

If you are not using single quote anywhere else in the grammar, you can try
this:

STRING
	: 	SINGLEQUOTE ( options {greedy=false;} : . )* SINGLEQUOTE
	;

If you are using single quote at other places also, then the problem becomes
little more complex.

In that case you have to decide in the lexer itself, in which situation you
must emit WS as default token. For example you can decide to emit WS as
default token between every pair of DQUOTE. Is it possible to define this
exactly in your grammar? If it is possible then you can override the emit
method and have two helped functions setWSDefault and unsetWSDefault.

- Indhu

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Pinnick
Sent: Wednesday, January 14, 2009 3:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Selectively ignoring whitespace

I'd like to ignor white space in general, and am doing so currently using

WS : (' '
    |'t'
   | '\n' )+
     {$channel=HIDDEN;} ;


but would like to include whitespace characters at certain points, e.g.
when reading in a text string beginning with a  '
so I have something like this:

IDENT_WSPACE
         :  LETTER {(LETTER | DIGIT | WS )*;

input_ident: SINGLEQUOTE string=IDENT_WSPACE SINGLEQUOTE;


But it is not currently working, any ideas?

thanks,
chris

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From nightctawler at gmail.com  Tue Jan 13 23:52:07 2009
From: nightctawler at gmail.com (alessio)
Date: Wed, 14 Jan 2009 08:52:07 +0100
Subject: [antlr-interest] C Grammar
Message-ID: <496D99A7.3070208@gmail.com>

Hi to everybody.
I have a little doubt. I have downloaded GnuC grammar from antlr 
site,and i must add some semantic actions(like type checking). Do you 
think i must add them in the parser or i must add them in the visitor?

From chainone at gmail.com  Tue Jan 13 23:58:53 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 15:58:53 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
	<5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>
Message-ID: <5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.com>

I am still working on this. Searching for solutions that could make the
IDENT rule and FUNCTION_DECL work together.Could anybody help me with these?
Thanks.


On Wed, Jan 14, 2009 at 10:54 AM, chain one <chainone at gmail.com> wrote:

> I know where the problem isThere is another rule named IDENT:
>
> IDENT
>
> : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>  ;
>
> seems this rule conflicts with the FUNCTION_DECL rule.
>
> On Wed, Jan 14, 2009 at 10:09 AM, chain one <chainone at gmail.com> wrote:
>
>> Seems it still doesn't work.I am still working on this.
>> I learned a lot from your rely. Thanks Gavin.
>>
>> On Wed, Jan 14, 2009 at 4:21 AM, Gavin Lambert <antlr at mirality.co.nz>wrote:
>>
>>> At 00:29 14/01/2009, chain one wrote:
>>>
>>>> I tried the lexer rule you gave me. But following error comes out:
>>>>
>>>> Alternative 155: after matching input such as
>>>> 'F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>>>> 'A'..'Z', '_',
>>>> 'a'..'z'}'F''U''N''C''T''I''O''N''E''N''D''_''F''U''N''C''T''I''O''N'{'0'..'9',
>>>> 'A'..'Z', '_', 'a'..'z'}'F''U''N''C''T''I''O'{'\u0000'..'/', ':'..'@', 'N',
>>>> '['..'^', '`', '{'..'\uFFFF'} decision cannot predict what comes next due to
>>>> recursion overflow to FUNCTION_DECL from FUNCTION_DECL
>>>>
>>>
>>> Hmm.  Well, another variation (that it might like better) would be:
>>>
>>> FUNCTION_DECL
>>>  : 'FUNCTION' { $channel = HIDDEN; }
>>>    (FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N' (~'D' | 'D'
>>>      (~'_' | '_' (~'F' | 'F' (~'U' | 'U' (~'N' | 'N'
>>>      (~'C' | 'C' (~'T' | 'T' (~'I' | 'I' (~'O' | 'O'
>>>      (~'N' | 'N' ~SEMI))))))))))))*
>>>    'END_FUNCTION' SEMI
>>>  ;
>>>
>>> Another thing that might help is to change the embedded reference to
>>> FUNCTION_DECL to ('FUNCTION') => FUNCTION_DECL; ie:
>>>
>>> FUNCTION_DECL
>>>  : 'FUNCTION' { $channel = HIDDEN; }
>>>    ('FUNCTION') => FUNCTION_DECL | ~'E' | 'E' (~'N' | 'N'
>>>      (~'D' | 'D' (~'_' | '_' (~'F' | 'F' (~'U' | 'U'
>>>      (~'N' | 'N' (~'C' | 'C' (~'T' | 'T' (~'I' | 'I'
>>>      (~'O' | 'O' (~'N' | 'N' ~SEMI))))))))))))*
>>>    'END_FUNCTION' SEMI
>>>  ;
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/919f841d/attachment.html 

From cp06 at doc.ic.ac.uk  Wed Jan 14 01:30:16 2009
From: cp06 at doc.ic.ac.uk (Chris Pinnick)
Date: Wed, 14 Jan 2009 09:30:16 +0000
Subject: [antlr-interest] Selectively ignoring whitespace
In-Reply-To: <000b01c97605$2d0adb10$87209130$@b@s7software.com>
References: <496D0A26.9020907@doc.ic.ac.uk>
	<000b01c97605$2d0adb10$87209130$@b@s7software.com>
Message-ID: <496DB0A8.7070201@doc.ic.ac.uk>

Thanks that solves my problem.

I'm only using single quotes in that one place, so its fine.


Indhu Bharathi wrote:
> If you are not using single quote anywhere else in the grammar, you can try
> this:
>
> STRING
> 	: 	SINGLEQUOTE ( options {greedy=false;} : . )* SINGLEQUOTE
> 	;
>
> If you are using single quote at other places also, then the problem becomes
> little more complex.
>
> In that case you have to decide in the lexer itself, in which situation you
> must emit WS as default token. For example you can decide to emit WS as
> default token between every pair of DQUOTE. Is it possible to define this
> exactly in your grammar? If it is possible then you can override the emit
> method and have two helped functions setWSDefault and unsetWSDefault.
>
> - Indhu
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Pinnick
> Sent: Wednesday, January 14, 2009 3:10 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Selectively ignoring whitespace
>
> I'd like to ignor white space in general, and am doing so currently using
>
> WS : (' '
>     |'t'
>    | '\n' )+
>      {$channel=HIDDEN;} ;
>
>
> but would like to include whitespace characters at certain points, e.g.
> when reading in a text string beginning with a  '
> so I have something like this:
>
> IDENT_WSPACE
>          :  LETTER {(LETTER | DIGIT | WS )*;
>
> input_ident: SINGLEQUOTE string=IDENT_WSPACE SINGLEQUOTE;
>
>
> But it is not currently working, any ideas?
>
> thanks,
> chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From antlr at mirality.co.nz  Wed Jan 14 01:42:16 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 22:42:16 +1300
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@
	us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>
Message-ID: <20090114094227.90F1934184AB@www.antlr.org>

At 09:50 14/01/2009, Mike Gering wrote:
>I'm learning Antlr (version 2.7.7) and cannot figure out how to 
>disambiguate a simple grammar:
[...]
>a
>         : (STAR simple_name )*
>                 (SLASH simple_name)*
>         ;
[...]
>The generator complains that the "a" rule above is 
>nondeterministic upon STAR. I understand (I think) why -- when 
>matching programmatic_unit/a, it is ambiguous whether to use "a" 
>or "b" when STAR is the next token. But how do I repair the 
>grammar? Any advice would be very welcome.

Setting the option k=2 should do the trick.  ANTLR needs to look 
ahead two tokens (ie. to the token following the STAR) to figure 
out whether it's a NAME_FRAG or an INT (and hence which path it 
should take).


From antlr at mirality.co.nz  Wed Jan 14 01:50:08 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Jan 2009 22:50:08 +1300
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.co
 m>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
	<5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>
	<5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.com>
Message-ID: <20090114095016.C41AF34184AB@www.antlr.org>

At 20:58 14/01/2009, chain one wrote:
>I am still working on this. Searching for solutions that could 
>make the IDENT rule and FUNCTION_DECL work together.

Well, one thing you could try would be:

IDENT
   : ('FUNCTION') => FUNCTION_DECL { $type = FUNCTION_DECL; 
$channel = HIDDEN; }
   | ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
   ;

I wouldn't have thought it'd be necessary, though; ANTLR ought to 
be able to figure that out on its own.

Although -- it's generally a good idea to put the more "vague" 
lexer rules further down, so try making sure that the 
FUNCTION_DECL rule is listed before the IDENT rule (instead of 
doing the above) and see if that helps.


From chainone at gmail.com  Wed Jan 14 03:09:49 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 19:09:49 +0800
Subject: [antlr-interest] Why these lex rules make the generated .c
	source file grow to over 40M size?
In-Reply-To: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>
References: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>
Message-ID: <5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>

I found using the same lex rule,the size of the generated .Java file is much
smaller than the generated .C file.For example, the size of
the generated  .Java file is 124K, while the size of .c file could reach to
14M!!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/7b7651dd/attachment.html 

From chainone at gmail.com  Wed Jan 14 03:17:43 2009
From: chainone at gmail.com (chain one)
Date: Wed, 14 Jan 2009 19:17:43 +0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <496db559.e203be0a.1d17.ffffedbeSMTPIN_ADDED@mx.google.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
	<5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>
	<5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.com>
	<496db559.e203be0a.1d17.ffffedbeSMTPIN_ADDED@mx.google.com>
Message-ID: <5a92ffb60901140317m51d823bbtad0eb4587f786b17@mail.gmail.com>

Thanks Gavin.Really appreciate your help.
The method you provided works!
However the size of the generated .C file could reach to 14M. If I change
the language option to Java, the size of generated .Java file is only 123K.

On Wed, Jan 14, 2009 at 5:50 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 20:58 14/01/2009, chain one wrote:
>
>> I am still working on this. Searching for solutions that could make the
>> IDENT rule and FUNCTION_DECL work together.
>>
>
> Well, one thing you could try would be:
>
> IDENT
>  : ('FUNCTION') => FUNCTION_DECL { $type = FUNCTION_DECL; $channel =
> HIDDEN; }
>  | ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>  ;
>
> I wouldn't have thought it'd be necessary, though; ANTLR ought to be able
> to figure that out on its own.
>
> Although -- it's generally a good idea to put the more "vague" lexer rules
> further down, so try making sure that the FUNCTION_DECL rule is listed
> before the IDENT rule (instead of doing the above) and see if that helps.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/ef9dc5a4/attachment.html 

From pcc482719 at gmail.com  Wed Jan 14 04:31:59 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Wed, 14 Jan 2009 07:31:59 -0500
Subject: [antlr-interest] Passing user defined exceptions through
	theparser.
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67697@Bloodymary.ironwillgames.com>
References: <496A44E8.8030403@gmail.com>	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>	<496BC0E1.5090606@gmail.com><3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com><496C853A.1040808@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com>
	<86403CA0939415448BCCB83855EFE09AA67697@Bloodymary.ironwillgames.com>
Message-ID: <496DDB3F.4000408@gmail.com>

Sam Harwell wrote:

> I just checked and the feature is not implemented in the code generator
> yet. At least in the C# port of the tool it will cause recognition
> exceptions if you use it in a grammar right now.
>   

Okay, thanks for pointing this out. I'll take a look and keep my eye on it.

Peter

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Tuesday, January 13, 2009 10:06 AM
> To: Peter C. Chapin
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Passing user defined exceptions through
> theparser.
>
> There is a throwsSpec in the ANTLR tool grammar that *should* be able to
> be used like this:
>
> my_rule /*returns [Object o]*/ throws RecognitionException,
> OperationCanceledException
>  : ...
>  ;
>
> It doesn't apply to C# so it's not implemented in my CSharp3 target.
>
> Sam
>   


From JALuber at gmx.de  Wed Jan 14 07:33:54 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Wed, 14 Jan 2009 16:33:54 +0100
Subject: [antlr-interest] Why these lex rules make the generated
 .c	source file grow to over 40M size?
In-Reply-To: <5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>
References: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>
	<5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>
Message-ID: <20090114153354.5370@gmx.net>

> I found using the same lex rule,the size of the generated .Java file is
> much
> smaller than the generated .C file.For example, the size of
> the generated  .Java file is 124K, while the size of .c file could reach
> to
> 14M!!!

Probably the C target doesn't implement the compressed format for DFAs. Shouldn't be too difficult to add.

Johannes
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From mgering at us.ibm.com  Wed Jan 14 07:43:54 2009
From: mgering at us.ibm.com (Mike Gering)
Date: Wed, 14 Jan 2009 10:43:54 -0500
Subject: [antlr-interest] Newbie Help
In-Reply-To: <200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>
	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
Message-ID: <OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>

Gavin,

Thanks for the suggestion, but no value of k will work because the grammar 
accepts an optional list of tokens between (STAR simple_name)* and "b". 
For example:
        x*x*x*y/y/y*z
should be accepted. The series of slash terms can be arbitrarily long or 
absent.

Mike
IBM
(919) 732-5020




From:
Gavin Lambert <antlr at mirality.co.nz>
To:
Mike Gering/Raleigh/IBM at IBMUS, antlr-interest at antlr.org
Date:
01/14/2009 04:42 AM
Subject:
Re: [antlr-interest] Newbie Help



At 09:50 14/01/2009, Mike Gering wrote:
>I'm learning Antlr (version 2.7.7) and cannot figure out how to 
>disambiguate a simple grammar:
[...]
>a
>         : (STAR simple_name )*
>                 (SLASH simple_name)*
>         ;
[...]
>The generator complains that the "a" rule above is 
>nondeterministic upon STAR. I understand (I think) why -- when 
>matching programmatic_unit/a, it is ambiguous whether to use "a" 
>or "b" when STAR is the next token. But how do I repair the 
>grammar? Any advice would be very welcome.

Setting the option k=2 should do the trick.  ANTLR needs to look 
ahead two tokens (ie. to the token following the STAR) to figure 
out whether it's a NAME_FRAG or an INT (and hence which path it 
should take).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/e8ad9438/attachment.html 

From mgering at us.ibm.com  Wed Jan 14 07:52:19 2009
From: mgering at us.ibm.com (Mike Gering)
Date: Wed, 14 Jan 2009 10:52:19 -0500
Subject: [antlr-interest] Newbie Help
In-Reply-To: <496D1E7D.7090903@fh-hagenberg.at>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>
	<496D1E7D.7090903@fh-hagenberg.at>
Message-ID: <OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>

Markus, 

Thanks for the response. I'm stuck with 2.7.7 because our legal guys have 
not approved us to use any version 3 releases, and I have no realistic 
hope that they will any time soon :-(

The problem with setting the lookahead depth is that no number is 
sufficient because the (SLASH simple_name)* block comes between the two 
problem blocks. So this example should be matched: a*b*c/d/e/f*2. The 
lookahead has to span the /d/e/f tokens.

Mike
IBM
(919) 732-5020




From:
Markus Stoeger <markus.stoeger at fh-hagenberg.at>
To:
Mike Gering/Raleigh/IBM at IBMUS
Date:
01/13/2009 06:07 PM
Subject:
Re: [antlr-interest] Newbie Help



Hi Mike,

I'm using ANTLR 3.1.1 and it compiles without errors or warnings. Is 
there a reason why you're still using 2.x?

The STAR in a and b would only cause a problem if you used only one 
token of lookahead. With more than one token of lookahead ANTLR should 
be able to figure out the correct symbol itself.

Can you try setting the following option at the top of your grammar and 
see if that helps?

options {
  k=2;
}

Max

Mike Gering schrieb:
>
> I'm learning Antlr (version 2.7.7) and cannot figure out how to 
> disambiguate a simple grammar:
>
> programmatic_unit
>         : simple_name a b
>         ;
>
> a
>         : (STAR simple_name )*
>                 (SLASH simple_name)*
>         ;
>
> b
>         :
>                 ( (STAR)
>                         INT)?
>         ;
>
> simple_name
>         : NAME_FRAG
>         ((SPACE)? NAME_FRAG)*
>         ;
>
> The generator complains that the "a" rule above is nondeterministic 
> upon STAR. I understand (I think) why -- when matching 
> programmatic_unit/a, it is ambiguous whether to use "a" or "b" when 
> STAR is the next token. But how do I repair the grammar? Any advice 
> would be very welcome.
>
> Thanks,
> Mike
> IBM
> (919) 732-5020
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/daa9915f/attachment.html 

From mgering at us.ibm.com  Wed Jan 14 07:53:27 2009
From: mgering at us.ibm.com (Mike Gering)
Date: Wed, 14 Jan 2009 10:53:27 -0500
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
	<OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
Message-ID: <OFA7DB1DEA.A4C5D651-ON8525753E.00573981-8525753E.00574B12@us.ibm.com>

Gavin,

Ooops -- my example should have been a little different: x*x*x*y/y/y*2

Mike
IBM
(919) 732-5020




From:
Mike Gering/Raleigh/IBM at IBMUS
To:
Gavin Lambert <antlr at mirality.co.nz>
Cc:
antlr-interest at antlr.org
Date:
01/14/2009 10:44 AM
Subject:
Re: [antlr-interest] Newbie Help




Gavin, 

Thanks for the suggestion, but no value of k will work because the grammar 
accepts an optional list of tokens between (STAR simple_name)* and "b". 
For example: 
        x*x*x*y/y/y*z 
should be accepted. The series of slash terms can be arbitrarily long or 
absent. 

Mike
IBM
(919) 732-5020



From: 
Gavin Lambert <antlr at mirality.co.nz> 
To: 
Mike Gering/Raleigh/IBM at IBMUS, antlr-interest at antlr.org 
Date: 
01/14/2009 04:42 AM 
Subject: 
Re: [antlr-interest] Newbie Help




At 09:50 14/01/2009, Mike Gering wrote:
>I'm learning Antlr (version 2.7.7) and cannot figure out how to 
>disambiguate a simple grammar:
[...]
>a
>         : (STAR simple_name )*
>                 (SLASH simple_name)*
>         ;
[...]
>The generator complains that the "a" rule above is 
>nondeterministic upon STAR. I understand (I think) why -- when 
>matching programmatic_unit/a, it is ambiguous whether to use "a" 
>or "b" when STAR is the next token. But how do I repair the 
>grammar? Any advice would be very welcome.

Setting the option k=2 should do the trick.  ANTLR needs to look 
ahead two tokens (ie. to the token following the STAR) to figure 
out whether it's a NAME_FRAG or an INT (and hence which path it 
should take).


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/4a7d7011/attachment.html 

From rwallace at thewallacepack.net  Wed Jan 14 08:00:17 2009
From: rwallace at thewallacepack.net (Richard Wallace)
Date: Wed, 14 Jan 2009 09:00:17 -0700
Subject: [antlr-interest] Mismatched token problem
In-Reply-To: <496D630E.1090403@kjchome.homeip.net>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
	<496D630E.1090403@kjchome.homeip.net>
Message-ID: <57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>

On Tue, Jan 13, 2009 at 8:59 PM, Kevin J. Cummings
<cummings at kjchome.homeip.net> wrote:
> Richard Wallace wrote:
>>
>> Hello,
>>
>> I am trying to write a rule to match expressions in the following
>> algebraic form
>>
>> an+b
>>
>> But, when the b term is negative it is only allowed to be written as
>>
>> an-b
>>
>> It seems easy enough, the problem is that identifiers can have the '-'
>> character in them.  So I have the following in my grammar
>>
>> expr
>>       :       DASH? NUMBER? 'n' S* ( PLUS | DASH ) S* NUMBER
>>       ;
>>
>> DASH
>>       :        '-'
>>       ;
>>
>> PLUS
>>       :       '+'
>>       ;
>>
>> IDENT
>>       :       ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>>               ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
>> '0'..'9')*
>>       |       DASH ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>>               ('_' | DASH | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' |
>> '0'..'9')*
>>       ;
>>
>> NUMBER
>>       :       '-' (('0'..'9')* '.')? ('0'..'9')+
>>       |       (('0'..'9')* '.')? ('0'..'9')+
>>       ;
>> S
>>       :       ( ' ' | '\t' | '\r' | '\n' | '\f' )
>>       ;
>>
>> So, when I try this grammar against 4n+3 it works great.  But, if I
>> try it against 4n-1 it fails with a MismatchedTokenException.  This
>> seems to be because when evaluating 4n-1 antlr matches the expression
>> as NUMBER IDENT instead of NUMBER 'n' DASH NUMBER.  I've tried
>> changing the lookahead and using backtracking all to no avail.  I'm
>> out of ideas on how to make antlr stop seeing the n-1 as an IDENT and
>> instead see it as 'n' DASH NUMBER.  Any suggestions?
>
> Take the '-' out of the NUMBER production (ie remove the first alternative)
>
> NUMBER : (('0'..'9')* '.')? ('0'..'9')+
>       ;
>

Ah good point.  I had forgotten that was there.  Thanks.

> Why is '-' a valid IDENT character?  And are you using IDENT anywhere else
> in your grammar?  I don't see it referenced in the snippet above.
> If you need to use '-' in IDENT names, you may need to use a predicate so it
> doesn't get confused with the usage in the expr.  Where can IDENTs be used?
>  By default antlr will try and match as much as TOKENs as it can.  This
> happens long before it starts parsing.  IDENT is a Lexer rule (ie made up of
> characters) whereas expr is a Parser rule (made up of tokens).
>

I can't really say why '-' is a valid IDENT character.  I wish it
weren't but it is and I am powerless to change it.  IDENT is used in
quite a few places, I just sent in a shorter more distilled version of
the grammar as an example of the problem.  A few rules where the IDENT
is used is

type : IDENT ;
id : '#' IDENT ;
class : '.' IDENT ;

I've been reading up on predicates trying to understand how to apply
them in this case and I don't fully grasp how to apply it here.  I
thought that maybe doing something like the Lexer Lookahead example on
the page <http://www.antlr.org/wiki/display/~gbrose85/7.++Common+Rules+and+Examples>
might do it, but that would also mean that if 'n' was used as an
identifier elsewhere it wouldn't get parsed as an IDENT as it should.

I don't normally ask for this much hand-holding but I'm drawing a
blank here.  Think you could walk me through what you mean by using a
predicate?

Thanks again,
Rich

>> Thanks,
>> Rich
>
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>

From cummings at kjchome.homeip.net  Wed Jan 14 09:06:00 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 14 Jan 2009 12:06:00 -0500
Subject: [antlr-interest] Mismatched token problem
In-Reply-To: <57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>	
	<496D630E.1090403@kjchome.homeip.net>
	<57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>
Message-ID: <496E1B78.4040801@kjchome.homeip.net>

Richard Wallace wrote:
> I can't really say why '-' is a valid IDENT character.  I wish it
> weren't but it is and I am powerless to change it.  IDENT is used in
> quite a few places, I just sent in a shorter more distilled version of
> the grammar as an example of the problem.  A few rules where the IDENT
> is used is
> 
> type : IDENT ;
> id : '#' IDENT ;
> class : '.' IDENT ;

The last time I saw a "-" in an IDENT was in COBOL....

> I've been reading up on predicates trying to understand how to apply
> them in this case and I don't fully grasp how to apply it here.  I
> thought that maybe doing something like the Lexer Lookahead example on
> the page <http://www.antlr.org/wiki/display/~gbrose85/7.++Common+Rules+and+Examples>
> might do it, but that would also mean that if 'n' was used as an
> identifier elsewhere it wouldn't get parsed as an IDENT as it should.
> 
> I don't normally ask for this much hand-holding but I'm drawing a
> blank here.  Think you could walk me through what you mean by using a
> predicate?

Predicates are either syntactic or semantic and are documented in the 
Antlr reference guide at http://www.antlr2.org/doc (which documents 
version 2.7.5).  Also there is this really good example of complex 
lexing at 
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs
Note, this is an Antlr 3 lexer module, but most of it applies if you 
replace the "fragment" stuff with "protected".  I used that style in my 
PL/I lexer for both the various arithmetic numbers and again for strings.

So, if you do something like:

protected
IDENTFRAGMENT : ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
               ;

protected
IDENTNUMFRAGMENT : IDENTFRAGMENT | '0' .. '9'
                  ;

IDENT : IDENTFRAGMENT ( DASH (IDENTNUMFRAGMENT)? )*
       ;

DASH : '-' ( IDENTFRAGMENT  { _ttype = IDENT; } )?
      ;

You should be able to cover most of your cases of how an IDENT looks. 
(No I haven't tried this.)

I also threw in some options(greedy=true;}: stuff to get rid of the 
warning messages Antlr spits out:

DASH : '-' ( options(greedy=true;) : IDENTFRAGMENT ..... )?

You may need to play with the protected rules to get things right for 
your grammar, but the method is sound.

> Thanks again,
> Rich

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jimi at temporal-wave.com  Wed Jan 14 10:26:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 10:26:29 -0800
Subject: [antlr-interest] Why these lex rules make the generated
 .c	source file grow to over 40M size?
In-Reply-To: <5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>
References: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>
	<5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>
Message-ID: <496E2E55.2040002@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/b183bcbb/attachment.html 

From jimi at temporal-wave.com  Wed Jan 14 10:29:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 10:29:29 -0800
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <5a92ffb60901140317m51d823bbtad0eb4587f786b17@mail.gmail.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>	<5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>	<5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.com>	<496db559.e203be0a.1d17.ffffedbeSMTPIN_ADDED@mx.google.com>
	<5a92ffb60901140317m51d823bbtad0eb4587f786b17@mail.gmail.com>
Message-ID: <496E2F09.4070701@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/f5d78112/attachment.html 

From jimi at temporal-wave.com  Wed Jan 14 10:35:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 10:35:36 -0800
Subject: [antlr-interest] Why these lex rules make the generated
 .c	source file grow to over 40M size?
In-Reply-To: <20090114153354.5370@gmx.net>
References: <5a92ffb60901132001i1f8ea405qb8f1596811966118@mail.gmail.com>	<5a92ffb60901140309m7d154558oef5c6aae97e7ea05@mail.gmail.com>
	<20090114153354.5370@gmx.net>
Message-ID: <496E3078.7030509@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/7c9e75c6/attachment.html 

From jimi at temporal-wave.com  Wed Jan 14 10:37:22 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 10:37:22 -0800
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
	<OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
Message-ID: <496E30E2.8020603@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/c24061cd/attachment.html 

From jimi at temporal-wave.com  Wed Jan 14 10:39:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 10:39:29 -0800
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<496D1E7D.7090903@fh-hagenberg.at>
	<OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>
Message-ID: <496E3161.4010306@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/fe32f5f0/attachment.html 

From Dominic.Tardif at USherbrooke.ca  Wed Jan 14 11:08:22 2009
From: Dominic.Tardif at USherbrooke.ca (Dominic Tardif)
Date: Wed, 14 Jan 2009 14:08:22 -0500
Subject: [antlr-interest] White spaces not allowed
In-Reply-To: <200901130922.23909.micha-1@fantasymail.de>
References: <1231790038.496b9fd68a900@www.usherbrooke.ca>
	<20090112201954.A293234184A4@www.antlr.org>
	<1231793952.496baf20db9d1@www.usherbrooke.ca>
	<200901130922.23909.micha-1@fantasymail.de>
Message-ID: <67C933254F49464C887B363086B131CA@Axalon>

OK, I've tried what you suggested and, for the most part, it works.  There's 
just a little problem with this: the WS as an operator, if there is one, is 
not present in the AST.  How can I put it in the AST?  Better yet, how can I 
rewrite the rule so that I can see it as a '*' operator in the AST?  Thanks 
again for all your help!!! ^_^

Dominic

P.S.: If it has something to do with the hidden channel, I'm kind of 
confused on how to access it, let alone use it.  Thanks!

--------------------------------------------------
From: "micha" <micha-1 at fantasymail.de>
Sent: Tuesday, January 13, 2009 3:22 AM
To: <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] White spaces not allowed

> On Monday 12 January 2009 21:59:12 Dominic Tardif wrote:
>
>>
>> OK, I've removed the NEWLINE token and changed stmt+ by stmt* and it 
>> works
>> just fine, except that I want to be able to support the ' ' operator, 
>> which
>> acts like a '*'.  If I didn't support it, I don't think I would have had
>> any problems. Is there a way to have a white space act as an operator as
>> well? If not, I'll just have to remove it. Thanks again for all your 
>> help!
>> ^_^
>
> maybe (i.e. not tested, just the idea):
>
> WS:  (' ' | '\t' )+ { channel=hidden;}
>
> and:
>
> multExpr: phase ('*'? phase)*
>
> then WS is allowed as '*' .  You can check the hidden channel, if it was
> exactly one ws.
>
> Michael
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> 


From antlr at mirality.co.nz  Wed Jan 14 11:17:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 15 Jan 2009 08:17:21 +1300
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@
	us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>
	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
	<OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
Message-ID: <20090114191733.B066734184AF@www.antlr.org>

At 04:43 15/01/2009, Mike Gering wrote:
>Thanks for the suggestion, but no value of k will work because 
>the grammar accepts an optional list of tokens between (STAR 
>simple_name)* and "b". For example:
>         x*x*x*y/y/y*z
>should be accepted. The series of slash terms can be arbitrarily 
>long or absent.

The slashes shouldn't be a factor.

The way your rules are written, as soon as it sees a single slash 
term it's no longer possible for it to match the star terms as 
part of "a" -- any star appearing after it must be a "b".

In other words, "x*x*x*y/y/y*z" is simply illegal; "x*x*x*y/y/y*2" 
should be interpreted as three STAR terms (from a) followed by two 
SLASH terms (from a) and finally one STAR term (from b).  There 
shouldn't be any ambiguity there.

Where you *will* get ambiguity with k=1 is for the input "x*x*2" 
-- on seeing the "*" following the "x"s, ANTLR needs to look ahead 
one more character (k=2) to discover that it can't satisfy the 
STAR block in "a", but must instead fall out and go process it as 
a "b" instead.

So k=2 really should be all you need, given the rules you've 
posted thus far.


From antlr at mirality.co.nz  Wed Jan 14 11:18:26 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 15 Jan 2009 08:18:26 +1300
Subject: [antlr-interest] How to write this lexer rule?
In-Reply-To: <496E2F09.4070701@temporal-wave.com>
References: <5a92ffb60901130110w19ac5c0eu494e8380c4fd6d1e@mail.gmail.com>
	<496c76fc.8905be0a.5099.53f7SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901130329j539589adw8b38bea88f3b2db1@mail.gmail.com>
	<496cf7db.8905be0a.5099.ffffae16SMTPIN_ADDED@mx.google.com>
	<5a92ffb60901131809r515dc6bam1caa8b331e90b1f@mail.gmail.com>
	<5a92ffb60901131854l1496b243g1ff60c5dd85e0174@mail.gmail.com>
	<5a92ffb60901132358q25979b88tc3638b0dfb6b93e8@mail.gmail.com>
	<496db559.e203be0a.1d17.ffffedbeSMTPIN_ADDED@mx.google.com>
	<5a92ffb60901140317m51d823bbtad0eb4587f786b17@mail.gmail.com>
	<496E2F09.4070701@temporal-wave.com>
Message-ID: <20090114191834.8B25934184AF@www.antlr.org>

At 07:29 15/01/2009, Jim Idle wrote:
>This tends to suggest that the rest of your lexer is where the 
>problems lie and it is taking considerable effort on behalf of 
>the lexer/analysis to work out your rules. However, without 
>seeing the rest of your lexer, I would suggest that this is 
>better, as it avoids any predicates.
>
>IDENT
>   : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>     {
>        if ($text.equals("FUNCTION") { $type = FUNCTION_DECL; }
>     }
>   ;

That won't work because of what FUNCTION_DECL needs to do (see 
earlier in the thread).


From mgering at us.ibm.com  Wed Jan 14 11:33:15 2009
From: mgering at us.ibm.com (Mike Gering)
Date: Wed, 14 Jan 2009 14:33:15 -0500
Subject: [antlr-interest] Newbie Help
In-Reply-To: <496E30E2.8020603@temporal-wave.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>
	<OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
	<496E30E2.8020603@temporal-wave.com>
Message-ID: <OF8D0E784D.451E2E0E-ON8525753E.0069F26C-8525753E.006B6ABD@us.ibm.com>

Jim,

Thanks for the suggestion. But 
programmatic_unit 
        : simple_name a b
        ;

a // line 12
        : (STAR simple_name )+ 
                (SLASH simple_name)*
        |       (SLASH simple_name)*
        ;

b 
        :
                ( (STAR) 
                        INT)?
        ;

simple_name 
        : NAME_FRAG 
        ((SPACE)? NAME_FRAG)*
        ;

Introduces additional warnings:
Foo.g:12: warning:nondeterminism between alts 1 and 2 of block upon
Foo.g:12:     k==1:STAR
Foo.g:12:     k==2:NAME_FRAG
Foo.g:13: warning:nondeterminism upon
Foo.g:13:     k==1:STAR
Foo.g:13:     k==2:NAME_FRAG
Foo.g:13:     between alt 1 and exit branch of block

And it doesn't express what I need. The grammar has to accept these 
examples:

a
a*b
a*b/c
a*b/c*2
a/c
a/c*2

This is a subset of a larger grammar, from DMTF DSP0004, that insists the 
programmatic units value consists of named multiplicative factors followed 
by named divided factors followed by constant multiplicative factors, e.g. 
"byte", "second * 250 * 10^-9", "foot * foot * foot / minute", "second * 
250 * 10^-9"

Mike
IBM
(919) 732-5020




From:
Jim Idle <jimi at temporal-wave.com>
To:

Cc:
antlr-interest at antlr.org
Date:
01/14/2009 01:39 PM
Subject:
Re: [antlr-interest] Newbie Help



Mike Gering wrote: 

Gavin, 

Thanks for the suggestion, but no value of k will work because the grammar 
accepts an optional list of tokens between (STAR simple_name)* and "b". 
For example: 
        x*x*x*y/y/y*z 
should be accepted. The series of slash terms can be arbitrarily long or 
absent. 
I think that you want:

a
         : (STAR simple_name )+ (SLASH simple_name)*
         | (SLASH simple_name)*
         ;

If you can use ANTLR 3.1 instead you will find this a lot easier.
Jim

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/13b2f515/attachment.html 

From monty at codetransform.com  Wed Jan 14 13:19:34 2009
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 14 Jan 2009 13:19:34 -0800
Subject: [antlr-interest] C Grammar
In-Reply-To: <496D99A7.3070208@gmail.com>
References: <496D99A7.3070208@gmail.com>
Message-ID: <73e8e3430901141319r69e6d487mbc33450c66905fcf@mail.gmail.com>

Add them in a tree grammar.

Monty

On Tue, Jan 13, 2009 at 11:52 PM, alessio <nightctawler at gmail.com> wrote:
> Hi to everybody.
> I have a little doubt. I have downloaded GnuC grammar from
> site,and i must add some semantic actions(like type checking). Do you
> think i must add them in the parser or i must add them in the visitor?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Wed Jan 14 13:38:50 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 14 Jan 2009 15:38:50 -0600
Subject: [antlr-interest] Passing user defined exceptions through the
	parser.
In-Reply-To: <496DDB3F.4000408@gmail.com>
References: <496A44E8.8030403@gmail.com>	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>	<496BC0E1.5090606@gmail.com><3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com><496C853A.1040808@gmail.com><86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com><86403CA0939415448BCCB83855EFE09AA67697@Bloodymary.ironwillgames.com>
	<496DDB3F.4000408@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA676C6@Bloodymary.ironwillgames.com>

I have implemented this feature in my local copy of the C# port of the
ANTLR tool, but I still need to make a decision about a couple aspects
of it. Due to the declaration of BaseRecognizer.mTokens, non-fragment
rules in a lexer that uses the Java target cannot specify user
exceptions.

This condition only applies to the Java target, and even then a user
could derive from a class other than BaseRecognizer as a workaround.
Based on this, the following conditions need to be considered:

* All parser rules may have user-specified exceptions in the exceptions
specification (nothing to decide on here)
* In theory, all fragment rules in a lexer can have user-specified
exceptions, as long as they are handled by the non-fragment lexer rules
that reference them. Should we allow this?
* In theory, non-fragment lexer rules can specify user exceptions so
long as the generated class derives from a user-created class where the
mTokens function declares other exceptions. Other targets such as C# are
not limited like this, and the exceptions spec would only be used as
part of an XML comment at the function declaration. Should we allow this
in the grammar?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Wednesday, January 14, 2009 6:32 AM
Cc: antlr-interest
Subject: Re: [antlr-interest] Passing user defined exceptions
throughtheparser.

Sam Harwell wrote:

> I just checked and the feature is not implemented in the code
generator
> yet. At least in the C# port of the tool it will cause recognition
> exceptions if you use it in a grammar right now.
>   

Okay, thanks for pointing this out. I'll take a look and keep my eye on
it.

Peter

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Tuesday, January 13, 2009 10:06 AM
> To: Peter C. Chapin
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Passing user defined exceptions through
> theparser.
>
> There is a throwsSpec in the ANTLR tool grammar that *should* be able
to
> be used like this:
>
> my_rule /*returns [Object o]*/ throws RecognitionException,
> OperationCanceledException
>  : ...
>  ;
>
> It doesn't apply to C# so it's not implemented in my CSharp3 target.
>
> Sam
>   


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Jan 14 13:40:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 13:40:13 -0800
Subject: [antlr-interest] White spaces not allowed
In-Reply-To: <67C933254F49464C887B363086B131CA@Axalon>
References: <1231790038.496b9fd68a900@www.usherbrooke.ca>	<20090112201954.A293234184A4@www.antlr.org>	<1231793952.496baf20db9d1@www.usherbrooke.ca>	<200901130922.23909.micha-1@fantasymail.de>
	<67C933254F49464C887B363086B131CA@Axalon>
Message-ID: <496E5BBD.8070009@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/49afcb72/attachment.html 

From jimi at temporal-wave.com  Wed Jan 14 13:50:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Jan 2009 13:50:36 -0800
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF8D0E784D.451E2E0E-ON8525753E.0069F26C-8525753E.006B6ABD@us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<200901140941.n0E9fTgb026835@e36.co.us.ibm.com>	<OF48092B6A.134AEA02-ON8525753E.0055F069-8525753E.00566B54@us.ibm.com>
	<496E30E2.8020603@temporal-wave.com>
	<OF8D0E784D.451E2E0E-ON8525753E.0069F26C-8525753E.006B6ABD@us.ibm.com>
Message-ID: <496E5E2C.40904@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090114/4d6f10bf/attachment.html 

From spamhole at gmx.at  Wed Jan 14 13:51:06 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Wed, 14 Jan 2009 22:51:06 +0100
Subject: [antlr-interest] Newbie Help
In-Reply-To: <OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>	<496D1E7D.7090903@fh-hagenberg.at>
	<OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>
Message-ID: <496E5E4A.8020405@gmx.at>

Hi Mike,

I think you need someone with antlr v2 experience.. I had a quick look 
at antlr 2.7.7 but its syntax seems to be quite different so I didn't 
get far with this grammar.

You're writing the grammar for [1] right? The parse tree for 
"a*b*c/d/e/f*2" definitely looks correct in antlr 3.1.1 with k=2. It 
doesn't complain and correctly recognizes the multiplied- and 
divided-base-units followed by the modifier1.

There really should be no need for infinite lookahead in this grammar.. 
two symbols should do. Why do you think that the lookahead would have to 
span the whole /d/e/f tokens first? I don't think that's necessary. 
Anyway, I think the problem must be somewhere else since the grammar 
works fine in v3 with only two symbols of lookahead.

Max
[1] page 122, 
http://www.dmtf.org/standards/published_documents/DSP0004_2.5.0.pdf

Mike Gering schrieb:
>
> Markus,
>
> Thanks for the response. I'm stuck with 2.7.7 because our legal guys 
> have not approved us to use any version 3 releases, and I have no 
> realistic hope that they will any time soon :-(
>
> The problem with setting the lookahead depth is that no number is 
> sufficient because the (SLASH simple_name)* block comes between the 
> two problem blocks. So this example should be matched: a*b*c/d/e/f*2. 
> The lookahead has to span the /d/e/f tokens.
>
> Mike
> IBM
> (919) 732-5020


From cummings at kjchome.homeip.net  Wed Jan 14 15:51:19 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 14 Jan 2009 18:51:19 -0500
Subject: [antlr-interest] Mismatched token problem
In-Reply-To: <57e7e0490901141520l2df141fap30cbbf27e3d28aed@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>	
	<496D630E.1090403@kjchome.homeip.net>	
	<57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>	
	<496E1B78.4040801@kjchome.homeip.net>
	<57e7e0490901141520l2df141fap30cbbf27e3d28aed@mail.gmail.com>
Message-ID: <496E7A77.6080402@kjchome.homeip.net>

Richard Wallace wrote:

> Ok, I'm feeling really dense right now.  I put the rules in as follows:
> 
> fragment IDENTFRAGMENT
>     : ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>     ;
> 
> fragment IDENTNUMFRAGMENT
>     : IDENTFRAGMENT | '0' .. '9'
>     ;
> 
> IDENT
>     : IDENTFRAGMENT ( DASH | IDENTNUMFRAGMENT )*
>     ;
> 
> DASH
>     : '-' ( options{greedy=true;} : IDENTFRAGMENT { $type = IDENT; } )?
>     ;
> 
> And I even understand what it means (I think), but I'm still running
> into the problem that in the expression 4n-1, n-1 is still being
> considered an expression.  I had to change protected to fragment to

Sorry I thought you were using Antlr 2.7.7, that must of been someone 
else I was chatting with, yes, fragment is correct for Antlr 3.x

> get the lexer to not try and match 4 as a IDENTNUMFRAGMENT and the
> IDENT rule to match the language.  But I don't think that should cause
> this not to work, should it?  I must be missing something.  Any ideas?

In your expr rule you specify S* as possible whitespace seperators. 
Also, if you need to match n-1 as an IDENT, then its possible that you 
need do another fragment to catch the 'n' and what follows as an IDENT.

By default, ANTLR does greedy matching of tokens. In other words, it 
tries to match as much as possible based on your rules.  It also 
tokenizes before it parses.  So, if you don't want 4n-1 to be NUMBER 
IDENT, then you need to have a lexer rule to catch something different. 
  Does it help if you try a lexer rule that catches NUMBER 'n' as a 
TOKEN? and then use *that* in your expr rule?

Also, when I code expression parsers that don't care about whitespace, I 
just set whitespace to be ignored in the lexer.  ANTLR will still stop 
lexing tokens when it finds a whitespace.  So, in general, I never 
reference whitespace in the parser.  You need to fix your token stream 
so that the parser does the right thing with what it finds.

Make a lexer rule for:  DASH? NUMBER? 'n'  Or maybe just for NUMBER 'n'

Sorry for being vague, but I hope its helpful.

> Rich

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From JALuber at gmx.de  Thu Jan 15 00:26:00 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 15 Jan 2009 09:26:00 +0100
Subject: [antlr-interest] Passing user defined exceptions through
	the	parser.
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA676C6@Bloodymary.ironwillgames.com>
References: <496A44E8.8030403@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA6766F@Bloodymary.ironwillgames.com>
	<496BC0E1.5090606@gmail.com><3b7c64070901130039t4b8812fdpc954b3ea2dd6676e@mail.gmail.com><496C853A.1040808@gmail.com><86403CA0939415448BCCB83855EFE09AA67696@Bloodymary.ironwillgames.com><86403CA0939415448BCCB83855EFE09AA67697@Bloodymary.ironwillgames.com>
	<496DDB3F.4000408@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA676C6@Bloodymary.ironwillgames.com>
Message-ID: <20090115082600.257530@gmx.net>

> I have implemented this feature in my local copy of the C# port of the
> ANTLR tool, but I still need to make a decision about a couple aspects
> of it. Due to the declaration of BaseRecognizer.mTokens, non-fragment
> rules in a lexer that uses the Java target cannot specify user
> exceptions.
> 
> This condition only applies to the Java target, and even then a user
> could derive from a class other than BaseRecognizer as a workaround.
> Based on this, the following conditions need to be considered:
> 
> * All parser rules may have user-specified exceptions in the exceptions
> specification (nothing to decide on here)
> * In theory, all fragment rules in a lexer can have user-specified
> exceptions, as long as they are handled by the non-fragment lexer rules
> that reference them. Should we allow this?
> * In theory, non-fragment lexer rules can specify user exceptions so
> long as the generated class derives from a user-created class where the
> mTokens function declares other exceptions. Other targets such as C# are
> not limited like this, and the exceptions spec would only be used as
> part of an XML comment at the function declaration. Should we allow this
> in the grammar?

I'd say that we should allow everything which can be useful and doesn't influence the non-users of the features. As the suggestions above fall into this camp, I'm all for it. Anyway, thrown exceptions have to be caught always somewhere and there have been enough people complaining about the lack of user-defined exceptions in the Java target.

Johannes
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
> Sent: Wednesday, January 14, 2009 6:32 AM
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Passing user defined exceptions
> throughtheparser.
> 
> Sam Harwell wrote:
> 
> > I just checked and the feature is not implemented in the code
> generator
> > yet. At least in the C# port of the tool it will cause recognition
> > exceptions if you use it in a grammar right now.
> >   
> 
> Okay, thanks for pointing this out. I'll take a look and keep my eye on
> it.
> 
> Peter
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
> > Sent: Tuesday, January 13, 2009 10:06 AM
> > To: Peter C. Chapin
> > Cc: antlr-interest
> > Subject: Re: [antlr-interest] Passing user defined exceptions through
> > theparser.
> >
> > There is a throwsSpec in the ANTLR tool grammar that *should* be able
> to
> > be used like this:
> >
> > my_rule /*returns [Object o]*/ throws RecognitionException,
> > OperationCanceledException
> >  : ...
> >  ;
> >
> > It doesn't apply to C# so it's not implemented in my CSharp3 target.
> >
> > Sam
> >   
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a

From chainone at gmail.com  Thu Jan 15 00:35:46 2009
From: chainone at gmail.com (chain one)
Date: Thu, 15 Jan 2009 16:35:46 +0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime target )
Message-ID: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>

I want to only parse the beginning of a file. And I don't want the
recognizer to beak the whole file into huge number of tokens which will make
the memory consuming very high.So after the lexer having recognized one
specified TOKEN such as ";", I want to tell the lexer to stop, and pass the
tokens to the parser.
Is it possible in C runtime target? If it is, could you tell me how?


SEMI: ';'  { // throw the EOF token?}
;


Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/2107da34/attachment.html 

From antlr at mirality.co.nz  Thu Jan 15 00:45:40 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 15 Jan 2009 21:45:40 +1300
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
 target )
In-Reply-To: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.co
 m>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
Message-ID: <20090115084548.B8519341840F@www.antlr.org>

At 21:35 15/01/2009, chain one wrote:
>I want to only parse the beginning of a file. And I don't want 
>the recognizer to beak the whole file into huge number of tokens 
>which will make the memory consuming very high.
>So after the lexer having recognized one specified TOKEN such as 
>";", I want to tell the lexer to stop, and pass the tokens to the 
>parser.
>Is it possible in C runtime target? If it is, could you tell me 
>how?

I don't think you can do it directly in the grammar, but you 
should be able to override some methods in the lexer or the stream 
to do that.  (And yes, you *can* override methods in the C target; 
it's just slightly trickier than in Java or C#.)


From chainone at gmail.com  Thu Jan 15 00:58:03 2009
From: chainone at gmail.com (chain one)
Date: Thu, 15 Jan 2009 16:58:03 +0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
	target )
In-Reply-To: <496ef7bc.c505be0a.3f33.2a01SMTPIN_ADDED@mx.google.com>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
	<496ef7bc.c505be0a.3f33.2a01SMTPIN_ADDED@mx.google.com>
Message-ID: <5a92ffb60901150058h561b21a2i313dddd2037f3729@mail.gmail.com>

Well, thanks for Gavin's suggestion, as what you said, then I should first
take some time to under the source code of the Lexer part.Actually I have
tried to read the source code of the C runtime target, and I have to say, it
is not a easy stuff.

Does anybody have the experience of meeting  the same problem with me? If it
is yes, could you tell me how to solve it? I would very appreciate your
help.


On Thu, Jan 15, 2009 at 4:45 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 21:35 15/01/2009, chain one wrote:
>
>> I want to only parse the beginning of a file. And I don't want the
>> recognizer to beak the whole file into huge number of tokens which will make
>> the memory consuming very high.
>> So after the lexer having recognized one specified TOKEN such as ";", I
>> want to tell the lexer to stop, and pass the tokens to the parser.
>> Is it possible in C runtime target? If it is, could you tell me how?
>>
>
> I don't think you can do it directly in the grammar, but you should be able
> to override some methods in the lexer or the stream to do that.  (And yes,
> you *can* override methods in the C target; it's just slightly trickier than
> in Java or C#.)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/5ea42649/attachment.html 

From lagorio at disi.unige.it  Thu Jan 15 06:43:09 2009
From: lagorio at disi.unige.it (Giovanni Lagorio)
Date: Thu, 15 Jan 2009 15:43:09 +0100
Subject: [antlr-interest] Building interactive interpreters?
Message-ID: <496F4B7D.8040005@disi.unige.it>

Hi,
I'm new to ANTLR and I'd like to use it to build an interactive 
interpreter (generating C or, even better, a C++ parser).
If I've understood correctly, ANTLR wants to tokenize all the input 
upfront, which makes building interactive parsers cumbersome.
I think I can work around this limitation by trying to parse whole 
statements each time I get some input from the command line, and then 
wait for more input, without displaying any error, if the parsing fails 
because there are not enough tokens. While this approach may work, I 
don't like it very much.
Is there a better method? I hope I'm missing something ;-)

Regards,
Giovanni


From obdrzalek at gmail.com  Thu Jan 15 07:20:27 2009
From: obdrzalek at gmail.com (=?WINDOWS-1252?Q?Jan_Obdr=9E=E1lek?=)
Date: Thu, 15 Jan 2009 16:20:27 +0100
Subject: [antlr-interest] ANTLR performance
Message-ID: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>

Hello,

for our student research project we implemented a C grammar in ANTLR
3.1. (The grammar fully implements ANSI C99, and mostly implements the
GNU C extensions - the notable exception being the attributes, which
are a real pain.) However we found the performance of the parser to be
a bit lacking. We therefore ran some tests. In addition to the default
Java target, we modified the grammar for the C target. The results
were then compared to the results obtained by using the GNU C
compiler. This is a fair comparison, since gcc also uses a  top-down
recursive parser (although hand-coded). Actually the test is tougher
on gcc, since gcc does full compilation, compared to just building the
AST in the case of ANTLR.

The results can be summarized as follows (more details about the test
at the end of this post):

 - ANTLR/Java is obviously the slowest one [and there is a serious
start-up/close-down overhead]
 - ANTLR/C is faster, but still miles behind the gcc
 - ANTLR/C uses the most system time (analysis using strace points to
many more memory-related calls to kernel)
 - ANTLR/C allocates the most memory. Several times the memory used by gcc

The comparison isn't very rigorous/scientific (by any means), but the
times are represenative, being rougly the average time for many
different runs. I was quite surprised by how much slower ANTLR is
comparing to the GCC. I also tried to profile the C target, the
results from gprof are attached.

Any comments?

Best regards,
	Jan Obdr??lek

--
Dr. Jan Obdr??lek <obdrzalek at fi.muni.cz>
Faculty of Informatics, Masaryk University, Brno, Czech Republic


---------------

The grammar:
- backtracking is disabled
- only a few semantic/syntactic predicates
- the most obvious bottlenecks were fixed by left factorization

The input:
- preprocessed file from the Linux kernel, attributes removed
- ~20Kloc, ~700kB:
~/tmp/test$ wc a.c
 20604  80707 697787 a.c

The results
===========

GCC
---
~/tmp/test$ gcc --version
gcc (Ubuntu 4.3.2-1ubuntu11) 4.3.2

~/tmp/test$ time gcc -S a.c
a.c:1026: warning: conflicting types for built-in function 'vsprintf'
a.c:1030: warning: conflicting types for built-in function 'vsnprintf'
a.c:1041: warning: conflicting types for built-in function 'vsscanf'

real	0m0.425s
user	0m0.384s
sys	0m0.036s

ANTLR/C
-------
~/tmp/test$ make
java -cp lib/antlr-3.1.1.jar org.antlr.Tool  GNUCa.g
ANTLR Parser Generator  Version 3.1.1

~/tmp/test$ time ./parser
Reading a.c

real	0m1.958s
user	0m1.284s
sys	0m0.656s

ANTLR/Java
----------
~/xxx/tests$ java -version
java version "1.6.0_10"
Java(TM) SE Runtime Environment (build 1.6.0_10-b33)
Java HotSpot(TM) 64-Bit Server VM (build 11.0-b15, mixed mode)

~/xxx/tests$ time java Test

real	0m3.507s
user	0m5.504s
sys	0m0.332s

NOTE: Java VM uses 2 CPU cores, therefore the difference between real
and user/sys time
-------------- next part --------------
A non-text attachment was scrubbed...
Name: parser.gprof
Type: application/octet-stream
Size: 1576 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/0400c8eb/attachment.obj 

From alpernb at us.ibm.com  Thu Jan 15 07:36:51 2009
From: alpernb at us.ibm.com (Bowen Alpern)
Date: Thu, 15 Jan 2009 10:36:51 -0500
Subject: [antlr-interest] newbie question: How do I reset ANTLRWorks to a
	pristine state?
In-Reply-To: <OF31DF7CAD.7613495D-ON8525753F.00549723-8525753F.0054E7E2@LocalDomain>
References: <OF31DF7CAD.7613495D-ON8525753F.00549723-8525753F.0054E7E2@LocalDomain>
Message-ID: <OF81511B01.A3319823-ON8525753F.00557291-8525753F.0055C576@us.ibm.com>


Hi,

On a MacBook Pro running OS X 10.5.6, how do I get back to the original
state of ANTLRWorks?

I think I may have checked the "Don't show this alert again" box for a
compile message that I probably should not have.

Thanks,

       Bowen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/818a9e1c/attachment.html 

From janvanmansum at gmail.com  Thu Jan 15 07:41:55 2009
From: janvanmansum at gmail.com (Jan van Mansum)
Date: Thu, 15 Jan 2009 16:41:55 +0100
Subject: [antlr-interest] How to import grammar from other than default
	package
Message-ID: <ddda310e0901150741i3529ac2cy4da6835c7c7d16cb@mail.gmail.com>

Hello group,

I have searched and searched, but I can't seem to find the answer to this
seemingly simple question.

I am experimenting a bit with composite grammars.  I want to import a
grammar from another package
than the default.  How is this done?

Thanks for any help,

best regards,

-- 
Jan van Mansum
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/92657f27/attachment.html 

From richard.thrippleton at progress.com  Thu Jan 15 08:20:16 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Thu, 15 Jan 2009 16:20:16 +0000
Subject: [antlr-interest] C++ exceptions in the ANTLR3 C target
Message-ID: <496F6240.6050609@progress.com>

Now that the C target can be built by a C++ compiler, I've been trying 
to throw C++-style exceptions (as opposed to the exception system 
internal to ANTLR's C target) from within embedded actions.

My grammars build successfully, and the exceptions seem to behave as I'd 
expect at runtime. However, I suspect I'm leaving myself open to 
undefined behaviour; are C++ exceptions within the C output actually 
supported, or is it merely co-incidence that nothing horrendous has 
happened?

My main fear would be memory leaks, but I'm not 100% sure if this is 
happening or not.

Thanks,
Richard

From rwallace at thewallacepack.net  Thu Jan 15 08:28:51 2009
From: rwallace at thewallacepack.net (Richard Wallace)
Date: Thu, 15 Jan 2009 09:28:51 -0700
Subject: [antlr-interest] Fwd:  Mismatched token problem
In-Reply-To: <57e7e0490901141819m656f3e43v2f55742a01a616ee@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
	<496D630E.1090403@kjchome.homeip.net>
	<57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>
	<496E1B78.4040801@kjchome.homeip.net>
	<57e7e0490901141520l2df141fap30cbbf27e3d28aed@mail.gmail.com>
	<496E7A77.6080402@kjchome.homeip.net>
	<57e7e0490901141819m656f3e43v2f55742a01a616ee@mail.gmail.com>
Message-ID: <57e7e0490901150828u69b9575g5fc66f99e9da203@mail.gmail.com>

Just realized that when I hit "Reply" it sent the message to Kevin
instead of the list.  Can't we change the mailman configuration to set
the Reply-To: header in the email to always be to the mailing list?

Rich

---------- Forwarded message ----------
From: Richard Wallace <rwallace at thewallacepack.net>
Date: Wed, Jan 14, 2009 at 7:19 PM
Subject: Re: [antlr-interest] Mismatched token problem
To: "Kevin J. Cummings" <cummings at kjchome.homeip.net>


So, rather than continuing to talk about it all in an abstract way and
showing you just bits I threw up the project I'm working on on Google
Code <http://code.google.com/p/cssselectors/>.  It's a library for
using CSS selectors to get elements out of XML documents.  I'm hoping
to be able to use it in integration tests of web applications rather
than having to use XPath which I've never really liked.  The ANTLR
grammar can be found at
<http://code.google.com/p/cssselectors/source/browse/trunk/src/main/antlr/com/threelevers/css/CssSelectors.g>.

On Wed, Jan 14, 2009 at 4:51 PM, Kevin J. Cummings
<cummings at kjchome.homeip.net> wrote:
> Richard Wallace wrote:
>
>> Ok, I'm feeling really dense right now.  I put the rules in as follows:
>>
>> fragment IDENTFRAGMENT
>>    : ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>>    ;
>>
>> fragment IDENTNUMFRAGMENT
>>    : IDENTFRAGMENT | '0' .. '9'
>>    ;
>>
>> IDENT
>>    : IDENTFRAGMENT ( DASH | IDENTNUMFRAGMENT )*
>>    ;
>>
>> DASH
>>    : '-' ( options{greedy=true;} : IDENTFRAGMENT { $type = IDENT; } )?
>>    ;
>>
>> And I even understand what it means (I think), but I'm still running
>> into the problem that in the expression 4n-1, n-1 is still being
>> considered an expression.  I had to change protected to fragment to
>
> Sorry I thought you were using Antlr 2.7.7, that must of been someone else I
> was chatting with, yes, fragment is correct for Antlr 3.x
>
>> get the lexer to not try and match 4 as a IDENTNUMFRAGMENT and the
>> IDENT rule to match the language.  But I don't think that should cause
>> this not to work, should it?  I must be missing something.  Any ideas?
>
> In your expr rule you specify S* as possible whitespace seperators. Also, if
> you need to match n-1 as an IDENT, then its possible that you need do
> another fragment to catch the 'n' and what follows as an IDENT.
>

Sorry, in this case I don't want n-1 to be an IDENT.  It should be in
most cases, but in this case, when inside a :nth-child() function it
shouldn't be considered an IDENT.  In CSS it is perfectly valid to
have something like
   #n-1
where n-1 is the id of the element we want to find.

The reason I include whitespace explicitly in some places rather than
ignoring it is because it is important in one context in CSS.  In the
selector
   #a .b
the space between the #a and #b is significant because it indicates
that we are looking for an element with a class of "b" that is a
descendant of an element with an id of "a".  I couldn't figure out a
way to make the spaces everywhere else be ignored but still have this
one be recognized properly.  If the space isn't recognized properly,
"#a .b" is treated the same as "#a.b" which has a completely different
meaning.

> By default, ANTLR does greedy matching of tokens. In other words, it tries
> to match as much as possible based on your rules.  It also tokenizes before
> it parses.  So, if you don't want 4n-1 to be NUMBER IDENT, then you need to
> have a lexer rule to catch something different.  Does it help if you try a
> lexer rule that catches NUMBER 'n' as a TOKEN? and then use *that* in your
> expr rule?
>

I'm not sure exactly what you mean here.  I've looked at a bunch of
examples and can't figure it out.  I tried adding a

tokens {
   MAGN;
}

but then I'm not sure where to put the lexer rule.  I tried

ATERM : ( NUMBER? 'n' ) -> MAGN

but ANTLR claims MAGN is an unexpected token so obviously I'm doing
something wrong.

> Also, when I code expression parsers that don't care about whitespace, I
> just set whitespace to be ignored in the lexer.  ANTLR will still stop
> lexing tokens when it finds a whitespace.  So, in general, I never reference
> whitespace in the parser.  You need to fix your token stream so that the
> parser does the right thing with what it finds.
>
> Make a lexer rule for:  DASH? NUMBER? 'n'  Or maybe just for NUMBER 'n'
>

I tried a rule called ATERM that looked like

ATERM : DASH? NUMBER? 'n' ;

and tried putting that in the nth_child_expr as

nth_child_expr : ATERM S* ('+' | DASH) S* NUMBER and that didn't help either.

> Sorry for being vague, but I hope its helpful.
>

Hopefully, now that my full grammar is out there you can take a better
look at it and see what's going on.  I appreciate all the help, it's
been really valuable and I'm learning a lot (mostly how much I have to
learn about antlr ;)).

>> Rich
>
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>

From sharwell at pixelminegames.com  Thu Jan 15 08:46:52 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 15 Jan 2009 10:46:52 -0600
Subject: [antlr-interest] "RE:  ANTLR performance
In-Reply-To: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA676CD@Bloodymary.ironwillgames.com>

Hi Jan,

Thanks for taking the time to write up this information. I've actually been curious about these results for a while. :)

One thing to bear in mind: the design of the ANTLR grammar you used makes all the difference in the world. ANTLR doesn't do things like cross-rule left factoring during code generation, so if you don't take the time to carefully do this yourself, you'll see a moderate to enormous impact on the parse speed.

Sempreds often have a large performance hit relative to code written to avoid them; synpreds often have a similar impact compared to code carefully written to not need them, especially if they look far ahead.

Did you use my method for the expression evaluator?

Sometimes people use sempreds to make sure that syntactically unambiguous semantic rules of the language are enforced by the parser. These are much faster if they are placed in a tree parser that operates on an already built AST.

C/C++ are very difficult to parse, with that conclusion based on the difficulty of creating an LL parser from the language specification's use of both EBNF and the paragraphs around it. Unfortunately the grammar in the spec alone is ambiguous, and in the case of C++, the grammar is ambiguous all the way until type resolution is performed. A parser with a feature I'm calling "multi-branch AST" support with short-circuit evaluation during the type resolution process would offer *tremendous* time performance improvements for this kind of language. I this case, a parser could keep both AST branches in at a syntactically ambiguous point in a special node, and branches could be eliminated during type resolution. Once an AST has 0 nodes with multiple branches, you know you have the correct representation under the semantic rules of the language. Currently, ANTLR has produced grammars that are slower than GCC's. I predict that with new features added to ANTLR (cross-rule generated code optimization, multi-branch support, and some others), ANTLR could produce a significantly faster parser than the ones currently available while continuing to offer its primary advantage of working with verifiable code.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jan Obdr??lek
Sent: Thursday, January 15, 2009 9:20 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR performance

Hello,

for our student research project we implemented a C grammar in ANTLR 3.1. (The grammar fully implements ANSI C99, and mostly implements the GNU C extensions - the notable exception being the attributes, which are a real pain.) However we found the performance of the parser to be a bit lacking. We therefore ran some tests. In addition to the default Java target, we modified the grammar for the C target. The results were then compared to the results obtained by using the GNU C compiler. This is a fair comparison, since gcc also uses a  top-down recursive parser (although hand-coded). Actually the test is tougher on gcc, since gcc does full compilation, compared to just building the AST in the case of ANTLR.

The results can be summarized as follows (more details about the test at the end of this post):

 - ANTLR/Java is obviously the slowest one [and there is a serious start-up/close-down overhead]
 - ANTLR/C is faster, but still miles behind the gcc
 - ANTLR/C uses the most system time (analysis using strace points to many more memory-related calls to kernel)
 - ANTLR/C allocates the most memory. Several times the memory used by gcc

The comparison isn't very rigorous/scientific (by any means), but the times are represenative, being rougly the average time for many different runs. I was quite surprised by how much slower ANTLR is comparing to the GCC. I also tried to profile the C target, the results from gprof are attached.

Any comments?

Best regards,
	Jan Obdr??lek

--
Dr. Jan Obdr??lek <obdrzalek at fi.muni.cz> Faculty of Informatics, Masaryk University, Brno, Czech Republic


---------------

The grammar:
- backtracking is disabled
- only a few semantic/syntactic predicates
- the most obvious bottlenecks were fixed by left factorization

The input:
- preprocessed file from the Linux kernel, attributes removed
- ~20Kloc, ~700kB:
~/tmp/test$ wc a.c
 20604  80707 697787 a.c

The results
===========

GCC
---
~/tmp/test$ gcc --version
gcc (Ubuntu 4.3.2-1ubuntu11) 4.3.2

~/tmp/test$ time gcc -S a.c
a.c:1026: warning: conflicting types for built-in function 'vsprintf'
a.c:1030: warning: conflicting types for built-in function 'vsnprintf'
a.c:1041: warning: conflicting types for built-in function 'vsscanf'

real	0m0.425s
user	0m0.384s
sys	0m0.036s

ANTLR/C
-------
~/tmp/test$ make
java -cp lib/antlr-3.1.1.jar org.antlr.Tool  GNUCa.g ANTLR Parser Generator  Version 3.1.1

~/tmp/test$ time ./parser
Reading a.c

real	0m1.958s
user	0m1.284s
sys	0m0.656s

ANTLR/Java
----------
~/xxx/tests$ java -version
java version "1.6.0_10"
Java(TM) SE Runtime Environment (build 1.6.0_10-b33) Java HotSpot(TM) 64-Bit Server VM (build 11.0-b15, mixed mode)

~/xxx/tests$ time java Test

real	0m3.507s
user	0m5.504s
sys	0m0.332s

NOTE: Java VM uses 2 CPU cores, therefore the difference between real and user/sys time

From JALuber at gmx.de  Thu Jan 15 09:01:05 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 15 Jan 2009 18:01:05 +0100
Subject: [antlr-interest] Fwd:  Mismatched token problem
In-Reply-To: <57e7e0490901150828u69b9575g5fc66f99e9da203@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
	<496D630E.1090403@kjchome.homeip.net>
	<57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>
	<496E1B78.4040801@kjchome.homeip.net>
	<57e7e0490901141520l2df141fap30cbbf27e3d28aed@mail.gmail.com>
	<496E7A77.6080402@kjchome.homeip.net>
	<57e7e0490901141819m656f3e43v2f55742a01a616ee@mail.gmail.com>
	<57e7e0490901150828u69b9575g5fc66f99e9da203@mail.gmail.com>
Message-ID: <20090115170105.257540@gmx.net>

> Just realized that when I hit "Reply" it sent the message to Kevin
> instead of the list.  Can't we change the mailman configuration to set
> the Reply-To: header in the email to always be to the mailing list?

There have been several discussions about changing this behaviour already - all ended with the result, that it is ultimately up to Ter who likes the current behaviour.

Johannes

> 
> Rich
> 
> ---------- Forwarded message ----------
> From: Richard Wallace <rwallace at thewallacepack.net>
> Date: Wed, Jan 14, 2009 at 7:19 PM
> Subject: Re: [antlr-interest] Mismatched token problem
> To: "Kevin J. Cummings" <cummings at kjchome.homeip.net>
> 
> 
> So, rather than continuing to talk about it all in an abstract way and
> showing you just bits I threw up the project I'm working on on Google
> Code <http://code.google.com/p/cssselectors/>.  It's a library for
> using CSS selectors to get elements out of XML documents.  I'm hoping
> to be able to use it in integration tests of web applications rather
> than having to use XPath which I've never really liked.  The ANTLR
> grammar can be found at
> <http://code.google.com/p/cssselectors/source/browse/trunk/src/main/antlr/com/threelevers/css/CssSelectors.g>.
> 
> On Wed, Jan 14, 2009 at 4:51 PM, Kevin J. Cummings
> <cummings at kjchome.homeip.net> wrote:
> > Richard Wallace wrote:
> >
> >> Ok, I'm feeling really dense right now.  I put the rules in as follows:
> >>
> >> fragment IDENTFRAGMENT
> >>    : ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
> >>    ;
> >>
> >> fragment IDENTNUMFRAGMENT
> >>    : IDENTFRAGMENT | '0' .. '9'
> >>    ;
> >>
> >> IDENT
> >>    : IDENTFRAGMENT ( DASH | IDENTNUMFRAGMENT )*
> >>    ;
> >>
> >> DASH
> >>    : '-' ( options{greedy=true;} : IDENTFRAGMENT { $type = IDENT; } )?
> >>    ;
> >>
> >> And I even understand what it means (I think), but I'm still running
> >> into the problem that in the expression 4n-1, n-1 is still being
> >> considered an expression.  I had to change protected to fragment to
> >
> > Sorry I thought you were using Antlr 2.7.7, that must of been someone
> else I
> > was chatting with, yes, fragment is correct for Antlr 3.x
> >
> >> get the lexer to not try and match 4 as a IDENTNUMFRAGMENT and the
> >> IDENT rule to match the language.  But I don't think that should cause
> >> this not to work, should it?  I must be missing something.  Any ideas?
> >
> > In your expr rule you specify S* as possible whitespace seperators.
> Also, if
> > you need to match n-1 as an IDENT, then its possible that you need do
> > another fragment to catch the 'n' and what follows as an IDENT.
> >
> 
> Sorry, in this case I don't want n-1 to be an IDENT.  It should be in
> most cases, but in this case, when inside a :nth-child() function it
> shouldn't be considered an IDENT.  In CSS it is perfectly valid to
> have something like
>    #n-1
> where n-1 is the id of the element we want to find.
> 
> The reason I include whitespace explicitly in some places rather than
> ignoring it is because it is important in one context in CSS.  In the
> selector
>    #a .b
> the space between the #a and #b is significant because it indicates
> that we are looking for an element with a class of "b" that is a
> descendant of an element with an id of "a".  I couldn't figure out a
> way to make the spaces everywhere else be ignored but still have this
> one be recognized properly.  If the space isn't recognized properly,
> "#a .b" is treated the same as "#a.b" which has a completely different
> meaning.
> 
> > By default, ANTLR does greedy matching of tokens. In other words, it
> tries
> > to match as much as possible based on your rules.  It also tokenizes
> before
> > it parses.  So, if you don't want 4n-1 to be NUMBER IDENT, then you need
> to
> > have a lexer rule to catch something different.  Does it help if you try
> a
> > lexer rule that catches NUMBER 'n' as a TOKEN? and then use *that* in
> your
> > expr rule?
> >
> 
> I'm not sure exactly what you mean here.  I've looked at a bunch of
> examples and can't figure it out.  I tried adding a
> 
> tokens {
>    MAGN;
> }
> 
> but then I'm not sure where to put the lexer rule.  I tried
> 
> ATERM : ( NUMBER? 'n' ) -> MAGN
> 
> but ANTLR claims MAGN is an unexpected token so obviously I'm doing
> something wrong.
> 
> > Also, when I code expression parsers that don't care about whitespace, I
> > just set whitespace to be ignored in the lexer.  ANTLR will still stop
> > lexing tokens when it finds a whitespace.  So, in general, I never
> reference
> > whitespace in the parser.  You need to fix your token stream so that the
> > parser does the right thing with what it finds.
> >
> > Make a lexer rule for:  DASH? NUMBER? 'n'  Or maybe just for NUMBER 'n'
> >
> 
> I tried a rule called ATERM that looked like
> 
> ATERM : DASH? NUMBER? 'n' ;
> 
> and tried putting that in the nth_child_expr as
> 
> nth_child_expr : ATERM S* ('+' | DASH) S* NUMBER and that didn't help
> either.
> 
> > Sorry for being vague, but I hope its helpful.
> >
> 
> Hopefully, now that my full grammar is out there you can take a better
> look at it and see what's going on.  I appreciate all the help, it's
> been really valuable and I'm learning a lot (mostly how much I have to
> learn about antlr ;)).
> 
> >> Rich
> >
> > --
> > Kevin J. Cummings
> > kjchome at rcn.com
> > cummings at kjchome.homeip.net
> > cummings at kjc386.framingham.ma.us
> > Registered Linux User #1232 (http://counter.li.org)
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From JALuber at gmx.de  Thu Jan 15 09:14:50 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 15 Jan 2009 18:14:50 +0100
Subject: [antlr-interest] Newbie Help
In-Reply-To: <496E3161.4010306@temporal-wave.com>
References: <OFB1359FCA.AEA9551B-ON8525753D.00725A53-8525753D.00727F77@us.ibm.com>
	<496D1E7D.7090903@fh-hagenberg.at>
	<OF52973DFC.B2F13C71-ON8525753E.00567F4F-8525753E.005730CA@us.ibm.com>
	<496E3161.4010306@temporal-wave.com>
Message-ID: <20090115171450.148910@gmx.net>

> Mike Gering wrote:
> >
> > Markus,
> >
> > Thanks for the response. I'm stuck with 2.7.7 because our legal guys have not approved us to use
> > any version 3 releases, and I have no realistic hope that they will any time soon :-(
> 
> That's strange considering that ANTLR 2.7.7 does not have all the contributors signed up to a release
> form that guarantees the work is covered by the license, whereas ANTLR 3.x does and there is no legal
> issue. Lawyers eh? ;-)

Actually that's not quite true. The licenses of the CSharp(2) targets have been modified with a fourth cluase basically stating the intent of the contributor agreement. Not really to be concerned about as user, but those targets will be once completely replaced by CSharp3, which doesn't have this baggage (no timeline for CSharp2's retirement yet).

Johannes

From jimi at temporal-wave.com  Thu Jan 15 09:17:03 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Jan 2009 09:17:03 -0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
 target )
In-Reply-To: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
Message-ID: <496F6F8F.8040302@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/0bcb0668/attachment.html 

From jimi at temporal-wave.com  Thu Jan 15 10:03:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Jan 2009 10:03:01 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
Message-ID: <496F7A55.6040107@temporal-wave.com>

Jan Obdr??lek wrote:
> Hello,
>
> for our student research project we implemented a C grammar in ANTLR
> 3.1. (The grammar fully implements ANSI C99, and mostly implements the
> GNU C extensions - the notable exception being the attributes, which
> are a real pain.) However we found the performance of the parser to be
> a bit lacking. We therefore ran some tests. In addition to the default
> Java target, we modified the grammar for the C target. The results
> were then compared to the results obtained by using the GNU C
> compiler. This is a fair comparison, since gcc also uses a  top-down
> recursive parser (although hand-coded). Actually the test is tougher
> on gcc, since gcc does full compilation, compared to just building the
> AST in the case of ANTLR.
>
> The results can be summarized as follows (more details about the test
> at the end of this post):
>
>  - ANTLR/Java is obviously the slowest one [and there is a serious
> start-up/close-down overhead]
>  - ANTLR/C is faster, but still miles behind the gcc
>   

>  - ANTLR/C uses the most system time (analysis using strace points to
> many more memory-related calls to kernel)
>  - ANTLR/C allocates the most memory. Several times the memory used by gcc
>
> The comparison isn't very rigorous/scientific (by any means), but the
> times are represenative, being rougly the average time for many
> different runs. I was quite surprised by how much slower ANTLR is
> comparing to the GCC. I also tried to profile the C target, the
> results from gprof are attached.
>
> Any comments?
>   
A few things come to mind in regards to C:

1) Did you you tune the token and tree node allocation pool to reflect 
something like the number of tokens you might expect (this really just 
small, large) the default is usually good for most things. This grammar 
is creating 909856 tree nodes according to your stats and this does not 
seem quite right but possibly is - if it is then you need to change the 
allocation pools to be much bigger, in which case the algorithm will 
make far less. Have you by chance turned on output=AST but not shaped 
the tree in anyway, resulting in a flat tree that must be rewritten all 
the time? The other possibility is the tree building mechanism - 
currently the way that the code is generated is not optimal, even though 
the runtime mechanisms are - we do a lot of stream rewriting which isn;t 
strictly speaking necessary and the gcc compiler won't be doing this.
2) You don't say whether you are doing anything in the grammar, such as 
accessing text and so on - you have to take out any action code to see 
what the actual baseline is for the parser. For instance accessing token 
text is a convenience function and you would not use it in a compiler 
that requires speed;
3) As per the examples, when you know that the input stream is 8 bit or 
16 bit, you can set a macro in your grammar such that it traverses the 
input stream directly using pointers and not via function calls. Did you 
turn this on.
4) I would need to see your grammar rather than a gprof (BTW - use 
kcachegrind for better views of this). Realistically, the gcc compiler 
has been worked on for years and is hand crafted, whereas if your 
grammar has predicates or other inefficient methodology, it isn't much 
of a comparison. It may not be so much that ANTLR generates slower code 
as that the grammar could be better, but there is no way to know without 
your grammar to look at (which I would like to see before looking further).
5) Are you taking out the time spent reading the file? Are you reading 
the file into memory the same way that gcc does it?
6) I presume that this is the latest 3.1.1 C runtime?

At the end of the day though it is difficult to compete against hand 
crafted C code that has had a lot of effort put into optimizing it :-). 
Publish your grammars so I can take a look at this.


Jim

From parrt at cs.usfca.edu  Thu Jan 15 10:05:33 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Jan 2009 10:05:33 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <496F7A55.6040107@temporal-wave.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7A55.6040107@temporal-wave.com>
Message-ID: <926155C5-3D96-4E17-A955-218FA59007AA@cs.usfca.edu>

Howdy.  Let me also mention that I've not tried to optimize output of  
antlr yet.  :)  The biggest win will be shortciruiting expr parsing to  
use something quick not 20 nested rules.

Ter

From jimi at temporal-wave.com  Thu Jan 15 10:20:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Jan 2009 10:20:33 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
Message-ID: <496F7E71.5050109@temporal-wave.com>

Jan Obdr??lek wrote:
> Hello,
>
> for our student research project we implemented a C grammar in ANTLR
> 3.1. (The grammar fully implements ANSI C99, and mostly implements the
> GNU C extensions - the notable exception being the attributes, which
> are a real pain.) However we found the performance of the parser to be
> a bit lacking. We therefore ran some tests. In addition to the default
> Java target, we modified the grammar for the C target. The results
> were then compared to the results obtained by using the GNU C
> compiler. This is a fair comparison, since gcc also uses a  top-down
> recursive parser (although hand-coded). Actually the test is tougher
> on gcc, since gcc does full compilation, compared to just building the
> AST in the case of ANTLR.
>
> The results can be summarized as follows (more details about the test
> at the end of this post):
>
>  - ANTLR/Java is obviously the slowest one [and there is a serious
> start-up/close-down overhead]
>  - ANTLR/C is faster, but still miles behind the gcc
Looking at your gprof file, it claims that the function call 
setCharPositionInLine() is called 4 times and takes 0.67 seconds, 
however this function is just this:

static  void        setCharPositionInLine    (pANTLR3_COMMON_TOKEN 
token, ANTLR3_INT32 pos)
{
    token->charPosition = pos;
}

So, I am having a hard time buying that. Try kcachegrind and see if this 
gives a different perspective, but as I say, we need to see the grammar 
really. I also suggest trying the beta 3.1.2 runtime which is in 
perforce/fisheye, though this probably means you need to use a current 
build of the ANTLR tool, which you can get from hudson: 
www.antlr.org/hudson.

Jim

From jimi at temporal-wave.com  Thu Jan 15 10:23:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Jan 2009 10:23:49 -0800
Subject: [antlr-interest] C++ exceptions in the ANTLR3 C target
In-Reply-To: <496F6240.6050609@progress.com>
References: <496F6240.6050609@progress.com>
Message-ID: <496F7F35.2050303@temporal-wave.com>

Richard Thrippleton wrote:
> Now that the C target can be built by a C++ compiler, I've been trying 
> to throw C++-style exceptions (as opposed to the exception system 
> internal to ANTLR's C target) from within embedded actions.
>
> My grammars build successfully, and the exceptions seem to behave as I'd 
> expect at runtime. However, I suspect I'm leaving myself open to 
> undefined behaviour; are C++ exceptions within the C output actually 
> supported, or is it merely co-incidence that nothing horrendous has 
> happened?
>
> My main fear would be memory leaks, but I'm not 100% sure if this is 
> happening or not.
>   
You can probably use them carefully, but as you point out, you have to 
be careful with memory. The runtime tracks all its normal memory 
allocations so  as long as you close the 'classes' correctly you should 
generally be OK. However, you should make sure that throwing exceptions 
does not bypass the normal rule clean up, such as resetting error and 
backtracking flags and so on,

Jim

From antlr at daishiva.com  Thu Jan 15 11:03:05 2009
From: antlr at daishiva.com (Ben Ratzlaff)
Date: Thu, 15 Jan 2009 12:03:05 -0700
Subject: [antlr-interest] crash in C runtime during PREPORTERROR()
Message-ID: <dc03471e0901151103q427f5d92t92d2f0fd3034c635@mail.gmail.com>

Howdy, just finished generating code for my first try at antlr, and it
crashes during parsing (pardon me if this is a known issue, still finding my
way around the website/wiki)
It's erroring during parsing, and crashing while printing the error message,
Looks like I still have work to do on my grammar =)

antlr3commontoken.c line 346
token->tokText.text    = token->strFactory->newStr8(token->strFactory,
(pANTLR3_UINT8)"<EOF>");

the strFactory pointer is not valid in my case. I have not yet found where
strFactory is assigned to. I can get around this by setting up the factory
manually:

pANTLR3_INPUT_STREAM            input = ...
pFactoringLexer                             lexer = ...

pANTLR3_STRING_FACTORY        stringFactory = antlr3StringFactoryNew();
lexer->pLexer->rec->state->tokSource->eofToken.strFactory = stringFactory;

pANTLR3_COMMON_TOKEN_STREAM        lexTokens =
antlr3CommonTokenStreamSourceNew(...);
pFactoringParser                parser = ...
parser->progStart(parser); // crash here
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/c6e46218/attachment.html 

From parrt at cs.usfca.edu  Thu Jan 15 12:08:53 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Jan 2009 12:08:53 -0800
Subject: [antlr-interest] newbie question: How do I reset ANTLRWorks to
	a pristine state?
In-Reply-To: <OF81511B01.A3319823-ON8525753F.00557291-8525753F.0055C576@us.ibm.com>
References: <OF31DF7CAD.7613495D-ON8525753F.00549723-8525753F.0054E7E2@LocalDomain>
	<OF81511B01.A3319823-ON8525753F.00557291-8525753F.0055C576@us.ibm.com>
Message-ID: <E734CDB2-4BD1-4F7E-9143-0E4FD496AE63@cs.usfca.edu>

look in prefs for the antlrworks folder...blast the contents I'd say.
Ter
On Jan 15, 2009, at 7:36 AM, Bowen Alpern wrote:

> Hi,
>
> On a MacBook Pro running OS X 10.5.6, how do I get back to the  
> original state of ANTLRWorks?
>
> I think I may have checked the "Don't show this alert again" box for  
> a compile message that I probably should not have.
>
> Thanks,
>
> Bowen
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Jan 15 12:42:08 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Jan 2009 12:42:08 -0800
Subject: [antlr-interest] crash in C runtime during PREPORTERROR()
In-Reply-To: <dc03471e0901151103q427f5d92t92d2f0fd3034c635@mail.gmail.com>
References: <dc03471e0901151103q427f5d92t92d2f0fd3034c635@mail.gmail.com>
Message-ID: <496F9FA0.8020903@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090115/3c78485e/attachment.html 

From chainone at gmail.com  Thu Jan 15 16:33:58 2009
From: chainone at gmail.com (chain one)
Date: Fri, 16 Jan 2009 08:33:58 +0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
	target )
In-Reply-To: <496F6F8F.8040302@temporal-wave.com>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
	<496F6F8F.8040302@temporal-wave.com>
Message-ID: <5a92ffb60901151633u1bf3ccd6p636ebdfd3aa4aca3@mail.gmail.com>

Thanks JIm
You suggestion is very useful to me.
Here is my another concern to the method you provided:
If the file is very large, would it lead the lexer to read though the
whole file? If it is, I think it would be slower than the method of
just telling the lexer to stop.

On 1/16/09, Jim Idle <jimi at temporal-wave.com> wrote:
> chain one wrote:
>>
>> I want to only parse the beginning of a file. And I don't want the
>> recognizer to beak the whole file into huge number of tokens which will
>> make the memory consuming very high.
>> So after the lexer having recognized one specified TOKEN such as ";", I
>> want to tell the lexer to stop, and pass the tokens to the parser.
>> Is it possible in C runtime target? If it is, could you tell me how?
>>
>>
>> SEMI: ';'  { // throw the EOF token?}
>> ;
>>
> If the trigger point is as simple as this, then why not just:
>
> SEMI : ';' .* ;
>
> Remember that the text is not copied into the token, it is just a pointer to
> the start and end of the text and so does not take up any memory.
>
> Jim
>>
>>
>> Thanks
>>
>> ________________________________
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>

-- 
Sent from my mobile device

From chainone at gmail.com  Thu Jan 15 22:37:03 2009
From: chainone at gmail.com (chain one)
Date: Fri, 16 Jan 2009 14:37:03 +0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
	target )
In-Reply-To: <496F6F8F.8040302@temporal-wave.com>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
	<496F6F8F.8040302@temporal-wave.com>
Message-ID: <5a92ffb60901152237i5017ab9bp6e9832151bf280be@mail.gmail.com>

While compiling the SEMI rule (SEMI : ';' .*;), the follow error message
pops up:
                   " The following alternatives can never be matched: 1"

Seems it is necessary to put an end to the SEMI rule.


On Fri, Jan 16, 2009 at 1:17 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  chain one wrote:
>
> I want to only parse the beginning of a file. And I don't want the
> recognizer to beak the whole file into huge number of tokens which will make
> the memory consuming very high. So after the lexer having recognized one
> specified TOKEN such as ";", I want to tell the lexer to stop, and pass the
> tokens to the parser.
> Is it possible in C runtime target? If it is, could you tell me how?
>
>
>  SEMI: ';'  { // throw the EOF token?}
> ;
>
>  If the trigger point is as simple as this, then why not just:
>
> SEMI : ';' .* ;
>
> Remember that the text is not copied into the token, it is just a pointer
> to the start and end of the text and so does not take up any memory.
>
> Jim
>
>
>  Thanks
>
> ------------------------------
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/e96b1d1a/attachment.html 

From chainone at gmail.com  Fri Jan 16 00:32:12 2009
From: chainone at gmail.com (chain one)
Date: Fri, 16 Jan 2009 16:32:12 +0800
Subject: [antlr-interest] How to tell the lexer to stop?(C runtime
	target )
In-Reply-To: <5a92ffb60901151633u1bf3ccd6p636ebdfd3aa4aca3@mail.gmail.com>
References: <5a92ffb60901150035m416d308cl1d7087ccb4ce8036@mail.gmail.com>
	<496F6F8F.8040302@temporal-wave.com>
	<5a92ffb60901151633u1bf3ccd6p636ebdfd3aa4aca3@mail.gmail.com>
Message-ID: <5a92ffb60901160032n746ea958r647230870a1c62c2@mail.gmail.com>

I think I have found the way to tell the lexer to stop.The way is :
1. Place a BOOL variable "if_lexer_need_stop" in the generated lexer .c file
: BOOL if_lexer_need_stop = FALSE;
2. Override the function nextTokenStr and function myNextToken :
    modify this line from
   "if  (lexer->input->istream->_LA(lexer->input->istream, 1) ==
ANTLR3_CHARSTREAM_EOF)"
   to
  "if
 (if_lexer_need_stop ==TRUE||lexer->input->istream->_LA(lexer->input->istream,
1) ==        ANTLR3_CHARSTREAM_EOF)"

3. Install the new nextToken() method:
    a). Add this line after calling antlr3LexerNewStream in the
function testlexLexerNewSSD:
       "ctx->pLexer->rec->state->tokSource->nextToken = myNextToken;"
4. Modify one terminal lex rule to the form like:
    SEMI : ';' {if_lexer_need_stop = TRUE;}
;





On Fri, Jan 16, 2009 at 8:33 AM, chain one <chainone at gmail.com> wrote:

> Thanks JIm
> You suggestion is very useful to me.
> Here is my another concern to the method you provided:
> If the file is very large, would it lead the lexer to read though the
> whole file? If it is, I think it would be slower than the method of
> just telling the lexer to stop.
>
> On 1/16/09, Jim Idle <jimi at temporal-wave.com> wrote:
> > chain one wrote:
> >>
> >> I want to only parse the beginning of a file. And I don't want the
> >> recognizer to beak the whole file into huge number of tokens which will
> >> make the memory consuming very high.
> >> So after the lexer having recognized one specified TOKEN such as ";", I
> >> want to tell the lexer to stop, and pass the tokens to the parser.
> >> Is it possible in C runtime target? If it is, could you tell me how?
> >>
> >>
> >> SEMI: ';'  { // throw the EOF token?}
> >> ;
> >>
> > If the trigger point is as simple as this, then why not just:
> >
> > SEMI : ';' .* ;
> >
> > Remember that the text is not copied into the token, it is just a pointer
> to
> > the start and end of the text and so does not take up any memory.
> >
> > Jim
> >>
> >>
> >> Thanks
> >>
> >> ________________________________
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> >
>
> --
> Sent from my mobile device
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/82f6692b/attachment.html 

From obdrzalek at gmail.com  Fri Jan 16 06:08:02 2009
From: obdrzalek at gmail.com (=?WINDOWS-1252?Q?Jan_Obdr=9E=E1lek?=)
Date: Fri, 16 Jan 2009 15:08:02 +0100
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <496F7E71.5050109@temporal-wave.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
Message-ID: <66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>

Hello,

thank you very much for your help. Here are the answers.

> 1) Did you you tune the token and tree node allocation pool to reflect
> something like the number of tokens you might expect (this really just
> small, large) the default is usually good for most things. This grammar is
> creating 909856 tree nodes according to your stats and this does not seem
> quite right but possibly is - if it is then you need to change the
> allocation pools to be much bigger, in which case the algorithm will make
> far less. Have you by chance turned on output=AST but not shaped the tree in
> anyway, resulting in a flat tree that must be rewritten all the time? The
> other possibility is the tree building mechanism - currently the way that
> the code is generated is not optimal, even though the runtime mechanisms are
> - we do a lot of stream rewriting which isn;t strictly speaking necessary
> and the gcc compiler won't be doing this.

The grammar generates a pretty standard AST tree (definitely not a
flat one). Turning off the tree-building mechanism made all the
difference - it saved about 80% of the running time. Being on par with
gcc here (although we still need to remember that gcc does a full
compilation) is quite a nice result for a generated parser.

<<<
~/tmp/test$ time ./parser
Reading a.c

real    0m0.481s
user    0m0.360s
sys     0m0.108s
>>>

The problem is I need the AST :(

> 2) You don't say whether you are doing anything in the grammar, such as
> accessing text and so on - you have to take out any action code to see what
> the actual baseline is for the parser. For instance accessing token text is
> a convenience function and you would not use it in a compiler that requires
> speed;

There is no action code except for handling typedefs. This is not a problem.

> 3) As per the examples, when you know that the input stream is 8 bit or 16
> bit, you can set a macro in your grammar such that it traverses the input
> stream directly using pointers and not via function calls. Did you turn this
> on.

I tried

@lexer::header{
#define ANTLR3_INLINE_INPUT_ASCII
}

This actually makes the parser a tiny bit slower than without the #define.

> 4) I would need to see your grammar rather than a gprof (BTW - use
> kcachegrind for better views of this). Realistically, the gcc compiler has
> been worked on for years and is hand crafted, whereas if your grammar has
> predicates or other inefficient methodology, it isn't much of a comparison.
> It may not be so much that ANTLR generates slower code as that the grammar
> could be better, but there is no way to know without your grammar to look at
> (which I would like to see before looking further).

Thanks for suggesting kcachegrind. It is much better than gprof :) I
do not think valgrind existed the last time I did any serious
programming in plain C ... My only complaint is the cycle detection.
Having <cycle1> accounting for most of the time is not what I really
want. However if I skip cycle detection, kcachegring grabs 100% of one
CPU core and keeps crunching ...

The profiling info in kcachegring after turning off the tree-building
seems to be about what I expected. To give you the idea:
20.6% (inclusive time) mTokens[called 255 744 times] - this is the lexer part
12% (inclusive time) antlr3dfapredict  - that's not too bad. I can
definitely decrease this significantly.
12% (inclusive time) isTypeName [called 21 800 times] - this function
checks whether the given identifier is a type name or not. It calls ~3
800 000 times strcmp (4.13%) That can also be improved.

> 5) Are you taking out the time spent reading the file? Are you reading the
> file into memory the same way that gcc does it?

No, I'm not. This is what I do:

input = antlr3AsciiFileStreamNew(fName);
       lxr = GNUCaLexerNew(input);
       tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
TOKENSOURCE(lxr));
       psr = GNUCaParserNew(tstream);
       psr->translationUnit(psr);

I can

> 6) I presume that this is the latest 3.1.1 C runtime?

yep

> At the end of the day though it is difficult to compete against hand crafted
> C code that has had a lot of effort put into optimizing it :-).

Sure, I'm not expecting miracles :) That time without the
tree-building seems reasonable to me.

> Publish your grammars so I can take a look at this.

Sure, the grammar will be published soon under GPL. It just needs some clean-up.

To sum up - the main culprit is the tree-building mechanism. Other
than that the performance of the generated parser is quite reasonable.
The problem is that tree-building/rewriting capabilities of ANTLR are
the main reason why we use ANTLR. Second - I need (or would prefer) a
fast Java target. Java does not have to be much slower than C. If Java
is that much slower, we will probably end up using C target for the
parser and then translating the AST into a Java structure ... I will
turn off the tree-building in Java and see what happens.

Once again, thanks to everybody for their suggestions!

Regards,
Jan

--
Dr. Jan Obdr??lek <obdrzalek at fi.muni.cz>
Faculty of Informatics, Masaryk University, Brno, Czech Republic

From obdrzalek at gmail.com  Fri Jan 16 06:11:33 2009
From: obdrzalek at gmail.com (=?WINDOWS-1252?Q?Jan_Obdr=9E=E1lek?=)
Date: Fri, 16 Jan 2009 15:11:33 +0100
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <496F7E71.5050109@temporal-wave.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
Message-ID: <66cce1fb0901160611i1015a71eu3b1def30dab7be5d@mail.gmail.com>

> really. I also suggest trying the beta 3.1.2 runtime which is in
> perforce/fisheye, though this probably means you need to use a current build
> of the ANTLR tool, which you can get from hudson: www.antlr.org/hudson.

 Tried that, and 3.1.1 vs. 3.1.2b1 run at about the same speed.

Regards,
Jan

From kroepke at classdump.org  Fri Jan 16 09:55:46 2009
From: kroepke at classdump.org (=?WINDOWS-1252?Q?Kay_R=F6pke?=)
Date: Fri, 16 Jan 2009 18:55:46 +0100
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
Message-ID: <6BC25B80-B377-4023-9ADE-9DD8189EB7B9@classdump.org>

Hi!

On Jan 16, 2009, at 3:08 PM, Jan Obdr??lek wrote:

>
> The grammar generates a pretty standard AST tree (definitely not a
> flat one). Turning off the tree-building mechanism made all the
> difference - it saved about 80% of the running time. Being on par with
> gcc here (although we still need to remember that gcc does a full
> compilation) is quite a nice result for a generated parser.

may i suggest using -ftime-report for gcc?

it gives you:

Execution times (seconds)
  preprocessing         :   0.07 (25%) usr   0.04 (26%) sys   0.11  
(25%) wall
  lexical analysis      :   0.08 (28%) usr   0.07 (40%) sys   0.14  
(31%) wall
  parser                :   0.08 (28%) usr   0.04 (23%) sys   0.11  
(25%) wall
  expand                :   0.01 ( 2%) usr   0.00 ( 1%) sys   0.01  
( 2%) wall
  global alloc          :   0.00 ( 2%) usr   0.00 ( 0%) sys   0.01  
( 1%) wall
  shorten branches      :   0.00 ( 0%) usr   0.00 ( 0%) sys   0.02  
( 4%) wall
  symout                :   0.01 ( 4%) usr   0.01 ( 3%) sys   0.02  
( 4%) wall
  TOTAL                 :   0.27             0.17             0.45

compilation often isn't as expensive as one might think...it's dealing  
with strings that sucks ;)

-fmem-report is also interesting...

cheers,
-k

From parrt at cs.usfca.edu  Fri Jan 16 10:45:57 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Jan 2009 10:45:57 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <6BC25B80-B377-4023-9ADE-9DD8189EB7B9@classdump.org>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
	<6BC25B80-B377-4023-9ADE-9DD8189EB7B9@classdump.org>
Message-ID: <FE66B8A4-0330-4A30-A1BA-1040D61AA1DF@cs.usfca.edu>

Wow...56% is parsing/lexing.
Ter
On Jan 16, 2009, at 9:55 AM, Kay R?pke wrote:

> Hi!
>
> On Jan 16, 2009, at 3:08 PM, Jan Obdr??lek wrote:
>
>>
>> The grammar generates a pretty standard AST tree (definitely not a
>> flat one). Turning off the tree-building mechanism made all the
>> difference - it saved about 80% of the running time. Being on par  
>> with
>> gcc here (although we still need to remember that gcc does a full
>> compilation) is quite a nice result for a generated parser.
>
> may i suggest using -ftime-report for gcc?
>
> it gives you:
>
> Execution times (seconds)
>  preprocessing         :   0.07 (25%) usr   0.04 (26%) sys   0.11
> (25%) wall
>  lexical analysis      :   0.08 (28%) usr   0.07 (40%) sys   0.14
> (31%) wall
>  parser                :   0.08 (28%) usr   0.04 (23%) sys   0.11
> (25%) wall
>  expand                :   0.01 ( 2%) usr   0.00 ( 1%) sys   0.01
> ( 2%) wall
>  global alloc          :   0.00 ( 2%) usr   0.00 ( 0%) sys   0.01
> ( 1%) wall
>  shorten branches      :   0.00 ( 0%) usr   0.00 ( 0%) sys   0.02
> ( 4%) wall
>  symout                :   0.01 ( 4%) usr   0.01 ( 3%) sys   0.02
> ( 4%) wall
>  TOTAL                 :   0.27             0.17             0.45
>
> compilation often isn't as expensive as one might think...it's dealing
> with strings that sucks ;)
>
> -fmem-report is also interesting...
>
> cheers,
> -k
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kroepke at classdump.org  Fri Jan 16 11:14:13 2009
From: kroepke at classdump.org (=?WINDOWS-1252?Q?Kay_R=F6pke?=)
Date: Fri, 16 Jan 2009 20:14:13 +0100
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <FE66B8A4-0330-4A30-A1BA-1040D61AA1DF@cs.usfca.edu>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
	<6BC25B80-B377-4023-9ADE-9DD8189EB7B9@classdump.org>
	<FE66B8A4-0330-4A30-A1BA-1040D61AA1DF@cs.usfca.edu>
Message-ID: <18413A1D-55B4-4FEC-AE93-D4EF2914141F@classdump.org>


On Jan 16, 2009, at 7:45 PM, Terence Parr wrote:

> Wow...56% is parsing/lexing.

yeah, that's why the llvm/clang folks spent so much time on their c/c+ 
+ frontend.
the compiler itself is plenty fast, but preprocessed code is huge.
actually gcc isn't the benchmark any more, for certain things clang is  
much much faster.

cheers,
-k

From jimi at temporal-wave.com  Fri Jan 16 11:33:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 11:33:18 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
Message-ID: <4970E0FE.60005@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/1830c063/attachment.html 

From gerald at certiv.net  Fri Jan 16 13:05:33 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 16 Jan 2009 13:05:33 -0800
Subject: [antlr-interest] An issue with label method references in actions
Message-ID: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>

Bug in the Java target code generation? -- possibly related to 
<http://www.antlr.org/jira/browse/ANTLR-357>ANTLR-357

Given the rule:

statement
   @init {
       gDecl = new Statement($statement.start.getStartIndex());
   }
   :  k=id { gDecl.setName($k.start.getStartIndex()); } ';'
   ;

The reference $statement.start.getStartIndex() generates the code, 
with correct parens placement:

gDecl = new Statement(((CommonToken) retval.start).getStartIndex());


The reference $k.start.getStartIndex() generates different, NPE 
vulnerable code:

gDecl.setName((k != null ? ((CommonToken) k.start) : null).getStartIndex()); 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/2f32631a/attachment.html 

From jimi at temporal-wave.com  Fri Jan 16 13:20:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 13:20:42 -0800
Subject: [antlr-interest] An issue with label method references in
	actions
In-Reply-To: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
Message-ID: <4970FA2A.8010909@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/2b8f815f/attachment.html 

From rmann at latencyzero.com  Fri Jan 16 13:37:21 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 13:37:21 -0800
Subject: [antlr-interest] Question about building code generation target
Message-ID: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>

Hi. I'm trying to follow the instructions for building a code  
generation target here:

http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target

Mostly to experiment with ANTLR from a different perspective, and  
maybe to do something useful. However, one step isn't very clear:

"I recommend building the ANTLR tool 'in place'. Do not create a jar  
or compile/copy to a build directory. When you run it with 'java -cp  
path-to-src-dir ...' it will use the original *.stg file, which you'll  
edit a lot - so rebuilding the tool would be quite a PITA."

I'm not really sure what that means. I built ANTLR with "ant build",  
and when I try running as the step suggests, well, I can't get the  
classpath right, and I'm not sure how that ties into the .stg files.

$ java -cp build/classes:build/rtclasses/:lib/stringtemplate-3.2.jar  
org.antlr.Tool
Exception in thread "main" java.lang.NoClassDefFoundError: antlr/ 
TokenStream
	at org.antlr.tool.ErrorManager.setLocale(Unknown Source)
	at org.antlr.tool.ErrorManager.<clinit>(Unknown Source)
	at org.antlr.Tool.main(Unknown Source)

Would someone please clarify? Thanks!


-- 
Rick


From rmann at latencyzero.com  Fri Jan 16 13:45:56 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 13:45:56 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
Message-ID: <AB21C477-BCC9-4DDC-9C32-091ACA8ED2B1@latencyzero.com>

Maybe a different question to ask is, how do I build and run ANTLR  
from source? I'm running "ant run-tests" and it seems to be failing  
miserably.

On Jan 16, 2009, at 13:37:21, Rick Mann wrote:

> Hi. I'm trying to follow the instructions for building a code
> generation target here:
>
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
>
> Mostly to experiment with ANTLR from a different perspective, and
> maybe to do something useful. However, one step isn't very clear:
>
> "I recommend building the ANTLR tool 'in place'. Do not create a jar
> or compile/copy to a build directory. When you run it with 'java -cp
> path-to-src-dir ...' it will use the original *.stg file, which you'll
> edit a lot - so rebuilding the tool would be quite a PITA."
>
> I'm not really sure what that means. I built ANTLR with "ant build",
> and when I try running as the step suggests, well, I can't get the
> classpath right, and I'm not sure how that ties into the .stg files.
>
> $ java -cp build/classes:build/rtclasses/:lib/stringtemplate-3.2.jar
> org.antlr.Tool
> Exception in thread "main" java.lang.NoClassDefFoundError: antlr/
> TokenStream
> 	at org.antlr.tool.ErrorManager.setLocale(Unknown Source)
> 	at org.antlr.tool.ErrorManager.<clinit>(Unknown Source)
> 	at org.antlr.Tool.main(Unknown Source)
>
> Would someone please clarify? Thanks!
>
>
> -- 
> Rick
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Rick


From jimi at temporal-wave.com  Fri Jan 16 13:51:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 13:51:20 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
Message-ID: <49710158.8000201@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/9f1fc158/attachment.html 

From jimi at temporal-wave.com  Fri Jan 16 13:52:22 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 13:52:22 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <AB21C477-BCC9-4DDC-9C32-091ACA8ED2B1@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<AB21C477-BCC9-4DDC-9C32-091ACA8ED2B1@latencyzero.com>
Message-ID: <49710196.6020802@temporal-wave.com>

Rick Mann wrote:
> Maybe a different question to ask is, how do I build and run ANTLR  
> from source? I'm running "ant run-tests" and it seems to be failing  
> miserably.
>   
Ant script is not up to date and does not know how to build ANTLR using 
itself. Just use Maven and you will be fine.

Jim


From rmann at latencyzero.com  Fri Jan 16 14:03:37 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 14:03:37 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <49710196.6020802@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<AB21C477-BCC9-4DDC-9C32-091ACA8ED2B1@latencyzero.com>
	<49710196.6020802@temporal-wave.com>
Message-ID: <902FA3DC-2870-4262-96AF-A4385CF728E9@latencyzero.com>


On Jan 16, 2009, at 13:52:22, Jim Idle wrote:

> Rick Mann wrote:
>> Maybe a different question to ask is, how do I build and run ANTLR
>> from source? I'm running "ant run-tests" and it seems to be failing
>> miserably.
>>
> Ant script is not up to date and does not know how to build ANTLR  
> using
> itself. Just use Maven and you will be fine.

Maven it is. I'm a big fan of the Maven ant plugin. I'm not as big a  
fan of the full-on Maven, and I'm a whiny Mac user that gets really  
irritated when the UI isn't perfectly Mac-like, so the various Java  
IDEs make me slightly insane (also, I can't get Eclipse to let me put  
my sources where I want to).

But thanks! I'll try Maven!


-- 
Rick


From jimi at temporal-wave.com  Fri Jan 16 14:06:55 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 14:06:55 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <902FA3DC-2870-4262-96AF-A4385CF728E9@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<AB21C477-BCC9-4DDC-9C32-091ACA8ED2B1@latencyzero.com>
	<49710196.6020802@temporal-wave.com>
	<902FA3DC-2870-4262-96AF-A4385CF728E9@latencyzero.com>
Message-ID: <497104FF.5050907@temporal-wave.com>

Rick Mann wrote:
>
> On Jan 16, 2009, at 13:52:22, Jim Idle wrote:
>
>> Rick Mann wrote:
>>> Maybe a different question to ask is, how do I build and run ANTLR
>>> from source? I'm running "ant run-tests" and it seems to be failing
>>> miserably.
>>>
>> Ant script is not up to date and does not know how to build ANTLR using
>> itself. Just use Maven and you will be fine.
>
> Maven it is. I'm a big fan of the Maven ant plugin. I'm not as big a 
> fan of the full-on Maven, and I'm a whiny Mac user that gets really 
> irritated when the UI isn't perfectly Mac-like, so the various Java 
> IDEs make me slightly insane (also, I can't get Eclipse to let me put 
> my sources where I want to).
Netbeans would be a lot better for you IMO, but it is all a matter of 
personal choice. For instance I find ANT a real pain but Maven is really 
easy once you get over the learning curve.
>
> But thanks! I'll try Maven!
>
>

JIm

From rmann at latencyzero.com  Fri Jan 16 14:28:01 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 14:28:01 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <49710158.8000201@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
Message-ID: <2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>


On Jan 16, 2009, at 13:51:20, Jim Idle wrote:

> All you need do is download and install Maven 2.0.9 on your system  
> and make sure that the mvn command is in your path. Then download  
> the source for ANTLR from the Fisheye system (just get the tar of  
> the antlr tool directory) and cd to the directory containing pom.xml.
>
> Type:
>
> mvn -Dmaven.test.skip=true
>
> And watch the output to see where it puts the jar-with-dependencies.  
> Create your self a small script that invokes this jar and you are  
> all set.


Thanks for the quick response, Jim. I've got Maven (turns out I had  
the latest version already), but I can't find anything in Fisheye that  
lets me download .tar files, nor am I sure which is the "antlr tool  
directory" (unless you just mean antlr/src/org/antlr/tool), but don't  
I want it all? In any case, I don't see the download link (I seem to  
recall seeing such a thing in other Fisheye repos in the past, but it  
has been a while).

Sorry if I'm being obtuse, just not seeing it. Thanks!

-- 
Rick


From antlr at mirality.co.nz  Fri Jan 16 14:56:25 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 17 Jan 2009 11:56:25 +1300
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <4970E0FE.60005@temporal-wave.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
	<4970E0FE.60005@temporal-wave.com>
Message-ID: <20090116225635.D385934184B7@www.antlr.org>

At 08:33 17/01/2009, Jim Idle wrote:
>Right - so your one function dealing with strings is 12% of the 
>time (ignoring the tree stuff for the moment), rather than strcmp 
>you should use memcmp, but it would be faster to use a TRIE.

What have you got against strcmp?  It's usually implemented as a 
call to memcmp anyway...


From jimi at temporal-wave.com  Fri Jan 16 15:13:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 15:13:31 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
Message-ID: <4971149B.7070600@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/f41fe538/attachment.html 

From gerald at certiv.net  Fri Jan 16 15:21:27 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 16 Jan 2009 15:21:27 -0800
Subject: [antlr-interest] An issue with label method references in
 actions
In-Reply-To: <4970FA2A.8010909@temporal-wave.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
	<4970FA2A.8010909@temporal-wave.com>
Message-ID: <200901162321.n0GNLhwc024607@zinc.newtechlaw.com>

At 01:20 PM 1/16/2009, Jim Idle wrote:
>Gerald Rosenberg wrote:
>>Bug in the Java target code generation? -- possibly related to 
>><http://www.antlr.org/jira/browse/ANTLR-357>ANTLR-357
>Basically, the references are not really intended to be used like 
>that, but you get away with it quite a lot of the time. You should 
>really do this:
>
>CommonToken ct = $k.start;
>// Check for null and so on here
>gDecl.setName(ct.getStartIndex());

Thanks, Jim.  I realize the work around is obvious.

What is not so obvious is intent.  To all appearances, the code gen 
is intending to do the right thing -- it produces valid code, but 
vulnerable to the run-time NPE.  I just wanted to raise the issue so 
that it might be noted by someone with Jira rights and hopefully 
addressed as Antlr continues to evolve.

Best,
Gerald


>>Given the rule:
>>
>>statement
>>   @init {
>>       gDecl = new Statement($statement.start.getStartIndex());
>>   }
>>   :  k=id { gDecl.setName($k.start.getStartIndex()); } ';'
>>   ;
>>
>>The reference $statement.start.getStartIndex() generates the code, 
>>with correct parens placement:
>>
>>gDecl = new Statement(((CommonToken) retval. start).getStartIndex());
>>
>>
>>The reference $k.start.getStartIndex() generates different, NPE 
>>vulnerable code:
>>
>>gDecl .setName((k != null ? ((CommonToken) k.start ) : null 
>>).getStartIndex());
>>
>>
>>
>>
>>
>>List: 
>><http://www.antlr.org/mailman/listinfo/antlr-interest>http://www.antlr.org/mailman/listinfo/antlr-interest
>>Unsubscribe: 
>><http://www.antlr.org/mailman/options/antlr-interest/your-email-address>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/c05d82ad/attachment.html 

From jimi at temporal-wave.com  Fri Jan 16 15:34:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 15:34:14 -0800
Subject: [antlr-interest] ANTLR performance
In-Reply-To: <20090116224957.7C0131206709@msf1.dnsmadeeasy.com>
References: <66cce1fb0901150720h43642215q1c05efbfaf68a879@mail.gmail.com>
	<496F7E71.5050109@temporal-wave.com>
	<66cce1fb0901160608i71ca9ecyb2bc24fc65c4f9d8@mail.gmail.com>
	<4970E0FE.60005@temporal-wave.com>
	<20090116224957.7C0131206709@msf1.dnsmadeeasy.com>
Message-ID: <49711976.4010309@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/cbd46f9f/attachment.html 

From jimi at temporal-wave.com  Fri Jan 16 15:40:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 15:40:34 -0800
Subject: [antlr-interest] An issue with label method references in
	actions
In-Reply-To: <200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
	<4970FA2A.8010909@temporal-wave.com>
	<200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
Message-ID: <49711AF2.5020409@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/40babea9/attachment.html 

From rmann at latencyzero.com  Fri Jan 16 15:41:58 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 15:41:58 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <4971149B.7070600@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
	<4971149B.7070600@temporal-wave.com>
Message-ID: <C6EBA9E6-4FB1-4526-8BD7-1E4232ACEF1E@latencyzero.com>


On Jan 16, 2009, at 15:13:31, Jim Idle wrote:

> I always have trouble finding the tiny icon too it is there  
> somewhere. However you might find it easier to get a perforce  
> account from Terence.
>
> You only the need the tool source so you can add your own templates.  
> The maven config knows how to find any other dependencies  
> automatically.


I can see how to download individual files, they each have a little  
down-arrow next to them. But nothing seems to let me download a whole  
directory subtree. I've asked Terence for perforce access, hopefully  
he'll grant that soon.

I'm surprised the website doesn't have source snapshots in tgz form.  
There's a browsable snapshot, but it doesn't seem to offer all-in-one  
downloads, either.

Thanks!

-- 
Rick


From parrt at cs.usfca.edu  Fri Jan 16 15:42:36 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Jan 2009 15:42:36 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <C6EBA9E6-4FB1-4526-8BD7-1E4232ACEF1E@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
	<4971149B.7070600@temporal-wave.com>
	<C6EBA9E6-4FB1-4526-8BD7-1E4232ACEF1E@latencyzero.com>
Message-ID: <9206C921-6DC2-4E89-ACA1-8755C460DFD6@cs.usfca.edu>

Doesn't hudson provide that Jim?
Ter
On Jan 16, 2009, at 3:41 PM, Rick Mann wrote:

>
> On Jan 16, 2009, at 15:13:31, Jim Idle wrote:
>
>> I always have trouble finding the tiny icon too it is there
>> somewhere. However you might find it easier to get a perforce
>> account from Terence.
>>
>> You only the need the tool source so you can add your own templates.
>> The maven config knows how to find any other dependencies
>> automatically.
>
>
> I can see how to download individual files, they each have a little
> down-arrow next to them. But nothing seems to let me download a whole
> directory subtree. I've asked Terence for perforce access, hopefully
> he'll grant that soon.
>
> I'm surprised the website doesn't have source snapshots in tgz form.
> There's a browsable snapshot, but it doesn't seem to offer all-in-one
> downloads, either.
>
> Thanks!
>
> -- 
> Rick
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Jan 16 15:44:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Jan 2009 15:44:29 -0800
Subject: [antlr-interest] An issue with label method references in
	actions
In-Reply-To: <200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
	<4970FA2A.8010909@temporal-wave.com>
	<200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
Message-ID: <2BA7F8BE-B8E1-4FF0-8450-C116D1B2F375@cs.usfca.edu>


On Jan 16, 2009, at 3:21 PM, Gerald Rosenberg wrote:

> At 01:20 PM 1/16/2009, Jim Idle wrote:
>> Gerald Rosenberg wrote:
>>> Bug in the Java target code generation? -- possibly related to  
>>> ANTLR-357
>> Basically, the references are not really intended to be used like  
>> that, but you get away with it quite a lot of the time. You should  
>> really do this:
>>
>> CommonToken ct = $k.start;
>> // Check for null and so on here
>> gDecl.setName(ct.getStartIndex());
>
> Thanks, Jim.  I realize the work around is obvious.
>
> What is not so obvious is intent.  To all appearances, the code gen  
> is intending to do the right thing -- it produces valid code, but  
> vulnerable to the run-time NPE.  I just wanted to raise the issue so  
> that it might be noted by someone with Jira rights and hopefully  
> addressed as Antlr continues to evolve.

hi. yeah, the problem is that $k.start must be NPE protected.   
Anything that uses that expression could get an NPE though :(  I don't  
see past $k.start so I can't know what you're doing with it.
Ter

From rmann at latencyzero.com  Fri Jan 16 16:04:46 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 16:04:46 -0800
Subject: [antlr-interest] Problems with maven build (was: Question about
	building code generation target)
In-Reply-To: <49710158.8000201@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
Message-ID: <E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>


On Jan 16, 2009, at 13:51:20, Jim Idle wrote:

> When you change your template or codegen target java file, you just  
> type:
>
> mvn
>
> And it rebuilds just what has changed in a second or two (depends on  
> your machine speed of course).
>
> All you need do is download and install Maven 2.0.9 on your system  
> and make sure that the mvn command is in your path. Then download  
> the source for ANTLR from the Fisheye system (just get the tar of  
> the antlr tool directory) and cd to the directory containing pom.xml.
>
> Type:
>
> mvn -Dmaven.test.skip=true
>
> And watch the output to see where it puts the jar-with-dependencies.  
> Create your self a small script that invokes this jar and you are  
> all set.


Jim, Ter gave me p4 access, and I checked out the sources. I then  
tried to build antlr but ran into problems. Any idea what I left out?  
Note that I fetched the latest, not knowing the right revision number  
for 3.1.1.

$ pwd
/Developer/Java/ANTLR/depot/code/antlr/main
$ ls
CHANGES.txt		build.properties	pom.xml			target/
LICENSE.txt		build.xml		runtime/		test/
README.txt		lib/			src/
Eclipse:main rmann$ mvn
[INFO] Scanning for projects...
[INFO]  
------------------------------------------------------------------------
[INFO] Building antlr
[INFO]    task-segment: [install]
[INFO]  
------------------------------------------------------------------------
[INFO] [antlr3:antlr {execution: default}]
[INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/ 
src/org/antlr/grammar/v3/ActionAnalysis.g
[INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/ 
src/org/antlr/grammar/v3/ActionTranslator.g
[INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/ 
src/org/antlr/grammar/v3/ANTLRv3.g
warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/ 
antlr/grammar/v3/ANTLRv3.g:251:6: no lexer rule corresponding to  
token: SEMPRED
warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/ 
antlr/grammar/v3/ANTLRv3.g:344:22: no lexer rule corresponding to  
token: SEMPRED
warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/ 
antlr/grammar/v3/ANTLRv3.g:157:4: no lexer rule corresponding to  
token: DOC_COMMENT
warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/ 
antlr/grammar/v3/ANTLRv3.g:93:9: no lexer rule corresponding to token:  
DOC_COMMENT
warning(200): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/ 
antlr/grammar/v3/ANTLRv3.g:465:5: Decision can match input such as "'  
''$''A''N''T''L''R'' ''s''r''c'' ''"''\\''\'''"'' ''0'..'9'" using  
multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[INFO] snapshot org.antlr:antlr-runtime:3.1.2-SNAPSHOT: checking for  
updates from antlr-snapshot
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.pom
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.jar
[INFO]  
------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO]  
------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.antlr:antlr-runtime:jar:3.1.2-SNAPSHOT

   Try downloading the file manually from the project website.

   Then, install it using the command:
       mvn install:install-file -DgroupId=org.antlr -DartifactId=antlr- 
runtime -Dversion=3.1.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

   Alternatively, if you host your own repository you can deploy the  
file there:
       mvn deploy:deploy-file -DgroupId=org.antlr -DartifactId=antlr- 
runtime -Dversion=3.1.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file - 
Durl=[url] -DrepositoryId=[id]

   Path to dependency:
   	1) org.antlr:antlr:jar:3.1.2-SNAPSHOT
   	2) org.antlr:antlr-runtime:jar:3.1.2-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
   org.antlr:antlr:jar:3.1.2-SNAPSHOT

from the specified remote repositories:
   antlr-snapshot (http://antlr.org/antlr-snapshot),
   central (http://repo1.maven.org/maven2)


[INFO]  
------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO]  
------------------------------------------------------------------------
[INFO] Total time: 16 seconds
[INFO] Finished at: Fri Jan 16 15:59:39 PST 2009
[INFO] Final Memory: 57M/80M
[INFO]  
------------------------------------------------------------------------


-- 
Rick


From jimi at temporal-wave.com  Fri Jan 16 16:14:03 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 16:14:03 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <9206C921-6DC2-4E89-ACA1-8755C460DFD6@cs.usfca.edu>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
	<4971149B.7070600@temporal-wave.com>
	<C6EBA9E6-4FB1-4526-8BD7-1E4232ACEF1E@latencyzero.com>
	<9206C921-6DC2-4E89-ACA1-8755C460DFD6@cs.usfca.edu>
Message-ID: <497122CB.1050709@temporal-wave.com>

Terence Parr wrote:
> Doesn't hudson provide that Jim?

Funny you should mention that. It was something I forgot to add to the 
mvn targets on Hudson. I have just added this and now if you look at the 
build artifacts for any of the ANTLR projects on Hudson 
(www.antlr.org/hudson) you will find that as well as the latest binary 
jars, there is now a source jar. The regression tests are still running 
on ANTLR Tool so the source jar won't be available until they have 
completed in about 20 minutes time (as I type)

I also added the Google analytics tag to the pages so we can play big 
brother.

And finally, and surely most important of all if you are under 25, I 
created a Twitter account called Antlr, and Hudson is now happily 
publishing the status of the builds to twitter. I did this mainly to 
celebrate the complete uselessness of this ;-)

Jim

> Ter
> On Jan 16, 2009, at 3:41 PM, Rick Mann wrote:
>
>>
>> On Jan 16, 2009, at 15:13:31, Jim Idle wrote:
>>
>>> I always have trouble finding the tiny icon too it is there
>>> somewhere. However you might find it easier to get a perforce
>>> account from Terence.
>>>
>>> You only the need the tool source so you can add your own templates.
>>> The maven config knows how to find any other dependencies
>>> automatically.
>>
>>
>> I can see how to download individual files, they each have a little
>> down-arrow next to them. But nothing seems to let me download a whole
>> directory subtree. I've asked Terence for perforce access, hopefully
>> he'll grant that soon.
>>
>> I'm surprised the website doesn't have source snapshots in tgz form.
>> There's a browsable snapshot, but it doesn't seem to offer all-in-one
>> downloads, either.
>>
>> Thanks!
>>
>> -- 
>> Rick
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Fri Jan 16 16:16:15 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Jan 2009 16:16:15 -0800
Subject: [antlr-interest] Question about building code generation target
In-Reply-To: <497122CB.1050709@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<2D95276B-2836-4451-8D11-66388D087BC6@latencyzero.com>
	<4971149B.7070600@temporal-wave.com>
	<C6EBA9E6-4FB1-4526-8BD7-1E4232ACEF1E@latencyzero.com>
	<9206C921-6DC2-4E89-ACA1-8755C460DFD6@cs.usfca.edu>
	<497122CB.1050709@temporal-wave.com>
Message-ID: <16F126FF-2C62-4F40-B4EA-1629173730CB@cs.usfca.edu>

On Jan 16, 2009, at 4:14 PM, Jim Idle wrote:
> And finally, and surely most important of all if you are under 25, I  
> created a Twitter account called Antlr, and Hudson is now happily  
> publishing the status of the builds to twitter. I did this mainly to  
> celebrate the complete uselessness of this ;-)

I should hook up a device to my toilet so it twitters every time I  
take a leak. ;)  Man am I old :)

Ter

From rmann at latencyzero.com  Fri Jan 16 16:19:55 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 16:19:55 -0800
Subject: [antlr-interest] Problems with maven build (was: Question about
	building code generation target)
In-Reply-To: <E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
Message-ID: <28D5A54C-EB9E-4B3D-AADE-E5782827629B@latencyzero.com>

Hmm...running maven in the Java runtime seems to have fixed this. Is  
that not something the top-level maven should do?

On Jan 16, 2009, at 16:04:46, Rick Mann wrote:

>
> On Jan 16, 2009, at 13:51:20, Jim Idle wrote:
>
>> When you change your template or codegen target java file, you just
>> type:
>>
>> mvn
>>
>> And it rebuilds just what has changed in a second or two (depends on
>> your machine speed of course).
>>
>> All you need do is download and install Maven 2.0.9 on your system
>> and make sure that the mvn command is in your path. Then download
>> the source for ANTLR from the Fisheye system (just get the tar of
>> the antlr tool directory) and cd to the directory containing pom.xml.
>>
>> Type:
>>
>> mvn -Dmaven.test.skip=true
>>
>> And watch the output to see where it puts the jar-with-dependencies.
>> Create your self a small script that invokes this jar and you are
>> all set.
>
>
> Jim, Ter gave me p4 access, and I checked out the sources. I then
> tried to build antlr but ran into problems. Any idea what I left out?
> Note that I fetched the latest, not knowing the right revision number
> for 3.1.1.
>
> $ pwd
> /Developer/Java/ANTLR/depot/code/antlr/main
> $ ls
> CHANGES.txt		build.properties	pom.xml			target/
> LICENSE.txt		build.xml		runtime/		test/
> README.txt		lib/			src/
> Eclipse:main rmann$ mvn
> [INFO] Scanning for projects...
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Building antlr
> [INFO]    task-segment: [install]
> [INFO]
> ------------------------------------------------------------------------
> [INFO] [antlr3:antlr {execution: default}]
> [INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/
> src/org/antlr/grammar/v3/ActionAnalysis.g
> [INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/
> src/org/antlr/grammar/v3/ActionTranslator.g
> [INFO] Processing grammar /Developer/Java/ANTLR/depot/code/antlr/main/
> src/org/antlr/grammar/v3/ANTLRv3.g
> warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/
> antlr/grammar/v3/ANTLRv3.g:251:6: no lexer rule corresponding to
> token: SEMPRED
> warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/
> antlr/grammar/v3/ANTLRv3.g:344:22: no lexer rule corresponding to
> token: SEMPRED
> warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/
> antlr/grammar/v3/ANTLRv3.g:157:4: no lexer rule corresponding to
> token: DOC_COMMENT
> warning(105): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/
> antlr/grammar/v3/ANTLRv3.g:93:9: no lexer rule corresponding to token:
> DOC_COMMENT
> warning(200): /Developer/Java/ANTLR/depot/code/antlr/main/src/org/
> antlr/grammar/v3/ANTLRv3.g:465:5: Decision can match input such as "'
> ''$''A''N''T''L''R'' ''s''r''c'' ''"''\\''\'''"'' ''0'..'9'" using
> multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [INFO] snapshot org.antlr:antlr-runtime:3.1.2-SNAPSHOT: checking for
> updates from antlr-snapshot
> Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.pom
> Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.jar
> [INFO]
> ------------------------------------------------------------------------
> [ERROR] BUILD ERROR
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Failed to resolve artifact.
>
> Missing:
> ----------
> 1) org.antlr:antlr-runtime:jar:3.1.2-SNAPSHOT
>
>   Try downloading the file manually from the project website.
>
>   Then, install it using the command:
>       mvn install:install-file -DgroupId=org.antlr -DartifactId=antlr-
> runtime -Dversion=3.1.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file
>
>   Alternatively, if you host your own repository you can deploy the
> file there:
>       mvn deploy:deploy-file -DgroupId=org.antlr -DartifactId=antlr-
> runtime -Dversion=3.1.2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/ 
> file -
> Durl=[url] -DrepositoryId=[id]
>
>   Path to dependency:
>   	1) org.antlr:antlr:jar:3.1.2-SNAPSHOT
>   	2) org.antlr:antlr-runtime:jar:3.1.2-SNAPSHOT
>
> ----------
> 1 required artifact is missing.
>
> for artifact:
>   org.antlr:antlr:jar:3.1.2-SNAPSHOT
>
> from the specified remote repositories:
>   antlr-snapshot (http://antlr.org/antlr-snapshot),
>   central (http://repo1.maven.org/maven2)
>
>
> [INFO]
> ------------------------------------------------------------------------
> [INFO] For more information, run Maven with the -e switch
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Total time: 16 seconds
> [INFO] Finished at: Fri Jan 16 15:59:39 PST 2009
> [INFO] Final Memory: 57M/80M
> [INFO]
> ------------------------------------------------------------------------
>
>
> -- 
> Rick
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Rick


From rwallace at thewallacepack.net  Fri Jan 16 16:37:52 2009
From: rwallace at thewallacepack.net (Richard Wallace)
Date: Fri, 16 Jan 2009 17:37:52 -0700
Subject: [antlr-interest] Mismatched token problem
In-Reply-To: <57e7e0490901141819m656f3e43v2f55742a01a616ee@mail.gmail.com>
References: <57e7e0490901131549v602890bek3ad3ec52810967f6@mail.gmail.com>
	<496D630E.1090403@kjchome.homeip.net>
	<57e7e0490901140800q469d1246i7c24e5a1c1c576f0@mail.gmail.com>
	<496E1B78.4040801@kjchome.homeip.net>
	<57e7e0490901141520l2df141fap30cbbf27e3d28aed@mail.gmail.com>
	<496E7A77.6080402@kjchome.homeip.net>
	<57e7e0490901141819m656f3e43v2f55742a01a616ee@mail.gmail.com>
Message-ID: <57e7e0490901161637k38c360cdva9faa78841a665c@mail.gmail.com>

Well, I've decided to punt on this issue for now.  I'd like to solve
it such that I can have antlr parse the nth expression, but just can't
seem to wrap my head around how.  For now I'm just going to grab the
text of what's in the parens and parse it out with regex.  It's not
pretty and I'd much rather figure out the right way to do it in antlr,
but right now I just want something that works.  If anyone wants to
take a look at the grammar at
<http://code.google.com/p/cssselectors/source/browse/trunk/src/main/antlr/com/threelevers/css/CssSelectors.g>
and offer suggestions for improvement on this issue and anything else
you see, I'd greatly appreciate it.

Thanks again for the help and the great tool!

Rich

On Wed, Jan 14, 2009 at 7:19 PM, Richard Wallace
<rwallace at thewallacepack.net> wrote:
> So, rather than continuing to talk about it all in an abstract way and
> showing you just bits I threw up the project I'm working on on Google
> Code <http://code.google.com/p/cssselectors/>.  It's a library for
> using CSS selectors to get elements out of XML documents.  I'm hoping
> to be able to use it in integration tests of web applications rather
> than having to use XPath which I've never really liked.  The ANTLR
> grammar can be found at
> <http://code.google.com/p/cssselectors/source/browse/trunk/src/main/antlr/com/threelevers/css/CssSelectors.g>.
>
> On Wed, Jan 14, 2009 at 4:51 PM, Kevin J. Cummings
> <cummings at kjchome.homeip.net> wrote:
>> Richard Wallace wrote:
>>
>>> Ok, I'm feeling really dense right now.  I put the rules in as follows:
>>>
>>> fragment IDENTFRAGMENT
>>>    : ('_' | 'a'..'z'| 'A'..'Z' | '\u0100'..'\ufffe' )
>>>    ;
>>>
>>> fragment IDENTNUMFRAGMENT
>>>    : IDENTFRAGMENT | '0' .. '9'
>>>    ;
>>>
>>> IDENT
>>>    : IDENTFRAGMENT ( DASH | IDENTNUMFRAGMENT )*
>>>    ;
>>>
>>> DASH
>>>    : '-' ( options{greedy=true;} : IDENTFRAGMENT { $type = IDENT; } )?
>>>    ;
>>>
>>> And I even understand what it means (I think), but I'm still running
>>> into the problem that in the expression 4n-1, n-1 is still being
>>> considered an expression.  I had to change protected to fragment to
>>
>> Sorry I thought you were using Antlr 2.7.7, that must of been someone else I
>> was chatting with, yes, fragment is correct for Antlr 3.x
>>
>>> get the lexer to not try and match 4 as a IDENTNUMFRAGMENT and the
>>> IDENT rule to match the language.  But I don't think that should cause
>>> this not to work, should it?  I must be missing something.  Any ideas?
>>
>> In your expr rule you specify S* as possible whitespace seperators. Also, if
>> you need to match n-1 as an IDENT, then its possible that you need do
>> another fragment to catch the 'n' and what follows as an IDENT.
>>
>
> Sorry, in this case I don't want n-1 to be an IDENT.  It should be in
> most cases, but in this case, when inside a :nth-child() function it
> shouldn't be considered an IDENT.  In CSS it is perfectly valid to
> have something like
>    #n-1
> where n-1 is the id of the element we want to find.
>
> The reason I include whitespace explicitly in some places rather than
> ignoring it is because it is important in one context in CSS.  In the
> selector
>    #a .b
> the space between the #a and #b is significant because it indicates
> that we are looking for an element with a class of "b" that is a
> descendant of an element with an id of "a".  I couldn't figure out a
> way to make the spaces everywhere else be ignored but still have this
> one be recognized properly.  If the space isn't recognized properly,
> "#a .b" is treated the same as "#a.b" which has a completely different
> meaning.
>
>> By default, ANTLR does greedy matching of tokens. In other words, it tries
>> to match as much as possible based on your rules.  It also tokenizes before
>> it parses.  So, if you don't want 4n-1 to be NUMBER IDENT, then you need to
>> have a lexer rule to catch something different.  Does it help if you try a
>> lexer rule that catches NUMBER 'n' as a TOKEN? and then use *that* in your
>> expr rule?
>>
>
> I'm not sure exactly what you mean here.  I've looked at a bunch of
> examples and can't figure it out.  I tried adding a
>
> tokens {
>    MAGN;
> }
>
> but then I'm not sure where to put the lexer rule.  I tried
>
> ATERM : ( NUMBER? 'n' ) -> MAGN
>
> but ANTLR claims MAGN is an unexpected token so obviously I'm doing
> something wrong.
>
>> Also, when I code expression parsers that don't care about whitespace, I
>> just set whitespace to be ignored in the lexer.  ANTLR will still stop
>> lexing tokens when it finds a whitespace.  So, in general, I never reference
>> whitespace in the parser.  You need to fix your token stream so that the
>> parser does the right thing with what it finds.
>>
>> Make a lexer rule for:  DASH? NUMBER? 'n'  Or maybe just for NUMBER 'n'
>>
>
> I tried a rule called ATERM that looked like
>
> ATERM : DASH? NUMBER? 'n' ;
>
> and tried putting that in the nth_child_expr as
>
> nth_child_expr : ATERM S* ('+' | DASH) S* NUMBER and that didn't help either.
>
>> Sorry for being vague, but I hope its helpful.
>>
>
> Hopefully, now that my full grammar is out there you can take a better
> look at it and see what's going on.  I appreciate all the help, it's
> been really valuable and I'm learning a lot (mostly how much I have to
> learn about antlr ;)).
>
>>> Rich
>>
>> --
>> Kevin J. Cummings
>> kjchome at rcn.com
>> cummings at kjchome.homeip.net
>> cummings at kjc386.framingham.ma.us
>> Registered Linux User #1232 (http://counter.li.org)
>>
>

From jimi at temporal-wave.com  Fri Jan 16 16:38:06 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 16:38:06 -0800
Subject: [antlr-interest] Problems with maven build
In-Reply-To: <E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
Message-ID: <4971286E.8030501@temporal-wave.com>

Rick Mann wrote:
>
> On Jan 16, 2009, at 13:51:20, Jim Idle wrote:
>
>> When you change your template or codegen target java file, you just 
>> type:
>>
>> mvn
>>
>> And it rebuilds just what has changed in a second or two (depends on 
>> your machine speed of course).
>>
>> All you need do is download and install Maven 2.0.9 on your system 
>> and make sure that the mvn command is in your path. Then download the 
>> source for ANTLR from the Fisheye system (just get the tar of the 
>> antlr tool directory) and cd to the directory containing pom.xml.
>>
>> Type:
>>
>> mvn -Dmaven.test.skip=true
>>
>> And watch the output to see where it puts the jar-with-dependencies. 
>> Create your self a small script that invokes this jar and you are all 
>> set.
>
>
> Jim, Ter gave me p4 access, and I checked out the sources. I then 
> tried to build antlr but ran into problems. Any idea what I left out? 
> Note that I fetched the latest, not knowing the right revision number 
> for 3.1.1.
>
> [INFO] snapshot org.antlr:antlr-runtime:3.1.2-SNAPSHOT: checking for 
> updates from antlr-snapshot
> Downloading: 
> http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.pom 
>
> Downloading: 
> http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.jar 
>
Ah, it is just that I forgot to tell Hudson to deploy the runtime 
snapshot - I will fix that shortly, give it about 30 minutes or so and 
run the command again, it should find the artifacts then...

Jim



From rmann at latencyzero.com  Fri Jan 16 16:42:53 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Fri, 16 Jan 2009 16:42:53 -0800
Subject: [antlr-interest] Problems with maven build
In-Reply-To: <4971286E.8030501@temporal-wave.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
	<4971286E.8030501@temporal-wave.com>
Message-ID: <43B57F63-C68A-4F7B-B3D9-2696042B824D@latencyzero.com>


On Jan 16, 2009, at 16:38:06, Jim Idle wrote:

> Rick Mann wrote:
>>
>> [INFO] snapshot org.antlr:antlr-runtime:3.1.2-SNAPSHOT: checking  
>> for updates from antlr-snapshot
>> Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.pom
>> Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.jar
> Ah, it is just that I forgot to tell Hudson to deploy the runtime  
> snapshot - I will fix that shortly, give it about 30 minutes or so  
> and run the command again, it should find the artifacts then...

Oh, no worries! I didn't realize I was trying to use stuff you were  
actually in the middle of putting in place. As I said, manually  
building the runtime seemed to make it work (or maybe that was  
coincidental with you fixing it).

Thanks!

FYI, some of the tests are failing...

-- 
Rick


From gerald at certiv.net  Fri Jan 16 16:47:08 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 16 Jan 2009 16:47:08 -0800
Subject: [antlr-interest] An issue with label method references in
 actions
In-Reply-To: <49711AF2.5020409@temporal-wave.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
	<4970FA2A.8010909@temporal-wave.com>
	<200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
	<49711AF2.5020409@temporal-wave.com>
Message-ID: <200901170052.n0H0qnKL025163@zinc.newtechlaw.com>

At 03:40 PM 1/16/2009, Jim Idle wrote:
>Gerald Rosenberg wrote:
>>At 01:20 PM 1/16/2009, Jim Idle wrote:
>
>Hence, because the reference parser is simple, and does not know 
>anything about the object it will generate code to reference, there 
>is no way to protect you from the NPE, hence there is nothing to fix per se.

Hmmm, if the code gen is smart enough to break up

gDecl .setName($k.start.getStartIndex());

to produce this

gDecl .setName((k != null ? ((CommonToken) k.start ) : null 
).getStartIndex());

then it should be able to produce this instead

gDecl .setName((k != null ? ((CommonToken) k.start.getStartIndex()) : null ));

Yes, "start" could be null, but at least with this production, the 
code gen is leaving me no more worse off than I was to begin 
with.  The null check will continue to protect in the case of 
optional label references - a really different requirement than a 
null check on "start".  The current production unfortunately kills 
the whole 'protect the optional label reference' point of the code 
generated null check.

I did see Ter's note that the current code gen analysis is not 
looking far enough ahead to handle this.  But, that is just one of 
those minor, no-doubt short-lived practical inconveniences. ;-)

>It's one of those things that you have to garner some extra 
>knowledge from by looking at the code, which you have done :-)

I have to say that I am doing this less and less and, always now, the 
issues are these kind of odd code generation issues.  The evolution 
of Antlr as a language has been amazing to watch.  Still, I look 
forward to when lifting the cover will not be required except in the 
most exceptional of circumstances.

Best,
Gerald
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/b6b0a6b6/attachment.html 

From parrt at cs.usfca.edu  Fri Jan 16 17:01:50 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Jan 2009 17:01:50 -0800
Subject: [antlr-interest] An issue with label method references in
	actions
In-Reply-To: <200901170052.n0H0qnKL025163@zinc.newtechlaw.com>
References: <200901162105.n0GL5S6H023659@zinc.newtechlaw.com>
	<4970FA2A.8010909@temporal-wave.com>
	<200901162321.n0GNLhwc024607@zinc.newtechlaw.com>
	<49711AF2.5020409@temporal-wave.com>
	<200901170052.n0H0qnKL025163@zinc.newtechlaw.com>
Message-ID: <DB095016-CAC4-4FF2-A852-BC30FCE2400E@cs.usfca.edu>


On Jan 16, 2009, at 4:47 PM, Gerald Rosenberg wrote:

> At 03:40 PM 1/16/2009, Jim Idle wrote:
>> Gerald Rosenberg wrote:
>>> At 01:20 PM 1/16/2009, Jim Idle wrote:
>>
>> Hence, because the reference parser is simple, and does not know  
>> anything about the object it will generate code to reference, there  
>> is no way to protect you from the NPE, hence there is nothing to  
>> fix per se.
>
> Hmmm, if the code gen is smart enough to break up
>
> gDecl .setName($k. start .getStartIndex());
>
> to produce this
>
> gDecl .setName((k != null ? ((CommonToken) k.start ) :  
> null ).getStartIndex());

it only sees $k.start...nothing beyond.

> then it should be able to produce this instead
>
> gDecl .setName((k != null ? ((CommonToken)  
> k.start .getStartIndex()) : null ));

unfortunately, can't see past start in $x.y action translator.

> I did see Ter's note that the current code gen analysis is not  
> looking far enough ahead to handle this.  But, that is just one of  
> those minor, no-doubt short-lived practical inconveniences. ;-)

actually, it's 'cause I don't know what language people are using; or  
how to eval what's around the $x.y

>> It's one of those things that you have to garner some extra  
>> knowledge from by looking at the code, which you have done :-)
>
> I have to say that I am doing this less and less and, always now,  
> the issues are these kind of odd code generation issues.  The  
> evolution of Antlr as a language has been amazing to watch.  Still,  
> I look forward to when lifting the cover will not be required except  
> in the most exceptional of circumstances.

me too!

Ter

From jimi at temporal-wave.com  Fri Jan 16 18:22:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Jan 2009 18:22:33 -0800
Subject: [antlr-interest] Problems with maven build
In-Reply-To: <43B57F63-C68A-4F7B-B3D9-2696042B824D@latencyzero.com>
References: <C976391F-93C8-4576-8B9E-2F03E69E8711@latencyzero.com>
	<49710158.8000201@temporal-wave.com>
	<E59B90B1-D4BF-4083-81E9-9BE74ECFB644@latencyzero.com>
	<4971286E.8030501@temporal-wave.com>
	<43B57F63-C68A-4F7B-B3D9-2696042B824D@latencyzero.com>
Message-ID: <497140E9.6080903@temporal-wave.com>

Rick Mann wrote:
>
> On Jan 16, 2009, at 16:38:06, Jim Idle wrote:
>
>> Rick Mann wrote:
>>>
>>> [INFO] snapshot org.antlr:antlr-runtime:3.1.2-SNAPSHOT: checking for 
>>> updates from antlr-snapshot
>>> Downloading: 
>>> http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.pom 
>>>
>>> Downloading: 
>>> http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.2-SNAPSHOT/antlr-runtime-3.1.2-SNAPSHOT.jar 
>>>
>> Ah, it is just that I forgot to tell Hudson to deploy the runtime 
>> snapshot - I will fix that shortly, give it about 30 minutes or so 
>> and run the command again, it should find the artifacts then...
>
> Oh, no worries! I didn't realize I was trying to use stuff you were 
> actually in the middle of putting in place. As I said, manually 
> building the runtime seemed to make it work (or maybe that was 
> coincidental with you fixing it).
>
Repository is up to date now, but when you build locally you get a copy 
in your ~/.m2 repository and so maven does not need to look to the ANTLR 
snapshot repository (though it will check there for updates)


Jim

From John.Gardener at carrotgarden.com  Fri Jan 16 19:08:49 2009
From: John.Gardener at carrotgarden.com (John Gardener)
Date: Fri, 16 Jan 2009 21:08:49 -0600
Subject: [antlr-interest] Simple Grammar Question
Message-ID: <49714BC1.8030008@carrotgarden.com>

     *Hello;*

    I am stuck with simple grammar; any help is much welcomed;

    I want to parse 2 term sentenses, such as:
    <1: single digit > <2: name containing letters and digits > EOF

    Below comes:
    1) grammar
    2) test rig
    3) output

    PROBLEM:
    Second term (name) seems to greedily consume whole input;

    Please let me know what is the proper way to deal with this?

    *1) GRAMMAR*

    grammar Simple;  

    options {
        language = Java;
    }

    @parser::header {
        package simple;
        import static java.lang.System.out;
    }

    @lexer::header{
      package simple;
      import static java.lang.System.out;
    }

    // PARSER

    record :
      digit name EOF
      { out.println( "+record: " +  $text );  };

    digit : DIGIT
      { out.println( "+digit: " +  $text );  };
     
    name : NAME
      { out.println( "+name: " +  $text );  };


    // LEXER

    DIGIT : '0'..'9'
      { out.println("+DIGIT: " + $text ); } ;

    LETTER : 'A'..'Z'
      { out.println("+LETTER: " + $text ); } ;

    NAME : ( LETTER | DIGIT ) + 
      { out.println("+NAME: " + $text ); } ;


    *2) TEST RIG*

    package simple;

    import java.io.ByteArrayInputStream;

    import org.antlr.runtime.ANTLRInputStream;
    import org.antlr.runtime.CommonTokenStream;

    import static java.lang.System.out;

    public class SimpleTest {

        public static void main(String[] args) throws Exception {

            String record = "3B5A";

            ByteArrayInputStream stream = new ByteArrayInputStream(record
                    .getBytes());

            ANTLRInputStream input = new ANTLRInputStream(stream);

            SimpleLexer lexer = new SimpleLexer(input);

            CommonTokenStream tokens = new CommonTokenStream(lexer);

            SimpleParser parser = new SimpleParser(tokens);

            parser.record();

            out.println(record);

        }

    }


    *3) TEST OUTPUT*

    +DIGIT: 3
    +LETTER: 3B
    +DIGIT: 3B5
    +LETTER: 3B5A
    +NAME: 3B5A
    line 1:0 missing DIGIT at '3B5A'
    +digit: null
    +name: 3B5A
    +record: 3B5A
    3B5A


    *Thank you, *

    John

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/4baab266/attachment.html 

From gerald at certiv.net  Fri Jan 16 20:31:10 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 16 Jan 2009 20:31:10 -0800
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <49714BC1.8030008@carrotgarden.com>
References: <49714BC1.8030008@carrotgarden.com>
Message-ID: <200901170431.n0H4VEMr026511@zinc.newtechlaw.com>

Your NAME rule is consuming all tokens.

The record rule fails to find a digit, recovers and finds a name, 
succeeds yet reports the exception.


At 07:08 PM 1/16/2009, John Gardener wrote:
>Hello;
>
>I am stuck with simple grammar; any help is much welcomed;
>
>I want to parse 2 term sentenses, such as:
><1: single digit > <2: name containing letters and digits > EOF
>
>Below comes:
>1) grammar
>2) test rig
>3) output
>
>PROBLEM:
>Second term (name) seems to greedily consume whole input;
>
>Please let me know what is the proper way to deal with this?
>
>1) GRAMMAR
>
>grammar Simple;
>
>options {
>     language = Java;
>}
>
>@parser::header {
>     package simple;
>     import static java.lang.System.out;
>}
>
>@lexer::header{
>   package simple;
>   import static java.lang.System.out;
>}
>
>// PARSER
>
>record :
>   digit name EOF
>   { out.println( "+record: " +  $text );  };
>
>digit : DIGIT
>   { out.println( "+digit: " +  $text );  };
>
>name : NAME
>   { out.println( "+name: " +  $text );  };
>
>
>// LEXER
>
>DIGIT : '0'..'9'
>   { out.println("+DIGIT: " + $text ); } ;
>
>LETTER : 'A'..'Z'
>   { out.println("+LETTER: " + $text ); } ;
>
>NAME : ( LETTER | DIGIT ) +
>   { out.println("+NAME: " + $text ); } ;
>
>
>2) TEST RIG
>
>package simple;
>
>import java.io.ByteArrayInputStream;
>
>import org.antlr.runtime.ANTLRInputStream;
>import org.antlr.runtime.CommonTokenStream;
>
>import static java.lang.System.out;
>
>public class SimpleTest {
>
>     public static void main(String[] args) throws Exception {
>
>         String record = "3B5A";
>
>         ByteArrayInputStream stream = new ByteArrayInputStream(record
>                 .getBytes());
>
>         ANTLRInputStream input = new ANTLRInputStream(stream);
>
>         SimpleLexer lexer = new SimpleLexer(input);
>
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>         SimpleParser parser = new SimpleParser(tokens);
>
>         parser.record();
>
>         out.println(record);
>
>     }
>
>}
>
>
>3) TEST OUTPUT
>
>+DIGIT: 3
>+LETTER: 3B
>+DIGIT: 3B5
>+LETTER: 3B5A
>+NAME: 3B5A
>line 1:0 missing DIGIT at '3B5A'
>+digit: null
>+name: 3B5A
>+record: 3B5A
>3B5A
>
>
>Thank you,
>
>John
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/09e0e456/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Simple.png
Type: application/octet-stream
Size: 23142 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/09e0e456/attachment.obj 

From cdcttr at gmail.com  Fri Jan 16 20:58:33 2009
From: cdcttr at gmail.com (David Johnson)
Date: Fri, 16 Jan 2009 20:58:33 -0800
Subject: [antlr-interest] Problem Lexer
Message-ID: <44cf70810901162058n895c674u54bf8239deabed2d@mail.gmail.com>

I am working on a lexer where I need to know the context of the input to
determine the proper tokens to generate.

While attempting to solve the problem, my lexer triggered what appears to be
a never ending recursive call - eventually exiting with an Out of Memory
exception.

I ripped out the problem parts and have included it below.  This lexer does
the same thing.  I am running this using antlr 3.1.1

Thanks for any help.

-Dave

--- Example Test Case ---

    public static void main(String [] args) {
        CharStream stream = new ANTLRStringStream("|small");
        error e = new error(stream);

        Token t;
        while((t=e.nextToken()) != Token.EOF_TOKEN) {
            System.out.println(t);
        }
    }

--- output from test case ---

line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
line 1:0 rule CHECK failed predicate: {check}?
.... (forever)

--- error.g ---

lexer grammar error;

@members {
    boolean check = false;
}

fragment Letter
    :    'A'..'Z'|'a'..'z';

fragment Number
    :    '1'..'9'|'0';

fragment Id
    :    Letter(Letter|Number|'_'|'-')+;

fragment Eq
    :    '=';

fragment Pipe
    :    '|';

NOT_CHECK:
    {!check}?=> Pipe Id Eq {
    }
    {!check}?=> Pipe Id {
    }
    {!check}?=> p=Pipe {
    } ;

CHECK:
    {check}?=> ~(' ' | ']')+ ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090116/52ea5216/attachment.html 

From John.Gardener at carrotgarden.com  Sat Jan 17 06:22:34 2009
From: John.Gardener at carrotgarden.com (John Gardener)
Date: Sat, 17 Jan 2009 08:22:34 -0600
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <200901170431.n0H4VEMr026511@zinc.newtechlaw.com>
References: <49714BC1.8030008@carrotgarden.com>
	<200901170431.n0H4VEMr026511@zinc.newtechlaw.com>
Message-ID: <4971E9AA.4070608@carrotgarden.com>

    *Gerald*, hi;

    Thank you very much for your response;

    YES, you are right, I can see that: " Your NAME rule is consuming
    all tokens. "

    What I can not see is how to *correct this properly*?

    Thanks again,

    John

-------- Original Message  --------
Subject: Re: [antlr-interest] Simple Grammar Question
From: Gerald Rosenberg <gerald at certiv.net>
To: John Gardener <John.Gardener at carrotgarden.com>, antlr-interest at antlr.org
Date: Fri 16 Jan 2009 10:31:10 PM CST
> Your NAME rule is consuming all tokens. 
>
> The record rule fails to find a digit, recovers and finds a name,
> succeeds yet reports the exception.
>
>
> At 07:08 PM 1/16/2009, John Gardener wrote:
>>
>>     Hello;
>>
>>     I am stuck with simple grammar; any help is much welcomed;
>>
>>     I want to parse 2 term sentenses, such as:
>>     <1: single digit > <2: name containing letters and digits > EOF
>>
>>     Below comes:
>>     1) grammar
>>     2) test rig
>>     3) output
>>
>>     PROBLEM:
>>     Second term (name) seems to greedily consume whole input;
>>
>>     Please let me know what is the proper way to deal with this?
>>
>>     1) GRAMMAR
>>
>>     grammar Simple;  
>>
>>     options {
>>         language = Java;
>>     }
>>
>>     @parser::header {
>>         package simple;
>>         import static java.lang.System.out;
>>     }
>>
>>     @lexer::header{
>>       package simple;
>>       import static java.lang.System.out;
>>     }
>>
>>     // PARSER
>>
>>     record :
>>       digit name EOF
>>       { out.println( "+record: " +  $text );  };
>>
>>     digit : DIGIT
>>       { out.println( "+digit: " +  $text );  };
>>      
>>     name : NAME
>>       { out.println( "+name: " +  $text );  };
>>
>>
>>     // LEXER
>>
>>     DIGIT : '0'..'9'
>>       { out.println("+DIGIT: " + $text ); } ;
>>
>>     LETTER : 'A'..'Z'
>>       { out.println("+LETTER: " + $text ); } ;
>>
>>     NAME : ( LETTER | DIGIT ) + 
>>       { out.println("+NAME: " + $text ); } ;
>>
>>
>>     2) TEST RIG
>>
>>     package simple;
>>
>>     import java.io.ByteArrayInputStream;
>>
>>     import org.antlr.runtime.ANTLRInputStream;
>>     import org.antlr.runtime.CommonTokenStream;
>>
>>     import static java.lang.System.out;
>>
>>     public class SimpleTest {
>>
>>         public static void main(String[] args) throws Exception {
>>
>>             String record = "3B5A";
>>
>>             ByteArrayInputStream stream = new ByteArrayInputStream(record
>>                     .getBytes());
>>
>>             ANTLRInputStream input = new ANTLRInputStream(stream);
>>
>>             SimpleLexer lexer = new SimpleLexer(input);
>>
>>             CommonTokenStream tokens = new CommonTokenStream(lexer);
>>
>>             SimpleParser parser = new SimpleParser(tokens);
>>
>>             parser.record();
>>
>>             out.println(record);
>>
>>         }
>>
>>     }
>>
>>
>>     3) TEST OUTPUT
>>
>>     +DIGIT: 3
>>     +LETTER: 3B
>>     +DIGIT: 3B5
>>     +LETTER: 3B5A
>>     +NAME: 3B5A
>>     line 1:0 missing DIGIT at '3B5A'
>>     +digit: null
>>     +name: 3B5A
>>     +record: 3B5A
>>     3B5A
>>
>>
>>     Thank you,
>>
>>     John
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090117/16a1327f/attachment.html 

From jaluber at gmx.de  Sat Jan 17 02:19:57 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Jan 2009 11:19:57 +0100
Subject: [antlr-interest] Compiler error,
	CSharp2 target: empty if condition
In-Reply-To: <E8709E1E82D3467A87EB73DF92449364@homelaptop>
References: <E8709E1E82D3467A87EB73DF92449364@homelaptop>
Message-ID: <4971B0CD.30306@gmx.de>

Ben Gillis schrieb:
> This is probably a known CSharp2 target compile issue, but googling the
> error message only turned up others with the same problem, no
> resolution/status. 
>  
> Questions: Will it be fixed?  best work-arounds?
>  
>  
> The compile error is: Invalid expression term ')'
>  
> Anytime I use a token in single quotes in an AST rewrite, I get the
> above.  For example,
>  
> someRule : 'KEYWORD' 'TOKEN' ->  ^(KEYWORD TOKEN);

Oh damn - I've overlooked the cause when reading the email the first
time. For posterity:

someRule : 'KEYWORD' 'TOKEN' ->  ^(KEYWORD TOKEN);

is wrong and should throw an appropriate analyzer error (is that an
ANTLR 2.7.7 problem?), because you are rewriting the wrong things. If
you use single quotes then they have to be included in the rewrite part,
too. ANTLR doesn't turn 'foo' into the token foo, but e.g. into
TOKEN_12. So you would write:

someRule : 'KEYWORD' 'TOKEN' ->  ^('KEYWORD' 'TOKEN');

But it is better to ignore the possibility of literals in the parser
anyway, as those cause problems anyway.
>  
> which produces an empty condition in a C# if statement:
>  
>     if ( )
>  
>  
> If I remove the single quotes, the error is resolved:
>  
> someRule : KEYWORD TOKEN ->  ^(KEYWORD TOKEN);

To make this rule work, you must have defined the token elsewhere. This
is the best available variant.

Johannes
>  
>  
> the newly gen'd code being:
>  
> if ( stream_KEYWORD.HasNext() )
>  
> Regards,
> Ben
>  
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Sat Jan 17 09:38:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 17 Jan 2009 09:38:15 -0800
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <4971E9AA.4070608@carrotgarden.com>
References: <49714BC1.8030008@carrotgarden.com>	<200901170431.n0H4VEMr026511@zinc.newtechlaw.com>
	<4971E9AA.4070608@carrotgarden.com>
Message-ID: <49721787.4010308@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090117/44d17751/attachment-0001.html 

From jaluber at gmx.de  Sat Jan 17 09:38:33 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Jan 2009 18:38:33 +0100
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <49714BC1.8030008@carrotgarden.com>
References: <49714BC1.8030008@carrotgarden.com>
Message-ID: <49721799.7060504@gmx.de>

John Gardener schrieb:
>      *Hello;*
> 
>     I am stuck with simple grammar; any help is much welcomed;
> 
>     I want to parse 2 term sentenses, such as:
>     <1: single digit > <2: name containing letters and digits > EOF
> 
>     Below comes:
>     1) grammar
>     2) test rig
>     3) output
> 
>     PROBLEM:
>     Second term (name) seems to greedily consume whole input;
> 
>     Please let me know what is the proper way to deal with this?

If the lexer can match the same input via more than one rule, it chooses
the rules which consumes the most input. Try the following rules instead:

fragment NAME:;

DIGIT : ('0'..'9'|'A'..'Z' {$type=NAME;}) ('0'..'9'
{$type=NAME;}|'A'..'Z' {$type=NAME;})*
      { out.println("+DIGIT: " + $text ); } ;

It should only generate DIGITs if no more than one character is matched
and that character is a digit. But can names start with digits anyway?
If not, this may work, too:

DIGIT : '0'..'9'
      { out.println("+DIGIT: " + $text ); } ;

NAME : 'A'..'Z' ( 'A'..'Z' | '0'..'9' ) *
      { out.println("+NAME: " + $text ); } ;

Not using fragments for tokens and yet still calling other lexer rules
in lexer rules may give strange results anyway and is discouraged by the
experienced users. With fragments the above version looks like this:

fragment DIGIT : '0'..'9';

fragment ALPHA : 'A'..'Z';

NUMBER : DIGIT { out.println("+NUMBER: " + $text ); } ;


NAME : ALPHA ( ALPHA | DIGIT ) *
      { out.println("+NAME: " + $text ); } ;

Johannes

> 
>     *1) GRAMMAR*
> 
>     grammar Simple;  
> 
>     options {
>         language = Java;
>     }
> 
>     @parser::header {
>         package simple;
>         import static java.lang.System.out;
>     }
> 
>     @lexer::header{
>       package simple;
>       import static java.lang.System.out;
>     }
> 
>     // PARSER
> 
>     record :
>       digit name EOF
>       { out.println( "+record: " +  $text );  };
> 
>     digit : DIGIT
>       { out.println( "+digit: " +  $text );  };
>      
>     name : NAME
>       { out.println( "+name: " +  $text );  };
> 
> 
>     // LEXER
> 
>     DIGIT : '0'..'9'
>       { out.println("+DIGIT: " + $text ); } ;
> 
>     LETTER : 'A'..'Z'
>       { out.println("+LETTER: " + $text ); } ;
> 
>     NAME : ( LETTER | DIGIT ) + 
>       { out.println("+NAME: " + $text ); } ;
> 
> 
>     *2) TEST RIG*
> 
>     package simple;
> 
>     import java.io.ByteArrayInputStream;
> 
>     import org.antlr.runtime.ANTLRInputStream;
>     import org.antlr.runtime.CommonTokenStream;
> 
>     import static java.lang.System.out;
> 
>     public class SimpleTest {
> 
>         public static void main(String[] args) throws Exception {
> 
>             String record = "3B5A";
> 
>             ByteArrayInputStream stream = new ByteArrayInputStream(record
>                     .getBytes());
> 
>             ANTLRInputStream input = new ANTLRInputStream(stream);
> 
>             SimpleLexer lexer = new SimpleLexer(input);
> 
>             CommonTokenStream tokens = new CommonTokenStream(lexer);
> 
>             SimpleParser parser = new SimpleParser(tokens);
> 
>             parser.record();
> 
>             out.println(record);
> 
>         }
> 
>     }
> 
> 
>     *3) TEST OUTPUT*
> 
>     +DIGIT: 3
>     +LETTER: 3B
>     +DIGIT: 3B5
>     +LETTER: 3B5A
>     +NAME: 3B5A
>     line 1:0 missing DIGIT at '3B5A'
>     +digit: null
>     +name: 3B5A
>     +record: 3B5A
>     3B5A
> 
> 
>     *Thank you, *
> 
>     John
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rmann at latencyzero.com  Sat Jan 17 00:43:04 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sat, 17 Jan 2009 00:43:04 -0800
Subject: [antlr-interest] Confluence is down!
Message-ID: <9D1A3830-E339-4265-9E7F-23A04BD7F901@latencyzero.com>

Dunno if anyone awake on the list at this hour can do anything about  
it, but the antlr Confluence wiki is reporting problems with SQL:

org.springframework.jdbc.UncategorizedSQLException: Hibernate  
operation: Could not execute query; uncategorized SQLException for SQL  
[]; SQL state [HY000]; error code [1030]; Got error 28 from storage  
engine; nested exception is java.sql.SQLException: Got error 28 from  
storage engine
     at  
org 
.springframework 
.jdbc 
.support 
.SQLStateSQLExceptionTranslator 
.translate(SQLStateSQLExceptionTranslator.java:120)

caused by: java.sql.SQLException: Got error 28 from storage engine
     at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1055)

Stack Trace:[hide]
org.springframework.jdbc.UncategorizedSQLException: Hibernate  
operation: Could not execute query; uncategorized SQLException for SQL  
[]; SQL state [HY000]; error code [1030]; Got error 28 from storage  
engine; nested exception is java.sql.SQLException: Got error 28 from  
storage engine Caused by: java.sql.SQLException: Got error 28 from  
storage engine at  
com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1055) at  
com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) at  
com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3515) at  
com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3447) at  
com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1951) at  
com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2101) at  
com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2554) at  
com 
.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java: 
1761) at  
com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java: 
1912) at  
com 
.mchange 
.v2 
.c3p0 
.impl 
.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java: 
76) at net.sf.hibernate.impl.BatcherImpl.getResultSet(BatcherImpl.java: 
89) at net.sf.hibernate.loader.Loader.getResultSet(Loader.java:880) at  
net.sf.hibernate.loader.Loader.doQuery(Loader.java:273) at  
net 
.sf 
.hibernate 
.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:138)  
at net.sf.hibernate.loader.Loader.doList(Loader.java:1063) at  
net.sf.hibernate.loader.Loader.list(Loader.java:1048) at  
net.sf.hibernate.hql.QueryTranslator.list(QueryTranslator.java:854) at  
net.sf.hibernate.impl.SessionImpl.find(SessionImpl.java:1554) at  
net.sf.hibernate.impl.QueryImpl.list(QueryImpl.java:49) at  
com.atlassian.hibernate.HibernateObjectDao 
$5.doInHibernate(HibernateObjectDao.java:351) at  
org 
.springframework 
.orm.hibernate.HibernateTemplate.execute(HibernateTemplate.java:370)  
at  
org 
.springframework 
.orm.hibernate.HibernateTemplate.executeFind(HibernateTemplate.java: 
341) at  
com 
.atlassian 
.hibernate 
.HibernateObjectDao.findNamedQueryStringParams(HibernateObjectDao.java: 
329) at  
com 
.atlassian 
.hibernate 
.HibernateObjectDao.findNamedQueryStringParams(HibernateObjectDao.java: 
314) at  
com 
.atlassian 
.hibernate 
.HibernateObjectDao.findNamedQueryStringParams(HibernateObjectDao.java: 
294) at  
com 
.atlassian 
.confluence 
.pages 
.persistence 
.dao.hibernate.HibernatePageDao.getPage(HibernatePageDao.java:97) at  
com 
.atlassian 
.confluence.pages.DefaultPageManager.getPage(DefaultPageManager.java: 
143) at sun.reflect.GeneratedMethodAccessor427.invoke(Unknown Source) 	 
at  
sun 
.reflect 
.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java: 
25) at java.lang.reflect.Method.invoke(Method.java:597) at  
org 
.springframework 
.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java: 
304) at  
org 
.springframework 
.aop 
.framework 
.ReflectiveMethodInvocation 
.invokeJoinpoint(ReflectiveMethodInvocation.java:182) at  
org 
.springframework 
.aop 
.framework 
.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java: 
149) at  
org 
.springframework 
.transaction 
.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java: 
106) at  
org 
.springframework 
.aop 
.framework 
.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java: 
171) at  
com 
.atlassian 
.spring 
.interceptors 
.SpringProfilingInterceptor.invoke(SpringProfilingInterceptor.java:20)  
at  
org 
.springframework 
.aop 
.framework 
.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java: 
171) at  
org 
.springframework 
.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)  
at $Proxy21.getPage(Unknown Source) at  
com 
.atlassian 
.confluence 
.pages 
.actions 
.PageAwareInterceptor.getPageFromKeyAndTitle(PageAwareInterceptor.java: 
182) at  
com 
.atlassian 
.confluence 
.pages.actions.PageAwareInterceptor.getPage(PageAwareInterceptor.java: 
133) at  
com 
.atlassian 
.confluence 
.pages 
.actions.PageAwareInterceptor.intercept(PageAwareInterceptor.java:56)  
at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.atlassian 
.confluence 
.spaces 
.actions.SpaceAwareInterceptor.intercept(SpaceAwareInterceptor.java: 
67) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.opensymphony 
.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java: 
35) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.atlassian 
.confluence 
.core 
.actions 
.LastModifiedInterceptor.intercept(LastModifiedInterceptor.java:39) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.atlassian 
.confluence 
.core 
.ConfluenceAutowireInterceptor 
.intercept(ConfluenceAutowireInterceptor.java:38) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.opensymphony 
.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java: 
35) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.opensymphony 
.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java: 
35) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.atlassian 
.xwork 
.interceptors 
.TransactionalInvocation 
.invokeAndHandleExceptions(TransactionalInvocation.java:72) at  
com 
.atlassian 
.xwork 
.interceptors 
.TransactionalInvocation 
.invokeInTransaction(TransactionalInvocation.java:59) at  
com 
.atlassian 
.xwork 
.interceptors 
.XWorkTransactionInterceptor 
.intercept(XWorkTransactionInterceptor.java:56) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.opensymphony 
.xwork.interceptor.AroundInterceptor.intercept(AroundInterceptor.java: 
35) at  
com 
.opensymphony 
.xwork.DefaultActionInvocation.invoke(DefaultActionInvocation.java: 
165) at  
com 
.opensymphony.xwork.DefaultActionProxy.execute(DefaultActionProxy.java: 
115) at  
com 
.atlassian 
.confluence 
.servlet 
.ConfluenceServletDispatcher 
.serviceAction(ConfluenceServletDispatcher.java:53) at  
com 
.opensymphony 
.webwork.dispatcher.ServletDispatcher.service(ServletDispatcher.java: 
199) at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)  
at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
290) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
org 
.apache 
.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java: 
630) at  
org 
.apache 
.catalina 
.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java: 
436) at  
org 
.apache 
.catalina 
.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)  
at  
org 
.apache 
.catalina 
.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302) at  
com 
.atlassian 
.confluence 
.servlet 
.simpledisplay.SimpleDisplayServlet.service(SimpleDisplayServlet.java: 
59) at  
com 
.atlassian 
.confluence 
.servlet.SpringManagedServlet.service(SpringManagedServlet.java:64) at  
javax.servlet.http.HttpServlet.service(HttpServlet.java:717) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
290) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.plugin 
.servlet 
.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:54) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:40) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.opensymphony 
.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118) at  
com 
.atlassian 
.confluence 
.util.profiling.ProfilingPageFilter.parsePage(ProfilingPageFilter.java: 
153) at  
com 
.opensymphony 
.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:54) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.plugin 
.servlet 
.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:54) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:40) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at com.atlassian.confluence.jmx.JmxFilter.doFilter(JmxFilter.java:105)  
at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.core 
.filters 
.ServletContextThreadLocalFilter 
.doFilter(ServletContextThreadLocalFilter.java:28) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence 
.util.LoggingContextFilter.doFilter(LoggingContextFilter.java:54) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence 
.web 
.filter.ThreadLocalCacheFilter.doFilter(ThreadLocalCacheFilter.java: 
23) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence 
.util.UserThreadLocalFilter.doFilter(UserThreadLocalFilter.java:44) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian.seraph.filter.SecurityFilter.doFilter(SecurityFilter.java: 
192) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.seraph 
.filter 
.TrustedApplicationsFilter.doFilter(TrustedApplicationsFilter.java: 
120) at  
com 
.atlassian 
.confluence 
.util 
.AbstractBootstrapHotSwappingFilter 
.doFilter(AbstractBootstrapHotSwappingFilter.java:28) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian.seraph.filter.BaseLoginFilter.doFilter(BaseLoginFilter.java: 
134) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.plugin 
.servlet 
.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:54) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:40) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence.util.ClusterHeaderFilter.doFilter(ClusterHeaderFilter.java: 
35) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.johnson 
.filters.AbstractJohnsonFilter.doFilter(AbstractJohnsonFilter.java:72)  
at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
org 
.springframework 
.orm 
.hibernate 
.support 
.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java: 
170) at  
com 
.atlassian 
.spring 
.filter 
.FlushingSpringSessionInViewFilter 
.doFilterInternal(FlushingSpringSessionInViewFilter.java:29) at  
org 
.springframework 
.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java: 
75) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.util.profiling.filters.ProfilingFilter.doFilter(ProfilingFilter.java: 
99) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence 
.core 
.datetime 
.RequestTimeThreadLocalFilter 
.doFilter(RequestTimeThreadLocalFilter.java:34) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.confluence 
.util 
.RequestCacheThreadLocalFilter 
.doFilter(RequestCacheThreadLocalFilter.java:25) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com.atlassian.gzipfilter.GzipFilter.doFilterInternal(GzipFilter.java: 
94) at com.atlassian.gzipfilter.GzipFilter.doFilter(GzipFilter.java: 
64) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.plugin 
.servlet 
.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:46) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:54) at  
com 
.atlassian 
.plugin 
.servlet 
.filter 
.ServletFilterModuleContainerFilter 
.doFilter(ServletFilterModuleContainerFilter.java:40) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
com 
.atlassian 
.core 
.filters.AbstractEncodingFilter.doFilter(AbstractEncodingFilter.java: 
33) at  
org 
.apache 
.catalina 
.core 
.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java: 
235) at  
org 
.apache 
.catalina 
.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at  
org 
.apache 
.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java: 
233) at  
org 
.apache 
.catalina.core.StandardContextValve.invoke(StandardContextValve.java: 
191) at  
org 
.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java: 
128) at  
org 
.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java: 
102) at  
org 
.apache 
.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java: 
109) at  
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java: 
286) at  
org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)  
at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)  
at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)  
at  
org 
.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java: 
697) at org.apache.jk.common.ChannelSocket 
$SocketConnection.runIt(ChannelSocket.java:889) at  
org.apache.tomcat.util.threads.ThreadPool 
$ControlRunnable.run(ThreadPool.java:690) at  
java.lang.Thread.run(Thread.java:619)
Referer URL
http://stringtemplate.org/

Confluence Application InformationBuild Information
home: /var/data/confluence-mysql
buildNumber: 1515
upTime: 5 hours, 21 minutes, 33 seconds
devMode: false
version: 2.10
Unique ID:  
0x0000011EE3C101288ACAAA0AD1C4CE4867C89AF67A9BF55DCCBDD2A1A21FB5AC

Server information
Application Server: Apache Tomcat/6.0.18
Servlet Version: 2.5
Database Dialect: com.atlassian.hibernate.dialect.MySQLDialect
Database Driver Name: com.mysql.jdbc.Driver
Database Driver Version: 5.1
Database Name: MySQL
Database Version: 5.0.45
Database Transaction Isolation: Repeatable read Database Latency: 1

Memory Information
Total Memory: 584 MB
Used Memory: 538 MB
Free Memory: 46 MB

System Information
favouriteColour: Gamboge
javaRuntime: Java(TM) SE Runtime Environment
jvmVersion: 1.0
operatingSystem: Linux 2.6.18-92.1.22.el5
fileSystemEncoding: UTF-8
javaVm: Java HotSpot(TM) 64-Bit Server VM
javaVendor: Sun Microsystems Inc.
userTimezone: America/Los_Angeles
jvmImplementationVersion: 11.0-b16
appServer: Apache Tomcat
date: Saturday, 17 Jan 2009
time: 00:42:03
jvmVendor: Sun Microsystems Inc.
userName: root
javaVersion: 1.6.0_11
operatingSystemArchitecture: amd64

Cluster Information
Not clustered.

Plugins
	? Add Content Menu Sections (confluence.menu.add, Version: 1.0)
	? Admin Sections (confluence.sections.admin, Version: 1.0)
	? Advanced Macros (confluence.macros.advanced, Version: 1.5.3.1)
	? Attachment Actions (confluence.sections.attachments, Version: 1.0)
	? Attachment Extractors  
(com.atlassian.confluence.plugins.attachmentExtractors, Version: 1.0- 
SNAPSHOT)
	? Basic Macros (confluence.macros.basic, Version: 1.4)
	? Browse Menu Items (confluence.sections.browse, Version: 1.0)
	? Chart Plugin (confluence.extra.chart, Version: 1.12)
	? Clickr Theme (com.atlassian.confluence.themes.clickr, Version: 2.3)
	? Code Macro (confluence.macros.code, Version: 1.5)
	? Comment Action Sections (confluence.comment.action, Version: 1.0)
	? Confluence Atlassian Plugin Repository  
(confluence.repository.client, Version: 2.1.1)
	? Confluence Attachments Plugin (confluence.extra.attachments,  
Version: 2.12)
	? Confluence Blogging RPC Plugin  
(com.atlassian.confluence.plugins.xmlrpc.bloggingrpc, Version: 1.2.4)
	? Confluence Contributors Plugin  
(com.atlassian.confluence.contributors, Version: 1.2.1)
	? Confluence HTML Macros (confluence.macros.html, Version: 1.5)
	? Confluence Remote API (confluence.extra.confluencerpc, Version: 2.10)
	? Content Action Menu Sections (confluence.content.action.menu,  
Version: 1.0)
	? Content Buttons (confluence.sections.page.temp, Version: 1.0)
	? Content Metadata (confluence.sections.content.metadata, Version: 1.0)
	? Core Extractors (confluence.extractors.core, Version: 1.4)
	? Core Listeners (confluence.listeners.core, Version: 1.3)
	? Core Path Converters (confluence.converters.core, Version: 1.0)
	? Core Startup and Shutdown (confluence.lifecycle.core, Version: 1)
	? Dashboard Macros (confluence.macros.dashboard, Version: 1.6)
	? Default Theme (com.atlassian.confluence.themes.default, Version: 1.0)
	? Did You Mean Index Building Interface  
(confluence.sections.admin.indexing, Version: 1.0)
	? Dynamic Task List 2 Plugin (confluence.extra.dynamictasklist2,  
Version: 3.1.1)
	? Edit Profile Sections (confluence.sections.profile.edit, Version:  
1.0)
	? French language pack (confluence.languages.fr_FR, Version: 1.10)
	? German language pack (confluence.languages.de_DE, Version: 1.5)
	? Global Labels Sections (confluence.sections.labels, Version: 1.0)
	? IM Presence NG Plugin (confluence.extra.impresence2, Version: 2.3)
	? Information Macros (confluence.extra.information, Version: 1.0)
	? JIRA Macros (confluence.extra.jira, Version: 2.8.7)
	? Layout Macros (confluence.extra.layout, Version: 1.1)
	? Left Navigation Theme  
(com.atlassian.confluence.themes.leftnavigation, Version: 2.2)
	? Live Search Macros (confluence.extra.livesearch, Version: 2.9)
	? News Tabs (confluence.sections.news, Version: 1.0)
	? Office Connector plugin  
(com.atlassian.confluence.extra.officeconnector, Version: 1.3.7)
	? Page Operations (confluence.sections.page.operations, Version: 1.0)
	? Page Tabs (confluence.search.mappers.lucene, Version: 1.0)
	? Page Tabs (confluence.sections.page, Version: 1.0)
	? Page Tree (com.atlassian.confluence.plugins.pagetree, Version:  
1.10.1)
	? Page View Links (confluence.sections.page.actions, Version: 1.0)
	? Profile Tabs (confluence.sections.profile, Version: 1.0)
	? Search Web Interface (confluence.sections.admin.generalconfig,  
Version: 1.0)
	? Search Web Interface (confluence.sections.search.view, Version: 1.0)
	? Social Bookmarking Plugin  
(com.atlassian.confluence.plugins.socialbookmarking, Version: 1.2.4)
	? Space Actions Sections (confluence.sections.space.actions, Version:  
1.0)
	? Space Admin Sections (confluence.sections.space.admin, Version: 1.0)
	? Space Advanced Sections (confluence.sections.space.advanced,  
Version: 1.0)
	? Space Browse Sections (confluence.sections.space.browse, Version:  
1.0)
	? Space Item Tabs (confluence.sections.space, Version: 1.0)
	? Space Labels Sections (confluence.sections.space.labels, Version:  
1.0)
	? Space Pages Sections (confluence.sections.space.pages, Version: 1.0)
	? System Web Resources (confluence.web.resources, Version: 1.0)
	? Table of Contents Plugin (org.randombits.confluence.toc, Version:  
2.4.9)
	? Tabular Metadata (confluence.extra.masterdetail, Version: 2.7)
	? TinyMCE Editor Plugin (com.atlassian.confluence.tinymceplugin,  
Version: 2.10)
	? UWC Importer Admin Panel  
(com.atlassian.confluence.plugins.uwc.uwcimporter-adminpanel, Version:  
1.1)
	? User Administration (confluence.admin.user, Version: 1.0)
	? User Lister (confluence.extra.userlister, Version: 2.4.2)
	? User Menu Sections (confluence.user.menu, Version: 1.0)
	? View Profile Web Interface (confluence.sections.profile.view,  
Version: 1.0)
	? WebDAV Plugin (confluence.extra.webdav, Version: 1.1)
	? Widget Connector (com.atlassian.confluence.extra.widgetconnector,  
Version: 1.0.1)
	? Wiki Renderer Components (confluence.renderer.components, Version:  
1.0)
RequestInformationURLhttp://www.antlr.org/wiki/500page.jspURI/wiki/500page.jspContext 
  Path/wikiServlet Path/500page.jspHeaders (Limited  
subset)hostwww.antlr.orguser-agentMozilla/5.0 (Macintosh; U; Intel Mac  
OS X 10_5_5; en-us) AppleWebKit/528.10+ (KHTML, like Gecko) Version/ 
3.2.1 Safari/525.27.1connectionkeep- 
aliveAttributesjavax.servlet.forward.request_uri/wiki/display/ST/ 
StringTemplate+Documentationjavax.servlet.forward.context_path/ 
wikijavax.servlet.forward.servlet_path/ 
displayjavax.servlet.forward.path_info/ 
500page 
.jspos_securityfilter_already_filteredtruejavax 
.servlet 
.jsp.jspExceptionorg.springframework.jdbc.UncategorizedSQLException:  
Hibernate operation: Could not execute query; uncategorized  
SQLException for SQL []; SQL state [HY000]; error code [1030]; Got  
error 28 from storage engine; nested exception is  
java.sql.SQLException: Got error 28 from storage engineatlassian.core.seraph.original.url/display/ST/StringTemplate+Documentationjavax.servlet.error.status_code500javax.servlet.error.servlet_namesimple-display__sitemesh__using_streamfalsecom.atlassian.gzipfilter.GzipFilter_already_filteredtrueloginfilter.already.filteredtruecom.atlassian.confluence.web.ConfluenceJohnsonFilter_already_filteredtrueConfluence-Request-Time1232181723396javax.servlet.error.messagewebwork.valueStackcom.opensymphony.xwork.util.OgnlValueStack at 6f89357bsessioninview.FILTEREDtrue__sitemesh__filterappliedtruejavax.servlet.error.exceptionorg.springframework.jdbc.UncategorizedSQLException 
: Hibernate operation: Could not execute query; uncategorized  
SQLException for SQL []; SQL state [HY000]; error code [1030]; Got  
error 28 from storage engine; nested exception is  
java.sql.SQLException: Got error 28 from storage  
enginejavax.servlet.error.request_uri/wiki/display/ST/StringTemplate 
+DocumentationParameters (Limited subset)Confluence User
anonymous

-- 
Rick


From John.Gardener at carrotgarden.com  Sat Jan 17 11:20:16 2009
From: John.Gardener at carrotgarden.com (John Gardener)
Date: Sat, 17 Jan 2009 13:20:16 -0600
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <49721787.4010308@temporal-wave.com>
References: <49714BC1.8030008@carrotgarden.com>	<200901170431.n0H4VEMr026511@zinc.newtechlaw.com>	<4971E9AA.4070608@carrotgarden.com>
	<49721787.4010308@temporal-wave.com>
Message-ID: <49722F70.9090705@carrotgarden.com>

    *Jim* hi

    Thank you for you answer; worked as you described;

    I will get the book today;

    Probably this needs to be the first thing on the "*5 minute intro*"
    antlr page:

    *"Lexer rules must be unambiguous or be just 'fragment' rules
    (basically called by other lexer rules).
    The lexer runs all the way through the text creating tokens, and
    when it is entirely complete, the parser is given the token set.
    The parser does not drive the lexer."
    *
    Especially: *The parser does not drive the lexer.*

    Thanks,

    John

-------- Original Message  --------
Subject: Re: [antlr-interest] Simple Grammar Question
From: Jim Idle <jimi at temporal-wave.com>
To: antlr-interest at antlr.org
Cc: antlr-interest at antlr.org
Date: Sat 17 Jan 2009 11:38:15 AM CST
> John Gardener wrote:
>>
>>     *Gerald*, hi;
>>
>>     Thank you very much for your response;
>>
>>     YES, you are right, I can see that: " Your NAME rule is consuming
>>     all tokens. "
>>
>>     What I can not see is how to *correct this properly*?
>>
>>     Thanks again,
>>
>>     John
>>
>>>>
>>>>     grammar Simple;  
>>>>
>>>>     options {
>>>>         language = Java;
>>>>     }
>>>>
>>>>     @parser::header {
>>>>         package simple;
>>>>         import static java.lang.System.out;
>>>>     }
>>>>
>>>>     @lexer::header{
>>>>       package simple;
>>>>       import static java.lang.System.out;
>>>>     }
>>>>
>>>>     // PARSER
>>>>
>>>>     record :
>>>>       digit name EOF
>>>>       { out.println( "+record: " +  $text );  };
>>>>
>>>>     digit : DIGIT
>>>>       { out.println( "+digit: " +  $text );  };
>>>>      
>>>>     name : (DIGIT|LETTER)
>>>>       ;
>>>>
> Change the name parser rule as above.
>>>>
>>>>
>>>>     // LEXER
>>>>
>>>>     DIGIT : '0'..'9'
>>>>       { out.println("+DIGIT: " + $text ); } ;
>>>>
>>>>     LETTER : 'A'..'Z'
>>>>       { out.println("+LETTER: " + $text ); } ;
>>>>
>>
> Remove the NAME lexer rule. Lexer rules must be unambiguous or be just
> 'fragment' rules (basically called by other lexer rules). The lexer
> runs all the way through the text creating tokens, and when it is
> entirely complete, the parser is given the token set. The parser does
> not drive the lexer, so the lexer cannot know whether to return you a
> NAME token or a LETTER token. Have a read of the getting started
> articles on the Wiki - most of these new user issues are covered and
> it will help you a lot. If you have the money, buy a copy of the book too.
>
> Jim
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>   
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090117/3464644d/attachment.html 

From John.Gardener at carrotgarden.com  Sat Jan 17 11:34:49 2009
From: John.Gardener at carrotgarden.com (John Gardener)
Date: Sat, 17 Jan 2009 13:34:49 -0600
Subject: [antlr-interest] Simple Grammar Question
In-Reply-To: <49721799.7060504@gmx.de>
References: <49714BC1.8030008@carrotgarden.com> <49721799.7060504@gmx.de>
Message-ID: <497232D9.20502@carrotgarden.com>

    *Johannes*, hi

    Thank you for the answer,

    Now I will know:
    *1) "If the lexer can match the same input via more than one rule,
    it chooses the rules which consumes the most input"
    2) "Do not call a token from a token; instead, call fragments from a
    token"
    *
    I wander if ANTLR community has "10 commandments" (or 100?) posted
    anywhere? :-)

    John

-------- Original Message  --------
Subject: Re: [antlr-interest] Simple Grammar Question
From: Johannes Luber <jaluber at gmx.de>
To: John Gardener <John.Gardener at carrotgarden.com>
Cc: antlr-interest at antlr.org
Date: Sat 17 Jan 2009 11:38:33 AM CST
> John Gardener schrieb:
>   
>>      *Hello;*
>>
>>     I am stuck with simple grammar; any help is much welcomed;
>>
>>     I want to parse 2 term sentenses, such as:
>>     <1: single digit > <2: name containing letters and digits > EOF
>>
>>     Below comes:
>>     1) grammar
>>     2) test rig
>>     3) output
>>
>>     PROBLEM:
>>     Second term (name) seems to greedily consume whole input;
>>
>>     Please let me know what is the proper way to deal with this?
>>     
>
> If the lexer can match the same input via more than one rule, it chooses
> the rules which consumes the most input. Try the following rules instead:
>
> fragment NAME:;
>
> DIGIT : ('0'..'9'|'A'..'Z' {$type=NAME;}) ('0'..'9'
> {$type=NAME;}|'A'..'Z' {$type=NAME;})*
>       { out.println("+DIGIT: " + $text ); } ;
>
> It should only generate DIGITs if no more than one character is matched
> and that character is a digit. But can names start with digits anyway?
> If not, this may work, too:
>
> DIGIT : '0'..'9'
>       { out.println("+DIGIT: " + $text ); } ;
>
> NAME : 'A'..'Z' ( 'A'..'Z' | '0'..'9' ) *
>       { out.println("+NAME: " + $text ); } ;
>
> Not using fragments for tokens and yet still calling other lexer rules
> in lexer rules may give strange results anyway and is discouraged by the
> experienced users. With fragments the above version looks like this:
>
> fragment DIGIT : '0'..'9';
>
> fragment ALPHA : 'A'..'Z';
>
> NUMBER : DIGIT { out.println("+NUMBER: " + $text ); } ;
>
>
> NAME : ALPHA ( ALPHA | DIGIT ) *
>       { out.println("+NAME: " + $text ); } ;
>
> Johannes
>
>   
>>     *1) GRAMMAR*
>>
>>     grammar Simple;  
>>
>>     options {
>>         language = Java;
>>     }
>>
>>     @parser::header {
>>         package simple;
>>         import static java.lang.System.out;
>>     }
>>
>>     @lexer::header{
>>       package simple;
>>       import static java.lang.System.out;
>>     }
>>
>>     // PARSER
>>
>>     record :
>>       digit name EOF
>>       { out.println( "+record: " +  $text );  };
>>
>>     digit : DIGIT
>>       { out.println( "+digit: " +  $text );  };
>>      
>>     name : NAME
>>       { out.println( "+name: " +  $text );  };
>>
>>
>>     // LEXER
>>
>>     DIGIT : '0'..'9'
>>       { out.println("+DIGIT: " + $text ); } ;
>>
>>     LETTER : 'A'..'Z'
>>       { out.println("+LETTER: " + $text ); } ;
>>
>>     NAME : ( LETTER | DIGIT ) + 
>>       { out.println("+NAME: " + $text ); } ;
>>
>>
>>     *2) TEST RIG*
>>
>>     package simple;
>>
>>     import java.io.ByteArrayInputStream;
>>
>>     import org.antlr.runtime.ANTLRInputStream;
>>     import org.antlr.runtime.CommonTokenStream;
>>
>>     import static java.lang.System.out;
>>
>>     public class SimpleTest {
>>
>>         public static void main(String[] args) throws Exception {
>>
>>             String record = "3B5A";
>>
>>             ByteArrayInputStream stream = new ByteArrayInputStream(record
>>                     .getBytes());
>>
>>             ANTLRInputStream input = new ANTLRInputStream(stream);
>>
>>             SimpleLexer lexer = new SimpleLexer(input);
>>
>>             CommonTokenStream tokens = new CommonTokenStream(lexer);
>>
>>             SimpleParser parser = new SimpleParser(tokens);
>>
>>             parser.record();
>>
>>             out.println(record);
>>
>>         }
>>
>>     }
>>
>>
>>     *3) TEST OUTPUT*
>>
>>     +DIGIT: 3
>>     +LETTER: 3B
>>     +DIGIT: 3B5
>>     +LETTER: 3B5A
>>     +NAME: 3B5A
>>     line 1:0 missing DIGIT at '3B5A'
>>     +digit: null
>>     +name: 3B5A
>>     +record: 3B5A
>>     3B5A
>>
>>
>>     *Thank you, *
>>
>>     John
>>
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>     
>
>
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090117/78317d38/attachment.html 

From rmann at latencyzero.com  Sat Jan 17 15:08:10 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sat, 17 Jan 2009 15:08:10 -0800
Subject: [antlr-interest] Codegen target docs (so I don't duplicate effort)?
Message-ID: <08BBCAB4-AD42-4C0E-8153-4C3177A86FC5@latencyzero.com>

I'm adding docs to the wiki as I go through writing my codegen target.  
I want to make sure I'm not duplicating work. Is there more than the  
single page I've been looking at so far? Something that describes the  
StringTemplates required, or the parameters passed to them?

TIA,
-- 
Rick


From rmann at latencyzero.com  Sat Jan 17 15:49:49 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sat, 17 Jan 2009 15:49:49 -0800
Subject: [antlr-interest] Added some docs on Codegen
Message-ID: <B9EF6797-1EDD-48B9-ADD5-1F0F66659C03@latencyzero.com>

I added a small bit of information about how the StringTemplates are  
used during codegen. Please let me know if I'm

a) Completely wasting my time because it's all already written down  
somewhere
b) On the right track
c) Totally wrong

I'm learning this (and trying to write it down) as I go...

Thanks!

-- 
Rick


From parrt at cs.usfca.edu  Sat Jan 17 15:50:11 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 17 Jan 2009 15:50:11 -0800
Subject: [antlr-interest] Added some docs on Codegen
In-Reply-To: <B9EF6797-1EDD-48B9-ADD5-1F0F66659C03@latencyzero.com>
References: <B9EF6797-1EDD-48B9-ADD5-1F0F66659C03@latencyzero.com>
Message-ID: <99EE84A2-17D9-4F50-9F67-4AC49EABC29F@cs.usfca.edu>

crossed in mail...keep on truckin, Rick!
Ter
On Jan 17, 2009, at 3:49 PM, Rick Mann wrote:

> I added a small bit of information about how the StringTemplates are  
> used during codegen. Please let me know if I'm
>
> a) Completely wasting my time because it's all already written down  
> somewhere
> b) On the right track
> c) Totally wrong
>
> I'm learning this (and trying to write it down) as I go...
>
> Thanks!
>
> -- 
> Rick
>


From mats.ekberg at arcticgroup.se  Sat Jan 17 16:17:39 2009
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Sun, 18 Jan 2009 01:17:39 +0100
Subject: [antlr-interest] @rulecatch for lexer, doable?
In-Reply-To: <20090108055738.CC08A341845C@www.antlr.org>
References: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>
	<20090108055738.CC08A341845C@www.antlr.org>
Message-ID: <1232237859.8717.55.camel@meg-laptop>

Hi!

To generate a custom catch clause in the parser one can write:

@rulecatch {
    ..code..
}

How do I accomplish the same thing in the lexer?

/mats
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/f70735b7/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 17 16:30:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 17 Jan 2009 16:30:28 -0800
Subject: [antlr-interest] @rulecatch for lexer, doable?
In-Reply-To: <1232237859.8717.55.camel@meg-laptop>
References: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>
	<20090108055738.CC08A341845C@www.antlr.org>
	<1232237859.8717.55.camel@meg-laptop>
Message-ID: <EC0D06EE-EA38-4A47-ACF7-397A31BF6FD4@cs.usfca.edu>

try @lexer::rulecatch...not sure the lexers respond to this, however.  
They do not individually trap exceptions I think. Look at the  
nextToken() method. It should be the thing that handles errors emitted  
from calling mTokens() rule method.

Ter
On Jan 17, 2009, at 4:17 PM, Mats Ekberg wrote:

> Hi!
>
> To generate a custom catch clause in the parser one can write:
>
> @rulecatch {
>     ..code..
> }
>
> How do I accomplish the same thing in the lexer?
>
> /mats
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dave.peckham at me.com  Sat Jan 17 17:01:43 2009
From: dave.peckham at me.com (David Peckham)
Date: Sat, 17 Jan 2009 17:01:43 -0800
Subject: [antlr-interest] gUnit test cases and Windows paths
Message-ID: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>

Hi Leon,

First, thank you for gUnit!

My gUnit test cases fail when they contain Windows paths. UNIX paths  
work fine. These test cases work in ANTLRWorks. See my sample grammar  
and test cases below.

Dave

---------------  grammar -----------------

grammar sample;

statement
    :   dbCommand NEWLINE
    ;

dbCommand
    :   CMD_OUTPUT { $CMD_OUTPUT.pos == 0 }? ~NEWLINE+
    ;

CMD_OUTPUT
    :   ( '.output' | '.outpu' | '.outp' | '.out' | '.ou' | '.o' )
    ;

NEWLINE
    : '\r'? '\n'
    ;

---------------  test cases -----------------

dbCommand:
".output C:\TEMP\test.csv" OK
<<.output C:\TEMP\test.csv>> OK




From antlr at mirality.co.nz  Sat Jan 17 18:11:28 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 18 Jan 2009 15:11:28 +1300
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
Message-ID: <20090118021143.4A0983418417@www.antlr.org>

At 14:01 18/01/2009, David Peckham wrote:
 >My gUnit test cases fail when they contain Windows paths. UNIX
 >paths work fine.
[...]
 >dbCommand:
 >".output C:\TEMP\test.csv" OK
 ><<.output C:\TEMP\test.csv>> OK

Did you try doubling the backslashes (ie. using \\ 
instead)?  While I don't know anything about gUnit syntax, it 
wouldn't surprise me if it was being used as an escape character 
(so your single backslashes are either getting ignored entirely or 
being interpreted as tab characters, since they're followed by a 
"t").


From dave.peckham at me.com  Sat Jan 17 18:27:38 2009
From: dave.peckham at me.com (David Peckham)
Date: Sat, 17 Jan 2009 18:27:38 -0800
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <0KDN009WMA3I3G70@smtpin127.mac.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
	<0KDN009WMA3I3G70@smtpin127.mac.com>
Message-ID: <1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>

On Jan 17, 2009, at 6:11 PM, Gavin Lambert wrote:

> At 14:01 18/01/2009, David Peckham wrote:
> >My gUnit test cases fail when they contain Windows paths. UNIX
> >paths work fine.
> [...]
> >dbCommand:
> >".output C:\TEMP\test.csv" OK
> ><<.output C:\TEMP\test.csv>> OK
>
> Did you try doubling the backslashes (ie. using \\ instead)?  While  
> I don't know anything about gUnit syntax, it wouldn't surprise me if  
> it was being used as an escape character (so your single backslashes  
> are either getting ignored entirely or being interpreted as tab  
> characters, since they're followed by a "t").
>

Yes, double backslashes fail too.


From leon.antlr at mac.com  Sat Jan 17 23:24:11 2009
From: leon.antlr at mac.com (Leon Su)
Date: Sat, 17 Jan 2009 23:24:11 -0800
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
	<0KDN009WMA3I3G70@smtpin127.mac.com>
	<1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>
Message-ID: <3961196A-F599-4AF0-836C-60B8D9652C0B@mac.com>

Hi David,

Are there only 2 lexical rules in your grammar?
If yes, the following gUnit test case must fail because ANTLR can't  
tokenize your input string properly.

dbCommand:
".output C:\TEMP\test.csv" OK

Here is a trick to display the error messages from ANTLR as below:
".output C:\TEMP\test.csv" -> "show me the error message!"  // the  
rhs expected result can be any arbitrary string...
then you'll see some error messages like no viable alternative at  
character '...'

Leon

---------------  your grammar -----------------

grammar sample;

statement
     :   dbCommand NEWLINE
     ;

dbCommand
     :   CMD_OUTPUT { $CMD_OUTPUT.pos == 0 }? ~NEWLINE+
     ;

CMD_OUTPUT
     :   ( '.output' | '.outpu' | '.outp' | '.out' | '.ou' | '.o' )
     ;

NEWLINE
     : '\r'? '\n'
     ;

On Jan 17, 2009, at 6:27 PM, David Peckham wrote:

> On Jan 17, 2009, at 6:11 PM, Gavin Lambert wrote:
>
>> At 14:01 18/01/2009, David Peckham wrote:
>> >My gUnit test cases fail when they contain Windows paths. UNIX
>> >paths work fine.
>> [...]
>> >dbCommand:
>> >".output C:\TEMP\test.csv" OK
>> ><<.output C:\TEMP\test.csv>> OK
>>
>> Did you try doubling the backslashes (ie. using \\ instead)?   
>> While I don't know anything about gUnit syntax, it wouldn't  
>> surprise me if it was being used as an escape character (so your  
>> single backslashes are either getting ignored entirely or being  
>> interpreted as tab characters, since they're followed by a "t").
>>
>
> Yes, double backslashes fail too.
>


From dave.peckham at me.com  Sun Jan 18 00:11:49 2009
From: dave.peckham at me.com (David Peckham)
Date: Sun, 18 Jan 2009 00:11:49 -0800
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <3961196A-F599-4AF0-836C-60B8D9652C0B@mac.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
	<0KDN009WMA3I3G70@smtpin127.mac.com>
	<1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>
	<3961196A-F599-4AF0-836C-60B8D9652C0B@mac.com>
Message-ID: <91E07484-A73C-44CF-AD5C-D31CBE3A0607@me.com>

The sample grammar was just a part of my larger grammar. I made this  
work by defining backslash as a token:

tokens {
	...
	BACKSLASH = '\\' ;
	...
}

I assumed that ~NEWLINE+ would match anything up to the end of the  
line. Thanks for the tip about forcing gUnit to display the error  
message.

Dave


On Jan 17, 2009, at 11:24 PM, Leon Su wrote:

> Hi David,
>
> Are there only 2 lexical rules in your grammar?
> If yes, the following gUnit test case must fail because ANTLR can't  
> tokenize your input string properly.
>
> dbCommand:
> ".output C:\TEMP\test.csv" OK
>
> Here is a trick to display the error messages from ANTLR as below:
> ".output C:\TEMP\test.csv" -> "show me the error message!"  // the  
> rhs expected result can be any arbitrary string...
> then you'll see some error messages like no viable alternative at  
> character '...'
>
> Leon
>
> ---------------  your grammar -----------------
>
> grammar sample;
>
> statement
>    :   dbCommand NEWLINE
>    ;
>
> dbCommand
>    :   CMD_OUTPUT { $CMD_OUTPUT.pos == 0 }? ~NEWLINE+
>    ;
>
> CMD_OUTPUT
>    :   ( '.output' | '.outpu' | '.outp' | '.out' | '.ou' | '.o' )
>    ;
>
> NEWLINE
>    : '\r'? '\n'
>    ;
>
> On Jan 17, 2009, at 6:27 PM, David Peckham wrote:
>
>> On Jan 17, 2009, at 6:11 PM, Gavin Lambert wrote:
>>
>>> At 14:01 18/01/2009, David Peckham wrote:
>>> >My gUnit test cases fail when they contain Windows paths. UNIX
>>> >paths work fine.
>>> [...]
>>> >dbCommand:
>>> >".output C:\TEMP\test.csv" OK
>>> ><<.output C:\TEMP\test.csv>> OK
>>>
>>> Did you try doubling the backslashes (ie. using \\ instead)?   
>>> While I don't know anything about gUnit syntax, it wouldn't  
>>> surprise me if it was being used as an escape character (so your  
>>> single backslashes are either getting ignored entirely or being  
>>> interpreted as tab characters, since they're followed by a "t").
>>>
>>
>> Yes, double backslashes fail too.
>>
>


From antlr at mirality.co.nz  Sun Jan 18 00:24:32 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 18 Jan 2009 21:24:32 +1300
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <91E07484-A73C-44CF-AD5C-D31CBE3A0607@me.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
	<0KDN009WMA3I3G70@smtpin127.mac.com>
	<1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>
	<3961196A-F599-4AF0-836C-60B8D9652C0B@mac.com>
	<91E07484-A73C-44CF-AD5C-D31CBE3A0607@me.com>
Message-ID: <20090118082443.2A74B3418417@www.antlr.org>

At 21:11 18/01/2009, David Peckham wrote:
 >I assumed that ~NEWLINE+ would match anything up to the end of
 >the line. Thanks for the tip about forcing gUnit to display the
 >error message.

When you use ~ in a parser rule, it means "any token but these" -- 
so the lexer must still produce valid tokens for whatever it is 
you want to match.

If you want to match any character at all (not caring about 
tokens), then you have to do it in the lexer.


From dave.peckham at me.com  Sun Jan 18 00:29:10 2009
From: dave.peckham at me.com (David Peckham)
Date: Sun, 18 Jan 2009 00:29:10 -0800
Subject: [antlr-interest] gUnit test cases and Windows paths
In-Reply-To: <0KDN00EX7RD6KOC0@smtpin130.mac.com>
References: <E14520D3-7C67-4F55-9292-FF2797F1F6A3@me.com>
	<0KDN009WMA3I3G70@smtpin127.mac.com>
	<1987F2D7-4752-41D0-9D4F-9AFBC32FFBC8@me.com>
	<3961196A-F599-4AF0-836C-60B8D9652C0B@mac.com>
	<91E07484-A73C-44CF-AD5C-D31CBE3A0607@me.com>
	<0KDN00EX7RD6KOC0@smtpin130.mac.com>
Message-ID: <2EE44B9C-21D3-4AF0-874F-85564CABBE1C@me.com>

Okay, now I understand. Thanks Gavin.

On Jan 18, 2009, at 12:24 AM, Gavin Lambert wrote:

> When you use ~ in a parser rule, it means "any token but these" --  
> so the lexer must still produce valid tokens for whatever it is you  
> want to match.
>
> If you want to match any character at all (not caring about tokens),  
> then you have to do it in the lexer.


From mats.ekberg at arcticgroup.se  Sun Jan 18 01:21:56 2009
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Sun, 18 Jan 2009 10:21:56 +0100
Subject: [antlr-interest] @rulecatch for lexer, doable?
In-Reply-To: <EC0D06EE-EA38-4A47-ACF7-397A31BF6FD4@cs.usfca.edu>
References: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>
	<20090108055738.CC08A341845C@www.antlr.org>
	<1232237859.8717.55.camel@meg-laptop>
	<EC0D06EE-EA38-4A47-ACF7-397A31BF6FD4@cs.usfca.edu>
Message-ID: <2A270AAC-093C-40F3-B3C5-9733FBC0410B@arcticgroup.se>

Nope, dont work. There is no errors while generating the lexer/parser,  
but no catch-code is generated.

/mats

Skickat fr?n min iPhone

18 jan 2009 kl. 01.30 skrev Terence Parr <parrt at cs.usfca.edu>:

> try @lexer::rulecatch...not sure the lexers respond to this,  
> however. They do not individually trap exceptions I think. Look at  
> the nextToken() method. It should be the thing that handles errors  
> emitted from calling mTokens() rule method.
>
> Ter
> On Jan 17, 2009, at 4:17 PM, Mats Ekberg wrote:
>
>> Hi!
>>
>> To generate a custom catch clause in the parser one can write:
>>
>> @rulecatch {
>>    ..code..
>> }
>>
>> How do I accomplish the same thing in the lexer?
>>
>> /mats
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rmann at latencyzero.com  Sun Jan 18 04:13:27 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 18 Jan 2009 04:13:27 -0800
Subject: [antlr-interest] Codegen confusion
Message-ID: <433ADD81-8FAE-42E5-820D-2C314B910962@latencyzero.com>

I'm having a hard time getting a handle on how all the various  
StringTemplates get instantiated and invoked. I thought I was getting  
the hang of it, then I expanded my grammar a bit beyond the super- 
simple one given in the codegen wiki page.

I added a parser rule to what was originally just a lexical rule, and  
when processing my test grammar, I suddenly got this complaint:

error(10):  internal error: T.g : java.util.NoSuchElementException: no  
such attribute: bitsets in template context [headerFile lexer]

The lexer() ST doesn't have a bitsets parameter, and neither do its  
counterparts in C.stg or Java.stg. Why does it suddenly want it in mine?

If I add a bitsets parameter, it seems to come out okay, but I'm  
reluctant to do that since no one else seemed to need it; I figure I'm  
doing something else wrong.

TIA,
-- 
Rick


From rmann at latencyzero.com  Sun Jan 18 04:18:01 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 18 Jan 2009 04:18:01 -0800
Subject: [antlr-interest] Codegen confusion
In-Reply-To: <433ADD81-8FAE-42E5-820D-2C314B910962@latencyzero.com>
References: <433ADD81-8FAE-42E5-820D-2C314B910962@latencyzero.com>
Message-ID: <046D016D-8FCB-432A-A8CB-7FCDA0ABD40B@latencyzero.com>

Argh. I think I figured it out. It was still a "lexer grammar", not a  
"grammar".

On Jan 18, 2009, at 04:13:27, Rick Mann wrote:

> I'm having a hard time getting a handle on how all the various
> StringTemplates get instantiated and invoked. I thought I was getting
> the hang of it, then I expanded my grammar a bit beyond the super-
> simple one given in the codegen wiki page.
>
> I added a parser rule to what was originally just a lexical rule, and
> when processing my test grammar, I suddenly got this complaint:
>
> error(10):  internal error: T.g : java.util.NoSuchElementException: no
> such attribute: bitsets in template context [headerFile lexer]
>
> The lexer() ST doesn't have a bitsets parameter, and neither do its
> counterparts in C.stg or Java.stg. Why does it suddenly want it in  
> mine?
>
> If I add a bitsets parameter, it seems to come out okay, but I'm
> reluctant to do that since no one else seemed to need it; I figure I'm
> doing something else wrong.
>
> TIA,
> -- 
> Rick

-- 
Rick


From ek2138761 at googlemail.com  Sun Jan 18 07:57:51 2009
From: ek2138761 at googlemail.com (Ed Key)
Date: Sun, 18 Jan 2009 15:57:51 +0000
Subject: [antlr-interest] ANTLR build step problem (using MS Visual Studio
	2008, C#)
Message-ID: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>

Hi All,

I've just finished integrating an ANTLR step into my C# project and
everything is very nice and neat except for one thing: When I build, the
lexer/parser generation seems to be one step behind the build, even though
it is being done before the C# code is compiled.

For example, starting with a working .G file, I introduce a deliberate
error, in the @members section, e.g. just putting the word "typo"

I then hit F6 and build - everything succeeds.

I then hit build again - I now get the expected error: "Member modifier
'public' must precede the member type and name"


Below are the (hopefully) relevent bits of the vcproj file:

The generated C# lexer/parser files:

    <Compile Include="UI\WuweiUILexer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WuweiUI.g</DependentUpon>
    </Compile>
    <Compile Include="UI\WuweiUIParser.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WuweiUI.g</DependentUpon>
    </Compile>

The grammar file:

  <ItemGroup>
    <Antlr3 Include="UI\WuweiUI.g">
      <OutputFiles>WuweiUILexer.cs;WuweiUIParser.cs</OutputFiles>
    </Antlr3>
  </ItemGroup>

The pre-build step:

  <PropertyGroup>
    <PreBuildEvent>java -classpath
"$(ProjectDir)..\..\antlr\antlrworks-1.2.2.jar" org.antlr.Tool
-message-format vs2005 "$(ProjectDir)@(Antlr3)"</PreBuildEvent>
  </PropertyGroup>


I've tried various tweaks to the vcproj file but with no success. The
pre-build step was previously set up as in
http://www.antlr.org/wiki/display/ANTLR3/Integration+with+Development+Environments,
but this did not work with spaces in $(ProjectDir). (There may be a solution
to this sub-problem but it's outside of my limited XML knowledge....)

Thanks in advance for any help or information!

Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/7937fb4a/attachment.html 

From virtuoso.coders at gmail.com  Sun Jan 18 08:24:48 2009
From: virtuoso.coders at gmail.com (SSG JJV)
Date: Sun, 18 Jan 2009 10:24:48 -0600
Subject: [antlr-interest] Syntax validation using antlr
Message-ID: <26e9b8c20901180824g6f0d315dw9328eb6739481c46@mail.gmail.com>

Hello AntlrMasters,

I want to develop an antlr program that validates the syntax of a
proprietary language similar to C++ language. For ex:

INT a, b;

I want to validate syntax and throw errors in case of syntactical errors in
the program.
In the above example, say if user misses semicolon at the end, i want to
throw appropriate message to the user.

Should i use AST approach? Are there any sample 'validation programs
developed in antlr' already available? Please advice.

Any initial guidance will be of great help.

Thanks,
Munna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/46829475/attachment.html 

From jimi at temporal-wave.com  Sun Jan 18 10:05:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 18 Jan 2009 10:05:31 -0800
Subject: [antlr-interest] @rulecatch for lexer, doable?
In-Reply-To: <2A270AAC-093C-40F3-B3C5-9733FBC0410B@arcticgroup.se>
References: <3CC0DF6CE66C4257BDA546908972C58A@homelaptop>	<20090108055738.CC08A341845C@www.antlr.org>	<1232237859.8717.55.camel@meg-laptop>	<EC0D06EE-EA38-4A47-ACF7-397A31BF6FD4@cs.usfca.edu>
	<2A270AAC-093C-40F3-B3C5-9733FBC0410B@arcticgroup.se>
Message-ID: <49736F6B.4090302@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/8d77b656/attachment.html 

From sharwell at pixelminegames.com  Sun Jan 18 10:41:12 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 18 Jan 2009 12:41:12 -0600
Subject: [antlr-interest] ANTLR build step problem (using MS Visual
	Studio2008, C#)
In-Reply-To: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
References: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA676FC@Bloodymary.ironwillgames.com>

Add the following in your .csproj:

 

  <PropertyGroup>

    <UseHostCompilerIfAvailable>False</UseHostCompilerIfAvailable>

  </PropertyGroup>

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ed Key
Sent: Sunday, January 18, 2009 9:58 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR build step problem (using MS Visual
Studio2008, C#)

 

Hi All,

I've just finished integrating an ANTLR step into my C# project and
everything is very nice and neat except for one thing: When I build, the
lexer/parser generation seems to be one step behind the build, even
though it is being done before the C# code is compiled.

For example, starting with a working .G file, I introduce a deliberate
error, in the @members section, e.g. just putting the word "typo" 

I then hit F6 and build - everything succeeds.

I then hit build again - I now get the expected error: "Member modifier
'public' must precede the member type and name"


Below are the (hopefully) relevent bits of the vcproj file:

The generated C# lexer/parser files:

    <Compile Include="UI\WuweiUILexer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WuweiUI.g</DependentUpon>
    </Compile>
    <Compile Include="UI\WuweiUIParser.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WuweiUI.g</DependentUpon>
    </Compile>

The grammar file:

  <ItemGroup>
    <Antlr3 Include="UI\WuweiUI.g">
      <OutputFiles>WuweiUILexer.cs;WuweiUIParser.cs</OutputFiles>
    </Antlr3>
  </ItemGroup>

The pre-build step:

  <PropertyGroup>
    <PreBuildEvent>java -classpath
"$(ProjectDir)..\..\antlr\antlrworks-1.2.2.jar" org.antlr.Tool
-message-format vs2005 "$(ProjectDir)@(Antlr3)"</PreBuildEvent>
  </PropertyGroup>


I've tried various tweaks to the vcproj file but with no success. The
pre-build step was previously set up as in
http://www.antlr.org/wiki/display/ANTLR3/Integration+with+Development+En
vironments, but this did not work with spaces in $(ProjectDir). (There
may be a solution to this sub-problem but it's outside of my limited XML
knowledge....)

Thanks in advance for any help or information!

Ed

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/62bff195/attachment.html 

From antlr at mirality.co.nz  Sun Jan 18 11:57:39 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Jan 2009 08:57:39 +1300
Subject: [antlr-interest] ANTLR build step problem (using MS Visual
 Studio2008, C#)
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA676FC@Bloodymary.ironwill
	games.com>
References: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA676FC@Bloodymary.ironwillgames.com>
Message-ID: <20090118195752.8AA6F3418152@www.antlr.org>

At 07:41 19/01/2009, Sam Harwell wrote:
>Add the following in your .csproj:
>
>   <PropertyGroup>
> 
><UseHostCompilerIfAvailable>False</UseHostCompilerIfAvailable>
>   </PropertyGroup>

Another option is to just make sure you close the generated files 
before you build.

The underlying problem is that if the generated files are open in 
the editor, then VS will compile what's in the editor, not what's 
on disk (unless you make the change above).  And while the files 
on disk have been regenerated, the editor hasn't reloaded them 
yet.  You can tell when you get it wrong because you'll be 
prompted to reload the files after the build. 


From rmann at latencyzero.com  Sun Jan 18 12:38:29 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 18 Jan 2009 12:38:29 -0800
Subject: [antlr-interest] Tokens vs. Characters in
	Lexer/MismatchedTokenException
Message-ID: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>

As I'm working on my language target, I see that Lexer.match(int c) in  
the Java target can create a MismatchedTokenException(), passing c in  
to its constructor.

The exception class seems to treat that int as a token. I wouldn't  
have thought Tokens and Characters to be interchangeable. What am I  
missing?

TIA,
-- 
Rick


From ek2138761 at googlemail.com  Sun Jan 18 12:43:29 2009
From: ek2138761 at googlemail.com (Ed Key)
Date: Sun, 18 Jan 2009 20:43:29 +0000
Subject: [antlr-interest] ANTLR build step problem (using MS Visual
	Studio2008, C#)
In-Reply-To: <497389c0.8905be0a.594d.ffffc2e7SMTPIN_ADDED@mx.google.com>
References: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA676FC@Bloodymary.ironwillgames.com>
	<497389c0.8905be0a.594d.ffffc2e7SMTPIN_ADDED@mx.google.com>
Message-ID: <3a9736db0901181243s5a310f7cwac969e5e6ea98e00@mail.gmail.com>

Thank you very much for the help guys, adding that to the .csproj fixed it!

I did suspect that having the generated files open might cause behaviour
like that, but after doing some tests to check (before and after the csproj
change), it doesn't seem to affect the behaviour. (this is VS 2008
Professional Edition, on WinXP SP3) Strange.

Thanks again!

Ed

On Sun, Jan 18, 2009 at 7:57 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 07:41 19/01/2009, Sam Harwell wrote:
>
>> Add the following in your .csproj:
>>
>>  <PropertyGroup>
>>
>> <UseHostCompilerIfAvailable>False</UseHostCompilerIfAvailable>
>>  </PropertyGroup>
>>
>
> Another option is to just make sure you close the generated files before
> you build.
>
> The underlying problem is that if the generated files are open in the
> editor, then VS will compile what's in the editor, not what's on disk
> (unless you make the change above).  And while the files on disk have been
> regenerated, the editor hasn't reloaded them yet.  You can tell when you get
> it wrong because you'll be prompted to reload the files after the build.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090118/869a1c1b/attachment.html 

From parrt at cs.usfca.edu  Sun Jan 18 12:55:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Jan 2009 12:55:46 -0800
Subject: [antlr-interest] Tokens vs. Characters in
	Lexer/MismatchedTokenException
In-Reply-To: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>
References: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>
Message-ID: <E6C4FE31-01F3-44F1-9969-FFA16A3EB439@cs.usfca.edu>


On Jan 18, 2009, at 12:38 PM, Rick Mann wrote:

> As I'm working on my language target, I see that Lexer.match(int c) in
> the Java target can create a MismatchedTokenException(), passing c in
> to its constructor.

weird. in the Java version, it treats it as a token type.

> The exception class seems to treat that int as a token. I wouldn't
> have thought Tokens and Characters to be interchangeable. What am I
> missing?

if that were the case, it wouldn't compile. Are you sure that it is  
treating it as a token?

Ter

From brothers at bros.com  Sun Jan 18 12:59:31 2009
From: brothers at bros.com (Dennis Brothers)
Date: Sun, 18 Jan 2009 15:59:31 -0500
Subject: [antlr-interest] Lucene grammar
Message-ID: <BABC3032-39D1-4532-8E79-BCA75174FA25@bros.com>

I'm in the process of creating a parser for Lucene query syntax.  I've  
done a lot of searching, and can't find any useful "prior art".  Is  
anyone aware of a Lucene parser built with ANTLR?

A specific problem I see is that Lucene involves queries of the form  
foo:bar (and there might be whitespace either side of the colon).   
This means "find a record whose foo field contains the word 'bar'".   
To complicate things further, the field name and colon are optional -  
there's a default field.

I'd like to distinquish field names from words in the lexer, but I  
don't see a simple way to do it.  Can I somehow use a syntactic  
predicate in the lexer?  Or a semantic predicate that scans ahead for  
the colon?  In either case, how do I deal with the optional whitespace  
in the lexer?  Would the traditional whitespace-skipping constructs  
take effect before the predicate was tested?

Thanks for any insight -
     - Dennis Brothers


From parrt at cs.usfca.edu  Sun Jan 18 13:01:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Jan 2009 13:01:42 -0800
Subject: [antlr-interest] Lucene grammar
In-Reply-To: <BABC3032-39D1-4532-8E79-BCA75174FA25@bros.com>
References: <BABC3032-39D1-4532-8E79-BCA75174FA25@bros.com>
Message-ID: <CE6ED31D-0D0A-4B90-BCBA-05063418C7F5@cs.usfca.edu>

Hi. you should be able to almost directly translate the javacc version  
of their career language grammar to ANTLR's format.  That said, the  
previous query parser was terrible.  You'll probably have to pass all  
words to the parser and let it figure out what to do or assume  
everything is just a word except for "ID:" type stuff. return as a  
special token.

Ter
On Jan 18, 2009, at 12:59 PM, Dennis Brothers wrote:

> I'm in the process of creating a parser for Lucene query syntax.  I've
> done a lot of searching, and can't find any useful "prior art".  Is
> anyone aware of a Lucene parser built with ANTLR?
>
> A specific problem I see is that Lucene involves queries of the form
> foo:bar (and there might be whitespace either side of the colon).
> This means "find a record whose foo field contains the word 'bar'".
> To complicate things further, the field name and colon are optional -
> there's a default field.
>
> I'd like to distinquish field names from words in the lexer, but I
> don't see a simple way to do it.  Can I somehow use a syntactic
> predicate in the lexer?  Or a semantic predicate that scans ahead for
> the colon?  In either case, how do I deal with the optional whitespace
> in the lexer?  Would the traditional whitespace-skipping constructs
> take effect before the predicate was tested?
>
> Thanks for any insight -
>     - Dennis Brothers
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rmann at latencyzero.com  Sun Jan 18 13:10:19 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 18 Jan 2009 13:10:19 -0800
Subject: [antlr-interest] Tokens vs. Characters in
	Lexer/MismatchedTokenException
In-Reply-To: <E6C4FE31-01F3-44F1-9969-FFA16A3EB439@cs.usfca.edu>
References: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>
	<E6C4FE31-01F3-44F1-9969-FFA16A3EB439@cs.usfca.edu>
Message-ID: <92D7C423-7E71-49BB-8680-CA9AD5C041A4@latencyzero.com>


On Jan 18, 2009, at 12:55:46, Terence Parr wrote:

>
> On Jan 18, 2009, at 12:38 PM, Rick Mann wrote:
>
>> As I'm working on my language target, I see that Lexer.match(int c)  
>> in
>> the Java target can create a MismatchedTokenException(), passing c in
>> to its constructor.
>
> weird. in the Java version, it treats it as a token type.

Sorry I wasn't clear: I'm referring to the Java version. As I examine  
this further, I realize it's combining Characters and Token *Types*,  
not Tokens. This is still a little apples-and-oranges to me.

Lexer has two match() methods:

Lexer.match(String s)
Lexer.match(int c)

When the ANTLR tool builds the Java recognizer for the example grammar  
in the codegen wiki page, it creates a rule mZERO() in the Lexer  
subclass that calls match('0'). At this point we're passing a char as  
an int parameter, which should be legal without warnings. Examining  
Lexer.match(int c) reveals this:

public void match(int c) throws MismatchedTokenException {
	if ( input.LA(1)!=c ) {
		if ( state.backtracking>0 ) {
			state.failed = true;
			return;
		}
		MismatchedTokenException mte =
			new MismatchedTokenException(c, input);
		recover(mte);  // don't really recover; just consume in lexer
		throw mte;
	}
	input.consume();
	state.failed = false;
}

The only no-arg constructor of MismatchedTokenException is:

public MismatchedTokenException(int expecting, IntStream input) {
	super(input);
	this.expecting = expecting;
}

And this.exception is declared like this:

public int expecting = Token.INVALID_TOKEN_TYPE;

Implying that we've now converted a character to a token type  
(semantically, that is).



>
>
>> The exception class seems to treat that int as a token. I wouldn't
>> have thought Tokens and Characters to be interchangeable. What am I
>> missing?
>
> if that were the case, it wouldn't compile. Are you sure that it is  
> treating it as a token?
>
> Ter

-- 
Rick


From parrt at cs.usfca.edu  Sun Jan 18 13:12:30 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Jan 2009 13:12:30 -0800
Subject: [antlr-interest] Tokens vs. Characters in
	Lexer/MismatchedTokenException
In-Reply-To: <92D7C423-7E71-49BB-8680-CA9AD5C041A4@latencyzero.com>
References: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>
	<E6C4FE31-01F3-44F1-9969-FFA16A3EB439@cs.usfca.edu>
	<92D7C423-7E71-49BB-8680-CA9AD5C041A4@latencyzero.com>
Message-ID: <BCBEBB21-DE37-4E29-85D4-1C4131C28C6A@cs.usfca.edu>

ah.  Yes, I get it now. Take of a lexer as a parser that parses  
characters instead of tokens. In this way I have generalized the  
notion of a recognizer so that we represent any element in the stream  
as an integer vocabulary symbol "type".

sorry for the confusion.

Ter
On Jan 18, 2009, at 1:10 PM, Rick Mann wrote:

>
> On Jan 18, 2009, at 12:55:46, Terence Parr wrote:
>
>>
>> On Jan 18, 2009, at 12:38 PM, Rick Mann wrote:
>>
>>> As I'm working on my language target, I see that Lexer.match(int  
>>> c) in
>>> the Java target can create a MismatchedTokenException(), passing c  
>>> in
>>> to its constructor.
>>
>> weird. in the Java version, it treats it as a token type.
>
> Sorry I wasn't clear: I'm referring to the Java version. As I  
> examine this further, I realize it's combining Characters and Token  
> *Types*, not Tokens. This is still a little apples-and-oranges to me.
>
> Lexer has two match() methods:
>
> Lexer.match(String s)
> Lexer.match(int c)
>
> When the ANTLR tool builds the Java recognizer for the example  
> grammar in the codegen wiki page, it creates a rule mZERO() in the  
> Lexer subclass that calls match('0'). At this point we're passing a  
> char as an int parameter, which should be legal without warnings.  
> Examining Lexer.match(int c) reveals this:
>
> public void match(int c) throws MismatchedTokenException {
> 	if ( input.LA(1)!=c ) {
> 		if ( state.backtracking>0 ) {
> 			state.failed = true;
> 			return;
> 		}
> 		MismatchedTokenException mte =
> 			new MismatchedTokenException(c, input);
> 		recover(mte);  // don't really recover; just consume in lexer
> 		throw mte;
> 	}
> 	input.consume();
> 	state.failed = false;
> }
>
> The only no-arg constructor of MismatchedTokenException is:
>
> public MismatchedTokenException(int expecting, IntStream input) {
> 	super(input);
> 	this.expecting = expecting;
> }
>
> And this.exception is declared like this:
>
> public int expecting = Token.INVALID_TOKEN_TYPE;
>
> Implying that we've now converted a character to a token type  
> (semantically, that is).
>
>
>
>>
>>
>>> The exception class seems to treat that int as a token. I wouldn't
>>> have thought Tokens and Characters to be interchangeable. What am I
>>> missing?
>>
>> if that were the case, it wouldn't compile. Are you sure that it is  
>> treating it as a token?
>>
>> Ter
>
> -- 
> Rick
>


From rmann at latencyzero.com  Sun Jan 18 13:30:35 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 18 Jan 2009 13:30:35 -0800
Subject: [antlr-interest] Tokens vs. Characters in
	Lexer/MismatchedTokenException
In-Reply-To: <BCBEBB21-DE37-4E29-85D4-1C4131C28C6A@cs.usfca.edu>
References: <E59BB189-026C-4F3D-BE43-FE70F36E0D47@latencyzero.com>
	<E6C4FE31-01F3-44F1-9969-FFA16A3EB439@cs.usfca.edu>
	<92D7C423-7E71-49BB-8680-CA9AD5C041A4@latencyzero.com>
	<BCBEBB21-DE37-4E29-85D4-1C4131C28C6A@cs.usfca.edu>
Message-ID: <8DAB3350-F0CB-44E0-A16F-68A124CE2D69@latencyzero.com>


On Jan 18, 2009, at 13:12:30, Terence Parr wrote:

> ah.  Yes, I get it now. Take of a lexer as a parser that parses
> characters instead of tokens. In this way I have generalized the
> notion of a recognizer so that we represent any element in the stream
> as an integer vocabulary symbol "type".
>
> sorry for the confusion.


No worries. The use of the Java primitive type "int" threw me a bit,  
is all. I've typedef'd a "CharTokenT" to use, might find a better name  
later. I guess this is okay because you'll only ever be looking at  
characters or token types exclusively, never a mix.

Thanks!

-- 
Rick


From antlr at mirality.co.nz  Sun Jan 18 23:08:24 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Jan 2009 20:08:24 +1300
Subject: [antlr-interest] Lucene grammar
In-Reply-To: <BABC3032-39D1-4532-8E79-BCA75174FA25@bros.com>
References: <BABC3032-39D1-4532-8E79-BCA75174FA25@bros.com>
Message-ID: <20090119070832.D05C93418150@www.antlr.org>

At 09:59 19/01/2009, Dennis Brothers wrote:
 >A specific problem I see is that Lucene involves queries of the
 >form foo:bar (and there might be whitespace either side of the
 >colon).
[...]
 >I'd like to distinquish field names from words in the lexer,
 >but I don't see a simple way to do it.  Can I somehow use a
 >syntactic predicate in the lexer?  Or a semantic predicate
 >that scans ahead for the colon?

Yes, you *could* do that, but it's not really a good idea.

Don't try to do too much work in the lexer -- just get it to 
consolidate groups of letters/numbers/etc into generic IDs or 
WORDs or whatever and then figure out what they mean in the 
parser.

If you're generating an AST, you can change the type of the token 
in the output AST once you know more about the context in which it 
is used.


From rmann at latencyzero.com  Mon Jan 19 11:39:08 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 11:39:08 -0800
Subject: [antlr-interest] Handling 'finally' in language target that doesn't
	have 'finally'
Message-ID: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>

In a language like C++, which stupidly doesn't support "finally",  
what's the right way to write a grammar? To just not use "finally" in  
it, and use init & after? Is there a way to signal to ANTLR (from the  
back-end implementation) that finally should not be allowed?

TIA,
-- 
Rick


From antlr at mirality.co.nz  Mon Jan 19 11:53:57 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 20 Jan 2009 08:53:57 +1300
Subject: [antlr-interest] Handling 'finally' in language target that
 doesn't have 'finally'
In-Reply-To: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
Message-ID: <20090119195410.2A6173418424@www.antlr.org>

At 08:39 20/01/2009, Rick Mann wrote:
 >In a language like C++, which stupidly doesn't support
 >"finally", what's the right way to write a grammar? To just
 >not use "finally" in it, and use init & after? Is there a
 >way to signal to ANTLR (from the back-end implementation)
 >that finally should not be allowed?

There's actually no technical reason (from a language standpoint) 
why "finally" couldn't be supported in C/C++ language targets 
(apart from the fact that there isn't a C++ target yet for v3).

I don't know if it *is* actually supported, but it could be.


From sohail at worklogassistant.com  Mon Jan 19 11:50:54 2009
From: sohail at worklogassistant.com (Sohail Somani)
Date: Mon, 19 Jan 2009 11:50:54 -0800
Subject: [antlr-interest] Handling 'finally' in language target that
	doesn't have 'finally'
In-Reply-To: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
Message-ID: <gl2liu$4r9$2@ger.gmane.org>

Rick Mann wrote:
> In a language like C++, which stupidly doesn't support "finally",  
> what's the right way to write a grammar? To just not use "finally" in  
> it, and use init & after? Is there a way to signal to ANTLR (from the  
> back-end implementation) that finally should not be allowed?

I'm pretty sure you've got it backwards. Languages that /require/
finally are stupid.

For everything else, there's ScopeGuard/RAII.

-- 
Sohail Somani
Hassle-free time tracking for JIRA

Website: http://worklogassistant.com
Blog   : http://blog.worklogassistant.com
Twitter: http://twitter.com/somanisoftware


From sharwell at pixelminegames.com  Mon Jan 19 12:00:29 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 19 Jan 2009 14:00:29 -0600
Subject: [antlr-interest] Handling 'finally' in language target that
	doesn'thave 'finally'
In-Reply-To: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6771C@Bloodymary.ironwillgames.com>

I assume you're trying to write a new target? If so, you can do
something like this, with nested try/catch and a duplication of the
finally code:

try {
  try {
    <tryCode>
  } catch ( ExceptionType1 ) {
    <handler>
  }
} catch ( ... ) {
  <finallyCode>
  throw;
}
<finallyCode>

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rick Mann
Sent: Monday, January 19, 2009 1:39 PM
To: antlr-interest Interest
Subject: [antlr-interest] Handling 'finally' in language target that
doesn'thave 'finally'

In a language like C++, which stupidly doesn't support "finally",  
what's the right way to write a grammar? To just not use "finally" in  
it, and use init & after? Is there a way to signal to ANTLR (from the  
back-end implementation) that finally should not be allowed?

TIA,
-- 
Rick


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rmann at latencyzero.com  Mon Jan 19 12:07:47 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 12:07:47 -0800
Subject: [antlr-interest] Handling 'finally' in language target that
	doesn't have 'finally'
In-Reply-To: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
Message-ID: <D079B8F1-1F43-420A-B0C2-A5019D6443D9@latencyzero.com>


On Jan 19, 2009, at 11:53:57, Gavin Lambert wrote:

> There's actually no technical reason (from a language standpoint)  
> why "finally" couldn't be supported in C/C++ language targets (apart  
> from the fact that there isn't a C++ target yet for v3).
>
> I don't know if it *is* actually supported, but it could be.


Hmm. I thought I had a pretty good grasp of C++. It lacks a "finally"  
keyword, which means you implement automatic-code-execution-on-scope- 
exit with RAII. This requires instantiating objects on the stack at  
appropriate places. This is fine, if sometimes cumbersome, but I  
wanted to avoid letting someone put "finally" in their grammar.

On Jan 19, 2009, at 11:56:47, Wacek Kusnierczyk wrote:

> Rick Mann wrote:
>> In a language like C++, which stupidly doesn't support "finally",
>>
> you might want to read what the designers of c++ have to say in this
> matter before you make such judgments:
>
> http://www.research.att.com/~bs/bs_faq2.html#finally

Yeah, I love C++, really, but I disagree with the creators/sustainers  
on a few issues. This is one. I love that I can use RAII, and often it  
is better, but frequently you have one-off cleanup that is much more  
compactly written in a finally clause. There's no good reason not to  
have both.

On Jan 19, 2009, at 12:00:29, Sam Harwell wrote:

> I assume you're trying to write a new target? If so, you can do
> something like this, with nested try/catch and a duplication of the
> finally code:
>
> try {
>  try {
>    <tryCode>
>  } catch ( ExceptionType1 ) {
>    <handler>
>  }
> } catch ( ... ) {
>  <finallyCode>
>  throw;
> }
> <finallyCode>

An interesting approach, but a bit icky, don't you think? If you can  
guarantee a superclass to the exceptions, it could be a bit tidier,  
perhaps, but really, C++? Can't we just have finally already? :-)

Anyway, I guess I have my answer. Thanks!

-- 
Rick


From mike at mpagel.de  Mon Jan 19 12:07:50 2009
From: mike at mpagel.de (Mike Pagel)
Date: Mon, 19 Jan 2009 21:07:50 +0100
Subject: [antlr-interest] ANTLR build step problem (using MS Visual
 Studio 2008, C#)
In-Reply-To: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
References: <3a9736db0901180757r2e8f42fyb241fa524cc0d909@mail.gmail.com>
Message-ID: <4974DD96.6050201@mpagel.de>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090119/56949635/attachment.html 

From antlr at jazillian.com  Mon Jan 19 12:13:40 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 19 Jan 2009 15:13:40 -0500
Subject: [antlr-interest] Syntax validation using antlr
In-Reply-To: <26e9b8c20901180824g6f0d315dw9328eb6739481c46@mail.gmail.com>
References: <26e9b8c20901180824g6f0d315dw9328eb6739481c46@mail.gmail.com>
Message-ID: <4974DEF4.9010402@jazillian.com>

Use ANTLR, but if you're just checking syntax and not doing any other
processing, you won't need to build an AST.

Buy "The Definitive ANTLR Reference", try a few simple examples from the
book. Then download the C grammar and try that. Read the 
"Error Reporting and Recovery" chapter of the book to produce good 
error messages. Finally, if your language really is a lot like C++,
download the C++ grammar. At some point, you'll realize that the
C++ grammar is, like the language itself, nearly infinite in complexity.
If your language really is like C++, you'll probably realize that
what you're trying is impossible. But if it's more like C with a few
extras, is should be doable.

Beware: the ANTLRv3 C grammar is new and may not be quite right yet,
and the ANTLRv3 C++ grammar doesn't exist yet.

Andy


SSG JJV wrote:
> Hello AntlrMasters,
> 
> I want to develop an antlr program that validates the syntax of a
> proprietary language similar to C++ language. For ex:
> 
> INT a, b;
> 
> I want to validate syntax and throw errors in case of syntactical errors in
> the program.
> In the above example, say if user misses semicolon at the end, i want to
> throw appropriate message to the user.
> 
> Should i use AST approach? Are there any sample 'validation programs
> developed in antlr' already available? Please advice.
> 
> Any initial guidance will be of great help.
> 
> Thanks,
> Munna
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rmann at latencyzero.com  Mon Jan 19 12:12:41 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 12:12:41 -0800
Subject: [antlr-interest] Handling 'finally' in language target that
	doesn't have 'finally'
In-Reply-To: <gl2liu$4r9$2@ger.gmane.org>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
	<gl2liu$4r9$2@ger.gmane.org>
Message-ID: <BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>


On Jan 19, 2009, at 11:50:54, Sohail Somani wrote:

> I'm pretty sure you've got it backwards. Languages that /require/
> finally are stupid.
>
> For everything else, there's ScopeGuard/RAII.


I'm not suggesting that C++ should drop support for RAII. I'm saying  
it's stupid that it doesn't also support finally.

C++ is about making it easier to write complex code. It can be argued  
that it's syntactic sugar (as is any language). Not supporting finally  
means often times forcing the user to write more code, not less, to  
accomplish a thing.

I also love Java, and wish it supported RAII (but not at the expense  
of finally). There's no reason not to have both.

-- 
Rick


From sohail at worklogassistant.com  Mon Jan 19 12:25:32 2009
From: sohail at worklogassistant.com (Sohail Somani)
Date: Mon, 19 Jan 2009 12:25:32 -0800
Subject: [antlr-interest] Handling 'finally' in language target that
	doesn't have 'finally'
In-Reply-To: <BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>	<gl2liu$4r9$2@ger.gmane.org>
	<BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
Message-ID: <gl2njs$cn2$1@ger.gmane.org>

Rick Mann wrote:
> On Jan 19, 2009, at 11:50:54, Sohail Somani wrote:
> 
>> I'm pretty sure you've got it backwards. Languages that /require/
>> finally are stupid.
>>
>> For everything else, there's ScopeGuard/RAII.
> 
> 
> I'm not suggesting that C++ should drop support for RAII. I'm saying  
> it's stupid that it doesn't also support finally.
> 
> C++ is about making it easier to write complex code. It can be argued  
> that it's syntactic sugar (as is any language). Not supporting finally  
> means often times forcing the user to write more code, not less, to  
> accomplish a thing.
> 
> I also love Java, and wish it supported RAII (but not at the expense  
> of finally). There's no reason not to have both.

I agree that it is definitely syntactic sugar for C++. However, more
than one level of resource management in a function and you get a maze
of finally blocks which are sometimes impenetrable.

So finally is nice to have, but I don't consider it very scalable for
this reason.

Sorry for not answering your original question, hope someone else does :-)

-- 
Sohail Somani
Hassle-free time tracking for JIRA

Website: http://worklogassistant.com
Blog   : http://blog.worklogassistant.com
Twitter: http://twitter.com/somanisoftware


From sharwell at pixelminegames.com  Mon Jan 19 12:27:10 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 19 Jan 2009 14:27:10 -0600
Subject: [antlr-interest] Handling 'finally' in language target
	thatdoesn't have 'finally'
In-Reply-To: <BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com><gl2liu$4r9$2@ger.gmane.org>
	<BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6771D@Bloodymary.ironwillgames.com>

This isn't really isn't the list for the topic of whether or not C++
should/shouldn't support ___. I'm saying this primarily because it's a
grinding point for various people and sure to lead to harsh feelings
(expressed in replies or not). For the sake of creating an ANTLR target
(I think that's the real goal?), you have a few options. If you simply
want to disallow finally code in the grammar when the C++ target is
used, make the template for finally code spit out the following if the
finally code is not blank.

#error The C++ target does not support 'finally' blocks in grammars. Use
RAII instead.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rick Mann
Sent: Monday, January 19, 2009 2:13 PM
To: Sohail Somani
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Handling 'finally' in language target
thatdoesn't have 'finally'


On Jan 19, 2009, at 11:50:54, Sohail Somani wrote:

> I'm pretty sure you've got it backwards. Languages that /require/
> finally are stupid.
>
> For everything else, there's ScopeGuard/RAII.


I'm not suggesting that C++ should drop support for RAII. I'm saying  
it's stupid that it doesn't also support finally.

C++ is about making it easier to write complex code. It can be argued  
that it's syntactic sugar (as is any language). Not supporting finally  
means often times forcing the user to write more code, not less, to  
accomplish a thing.

I also love Java, and wish it supported RAII (but not at the expense  
of finally). There's no reason not to have both.

-- 
Rick


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rmann at latencyzero.com  Mon Jan 19 12:32:09 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 12:32:09 -0800
Subject: [antlr-interest] Handling 'finally' in language target
	thatdoesn't have 'finally'
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA6771D@Bloodymary.ironwillgames.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com><gl2liu$4r9$2@ger.gmane.org>
	<BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA6771D@Bloodymary.ironwillgames.com>
Message-ID: <E11FD866-5A69-45CE-BDFE-B4D6E39B0B05@latencyzero.com>


On Jan 19, 2009, at 12:27:10, Sam Harwell wrote:

> This isn't really isn't the list for the topic of whether or not C++
> should/shouldn't support ___. I'm saying this primarily because it's a
> grinding point for various people and sure to lead to harsh feelings
> (expressed in replies or not). For the sake of creating an ANTLR  
> target
> (I think that's the real goal?), you have a few options. If you simply
> want to disallow finally code in the grammar when the C++ target is
> used, make the template for finally code spit out the following if the
> finally code is not blank.

Agreed.

> #error The C++ target does not support 'finally' blocks in grammars.  
> Use
> RAII instead.

Thanks, that's probably the best I can hope for. I would've preferred  
for the ANTLR tool to issue the warning, but I have many bigger fish  
to fry at the moment.

-- 
Rick


From parrt at cs.usfca.edu  Mon Jan 19 15:44:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 19 Jan 2009 15:44:56 -0800
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <4931B730.7070903@gmx.de>
References: <4931B730.7070903@gmx.de>
Message-ID: <7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>

That is an interesting idea. I am cc'ing the  interest list. sorry for  
the long delay.

I take it that you are suggesting the following

grammar T;
options {
	language = ...;
	version = "3.1.1";
}

Ter
On Nov 29, 2008, at 1:42 PM, Johannes Luber wrote:

> Hi!
>
> Thinking about the upcoming dialects of ANTLR grammars (one for each
> version, which aren't totally upwardscompatible), I had this idea.  
> Would
> it make sense to make an option named "version" mandatory, which  
> simply
> records the used ANTLR version for writing. It's mandatory because
> people don't seem ever to write a comment explaining the requirements
> (myself included ;). It makes easier for people to diagnose problems
> with a third-party grammar.
>
> Johannes


From g.r.vansickle at att.net  Mon Jan 19 17:38:14 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 19 Jan 2009 19:38:14 -0600
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
Message-ID: <EA081E144D5A4CB1A99765A184C5900C@DFW5RB41>


> From:  Terence Parr
> 
> That is an interesting idea. I am cc'ing the  interest list. 
> sorry for the long delay.
> 
> I take it that you are suggesting the following
> 
> grammar T;
> options {
> 	language = ...;
> 	version = "3.1.1";
> }
> 

FWIW, when I become King Of The World, all languages will require such an
indication of what version they were written for.

-- 
Gary R. Van Sickle
 


From rmann at latencyzero.com  Mon Jan 19 17:50:58 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 17:50:58 -0800
Subject: [antlr-interest] Proposal to make writing language targets a bit
	easier
Message-ID: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>

I have grander plans, but this suggestion I think is easy to implement.

First, re-org the source directories so that the runtime, Java  
and .stg files for a given language are kept under a combined  
directory structure. The Maven build would probably need to be  
modified to allow it to find the Java files in an arbitrary location  
(this way, I can work on my language target and check it into my own  
version control until it's ready for submission).

Second, modify the 'language' option to accept an absolute path. The  
ANTLR tool can look for a path separator in the value, and it would  
use this directory (or some directory under it) on disk, rather than  
relative to the classpath, for loading the .stg files. The actual  
language string would come from the last component of the path. This  
allows me to skip recompiling for changes in .stg files alone, and  
dramatically speeds up development.

I hard-coded the path in ANTLR to point to my templates directory, so  
it's working for me, but this should be a pretty easy change to make.  
I'd happily code it up and submit a patch, if you like (although I may  
miss some places where it's used).

-- 
Rick


From sharwell at pixelminegames.com  Mon Jan 19 18:16:13 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 19 Jan 2009 20:16:13 -0600
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>

Here's what I'm working on in the C# port:

If a target class is not present in the executable (Antlr3.exe), it
tries to load Antlr3.Target.<targetname>.dll, then check for the target
in there. Then it has the target return a StringTemplateGroup that knows
the location of the .stg file, whether embedded in the satellite
assembly or located on disk.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rick Mann
Sent: Monday, January 19, 2009 7:51 PM
To: antlr-interest Interest
Subject: [antlr-interest] Proposal to make writing language targets a
biteasier

I have grander plans, but this suggestion I think is easy to implement.

First, re-org the source directories so that the runtime, Java  
and .stg files for a given language are kept under a combined  
directory structure. The Maven build would probably need to be  
modified to allow it to find the Java files in an arbitrary location  
(this way, I can work on my language target and check it into my own  
version control until it's ready for submission).

Second, modify the 'language' option to accept an absolute path. The  
ANTLR tool can look for a path separator in the value, and it would  
use this directory (or some directory under it) on disk, rather than  
relative to the classpath, for loading the .stg files. The actual  
language string would come from the last component of the path. This  
allows me to skip recompiling for changes in .stg files alone, and  
dramatically speeds up development.

I hard-coded the path in ANTLR to point to my templates directory, so  
it's working for me, but this should be a pretty easy change to make.  
I'd happily code it up and submit a patch, if you like (although I may  
miss some places where it's used).

-- 
Rick


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rmann at latencyzero.com  Mon Jan 19 18:26:29 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 18:26:29 -0800
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
Message-ID: <65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>


On Jan 19, 2009, at 18:16:13, Sam Harwell wrote:

> Here's what I'm working on in the C# port:
>
> If a target class is not present in the executable (Antlr3.exe), it
> tries to load Antlr3.Target.<targetname>.dll, then check for the  
> target
> in there. Then it has the target return a StringTemplateGroup that  
> knows
> the location of the .stg file, whether embedded in the satellite
> assembly or located on disk.


I'm not sure I understand. Did you modify the ANTLR tool code to do  
this? I don't really know how loading, etc. works on Windows. I didn't  
see anything in the XYZTarget.java file that lets one easily change  
where to find the other bits.

I changed CodeGenerator.loadTemplates() to do it.

-- 
Rick


From sharwell at pixelminegames.com  Mon Jan 19 19:05:38 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 19 Jan 2009 21:05:38 -0600
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
	<65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67727@Bloodymary.ironwillgames.com>

I ported the entire tool to C#. This is in that ported code, not in the
original Java code. I needed it so I could make changes to the templates
without recompiling the entire tool.

Sam

-----Original Message-----
From: Rick Mann [mailto:rmann at latencyzero.com] 
Sent: Monday, January 19, 2009 8:26 PM
To: Sam Harwell
Cc: antlr-interest Interest
Subject: Re: [antlr-interest] Proposal to make writing language targets
a biteasier


On Jan 19, 2009, at 18:16:13, Sam Harwell wrote:

> Here's what I'm working on in the C# port:
>
> If a target class is not present in the executable (Antlr3.exe), it
> tries to load Antlr3.Target.<targetname>.dll, then check for the  
> target
> in there. Then it has the target return a StringTemplateGroup that  
> knows
> the location of the .stg file, whether embedded in the satellite
> assembly or located on disk.


I'm not sure I understand. Did you modify the ANTLR tool code to do  
this? I don't really know how loading, etc. works on Windows. I didn't  
see anything in the XYZTarget.java file that lets one easily change  
where to find the other bits.

I changed CodeGenerator.loadTemplates() to do it.

-- 
Rick


From rmann at latencyzero.com  Mon Jan 19 19:07:37 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Mon, 19 Jan 2009 19:07:37 -0800
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67727@Bloodymary.ironwillgames.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
	<65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67727@Bloodymary.ironwillgames.com>
Message-ID: <9D7FE32E-3066-46EB-944A-54C21AEEED7F@latencyzero.com>


On Jan 19, 2009, at 19:05:38, Sam Harwell wrote:

> I ported the entire tool to C#. This is in that ported code, not in  
> the
> original Java code. I needed it so I could make changes to the  
> templates
> without recompiling the entire tool.

Oh! Now I understand. Seems like you could do something similar to  
what I did. Mine's hard-coded to check for the name of my target, and  
if it sees that, it changes the StringTemplate loader and location to  
get it off a directory of my choosing. The change I proposed should  
make that nicely generalized to all users.

>
>
> Sam
>
> -----Original Message-----
> From: Rick Mann [mailto:rmann at latencyzero.com]
> Sent: Monday, January 19, 2009 8:26 PM
> To: Sam Harwell
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] Proposal to make writing language  
> targets
> a biteasier
>
>
> On Jan 19, 2009, at 18:16:13, Sam Harwell wrote:
>
>> Here's what I'm working on in the C# port:
>>
>> If a target class is not present in the executable (Antlr3.exe), it
>> tries to load Antlr3.Target.<targetname>.dll, then check for the
>> target
>> in there. Then it has the target return a StringTemplateGroup that
>> knows
>> the location of the .stg file, whether embedded in the satellite
>> assembly or located on disk.
>
>
> I'm not sure I understand. Did you modify the ANTLR tool code to do
> this? I don't really know how loading, etc. works on Windows. I didn't
> see anything in the XYZTarget.java file that lets one easily change
> where to find the other bits.
>
> I changed CodeGenerator.loadTemplates() to do it.
>
> -- 
> Rick
>

-- 
Rick


From sidharth.kuruvila at gmail.com  Mon Jan 19 19:21:40 2009
From: sidharth.kuruvila at gmail.com (Sidharth Kuruvila)
Date: Tue, 20 Jan 2009 08:51:40 +0530
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <9D7FE32E-3066-46EB-944A-54C21AEEED7F@latencyzero.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
	<65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67727@Bloodymary.ironwillgames.com>
	<9D7FE32E-3066-46EB-944A-54C21AEEED7F@latencyzero.com>
Message-ID: <2ab2ed550901191921u387a0515t6a6aa238f0c367a6@mail.gmail.com>

It should be enough to add your Target's java directory to the classpath.
So you don't need to physically put the code into the antlr source.

On Tue, Jan 20, 2009 at 8:37 AM, Rick Mann <rmann at latencyzero.com> wrote:

>
> On Jan 19, 2009, at 19:05:38, Sam Harwell wrote:
>
> > I ported the entire tool to C#. This is in that ported code, not in
> > the
> > original Java code. I needed it so I could make changes to the
> > templates
> > without recompiling the entire tool.
>
> Oh! Now I understand. Seems like you could do something similar to
> what I did. Mine's hard-coded to check for the name of my target, and
> if it sees that, it changes the StringTemplate loader and location to
> get it off a directory of my choosing. The change I proposed should
> make that nicely generalized to all users.
>
> >
> >
> > Sam
> >
> > -----Original Message-----
> > From: Rick Mann [mailto:rmann at latencyzero.com]
> > Sent: Monday, January 19, 2009 8:26 PM
> > To: Sam Harwell
> > Cc: antlr-interest Interest
> > Subject: Re: [antlr-interest] Proposal to make writing language
> > targets
> > a biteasier
> >
> >
> > On Jan 19, 2009, at 18:16:13, Sam Harwell wrote:
> >
> >> Here's what I'm working on in the C# port:
> >>
> >> If a target class is not present in the executable (Antlr3.exe), it
> >> tries to load Antlr3.Target.<targetname>.dll, then check for the
> >> target
> >> in there. Then it has the target return a StringTemplateGroup that
> >> knows
> >> the location of the .stg file, whether embedded in the satellite
> >> assembly or located on disk.
> >
> >
> > I'm not sure I understand. Did you modify the ANTLR tool code to do
> > this? I don't really know how loading, etc. works on Windows. I didn't
> > see anything in the XYZTarget.java file that lets one easily change
> > where to find the other bits.
> >
> > I changed CodeGenerator.loadTemplates() to do it.
> >
> > --
> > Rick
> >
>
> --
> Rick
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
I am but a man.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090120/bdfbc95e/attachment.html 

From JALuber at gmx.de  Tue Jan 20 01:11:11 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 20 Jan 2009 10:11:11 +0100
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
Message-ID: <20090120091111.287390@gmx.net>

> That is an interesting idea. I am cc'ing the  interest list. sorry for  
> the long delay.
> 
> I take it that you are suggesting the following
> 
> grammar T;
> options {
> 	language = ...;
> 	version = "3.1.1";
> }

I do.

Johannes
> 
> Ter
> On Nov 29, 2008, at 1:42 PM, Johannes Luber wrote:
> 
> > Hi!
> >
> > Thinking about the upcoming dialects of ANTLR grammars (one for each
> > version, which aren't totally upwardscompatible), I had this idea.  
> > Would
> > it make sense to make an option named "version" mandatory, which  
> > simply
> > records the used ANTLR version for writing. It's mandatory because
> > people don't seem ever to write a comment explaining the requirements
> > (myself included ;). It makes easier for people to diagnose problems
> > with a third-party grammar.
> >
> > Johannes

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From JALuber at gmx.de  Tue Jan 20 01:27:44 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 20 Jan 2009 10:27:44 +0100
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <20090120091111.287390@gmx.net>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
	<20090120091111.287390@gmx.net>
Message-ID: <20090120092744.314150@gmx.net>

> > That is an interesting idea. I am cc'ing the  interest list. sorry for  
> > the long delay.
> > 
> > I take it that you are suggesting the following
> > 
> > grammar T;
> > options {
> > 	language = ...;
> > 	version = "3.1.1";
> > }
> 
> I do.
> 
> Johannes

I just thought about an improvement: ANTLR should warn the user, if the version isn't identical to the one of the tool. That way people not only see a potential issue, but are more inclined to update the string.

Johannes
> > 
> > Ter
> > On Nov 29, 2008, at 1:42 PM, Johannes Luber wrote:
> > 
> > > Hi!
> > >
> > > Thinking about the upcoming dialects of ANTLR grammars (one for each
> > > version, which aren't totally upwardscompatible), I had this idea.  
> > > Would
> > > it make sense to make an option named "version" mandatory, which  
> > > simply
> > > records the used ANTLR version for writing. It's mandatory because
> > > people don't seem ever to write a comment explaining the requirements
> > > (myself included ;). It makes easier for people to diagnose problems
> > > with a third-party grammar.
> > >
> > > Johannes
> 
> -- 
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen:
> http://www.gmx.net/de/go/multimessenger
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From antlr at mirality.co.nz  Tue Jan 20 01:50:59 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 20 Jan 2009 22:50:59 +1300
Subject: [antlr-interest] Handling 'finally' in language target that
 doesn't have 'finally'
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA6771D@Bloodymary.ironwill
	games.com>
References: <27FA5FD5-8B59-4E23-B0B8-5999A317BE91@latencyzero.com>
	<gl2liu$4r9$2@ger.gmane.org>
	<BAE9C2DD-9685-4AC7-BA86-48610A28EAE6@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA6771D@Bloodymary.ironwillgames.com>
Message-ID: <20090120095113.12BCE3418152@www.antlr.org>

At 09:27 20/01/2009, Sam Harwell wrote:
 >For the sake of creating an ANTLR target (I think that's
 >the real goal?), you have a few options. If you simply
 >want to disallow finally code in the grammar when the
 >C++ target is used, make the template for finally code
 >spit out the following if the finally code is not blank.
 >
 >#error The C++ target does not support 'finally' blocks in
 >grammars. Use RAII instead.

Sure, you could do that, but why not just make it work?

As you posted earlier, any psuedoblock:

try
{
   [a]
}
finally
{
   [b]
}

is exactly identical (in terms of behaviour) to this C++ code:

try
{
   [a]
}
catch(...)
{
   [b]
   throw;
}
{
   [b]
}

(Note the extra braces at the end; that's to keep the variable 
scoping clean.  I guess if you're ultra-paranoid, you could wrap 
the whole thing in another set, since technically the first is a 
single statement while the second is two statements.  But that's 
usually not an issue.)

Sure, it's a little messier than using RAII, but that's just an 
incentive to use RAII wherever possible.  But if you really want 
finally-like behaviour without RAII (eg. to support the ANTLR 
grammar keyword), then it's trivial to add.  (It's even more 
trivial when using a template or codegen like ANTLR, since the 
duplication of [b] will only appear in the generated file, not the 
source file.  And the generated code is ugly anyway, so it doesn't 
matter so much.)


From antlr at mirality.co.nz  Tue Jan 20 01:54:42 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 20 Jan 2009 22:54:42 +1300
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <20090120092744.314150@gmx.net>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
	<20090120091111.287390@gmx.net> <20090120092744.314150@gmx.net>
Message-ID: <20090120095451.D7B24341840B@www.antlr.org>

At 22:27 20/01/2009, Johannes Luber wrote:
 >> > options {
 >> > 	language = ...;
 >> > 	version = "3.1.1";
 >> > }
 >
 >I just thought about an improvement: ANTLR should warn the user, 
if
 >the version isn't identical to the one of the tool. That way 
people
 >not only see a potential issue, but are more inclined to update 
the
 >string.

I agree with both of those.


From egor at sun.com  Tue Jan 20 02:49:12 2009
From: egor at sun.com (Egor Ushakov)
Date: Tue, 20 Jan 2009 13:49:12 +0300
Subject: [antlr-interest] grammar highlighting in Netbeans
In-Reply-To: <4940FC78.20209@sun.com>
References: <4940FC78.20209@sun.com>
Message-ID: <4975AC28.7050404@sun.com>

According to:
http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444

They released version 0.2 with:
- Code completion
- Hyperlink
- Mark Occurrences
- Navigator for tokens
- Improved accuracy

I have just tried it and despite some bugs it is wonderful!

"Must have" if you use Netbeans and ANTLR!

Egor

Egor Ushakov wrote:
> Hi all,
>
> I've just found a nice Netbeans plugin adding support for .g files:
> http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444
>
> As I understand development has just started, so for now it only can 
> highlight .g file and fill navigator.
> But it is much more easier to edit grammar files with that!
>
> Egor
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From g.r.vansickle at att.net  Tue Jan 20 03:36:56 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 20 Jan 2009 05:36:56 -0600
Subject: [antlr-interest] C target, C grammar + AST = missing *_SymbolsPop()
Message-ID: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>

Hi guys,

I'm trying to make the C grammar in examples-v3 generate an AST, but for
some reason it appears to not be generating ScopePop()'s for the dynamic
scopes; for every dynamic scope, I get an error like the following:

"ss9_combined_lexer_parserParser.cpp: In function
`ss9_combined_lexer_parserParser_translation_unit_return
translation_unit(ss9_combined_lexer_parserParser_Ctx_struct*)':
ss9_combined_lexer_parserParser.cpp:12842: error:
`ptranslation_unit_SymbolsPop' undeclared (first use this function)"

Sure enough, no such function exists.  Things work fine if I don't declare
"output=AST"; in that case, the only SymbolsPop() function generated or
called appears to be pss9_combined_lexer_parserParser_SymbolsPop(), i.e. all
dynamic scope code calls the same ScopePop().  Does this ring any bells for
anybody?

-- 
Gary R. Van Sickle


From JALuber at gmx.de  Tue Jan 20 03:41:37 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 20 Jan 2009 12:41:37 +0100
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <20090120095451.D7B24341840B@www.antlr.org>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
	<20090120091111.287390@gmx.net> <20090120092744.314150@gmx.net>
	<20090120095451.D7B24341840B@www.antlr.org>
Message-ID: <20090120114137.34410@gmx.net>

> At 22:27 20/01/2009, Johannes Luber wrote:
>  >> > options {
>  >> > 	language = ...;
>  >> > 	version = "3.1.1";
>  >> > }
>  >
>  >I just thought about an improvement: ANTLR should warn the user, 
> if
>  >the version isn't identical to the one of the tool. That way 
> people
>  >not only see a potential issue, but are more inclined to update 
> the
>  >string.
> 
> I agree with both of those.

Another improvement would be to allow a comma-separated list. With it one can record all versions of ANTLR, with which the grammar works without any modifications. Once one does a backwards-incompatible upgrade (be it bugfix, changed ANTLR behaviour or the use of a new feature), the list is cleared. And if someone is unsure if a grammar change makes things incompatible, he has to check merely the latest given version.

Johannes
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From g.r.vansickle at att.net  Tue Jan 20 04:22:09 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 20 Jan 2009 06:22:09 -0600
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <20090120114137.34410@gmx.net>
References: <4931B730.7070903@gmx.de><7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu><20090120091111.287390@gmx.net>
	<20090120092744.314150@gmx.net><20090120095451.D7B24341840B@www.antlr.org>
	<20090120114137.34410@gmx.net>
Message-ID: <673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>

> From:  Johannes Luber
> 
> > At 22:27 20/01/2009, Johannes Luber wrote:
> >  >> > options {
> >  >> > 	language = ...;
> >  >> > 	version = "3.1.1";
> >  >> > }
> >  >
> >  >I just thought about an improvement: ANTLR should warn 
> the user, if  
> > >the version isn't identical to the one of the tool. That 
> way people  
> > >not only see a potential issue, but are more inclined to 
> update the  
> > >string.
> > 
> > I agree with both of those.
> 
> Another improvement would be to allow a comma-separated list. 
> With it one can record all versions of ANTLR, with which the 
> grammar works without any modifications.

The trouble with that is that it forces the user to predict the future.
Maybe it will work with the next fifty versions, which may only have changes
which don't affect the ultimate interpretation, such as bug fixes, speed
improvements, and the like, but there's no way to specify that.  

The only way this sort of thing works is for the source file to declare
"this is the standard I was written to".  It is then up to the interpreters,
past, present, and future, to either modify their interpretation to match
that of the specified standard (i.e. future ANTLR versions "degrading" their
interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a grammar
that says its written to the ANTLR 8.5.6 standard, which it of course has no
idea what that even is, so it can't possibly interpret it).

A halfway solution used by some (autoconf comes to mind) is to list a
minimum required version of the interpreter.  It's a bit of a fine
distinction, but this tends to be problematic in the opposite direction: it
forces the developer of the interpreter (i.e. Terence et al) to never break
backward compatability - i.e. always have one foot in the past.  It also
doesn't actually tell anyone anything about the source; does
"requires_ANTLR_version = 3.1.1" mean it's using the "^(" or the "#("
rewrite syntax?  No way to know until you hit the first one, so why bother
with the "requires" at all?

> Once one does a 
> backwards-incompatible upgrade (be it bugfix, changed ANTLR 
> behaviour or the use of a new feature), the list is cleared. 

How do you do that once your grammar leaves your PC?  Your customer decides
to upgrade his ANTLR install and now your program won't compile.

> And if someone is unsure if a grammar change makes things 
> incompatible, he has to check merely the latest given version.
> 

-- 
Gary R. Van Sickle


From JALuber at gmx.de  Tue Jan 20 05:12:44 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 20 Jan 2009 14:12:44 +0100
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
References: <4931B730.7070903@gmx.de><7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu><20090120091111.287390@gmx.net>
	<20090120092744.314150@gmx.net><20090120095451.D7B24341840B@www.antlr.org>
	<20090120114137.34410@gmx.net>
	<673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
Message-ID: <20090120131244.210870@gmx.net>


> > From:  Johannes Luber
> > Another improvement would be to allow a comma-separated list. 
> > With it one can record all versions of ANTLR, with which the 
> > grammar works without any modifications.
> 
> The trouble with that is that it forces the user to predict the future.
> Maybe it will work with the next fifty versions, which may only have
> changes
> which don't affect the ultimate interpretation, such as bug fixes, speed
> improvements, and the like, but there's no way to specify that.  
> 
> The only way this sort of thing works is for the source file to declare
> "this is the standard I was written to".  It is then up to the
> interpreters,
> past, present, and future, to either modify their interpretation to match
> that of the specified standard (i.e. future ANTLR versions "degrading"
> their
> interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a grammar
> that says its written to the ANTLR 8.5.6 standard, which it of course has
> no
> idea what that even is, so it can't possibly interpret it).
> 
> A halfway solution used by some (autoconf comes to mind) is to list a
> minimum required version of the interpreter.  It's a bit of a fine
> distinction, but this tends to be problematic in the opposite direction:
> it
> forces the developer of the interpreter (i.e. Terence et al) to never
> break
> backward compatability - i.e. always have one foot in the past.  It also
> doesn't actually tell anyone anything about the source; does
> "requires_ANTLR_version = 3.1.1" mean it's using the "^(" or the "#("
> rewrite syntax?  No way to know until you hit the first one, so why bother
> with the "requires" at all?

You misunderstand the intent. This option doesn't force ANTLR to behave in a particular way - it isn't built for supporting different modes and shouldn't be made this way. An example should makes this clearer:

A grammar is written for "3.2". Now one uses "3.2.1". ANTLR compares the strings and says: "Hey, the author did only use 3.2. Using me may cause problems. Proceed at your own peril." If everything works out, the user can add "3.2.1" to suppress the warning.

A few months later 3.3 comes out. Ter decided to scrap the current rewrite approach and to switch over ANTLR/Yggdrasil". The user switches to 3.3, tries to generate the source code, but receives a stream of error messages. And the message is:  "Hey, the author did only use 3.2 and 3.2.1. Using me may cause problems. Proceed at your own peril." Then the user knows that the cause is in the format switch (assuming he followed ANTLR's evolution), instead having to dig into the file.
> 
> > Once one does a 
> > backwards-incompatible upgrade (be it bugfix, changed ANTLR 
> > behaviour or the use of a new feature), the list is cleared. 
> 
> How do you do that once your grammar leaves your PC?  Your customer
> decides
> to upgrade his ANTLR install and now your program won't compile.

See above example, but basically you don't and the user is at least warned of the possibility of breakage.

Johannes
> 
> > And if someone is unsure if a grammar change makes things 
> > incompatible, he has to check merely the latest given version.
> > 
> 
> -- 
> Gary R. Van Sickle
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From sven.van.echelpoel at empolis.com  Tue Jan 20 05:33:50 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Tue, 20 Jan 2009 14:33:50 +0100
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption goes through
	the roof with	rewrite rules
Message-ID: <1232458430.6334.37.camel@cartman>

Hi,

after passing a piece of non-trivial source code through the parser of
the language we created, memory consumption went through the roof (it
immediately consumed the full 3GB of memory on my 64 bit Ubuntu box) and
this for a source file of a measly 14K characters. Using a debugger and
a profiler I immediately came to the same conclusion as this poster:
http://preview.tinyurl.com/a94qgn. Recursive invocation of rewrite rules
results in addChild() and dupTree() being invoked millions of times.

While his example was slightly contrived, because of the problem domain
our language is highly recursive in nature. And although the source file
was slightly bigger than a toy sample, it is by no means what we intend
to use it for.

So, desperately wanting to get to the bottom of this I used Jim Idle's
response to the aforementioned post (emphasis mine):

<quote>
That looks like a bug - in fact, I think I remember saying to myself 
"now I have put in factories for everything, I should *not call dup on 
the trees*! However, I also remember doing that, so perhaps it is 
something to do with your grammar) Sorry, but I still won't be able to 
look in to this until the weekend :-( 
</quote>

to determine that I could maybe short-circuit the code in dupTree() in
'antlr3basetree.c'.

Here's what I did:

static void    *
dupTree		(pANTLR3_BASE_TREE tree)
{
  /* Fixes memory explosion when using rewrite rules */
  return tree; 
  /* Rest of code removed */
}

in other words, instead of duplicating the tree, I just return it. This
seems to solve the problem. Memory consumption is back to normal and the
code seems to run OK.

The questions that I have are these:

1) Is this workaround valid or are there some unforeseen bodies still
left in the closet?
2) If this is a bug, as was indicated in the response to the OP, will it
get fixed in one of the following released of ANTLR?

Thanks for the input,

Sven


From Dennis.Benzinger at gmx.net  Tue Jan 20 06:55:15 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Tue, 20 Jan 2009 15:55:15 +0100
Subject: [antlr-interest] Where is mismatchRecover() in the Java target?
Message-ID: <4975E5D3.2030905@gmx.net>

Hi!

The API documentation for BaseRecognizer says that in order to turn off
single token insertion or deletion recovery I need to override
mismatchRecover()
<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#6aabf9eec24d05b14993c953c027d9d0>.
But didn't find any definition or invocation of this method in the Java
runtime.

In which class is this method defined?


Thanks for your help,
Dennis Benzinger

From sharwell at pixelminegames.com  Tue Jan 20 08:03:18 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 20 Jan 2009 10:03:18 -0600
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption goes
	throughthe roof with	rewrite rules
In-Reply-To: <1232458430.6334.37.camel@cartman>
References: <1232458430.6334.37.camel@cartman>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6772C@Bloodymary.ironwillgames.com>

I've seen some cases where the lexer will emit a 0-length token and not
proceed. This creates empty tokens until the system runs out of memory.
I'm not familiar with the C target's internals, so maybe someone else
can direct you to the correct function to watch for this behavior?

Now I wish I saved a copy of a grammar that showed this behavior. :\ I
remember its cause and solution were relatively easy to identify at the
time, so I fixed my grammar and moved on.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sven Van
Echelpoel
Sent: Tuesday, January 20, 2009 7:34 AM
To: antlr-interest Interest
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption goes
throughthe roof with rewrite rules

Hi,

after passing a piece of non-trivial source code through the parser of
the language we created, memory consumption went through the roof (it
immediately consumed the full 3GB of memory on my 64 bit Ubuntu box) and
this for a source file of a measly 14K characters. Using a debugger and
a profiler I immediately came to the same conclusion as this poster:
http://preview.tinyurl.com/a94qgn. Recursive invocation of rewrite rules
results in addChild() and dupTree() being invoked millions of times.

While his example was slightly contrived, because of the problem domain
our language is highly recursive in nature. And although the source file
was slightly bigger than a toy sample, it is by no means what we intend
to use it for.

So, desperately wanting to get to the bottom of this I used Jim Idle's
response to the aforementioned post (emphasis mine):

<quote>
That looks like a bug - in fact, I think I remember saying to myself 
"now I have put in factories for everything, I should *not call dup on 
the trees*! However, I also remember doing that, so perhaps it is 
something to do with your grammar) Sorry, but I still won't be able to 
look in to this until the weekend :-( 
</quote>

to determine that I could maybe short-circuit the code in dupTree() in
'antlr3basetree.c'.

Here's what I did:

static void    *
dupTree		(pANTLR3_BASE_TREE tree)
{
  /* Fixes memory explosion when using rewrite rules */
  return tree; 
  /* Rest of code removed */
}

in other words, instead of duplicating the tree, I just return it. This
seems to solve the problem. Memory consumption is back to normal and the
code seems to run OK.

The questions that I have are these:

1) Is this workaround valid or are there some unforeseen bodies still
left in the closet?
2) If this is a bug, as was indicated in the response to the OP, will it
get fixed in one of the following released of ANTLR?

Thanks for the input,

Sven


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Tue Jan 20 09:26:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 09:26:12 -0800
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>
Message-ID: <49760934.1090905@temporal-wave.com>

Gary R. Van Sickle wrote:
> Hi guys,
>
> I'm trying to make the C grammar in examples-v3 generate an AST, but for
> some reason it appears to not be generating ScopePop()'s for the dynamic
> scopes; for every dynamic scope, I get an error like the following:
>
> "ss9_combined_lexer_parserParser.cpp: In function
> `ss9_combined_lexer_parserParser_translation_unit_return
> translation_unit(ss9_combined_lexer_parserParser_Ctx_struct*)':
> ss9_combined_lexer_parserParser.cpp:12842: error:
> `ptranslation_unit_SymbolsPop' undeclared (first use this function)"
>
> Sure enough, no such function exists.  Things work fine if I don't declare
> "output=AST"; in that case, the only SymbolsPop() function generated or
> called appears to be pss9_combined_lexer_parserParser_SymbolsPop(), i.e. all
> dynamic scope code calls the same ScopePop().  Does this ring any bells for
> anybody?
>   
Doesn't for me. Can you submit your grammar or is this completely 
unchanged from the example?

Jim


From jimi at temporal-wave.com  Tue Jan 20 09:29:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 09:29:40 -0800
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption goes
 through the roof with	rewrite rules
In-Reply-To: <1232458430.6334.37.camel@cartman>
References: <1232458430.6334.37.camel@cartman>
Message-ID: <49760A04.1060707@temporal-wave.com>

Sven Van Echelpoel wrote:

Yes, this is fixed (or should be) in the current source code snapshot. 
Perhaps it isn't and that is why the other poster was creating so many 
tree nodes. That's why I wanted to seen an example. Changing dupTree 
isn't the answer it is higher of the chain where dupTree should not be 
being called. Perhaps I never checked in the fix. I am making some time 
this week for this and other runtime investigation..

Jim
> Hi,
>
> after passing a piece of non-trivial source code through the parser of
> the language we created, memory consumption went through the roof (it
> immediately consumed the full 3GB of memory on my 64 bit Ubuntu box) and
> this for a source file of a measly 14K characters. Using a debugger and
> a profiler I immediately came to the same conclusion as this poster:
> http://preview.tinyurl.com/a94qgn. Recursive invocation of rewrite rules
> results in addChild() and dupTree() being invoked millions of times.
>
> While his example was slightly contrived, because of the problem domain
> our language is highly recursive in nature. And although the source file
> was slightly bigger than a toy sample, it is by no means what we intend
> to use it for.
>
> So, desperately wanting to get to the bottom of this I used Jim Idle's
> response to the aforementioned post (emphasis mine):
>
> <quote>
> That looks like a bug - in fact, I think I remember saying to myself 
> "now I have put in factories for everything, I should *not call dup on 
> the trees*! However, I also remember doing that, so perhaps it is 
> something to do with your grammar) Sorry, but I still won't be able to 
> look in to this until the weekend :-( 
> </quote>
>
> to determine that I could maybe short-circuit the code in dupTree() in
> 'antlr3basetree.c'.
>
> Here's what I did:
>
> static void    *
> dupTree		(pANTLR3_BASE_TREE tree)
> {
>   /* Fixes memory explosion when using rewrite rules */
>   return tree; 
>   /* Rest of code removed */
> }
>
> in other words, instead of duplicating the tree, I just return it. This
> seems to solve the problem. Memory consumption is back to normal and the
> code seems to run OK.
>
> The questions that I have are these:
>
> 1) Is this workaround valid or are there some unforeseen bodies still
> left in the closet?
> 2) If this is a bug, as was indicated in the response to the OP, will it
> get fixed in one of the following released of ANTLR?
>
> Thanks for the input,
>
> Sven
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From antlr at mirality.co.nz  Tue Jan 20 11:16:32 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 21 Jan 2009 08:16:32 +1300
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption goes
 through the roof with rewrite rules
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA6772C@Bloodymary.ironwill
	games.com>
References: <1232458430.6334.37.camel@cartman>
	<86403CA0939415448BCCB83855EFE09AA6772C@Bloodymary.ironwillgames.com>
Message-ID: <20090120191643.D738534183AA@www.antlr.org>

At 05:03 21/01/2009, Sam Harwell wrote:
 >I've seen some cases where the lexer will emit a 0-length token 
and
 >not proceed. This creates empty tokens until the system runs out 
of
 >memory.  I'm not familiar with the C target's internals, so 
maybe
 >someone else can direct you to the correct function to watch for 

 >this behavior?
 >
 >Now I wish I saved a copy of a grammar that showed this 
behavior.
 >:\ I remember its cause and solution were relatively easy to
 >identify at the time, so I fixed my grammar and moved on.

The most common way to get that problem is to use a construct like 
this:

INT: ('0'..'9')*;

Note the use of * instead of +.


From robert.soule at gmail.com  Tue Jan 20 12:16:58 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Tue, 20 Jan 2009 15:16:58 -0500
Subject: [antlr-interest] partial re-write rules
Message-ID: <d1316fd70901201216p2565d6f9sea1129b8c60bed92@mail.gmail.com>

Hi,

I am trying to use re-write rules to build an AST.  In one part
of my grammar, I would like to produce a different AST node
depending on if there is a ';' literal or not.

curly :  '{' blockOrLiteral '}'  -> ^(CURLY blockOrLiteral);

blockOrLiteral :
     ('{') => curly ';'? stmt*          // This is the trouble
      |    // some other choices;

Here, if the ';' exists, I want to create one node, but if not, I want to
create a different node. I can write this as:

   ('{') => curly ';' stmt*     -> ^(FIRST curly stmt*)
 | ('{') => curly  stmt*       -> ^(SECOND curly stmt*)
 | // more choices

But this syntax seems a bit cumbersome. Is there a better way to express this?

thank you,
Robert

From antlr at mirality.co.nz  Tue Jan 20 12:37:48 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 21 Jan 2009 09:37:48 +1300
Subject: [antlr-interest] partial re-write rules
In-Reply-To: <d1316fd70901201216p2565d6f9sea1129b8c60bed92@mail.gmail.co
 m>
References: <d1316fd70901201216p2565d6f9sea1129b8c60bed92@mail.gmail.com>
Message-ID: <20090120203757.88B563418490@www.antlr.org>

At 09:16 21/01/2009, Robert Soule wrote:
 >blockOrLiteral :
 >     ('{') => curly ';'? stmt*          // This is the trouble
 >      |    // some other choices;
 >
 >Here, if the ';' exists, I want to create one node, but if not, 
I
 >want to create a different node. I can write this as:
 >
 >   ('{') => curly ';' stmt*     -> ^(FIRST curly stmt*)
 > | ('{') => curly  stmt*       -> ^(SECOND curly stmt*)
 > | // more choices
 >
 >But this syntax seems a bit cumbersome. Is there a better way to 

 >express this?

Well, it's better to left-factor it, like so:

rule
   : ('{') => curly
       ( ';' stmt* -> ^(FIRST curly stmt*)
       | stmt* -> ^(SECOND curly stmt*)
       )
   | /* other stuff */
   ;

But that's even more cumbersome, if anything :)


From andy.grove at codefutures.com  Tue Jan 20 12:53:14 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Tue, 20 Jan 2009 13:53:14 -0700
Subject: [antlr-interest] Error compiling generated C code (possibly 32/64
	bit conflict?)
Message-ID: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>

Hi,

I installed the ANTLR C runtime (version 3.1.1) and compiled it from  
source successfully on Fedora 10 x86_64 (using the --enable-64bit  
configuration option).

I also generated C code successfully from my grammar.

However, when I attempt to compile the generated code I get a lot of  
type conversion errors such as:

MyLexer.c:1634: error: invalid conversion from 'int' to 'const  
ANTLR3_INT32*'

The code that produces this error is:

/* Transition tables are a table of sub tables, with some tables
  * reused for efficiency.
  */
static const ANTLR3_INT32 * const dfa31_transitions[] =
{
     dfa31_T0, dfa31_T139, dfa31_T171, dfa31_T56, dfa31_T131, dfa31_T36,
     dfa31_T27, dfa31_T147, dfa31_T149, dfa31_T125, dfa31_T170,  
dfa31_T33,


I am using g++ (GCC) 4.3.2 20081105 (Red Hat 4.3.2-7).

Are there any flags I need to set when generating the C source from my  
grammar to make it compile against a 64 bit runtime?

Thanks,

Andy Grove
Chief Architect
CodeFutures Corporation








From cdoucette at vaultus.com  Tue Jan 20 13:04:40 2009
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Tue, 20 Jan 2009 16:04:40 -0500
Subject: [antlr-interest] www.antlr.org (ANTLR website) down?
Message-ID: <A7746824D386F947BBC285F6EC4716B0053C39B924@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

C:\Documents and Settings\cdoucette>nslookup www.antlr.org
Server:  vmtbosmail01.vmtboston.vaultus.com
Address:  10.52.0.31

Non-authoritative answer:
Name:    www.antlr.org
Address:  138.202.170.10


C:\Documents and Settings\cdoucette>telnet www.antlr.org 80
Connecting To www.antlr.org...Could not open connection to the host, on port 80:
 Connect failed

C:\Documents and Settings\cdoucette>

From jimi at temporal-wave.com  Tue Jan 20 13:15:43 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 13:15:43 -0800
Subject: [antlr-interest] partial re-write rules
In-Reply-To: <20090120203757.88B563418490@www.antlr.org>
References: <d1316fd70901201216p2565d6f9sea1129b8c60bed92@mail.gmail.com>
	<20090120203757.88B563418490@www.antlr.org>
Message-ID: <49763EFF.1090202@temporal-wave.com>

Gavin Lambert wrote:
> At 09:16 21/01/2009, Robert Soule wrote:
>  >blockOrLiteral :
>  >     ('{') => curly ';'? stmt*          // This is the trouble
>  >      |    // some other choices;
>  >
>  >Here, if the ';' exists, I want to create one node, but if not, 
> I
>  >want to create a different node. I can write this as:
>  >
>  >   ('{') => curly ';' stmt*     -> ^(FIRST curly stmt*)
>  > | ('{') => curly  stmt*       -> ^(SECOND curly stmt*)
>  > | // more choices
>  >
>  >But this syntax seems a bit cumbersome. Is there a better way to 
>
>  >express this?
>
> Well, it's better to left-factor it, like so:
>
> rule
>    : ('{') => curly
>        ( ';' stmt* -> ^(FIRST curly stmt*)
>        | stmt* -> ^(SECOND curly stmt*)
>        )
>    | /* other stuff */
>    ;
>
> But that's even more cumbersome, if anything :)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

rule
   : '{'
       s=semi stmt* -> ^($s curly stmt*)
   ;

semi
 : ';' -> FIRST
 | -> SECOND
 ;


Jim

From jimi at temporal-wave.com  Tue Jan 20 13:19:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 13:19:05 -0800
Subject: [antlr-interest] Error compiling generated C code (possibly
 32/64 bit conflict?)
In-Reply-To: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>
References: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>
Message-ID: <49763FC9.9090409@temporal-wave.com>

Andy Grove wrote:
> Hi,
>
> I installed the ANTLR C runtime (version 3.1.1) and compiled it from  
> source successfully on Fedora 10 x86_64 (using the --enable-64bit  
> configuration option).
>
> I also generated C code successfully from my grammar.
>
> However, when I attempt to compile the generated code I get a lot of  
> type conversion errors such as:
>
> MyLexer.c:1634: error: invalid conversion from 'int' to 'const  
> ANTLR3_INT32*'
>
> The code that produces this error is:
>
> /* Transition tables are a table of sub tables, with some tables
>   * reused for efficiency.
>   */
> static const ANTLR3_INT32 * const dfa31_transitions[] =
> {
>      dfa31_T0, dfa31_T139, dfa31_T171, dfa31_T56, dfa31_T131, dfa31_T36,
>      dfa31_T27, dfa31_T147, dfa31_T149, dfa31_T125, dfa31_T170,  
> dfa31_T33,
>
>
> I am using g++ (GCC) 4.3.2 20081105 (Red Hat 4.3.2-7).
>   
Are you trying to compile it as C++ code? Did you use: 
-I/usr/local/wherantlris and of course run 'make install' Looks like 
perhaps it hasn't picked up the header files. make sure you read the 
example in the docs.

Jim

From parrt at cs.usfca.edu  Tue Jan 20 13:21:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 13:21:42 -0800
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <20090120131244.210870@gmx.net>
References: <4931B730.7070903@gmx.de><7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu><20090120091111.287390@gmx.net>
	<20090120092744.314150@gmx.net><20090120095451.D7B24341840B@www.antlr.org>
	<20090120114137.34410@gmx.net>
	<673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
	<20090120131244.210870@gmx.net>
Message-ID: <AA6F6DAB-EB03-4012-BD38-BF19A121B9BD@cs.usfca.edu>

Reasonable thoughts. I'm adding a note.
Ter
On Jan 20, 2009, at 5:12 AM, Johannes Luber wrote:

>
>>> From:  Johannes Luber
>>> Another improvement would be to allow a comma-separated list.
>>> With it one can record all versions of ANTLR, with which the
>>> grammar works without any modifications.
>>
>> The trouble with that is that it forces the user to predict the  
>> future.
>> Maybe it will work with the next fifty versions, which may only have
>> changes
>> which don't affect the ultimate interpretation, such as bug fixes,  
>> speed
>> improvements, and the like, but there's no way to specify that.
>>
>> The only way this sort of thing works is for the source file to  
>> declare
>> "this is the standard I was written to".  It is then up to the
>> interpreters,
>> past, present, and future, to either modify their interpretation to  
>> match
>> that of the specified standard (i.e. future ANTLR versions  
>> "degrading"
>> their
>> interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a  
>> grammar
>> that says its written to the ANTLR 8.5.6 standard, which it of  
>> course has
>> no
>> idea what that even is, so it can't possibly interpret it).
>>
>> A halfway solution used by some (autoconf comes to mind) is to list a
>> minimum required version of the interpreter.  It's a bit of a fine
>> distinction, but this tends to be problematic in the opposite  
>> direction:
>> it
>> forces the developer of the interpreter (i.e. Terence et al) to never
>> break
>> backward compatability - i.e. always have one foot in the past.  It  
>> also
>> doesn't actually tell anyone anything about the source; does
>> "requires_ANTLR_version = 3.1.1" mean it's using the "^(" or the "#("
>> rewrite syntax?  No way to know until you hit the first one, so why  
>> bother
>> with the "requires" at all?
>
> You misunderstand the intent. This option doesn't force ANTLR to  
> behave in a particular way - it isn't built for supporting different  
> modes and shouldn't be made this way. An example should makes this  
> clearer:
>
> A grammar is written for "3.2". Now one uses "3.2.1". ANTLR compares  
> the strings and says: "Hey, the author did only use 3.2. Using me  
> may cause problems. Proceed at your own peril." If everything works  
> out, the user can add "3.2.1" to suppress the warning.
>
> A few months later 3.3 comes out. Ter decided to scrap the current  
> rewrite approach and to switch over ANTLR/Yggdrasil". The user  
> switches to 3.3, tries to generate the source code, but receives a  
> stream of error messages. And the message is:  "Hey, the author did  
> only use 3.2 and 3.2.1. Using me may cause problems. Proceed at your  
> own peril." Then the user knows that the cause is in the format  
> switch (assuming he followed ANTLR's evolution), instead having to  
> dig into the file.
>>
>>> Once one does a
>>> backwards-incompatible upgrade (be it bugfix, changed ANTLR
>>> behaviour or the use of a new feature), the list is cleared.
>>
>> How do you do that once your grammar leaves your PC?  Your customer
>> decides
>> to upgrade his ANTLR install and now your program won't compile.
>
> See above example, but basically you don't and the user is at least  
> warned of the possibility of breakage.
>
> Johannes
>>
>>> And if someone is unsure if a grammar change makes things
>>> incompatible, he has to check merely the latest given version.
>>>
>>
>> -- 
>> Gary R. Van Sickle
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email- 
>> address
>
> -- 
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit  
> allen: http://www.gmx.net/de/go/multimessenger
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Jan 20 13:26:25 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 13:26:25 -0800
Subject: [antlr-interest] Proposal to make writing language targets a
	biteasier
In-Reply-To: <2ab2ed550901191921u387a0515t6a6aa238f0c367a6@mail.gmail.com>
References: <67BC87D6-1338-4884-B34F-C32D940960D7@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67726@Bloodymary.ironwillgames.com>
	<65884F5B-92D6-4C8E-B800-9880276C88B9@latencyzero.com>
	<86403CA0939415448BCCB83855EFE09AA67727@Bloodymary.ironwillgames.com>
	<9D7FE32E-3066-46EB-944A-54C21AEEED7F@latencyzero.com>
	<2ab2ed550901191921u387a0515t6a6aa238f0c367a6@mail.gmail.com>
Message-ID: <753147EC-E2F0-4F28-985B-6C98FC147BC1@cs.usfca.edu>


On Jan 19, 2009, at 7:21 PM, Sidharth Kuruvila wrote:

>
> It should be enough to add your Target's java directory to the  
> classpath.  So you don't need to physically put the code into the  
> antlr source.

Yep, to add a new target, all you have to do is define the directory  
of templates and put it into the path. This is also an effective way  
to override the standard Java or whatever templates. If you need  
XTarget.java for for language X, just add it to the class path (with  
the right package org.antlr.tool.codegen) and ANTLR sees it also.

Ter

From andy.grove at codefutures.com  Tue Jan 20 13:46:46 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Tue, 20 Jan 2009 14:46:46 -0700
Subject: [antlr-interest] Error compiling generated C code (possibly
	32/64 bit conflict?)
In-Reply-To: <49763FC9.9090409@temporal-wave.com>
References: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>
	<49763FC9.9090409@temporal-wave.com>
Message-ID: <2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>

Jim,

Thanks for the prompt response. Yes, I did run "make install" and the antlr3
header files are in /usr/local/include. I get different errors if I remove
those headers so the header files are being discovered.

I am using this syntax to call the compiler:

g++ -I$ANTLR_INCLUDE_PATH -O0 -g3 -Wall -c -fmessage-length=0 -fPIC -MMD -MP
-MF"src/sqlparser/DbsMySQL_CPPLexer.d"
-MT"src/sqlparser/DbsMySQL_CPPLexer.d" -o"output/DbsMySQL_CPPLexer.o"
"src/sqlparser/DbsMySQL_CPPLexer.c"

I'm compiling as C++. Is this supported? I'd like to call into C++ code from
the parser.

To provide a bit more detail, here is a larger portion of error output:

In file included from src/sqlparser/DbsMySQL_CPPLexer.c:27:
src/sqlparser/DbsMySQL_CPPLexer.h:371:1: warning: "NULL" redefined
In file included from /usr/include/rpc/netdb.h:42,
                 from /usr/include/netdb.h:33,
                 from /usr/local/include/antlr3defs.h:253,
                 from /usr/local/include/antlr3.h:4,
                 from src/sqlparser/DbsMySQL_CPPLexer.h:144,
                 from src/sqlparser/DbsMySQL_CPPLexer.c:27:
/usr/lib/gcc/x86_64-redhat-linux/4.3.2/include/stddef.h:400:1: warning: this
is the location of the previous definition
In file included from src/sqlparser/DbsMySQL_CPPLexer.c:27:
src/sqlparser/DbsMySQL_CPPLexer.h:414:1: warning: "DELETE" redefined
In file included from /usr/include/arpa/nameser.h:531,
                 from /usr/local/include/antlr3defs.h:249,
                 from /usr/local/include/antlr3.h:4,
                 from src/sqlparser/DbsMySQL_CPPLexer.h:144,
                 from src/sqlparser/DbsMySQL_CPPLexer.c:27:
/usr/include/arpa/nameser_compat.h:127:1: warning: this is the location of
the previous definition
src/sqlparser/DbsMySQL_CPPLexer.c: In function
'DbsMySQL_CPPLexer_Ctx_struct*
DbsMySQL_CPPLexerNew(ANTLR3_INPUT_STREAM_struct*)':
src/sqlparser/DbsMySQL_CPPLexer.c:447: error: invalid conversion from 'int'
to 'ANTLR3_RECOGNIZER_SHARED_STATE_struct*'
src/sqlparser/DbsMySQL_CPPLexer.c:447: error:   initializing argument 2 of
'DbsMySQL_CPPLexer_Ctx_struct*
DbsMySQL_CPPLexerNewSSD(ANTLR3_INPUT_STREAM_struct*,
ANTLR3_RECOGNIZER_SHARED_STATE_struct*)'
src/sqlparser/DbsMySQL_CPPLexer.c: In function
'DbsMySQL_CPPLexer_Ctx_struct*
DbsMySQL_CPPLexerNewSSD(ANTLR3_INPUT_STREAM_struct*,
ANTLR3_RECOGNIZER_SHARED_STATE_struct*)':
src/sqlparser/DbsMySQL_CPPLexer.c:465: error: ISO C++ forbids comparison
between pointer and integer
src/sqlparser/DbsMySQL_CPPLexer.c:468: error: invalid conversion from 'int'
to 'DbsMySQL_CPPLexer_Ctx_struct*'
src/sqlparser/DbsMySQL_CPPLexer.c:488: error: ISO C++ forbids comparison
between pointer and integer
src/sqlparser/DbsMySQL_CPPLexer.c:491: error: invalid conversion from 'int'
to 'DbsMySQL_CPPLexer_Ctx_struct*'
src/sqlparser/DbsMySQL_CPPLexer.c: At global scope:
src/sqlparser/DbsMySQL_CPPLexer.c:681: error: invalid conversion from 'int'
to 'const ANTLR3_INT32*'


Thanks,

Andy.


On Tue, Jan 20, 2009 at 2:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Andy Grove wrote:
> > Hi,
> >
> > I installed the ANTLR C runtime (version 3.1.1) and compiled it from
> > source successfully on Fedora 10 x86_64 (using the --enable-64bit
> > configuration option).
> >
> > I also generated C code successfully from my grammar.
> >
> > However, when I attempt to compile the generated code I get a lot of
> > type conversion errors such as:
> >
> > MyLexer.c:1634: error: invalid conversion from 'int' to 'const
> > ANTLR3_INT32*'
> >
> > The code that produces this error is:
> >
> > /* Transition tables are a table of sub tables, with some tables
> >   * reused for efficiency.
> >   */
> > static const ANTLR3_INT32 * const dfa31_transitions[] =
> > {
> >      dfa31_T0, dfa31_T139, dfa31_T171, dfa31_T56, dfa31_T131, dfa31_T36,
> >      dfa31_T27, dfa31_T147, dfa31_T149, dfa31_T125, dfa31_T170,
> > dfa31_T33,
> >
> >
> > I am using g++ (GCC) 4.3.2 20081105 (Red Hat 4.3.2-7).
> >
> Are you trying to compile it as C++ code? Did you use:
> -I/usr/local/wherantlris and of course run 'make install' Looks like
> perhaps it hasn't picked up the header files. make sure you read the
> example in the docs.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090120/c687c2fc/attachment.html 

From parrt at cs.usfca.edu  Tue Jan 20 13:59:17 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 13:59:17 -0800
Subject: [antlr-interest] Where is mismatchRecover() in the Java target?
In-Reply-To: <4975E5D3.2030905@gmx.net>
References: <4975E5D3.2030905@gmx.net>
Message-ID: <75F031DC-A00F-413A-B679-2B5DD814BCDE@cs.usfca.edu>

Ooops...things got changed. I updated comments and removed the unused  
mismatch method. please override recoverFromMismatchedToken() as I do  
here in the tree parser:

     protected Object recoverFromMismatchedToken(IntStream input,
                                                 int ttype,
                                                 BitSet follow)
         throws RecognitionException
     {
         throw new MismatchedTreeNodeException(ttype,  
(TreeNodeStream)input);
     }

Ter
On Jan 20, 2009, at 6:55 AM, Dennis Benzinger wrote:

> Hi!
>
> The API documentation for BaseRecognizer says that in order to turn  
> off
> single token insertion or deletion recovery I need to override
> mismatchRecover()
> <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#6aabf9eec24d05b14993c953c027d9d0 
> >.
> But didn't find any definition or invocation of this method in the  
> Java
> runtime.
>
> In which class is this method defined?
>
>
> Thanks for your help,
> Dennis Benzinger
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Jan 20 14:08:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 14:08:42 -0800
Subject: [antlr-interest] Error compiling generated C code
 (possibly	32/64 bit conflict?)
In-Reply-To: <2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>
References: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>	<49763FC9.9090409@temporal-wave.com>
	<2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>
Message-ID: <49764B6A.9060607@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090120/f0af3f39/attachment.html 

From jimi at temporal-wave.com  Tue Jan 20 14:11:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Jan 2009 14:11:24 -0800
Subject: [antlr-interest] Error compiling generated C code
 (possibly	32/64 bit conflict?)
In-Reply-To: <2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>
References: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>	<49763FC9.9090409@temporal-wave.com>
	<2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>
Message-ID: <49764C0C.8030109@temporal-wave.com>

Andy Grove wrote:
> Jim,
>
> Thanks for the prompt response. Yes, I did run "make install" and the 
> antlr3 header files are in /usr/local/include. I get different errors 
> if I remove those headers so the header files are being discovered.
>
> I am using this syntax to call the compiler:
>
> g++ -I$ANTLR_INCLUDE_PATH -O0 -g3 -Wall -c -fmessage-length=0 -fPIC 
> -MMD -MP -MF"src/sqlparser/DbsMySQL_CPPLexer.d" 
> -MT"src/sqlparser/DbsMySQL_CPPLexer.d" -o"output/DbsMySQL_CPPLexer.o" 
> "src/sqlparser/DbsMySQL_CPPLexer.c"
>
And don't forget that is you are not in the source directory, you will need:

-I src/sqlparser as well.

Jim


From parrt at cs.usfca.edu  Tue Jan 20 14:54:20 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 14:54:20 -0800
Subject: [antlr-interest] Where is mismatchRecover() in the Java target?
In-Reply-To: <75F031DC-A00F-413A-B679-2B5DD814BCDE@cs.usfca.edu>
References: <4975E5D3.2030905@gmx.net>
	<75F031DC-A00F-413A-B679-2B5DD814BCDE@cs.usfca.edu>
Message-ID: <FF4044A1-ABC7-443F-A5C5-12073AC6D50B@cs.usfca.edu>

Updated the doc:

http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery

Ter
On Jan 20, 2009, at 1:59 PM, Terence Parr wrote:

> Ooops...things got changed. I updated comments and removed the unused
> mismatch method. please override recoverFromMismatchedToken() as I do
> here in the tree parser:
>
>     protected Object recoverFromMismatchedToken(IntStream input,
>                                                 int ttype,
>                                                 BitSet follow)
>         throws RecognitionException
>     {
>         throw new MismatchedTreeNodeException(ttype,
> (TreeNodeStream)input);
>     }
>
> Ter
> On Jan 20, 2009, at 6:55 AM, Dennis Benzinger wrote:
>
>> Hi!
>>
>> The API documentation for BaseRecognizer says that in order to turn
>> off
>> single token insertion or deletion recovery I need to override
>> mismatchRecover()
>> <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#6aabf9eec24d05b14993c953c027d9d0
>>> .
>> But didn't find any definition or invocation of this method in the
>> Java
>> runtime.
>>
>> In which class is this method defined?
>>
>>
>> Thanks for your help,
>> Dennis Benzinger
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Jan 20 15:01:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 15:01:29 -0800
Subject: [antlr-interest] Avoiding ClassCastExceptions in
	org.antlr.runtime.tree.BaseTree (Limitation in ANTLR v 3.1)
In-Reply-To: <a36ab4bc0810020626n234a9f7eje9d87d3c627c77fa@mail.gmail.com>
References: <a36ab4bc0809241103v387a9cf3vdac81fedc3f2b906@mail.gmail.com>
	<a36ab4bc0810020626n234a9f7eje9d87d3c627c77fa@mail.gmail.com>
Message-ID: <7FB3F67F-A924-44AE-BFC2-73164A9E9EB4@cs.usfca.edu>

Cool. done. fixed in my development branch. I changed one of the  
method also.
Ter
On Oct 2, 2008, at 6:26 AM, Tim Halloran wrote:

> 3.1.1 didn't fix the below problem.  I can't get into Jira; but I  
> think the below is really a bug.
>
> On Wed, Sep 24, 2008 at 2:03 PM, Tim Halloran <hallorant at gmail.com>  
> wrote:
> I'm using the standard Tree implementations (extending BaseTree) in  
> combination with a custom implementation of Tree.  The problem is  
> that BaseTree assumes that it is only being used with subclasses of  
> BaseTree despite it's implementation really not needing to make this  
> assumption.  I propose fixing the code to eliminate this problem.
>
> I modified the getChild() and toStringTree() methods in  
> BaseTree.java.  I changed lines 56 and 297 to cast to Tree, instead  
> of BaseTree.  For example:
>
>     public Tree getChild(int i) {
>         if ( children==null || i>=children.size() ) {
>             return null;
>         }
>         return (Tree) children.get(i);  // line 56
>     }
>
> There might be some other places to change, but I have only  
> encountered problems with these.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Tue Jan 20 15:14:00 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 15:14:00 -0800
Subject: [antlr-interest] Import problems with Antlr 3.1.1 - Whitespace
In-Reply-To: <BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>
References: <mailman.0.1226692801.5116.antlr-interest@antlr.org>
	<BCF80163639E9F4296FC4B208F99BA4797C6E8E6@orsmsx504.amr.corp.intel.com>
Message-ID: <05EF98EA-5883-4D46-BB59-C8AE482851BB@cs.usfca.edu>

Hi Joe...seems to work okay for me... thanks for the detailed and  
simple bug report.Are you still having a problem?

~/tmp/antlrworks $ cat test.g
grammar test;
import testlexer;
version_info : VERSION VERSION_IDENTIFIER SEMICOLON ;
~/tmp/antlrworks $ cat testlexer.g
lexer grammar testlexer;
VERSION : 'Version';
VERSION_IDENTIFIER : ('0'..'9')+ '.' ('0'..'9')+ ;
SEMICOLON : ';';
WS  : (' '|'\t' | '\r' | '\n')+ {$channel=HIDDEN;};
~/tmp/antlrworks $ a *.g
ANTLR Parser Generator  Version 3.1.2-2008-10-21
test.g
testlexer.g
~/tmp/antlrworks $ jc *.java
~/tmp/antlrworks $ cat __Test___input.txt
Version 1.0;
~/tmp/antlrworks $ j __Test__
~/tmp/antlrworks $

Ter

On Nov 14, 2008, at 12:21 PM, Peterson, Joe wrote:

> Hello all,
>
> I'm having several some problems with import and I'm hoping y'all  
> can help me understand the problems. I'll list them in separate e- 
> mails as I fully qualify the problems.
>
> Basically, I have 15 or so related files that I need to parse. They  
> all should use the same lexer rules, so I started out trying to put  
> all the lexer rules into a single file that all the root grammars  
> would import.  But that didn't work. I'm using Antlr 3.1.1  
> (AntlrWorks 1.2) and when I compile, I'm using VC2008 (but my  
> current problem happens even using the AntlrWorks interpreter).
>
> Here is my first problem... I can't seem to put all my lexer rules  
> in a separate file because when I put the WS definition in a  
> separate file, I get errors.  Take these overly simple sample files  
> that demonstrate one of my issues:
>
> //// test.g Starts here
> grammar test;
> import testlexer;
> version_info : VERSION VERSION_IDENTIFIER SEMICOLON ;
> //// test.g Ends here
>
> //// testlexer.g starts here
> lexer grammar testlexer;
> VERSION : 'Version';
> VERSION_IDENTIFIER : ('0'..'9')+ '.' ('0'..'9')+ ;
> SEMICOLON : ';';
> WS  : (' '|'\t' | '\r' | '\n')+ {$channel=HIDDEN;};
> //// testlexer.g ends here
>
> //// input starts here
> Version 1.0;
> //// input ends here
>
> When I run it on a simple file it blows up after the version  
> keyword... it's like it doesn't send the WS to the hidden channel.
>
> If I move the WS declaration into test.g, it works fine.
>
> Am I missing something with how imports work? Shouldn't I be able to  
> put the WS declaration in the common lexer file?
>
> (I apologize if this goes through twice, I sent it yesterday and  
> still haven't seen it come through...)
>
> Thanks,
> -JEEP
> Joe Peterson
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From sharwell at pixelminegames.com  Tue Jan 20 15:20:19 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 20 Jan 2009 17:20:19 -0600
Subject: [antlr-interest] Avoiding ClassCastExceptions
	inorg.antlr.runtime.tree.BaseTree (Limitation in ANTLR v 3.1)
In-Reply-To: <7FB3F67F-A924-44AE-BFC2-73164A9E9EB4@cs.usfca.edu>
References: <a36ab4bc0809241103v387a9cf3vdac81fedc3f2b906@mail.gmail.com><a36ab4bc0810020626n234a9f7eje9d87d3c627c77fa@mail.gmail.com>
	<7FB3F67F-A924-44AE-BFC2-73164A9E9EB4@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67743@Bloodymary.ironwillgames.com>

I already fixed some of these in the C# port. Some other ones are:

BaseTree.sanityCheckParentAndChildIndexes: this could almost be a static
utility method. It doesn't rely on any special features of BaseTree, but
it's not part of the Tree interface.

BaseTree.replaceChildren: assumes t is a BaseTree. Can be rewritten to
accept any tree by using the Tree.getChild() instead of directly
accessing BaseTree.children.

BaseTree.addChild: assumes t is a BaseTree. Can be rewritten to accept
any Tree like replaceChildren.

I have special-case handling in replaceChildren and addChild in case t
is in fact a BaseTree.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, January 20, 2009 5:01 PM
To: Tim Halloran
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Avoiding ClassCastExceptions
inorg.antlr.runtime.tree.BaseTree (Limitation in ANTLR v 3.1)

Cool. done. fixed in my development branch. I changed one of the  
method also.
Ter
On Oct 2, 2008, at 6:26 AM, Tim Halloran wrote:

> 3.1.1 didn't fix the below problem.  I can't get into Jira; but I  
> think the below is really a bug.
>
> On Wed, Sep 24, 2008 at 2:03 PM, Tim Halloran <hallorant at gmail.com>  
> wrote:
> I'm using the standard Tree implementations (extending BaseTree) in  
> combination with a custom implementation of Tree.  The problem is  
> that BaseTree assumes that it is only being used with subclasses of  
> BaseTree despite it's implementation really not needing to make this  
> assumption.  I propose fixing the code to eliminate this problem.
>
> I modified the getChild() and toStringTree() methods in  
> BaseTree.java.  I changed lines 56 and 297 to cast to Tree, instead  
> of BaseTree.  For example:
>
>     public Tree getChild(int i) {
>         if ( children==null || i>=children.size() ) {
>             return null;
>         }
>         return (Tree) children.get(i);  // line 56
>     }
>
> There might be some other places to change, but I have only  
> encountered problems with these.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess
>


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andy.grove at codefutures.com  Tue Jan 20 15:44:34 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Tue, 20 Jan 2009 16:44:34 -0700
Subject: [antlr-interest] Error compiling generated C code
	(possibly	32/64 bit conflict?)
In-Reply-To: <49764B6A.9060607@temporal-wave.com>
References: <A37E88D1-5342-427F-BBB4-4885CEB0FD82@codefutures.com>	<49763FC9.9090409@temporal-wave.com>
	<2b951e7d0901201346rd7fa09fif908cd05178f9325@mail.gmail.com>
	<49764B6A.9060607@temporal-wave.com>
Message-ID: <1C0A946D-0973-4876-A507-8C1F2DEFE2D5@codefutures.com>

Ah. That makes sense.

Thank you for your help - we will fix up our tokens as you suggest and  
give this another go.

Thanks,

Andy.

On Jan 20, 2009, at 3:08 PM, Jim Idle wrote:

> Andy Grove wrote:
>>
>> Jim,
>>
>> Thanks for the prompt response. Yes, I did run "make install" and  
>> the antlr3 header files are in /usr/local/include. I get different  
>> errors if I remove those headers so the header files are being  
>> discovered.
>>
>> I am using this syntax to call the compiler:
>>
>> g++ -I$ANTLR_INCLUDE_PATH -O0 -g3 -Wall -c -fmessage-length=0 -fPIC  
>> -MMD -MP -MF"src/sqlparser/DbsMySQL_CPPLexer.d" -MT"src/sqlparser/ 
>> DbsMySQL_CPPLexer.d" -o"output/DbsMySQL_CPPLexer.o" "src/sqlparser/ 
>> DbsMySQL_CPPLexer.c"
>>
>> I'm compiling as C++. Is this supported? I'd like to call into C++  
>> code from the parser.
>
> Yes, it is supported. You are getting errors because you have  
> defined some of your token names such that they clash with standard  
> C/C++ macros. Specifically you need to rename your NULL and DELETE  
> tokens as KNULL and KDELETE. Fix these and lets try simpler compiles.
>
> As a design pattern though, create a helper class and just call  
> that, keep the code you embed in actions to a minimum for  
> maintenance reasons. Let's try a simpler compile, first just as C:
>
> gcc -I /usr/local/include -c src/sqlparser/DbsMySQL_CPPLexer.c
>
> Then the same with g++
>
> g++ -I /usr/local/include -c src/sqlparser/DbsMySQL_CPPLexer.c
>
> If you turn on all the possible C++ warnings and errors, then it is  
> likely you will get a lot as this is meant to compile at -Wall with  
> gcc, but I make no claims for g++ ;-) You can compile your own C++  
> and so on with all the C++ warnings of course.
>
> Jim
>
>>
>> To provide a bit more detail, here is a larger portion of error  
>> output:
>>
>> In file included from src/sqlparser/DbsMySQL_CPPLexer.c:27:
>> src/sqlparser/DbsMySQL_CPPLexer.h:371:1: warning: "NULL" redefined
>> In file included from /usr/include/rpc/netdb.h:42,
>>                  from /usr/include/netdb.h:33,
>>                  from /usr/local/include/antlr3defs.h:253,
>>                  from /usr/local/include/antlr3.h:4,
>>                  from src/sqlparser/DbsMySQL_CPPLexer.h:144,
>>                  from src/sqlparser/DbsMySQL_CPPLexer.c:27:
>> /usr/lib/gcc/x86_64-redhat-linux/4.3.2/include/stddef.h:400:1:  
>> warning: this is the location of the previous definition
>> In file included from src/sqlparser/DbsMySQL_CPPLexer.c:27:
>> src/sqlparser/DbsMySQL_CPPLexer.h:414:1: warning: "DELETE" redefined
>> In file included from /usr/include/arpa/nameser.h:531,
>>                  from /usr/local/include/antlr3defs.h:249,
>>                  from /usr/local/include/antlr3.h:4,
>>                  from src/sqlparser/DbsMySQL_CPPLexer.h:144,
>>                  from src/sqlparser/DbsMySQL_CPPLexer.c:27:
>> /usr/include/arpa/nameser_compat.h:127:1: warning: this is the  
>> location of the previous definition
>> src/sqlparser/DbsMySQL_CPPLexer.c: In function  
>> 'DbsMySQL_CPPLexer_Ctx_struct*  
>> DbsMySQL_CPPLexerNew(ANTLR3_INPUT_STREAM_struct*)':
>> src/sqlparser/DbsMySQL_CPPLexer.c:447: error: invalid conversion  
>> from 'int' to 'ANTLR3_RECOGNIZER_SHARED_STATE_struct*'
>> src/sqlparser/DbsMySQL_CPPLexer.c:447: error:   initializing  
>> argument 2 of 'DbsMySQL_CPPLexer_Ctx_struct*  
>> DbsMySQL_CPPLexerNewSSD(ANTLR3_INPUT_STREAM_struct*,  
>> ANTLR3_RECOGNIZER_SHARED_STATE_struct*)'
>> src/sqlparser/DbsMySQL_CPPLexer.c: In function  
>> 'DbsMySQL_CPPLexer_Ctx_struct*  
>> DbsMySQL_CPPLexerNewSSD(ANTLR3_INPUT_STREAM_struct*,  
>> ANTLR3_RECOGNIZER_SHARED_STATE_struct*)':
>> src/sqlparser/DbsMySQL_CPPLexer.c:465: error: ISO C++ forbids  
>> comparison between pointer and integer
>> src/sqlparser/DbsMySQL_CPPLexer.c:468: error: invalid conversion  
>> from 'int' to 'DbsMySQL_CPPLexer_Ctx_struct*'
>> src/sqlparser/DbsMySQL_CPPLexer.c:488: error: ISO C++ forbids  
>> comparison between pointer and integer
>> src/sqlparser/DbsMySQL_CPPLexer.c:491: error: invalid conversion  
>> from 'int' to 'DbsMySQL_CPPLexer_Ctx_struct*'
>> src/sqlparser/DbsMySQL_CPPLexer.c: At global scope:
>> src/sqlparser/DbsMySQL_CPPLexer.c:681: error: invalid conversion  
>> from 'int' to 'const ANTLR3_INT32*'
>>
>>
>> Thanks,
>>
>> Andy.
>>
>>
>> On Tue, Jan 20, 2009 at 2:19 PM, Jim Idle <jimi at temporal-wave.com>  
>> wrote:
>> Andy Grove wrote:
>> > Hi,
>> >
>> > I installed the ANTLR C runtime (version 3.1.1) and compiled it  
>> from
>> > source successfully on Fedora 10 x86_64 (using the --enable-64bit
>> > configuration option).
>> >
>> > I also generated C code successfully from my grammar.
>> >
>> > However, when I attempt to compile the generated code I get a lot  
>> of
>> > type conversion errors such as:
>> >
>> > MyLexer.c:1634: error: invalid conversion from 'int' to 'const
>> > ANTLR3_INT32*'
>> >
>> > The code that produces this error is:
>> >
>> > /* Transition tables are a table of sub tables, with some tables
>> >   * reused for efficiency.
>> >   */
>> > static const ANTLR3_INT32 * const dfa31_transitions[] =
>> > {
>> >      dfa31_T0, dfa31_T139, dfa31_T171, dfa31_T56, dfa31_T131,  
>> dfa31_T36,
>> >      dfa31_T27, dfa31_T147, dfa31_T149, dfa31_T125, dfa31_T170,
>> > dfa31_T33,
>> >
>> >
>> > I am using g++ (GCC) 4.3.2 20081105 (Red Hat 4.3.2-7).
>> >
>> Are you trying to compile it as C++ code? Did you use:
>> -I/usr/local/wherantlris and of course run 'make install' Looks like
>> perhaps it hasn't picked up the header files. make sure you read the
>> example in the docs.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090120/75917ff8/attachment.html 

From parrt at cs.usfca.edu  Tue Jan 20 17:13:34 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 17:13:34 -0800
Subject: [antlr-interest] ANTLR v3.1.1 released
In-Reply-To: <200810021025.49989.rschulz@sonic.net>
References: <126EB79A-5862-46DA-A428-A059006E3DC8@cs.usfca.edu>
	<9FA2363C-375A-48BE-889E-18E590E64ACA@cs.usfca.edu>
	<200810021006.02368.rschulz@sonic.net>
	<200810021025.49989.rschulz@sonic.net>
Message-ID: <5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>

interesting...so this should be a warning then?  I'm not sure which is  
correct.  It is most likely an error; I wouldn't rely on which it  
chooses.
Ter
On Oct 2, 2008, at 10:25 AM, Randall R Schulz wrote:

> On Thursday 02 October 2008 10:06, Randall R Schulz wrote:
>> On Thursday 02 October 2008 09:57, Terence Parr wrote:
>>> On Oct 2, 2008, at 7:08 AM, Randall R Schulz wrote:
>>>> On Thursday 02 October 2008 06:48, Randall R Schulz wrote:
>>>>> On Wednesday 01 October 2008 14:36, Terence Parr wrote:
>>>>>> 3.1.1 released:
>>>>>
>>>>> I'm starting a new parser and upgraded (to 3.1, yesterday and
>>>>> then to 3.1.1, later yesterday...). Anyway, I was wondering if
>>>>> the ANTLR command-line interface (org.antlr.Tool#main(), i.e.)
>>>>> gives a non-zero exit code when there was an error during
>>>>> processing of the ".g" files?
>>>>>
>>>>> ...
>>>>
>>>> Empirical testing suggests the answer is "no."
>>>>
>>>> Wasn't this going to be addressed a long time ago? It's very
>>>> kludgey to
>>>
>>> I thought so...did you get a error or warning?
>>
>> Regardless of whether ANTLR liked the grammar specification or not,
>> the exit status is always 0.
>
> It just got worse.
>
> I've got a rule that refers ambiguously to itself in a tree building
> construct:
>
> op790Formula
>    :   (op780Formula -> op780Formula)
>        (
>            Or rDisjunct = op790Formula
>        ->  ^(Or $op790Formula $rDisjunct)
>        ) ?
>    ;
>
> ANTLR tells me this:
>
> error(132): P9.g:581:11: reference $op790Formula is ambiguous;
> 	rule op790Formula is enclosing rule and referenced in the production
> 	(assuming enclosing rule)
>
>
> Now it says it assumed the enclosing rule, which is what I want, so I
> figure the resulting code would be OK (and it does generate the usual
> complement of Java source files), but since this is labelled as an
> error, not a warning, my script thinks it cannot go on to run Ant to
> build the class files.
>
>
> Randall Schulz
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From rschulz at sonic.net  Tue Jan 20 17:32:21 2009
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 20 Jan 2009 17:32:21 -0800
Subject: [antlr-interest] ANTLR v3.1.1 released
In-Reply-To: <5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>
References: <126EB79A-5862-46DA-A428-A059006E3DC8@cs.usfca.edu>
	<200810021025.49989.rschulz@sonic.net>
	<5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>
Message-ID: <200901201732.21557.rschulz@sonic.net>

On Tuesday January 20 2009, you wrote:
> interesting...so this should be a warning then?  I'm not sure which
> is correct.  It is most likely an error; I wouldn't rely on which it
> chooses.

But it explicitly said that it chose the enclosing rule. If that's not 
what it's (reliably) going to do, at least change the diagnostic.

Are you really just getting back to this now, three months and 18 days 
later, or is this some kind of email SNAFU?


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Tue Jan 20 17:34:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Jan 2009 17:34:19 -0800
Subject: [antlr-interest] ANTLR v3.1.1 released
In-Reply-To: <200901201732.21557.rschulz@sonic.net>
References: <126EB79A-5862-46DA-A428-A059006E3DC8@cs.usfca.edu>
	<200810021025.49989.rschulz@sonic.net>
	<5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>
	<200901201732.21557.rschulz@sonic.net>
Message-ID: <9DFD0113-DD09-47E8-B7CF-FFF063C51637@cs.usfca.edu>


On Jan 20, 2009, at 5:32 PM, Randall R Schulz wrote:

> On Tuesday January 20 2009, you wrote:
>> interesting...so this should be a warning then?  I'm not sure which
>> is correct.  It is most likely an error; I wouldn't rely on which it
>> chooses.
>
> But it explicitly said that it chose the enclosing rule. If that's not
> what it's (reliably) going to do, at least change the diagnostic.

good point.

> Are you really just getting back to this now, three months and 18 days
> later, or is this some kind of email SNAFU?

Nope, just getting to it.  I've sent book out for review at 50% mark  
and I'm avoiding class prep for start of school next week by getting  
to my "TODO" email list for ANTLR.

Ter

From bruno.marc-aurele at polymtl.ca  Tue Jan 20 18:57:20 2009
From: bruno.marc-aurele at polymtl.ca (Bruno Marc-Aurele)
Date: Tue, 20 Jan 2009 21:57:20 -0500
Subject: [antlr-interest] ANTLR Questions
Message-ID: <1232506640.49768f1045663@www.imp.polymtl.ca>

Hello everyone,

I am currently working on a project where I need to translate files (mainly
code) from one technology to another. I already have a LL(*) grammar for the
source language and I am considering rewriting this grammar using ANTLR to
benefit from C# generation target.

I have used JavaCC a lot in the past and I have some questions about ANTLR, a
tool that I find really promising for my project. I read the documentation, but
some things just still are unclear.

1) If I want to generate a parse tree, do I HAVE to use a tree grammar or will a
combined one work?

2) About the generated tree, what will be the types of the nodes? Will each rule
have its type (ex, rule test would have a Test() type node) or are all the nodes
the same type (NodeType, for example)?

2.1) I read the section about heterogenous nodes (using the <X> syntax), but all
the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it work
on rule calls (ex: rule<V>)?

Your answers might spark new questions from me, but for now it's all I need to
know.

Thanks a lot for your support,
Bruno Marc-Aur?le.





From sharwell at pixelminegames.com  Tue Jan 20 20:18:58 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 20 Jan 2009 22:18:58 -0600
Subject: [antlr-interest] ANTLR v3.1.1 released
In-Reply-To: <5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>
References: <126EB79A-5862-46DA-A428-A059006E3DC8@cs.usfca.edu><9FA2363C-375A-48BE-889E-18E590E64ACA@cs.usfca.edu><200810021006.02368.rschulz@sonic.net><200810021025.49989.rschulz@sonic.net>
	<5368D50A-7AAD-4A89-B1B1-FA9ACFF2175A@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67748@Bloodymary.ironwillgames.com>

I've mentioned this behavior several times before. Currently, despite
the error, the Tool does behave in the way it states (it references the
enclosing rule). I assure you there is no syntactic or semantic
ambiguity in this use case under the documented rules of an ANTLR
grammar's rewrite syntax. With a $, it must refer to the enclosing rule.
Without a $, it can only refer to the result of a rule reference. I
finally just commented out the code in the tool that reports the error
so I could make use of this feature in my grammars. One place that
benefits from it is conversion of certain rules from recursive to
iterative in cases where stack depth is causing problems.

Honestly it shouldn't even be a warning, as it's like the following in
C# code.

class Foo
{
  int a;

  void B( int a )
  {
    // this use of a is *not* a warning, as it unambiguously refers to
the method's parameter:
    if ( a == 3 )
    {
    }
  }
}

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, January 20, 2009 7:14 PM
To: Randall R Schulz
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR v3.1.1 released

interesting...so this should be a warning then?  I'm not sure which is  
correct.  It is most likely an error; I wouldn't rely on which it  
chooses.
Ter
On Oct 2, 2008, at 10:25 AM, Randall R Schulz wrote:

>
> It just got worse.
>
> I've got a rule that refers ambiguously to itself in a tree building
> construct:
>
> op790Formula
>    :   (op780Formula -> op780Formula)
>        (
>            Or rDisjunct = op790Formula
>        ->  ^(Or $op790Formula $rDisjunct)
>        ) ?
>    ;
>
> ANTLR tells me this:
>
> error(132): P9.g:581:11: reference $op790Formula is ambiguous;
> 	rule op790Formula is enclosing rule and referenced in the
production
> 	(assuming enclosing rule)
>
>
> Now it says it assumed the enclosing rule, which is what I want, so I
> figure the resulting code would be OK (and it does generate the usual
> complement of Java source files), but since this is labelled as an
> error, not a warning, my script thinks it cannot go on to run Ant to
> build the class files.
>
>
> Randall Schulz
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess
>


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From g.r.vansickle at att.net  Tue Jan 20 20:18:50 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 20 Jan 2009 22:18:50 -0600
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <49760934.1090905@temporal-wave.com>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>
	<49760934.1090905@temporal-wave.com>
Message-ID: <7AB2C203531B403599233F6B28D3B835@DFW5RB41>

> From: Jim Idle
> Sent: Tuesday, January 20, 2009 11:26 AM
> Cc: 'antlr-interest Interest'
> Subject: Re: [antlr-interest] C target,C grammar + AST = 
> missing *_SymbolsPop()
> 
> Gary R. Van Sickle wrote:
> > Hi guys,
> >
> > I'm trying to make the C grammar in examples-v3 generate an 
> AST, but 
> > for some reason it appears to not be generating 
> ScopePop()'s for the 
> > dynamic scopes; for every dynamic scope, I get an error 
> like the following:
> >
> > "ss9_combined_lexer_parserParser.cpp: In function 
> > `ss9_combined_lexer_parserParser_translation_unit_return
> > translation_unit(ss9_combined_lexer_parserParser_Ctx_struct*)':
> > ss9_combined_lexer_parserParser.cpp:12842: error:
> > `ptranslation_unit_SymbolsPop' undeclared (first use this function)"
> >
> > Sure enough, no such function exists.  Things work fine if I don't 
> > declare "output=AST"; in that case, the only SymbolsPop() function 
> > generated or called appears to be 
> > pss9_combined_lexer_parserParser_SymbolsPop(), i.e. all 
> dynamic scope 
> > code calls the same ScopePop().  Does this ring any bells 
> for anybody?
> >   
> Doesn't for me. Can you submit your grammar or is this 
> completely unchanged from the example?
> 

The above was from marginally changed grammar, but I can replicate it by
simply adding 

"	output = AST;
    ASTLabelType = pANTLR3_BASE_TREE;"

to the options of the bog-standard example.  Untar the attached into a
folder somewhere and do a:

$ antlr C.g  ## or however you invoke ANTLR, this is my shell script that
does "java org.antlr.Tool C.g"
$ gcc -I. CParser.c CLexer.c main.c -lantlr3c

I get this:

"/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:(.text+0xbc2c
): undefined reference to `_ptranslation_unit_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:(.text+0xc6a2)
: undefined reference to `_pfunction_definition_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:(.text+0xd189)
: undefined reference to `_pdeclaration_declarationPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:(.text+0x107df
): undefined reference to `_pstruct_or_union_specifier_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:(.text+0x27dc1
): undefined reference to `_pcompound_statement_SymbolsPop'
collect2: ld returned 1 exit status"

Comment out the AST lines and it builds fine.

???

> Jim
> 

-- 
Gary R. Van Sickle
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-antlr.tar.gz
Type: application/x-gzip
Size: 8395 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090120/b8261e2e/attachment.gz 

From g.r.vansickle at att.net  Tue Jan 20 20:56:01 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 20 Jan 2009 22:56:01 -0600
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <7AB2C203531B403599233F6B28D3B835@DFW5RB41>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41><49760934.1090905@temporal-wave.com>
	<7AB2C203531B403599233F6B28D3B835@DFW5RB41>
Message-ID: <99636D753EA94C54B46867AC6F2EC2B1@DFW5RB41>

> > Doesn't for me. Can you submit your grammar or is this completely 
> > unchanged from the example?
> > 
> 
> The above was from marginally changed grammar, but I can 
> replicate it by simply adding 
> 
> "	output = AST;
>     ASTLabelType = pANTLR3_BASE_TREE;"
> 
> to the options of the bog-standard example.  Untar the 
> attached into a folder somewhere and do a:
> 
> $ antlr C.g  ## or however you invoke ANTLR, this is my shell 
> script that does "java org.antlr.Tool C.g"
> $ gcc -I. CParser.c CLexer.c main.c -lantlr3c
> 
> I get this:
> 
> "/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c
:(.text+0xbc2c
> ): undefined reference to `_ptranslation_unit_SymbolsPop'
> /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
(.text+0xc6a2)
> : undefined reference to `_pfunction_definition_SymbolsPop'
> /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
(.text+0xd189)
> : undefined reference to `_pdeclaration_declarationPop'
> /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
(.text+0x107df
> ): undefined reference to `_pstruct_or_union_specifier_SymbolsPop'
> /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
(.text+0x27dc1
> ): undefined reference to `_pcompound_statement_SymbolsPop'
> collect2: ld returned 1 exit status"
> 
> Comment out the AST lines and it builds fine.
> 
> ???
> 
> > Jim
> > 

Replicated this with "ANTLR Parser Generator  Version 3.1.2-2008-10-21"
and... I'm not sure which version of runtime, Makefile.am is dated 10/1/08.

-- 
Gary R. Van Sickle
 


From g.r.vansickle at att.net  Tue Jan 20 21:21:12 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 20 Jan 2009 23:21:12 -0600
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <99636D753EA94C54B46867AC6F2EC2B1@DFW5RB41>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41><49760934.1090905@temporal-wave.com><7AB2C203531B403599233F6B28D3B835@DFW5RB41>
	<99636D753EA94C54B46867AC6F2EC2B1@DFW5RB41>
Message-ID: <F67E93EEEB8744FE83E1DED5CAC36EA2@DFW5RB41>


[]
> > $ antlr C.g  ## or however you invoke ANTLR, this is my 
> shell script 
> > that does "java org.antlr.Tool C.g"
> > $ gcc -I. CParser.c CLexer.c main.c -lantlr3c
> > 
> > I get this:
> > 
> > "/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c
> :(.text+0xbc2c
> > ): undefined reference to `_ptranslation_unit_SymbolsPop'
> > /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
> (.text+0xc6a2)
> > : undefined reference to `_pfunction_definition_SymbolsPop'
> > /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
> (.text+0xd189)
> > : undefined reference to `_pdeclaration_declarationPop'
> > /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
> (.text+0x107df
> > ): undefined reference to `_pstruct_or_union_specifier_SymbolsPop'
> > /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/ccwDPkR8.o:CParser.c:
> (.text+0x27dc1
> > ): undefined reference to `_pcompound_statement_SymbolsPop'
> > collect2: ld returned 1 exit status"
> > 
> > Comment out the AST lines and it builds fine.
> > 
> > ???
> > 
> > > Jim
> > > 
> 
> Replicated this with "ANTLR Parser Generator  Version 
> 3.1.2-2008-10-21"
> and... I'm not sure which version of runtime, Makefile.am is 
> dated 10/1/08.
> 

...and also replicated with "ANTLR Parser Generator  Version
3.1.2-2008-10-21" and libantlr3c-3.1.2.b1.tar.gz from here:
<http://www.antlr.org/hudson/job/ANTLR%20C%20Runtime/lastSuccessfulBuild/art
ifact/libantlr3c-3.1.2.b1.tar.gz>

Is there something else I can do to try help debugging this?

-- 
Gary R. Van Sickle
 


From jaluber at gmx.de  Tue Jan 20 22:52:47 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 21 Jan 2009 07:52:47 +0100
Subject: [antlr-interest] ANTLR Questions
In-Reply-To: <1232506640.49768f1045663@www.imp.polymtl.ca>
References: <1232506640.49768f1045663@www.imp.polymtl.ca>
Message-ID: <4976C63F.6050409@gmx.de>

Bruno Marc-Aurele schrieb:
> Hello everyone,
> 
> I am currently working on a project where I need to translate files (mainly
> code) from one technology to another. I already have a LL(*) grammar for the
> source language and I am considering rewriting this grammar using ANTLR to
> benefit from C# generation target.
> 
> I have used JavaCC a lot in the past and I have some questions about ANTLR, a
> tool that I find really promising for my project. I read the documentation, but
> some things just still are unclear.
> 
> 1) If I want to generate a parse tree, do I HAVE to use a tree grammar or will a
> combined one work?

You create an AST via a parser grammar. A tree grammar parses only
created ASTs and may rewrite it, too.
> 
> 2) About the generated tree, what will be the types of the nodes? Will each rule
> have its type (ex, rule test would have a Test() type node) or are all the nodes
> the same type (NodeType, for example)?

Usually, the used class is BaseTree, but can be changed via a grammar
option. Heterogenous are also supported, but I have never used them, so
I can't answer the last question.

Johannes
> 
> 2.1) I read the section about heterogenous nodes (using the <X> syntax), but all
> the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it work
> on rule calls (ex: rule<V>)?
> 
> Your answers might spark new questions from me, but for now it's all I need to
> know.
> 
> Thanks a lot for your support,
> Bruno Marc-Aur?le.
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From antlr at mirality.co.nz  Tue Jan 20 23:11:29 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 21 Jan 2009 20:11:29 +1300
Subject: [antlr-interest] ANTLRWorks output path errors
Message-ID: <20090121071141.17B7D34184AB@www.antlr.org>

I recently tried using ANTLRWorks 1.2.2 (previously I was using 
1.1.7), but I'm getting errors whenever I tell it to generate the 
code (I'm using Windows):

Check Grammar reported some errors:
(5): directory not found: 
D:\Programming\antlr\tests\D:\Programming\antlr\AntlrWorks
Consult the console for more information.

The grammar file I am trying to compile is in 
D:\Programming\antlr\tests; the directory 
D:\Programming\antlr\AntlrWorks is the Output Path set in 
ANTLRWorks' preferences.

If I change the output path to "..\AntlrWorks" and restart 
ANTLRWorks (the change doesn't seem to have any effect until 
ANTLRWorks is restarted) then it will *occasionally* work 
properly, and other times give the same error but with the path 
simply "..\AntlrWorks".

And of course using a relative path fails if I want to compile 
grammars located elsewhere.


From sven.van.echelpoel at empolis.com  Tue Jan 20 23:59:54 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Wed, 21 Jan 2009 08:59:54 +0100
Subject: [antlr-interest] [C target] [3.1.1] Memory consumption
	goes	through the roof with	rewrite rules
In-Reply-To: <49760A04.1060707@temporal-wave.com>
References: <1232458430.6334.37.camel@cartman>
	<49760A04.1060707@temporal-wave.com>
Message-ID: <1232524794.6815.0.camel@cartman>

On Tue, 2009-01-20 at 09:29 -0800, Jim Idle wrote:
> Sven Van Echelpoel wrote:
> 
> Yes, this is fixed (or should be) in the current source code snapshot. 
> Perhaps it isn't and that is why the other poster was creating so many 
> tree nodes. That's why I wanted to seen an example. Changing dupTree 
> isn't the answer it is higher of the chain where dupTree should not be 
> being called. Perhaps I never checked in the fix. I am making some time 
> this week for this and other runtime investigation..

Great and thanks,

Sven



From bottiger1 at gmail.com  Wed Jan 21 00:42:01 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 21 Jan 2009 00:42:01 -0800
Subject: [antlr-interest] Fwd: rulecatch C runtime
In-Reply-To: <3490668a0901210037m229f33a3ibd2de10e600f3c24@mail.gmail.com>
References: <3490668a0901210037m229f33a3ibd2de10e600f3c24@mail.gmail.com>
Message-ID: <3490668a0901210042x56609c70p311a00d8caef9812@mail.gmail.com>

Hello Antlr mailing list. Thank you Jim for the C runtime, and Terrence for
Antlr.

I wanted to know how I can change the error handler so it can quit on the
first error.

I tried doing @rulecatch {}, but antlr 3.1.1 says:

"error(100): C:\Users\admin\Desktop\SimpleCalc.g:12:1: syntax error: antlr:
C:\Users\admin\Desktop\SimpleCalc.g:12:1: unexpected token: tokens {"

Any suggestions?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/1fd50968/attachment.html 

From antlr at mirality.co.nz  Wed Jan 21 01:58:41 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 21 Jan 2009 22:58:41 +1300
Subject: [antlr-interest] Fwd: rulecatch C runtime
In-Reply-To: <3490668a0901210042x56609c70p311a00d8caef9812@mail.gmail.co
 m>
References: <3490668a0901210037m229f33a3ibd2de10e600f3c24@mail.gmail.com>
	<3490668a0901210042x56609c70p311a00d8caef9812@mail.gmail.com>
Message-ID: <20090121095849.6B19B3418448@www.antlr.org>

At 21:42 21/01/2009, Bot Tiger wrote:
>I wanted to know how I can change the error handler so it can 
>quit on the first error.
>
>I tried doing @rulecatch {}, but antlr 3.1.1 says:
>
>"error(100): C:\Users\admin\Desktop\SimpleCalc.g:12:1: syntax 
>error: antlr: C:\Users\admin\Desktop\SimpleCalc.g:12:1: 
>unexpected token: tokens {"

I'm not sure about @rulecatch itself (and whether or not it'll do 
what you want), but the error you're getting there is because 
you've put it in the wrong place :)

The first thing in the grammar file is the intro line ("grammar 
foo;").  Following that must be the options block and the tokens 
block, in that order.  (You don't have to specify either one, but 
if you do, then that's where they have to be.)  Only after that 
can you define action blocks (such as @rulecatch), and finally the 
actual rules appear at the end.

So move the @rulecatch block underneath your tokens block and then 
the error should go away.  Whether it actually works after that, 
though, I don't know :)


From indhu.b at s7software.com  Wed Jan 21 04:00:06 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 21 Jan 2009 17:30:06 +0530 (IST)
Subject: [antlr-interest] Highlighting syntax errors
Message-ID: <13230728.2541232539206177.JavaMail.root@star>

Hi, 

When I parse an input in ANTLRWorks IDE, I can see which portion of the input has errors using the 'input' window in the debugger. Syntax error (handled by automatic error recovery) will be highlighted in red. While this is a very useful feature, I cannot parse a very big file (approx 1 mb) inside the IDE as that would be very slow. Is there a way to do this "error highlighting" outside the IDE using the error handling techniques? I looked into chapter 10. But didn't get any hint. 

Advanced thanks for any pointers :-) 

- Indhu 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/2e5e3165/attachment.html 

From indhu.b at s7software.com  Wed Jan 21 04:28:51 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 21 Jan 2009 17:58:51 +0530 (IST)
Subject: [antlr-interest] Highlighting syntax errors
In-Reply-To: <13230728.2541232539206177.JavaMail.root@star>
Message-ID: <33483285.2571232540931418.JavaMail.root@star>

Got it! I guess I can do that using org.antlr.runtime.debug.DebugEventListener's beginResync (), endResync () & consumeToken(Token t) 

http://www.antlr.org/api/Java/interfaceorg_1_1antlr_1_1runtime_1_1debug_1_1_debug_event_listener.html 

:-) 

----- Original Message ----- 
From: Indhu Bharathi <indhu.b at s7software.com> 
To: antlr-interest <antlr-interest at antlr.org> 
Sent: Wednesday, January 21, 2009 5:30:06 PM GMT+0530 Asia/Calcutta 
Subject: [antlr-interest] Highlighting syntax errors 

Hi, 

When I parse an input in ANTLRWorks IDE, I can see which portion of the input has errors using the 'input' window in the debugger. Syntax error (handled by automatic error recovery) will be highlighted in red. While this is a very useful feature, I cannot parse a very big file (approx 1 mb) inside the IDE as that would be very slow. Is there a way to do this "error highlighting" outside the IDE using the error handling techniques? I looked into chapter 10. But didn't get any hint. 

Advanced thanks for any pointers :-) 

- Indhu 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/eb837ee2/attachment.html 

From bruno.marc-aurele at polymtl.ca  Wed Jan 21 04:55:06 2009
From: bruno.marc-aurele at polymtl.ca (Bruno Marc-Aurele)
Date: Wed, 21 Jan 2009 07:55:06 -0500
Subject: [antlr-interest] ANTLR Questions
In-Reply-To: <4976C63F.6050409@gmx.de>
References: <1232506640.49768f1045663@www.imp.polymtl.ca>
	<4976C63F.6050409@gmx.de>
Message-ID: <1232542506.49771b2ada426@www.imp.polymtl.ca>

Thanks a lot Johannes.

Has anyone used heterogenous trees? I would like to know how customisable my AST
can be... I will rewrite my question concerning this so you don't need to look
for it in the previous messages:

Q: I read the section about heterogenous nodes (using the <X> syntax), but all
the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it work
on rule calls (ex: rule<V>)?

Another question pops for me: can I define new attributes for a node in semantic
actions? For example, if I write the following rule:

rule: ID subrule {$subrule.newAttribute = 1;} INT;

... will my node object have a "newAttribute" property (C# target) when
generated?

Thanks a lot,
Bruno M-A.
--
Bruno Marc-Aur?le
courriel Poly: bruno.marc-aurele at polymtl.ca
courriel perso: bruno.m-a at hotmail.com


Selon Johannes Luber <jaluber at gmx.de>:

> Bruno Marc-Aurele schrieb:
> > Hello everyone,
> >
> > I am currently working on a project where I need to translate files (mainly
> > code) from one technology to another. I already have a LL(*) grammar for
> the
> > source language and I am considering rewriting this grammar using ANTLR to
> > benefit from C# generation target.
> >
> > I have used JavaCC a lot in the past and I have some questions about ANTLR,
> a
> > tool that I find really promising for my project. I read the documentation,
> but
> > some things just still are unclear.
> >
> > 1) If I want to generate a parse tree, do I HAVE to use a tree grammar or
> will a
> > combined one work?
>
> You create an AST via a parser grammar. A tree grammar parses only
> created ASTs and may rewrite it, too.
> >
> > 2) About the generated tree, what will be the types of the nodes? Will each
> rule
> > have its type (ex, rule test would have a Test() type node) or are all the
> nodes
> > the same type (NodeType, for example)?
>
> Usually, the used class is BaseTree, but can be changed via a grammar
> option. Heterogenous are also supported, but I have never used them, so
> I can't answer the last question.
>
> Johannes
> >
> > 2.1) I read the section about heterogenous nodes (using the <X> syntax),
> but all
> > the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it
> work
> > on rule calls (ex: rule<V>)?
> >
> > Your answers might spark new questions from me, but for now it's all I need
> to
> > know.
> >
> > Thanks a lot for your support,
> > Bruno Marc-Aur?le.
> >
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>


From nelson.ana at gmail.com  Wed Jan 21 04:58:34 2009
From: nelson.ana at gmail.com (Ana Nelson)
Date: Wed, 21 Jan 2009 12:58:34 +0000
Subject: [antlr-interest] Highlighting syntax errors
In-Reply-To: <33483285.2571232540931418.JavaMail.root@star>
References: <13230728.2541232539206177.JavaMail.root@star>
	<33483285.2571232540931418.JavaMail.root@star>
Message-ID: <a7d6d2740901210458t753ca700qeb987b7dda8298cb@mail.gmail.com>

Hi, Indhu,

You could also try the syntax highlighting support in Pygments (
http://pygments.org/). ANTLR support is only in the development branch for
now, but it should be included in the next release. To check out the source:

hg clone http://dev.pocoo.org/hg/pygments-main

This would let you view your coloured code as HTML or any of the available
Pygments formats.

Regards
Ana



2009/1/21 Indhu Bharathi <indhu.b at s7software.com>

> Got it! I guess I can do that using
> org.antlr.runtime.debug.DebugEventListener's beginResync (), endResync () &
> consumeToken(Token t)
>
>
> http://www.antlr.org/api/Java/interfaceorg_1_1antlr_1_1runtime_1_1debug_1_1_debug_event_listener.html
>
> :-)
>
>
> ----- Original Message -----
> From: Indhu Bharathi <indhu.b at s7software.com>
> To: antlr-interest <antlr-interest at antlr.org>
> Sent: Wednesday, January 21, 2009 5:30:06 PM GMT+0530 Asia/Calcutta
> Subject: [antlr-interest] Highlighting syntax errors
>
> Hi,
>
> When I parse an input in ANTLRWorks IDE, I can see which portion of the
> input has errors using the 'input' window in the debugger. Syntax error
> (handled by automatic error recovery) will be highlighted in red. While this
> is a very useful feature, I cannot parse a very big file (approx 1 mb)
> inside the IDE as that would be very slow. Is there a way to do this "error
> highlighting" outside the IDE using the error handling techniques? I looked
> into chapter 10. But didn't get any hint.
>
> Advanced thanks for any pointers :-)
>
> - Indhu
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/075e64eb/attachment.html 

From tbrandonau at gmail.com  Wed Jan 21 05:23:00 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 22 Jan 2009 00:23:00 +1100
Subject: [antlr-interest] ANTLR Questions
In-Reply-To: <1232542506.49771b2ada426@www.imp.polymtl.ca>
References: <1232506640.49768f1045663@www.imp.polymtl.ca>
	<4976C63F.6050409@gmx.de>
	<1232542506.49771b2ada426@www.imp.polymtl.ca>
Message-ID: <ebc876d70901210523w17db6549y1cf799ae5b6d9d8c@mail.gmail.com>

On Wed, Jan 21, 2009 at 11:55 PM, Bruno Marc-Aurele
<bruno.marc-aurele at polymtl.ca> wrote:
> Thanks a lot Johannes.
>
> Has anyone used heterogenous trees? I would like to know how customisable my AST
> can be... I will rewrite my question concerning this so you don't need to look
> for it in the previous messages:
>
> Q: I read the section about heterogenous nodes (using the <X> syntax), but all
> the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it work
> on rule calls (ex: rule<V>)?
ANTLR creates Abstract Syntax Trees not parse trees. So nodes are not
automatically created for rules. You have to manually add such
imaginary nodes specifying a token type, so the rule<V> syntax does
not make sense. You would need to do something like:
rule: children -> ^(RULE<V> children);

> Another question pops for me: can I define new attributes for a node in semantic
> actions? For example, if I write the following rule:
>
> rule: ID subrule {$subrule.newAttribute = 1;} INT;
>
> ... will my node object have a "newAttribute" property (C# target) when
> generated?
ANTLR doesn't generate the custom AST types for you, you must manually
create them.

Tom.
>
> Thanks a lot,
> Bruno M-A.
> --
> Bruno Marc-Aur?le
> courriel Poly: bruno.marc-aurele at polymtl.ca
> courriel perso: bruno.m-a at hotmail.com
>
>
> Selon Johannes Luber <jaluber at gmx.de>:
>
>> Bruno Marc-Aurele schrieb:
>> > Hello everyone,
>> >
>> > I am currently working on a project where I need to translate files (mainly
>> > code) from one technology to another. I already have a LL(*) grammar for
>> the
>> > source language and I am considering rewriting this grammar using ANTLR to
>> > benefit from C# generation target.
>> >
>> > I have used JavaCC a lot in the past and I have some questions about ANTLR,
>> a
>> > tool that I find really promising for my project. I read the documentation,
>> but
>> > some things just still are unclear.
>> >
>> > 1) If I want to generate a parse tree, do I HAVE to use a tree grammar or
>> will a
>> > combined one work?
>>
>> You create an AST via a parser grammar. A tree grammar parses only
>> created ASTs and may rewrite it, too.
>> >
>> > 2) About the generated tree, what will be the types of the nodes? Will each
>> rule
>> > have its type (ex, rule test would have a Test() type node) or are all the
>> nodes
>> > the same type (NodeType, for example)?
>>
>> Usually, the used class is BaseTree, but can be changed via a grammar
>> option. Heterogenous are also supported, but I have never used them, so
>> I can't answer the last question.
>>
>> Johannes
>> >
>> > 2.1) I read the section about heterogenous nodes (using the <X> syntax),
>> but all
>> > the examples seem applied on token calls (ex: ID<V> and 'id'<V>). Does it
>> work
>> > on rule calls (ex: rule<V>)?
>> >
>> > Your answers might spark new questions from me, but for now it's all I need
>> to
>> > know.
>> >
>> > Thanks a lot for your support,
>> > Bruno Marc-Aur?le.
>> >
>> >
>> >
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From obdrzalek at gmail.com  Wed Jan 21 05:33:14 2009
From: obdrzalek at gmail.com (=?windows-1252?Q?Jan_Obdr=9E=E1lek?=)
Date: Wed, 21 Jan 2009 14:33:14 +0100
Subject: [antlr-interest] C target,
	C grammar + AST = missing 	*_SymbolsPop()
In-Reply-To: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41>
Message-ID: <66cce1fb0901210533x28d2ce4fpc6b05baf097cbfb7@mail.gmail.com>

> "ss9_combined_lexer_parserParser.cpp: In function
> `ss9_combined_lexer_parserParser_translation_unit_return
> translation_unit(ss9_combined_lexer_parserParser_Ctx_struct*)':
> ss9_combined_lexer_parserParser.cpp:12842: error:
> `ptranslation_unit_SymbolsPop' undeclared (first use this function)"
>
> Sure enough, no such function exists.  Things work fine if I don't declare
> "output=AST"; in that case, the only SymbolsPop() function generated or
> called appears to be pss9_combined_lexer_parserParser_SymbolsPop(), i.e. all
> dynamic scope code calls the same ScopePop().  Does this ring any bells for
> anybody?

My GNU C grammar suffers from exactly the same problem (using
ANTLR-3.1.1). I sent the grammar to Jim earlier today (before I read
your post), with the description of the error.

Jan

--
Dr. Jan Obdr??lek <obdrzalek at fi.muni.cz>
Faculty of Informatics, Masaryk University, Brno, Czech Republic

From JALuber at gmx.de  Wed Jan 21 06:04:57 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Wed, 21 Jan 2009 15:04:57 +0100
Subject: [antlr-interest] ANTLR Questions
In-Reply-To: <ebc876d70901210523w17db6549y1cf799ae5b6d9d8c@mail.gmail.com>
References: <1232506640.49768f1045663@www.imp.polymtl.ca>	
	<4976C63F.6050409@gmx.de>	
	<1232542506.49771b2ada426@www.imp.polymtl.ca>
	<ebc876d70901210523w17db6549y1cf799ae5b6d9d8c@mail.gmail.com>
Message-ID: <20090121140457.225660@gmx.net>

> On Wed, Jan 21, 2009 at 11:55 PM, Bruno Marc-Aurele
> <bruno.marc-aurele at polymtl.ca> wrote:
> > Another question pops for me: can I define new attributes for a node in
> semantic
> > actions? For example, if I write the following rule:
> >
> > rule: ID subrule {$subrule.newAttribute = 1;} INT;
> >
> > ... will my node object have a "newAttribute" property (C# target) when
> > generated?
> ANTLR doesn't generate the custom AST types for you, you must manually
> create them.
> 
> Tom.

Isn't the option ASTLabelType used to switch to a different class? Or would one implement a new TreeNodeFactory (class name may be different)?

Johannes
-- 
NUR NOCH BIS 31.01.! GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 EURO/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From sharwell at pixelminegames.com  Wed Jan 21 06:52:49 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 21 Jan 2009 08:52:49 -0600
Subject: [antlr-interest] Highlighting syntax errors
In-Reply-To: <13230728.2541232539206177.JavaMail.root@star>
References: <13230728.2541232539206177.JavaMail.root@star>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67749@Bloodymary.ironwillgames.com>

All Visual Studio language service features run on separate threads from the main UI thread. I have several posts on my blog (http://blog.280z28.org/) talking about ANTLR/Visual Studio integration for language services. If you are interested, I could probably add articles on the following:

 

?         Ensuring your language service doesn?t slow down the IDE (like Eclipse does, for example)

?         Highlighting errors in the IDE. This is supported in the Managed Babel framework and is relatively easy to add to an ANTLR language service. All of my language services, including the ones for nFringe, support this feature.

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi
Sent: Wednesday, January 21, 2009 6:00 AM
To: antlr-interest
Subject: [antlr-interest] Highlighting syntax errors

 

Hi,

When I parse an input in ANTLRWorks IDE, I can see which portion of the input has errors using the 'input' window in the debugger. Syntax error (handled by automatic error recovery) will be highlighted in red. While this is a very useful feature, I cannot parse a very big file (approx 1 mb) inside the IDE as that would be very slow. Is there a way to do this "error highlighting" outside the IDE using the error handling techniques? I looked into chapter 10. But didn't get any hint.

Advanced thanks for any pointers :-)

- Indhu



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/7fa1dda5/attachment.html 

From sharwell at pixelminegames.com  Wed Jan 21 06:58:23 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 21 Jan 2009 08:58:23 -0600
Subject: [antlr-interest] ANTLR Questions
In-Reply-To: <20090121140457.225660@gmx.net>
References: <1232506640.49768f1045663@www.imp.polymtl.ca>	<4976C63F.6050409@gmx.de>	<1232542506.49771b2ada426@www.imp.polymtl.ca><ebc876d70901210523w17db6549y1cf799ae5b6d9d8c@mail.gmail.com>
	<20090121140457.225660@gmx.net>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6774A@Bloodymary.ironwillgames.com>

ASTLabelType only changes what nodes are cast to inside the generated code. For example, if you call a function from an action in your grammar, and pass it a node, it will pass a Tree interface (ITree in the CSharp/CSharp2 runtime) by default:

MyFunction( ((Tree)someNode) );

However, if you specify the option 'ASTLabelType=CommonTree;', then it will call the function like this:

MyFunction( ((CommonTree)someNode) );

If you use an ASTLabelType that is not CommonTree or one of its base classes, you are responsible for setting the grammar's TreeAdaptor to one that generates nodes of the proper type. Make sure your TreeAdaptor handles creating error nodes as well, or you'll get invalid cast exceptions during error handling.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Wednesday, January 21, 2009 8:05 AM
To: Thomas Brandon; bruno.marc-aurele at polymtl.ca
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR Questions

> On Wed, Jan 21, 2009 at 11:55 PM, Bruno Marc-Aurele
> <bruno.marc-aurele at polymtl.ca> wrote:
> > Another question pops for me: can I define new attributes for a node in
> semantic
> > actions? For example, if I write the following rule:
> >
> > rule: ID subrule {$subrule.newAttribute = 1;} INT;
> >
> > ... will my node object have a "newAttribute" property (C# target) when
> > generated?
> ANTLR doesn't generate the custom AST types for you, you must manually
> create them.
> 
> Tom.

Isn't the option ASTLabelType used to switch to a different class? Or would one implement a new TreeNodeFactory (class name may be different)?

Johannes
-- 
NUR NOCH BIS 31.01.! GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 EURO/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Jan 21 08:17:22 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Jan 2009 08:17:22 -0800
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <F67E93EEEB8744FE83E1DED5CAC36EA2@DFW5RB41>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41><49760934.1090905@temporal-wave.com><7AB2C203531B403599233F6B28D3B835@DFW5RB41>	<99636D753EA94C54B46867AC6F2EC2B1@DFW5RB41>
	<F67E93EEEB8744FE83E1DED5CAC36EA2@DFW5RB41>
Message-ID: <49774A92.2050907@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/9f56fe2a/attachment.html 

From parrt at cs.usfca.edu  Wed Jan 21 10:03:11 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 21 Jan 2009 10:03:11 -0800
Subject: [antlr-interest] ANTLRWorks output path errors
In-Reply-To: <20090121071141.17B7D34184AB@www.antlr.org>
References: <20090121071141.17B7D34184AB@www.antlr.org>
Message-ID: <D9E87DC4-FECB-4E43-B76E-1AD8414668E8@cs.usfca.edu>

weird. what is your pref for output dir look like?
Ter
On Jan 20, 2009, at 11:11 PM, Gavin Lambert wrote:

> I recently tried using ANTLRWorks 1.2.2 (previously I was using
> 1.1.7), but I'm getting errors whenever I tell it to generate the
> code (I'm using Windows):
>
> Check Grammar reported some errors:
> (5): directory not found:
> D:\Programming\antlr\tests\D:\Programming\antlr\AntlrWorks
> Consult the console for more information.
>
> The grammar file I am trying to compile is in
> D:\Programming\antlr\tests; the directory
> D:\Programming\antlr\AntlrWorks is the Output Path set in
> ANTLRWorks' preferences.
>
> If I change the output path to "..\AntlrWorks" and restart
> ANTLRWorks (the change doesn't seem to have any effect until
> ANTLRWorks is restarted) then it will *occasionally* work
> properly, and other times give the same error but with the path
> simply "..\AntlrWorks".
>
> And of course using a relative path fails if I want to compile
> grammars located elsewhere.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Wed Jan 21 10:54:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 22 Jan 2009 07:54:21 +1300
Subject: [antlr-interest] ANTLRWorks output path errors
In-Reply-To: <D9E87DC4-FECB-4E43-B76E-1AD8414668E8@cs.usfca.edu>
References: <20090121071141.17B7D34184AB@www.antlr.org>
	<D9E87DC4-FECB-4E43-B76E-1AD8414668E8@cs.usfca.edu>
Message-ID: <20090121185432.880193418448@www.antlr.org>

At 07:03 22/01/2009, Terence Parr wrote:
 >weird. what is your pref for output dir look like?

I already said that:

 >On Jan 20, 2009, at 11:11 PM, Gavin Lambert wrote:
 >> The grammar file I am trying to compile is in
 >> D:\Programming\antlr\tests; the directory
 >> D:\Programming\antlr\AntlrWorks is the Output Path set in
 >> ANTLRWorks' preferences.
 >>
 >> If I change the output path to "..\AntlrWorks" and restart
 >> ANTLRWorks (the change doesn't seem to have any effect until
 >> ANTLRWorks is restarted) then it will *occasionally* work
 >> properly, and other times give the same error but with the 
path
 >> simply "..\AntlrWorks".


From parrt at cs.usfca.edu  Wed Jan 21 11:41:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 21 Jan 2009 11:41:46 -0800
Subject: [antlr-interest] ANTLRWorks output path errors
In-Reply-To: <20090121185432.E64BEF06B6@mail.cs.usfca.edu>
References: <20090121071141.17B7D34184AB@www.antlr.org>
	<D9E87DC4-FECB-4E43-B76E-1AD8414668E8@cs.usfca.edu>
	<20090121185432.E64BEF06B6@mail.cs.usfca.edu>
Message-ID: <CBE12FA0-B904-45DA-9998-C3DA0C7A2064@cs.usfca.edu>

oh, right. sorry.  seems we had something about this already in  
jira...can't find at the moment.
On Jan 21, 2009, at 10:54 AM, Gavin Lambert wrote:

> At 07:03 22/01/2009, Terence Parr wrote:
> >weird. what is your pref for output dir look like?
>
> I already said that:
>
> >On Jan 20, 2009, at 11:11 PM, Gavin Lambert wrote:
> >> The grammar file I am trying to compile is in
> >> D:\Programming\antlr\tests; the directory
> >> D:\Programming\antlr\AntlrWorks is the Output Path set in
> >> ANTLRWorks' preferences.
> >>
> >> If I change the output path to "..\AntlrWorks" and restart
> >> ANTLRWorks (the change doesn't seem to have any effect until
> >> ANTLRWorks is restarted) then it will *occasionally* work
> >> properly, and other times give the same error but with the path
> >> simply "..\AntlrWorks".
>


From spriolo at walkerinfo.com  Wed Jan 21 15:00:07 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Wed, 21 Jan 2009 18:00:07 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND and OR)
Message-ID: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>

Hello,

 

I've searched high and low and can't find a reference to describe the
Logical Operators (and, or) design pattern for Tree Evaluation (after
purchasing the book I came up empty handed too).

 

Any help?

 

Thanks.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/f3551e62/attachment.html 

From bottiger1 at gmail.com  Wed Jan 21 19:32:29 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 21 Jan 2009 19:32:29 -0800
Subject: [antlr-interest] Fwd: rulecatch C runtime
In-Reply-To: <4976f1d9.020bca0a.19d4.1accSMTPIN_ADDED@mx.google.com>
References: <3490668a0901210037m229f33a3ibd2de10e600f3c24@mail.gmail.com>
	<3490668a0901210042x56609c70p311a00d8caef9812@mail.gmail.com>
	<4976f1d9.020bca0a.19d4.1accSMTPIN_ADDED@mx.google.com>
Message-ID: <3490668a0901211932u517db693h7a13c7321762f97b@mail.gmail.com>

Ahh thank you Gavin.

I am still trying to figure out how to exit on the first error though. I
just realized all the @rulecatch examples I have are in Java and use an
exception handler, while C does not have exceptions.

Any suggestions?

On Wed, Jan 21, 2009 at 1:58 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 21:42 21/01/2009, Bot Tiger wrote:
>
>> I wanted to know how I can change the error handler so it can quit on the
>> first error.
>>
>> I tried doing @rulecatch {}, but antlr 3.1.1 says:
>>
>> "error(100): C:\Users\admin\Desktop\SimpleCalc.g:12:1: syntax error:
>> antlr: C:\Users\admin\Desktop\SimpleCalc.g:12:1: unexpected token: tokens {"
>>
>
> I'm not sure about @rulecatch itself (and whether or not it'll do what you
> want), but the error you're getting there is because you've put it in the
> wrong place :)
>
> The first thing in the grammar file is the intro line ("grammar foo;").
>  Following that must be the options block and the tokens block, in that
> order.  (You don't have to specify either one, but if you do, then that's
> where they have to be.)  Only after that can you define action blocks (such
> as @rulecatch), and finally the actual rules appear at the end.
>
> So move the @rulecatch block underneath your tokens block and then the
> error should go away.  Whether it actually works after that, though, I don't
> know :)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090121/0b3c5cf5/attachment.html 

From g.r.vansickle at att.net  Wed Jan 21 19:38:20 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Wed, 21 Jan 2009 21:38:20 -0600
Subject: [antlr-interest] C target,
	C grammar + AST = missing *_SymbolsPop()
In-Reply-To: <49774A92.2050907@temporal-wave.com>
References: <42B44BE2E3B144BAABE3CD12E72141D1@DFW5RB41><49760934.1090905@temporal-wave.com><7AB2C203531B403599233F6B28D3B835@DFW5RB41>	<99636D753EA94C54B46867AC6F2EC2B1@DFW5RB41><F67E93EEEB8744FE83E1DED5CAC36EA2@DFW5RB41>
	<49774A92.2050907@temporal-wave.com>
Message-ID: <EBDAD46F2616402CAE29F73456BB14C5@DFW5RB41>

> From: Jim Idle

> 	Is there something else I can do to try help debugging this?
> 	  
> 
> No - so long as I can reproduce it then it is fine.

So are you saying you are able to reproduce this?

> However, 
> you might tell me if the same code generation error happens 
> if you remove language=C. That will save me a little time at least :-)
> 

FWICT the same problem doesn't show up in the Java target:

    // $ANTLR start "translation_unit"
    // C.g:203:1: translation_unit : ( external_declaration )+ ;
    public final CParser.translation_unit_return translation_unit() throws
RecognitionException {
        Symbols_stack.push(new Symbols_scope());

	[...]

        finally {
            [...]
            Symbols_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "translation_unit"

-- 
Gary R. Van Sickle
 


From John.Holliday at citec.com.au  Wed Jan 21 21:30:53 2009
From: John.Holliday at citec.com.au (John Holliday)
Date: Thu, 22 Jan 2009 15:30:53 +1000
Subject: [antlr-interest] Help for a new chum
Message-ID: <E6D0E388F30C8444BC9DD4A677AF95610B65DDDD@CITSBNEEXC01.pclan.citec.com.au>

Hi There,

 

I'm new to the world of formal grammar parsing and need some pointers...


 

For some time I've had a hobby project of an SQL formatter. It started
in C, got ported to C++ and now I want to move it to Java.  To date,
I've manually written all the parsing code, but this time, I think I'll
get smart.... I've found a grammar that (mostly) suits my needs, and
I've managed to get it working in Antlr works. Now I'm trying to figure
out how to use the generated code to do something useful, but I'm
struggling. All pointers to articles/examples would be most appreciated.

 

Also, in the ANTLR Cheat Sheet there's reference to a TP.g grammar. Is
the source for that file anywhere (and is it relevant)?

 

Cheers JH

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/cbbe26d3/attachment.html 

From wbgillis at gmail.com  Wed Jan 21 22:34:55 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Thu, 22 Jan 2009 00:34:55 -0600
Subject: [antlr-interest]  CSharp2: serialize/deserialize as AST
Message-ID: <9648449A18064CB5AB13082FA7D4887A@homelaptop>

I want to serialize/deserialize an AST, binary format, using C#.

But, I'm not clear how the AST is reconstructed on deserialization concerning the IToken.Parent.  

I see some serialization in ANTLR, e.g. Antlr.Runtime.Debug.DebugEventSocketProxy.SerializeToken.  This would be a pointer; therefore, some recursive approach to using built-in AddChild methods or something must be done???

Before I brew up something, perhaps this is (a) already done/available?  (b) easier than I'm making it???

Thanks,
Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/13c40ecd/attachment.html 

From jaluber at gmx.de  Wed Jan 21 22:41:03 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 22 Jan 2009 07:41:03 +0100
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
In-Reply-To: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
Message-ID: <497814FF.7090607@gmx.de>

Ben Gillis schrieb:
> I want to serialize/deserialize an AST, binary format, using C#.
>  
> But, I'm not clear how the AST is reconstructed on deserialization
> concerning the IToken.Parent. 
>  
> I see some serialization in ANTLR, e.g.
> Antlr.Runtime.Debug.DebugEventSocketProxy.SerializeToken.  This would be
> a pointer; therefore, some recursive approach to using built-in AddChild
> methods or something must be done???
>  
> Before I brew up something, perhaps this is (a) already done/available? 
> (b) easier than I'm making it???

Doesn't the usual approach via Binary/XML formatters work? If the
classes in 3.1.1 don't have the required attributes, then get a
snapshot, as those should be in the repo files.

Johannes
>  
> Thanks,
> Ben
>  
>  
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From wbgillis at gmail.com  Wed Jan 21 22:49:56 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Thu, 22 Jan 2009 00:49:56 -0600
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de>
Message-ID: <59326C08691544EEB74F1286E3176443@homelaptop>

> Doesn't the usual approach via Binary/XML formatters work? If
Yes, with a CommonTree wrapper or SurrogateSelector.

But, how do you handle the CommonTree.Parent member upon deserialization? 
Again, looking at the ANTLR code, it's a pointer, right?  Merely restoring a 
serialized value won't work for that.



----- Original Message ----- 
From: "Johannes Luber" <jaluber at gmx.de>
To: "Ben Gillis" <wbgillis at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Thursday, January 22, 2009 12:41 AM
Subject: Re: [antlr-interest] CSharp2: serialize/deserialize as AST


> Ben Gillis schrieb:
>> I want to serialize/deserialize an AST, binary format, using C#.
>>
>> But, I'm not clear how the AST is reconstructed on deserialization
>> concerning the IToken.Parent.
>>
>> I see some serialization in ANTLR, e.g.
>> Antlr.Runtime.Debug.DebugEventSocketProxy.SerializeToken.  This would be
>> a pointer; therefore, some recursive approach to using built-in AddChild
>> methods or something must be done???
>>
>> Before I brew up something, perhaps this is (a) already done/available?
>> (b) easier than I'm making it???
>
> Doesn't the usual approach via Binary/XML formatters work? If the
> classes in 3.1.1 don't have the required attributes, then get a
> snapshot, as those should be in the repo files.
>
> Johannes
>>
>> Thanks,
>> Ben
>>
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jaluber at gmx.de  Wed Jan 21 23:17:11 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 22 Jan 2009 08:17:11 +0100
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
In-Reply-To: <59326C08691544EEB74F1286E3176443@homelaptop>
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de>
	<59326C08691544EEB74F1286E3176443@homelaptop>
Message-ID: <49781D77.5050200@gmx.de>

Ben Gillis schrieb:
>> Doesn't the usual approach via Binary/XML formatters work? If
> Yes, with a CommonTree wrapper or SurrogateSelector.
> 
> But, how do you handle the CommonTree.Parent member upon
> deserialization? Again, looking at the ANTLR code, it's a pointer,
> right?  Merely restoring a serialized value won't work for that.

Actually, I don't know how pointers are treated, but I'd be surprised if
the standard formatters don't handle this case themselves as it is a
general case with using references instead value types in member fields.
Did you you already try it or do you just assume that it doesn't work?

If it really doesn't work, then you could create your own (De)Serializer
and replace pointers by an object id field. IIRC, on CodeProject is an
article on doing so.

Johannes
> 
> 
> 
> ----- Original Message ----- From: "Johannes Luber" <jaluber at gmx.de>
> To: "Ben Gillis" <wbgillis at gmail.com>
> Cc: <antlr-interest at antlr.org>
> Sent: Thursday, January 22, 2009 12:41 AM
> Subject: Re: [antlr-interest] CSharp2: serialize/deserialize as AST
> 
> 
>> Ben Gillis schrieb:
>>> I want to serialize/deserialize an AST, binary format, using C#.
>>>
>>> But, I'm not clear how the AST is reconstructed on deserialization
>>> concerning the IToken.Parent.
>>>
>>> I see some serialization in ANTLR, e.g.
>>> Antlr.Runtime.Debug.DebugEventSocketProxy.SerializeToken.  This would be
>>> a pointer; therefore, some recursive approach to using built-in AddChild
>>> methods or something must be done???
>>>
>>> Before I brew up something, perhaps this is (a) already done/available?
>>> (b) easier than I'm making it???
>>
>> Doesn't the usual approach via Binary/XML formatters work? If the
>> classes in 3.1.1 don't have the required attributes, then get a
>> snapshot, as those should be in the repo files.
>>
>> Johannes
>>>
>>> Thanks,
>>> Ben
>>>
>>>
>>>
>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 


From wbgillis at gmail.com  Wed Jan 21 23:43:08 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Thu, 22 Jan 2009 01:43:08 -0600
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de>
	<59326C08691544EEB74F1286E3176443@homelaptop>
	<49781D77.5050200@gmx.de>
Message-ID: <E427D18C44EB4544AA4B964AE31593CE@homelaptop>

> Did you you already try it or do you just assume that it doesn't work?
Somehow, I missed BaseTree.AddChild.  That'll do the trick.
CommonTree.Parent initially jumped out at me, and I chased the wrong rabbit. 
My bad.


----- Original Message ----- 
From: "Johannes Luber" <jaluber at gmx.de>
To: "Ben Gillis" <wbgillis at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Thursday, January 22, 2009 1:17 AM
Subject: Re: [antlr-interest] CSharp2: serialize/deserialize as AST


> Ben Gillis schrieb:
>>> Doesn't the usual approach via Binary/XML formatters work? If
>> Yes, with a CommonTree wrapper or SurrogateSelector.
>>
>> But, how do you handle the CommonTree.Parent member upon
>> deserialization? Again, looking at the ANTLR code, it's a pointer,
>> right?  Merely restoring a serialized value won't work for that.
>
> Actually, I don't know how pointers are treated, but I'd be surprised if
> the standard formatters don't handle this case themselves as it is a
> general case with using references instead value types in member fields.
> Did you you already try it or do you just assume that it doesn't work?
>
> If it really doesn't work, then you could create your own (De)Serializer
> and replace pointers by an object id field. IIRC, on CodeProject is an
> article on doing so.
>
> Johannes
>>
>>
>>
>> ----- Original Message ----- From: "Johannes Luber" <jaluber at gmx.de>
>> To: "Ben Gillis" <wbgillis at gmail.com>
>> Cc: <antlr-interest at antlr.org>
>> Sent: Thursday, January 22, 2009 12:41 AM
>> Subject: Re: [antlr-interest] CSharp2: serialize/deserialize as AST
>>
>>
>>> Ben Gillis schrieb:
>>>> I want to serialize/deserialize an AST, binary format, using C#.
>>>>
>>>> But, I'm not clear how the AST is reconstructed on deserialization
>>>> concerning the IToken.Parent.
>>>>
>>>> I see some serialization in ANTLR, e.g.
>>>> Antlr.Runtime.Debug.DebugEventSocketProxy.SerializeToken.  This would 
>>>> be
>>>> a pointer; therefore, some recursive approach to using built-in 
>>>> AddChild
>>>> methods or something must be done???
>>>>
>>>> Before I brew up something, perhaps this is (a) already done/available?
>>>> (b) easier than I'm making it???
>>>
>>> Doesn't the usual approach via Binary/XML formatters work? If the
>>> classes in 3.1.1 don't have the required attributes, then get a
>>> snapshot, as those should be in the repo files.
>>>
>>> Johannes
>>>>
>>>> Thanks,
>>>> Ben
>>>>
>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
> 


From antlr at mirality.co.nz  Thu Jan 22 00:43:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 22 Jan 2009 21:43:02 +1300
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
In-Reply-To: <49781D77.5050200@gmx.de>
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de>
	<59326C08691544EEB74F1286E3176443@homelaptop>
	<49781D77.5050200@gmx.de>
Message-ID: <20090122084320.4A615341840B@www.antlr.org>

At 20:17 22/01/2009, Johannes Luber wrote:
 >Actually, I don't know how pointers are treated, but I'd be
 >surprised if the standard formatters don't handle this case
 >themselves as it is a general case with using references
 >instead value types in member fields.

Is it an actual pointer (unsafe something *) or is it just a 
reference-type field?

Because binary formatters handle the latter perfectly fine; they 
can even cope properly with cycles in the object graph (which is 
what will be the case here -- parent->child->parent).

The XmlSerializer can't (it's not a binary formatter), but the 
SoapFormatter can (because it is, even though it outputs XML).


From oliver.zeigermann at gmail.com  Thu Jan 22 01:19:59 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 22 Jan 2009 10:19:59 +0100
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
Message-ID: <9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>

Hi!

Not quite sure what your problem is. Are you asking how an AST for a
logical expression might look like? Or the grammar that creates it? Or
the tree grammar that walks it? Or something else?

-Oliver


2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> Hello,
>
>
>
> I've searched high and low and can't find a reference to describe the
> Logical Operators (and, or) design pattern for Tree Evaluation (after
> purchasing the book I came up empty handed too).
>
>
>
> Any help?
>
>
>
> Thanks.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From zenzike at gmail.com  Thu Jan 22 01:45:35 2009
From: zenzike at gmail.com (Zenzike)
Date: Thu, 22 Jan 2009 09:45:35 +0000
Subject: [antlr-interest] Matching tokens on hidden channels
Message-ID: <31e910dd0901220145v305c4744o767e3f71eb27758e@mail.gmail.com>

I am currently trying to match tokens on hidden channels -- this is
sometimes needed when a token is hidden, since generally, these tokens
should not be considered by the parser, but on occasion they should.

I saw a brief mention of "hidden token matching" in a wiki document
that Ter wrote [1], where the syntax:

.TOKEN

matches a particular hidden token TOKEN, and this is indicated by the
"." that precedes TOKEN. It seems that this functionality is not in
ANTLR 3.1.1 yet -- are there any plans to include it?

In order to try and solve this for what I have now, I've tried to use
semantic predicates along these lines:

rule0 : PREV ({NL()}?=> NEXT) ;

where PREV and NEXT are tokens that I want to separate with a hidden
NL token, and NL() is defined as such:

boolean NL() {
  int i = -1;
  while (input.LA(i) != Token.EOF && input.LT(-1).getChannel() == HIDDEN) {
    if (input.LA(i) == NL)
      return true;
    i--;
  }
  return false;
}

This works fine if NEXT is a token, but when it's a rule, I get an
error. For example, where I have:

rule1 : PREV ({NL()}?=> rule2);

I get the following error if I compile with the -debug flag (no error
otherwise):

ANTLR Parser Generator  Version 3.1.1
error(10):  internal error: AztexParser.g :
java.util.NoSuchElementException: no such attribute: description in
template context [outputFile parser genericParser(...) cyclicDFA
if(dfa.specialStateSTs)_subtemplate anonymous cyclicDFAState
cyclicDFAEdge notPredicate evalPredicate(...)]
org.antlr.stringtemplate.StringTemplate.checkNullAttributeAgainstFormalArguments(StringTemplate.java:1276)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:800)

Is this a bug in my code, or is it a problem with debug mode? Is there
another way of achieving what I'm looking for?

Any help would be greatly appreciated.

zenzike


[1] http://www.antlr.org/wiki/display/~admin/2007/06/28/Token+stream+rewriting+with+rewrite+rules

From zenzike at gmail.com  Thu Jan 22 03:30:13 2009
From: zenzike at gmail.com (Zenzike)
Date: Thu, 22 Jan 2009 11:30:13 +0000
Subject: [antlr-interest] Filter lexers do not skip tokens
Message-ID: <31e910dd0901220330t35064f40k164bfe8bb52f9cb@mail.gmail.com>

It seems that filter lexers overwrite the default nextToken() method,
and in so doing, no check is made for skipped tokens, rendering the
skip() command useless -- is this a bug, or a feature?

From spriolo at walkerinfo.com  Thu Jan 22 03:57:38 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Thu, 22 Jan 2009 06:57:38 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
Message-ID: <A94D52854588164583AA892FECB2599549182C@wimail.wi>

Sorry about that, I'm trying to setup a walker that will know what to do with "OR" and "AND" operators.  I have the parser setup so that the AST is nicely formed with expr such as (< a 3).  I'm able to walk and evaluate these simple expr too. But! when I walk (or (and (< a 3) (< b 3)) (< c 3)) I'm stumped.

This must have been solved before and I would guess that there is probably a design pattern for walking boolean AST.

Thanks,
Scott

-----Original Message-----
From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com]
Sent: Thu 1/22/2009 4:19 AM
To: Priolo, Scott
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators (AND and OR)
 
Hi!

Not quite sure what your problem is. Are you asking how an AST for a
logical expression might look like? Or the grammar that creates it? Or
the tree grammar that walks it? Or something else?

-Oliver


2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> Hello,
>
>
>
> I've searched high and low and can't find a reference to describe the
> Logical Operators (and, or) design pattern for Tree Evaluation (after
> purchasing the book I came up empty handed too).
>
>
>
> Any help?
>
>
>
> Thanks.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/e1c7ca70/attachment.html 

From zenzike at gmail.com  Thu Jan 22 03:57:48 2009
From: zenzike at gmail.com (Zenzike)
Date: Thu, 22 Jan 2009 11:57:48 +0000
Subject: [antlr-interest] Filter lexers do not skip tokens
In-Reply-To: <31e910dd0901220330t35064f40k164bfe8bb52f9cb@mail.gmail.com>
References: <31e910dd0901220330t35064f40k164bfe8bb52f9cb@mail.gmail.com>
Message-ID: <31e910dd0901220357q61084880l33b7beb01251eedc@mail.gmail.com>

It looks like a bug.

I suggest that in the file
/src/org/antlr/codegen/templates/Java/Java.stg modifies its definition
of filteringNextToken() to the following,
where a check for state.token==Token.SKIP_TOKEN occurs, and emit() is
only called if the state token is not previously set.

filteringNextToken() ::= <<
public Token nextToken() {
    while (true) {
        if ( input.LA(1)==CharStream.EOF ) {
            return Token.EOF_TOKEN;
        }
        state.token = null;
	state.channel = Token.DEFAULT_CHANNEL;
        state.tokenStartCharIndex = input.index();
        state.tokenStartCharPositionInLine = input.getCharPositionInLine();
        state.tokenStartLine = input.getLine();
	state.text = null;
        try {
            int m = input.mark();
            state.backtracking=1; <! means we won't throw slow exception !>
            state.failed=false;
            mTokens();
            state.backtracking=0;
            <! mTokens backtracks with synpred at backtracking==2
               and we set the synpredgate to allow actions at level 1. !>
            if ( state.failed ) {
                input.rewind(m);
                input.consume(); <! advance one char and try again !>
            }
            else {            <! emit a token only if it is not a SKIP_TOKEN !>
    				if ( state.token==null ) {
    					emit();
    				}
    				else if ( state.token==Token.SKIP_TOKEN ) {
    					continue;
    				}
    				return state.token;
            }
        }
        catch (RecognitionException re) {
            // shouldn't happen in backtracking mode, but...
            reportError(re);
            recover(re);
        }
    }
}

From oliver.zeigermann at gmail.com  Thu Jan 22 04:29:34 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 22 Jan 2009 13:29:34 +0100
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <A94D52854588164583AA892FECB2599549182C@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
Message-ID: <9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>

OK, so you need a tree grammar that can parse complex boolean
expressions, right?

expression
  : ^((AND|OR) expression expression)
  | ^(('<'|'>'|'='|'!=') expression expression)
  | ^(('+'|'-'|'*'|'/') expression expression)
  | ID
  | literal
  ;

Would that work?

-Oliver

2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> Sorry about that, I'm trying to setup a walker that will know what to do
> with "OR" and "AND" operators.  I have the parser setup so that the AST is
> nicely formed with expr such as (< a 3).  I'm able to walk and evaluate
> these simple expr too. But! when I walk (or (and (< a 3) (< b 3)) (< c 3))
> I'm stumped.
>
> This must have been solved before and I would guess that there is probably a
> design pattern for walking boolean AST.
>
> Thanks,
> Scott
>
> -----Original Message-----
> From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com]
> Sent: Thu 1/22/2009 4:19 AM
> To: Priolo, Scott
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators (AND
> and OR)
>
> Hi!
>
> Not quite sure what your problem is. Are you asking how an AST for a
> logical expression might look like? Or the grammar that creates it? Or
> the tree grammar that walks it? Or something else?
>
> -Oliver
>
>
> 2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
>> Hello,
>>
>>
>>
>> I've searched high and low and can't find a reference to describe the
>> Logical Operators (and, or) design pattern for Tree Evaluation (after
>> purchasing the book I came up empty handed too).
>>
>>
>>
>> Any help?
>>
>>
>>
>> Thanks.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>

From antlr at shmuelhome.mine.nu  Thu Jan 22 04:38:34 2009
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu, 22 Jan 2009 14:38:34 +0200
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
 and OR)
In-Reply-To: <9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
Message-ID: <497868CA.5010702@shmuelhome.mine.nu>

Oliver Zeigermann wrote:
> OK, so you need a tree grammar that can parse complex boolean
> expressions, right?
>
> expression
>   : ^((AND|OR) expression expression)
>   | ^(('<'|'>'|'='|'!=') expression expression)
>   | ^(('+'|'-'|'*'|'/') expression expression)
>   | ID
>   | literal
>   ;
>
> Would that work?
>
> -Oliver
>
>   
This grammar is not syntactically restrictive since it allows ^(AND 3 
4). This will cause problems if you want to evaluate the tree since you 
won't know the type of the return value of expression. It is better to 
separate out arithmetic and logical expressions. Care must be taken to 
establish if ID is arithmetic or logical.


From lars.vonwedel at bayertechnology.com  Thu Jan 22 04:50:12 2009
From: lars.vonwedel at bayertechnology.com (lars.vonwedel at bayertechnology.com)
Date: Thu, 22 Jan 2009 13:50:12 +0100
Subject: [antlr-interest] Antwort: Re:  Highlighting syntax errors
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67749@Bloodymary.ironwillgames.com>
Message-ID: <OF69362E55.A6BA22E8-ONC1257546.00463D5F-C1257546.004683CA@bayer.de>

Hello,


> If you are interested, I could probably add 
> articles on the following:
> 
> - Ensuring your language service doesn?t slow down the IDE 
> (like Eclipse does, for example)
> - Highlighting errors in the IDE. This is supported in the 
> Managed Babel framework and is relatively easy to add to an ANTLR 
> language service. All of my language services, including the ones 
> for nFringe, support this feature.

Your tutorials helped me a lot to build a language service for the
input language of an in-house tool I am currently reeingineering.

Any further tutorials are therefore welcome, although I have managed to
achieve a number of other features on my own based on the stuff you have
described.

Lars
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/2ba95382/attachment.html 

From spriolo at walkerinfo.com  Thu Jan 22 04:54:19 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Thu, 22 Jan 2009 07:54:19 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <497868CA.5010702@shmuelhome.mine.nu>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
Message-ID: <A94D52854588164583AA892FECB259950745ECB1@wimail.wi>

This is what I have so far.  ID is converted to an INT. Variable are
pulled out of a memory map that is preloaded prior to processing.

I will try | ^(AND|OR expr expr) but it seems like there should be more
of a recursive nature to "and, or"  operators.

expr returns [int value]
    :   ^(GT a=expr b=expr)   {
    			       $value = (a>b)?1:0;
    			       le.isLowScore((a>b));
    			       System.out.println("(GT " + a + " " + b +
") bool:" + (a>b));
    			       }
    |   ^(GTEQ a=expr b=expr) {
    				$value = (a>=b)?1:0;
    				le.isLowScore((a>=b));
    				System.out.println("(GTEQ " + a + " " +
b + ") bool:" + (a>=b));
    			      }   
    |   ^(LT a=expr b=expr)   {
    				$value = (a<b)?1:0;
    				le.isLowScore((a<b));
    				System.out.println("(LT " + a + " " + b
+ ") bool:" + (a<b));
    			      }
    |   ^(LTEQ a=expr b=expr) {
    				$value = (a<=b)?1:0;
    				le.isLowScore((a<=b));
    				System.out.println("(LTEQ " + a + " " +
b + ") bool:" + (a<=b));
    			      }
    |   ^(EQ a=expr b=expr)   {
    				$value = (a==b)?1:0;
    				le.isLowScore((a==b));
    				System.out.println("(EQ " + a + " " + b
+ ") bool:" + (a==b));
    			      }
    |   ^(NEQ a=expr b=expr)  {
    				$value = (a!=b)?1:0;
    				le.isLowScore((a!=b));
    				System.out.println("(NEQ " + a + " " + b
+ ") bool:" + (a!=b));
    			      }
    |   ^(OR a=expr b=expr)   {
    				// WHAT TO DO HERE
    				//System.out.println("(OR " + a + " " +
b + ") bool:" + (a|b));
    			      }
    |   ^(AND a=expr b=expr)  {
    				// WHAT TO DO HERE
    				//System.out.println("(AND " + a + " " +
b + ") bool:" + (a&b));
    			      }
    |   ID 
        {
        try {
        	//pull value out of map if this is an id "Q22_B"
        	PgmQuestionsEntry q =
(PgmQuestionsEntry)variableMap.get(($ID.text).toLowerCase());
	        if ( q!=null ) {
	        	int idvalue = (int) q.getResponseNumber();
	        	$value = idvalue;
	        	System.out.println("=> Parsing ID = " + $ID.text
+ " value = " + idvalue);	
        	} else System.err.println("undefined variable
"+$ID.text);
	} catch (Exception e)
        {
        	e.printStackTrace();
        }
        }
    |   INT  
    	// when token matches an INT pattern convert it to int.
    	{$value = Integer.valueOf($INT.text);}
    ;

-----Original Message-----
From: shmuel siegel [mailto:antlr at shmuelhome.mine.nu] 
Sent: Thursday, January 22, 2009 7:39 AM
To: Oliver Zeigermann
Cc: Priolo, Scott; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
(AND and OR)

Oliver Zeigermann wrote:
> OK, so you need a tree grammar that can parse complex boolean
> expressions, right?
>
> expression
>   : ^((AND|OR) expression expression)
>   | ^(('<'|'>'|'='|'!=') expression expression)
>   | ^(('+'|'-'|'*'|'/') expression expression)
>   | ID
>   | literal
>   ;
>
> Would that work?
>
> -Oliver
>
>   
This grammar is not syntactically restrictive since it allows ^(AND 3 
4). This will cause problems if you want to evaluate the tree since you 
won't know the type of the return value of expression. It is better to 
separate out arithmetic and logical expressions. Care must be taken to 
establish if ID is arithmetic or logical.


From antlr at shmuelhome.mine.nu  Thu Jan 22 05:02:53 2009
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu, 22 Jan 2009 15:02:53 +0200
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
 and OR)
In-Reply-To: <A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
	<A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
Message-ID: <49786E7D.5050703@shmuelhome.mine.nu>

Priolo, Scott wrote:
> This is what I have so far.  ID is converted to an INT. Variable are
> pulled out of a memory map that is preloaded prior to processing.
>
> I will try | ^(AND|OR expr expr) but it seems like there should be more
> of a recursive nature to "and, or"  operators.
>
>   
This is recursive since expr can itself be an AND or OR subtree.


From oliver.zeigermann at gmail.com  Thu Jan 22 05:06:52 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 22 Jan 2009 14:06:52 +0100
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
	<A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
Message-ID: <9da4f4520901220506y1afd9691x627c3cb27a9ea585@mail.gmail.com>

That looks good. What is the problem with it?

Note that both precedence and part/whole relation is composed into the
tree structure.

-Oliver

2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> This is what I have so far.  ID is converted to an INT. Variable are
> pulled out of a memory map that is preloaded prior to processing.
>
> I will try | ^(AND|OR expr expr) but it seems like there should be more
> of a recursive nature to "and, or"  operators.
>
> expr returns [int value]
>    :   ^(GT a=expr b=expr)   {
>                               $value = (a>b)?1:0;
>                               le.isLowScore((a>b));
>                               System.out.println("(GT " + a + " " + b +
> ") bool:" + (a>b));
>                               }
>    |   ^(GTEQ a=expr b=expr) {
>                                $value = (a>=b)?1:0;
>                                le.isLowScore((a>=b));
>                                System.out.println("(GTEQ " + a + " " +
> b + ") bool:" + (a>=b));
>                              }
>    |   ^(LT a=expr b=expr)   {
>                                $value = (a<b)?1:0;
>                                le.isLowScore((a<b));
>                                System.out.println("(LT " + a + " " + b
> + ") bool:" + (a<b));
>                              }
>    |   ^(LTEQ a=expr b=expr) {
>                                $value = (a<=b)?1:0;
>                                le.isLowScore((a<=b));
>                                System.out.println("(LTEQ " + a + " " +
> b + ") bool:" + (a<=b));
>                              }
>    |   ^(EQ a=expr b=expr)   {
>                                $value = (a==b)?1:0;
>                                le.isLowScore((a==b));
>                                System.out.println("(EQ " + a + " " + b
> + ") bool:" + (a==b));
>                              }
>    |   ^(NEQ a=expr b=expr)  {
>                                $value = (a!=b)?1:0;
>                                le.isLowScore((a!=b));
>                                System.out.println("(NEQ " + a + " " + b
> + ") bool:" + (a!=b));
>                              }
>    |   ^(OR a=expr b=expr)   {
>                                // WHAT TO DO HERE
>                                //System.out.println("(OR " + a + " " +
> b + ") bool:" + (a|b));
>                              }
>    |   ^(AND a=expr b=expr)  {
>                                // WHAT TO DO HERE
>                                //System.out.println("(AND " + a + " " +
> b + ") bool:" + (a&b));
>                              }
>    |   ID
>        {
>        try {
>                //pull value out of map if this is an id "Q22_B"
>                PgmQuestionsEntry q =
> (PgmQuestionsEntry)variableMap.get(($ID.text).toLowerCase());
>                if ( q!=null ) {
>                        int idvalue = (int) q.getResponseNumber();
>                        $value = idvalue;
>                        System.out.println("=> Parsing ID = " + $ID.text
> + " value = " + idvalue);
>                } else System.err.println("undefined variable
> "+$ID.text);
>        } catch (Exception e)
>        {
>                e.printStackTrace();
>        }
>        }
>    |   INT
>        // when token matches an INT pattern convert it to int.
>        {$value = Integer.valueOf($INT.text);}
>    ;
>
> -----Original Message-----
> From: shmuel siegel [mailto:antlr at shmuelhome.mine.nu]
> Sent: Thursday, January 22, 2009 7:39 AM
> To: Oliver Zeigermann
> Cc: Priolo, Scott; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
> (AND and OR)
>
> Oliver Zeigermann wrote:
>> OK, so you need a tree grammar that can parse complex boolean
>> expressions, right?
>>
>> expression
>>   : ^((AND|OR) expression expression)
>>   | ^(('<'|'>'|'='|'!=') expression expression)
>>   | ^(('+'|'-'|'*'|'/') expression expression)
>>   | ID
>>   | literal
>>   ;
>>
>> Would that work?
>>
>> -Oliver
>>
>>
> This grammar is not syntactically restrictive since it allows ^(AND 3
> 4). This will cause problems if you want to evaluate the tree since you
> won't know the type of the return value of expression. It is better to
> separate out arithmetic and logical expressions. Care must be taken to
> establish if ID is arithmetic or logical.
>
>

From oliver.zeigermann at gmail.com  Thu Jan 22 05:12:48 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 22 Jan 2009 14:12:48 +0100
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <497868CA.5010702@shmuelhome.mine.nu>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
Message-ID: <9da4f4520901220512k6a17f0fbqc8fb20f41bd93428@mail.gmail.com>

2009/1/22 shmuel siegel <antlr at shmuelhome.mine.nu>:
> Oliver Zeigermann wrote:
>>
>> OK, so you need a tree grammar that can parse complex boolean
>> expressions, right?
>>
>> expression
>>  : ^((AND|OR) expression expression)
>>  | ^(('<'|'>'|'='|'!=') expression expression)
>>  | ^(('+'|'-'|'*'|'/') expression expression)
>>  | ID
>>  | literal
>>  ;
>>
>> Would that work?
>>
>> -Oliver
>>
>>
>
> This grammar is not syntactically restrictive since it allows ^(AND 3 4).
> This will cause problems if you want to evaluate the tree since you won't
> know the type of the return value of expression. It is better to separate
> out arithmetic and logical expressions. Care must be taken to establish if
> ID is arithmetic or logical.
>
>

You can solve this by adding a synthetic type attribute to the
expression and check for compatibility with each operator.

Like

expression returns [Object value, String type]
 : ^((AND|OR) e1=expression e2=expression) {$e1.type.equals("boolean")
&& $e2.type.equals("boolean")}?
       { $type = "boolean"; }
 | ...
 ;

- Oliver

From JALuber at gmx.de  Thu Jan 22 05:23:21 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 22 Jan 2009 14:23:21 +0100
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
In-Reply-To: <20090122084321.22200gmx1@mx041.gmx.net>
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de> <59326C08691544EEB74F1286E3176443@homelaptop>
	<49781D77.5050200@gmx.de> <20090122084321.22200gmx1@mx041.gmx.net>
Message-ID: <20090122132321.215590@gmx.net>

> At 20:17 22/01/2009, Johannes Luber wrote:
>  >Actually, I don't know how pointers are treated, but I'd be
>  >surprised if the standard formatters don't handle this case
>  >themselves as it is a general case with using references
>  >instead value types in member fields.
> 
> Is it an actual pointer (unsafe something *) or is it just a 
> reference-type field?

I don't believe that the CSharp uses unsafe code. After all, the Java runtime doesn't use it.
> 
> Because binary formatters handle the latter perfectly fine; they 
> can even cope properly with cycles in the object graph (which is 
> what will be the case here -- parent->child->parent).
> 
> The XmlSerializer can't (it's not a binary formatter), but the 
> SoapFormatter can (because it is, even though it outputs XML).

Good to know.

Johannes
-- 
NUR NOCH BIS 31.01.! GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 EURO/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From spriolo at walkerinfo.com  Thu Jan 22 05:23:22 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Thu, 22 Jan 2009 08:23:22 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <9da4f4520901220506y1afd9691x627c3cb27a9ea585@mail.gmail.com>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
	<A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
	<9da4f4520901220506y1afd9691x627c3cb27a9ea585@mail.gmail.com>
Message-ID: <A94D52854588164583AA892FECB259950745ECB6@wimail.wi>

I see the recursion now.  Thanks for point that out.

It just dawned on me that I'm trying to "set" the flag isLowScore on the
elements which cause the Boolean expression to be false.

a=1
b=3
c=1

So in the expression (a < 3) or (b < 3) or ((b = 3) AND (c < 3))

I need to mark b and c as the elements that caused the expression to be
false.  I can't figure out the action of the AND.

Thanks for your help.

-----Original Message-----
From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com] 
Sent: Thursday, January 22, 2009 8:07 AM
To: Priolo, Scott
Cc: shmuel siegel; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
(AND and OR)

That looks good. What is the problem with it?

Note that both precedence and part/whole relation is composed into the
tree structure.

-Oliver

2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> This is what I have so far.  ID is converted to an INT. Variable are
> pulled out of a memory map that is preloaded prior to processing.
>
> I will try | ^(AND|OR expr expr) but it seems like there should be
more
> of a recursive nature to "and, or"  operators.
>
> expr returns [int value]
>    :   ^(GT a=expr b=expr)   {
>                               $value = (a>b)?1:0;
>                               le.isLowScore((a>b));
>                               System.out.println("(GT " + a + " " + b
+
> ") bool:" + (a>b));
>                               }
>    |   ^(GTEQ a=expr b=expr) {
>                                $value = (a>=b)?1:0;
>                                le.isLowScore((a>=b));
>                                System.out.println("(GTEQ " + a + " " +
> b + ") bool:" + (a>=b));
>                              }
>    |   ^(LT a=expr b=expr)   {
>                                $value = (a<b)?1:0;
>                                le.isLowScore((a<b));
>                                System.out.println("(LT " + a + " " + b
> + ") bool:" + (a<b));
>                              }
>    |   ^(LTEQ a=expr b=expr) {
>                                $value = (a<=b)?1:0;
>                                le.isLowScore((a<=b));
>                                System.out.println("(LTEQ " + a + " " +
> b + ") bool:" + (a<=b));
>                              }
>    |   ^(EQ a=expr b=expr)   {
>                                $value = (a==b)?1:0;
>                                le.isLowScore((a==b));
>                                System.out.println("(EQ " + a + " " + b
> + ") bool:" + (a==b));
>                              }
>    |   ^(NEQ a=expr b=expr)  {
>                                $value = (a!=b)?1:0;
>                                le.isLowScore((a!=b));
>                                System.out.println("(NEQ " + a + " " +
b
> + ") bool:" + (a!=b));
>                              }
>    |   ^(OR a=expr b=expr)   {
>                                // WHAT TO DO HERE
>                                //System.out.println("(OR " + a + " " +
> b + ") bool:" + (a|b));
>                              }
>    |   ^(AND a=expr b=expr)  {
>                                // WHAT TO DO HERE
>                                //System.out.println("(AND " + a + " "
+
> b + ") bool:" + (a&b));
>                              }
>    |   ID
>        {
>        try {
>                //pull value out of map if this is an id "Q22_B"
>                PgmQuestionsEntry q =
> (PgmQuestionsEntry)variableMap.get(($ID.text).toLowerCase());
>                if ( q!=null ) {
>                        int idvalue = (int) q.getResponseNumber();
>                        $value = idvalue;
>                        System.out.println("=> Parsing ID = " +
$ID.text
> + " value = " + idvalue);
>                } else System.err.println("undefined variable
> "+$ID.text);
>        } catch (Exception e)
>        {
>                e.printStackTrace();
>        }
>        }
>    |   INT
>        // when token matches an INT pattern convert it to int.
>        {$value = Integer.valueOf($INT.text);}
>    ;
>
> -----Original Message-----
> From: shmuel siegel [mailto:antlr at shmuelhome.mine.nu]
> Sent: Thursday, January 22, 2009 7:39 AM
> To: Oliver Zeigermann
> Cc: Priolo, Scott; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
> (AND and OR)
>
> Oliver Zeigermann wrote:
>> OK, so you need a tree grammar that can parse complex boolean
>> expressions, right?
>>
>> expression
>>   : ^((AND|OR) expression expression)
>>   | ^(('<'|'>'|'='|'!=') expression expression)
>>   | ^(('+'|'-'|'*'|'/') expression expression)
>>   | ID
>>   | literal
>>   ;
>>
>> Would that work?
>>
>> -Oliver
>>
>>
> This grammar is not syntactically restrictive since it allows ^(AND 3
> 4). This will cause problems if you want to evaluate the tree since
you
> won't know the type of the return value of expression. It is better to
> separate out arithmetic and logical expressions. Care must be taken to
> establish if ID is arithmetic or logical.
>
>

From oliver.zeigermann at gmail.com  Thu Jan 22 05:37:38 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 22 Jan 2009 14:37:38 +0100
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <A94D52854588164583AA892FECB259950745ECB6@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>
	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>
	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<497868CA.5010702@shmuelhome.mine.nu>
	<A94D52854588164583AA892FECB259950745ECB1@wimail.wi>
	<9da4f4520901220506y1afd9691x627c3cb27a9ea585@mail.gmail.com>
	<A94D52854588164583AA892FECB259950745ECB6@wimail.wi>
Message-ID: <9da4f4520901220537t89fce41qe23da4c400d9636b@mail.gmail.com>

You could return a set of elements that make the - local - expression
false from each expression and modify this list with each logical
operator like AND/OR.

Maybe like:

set1 AND set2 => union set1 set2
set1 OR set2 => intersection set1 set2

Your final set is the one of the top level expression.

Have you thought about NOT, by the way?

-Oliver

2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
> I see the recursion now.  Thanks for point that out.
>
> It just dawned on me that I'm trying to "set" the flag isLowScore on the
> elements which cause the Boolean expression to be false.
>
> a=1
> b=3
> c=1
>
> So in the expression (a < 3) or (b < 3) or ((b = 3) AND (c < 3))
>
> I need to mark b and c as the elements that caused the expression to be
> false.  I can't figure out the action of the AND.
>
> Thanks for your help.
>
> -----Original Message-----
> From: Oliver Zeigermann [mailto:oliver.zeigermann at gmail.com]
> Sent: Thursday, January 22, 2009 8:07 AM
> To: Priolo, Scott
> Cc: shmuel siegel; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
> (AND and OR)
>
> That looks good. What is the problem with it?
>
> Note that both precedence and part/whole relation is composed into the
> tree structure.
>
> -Oliver
>
> 2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
>> This is what I have so far.  ID is converted to an INT. Variable are
>> pulled out of a memory map that is preloaded prior to processing.
>>
>> I will try | ^(AND|OR expr expr) but it seems like there should be
> more
>> of a recursive nature to "and, or"  operators.
>>
>> expr returns [int value]
>>    :   ^(GT a=expr b=expr)   {
>>                               $value = (a>b)?1:0;
>>                               le.isLowScore((a>b));
>>                               System.out.println("(GT " + a + " " + b
> +
>> ") bool:" + (a>b));
>>                               }
>>    |   ^(GTEQ a=expr b=expr) {
>>                                $value = (a>=b)?1:0;
>>                                le.isLowScore((a>=b));
>>                                System.out.println("(GTEQ " + a + " " +
>> b + ") bool:" + (a>=b));
>>                              }
>>    |   ^(LT a=expr b=expr)   {
>>                                $value = (a<b)?1:0;
>>                                le.isLowScore((a<b));
>>                                System.out.println("(LT " + a + " " + b
>> + ") bool:" + (a<b));
>>                              }
>>    |   ^(LTEQ a=expr b=expr) {
>>                                $value = (a<=b)?1:0;
>>                                le.isLowScore((a<=b));
>>                                System.out.println("(LTEQ " + a + " " +
>> b + ") bool:" + (a<=b));
>>                              }
>>    |   ^(EQ a=expr b=expr)   {
>>                                $value = (a==b)?1:0;
>>                                le.isLowScore((a==b));
>>                                System.out.println("(EQ " + a + " " + b
>> + ") bool:" + (a==b));
>>                              }
>>    |   ^(NEQ a=expr b=expr)  {
>>                                $value = (a!=b)?1:0;
>>                                le.isLowScore((a!=b));
>>                                System.out.println("(NEQ " + a + " " +
> b
>> + ") bool:" + (a!=b));
>>                              }
>>    |   ^(OR a=expr b=expr)   {
>>                                // WHAT TO DO HERE
>>                                //System.out.println("(OR " + a + " " +
>> b + ") bool:" + (a|b));
>>                              }
>>    |   ^(AND a=expr b=expr)  {
>>                                // WHAT TO DO HERE
>>                                //System.out.println("(AND " + a + " "
> +
>> b + ") bool:" + (a&b));
>>                              }
>>    |   ID
>>        {
>>        try {
>>                //pull value out of map if this is an id "Q22_B"
>>                PgmQuestionsEntry q =
>> (PgmQuestionsEntry)variableMap.get(($ID.text).toLowerCase());
>>                if ( q!=null ) {
>>                        int idvalue = (int) q.getResponseNumber();
>>                        $value = idvalue;
>>                        System.out.println("=> Parsing ID = " +
> $ID.text
>> + " value = " + idvalue);
>>                } else System.err.println("undefined variable
>> "+$ID.text);
>>        } catch (Exception e)
>>        {
>>                e.printStackTrace();
>>        }
>>        }
>>    |   INT
>>        // when token matches an INT pattern convert it to int.
>>        {$value = Integer.valueOf($INT.text);}
>>    ;
>>
>> -----Original Message-----
>> From: shmuel siegel [mailto:antlr at shmuelhome.mine.nu]
>> Sent: Thursday, January 22, 2009 7:39 AM
>> To: Oliver Zeigermann
>> Cc: Priolo, Scott; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
>> (AND and OR)
>>
>> Oliver Zeigermann wrote:
>>> OK, so you need a tree grammar that can parse complex boolean
>>> expressions, right?
>>>
>>> expression
>>>   : ^((AND|OR) expression expression)
>>>   | ^(('<'|'>'|'='|'!=') expression expression)
>>>   | ^(('+'|'-'|'*'|'/') expression expression)
>>>   | ID
>>>   | literal
>>>   ;
>>>
>>> Would that work?
>>>
>>> -Oliver
>>>
>>>
>> This grammar is not syntactically restrictive since it allows ^(AND 3
>> 4). This will cause problems if you want to evaluate the tree since
> you
>> won't know the type of the return value of expression. It is better to
>> separate out arithmetic and logical expressions. Care must be taken to
>> establish if ID is arithmetic or logical.
>>
>>
>

From bernt.brenna at gmail.com  Thu Jan 22 06:20:27 2009
From: bernt.brenna at gmail.com (=?ISO-8859-1?Q?Bernt_R=F8skar_Brenna?=)
Date: Thu, 22 Jan 2009 15:20:27 +0100
Subject: [antlr-interest] Error output from org.antlr.Tool with
	language=Python, but generates 	code OK
Message-ID: <f5ff2d960901220620h30287decg3d3d3da1b6ad20d4@mail.gmail.com>

When executing the command:

java -cp antlrworks-1.2.2.jar org.antlr.Tool Expr.g

on a minimal Expr.g file (and any other grammar file with language=Python):
---
grammar Expr;
options {
	language=Python;
}

prog:;
---

the following happens:

- the tool exits with error code 1, and writes an error message to the console:
ANTLR Parser Generator  Version 3.1.1
error(10):  internal error: eval tree parse error : <AST>:0:0:
unexpected AST node:

org.antlr.stringtemplate.language.ActionEvaluator.expr(Unknown Source)
...
...
org.antlr.Tool.main(Unknown Source)

- but the ExprParser.py file is generated just fine.


Is there something wrong in org.antlr.Tool? Or am I doing something wrong?

Regards,
Bernt

From jpalecek at web.de  Thu Jan 22 06:33:58 2009
From: jpalecek at web.de (=?iso-8859-2?B?Smn47SBQYWxl6GVr?=)
Date: Thu, 22 Jan 2009 15:33:58 +0100
Subject: [antlr-interest] Bug: incorrect IntervalSet created by union
Message-ID: <op.un5xesr7u2flwt@localhost>

Hello,

I'm creating a grammar for POSIX shell language. I noticed, that  
sometimes, I get invalid java files, particularly, files which contain  
duplicated case labels in switch statements. I debugged the problem and  
found out it was caused by a bug in code for union of two IntervalSets.  
The attached patch contains a fix for this, and a testcase to demonstrate  
it.

Regards
     Jiri Palecek

-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Fix-union-of-IntervalSets-in-case-one-interval-overl.patch
Type: application/octet-stream
Size: 2238 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/2cc431cc/attachment.obj 

From cowang at comcast.net  Thu Jan 22 08:05:06 2009
From: cowang at comcast.net (George S. Cowan)
Date: Thu, 22 Jan 2009 11:05:06 -0500
Subject: [antlr-interest] How do we change wiki pages?
Message-ID: <FE2343401A8F4B3289BF1EC67B30FF45@gsce0ae1cfad8d>

I tried to make minor changes (correcting spelling of "grammer" to
"grammar") to the page
http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars but the {code}
sections lost their formatting. How do I keep the formatting?
 
I use IE7 with Windows XP.
 
George
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/ad9f7851/attachment.html 

From parrt at cs.usfca.edu  Thu Jan 22 08:15:41 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 22 Jan 2009 08:15:41 -0800
Subject: [antlr-interest] How do we change wiki pages?
In-Reply-To: <FE2343401A8F4B3289BF1EC67B30FF45@gsce0ae1cfad8d>
References: <FE2343401A8F4B3289BF1EC67B30FF45@gsce0ae1cfad8d>
Message-ID: <DFA6AB2A-B94E-44E8-A13A-75CCF3776B24@cs.usfca.edu>


On Jan 22, 2009, at 8:05 AM, George S. Cowan wrote:

> I tried to make minor changes (correcting spelling of "grammer" to  
> "grammar") to the page http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars 
>  but the {code} sections lost their formatting. How do I keep the  
> formatting?
>
> I use IE7 with Windows XP.
>

Hi George, i suggest not using their rich text editor...screws me up  
all the time. I use the wiki format.
Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/f4260972/attachment.html 

From jimi at temporal-wave.com  Thu Jan 22 09:16:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Jan 2009 09:16:11 -0800
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
 and OR)
In-Reply-To: <9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi>
	<9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
Message-ID: <4978A9DB.5070306@temporal-wave.com>


>
> 2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
>   
>> Sorry about that, I'm trying to setup a walker that will know what to do
>> with "OR" and "AND" operators.  I have the parser setup so that the AST is
>> nicely formed with expr such as (< a 3).  I'm able to walk and evaluate
>> these simple expr too. But! when I walk (or (and (< a 3) (< b 3)) (< c 3))
>> I'm stumped.
>>     
You need to make your rules within an expression return a type, the 
formulation of which depends on what things you can evaluate. If your 
primitive types are all integer, then each stage of your expression can 
return integer and the AND and OR rules can return 0 and 1. Otherwise, 
you will need to create a class with 'operators' such as plus(), 
minus(), and() etc. It will also contain an integer, perhaps a boolean, 
perhaps a String and so on. Before applying your operations, you will 
need to coerce the types according to some orthogonal rules, as in if 
you have ^(AND INT STRING), what does that mean to you - do you convert 
the string to an integer, or does it mean "is not null" for instance, 
and what do want to do with ^(AND INT STRING) vs ^(AND STRING INT) 
(promotion rules, diamonds and so on).


If it is just Integer though, then:

if: ^(IF e=expr ....) { if ($e.intVal != 0) { ....

expr

returns [int intVal]
:
    : i=INT  { intVal = stringtoint($i.text); ... some conversion func
    : ^(AND e1=expr e2=expr) { if (stringtoint($e1.text) !=0 && 
stringtoint($e2.text) != 0) { intVal = 1; }....
 .... and so on.


Jim

From jimi at temporal-wave.com  Thu Jan 22 09:38:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Jan 2009 09:38:26 -0800
Subject: [antlr-interest] How do we change wiki pages?
In-Reply-To: <FE2343401A8F4B3289BF1EC67B30FF45@gsce0ae1cfad8d>
References: <FE2343401A8F4B3289BF1EC67B30FF45@gsce0ae1cfad8d>
Message-ID: <4978AF12.2040502@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/f9c14cae/attachment.html 

From andy.grove at codefutures.com  Thu Jan 22 09:40:44 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Thu, 22 Jan 2009 10:40:44 -0700
Subject: [antlr-interest] Can I target C and Java from one grammar file?
Message-ID: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>

Hi,

I need to generate C and Java from an ANTLR grammar containing  
actions. Is there a preprocessor approach I can use rather than  
maintaining two versions of the grammar?

I'm thinking that the grammar would look something like this:

selectStatement[int initRule]
//IFDEF JAVA
@init 	{if(initRule) sse.pushCall(sse.SELECTSTAT);}
//ELIFDEF CPP
@init 	{if(initRule) sse->pushCall(sse.SELECTSTAT);}
//END
	:
	q = queryExpression[true]
	;

Are there tools out there already or do I need to roll my own?

Thanks,

Andy Grove
Chief Architect
CodeFutures Corporation









From spriolo at walkerinfo.com  Thu Jan 22 09:52:58 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Thu, 22 Jan 2009 12:52:58 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <4978A9DB.5070306@temporal-wave.com>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi><9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<4978A9DB.5070306@temporal-wave.com>
Message-ID: <A94D52854588164583AA892FECB259950745ECB9@wimail.wi>

Being a new guy at ANTLR... I pretty sure this will take me a while to
digest. :)

Thanks,
Scott

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, January 22, 2009 12:16 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Tree Evaluation with Logical Operators
(AND and OR)


>
> 2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
>   
>> Sorry about that, I'm trying to setup a walker that will know what to
do
>> with "OR" and "AND" operators.  I have the parser setup so that the
AST is
>> nicely formed with expr such as (< a 3).  I'm able to walk and
evaluate
>> these simple expr too. But! when I walk (or (and (< a 3) (< b 3)) (<
c 3))
>> I'm stumped.
>>     
You need to make your rules within an expression return a type, the 
formulation of which depends on what things you can evaluate. If your 
primitive types are all integer, then each stage of your expression can 
return integer and the AND and OR rules can return 0 and 1. Otherwise, 
you will need to create a class with 'operators' such as plus(), 
minus(), and() etc. It will also contain an integer, perhaps a boolean, 
perhaps a String and so on. Before applying your operations, you will 
need to coerce the types according to some orthogonal rules, as in if 
you have ^(AND INT STRING), what does that mean to you - do you convert 
the string to an integer, or does it mean "is not null" for instance, 
and what do want to do with ^(AND INT STRING) vs ^(AND STRING INT) 
(promotion rules, diamonds and so on).


If it is just Integer though, then:

if: ^(IF e=expr ....) { if ($e.intVal != 0) { ....

expr

returns [int intVal]
:
    : i=INT  { intVal = stringtoint($i.text); ... some conversion func
    : ^(AND e1=expr e2=expr) { if (stringtoint($e1.text) !=0 && 
stringtoint($e2.text) != 0) { intVal = 1; }....
 .... and so on.


Jim

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Thu Jan 22 10:00:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Jan 2009 10:00:49 -0800
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
Message-ID: <4978B451.3070505@temporal-wave.com>

Andy Grove wrote:
> Hi,
>
> I need to generate C and Java from an ANTLR grammar containing  
> actions. Is there a preprocessor approach I can use rather than  
> maintaining two versions of the grammar?
>   
I use perforce and maintain a base grammar that has no actions, then 
change only the grammar base. When ready to test I integrate the changes 
via a prestored branch spec. Other SCCS can do the same sort of thing, 
though perforce is streets ahead of anything else at the merge process.

However, occasionally it is a pain to debug remotely when I want to just 
use the ANTLR works debugger before integrating a change, so I have 
written a pre-processor as an experiment (it is in ANTLR3 of course), 
and am trying to decide between the C# lexer base approach and the VB/C 
approach (albeit not having the stupidity of the VB pre-processor.)

I was then going to propose it to Ter as an addon for the next release 
(as it is non invasive if you don't use any pre-processing instructions.

Then you can have:

options
{
   #if TARGET="C"
       language = C;
   #else
       language = Java;
   #endif
}

Or perhaps

  language  =  TARGET_LANG;

and, referencing a prior thread:

#ifdef ANTLR_VER_MAJOR > 3 || ANTLR_VER_MINOR < 2
#abort "This grammar requires ANTLR 3.1.2 and above"
#endif

If I am willing to do the C macro thing. In general though, if you add 
macros, people start embedding code in them and the whole thing is 
macros, so I prefer the minimalist approach of C#.

As far as code generation goes, and maybe this would solve 
preprocessing, I think it would be good to be able to supply a string 
template for action code generation (rather than for the parser to use 
at runtime). So you would have:

language = template;

r1 : %r1predicate(x)%?=>   a=INT bINT c=INT 

For now though, m4 is your best bet (it is in the Java compiler even), 
or perhaps something simple with gawk.

Jim
> I'm thinking that the grammar would look something like this:
>
> selectStatement[int initRule]
> //IFDEF JAVA
> @init 	{if(initRule) sse.pushCall(sse.SELECTSTAT);}
> //ELIFDEF CPP
> @init 	{if(initRule) sse->pushCall(sse.SELECTSTAT);}
> //END
> 	:
> 	q = queryExpression[true]
> 	;
>
> Are there tools out there already or do I need to roll my own?
>
> Thanks,
>
> Andy Grove
> Chief Architect
> CodeFutures Corporation
>
>
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From jaluber at gmx.de  Thu Jan 22 11:16:07 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 22 Jan 2009 20:16:07 +0100
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <4978B451.3070505@temporal-wave.com>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
	<4978B451.3070505@temporal-wave.com>
Message-ID: <4978C5F7.4050408@gmx.de>

Jim Idle schrieb:
> Andy Grove wrote:
>> Hi,
>>
>> I need to generate C and Java from an ANTLR grammar containing  
>> actions. Is there a preprocessor approach I can use rather than  
>> maintaining two versions of the grammar?
>>   
> I use perforce and maintain a base grammar that has no actions, then 
> change only the grammar base. When ready to test I integrate the changes 
> via a prestored branch spec. Other SCCS can do the same sort of thing, 
> though perforce is streets ahead of anything else at the merge process.
> 
> However, occasionally it is a pain to debug remotely when I want to just 
> use the ANTLR works debugger before integrating a change, so I have 
> written a pre-processor as an experiment (it is in ANTLR3 of course), 
> and am trying to decide between the C# lexer base approach and the VB/C 
> approach (albeit not having the stupidity of the VB pre-processor.)

Having a preprocessor would allow me to have a single grammar for C#,
while allowing to serve it my own needs and the general ones at once.
I've thought about using C#'s preprocessor, but that would at best allow
to circumvent the assignments, but not any initializations.
> 
> I was then going to propose it to Ter as an addon for the next release 
> (as it is non invasive if you don't use any pre-processing instructions.
> 
> Then you can have:
> 
> options
> {
>    #if TARGET="C"
>        language = C;
>    #else
>        language = Java;
>    #endif
> }
> 
> Or perhaps
> 
>   language  =  TARGET_LANG;
> 
> and, referencing a prior thread:
> 
> #ifdef ANTLR_VER_MAJOR > 3 || ANTLR_VER_MINOR < 2
> #abort "This grammar requires ANTLR 3.1.2 and above"
> #endif
> 
> If I am willing to do the C macro thing. In general though, if you add 
> macros, people start embedding code in them and the whole thing is 
> macros, so I prefer the minimalist approach of C#.

Instead doing it with macros,how about using:

#ifdef ANTLR_3_1_2

and let ANTLR defines this symbol, as long it remains backwards
compatible (ignoring bugfixes here).
> 
> As far as code generation goes, and maybe this would solve 
> preprocessing, I think it would be good to be able to supply a string 
> template for action code generation (rather than for the parser to use 
> at runtime). So you would have:
> 
> language = template;
> 
> r1 : %r1predicate(x)%?=>   a=INT bINT c=INT 

Can you explain this in more detail? I'm not sure how you arrive at
those and what the purpose actually is.
> 
> For now though, m4 is your best bet (it is in the Java compiler even), 
> or perhaps something simple with gawk.

What is m4? I find only weapon references.

Johannes
> 
> Jim
>> I'm thinking that the grammar would look something like this:
>>
>> selectStatement[int initRule]
>> //IFDEF JAVA
>> @init 	{if(initRule) sse.pushCall(sse.SELECTSTAT);}
>> //ELIFDEF CPP
>> @init 	{if(initRule) sse->pushCall(sse.SELECTSTAT);}
>> //END
>> 	:
>> 	q = queryExpression[true]
>> 	;
>>
>> Are there tools out there already or do I need to roll my own?
>>
>> Thanks,
>>
>> Andy Grove
>> Chief Architect
>> CodeFutures Corporation
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>   
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Thu Jan 22 11:48:55 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Jan 2009 11:48:55 -0800
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <4978C5F7.4050408@gmx.de>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
	<4978B451.3070505@temporal-wave.com> <4978C5F7.4050408@gmx.de>
Message-ID: <4978CDA7.8060801@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/a08279a3/attachment.html 

From joel at mentics.com  Thu Jan 22 12:21:23 2009
From: joel at mentics.com (joel at mentics.com)
Date: Thu, 22 Jan 2009 12:21:23 -0800
Subject: [antlr-interest] Binary data
Message-ID: <975a94850901221221l497e4ce7x61b8ddbff79f1197@mail.gmail.com>

I have data that is mixed text and binary, so it might have a text
field followed by a binary encoded number--2 bytes or something. Is
this something ANTLR can handle? How do I define binary tokens for the
lexer? Is there something where I can tell it to read a certain number
of bytes, or until a certain byte delimiter (that might be different
than the overall encoding--so even if in 2 byte char stream, look for a single
byte delimiter)?

Thanks!

From jaluber at gmx.de  Thu Jan 22 12:27:57 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 22 Jan 2009 21:27:57 +0100
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <4978CDA7.8060801@temporal-wave.com>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
	<4978B451.3070505@temporal-wave.com> <4978C5F7.4050408@gmx.de>
	<4978CDA7.8060801@temporal-wave.com>
Message-ID: <4978D6CD.8000306@gmx.de>

Jim Idle schrieb:
> Johannes Luber wrote:
>> Jim Idle schrieb:
>>   
>>> Andy Grove wrote:
>>>     
>>>> Hi,
>>>>
>>>> I need to generate C and Java from an ANTLR grammar containing  
>>>> actions. Is there a preprocessor approach I can use rather than  
>>>> maintaining two versions of the grammar?
>>>>   
>>>>       
>>> I use perforce and maintain a base grammar that has no actions, then 
>>> change only the grammar base. When ready to test I integrate the changes 
>>> via a prestored branch spec. Other SCCS can do the same sort of thing, 
>>> though perforce is streets ahead of anything else at the merge process.
>>>
>>> However, occasionally it is a pain to debug remotely when I want to just 
>>> use the ANTLR works debugger before integrating a change, so I have 
>>> written a pre-processor as an experiment (it is in ANTLR3 of course), 
>>> and am trying to decide between the C# lexer base approach and the VB/C 
>>> approach (albeit not having the stupidity of the VB pre-processor.)
>>>     
>>
>> Having a preprocessor would allow me to have a single grammar for C#,
>> while allowing to serve it my own needs and the general ones at once.
>> I've thought about using C#'s preprocessor, but that would at best allow
>> to circumvent the assignments, but not any initializations.
>>   
> I was referring to the design pattern rather than the implementation. C#
> has a minimalist approach to what you can do with the pre-processor, VB
> has some weird and wonderful stuff, and the C pre-processor lets you
> hang yourself. So, I personally would not want a pre-processor that you
> can program as we are writing grammars, not pre-processor macros ;-0

I think you misunderstood me. Here is one rule in my grammar:

collection_initializer
    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
    -> ^(OPEN_BRACE element_initializer_list ^(OPTIONAL COMMA?) CLOSE_BRACE)
    ;

A normal parser would maybe need only:

collection_initializer
    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
    -> ^(element_initializer_list)
    ;

With a preprocessor one could combine them:

collection_initializer
    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
    -> ^(
	#ifdef ALL_TOKENS
	OPEN_BRACE
	#endif

	element_initializer_list

	#ifdef ALL_TOKENS
	^(OPTIONAL COMMA?) CLOSE_BRACE
	#endif
)
    ;

A bit ugly, but it gets the job done. Maybe you have another idea to
accomplish this goal?

> 
...
>>
>> Instead doing it with macros,how about using:
>>
>> #ifdef ANTLR_3_1_2
>>   
> Same thing. The tool can pre-define anything it likes of course. You
> need the MAJ and MIN etc as well because you sometimes need to say "This
> version or above"
>>> language = template;
>>>
>>> r1 : %r1predicate(x)%?=>   a=INT bINT c=INT 
>>>     
>>
>> Can you explain this in more detail? I'm not sure how you arrive at
>> those and what the purpose actually is.
>>   
> Actually you would need:
> 
> language=C;
> actions=template-name;
> 
> But the idea is just like the runtime use of templates but happens at
> code generation time. The code generation for the target is exactly the
> same, but the actions and code related things such as semantic
> predicates are generated by string template supplied by the grammar
> author. Then you can have one grammar and different action templates
> that just return code that is passed on to the target language template.

Ah.
>>> For now though, m4 is your best bet (it is in the Java compiler even), 
>>> or perhaps something simple with gawk.
>>>     
>>
>> What is m4? I find only weapon references.
>>   
> Type:
> 
> man m4
> 
> ;-) It is the pre-processor that was used by C compilers of long past.
> 
> http://www.gnu.org/software/m4/

Thanks,

Johannes
> 
> Jim
> 


From jimi at temporal-wave.com  Thu Jan 22 14:06:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Jan 2009 14:06:20 -0800
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <4978D6CD.8000306@gmx.de>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>
	<4978B451.3070505@temporal-wave.com> <4978C5F7.4050408@gmx.de>
	<4978CDA7.8060801@temporal-wave.com> <4978D6CD.8000306@gmx.de>
Message-ID: <4978EDDC.6070806@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090122/70133f60/attachment.html 

From wbgillis at gmail.com  Thu Jan 22 15:19:02 2009
From: wbgillis at gmail.com (Ben Gillis)
Date: Thu, 22 Jan 2009 17:19:02 -0600
Subject: [antlr-interest] CSharp2: serialize/deserialize as AST
References: <9648449A18064CB5AB13082FA7D4887A@homelaptop>
	<497814FF.7090607@gmx.de>
	<59326C08691544EEB74F1286E3176443@homelaptop>
	<49781D77.5050200@gmx.de> <20090122084321.22200gmx1@mx041.gmx.net>
	<20090122132321.215590@gmx.net>
Message-ID: <DACAACBE4AF4450AA06ED057A728EC30@homelaptop>

> > I don't believe that the CSharp uses unsafe code. After all, the Java 
> > runtime doesn't use it.
I've only found managed code, nothing unsafe.


----- Original Message ----- 
From: "Johannes Luber" <JALuber at gmx.de>
To: "Gavin Lambert" <antlr at mirality.co.nz>; <wbgillis at gmail.com>
Cc: <antlr-interest at antlr.org>
Sent: Thursday, January 22, 2009 7:23 AM
Subject: Re: [antlr-interest] CSharp2: serialize/deserialize as AST


>> At 20:17 22/01/2009, Johannes Luber wrote:
>>  >Actually, I don't know how pointers are treated, but I'd be
>>  >surprised if the standard formatters don't handle this case
>>  >themselves as it is a general case with using references
>>  >instead value types in member fields.
>>
>> Is it an actual pointer (unsafe something *) or is it just a
>> reference-type field?
>
> I don't believe that the CSharp uses unsafe code. After all, the Java 
> runtime doesn't use it.
>>
>> Because binary formatters handle the latter perfectly fine; they
>> can even cope properly with cycles in the object graph (which is
>> what will be the case here -- parent->child->parent).
>>
>> The XmlSerializer can't (it's not a binary formatter), but the
>> SoapFormatter can (because it is, even though it outputs XML).
>
> Good to know.
>
> Johannes
> -- 
> NUR NOCH BIS 31.01.! GMX FreeDSL - Telefonanschluss + DSL
> f?r nur 16,37 EURO/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a 


From indhu.b at s7software.com  Thu Jan 22 22:08:27 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 23 Jan 2009 11:38:27 +0530 (IST)
Subject: [antlr-interest] Binary data
In-Reply-To: <975a94850901221221l497e4ce7x61b8ddbff79f1197@mail.gmail.com>
Message-ID: <560319.3581232690907326.JavaMail.root@star>


'parseBinary' in Antlr examples folder might help you.

- Indhu

----- Original Message -----
From: joel at mentics.com
To: antlr-interest at antlr.org
Sent: Friday, January 23, 2009 1:51:23 AM GMT+0530 Asia/Calcutta
Subject: [antlr-interest] Binary data

I have data that is mixed text and binary, so it might have a text
field followed by a binary encoded number--2 bytes or something. Is
this something ANTLR can handle? How do I define binary tokens for the
lexer? Is there something where I can tell it to read a certain number
of bytes, or until a certain byte delimiter (that might be different
than the overall encoding--so even if in 2 byte char stream, look for a single
byte delimiter)?

Thanks!

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jaluber at gmx.de  Thu Jan 22 22:57:28 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 23 Jan 2009 07:57:28 +0100
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <4978EDDC.6070806@temporal-wave.com>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>	<4978B451.3070505@temporal-wave.com>
	<4978C5F7.4050408@gmx.de>	<4978CDA7.8060801@temporal-wave.com>
	<4978D6CD.8000306@gmx.de> <4978EDDC.6070806@temporal-wave.com>
Message-ID: <49796A58.30702@gmx.de>

Jim Idle schrieb:
>> Johannes Luber wrote:
>>
>> I think you misunderstood me. Here is one rule in my grammar:
>>
>> collection_initializer
>>     :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>     -> ^(OPEN_BRACE element_initializer_list ^(OPTIONAL COMMA?) CLOSE_BRACE)
>>     ;
>>
>> A normal parser would maybe need only:
>>
>> collection_initializer
>>     :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>     -> ^(element_initializer_list)
>>     ;
>>
>> With a preprocessor one could combine them:
>>
>> collection_initializer
>>     :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>     -> ^(
>> 	#ifdef ALL_TOKENS
>> 	OPEN_BRACE
>> 	#endif
>>
>> 	element_initializer_list
>>
>> 	#ifdef ALL_TOKENS
>> 	^(OPTIONAL COMMA?) CLOSE_BRACE
>> 	#endif
>> )
>>     ;
>>
>> A bit ugly, but it gets the job done. Maybe you have another idea to
>> accomplish this goal?
>>   
> Well, you should do this with runtime configuration (I show a parameter
> here but you should use some grammar global config class set externally):
> 
> collection_initializer[boolean allTokens]
>     :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
> 
>        -> {allTokens}? ^(OPEN_BRACE element_initializer_list ^(OPTIONAL
> COMMA?) CLOSE_BRACE)
>        -> element_initializer_list
> ;

While runtime configuration is interesting, the problem remains that
tree grammars have to treat both rewrites possible. Effectively you are
duplicating parts of the tree. I've had another idea to make the syntax
more compact:

#define ALL

collection_initializer
    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
    -> ^(ALL.OPEN_BRACE element_initializer_list ^(ALL.OPTIONAL
ALL.COMMA?) ALL.CLOSE_BRACE)
    ;

Only if ALL is defined rules and tokens marked with "ALL." end up in the
generated code. The only question is, how one should treat "^()". Maybe
saying that it is enough that only if the root node is included that
DOWN and UP are included as well.
> 
> And you probably don't need that COMMA under a root node ;-)

For my special purpose I do need really all tokens - except non-newline
whitespace, I think. And using OPTIONAL fixes the general tree structure
 which makes handling the direct sons of the root node easier.

Johannes
> 
> But the general point is good.
> 
> Jim


From joe.peterson at intel.com  Fri Jan 23 01:04:34 2009
From: joe.peterson at intel.com (Peterson, Joe)
Date: Fri, 23 Jan 2009 01:04:34 -0800
Subject: [antlr-interest] error running antlrworks -
	java.lang.StackOverflowError
Message-ID: <BCF80163639E9F4296FC4B208F99BA479FE25F17@orsmsx504.amr.corp.intel.com>

Hello all,

A week or so ago, I was running AntlrWorks 1.2.2 without any major problems.  Then I fired it up a couple days ago and it just hung.  When I run it from a command prompt (java -jar antlrworks.1.2.2.jar), I see the following error message:

Exception in thread "AWT-EventQueue-0" java.lang.StackOverflowError
               at org.antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown Source)
               at org.antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown Source)
               ...

That repeats many times.  I can count them if it's relevant.

I have tried downloading the jar again, but I get the same error.  The only possibly relevant thing I've done lately is move my Antlr-3.1.1 directory (and I changed the CLASSPATH and PATH environment variables appropriately.)  I didn't think that should affect AntlrWorks, and I have no problem running Antlr.

Can someone help me figure out what I should look at next or what I could have done to cause this problem?

Possibly relevant information:
java version "1.6.0_07"
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) Client VM (build 10.0-b23, mixed mode, sharing)

Thanks,
-JEEP
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/b74b1ec5/attachment.html 

From spriolo at walkerinfo.com  Fri Jan 23 06:16:10 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Fri, 23 Jan 2009 09:16:10 -0500
Subject: [antlr-interest] Tree Evaluation with Logical Operators (AND
	and OR)
In-Reply-To: <A94D52854588164583AA892FECB259950745ECB9@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECB0@wimail.wi>	<9da4f4520901220119q5789de97uc88e44af9325421c@mail.gmail.com>	<A94D52854588164583AA892FECB2599549182C@wimail.wi><9da4f4520901220429o70bfb4ddp8f4162f7b72ef7a9@mail.gmail.com>
	<4978A9DB.5070306@temporal-wave.com>
	<A94D52854588164583AA892FECB259950745ECB9@wimail.wi>
Message-ID: <A94D52854588164583AA892FECB259950745ECBC@wimail.wi>

O.k. For the archive...

Problem Solution to logical operators:

When using relational operators (such as <, >, !=, OR, AND, etc...) you
must work with "Boolean" return values.  For each operation in my tree
walker I returned (as suggested by Jim) a 1 or a 0.  I used this pattern
(provided by Oliver)

>>> expression
>>>   : ^((AND|OR) expression expression)
>>>   | ^(('<'|'>'|'='|'!=') expression expression)
>>>   | ^(('+'|'-'|'*'|'/') expression expression)
>>>   | ID
>>>   | literal
>>>   ;

To make this useful to my goal I broke out each operator so that I could
evaluate the expression and return an appropriate return value (1 or 0)

expr returns [int value]
    :   
  	^(AND a=expr b=expr)  {
                    // a and b are recursive and return a value 1 or 0
    				if(Integer.valueOf($a.value)==1 
    					&& Integer.valueOf($b.value)==1)

    					{
    						$value = 1;
    					} else { 
    						$value = 0;
    					}
			 // The OR operator would be the same pattern,
but with ||
    			      } 
    
    |	  ^(GT a=expr b=expr)   {
    			       $value =
(Integer.valueOf($a.value)>Integer.valueOf($b.value))?1:0;
    			       }
    |   ^(GTEQ a=expr b=expr) {

    				$value =
(Integer.valueOf($a.value)>=Integer.valueOf($b.value))?1:0;
    			      }   
    |   ^(LT a=expr b=expr)   {
    				$value = (Integer.valueOf($a.value) <
Integer.valueOf($b.value))?1:0;
    			      }
    |   ^(LTEQ a=expr b=expr) {
    				$value =
(Integer.valueOf($a.value)<=Integer.valueOf($b.value))?1:0;
    			      }
    |   ^(EQ a=expr b=expr)   {
    				$value =
(Integer.valueOf($a.value)==Integer.valueOf($b.value))?1:0;
    			      }
    |   ^(NEQ a=expr b=expr)  {
    				$value =
(Integer.valueOf($a.value)!=Integer.valueOf($b.value))?1:0;
    			      }
    |   ID 
        {
        try {
        	//pull value out of memory map that was loaded prior to
this processing
        	PgmQuestionsEntry q =
(PgmQuestionsEntry)variableMap.get(($ID.text).toLowerCase());
	        if ( q!=null ) {
	        	int idvalue = (int) q.getResponseNumber();
	        	$value = idvalue;  // <-- THIS IS AN IMPORTANT
PART OF THIS WALKER!
        	} else 
                System.err.println("undefined variable "+$ID.text);
	        } catch (Exception e)
            {
        	    e.printStackTrace();
            }
        }
    |   INT  
    	// when token matches an INT pattern convert it to int.
    	{$value = Integer.valueOf($INT.text); }
    ;

To make the "return value" useful to a calling program you'd have to
pass it up the chain to your entry point.  Your calling application
would enjoy the opportunity of evaluating a 1 or a 0 as true or false.

Thanks Jim and Oliver.  You shortened the learning curve for me and I
hope this will serve to shorten the learning curve for the next guy.

Scott.


>
> 2009/1/22 Priolo, Scott <spriolo at walkerinfo.com>:
>   
>> Sorry about that, I'm trying to setup a walker that will know what to
do
>> with "OR" and "AND" operators.  I have the parser setup so that the
AST is
>> nicely formed with expr such as (< a 3).  I'm able to walk and
evaluate
>> these simple expr too. But! when I walk (or (and (< a 3) (< b 3)) (<
c 3))
>> I'm stumped.
>>     
You need to make your rules within an expression return a type, the 
formulation of which depends on what things you can evaluate. If your 
primitive types are all integer, then each stage of your expression can 
return integer and the AND and OR rules can return 0 and 1. Otherwise, 
you will need to create a class with 'operators' such as plus(), 
minus(), and() etc. It will also contain an integer, perhaps a boolean, 
perhaps a String and so on. Before applying your operations, you will 
need to coerce the types according to some orthogonal rules, as in if 
you have ^(AND INT STRING), what does that mean to you - do you convert 
the string to an integer, or does it mean "is not null" for instance, 
and what do want to do with ^(AND INT STRING) vs ^(AND STRING INT) 
(promotion rules, diamonds and so on).


If it is just Integer though, then:

if: ^(IF e=expr ....) { if ($e.intVal != 0) { ....

expr

returns [int intVal]
:
    : i=INT  { intVal = stringtoint($i.text); ... some conversion func
    : ^(AND e1=expr e2=expr) { if (stringtoint($e1.text) !=0 && 
stringtoint($e2.text) != 0) { intVal = 1; }....
 .... and so on.


Jim

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Fri Jan 23 08:02:10 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 23 Jan 2009 08:02:10 -0800
Subject: [antlr-interest] error running antlrworks -
	java.lang.StackOverflowError
In-Reply-To: <BCF80163639E9F4296FC4B208F99BA479FE25F17@orsmsx504.amr.corp.intel.com>
References: <BCF80163639E9F4296FC4B208F99BA479FE25F17@orsmsx504.amr.corp.intel.com>
Message-ID: <F06AAB13-C738-4334-80FC-E4647622D474@cs.usfca.edu>

wack your antlrworks prefs directory maybe and start again...
Ter
On Jan 23, 2009, at 1:04 AM, Peterson, Joe wrote:

> Hello all,
>
> A week or so ago, I was running AntlrWorks 1.2.2 without any major  
> problems.  Then I fired it up a couple days ago and it just hung.   
> When I run it from a command prompt (java ?jar antlrworks. 
> 1.2.2.jar), I see the following error message:
>
> Exception in thread "AWT-EventQueue-0" java.lang.StackOverflowError
>                at  
> org 
> .antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown  
> Source)
>                at  
> org 
> .antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown  
> Source)
>                ?
>
> That repeats many times.  I can count them if it?s relevant.
>
> I have tried downloading the jar again, but I get the same error.   
> The only possibly relevant thing I?ve done lately is move my  
> Antlr-3.1.1 directory (and I changed the CLASSPATH and PATH  
> environment variables appropriately.)  I didn?t think that should  
> affect AntlrWorks, and I have no problem running Antlr.
>
> Can someone help me figure out what I should look at next or what I  
> could have done to cause this problem?
>
> Possibly relevant information:
> java version "1.6.0_07"
> Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
> Java HotSpot(TM) Client VM (build 10.0-b23, mixed mode, sharing)
>
> Thanks,
> -JEEP
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/193c7b1a/attachment.html 

From joe.peterson at intel.com  Fri Jan 23 08:40:13 2009
From: joe.peterson at intel.com (Peterson, Joe)
Date: Fri, 23 Jan 2009 08:40:13 -0800
Subject: [antlr-interest] error running antlrworks -
 java.lang.StackOverflowError
In-Reply-To: <F06AAB13-C738-4334-80FC-E4647622D474@cs.usfca.edu>
References: <BCF80163639E9F4296FC4B208F99BA479FE25F17@orsmsx504.amr.corp.intel.com>
	<F06AAB13-C738-4334-80FC-E4647622D474@cs.usfca.edu>
Message-ID: <BCF80163639E9F4296FC4B208F99BA47A02E6823@orsmsx504.amr.corp.intel.com>

This solved my problem.

Thanks!
-JEEP
Joe Peterson

From: Terence Parr [mailto:parrt at cs.usfca.edu]
Sent: Friday, January 23, 2009 8:02 AM
To: Peterson, Joe
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] error running antlrworks - java.lang.StackOverflowError

wack your antlrworks prefs directory maybe and start again...
Ter
On Jan 23, 2009, at 1:04 AM, Peterson, Joe wrote:


Hello all,

A week or so ago, I was running AntlrWorks 1.2.2 without any major problems.  Then I fired it up a couple days ago and it just hung.  When I run it from a command prompt (java -jar antlrworks.1.2.2.jar), I see the following error message:

Exception in thread "AWT-EventQueue-0" java.lang.StackOverflowError
               at org.antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown Source)
               at org.antlr.works.grammar.engine.GrammarEngineImpl.getRootEngine(Unknown Source)
               ...

That repeats many times.  I can count them if it's relevant.

I have tried downloading the jar again, but I get the same error.  The only possibly relevant thing I've done lately is move my Antlr-3.1.1 directory (and I changed the CLASSPATH and PATH environment variables appropriately.)  I didn't think that should affect AntlrWorks, and I have no problem running Antlr.

Can someone help me figure out what I should look at next or what I could have done to cause this problem?

Possibly relevant information:
java version "1.6.0_07"
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) Client VM (build 10.0-b23, mixed mode, sharing)

Thanks,
-JEEP

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/dece729e/attachment.html 

From joel at mentics.com  Fri Jan 23 08:43:13 2009
From: joel at mentics.com (joel at mentics.com)
Date: Fri, 23 Jan 2009 08:43:13 -0800
Subject: [antlr-interest] Data value is field length
Message-ID: <975a94850901230843m79e5a826h5a66dcbfc4aa7242@mail.gmail.com>

So, if I have a binary field, the first byte of which indicates how
long the field is, is there a way to do this in ANTLR?

The Lexer would have to get the first byte, look at its value, read
that many more bytes, and that would be the end of that field.

Any ideas on how this might best be done in ANTLR?

From andy.grove at codefutures.com  Fri Jan 23 08:59:15 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Fri, 23 Jan 2009 09:59:15 -0700
Subject: [antlr-interest] Can I target C and Java from one grammar file?
In-Reply-To: <49796A58.30702@gmx.de>
References: <505446C5-505E-46DC-B408-6CBCE688677F@codefutures.com>	<4978B451.3070505@temporal-wave.com>
	<4978C5F7.4050408@gmx.de>	<4978CDA7.8060801@temporal-wave.com>
	<4978D6CD.8000306@gmx.de> <4978EDDC.6070806@temporal-wave.com>
	<49796A58.30702@gmx.de>
Message-ID: <15A3B828-1511-4C28-B615-F562366E4809@codefutures.com>

Thanks for the feedback and different options presented.

I need something very simple and pragmatic right now so I went with a  
preprocessor approach where I use ANTLR comments such as:

//ifdef JAVA
   ... java version of syntax
//elifdef CPP
  ... cpp version of syntax
//endif

At least I have everything in a single file and I can easy compare  
Java and C code side by side even if there is a little duplication.

In case anyone is interested, here is the complete source for the pre- 
processor, written in Ruby.


#!/usr/bin/ruby
# Preprocessor for ANTLR grammar files with multiple language targets
# Written by Andy Grove on 23-Jan-2009

def preprocess(filename, userTarget)
   f = File.open(filename)
   include = true
   currentTarget = "*"
   f.each_line {|line|
     if line[0,7] == '//ifdef'
       currentTarget = line[7,line.length].strip
     elsif line[0,9] == '//elifdef'
       currentTarget = line[9,line.length].strip
     elsif line[0,7] == '//endif'
       currentTarget = "*"
     else
       if currentTarget=="*" || currentTarget==userTarget
         puts line
       end
     end
   }
   f.close
end

begin
   if ARGV.length < 2
       puts "Usage: preprocess filename target"
   else
       preprocess(ARGV[0], ARGV[1])
   end
end


Thanks,

Andy Grove
Chief Architect
CodeFutures Corporation


On Jan 22, 2009, at 11:57 PM, Johannes Luber wrote:

> Jim Idle schrieb:
>>> Johannes Luber wrote:
>>>
>>> I think you misunderstood me. Here is one rule in my grammar:
>>>
>>> collection_initializer
>>>    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>>    -> ^(OPEN_BRACE element_initializer_list ^(OPTIONAL COMMA?)  
>>> CLOSE_BRACE)
>>>    ;
>>>
>>> A normal parser would maybe need only:
>>>
>>> collection_initializer
>>>    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>>    -> ^(element_initializer_list)
>>>    ;
>>>
>>> With a preprocessor one could combine them:
>>>
>>> collection_initializer
>>>    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>>    -> ^(
>>> 	#ifdef ALL_TOKENS
>>> 	OPEN_BRACE
>>> 	#endif
>>>
>>> 	element_initializer_list
>>>
>>> 	#ifdef ALL_TOKENS
>>> 	^(OPTIONAL COMMA?) CLOSE_BRACE
>>> 	#endif
>>> )
>>>    ;
>>>
>>> A bit ugly, but it gets the job done. Maybe you have another idea to
>>> accomplish this goal?
>>>
>> Well, you should do this with runtime configuration (I show a  
>> parameter
>> here but you should use some grammar global config class set  
>> externally):
>>
>> collection_initializer[boolean allTokens]
>>    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>>
>>       -> {allTokens}? ^(OPEN_BRACE element_initializer_list  
>> ^(OPTIONAL
>> COMMA?) CLOSE_BRACE)
>>       -> element_initializer_list
>> ;
>
> While runtime configuration is interesting, the problem remains that
> tree grammars have to treat both rewrites possible. Effectively you  
> are
> duplicating parts of the tree. I've had another idea to make the  
> syntax
> more compact:
>
> #define ALL
>
> collection_initializer
>    :   OPEN_BRACE element_initializer_list COMMA? CLOSE_BRACE
>    -> ^(ALL.OPEN_BRACE element_initializer_list ^(ALL.OPTIONAL
> ALL.COMMA?) ALL.CLOSE_BRACE)
>    ;
>
> Only if ALL is defined rules and tokens marked with "ALL." end up in  
> the
> generated code. The only question is, how one should treat "^()".  
> Maybe
> saying that it is enough that only if the root node is included that
> DOWN and UP are included as well.
>>
>> And you probably don't need that COMMA under a root node ;-)
>
> For my special purpose I do need really all tokens - except non- 
> newline
> whitespace, I think. And using OPTIONAL fixes the general tree  
> structure
> which makes handling the direct sons of the root node easier.
>
> Johannes
>>
>> But the general point is good.
>>
>> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Fri Jan 23 09:20:50 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Jan 2009 09:20:50 -0800
Subject: [antlr-interest] Data value is field length
In-Reply-To: <975a94850901230843m79e5a826h5a66dcbfc4aa7242@mail.gmail.com>
References: <975a94850901230843m79e5a826h5a66dcbfc4aa7242@mail.gmail.com>
Message-ID: <4979FC72.8050102@temporal-wave.com>

joel at mentics.com wrote:
> So, if I have a binary field, the first byte of which indicates how
> long the field is, is there a way to do this in ANTLR?
>
> The Lexer would have to get the first byte, look at its value, read
> that many more bytes, and that would be the end of that field.
>
> Any ideas on how this might best be done in ANTLR?
You might need a custom input stream that has some base knowledge of the 
stream. However, in lexer actions, you have access to the input stream 
via 'input' and assuming that you can encode the start of such a token 
in lexer rules, all you need to do is write custom code to 
input.consume() as many 'characters' as you need. However, you have not 
said what the target language is, I have had to presume Java. Make sure 
that you set the encoding on your input stream such that you read 8 bit 
binary characters and not re-interpret the stream as UTF8 or something!

To be honest, if your binary data is in some fixed format, then ANTLR 
might even be overkill, but if it has a fairly complex structure, then 
writing a custom input stream that rewrites the input stream in to an 
easier form could be an approach. But if you can infer the structure in 
a simple read through the data then you don't need a parser anyway ;-). 
However, suppose you just have a couple of easily identifiable binary 
points in a bigger structure, your input stream looks for say 0xFF and 
it knows that in any context whatsoever that this means the next two 
bytes are a 16 bit length, then that many bytes are binary. You could 
just have it rewrite this bit as: BINARY{nnnn, 0xXX, 0xXX, 0xXX ..} or 
some other form that the lexer can deal with no problem. But again, if 
it is always 0xFF then you can use a lexer rule and input.consume(), 
something like this:

BINARY : '\u00FF'
     {
          int bytes = input.consume(); // Assuming 8 bit input, but you 
can find the length one way or another
          for (int i = 0; i<bytes; i++) { input.consume(); }
     }
;

Hopefully that gives you enough info to determine what you r best 
approach is for the dataset :-)

Jim



From bemerson at forceamp.com  Fri Jan 23 09:21:00 2009
From: bemerson at forceamp.com (Bill Emerson)
Date: Fri, 23 Jan 2009 09:21:00 -0800
Subject: [antlr-interest] C Runtime - skip() alternative
Message-ID: <0DE2BE23F758B84B8662C9A41CDB15022F579CFB96@EXVMBX003-6.exch003intermedia.net>

Is there a way to do a { skip(); }  using the C runtime ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/e1468171/attachment.html 

From jimi at temporal-wave.com  Fri Jan 23 09:27:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Jan 2009 09:27:17 -0800
Subject: [antlr-interest] C Runtime - skip() alternative
In-Reply-To: <0DE2BE23F758B84B8662C9A41CDB15022F579CFB96@EXVMBX003-6.exch003intermedia.net>
References: <0DE2BE23F758B84B8662C9A41CDB15022F579CFB96@EXVMBX003-6.exch003intermedia.net>
Message-ID: <4979FDF5.5050705@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/a4e9f2cd/attachment.html 

From jshellman at gmail.com  Fri Jan 23 09:44:34 2009
From: jshellman at gmail.com (JS)
Date: Fri, 23 Jan 2009 09:44:34 -0800
Subject: [antlr-interest] Data value is field length
In-Reply-To: <4979FC72.8050102@temporal-wave.com>
References: <975a94850901230843m79e5a826h5a66dcbfc4aa7242@mail.gmail.com>
	<4979FC72.8050102@temporal-wave.com>
Message-ID: <975a94850901230944o2af0f98fxa6ac07df88530f6d@mail.gmail.com>

Excellent information. That's exactly what I was hoping that I could
consume the input like that.

One more question: What if this binary field happens in the middle of
UTF16 stream?

Actually, I can provide my own input stream to ANTLR, right? So, I
could provide an input stream that can provide either char or bytes,
so this code could cast to my custom input stream, read the bytes as
needed, and then it would continue in whatever encoding it was
supposed to be after this field.

And to answer some of your questions: yes java, and yes the location
of the field is pretty easy to identify, so that should not be much of
an issue. We're considering ANTLR for attacking various data which has
a wide range of structural complexity. Since some may have these types
of fields, I'm making sure we can do everything in ANTLR in a
straightforward and general manner.

Thanks!


On Fri, Jan 23, 2009 at 9:20 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> joel at mentics.com wrote:
>> So, if I have a binary field, the first byte of which indicates how
>> long the field is, is there a way to do this in ANTLR?
>>
>> The Lexer would have to get the first byte, look at its value, read
>> that many more bytes, and that would be the end of that field.
>>
>> Any ideas on how this might best be done in ANTLR?
> You might need a custom input stream that has some base knowledge of the
> stream. However, in lexer actions, you have access to the input stream
> via 'input' and assuming that you can encode the start of such a token
> in lexer rules, all you need to do is write custom code to
> input.consume() as many 'characters' as you need. However, you have not
> said what the target language is, I have had to presume Java. Make sure
> that you set the encoding on your input stream such that you read 8 bit
> binary characters and not re-interpret the stream as UTF8 or something!
>
> To be honest, if your binary data is in some fixed format, then ANTLR
> might even be overkill, but if it has a fairly complex structure, then
> writing a custom input stream that rewrites the input stream in to an
> easier form could be an approach. But if you can infer the structure in
> a simple read through the data then you don't need a parser anyway ;-).
> However, suppose you just have a couple of easily identifiable binary
> points in a bigger structure, your input stream looks for say 0xFF and
> it knows that in any context whatsoever that this means the next two
> bytes are a 16 bit length, then that many bytes are binary. You could
> just have it rewrite this bit as: BINARY{nnnn, 0xXX, 0xXX, 0xXX ..} or
> some other form that the lexer can deal with no problem. But again, if
> it is always 0xFF then you can use a lexer rule and input.consume(),
> something like this:
>
> BINARY : '\u00FF'
>     {
>          int bytes = input.consume(); // Assuming 8 bit input, but you
> can find the length one way or another
>          for (int i = 0; i<bytes; i++) { input.consume(); }
>     }
> ;
>
> Hopefully that gives you enough info to determine what you r best
> approach is for the dataset :-)
>
> Jim
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From carter_cheng at yahoo.com  Fri Jan 23 10:24:52 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Fri, 23 Jan 2009 10:24:52 -0800 (PST)
Subject: [antlr-interest] customizing error messages for syntactic predicates
Message-ID: <732970.23437.qm@web50104.mail.re2.yahoo.com>

Hello,

This is probably something that is quite easy- but how does one go about customizing error messages resulting from a predicate type check? The standard error messages can be rather cryptic.

Thanks in advance,

Carter.


      

From jimi at temporal-wave.com  Fri Jan 23 10:29:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Jan 2009 10:29:48 -0800
Subject: [antlr-interest] Data value is field length
In-Reply-To: <975a94850901230944o2af0f98fxa6ac07df88530f6d@mail.gmail.com>
References: <975a94850901230843m79e5a826h5a66dcbfc4aa7242@mail.gmail.com>	<4979FC72.8050102@temporal-wave.com>
	<975a94850901230944o2af0f98fxa6ac07df88530f6d@mail.gmail.com>
Message-ID: <497A0C9C.7060708@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/8754ceb0/attachment.html 

From jimi at temporal-wave.com  Fri Jan 23 10:31:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Jan 2009 10:31:26 -0800
Subject: [antlr-interest] customizing error messages for syntactic
	predicates
In-Reply-To: <732970.23437.qm@web50104.mail.re2.yahoo.com>
References: <732970.23437.qm@web50104.mail.re2.yahoo.com>
Message-ID: <497A0CFE.1060201@temporal-wave.com>

Carter Cheng wrote:
> Hello,
>
> This is probably something that is quite easy- but how does one go about customizing error messages resulting from a predicate type check? The standard error messages can be rather cryptic.
>   

Do you mean things like "predicate failed."? If you get that it means 
you have not covered all the alts and need to supply more options to the 
grammar :-)

Jim



From bill at qswtools.com  Fri Jan 23 12:29:48 2009
From: bill at qswtools.com (Bill Cox)
Date: Fri, 23 Jan 2009 12:29:48 -0800
Subject: [antlr-interest] antlr-interest Digest, Vol 50, Issue 24
In-Reply-To: <mailman.1.1232740801.16376.antlr-interest@antlr.org>
References: <mailman.1.1232740801.16376.antlr-interest@antlr.org>
Message-ID: <f7372f920901231229n1d2118bdv77e78a7a7cbf21cf@mail.gmail.com>

Re: preprocessing an ANTLR grammar

I've been able to use the GNU C preprocessor for a Pascal compiler in the past.
As you imply, the difficulty is in turning OFF all the C-specific stuff:
You can use -D and -U to set/unset variables
You should use:
-nostdinc         suppress looking for std libs
-P                    inhibit c-specific line-number tracking lines from output
-C                    do not discard comments
I haven't done this in a long while.  Here's the reference:
http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Preprocessor-Options.html#Preprocessor-Options

>>>>> I need to generate C and Java from an ANTLR grammar containing
>>>>> actions. Is there a preprocessor approach I can use rather than
>>>>> maintaining two versions of the grammar?

From bottiger1 at gmail.com  Fri Jan 23 19:22:56 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Fri, 23 Jan 2009 19:22:56 -0800
Subject: [antlr-interest] C runtime Memory Usage
Message-ID: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>

Hello, I am using the C runtime and experiencing heavy memory usage.

I am interpreting an AST tree recursively.

In each interpret call, I am checking the token text by using
pANTLR3_BASE_TREE->getText()->chars.
Am I suppose to manually free this when I am done with it?

Also, I am recursively calling the children nodes with
pANTLR3_BASE_TREE->getChild().
Am I also supposed to free these as well? I was assuming that they returned
only 1 copy of the node.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/7d8aeb0d/attachment.html 

From bottiger1 at gmail.com  Fri Jan 23 19:36:34 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Fri, 23 Jan 2009 19:36:34 -0800
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
Message-ID: <3490668a0901231936j657d8895kaf5765a86e73b6e4@mail.gmail.com>

I just found out that pANTLR3_BASE_TREE->getChild() returns the same node in
memory, but pANTLR3_BASE_TREE->getText() creates an entirely new
pANTLR3_STRING even when called from the same node.

Does anyone have any suggestions for making this function return the same
string? I thought it would've returned a single string from a lexer
structure.

On Fri, Jan 23, 2009 at 7:22 PM, Bot Tiger <bottiger1 at gmail.com> wrote:

> Hello, I am using the C runtime and experiencing heavy memory usage.
>
> I am interpreting an AST tree recursively.
>
> In each interpret call, I am checking the token text by using
> pANTLR3_BASE_TREE->getText()->chars.
> Am I suppose to manually free this when I am done with it?
>
> Also, I am recursively calling the children nodes with
> pANTLR3_BASE_TREE->getChild().
> Am I also supposed to free these as well? I was assuming that they returned
> only 1 copy of the node.
>
> Thank you.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090123/5f1db907/attachment.html 

From jimi at temporal-wave.com  Sat Jan 24 09:47:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 24 Jan 2009 09:47:31 -0800
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
Message-ID: <497B5433.1060000@temporal-wave.com>

Bot Tiger wrote:
> Hello, I am using the C runtime and experiencing heavy memory usage.
>
> I am interpreting an AST tree recursively.
>
> In each interpret call, I am checking the token text by using 
> pANTLR3_BASE_TREE->getText()->chars.
> Am I suppose to manually free this when I am done with it?
It is a convenience function that creates (and tracks) a memory 
structure that copies the string from the input every time you call 
getText(). It is this way because (and I think this is in the docs) 
sometimes you want a new copy of the input string and sometimes you want 
to modify the string you get back but not modify the input.

So, you need to do one of the following:

Call getText() once and then cache the result so you don't keep creating 
copies of the input token;
Create your own function that you can just pass the token/node pointer 
to and uses the input stream directly (this is all the getText() call 
does, but by the way, you usually use the $X.text reference, not 
getText() directly.

These convenience functions are not intended for use in things like 
interpreters as every time you reference $X.text you will create a new 
instance of the string, and though the runtime tracks these references 
and releases them when you free the recognizer, you will quickly use 
huge amounts of memory. So, you need your own function that makes more 
optimal use of memory. All you need do is look at the code for 
getText(). You will see that it finds the start position in the input 
stream from the start position of the first token spanned by the node 
and the end position in the input stream by looking at the end position 
of the last token spanned by the node. If you know that there is only 
one token in the node, then you can just use that directly. The main 
point however, is that you won't allocate memory or copy any strings 
this way, you will have a pointer into the input stream directly (which 
is already allocated of course) and you will know how many characters 
that pointer represents.. So long as you are not going to manipulate the 
string, then you can use it directly in place.

However, for an interpreter, you probably want to build a table of 
string literals at parse time and create nodes that just reference them 
in a string table. There are user definable pointers and integers 
available in nodes and tokens, specifically to make it easy to do this. 
So you could use the runtime string tables like this in the parser:

parser grammar fred;

...
literal:
    s=STRING_LITERAL  { $s.custom = $s.text; }  // Store the 
pANTLR3_STRING for use in the interpreter
;

Or, you could pin the general text reference into the tokText union in 
the token, if you are willing to dig into the code.

However, for an interpreter, you are probably best building a string 
table of your own choosing, that does not copy theinput text unless 
there is some underlying reason that you must.

That is where all your memory is going.

>
> Also, I am recursively calling the children nodes with 
> pANTLR3_BASE_TREE->getChild().
> Am I also supposed to free these as well? I was assuming that they 
> returned only 1 copy of the node.
It just gives you a pointer to the child, it does not duplicate it. It 
is your string stuff that you need to rethink :-) I shoudl porbaly make 
this stuff more explicit in the documentation. However I think that 
there are comments in the examples that tell you all about this. See the 
polydif example.

Jim


From jimi at temporal-wave.com  Sat Jan 24 09:54:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 24 Jan 2009 09:54:05 -0800
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <3490668a0901231936j657d8895kaf5765a86e73b6e4@mail.gmail.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
	<3490668a0901231936j657d8895kaf5765a86e73b6e4@mail.gmail.com>
Message-ID: <497B55BD.2020409@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090124/197ee918/attachment.html 

From carter_cheng at yahoo.com  Sat Jan 24 11:47:12 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sat, 24 Jan 2009 11:47:12 -0800 (PST)
Subject: [antlr-interest] customizing error messages for syntactic
	predicates
In-Reply-To: <497A0CFE.1060201@temporal-wave.com>
Message-ID: <975847.35747.qm@web50106.mail.re2.yahoo.com>




--- On Fri, 1/23/09, Jim Idle <jimi at temporal-wave.com> wrote:

> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] customizing error messages for syntactic predicates
> To: 
> Cc: antlr-interest at antlr.org
> Date: Friday, January 23, 2009, 10:31 AM
> Carter Cheng wrote:
> > Hello,
> >
> > This is probably something that is quite easy- but how
> does one go about customizing error messages resulting from
> a predicate type check? The standard error messages can be
> rather cryptic.
> >   
> 
> Do you mean things like "predicate failed."? If
> you get that it means 
> you have not covered all the alts and need to supply more
> options to the 
> grammar :-)
> 
> Jim
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      

From carter_cheng at yahoo.com  Sat Jan 24 11:49:49 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sat, 24 Jan 2009 11:49:49 -0800 (PST)
Subject: [antlr-interest] customizing error messages for syntactic
	predicates
In-Reply-To: <497A0CFE.1060201@temporal-wave.com>
Message-ID: <895101.49605.qm@web50105.mail.re2.yahoo.com>

I apologize for the potential double post. But I meant something like this where I am trying to throw an error when a condition is met.

LPAREN LBRACE { $LPAREN.index == $LBRACE.index - 1 }? arrayElementList? RBRACE RPAREN { $RBRACE.index == $RPAREN.index - 1 }?

Regards,

Carter.


--- On Fri, 1/23/09, Jim Idle <jimi at temporal-wave.com> wrote:

> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] customizing error messages for syntactic predicates
> To: 
> Cc: antlr-interest at antlr.org
> Date: Friday, January 23, 2009, 10:31 AM
> Carter Cheng wrote:
> > Hello,
> >
> > This is probably something that is quite easy- but how
> does one go about customizing error messages resulting from
> a predicate type check? The standard error messages can be
> rather cryptic.
> >   
> 
> Do you mean things like "predicate failed."? If
> you get that it means 
> you have not covered all the alts and need to supply more
> options to the 
> grammar :-)
> 
> Jim
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      

From antlr at mirality.co.nz  Sat Jan 24 13:35:57 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Jan 2009 10:35:57 +1300
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <497B5433.1060000@temporal-wave.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
	<497B5433.1060000@temporal-wave.com>
Message-ID: <20090124213605.B8CB93418151@www.antlr.org>

At 06:47 25/01/2009, Jim Idle wrote:
 >It is a convenience function that creates (and tracks) a memory
 >structure that copies the string from the input every time you
 >call getText(). It is this way because (and I think this is in
 >the docs) sometimes you want a new copy of the input string
 >and sometimes you want to modify the string you get back but
 >not modify the input.

I don't think that's a good argument.  Strings in Java and C# are 
immutable; in C/C++ they're not, but they should be treated as if 
they were (reading a string is a far more common operation than 
modifying one).  So the getText() function should return a const 
string and should only construct it once.  (For performance 
reasons, it should probably keep the existing behaviour of not 
constructing the string until first requested.)

For another argument: it's trivial to take a read-only string and 
convert it into a writable one (without affecting the 
original).  It's non-trivial to extract text from the token 
stream.  So the latter function should be implemented by the 
runtime in such a way that the former can be applied afterwards in 
the unlikely event that it's needed.


From antlr at mirality.co.nz  Sat Jan 24 13:43:20 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Jan 2009 10:43:20 +1300
Subject: [antlr-interest] customizing error messages for syntactic
 predicates
In-Reply-To: <895101.49605.qm@web50105.mail.re2.yahoo.com>
References: <497A0CFE.1060201@temporal-wave.com>
	<895101.49605.qm@web50105.mail.re2.yahoo.com>
Message-ID: <20090124214331.23B2E3418152@www.antlr.org>

At 08:49 25/01/2009, Carter Cheng wrote:
 >I apologize for the potential double post. But I meant something 

 >like this where I am trying to throw an error when a condition 
is
 >met.
 >
 >LPAREN LBRACE { $LPAREN.index == $LBRACE.index - 1 }?
 >arrayElementList? RBRACE RPAREN { $RBRACE.index == $RPAREN.index 
-
 >1 }?

When I needed to do something like this, I used the following 
method (C# code, but should be similar for Java):

tag[String name]
	:	TAB? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
	;
catch [FailedPredicateException ex] { throw new 
CustomRecognitionException("Expected <" + $name + "> but found " + 
$t.text, ex, Input); }

Note: CustomRecognitionException is exactly what it sounds like -- 
a new exception class derived from RecognitionException.  This is 
required because the standard implementation of GetErrorMessage in 
the parser completely ignores the text in the exception.  And yes, 
this is completely dumb.  Because of that, I also had to use this 
override:

	public override string GetErrorMessage(RecognitionException e, 
string[] tokenNames)
	{
		if (e is CustomRecognitionException) {
			return e.Message;
		}
		return base.GetErrorMessage(e, tokenNames);
	}


From jimi at temporal-wave.com  Sat Jan 24 15:35:45 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 24 Jan 2009 15:35:45 -0800
Subject: [antlr-interest] customizing error messages for
	syntactic	predicates
In-Reply-To: <895101.49605.qm@web50105.mail.re2.yahoo.com>
References: <895101.49605.qm@web50105.mail.re2.yahoo.com>
Message-ID: <497BA5D1.1080408@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090124/417fb8b2/attachment.html 

From jimi at temporal-wave.com  Sat Jan 24 16:01:47 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 24 Jan 2009 16:01:47 -0800
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <20090124212913.9499E120D49C@msf1.dnsmadeeasy.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
	<497B5433.1060000@temporal-wave.com>
	<20090124212913.9499E120D49C@msf1.dnsmadeeasy.com>
Message-ID: <497BABEB.9030205@temporal-wave.com>

Gavin Lambert wrote:
> At 06:47 25/01/2009, Jim Idle wrote:
> >It is a convenience function that creates (and tracks) a memory
> >structure that copies the string from the input every time you
> >call getText(). It is this way because (and I think this is in
> >the docs) sometimes you want a new copy of the input string
> >and sometimes you want to modify the string you get back but
> >not modify the input.
>
> I don't think that's a good argument.
You're entitled to your opinion, but believe me, I have written lots of 
parsers with this runtime and this is the best way. Because you can pin 
it yourself by setting the text pointer in the token, it is not really 
an inconvenience unless you don't read the examples or documentation.

> Strings in Java and C# are immutable; in C/C++ they're not, but they 
> should be treated as if they were 
err, not really. That's a completely arbitrary decisions that you just 
made up.
> (reading a string is a far more common operation than modifying one)
But, my code has to take care of the fact that people will and DO do 
this, and then they will wonder why the next time they ask for the 
string for that token, they got the last change that they made. In fact 
I would hazard a guess that if in fact you reference the $text, you are 
much more likely to want to change it than you would be in an ordinary C 
program.

> .  So the getText() function should return a const string and should 
> only construct it once.  (For performance reasons, it should probably 
> keep the existing behaviour of not constructing the string until first 
> requested.)
Tried that - it just filled my inbox with questions, whereas this way, 
it is the first time anyone has asked me about it.
>
> For another argument: it's trivial to take a read-only string and 
> convert it into a writable one (without affecting the original).  

> It's non-trivial to extract text from the token stream.  
It IS trivial to take text from the token stream - it is just pointers.
> So the latter function should be implemented by the runtime in such a 
> way that the former can be applied afterwards in the unlikely event 
> that it's needed.
Well, that;s the way I wrote it and that's the way it is staying. It is 
documented in the docs and the examples and if I could get anyone to 
read these, it would not be an issue :-) I could make it store the 
string reference, but then if someone changes it, they will need to 
reset it and so on. I went through this thought process a bunch of times.

For the record then:

$x.text always provides a NEW copy of the input stream, which you can 
then manipulate such as deleting characters and so on.
If you want to get the same instance every time, then store it 
somewhere, or set it in the token because if you set it back in the 
token, you will get that same instance back.
Remember that these methods are really used only be the runtime but it 
seemed sensible to let users use them for trivial things. They are not 
meant to be used all the time for interpreters and so on; as with 
everything else in C you should create your own system, optimized to do 
just what you want. If you don't need the speed, then use Java.

Jim

From antlr at mirality.co.nz  Sat Jan 24 16:34:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Jan 2009 13:34:27 +1300
Subject: [antlr-interest] C runtime Memory Usage
In-Reply-To: <497BABEB.9030205@temporal-wave.com>
References: <3490668a0901231922r4a14b928s878bcbd99e534a1e@mail.gmail.com>
	<497B5433.1060000@temporal-wave.com>
	<20090124212913.9499E120D49C@msf1.dnsmadeeasy.com>
	<497BABEB.9030205@temporal-wave.com>
Message-ID: <20090125003436.850EF3418151@www.antlr.org>

At 13:01 25/01/2009, Jim Idle wrote:
 >> Strings in Java and C# are immutable; in C/C++ they're not, 
but
 >> they should be treated as if they were
 >err, not really. That's a completely arbitrary decisions that 
you
 >just made up.

No, I didn't.  In fact, most implementations of the C++ STL do 
something similar with std::string (copy-on-write), so it's not 
even unique to managed code.

 >But, my code has to take care of the fact that people will and 
DO
 >do this, and then they will wonder why the next time they ask 
for
 >the string for that token, they got the last change that they 
made.
 >In fact I would hazard a guess that if in fact you reference the 

 >$text, you are much more likely to want to change it than you
 >would be in an ordinary C program.

If they use $text = foo, then sure, they're trying to replace the 
text for the token.  But replace is not the same as 
modify.  Modifying the result of $text directly should be 
forbidden, which is easy if you just make it const.  And most of 
the time this sort of thing is confined to the lexer/parser, 
anyway.  It'd be less common at the tree parser level.

Tokens already have to support the idea of drawing their text 
either from the input stream (if they haven't been replaced as 
above) or from arbitrary text set by embedded code in the 
grammar.  So all you would need to do is to set the text the first 
time it is queried for.  You get performance benefits both ways, 
that way -- if they never ask, it never needs to query the token 
stream and allocate the memory, and if they ask multiple times 
then it only needs to do so once and doesn't waste additional 
memory.

Or perhaps another approach would be to more closely model how 
std::string works.  When retrieving the text as an ANTLR string 
and manipulating it with the ANTLR string manipulation functions, 
it's writable but performs a copy-on-write as needed to preserve 
referential integrity of other strings.  When retrieving a raw 
char* it only gives you a const one, to let you know that you 
should be using the ANTLR functions to modify it instead.

This isn't hard to do (especially single-threaded) and shouldn't 
impose much of a CPU performance penalty, and should improve 
memory performance dramatically whenever the text is being 
accessed.  (And in any non-trivial program, the text is bound to 
be accessed quite a bit.)

 >It IS trivial to take text from the token stream - it is just
 >pointers.

Which you have to iterate and assemble (for rule text, 
anyway).  So no, it's not trivial.  (It might be *easy*, but not 
trivial.)


From spamhole at gmx.at  Sat Jan 24 17:45:52 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Sun, 25 Jan 2009 02:45:52 +0100
Subject: [antlr-interest] A lost label?
Message-ID: <497BC450.60609@gmx.at>


I ran into a nasty "ArgumentNullException" problem with the following 
rule today:

label returns [string name]
    : x=unsignedInt {$name = $x.text;}
    | x=identifier {$name = $x.text;}
    ;

The generated code (CSharp2) for this rule is below. For some reason 
ANTLR doesn't assign the label x in the first alternative which results 
in "name" being null all the time:

case 1 : {
        unsignedInt(); // missing assignment to label x!
        name =  ((x != null) ? 
input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
        break;
    }
case 2 : {
        x = identifier();
        name =  ((x != null) ? 
input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
        break;
    }

If I call one label x and the other one y it works fine (both get assigned).

Shouldn't it be possible to use the x label for both assignments, since 
they are assigned in two different alternatives? The book (page 124) 
says "variables are visible to the immediately surrounding alternative, 
but not other alternatives". If I understand this right, each 
alternative has its own scope so reusing the variable name in another 
scope should be possible? Or maybe ANTLR could display an error while 
generating the parser in such a case? That would be better than silently 
discarding the assignment... :-)

Max


From antlr at mirality.co.nz  Sat Jan 24 17:55:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Jan 2009 14:55:27 +1300
Subject: [antlr-interest] A lost label?
In-Reply-To: <497BC450.60609@gmx.at>
References: <497BC450.60609@gmx.at>
Message-ID: <20090125015539.684013418151@www.antlr.org>

At 14:45 25/01/2009, Markus Stoeger wrote:
 >label returns [string name]
 >    : x=unsignedInt {$name = $x.text;}
 >    | x=identifier {$name = $x.text;}
 >    ;
 >
 >The generated code (CSharp2) for this rule is below. For some
 >reason ANTLR doesn't assign the label x in the first alternative 

 >which results in "name" being null all the time:

The trouble is that the types of the two variables are different 
(one will most likely be unsignedInt_return while the other is 
identifier_return).

If you tried it with tokens instead of subrules then you'd 
probably find that it works as expected, since they're the same 
type then.

 >case 1 : {
 >        unsignedInt(); // missing assignment to label x!
 >        name =  ((x != null) ?
 >input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
 >        break;
 >    }
 >case 2 : {
 >        x = identifier();
 >        name =  ((x != null) ?
 >input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
 >        break;
 >    }
[...]
 >Shouldn't it be possible to use the x label for both 
assignments,
 >since they are assigned in two different alternatives? The book
 >(page 124) says "variables are visible to the immediately
 >surrounding alternative, but not other alternatives". If I
 >understand this right, each alternative has its own scope so
 >reusing the variable name in another scope should be possible?

It should be (and at the grammar level it is), but as you can see 
from the generated code that's not what's actually happening; the 
variables are declared in the containing scope.  (And that in turn 
is necessary because people expect that in other situations.)

 >Or maybe ANTLR could display an error while generating the 
parser
 >in such a case? That would be better than silently discarding 
the
 >assignment... :-)

Yes, that would be better.


From jimi at temporal-wave.com  Sat Jan 24 18:37:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 24 Jan 2009 18:37:30 -0800
Subject: [antlr-interest] A lost label?
In-Reply-To: <497BC450.60609@gmx.at>
References: <497BC450.60609@gmx.at>
Message-ID: <497BD06A.70406@temporal-wave.com>

Markus Stoeger wrote:
> I ran into a nasty "ArgumentNullException" problem with the following 
> rule today:
>
> label returns [string name]
>     : x=unsignedInt {$name = $x.text;}
>     | x=identifier {$name = $x.text;}
>     ;
>
> The generated code (CSharp2) for this rule is below. For some reason 
> ANTLR doesn't assign the label x in the first alternative which results 
> in "name" being null all the time:
>
> case 1 : {
>         unsignedInt(); // missing assignment to label x!
>         name =  ((x != null) ? 
> input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
>         break;
>     }
> case 2 : {
>         x = identifier();
>         name =  ((x != null) ? 
> input.ToString((IToken)(x.Start),(IToken)(x.Stop)) : null);
>         break;
>     }
>
> If I call one label x and the other one y it works fine (both get assigned).
>
> Shouldn't it be possible to use the x label for both assignments, since 
> they are assigned in two different alternatives? 

You cannot do this because the object that is returned from 
'unsignedInt' may or may not be exactly equivalent to the object 
returned from 'identifier', but even if they are, they will be different 
type, derived from the generic rule_return class. Consider:

unsignedInt returns [int x, int y] ...

identifier returns [string name]...

Unless you are generating an AST, the analysis will determine that the 
identifier rule returns a single value and so the generated method will 
just return String. However the unsignedInt rule will return a reference 
to an object that contains two ints, x and y. You cannot create your x 
label declared as two different things simultaneously, and that's why 
you cannot reuse the label unless the label is to be assigned from 
exactly the same rule. At some point the error messages about this stuff 
will improve ;-)

You could however, do this:

: x = identOrUint { $name = $x.text; }

And then have your identOrUint assign accordingly, but at some level, 
you will run in to the same thing. I suppose that when you are asking 
for the text reference it coudl be worked out that x is a String in both 
cases, but there are probably more useful things to work on just yet.

So, your proposed workaround is what you need to do.

Jim


> The book (page 124) 
> says "variables are visible to the immediately surrounding alternative, 
> but not other alternatives". 
I think that this really means that if you have:

: y=rule1
| x=rule2

That you cannot write:

| x=rule2 { $name = $y.text; }
> If I understand this right, each 
> alternative has its own scope so reusing the variable name in another 
> scope should be possible? Or maybe ANTLR could display an error while 
> generating the parser in such a case? That would be better than silently 
> discarding the assignment... :-)
>   
It would indeed and I am sure that this will happen at some point. The 
devil is in the details of all the code generation and so on.

Jim
> Max
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From cowang at comcast.net  Sun Jan 25 08:58:27 2009
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 25 Jan 2009 11:58:27 -0500
Subject: [antlr-interest] How do we change wiki pages?
In-Reply-To: <DFA6AB2A-B94E-44E8-A13A-75CCF3776B24@cs.usfca.edu>
Message-ID: <C3D83CFB77664F089793E9C5A57AB837@gsce0ae1cfad8d>

Ter,

The results of using the Wiki Markup editor can be seen by using the history
function on the page. Look at version 34 
  http://www.antlr.org/wiki/pages/viewpage.action?pageId=16220335
All the {code} sections have lost their formatting, ... but the spelling is
better ;-) 

George



On Thursday, Jan 22, 2009, at 11:16 AM, Terence Parr wrote:
   On Jan 22, 2009, at 8:05 AM, George S. Cowan wrote:
   
   
   I tried to make minor changes (correcting spelling of "grammer" to
"grammar")
   to the page http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars 
   but the {code} sections lost their formatting. How do I keep the
formatting?

   I use IE7 with Windows XP.



   Hi George, i suggest not using their rich text editor...screws me up all
the time. I use the wiki format.
   Ter 




From barabucc at cs.unibo.it  Sun Jan 25 09:51:18 2009
From: barabucc at cs.unibo.it (Gioele Barabucci)
Date: Sun, 25 Jan 2009 18:51:18 +0100
Subject: [antlr-interest] Accessing the input stream from
	displayRecognitionError
Message-ID: <gli8qn$qsp$1@ger.gmane.org>

Is it possible to access the input char stream from lexer's
displayRecognitionError(String[] tokenNames, RecognitionException e)?

Following the error chapter on the ANTLR book I managed to get Token names
and other grammar information. Yet, I don't see how to access the input char
stream to display the characters preceding and following the error.

-- 
Gioele Barabucci <barabucc at cs.unibo.it>


From jimi at temporal-wave.com  Sun Jan 25 09:57:41 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 25 Jan 2009 09:57:41 -0800
Subject: [antlr-interest] Accessing the input stream
	from	displayRecognitionError
In-Reply-To: <gli8qn$qsp$1@ger.gmane.org>
References: <gli8qn$qsp$1@ger.gmane.org>
Message-ID: <497CA815.5090909@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090125/da91fede/attachment.html 

From gerald at certiv.net  Sun Jan 25 11:41:24 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sun, 25 Jan 2009 11:41:24 -0800
Subject: [antlr-interest] AntlrDT 0.6.2 Released
Message-ID: <200901251947.n0PJlHtF024684@zinc.newtechlaw.com>

Fixed a rather significant memory leak and a few other bugs.  Upgrade 
recommended.
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From antlr at mirality.co.nz  Sun Jan 25 12:37:23 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 26 Jan 2009 09:37:23 +1300
Subject: [antlr-interest] How do we change wiki pages?
In-Reply-To: <C3D83CFB77664F089793E9C5A57AB837@gsce0ae1cfad8d>
References: <DFA6AB2A-B94E-44E8-A13A-75CCF3776B24@cs.usfca.edu>
	<C3D83CFB77664F089793E9C5A57AB837@gsce0ae1cfad8d>
Message-ID: <20090125203734.6899F3418152@www.antlr.org>

At 05:58 26/01/2009, George S. Cowan wrote:
 >The results of using the Wiki Markup editor can be seen by using 

 >the history function on the page. Look at version 34
 > 
http://www.antlr.org/wiki/pages/viewpage.action?pageId=16220335
 >All the {code} sections have lost their formatting, ... but the
 >spelling is better ;-)

Even viewing the WYSISWYG (the extra S is "supposedly") editor 
munts up the page structure.

What you need to do is to click Edit, then Wiki Markup, then Make 
Default (or whatever it was called, I forget), then *cancel* the 
edit.

After that, you should be able to edit pages without screwing them 
up.  Just *never* click on the Rich Text editor.


From barabucc at cs.unibo.it  Sun Jan 25 13:00:56 2009
From: barabucc at cs.unibo.it (Gioele Barabucci)
Date: Sun, 25 Jan 2009 22:00:56 +0100
Subject: [antlr-interest] Accessing the input stream
	from	displayRecognitionError
References: <gli8qn$qsp$1@ger.gmane.org> <497CA815.5090909@temporal-wave.com>
Message-ID: <gliju9$te3$1@ger.gmane.org>

Jim Idle wrote:
> e.input from the Exception, on a CommonToken you can use
> getInputStream() (sometimes the input stream for the token may not be
> the same as the exception, for instance if you handle include
> processing etc).

Yes, but what then? The data field of the e.input IntStream is not
accessible. How can I get to the actual chars of the input stream?

-- 
Gioele Barabucci <barabucc at cs.unibo.it>


From carter_cheng at yahoo.com  Sun Jan 25 13:15:58 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 25 Jan 2009 13:15:58 -0800 (PST)
Subject: [antlr-interest] Shortcircuiting the tree parser
Message-ID: <111703.25011.qm@web50109.mail.re2.yahoo.com>

Thanks everyone for the replies to my previous post. I have been wondering about one additional point when it comes to tree parsers. For alot of AST's when doing semantic analysis you tend to have alot of separable distinct tasks which only need parts of the constructed tree. I am curious if there is a way to underspecify the tree grammar and tell it explicitly not to descend certain portions of the AST and only focus on certain parts. I apologize if this has been addressed before.

Thanks in advance,

Carter.


      

From cowang at comcast.net  Sun Jan 25 13:34:13 2009
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 25 Jan 2009 16:34:13 -0500
Subject: [antlr-interest] Bug Report - Composite Grammars only allow 1 level
	of lexer import
Message-ID: <172F00E6EC7B4FB582F4DEF7FF5F1FC3@gsce0ae1cfad8d>

Only one level of import works for lexers in Composite grammars. I present
my suggested solution at the bottom of this message, but for an example of
the error, here is a slight modification of the final example at
http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars that tries to
import 2 levels of lexers.
 
------- Start grammar files ------
lexer grammar LSub ;
 
SPACE : ' ' ;
----------------------------------
lexer grammar L ;
 
import LSub;
 
LETTER : 'a'..'z' ;
// SPACE : ' ' ;
NUMBER : '0'..'9' ;
 
----------------------------------
parser grammar P1 ;
 
letter : LETTER ;
spaces : SPACE+ ;
----------------------------------
parser grammar P2 ;
import P1 ;
 
letters : letter+ ;
----------------------------------
grammar C ;
import L, P2 ;
 
stuff : ( letters spaces )+ ;
 
LETTER : 'a'..'z' ;
------ End grammar files ---------
 

---------- ANTLR SysOut ----------
ANTLR Parser Generator  Version 3.1.1
---- End SysOut (notice there is no error) ----
 

--------- gUnit testsuite ---------
gunit C;
 
LETTER
: "a"   OK
  "A"   FAIL 
 
letter
: "a"   OK
  "B"   FAIL
 
spaces
: "  "  OK
 
letters
: "abc"     OK
  "aBc"     FAIL
 
stuff
: "a ab c   "   OK
  " A ab C  "   FAIL
  "A ab C   "   FAIL
------- End gUnit testsuite -------
 
---------- gUnit output ----------
-----------------------------------------------------------------------
executing testsuite for grammar:C with 10 tests
-----------------------------------------------------------------------
2 failures found:
test5 (spaces, line12) -
expected: OK
actual: FAIL
 
test8 (stuff, line19) -
expected: OK
actual: FAIL
 

Tests run: 10, Failures: 2
----- CTest gUnit completed -----
-------- End gUnit output --------
 

----------- CTest.java -----------
import java.io.IOException;
 
import org.antlr.runtime.*;
 
public class CTest {
 
      public static void 
  parseText(String fileToParse) throws IOException, RecognitionException {
    final CParser parser = new CParser(lexFileToTokenStream(fileToParse));
    parser.stuff();
  }
 
      private static CommonTokenStream 
  lexFileToTokenStream(String fileToParse) throws IOException {
    final ANTLRStringStream input 
      = (fileToParse==null) ? new ANTLRInputStream() 
                            : new ANTLRFileStream(fileToParse);
    final CLexer lexer = new CLexer(input);
    return new CommonTokenStream(lexer);
  }
    
      public static void 
  main(String[] args) throws Exception {
    if (args.length == 0) {
      parseText(null);
    } else {
      for (int i=0; i<args.length; i++) {
        parseText(args[i]);
      }
    }
  }
}
--------- End CTest.java ---------
 

------------ Test File (C01.testme)-----------
a b ccc 
---------- End Test File ---------
 
-------- Testing File C01.testme  --------
C:\Projects\SW_Development\ANTLRv3\CompositeLexBug\work>java -cp
C:\Java\ANTLR\antlrworks-1.2.2.jar;. CTest ..\*.testme
Exception in thread "main" java.lang.NullPointerException
        at CLexer.mTokens(CLexer.java:121)
        at org.antlr.runtime.Lexer.nextToken(Unknown Source)
        at org.antlr.runtime.CommonTokenStream.fillBuffer(Unknown Source)
        at org.antlr.runtime.CommonTokenStream.LT(Unknown Source)
        at org.antlr.runtime.CommonTokenStream.LA(Unknown Source)
        at CParser.stuff(CParser.java:51)
        at CTest.parseText(CTest.java:10)
        at CTest.main(CTest.java:28)
------ End Test File 1 Output ----
 
 
** THE SOLUTION **
 
The problem seems to be that, although CLexer.java does have
        gL = new C_L(input, state, this);
at line 26 in the CLexer constructor, it needs to follow it with
        gLSub = gL.gLSub;
(a similar thing is already done in the parsers).
 
When I add that line in the generated CLexer, everything works fine.
 
The following is a model for a temporary fix for grammars that have multiple
levels of lexers. However, it does not allow direct testing of any rules but
the ones that have the @init fix added to them.
 
------------- C.g with temporary fix --------------
grammar C ;
import L, P2 ;
 
stuff 
  @init {
    // kludge for problem in generating CLexer.java  
    CLexer clex = (CLexer)input.getTokenSource();
    clex.gLSub = clex.gL.gLSub; 
  }
: ( letters spaces )+ ;
 
LETTER : 'a'..'z' ;
----------------------------------------------------
 
Regards,
George

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090125/8239b762/attachment.html 

From jaluber at gmx.de  Sun Jan 25 13:35:29 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 25 Jan 2009 22:35:29 +0100
Subject: [antlr-interest] Shortcircuiting the tree parser
In-Reply-To: <111703.25011.qm@web50109.mail.re2.yahoo.com>
References: <111703.25011.qm@web50109.mail.re2.yahoo.com>
Message-ID: <497CDB21.7030203@gmx.de>

Carter Cheng schrieb:
> Thanks everyone for the replies to my previous post. I have been wondering about one additional point
> when it comes to tree parsers. For alot of AST's when doing semantic
analysis you tend to have alot
> of separable distinct tasks which only need parts of the constructed
tree. I am curious if there is
> a way to underspecify the tree grammar and tell it explicitly not to
descend certain portions of the
> AST and only focus on certain parts. I apologize if this has been
addressed before.
> 
> Thanks in advance,
> 
> Carter.
> 
Well, you could use the . to mark certain nodes and subtrees as "just
have to be here".

Johannes

From parrt at cs.usfca.edu  Sun Jan 25 13:36:26 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 25 Jan 2009 13:36:26 -0800
Subject: [antlr-interest] Bug Report - Composite Grammars only allow 1
	level of lexer import
In-Reply-To: <172F00E6EC7B4FB582F4DEF7FF5F1FC3@gsce0ae1cfad8d>
References: <172F00E6EC7B4FB582F4DEF7FF5F1FC3@gsce0ae1cfad8d>
Message-ID: <20F8F6B2-4940-43B6-A62C-04F238C6558A@cs.usfca.edu>

Thanks...adding:

http://www.antlr.org/jira/browse/AW-205

Ter

From oliver.zeigermann at gmail.com  Sun Jan 25 13:43:35 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 25 Jan 2009 22:43:35 +0100
Subject: [antlr-interest] Shortcircuiting the tree parser
In-Reply-To: <497CDB21.7030203@gmx.de>
References: <111703.25011.qm@web50109.mail.re2.yahoo.com>
	<497CDB21.7030203@gmx.de>
Message-ID: <9da4f4520901251343o42169185q9430adb8dfcf5d35@mail.gmail.com>

2009/1/25 Johannes Luber <jaluber at gmx.de>:
> Carter Cheng schrieb:
>> Thanks everyone for the replies to my previous post. I have been wondering about one additional point
>> when it comes to tree parsers. For alot of AST's when doing semantic
> analysis you tend to have alot
>> of separable distinct tasks which only need parts of the constructed
> tree. I am curious if there is
>> a way to underspecify the tree grammar and tell it explicitly not to
> descend certain portions of the
>> AST and only focus on certain parts. I apologize if this has been
> addressed before.
>>
>> Thanks in advance,
>>
>> Carter.
>>
> Well, you could use the . to mark certain nodes and subtrees as "just
> have to be here".
>

Which isn't that easy as the wildcard '.' does not work for tree
roots. Additionally, nodes matched by wildcards do not seem to get
copied to the output tree automatically.

What you could do is to have simple Java code that scans (and copies
if desired) the tree until it finds - say - an expression an calls a
tree parser with this sub tree. You can take BaseTreeAdaptor#dupTree
for inspiration how to traverse a random tree.

- Oliver

From parrt at cs.usfca.edu  Sun Jan 25 13:47:53 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 25 Jan 2009 13:47:53 -0800
Subject: [antlr-interest] Shortcircuiting the tree parser
In-Reply-To: <9da4f4520901251343o42169185q9430adb8dfcf5d35@mail.gmail.com>
References: <111703.25011.qm@web50109.mail.re2.yahoo.com>
	<497CDB21.7030203@gmx.de>
	<9da4f4520901251343o42169185q9430adb8dfcf5d35@mail.gmail.com>
Message-ID: <1D5DF5F9-D868-428F-8859-7976CECD1013@cs.usfca.edu>

Also see upcoming release's ideas:

http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree 
+pattern+matching%2C+rewriting+a+reality

Ter
On Jan 25, 2009, at 1:43 PM, Oliver Zeigermann wrote:

> 2009/1/25 Johannes Luber <jaluber at gmx.de>:
>> Carter Cheng schrieb:
>>> Thanks everyone for the replies to my previous post. I have been  
>>> wondering about one additional point
>>> when it comes to tree parsers. For alot of AST's when doing semantic
>> analysis you tend to have alot
>>> of separable distinct tasks which only need parts of the constructed
>> tree. I am curious if there is
>>> a way to underspecify the tree grammar and tell it explicitly not to
>> descend certain portions of the
>>> AST and only focus on certain parts. I apologize if this has been
>> addressed before.
>>>
>>> Thanks in advance,
>>>
>>> Carter.
>>>
>> Well, you could use the . to mark certain nodes and subtrees as "just
>> have to be here".
>>
>
> Which isn't that easy as the wildcard '.' does not work for tree
> roots. Additionally, nodes matched by wildcards do not seem to get
> copied to the output tree automatically.
>
> What you could do is to have simple Java code that scans (and copies
> if desired) the tree until it finds - say - an expression an calls a
> tree parser with this sub tree. You can take BaseTreeAdaptor#dupTree
> for inspiration how to traverse a random tree.
>
> - Oliver
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From carter_cheng at yahoo.com  Sun Jan 25 14:23:46 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Sun, 25 Jan 2009 14:23:46 -0800 (PST)
Subject: [antlr-interest] passing parts of the parse around as
	parameters(newbie)
Message-ID: <303683.90038.qm@web50106.mail.re2.yahoo.com>

Thanks I will try the wildcard solution it might work well enough for what i am trying. One more question w.r.t. parameter passing in rules with the C runtime.

Can I do something like the following?

rule1: type idlist[type];

idlist[.... t]: var[type] (COMMA var[type])*;

var[... t]: ID -> ^(ID $t);

I tried using ANTLR3_BASE_TREE but the last construct does not seem to work properly. What is the default return type for a rule in buildAST mode?
I apologize for the deluge of questions.

Thanks in advance,

Carter.



  




      

From oliver.zeigermann at gmail.com  Sun Jan 25 14:49:26 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 25 Jan 2009 23:49:26 +0100
Subject: [antlr-interest] ANTLR Conference 2009
Message-ID: <9da4f4520901251449y495adb23oe3223613b26928dd@mail.gmail.com>

Folks!

To get more serious about the ANTLR 2009 conference I created this
Wiki page to collect ideas:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Conference+2009

Feel free to add you comments/topics/ideas.

I have already added the topics I could gather from the mailing lists.

Thanks and hope to see you at the ANTLR 2009 conference!

- Oliver

From jimi at temporal-wave.com  Sun Jan 25 16:22:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 25 Jan 2009 16:22:40 -0800
Subject: [antlr-interest] C Target bug fixes
Message-ID: <497D0250.4060709@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090125/91fed1f5/attachment.html 

From antlr at mirality.co.nz  Sun Jan 25 17:35:05 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 26 Jan 2009 14:35:05 +1300
Subject: [antlr-interest] passing parts of the parse around as
 parameters(newbie)
In-Reply-To: <303683.90038.qm@web50106.mail.re2.yahoo.com>
References: <303683.90038.qm@web50106.mail.re2.yahoo.com>
Message-ID: <20090126013517.28C4B3418152@www.antlr.org>

At 11:23 26/01/2009, Carter Cheng wrote:
 >rule1: type idlist[type];
 >
 >idlist[.... t]: var[type] (COMMA var[type])*;
 >
 >var[... t]: ID -> ^(ID $t);
 >
 >I tried using ANTLR3_BASE_TREE but the last construct does not 
seem
 >to work properly. What is the default return type for a rule in
 >buildAST mode?

Each rule will typically have its own custom return type (eg. the 
idlist rule will return an idlist_return object).

To pass a tree in as a parameter, do something like 
var[$type.tree].


From bottiger1 at gmail.com  Sun Jan 25 17:54:03 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Sun, 25 Jan 2009 17:54:03 -0800
Subject: [antlr-interest] Possible C Runtime Error
Message-ID: <3490668a0901251754h2b463aedi1d4dcf0133263f6c@mail.gmail.com>

I have been trying to modify the C runtime lexer/parser error handling.
However, whenever I try to use the default error reporter by trying to parse
a single token that is not supposed to be recognized, it gives a segfault
instead of the proper error reporting behavior.

antlr3baserecognizer.c
displayRecognitionError:

ANTLR3_FPRINTF(stderr, ", at offset %d",
recognizer->state->exception->charPositionInLine);

I cannot find any documentation or examples about this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090125/b3e6ed06/attachment.html 

From g.r.vansickle at att.net  Sun Jan 25 19:24:39 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 25 Jan 2009 21:24:39 -0600
Subject: [antlr-interest] C Target bug fixes
In-Reply-To: <497D0250.4060709@temporal-wave.com>
References: <497D0250.4060709@temporal-wave.com>
Message-ID: <F4385C0492BB43B39561B8F95D8D74CC@DFW5RB41>


> For the latest snapshot of the ANTLR tool, visit:
> 
> http://antlr.org/hudson/job/ANTLR%20Tool/lastSuccessfulBuild/o
rg.antlr$antlr/
> 
> You can download the "jar-with-dependencies.jar", which is 
> self contained and has string template, antlr 2.7.7 runtime 
> and so on all within the jar. You can tehrefore run it 
> without CLASSPATH as:
> 
> jar -jar path/to/jar-with-dependencies.jar t.g
  ^^^
java -jar [etc]

-- 
Gary R. Van Sickle


From g.r.vansickle at att.net  Sun Jan 25 19:58:27 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 25 Jan 2009 21:58:27 -0600
Subject: [antlr-interest] C Target bug fixes
In-Reply-To: <497D0250.4060709@temporal-wave.com>
References: <497D0250.4060709@temporal-wave.com>
Message-ID: <3E3A4B87B4CC41B2BC0CFCF57B940460@DFW5RB41>

I'm still having no luck with dynamic scopes in the examples-v3 C.g:

$ make
java -jar antlr-3.1.2-SNAPSHOT-jar-with-dependencies.jar C.g
ANTLR Parser Generator  Version 3.1.2-2008-10-21
gcc -I. -L/usr/local/lib CLexer.c CParser.c main.c -lantlr3c
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0xbc2c)
: undefined reference to `_ptranslation_unit_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0xc6a2)
: undefined reference to `_pfunction_definition_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0xd189)
: undefined reference to `_pdeclaration_declarationPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0x107df
): undefined reference to `_pstruct_or_union_specifier_SymbolsPop'
/cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0x27d97
): undefined reference to `_pcompound_statement_SymbolsPop'
collect2: ld returned 1 exit status
make: *** [all] Error 1

-- 
Gary R. Van Sickle
 


From jimi at temporal-wave.com  Sun Jan 25 23:29:46 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 25 Jan 2009 23:29:46 -0800
Subject: [antlr-interest] C Target bug fixes
In-Reply-To: <3E3A4B87B4CC41B2BC0CFCF57B940460@DFW5RB41>
References: <497D0250.4060709@temporal-wave.com>
	<3E3A4B87B4CC41B2BC0CFCF57B940460@DFW5RB41>
Message-ID: <497D666A.1070904@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090125/893d5bcf/attachment.html 

From sven.prevrhal at ucsf.edu  Mon Jan 26 00:04:20 2009
From: sven.prevrhal at ucsf.edu (Sven Prevrhal)
Date: Mon, 26 Jan 2009 00:04:20 -0800
Subject: [antlr-interest] how do I accumulate multiple returns for parser
 matches in one variable?
Message-ID: <01ea01c97f8c$b1c904e0$155b0ea0$@prevrhal@ucsf.edu>

I want to parse recipes and I have something like

 

ingrediententry

                :               q=number uid=unit iid=ingredient
qid=ingredient_qualifier*

                { .

 

Where ingredient_qualifier can appear more than once. How do I accumulate a
list of qualifiers that I can then process in the action to
ingrediententry?

I tried 

 

ingrediententry

                @init {

                                List<int> li = new List<int>();

                }

                // ingredient returns an id

                :               q=number uid=unit iid=ingredient
qid=ingredient_qualifier* {$li.Add($qid);} 

                {.

 

But that gives an missing attribute access error on rule scope for $qid.

 

Cheers,

Sven

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/b043c709/attachment.html 

From oliver.zeigermann at gmail.com  Mon Jan 26 00:38:07 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon, 26 Jan 2009 09:38:07 +0100
Subject: [antlr-interest] how do I accumulate multiple returns for
	parser matches in one variable?
In-Reply-To: <-2554425300750640970@unknownmsgid>
References: <-2554425300750640970@unknownmsgid>
Message-ID: <9da4f4520901260038n66ad6dd5jd3dd130adc4a292f@mail.gmail.com>

Have you tried this(not tested)?

ingrediententry

                @init {

                                List<int> li = new List<int>();

                }

                // ingredient returns an id

                :               q=number uid=unit iid=ingredient
(qid=ingredient_qualifier {$li.Add($qid);} )*
 {?

What you might try as an alternative:
AFAIK if you write this

qid+=ingredient_qualifier*

qid will be of type List and contrain the results of the rull calls as elements.


- Oliver

2009/1/26 Sven Prevrhal <sven.prevrhal at ucsf.edu>:
> I want to parse recipes and I have something like
>
>
>
> ingrediententry
>
>                 :               q=number uid=unit iid=ingredient
> qid=ingredient_qualifier*
>
>                 { ?
>
>
>
> Where ingredient_qualifier can appear more than once. How do I accumulate a
> list of qualifiers that I can then process in the action to
>  ingrediententry?
>
> I tried
>
>
>
> ingrediententry
>
>                 @init {
>
>                                 List<int> li = new List<int>();
>
>                 }
>
>                 // ingredient returns an id
>
>                 :               q=number uid=unit iid=ingredient
> qid=ingredient_qualifier* {$li.Add($qid);}
>
>                 {?
>
>
>
> But that gives an missing attribute access error on rule scope for $qid?
>
>
>
> Cheers,
>
> Sven
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From spriolo at walkerinfo.com  Mon Jan 26 06:58:43 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Mon, 26 Jan 2009 09:58:43 -0500
Subject: [antlr-interest] Parsing with a character that represents null
Message-ID: <A94D52854588164583AA892FECB259950745ECC7@wimail.wi>

Hello,

 

I'm writing a grammar based on Apache Tomcat's Access Log format.  I'm
able to parse these lines into host, timestamp, command, protocol,
response, bytes, etc...

 

A problem occurs when the log file uses a '-' for "no data".  I'd like
to capture this as a "null" field when I walk the tree so it's important
not to treat '-' as white space.  The issue I'm having is '-' can match
any of the patterns such as host, username, timestamp, bytes, etc....
When I try to use

 

field : HOST L_USER A_USER TIMESTAMP '"' COMMAND PATH PROTOCOL '"'
RESPONSE_CODE BYTES;

 

L_USER : '-' | ('a'..'z'|'A'..'Z')+;

BYTES : '-' | ('0'..'9')+;

 

The parser can't distinguish if the '-' is L_USER or BYTES (see below
that the second test line has a '-' for the last number because there
was no data.

 

Actual data line

66.249.71.45 - - [25/Jan/2009:00:00:56 -0500] "GET
/abc/slides/180001.1.jsp HTTP/1.1" 200 11785

67.68.5.63 - - [10/Nov/2008:16:26:12 -0500] "HEAD /abc/res/prev1.gif
HTTP/1.0" 200 -

 

How do I manage these '-' without changing the logging pattern?

 

Thanks!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/f2658494/attachment.html 

From jimi at temporal-wave.com  Mon Jan 26 09:25:16 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 26 Jan 2009 09:25:16 -0800
Subject: [antlr-interest] Parsing with a character that represents null
In-Reply-To: <A94D52854588164583AA892FECB259950745ECC7@wimail.wi>
References: <A94D52854588164583AA892FECB259950745ECC7@wimail.wi>
Message-ID: <497DF1FC.6080705@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/e57fa04d/attachment.html 

From jimi at temporal-wave.com  Mon Jan 26 10:20:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 26 Jan 2009 10:20:42 -0800
Subject: [antlr-interest] how do I accumulate multiple returns for
 parser matches in one variable?
In-Reply-To: <01ea01c97f8c$b1c904e0$155b0ea0$@prevrhal@ucsf.edu>
References: <01ea01c97f8c$b1c904e0$155b0ea0$@prevrhal@ucsf.edu>
Message-ID: <497DFEFA.2070505@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/ce91d878/attachment.html 

From jimi at temporal-wave.com  Mon Jan 26 11:56:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 26 Jan 2009 11:56:53 -0800
Subject: [antlr-interest] C Target bug fixes
In-Reply-To: <3E3A4B87B4CC41B2BC0CFCF57B940460@DFW5RB41>
References: <497D0250.4060709@temporal-wave.com>
	<3E3A4B87B4CC41B2BC0CFCF57B940460@DFW5RB41>
Message-ID: <497E1585.4020008@temporal-wave.com>

Gary R. Van Sickle wrote:
> I'm still having no luck with dynamic scopes in the examples-v3 C.g:
>
> $ make
> java -jar antlr-3.1.2-SNAPSHOT-jar-with-dependencies.jar C.g
> ANTLR Parser Generator  Version 3.1.2-2008-10-21
> gcc -I. -L/usr/local/lib CLexer.c CParser.c main.c -lantlr3c
> /cygdrive/c/DOCUME~1/GaryV/LOCALS~1/Temp/cch3C2Ye.o:CParser.c:(.text+0xbc2c)

See:

http://antlr.org/jira/browse/ANTLR-379

Which is now fixed (but wait for Hudson to build it sometime in the next 
hour)

Jim

From ian at telematter.com  Mon Jan 26 12:16:22 2009
From: ian at telematter.com (ian eyberg)
Date: Mon, 26 Jan 2009 14:16:22 -0600
Subject: [antlr-interest] chat message parser rule?
Message-ID: <20090126201622.GA13966@localhost>

Oh awesome antlr apostles:

  I've been stuggling with a parser rule and 
am hoping you might be able to help me.

  I'm have a bit of data I'm trying to parse that
looks something like this:

  username: the rain in spain stays....

Running this through antlrworks I am hitting my 'chatrule'
every time but it will start chopping up the
player's message into other tokens that I have defined.

My question: why wouldn't the ALPHA token always be
chosen over the other tokens?

For example say I have a token of:
  LAMB  : 'rack';

and my player's chat message comes across as:
  joeblow: the rain in spain


my abbr. grammar:
--------------------------------------------------------

chatrule  : player COLON_SPACE ~NEWLINE+;

player  : (INT | ALPHA | WS)+ ;

fragment LOWER_LETTER   : 'a'..'z' ;
fragment UPPER_LETTER   : 'A'..'Z' ;
ALPHA : (LOWER_LETTER | UPPER_LETTER)+ ;

COMMA_SP  : ',' ' ' ;
COLON_SP  : ': ';

fragment DIGIT  : ('0'..'9')+ ;
INT : DIGIT COMMA_SP?;
COMMA_INT
NEWLINE : '\r'? '\n' ;

--------------------------------------------------------

thanks,
Ian

From jimi at temporal-wave.com  Mon Jan 26 12:28:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 26 Jan 2009 12:28:21 -0800
Subject: [antlr-interest] chat message parser rule?
In-Reply-To: <20090126201622.GA13966@localhost>
References: <20090126201622.GA13966@localhost>
Message-ID: <497E1CE5.3020808@temporal-wave.com>

ian eyberg wrote:
> Oh awesome antlr apostles:
>
>   I've been stuggling with a parser rule and 
> am hoping you might be able to help me.
>
>   I'm have a bit of data I'm trying to parse that
> looks something like this:
>
>   username: the rain in spain stays....
>
> Running this through antlrworks I am hitting my 'chatrule'
> every time but it will start chopping up the
> player's message into other tokens that I have defined.
>
> My question: why wouldn't the ALPHA token always be
> chosen over the other tokens?
>
> For example say I have a token of:
>   LAMB  : 'rack';
>
> and my player's chat message comes across as:
>   joeblow: the rain in spain
>
>
> my abbr. grammar:
>   
I thk u hv ab. 2 mch. Gmr ds nt mk sns. ;-)

Remember that the lexer rules all run first and tokenize. There is no 
influence on them by the parser. Also there is no guranatee that one 
rule will be chosen over another in the lexer if there ambiguities. make 
sure that you solve any warnings you are getting.

If you define a token:

LAMB : 'newzealand' ;

Then you will ALWAYS get that token back for that sequence. So, if your 
keywords can occur in the message, then you will ahve to cater for them 
in the parser rule:

msg: USER COLON message_stuff NL ;
message_stuff: (ALPHA | WS | LAMB)* ;

However, if everything after the colon should just be eaten, then 
something similar to:

@lexer::members { boolean isMsg = false; }

MESSAGE : { isMsg }?=> ~('\n'|'\r')* { isMsg = false; }
COLON : ':' { isMsg = true; } ;
WS : (' '| '\t') { skip(); } ;
NL : '\r'? '\n' { skip(); } ;
ID :  (LOWER_LETTER | UPPER_LETTER)+ ;
 
msg : ID COLON MESSAGE ;


Will do you better.

Jim
> --------------------------------------------------------
>
> chatrule  : player COLON_SPACE ~NEWLINE+;
>
> player  : (INT | ALPHA | WS)+ ;
>
> fragment LOWER_LETTER   : 'a'..'z' ;
> fragment UPPER_LETTER   : 'A'..'Z' ;
> ALPHA : (LOWER_LETTER | UPPER_LETTER)+ ;
>
> COMMA_SP  : ',' ' ' ;
> COLON_SP  : ': ';
>
> fragment DIGIT  : ('0'..'9')+ ;
> INT : DIGIT COMMA_SP?;
> COMMA_INT
> NEWLINE : '\r'? '\n' ;
>
> --------------------------------------------------------
>
> thanks,
> Ian
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From antlr at mirality.co.nz  Mon Jan 26 12:34:01 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 27 Jan 2009 09:34:01 +1300
Subject: [antlr-interest] chat message parser rule?
In-Reply-To: <20090126201622.GA13966@localhost>
References: <20090126201622.GA13966@localhost>
Message-ID: <20090126203412.D1ED03418450@www.antlr.org>

At 09:16 27/01/2009, ian eyberg wrote:
 >Running this through antlrworks I am hitting my 'chatrule'
 >every time but it will start chopping up the
 >player's message into other tokens that I have defined.
 >
 >My question: why wouldn't the ALPHA token always be
 >chosen over the other tokens?

Lexing is done independently of parsing (and before parsing 
begins).

Essentially, when the lexer is "between" tokens it will look at 
the input and decide which of the lexer rules best fits the 
input.  Then it will consume input using that rule until the rule 
is no longer satisfied, and then it will exit out and look for 
another lexer rule to satisfy.

When you have overlapping definitions (such as ALPHA and LAMB), 
this can lead to differences in behaviour depending on the 
ordering of the input.  (eg. "rack" => LAMB, "racket" => LAMB 
ALPHA, "track" => ALPHA)


From carter_cheng at yahoo.com  Mon Jan 26 18:48:51 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Mon, 26 Jan 2009 18:48:51 -0800 (PST)
Subject: [antlr-interest] passing parts of the parse around as
	parameters(newbie)
Message-ID: <599789.81343.qm@web50104.mail.re2.yahoo.com>

Thanks. Is it possible to insert this tree back into the AST? I know there is sort of an example of this in the book but the C Runtime seems to use slightly different structures.

My original thought was to sort of cheat but I am not sure how well this would work i.e. xxxx_return objects in the C runtime seem all to be typedefed to a ****_Ctx_struct so i was wondering if i could safely pass this around (though i still dont know how to reincorporate it into the AST manually).

Thanks in advance,

Carter.




      

From spprtmail09 at yahoo.com  Mon Jan 26 20:03:06 2009
From: spprtmail09 at yahoo.com (Meena Vinod)
Date: Mon, 26 Jan 2009 20:03:06 -0800 (PST)
Subject: [antlr-interest] The behavior.....
Message-ID: <340543.70512.qm@web112213.mail.gq1.yahoo.com>

Hello,
This pet project of mine requires that I can validate a command. The command is of the form <command_name><command options>

My lexer consists of all the command names and options:

Ex: 
    
    CMD_CD : 'cd';
    CMD_SHOW: 'show';
    CMD_RESET: 'reset';
    CMD_SET: 'set';
    CMD_OPTION: '-all' | '-help';
    TSEP: ' ' { SKIP(); };

The parser is defined as:
cmd_validate: (cmd)(CMD_OPTION);

cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;

For all valid inputs, the cmd_validate behaves properly.

On the ANTLRWorks, when I give a junk input say 'zee zee', the ANTLRWorks does not generate any proper output and does not evn throw an exception.
Also, the C code generated hangs when given this input.

Can someone help me out on this?

Many thanks,
Swift.


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/3e893db2/attachment.html 

From bottiger1 at gmail.com  Mon Jan 26 20:26:53 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Mon, 26 Jan 2009 20:26:53 -0800
Subject: [antlr-interest] Possible C Runtime Error
In-Reply-To: <3490668a0901251754h2b463aedi1d4dcf0133263f6c@mail.gmail.com>
References: <3490668a0901251754h2b463aedi1d4dcf0133263f6c@mail.gmail.com>
Message-ID: <3490668a0901262026s43fcbf5eu8842adbec4724365@mail.gmail.com>

I have found out that this error occurs when the parser expects an EOF
token. If it is the source of the error, the parser will segfault. I am not
sure how to fix this except to avoid calling

recognizer->displayRecognitionError
when recognizer->state->exception->charPositionInLine == -1, but I don't
think this is the correct fix.

On Sun, Jan 25, 2009 at 5:54 PM, Bot Tiger <bottiger1 at gmail.com> wrote:

> I have been trying to modify the C runtime lexer/parser error handling.
> However, whenever I try to use the default error reporter by trying to
> parse a single token that is not supposed to be recognized, it gives a
> segfault instead of the proper error reporting behavior.
>
> antlr3baserecognizer.c
> displayRecognitionError:
>
> ANTLR3_FPRINTF(stderr, ", at offset %d",
> recognizer->state->exception->charPositionInLine);
>
> I cannot find any documentation or examples about this.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/40d02da2/attachment.html 

From vasanthi.ak at gmail.com  Mon Jan 26 21:29:24 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Tue, 27 Jan 2009 10:59:24 +0530
Subject: [antlr-interest] Please provide GCC grammar
Message-ID: <307cfdc90901262129x2558b658t4c99b7a742c19792@mail.gmail.com>

Hi All

Please provide me GCC grammar for


1:  extern word __extension__({ __uint16_t __swap16gen_x =

 (word w); (__uint16_t)((__swap16gen_x & 0xff) << 8 |

 (__swap16gen_x & 0xff00) >> 8); });



2:  Token *pToken = __builtin_va_arg(ap, Token*);



I am trying this from many days, and I am not able to get it.

Can any please provide GCC grammar for the above two.

This is quite urgent.

In anticipation

Vasanthi A
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/7af9f153/attachment.html 

From dave.peckham at me.com  Mon Jan 26 21:34:44 2009
From: dave.peckham at me.com (David Peckham)
Date: Mon, 26 Jan 2009 21:34:44 -0800
Subject: [antlr-interest] The behavior.....
In-Reply-To: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
References: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
Message-ID: <661070C4-84A1-48AC-8EC3-8D6236CD7E68@me.com>

Try:

	cmd_validate
		:	cmd CMD_OPTION EOF
		;

ANTLR will report errors if you have extra input.

Dave


On Jan 26, 2009, at 8:03 PM, Meena Vinod wrote:

> Hello,
> This pet project of mine requires that I can validate a command. The  
> command is of the form <command_name><command options>
>
> My lexer consists of all the command names and options:
>
> Ex:
>
>     CMD_CD : 'cd';
>     CMD_SHOW: 'show';
>     CMD_RESET: 'reset';
>     CMD_SET: 'set';
>     CMD_OPTION: '-all' | '-help';
>     TSEP: ' ' { SKIP(); };
>
> The parser is defined as:
> cmd_validate: (cmd)(CMD_OPTION);
>
> cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;
>
> For all valid inputs, the cmd_validate behaves properly.
>
> On the ANTLRWorks, when I give a junk input say 'zee zee', the  
> ANTLRWorks does not generate any proper output and does not evn  
> throw an exception.
> Also, the C code generated hangs when given this input.
>
> Can someone help me out on this?
>
> Many thanks,
> Swift.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090126/d63f769b/attachment.html 

From antlr at mirality.co.nz  Mon Jan 26 23:17:39 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 27 Jan 2009 20:17:39 +1300
Subject: [antlr-interest] passing parts of the parse around as
 parameters(newbie)
In-Reply-To: <599789.81343.qm@web50104.mail.re2.yahoo.com>
References: <599789.81343.qm@web50104.mail.re2.yahoo.com>
Message-ID: <20090127071751.6AD163418451@www.antlr.org>

At 15:48 27/01/2009, Carter Cheng wrote:
 >Thanks. Is it possible to insert this tree back into the AST? I
 >know there is sort of an example of this in the book but the C
 >Runtime seems to use slightly different structures.

If you have a tree (eg. an ANTLR3_BASE_TREE) that you want to put 
into the AST, just specify it in the rewrite rule in the 
appropriate place.

eg:

var[ANTLR3_BASE_TREE* t]
   : ID -> ^(ID $t);

You might need to use {$t} in the rewrite instead of just $t; I 
forget the exact syntax.  (Code blocks in a rewrite rule are 
assumed to evaluate to a tree or node, though it's likely that 
only one of the two is supported by the C runtime, as it doesn't 
support overloading and can't rely on having a smart compiler like 
gcc.)


From antlr at mirality.co.nz  Mon Jan 26 23:27:41 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 27 Jan 2009 20:27:41 +1300
Subject: [antlr-interest] The behavior.....
In-Reply-To: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
References: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
Message-ID: <20090127072801.B76093418451@www.antlr.org>

At 17:03 27/01/2009, Meena Vinod wrote:
>On the ANTLRWorks, when I give a junk input say 'zee zee', the 
>ANTLRWorks does not generate any proper output and does not evn 
>throw an exception.
>Also, the C code generated hangs when given this input.

The grammar you provided in the email shouldn't have either 
behaviour (unless you generated the code with -debug, for the 
hanging problem).

However variations on some of your rules could cause both of them.

1.
If your top-level rule permits nothing to be matched (eg. by using 
*), then ANTLR will quite happily match nothing and report 
success, when given invalid input.  ANTLR will not complain about 
having "extra" unconsumed input; it assumes that you're going to 
do something else with it (such as passing it to a different 
lexer).

If you want ANTLR to complain about not matching all the input, 
then your top-level rule should end with EOF, thereby explicitly 
trying to match "end of file/input".

2.
If a top-level lexer rule permits nothing to be matched (again, 
eg. by using *), then it will get into an infinite loop, as it can 
always successfully match nothing.  Make sure you don't do that.


From spprtmail09 at yahoo.com  Tue Jan 27 01:54:40 2009
From: spprtmail09 at yahoo.com (Meena Vinod)
Date: Tue, 27 Jan 2009 01:54:40 -0800 (PST)
Subject: [antlr-interest] stop the lexer error when invoking the lexer
	without calling the parser
Message-ID: <149737.36266.qm@web112219.mail.gq1.yahoo.com>

Hi,
? Is there a way where in if there is a lexer error,the antlr reports the error and exits without creating the parser for it ?
for ex:
In the calling program:
?
lex = LexerNew(input);
{
fprintf(stderr, 
exit(ANTLR3_ERR_NOMEM);
}
tokens = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lex));
{
fprintf(stderr, 
exit(ANTLR3_ERR_NOMEM);
} 
//want the lexer to exit here only in case of a lexer error 
-------------------------------------------------------------------------
parser = ParserNew(tokens);
//calling the startrule from my .g file
parser ->starting _rule(parser);
?
Thanksif(lex == NULL)"Unable to create the lexer due to malloc() failure1\n");?if(tokens == NULL)"Out of memory trying to allocate token stream\n");


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/7180d772/attachment.html 

From spprtmail09 at yahoo.com  Tue Jan 27 04:08:29 2009
From: spprtmail09 at yahoo.com (Meena Vinod)
Date: Tue, 27 Jan 2009 04:08:29 -0800 (PST)
Subject: [antlr-interest] The behavior.....
References: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
	<661070C4-84A1-48AC-8EC3-8D6236CD7E68@me.com>
Message-ID: <629223.32616.qm@web112223.mail.gq1.yahoo.com>

Thanks a ton Dave. That surely helped solve the problem.
I have a new problem now. My application's .g is as follows:

    CMD_CD : 'cd';
    CMD_SHOW: 'show';
    CMD_RESET: 'reset';
    CMD_SET: 'set';
    CMD_OPTION: (' -all' | ' -help' | ' -version' | ' -display')*;
    TSEP: ' ' { SKIP(); };

The parser is defined as:
cmd_validate: (cmd)(CMD_OPTION) EOF;

cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;

A valid input to my application is "cd -help -version -display". I can achieve this with the " " (space) prefixed for each of the CMD_OPTION value.
However, if I enter "cd-help", then my application hangs on ANTLRWorks and even my C code hangs.

I would want to ensure that there is a space between the "cmd" and the "cmd_option" (if there is a cmd_option value).

So, my application takes values as follows:
1. cd -help -version -display
2. cd -version
3. cd
4. show -help -version -display....... et al

What should I do so that it throws an exception when I enter "cd-help" or "show-version"?

Could you please help me on this too?

Regards,
Swift



________________________________
From: David Peckham <dave.peckham at me.com>
To: Meena Vinod <spprtmail09 at yahoo.com>
Cc: antlr-interest at antlr.org
Sent: Tuesday, January 27, 2009 11:04:44 AM
Subject: Re: [antlr-interest] The behavior.....


Try:


cmd_validate
:cmd CMD_OPTION EOF
;

ANTLR will report errors if you have extra input.

Dave


On Jan 26, 2009, at 8:03 PM, Meena Vinod wrote:

Hello,
This pet project of mine requires that I can validate a command. The command is of the form <command_name><command options>

My lexer consists of all the command names and options:

Ex: 
    
    CMD_CD : 'cd';
    CMD_SHOW: 'show';
    CMD_RESET: 'reset';
    CMD_SET: 'set';
    CMD_OPTION: '-all' | '-help';
    TSEP: ' ' { SKIP(); };

The parser is defined as:
cmd_validate: (cmd)(CMD_OPTION);

cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;

For all valid inputs, the cmd_validate behaves properly.

On the ANTLRWorks, when I give a junk input say 'zee zee', the ANTLRWorks does not generate any proper output and does not evn throw an exception.
Also, the C code generated hangs when given this input.

Can someone help me out on this?

Many thanks,
Swift. 



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/12c306b2/attachment.html 

From oliver.zeigermann at gmail.com  Tue Jan 27 04:58:23 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 27 Jan 2009 13:58:23 +0100
Subject: [antlr-interest] Source level include: Line numbers messed up
Message-ID: <9da4f4520901270458g4925f58bwf3280a6ee25be763@mail.gmail.com>

Folks!

I am doing includes on the source level, but this messes up my line numbers.

Any idea how to fix this?

Thanks in advance

- Oliver

From spriolo at walkerinfo.com  Tue Jan 27 05:59:42 2009
From: spriolo at walkerinfo.com (Priolo, Scott)
Date: Tue, 27 Jan 2009 08:59:42 -0500
Subject: [antlr-interest] Parsing with a character that represents null
In-Reply-To: <497DF1FC.6080705@temporal-wave.com>
References: <A94D52854588164583AA892FECB259950745ECC7@wimail.wi>
	<497DF1FC.6080705@temporal-wave.com>
Message-ID: <A94D52854588164583AA892FECB259950745ECC9@wimail.wi>

I've tinkered with the idea Jim states below, but I'm afraid I don't
fully understand.  Don't do this at the lexer level, do it at the
parser.  (I think there is a learning curve I'm missing here).

 

Can you clarify?

 

Thanks,

Scott

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, January 26, 2009 12:25 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Parsing with a character that represents
null

 

Priolo, Scott wrote: 

Hello,

 

I'm writing a grammar based on Apache Tomcat's Access Log format.  I'm
able to parse these lines into host, timestamp, command, protocol,
response, bytes, etc...

 

A problem occurs when the log file uses a '-' for "no data".  I'd like
to capture this as a "null" field when I walk the tree so it's important
not to treat '-' as white space.  The issue I'm having is '-' can match
any of the patterns such as host, username, timestamp, bytes, etc....
When I try to use

 

field : HOST L_USER A_USER TIMESTAMP '"' COMMAND PATH PROTOCOL '"'
RESPONSE_CODE BYTES;

 

L_USER : '-' | ('a'..'z'|'A'..'Z')+;

BYTES : '-' | ('0'..'9')+;

 

The parser can't distinguish if the '-' is L_USER or BYTES (see below
that the second test line has a '-' for the last number because there
was no data.

 

Actual data line

66.249.71.45 - - [25/Jan/2009:00:00:56 -0500] "GET
/abc/slides/180001.1.jsp HTTP/1.1" 200 11785

67.68.5.63 - - [10/Nov/2008:16:26:12 -0500] "HEAD /abc/res/prev1.gif
HTTP/1.0" 200 -

 

How do I manage these '-' without changing the logging pattern?

 

Thanks!

Don't do this at the lexer level, do it at the parser:

field: HOST l_user ....

l_user : L_USER | DEFAULT;

L_USER ('a'..'z'|'A'..'Z')+;
DEFAULT: '-';

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/0a05ad7d/attachment.html 

From oliver.zeigermann at gmail.com  Tue Jan 27 07:40:25 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 27 Jan 2009 16:40:25 +0100
Subject: [antlr-interest] Source level include: Line numbers messed up
In-Reply-To: <9da4f4520901270458g4925f58bwf3280a6ee25be763@mail.gmail.com>
References: <9da4f4520901270458g4925f58bwf3280a6ee25be763@mail.gmail.com>
Message-ID: <9da4f4520901270740w23f7e644j9061d7c2a01c200@mail.gmail.com>

This is one of my bad days. In case anyone else wonders how to do that:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

- Oliver

2009/1/27 Oliver Zeigermann <oliver.zeigermann at gmail.com>:
> Folks!
>
> I am doing includes on the source level, but this messes up my line numbers.
>
> Any idea how to fix this?
>
> Thanks in advance
>
> - Oliver
>

From jimi at temporal-wave.com  Tue Jan 27 09:15:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Jan 2009 09:15:32 -0800
Subject: [antlr-interest] stop the lexer error when invoking the lexer
 without calling the parser
In-Reply-To: <149737.36266.qm@web112219.mail.gq1.yahoo.com>
References: <149737.36266.qm@web112219.mail.gq1.yahoo.com>
Message-ID: <497F4134.5070608@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/87c084be/attachment.html 

From jbb at acm.org  Tue Jan 27 14:12:20 2009
From: jbb at acm.org (John B. Brodie)
Date: Tue, 27 Jan 2009 17:12:20 -0500
Subject: [antlr-interest] The behavior.....
In-Reply-To: <629223.32616.qm@web112223.mail.gq1.yahoo.com>
References: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
	<661070C4-84A1-48AC-8EC3-8D6236CD7E68@me.com>
	<629223.32616.qm@web112223.mail.gq1.yahoo.com>
Message-ID: <200901271712.20311.jbb@acm.org>

Meena Vinod asked:
> I have a new problem now. My application's .g is as follows:
>
> ? ? CMD_CD : 'cd';
> ? ? CMD_SHOW: 'show';
> ? ? CMD_RESET: 'reset';
> ? ? CMD_SET: 'set';
> ? ? CMD_OPTION: (' -all' | ' -help' | ' -version' | ' -display')*;
> ? ? TSEP: ' ' { SKIP(); };
>
> The parser is defined as:
> cmd_validate: (cmd)(CMD_OPTION) EOF;
>
> cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;
>
> A valid input to my application is "cd -help -version -display". I can
> achieve this with the " " (space) prefixed for each of the CMD_OPTION
> value. However, if I enter "cd-help", then my application hangs on
> ANTLRWorks and even my C code hangs.
>
> I would want to ensure that there is a space between the "cmd" and the
> "cmd_option" (if there is a cmd_option value).
>
> So, my application takes values as follows:
> 1. cd -help -version -display
> 2. cd -version
> 3. cd
> 4. show -help -version -display....... et al
>
> What should I do so that it throws an exception when I enter "cd-help" or
> "show-version"?

Your CMD_OPTION lexer rule accepts the empty string as a valid possible input.

This is generally a very bad thing and is the cause of your problem here.

When given the input sentence "cd-help" your lexer will happily consume the 
first and second characters as a CMD_CD token.

Next it will encounter the hyphen ('-') character. But your lexer rules have 
all specified that a blank (' ') must appear before any valid hyphen. So you 
lexer realizes that this particular hyphen is an recognizable character. But 
first, as you have specified, a CMD_OPTION token is valid as the empty string, 
so your lexer recognizes the empty string after the 'cd' and before the '-' as 
a CMD_OPTION token and emits it into the token stream.

Now your lexer is still looking at the hyphen ('-') character that follows the 
'cd' CMD_CD token and it realizes that this particular hyphen is an 
recognizable character. But first, as you have specified, a CMD_OPTION token 
is valid as the empty string, so your lexer recognizes the empty string after 
the 'cd' and before the '-' as a CMD_OPTION token and emits it into the token 
stream.

Now your lexer is still looking at the hyphen ('-') character that follows the 
'cd' CMD_CD token and it realizes that this particular hyphen is an 
recognizable character. But first, as you have specified, a CMD_OPTION token 
is valid as the empty string, so your lexer recognizes the empty string after 
the 'cd' and before the '-' as a CMD_OPTION token and emits it into the token 
stream.

Now your lexer is still looking at the hyphen ('-') character that follows the 
'cd' CMD_CD token and it realizes that this particular hyphen is an 
recognizable character. But first, as you have specified, a CMD_OPTION token 
is valid as the empty string, so your lexer recognizes the empty string after 
the 'cd' and before the '-' as a CMD_OPTION token and emits it into the token 
stream.

and as you can tell from the above discussion, your lexer is stuck in an 
infinite (e.g. hung) emitting empty CMD_OPTION tokens trying to handle all 
valid lexer rules before throwing an unrecognizable character error. 
(Actually, in my test rig it runs out of memory fairly quickly and dies)

As a temporary fix: remove the * operator from the CMD_OPTION lexer rule and 
put it on the CMD_OPTION phrase in the parser cmd_validate rule. Thus:

CMD_OPTION: ' -all' | ' -help' | ' -version' | ' -display';
cmd_validate: cmd CMD_OPTION* EOF;

I think this change solves this specific problem (at least is does in my test 
rig). But I believe you have a deeper issue(s) here because your TSEP lexer 
rule says that blanks should be ignored and yet you insist on having blanks 
between elements of your command; so blanks are significant. Which way is it 
supposed to be? I think by trying to skip blanks sometimes and require blanks 
other times by adding a blank to the text of each of the options is, in the 
long run, a big mistake. Just my 2 cents.

Hope this helps...
---
   -jbb


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/7d9c7283/attachment.html 

From sven.prevrhal at ucsf.edu  Tue Jan 27 17:11:29 2009
From: sven.prevrhal at ucsf.edu (Sven Prevrhal)
Date: Tue, 27 Jan 2009 17:11:29 -0800
Subject: [antlr-interest] natural-language parsing problem: How to
 distinguish between special words and regular words
Message-ID: <016e01c980e5$599171e0$0cb455a0$@prevrhal@ucsf.edu>

I want to parse recipes. How can I distinguish (for instance) between a
measuring unit such as "cups" and other general words?

 

If I do 

 

WORD:

                LETTER+;

UNIT:

                "cups";

 

the lexer will emit WORD for "cups" as well at least that's what I see
happening. I tried

 

WORD:

        u=UNIT { 
          $u.setType(UNIT);

          emit($u);

                } | LETTER+;

 

but that causes an error saying that UNIT can never be matched.

 

If I place the burden on the parser say as

 

unit:

                w=WORD 

{

                if ($w == "cups") return $w; 

}

;

 

and the WORD token is actually not a unit I have lost the token to the
parser. Should I / How can I place that nonmatch token back into the token
stream? Or what's the solution to that??

 

Thanks a lot - Sven

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090127/4ab61f54/attachment.html 

From bottiger1 at gmail.com  Wed Jan 28 00:21:36 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 28 Jan 2009 00:21:36 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
Message-ID: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>

Hello ANTLR community,

I have been testing out the error reporting capabilities of the C runtime
and have run into some difficulties trying to get a Line Number.


Using the calculator example from the 5 minute intro to ANTLR, I have tried
to use the default error handler.
However, upon trying to detect an EOF token, it segfaults, so I have
attempted to override the default error handlers at

pParser->rec->reportError
pParser->rec->recover

pLexer->rec->reportError
pLexer->rec->recover


Entering an incomplete expression such as "1+2+" results in an error of
ANTLR3_EARLY_EXIT_EXCEPTION.

Unfortunately, in antlr3baserecognizer.c, all it does is:
ANTLR3_FPRINTF(stderr, " : missing elements...\n");

All my attempts to get a string offset from anywhere have failed.

Here are a list of my attempts and why it fails.

========================================
recognizer->state->exception->charPositionInLine
--- returns -1

theToken    = (pANTLR3_COMMON_TOKEN)(recognizer->state->exception->token);
ttext        = theToken->toString(theToken);
--- returns a gibberish string

theToken->getCharPositionInLine(theToken);
--- also returns -1

recognizer->state->tokenNames[exception->expecting]
--- exception->expecting is always 0, and the string returned is always
"<invalid>"


recognizer->state->tokenStartLine
--- always returns 0

recognizer->state->tokenStartCharPositionInLine
--- always returns 0

recognizer->state->tokenStartCharIndex
--- always returns 0


(pANTLR3_COMMON_TOKEN)exception->token->....
--- same problems as tokens above

recognizer->state->token->....
--- same problem as tokens above

(pANTLR3_COMMON_TOKEN)recognizer->getCurrentInputSymbol(recognizer,
parser->tstream->istream)
--- same problems as the tokens above



As you can see I've exhausted almost every combination I can think of, and I
am just wondering if none of the offset indexes are implemented.

Please send any information on how to get a string offset for either an
expected token location or the last scanned token.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/dd161eb5/attachment.html 

From bottiger1 at gmail.com  Wed Jan 28 00:32:35 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 28 Jan 2009 00:32:35 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
References: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
Message-ID: <3490668a0901280032s15b51994j19820206d02f8965@mail.gmail.com>

I made a typo, *Line Number" is supposed to read "Line offset"

On Wed, Jan 28, 2009 at 12:21 AM, Bot Tiger <bottiger1 at gmail.com> wrote:

> Hello ANTLR community,
>
> I have been testing out the error reporting capabilities of the C runtime
> and have run into some difficulties trying to get a Line Number.
>
>
> Using the calculator example from the 5 minute intro to ANTLR, I have tried
> to use the default error handler.
> However, upon trying to detect an EOF token, it segfaults, so I have
> attempted to override the default error handlers at
>
> pParser->rec->reportError
> pParser->rec->recover
>
> pLexer->rec->reportError
> pLexer->rec->recover
>
>
> Entering an incomplete expression such as "1+2+" results in an error of
> ANTLR3_EARLY_EXIT_EXCEPTION.
>
> Unfortunately, in antlr3baserecognizer.c, all it does is:
> ANTLR3_FPRINTF(stderr, " : missing elements...\n");
>
> All my attempts to get a string offset from anywhere have failed.
>
> Here are a list of my attempts and why it fails.
>
> ========================================
> recognizer->state->exception->charPositionInLine
> --- returns -1
>
> theToken    = (pANTLR3_COMMON_TOKEN)(recognizer->state->exception->token);
> ttext        = theToken->toString(theToken);
> --- returns a gibberish string
>
> theToken->getCharPositionInLine(theToken);
> --- also returns -1
>
> recognizer->state->tokenNames[exception->expecting]
> --- exception->expecting is always 0, and the string returned is always
> "<invalid>"
>
>
> recognizer->state->tokenStartLine
> --- always returns 0
>
> recognizer->state->tokenStartCharPositionInLine
> --- always returns 0
>
> recognizer->state->tokenStartCharIndex
> --- always returns 0
>
>
> (pANTLR3_COMMON_TOKEN)exception->token->....
> --- same problems as tokens above
>
> recognizer->state->token->....
> --- same problem as tokens above
>
> (pANTLR3_COMMON_TOKEN)recognizer->getCurrentInputSymbol(recognizer,
> parser->tstream->istream)
> --- same problems as the tokens above
>
>
>
> As you can see I've exhausted almost every combination I can think of, and
> I am just wondering if none of the offset indexes are implemented.
>
> Please send any information on how to get a string offset for either an
> expected token location or the last scanned token.
>
> Thank you.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/ce27df31/attachment.html 

From jimi at temporal-wave.com  Wed Jan 28 07:50:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Jan 2009 07:50:32 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
References: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
Message-ID: <49807EC8.7040703@temporal-wave.com>

Bot Tiger wrote:
> Hello ANTLR community,
>
> I have been testing out the error reporting capabilities of the C 
> runtime and have run into some difficulties trying to get a Line Number.
>
>
> Using the calculator example from the 5 minute intro to ANTLR, I have 
> tried to use the default error handler.
> However, upon trying to detect an EOF token, it segfaults, so I have 
> attempted to override the default error handlers at

I think that this was just an error trying to make a string out of it, 
which is fixed in the latest snapshot I think. If it isn't, then I shall 
have to look in to this some more.
>
> pParser->rec->reportError
> pParser->rec->recover
>
> pLexer->rec->reportError
> pLexer->rec->recover
>
>
> Entering an incomplete expression such as "1+2+" results in an error 
> of ANTLR3_EARLY_EXIT_EXCEPTION.
>
> Unfortunately, in antlr3baserecognizer.c, all it does is:
> ANTLR3_FPRINTF(stderr, " : missing elements...\n");
>
> All my attempts to get a string offset from anywhere have failed.
Just look at what the other exceptions do. It probably prints this 
string because it thinks the location information is already printed. As 
it says in the comments this routine is meant to be a guideline, as I 
cannot know what you need an error message routine to do in advance.
>
> Here are a list of my attempts and why it fails.
>
> ========================================
> recognizer->state->exception->charPositionInLine      
> --- returns -1
This indicates EOF or some other token that is not actually in the input 
stream and is thefore telling you not to make a string out of the token 
directly.
>
> theToken    = (pANTLR3_COMMON_TOKEN)(recognizer->state->exception->token);
> ttext        = theToken->toString(theToken);
> --- returns a gibberish string
It isn't returning a string, it returns a pANTLR3_STRING, from which you 
can get a null terminated string to printf with. HOwever, I think that 
the toString() onan EOF token was the abort that I just fixed this weekend.
>
> theToken->getCharPositionInLine(theToken);
> --- also returns -1
See above.
>
> recognizer->state->tokenNames[exception->expecting]
> --- exception->expecting is always 0, and the string returned is 
> always "<invalid>"
This means that it could not determine  what should have come next, or 
that the expecting field is actaully an expecting set and not a single 
token. The set is contained in the exception.
>
>
> recognizer->state->tokenStartLine
> --- always returns 0
>
> recognizer->state->tokenStartCharPositionInLine
> --- always returns 0
>
> recognizer->state->tokenStartCharIndex
> --- always returns 0
>
It isn't a real token, then it has no position in the token stream.
>
> (pANTLR3_COMMON_TOKEN)exception->token->....
> --- same problems as tokens above
>
See above.
> recognizer->state->token->....
> --- same problem as tokens above
see above.
>
> (pANTLR3_COMMON_TOKEN)recognizer->getCurrentInputSymbol(recognizer, 
> parser->tstream->istream)
> --- same problems as the tokens above
See above.
>
>
>
> As you can see I've exhausted almost every combination I can think of, 
> and I am just wondering if none of the offset indexes are implemented.
It is all there, copy the code for other exceptions basically. Also try 
the latests snapshots and see if the EOF error has gone away or not. If 
not then I will add a bug.

Jim

From bruno.marc-aurele at polymtl.ca  Wed Jan 28 08:21:35 2009
From: bruno.marc-aurele at polymtl.ca (Bruno Marc-Aurele)
Date: Wed, 28 Jan 2009 11:21:35 -0500
Subject: [antlr-interest] Lexer recognition exceptions
Message-ID: <1233159695.4980860fa1a5a@www.imp.polymtl.ca>

Hi,

I am currently doing a project where the description of our software
architecture is very important. Therefore, I have to understand the code that's
generated by ANTLR properly (academic stuff... Need to provide documents and
follow them...)

I have seen that the generated parser catches the RecognitionExpections during
parsing. How about the lexer? There is no catch block, so I understand that the
exceptions are to be catched by us when we instantiate the lexer object. Am I
right or is there some tricky mechanics involved in the base classes that I am
not aware of?

Thanks a lot for your support,
Bruno M-A.
--
Bruno Marc-Aur?le
courriel Poly: bruno.marc-aurele at polymtl.ca
courriel perso: bruno.m-a at hotmail.com





From jimi at temporal-wave.com  Wed Jan 28 08:51:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Jan 2009 08:51:18 -0800
Subject: [antlr-interest] Lexer recognition exceptions
In-Reply-To: <1233159695.4980860fa1a5a@www.imp.polymtl.ca>
References: <1233159695.4980860fa1a5a@www.imp.polymtl.ca>
Message-ID: <49808D06.1020202@temporal-wave.com>

Bruno Marc-Aurele wrote:
> Hi,
>
> I am currently doing a project where the description of our software
> architecture is very important. Therefore, I have to understand the code that's
> generated by ANTLR properly (academic stuff... Need to provide documents and
> follow them...)
>
> I have seen that the generated parser catches the RecognitionExpections during
> parsing. How about the lexer? There is no catch block, so I understand that the
> exceptions are to be catched by us when we instantiate the lexer object. Am I
> right or is there some tricky mechanics involved in the base classes that I am
> not aware of?
>   
There is very little that a lexer can do when it encounters something 
that it does not like. In fact all it can really do is print a message 
and consume the character it is looking at. Look at the nextToken() 
method in Lexer.java and the mTokens() code. So, you can override the 
error reporting if you like.

However really, you are supposed to code your lexer to handle errors. At 
the simplest case, you create a catch all rule to pick out characters 
that you have not otherwise created a match for:

BAD : . { your error handler } ;

However, you also need to cater for things that can happen once the 
prediction has indicated a particular rule and something goes wrong 
while executing the match. For instance, unterminated literal strings 
and so on. Code as much of this as is useful/practical, then override 
the error reporting mechanism to give you some error that will make 
sense to your users that is more than "Unrecognized character". It could 
also do custom recovery I suppose too.

Also see:

http://antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs 


For an example of coding for errors.

Jim

From spamhole at gmx.at  Wed Jan 28 11:05:02 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Wed, 28 Jan 2009 20:05:02 +0100
Subject: [antlr-interest] natural-language parsing problem: How to
 distinguish between special words and regular words
In-Reply-To: <016e01c980e5$599171e0$0cb455a0$@prevrhal@ucsf.edu>
References: <016e01c980e5$599171e0$0cb455a0$@prevrhal@ucsf.edu>
Message-ID: <4980AC5E.9090609@gmx.at>

Sven Prevrhal wrote:
>
> If I do
>
> WORD:
>
> LETTER+;
>
> UNIT:
>
> ?cups?;
>
> the lexer will emit WORD for ?cups? as well at least that?s what I see 
> happening.
>

The reason why you always get a WORD token is that the lexer returns the 
token that was defined first when more than one token match the same 
amount of characters. You might want to try to swap the order these 
rules are defined in.

> If I place the burden on the parser say as
>
> unit:
>
> w=WORD
>
> {
>
> if ($w == ?cups?) return $w;
>
> }
>
> ;
>
> and the WORD token is actually not a unit I have lost the token to the 
> parser. Should I / How can I place that nonmatch token back into the 
> token stream? Or what?s the solution to that??
>
I don't know much about your grammar, but if you want to do this then 
gated semantic predicates might help:

unit: {IsUnit(input.LA(1).Text)}?=> WORD;

This uses the IsUnit method to decide if the next token is a unit 
without taking the token off the token stream. If IsUnit returns false 
the unit rule will be invisible to the parser and it will try to find 
another rule that matches.

Markus


From jimi at temporal-wave.com  Wed Jan 28 14:44:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Jan 2009 14:44:37 -0800
Subject: [antlr-interest] Optimizations of tree rewriting in C target
Message-ID: <4980DFD5.30603@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/37b480d0/attachment.html 

From bottiger1 at gmail.com  Wed Jan 28 15:04:21 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 28 Jan 2009 15:04:21 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
References: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
Message-ID: <3490668a0901281504o7cf22863sd2da2ef82deabc56@mail.gmail.com>

Hi Jim, thank you for the response.

I have upgraded to the libantlr3c-3.1.2.b1.tar.gz library on the Hudson
version control website.

I thought it would be an EOF token problem too, but the same error occurs
when I do any of these:

1++2
1++2+3
1+2++3+4

It seems to me that it should not be expecting an EOF token or even be at
the EOF token at this case.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/a13ceaaf/attachment.html 

From jimi at temporal-wave.com  Wed Jan 28 16:06:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Jan 2009 16:06:31 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901281504o7cf22863sd2da2ef82deabc56@mail.gmail.com>
References: <3490668a0901280021h593bb316w3569a6f3d83a06c1@mail.gmail.com>
	<3490668a0901281504o7cf22863sd2da2ef82deabc56@mail.gmail.com>
Message-ID: <4980F307.101@temporal-wave.com>

Bot Tiger wrote:
> Hi Jim, thank you for the response.
>
> I have upgraded to the libantlr3c-3.1.2.b1.tar.gz library on the 
> Hudson version control website.
>
> I thought it would be an EOF token problem too, but the same error 
> occurs when I do any of these:
>
> 1++2
> 1++2+3
> 1+2++3+4
>
> It seems to me that it should not be expecting an EOF token or even be 
> at the EOF token at this case.
Are you saying that this aborts when trying to print an error message if 
you do not try to override the reporting function with your own, or that 
it aborts with your own reporting function?

Jim

From bottiger1 at gmail.com  Wed Jan 28 16:24:46 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 28 Jan 2009 16:24:46 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
Message-ID: <3490668a0901281624o2af60e76g616c358307d571c@mail.gmail.com>

Dear Jim and ANTLR community,

>Are you saying that this aborts when trying to print an error message if
>you do not try to override the reporting function with your own, or that >
>it aborts with your own reporting function?


It does not abort in either my handler or the default one. It reports
a token at offset -1 which does not make sense if it is EOF.


Here is an example using the default handlers.


>> 1++2
-memory-(1)  : error 5 : Unexpected token, at offset -1
    near [Index: 0 (Start: 1369936-Stop: 1369936) ='1', type<15> Line:
1 LinePos:-1]
     : missing elements...
-memory-(1)  : error 5 : Unexpected token, at offset -1
    near [Index: 0 (Start: 1369936-Stop: 1369936) ='1', type<15> Line:
1 LinePos:-1]
     : missing elements...

As you can see here, the default error reporter here says that there
is an unexpected token at offset -1. You said that this means it is
expecting an EOF token.
I thought it would be expecting a number token.

I expected the error report to say something like:

Unexpected token at offset 2. Expected NUMBER token.

Thank you again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/83ba1082/attachment.html 

From bottiger1 at gmail.com  Wed Jan 28 17:01:10 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Wed, 28 Jan 2009 17:01:10 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901281624o2af60e76g616c358307d571c@mail.gmail.com>
References: <3490668a0901281624o2af60e76g616c358307d571c@mail.gmail.com>
Message-ID: <3490668a0901281701h72e197bfx8123a337152585e0@mail.gmail.com>

Well I think I may have found the source of the problem. I had
backtrack=true enabled, and that may have caused any error reporting
capabilities to disappear.

On Wed, Jan 28, 2009 at 4:24 PM, Bot Tiger <bottiger1 at gmail.com> wrote:

> Dear Jim and ANTLR community,
>
> >Are you saying that this aborts when trying to print an error message if
> >you do not try to override the reporting function with your own, or that >
> >it aborts with your own reporting function?
>
>
> It does not abort in either my handler or the default one. It reports a token at offset -1 which does not make sense if it is EOF.
>
>
> Here is an example using the default handlers.
>
>
> >> 1++2
>
> -memory-(1)  : error 5 : Unexpected token, at offset -1
>     near [Index: 0 (Start: 1369936-Stop: 1369936) ='1', type<15> Line: 1 LinePos:-1]
>      : missing elements...
> -memory-(1)  : error 5 : Unexpected token, at offset -1
>
>     near [Index: 0 (Start: 1369936-Stop: 1369936) ='1', type<15> Line: 1 LinePos:-1]
>      : missing elements...
>
> As you can see here, the default error reporter here says that there is an unexpected token at offset -1. You said that this means it is expecting an EOF token.
>
> I thought it would be expecting a number token.
>
> I expected the error report to say something like:
>
> Unexpected token at offset 2. Expected NUMBER token.
>
> Thank you again.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/b5fb1196/attachment.html 

From michael.bedward at gmail.com  Wed Jan 28 18:27:13 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 29 Jan 2009 13:27:13 +1100
Subject: [antlr-interest] expression list in tree grammar
Message-ID: <e24c4c270901281827q2effad87u3e8bc9d8d5b1ce19@mail.gmail.com>

Hello all,

I think I should probably apologize in advance for this question
because (a) it's probably really obvious and (b) I know it's been
asked before but as a newbie I've had trouble understanding the
previous posts or finding the solution in the book.

In my parser grammar:

expr_list       : (expr (',' expr)* )? -> ^(EXPR_LIST expr*) ;

In my tree grammar:

expr_list returns [List<Double> values] : ^(EXPR_LIST expr*)
                  { $values = new ArrayList<Double>();
                    int n = $EXPR_LIST.getChildCount();
                    for (int i = 0; i < n; i++) {
                        $values.add($expr.value);
                    }
                  }
                ;

Yuck !!  I can see I'm doing ANTLR's work here insstead of letting it
work for me - but I haven't been able to see how to collect the values
of 0 or more expressions. I understand that I can't use list label
syntax here because I don't have output=AST for the tree grammar.  I
can see by looking at the generated walker code that there is a loop
iterating through the expr values, after which my ugly code does the
same thing !

I'd be pathetically grateful if someone could point me in the right
direction here :-)

Michael

From jimi at temporal-wave.com  Wed Jan 28 18:29:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Jan 2009 18:29:13 -0800
Subject: [antlr-interest] C Runtime Error Handling Problems
In-Reply-To: <3490668a0901281701h72e197bfx8123a337152585e0@mail.gmail.com>
References: <3490668a0901281624o2af60e76g616c358307d571c@mail.gmail.com>
	<3490668a0901281701h72e197bfx8123a337152585e0@mail.gmail.com>
Message-ID: <49811479.4070601@temporal-wave.com>

Bot Tiger wrote:
> Well I think I may have found the source of the problem. I had 
> backtrack=true enabled, and that may have caused any error reporting 
> capabilities to disappear.
Yes. It will hit the 1 then try everything it can, give up and report 
the error at '1', but I think that the issue is that the first token 
gets a stat position of -1, which is something on my list.

Don't use backtrack if you want any meaningful errors.

Jim


From jbb at acm.org  Wed Jan 28 20:12:16 2009
From: jbb at acm.org (John B. Brodie)
Date: Wed, 28 Jan 2009 23:12:16 -0500
Subject: [antlr-interest] expression list in tree grammar
In-Reply-To: <e24c4c270901281827q2effad87u3e8bc9d8d5b1ce19@mail.gmail.com>
References: <e24c4c270901281827q2effad87u3e8bc9d8d5b1ce19@mail.gmail.com>
Message-ID: <200901282312.17179.jbb@acm.org>

Micheal Bedward asked:
> In my parser grammar:
>
> expr_list ? ? ? : (expr (',' expr)* )? -> ^(EXPR_LIST expr*) ;
>
> In my tree grammar:
>
> expr_list returns [List<Double> values] : ^(EXPR_LIST expr*)
> ? ? ? ? ? ? ? ? ? { $values = new ArrayList<Double>();
> ? ? ? ? ? ? ? ? ? ? int n = $EXPR_LIST.getChildCount();
> ? ? ? ? ? ? ? ? ? ? for (int i = 0; i < n; i++) {
> ? ? ? ? ? ? ? ? ? ? ? ? $values.add($expr.value);
> ? ? ? ? ? ? ? ? ? ? }
> ? ? ? ? ? ? ? ? ? }
> ? ? ? ? ? ? ? ? ;
>
> Yuck !! ?I can see I'm doing ANTLR's work here insstead of letting it
> work for me - but I haven't been able to see how to collect the values
> of 0 or more expressions. I understand that I can't use list label
> syntax here because I don't have output=AST for the tree grammar. ?I
> can see by looking at the generated walker code that there is a loop
> iterating through the expr values, after which my ugly code does the
> same thing !

have you tried placing your action inside antlr's loop?

something like (untested):

expr_list returns [ List<Double> values ] : 
? ? { $values = new ArrayList<Double>(); }
    ^(EXPR_LIST ( e=expr {$values.add($e.value);} )*)
;

hope this helps
---
   -jbb

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090128/f6e115c1/attachment.html 

From g.r.vansickle at att.net  Wed Jan 28 20:49:44 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Wed, 28 Jan 2009 22:49:44 -0600
Subject: [antlr-interest] Optimizations of tree rewriting in C target
In-Reply-To: <4980DFD5.30603@temporal-wave.com>
References: <4980DFD5.30603@temporal-wave.com>
Message-ID: <CAD7E2219520481897DABFA0CC2D16EF@DFW5RB41>

> I would appreciate it if those of you that use the C target 
> would download the latest Antlr Tool (codegen templates have 
> changed so you need the latest build) and runtime 
> distribution and give this a try. Testing your own code and 
> calling it good is never a good idea ;-) PLease make sure 
> that the build you download includes these changes, which it 
> should be build #20 for the C runtime and build #49 for the 
> ANTLR Tool.
> 
> Jim
> - - - - - 
> 

Can't speak to the speed, but the Pop() thing is solved here.  Thanks Jim!

-- 
Gary R. Van Sickle


From avidtrober at gmail.com  Thu Jan 29 00:15:53 2009
From: avidtrober at gmail.com (Avid Trober)
Date: Thu, 29 Jan 2009 02:15:53 -0600
Subject: [antlr-interest] Allowing random order via grammar-only notation ...
Message-ID: <77F8630BFD49435FB8095831D560346E@homelaptop>

Can grammar syntax alone accomplish this?  Or, am I going to have to rely on some additional code of my own such as actions? gated predicates? other?

1. A command, COMMAND, can be followed by three modifiers, M1, M2 and M3.

2. Each modifier has its own cardinality:
    M1?   
    M2*
    M3+

3. Consecutive placement of M2 or M3 (when more than one of either is specified), can be one of two (mutually exclusive is acceptable) situations:

    Case A: Modifiers can be in *any* order, e.g.

COMMAND M2 M3 M2 M3 M3 M2 M2 M1 M2 

    Case B: If more than one M2 or M3, they must be placed consecutively, e.g.

COMMAND M2 M2 M2 M2 M3 M3 M3 M1 M2 M2 



The implicit ordering of typical grammar notation is invalidating my above requirements:

command : 'COMMAND'  M1?  M2*  M3+   // implies M1 must come before M2 or M3, M2 before M3


Modifiers are not simple tokens, they're subrules.  I realize some synpreds are needed to clear up non-determinism there.  But, I want to make sure I can't do this via a grammar notation before resorting to more complexity.

Thanks in advance.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/f4af0fa2/attachment.html 

From spprtmail09 at yahoo.com  Thu Jan 29 00:21:24 2009
From: spprtmail09 at yahoo.com (Meena Vinod)
Date: Thu, 29 Jan 2009 00:21:24 -0800 (PST)
Subject: [antlr-interest] The behavior.....
References: <340543.70512.qm@web112213.mail.gq1.yahoo.com>
	<661070C4-84A1-48AC-8EC3-8D6236CD7E68@me.com>
Message-ID: <389538.69334.qm@web112223.mail.gq1.yahoo.com>

Hi Dave,
I am back with my problem:
heres my Test.g

----------------------------------------------------------------------------------------------------------------
grammar Test;

options
{
   output = AST;
   ASTLabelType    = CommonTree;
}

tokens
{
    T_COMMAND;
    T_ACTION;
    T_OPT;

}

validate_cmd:         command  EOF -> ^(T_COMMAND command);

command:        action1 | action2;

action1:         action1_name (action1_opt)* ;

action2:        action2_name (action2_opt)* ;

action1_name:        ACTION1 -> ^(T_ACTION ACTION1) ;

action2_name:        ACTION2 -> ^(T_ACTION ACTION2) ;

action1_opt:        tsep action1_tree -> ^(T_OPT action1_tree);

action1_tree:        (common_options | wait_option)+;
             
action2_opt:        tsep action2_tree -> ^(T_OPT action2_tree);

action2_tree:        (common_options)+;

common_options:        version_option | help_option ;
            
wait_option:        WAIT;
    
version_option:        VERSION_OPTION;

help_option:        HELP_OPTION;
    
ACTION1    :        'copy';

ACTION2    :        'cut';

VERSION_OPTION:     '-v'('ersion')?;

HELP_OPTION:         '-h'('elp')?;

WAIT    :        '-w'('ait')?;

SEMI:             ';' ;

DIGIT    :        ('0'..'9')*;

tsep    :        WSP;

WSP    :        ('\u0009' | ' ')+;        

-----------------------------------------------------------------------------------------------------------------------
An input of type "copy -v -h" will work fine.

An input like "junk" comes back with the indeterminate state. There is no exception thrown. Infact, the EOF around for every command. 

Am I missing something here?

Thanks in advance,
Ambica




________________________________
From: David Peckham <dave.peckham at me.com>
To: Meena Vinod <spprtmail09 at yahoo.com>
Cc: antlr-interest at antlr.org
Sent: Tuesday, January 27, 2009 11:04:44 AM
Subject: Re: [antlr-interest] The behavior.....


Try:


cmd_validate
:cmd CMD_OPTION EOF
;

ANTLR will report errors if you have extra input.

Dave


On Jan 26, 2009, at 8:03 PM, Meena Vinod wrote:

Hello,
This pet project of mine requires that I can validate a command. The command is of the form <command_name><command options>

My lexer consists of all the command names and options:

Ex: 
    
    CMD_CD : 'cd';
    CMD_SHOW: 'show';
    CMD_RESET: 'reset';
    CMD_SET: 'set';
    CMD_OPTION: '-all' | '-help';
    TSEP: ' ' { SKIP(); };

The parser is defined as:
cmd_validate: (cmd)(CMD_OPTION);

cmd: CMD_CD | CMD_SHOW | CMD_RESET | CMD_SET;

For all valid inputs, the cmd_validate behaves properly.

On the ANTLRWorks, when I give a junk input say 'zee zee', the ANTLRWorks does not generate any proper output and does not evn throw an exception.
Also, the C code generated hangs when given this input.

Can someone help me out on this?

Many thanks,
Swift. 



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/5af813b4/attachment.html 

From spprtmail09 at yahoo.com  Thu Jan 29 01:32:13 2009
From: spprtmail09 at yahoo.com (Meena Vinod)
Date: Thu, 29 Jan 2009 01:32:13 -0800 (PST)
Subject: [antlr-interest] What's missing......?
Message-ID: <558276.17552.qm@web112204.mail.gq1.yahoo.com>

Hello,
Here is my test grammar file:

----------------------------------------------------------------------------------------------------------------
grammar Test;

options
{
   output = AST;
   ASTLabelType    = CommonTree;
}

tokens
{
    T_COMMAND;
    T_ACTION;
    T_OPT;
}

validate_cmd:         command  EOF -> ^(T_COMMAND command);

command:        action1 | action2;

action1:         action1_name (action1_opt)* ;

action2:        action2_name (action2_opt)* ;

action1_name:        ACTION1 -> ^(T_ACTION ACTION1) ;

action2_name:        ACTION2 -> ^(T_ACTION ACTION2) ;

action1_opt:        tsep action1_tree -> ^(T_OPT action1_tree);

action1_tree:        (common_options | wait_option)+;

action2_opt:        tsep action2_tree -> ^(T_OPT action2_tree);

action2_tree:        (common_options)+;

common_options:        version_option | help_option ;

wait_option:        WAIT;

version_option:        VERSION_OPTION;

help_option:        HELP_OPTION;

ACTION1    :        'copy';

ACTION2    :        'cut';

VERSION_OPTION:     '-v'('ersion')?;

HELP_OPTION:         '-h'('elp')?;

WAIT    :        '-w'('ait')?;

SEMI:             ';' ;

DIGIT    :        ('0'..'9')*;

tsep    :        WSP;

WSP    :        ('\u0009' | ' ')+;        

-----------------------------------------------------------------------------------------------------------------------
An input of type "copy -v -h" will work fine.

An input like "junk" comes back with an indeterminate state. The ANTLRWorks interpreter does not show an error.
There is no exception thrown. The debugger times out saying, "Time-out waiting to connect to the remote parser".

Infact, the EOF is around for every command. 

Am I missing something here?

Many thanks in advance,
Ambica


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/a858965f/attachment.html 

From antlr at mirality.co.nz  Thu Jan 29 01:54:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 29 Jan 2009 22:54:27 +1300
Subject: [antlr-interest] Allowing random order via grammar-only
 notation ...
In-Reply-To: <77F8630BFD49435FB8095831D560346E@homelaptop>
References: <77F8630BFD49435FB8095831D560346E@homelaptop>
Message-ID: <20090129095443.CD23A341840B@www.antlr.org>

At 21:15 29/01/2009, Avid Trober wrote:
>Can grammar syntax alone accomplish this?  Or, am I going to have 
>to rely on some additional code of my own such as actions? gated 
>predicates? other?
>
>1. A command, COMMAND, can be followed by three modifiers, M1, M2 
>and M3.
>
>2. Each modifier has its own cardinality:
>     M1?
>     M2*
>     M3+
[...]
>Modifiers are not simple tokens, they're subrules.  I realize 
>some synpreds are needed to clear up non-determinism there.  But, 
>I want to make sure I can't do this via a grammar notation before 
>resorting to more complexity.

I think the way to do that is to be more lenient in the grammar 
(accepting any of the three in any order and quantity), and then 
do some validation afterwards to detect illegal cases such as too 
many M1s or not enough M3s:

   command : 'COMMAND' (M1 | M2 | M3)* { /* some validation */ };

Besides, you can produce better error messages doing it this way, 
anyway ;)


From antlr at mirality.co.nz  Thu Jan 29 01:59:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 29 Jan 2009 22:59:27 +1300
Subject: [antlr-interest] What's missing......?
In-Reply-To: <558276.17552.qm@web112204.mail.gq1.yahoo.com>
References: <558276.17552.qm@web112204.mail.gq1.yahoo.com>
Message-ID: <20090129095940.3CAB5341840B@www.antlr.org>

At 22:32 29/01/2009, Meena Vinod wrote:
>Here is my test grammar file:
[...]
>An input like "junk" comes back with an indeterminate state. The 
>ANTLRWorks interpreter does not show an error.
>There is no exception thrown. The debugger times out saying, 
>"Time-out waiting to connect to the remote parser".
>
>Infact, the EOF is around for every command.
>
>Am I missing something here?

I think you're missing the errors that the lexer should be 
printing to the console :)

You haven't defined a lexer rule that can match an arbitrary 
sequence of characters (or just letters), so it won't be able to 
generate a token for them.

Remember, the lexer runs first (and by itself), and must 
completely convert the input text into a token sequence before the 
parser can figure out what it actually means.


From carter_cheng at yahoo.com  Thu Jan 29 04:34:30 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Thu, 29 Jan 2009 04:34:30 -0800 (PST)
Subject: [antlr-interest] Difficulties compiling tree grammar using Antlr
	3.1.1 using g++
Message-ID: <164021.94934.qm@web50105.mail.re2.yahoo.com>

Hi,

Last night I was experimenting with adding semantic analysis passes to my parsing front end and ran into a problem which seems like it may be some sort of bug. Compiling in C using g++ seems to create a bunch of errors w.r.t to void* -> ANTLR3_BASE_TREE* conversion in each and every rule when compiling with g++ and backtracking = true. 

If I use gcc as opposed to g++ the code compiles fine but I suspect this wont work for me in the long term since I plan to sprinkle in some c++ code. Is this a known issue and has it been resolved?

Thanks in advance,

Carter.




      

From funkyworklehead at gmail.com  Thu Jan 29 06:57:01 2009
From: funkyworklehead at gmail.com (funkyworklehead at gmail.com)
Date: Thu, 29 Jan 2009 06:57:01 -0800
Subject: [antlr-interest] Trouble with outdated? c language target?
Message-ID: <46498d480901290657w78ba3047v17de8ff2d52e5ec8@mail.gmail.com>

I'm getting an error when trying to build a generated lexer and parser
where the target language is C.  I'm trying to use this example
http://www.antlr.org/api/C/buildrec.html , but it seems that the
example is out of date.  I'm getting this error:
file_loader.c:49: error: 'struct ANTLR3_LEXER_struct' has no member
named 'tokSource'

I'm using libantlr3c-3.1b2.tar.gz and antlr-3.1.1.tar.gz.

Does someone have some working skeleton code for the C target language?

From Curt.Carpenter at microsoft.com  Thu Jan 29 08:14:46 2009
From: Curt.Carpenter at microsoft.com (Curt Carpenter)
Date: Thu, 29 Jan 2009 08:14:46 -0800
Subject: [antlr-interest] Newbie question about lex token matching priority
Message-ID: <80531546B1EAB64CBA160D97566FC7E52F170D4DD0@NA-EXMSG-C117.redmond.corp.microsoft.com>

Hi all, I am 1 day in on ANTLR, so be gentle. :)

I have gone through the tutorials and such, and have created a grammar from scratch, debugged it and have it mostly working, except for one problem. I want to parse something like this:
(#)name
Where # is a number, but name can be virtually anything except space. I think. I don't own the language, so please don't suggest that name should be further restricted. So I defined the lex rules as so:
PARENNUM       : '(' NUMBER ')';
NUMBER             : '-'? ('0'..'9')+;
NAME                   : ('!'..'\u00FE')+; // ansi only

You can see the problem at NAME. (0)curt is a valid name. But what I really want is to parse as PARENNUM=(0) NAME=curt. I have a parse rule to match that. But, the lex rules match longest string first, so (0)curt is always tokenized as NAME. Is there any way to change the priority of matching lex tokens to be the order they're defined, rather than order only breaking ties in string length?

Or is there some other way to accomplish the simple parse rule I'm trying to solve?

Thanks,

Curt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/4b7fd05d/attachment.html 

From Dennis.Benzinger at gmx.net  Thu Jan 29 08:36:20 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Thu, 29 Jan 2009 17:36:20 +0100
Subject: [antlr-interest] Empty grammarDecisionDescription field
Message-ID: <4981DB04.3020406@gmx.net>

Hi!

I'm using the Java target and I want to have rich error messages like
the ones in Chapter 10.2 Enriching Error Messages during Debugging in
The Definitive ANTLR reference. The problem is that every time I get an
NoViableAltException the grammarDecisionDescription field is empty.

Do I have to set an option when generating the parser to fill this field?

Or is this field only filled for some rules?

Or is this field not supported anymore in newer ANTLR versions?


Dennis Benzinger

From carter_cheng at yahoo.com  Thu Jan 29 08:37:02 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Thu, 29 Jan 2009 08:37:02 -0800 (PST)
Subject: [antlr-interest] Trouble with outdated? c language target?
In-Reply-To: <46498d480901290657w78ba3047v17de8ff2d52e5ec8@mail.gmail.com>
Message-ID: <652382.22434.qm@web50107.mail.re2.yahoo.com>

I did manage to get it to work but I had to make several modifications there are several other sources for examples which may be more up to date. I think there is an examples.zip which you can find on the www.antlr.org download page. For the line in question I had to make a modification per this comment (under macro changes):

http://www.antlr.org/api/C/changes31.html

Good luck!

Regards,

Carter.


      

From jimi at temporal-wave.com  Thu Jan 29 09:12:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 29 Jan 2009 09:12:51 -0800
Subject: [antlr-interest] Difficulties compiling tree grammar using
 Antlr 3.1.1 using g++
In-Reply-To: <164021.94934.qm@web50105.mail.re2.yahoo.com>
References: <164021.94934.qm@web50105.mail.re2.yahoo.com>
Message-ID: <4981E393.7050008@temporal-wave.com>

Carter Cheng wrote:
> Hi,
>
> Last night I was experimenting with adding semantic analysis passes to my parsing front end and ran into a problem which seems like it may be some sort of bug. Compiling in C using g++ seems to create a bunch of errors w.r.t to void* -> ANTLR3_BASE_TREE* conversion in each and every rule when compiling with g++ and backtracking = true. 
>
> If I use gcc as opposed to g++ the code compiles fine but I suspect this wont work for me in the long term since I plan to sprinkle in some c++ code. Is this a known issue and has it been resolved?
>
> Thanks in advance,
>   
Please check the existing bug list before posting bugs, as per my post 
of a few days ago :-). Also, you should debate heavily about using 
backtrack mode, at least globally, unless this is not a commercial parser.

See:
http://www.antlr.org/jira/browse/ANTLR-356

Which should be fixed this week/next week.

Jim



From jimi at temporal-wave.com  Thu Jan 29 09:14:57 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 29 Jan 2009 09:14:57 -0800
Subject: [antlr-interest] Empty grammarDecisionDescription field
In-Reply-To: <4981DB04.3020406@gmx.net>
References: <4981DB04.3020406@gmx.net>
Message-ID: <4981E411.8080900@temporal-wave.com>

Dennis Benzinger wrote:
> Hi!
>
> I'm using the Java target and I want to have rich error messages like
> the ones in Chapter 10.2 Enriching Error Messages during Debugging in
> The Definitive ANTLR reference. The problem is that every time I get an
> NoViableAltException the grammarDecisionDescription field is empty.
>   
That isn't really that useful to you as it really is only for debugging 
and so on. Of more importance is the rule stack trace, which you can use 
to get as specific as possible about what you are parsing.

Jim

From antlr at jazillian.com  Thu Jan 29 09:27:49 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 29 Jan 2009 12:27:49 -0500
Subject: [antlr-interest] natural-language parsing problem: How to
 distinguish between special words and regular words
In-Reply-To: <016e01c980e5$599171e0$0cb455a0$@prevrhal@ucsf.edu>
References: <016e01c980e5$599171e0$0cb455a0$@prevrhal@ucsf.edu>
Message-ID: <4981E715.5050806@jazillian.com>

Sven Prevrhal wrote:
> I want to parse recipes. How can I distinguish (for instance) between a 
> measuring unit such as ?cups? and other general words?

This is the classic "keywords as identifiers" issue.
See http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
or search for "keywords as identifiers" in the mailing list - it's
been discussed a lot.

From Curt.Carpenter at microsoft.com  Thu Jan 29 09:41:52 2009
From: Curt.Carpenter at microsoft.com (Curt Carpenter)
Date: Thu, 29 Jan 2009 09:41:52 -0800
Subject: [antlr-interest] Newbie question about lex token matching
	priority
In-Reply-To: <80531546B1EAB64CBA160D97566FC7E52F170D4DD0@NA-EXMSG-C117.redmond.corp.microsoft.com>
References: <80531546B1EAB64CBA160D97566FC7E52F170D4DD0@NA-EXMSG-C117.redmond.corp.microsoft.com>
Message-ID: <80531546B1EAB64CBA160D97566FC7E52F170D4ECE@NA-EXMSG-C117.redmond.corp.microsoft.com>

After having taken a minute to write the previous email, I got an idea, tried it, and it appears to work. But first, I forgot to mention another snag in my problem. I also want to sometimes match (#)name: where # and name are variable, but the (): are all literal. From the problem mentioned below, the : always gets added to name. My solution for all of these problems, and I'm looking for advice on whether this is reasonable, or whether there is a better alternative, is to simply add tokens for all the possible combinations, like so:
ID_NAME_COLON           : PLAYERNUM NAME ':';
ID_NAME                            : PLAYERNUM NAME;
NAME_COLON                  : NAME ':';
PLAYERNUM                      : '(' NUMBER ')';
NUMBER                             : '-'? ('0'..'9')+;
fragment NAME               : ('!'..'\u00FE')+;

Now, I get a single token for (0)curt or (0)curt: or even just curt: based on the length rule, and that's ok because in parser rules I know which of the tokens I'm looking for. Then in a target action I can use a simple regex to crack the name and number, given that I know which token type it is.

Ok, I slightly lied. The fragment NAME isn't working. I thought fragment was semantically the same as inlining, but it's not. I have to do the manual replacement, otherwise the lexer will try to match NAME using the single rule for NAME, which will consume the trailing literals I need to match the composite tokens. So what I really have is this:
ID_NAME_COLON           : PLAYERNUM ('!'..'\u00FE')+ ':';
ID_NAME                            : PLAYERNUM ('!'..'\u00FE')+ ;
NAME_COLON                  : ('!'..'\u00FE')+ ':';
PLAYERNUM                      : '(' NUMBER ')';
NUMBER                             : '-'? ('0'..'9')+;

This does appear to work. Is this a normal thing to do, or am I off in the weeds?

Thanks again,

Curt

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Curt Carpenter
Sent: Friday, January 30, 2009 12:15 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie question about lex token matching priority

Hi all, I am 1 day in on ANTLR, so be gentle. :)

I have gone through the tutorials and such, and have created a grammar from scratch, debugged it and have it mostly working, except for one problem. I want to parse something like this:
(#)name
Where # is a number, but name can be virtually anything except space. I think. I don't own the language, so please don't suggest that name should be further restricted. So I defined the lex rules as so:
PARENNUM       : '(' NUMBER ')';
NUMBER             : '-'? ('0'..'9')+;
NAME                   : ('!'..'\u00FE')+; // ansi only

You can see the problem at NAME. (0)curt is a valid name. But what I really want is to parse as PARENNUM=(0) NAME=curt. I have a parse rule to match that. But, the lex rules match longest string first, so (0)curt is always tokenized as NAME. Is there any way to change the priority of matching lex tokens to be the order they're defined, rather than order only breaking ties in string length?

Or is there some other way to accomplish the simple parse rule I'm trying to solve?

Thanks,

Curt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/9b5d4251/attachment.html 

From carter_cheng at yahoo.com  Thu Jan 29 10:11:58 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Thu, 29 Jan 2009 10:11:58 -0800 (PST)
Subject: [antlr-interest] Difficulties compiling tree grammar using
	Antlr 3.1.1 using g++
In-Reply-To: <4981E393.7050008@temporal-wave.com>
Message-ID: <549130.14497.qm@web50106.mail.re2.yahoo.com>

Oops I didnt see the buglist while surfing through the online materials. The problem was that with my tree parser apparently it was having difficulties at present negotiating certain constructs without backtracking on. 

I guess I will try to fix this. I assume if each class of node has a unique root tag this wont be a problem?

No this isnt a commercial parser. It's just for an open source project of mine which usually does not parse alot of code at a single go.

Regards,

Carter.

--- On Thu, 1/29/09, Jim Idle <jimi at temporal-wave.com> wrote:

> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Difficulties compiling tree grammar using Antlr 3.1.1 using g++
> To: 
> Cc: antlr-interest at antlr.org
> Date: Thursday, January 29, 2009, 9:12 AM
> Carter Cheng wrote:
> > Hi,
> >
> > Last night I was experimenting with adding semantic
> analysis passes to my parsing front end and ran into a
> problem which seems like it may be some sort of bug.
> Compiling in C using g++ seems to create a bunch of errors
> w.r.t to void* -> ANTLR3_BASE_TREE* conversion in each
> and every rule when compiling with g++ and backtracking =
> true. 
> >
> > If I use gcc as opposed to g++ the code compiles fine
> but I suspect this wont work for me in the long term since I
> plan to sprinkle in some c++ code. Is this a known issue and
> has it been resolved?
> >
> > Thanks in advance,
> >   
> Please check the existing bug list before posting bugs, as
> per my post 
> of a few days ago :-). Also, you should debate heavily
> about using 
> backtrack mode, at least globally, unless this is not a
> commercial parser.
> 
> See:
> http://www.antlr.org/jira/browse/ANTLR-356
> 
> Which should be fixed this week/next week.
> 
> Jim
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      

From jimi at temporal-wave.com  Thu Jan 29 10:33:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 29 Jan 2009 10:33:27 -0800
Subject: [antlr-interest] Difficulties compiling tree grammar
 using	Antlr 3.1.1 using g++
In-Reply-To: <549130.14497.qm@web50106.mail.re2.yahoo.com>
References: <549130.14497.qm@web50106.mail.re2.yahoo.com>
Message-ID: <4981F677.9050504@temporal-wave.com>

Carter Cheng wrote:
> Oops I didnt see the buglist while surfing through the online materials. 
No problem - it was just an opportunity to remind people that JIRA is 
there. We are shortly going to make it easier to follow bugs too, so you 
can create an account and track bugs but cannot create or otherwise post 
things (as then you get 99% spambots :-().

> The problem was that with my tree parser apparently it was having difficulties at present negotiating certain constructs without backtracking on. 
>
> I guess I will try to fix this. I assume if each class of node has a unique root tag this wont be a problem?
>   

Yes - when you are in charge of the AST you should always construct an 
unambiguous one. Sometimes even though the tree is unambiguous you might 
up with a tree grammar that is because it is only looking at parts of 
the tree and so on. However that won't be a problem with a tree grammar 
that is traversing an otherwise unambiguous tree, assuming that your 
parser is debugged and always produces correct ASTs (even in error 
situations if you need an AST in that instance).

Basically you should not be getting errors in your tree parser as that 
would be a bug in your parser.

Jim

From jimi at temporal-wave.com  Thu Jan 29 10:39:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 29 Jan 2009 10:39:20 -0800
Subject: [antlr-interest] Difficulties compiling tree grammar using
 Antlr 3.1.1 using g++
In-Reply-To: <d1316fd70901290926o2ed0d63eoc552920f89d78c6@mail.gmail.com>
References: <164021.94934.qm@web50105.mail.re2.yahoo.com>	
	<4981E393.7050008@temporal-wave.com>
	<d1316fd70901290926o2ed0d63eoc552920f89d78c6@mail.gmail.com>
Message-ID: <4981F7D8.7080401@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090129/9684bfa6/attachment.html 

From carter_cheng at yahoo.com  Thu Jan 29 15:37:14 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Thu, 29 Jan 2009 15:37:14 -0800 (PST)
Subject: [antlr-interest] Difficulties compiling tree grammar using
	Antlr 3.1.1 using g++
Message-ID: <118932.88429.qm@web50101.mail.re2.yahoo.com>

This one might be a showstopper for me unfortunately until it is fixed. I managed to remove all the ambiguities I believe from the tree grammar and switched backtracking off (report indicates no uses of backtracking either)- but I am still getting this error. 

Regards,

Carter. 


      

From michael.bedward at gmail.com  Thu Jan 29 18:10:49 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 30 Jan 2009 13:10:49 +1100
Subject: [antlr-interest] error with modulo operator in tree grammar action
Message-ID: <e24c4c270901291810p3b318ce0vc9bcd9b4a07f5f82@mail.gmail.com>

Hello all,

I search the list for this but only found a related bug report - no solution.

I have a rule and associated action (java) in my tree grammar...

expr: ^(MOD a=expr b=expr) {$value = a % b;}

This provokes get an invalid string template error.  I imagine there
must be some simple option or similar that I'm missing (?)

Michael

From robert.soule at gmail.com  Thu Jan 29 19:52:55 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Thu, 29 Jan 2009 22:52:55 -0500
Subject: [antlr-interest] error with modulo operator in tree grammar
	action
In-Reply-To: <e24c4c270901291810p3b318ce0vc9bcd9b4a07f5f82@mail.gmail.com>
References: <e24c4c270901291810p3b318ce0vc9bcd9b4a07f5f82@mail.gmail.com>
Message-ID: <d1316fd70901291952t1e5c04c9r58c746f7c707ccdf@mail.gmail.com>

You need to escape the percent sign: \%

-Robert

On Thu, Jan 29, 2009 at 9:10 PM, Michael Bedward
<michael.bedward at gmail.com> wrote:
> Hello all,
>
> I search the list for this but only found a related bug report - no solution.
>
> I have a rule and associated action (java) in my tree grammar...
>
> expr: ^(MOD a=expr b=expr) {$value = a % b;}
>
> This provokes get an invalid string template error.  I imagine there
> must be some simple option or similar that I'm missing (?)
>
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ajr24 at u.washington.edu  Thu Jan 29 22:09:35 2009
From: ajr24 at u.washington.edu (Alexander James Rickett)
Date: Thu, 29 Jan 2009 22:09:35 -0800 (PST)
Subject: [antlr-interest] ANTLRWorks debug woes...
In-Reply-To: <mailman.0.1233293958.11561.antlr-interest@antlr.org>
Message-ID: <Pine.LNX.4.43.0901292209350.11430@hymn11.u.washington.edu>

Hello,

I'm trying to use the debug in ANTLRWorks with a sample grammar from a tutorial. The grammar checks out, and generates code fine, but when I go into the debug menu, and choose "debug" I get the error message "Compliler failed with result code 1" and get the following message in the console:

[11:29:03] D:\workspace\AntlrCobol\src\grammarEtc\tempParser.java:10: cannot access org.antlr.runtime.debug.DebugParser
[11:29:03] bad class file: C:\Documents and Settings\Alexander_401007\My Documents\antlrworks-1.2.2.jar(org/antlr/runtime/debug/DebugParser.class)
[11:29:03] class file has wrong version 48.0, should be 47.0
[11:29:03] Please remove or make sure it appears in the correct subdirectory of the classpath.
[11:29:03] public class tempParser extends DebugParser {
[11:29:03]                                 ^
[11:29:03] 1 error

--------------------------------------------------------------------------------
I'm using this at work, and we have pretty strict firewall policies so I'm not sure that remote debug is an option....  ALSO, subsequent calls to debug, yield a greater variety of wrong-version files:
--------------------------------------------------------------------------------
[11:32:40] D:\workspace\AntlrCobol\src\grammarEtc\tempLexer.java:8: cannot access org.antlr.runtime.Lexer
[11:32:40] bad class file: C:\Documents and Settings\Alexander_401007\My Documents\antlrworks-1.2.2.jar(org/antlr/runtime/Lexer.class)
[11:32:40] class file has wrong version 48.0, should be 47.0
[11:32:40] Please remove or make sure it appears in the correct subdirectory of the classpath.
[11:32:40] public class tempLexer extends Lexer {
[11:32:40]                                ^
[11:32:40] 1 error
[11:32:40] D:\workspace\AntlrCobol\src\grammarEtc\tempParser.java:10: cannot access org.antlr.runtime.debug.DebugParser
[11:32:40] bad class file: C:\Documents and Settings\Alexander_401007\My Documents\antlrworks-1.2.2.jar(org/antlr/runtime/debug/DebugParser.class)
[11:32:40] class file has wrong version 48.0, should be 47.0
[11:32:40] Please remove or make sure it appears in the correct subdirectory of the classpath.
[11:32:40] public class tempParser extends DebugParser {
[11:32:40]                                 ^
[11:32:40] 1 error
[11:32:40] D:\workspace\AntlrCobol\src\grammarEtc\__Test__.java:3: cannot access org.antlr.runtime.debug.DebugEventSocketProxy
[11:32:40] bad class file: C:\Documents and Settings\Alexander_401007\My Documents\antlrworks-1.2.2.jar(org/antlr/runtime/debug/DebugEventSocketProxy.class)
[11:32:40] class file has wrong version 48.0, should be 47.0
[11:32:40] Please remove or make sure it appears in the correct subdirectory of the classpath.
[11:32:40] import org.antlr.runtime.debug.DebugEventSocketProxy;
[11:32:40]                                ^
[11:32:40] 1 error
--------------------------------------------------------------------------------
I'm running ANTLRWorks 1.2.2, on XP professional, I haven't done any class path
configurations, though I've used a few ANTLR plugins in eclipse...  Please tell me if any other information would be helpful...  The grammar I'm trying is below,  Thanks so much.
--------------------------------------------------------------------------------
grammar temp;

tokens {
     GET='get';
     PUT='put';
     CHANGE='change';
     DATA='data';
     METADATA='metadata';
     DEPENDENCIES='dependencies';
     DEPENDENTS='dependents';
     STATISTICS='statistics';
     FROM='from';
     IN='in';
     ABOUT='about';
     OF='of';
}

command
     :    sentence (NEWLINE sentence)* NEWLINE? EOF
     |
     ;

sentence
     :    WS? verb WS object WS preposition WS target WS?
     ;

verb
     :    GET
     |    PUT
     |    CHANGE
     ;

object
     :    DATA
     |    METADATA
     |    DEPENDENCIES
     |    DEPENDENTS
     |    STATISTICS
     ;

preposition
     :    FROM
     |    IN
     |    ABOUT
     |    OF
     ;

target
     :    FILE
     ;

FILE
     : ('a'..'z'|'A'..'Z'|'0'..'9'|'.')+
     ;

NEWLINE
     : '\r'? '\n'
     ;

WS
     : (' '|'\t'|'\n'|'\r')+ {skip();}
     ;



From carter_cheng at yahoo.com  Fri Jan 30 06:37:33 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Fri, 30 Jan 2009 06:37:33 -0800 (PST)
Subject: [antlr-interest] tree walking and semantic analysis
Message-ID: <729100.21422.qm@web50104.mail.re2.yahoo.com>

Hi,

This is my first attempt at trying to build a compiler frontend and I have run into some problems which I am not sure how to resolve with ANTLR. The two issues are how to generate semantic analysis pass errors from the tree walking code and how best to design the passes code which conceptually keeps things like various context checks and type checks cleanly separated. 

Is there a canonical way to do this with ANTLR (and perhaps some example projects out there from ppl who have implemented full compilers)?

Thanks in advance,

Carter.  


      

From funkyworklehead at gmail.com  Fri Jan 30 07:28:15 2009
From: funkyworklehead at gmail.com (funkyworklehead at gmail.com)
Date: Fri, 30 Jan 2009 07:28:15 -0800
Subject: [antlr-interest] Trouble with outdated? c language target?
In-Reply-To: <652382.22434.qm@web50107.mail.re2.yahoo.com>
References: <46498d480901290657w78ba3047v17de8ff2d52e5ec8@mail.gmail.com>
	<652382.22434.qm@web50107.mail.re2.yahoo.com>
Message-ID: <46498d480901300728p2bb24133kbf6ee022c42d82ca@mail.gmail.com>

Thanks Carter.  Using 'TOKENSOURCE(lxr)' worked.

Now I'm seeing
error: expected '=', ',', ';', 'asm' or '__attribute__' before
'FOLLOW_section_in_file28'

for line
static  ANTLR3_BITSET_LIST FOLLOW_section_in_file28	= {
FOLLOW_section_in_file28_bits, 1	};

in my *Parser.c file.

It looks like macro ANTLR3_BITSET_LIST is not valid.

Maybe I'll try antrl3.0 and libcantrl.3.0


On Thu, Jan 29, 2009 at 8:37 AM, Carter Cheng <carter_cheng at yahoo.com> wrote:
> I did manage to get it to work but I had to make several modifications there are several other sources for examples which may be more up to date. I think there is an examples.zip which you can find on the www.antlr.org download page. For the line in question I had to make a modification per this comment (under macro changes):
>
> http://www.antlr.org/api/C/changes31.html
>
> Good luck!
>
> Regards,
>
> Carter.
>
>
>
>

From carter_cheng at yahoo.com  Fri Jan 30 07:49:58 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Fri, 30 Jan 2009 07:49:58 -0800 (PST)
Subject: [antlr-interest] Difficulties compiling tree grammar using
	Antlr 3.1.1 using g++
In-Reply-To: <118932.88429.qm@web50101.mail.re2.yahoo.com>
Message-ID: <836111.52352.qm@web50107.mail.re2.yahoo.com>

The bug I am getting isn't quite the same as the one you mentioned on the page. It's coming from the line-

retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);

Probably something similar though. How does one go about posting bugs on the other page? 

Regards,

Carter.


      

From carter_cheng at yahoo.com  Fri Jan 30 07:57:43 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Fri, 30 Jan 2009 07:57:43 -0800 (PST)
Subject: [antlr-interest] Trouble with outdated? c language target?
In-Reply-To: <46498d480901300728p2bb24133kbf6ee022c42d82ca@mail.gmail.com>
Message-ID: <538848.68608.qm@web50101.mail.re2.yahoo.com>

I have been using a build of ANTLR 3.1.1 and havent had any problems with parsing lexing and tree building all seem to work ok for me. Here is the modified file I am using to test my parser. It's pretty much the file on the page with some modifications.

You might have gotten past this already.


--- On Fri, 1/30/09, funkyworklehead at gmail.com <funkyworklehead at gmail.com> wrote:

> From: funkyworklehead at gmail.com <funkyworklehead at gmail.com>
> Subject: Re: [antlr-interest] Trouble with outdated? c language target?
> To: antlr-interest at antlr.org
> Date: Friday, January 30, 2009, 7:28 AM
> Thanks Carter.  Using 'TOKENSOURCE(lxr)' worked.
> 
> Now I'm seeing
> error: expected '=', ',', ';',
> 'asm' or '__attribute__' before
> 'FOLLOW_section_in_file28'
> 
> for line
> static  ANTLR3_BITSET_LIST FOLLOW_section_in_file28	= {
> FOLLOW_section_in_file28_bits, 1	};
> 
> in my *Parser.c file.
> 
> It looks like macro ANTLR3_BITSET_LIST is not valid.
> 
> Maybe I'll try antrl3.0 and libcantrl.3.0
> 
> 
> On Thu, Jan 29, 2009 at 8:37 AM, Carter Cheng
> <carter_cheng at yahoo.com> wrote:
> > I did manage to get it to work but I had to make
> several modifications there are several other sources for
> examples which may be more up to date. I think there is an
> examples.zip which you can find on the www.antlr.org
> download page. For the line in question I had to make a
> modification per this comment (under macro changes):
> >
> > http://www.antlr.org/api/C/changes31.html
> >
> > Good luck!
> >
> > Regards,
> >
> > Carter.
> >
> >
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: main.cpp
Type: text/x-c++src
Size: 9661 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090130/9cb8afd3/attachment.bin 

From jimi at temporal-wave.com  Fri Jan 30 10:20:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 30 Jan 2009 10:20:52 -0800
Subject: [antlr-interest] ANTLRWorks debug woes...
In-Reply-To: <Pine.LNX.4.43.0901292209350.11430@hymn11.u.washington.edu>
References: <Pine.LNX.4.43.0901292209350.11430@hymn11.u.washington.edu>
Message-ID: <49834504.8000407@temporal-wave.com>

Alexander James Rickett wrote:
> Hello,
>
> I'm trying to use the debug in ANTLRWorks with a sample grammar from a tutorial. The grammar checks out, and generates code fine, but when I go into the debug menu, and choose "debug" I get the error message "Compliler failed with result code 1" and get the following message in the console:
>
> [11:29:03] D:\workspace\AntlrCobol\src\grammarEtc\tempParser.java:10: cannot access org.antlr.runtime.debug.DebugParser
> [11:29:03] bad class file: C:\Documents and Settings\Alexander_401007\My Documents\antlrworks-1.2.2.jar(org/antlr/runtime/debug/DebugParser.class)
> [11:29:03] class file has wrong version 48.0, should be 47.0
> [11:29:03] Please remove or make sure it appears in the correct subdirectory of the classpath.
>   
This means that the antlrworks jar has been built with a newer version 
of the javac compiler than the one you have on your system. Perhaps 
Worksis now built with 1.6 and you have 1.5? What does javac -version 
tell you?

Jim

From jimi at temporal-wave.com  Fri Jan 30 11:14:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 30 Jan 2009 11:14:31 -0800
Subject: [antlr-interest] Trouble with outdated? c language target?
In-Reply-To: <46498d480901300728p2bb24133kbf6ee022c42d82ca@mail.gmail.com>
References: <46498d480901290657w78ba3047v17de8ff2d52e5ec8@mail.gmail.com>	<652382.22434.qm@web50107.mail.re2.yahoo.com>
	<46498d480901300728p2bb24133kbf6ee022c42d82ca@mail.gmail.com>
Message-ID: <49835197.2020503@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090130/ed79e2b8/attachment.html 

From jimi at temporal-wave.com  Fri Jan 30 11:16:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 30 Jan 2009 11:16:13 -0800
Subject: [antlr-interest] Difficulties compiling tree grammar
 using	Antlr 3.1.1 using g++
In-Reply-To: <836111.52352.qm@web50107.mail.re2.yahoo.com>
References: <836111.52352.qm@web50107.mail.re2.yahoo.com>
Message-ID: <498351FD.5070303@temporal-wave.com>

Carter Cheng wrote:
> The bug I am getting isn't quite the same as the one you mentioned on the page. It's coming from the line-
>
> retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR, root_0);
>
> Probably something similar though. How does one go about posting bugs on the other page? 
You cannot create your own bugs. You just email them here with an 
example grammar. If you get that on the list today I will fix it by Monday.

Jim

From antlr-interest at antlr.org  Fri Jan 30 12:01:42 2009
From: antlr-interest at antlr.org (antlr-interest at antlr.org)
Date: Fri, 30 Jan 2009 12:01:42 -0800 (PST)
Subject: [antlr-interest] [SPAM] Dear antlr-interest@antlr.org January 55%
	0FF
Message-ID: <20090130200142.BA58B341841C@www.antlr.org>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090130/3b2fa018/attachment.html 

From carter_cheng at yahoo.com  Fri Jan 30 12:15:42 2009
From: carter_cheng at yahoo.com (Carter Cheng)
Date: Fri, 30 Jan 2009 12:15:42 -0800 (PST)
Subject: [antlr-interest] Difficulties compiling tree grammar using
	Antlr 3.1.1 using g++
In-Reply-To: <498351FD.5070303@temporal-wave.com>
Message-ID: <406529.67607.qm@web50103.mail.re2.yahoo.com>

Hi Jim,

Here is the grammar file I am using which is generating the error with g++ 4.3.0. This is the error which I am repeatedly getting once per generated rule function. 

LPCTreeParser.c: In function ?LPCTreeParser_basicType_return basicType(LPCTreeParser_Ctx_struct*)?:
LPCTreeParser.c:14523: error: invalid conversion from ?void*? to ?ANTLR3_BASE_TREE_struct*?

Thanks in advance,

Carter.

--- On Fri, 1/30/09, Jim Idle <jimi at temporal-wave.com> wrote:

> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Difficulties compiling tree grammar using Antlr 3.1.1 using g++
> To: 
> Cc: antlr-interest at antlr.org
> Date: Friday, January 30, 2009, 11:16 AM
> Carter Cheng wrote:
> > The bug I am getting isn't quite the same as the
> one you mentioned on the page. It's coming from the
> line-
> >
> > retval.tree = ADAPTOR->rulePostProcessing(ADAPTOR,
> root_0);
> >
> > Probably something similar though. How does one go
> about posting bugs on the other page? 
> You cannot create your own bugs. You just email them here
> with an 
> example grammar. If you get that on the list today I will
> fix it by Monday.
> 
> Jim
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LPC.tokens
Type: application/octet-stream
Size: 2446 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090130/e5b225f1/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LPCTreeParser.g
Type: application/octet-stream
Size: 6879 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090130/e5b225f1/attachment-0001.obj 

From parrt at cs.usfca.edu  Fri Jan 30 13:24:59 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Jan 2009 13:24:59 -0800
Subject: [antlr-interest] new interpreter example
Message-ID: <F433B1A1-A3A5-4450-9BB0-431886E303D5@cs.usfca.edu>

Howdy.  I just finished the implementation of a really cool  
interpreter that can handle any object-oriented language understands  
closures/lambdas natively. It's meant to demonstrate a very clean and  
powerful interpreter, one that is easy to target from a compiler. It  
is not efficient which is not usually a concern for most interpreters  
for DSLs.

http://www.antlr.org/wiki/display/CS652/Command+interpreter

Take look and let me know what you think. I cannot release the (tiny)  
900 lines of source code because my students need to build it sometime  
in March, but I will release it after they finish the project. It will  
also be explained in detail as an example in my language book.

You'll love the solution. It's extremely regular and simple. It would  
be suitable for embedded languages or even as a byte code compiler  
target. For example, with a few extra instructions, this could easily  
be a Python interpreter.

Ter

From robgreene at gmail.com  Fri Jan 30 18:49:38 2009
From: robgreene at gmail.com (Rob Greene)
Date: Fri, 30 Jan 2009 20:49:38 -0600
Subject: [antlr-interest] Newbie question about lex token matching
	priority
In-Reply-To: <80531546B1EAB64CBA160D97566FC7E52F170D4DD0@NA-EXMSG-C117.redmond.corp.microsoft.com>
References: <80531546B1EAB64CBA160D97566FC7E52F170D4DD0@NA-EXMSG-C117.redmond.corp.microsoft.com>
Message-ID: <738584f80901301849r421bba8cqa32cc96920b87ee@mail.gmail.com>

Hi Curt --

First off, I'm a total hack at ANTLR.  And that's in the golfing sense
with grass flying everywhere and not in the geek sense of being
totally awesome.  Awesome is reserved for others on this list.  So, if
I mislead you, sorry in advance!!

Anyway, from your description, think PARENNUM isn't a lexer rule but a
grammar rule.

So you'd have something like:

language: data+ ;
data: '(' NUMBER ')' NAME ;

and the same lex rules for NUMBER and NAME as before.  Also, don't
forget a whitespace rule (I assume you need one?)

WS: (' ' | '\t' | '\n' | '\r')+ {skip();}

I hope I'm leading you in the right direction at least!
-Rob

On Thu, Jan 29, 2009 at 10:14 AM, Curt Carpenter
<Curt.Carpenter at microsoft.com> wrote:
> Hi all, I am 1 day in on ANTLR, so be gentle. J
>
>
>
> I have gone through the tutorials and such, and have created a grammar from
> scratch, debugged it and have it mostly working, except for one problem. I
> want to parse something like this:
>
> (#)name
>
> Where # is a number, but name can be virtually anything except space. I
> think. I don't own the language, so please don't suggest that name should be
> further restricted. So I defined the lex rules as so:
>
> PARENNUM       : '(' NUMBER ')';
>
> NUMBER             : '-'? ('0'..'9')+;
>
> NAME                   : ('!'..'\u00FE')+; // ansi only
>
>
>
> You can see the problem at NAME. (0)curt is a valid name. But what I really
> want is to parse as PARENNUM=(0) NAME=curt. I have a parse rule to match
> that. But, the lex rules match longest string first, so (0)curt is always
> tokenized as NAME. Is there any way to change the priority of matching lex
> tokens to be the order they're defined, rather than order only breaking ties
> in string length?
>
>
>
> Or is there some other way to accomplish the simple parse rule I'm trying to
> solve?
>
>
>
> Thanks,
>
>
>
> Curt
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From antlr at thewolery.demon.co.uk  Sat Jan 31 07:23:55 2009
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Sat, 31 Jan 2009 15:23:55 +0000
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
	<20090120091111.287390@gmx.net> <20090120092744.314150@gmx.net>
	<20090120095451.D7B24341840B@www.antlr.org>
	<20090120114137.34410@gmx.net>
	<673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
Message-ID: <DrLSYwTL0GhJFw0y@thewolery.demon.co.uk>

In message <673774B77DFB453C985A9D7053EC2FF7 at DFW5RB41>, Gary R. Van 
Sickle <g.r.vansickle at att.net> writes
>> Another improvement would be to allow a comma-separated list.
>> With it one can record all versions of ANTLR, with which the
>> grammar works without any modifications.
>
>The trouble with that is that it forces the user to predict the future.
>Maybe it will work with the next fifty versions, which may only have changes
>which don't affect the ultimate interpretation, such as bug fixes, speed
>improvements, and the like, but there's no way to specify that.
>
>The only way this sort of thing works is for the source file to declare
>"this is the standard I was written to".  It is then up to the interpreters,
>past, present, and future, to either modify their interpretation to match
>that of the specified standard (i.e. future ANTLR versions "degrading" their
>interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a grammar
>that says its written to the ANTLR 8.5.6 standard, which it of course has no
>idea what that even is, so it can't possibly interpret it).

Look at how Lilypond handles versioning (oh - and I think lily's parser 
got rewritten in Antlr a while back - I'm not sure but I certainly see 
the odd Antlr ref on the mailing list :-)

Each version of Lily knows what is the oldest version of the syntax it 
supports, so if 2.12.2 sees "version 2.12.0" in an input file it's quite 
happy. If it sees 2.11.59 it bails with "this input file is too old - 
run convert-ly". I don't know what it would do if it saw 2.12.6.

But basically, it knows at what point there were incompatible syntax 
changes, and objects if you try to feed it an old file. Okay, it might 
(or might not) be a bit more work in Antlr deciding at what points to 
break backwards compatibility, but it might also make life easier - keep 
compatibility over several versions because you can, then break it and 
Antlr knows to object about old input.

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From jaluber at gmx.de  Sat Jan 31 09:20:38 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 31 Jan 2009 18:20:38 +0100
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <DrLSYwTL0GhJFw0y@thewolery.demon.co.uk>
References: <4931B730.7070903@gmx.de>	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>	<20090120091111.287390@gmx.net>
	<20090120092744.314150@gmx.net>	<20090120095451.D7B24341840B@www.antlr.org>	<20090120114137.34410@gmx.net>	<673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
	<DrLSYwTL0GhJFw0y@thewolery.demon.co.uk>
Message-ID: <49848866.4050801@gmx.de>

Anthony W. Youngman schrieb:
> In message <673774B77DFB453C985A9D7053EC2FF7 at DFW5RB41>, Gary R. Van 
> Sickle <g.r.vansickle at att.net> writes
>>> Another improvement would be to allow a comma-separated list.
>>> With it one can record all versions of ANTLR, with which the
>>> grammar works without any modifications.
>> The trouble with that is that it forces the user to predict the future.
>> Maybe it will work with the next fifty versions, which may only have changes
>> which don't affect the ultimate interpretation, such as bug fixes, speed
>> improvements, and the like, but there's no way to specify that.
>>
>> The only way this sort of thing works is for the source file to declare
>> "this is the standard I was written to".  It is then up to the interpreters,
>> past, present, and future, to either modify their interpretation to match
>> that of the specified standard (i.e. future ANTLR versions "degrading" their
>> interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a grammar
>> that says its written to the ANTLR 8.5.6 standard, which it of course has no
>> idea what that even is, so it can't possibly interpret it).
> 
> Look at how Lilypond handles versioning (oh - and I think lily's parser 
> got rewritten in Antlr a while back - I'm not sure but I certainly see 
> the odd Antlr ref on the mailing list :-)
> 
> Each version of Lily knows what is the oldest version of the syntax it 
> supports, so if 2.12.2 sees "version 2.12.0" in an input file it's quite 
> happy. If it sees 2.11.59 it bails with "this input file is too old - 
> run convert-ly". I don't know what it would do if it saw 2.12.6.
> 
> But basically, it knows at what point there were incompatible syntax 
> changes, and objects if you try to feed it an old file. Okay, it might 
> (or might not) be a bit more work in Antlr deciding at what points to 
> break backwards compatibility, but it might also make life easier - keep 
> compatibility over several versions because you can, then break it and 
> Antlr knows to object about old input.
> 
> Cheers,
> Wol

I don't know lilypond but I doubt that this approach works for ANTLR.
ANTLR and ANTLR grammars consists of four parts: The tool, the runtime,
the grammar syntax, action code and the backend of the program, for
which the generated source is used. Of those the runtime, the action
code and the backend can't be simply converted automatically (though it
shouldn't be hard by hand).

Considering that those are very important parts, upon which the behavior
(and compileability) hinges, I believe that my approach is the best one
could do. Maybe with ANTLR/Yggdrasil things could work smoother, as the
action code won't be language dependent. But Loring hasn'T published
this spinoff yet.

Johannes

From g.r.vansickle at att.net  Sat Jan 31 09:29:23 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sat, 31 Jan 2009 11:29:23 -0600
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <DrLSYwTL0GhJFw0y@thewolery.demon.co.uk>
References: <4931B730.7070903@gmx.de><7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu><20090120091111.287390@gmx.net>
	<20090120092744.314150@gmx.net><20090120095451.D7B24341840B@www.antlr.org><20090120114137.34410@gmx.net><673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
	<DrLSYwTL0GhJFw0y@thewolery.demon.co.uk>
Message-ID: <4B13F9B4EF6F4835965BEB06A9C72D6E@DFW5RB41>

> From: Anthony W. Youngman
> 
> In message <673774B77DFB453C985A9D7053EC2FF7 at DFW5RB41>, Gary 
> R. Van Sickle <g.r.vansickle at att.net> writes
> >> Another improvement would be to allow a comma-separated list.
> >> With it one can record all versions of ANTLR, with which 
> the grammar 
> >> works without any modifications.
> >
> >The trouble with that is that it forces the user to predict 
> the future.
> >Maybe it will work with the next fifty versions, which may only have 
> >changes which don't affect the ultimate interpretation, such as bug 
> >fixes, speed improvements, and the like, but there's no way 
> to specify that.
> >
> >The only way this sort of thing works is for the source file 
> to declare 
> >"this is the standard I was written to".  It is then up to the 
> >interpreters, past, present, and future, to either modify their 
> >interpretation to match that of the specified standard (i.e. future 
> >ANTLR versions "degrading" their
> >interpretation) or simply bail (e.g. ANTLR 3.1.2 tries to read a 
> >grammar that says its written to the ANTLR 8.5.6 standard, 
> which it of 
> >course has no idea what that even is, so it can't possibly 
> interpret it).
> 
> Look at how Lilypond handles versioning (oh - and I think 
> lily's parser got rewritten in Antlr a while back - I'm not 
> sure but I certainly see the odd Antlr ref on the mailing list :-)
> 
> Each version of Lily knows what is the oldest version of the 
> syntax it supports, so if 2.12.2 sees "version 2.12.0" in an 
> input file it's quite happy. If it sees 2.11.59 it bails with 
> "this input file is too old - run convert-ly". I don't know 
> what it would do if it saw 2.12.6.
> 
> But basically, it knows at what point there were incompatible 
> syntax changes, and objects if you try to feed it an old 
> file. Okay, it might (or might not) be a bit more work in 
> Antlr deciding at what points to break backwards 
> compatibility, but it might also make life easier - keep 
> compatibility over several versions because you can, then 
> break it and Antlr knows to object about old input.
> 
> Cheers,
> Wol
> --
> Anthony W. Youngman - anthony at thewolery.demon.co.uk

Yep, that's exactly what I'm suggesting.  The file indicates what version of
the language it was written to, the interpreter of the file decides what to
do based on that version info.

-- 
Gary R. Van Sickle


From bottiger1 at gmail.com  Sat Jan 31 19:02:39 2009
From: bottiger1 at gmail.com (Bot Tiger)
Date: Sat, 31 Jan 2009 19:02:39 -0800
Subject: [antlr-interest] Antlr3 C Runtime Improvement Patches
Message-ID: <3490668a0901311902i6539b85bi1707fd870c51d005@mail.gmail.com>

Here are some patches to get the antlr3 C runtime to compile as STDCALL.
Apparently strdup is also deprecated in recent versions of visual studio.


--- antlr3defs.h    (revision 1)
+++ antlr3defs.h    (revision 2)

@@ -458,7 +458,7 @@
 /// Default definition of ANTLR3_STRDUP. You can override this before
including
 /// antlr3.h if you wish to use your own implementation.
 ///
-#define    ANTLR3_STRDUP(instr)                    (pANTLR3_UINT8)(strdup
((const char *)(instr)))
+#define    ANTLR3_STRDUP(instr)                    (pANTLR3_UINT8)(_strdup
((const char *)(instr)))



--- antlr3rewritestreams.h    (revision 1)
+++ antlr3rewritestreams.h    (revision 2)
@@ -152,9 +152,9 @@
     /// Returns the description string if there is one available (check for
NULL).
     ///
     void *            (*getDescription)    (struct
ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);
+    void    (ANTLR3_CDECL    *free)                    (struct
ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);

-    void        (*free)                    (struct
ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);


--- antlr3rewritestreams.c    (revision 1)
+++ antlr3rewritestreams.c    (revision 2)
@@ -54,14 +54,14 @@
 static    pANTLR3_BASE_TREE    nextNodeToken
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
 static    ANTLR3_UINT32        size
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
 static    void *                getDescription
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
-static    void                freeRS
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
-static    void                expungeRS
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
+static    void ANTLR3_CDECL    freeRS
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);
+static  void ANTLR3_CDECL    expungeRS
(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream);

 // Place a now unused rewrite stream back on the rewrite stream pool
 // so we can reuse it if we need to.
 //
-static void
+static void ANTLR3_CDECL
 freeRS    (pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream)
 {
     // Before placing the stream back in the pool, we
@@ -93,10 +93,10 @@
     // adding the stream memory free routine so that
     // it is thrown away when the stack vector is destroyed
     //
-    stream->rec->state->rStreams->add(stream->rec->state->rStreams, stream,
(void(*)(void *))expungeRS);
+    stream->rec->state->rStreams->add(stream->rec->state->rStreams, stream,
/*(void(*)(void *))*/ expungeRS);
 }

-static void
+static void ANTLR3_CDECL
 expungeRS(pANTLR3_REWRITE_RULE_ELEMENT_STREAM stream)
 {



I think this is all. I didn't put the antlr lib under source control, so
when I made the diff I had to re-download the source, which appears to have
changed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090131/5688bee6/attachment.html 

From cmundi at gmail.com  Sat Jan 31 20:20:15 2009
From: cmundi at gmail.com (C. Mundi)
Date: Sat, 31 Jan 2009 21:20:15 -0700
Subject: [antlr-interest] adding "version" option to ANTLR grammars
In-Reply-To: <49848866.4050801@gmx.de>
References: <4931B730.7070903@gmx.de>
	<7CE79C20-C277-42F4-8636-460CA7AFA397@cs.usfca.edu>
	<20090120091111.287390@gmx.net> <20090120092744.314150@gmx.net>
	<20090120095451.D7B24341840B@www.antlr.org>
	<20090120114137.34410@gmx.net>
	<673774B77DFB453C985A9D7053EC2FF7@DFW5RB41>
	<DrLSYwTL0GhJFw0y@thewolery.demon.co.uk> <49848866.4050801@gmx.de>
Message-ID: <e794390901312020t372da263pfd97c23f963968d4@mail.gmail.com>

You're on to something good.

As a newcomer, I started using the alpha builds of antlr3 and immediately
ran into the exact problem you are trying to solve.  I appreciate the
legitimate concerns raised by others here.  But anything which provides a
clue about the assumptions under which a grammar was written would be
helpful.

Thanks.


On Nov 29, 2008, at 1:42 PM, Johannes Luber wrote:

> Hi!
>
> Thinking about the upcoming dialects of ANTLR grammars (one for each
> version, which aren't totally upwardscompatible), I had this idea.
> Would
> it make sense to make an option named "version" mandatory, which
> simply
> records the used ANTLR version for writing. It's mandatory because
> people don't seem ever to write a comment explaining the requirements
> (myself included ;). It makes easier for people to diagnose problems
> with a third-party grammar.
>
> Johannes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090131/eefd2cd9/attachment.html 

