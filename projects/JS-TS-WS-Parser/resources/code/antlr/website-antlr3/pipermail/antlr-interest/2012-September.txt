From francis.andre.kampbell at orange.fr  Sat Sep  1 03:14:42 2012
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Sat, 01 Sep 2012 12:14:42 +0200
Subject: [antlr-interest] The code for the static initializer is
 exceeding the 65535 bytes limit
In-Reply-To: <50411DDC.4050106@arcor.de>
References: <50411DDC.4050106@arcor.de>
Message-ID: <5041E012.6000805@orange.fr>

Hi Edgar

Give it a try and if that's ok for you, I will send you the patches as sources...

This patch does not work for a grammar which is generated at the top level of a 
java application, i.e, the default no package. This is related to a javac 
problem which is unable to solve an import foo.*; as the top level.But it works 
as soon as your grammar produces java code within a package.

If you are using a SharedState type, you must add its reference in the options 
block as

'SharedStateType' '=' <YourSharedStateType> ';'

options {
      language = Java;
     k=2;
     ASTLabelType=CommonTree;
     TokenLabelType=Lexem;
_SharedStateType=SharedState;_
}


Let me know if it works or if you have any problem

The jars are under the wiki page

http://www.antlr.org/wiki/display/ANTLR3/The+64K+syndrome%3A++The+code+for+the+static+initializer+is+exceeding+the+65535+bytes+limit

Francis


Le 31/08/2012 22:26, Edgar Jakumeit a ?crit :
> Hi,
>
> I just ran into the very same issue "problem about the code for the
> static initializer is exceeding the 65535 bytes limit" Zhaohui Yang
> posted 2 weeks ago, but the code I'm working with (the graph rewrite
> generator GrGen.NET) is public, so given the grammar file at
> https://bitbucket.org/eja/grgen/src/20956f86416f/frontend/de/unika/ipd/grgen/parser/antlr/GrGen.g
> I'd like to express my interest in
> a) the free pointers offered by Jim
> b) the patch offered by FA
> (Note: the grammar builds the AST directly from the semantic actions.)
>
> After 9 years of contributions of different people and a target which
> moved beyond what was originally envisioned the grammar is not as lean
> as one could hope for, but I don't think it's so bad the parser
> generator (better: the code generated) should fail.
>
> Regards
> Edgar
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From mike at lischke-online.de  Sat Sep  1 04:47:40 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Sat, 1 Sep 2012 13:47:40 +0200
Subject: [antlr-interest] Additional char from LEXER->getText
In-Reply-To: <E908C789-F632-4EDE-9948-BBA5524B61C2@temporal-wave.com>
References: <AB4C83C0-27B1-45C0-8953-1655D0965DCC@lischke-online.de>
	<6b11d2f7fd78294f2f073a8537aa7852@mail.gmail.com>
	<8227E49B-8812-41EA-9FE0-62C5327ABCFC@lischke-online.de>
	<E908C789-F632-4EDE-9948-BBA5524B61C2@temporal-wave.com>
Message-ID: <02441B5B-DE9D-4AED-B679-1C0BB8918F1A@lischke-online.de>


Hey Jim,

> I added support for $text because so many examples had it. It is fine if you are not doing anything that is performance or memory sensitive. 

Just a lookup if a given id starting with an underscore is one in a list.

> I think that the goal of non language specific action isn't that realistic and will get in the way of doing things correctly. 

Unfortunately. Which makes sharing a grammar for different targets a pain. If there were only a way to separate grammar and language specific stuff...

> Also note that the case insensitive option only works on ASCII and not the full Unicode code point set. 


I know. It works only because all my keywords are ASCII only.

Mike
-- 
www.soft-gems.net



From jimi at temporal-wave.com  Sat Sep  1 10:41:51 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 1 Sep 2012 10:41:51 -0700
Subject: [antlr-interest] Additional char from LEXER->getText
In-Reply-To: <02441B5B-DE9D-4AED-B679-1C0BB8918F1A@lischke-online.de>
References: <AB4C83C0-27B1-45C0-8953-1655D0965DCC@lischke-online.de>
	<6b11d2f7fd78294f2f073a8537aa7852@mail.gmail.com>
	<8227E49B-8812-41EA-9FE0-62C5327ABCFC@lischke-online.de>
	<E908C789-F632-4EDE-9948-BBA5524B61C2@temporal-wave.com>
	<02441B5B-DE9D-4AED-B679-1C0BB8918F1A@lischke-online.de>
Message-ID: <98b7fb96ed56a232b218a6cd734764f3@mail.gmail.com>

> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Saturday, September 01, 2012 4:48 AM
> To: Jim Idle
> Cc: ANTLR Mailing List
> Subject: Re: [antlr-interest] Additional char from LEXER->getText
>
>
> Hey Jim,
>
> > I added support for $text because so many examples had it. It is fine
> if you are not doing anything that is performance or memory sensitive.
>
> Just a lookup if a given id starting with an underscore is one in a
> list.

So, definitely don't use $text as you can just pass the text pointer to an
external function, that will be almost language agnostic.

>
> > I think that the goal of non language specific action isn't that
> realistic and will get in the way of doing things correctly.
>
> Unfortunately. Which makes sharing a grammar for different targets a
> pain. If there were only a way to separate grammar and language
> specific stuff...

Start with an unadorned grammar, branch and merge using sccs. It is not
the problem that people think it is unless you are using a weak SCCS.

>
> > Also note that the case insensitive option only works on ASCII and
> not the full Unicode code point set.
>
>
> I know. It works only because all my keywords are ASCII only.

That will work fine then

>
> Mike
> --
> www.soft-gems.net
>

From ds at escalon.de  Sun Sep  2 01:21:14 2012
From: ds at escalon.de (ds at escalon.de)
Date: Sun, 2 Sep 2012 10:21:14 +0200 (CEST)
Subject: [antlr-interest] antlr3 maven plugin not executed during clean
	install
Message-ID: <1917750191.882685.1346574074512.JavaMail.open-xchange@email.1und1.de>



Hi,

The antlr3 plugin does not generate sources for me when I run mvn clean install
on my war project using maven 3.0.4:
Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100)
Maven home: C:\Programme\ASF\apache-maven-3.0.4\bin\..
Java version: 1.6.0_31, vendor: Sun Microsystems Inc.
Java home: C:\programme\java\jdk1.6.0_31\jre

I have configured the antlr3 plugin like this:

      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.4</version>
        <executions>
          <execution>
            <configuration>
              <goals>
                <goal>antlr</goal>
              </goals>
            </configuration>
          </execution>
        </executions>
      </plugin>

I tried a number of other configurations, but this should execute the antlr goal
automatically during the default lifecycle during process-sources since that is
how the Mojo is annotated:

 * @goal antlr
 * @phase process-sources

(I also tried to add <phase>generate-sources</phase> and also the compile phase,
no effect)

The antlr goal is never invoked. I need to do it manually like this:

mvn clean antlr3:antlr install

Only then, the sources are generated properly and my build succeeds. Therefore I
think that my .g files are in the right place (below src/main/antlr3/[fully
qualified package]/). What can be the reason for this? Is it because I am
building a war project or because I use Maven 3.0.4 and not Maven 3.0.3?

Dietrich Schulten

From jimi at temporal-wave.com  Sun Sep  2 10:33:14 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 2 Sep 2012 10:33:14 -0700
Subject: [antlr-interest] antlr3 maven plugin not executed during clean
	install
In-Reply-To: <1917750191.882685.1346574074512.JavaMail.open-xchange@email.1und1.de>
References: <1917750191.882685.1346574074512.JavaMail.open-xchange@email.1und1.de>
Message-ID: <0ae2b414d044879183fe90692907095b@mail.gmail.com>

It is almost certainly something to do with your own pom, although
possibly it is because you are building a war project. Did  you try just
the simplest of plugin configs? Did you do a full debug trace of the build
invocation?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ds at escalon.de
> Sent: Sunday, September 02, 2012 1:21 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] antlr3 maven plugin not executed during clean
> install
>
>
>
> Hi,
>
> The antlr3 plugin does not generate sources for me when I run mvn clean
> install on my war project using maven 3.0.4:
> Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100) Maven home:
> C:\Programme\ASF\apache-maven-3.0.4\bin\..
> Java version: 1.6.0_31, vendor: Sun Microsystems Inc.
> Java home: C:\programme\java\jdk1.6.0_31\jre
>
> I have configured the antlr3 plugin like this:
>
>       <plugin>
>         <groupId>org.antlr</groupId>
>         <artifactId>antlr3-maven-plugin</artifactId>
>         <version>3.4</version>
>         <executions>
>           <execution>
>             <configuration>
>               <goals>
>                 <goal>antlr</goal>
>               </goals>
>             </configuration>
>           </execution>
>         </executions>
>       </plugin>
>
> I tried a number of other configurations, but this should execute the
> antlr goal automatically during the default lifecycle during process-
> sources since that is how the Mojo is annotated:
>
>  * @goal antlr
>  * @phase process-sources
>
> (I also tried to add <phase>generate-sources</phase> and also the
> compile phase, no effect)
>
> The antlr goal is never invoked. I need to do it manually like this:
>
> mvn clean antlr3:antlr install
>
> Only then, the sources are generated properly and my build succeeds.
> Therefore I think that my .g files are in the right place (below
> src/main/antlr3/[fully qualified package]/). What can be the reason for
> this? Is it because I am building a war project or because I use Maven
> 3.0.4 and not Maven 3.0.3?
>
> Dietrich Schulten
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From memmakersorg at gmail.com  Sun Sep  2 11:47:46 2012
From: memmakersorg at gmail.com (Memory Makers)
Date: Sun, 2 Sep 2012 14:47:46 -0400
Subject: [antlr-interest] Looking for a grammar for the SAS language
Message-ID: <CADLydXyqHts4RYoea+9Xge3ub6PVqVkM1k4nznYLhcZ9wuA-6w@mail.gmail.com>

Greetings,

I am looking for a grammar for the SAS language.

Would like to use it in an open source project that tries simulating a
subset of the SAS system using R.

Would appreciate a copy of the grammar for this purpose or any other tip.

Thanks.

From eja at arcor.de  Mon Sep  3 03:46:41 2012
From: eja at arcor.de (Edgar Jakumeit)
Date: Mon, 03 Sep 2012 12:46:41 +0200
Subject: [antlr-interest] The code for the static initializer is
 exceeding the 65535 bytes limit
In-Reply-To: <5041E012.6000805@orange.fr>
References: <50411DDC.4050106@arcor.de> <5041E012.6000805@orange.fr>
Message-ID: <50448A91.1000801@arcor.de>

Hi Francis,

when referencing in the java classpath the antlr plus the antlr-runtime 
you supplied, plus the string template v4, everything works fine (some 
additional classes are generated split off under new folders lexer and 
parser). The generated code compiles, and passes our vast test suites 
without error when executed.

But I must admit that we were using ANTLR 3.2 before and just going to 
3.4 brought it already below the 64k limit for us (was not done before 
as switching was breaking our include handling due to some subtle 
difference, and there was no need up till now to invest into finding out 
how to get around this).

Thanks for your effort
Regards
Edgar

Am 01.09.2012 12:14, schrieb Francis ANDRE:
> Hi Edgar
>
> Give it a try and if that's ok for you, I will send you the patches as
> sources...
>
> This patch does not work for a grammar which is generated at the top
> level of a java application, i.e, the default no package. This is
> related to a javac problem which is unable to solve an import foo.*; as
> the top level.But it works as soon as your grammar produces java code
> within a package.
>
> If you are using a SharedState type, you must add its reference in the
> options block as
>
> 'SharedStateType' '=' <YourSharedStateType> ';'
>
> options {
>       language = Java;
>      k=2;
>      ASTLabelType=CommonTree;
>      TokenLabelType=Lexem;
> _SharedStateType=SharedState;_
> }
>
>
> Let me know if it works or if you have any problem
>
> The jars are under the wiki page
>
> http://www.antlr.org/wiki/display/ANTLR3/The+64K+syndrome%3A++The+code+for+the+static+initializer+is+exceeding+the+65535+bytes+limit
>
> Francis
>
>
> Le 31/08/2012 22:26, Edgar Jakumeit a ?crit :
>> Hi,
>>
>> I just ran into the very same issue "problem about the code for the
>> static initializer is exceeding the 65535 bytes limit" Zhaohui Yang
>> posted 2 weeks ago, but the code I'm working with (the graph rewrite
>> generator GrGen.NET) is public, so given the grammar file at
>> https://bitbucket.org/eja/grgen/src/20956f86416f/frontend/de/unika/ipd/grgen/parser/antlr/GrGen.g
>> I'd like to express my interest in
>> a) the free pointers offered by Jim
>> b) the patch offered by FA
>> (Note: the grammar builds the AST directly from the semantic actions.)
>>
>> After 9 years of contributions of different people and a target which
>> moved beyond what was originally envisioned the grammar is not as lean
>> as one could hope for, but I don't think it's so bad the parser
>> generator (better: the code generated) should fail.
>>
>> Regards
>> Edgar
>>
>> List:http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>


From mark4 at voila.fr  Mon Sep  3 04:53:30 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Mon, 3 Sep 2012 13:53:30 +0200 (CEST)
Subject: [antlr-interest] Question about grammar name
In-Reply-To: <mailman.0.1346672853.4171.antlr-interest@antlr.org>
Message-ID: <513757149.61151346673210156.JavaMail.www@wwinf7120>

Hello,

I'm new to ANTLR and the first thing that comes to my mind is that AntlrWorks sends an error when the name of the grammar starts with an uppercase letter. Though, the grammars' names do start with an uppercase letter in all tutorials, like this one:
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3

Another thing, from the examples given, I'm supposing that the lexer and the parser class names do start with the name of the grammar, right?

For instance, for the grammar SimpleCalc, the lexer and parser are instantiated this way:
lexer = SimpleCalcLexer(char_stream);
parser = SimpleCalcParser(tokens);

Thanks in advance,
Mark
___________________________________________________________
Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html

From vincent.vbt at gmail.com  Mon Sep  3 08:54:10 2012
From: vincent.vbt at gmail.com (vincent)
Date: Mon, 3 Sep 2012 17:54:10 +0200
Subject: [antlr-interest] Grammar problem
Message-ID: <CAOimKV9BEoxAMsHQfn_c6+0UzWeQhcuhmZ4ZuyDnJFMXqvoVgQ@mail.gmail.com>

 Hy,

I use some ANTLR grammar to decode text files. But i encouter a problem
with the following example.
Does anybody can help me ?

My text files is componed of the following parts :

start line : "-  "
optional text : text ended with "."
serial number : 5 digits ended by a space
versioning : digit / digit
text : text

example with optional text :

-  optional text.00001 001/001TEXT

example without optional text :

-  00001 001/001TEXT

my probem is for optional text, cant detect it with antlr grammar.
I use the following code :




COMMA : ',';
DOT : '.';
HYPHEN :'-';
SPACE : ' ';
SLASH : '/';
CHAR : ('a'..'z'|'A'..'Z');
SEPARATOR : (DOT |HYPHEN)+;
DIGIT : ('0'..'9');
TXTALPHA : (CHAR)+ ;
NUMBER : (DIGIT)+ ;
TXTALPHANUM : ((CHAR) | (DIGIT))+;


textline : HYPHEN (SPACE)+  (optionalLines)* normalLine;

optionalLines : (TXTALPHA)* DOT

normalLine: serialNumber SPACE currentPartNumber SLASH maxPartNumber;

thanks

VIncent

From jbb at acm.org  Mon Sep  3 10:03:27 2012
From: jbb at acm.org (John B. Brodie)
Date: Mon, 03 Sep 2012 13:03:27 -0400
Subject: [antlr-interest] Grammar problem
In-Reply-To: <CAOimKV9BEoxAMsHQfn_c6+0UzWeQhcuhmZ4ZuyDnJFMXqvoVgQ@mail.gmail.com>
References: <CAOimKV9BEoxAMsHQfn_c6+0UzWeQhcuhmZ4ZuyDnJFMXqvoVgQ@mail.gmail.com>
Message-ID: <5044E2DF.4000904@acm.org>

Greetings!

Your sample grammar does not handle blanks in the optional text but your 
first sample input text does contain blanks in the optional text. So I 
am confused.....

Maybe as a start just delete the unused Token rule for TXTALPHANUM ?

Hope this helps....
    -jbb

On 09/03/2012 11:54 AM, vincent wrote:
>   Hy,
>
> I use some ANTLR grammar to decode text files. But i encouter a problem
> with the following example.
> Does anybody can help me ?
>
> My text files is componed of the following parts :
>
> start line : "-  "
> optional text : text ended with "."
> serial number : 5 digits ended by a space
> versioning : digit / digit
> text : text
>
> example with optional text :
>
> -  optional text.00001 001/001TEXT
>
> example without optional text :
>
> -  00001 001/001TEXT
>
> my probem is for optional text, cant detect it with antlr grammar.
> I use the following code :
>
>
>
>
> COMMA : ',';
> DOT : '.';
> HYPHEN :'-';
> SPACE : ' ';
> SLASH : '/';
> CHAR : ('a'..'z'|'A'..'Z');
> SEPARATOR : (DOT |HYPHEN)+;
> DIGIT : ('0'..'9');
> TXTALPHA : (CHAR)+ ;
> NUMBER : (DIGIT)+ ;
> TXTALPHANUM : ((CHAR) | (DIGIT))+;
>
>
> textline : HYPHEN (SPACE)+  (optionalLines)* normalLine;
>
> optionalLines : (TXTALPHA)* DOT
>
> normalLine: serialNumber SPACE currentPartNumber SLASH maxPartNumber;
>
>


From jimi at temporal-wave.com  Mon Sep  3 12:33:31 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 3 Sep 2012 12:33:31 -0700
Subject: [antlr-interest] Grammar problem
In-Reply-To: <CAOimKV9BEoxAMsHQfn_c6+0UzWeQhcuhmZ4ZuyDnJFMXqvoVgQ@mail.gmail.com>
References: <CAOimKV9BEoxAMsHQfn_c6+0UzWeQhcuhmZ4ZuyDnJFMXqvoVgQ@mail.gmail.com>
Message-ID: <46c29c085c8fe0c321b3add6f221aa36@mail.gmail.com>

optionalLines : (TXTALPHA | SPACE)* DOT

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of vincent
> Sent: Monday, September 03, 2012 8:54 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Grammar problem
>
>  Hy,
>
> I use some ANTLR grammar to decode text files. But i encouter a problem
> with the following example.
> Does anybody can help me ?
>
> My text files is componed of the following parts :
>
> start line : "-  "
> optional text : text ended with "."
> serial number : 5 digits ended by a space versioning : digit / digit
> text : text
>
> example with optional text :
>
> -  optional text.00001 001/001TEXT
>
> example without optional text :
>
> -  00001 001/001TEXT
>
> my probem is for optional text, cant detect it with antlr grammar.
> I use the following code :
>
>
>
>
> COMMA : ',';
> DOT : '.';
> HYPHEN :'-';
> SPACE : ' ';
> SLASH : '/';
> CHAR : ('a'..'z'|'A'..'Z');
> SEPARATOR : (DOT |HYPHEN)+;
> DIGIT : ('0'..'9');
> TXTALPHA : (CHAR)+ ;
> NUMBER : (DIGIT)+ ;
> TXTALPHANUM : ((CHAR) | (DIGIT))+;
>
>
> textline : HYPHEN (SPACE)+  (optionalLines)* normalLine;
>
> optionalLines : (TXTALPHA)* DOT
>
> normalLine: serialNumber SPACE currentPartNumber SLASH maxPartNumber;
>
> thanks
>
> VIncent
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mark4 at voila.fr  Tue Sep  4 04:20:12 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Tue, 4 Sep 2012 13:20:12 +0200 (CEST)
Subject: [antlr-interest]  Invalid parser generation
Message-ID: <1697049054.237451346757612194.JavaMail.www@wwinf7145>

Hi everyone,

I've built a grammar file, checked it with AntlrWorks, and ran the code generation for the C# language. Though, some invalid code has been generated.

This rule:
compte : ('0'..'9')+
;

translates to:

[GrammarRule("compte")]
private void compte()
...
try { DebugEnterSubRule(5);
while (true)
{
int alt5=2;
try { DebugEnterDecision(5, decisionCanBacktrack[5]);
int LA5_0 = input.LA(1);

if (()) <= This triggers an error!!!
{
alt5 = 1;
}
...

I have a similar void if, a bit farther in the compte() method. What's wrong with this simple rule?

Thanks in advance,
Mark
___________________________________________________________
Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html

From Stefan.Maetje at esd-electronics.com  Tue Sep  4 05:26:55 2012
From: Stefan.Maetje at esd-electronics.com (=?UTF-8?B?U3RlZmFuIE3DpHRqZQ==?=)
Date: Tue, 04 Sep 2012 14:26:55 +0200
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <1697049054.237451346757612194.JavaMail.www@wwinf7145>
References: <1697049054.237451346757612194.JavaMail.www@wwinf7145>
Message-ID: <5045F38F.7010701@esd-electronics.com>

Am 04.09.2012 13:20, schrieb mark4 at voila.fr:
> Hi everyone,
>
> I've built a grammar file, checked it with AntlrWorks, and ran the code generation for the C# language. Though, some invalid code has been generated.
>
> This rule:
> compte : ('0'..'9')+
> ;

This is a parser rule (lower case rule name) but you're using lexer 
syntax on the right side of the ":". This won't work.

I think that is the origin of your problems.

Use

COMPTE: ('0'..'9)+

making a lexer rule of it.


> translates to:
>
> [GrammarRule("compte")]
> private void compte()
> ...
> try { DebugEnterSubRule(5);
> while (true)
> {
> int alt5=2;
> try { DebugEnterDecision(5, decisionCanBacktrack[5]);
> int LA5_0 = input.LA(1);
>
> if (()) <= This triggers an error!!!
> {
> alt5 = 1;
> }
> ...
>
> I have a similar void if, a bit farther in the compte() method. What's wrong with this simple rule?
>
> Thanks in advance,
> Mark
> ___________________________________________________________
> Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

I hope that helps and is what you really want to do.

Best regards,
	Stefan M?tje


From Stefan.Maetje at esd-electronics.com  Tue Sep  4 06:38:55 2012
From: Stefan.Maetje at esd-electronics.com (=?UTF-8?B?U3RlZmFuIE3DpHRqZQ==?=)
Date: Tue, 04 Sep 2012 15:38:55 +0200
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <5045F38F.7010701@esd-electronics.com>
References: <1697049054.237451346757612194.JavaMail.www@wwinf7145>
	<5045F38F.7010701@esd-electronics.com>
Message-ID: <5046046F.8000705@esd-electronics.com>

Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
 >
 > Thanks for your reply. I didn't understand the difference between
 > lexer rules and parser rules because,
 > in fine, a parser rule will always resolve in a series of lexer
 > rules...

Please don't mix the lexer and the parser phase in your mind. The lexer 
deals with single characters and groups them into tokens.

The parser doesn't know anything about single characters and deals only 
with tokens.

 > Anyway, I applied the modification but I now get an error:
 >
 > COMPTE : ('0'..'9')+;
 >
 > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
 >
 > The following token definitions can never be matched because prior
 > tokens match the same input: COMPTE,ID

You have rules in your grammar before COMPTE and ID that define a 
superset of the character sequences that COMPTE and ID can match.

 > Well, I have several entities in my grammar that have different
 > encoding forms, so how can I specify them one after the other?

If at the end one type of token should be produced all needed
regular expressions have to go into one rule.

 > Thanks,
 > Mark
 >

As rule of thumb write the most specific lexer rules first and then 
follow them with the less specific rules. The lexer will give the
rules first written a higher precedence.

So put your keywords first (which are fixed strings). Then follow them 
with something like operators (also fixed strings). At the lower level
rules that can match different strings like ID and COMPTE follow.

See what Antlrworks tells you about multiple matches and which rules are 
involved.

Don't know if this may help but the rule that matches both COMPTE and ID 
would be most interesting.

Best regards,
	Stefan

PS.: Please reply also to the list.


From mark4 at voila.fr  Tue Sep  4 07:00:07 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Tue, 4 Sep 2012 16:00:07 +0200 (CEST)
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <5046046F.8000705@esd-electronics.com>
Message-ID: <1780947215.262901346767207575.JavaMail.www@wwinf7145>

Hi Stefan,

Thanks for the info. The antlr.org website is down, so I couldn't delve into details about lexer and parser rules. What I understood from trials and errors is that ALL the lexer rules that are placed into the grammar are matched against input. But the COMPTE and ID rules are just parts of other rules. Tagging them as "fragment" seems to do the job by telling ANTLR not to match those rules taken alone. Now, the grammar validates and the generated code compiles.

I'm using a ANTLRStringStream to input a string to be matched against the grammar. Now, when I execute the program, whatever string I may put, I never fall into the RecognitionException exception. I've asked Terrence whether the expression() method was the right method to run the parsing process (since in the ANTLR 3 C# tutorial, the method expr() was used but it's deprecated) but I did not get his reply yet. Note that I also had to change "HIDDEN" to "Hidden" for the code to compile. It seems that the tutorials are not up to date on the website.

Regards,
Mark

> Message du 04/09/12 ? 15h40
> De : "Stefan M?tje"
> A : antlr-interest at antlr.org
> Copie ? : "mark4 at voila.fr"
> Objet : Re: [antlr-interest] Invalid parser generation
>
> Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
> >
> > Thanks for your reply. I didn't understand the difference between
> > lexer rules and parser rules because,
> > in fine, a parser rule will always resolve in a series of lexer
> > rules...
>
> Please don't mix the lexer and the parser phase in your mind. The lexer
> deals with single characters and groups them into tokens.
>
> The parser doesn't know anything about single characters and deals only
> with tokens.
>
> > Anyway, I applied the modification but I now get an error:
> >
> > COMPTE : ('0'..'9')+;
> >
> > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> >
> > The following token definitions can never be matched because prior
> > tokens match the same input: COMPTE,ID
>
> You have rules in your grammar before COMPTE and ID that define a
> superset of the character sequences that COMPTE and ID can match.
>
> > Well, I have several entities in my grammar that have different
> > encoding forms, so how can I specify them one after the other?
>
> If at the end one type of token should be produced all needed
> regular expressions have to go into one rule.
>
> > Thanks,
> > Mark
> >
>
> As rule of thumb write the most specific lexer rules first and then
> follow them with the less specific rules. The lexer will give the
> rules first written a higher precedence.
>
> So put your keywords first (which are fixed strings). Then follow them
> with something like operators (also fixed strings). At the lower level
> rules that can match different strings like ID and COMPTE follow.
>
> See what Antlrworks tells you about multiple matches and which rules are
> involved.
>
> Don't know if this may help but the rule that matches both COMPTE and ID
> would be most interesting.
>
> Best regards,
> Stefan
>
> PS.: Please reply also to the list.
>
>

___________________________________________________________
Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html

From mike at lischke-online.de  Tue Sep  4 07:21:04 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Tue, 4 Sep 2012 16:21:04 +0200
Subject: [antlr-interest] Multiline comment vs MySQL version comment
Message-ID: <EE80BE98-0A03-41C1-BDAB-931C18033613@lischke-online.de>

Hi group,

doing final touches on my new MySQL grammar I thought it would be time to attack this dreaded problem. Parsing a C like multi line comment is a standard task, however MySQL supports this special form of such a comment:

/*!12345 text */

The number is checked against the current server on which this query runs and if it is >= the current number the comment delimiters are simply removed and the lexer returns "text" as if there were never any comment delimiters. This goes so far that you even can have one level of comment nesting like

/*!12345 text /* text */ text */

which would be valid given the version number fits (which is always 5 digits long, btw).

The (Bison based) MySQL server parser solves this problem in the handwritten lexer (<sigh>) and simply jumps over the version introducer and keeps a flag to know when to ignore the final '*/'. I would like to solve this however in the grammar if this is at all possible. I'm aware that this is not context-free. However I could probably use an action/predicate to do such a check of the number.

Has anyone solved this problem already somehow? How would I write the lexer rule(s) to get the embedded text to parse normally or ignore it entirely like with any multiline comment, depending on the version number.

Any hints are really appreciated,

Mike
-- 
www.soft-gems.net



Mike
-- 
www.soft-gems.net


From jimi at temporal-wave.com  Tue Sep  4 11:32:49 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 4 Sep 2012 11:32:49 -0700
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <1780947215.262901346767207575.JavaMail.www@wwinf7145>
References: <5046046F.8000705@esd-electronics.com>
	<1780947215.262901346767207575.JavaMail.www@wwinf7145>
Message-ID: <394d8298d1a60a69faf45eed5326ca7e@mail.gmail.com>

Please don't email people directly - always use the list. Terence does not
have the time to answer generic questions about your grammar I am afraid,
unless you want to pay him :)

You really need to start by running all the example grammars until you
understand them, and reading the tutorials in the wiki.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of mark4 at voila.fr
> Sent: Tuesday, September 04, 2012 7:00 AM
> To: Stefan M?tje; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Invalid parser generation
>
> Hi Stefan,
>
> Thanks for the info. The antlr.org website is down, so I couldn't delve
> into details about lexer and parser rules. What I understood from
> trials and errors is that ALL the lexer rules that are placed into the
> grammar are matched against input. But the COMPTE and ID rules are just
> parts of other rules. Tagging them as "fragment" seems to do the job by
> telling ANTLR not to match those rules taken alone. Now, the grammar
> validates and the generated code compiles.
>
> I'm using a ANTLRStringStream to input a string to be matched against
> the grammar. Now, when I execute the program, whatever string I may
> put, I never fall into the RecognitionException exception. I've asked
> Terrence whether the expression() method was the right method to run
> the parsing process (since in the ANTLR 3 C# tutorial, the method
> expr() was used but it's deprecated) but I did not get his reply yet.
> Note that I also had to change "HIDDEN" to "Hidden" for the code to
> compile. It seems that the tutorials are not up to date on the website.
>
> Regards,
> Mark
>
> > Message du 04/09/12 ? 15h40
> > De : "Stefan M?tje"
> > A : antlr-interest at antlr.org
> > Copie ? : "mark4 at voila.fr"
> > Objet : Re: [antlr-interest] Invalid parser generation
> >
> > Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
> > >
> > > Thanks for your reply. I didn't understand the difference between
> > > lexer rules and parser rules because, in fine, a parser rule will
> > > always resolve in a series of lexer rules...
> >
> > Please don't mix the lexer and the parser phase in your mind. The
> > lexer deals with single characters and groups them into tokens.
> >
> > The parser doesn't know anything about single characters and deals
> > only with tokens.
> >
> > > Anyway, I applied the modification but I now get an error:
> > >
> > > COMPTE : ('0'..'9')+;
> > >
> > > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> > >
> > > The following token definitions can never be matched because prior
> > > tokens match the same input: COMPTE,ID
> >
> > You have rules in your grammar before COMPTE and ID that define a
> > superset of the character sequences that COMPTE and ID can match.
> >
> > > Well, I have several entities in my grammar that have different
> > > encoding forms, so how can I specify them one after the other?
> >
> > If at the end one type of token should be produced all needed regular
> > expressions have to go into one rule.
> >
> > > Thanks,
> > > Mark
> > >
> >
> > As rule of thumb write the most specific lexer rules first and then
> > follow them with the less specific rules. The lexer will give the
> > rules first written a higher precedence.
> >
> > So put your keywords first (which are fixed strings). Then follow
> them
> > with something like operators (also fixed strings). At the lower
> level
> > rules that can match different strings like ID and COMPTE follow.
> >
> > See what Antlrworks tells you about multiple matches and which rules
> > are involved.
> >
> > Don't know if this may help but the rule that matches both COMPTE and
> > ID would be most interesting.
> >
> > Best regards,
> > Stefan
> >
> > PS.: Please reply also to the list.
> >
> >
>
> ___________________________________________________________
> Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr
> http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-
> delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mark4 at voila.fr  Tue Sep  4 12:14:34 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Tue, 4 Sep 2012 21:14:34 +0200 (CEST)
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <394d8298d1a60a69faf45eed5326ca7e@mail.gmail.com>
Message-ID: <1110430768.305221346786074748.JavaMail.www@wwinf7143>

I'm sorry, last time I replied to Stefan, I forgot to use "Reply to all".

Of course I've read many of your tutorials, but the problem is that they are not up to date. I guess that highlighting the points that need to be updated will help you bring the modifications. If I e-mailed Terence, it was because the link to the ANTLR package in the ANTLR 3 C# tutorial was not pointing to the right file and there were missing libraries... I'm adding that your tutorials are not written for beginners.

Currently, I'm struggling to get the AST from the Parser class, the method getAST() does not seem to exist anymore. The wiki is up again, so I could have a look at this tutorial:
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
It seems that it's working differently in ANTLR 3:

PolyParser.poly_return r = parser.poly();
System.out.println("tree="+((Tree)r.tree).toStringTree());

But what does this method poly() mean? You don't explain it in this tutorial...

> Message du 04/09/12 ? 20h33
> De : "Jim Idle"
> A : antlr-interest at antlr.org
> Copie ? :
> Objet : Re: [antlr-interest] Invalid parser generation
>
> Please don't email people directly - always use the list. Terence does not have the time to answer generic questions about your grammar I am afraid, unless you want to pay him :) You really need to start by running all the example grammars until you understand them, and reading the tutorials in the wiki. Jim > -----Original Message----- > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- > bounces at antlr.org] On Behalf Of mark4 at voila.fr > Sent: Tuesday, September 04, 2012 7:00 AM > To: Stefan M?tje; antlr-interest at antlr.org > Subject: Re: [antlr-interest] Invalid parser generation > > Hi Stefan, > > Thanks for the info. The antlr.org website is down, so I couldn't delve > into details about lexer and parser rules. What I understood from > trials and errors is that ALL the lexer rules that are placed into the > grammar are matched against input. But the COMPTE and ID rules are just > parts of other rules. Tagging them as "fragment" seems to do the job by > telling ANTLR not to match those rules taken alone. Now, the grammar > validates and the generated code compiles. > > I'm using a ANTLRStringStream to input a string to be matched against > the grammar. Now, when I execute the program, whatever string I may > put, I never fall into the RecognitionException exception. I've asked > Terrence whether the expression() method was the right method to run > the parsing process (since in the ANTLR 3 C# tutorial, the method > expr() was used but it's deprecated) but I did not get his reply yet. > Note that I also had to change "HIDDEN" to "Hidden" for the code to > compile. It seems that the tutorials are not up to date on the website. > > Regards, > Mark > > > Message du 04/09/12 ? 15h40 > > De : "Stefan M?tje" > > A : antlr-interest at antlr.org > > Copie ? : "mark4 at voila.fr" > > Objet : Re: [antlr-interest] Invalid parser generation > > > > Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan, > > > > > > Thanks for your reply. I didn't understand the difference between > > > lexer rules and parser rules because, in fine, a parser rule will > > > always resolve in a series of lexer rules... > > > > Please don't mix the lexer and the parser phase in your mind. The > > lexer deals with single characters and groups them into tokens. > > > > The parser doesn't know anything about single characters and deals > > only with tokens. > > > > > Anyway, I applied the modification but I now get an error: > > > > > > COMPTE : ('0'..'9')+; > > > > > > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ; > > > > > > The following token definitions can never be matched because prior > > > tokens match the same input: COMPTE,ID > > > > You have rules in your grammar before COMPTE and ID that define a > > superset of the character sequences that COMPTE and ID can match. > > > > > Well, I have several entities in my grammar that have different > > > encoding forms, so how can I specify them one after the other? > > > > If at the end one type of token should be produced all needed regular > > expressions have to go into one rule. > > > > > Thanks, > > > Mark > > > > > > > As rule of thumb write the most specific lexer rules first and then > > follow them with the less specific rules. The lexer will give the > > rules first written a higher precedence. > > > > So put your keywords first (which are fixed strings). Then follow > them > > with something like operators (also fixed strings). At the lower > level > > rules that can match different strings like ID and COMPTE follow. > > > > See what Antlrworks tells you about multiple matches and which rules > > are involved. > > > > Don't know if this may help but the rule that matches both COMPTE and > > ID would be most interesting. > > > > Best regards, > > Stefan > > > > PS.: Please reply also to the list. > > > > > > ___________________________________________________________ > Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr > http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc- > delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html > > List: http://www.antlr.org/mailman/listinfo/antlr-interest > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your- > email-address List: http://www.antlr.org/mailman/listinfo/antlr-interest Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

___________________________________________________________
Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html

From jmcgrew at hansprestige.com  Tue Sep  4 12:21:58 2012
From: jmcgrew at hansprestige.com (Jesse McGrew)
Date: Tue, 4 Sep 2012 12:21:58 -0700
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <1110430768.305221346786074748.JavaMail.www@wwinf7143>
References: <394d8298d1a60a69faf45eed5326ca7e@mail.gmail.com>
	<1110430768.305221346786074748.JavaMail.www@wwinf7143>
Message-ID: <CAJ3AhhXBkvsSmr4KmY4Cy=OYYDmxVTej3ZFnL-gFjg143LVtKw@mail.gmail.com>

"poly" is the name of a parser rule. Each parser rule becomes a
method. To invoke the parser from your own code, there's no single
entry point (like there is with yacc); you decide which rule you want
to use as the entry point and then call it.

Jesse

On Tue, Sep 4, 2012 at 12:14 PM, mark4 at voila.fr <mark4 at voila.fr> wrote:
> I'm sorry, last time I replied to Stefan, I forgot to use "Reply to all".
>
> Of course I've read many of your tutorials, but the problem is that they are not up to date. I guess that highlighting the points that need to be updated will help you bring the modifications. If I e-mailed Terence, it was because the link to the ANTLR package in the ANTLR 3 C# tutorial was not pointing to the right file and there were missing libraries... I'm adding that your tutorials are not written for beginners.
>
> Currently, I'm struggling to get the AST from the Parser class, the method getAST() does not seem to exist anymore. The wiki is up again, so I could have a look at this tutorial:
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> It seems that it's working differently in ANTLR 3:
>
> PolyParser.poly_return r = parser.poly();
> System.out.println("tree="+((Tree)r.tree).toStringTree());
>
> But what does this method poly() mean? You don't explain it in this tutorial...
>
>> Message du 04/09/12 ? 20h33
>> De : "Jim Idle"
>> A : antlr-interest at antlr.org
>> Copie ? :
>> Objet : Re: [antlr-interest] Invalid parser generation
>>
>> Please don't email people directly - always use the list. Terence does not have the time to answer generic questions about your grammar I am afraid, unless you want to pay him :) You really need to start by running all the example grammars until you understand them, and reading the tutorials in the wiki. Jim > -----Original Message----- > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- > bounces at antlr.org] On Behalf Of mark4 at voila.fr > Sent: Tuesday, September 04, 2012 7:00 AM > To: Stefan M?tje; antlr-interest at antlr.org > Subject: Re: [antlr-interest] Invalid parser generation > > Hi Stefan, > > Thanks for the info. The antlr.org website is down, so I couldn't delve > into details about lexer and parser rules. What I understood from > trials and errors is that ALL the lexer rules that are placed into the > grammar are matched against input. But the COMPTE and ID rules are just > parts of other rules. Tagging them as "fragment" seems to do the job by > telling ANTLR not to match those rules taken alone. Now, the grammar > validates and the generated code compiles. > > I'm using a ANTLRStringStream to input a string to be matched against > the grammar. Now, when I execute the program, whatever string I may > put, I never fall into the RecognitionException exception. I've asked > Terrence whether the expression() method was the right method to run > the parsing process (since in the ANTLR 3 C# tutorial, the method > expr() was used but it's deprecated) but I did not get his reply yet. > Note that I also had to change "HIDDEN" to "Hidden" for the code to > compile. It seems that the tutorials are not up to date on the website. > > Regards, > Mark > > > Message du 04/09/12 ? 15h40 > > De : "Stefan M?tje" > > A : antlr-interest at antlr.org > > Copie ? : "mark4 at voila.fr" > > Objet : Re: [antlr-interest] Invalid parser generation > > > > Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan, > > > > > > Thanks for your reply. I didn't understand the difference between > > > lexer rules and parser rules because, in fine, a parser rule will > > > always resolve in a series of lexer rules... > > > > Please don't mix the lexer and the parser phase in your mind. The > > lexer deals with single characters and groups them into tokens. > > > > The parser doesn't know anything about single characters and deals > > only with tokens. > > > > > Anyway, I applied the modification but I now get an error: > > > > > > COMPTE : ('0'..'9')+; > > > > > > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ; > > > > > > The following token definitions can never be matched because prior > > > tokens match the same input: COMPTE,ID > > > > You have rules in your grammar before COMPTE and ID that define a > > superset of the character sequences that COMPTE and ID can match. > > > > > Well, I have several entities in my grammar that have different > > > encoding forms, so how can I specify them one after the other? > > > > If at the end one type of token should be produced all needed regular > > expressions have to go into one rule. > > > > > Thanks, > > > Mark > > > > > > > As rule of thumb write the most specific lexer rules first and then > > follow them with the less specific rules. The lexer will give the > > rules first written a higher precedence. > > > > So put your keywords first (which are fixed strings). Then follow > them > > with something like operators (also fixed strings). At the lower > level > > rules that can match different strings like ID and COMPTE follow. > > > > See what Antlrworks tells you about multiple matches and which rules > > are involved. > > > > Don't know if this may help but the rule that matches both COMPTE and > > ID would be most interesting. > > > > Best regards, > > Stefan > > > > PS.: Please reply also to the list. > > > > > > ___________________________________________________________ > Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr > http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc- > delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html > > List: http://www.antlr.org/mailman/listinfo/antlr-interest > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your- > email-address List: http://www.antlr.org/mailman/listinfo/antlr-interest Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> ___________________________________________________________
> Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mark4 at voila.fr  Tue Sep  4 13:12:24 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Tue, 4 Sep 2012 22:12:24 +0200 (CEST)
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <CAJ3AhhXBkvsSmr4KmY4Cy=OYYDmxVTej3ZFnL-gFjg143LVtKw@mail.gmail.com>
Message-ID: <2106495530.317271346789544923.JavaMail.www@wwinf7143>

Thank ou very much, Jesse, for the explanation.

The main rule is called with the method expression(), right? I need to get the AST from the parser in C#.

I can't find the C# reference for the classe parser, I guess the reference is still under development:
http://www.antlr.org/api/index.html

> Message du 04/09/12 ? 21h22
> De : "Jesse McGrew"
> A : antlr-interest at antlr.org
> Copie ? :
> Objet : Re: [antlr-interest] Invalid parser generation
>
> "poly" is the name of a parser rule. Each parser rule becomes a
> method. To invoke the parser from your own code, there's no single
> entry point (like there is with yacc); you decide which rule you want
> to use as the entry point and then call it.
>
> Jesse
>
> On Tue, Sep 4, 2012 at 12:14 PM, mark4 at voila.fr wrote:
> > I'm sorry, last time I replied to Stefan, I forgot to use "Reply to all".
> >
> > Of course I've read many of your tutorials, but the problem is that they are not up to date. I guess that highlighting the points that need to be updated will help you bring the modifications. If I e-mailed Terence, it was because the link to the ANTLR package in the ANTLR 3 C# tutorial was not pointing to the right file and there were missing libraries... I'm adding that your tutorials are not written for beginners.
> >
> > Currently, I'm struggling to get the AST from the Parser class, the method getAST() does not seem to exist anymore. The wiki is up again, so I could have a look at this tutorial:
> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> > It seems that it's working differently in ANTLR 3:
> >
> > PolyParser.poly_return r = parser.poly();
> > System.out.println("tree="+((Tree)r.tree).toStringTree());
> >
> > But what does this method poly() mean? You don't explain it in this tutorial...
> >
> >> Message du 04/09/12 ? 20h33
> >> De : "Jim Idle"
> >> A : antlr-interest at antlr.org
> >> Copie ? :
> >> Objet : Re: [antlr-interest] Invalid parser generation
> >>
> >> Please don't email people directly - always use the list. Terence does not have the time to answer generic questions about your grammar I am afraid, unless you want to pay him :) You really need to start by running all the example grammars until you understand them, and reading the tutorials in the wiki. Jim > -----Original Message----- > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- > bounces at antlr.org] On Behalf Of mark4 at voila.fr > Sent: Tuesday, September 04, 2012 7:00 AM > To: Stefan M?tje; antlr-interest at antlr.org > Subject: Re: [antlr-interest] Invalid parser generation > > Hi Stefan, > > Thanks for the info. The antlr.org website is down, so I couldn't delve > into details about lexer and parser rules. What I understood from > trials and errors is that ALL the lexer rules that are placed into the > grammar are matched against input. But the COMPTE and ID rules are just > parts of other rules. Tagging them as "fragment" seems to do the job by > telling ANTLR not to match those rules taken alone. Now, the grammar > validates and the generated code compiles. > > I'm using a ANTLRStringStream to input a string to be matched against > the grammar. Now, when I execute the program, whatever string I may > put, I never fall into the RecognitionException exception. I've asked > Terrence whether the expression() method was the right method to run > the parsing process (since in the ANTLR 3 C# tutorial, the method > expr() was used but it's deprecated) but I did not get his reply yet. > Note that I also had to change "HIDDEN" to "Hidden" for the code to > compile. It seems that the tutorials are not up to date on the website. > > Regards, > Mark > > > Message du 04/09/12 ? 15h40 > > De : "Stefan M?tje" > > A : antlr-interest at antlr.org > > Copie ? : "mark4 at voila.fr" > > Objet : Re: [antlr-interest] Invalid parser generation > > > > Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan, > > > > > > Thanks for your reply. I didn't understand the difference between > > > lexer rules and parser rules because, in fine, a parser rule will > > > always resolve in a series of lexer rules... > > > > Please don't mix the lexer and the parser phase in your mind. The > > lexer deals with single characters and groups them into tokens. > > > > The parser doesn't know anything about single characters and deals > > only with tokens. > > > > > Anyway, I applied the modification but I now get an error: > > > > > > COMPTE : ('0'..'9')+; > > > > > > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ; > > > > > > The following token definitions can never be matched because prior > > > tokens match the same input: COMPTE,ID > > > > You have rules in your grammar before COMPTE and ID that define a > > superset of the character sequences that COMPTE and ID can match. > > > > > Well, I have several entities in my grammar that have different > > > encoding forms, so how can I specify them one after the other? > > > > If at the end one type of token should be produced all needed regular > > expressions have to go into one rule. > > > > > Thanks, > > > Mark > > > > > > > As rule of thumb write the most specific lexer rules first and then > > follow them with the less specific rules. The lexer will give the > > rules first written a higher precedence. > > > > So put your keywords first (which are fixed strings). Then follow > them > > with something like operators (also fixed strings). At the lower > level > > rules that can match different strings like ID and COMPTE follow. > > > > See what Antlrworks tells you about multiple matches and which rules > > are involved. > > > > Don't know if this may help but the rule that matches both COMPTE and > > ID would be most interesting. > > > > Best regards, > > Stefan > > > > PS.: Please reply also to the list. > > > > > > ___________________________________________________________ > Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr > http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc- > delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html > > List: http://www.antlr.org/mailman/listinfo/antlr-interest > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your- > email-address List: http://www.antlr.org/mailman/listinfo/antlr-interest Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> > ___________________________________________________________
> > Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

___________________________________________________________
Quand Jean-Luc Delarue parlait de son grand amour? ? lire sur Voila.fr http://people.voila.fr/people/actu-stars/personnalites/quand-jean-luc-delarue-parlait-d-anissa-kehl-son-grand-amour-people_8397.html

From costa_basil at yahoo.ca  Tue Sep  4 14:35:39 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Tue, 4 Sep 2012 14:35:39 -0700 (PDT)
Subject: [antlr-interest] How to reference a CommonTree in an action
Message-ID: <1346794539.92286.YahooMailNeo@web162303.mail.bf1.yahoo.com>

Iin the following rule (expr), how can I get a reference to the? ^(FUNCTION_CALL $id (exprList)?) node?

options {
??? language=CSharp3;
? output = AST;
? ASTLabelType=FormulaAstNode;?? 
}
...
expr

@init {? 
}
??? : (ID '(') => 
??????? id=ID '(' (exprList)? ')' -> ^(FUNCTION_CALL $id (exprList)?)? /* Here I would like to have an action that references the FUNCTION_CALL node and that sets some custom properties. Something like this: {$fc.tree.SomeProperty = true;}? where SomeProperty is a member of FormulaAstNode and $fc points to ^(FUNCTION_CALL? ...) */
??? | ID 
??? | INT 
??? | '(' expr ')' -> expr
??? ;?

Writing: fc=^(FUNCTION_CALL $id (exprList)?) doesn't seem to work.


I searched the existing code that gets distributed with antlr-3.4 and the closed I found is this (from antlrv3.g):

ebnf
@init {
??? IToken firstToken = input.LT(1);
}
@after {
??? $ebnf.tree.Token.Line = firstToken.Line;
??? $ebnf.tree.Token.CharPositionInLine = firstToken.CharPositionInLine;
}
??? :??? block
??? ??? (??? op='?'??? -> ^(OPTIONAL[op] block)
??? ??? |??? op='*'??? -> ^(CLOSURE[op] block)
??? ??? |??? op='+'??? -> ^(POSITIVE_CLOSURE[op] block)
??? ??? |?? '=>'??? // syntactic predicate
??? ??? ??? ??? ??? -> {gtype==COMBINED_GRAMMAR &&
??? ??? ??? ??? ??? ??? Char.IsUpper($rule::name[0])}?
??? ??? ??? ??? ??? ?? // if lexer rule in combined, leave as pred for lexer
??? ??? ??? ??? ??? ?? ^(SYNPRED["=>"] block)
??? ??? ??? ??? ??? // in real antlr tool, text for SYN_SEMPRED is predname
??? ??? ??? ??? ??? -> SYN_SEMPRED
??????? |??? ??? ??? -> block
??? ??? )
??? ;


The node created is referenced via $<ruleName>.tree. I think this would ultimately work, but I was curious if there is another way?

Thank you,
Costa

From umesh.kalappa0 at gmail.com  Tue Sep  4 23:10:27 2012
From: umesh.kalappa0 at gmail.com (Umesh Kalappa)
Date: Wed, 5 Sep 2012 11:40:27 +0530
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
Message-ID: <CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>

Hi Group ,

This is regrading about the  new feature that ANTLR v3 introduced called
 LL(*) Parsing i.e


Natural grammars are sometimes not LL(k) for any fixed k even if the k is
usually small; e.g. C function declarations vs definitions. From the left
edge, the lookahead is not fixed to see the ';' vs '{' to distinguish the
cases:

func : type ID '(' arg* ')' ';'
     | type ID '(' arg* ')' '{' body '}'
     ;
We need arbitrary lookahead because of the arg*. If you have actions at ID,
you can't easily refactor. The lookahead will be 5<=k<=10 usually for this
decision.

Here ,in the above example ,i can left factor out the grammar then using
LL(*) , which is more efficient like

func : type ID '(' arg* ')' funcelse
     ;
funcelse:';'| {' body '}'
     ;

Any inputs regrading this ??

Thanks
~Umesh

From jmcgrew at gmail.com  Tue Sep  4 23:44:22 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Tue, 4 Sep 2012 23:44:22 -0700
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
	<CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
Message-ID: <CAJ3AhhVbc3zdTKYD-C41qFvC62dTXs7Z+rTyZkbeDOPK+BxTiQ@mail.gmail.com>

As it says, "If you have actions at ID, you can't easily refactor."

Consider this version of the original with actions added:

func : type ID {System.out.writeln("A");} '(' arg* ')' ';'
     | type ID {System.out.writeln("B");} '(' arg* ')' '{' body '}'
     ;

How would you implement those actions in your left-factored version?
Moving them to after the arg* might not be acceptable.

Jesse

On Tue, Sep 4, 2012 at 11:10 PM, Umesh Kalappa <umesh.kalappa0 at gmail.com> wrote:
> Hi Group ,
>
> This is regrading about the  new feature that ANTLR v3 introduced called
>  LL(*) Parsing i.e
>
>
> Natural grammars are sometimes not LL(k) for any fixed k even if the k is
> usually small; e.g. C function declarations vs definitions. From the left
> edge, the lookahead is not fixed to see the ';' vs '{' to distinguish the
> cases:
>
> func : type ID '(' arg* ')' ';'
>      | type ID '(' arg* ')' '{' body '}'
>      ;
> We need arbitrary lookahead because of the arg*. If you have actions at ID,
> you can't easily refactor. The lookahead will be 5<=k<=10 usually for this
> decision.
>
> Here ,in the above example ,i can left factor out the grammar then using
> LL(*) , which is more efficient like
>
> func : type ID '(' arg* ')' funcelse
>      ;
> funcelse:';'| {' body '}'
>      ;
>
> Any inputs regrading this ??
>
> Thanks
> ~Umesh
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Abhay.Chaware at kpitcummins.com  Tue Sep  4 23:54:38 2012
From: Abhay.Chaware at kpitcummins.com (Abhay B. Chaware)
Date: Wed, 5 Sep 2012 06:54:38 +0000
Subject: [antlr-interest] LotusScript / formula Grammar
Message-ID: <97EC5C569F10AB48982080D69E0FCD163D38705C@KCHJEXMB03.kpit.com>

Hi All
Has anyone taken a stab at writing grammar for lotus script and formula languages ?  Any starting points/references would be really helpful !
Thanks
Abhay


From umesh.kalappa0 at gmail.com  Wed Sep  5 00:00:40 2012
From: umesh.kalappa0 at gmail.com (Umesh Kalappa)
Date: Wed, 5 Sep 2012 12:30:40 +0530
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAJ3AhhVbc3zdTKYD-C41qFvC62dTXs7Z+rTyZkbeDOPK+BxTiQ@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
	<CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
	<CAJ3AhhVbc3zdTKYD-C41qFvC62dTXs7Z+rTyZkbeDOPK+BxTiQ@mail.gmail.com>
Message-ID: <CAGfacvTm5_kczwgkL2g-dJgZ5u3gNYCyGpKX-Qg=1NHSak-s5g@mail.gmail.com>

Hi jesse,

Just wondering in this case then ,Could i say that LL(*) = LALR(*) ?????

Thanks
~Umesh


On Wed, Sep 5, 2012 at 12:14 PM, Jesse McGrew <jmcgrew at gmail.com> wrote:

> As it says, "If you have actions at ID, you can't easily refactor."
>
> Consider this version of the original with actions added:
>
> func : type ID {System.out.writeln("A");} '(' arg* ')' ';'
>      | type ID {System.out.writeln("B");} '(' arg* ')' '{' body '}'
>      ;
>
> How would you implement those actions in your left-factored version?
> Moving them to after the arg* might not be acceptable.
>
> Jesse
>
> On Tue, Sep 4, 2012 at 11:10 PM, Umesh Kalappa <umesh.kalappa0 at gmail.com>
> wrote:
> > Hi Group ,
> >
> > This is regrading about the  new feature that ANTLR v3 introduced called
> >  LL(*) Parsing i.e
> >
> >
> > Natural grammars are sometimes not LL(k) for any fixed k even if the k is
> > usually small; e.g. C function declarations vs definitions. From the left
> > edge, the lookahead is not fixed to see the ';' vs '{' to distinguish the
> > cases:
> >
> > func : type ID '(' arg* ')' ';'
> >      | type ID '(' arg* ')' '{' body '}'
> >      ;
> > We need arbitrary lookahead because of the arg*. If you have actions at
> ID,
> > you can't easily refactor. The lookahead will be 5<=k<=10 usually for
> this
> > decision.
> >
> > Here ,in the above example ,i can left factor out the grammar then using
> > LL(*) , which is more efficient like
> >
> > func : type ID '(' arg* ')' funcelse
> >      ;
> > funcelse:';'| {' body '}'
> >      ;
> >
> > Any inputs regrading this ??
> >
> > Thanks
> > ~Umesh
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Sep  5 02:02:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 5 Sep 2012 02:02:01 -0700
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
	<CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
Message-ID: <1e87440e69b1e9bc356c4754d2bad003@mail.gmail.com>

Well, would you care to actually ask a question?


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Umesh Kalappa
> Sent: Tuesday, September 04, 2012 11:10 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Why i need to use LL(*) ????
>
> Hi Group ,
>
> This is regrading about the  new feature that ANTLR v3 introduced
> called
>  LL(*) Parsing i.e
>
>
> Natural grammars are sometimes not LL(k) for any fixed k even if the k
> is usually small; e.g. C function declarations vs definitions. From the
> left edge, the lookahead is not fixed to see the ';' vs '{' to
> distinguish the
> cases:
>
> func : type ID '(' arg* ')' ';'
>      | type ID '(' arg* ')' '{' body '}'
>      ;
> We need arbitrary lookahead because of the arg*. If you have actions at
> ID, you can't easily refactor. The lookahead will be 5<=k<=10 usually
> for this decision.
>
> Here ,in the above example ,i can left factor out the grammar then
> using
> LL(*) , which is more efficient like
>
> func : type ID '(' arg* ')' funcelse
>      ;
> funcelse:';'| {' body '}'
>      ;
>
> Any inputs regrading this ??
>
> Thanks
> ~Umesh
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Sep  5 02:02:42 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 5 Sep 2012 02:02:42 -0700
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAGfacvTm5_kczwgkL2g-dJgZ5u3gNYCyGpKX-Qg=1NHSak-s5g@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
	<CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
	<CAJ3AhhVbc3zdTKYD-C41qFvC62dTXs7Z+rTyZkbeDOPK+BxTiQ@mail.gmail.com>
	<CAGfacvTm5_kczwgkL2g-dJgZ5u3gNYCyGpKX-Qg=1NHSak-s5g@mail.gmail.com>
Message-ID: <fb968849e4cc62e8f93e832e55d7b2d6@mail.gmail.com>

No

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Umesh Kalappa
> Sent: Wednesday, September 05, 2012 12:01 AM
> To: Jesse McGrew
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why i need to use LL(*) ????
>
> Hi jesse,
>
> Just wondering in this case then ,Could i say that LL(*) = LALR(*)
> ?????
>
> Thanks
> ~Umesh
>
>
> On Wed, Sep 5, 2012 at 12:14 PM, Jesse McGrew <jmcgrew at gmail.com>
> wrote:
>
> > As it says, "If you have actions at ID, you can't easily refactor."
> >
> > Consider this version of the original with actions added:
> >
> > func : type ID {System.out.writeln("A");} '(' arg* ')' ';'
> >      | type ID {System.out.writeln("B");} '(' arg* ')' '{' body '}'
> >      ;
> >
> > How would you implement those actions in your left-factored version?
> > Moving them to after the arg* might not be acceptable.
> >
> > Jesse
> >
> > On Tue, Sep 4, 2012 at 11:10 PM, Umesh Kalappa
> > <umesh.kalappa0 at gmail.com>
> > wrote:
> > > Hi Group ,
> > >
> > > This is regrading about the  new feature that ANTLR v3 introduced
> > > called
> > >  LL(*) Parsing i.e
> > >
> > >
> > > Natural grammars are sometimes not LL(k) for any fixed k even if
> the
> > > k is usually small; e.g. C function declarations vs definitions.
> > > From the left edge, the lookahead is not fixed to see the ';' vs
> '{'
> > > to distinguish the
> > > cases:
> > >
> > > func : type ID '(' arg* ')' ';'
> > >      | type ID '(' arg* ')' '{' body '}'
> > >      ;
> > > We need arbitrary lookahead because of the arg*. If you have
> actions
> > > at
> > ID,
> > > you can't easily refactor. The lookahead will be 5<=k<=10 usually
> > > for
> > this
> > > decision.
> > >
> > > Here ,in the above example ,i can left factor out the grammar then
> > > using
> > > LL(*) , which is more efficient like
> > >
> > > func : type ID '(' arg* ')' funcelse
> > >      ;
> > > funcelse:';'| {' body '}'
> > >      ;
> > >
> > > Any inputs regrading this ??
> > >
> > > Thanks
> > > ~Umesh
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From apalala at gmail.com  Wed Sep  5 06:16:29 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Wed, 5 Sep 2012 08:46:29 -0430
Subject: [antlr-interest] Why i need to use LL(*) ????
In-Reply-To: <CAGfacvTm5_kczwgkL2g-dJgZ5u3gNYCyGpKX-Qg=1NHSak-s5g@mail.gmail.com>
References: <CAGfacvQP1GQDOmuSr2S335_aDJeskKXtWunCUBxFXaywaj_L3Q@mail.gmail.com>
	<CAGfacvS3S=7MZVEzTmyFcufmuuGi8_Ua4Cb4pFt24fSYEW+aCQ@mail.gmail.com>
	<CAJ3AhhVbc3zdTKYD-C41qFvC62dTXs7Z+rTyZkbeDOPK+BxTiQ@mail.gmail.com>
	<CAGfacvTm5_kczwgkL2g-dJgZ5u3gNYCyGpKX-Qg=1NHSak-s5g@mail.gmail.com>
Message-ID: <CAN1YFWs8EHT8mPAcoVPNOoP923eugpXFYSAFa249s5qi6Qw+sw@mail.gmail.com>

On Wed, Sep 5, 2012 at 2:30 AM, Umesh Kalappa <umesh.kalappa0 at gmail.com>wrote:

> Just wondering in this case then ,Could i say that LL(*) = LALR(*) ?????
>

That is a theoretical question that doesn't help much on the practice of
building useful parsers.

The answer is LR > LL.

But it is common knowledge that LR is too difficult to work with when
compared with LL implemented as top-down with lookahead and/or backtracking.

-- 
Juancarlo *A?ez*

From gbonnema at xs4all.nl  Thu Sep  6 01:58:59 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Thu, 6 Sep 2012 10:58:59 +0200
Subject: [antlr-interest] if statement troubles
Message-ID: <20120906105859.47e9313f@mahatma>


Hi All,

When interpreting an if-statement for a simple language I found that my
approach for executing the statement block had weird results. When
debugging in Netscape I found that input.index() always returns zero. I
am probably doing something wrong. My intention is to parse the
if-statement first and interprete the statement block according to the
condition.

Could anyone point me in the right direction? What am I doing wrong?

The source copied below is part of a tree grammar that reads the
following tree:

(X (SLIST (VAR int i = (UNAIR - 1)) (if (> 2 0) (SLIST (= i 1)))))

<QUOTE>
if_statement    // options {backtrack=true;}
	@init {int s_index=0; int el_index=0;} 
:               ^(IF b=boolexpr {s_index = input.index();} s=.
                             {el_index = input.index();} el=.?) 
{       int next = input.index(); 
        if ($b.value) {
           input.seek(s_index);
           statement_block();
        } else if ($el!=null) { 
	   input.seek(el_index);
           statement_block();
        }
        input.seek(next);
}
;
</QUOTE>

P.S. I copied this solution from somewhere in Markmail, but must have
missed something.

Kind regards, Guus Bonnema.

From mark4 at voila.fr  Thu Sep  6 02:44:20 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Thu, 6 Sep 2012 11:44:20 +0200 (CEST)
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <5046046F.8000705@esd-electronics.com>
Message-ID: <509159996.218291346924660754.JavaMail.www@wwinf7117>

Hi Stefan,

I wanted to revert to your post. You recommended to put the most specific lexer rules first. But how can I do if 2 rules are close, or even identical?

For instance:
DIMENSION : ID;
ITEM : ID;

They automatically generate an error in ANTLR. Of course, this situation seems useless, but in the future, I may modify these rules and make them different. That's the reason why I'd like to distinguish them in the grammar file.

Thanks in advance,
Mark

> Message du 04/09/12 ? 15h40
> De : "Stefan M?tje"
> A : antlr-interest at antlr.org
> Copie ? : "mark4 at voila.fr"
> Objet : Re: [antlr-interest] Invalid parser generation
>
> Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
> >
> > Thanks for your reply. I didn't understand the difference between
> > lexer rules and parser rules because,
> > in fine, a parser rule will always resolve in a series of lexer
> > rules...
>
> Please don't mix the lexer and the parser phase in your mind. The lexer
> deals with single characters and groups them into tokens.
>
> The parser doesn't know anything about single characters and deals only
> with tokens.
>
> > Anyway, I applied the modification but I now get an error:
> >
> > COMPTE : ('0'..'9')+;
> >
> > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> >
> > The following token definitions can never be matched because prior
> > tokens match the same input: COMPTE,ID
>
> You have rules in your grammar before COMPTE and ID that define a
> superset of the character sequences that COMPTE and ID can match.
>
> > Well, I have several entities in my grammar that have different
> > encoding forms, so how can I specify them one after the other?
>
> If at the end one type of token should be produced all needed
> regular expressions have to go into one rule.
>
> > Thanks,
> > Mark
> >
>
> As rule of thumb write the most specific lexer rules first and then
> follow them with the less specific rules. The lexer will give the
> rules first written a higher precedence.
>
> So put your keywords first (which are fixed strings). Then follow them
> with something like operators (also fixed strings). At the lower level
> rules that can match different strings like ID and COMPTE follow.
>
> See what Antlrworks tells you about multiple matches and which rules are
> involved.
>
> Don't know if this may help but the rule that matches both COMPTE and ID
> would be most interesting.
>
> Best regards,
> Stefan
>
> PS.: Please reply also to the list.
>
>

___________________________________________________________
10 conseils pour un ventre plat sur Voila.fr http://actu.voila.fr/evenementiel/beaute-minceur/conseils-ventre-plat/

From apalala at gmail.com  Thu Sep  6 05:10:16 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Thu, 6 Sep 2012 07:40:16 -0430
Subject: [antlr-interest] if statement troubles
In-Reply-To: <20120906105859.47e9313f@mahatma>
References: <20120906105859.47e9313f@mahatma>
Message-ID: <CAN1YFWsNYNKd6pfLuH=xkOm9h-4oR6H_+f9Oy4uv-104JbnMSA@mail.gmail.com>

Guus,

Just my humble opinion...

You've obfuscated the grammar with tree-construction and other actions
beyond the point of understanding. I'be been there, and done that.

With the speed of modern computers, there's no need to try to build a one
pass parser/compiler. And if you did want to build such a beast, the clear
way to do it is through delegation to phase-specific grammars.

If I remember correctly, the grammar for parsing LISP-like languages takes
less than a dozen lines of ANTLR. A tree grammar that can stract semantics
out of the AST take about the same, and you still have one pass.

My advice would be to go back to the drawing board with the aim of making
things simpler.

This code transforms an ANTLR AST into a Python list of lists:

def tree_to_list(tree):
    name = tree.getText()
    if not tree.children:
        children = []
    else:
        children = [tree_to_list(c) for c in tree.children]
    return [name] + children


The interpreter dispatches execution based on the first value of each list
using getattr().

FWIW, It doesn't have to hurt.

-- Juanca


On Thu, Sep 6, 2012 at 4:28 AM, Guus Bonnema <gbonnema at xs4all.nl> wrote:

>
> Hi All,
>
> When interpreting an if-statement for a simple language I found that my
> approach for executing the statement block had weird results. When
> debugging in Netscape I found that input.index() always returns zero. I
> am probably doing something wrong. My intention is to parse the
> if-statement first and interprete the statement block according to the
> condition.
>
> Could anyone point me in the right direction? What am I doing wrong?
>
> The source copied below is part of a tree grammar that reads the
> following tree:
>
> (X (SLIST (VAR int i = (UNAIR - 1)) (if (> 2 0) (SLIST (= i 1)))))
>
> <QUOTE>
> if_statement    // options {backtrack=true;}
>         @init {int s_index=0; int el_index=0;}
> :               ^(IF b=boolexpr {s_index = input.index();} s=.
>                              {el_index = input.index();} el=.?)
> {       int next = input.index();
>         if ($b.value) {
>            input.seek(s_index);
>            statement_block();
>         } else if ($el!=null) {
>            input.seek(el_index);
>            statement_block();
>         }
>         input.seek(next);
> }
> ;
> </QUOTE>
>
> P.S. I copied this solution from somewhere in Markmail, but must have
> missed something.
>
> Kind regards, Guus Bonnema.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From jmcgrew at gmail.com  Thu Sep  6 05:54:51 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Thu, 6 Sep 2012 05:54:51 -0700
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <509159996.218291346924660754.JavaMail.www@wwinf7117>
References: <5046046F.8000705@esd-electronics.com>
	<509159996.218291346924660754.JavaMail.www@wwinf7117>
Message-ID: <CAJ3AhhVM-oUM4+5_FucuFWz5mW9HBdRDHN5XfA28EQO4S9Jd6A@mail.gmail.com>

You can't have two lexer rules that match the same input. When the
lexer sees a string like "foo", how is it supposed to know whether it
should return DIMENSION or ITEM (or ID)? You should probably be using
parser rules instead.

Jesse

On Thu, Sep 6, 2012 at 2:44 AM, mark4 at voila.fr <mark4 at voila.fr> wrote:
> Hi Stefan,
>
> I wanted to revert to your post. You recommended to put the most specific lexer rules first. But how can I do if 2 rules are close, or even identical?
>
> For instance:
> DIMENSION : ID;
> ITEM : ID;
>
> They automatically generate an error in ANTLR. Of course, this situation seems useless, but in the future, I may modify these rules and make them different. That's the reason why I'd like to distinguish them in the grammar file.
>
> Thanks in advance,
> Mark
>
>> Message du 04/09/12 ? 15h40
>> De : "Stefan M?tje"
>> A : antlr-interest at antlr.org
>> Copie ? : "mark4 at voila.fr"
>> Objet : Re: [antlr-interest] Invalid parser generation
>>
>> Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
>> >
>> > Thanks for your reply. I didn't understand the difference between
>> > lexer rules and parser rules because,
>> > in fine, a parser rule will always resolve in a series of lexer
>> > rules...
>>
>> Please don't mix the lexer and the parser phase in your mind. The lexer
>> deals with single characters and groups them into tokens.
>>
>> The parser doesn't know anything about single characters and deals only
>> with tokens.
>>
>> > Anyway, I applied the modification but I now get an error:
>> >
>> > COMPTE : ('0'..'9')+;
>> >
>> > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>> >
>> > The following token definitions can never be matched because prior
>> > tokens match the same input: COMPTE,ID
>>
>> You have rules in your grammar before COMPTE and ID that define a
>> superset of the character sequences that COMPTE and ID can match.
>>
>> > Well, I have several entities in my grammar that have different
>> > encoding forms, so how can I specify them one after the other?
>>
>> If at the end one type of token should be produced all needed
>> regular expressions have to go into one rule.
>>
>> > Thanks,
>> > Mark
>> >
>>
>> As rule of thumb write the most specific lexer rules first and then
>> follow them with the less specific rules. The lexer will give the
>> rules first written a higher precedence.
>>
>> So put your keywords first (which are fixed strings). Then follow them
>> with something like operators (also fixed strings). At the lower level
>> rules that can match different strings like ID and COMPTE follow.
>>
>> See what Antlrworks tells you about multiple matches and which rules are
>> involved.
>>
>> Don't know if this may help but the rule that matches both COMPTE and ID
>> would be most interesting.
>>
>> Best regards,
>> Stefan
>>
>> PS.: Please reply also to the list.
>>
>>
>
> ___________________________________________________________
> 10 conseils pour un ventre plat sur Voila.fr http://actu.voila.fr/evenementiel/beaute-minceur/conseils-ventre-plat/
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mark4 at voila.fr  Thu Sep  6 06:11:02 2012
From: mark4 at voila.fr (mark4 at voila.fr)
Date: Thu, 6 Sep 2012 15:11:02 +0200 (CEST)
Subject: [antlr-interest] Invalid parser generation
In-Reply-To: <CAJ3AhhVM-oUM4+5_FucuFWz5mW9HBdRDHN5XfA28EQO4S9Jd6A@mail.gmail.com>
Message-ID: <1028925607.256721346937063019.JavaMail.www@wwinf7117>

But I read that ANTLR gave precedence to the first encountered rule. So, in that case, I supposed it would match a DIMENSION.

Anyway, I have changed:

DIMENSION: ID;

into

dimension : ID;

to remove the issue. What troubles me in ANTLR is the mix of lexer rules and parser rules within the same grammar. I used tools like Lex/Yacc or JLex/CUP and in my memories, the lexer and the parser were separated. So, within the parser, you just had to write what you -expected-, for instance:

myrule : LPAREN DIMENSION RPAREN;

So, the token DIMENSION was scanned ONLY if '(' was found. But within ANTLR, it seems that both parser rules and lexer rules compete at the same time, which make the grammars much trickier to design. At least, it's the way I see it.

Anyway, I still have much difficulty raising ambiguities in my lexer rules because they compete with one another. My grammar compiles, but the built AST shows errors recognizing tokens. Maybe I should only use ID's and check whether the strings are valid within the program...

> Message du 06/09/12 ? 14h54
> De : "Jesse McGrew"
> A : "mark4 at voila.fr"
> Copie ? : "Stefan M?tje" , antlr-interest at antlr.org
> Objet : Re: [antlr-interest] Invalid parser generation
>
> You can't have two lexer rules that match the same input. When the
> lexer sees a string like "foo", how is it supposed to know whether it
> should return DIMENSION or ITEM (or ID)? You should probably be using
> parser rules instead.
>
> Jesse
>
> On Thu, Sep 6, 2012 at 2:44 AM, mark4 at voila.fr wrote:
> > Hi Stefan,
> >
> > I wanted to revert to your post. You recommended to put the most specific lexer rules first. But how can I do if 2 rules are close, or even identical?
> >
> > For instance:
> > DIMENSION : ID;
> > ITEM : ID;
> >
> > They automatically generate an error in ANTLR. Of course, this situation seems useless, but in the future, I may modify these rules and make them different. That's the reason why I'd like to distinguish them in the grammar file.
> >
> > Thanks in advance,
> > Mark
> >
> >> Message du 04/09/12 ? 15h40
> >> De : "Stefan M?tje"
> >> A : antlr-interest at antlr.org
> >> Copie ? : "mark4 at voila.fr"
> >> Objet : Re: [antlr-interest] Invalid parser generation
> >>
> >> Am 04.09.2012 14:35, schrieb mark4 at voila.fr:> Hi Stefan,
> >> >
> >> > Thanks for your reply. I didn't understand the difference between
> >> > lexer rules and parser rules because,
> >> > in fine, a parser rule will always resolve in a series of lexer
> >> > rules...
> >>
> >> Please don't mix the lexer and the parser phase in your mind. The lexer
> >> deals with single characters and groups them into tokens.
> >>
> >> The parser doesn't know anything about single characters and deals only
> >> with tokens.
> >>
> >> > Anyway, I applied the modification but I now get an error:
> >> >
> >> > COMPTE : ('0'..'9')+;
> >> >
> >> > ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> >> >
> >> > The following token definitions can never be matched because prior
> >> > tokens match the same input: COMPTE,ID
> >>
> >> You have rules in your grammar before COMPTE and ID that define a
> >> superset of the character sequences that COMPTE and ID can match.
> >>
> >> > Well, I have several entities in my grammar that have different
> >> > encoding forms, so how can I specify them one after the other?
> >>
> >> If at the end one type of token should be produced all needed
> >> regular expressions have to go into one rule.
> >>
> >> > Thanks,
> >> > Mark
> >> >
> >>
> >> As rule of thumb write the most specific lexer rules first and then
> >> follow them with the less specific rules. The lexer will give the
> >> rules first written a higher precedence.
> >>
> >> So put your keywords first (which are fixed strings). Then follow them
> >> with something like operators (also fixed strings). At the lower level
> >> rules that can match different strings like ID and COMPTE follow.
> >>
> >> See what Antlrworks tells you about multiple matches and which rules are
> >> involved.
> >>
> >> Don't know if this may help but the rule that matches both COMPTE and ID
> >> would be most interesting.
> >>
> >> Best regards,
> >> Stefan
> >>
> >> PS.: Please reply also to the list.
> >>
> >>
> >
> > ___________________________________________________________
> > 10 conseils pour un ventre plat sur Voila.fr http://actu.voila.fr/evenementiel/beaute-minceur/conseils-ventre-plat/
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

___________________________________________________________
10 conseils pour un ventre plat sur Voila.fr http://actu.voila.fr/evenementiel/beaute-minceur/conseils-ventre-plat/

From jmurray at aerotech.com  Thu Sep  6 06:46:05 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 6 Sep 2012 09:46:05 -0400
Subject: [antlr-interest] NoSuchElementException
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>

Hi,

 

I'm having an issue when processing my grammar, the tool spits out a
NoSuchElementException:

 

java.util.NoSuchElementException: can't look backwards more than one
token in this stream

                at
org.antlr.runtime.misc.LookaheadStream.LB(LookaheadStream.java:159)

                ...

 

I sometimes get a Null reference exception as well (but can't reproduce
it at the moment). I've reduced my grammar to the following, which will
still reproduce it.

 

 

grammar Test;

 

options

{

                language=C;

}

 

 

// Parser rules

preprocess

                :               (line? NEWLINE_)* line? EOF

                ;

 

line

                :               PP_directive_

                |              SOURCE_LINE_

                ;

 

// Lexer rules

 

PP_directive_

                :               '#define'

                ;

            

NEWLINE_

                :               '\u000D'? '\u000A'

                |              '\u0085'

                |              '\u2028'

                |              '\u2029'

                ;

                

SOURCE_LINE_

                :               ~NEWLINE_+

                ;

 

 

So I have two questions. It seems to me that the tool should never
crash, so is this an ANTLR bug? Secondly, there is clearly a problem
with what I am trying to do here. Is it not possible to capture
everything on a line (that is not a newline) as a token? Does anyone
have a workaround?

 

Thanks,

 

- Justin


From mike at lischke-online.de  Thu Sep  6 07:10:31 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 6 Sep 2012 16:10:31 +0200
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>


Justin,

your grammar came over in an ugly format...


Try something like this for lines instead:

SOURCE_LINE_: .* (NEWLINE_ | EOF);

Then your preprocess rule could go like this:

preprocess:
	line* EOF
;


ANTLR is clever enough to exclude the token after the Kleene operator from what the dot matches, which is very convenient.



> grammar Test;
> 
> 
> 
> options
> 
> {
> 
>                language=C;
> 
> }
> 
> 
> 
> 
> 
> // Parser rules
> 
> preprocess
> 
>                :               (line? NEWLINE_)* line? EOF
> 
>                ;
> 
> 
> 
> line
> 
>                :               PP_directive_
> 
>                |              SOURCE_LINE_
> 
>                ;
> 
> 
> 
> // Lexer rules
> 
> 
> 
> PP_directive_
> 
>                :               '#define'
> 
>                ;
> 
> 
> 
> NEWLINE_
> 
>                :               '\u000D'? '\u000A'
> 
>                |              '\u0085'
> 
>                |              '\u2028'
> 
>                |              '\u2029'
> 
>                ;
> 
> 
> 
> SOURCE_LINE_
> 
>                :               ~NEWLINE_+
> 
>                ;
> 
> 
> 
> 
> 
> So I have two questions. It seems to me that the tool should never
> crash, so is this an ANTLR bug? Secondly, there is clearly a problem
> with what I am trying to do here. Is it not possible to capture
> everything on a line (that is not a newline) as a token? Does anyone
> have a workaround?
> 
> 
> 
> Thanks,
> 
> 
> 
> - Justin
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

Mike
-- 
www.soft-gems.net



From jmurray at aerotech.com  Thu Sep  6 07:53:36 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 6 Sep 2012 10:53:36 -0400
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
	<D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>

Mike,

Thank you for the suggestion. I think I had tried something similar to
this initially, but this also gives me problems. Here is the new
grammar:

----

grammar Test;

// Parser rules
preprocess
	:	line* EOF
	;

line
	:	PP_directive_
	|	SOURCE_LINE_
	;

// Lexer rules

PP_directive_
	:	'#define'
	;
            
NEWLINE_
	:	'\u000D'? '\u000A'
	|	'\u0085'
	|	'\u2028'
	|	'\u2029'
	;
	
SOURCE_LINE_
	:	.* (EOF | NEWLINE_)
	;

----

This one does not crash, but does give me the following error:

error(201): AerobasicPreprocessor.g:27:4: The following alternatives can
never be matched: 1

Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't really
make any sense to me. If I remove the EOF from the SOURCE_LINE_ rule,
the grammar builds successfully. However, this doesn't give me what I
need, which is the possibility of a line at the end of a file, without a
newline. Any other ideas?

Thanks,

- Justin

-----Original Message-----
From: Mike Lischke [mailto:mike at lischke-online.de] 
Sent: Thursday, September 06, 2012 10:11 AM
To: Justin Murray
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] NoSuchElementException


Justin,

your grammar came over in an ugly format...


Try something like this for lines instead:

SOURCE_LINE_: .* (NEWLINE_ | EOF);

Then your preprocess rule could go like this:

preprocess:
	line* EOF
;


ANTLR is clever enough to exclude the token after the Kleene operator
from what the dot matches, which is very convenient.



> grammar Test;
> 
> 
> 
> options
> 
> {
> 
>                language=C;
> 
> }
> 
> 
> 
> 
> 
> // Parser rules
> 
> preprocess
> 
>                :               (line? NEWLINE_)* line? EOF
> 
>                ;
> 
> 
> 
> line
> 
>                :               PP_directive_
> 
>                |              SOURCE_LINE_
> 
>                ;
> 
> 
> 
> // Lexer rules
> 
> 
> 
> PP_directive_
> 
>                :               '#define'
> 
>                ;
> 
> 
> 
> NEWLINE_
> 
>                :               '\u000D'? '\u000A'
> 
>                |              '\u0085'
> 
>                |              '\u2028'
> 
>                |              '\u2029'
> 
>                ;
> 
> 
> 
> SOURCE_LINE_
> 
>                :               ~NEWLINE_+
> 
>                ;
> 
> 
> 
> 
> 
> So I have two questions. It seems to me that the tool should never 
> crash, so is this an ANTLR bug? Secondly, there is clearly a problem 
> with what I am trying to do here. Is it not possible to capture 
> everything on a line (that is not a newline) as a token? Does anyone 
> have a workaround?
> 
> 
> 
> Thanks,
> 
> 
> 
> - Justin
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

Mike
--
www.soft-gems.net



From mike at lischke-online.de  Thu Sep  6 08:18:08 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 6 Sep 2012 17:18:08 +0200
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
	<D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <B69644DF-3089-454C-BDD8-6020D1CC4C03@lischke-online.de>


Justin,

> grammar Test;
> 
> // Parser rules
> preprocess
> 	:	line* EOF
> 	;
> 
> line
> 	:	PP_directive_
> 	|	SOURCE_LINE_
> 	;
> 
> // Lexer rules
> 
> PP_directive_
> 	:	'#define'
> 	;
> 
> NEWLINE_
> 	:	'\u000D'? '\u000A'
> 	|	'\u0085'
> 	|	'\u2028'
> 	|	'\u2029'
> 	;
> 	
> SOURCE_LINE_
> 	:	.* (EOF | NEWLINE_)
> 	;
> 
> ----
> 
> This one does not crash, but does give me the following error:
> 
> error(201): AerobasicPreprocessor.g:27:4: The following alternatives can
> never be matched: 1
> 
> Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't really
> make any sense to me.

Yes, it's sometimes difficult to actually find the source of the error/warning, because a rule can make that trouble only in a higher level rule, leading to ambiguities. In your case I think the EOF from the preprocess rule is redundant and can be removed (leaving EOF in SOURCE_LINE_).

> If I remove the EOF from the SOURCE_LINE_ rule,
> the grammar builds successfully. However, this doesn't give me what I
> need, which is the possibility of a line at the end of a file, without a
> newline. Any other ideas?


If all fails define a lexer rule like:

REST: .*;

and use this so:

preprocess
	:	line* REST
	;

Mike
-- 
www.soft-gems.net



From jmurray at aerotech.com  Thu Sep  6 09:02:05 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 6 Sep 2012 12:02:05 -0400
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <B69644DF-3089-454C-BDD8-6020D1CC4C03@lischke-online.de>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
	<D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
	<B69644DF-3089-454C-BDD8-6020D1CC4C03@lischke-online.de>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F011B@EXCH-VIRTUAL.aerotechad.com>

Mike,

Thanks again for your input. I tried both of these suggestions, but
still no luck. With the following grammar:

----
grammar AerobasicPreprocessor;

// Parser rules
preprocess
	:	line* LAST_SOURCE_LINE_? EOF
	;

line
	:	PP_directive_
	|	SOURCE_LINE_
	;

// Lexer rules

PP_directive_
	:	'#define'
	;
            
fragment NEWLINE_
	:	'\u000D'? '\u000A'
	|	'\u0085'
	|	'\u2028'
	|	'\u2029'
	;
	
SOURCE_LINE_
	:	.* NEWLINE_
	;
	
LAST_SOURCE_LINE_
	:	.+
	;
----

I get the error:
error(201): AerobasicPreprocessor.g:31:4: The following alternatives can
never be matched: 1

Line 31 here corresponds to LAST_SOURCE_LINE_. I tried both '.*' and
'.+' here. Neither worked, but I think '.+' makes more sense (a lexer
rule shouldn't match nothing). Any other ideas?

Thanks,
- Justin

-----Original Message-----
From: Mike Lischke [mailto:mike at lischke-online.de] 
Sent: Thursday, September 06, 2012 11:18 AM
To: Justin Murray
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] NoSuchElementException


Justin,

> grammar Test;
> 
> // Parser rules
> preprocess
> 	:	line* EOF
> 	;
> 
> line
> 	:	PP_directive_
> 	|	SOURCE_LINE_
> 	;
> 
> // Lexer rules
> 
> PP_directive_
> 	:	'#define'
> 	;
> 
> NEWLINE_
> 	:	'\u000D'? '\u000A'
> 	|	'\u0085'
> 	|	'\u2028'
> 	|	'\u2029'
> 	;
> 	
> SOURCE_LINE_
> 	:	.* (EOF | NEWLINE_)
> 	;
> 
> ----
> 
> This one does not crash, but does give me the following error:
> 
> error(201): AerobasicPreprocessor.g:27:4: The following alternatives 
> can never be matched: 1
> 
> Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't 
> really make any sense to me.

Yes, it's sometimes difficult to actually find the source of the
error/warning, because a rule can make that trouble only in a higher
level rule, leading to ambiguities. In your case I think the EOF from
the preprocess rule is redundant and can be removed (leaving EOF in
SOURCE_LINE_).

> If I remove the EOF from the SOURCE_LINE_ rule, the grammar builds 
> successfully. However, this doesn't give me what I need, which is the 
> possibility of a line at the end of a file, without a newline. Any 
> other ideas?


If all fails define a lexer rule like:

REST: .*;

and use this so:

preprocess
	:	line* REST
	;

Mike
--
www.soft-gems.net



From jimi at temporal-wave.com  Thu Sep  6 09:06:45 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 6 Sep 2012 09:06:45 -0700
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
	<D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <2635fa947a55d1f5ec89abbe759dccdf@mail.gmail.com>

You need to use the parser:

line : .* NL;


L1 : 'dfddfdf';
L2 : 'dfdfdfd';
NL: '\n';
ANY : . ;


Should get you a little nearer to what you want.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, September 06, 2012 7:54 AM
> To: Mike Lischke
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoSuchElementException
>
> Mike,
>
> Thank you for the suggestion. I think I had tried something similar to
> this initially, but this also gives me problems. Here is the new
> grammar:
>
> ----
>
> grammar Test;
>
> // Parser rules
> preprocess
> 	:	line* EOF
> 	;
>
> line
> 	:	PP_directive_
> 	|	SOURCE_LINE_
> 	;
>
> // Lexer rules
>
> PP_directive_
> 	:	'#define'
> 	;
>
> NEWLINE_
> 	:	'\u000D'? '\u000A'
> 	|	'\u0085'
> 	|	'\u2028'
> 	|	'\u2029'
> 	;
>
> SOURCE_LINE_
> 	:	.* (EOF | NEWLINE_)
> 	;
>
> ----
>
> This one does not crash, but does give me the following error:
>
> error(201): AerobasicPreprocessor.g:27:4: The following alternatives
> can never be matched: 1
>
> Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't really
> make any sense to me. If I remove the EOF from the SOURCE_LINE_ rule,
> the grammar builds successfully. However, this doesn't give me what I
> need, which is the possibility of a line at the end of a file, without
> a newline. Any other ideas?
>
> Thanks,
>
> - Justin
>
> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Thursday, September 06, 2012 10:11 AM
> To: Justin Murray
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoSuchElementException
>
>
> Justin,
>
> your grammar came over in an ugly format...
>
>
> Try something like this for lines instead:
>
> SOURCE_LINE_: .* (NEWLINE_ | EOF);
>
> Then your preprocess rule could go like this:
>
> preprocess:
> 	line* EOF
> ;
>
>
> ANTLR is clever enough to exclude the token after the Kleene operator
> from what the dot matches, which is very convenient.
>
>
>
> > grammar Test;
> >
> >
> >
> > options
> >
> > {
> >
> >                language=C;
> >
> > }
> >
> >
> >
> >
> >
> > // Parser rules
> >
> > preprocess
> >
> >                :               (line? NEWLINE_)* line? EOF
> >
> >                ;
> >
> >
> >
> > line
> >
> >                :               PP_directive_
> >
> >                |              SOURCE_LINE_
> >
> >                ;
> >
> >
> >
> > // Lexer rules
> >
> >
> >
> > PP_directive_
> >
> >                :               '#define'
> >
> >                ;
> >
> >
> >
> > NEWLINE_
> >
> >                :               '\u000D'? '\u000A'
> >
> >                |              '\u0085'
> >
> >                |              '\u2028'
> >
> >                |              '\u2029'
> >
> >                ;
> >
> >
> >
> > SOURCE_LINE_
> >
> >                :               ~NEWLINE_+
> >
> >                ;
> >
> >
> >
> >
> >
> > So I have two questions. It seems to me that the tool should never
> > crash, so is this an ANTLR bug? Secondly, there is clearly a problem
> > with what I am trying to do here. Is it not possible to capture
> > everything on a line (that is not a newline) as a token? Does anyone
> > have a workaround?
> >
> >
> >
> > Thanks,
> >
> >
> >
> > - Justin
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From apalala at gmail.com  Thu Sep  6 11:58:01 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Thu, 6 Sep 2012 14:28:01 -0430
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F011B@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com>
	<D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
	<B69644DF-3089-454C-BDD8-6020D1CC4C03@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B8F011B@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <CAN1YFWvRBK1ZdJe07v-Hms_Lt3VoX8qOCYkN5SUzdW9q05HYZg@mail.gmail.com>

Mike,

You don't need ANTLR to look at source lines that start with '#define'.
There are easier and more efficient ways to do that.

The problem with your grammar is that the lexer eats too much input.

You can try something like this:

DEFINE
    :
    (
        {getCharPositionInLine() == 0}?=>
        '#define'
    }
    ;

EOL: ...;

ANY: (~(EOL));

file : (DEFINE? line)+;

line : ANY* (EOL|EOF).

It's off the top of my head, so it may not work, but you get the idea.

-- Juanca

On Thu, Sep 6, 2012 at 11:32 AM, Justin Murray <jmurray at aerotech.com> wrote:

> Mike,
>
> Thanks again for your input. I tried both of these suggestions, but
> still no luck. With the following grammar:
>
> ----
> grammar AerobasicPreprocessor;
>
> // Parser rules
> preprocess
>         :       line* LAST_SOURCE_LINE_? EOF
>         ;
>
> line
>         :       PP_directive_
>         |       SOURCE_LINE_
>         ;
>
> // Lexer rules
>
> PP_directive_
>         :       '#define'
>         ;
>
> fragment NEWLINE_
>         :       '\u000D'? '\u000A'
>         |       '\u0085'
>         |       '\u2028'
>         |       '\u2029'
>         ;
>
> SOURCE_LINE_
>         :       .* NEWLINE_
>         ;
>
> LAST_SOURCE_LINE_
>         :       .+
>         ;
> ----
>
> I get the error:
> error(201): AerobasicPreprocessor.g:31:4: The following alternatives can
> never be matched: 1
>
> Line 31 here corresponds to LAST_SOURCE_LINE_. I tried both '.*' and
> '.+' here. Neither worked, but I think '.+' makes more sense (a lexer
> rule shouldn't match nothing). Any other ideas?
>
> Thanks,
> - Justin
>
> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Thursday, September 06, 2012 11:18 AM
> To: Justin Murray
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoSuchElementException
>
>
> Justin,
>
> > grammar Test;
> >
> > // Parser rules
> > preprocess
> >       :       line* EOF
> >       ;
> >
> > line
> >       :       PP_directive_
> >       |       SOURCE_LINE_
> >       ;
> >
> > // Lexer rules
> >
> > PP_directive_
> >       :       '#define'
> >       ;
> >
> > NEWLINE_
> >       :       '\u000D'? '\u000A'
> >       |       '\u0085'
> >       |       '\u2028'
> >       |       '\u2029'
> >       ;
> >
> > SOURCE_LINE_
> >       :       .* (EOF | NEWLINE_)
> >       ;
> >
> > ----
> >
> > This one does not crash, but does give me the following error:
> >
> > error(201): AerobasicPreprocessor.g:27:4: The following alternatives
> > can never be matched: 1
> >
> > Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't
> > really make any sense to me.
>
> Yes, it's sometimes difficult to actually find the source of the
> error/warning, because a rule can make that trouble only in a higher
> level rule, leading to ambiguities. In your case I think the EOF from
> the preprocess rule is redundant and can be removed (leaving EOF in
> SOURCE_LINE_).
>
> > If I remove the EOF from the SOURCE_LINE_ rule, the grammar builds
> > successfully. However, this doesn't give me what I need, which is the
> > possibility of a line at the end of a file, without a newline. Any
> > other ideas?
>
>
> If all fails define a lexer rule like:
>
> REST: .*;
>
> and use this so:
>
> preprocess
>         :       line* REST
>         ;
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From jmurray at aerotech.com  Thu Sep  6 12:44:51 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 6 Sep 2012 15:44:51 -0400
Subject: [antlr-interest] NoSuchElementException
In-Reply-To: <2635fa947a55d1f5ec89abbe759dccdf@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F00C5@EXCH-VIRTUAL.aerotechad.com><D74A8B8C-5F57-46F0-8ED3-1E45EFDA216D@lischke-online.de><6B458D23F5D4A24ABCDB3C78EA97393B0B8F00F2@EXCH-VIRTUAL.aerotechad.com>
	<2635fa947a55d1f5ec89abbe759dccdf@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B8F0197@EXCH-VIRTUAL.aerotechad.com>

Jim,

Thanks for your input. Based on your advice, I refactored the grammar
from earlier into the following:
----
grammar AerobasicPreprocessor;

preprocess : line (NEWLINE_ line)* EOF;

line : (PP_directive_ | ANY_*);

PP_directive_ : '#define';
            
NEWLINE_ : '\r'? '\n';
	
ANY_ : .;
----

This compiles, and I believe accomplishes what I need it to for lines
and newlines in principle. This is, of course, just a subset of my
grammar, in which I am having additional, similar problems. There is
something that I do not understand about the ~ operator in lexer rules.
Why can't I replace the '.' in the ANY_ rule above with '~NEWLINE_'
(causes the tool to crash)? I want to use this construct elsewhere in my
grammar. Here is an example snippet:

----
fragment PP_define
	:	'define' WS_ PP_define_name (WS_ PP_define_value)?
	;

fragment PP_define_name
	:	~WS_+
	;

fragment PP_define_value
	:	~NEWLINE_+ (PP_line_continuation ~NEWLINE_+)*
	;

fragment PP_line_continuation
	:	BACKSLASH_ WS_? NEWLINE_
	;
----

This sort of logic makes perfect sense to me, but seems to be choking
the lexer. What am I not understanding here?

Thanks,

- Justin

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, September 06, 2012 12:07 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] NoSuchElementException

You need to use the parser:

line : .* NL;


L1 : 'dfddfdf';
L2 : 'dfdfdfd';
NL: '\n';
ANY : . ;


Should get you a little nearer to what you want.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, September 06, 2012 7:54 AM
> To: Mike Lischke
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoSuchElementException
>
> Mike,
>
> Thank you for the suggestion. I think I had tried something similar to

> this initially, but this also gives me problems. Here is the new
> grammar:
>
> ----
>
> grammar Test;
>
> // Parser rules
> preprocess
> 	:	line* EOF
> 	;
>
> line
> 	:	PP_directive_
> 	|	SOURCE_LINE_
> 	;
>
> // Lexer rules
>
> PP_directive_
> 	:	'#define'
> 	;
>
> NEWLINE_
> 	:	'\u000D'? '\u000A'
> 	|	'\u0085'
> 	|	'\u2028'
> 	|	'\u2029'
> 	;
>
> SOURCE_LINE_
> 	:	.* (EOF | NEWLINE_)
> 	;
>
> ----
>
> This one does not crash, but does give me the following error:
>
> error(201): AerobasicPreprocessor.g:27:4: The following alternatives 
> can never be matched: 1
>
> Line 27 corresponds to the SOURCE_LINE_ rule. This error doesn't 
> really make any sense to me. If I remove the EOF from the SOURCE_LINE_

> rule, the grammar builds successfully. However, this doesn't give me 
> what I need, which is the possibility of a line at the end of a file, 
> without a newline. Any other ideas?
>
> Thanks,
>
> - Justin
>
> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Thursday, September 06, 2012 10:11 AM
> To: Justin Murray
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoSuchElementException
>
>
> Justin,
>
> your grammar came over in an ugly format...
>
>
> Try something like this for lines instead:
>
> SOURCE_LINE_: .* (NEWLINE_ | EOF);
>
> Then your preprocess rule could go like this:
>
> preprocess:
> 	line* EOF
> ;
>
>
> ANTLR is clever enough to exclude the token after the Kleene operator 
> from what the dot matches, which is very convenient.
>
>
>
> > grammar Test;
> >
> >
> >
> > options
> >
> > {
> >
> >                language=C;
> >
> > }
> >
> >
> >
> >
> >
> > // Parser rules
> >
> > preprocess
> >
> >                :               (line? NEWLINE_)* line? EOF
> >
> >                ;
> >
> >
> >
> > line
> >
> >                :               PP_directive_
> >
> >                |              SOURCE_LINE_
> >
> >                ;
> >
> >
> >
> > // Lexer rules
> >
> >
> >
> > PP_directive_
> >
> >                :               '#define'
> >
> >                ;
> >
> >
> >
> > NEWLINE_
> >
> >                :               '\u000D'? '\u000A'
> >
> >                |              '\u0085'
> >
> >                |              '\u2028'
> >
> >                |              '\u2029'
> >
> >                ;
> >
> >
> >
> > SOURCE_LINE_
> >
> >                :               ~NEWLINE_+
> >
> >                ;
> >
> >
> >
> >
> >
> > So I have two questions. It seems to me that the tool should never 
> > crash, so is this an ANTLR bug? Secondly, there is clearly a problem

> > with what I am trying to do here. Is it not possible to capture 
> > everything on a line (that is not a newline) as a token? Does anyone

> > have a workaround?
> >
> >
> >
> > Thanks,
> >
> >
> >
> > - Justin
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jesusfreke at jesusfreke.com  Fri Sep  7 18:58:17 2012
From: jesusfreke at jesusfreke.com (JesusFreke)
Date: Fri, 7 Sep 2012 18:58:17 -0700
Subject: [antlr-interest] error recovery in top level repeated rules?
Message-ID: <CACUovh2EApLuWOLAWU58SG6_CC4WMpx_=CrsO_pZg5G5aYvhew@mail.gmail.com>

Is there any way to recover from an error (say, an extra unwanted token),
in a top level repeated rule?

For example, consider the following simple grammar

top : (('a' 'c') | ('b' 'c'))*;

For input acabc", it parses 'ac', produces an error on 'a', and then
contiues on with 'bc'. This is perfect.

But for input "accbc", it parses 'ac', and then fails at 'c' and stops
parsing. Is there any way to get it to produce an error for the extra 'c',
and then continue on parsing the remaining 'bc'?

From apalala at gmail.com  Sat Sep  8 04:37:15 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Sat, 8 Sep 2012 07:07:15 -0430
Subject: [antlr-interest] error recovery in top level repeated rules?
In-Reply-To: <CACUovh2EApLuWOLAWU58SG6_CC4WMpx_=CrsO_pZg5G5aYvhew@mail.gmail.com>
References: <CACUovh2EApLuWOLAWU58SG6_CC4WMpx_=CrsO_pZg5G5aYvhew@mail.gmail.com>
Message-ID: <CAN1YFWtUUX4+eDb1R_p3O_nTrEAieVtCoasVCZ2w6C3LCnudPw@mail.gmail.com>

Jesus,

The traditional way to write a grammar that can parse invalid input is to
augment it with rules that skip input until the next reasonable follow up
token.

For example, when parsing an expression within parentheses, an addtional:

   | e=(.*) RPAREN { parse_error($e); } ;

will match anything until the next right parenthesis, report the error, and
allow previously invoked rules to try to continue parsing the input.

Cheers,

-- Juancarlo



On Fri, Sep 7, 2012 at 9:28 PM, JesusFreke <jesusfreke at jesusfreke.com>wrote:

> Is there any way to recover from an error (say, an extra unwanted token),
> in a top level repeated rule?
>
> For example, consider the following simple grammar
>
> top : (('a' 'c') | ('b' 'c'))*;
>
> For input acabc", it parses 'ac', produces an error on 'a', and then
> contiues on with 'bc'. This is perfect.
>
> But for input "accbc", it parses 'ac', and then fails at 'c' and stops
> parsing. Is there any way to get it to produce an error for the extra 'c',
> and then continue on parsing the remaining 'bc'?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From jimi at temporal-wave.com  Sat Sep  8 08:53:27 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 8 Sep 2012 08:53:27 -0700
Subject: [antlr-interest] error recovery in top level repeated rules?
In-Reply-To: <CACUovh2EApLuWOLAWU58SG6_CC4WMpx_=CrsO_pZg5G5aYvhew@mail.gmail.com>
References: <CACUovh2EApLuWOLAWU58SG6_CC4WMpx_=CrsO_pZg5G5aYvhew@mail.gmail.com>
Message-ID: <e1ddb8b9be4d4d6974df011fef687617@mail.gmail.com>

See FAQ regarding magic error recovery.

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

This, with some improvements I think (Ter?), is built in to V4.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of JesusFreke
> Sent: Friday, September 07, 2012 6:58 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] error recovery in top level repeated rules?
>
> Is there any way to recover from an error (say, an extra unwanted
> token), in a top level repeated rule?
>
> For example, consider the following simple grammar
>
> top : (('a' 'c') | ('b' 'c'))*;
>
> For input acabc", it parses 'ac', produces an error on 'a', and then
> contiues on with 'bc'. This is perfect.
>
> But for input "accbc", it parses 'ac', and then fails at 'c' and stops
> parsing. Is there any way to get it to produce an error for the extra
> 'c', and then continue on parsing the remaining 'bc'?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From pohilets at gmail.com  Sun Sep  9 05:27:02 2012
From: pohilets at gmail.com (kjam)
Date: Sun, 9 Sep 2012 05:27:02 -0700 (PDT)
Subject: [antlr-interest] [C++ Target] Error recovery and rule actions
Message-ID: <1347193622879-7578694.post@n2.nabble.com>

Hi All,

My parser crashes in user action on invalid input. I do not care much about
error handling for now, but crashing is definitely not an option.

I'm trying to parse fragment 'a+*' according to the following rules
(simplified):

expr3 returns [DataPtr retVal]
    : lhs=expr2 { $retVal = lhs; }
      ( opToken=('+' | '-')
        rhs=expr2
        {
            $retVal = buildInfixOp($retVal, opToken, rhs);
        }
      )*
    ;
expr2 returns [DataPtr retVal]
    : opToken=('!' | '*') e=expr2
      {
         $retVal = buildPrefixOp(opToken, e); // <- the problem is here
      }
    | e=expr1
      {
         $retVal = e;
      }
    ;

expr1 returns [DataPtr retVal]
    : lit=literal
    {
        $retVal = ... ;
    }
    | idToken=ID
    {
        $retVal = ... ;
    }
    | '(' e=expr3 ')'
    {
        $retVal = e;
    }
    ;

Parser consumes 'a' as LHS, '+' as binary operator and '*' as prefix unary
operator and calls expr2 recursively. Inside second call to expr2, parser
encounters EOF, generates error, recovers and returns.

So, inside first invocation of expr2 there are no unhandled errors, for
parsing continues and rule action is executed. But DataPtr (a typedef for
boost::shared_ptr<>) returned from second invocation of expr2 is NULL, so
rule action crashes.

I expected expr2 to either return non-null DataPtr or raise an error. How
can I achieve this? Or should I use different strategy? Checking manually
validity of data returned from nested rule is tedious and error prone, I'd
like to avoid this.



--
View this message in context: http://antlr.1301665.n2.nabble.com/C-Target-Error-recovery-and-rule-actions-tp7578694.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Sun Sep  9 08:31:37 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 9 Sep 2012 08:31:37 -0700
Subject: [antlr-interest] [C++ Target] Error recovery and rule actions
In-Reply-To: <1347193622879-7578694.post@n2.nabble.com>
References: <1347193622879-7578694.post@n2.nabble.com>
Message-ID: <18d4c244ceafb81cce62483b933aea6d@mail.gmail.com>

Well your build<n>fixOp should be checking for NULL parameters as a matter
of good programming. At some point in error recovery, the parser will be
back on track but some of the values won't be set to anything. You could
set a flag in your error handler and just have all your methods return 0
if it is set.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of kjam
> Sent: Sunday, September 09, 2012 5:27 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C++ Target] Error recovery and rule actions
>
> Hi All,
>
> My parser crashes in user action on invalid input. I do not care much
> about error handling for now, but crashing is definitely not an option.
>
> I'm trying to parse fragment 'a+*' according to the following rules
> (simplified):
>
> expr3 returns [DataPtr retVal]
>     : lhs=expr2 { $retVal = lhs; }
>       ( opToken=('+' | '-')
>         rhs=expr2
>         {
>             $retVal = buildInfixOp($retVal, opToken, rhs);
>         }
>       )*
>     ;
> expr2 returns [DataPtr retVal]
>     : opToken=('!' | '*') e=expr2
>       {
>          $retVal = buildPrefixOp(opToken, e); // <- the problem is here
>       }
>     | e=expr1
>       {
>          $retVal = e;
>       }
>     ;
>
> expr1 returns [DataPtr retVal]
>     : lit=literal
>     {
>         $retVal = ... ;
>     }
>     | idToken=ID
>     {
>         $retVal = ... ;
>     }
>     | '(' e=expr3 ')'
>     {
>         $retVal = e;
>     }
>     ;
>
> Parser consumes 'a' as LHS, '+' as binary operator and '*' as prefix
> unary operator and calls expr2 recursively. Inside second call to
> expr2, parser encounters EOF, generates error, recovers and returns.
>
> So, inside first invocation of expr2 there are no unhandled errors, for
> parsing continues and rule action is executed. But DataPtr (a typedef
> for
> boost::shared_ptr<>) returned from second invocation of expr2 is NULL,
> so rule action crashes.
>
> I expected expr2 to either return non-null DataPtr or raise an error.
> How can I achieve this? Or should I use different strategy? Checking
> manually validity of data returned from nested rule is tedious and
> error prone, I'd like to avoid this.
>
>
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/C-
> Target-Error-recovery-and-rule-actions-tp7578694.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From Abhay.Chaware at kpitcummins.com  Sun Sep  9 21:23:00 2012
From: Abhay.Chaware at kpitcummins.com (Abhay B. Chaware)
Date: Mon, 10 Sep 2012 04:23:00 +0000
Subject: [antlr-interest] FW: LotusScript / formula Grammar
Message-ID: <97EC5C569F10AB48982080D69E0FCD163D388991@KCHJEXMB03.kpit.com>

Can anyone here pls help ?
THANKS,
Abhay


From: Abhay B. Chaware
Sent: Wednesday, September 05, 2012 12:25 PM
To: 'antlr-interest at antlr.org'
Subject: LotusScript / formula Grammar

Hi All
Has anyone taken a stab at writing grammar for lotus script and formula languages ?  Any starting points/references would be really helpful !
Thanks
Abhay


From apalala at gmail.com  Mon Sep 10 15:46:53 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Mon, 10 Sep 2012 18:16:53 -0430
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
Message-ID: <CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>

Hello,

Which are the rules that govern when a node that has an imaginary token as
root gets position information.

It seems that a lone imaginary token will not, but one that is followed by
actual tokens will.

Regards,

-- 
Juancarlo *A?ez*
tel:+58(414)901-2021
skype:juancarloanez





-- 
Juancarlo *A?ez*

From gbonnema at xs4all.nl  Mon Sep 10 22:13:30 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Tue, 11 Sep 2012 07:13:30 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
Message-ID: <20120911071330.19ce65a2@mahatma>

On Mon, 10 Sep 2012 18:16:53 -0430
Juancarlo A?ez <apalala at gmail.com> wrote:

> Hello,
> 
> Which are the rules that govern when a node that has an imaginary
> token as root gets position information.
> 
> It seems that a lone imaginary token will not, but one that is
> followed by actual tokens will.
> 
> Regards,
> 

Hi Juancarlos,

As far as I know an imaginary token as root will only have position
information if you copy the information from a real token.

For instance like this: lb=LBRACE block RBRACE ^(DUM[$lb,"SLIST"] block)

The imaginary token DUM will get the position information of the left
brace and will show in the AST tree as SLIST.

I got this information from the reference (book of TParr).

Guus Bonnema.


From mike at lischke-online.de  Mon Sep 10 23:29:34 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Tue, 11 Sep 2012 08:29:34 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <20120911071330.19ce65a2@mahatma>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
Message-ID: <80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>


> For instance like this: lb=LBRACE block RBRACE ^(DUM[$lb,"SLIST"] block)
> 
> The imaginary token DUM will get the position information of the left
> brace and will show in the AST tree as SLIST.
> 
> I got this information from the reference (book of TParr).


Unfortunately, this doesn't work with all targets. For instance the C target has a bug that prevents the use of things like DUM[$lb].

Mike
-- 
www.soft-gems.net



From gbonnema at xs4all.nl  Tue Sep 11 00:35:53 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Tue, 11 Sep 2012 09:35:53 +0200
Subject: [antlr-interest] gunit in Kubuntu
Message-ID: <20120911093553.68d37d95@mahatma>

Hi All,

I want to start using gunit to test my grammar, but none of the
jar-files for antlr3 appear to contain gunit. However, when I download
the source (apt-get source antlr3) I do find sources for gunit.

I downloaded all units containing antlr in their name, but none of the
libraries appear to have gunit.

Anyone in this list using kubuntu and know how to get and use gunit?

Guus Bonnema.

From Stefan.Maetje at esd-electronics.com  Tue Sep 11 01:19:11 2012
From: Stefan.Maetje at esd-electronics.com (=?ISO-8859-1?Q?Stefan_M=E4tje?=)
Date: Tue, 11 Sep 2012 10:19:11 +0200
Subject: [antlr-interest] gunit in Kubuntu
In-Reply-To: <20120911093553.68d37d95@mahatma>
References: <20120911093553.68d37d95@mahatma>
Message-ID: <504EF3FF.4000206@esd-electronics.com>

Am 11.09.2012 09:35, schrieb Guus Bonnema:
> Hi All,
>
> I want to start using gunit to test my grammar, but none of the
> jar-files for antlr3 appear to contain gunit. However, when I download
> the source (apt-get source antlr3) I do find sources for gunit.
>
> I downloaded all units containing antlr in their name, but none of the
> libraries appear to have gunit.
>
> Anyone in this list using kubuntu and know how to get and use gunit?
>

Hi Guus,
well I'm not using Kubuntu but Ubuntu and therefore it should be nearly 
the same. I downloaded an ANTLR jar file that contains the gUnit test 
framework. How to call shows this wiki page:

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

But perhaps a snippet of my Makefile would make this more clear (also 
attached to this email):


# Where to find the ANTLR tool stuff.
ANTLRBASE:=../../antlr
# Which version to use.
ANTLR:=antlr-3.4-complete.jar

# Tell javac where to put the compiled classes.
CLASSES:=classes
# Tell the java VM where to find any needed classes.
CLASSPATH="$(ANTLRBASE)/$(ANTLR):$(CLASSES)"

# gUnit run depends on list of parser classes $(LP_CLASS)
gunit.out: Pearl90.gunit $(LP_CLASS)
	java -cp $(CLASSPATH) org.antlr.gunit.Interp $(<) | tee $(@)


I hope that helps,
	Stefan



-------------- next part --------------
# Where to find the ANTLR tool stuff.
ANTLRBASE:=../../antlr
# Which version to use.
ANTLR:=antlr-3.4-complete.jar

# Tell javac where to put the compiled classes.
CLASSES:=classes
# Tell the java VM where to find any needed classes.
CLASSPATH="$(ANTLRBASE)/$(ANTLR):$(CLASSES)"

# gUnit run depends on list of parser classes $(LP_CLASS)
gunit.out: Pearl90.gunit $(LP_CLASS)
	java -cp $(CLASSPATH) org.antlr.gunit.Interp $(<) | tee $(@)



From gbonnema at xs4all.nl  Tue Sep 11 03:05:13 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Tue, 11 Sep 2012 12:05:13 +0200
Subject: [antlr-interest] Download from antlr.org
Message-ID: <20120911120513.4d26f2ea@mahatma>

Hi all,

The URL www.antlr.org/download.html still points to the 3.4 version of
antlr, in stead of 3.4.1. 

The 3.4 version has at least one code generation error for the java
target.

Anyone able and willing to correct this?

Guus Bonnema.

From apalala at gmail.com  Tue Sep 11 06:08:44 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Tue, 11 Sep 2012 08:38:44 -0430
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <20120911071330.19ce65a2@mahatma>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
Message-ID: <CAN1YFWuakfLJxdoRKscEoPdFCmXpP0fXaid6b9uBCJj9JRd=Vg@mail.gmail.com>

On Tue, Sep 11, 2012 at 12:43 AM, Guus Bonnema <gbonnema at xs4all.nl> wrote:

> As far as I know an imaginary token as root will only have position
> information if you copy the information from a real token.
>
> For instance like this: lb=LBRACE block RBRACE ^(DUM[$lb,"SLIST"] block)
>


That's what I had read. But when I started adding the copy constructs to
imaginary tokens, I noted that some of them already had positions in the
AST.

A look at the source code for CommonTree.java reveals the secret:

public int getLine() {
if ( token==null *|| token.getLine()==0* ) {
 if ( getChildCount()>0 ) {
return getChild(0).getLine();
}
 return 0;
}
return token.getLine();
 }

For better or worse, it only works with the first child.

-- 
Juancarlo *A?ez*

From gbonnema at xs4all.nl  Tue Sep 11 07:20:55 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Tue, 11 Sep 2012 16:20:55 +0200
Subject: [antlr-interest] gunit in Kubuntu
In-Reply-To: <504EF3FF.4000206@esd-electronics.com>
References: <20120911093553.68d37d95@mahatma>
	<504EF3FF.4000206@esd-electronics.com>
Message-ID: <20120911162055.38624a17@mahatma>

On Tue, 11 Sep 2012 10:19:11 +0200
Stefan M?tje <Stefan.Maetje at esd-electronics.com> wrote:

> Am 11.09.2012 09:35, schrieb Guus Bonnema:
> > Hi All,
> >
> > I want to start using gunit to test my grammar, but none of the
> > jar-files for antlr3 appear to contain gunit. However, when I
> > download the source (apt-get source antlr3) I do find sources for
> > gunit.
> >
> > I downloaded all units containing antlr in their name, but none of
> > the libraries appear to have gunit.
> >
> > Anyone in this list using kubuntu and know how to get and use gunit?
> >
> 
> Hi Guus,
> well I'm not using Kubuntu but Ubuntu and therefore it should be
> nearly the same. I downloaded an ANTLR jar file that contains the
> gUnit test framework. How to call shows this wiki page:
> 
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
> 

Yes, I can use that as a workaround, but I was actually referring to
the (k)ubuntu repository where antlr3 is properly installed, but I can
find no reference to gunit, even though gunit should be part of antlr3.

In the meantime I contacted the packager through launchpad and it
appears that gunit will not be in the packages until 12.10. So I will
just have to wait, or download from antlr-site.

Thanks.


Guus.

From pohilets at gmail.com  Tue Sep 11 08:55:11 2012
From: pohilets at gmail.com (kjam)
Date: Tue, 11 Sep 2012 08:55:11 -0700 (PDT)
Subject: [antlr-interest] Lexing problem - range of ints vs float
Message-ID: <1347378911609-7578705.post@n2.nabble.com>

Hi, All!

I want lexer to interpret input '0..5' as sequence of tokens INT, '..', INT.
But instead it sees '0.' and tries to continue parsing float and fails. I
have '..' token implicitly defined in parser grammar and following lexer
rules for INT and FLOAT:

INT
    : ('0d')? '0'..'9'+
    | '0b' '0'..'1'+
    | '0c' '0'..'7'+
    | '0x' HEX_DIGIT+
    ;

FLOAT
    : ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
    | ('0'..'9')+ EXPONENT
    ;

fragment
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;



--
View this message in context: http://antlr.1301665.n2.nabble.com/Lexing-problem-range-of-ints-vs-float-tp7578705.html
Sent from the ANTLR mailing list archive at Nabble.com.

From owen.jacobson at grimoire.ca  Tue Sep 11 09:01:48 2012
From: owen.jacobson at grimoire.ca (Owen Jacobson)
Date: Tue, 11 Sep 2012 12:01:48 -0400
Subject: [antlr-interest] Lexing problem - range of ints vs float
In-Reply-To: <1347378911609-7578705.post@n2.nabble.com>
References: <1347378911609-7578705.post@n2.nabble.com>
Message-ID: <983CFC53-4C68-4409-8EA5-E5761A6080DA@grimoire.ca>

Your rules for FLOAT are more restrictive than mine, but I had a similar problem not long ago: http://www.antlr.org/pipermail/antlr-interest/2012-August/045132.html

Jim Idle pointed out this FAQ entry (http://tinyurl.com/8t4pnhv), which lead me to the following lexer rules:

// Matching for DOT tokens is handled in FLOAT, below.
// Notionally: DOT: '.';
fragment DOT: ;
// Matching for TO tokens is handled in FLOAT, below.
// Notionally: TO: '..';
fragment TO: ;

fragment DIGIT: '0'..'9';
fragment SIGN: '-'?;

// Matching for INT tokens is handled in FLOAT, below.
// Notionally: INT: SIGN DIGIT+;
fragment INT: ;

fragment FLOAT_EXPONENT
    :   'e' ('+'|'-')? DIGIT+
    ;

// Complex rule tree deciding several logical lexer rules: INT, FLOAT, DOT,
// and TO. See http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs
// for the origin of the idea. This is required because of the ambiguity of
// inputs like "1..3" -- in some contexts, it can be a range; in others, it's
// two floats. We always parse it as a range, which is consistent with the C
// implementation.
FLOAT
    :   SIGN DIGIT+ ( // Leading sign and digits: might be FLOAT, might be INT.
            // Two dots means an INT followed by a TO.
            { self.input.LA(2) != ord('.') }?=> '.' (
                DIGIT* FLOAT_EXPONENT? { $type = FLOAT; }
            )
            | FLOAT_EXPONENT { $type = FLOAT; }
            | { $type = INT; }
        )
        | '-' '.' ( // Leading sign and dot, must be float.
            DIGIT+ FLOAT_EXPONENT? { $type = FLOAT; }
        )
        | '.' ( // Leading dot: might be FLOAT, DOT, or TO.
            '.' { $type = TO; }
            | DIGIT+ FLOAT_EXPONENT? { $type = FLOAT; }
            | { $type = DOT; }
        )
    ;

Hope that helps,

-o

On 2012-09-11, at 11:55 AM, kjam <pohilets at gmail.com> wrote:

> Hi, All!
> 
> I want lexer to interpret input '0..5' as sequence of tokens INT, '..', INT.
> But instead it sees '0.' and tries to continue parsing float and fails. I
> have '..' token implicitly defined in parser grammar and following lexer
> rules for INT and FLOAT:
> 
> INT
>    : ('0d')? '0'..'9'+
>    | '0b' '0'..'1'+
>    | '0c' '0'..'7'+
>    | '0x' HEX_DIGIT+
>    ;
> 
> FLOAT
>    : ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
>    | ('0'..'9')+ EXPONENT
>    ;
> 
> fragment
> EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> 
> fragment
> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
> 
> 
> 
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Lexing-problem-range-of-ints-vs-float-tp7578705.html
> Sent from the ANTLR mailing list archive at Nabble.com.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pohilets at gmail.com  Tue Sep 11 10:57:01 2012
From: pohilets at gmail.com (kjam)
Date: Tue, 11 Sep 2012 10:57:01 -0700 (PDT)
Subject: [antlr-interest] Lexing problem - range of ints vs float
In-Reply-To: <983CFC53-4C68-4409-8EA5-E5761A6080DA@grimoire.ca>
References: <1347378911609-7578705.post@n2.nabble.com>
	<983CFC53-4C68-4409-8EA5-E5761A6080DA@grimoire.ca>
Message-ID: <1347386221187-7578707.post@n2.nabble.com>

Thanks! This helped



--
View this message in context: http://antlr.1301665.n2.nabble.com/Lexing-problem-range-of-ints-vs-float-tp7578705p7578707.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Tue Sep 11 12:08:37 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 11 Sep 2012 12:08:37 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
Message-ID: <e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>

It is not a bug with the C target, as I have explained on numerous
occasions. The other targets rely on method signatures to select the
correct re-write. This is not available in C.

However, the information is erroneous anyway. Look at the generated code
and you will see that only root nodes are fixed up with positional info.

Finally, rewriting like that is very expensive. I don't recommend it
anyway.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Monday, September 10, 2012 11:30 PM
> To: Guus Bonnema
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source positions for imaginary tokens
>
>
> > For instance like this: lb=LBRACE block RBRACE ^(DUM[$lb,"SLIST"]
> > block)
> >
> > The imaginary token DUM will get the position information of the left
> > brace and will show in the AST tree as SLIST.
> >
> > I got this information from the reference (book of TParr).
>
>
> Unfortunately, this doesn't work with all targets. For instance the C
> target has a bug that prevents the use of things like DUM[$lb].
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From rprememail at yahoo.com  Tue Sep 11 12:53:52 2012
From: rprememail at yahoo.com (Premkumar)
Date: Tue, 11 Sep 2012 12:53:52 -0700 (PDT)
Subject: [antlr-interest] Google recommends
Message-ID: <1347393232.88836.BPMail_high_noncarrier@web124706.mail.ne1.yahoo.com>


http://interdisc.com.mx/cnbc.php?tejt=1855&jut=078#&mrp=906j56h86cp8v0&len=5768&ffd=452

From apalala at gmail.com  Tue Sep 11 13:07:45 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Tue, 11 Sep 2012 15:37:45 -0430
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
Message-ID: <CAN1YFWv2v6kJm6g=KbGhPuQxfi9Vy=2xZ_s4YhfnTqQOFOSVvQ@mail.gmail.com>

On Tue, Sep 11, 2012 at 2:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> The other targets rely on method signatures to select the
> correct re-write. This is not available in C.
>

Why can't the C target dispatch to different functions depending on the
number of parameters?

-- 
Juancarlo *A?ez*

From jjtapia at gmail.com  Tue Sep 11 17:45:32 2012
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Tue, 11 Sep 2012 20:45:32 -0400
Subject: [antlr-interest] Solving lexer ambiguities
Message-ID: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>

So I was gaving a problem with my lexer recognition where my double token
is defined as follows.

FLOAT:
  (DIGIT)+ '.' (DIGIT)* EXPONENT?
| '.' (DIGIT)+ EXPONENT?
| (DIGIT)+ EXPONENT;


However additional to that I have certain structures where the following
syntax:

1structure.2structure .35

Should be recognized by the following grammar

STRING (DOT STRING)? FLOAT

The problem being of course, that my lexer is recognizing the .2 token as a
FLOAT and I'm not sure how can I make it so that it choses the alternative
solution. (I've tried using  backtracking to no avail. Maybe I'm doing it
wrong but my current assumption is that since the ambiguity is at the lexer
rather than at the parser level the parser can't do much to solve the
conflict).
-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From jbb at acm.org  Tue Sep 11 19:41:50 2012
From: jbb at acm.org (John B. Brodie)
Date: Tue, 11 Sep 2012 22:41:50 -0400
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
Message-ID: <504FF66E.5060302@acm.org>

Greetings!

You might try something like the following --- obviously untested since 
you did not provide complete example of your issue:

FLOAT:
   (DIGIT)+ '.' (DIGIT)* EXPONENT?
| (DIGIT)+ EXPONENT;

  DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;

hopefully in your language the 2structure strings  can never match a 
FLOAT.....
(e.g. something like 1structure.2E5.35 isnt permitted....)

Hope this helps...
    -jbb

On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
> So I was gaving a problem with my lexer recognition where my double token
> is defined as follows.
>
> FLOAT:
>    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> | '.' (DIGIT)+ EXPONENT?
> | (DIGIT)+ EXPONENT;
>
>
> However additional to that I have certain structures where the following
> syntax:
>
> 1structure.2structure .35
>
> Should be recognized by the following grammar
>
> STRING (DOT STRING)? FLOAT
>
> The problem being of course, that my lexer is recognizing the .2 token as a
> FLOAT and I'm not sure how can I make it so that it choses the alternative
> solution. (I've tried using  backtracking to no avail. Maybe I'm doing it
> wrong but my current assumption is that since the ambiguity is at the lexer
> rather than at the parser level the parser can't do much to solve the
> conflict).


From lesbell at lesbell.com.au  Tue Sep 11 19:53:01 2012
From: lesbell at lesbell.com.au (Les Bell)
Date: Wed, 12 Sep 2012 12:53:01 +1000
Subject: [antlr-interest] Using @init and @after to populate an object with
	children
Message-ID: <504FF90D.300@lesbell.com.au>

I'm currently working on a DSL for implementation of computational trust
decisions in e-commerce transactions. The semantic model is, at base, a
state machine in which two agents step through the states, exchanging
messages which represent a contract between the two.

My simple DSL lets me write scripts with fragments like these:

state shopping
  on adReceived -> offering, sendOffer
end

which means that when in state 'shopping', if an adReceived message is
received, transition to state 'offering' and during the transition, send
an offer message.

The transitions are nested within states, and there will often be
multiple transitions in each state.

The problem I have is that construction of the state machine when the
script is parsed logically requires the State objects to be created
first, and then Transition objects added to them. But, of course, the
parser reads ahead and gets to the embedded transition rules, creating
the Transitions, before the state rule gets a chance to create a State.
The way I've solved this is - in skeletal form - as follows:

stateDec
    scope {
      ArrayList<Transition> at;
    }
    @init {
      $stateDec::at = new ArrayList<Transition>();
    }
    @after{
      // This was used for debugging
      System.out.println("at has " + $stateDec::at.size() + " members");
    }
    : 'state' ID (transition {$stateDec::at.add($transition.t);})* 'end'
    {
      State s = tt.getState($ID.text);  // If it didn't exist before, it
will be created.
      for (int i = 0; i < $stateDec::at.size(); i++ )
        s.addTransition($stateDec::at.get(i));
    } // End of action
    ;

and the transition rule looks like this (similarly processing its list
of commands):

transition returns [Transition t]
  scope {
    ArrayList<Command> ac;
  }
  @init {
    $transition::ac = new ArrayList<Command>();
  }
  : 'on' eventid (conditional {$transition::gc = $conditional.tree; })?
'->' ID (','! commandid {$transition::ac.add($commandid.command); })*
  { ... } ;

This seems a little ugly to me, but it works (as far as I've tested,
which isn't far yet). Have I overlooked a more obvious and natural way
do what I need? Also, would it be better to place the code that adds
children to the newly created object in the @after action?

Best,

--- Les Bell
[+61 2 9451 1144]
[http://www.lesbell.com.au]

From jmcgrew at gmail.com  Tue Sep 11 21:13:25 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Tue, 11 Sep 2012 21:13:25 -0700
Subject: [antlr-interest] Using @init and @after to populate an object
 with children
In-Reply-To: <504FF90D.300@lesbell.com.au>
References: <504FF90D.300@lesbell.com.au>
Message-ID: <CAJ3AhhU7sVfAm2j7afqB4fZbKaV7N2Y7Ja=TgLEmLZM_sqa20A@mail.gmail.com>

Why not use embedded actions like so:

stateDec
    scope {
      ArrayList<Transition> at;
    }
    @init { State s = null; }
    : 'state' ID {s = tt.getState($ID.text);}
    (transition {s.addTransition($transition.t);})* 'end'
    ;

The variable "s" has to be declared in @init so it'll be in scope for
the whole method, but if you put the allocation in an action, you can
avoid creating objects during backtracking.

Jesse

On Tue, Sep 11, 2012 at 7:53 PM, Les Bell <lesbell at lesbell.com.au> wrote:
> I'm currently working on a DSL for implementation of computational trust
> decisions in e-commerce transactions. The semantic model is, at base, a
> state machine in which two agents step through the states, exchanging
> messages which represent a contract between the two.
>
> My simple DSL lets me write scripts with fragments like these:
>
> state shopping
>   on adReceived -> offering, sendOffer
> end
>
> which means that when in state 'shopping', if an adReceived message is
> received, transition to state 'offering' and during the transition, send
> an offer message.
>
> The transitions are nested within states, and there will often be
> multiple transitions in each state.
>
> The problem I have is that construction of the state machine when the
> script is parsed logically requires the State objects to be created
> first, and then Transition objects added to them. But, of course, the
> parser reads ahead and gets to the embedded transition rules, creating
> the Transitions, before the state rule gets a chance to create a State.
> The way I've solved this is - in skeletal form - as follows:
>
> stateDec
>     scope {
>       ArrayList<Transition> at;
>     }
>     @init {
>       $stateDec::at = new ArrayList<Transition>();
>     }
>     @after{
>       // This was used for debugging
>       System.out.println("at has " + $stateDec::at.size() + " members");
>     }
>     : 'state' ID (transition {$stateDec::at.add($transition.t);})* 'end'
>     {
>       State s = tt.getState($ID.text);  // If it didn't exist before, it
> will be created.
>       for (int i = 0; i < $stateDec::at.size(); i++ )
>         s.addTransition($stateDec::at.get(i));
>     } // End of action
>     ;
>
> and the transition rule looks like this (similarly processing its list
> of commands):
>
> transition returns [Transition t]
>   scope {
>     ArrayList<Command> ac;
>   }
>   @init {
>     $transition::ac = new ArrayList<Command>();
>   }
>   : 'on' eventid (conditional {$transition::gc = $conditional.tree; })?
> '->' ID (','! commandid {$transition::ac.add($commandid.command); })*
>   { ... } ;
>
> This seems a little ugly to me, but it works (as far as I've tested,
> which isn't far yet). Have I overlooked a more obvious and natural way
> do what I need? Also, would it be better to place the code that adds
> children to the newly created object in the @after action?
>
> Best,
>
> --- Les Bell
> [+61 2 9451 1144]
> [http://www.lesbell.com.au]
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mike at lischke-online.de  Wed Sep 12 00:40:41 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 12 Sep 2012 09:40:41 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
Message-ID: <004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>


Jim,

> It is not a bug with the C target, as I have explained on numerous
> occasions. The other targets rely on method signatures to select the
> correct re-write. This is not available in C.

Sorry, have never seen such an explanation with all my searches I have done already in this list. You know all the internals surely way better than I do, but what is specifically missing that you can't create a virtual token with info from another token? Making a construct like DUM[$lb] working doesn't sound very complicated.

> 
> However, the information is erroneous anyway. Look at the generated code
> and you will see that only root nodes are fixed up with positional info.
> 
> Finally, rewriting like that is very expensive. I don't recommend it
> anyway.

You are probably referring to the complete original example while I'm specifically after a simple way to change properties of a token (especially when it can be written target independently). A good example is the list of keywords, which must sometimes be interpreted as normal identifiers, so what would be simple is something like:

keywords:
	(
	kw = KEYWORD1
	| kw = KEYWORD2
	...
	)
	-> ID[$kw]
;

There's no separate info necessary I'd say, everything is there, but still, the C target produces incorrect code (using kw like a string IIRC).

So what I do now (as I really need this) is:

keywords:
	KEYWORD1
	| KEYWORD2
	...
;
finally
{
	retval.start->setType(retval.start, IDENTIFIER);
}

which is rather a hack IMO, but the simplest solution I could come up with. I'm all ears for better solutions, if there's any.

Btw. when a feature really cannot be implemented in the C target, wouldn't it be better to write out some error message that the compiler complains about, so the grammar developer knows he cannot use this feature, instead letting him believe all is fine? Otherwise he's condemned to debug the grammar until he finds out the produced code is wrong (which can take quite some time when working with big grammars where loading the parser into the editor can easily take 20-30 secs).

Mike
-- 
www.soft-gems.net



From asicaddress at gmail.com  Wed Sep 12 08:29:55 2012
From: asicaddress at gmail.com (A Z)
Date: Wed, 12 Sep 2012 10:29:55 -0500
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
Message-ID: <CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>

I solved this by hacking the code generator to call the createTypeToken()
function instead of the createTokenText() or createTypeText() functions
that the generated code normally calls. You might be able to avoid this
change by using ID[$kw,""] in your grammar.

Ad

On Wed, Sep 12, 2012 at 2:40 AM, Mike Lischke <mike at lischke-online.de>wrote:

>
> Jim,
>
> > It is not a bug with the C target, as I have explained on numerous
> > occasions. The other targets rely on method signatures to select the
> > correct re-write. This is not available in C.
>
> Sorry, have never seen such an explanation with all my searches I have
> done already in this list. You know all the internals surely way better
> than I do, but what is specifically missing that you can't create a virtual
> token with info from another token? Making a construct like DUM[$lb]
> working doesn't sound very complicated.
>
> >
> > However, the information is erroneous anyway. Look at the generated code
> > and you will see that only root nodes are fixed up with positional info.
> >
> > Finally, rewriting like that is very expensive. I don't recommend it
> > anyway.
>
> You are probably referring to the complete original example while I'm
> specifically after a simple way to change properties of a token (especially
> when it can be written target independently). A good example is the list of
> keywords, which must sometimes be interpreted as normal identifiers, so
> what would be simple is something like:
>
> keywords:
>         (
>         kw = KEYWORD1
>         | kw = KEYWORD2
>         ...
>         )
>         -> ID[$kw]
> ;
>
> There's no separate info necessary I'd say, everything is there, but
> still, the C target produces incorrect code (using kw like a string IIRC).
>
> So what I do now (as I really need this) is:
>
> keywords:
>         KEYWORD1
>         | KEYWORD2
>         ...
> ;
> finally
> {
>         retval.start->setType(retval.start, IDENTIFIER);
> }
>
> which is rather a hack IMO, but the simplest solution I could come up
> with. I'm all ears for better solutions, if there's any.
>
> Btw. when a feature really cannot be implemented in the C target, wouldn't
> it be better to write out some error message that the compiler complains
> about, so the grammar developer knows he cannot use this feature, instead
> letting him believe all is fine? Otherwise he's condemned to debug the
> grammar until he finds out the produced code is wrong (which can take quite
> some time when working with big grammars where loading the parser into the
> editor can easily take 20-30 secs).
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mike at lischke-online.de  Wed Sep 12 08:54:20 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 12 Sep 2012 17:54:20 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
Message-ID: <79B2F3C8-48C1-4FBD-A39A-B1763D034B1F@lischke-online.de>

Ad,

Yes, you mentioned this already and Jim replied that this change is not good (because it might have unwanted side effects). 

> I solved this by hacking the code generator to call the createTypeToken() function instead of the createTokenText() or createTypeText() functions that the generated code normally calls. You might be able to avoid this change by using ID[$kw,""] in your grammar.


Your tip works but then I have no token text. I could as well just use "-> IDENTIFIER" then. I also tried:

test:
	(
		kw = 'XXX'
		| kw = 'YYY'
	) -> IDENTIFIER[$kw, $text]

but then the token text is not the empty string but null. Passing any other string has the same effect as passing in the empty string.

Mike
-- 
www.soft-gems.net


From jjtapia at gmail.com  Wed Sep 12 11:20:32 2012
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Wed, 12 Sep 2012 14:20:32 -0400
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <504FF66E.5060302@acm.org>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
	<504FF66E.5060302@acm.org>
Message-ID: <CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>

Thank you for your suggestion. Unfortunately it still seems to be
recognizing the .2 as a float. I was wondering if there was any way to tell
the LEXER definition that any structure of the kind

DOT DIGIT+

should be recognized as a float, but if it has the form

DOT DIGIT+ LETTER+, that is a DOT STRING where my STRING definition is

STRING: (LETTER | DIGIT | '_')+


it is recognized instead as a DOT STRING combination. instead of a FLOAT.
Maybe I could be more strict with my STRING definition in some way?


On Tue, Sep 11, 2012 at 10:41 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
>
> You might try something like the following --- obviously untested since
> you did not provide complete example of your issue:
>
> FLOAT:
>    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> | (DIGIT)+ EXPONENT;
>
>   DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;
>
> hopefully in your language the 2structure strings  can never match a
> FLOAT.....
> (e.g. something like 1structure.2E5.35 isnt permitted....)
>
> Hope this helps...
>     -jbb
>
> On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
> > So I was gaving a problem with my lexer recognition where my double token
> > is defined as follows.
> >
> > FLOAT:
> >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> > | '.' (DIGIT)+ EXPONENT?
> > | (DIGIT)+ EXPONENT;
> >
> >
> > However additional to that I have certain structures where the following
> > syntax:
> >
> > 1structure.2structure .35
> >
> > Should be recognized by the following grammar
> >
> > STRING (DOT STRING)? FLOAT
> >
> > The problem being of course, that my lexer is recognizing the .2 token
> as a
> > FLOAT and I'm not sure how can I make it so that it choses the
> alternative
> > solution. (I've tried using  backtracking to no avail. Maybe I'm doing it
> > wrong but my current assumption is that since the ambiguity is at the
> lexer
> > rather than at the parser level the parser can't do much to solve the
> > conflict).
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From jjtapia at gmail.com  Wed Sep 12 11:39:56 2012
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Wed, 12 Sep 2012 14:39:56 -0400
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
	<504FF66E.5060302@acm.org>
	<CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
Message-ID: <CAPQEofbzkn9n+cxozUez0ZenkQPRjEJqdskrPucc-D3O0a5jUA@mail.gmail.com>

A lookahead I guess.


On Wed, Sep 12, 2012 at 2:20 PM, Jose Juan Tapia <jjtapia at gmail.com> wrote:

> Thank you for your suggestion. Unfortunately it still seems to be
> recognizing the .2 as a float. I was wondering if there was any way to tell
> the LEXER definition that any structure of the kind
>
> DOT DIGIT+
>
> should be recognized as a float, but if it has the form
>
> DOT DIGIT+ LETTER+, that is a DOT STRING where my STRING definition is
>
> STRING: (LETTER | DIGIT | '_')+
>
>
> it is recognized instead as a DOT STRING combination. instead of a FLOAT.
> Maybe I could be more strict with my STRING definition in some way?
>
>
> On Tue, Sep 11, 2012 at 10:41 PM, John B. Brodie <jbb at acm.org> wrote:
>
>> Greetings!
>>
>> You might try something like the following --- obviously untested since
>> you did not provide complete example of your issue:
>>
>> FLOAT:
>>    (DIGIT)+ '.' (DIGIT)* EXPONENT?
>> | (DIGIT)+ EXPONENT;
>>
>>   DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;
>>
>> hopefully in your language the 2structure strings  can never match a
>> FLOAT.....
>> (e.g. something like 1structure.2E5.35 isnt permitted....)
>>
>> Hope this helps...
>>     -jbb
>>
>> On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
>> > So I was gaving a problem with my lexer recognition where my double
>> token
>> > is defined as follows.
>> >
>> > FLOAT:
>> >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
>> > | '.' (DIGIT)+ EXPONENT?
>> > | (DIGIT)+ EXPONENT;
>> >
>> >
>> > However additional to that I have certain structures where the following
>> > syntax:
>> >
>> > 1structure.2structure .35
>> >
>> > Should be recognized by the following grammar
>> >
>> > STRING (DOT STRING)? FLOAT
>> >
>> > The problem being of course, that my lexer is recognizing the .2 token
>> as a
>> > FLOAT and I'm not sure how can I make it so that it choses the
>> alternative
>> > solution. (I've tried using  backtracking to no avail. Maybe I'm doing
>> it
>> > wrong but my current assumption is that since the ambiguity is at the
>> lexer
>> > rather than at the parser level the parser can't do much to solve the
>> > conflict).
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> --
> Jos? Juan Tapia Valenzuela
> Research Associate
> University of Pittsburgh
> 3076.1 Biological Sciences Tower 3
> Pittsburgh, Pa 15260
>



-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From jmcgrew at gmail.com  Wed Sep 12 11:48:20 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Wed, 12 Sep 2012 11:48:20 -0700
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <CAPQEofbzkn9n+cxozUez0ZenkQPRjEJqdskrPucc-D3O0a5jUA@mail.gmail.com>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
	<504FF66E.5060302@acm.org>
	<CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
	<CAPQEofbzkn9n+cxozUez0ZenkQPRjEJqdskrPucc-D3O0a5jUA@mail.gmail.com>
Message-ID: <CAJ3AhhXhvG9noQgsWafUomr2OnOnJtE7sa2i1Px2Kj3z6ha3Nw@mail.gmail.com>

Yes, try using a gating semantic predicate to look ahead and only
allow the DIGIT+ option if it sees one or more digits followed by
something that isn't a letter:

DOT ( {yourLookAhead()}?=> DIGIT+ | /* lookahead failed */ {$type = DOT;} )

(It'd be nice if syntactic predicates worked for this, but I don't
think they do.)

Jesse

On Wed, Sep 12, 2012 at 11:39 AM, Jose Juan Tapia <jjtapia at gmail.com> wrote:
> A lookahead I guess.
>
>
> On Wed, Sep 12, 2012 at 2:20 PM, Jose Juan Tapia <jjtapia at gmail.com> wrote:
>
>> Thank you for your suggestion. Unfortunately it still seems to be
>> recognizing the .2 as a float. I was wondering if there was any way to tell
>> the LEXER definition that any structure of the kind
>>
>> DOT DIGIT+
>>
>> should be recognized as a float, but if it has the form
>>
>> DOT DIGIT+ LETTER+, that is a DOT STRING where my STRING definition is
>>
>> STRING: (LETTER | DIGIT | '_')+
>>
>>
>> it is recognized instead as a DOT STRING combination. instead of a FLOAT.
>> Maybe I could be more strict with my STRING definition in some way?
>>
>>
>> On Tue, Sep 11, 2012 at 10:41 PM, John B. Brodie <jbb at acm.org> wrote:
>>
>>> Greetings!
>>>
>>> You might try something like the following --- obviously untested since
>>> you did not provide complete example of your issue:
>>>
>>> FLOAT:
>>>    (DIGIT)+ '.' (DIGIT)* EXPONENT?
>>> | (DIGIT)+ EXPONENT;
>>>
>>>   DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;
>>>
>>> hopefully in your language the 2structure strings  can never match a
>>> FLOAT.....
>>> (e.g. something like 1structure.2E5.35 isnt permitted....)
>>>
>>> Hope this helps...
>>>     -jbb
>>>
>>> On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
>>> > So I was gaving a problem with my lexer recognition where my double
>>> token
>>> > is defined as follows.
>>> >
>>> > FLOAT:
>>> >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
>>> > | '.' (DIGIT)+ EXPONENT?
>>> > | (DIGIT)+ EXPONENT;
>>> >
>>> >
>>> > However additional to that I have certain structures where the following
>>> > syntax:
>>> >
>>> > 1structure.2structure .35
>>> >
>>> > Should be recognized by the following grammar
>>> >
>>> > STRING (DOT STRING)? FLOAT
>>> >
>>> > The problem being of course, that my lexer is recognizing the .2 token
>>> as a
>>> > FLOAT and I'm not sure how can I make it so that it choses the
>>> alternative
>>> > solution. (I've tried using  backtracking to no avail. Maybe I'm doing
>>> it
>>> > wrong but my current assumption is that since the ambiguity is at the
>>> lexer
>>> > rather than at the parser level the parser can't do much to solve the
>>> > conflict).
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> --
>> Jos? Juan Tapia Valenzuela
>> Research Associate
>> University of Pittsburgh
>> 3076.1 Biological Sciences Tower 3
>> Pittsburgh, Pa 15260
>>
>
>
>
> --
> Jos? Juan Tapia Valenzuela
> Research Associate
> University of Pittsburgh
> 3076.1 Biological Sciences Tower 3
> Pittsburgh, Pa 15260
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Sep 12 13:11:49 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Sep 2012 13:11:49 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
Message-ID: <36c2883c5b62d3fe6a654a8fd2798b79@mail.gmail.com>

Mike,

I look forward to receiving you solution for this simple problem.

Jim

> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Wednesday, September 12, 2012 12:41 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source positions for imaginary tokens
>
>
> Jim,
>
> > It is not a bug with the C target, as I have explained on numerous
> > occasions. The other targets rely on method signatures to select the
> > correct re-write. This is not available in C.
>
> Sorry, have never seen such an explanation with all my searches I have
> done already in this list. You know all the internals surely way better
> than I do, but what is specifically missing that you can't create a
> virtual token with info from another token? Making a construct like
> DUM[$lb] working doesn't sound very complicated.
>
> >
> > However, the information is erroneous anyway. Look at the generated
> > code and you will see that only root nodes are fixed up with
> positional info.
> >
> > Finally, rewriting like that is very expensive. I don't recommend it
> > anyway.
>
> You are probably referring to the complete original example while I'm
> specifically after a simple way to change properties of a token
> (especially when it can be written target independently). A good
> example is the list of keywords, which must sometimes be interpreted as
> normal identifiers, so what would be simple is something like:
>
> keywords:
> 	(
> 	kw = KEYWORD1
> 	| kw = KEYWORD2
> 	...
> 	)
> 	-> ID[$kw]
> ;
>
> There's no separate info necessary I'd say, everything is there, but
> still, the C target produces incorrect code (using kw like a string
> IIRC).
>
> So what I do now (as I really need this) is:
>
> keywords:
> 	KEYWORD1
> 	| KEYWORD2
> 	...
> ;
> finally
> {
> 	retval.start->setType(retval.start, IDENTIFIER); }
>
> which is rather a hack IMO, but the simplest solution I could come up
> with. I'm all ears for better solutions, if there's any.
>
> Btw. when a feature really cannot be implemented in the C target,
> wouldn't it be better to write out some error message that the compiler
> complains about, so the grammar developer knows he cannot use this
> feature, instead letting him believe all is fine? Otherwise he's
> condemned to debug the grammar until he finds out the produced code is
> wrong (which can take quite some time when working with big grammars
> where loading the parser into the editor can easily take 20-30 secs).
>
> Mike
> --
> www.soft-gems.net
>

From jimi at temporal-wave.com  Wed Sep 12 13:18:26 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Sep 2012 13:18:26 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
Message-ID: <cfde2907c1a347553285355f35281d71@mail.gmail.com>

Sure ? I can make it be either of those calls, but not both at once. I have
no context at code generation time that can tell me which one to generate.
If I change it to this, then all the people that want it to be the other
way, will claim that they have found a bug too. It only works in Java
because the Java compiler can see what the argument types are, and can
therefore call the ?correct? method.



However, it is much simpler to just use code to operate on the token
directly. Even before that, you should consider whether you need to change
something about the token because a later stage MUST receive a different
token, or whether you just think that you WANT it to.



Jim



*From:* A Z [mailto:asicaddress at gmail.com]
*Sent:* Wednesday, September 12, 2012 8:30 AM
*To:* Mike Lischke
*Cc:* Jim Idle; antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] Source positions for imaginary tokens



I solved this by hacking the code generator to call the createTypeToken()
function instead of the createTokenText() or createTypeText() functions
that the generated code normally calls. You might be able to avoid this
change by using ID[$kw,""] in your grammar.

Ad

On Wed, Sep 12, 2012 at 2:40 AM, Mike Lischke <mike at lischke-online.de>
wrote:


Jim,


> It is not a bug with the C target, as I have explained on numerous
> occasions. The other targets rely on method signatures to select the
> correct re-write. This is not available in C.

Sorry, have never seen such an explanation with all my searches I have done
already in this list. You know all the internals surely way better than I
do, but what is specifically missing that you can't create a virtual token
with info from another token? Making a construct like DUM[$lb] working
doesn't sound very complicated.


>
> However, the information is erroneous anyway. Look at the generated code
> and you will see that only root nodes are fixed up with positional info.
>
> Finally, rewriting like that is very expensive. I don't recommend it
> anyway.

You are probably referring to the complete original example while I'm
specifically after a simple way to change properties of a token (especially
when it can be written target independently). A good example is the list of
keywords, which must sometimes be interpreted as normal identifiers, so
what would be simple is something like:

keywords:
        (
        kw = KEYWORD1
        | kw = KEYWORD2
        ...
        )
        -> ID[$kw]
;

There's no separate info necessary I'd say, everything is there, but still,
the C target produces incorrect code (using kw like a string IIRC).

So what I do now (as I really need this) is:

keywords:
        KEYWORD1
        | KEYWORD2
        ...
;
finally
{
        retval.start->setType(retval.start, IDENTIFIER);
}

which is rather a hack IMO, but the simplest solution I could come up with.
I'm all ears for better solutions, if there's any.

Btw. when a feature really cannot be implemented in the C target, wouldn't
it be better to write out some error message that the compiler complains
about, so the grammar developer knows he cannot use this feature, instead
letting him believe all is fine? Otherwise he's condemned to debug the
grammar until he finds out the produced code is wrong (which can take quite
some time when working with big grammars where loading the parser into the
editor can easily take 20-30 secs).


Mike
--
www.soft-gems.net



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Sep 12 13:38:38 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Sep 2012 13:38:38 -0700
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
	<504FF66E.5060302@acm.org>
	<CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
Message-ID: <7aed2e448526a19a73387f368931ff12@mail.gmail.com>

Start here:

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs

It should enable you to work out a solution.

Jim




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jose Juan Tapia
> Sent: Wednesday, September 12, 2012 11:21 AM
> To: John B. Brodie
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Solving lexer ambiguities
>
> Thank you for your suggestion. Unfortunately it still seems to be
> recognizing the .2 as a float. I was wondering if there was any way to
> tell the LEXER definition that any structure of the kind
>
> DOT DIGIT+
>
> should be recognized as a float, but if it has the form
>
> DOT DIGIT+ LETTER+, that is a DOT STRING where my STRING definition is
>
> STRING: (LETTER | DIGIT | '_')+
>
>
> it is recognized instead as a DOT STRING combination. instead of a
> FLOAT.
> Maybe I could be more strict with my STRING definition in some way?
>
>
> On Tue, Sep 11, 2012 at 10:41 PM, John B. Brodie <jbb at acm.org> wrote:
>
> > Greetings!
> >
> > You might try something like the following --- obviously untested
> > since you did not provide complete example of your issue:
> >
> > FLOAT:
> >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> > | (DIGIT)+ EXPONENT;
> >
> >   DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;
> >
> > hopefully in your language the 2structure strings  can never match a
> > FLOAT.....
> > (e.g. something like 1structure.2E5.35 isnt permitted....)
> >
> > Hope this helps...
> >     -jbb
> >
> > On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
> > > So I was gaving a problem with my lexer recognition where my double
> > > token is defined as follows.
> > >
> > > FLOAT:
> > >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> > > | '.' (DIGIT)+ EXPONENT?
> > > | (DIGIT)+ EXPONENT;
> > >
> > >
> > > However additional to that I have certain structures where the
> > > following
> > > syntax:
> > >
> > > 1structure.2structure .35
> > >
> > > Should be recognized by the following grammar
> > >
> > > STRING (DOT STRING)? FLOAT
> > >
> > > The problem being of course, that my lexer is recognizing the .2
> > > token
> > as a
> > > FLOAT and I'm not sure how can I make it so that it choses the
> > alternative
> > > solution. (I've tried using  backtracking to no avail. Maybe I'm
> > > doing it wrong but my current assumption is that since the
> ambiguity
> > > is at the
> > lexer
> > > rather than at the parser level the parser can't do much to solve
> > > the conflict).
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
>
> --
> Jos? Juan Tapia Valenzuela
> Research Associate
> University of Pittsburgh
> 3076.1 Biological Sciences Tower 3
> Pittsburgh, Pa 15260
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jjtapia at gmail.com  Wed Sep 12 18:06:33 2012
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Wed, 12 Sep 2012 21:06:33 -0400
Subject: [antlr-interest] Solving lexer ambiguities
In-Reply-To: <7aed2e448526a19a73387f368931ff12@mail.gmail.com>
References: <CAPQEofZi0R3ePf+73ZRHH_yv6_zVdi5n=M2WDaYOynuj6k1p0Q@mail.gmail.com>
	<504FF66E.5060302@acm.org>
	<CAPQEofb5cPUXp+mCG5tsSHHt0_Eg2manpHmdn3aNfSZUV7s3EQ@mail.gmail.com>
	<7aed2e448526a19a73387f368931ff12@mail.gmail.com>
Message-ID: <CAPQEofZ=X_Hauj2tWBmTjk9ejqswf47-r0jwiH-r2Ho3Je0O6A@mail.gmail.com>

Thank you. I think I got it. For completeness sake I'll post my solution
@members{
 public boolean floatLA(){
    int counter = 1;
    while(true){
      int LA8_0 = input.LT(counter);
      if ((LA8_0>='0' && LA8_0<='9')){
        counter++;
      }
      else{
        break;
      }
    }
    int LA14_0 = input.LT(counter);
    if((LA14_0>='A' && LA14_0<='Z')||LA14_0=='_'||(LA14_0>='a' &&
LA14_0<='z'))
      return false;
    return true;
 }
}


DOT : '.'   ({floatLA()}? => ((DIGIT)+ EXPONENT?  {$type=FLOAT;}) |
{$type=DOT;});


On Wed, Sep 12, 2012 at 4:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Start here:
>
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs
>
> It should enable you to work out a solution.
>
> Jim
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jose Juan Tapia
> > Sent: Wednesday, September 12, 2012 11:21 AM
> > To: John B. Brodie
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Solving lexer ambiguities
> >
> > Thank you for your suggestion. Unfortunately it still seems to be
> > recognizing the .2 as a float. I was wondering if there was any way to
> > tell the LEXER definition that any structure of the kind
> >
> > DOT DIGIT+
> >
> > should be recognized as a float, but if it has the form
> >
> > DOT DIGIT+ LETTER+, that is a DOT STRING where my STRING definition is
> >
> > STRING: (LETTER | DIGIT | '_')+
> >
> >
> > it is recognized instead as a DOT STRING combination. instead of a
> > FLOAT.
> > Maybe I could be more strict with my STRING definition in some way?
> >
> >
> > On Tue, Sep 11, 2012 at 10:41 PM, John B. Brodie <jbb at acm.org> wrote:
> >
> > > Greetings!
> > >
> > > You might try something like the following --- obviously untested
> > > since you did not provide complete example of your issue:
> > >
> > > FLOAT:
> > >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> > > | (DIGIT)+ EXPONENT;
> > >
> > >   DOT: '.' ( (DIGIT)+ EXPONENT? {$type=FLOAT;} )? ;
> > >
> > > hopefully in your language the 2structure strings  can never match a
> > > FLOAT.....
> > > (e.g. something like 1structure.2E5.35 isnt permitted....)
> > >
> > > Hope this helps...
> > >     -jbb
> > >
> > > On 09/11/2012 08:45 PM, Jose Juan Tapia wrote:
> > > > So I was gaving a problem with my lexer recognition where my double
> > > > token is defined as follows.
> > > >
> > > > FLOAT:
> > > >    (DIGIT)+ '.' (DIGIT)* EXPONENT?
> > > > | '.' (DIGIT)+ EXPONENT?
> > > > | (DIGIT)+ EXPONENT;
> > > >
> > > >
> > > > However additional to that I have certain structures where the
> > > > following
> > > > syntax:
> > > >
> > > > 1structure.2structure .35
> > > >
> > > > Should be recognized by the following grammar
> > > >
> > > > STRING (DOT STRING)? FLOAT
> > > >
> > > > The problem being of course, that my lexer is recognizing the .2
> > > > token
> > > as a
> > > > FLOAT and I'm not sure how can I make it so that it choses the
> > > alternative
> > > > solution. (I've tried using  backtracking to no avail. Maybe I'm
> > > > doing it wrong but my current assumption is that since the
> > ambiguity
> > > > is at the
> > > lexer
> > > > rather than at the parser level the parser can't do much to solve
> > > > the conflict).
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> >
> >
> > --
> > Jos? Juan Tapia Valenzuela
> > Research Associate
> > University of Pittsburgh
> > 3076.1 Biological Sciences Tower 3
> > Pittsburgh, Pa 15260
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From michael.bedward at gmail.com  Wed Sep 12 21:58:43 2012
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 13 Sep 2012 14:58:43 +1000
Subject: [antlr-interest] ANTLR 4 book
Message-ID: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>

Just saw a newsletter from Pragmatic Programmers which mentions an
upcoming ANTLR 4 reference book.  Great news !

Michael

From mike at lischke-online.de  Wed Sep 12 23:53:31 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 13 Sep 2012 08:53:31 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <cfde2907c1a347553285355f35281d71@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
Message-ID: <770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>


Hey Jim,

> Sure ? I can make it be either of those calls, but not both at once. I have
> no context at code generation time that can tell me which one to generate.

So you say, you don't know at this time what type $kw in the ID[$kw] expression is? Absolutely no way to determine if that is a string or a token reference? That's odd.

> If I change it to this, then all the people that want it to be the other
> way, will claim that they have found a bug too. It only works in Java
> because the Java compiler can see what the argument types are, and can
> therefore call the ?correct? method.

I understand your restrictions, but find this situation all but pleasant (and I'm not alone I'm afraid).

> However, it is much simpler to just use code to operate on the token
> directly. Even before that, you should consider whether you need to change
> something about the token because a later stage MUST receive a different
> token, or whether you just think that you WANT it to.


In the keyword case it is just so that I need only one (very common) token type but want to retain the token text for later processing. It's unfortunate that there is no general solution for the frequently encountered keywords-as-identifier problem.

Anyway, Jim, thanks for patience and time!

Mike
-- 
www.soft-gems.net



From mike at lischke-online.de  Thu Sep 13 00:15:17 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 13 Sep 2012 09:15:17 +0200
Subject: [antlr-interest] ANTLR 4 book
In-Reply-To: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
References: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
Message-ID: <976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>


> Just saw a newsletter from Pragmatic Programmers which mentions an
> upcoming ANTLR 4 reference book.  Great news !



Right, it's already on Amazon (publishing date is said to be Nov 30).

Mike
-- 
www.soft-gems.net



From apalala at gmail.com  Thu Sep 13 05:59:05 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Thu, 13 Sep 2012 08:29:05 -0430
Subject: [antlr-interest] Why Python behind?
Message-ID: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>

(sorry if I'm posting this twice)

Why is the Python target stuck at 3.1.3?

What can I do to help keep it up-to-date with ANTLR releases?

Cheers,

-- 
Juancarlo *A?ez*

From jmurray at aerotech.com  Thu Sep 13 06:25:04 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 13 Sep 2012 09:25:04 -0400
Subject: [antlr-interest] Overriding INPUT->istream->consume
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D296C@EXCH-VIRTUAL.aerotechad.com>

Jim,

I've decided that for my current project, I need to override the
functionality in antlr3UTF8Consume(). I need to correctly handle '\r'
when setting the token line numbers. This means counting '\r' or '\n'
alone each as a newline, and counting '\r' \'n' in sequence as a single
newline. This was easy enough to do (attached as a reference for others,
since I could not find this anywhere).

What I have attached works, but notice that I had to redefine the arrays
trailingBytesForUTF8 and offsetsFromUTF8 to use them in my version of
the code. This is because they are declared as static in
antlr3inputstream.c. I don't like the idea of modifying the distributed
source for the runtime directly to make it not static (this is hard to
maintain properly). I also don't like my current solution of just
duplicating the code. My question for Jim is, is there a better way to
do this, or is this something that could be improved in later versions
of the runtime (this is 3.4)?

Cheers,

- Justin Murray

----
@lexer::apifuncs
{
	INPUT->istream->consume = customUTF8Consume;
}

@lexer::members
{
	// ------------------------------------------------------
	// Following is from Unicode.org (see antlr3convertutf.c)
	//

	/// Index into the table below with the first byte of a UTF-8
sequence to
	/// get the number of trailing bytes that are supposed to follow
it.
	/// Note that *legal* UTF-8 values can't have 4 or 5-bytes. The
table is
	/// left as-is for anyone who may want to do such conversion,
which was
	/// allowed in earlier algorithms.
	///
	static const ANTLR3_UINT32 trailingBytesForUTF8[256] = {
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5
	};

	/// Magic values subtracted from a buffer value during UTF8
conversion.
	/// This table contains as many values as there might be
trailing bytes
	/// in a UTF-8 sequence.
	///
	static const UTF32 offsetsFromUTF8[6] = 
	{ 0x00000000UL, 0x00003080UL, 0x000E2080UL, 0x03C82080UL,
0xFA082080UL, 0x82082080UL };

	// End of Unicode.org tables
	// -------------------------

	static void	customUTF8Consume(pANTLR3_INT_STREAM is)
	{
		pANTLR3_INPUT_STREAM    input;
		ANTLR3_UINT32           extraBytesToRead;
		ANTLR3_UCHAR            ch;
		pANTLR3_UINT8           nextChar;

		input   = ((pANTLR3_INPUT_STREAM) (is->super));

		nextChar = (pANTLR3_UINT8)input->nextChar;

		if	(nextChar < (((pANTLR3_UINT8)input->data) +
input->sizeBuf))
		{	
			// Indicate one more character in this line
			//
			input->charPositionInLine++;

			// Are there more bytes needed to make up the
whole thing?
			//
			extraBytesToRead =
trailingBytesForUTF8[*nextChar];

			if	(nextChar + extraBytesToRead >=
(((pANTLR3_UINT8)input->data) + input->sizeBuf))
			{
				input->nextChar =
(((pANTLR3_UINT8)input->data) + input->sizeBuf);
				return;
			}

			// Cases deliberately fall through (see note A
in antlrconvertutf.c)
			// Legal UTF8 is only 4 bytes but 6 bytes could
be used in old UTF8 so
			// we allow it.
			//
			ch  = 0;
			switch (extraBytesToRead) {
			case 5: ch += *nextChar++; ch <<= 6;
			case 4: ch += *nextChar++; ch <<= 6;
			case 3: ch += *nextChar++; ch <<= 6;
			case 2: ch += *nextChar++; ch <<= 6;
			case 1: ch += *nextChar++; ch <<= 6;
			case 0: ch += *nextChar++;
			}

			// Magically correct the input value
			//
			ch -= offsetsFromUTF8[extraBytesToRead];
			if  (ch == '\n')
			{
				/* Reset for start of a new line of
input */
				if ((input->nextChar == input->data) ||
(*((pANTLR3_UINT8)input->nextChar-1) != '\r'))
				{
					// if it is the first character,
or the previous character was not a \r
					input->line++;
				}
			
				input->charPositionInLine	= 0;
				input->currentLine		= (void
*)nextChar;
			}
			else if (ch == '\r')
			{
				/* Reset for start of a new line of
input
				*/
				input->line++;
				input->charPositionInLine	= 0;
				input->currentLine		= (void
*)nextChar;
			}

			// Update input pointer
			//
			input->nextChar = nextChar;
		}
	}
}
----

From jimi at temporal-wave.com  Thu Sep 13 09:18:34 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Sep 2012 09:18:34 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
Message-ID: <22c637523e85e4420591ec3c512dfba4@mail.gmail.com>

Just use $token->type = ID;

That's all I do - the type field will never change.

At code generation time, all I have as some text in the string template,
that I must use to create the code text. I don't know what type of object
it is and neither does any other target; they use overloaded methods - I
don't have that luxury.

Jim

> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Wednesday, September 12, 2012 11:54 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source positions for imaginary tokens
>
>
> Hey Jim,
>
> > Sure - I can make it be either of those calls, but not both at once.
> I
> > have no context at code generation time that can tell me which one to
> generate.
>
> So you say, you don't know at this time what type $kw in the ID[$kw]
> expression is? Absolutely no way to determine if that is a string or a
> token reference? That's odd.
>
> > If I change it to this, then all the people that want it to be the
> > other way, will claim that they have found a bug too. It only works
> in
> > Java because the Java compiler can see what the argument types are,
> > and can therefore call the "correct" method.
>
> I understand your restrictions, but find this situation all but
> pleasant (and I'm not alone I'm afraid).
>
> > However, it is much simpler to just use code to operate on the token
> > directly. Even before that, you should consider whether you need to
> > change something about the token because a later stage MUST receive a
> > different token, or whether you just think that you WANT it to.
>
>
> In the keyword case it is just so that I need only one (very common)
> token type but want to retain the token text for later processing. It's
> unfortunate that there is no general solution for the frequently
> encountered keywords-as-identifier problem.
>
> Anyway, Jim, thanks for patience and time!
>
> Mike
> --
> www.soft-gems.net
>

From jimi at temporal-wave.com  Thu Sep 13 09:22:40 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Sep 2012 09:22:40 -0700
Subject: [antlr-interest] Overriding INPUT->istream->consume
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D296C@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D296C@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <e276acf046b1a897e3dd0951f7fbaec3@mail.gmail.com>

That's pretty much the way to do it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, September 13, 2012 6:25 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Overriding INPUT->istream->consume
>
> Jim,
>
> I've decided that for my current project, I need to override the
> functionality in antlr3UTF8Consume(). I need to correctly handle '\r'
> when setting the token line numbers. This means counting '\r' or '\n'
> alone each as a newline, and counting '\r' \'n' in sequence as a single
> newline. This was easy enough to do (attached as a reference for
> others, since I could not find this anywhere).
>
> What I have attached works, but notice that I had to redefine the
> arrays
> trailingBytesForUTF8 and offsetsFromUTF8 to use them in my version of
> the code. This is because they are declared as static in
> antlr3inputstream.c. I don't like the idea of modifying the distributed
> source for the runtime directly to make it not static (this is hard to
> maintain properly). I also don't like my current solution of just
> duplicating the code. My question for Jim is, is there a better way to
> do this, or is this something that could be improved in later versions
> of the runtime (this is 3.4)?
>
> Cheers,
>
> - Justin Murray
>
> ----
> @lexer::apifuncs
> {
> 	INPUT->istream->consume = customUTF8Consume; }
>
> @lexer::members
> {
> 	// ------------------------------------------------------
> 	// Following is from Unicode.org (see antlr3convertutf.c)
> 	//
>
> 	/// Index into the table below with the first byte of a UTF-8
> sequence to
> 	/// get the number of trailing bytes that are supposed to follow
> it.
> 	/// Note that *legal* UTF-8 values can't have 4 or 5-bytes. The
> table is
> 	/// left as-is for anyone who may want to do such conversion,
> which was
> 	/// allowed in earlier algorithms.
> 	///
> 	static const ANTLR3_UINT32 trailingBytesForUTF8[256] = {
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
> 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
> 		2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
> 3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5
> 	};
>
> 	/// Magic values subtracted from a buffer value during UTF8
> conversion.
> 	/// This table contains as many values as there might be trailing
> bytes
> 	/// in a UTF-8 sequence.
> 	///
> 	static const UTF32 offsetsFromUTF8[6] =
> 	{ 0x00000000UL, 0x00003080UL, 0x000E2080UL, 0x03C82080UL,
> 0xFA082080UL, 0x82082080UL };
>
> 	// End of Unicode.org tables
> 	// -------------------------
>
> 	static void	customUTF8Consume(pANTLR3_INT_STREAM is)
> 	{
> 		pANTLR3_INPUT_STREAM    input;
> 		ANTLR3_UINT32           extraBytesToRead;
> 		ANTLR3_UCHAR            ch;
> 		pANTLR3_UINT8           nextChar;
>
> 		input   = ((pANTLR3_INPUT_STREAM) (is->super));
>
> 		nextChar = (pANTLR3_UINT8)input->nextChar;
>
> 		if	(nextChar < (((pANTLR3_UINT8)input->data) +
> input->sizeBuf))
> 		{
> 			// Indicate one more character in this line
> 			//
> 			input->charPositionInLine++;
>
> 			// Are there more bytes needed to make up the
whole
> thing?
> 			//
> 			extraBytesToRead =
> trailingBytesForUTF8[*nextChar];
>
> 			if	(nextChar + extraBytesToRead >=
> (((pANTLR3_UINT8)input->data) + input->sizeBuf))
> 			{
> 				input->nextChar =
> (((pANTLR3_UINT8)input->data) + input->sizeBuf);
> 				return;
> 			}
>
> 			// Cases deliberately fall through (see note A in
> antlrconvertutf.c)
> 			// Legal UTF8 is only 4 bytes but 6 bytes could be
used
> in old UTF8 so
> 			// we allow it.
> 			//
> 			ch  = 0;
> 			switch (extraBytesToRead) {
> 			case 5: ch += *nextChar++; ch <<= 6;
> 			case 4: ch += *nextChar++; ch <<= 6;
> 			case 3: ch += *nextChar++; ch <<= 6;
> 			case 2: ch += *nextChar++; ch <<= 6;
> 			case 1: ch += *nextChar++; ch <<= 6;
> 			case 0: ch += *nextChar++;
> 			}
>
> 			// Magically correct the input value
> 			//
> 			ch -= offsetsFromUTF8[extraBytesToRead];
> 			if  (ch == '\n')
> 			{
> 				/* Reset for start of a new line of
> input */
> 				if ((input->nextChar == input->data) ||
> (*((pANTLR3_UINT8)input->nextChar-1) != '\r'))
> 				{
> 					// if it is the first character,
> or the previous character was not a \r
> 					input->line++;
> 				}
>
> 				input->charPositionInLine	= 0;
> 				input->currentLine		= (void
> *)nextChar;
> 			}
> 			else if (ch == '\r')
> 			{
> 				/* Reset for start of a new line of
> input
> 				*/
> 				input->line++;
> 				input->charPositionInLine	= 0;
> 				input->currentLine		= (void
> *)nextChar;
> 			}
>
> 			// Update input pointer
> 			//
> 			input->nextChar = nextChar;
> 		}
> 	}
> }
> ----
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mike at lischke-online.de  Thu Sep 13 09:39:02 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 13 Sep 2012 18:39:02 +0200
Subject: [antlr-interest] Conditional lexing
Message-ID: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>

Hi list,

I'd like to consume input in the lexer based on a variable I pass into my lexer rule. How can I do  this?

fragment VERSION_COMMENT_TAIL[bool matches_version]:
	{!matches_version}? ( options { greedy = false; }: . )* '*' '/' { $type = VERSION_COMMENT; $channel = 98; }
;

This shall consume everything like a normal multiline comment if the parameter is true. Otherwise it should do simply nothing. Unfortunately, the generated code creates an exception if the param is false and in addition runs the loop. Any other ideas?

If all fails I could simply make this instead:

fragment VERSION_COMMENT_TAIL[bool matches_version]:
	{ if (matches_version) return } ( options { greedy = false; }: . )* '*' '/' { $type = VERSION_COMMENT; $channel = 98; }
;

but that seems so hack-ish...

Mike
-- 
www.soft-gems.net


From jimi at temporal-wave.com  Thu Sep 13 09:56:15 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 13 Sep 2012 09:56:15 -0700
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
Message-ID: <613e04b8d14fb41a95bd81179aad05f3@mail.gmail.com>

You want a gated semantic predicate and will likely need a true and false
alt.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Thursday, September 13, 2012 9:39 AM
> To: ANTLR Mailing List
> Subject: [antlr-interest] Conditional lexing
>
> Hi list,
>
> I'd like to consume input in the lexer based on a variable I pass into
> my lexer rule. How can I do  this?
>
> fragment VERSION_COMMENT_TAIL[bool matches_version]:
> 	{!matches_version}? ( options { greedy = false; }: . )* '*' '/' {
> $type = VERSION_COMMENT; $channel = 98; } ;
>
> This shall consume everything like a normal multiline comment if the
> parameter is true. Otherwise it should do simply nothing.
> Unfortunately, the generated code creates an exception if the param is
> false and in addition runs the loop. Any other ideas?
>
> If all fails I could simply make this instead:
>
> fragment VERSION_COMMENT_TAIL[bool matches_version]:
> 	{ if (matches_version) return } ( options { greedy = false; }: .
> )* '*' '/' { $type = VERSION_COMMENT; $channel = 98; } ;
>
> but that seems so hack-ish...
>
> Mike
> --
> www.soft-gems.net
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jmurray at aerotech.com  Thu Sep 13 10:23:28 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 13 Sep 2012 13:23:28 -0400
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>

Mike,

You used a disambiguating/validating semantic predicate ({boolExpr}?),
which will cause an exception if the rule matches but the predicate is
false. You want a gated semantic predicate ({boolExpr}?=>), which
effectively turns off the following alternative if the predicate is
false. As Jim said, you may need both a true and false alternative,
depending on how this rule is used.

-Justin

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mike Lischke
Sent: Thursday, September 13, 2012 12:39 PM
To: ANTLR Mailing List
Subject: [antlr-interest] Conditional lexing

Hi list,

I'd like to consume input in the lexer based on a variable I pass into
my lexer rule. How can I do  this?

fragment VERSION_COMMENT_TAIL[bool matches_version]:
	{!matches_version}? ( options { greedy = false; }: . )* '*' '/'
{ $type = VERSION_COMMENT; $channel = 98; } ;

This shall consume everything like a normal multiline comment if the
parameter is true. Otherwise it should do simply nothing. Unfortunately,
the generated code creates an exception if the param is false and in
addition runs the loop. Any other ideas?

If all fails I could simply make this instead:

fragment VERSION_COMMENT_TAIL[bool matches_version]:
	{ if (matches_version) return } ( options { greedy = false; }: .
)* '*' '/' { $type = VERSION_COMMENT; $channel = 98; } ;

but that seems so hack-ish...

Mike
--
www.soft-gems.net


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jmurray at aerotech.com  Thu Sep 13 10:27:40 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 13 Sep 2012 13:27:40 -0400
Subject: [antlr-interest] Overriding INPUT->istream->consume
In-Reply-To: <e276acf046b1a897e3dd0951f7fbaec3@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D296C@EXCH-VIRTUAL.aerotechad.com>
	<e276acf046b1a897e3dd0951f7fbaec3@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F9@EXCH-VIRTUAL.aerotechad.com>

I guess my point was, if those arrays were not declared as static, I
could have just referenced them as extern from my code. Is there any
reason not to change that in a future version of the runtime?

Thanks,

- Justin

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, September 13, 2012 12:23 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Overriding INPUT->istream->consume

That's pretty much the way to do it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, September 13, 2012 6:25 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Overriding INPUT->istream->consume
>
> Jim,
>
> I've decided that for my current project, I need to override the 
> functionality in antlr3UTF8Consume(). I need to correctly handle '\r'
> when setting the token line numbers. This means counting '\r' or '\n'
> alone each as a newline, and counting '\r' \'n' in sequence as a 
> single newline. This was easy enough to do (attached as a reference 
> for others, since I could not find this anywhere).
>
> What I have attached works, but notice that I had to redefine the 
> arrays
> trailingBytesForUTF8 and offsetsFromUTF8 to use them in my version of 
> the code. This is because they are declared as static in 
> antlr3inputstream.c. I don't like the idea of modifying the 
> distributed source for the runtime directly to make it not static 
> (this is hard to maintain properly). I also don't like my current 
> solution of just duplicating the code. My question for Jim is, is 
> there a better way to do this, or is this something that could be 
> improved in later versions of the runtime (this is 3.4)?
>
> Cheers,
>
> - Justin Murray
>
> ----
> @lexer::apifuncs
> {
> 	INPUT->istream->consume = customUTF8Consume; }
>
> @lexer::members
> {
> 	// ------------------------------------------------------
> 	// Following is from Unicode.org (see antlr3convertutf.c)
> 	//
>
> 	/// Index into the table below with the first byte of a UTF-8 
> sequence to
> 	/// get the number of trailing bytes that are supposed to follow
it.
> 	/// Note that *legal* UTF-8 values can't have 4 or 5-bytes. The
table 
> is
> 	/// left as-is for anyone who may want to do such conversion,
which 
> was
> 	/// allowed in earlier algorithms.
> 	///
> 	static const ANTLR3_UINT32 trailingBytesForUTF8[256] = {
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
> 		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
> 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
> 		2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
> 3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5
> 	};
>
> 	/// Magic values subtracted from a buffer value during UTF8 
> conversion.
> 	/// This table contains as many values as there might be
trailing 
> bytes
> 	/// in a UTF-8 sequence.
> 	///
> 	static const UTF32 offsetsFromUTF8[6] =
> 	{ 0x00000000UL, 0x00003080UL, 0x000E2080UL, 0x03C82080UL, 
> 0xFA082080UL, 0x82082080UL };
>
> 	// End of Unicode.org tables
> 	// -------------------------
>
> 	static void	customUTF8Consume(pANTLR3_INT_STREAM is)
> 	{
> 		pANTLR3_INPUT_STREAM    input;
> 		ANTLR3_UINT32           extraBytesToRead;
> 		ANTLR3_UCHAR            ch;
> 		pANTLR3_UINT8           nextChar;
>
> 		input   = ((pANTLR3_INPUT_STREAM) (is->super));
>
> 		nextChar = (pANTLR3_UINT8)input->nextChar;
>
> 		if	(nextChar < (((pANTLR3_UINT8)input->data) +
> input->sizeBuf))
> 		{
> 			// Indicate one more character in this line
> 			//
> 			input->charPositionInLine++;
>
> 			// Are there more bytes needed to make up the
whole
> thing?
> 			//
> 			extraBytesToRead =
> trailingBytesForUTF8[*nextChar];
>
> 			if	(nextChar + extraBytesToRead >=
> (((pANTLR3_UINT8)input->data) + input->sizeBuf))
> 			{
> 				input->nextChar =
> (((pANTLR3_UINT8)input->data) + input->sizeBuf);
> 				return;
> 			}
>
> 			// Cases deliberately fall through (see note A
in
> antlrconvertutf.c)
> 			// Legal UTF8 is only 4 bytes but 6 bytes could
be
used
> in old UTF8 so
> 			// we allow it.
> 			//
> 			ch  = 0;
> 			switch (extraBytesToRead) {
> 			case 5: ch += *nextChar++; ch <<= 6;
> 			case 4: ch += *nextChar++; ch <<= 6;
> 			case 3: ch += *nextChar++; ch <<= 6;
> 			case 2: ch += *nextChar++; ch <<= 6;
> 			case 1: ch += *nextChar++; ch <<= 6;
> 			case 0: ch += *nextChar++;
> 			}
>
> 			// Magically correct the input value
> 			//
> 			ch -= offsetsFromUTF8[extraBytesToRead];
> 			if  (ch == '\n')
> 			{
> 				/* Reset for start of a new line of
input */
> 				if ((input->nextChar == input->data) ||
> (*((pANTLR3_UINT8)input->nextChar-1) != '\r'))
> 				{
> 					// if it is the first character,
> or the previous character was not a \r
> 					input->line++;
> 				}
>
> 				input->charPositionInLine	= 0;
> 				input->currentLine		= (void
> *)nextChar;
> 			}
> 			else if (ch == '\r')
> 			{
> 				/* Reset for start of a new line of
input
> 				*/
> 				input->line++;
> 				input->charPositionInLine	= 0;
> 				input->currentLine		= (void
> *)nextChar;
> 			}
>
> 			// Update input pointer
> 			//
> 			input->nextChar = nextChar;
> 		}
> 	}
> }
> ----
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kferrio at gmail.com  Thu Sep 13 10:49:37 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Thu, 13 Sep 2012 10:49:37 -0700
Subject: [antlr-interest] ANTLR 4 book
In-Reply-To: <976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>
References: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
	<976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>
Message-ID: <CAAfeETqTa_ie=432G71N4D4BhpWK+U3TVr170MUeMZ822SQRow@mail.gmail.com>

I for one welcome our new Honey Badger overlord.  :)
On Sep 13, 2012 12:15 AM, "Mike Lischke" <mike at lischke-online.de> wrote:

>
> > Just saw a newsletter from Pragmatic Programmers which mentions an
> > upcoming ANTLR 4 reference book.  Great news !
>
>
>
> Right, it's already on Amazon (publishing date is said to be Nov 30).
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Thu Sep 13 11:36:40 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Sep 2012 11:36:40 -0700
Subject: [antlr-interest] ANTLR 4 book
In-Reply-To: <CAAfeETqTa_ie=432G71N4D4BhpWK+U3TVr170MUeMZ822SQRow@mail.gmail.com>
References: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
	<976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>
	<CAAfeETqTa_ie=432G71N4D4BhpWK+U3TVr170MUeMZ822SQRow@mail.gmail.com>
Message-ID: <60B80BDB-E7E8-450B-A71E-74BAA1B765C8@cs.usfca.edu>

Howdy folks! I'm finalizing beta content of the book this very day. I believe next week you'll be able to buy the beta electronically:

http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference

then I have to finish a couple of chapters before it's finally ready. The v4 beta 1 will be available for use with the beta book.

honey badger takes all your grammars?"it don't care"

Ter
On Sep 13, 2012, at 10:49 AM, Kyle Ferrio wrote:

> I for one welcome our new Honey Badger overlord.  :)
> On Sep 13, 2012 12:15 AM, "Mike Lischke" <mike at lischke-online.de> wrote:
> 
>> 
>>> Just saw a newsletter from Pragmatic Programmers which mentions an
>>> upcoming ANTLR 4 reference book.  Great news !
>> 
>> 
>> 
>> Right, it's already on Amazon (publishing date is said to be Nov 30).
>> 
>> Mike
>> --
>> www.soft-gems.net
>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Thu Sep 13 16:06:12 2012
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 14 Sep 2012 09:06:12 +1000
Subject: [antlr-interest] ANTLR 4 book
In-Reply-To: <60B80BDB-E7E8-450B-A71E-74BAA1B765C8@cs.usfca.edu>
References: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
	<976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>
	<CAAfeETqTa_ie=432G71N4D4BhpWK+U3TVr170MUeMZ822SQRow@mail.gmail.com>
	<60B80BDB-E7E8-450B-A71E-74BAA1B765C8@cs.usfca.edu>
Message-ID: <CACJVtdOwLawd5vSccXK8DJ9eHDq2Ee3KXJ7_WpTF7+RpBOh4Og@mail.gmail.com>

On 14 September 2012 04:36, Terence Parr <parrt at cs.usfca.edu> wrote:
> Howdy folks! I'm finalizing beta content of the book this very day. I believe next week you'll be able to buy the beta electronically:
>
> http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
>

Cool ! But I expected to see a ravenous honey badger on the front
cover, or is that being saved for the t-shirt ?

Michael

From parrt at cs.usfca.edu  Thu Sep 13 17:41:58 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Sep 2012 17:41:58 -0700
Subject: [antlr-interest] ANTLR 4 book
In-Reply-To: <CACJVtdOwLawd5vSccXK8DJ9eHDq2Ee3KXJ7_WpTF7+RpBOh4Og@mail.gmail.com>
References: <CACJVtdMEwKekyDSBceqPpQ=nzK+UHkTitJmxQUN5_gx7g=YLAA@mail.gmail.com>
	<976D2460-E1F4-469B-B6EB-5DC1E823B7DC@lischke-online.de>
	<CAAfeETqTa_ie=432G71N4D4BhpWK+U3TVr170MUeMZ822SQRow@mail.gmail.com>
	<60B80BDB-E7E8-450B-A71E-74BAA1B765C8@cs.usfca.edu>
	<CACJVtdOwLawd5vSccXK8DJ9eHDq2Ee3KXJ7_WpTF7+RpBOh4Og@mail.gmail.com>
Message-ID: <5EE75B47-20BD-429B-A135-9FD8D34495AA@cs.usfca.edu>

I literally couldn't find a good quality honey badger shot! dang.
Ter
On Sep 13, 2012, at 4:06 PM, Michael Bedward <michael.bedward at gmail.com> wrote:

> On 14 September 2012 04:36, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Howdy folks! I'm finalizing beta content of the book this very day. I believe next week you'll be able to buy the beta electronically:
>> 
>> http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
>> 
> 
> Cool ! But I expected to see a ravenous honey badger on the front
> cover, or is that being saved for the t-shirt ?
> 
> Michael
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at lischke-online.de  Fri Sep 14 00:29:31 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Fri, 14 Sep 2012 09:29:31 +0200
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <22c637523e85e4420591ec3c512dfba4@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
	<22c637523e85e4420591ec3c512dfba4@mail.gmail.com>
Message-ID: <DD0F1F9D-B8B7-4C0E-95B9-D6049B932AAF@lischke-online.de>

> Just use $token->type = ID;
> 
> That's all I do - the type field will never change.


error(114): MySQL.g:2400:4: attribute is not a token, parameter, or return value: token

The rule is like this:

keyword:
	keyword_sp
	(
	| ASCII_SYMBOL
	| BACKUP_SYMBOL
...
	| UPGRADE_SYMBOL
	) { $token->type = IDENTIFIER; }
;

Been there, done that. This seems only to work for lexer rules.

Mike
-- 
www.soft-gems.net



From mike at lischke-online.de  Fri Sep 14 01:54:17 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Fri, 14 Sep 2012 10:54:17 +0200
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>


Justin, Jim,

thanks for your suggestions.

> You used a disambiguating/validating semantic predicate ({boolExpr}?),
> which will cause an exception if the rule matches but the predicate is
> false. You want a gated semantic predicate ({boolExpr}?=>), which
> effectively turns off the following alternative if the predicate is
> false. As Jim said, you may need both a true and false alternative,
> depending on how this rule is used.


I had already tried a gated semantic predicate and found it to produce the same exception as other predicates I tried (including a validating semantic predicate), but I didn't know it's mandatory to have at least one alternative there (and be it empty). The generated code completely changes when I add an empty alternative and now works as intended. It's also interesting to note that gated semantic predicates only work at the start of a rule.

For reference here the now corrected and working rule:

fragment VERSION_COMMENT_TAIL[bool matches_version]:
	{!matches_version}? => ( options { greedy = false; }: . )* '*' '/' { $type = MULTILINE_COMMENT; $channel = 98; }
	| { $type = VERSION_COMMENT; $channel = 98; }
;

The next step is now to keep a global flag to track when a version comment is active so I can properly handle the trailing '*/' part. What is usually used for such a flag, USERx?

Jim, as a side note: the C target code generator generates sometimes invalid code leading to a compilation error, due to the fact the grammar line is included in the source code. Most of the time a single line comment is used but for no apparent reason the multi line variant is used which then conflicts with the '*/' part. This is why I wrote '*' '/' in the rule above.

Mike
-- 
www.soft-gems.net



From apalala at gmail.com  Fri Sep 14 04:42:23 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 14 Sep 2012 07:12:23 -0430
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <DD0F1F9D-B8B7-4C0E-95B9-D6049B932AAF@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
	<22c637523e85e4420591ec3c512dfba4@mail.gmail.com>
	<DD0F1F9D-B8B7-4C0E-95B9-D6049B932AAF@lischke-online.de>
Message-ID: <CAN1YFWsGbQ8kXESWWb5UxH6ThMCPJC_sq8XH8uKEMoOrGJk4Nw@mail.gmail.com>

On Fri, Sep 14, 2012 at 2:59 AM, Mike Lischke <mike at lischke-online.de>wrote:

> keyword:
>         keyword_sp
>         (
>         | ASCII_SYMBOL
>

I noted that the options in parenthesis start with '|', which means that
the empty sequence is one of the options. I've been bit by that many times.

-- 
Juancarlo *A?ez*

From apalala at gmail.com  Fri Sep 14 06:47:17 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 14 Sep 2012 09:17:17 -0430
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
	<BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
Message-ID: <CAN1YFWvM0A9sPiT1JGpJZh9rhYiFjqRryaBwhDn6p2AO55tRaw@mail.gmail.com>

On Fri, Sep 14, 2012 at 4:24 AM, Mike Lischke <mike at lischke-online.de>wrote:

> Jim, as a side note: the C target code generator generates sometimes
> invalid code leading to a compilation error, due to the fact the grammar
> line is included in the source code. Most of the time a single line comment
> is used but for no apparent reason the multi line variant is used which
> then conflicts with the '*/' part. This is why I wrote '*' '/' in the rule
> above.


That happens with the Java target too.

-- 
Juancarlo *A?ez*

From mike at lischke-online.de  Fri Sep 14 06:48:08 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Fri, 14 Sep 2012 15:48:08 +0200
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
	<BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
Message-ID: <63CF68CF-1628-4028-A05D-FEC83454D6D5@lischke-online.de>


> The next step is now to keep a global flag to track when a version comment is active so I can properly handle the trailing '*/' part. What is usually used for such a flag, USERx?


Using USERx doesn't work for at least two reasons: the lexer state seems to be reset for each token run and using it in a gated semantic predicate leads to a dfa which excludes the gated expression, so it is not even attempted to match it. Solved by using a member var.

Mike
-- 
www.soft-gems.net



From jokeserver at gmail.com  Fri Sep 14 09:09:57 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Fri, 14 Sep 2012 09:09:57 -0700
Subject: [antlr-interest] Why Python behind?
In-Reply-To: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
References: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
Message-ID: <CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>

Hi Juancarlo,

The Python target is current at 3.4. You can check out an up-to-date
copy at https://github.com/antlr/antlr3.

--Ben

On Thu, Sep 13, 2012 at 5:59 AM, Juancarlo A?ez <apalala at gmail.com> wrote:
> (sorry if I'm posting this twice)
>
> Why is the Python target stuck at 3.1.3?
>
> What can I do to help keep it up-to-date with ANTLR releases?
>
> Cheers,
>
> --
> Juancarlo *A?ez*
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mike at lischke-online.de  Fri Sep 14 09:31:28 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Fri, 14 Sep 2012 18:31:28 +0200
Subject: [antlr-interest] Follow up to hoisted predicates and local variables
Message-ID: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>

Hi,

I'm bitten by this problem as well: http://antlr.markmail.org/message/eliyhfji5hsrbyoz?q=hoisted+predicates+and+local+variables

but with lexer rules and wonder what would be a good approach to solve this case? I couldn't get global scopes to work because I cannot use them in a lexer rule. Lexer member vars seem to be a good solution, but they are evaluated in the dfa15_sst helper before they are actually set.

Here's the relevant code:

fragment BLOCK_COMMENT options{ greedy = false; }:
	VERSION_COMMENT
	| MULTILINE_COMMENT
;

fragment VERSION_COMMENT:
	LOGICAL_NOT_OPERATOR (v = INTEGER WS { matched_version = check_version($v); })? VERSION_COMMENT_TAIL
;

fragment VERSION_COMMENT_TAIL:
	{ !matched_version }? => ( options { greedy = false; }: . )* '*' '/' { $type = MULTILINE_COMMENT; $channel = 98; }
	| { $type = VERSION_COMMENT; $channel = 98; in_version_comment = true; }


(the initial /* is consumed by a higher level rule).

Mike
-- 
www.soft-gems.net


From jimi at temporal-wave.com  Fri Sep 14 09:41:37 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Sep 2012 09:41:37 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <DD0F1F9D-B8B7-4C0E-95B9-D6049B932AAF@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
	<22c637523e85e4420591ec3c512dfba4@mail.gmail.com>
	<DD0F1F9D-B8B7-4C0E-95B9-D6049B932AAF@lischke-online.de>
Message-ID: <395d921d4835ab34e3062d8878b267aa@mail.gmail.com>

keyword:
 	keyword_sp
 	(
 	| t=ASCII_SYMBOL
 	| t=BACKUP_SYMBOL
 ...
 	| t=UPGRADE_SYMBOL
 	) { $t->type = IDENTIFIER; }
 ;

(double check with you grammar). It works fine, you just have to find the
right combination.


Even though I wrote the C target, I find that a good way to remind myself
of what I have available in what scope is to generate the code and look at
the type assigned to $t or $whatever - that will often give you a "oh
yeah, I remember/see why it is like that now" moment. Choose the simplest
path grasshopper.

In the lexer, the context is production of a token, so you can just say
$type = XXX; - but in the parser, it could be any token as the context is
either producing nothing, or some part of a tree.


Jim


> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Friday, September 14, 2012 12:30 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source positions for imaginary tokens
>
> > Just use $token->type = ID;
> >
> > That's all I do - the type field will never change.
>
>
> error(114): MySQL.g:2400:4: attribute is not a token, parameter, or
> return value: token
>
> The rule is like this:
>
> keyword:
> 	keyword_sp
> 	(
> 	| ASCII_SYMBOL
> 	| BACKUP_SYMBOL
> ...
> 	| UPGRADE_SYMBOL
> 	) { $token->type = IDENTIFIER; }
> ;
>
> Been there, done that. This seems only to work for lexer rules.
>
> Mike
> --
> www.soft-gems.net
>

From jimi at temporal-wave.com  Fri Sep 14 09:53:27 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Sep 2012 09:53:27 -0700
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
	<BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
Message-ID: <f98b2857c3febecec7966d625794a323@mail.gmail.com>

Mike,

I am aware of that. It is just that your comment rule is of course
generating a comment. Just separate '*/' in to characters and it should be
fine. There was some reason that I could not change that, but I no longer
remember. It's possible that I answered this before though.

I do sometimes wish that all your questions about the C target were not
prefixed with "There is a bug...", or "generates invalid code because it
is wrong" and so on :) You probably don't mean it to sound the way it
does.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Friday, September 14, 2012 1:54 AM
> To: Justin Murray
> Cc: ANTLR Mailing List
> Subject: Re: [antlr-interest] Conditional lexing
>
>
> Justin, Jim,
>
> thanks for your suggestions.
>
> > You used a disambiguating/validating semantic predicate
> ({boolExpr}?),
> > which will cause an exception if the rule matches but the predicate
> is
> > false. You want a gated semantic predicate ({boolExpr}?=>), which
> > effectively turns off the following alternative if the predicate is
> > false. As Jim said, you may need both a true and false alternative,
> > depending on how this rule is used.
>
>
> I had already tried a gated semantic predicate and found it to produce
> the same exception as other predicates I tried (including a validating
> semantic predicate), but I didn't know it's mandatory to have at least
> one alternative there (and be it empty). The generated code completely
> changes when I add an empty alternative and now works as intended. It's
> also interesting to note that gated semantic predicates only work at
> the start of a rule.
>
> For reference here the now corrected and working rule:
>
> fragment VERSION_COMMENT_TAIL[bool matches_version]:
> 	{!matches_version}? => ( options { greedy = false; }: . )* '*' '/'
> { $type = MULTILINE_COMMENT; $channel = 98; }
> 	| { $type = VERSION_COMMENT; $channel = 98; } ;
>
> The next step is now to keep a global flag to track when a version
> comment is active so I can properly handle the trailing '*/' part. What
> is usually used for such a flag, USERx?
>
> Jim, as a side note: the C target code generator generates sometimes
> invalid code leading to a compilation error, due to the fact the
> grammar line is included in the source code. Most of the time a single
> line comment is used but for no apparent reason the multi line variant
> is used which then conflicts with the '*/' part. This is why I wrote
> '*' '/' in the rule above.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Sep 14 09:56:12 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Sep 2012 09:56:12 -0700
Subject: [antlr-interest] Conditional lexing
In-Reply-To: <63CF68CF-1628-4028-A05D-FEC83454D6D5@lischke-online.de>
References: <EA96F0F0-265C-478E-B454-90699347DBB2@lischke-online.de>
	<6B458D23F5D4A24ABCDB3C78EA97393B0B9D29F4@EXCH-VIRTUAL.aerotechad.com>
	<BFB1E877-E7C7-472E-A262-E6E3706573C1@lischke-online.de>
	<63CF68CF-1628-4028-A05D-FEC83454D6D5@lischke-online.de>
Message-ID: <a19bdcce8eb460a7bd2999a36f9d0e43@mail.gmail.com>

Yes - that is parser context not lexer context. An @members variable is
probably just fine, though sometimes you need a context variable.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Friday, September 14, 2012 6:48 AM
> To: ANTLR Mailing List
> Subject: Re: [antlr-interest] Conditional lexing
>
>
> > The next step is now to keep a global flag to track when a version
> comment is active so I can properly handle the trailing '*/' part. What
> is usually used for such a flag, USERx?
>
>
> Using USERx doesn't work for at least two reasons: the lexer state
> seems to be reset for each token run and using it in a gated semantic
> predicate leads to a dfa which excludes the gated expression, so it is
> not even attempted to match it. Solved by using a member var.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Sep 14 09:59:47 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Sep 2012 09:59:47 -0700
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
Message-ID: <fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>

I think that you may need to step back on your approach here. You may have
showed this before, but what (clearly horrible) language are you trying to
parse, and what is the context? We seem to be solving small issues for
you, when perhaps your bigger question can be addressed in a more correct
fashion.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Friday, September 14, 2012 9:31 AM
> To: ANTLR Mailing List
> Subject: [antlr-interest] Follow up to hoisted predicates and local
> variables
>
> Hi,
>
> I'm bitten by this problem as well:
> http://antlr.markmail.org/message/eliyhfji5hsrbyoz?q=hoisted+predicates
> +and+local+variables
>
> but with lexer rules and wonder what would be a good approach to solve
> this case? I couldn't get global scopes to work because I cannot use
> them in a lexer rule. Lexer member vars seem to be a good solution, but
> they are evaluated in the dfa15_sst helper before they are actually
> set.
>
> Here's the relevant code:
>
> fragment BLOCK_COMMENT options{ greedy = false; }:
> 	VERSION_COMMENT
> 	| MULTILINE_COMMENT
> ;
>
> fragment VERSION_COMMENT:
> 	LOGICAL_NOT_OPERATOR (v = INTEGER WS { matched_version =
> check_version($v); })? VERSION_COMMENT_TAIL ;
>
> fragment VERSION_COMMENT_TAIL:
> 	{ !matched_version }? => ( options { greedy = false; }: . )* '*'
> '/' { $type = MULTILINE_COMMENT; $channel = 98; }
> 	| { $type = VERSION_COMMENT; $channel = 98; in_version_comment =
> true; }
>
>
> (the initial /* is consumed by a higher level rule).
>
> Mike
> --
> www.soft-gems.net
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jmcgrew at gmail.com  Fri Sep 14 10:13:17 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Fri, 14 Sep 2012 10:13:17 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>
	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>
	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>
	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
Message-ID: <CAJ3AhhUKmLnESG9wFCkwgs7U99ddQ=7CWzhi5SqxgvqqcNWV8w@mail.gmail.com>

For what it's worth, I tried to solve the "keywords as identifiers" problem
using what seems to be the recommended solution -- a parser rule that
accepts keywords as well as ID -- and could not get it to work: Antlr would
crash when I tried to generate code, which I assumed was because of the
number of alternatives I was adding to every place an identifier could
appear.

Instead, I ended up getting rid of the lexer rules for keywords, so every
keyword is lexed as ID, and overriding the "emit" function to look the text
up in a keyword hash table and set a field in the token. Keywords are
matched with parser rules that use gating semantic predicates to check that
field.

Jesse
On Sep 12, 2012 11:53 PM, "Mike Lischke" <mike at lischke-online.de> wrote:

>
> Hey Jim,
>
> > Sure ? I can make it be either of those calls, but not both at once. I
> have
> > no context at code generation time that can tell me which one to
> generate.
>
> So you say, you don't know at this time what type $kw in the ID[$kw]
> expression is? Absolutely no way to determine if that is a string or a
> token reference? That's odd.
>
> > If I change it to this, then all the people that want it to be the other
> > way, will claim that they have found a bug too. It only works in Java
> > because the Java compiler can see what the argument types are, and can
> > therefore call the ?correct? method.
>
> I understand your restrictions, but find this situation all but pleasant
> (and I'm not alone I'm afraid).
>
> > However, it is much simpler to just use code to operate on the token
> > directly. Even before that, you should consider whether you need to
> change
> > something about the token because a later stage MUST receive a different
> > token, or whether you just think that you WANT it to.
>
>
> In the keyword case it is just so that I need only one (very common) token
> type but want to retain the token text for later processing. It's
> unfortunate that there is no general solution for the frequently
> encountered keywords-as-identifier problem.
>
> Anyway, Jim, thanks for patience and time!
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Sep 14 10:28:05 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 14 Sep 2012 10:28:05 -0700
Subject: [antlr-interest] Source positions for imaginary tokens
In-Reply-To: <CAJ3AhhUKmLnESG9wFCkwgs7U99ddQ=7CWzhi5SqxgvqqcNWV8w@mail.gmail.com>
References: <mailman.389.1347301374.3211.antlr-interest@antlr.org>
	<CAN1YFWsrNwwXnQmKW9mjn4C+BbxM5bNYiUt4HYi=210aX86s9A@mail.gmail.com>
	<20120911071330.19ce65a2@mahatma>	<80BAC00F-50D3-434E-B48E-AFBD3065D6C7@lischke-online.de>
	<e5020ebfc7068c39d1c78d3aef1e3ad7@mail.gmail.com>	<004C0BAD-7342-4410-B498-07204DD400E2@lischke-online.de>
	<CAP86aOfUWZrWBcC2bnFO1BwqBbRUqPi_OfagNN853LZz4F39rQ@mail.gmail.com>
	<cfde2907c1a347553285355f35281d71@mail.gmail.com>	<770F1BF4-2BEC-4ADD-A78C-38F2313AA011@lischke-online.de>
	<CAJ3AhhUKmLnESG9wFCkwgs7U99ddQ=7CWzhi5SqxgvqqcNWV8w@mail.gmail.com>
Message-ID: <fa25411ae8a987714751e55a41bbc6f6@mail.gmail.com>

That?s one way to do it and it can reduce the size of the generated code a
lot. I have done that when retro-fitting a SQL grammar that was not written
so well for instance. For the record, in C/C++ use gperf or cmph for this
(depending on keyword numbers).



However, if you build the keyword set first, then the keywordsAsID  rule,
you will find that that having to use that rule will guide you to a better
grammar for what should be obvious reasons.



There are some occasions where the language is so mad crazy that you can?t
beat it in to submission without a little lateral thinking ? in those
cases, a honey badger may help J



Jim



*From:* Jesse McGrew [mailto:jmcgrew at gmail.com]
*Sent:* Friday, September 14, 2012 10:13 AM
*To:* Mike Lischke
*Cc:* antlr-interest; Jim Idle
*Subject:* Re: [antlr-interest] Source positions for imaginary tokens



For what it's worth, I tried to solve the "keywords as identifiers" problem
using what seems to be the recommended solution -- a parser rule that
accepts keywords as well as ID -- and could not get it to work: Antlr would
crash when I tried to generate code, which I assumed was because of the
number of alternatives I was adding to every place an identifier could
appear.

Instead, I ended up getting rid of the lexer rules for keywords, so every
keyword is lexed as ID, and overriding the "emit" function to look the text
up in a keyword hash table and set a field in the token. Keywords are
matched with parser rules that use gating semantic predicates to check that
field.

Jesse

On Sep 12, 2012 11:53 PM, "Mike Lischke" <mike at lischke-online.de> wrote:


Hey Jim,

> Sure ? I can make it be either of those calls, but not both at once. I
have
> no context at code generation time that can tell me which one to generate.

So you say, you don't know at this time what type $kw in the ID[$kw]
expression is? Absolutely no way to determine if that is a string or a
token reference? That's odd.

> If I change it to this, then all the people that want it to be the other
> way, will claim that they have found a bug too. It only works in Java
> because the Java compiler can see what the argument types are, and can
> therefore call the ?correct? method.

I understand your restrictions, but find this situation all but pleasant
(and I'm not alone I'm afraid).

> However, it is much simpler to just use code to operate on the token
> directly. Even before that, you should consider whether you need to change
> something about the token because a later stage MUST receive a different
> token, or whether you just think that you WANT it to.


In the keyword case it is just so that I need only one (very common) token
type but want to retain the token text for later processing. It's
unfortunate that there is no general solution for the frequently
encountered keywords-as-identifier problem.

Anyway, Jim, thanks for patience and time!

Mike
--
www.soft-gems.net



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From apalala at gmail.com  Fri Sep 14 13:16:11 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 14 Sep 2012 15:46:11 -0430
Subject: [antlr-interest] Why Python behind?
In-Reply-To: <CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>
References: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
	<CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>
Message-ID: <CAN1YFWsbG8LfTe=3h_Qa2rxnCihw6P3zGhS2_EqQwD6smYsFfg@mail.gmail.com>

Hi Ben,

On Fri, Sep 14, 2012 at 11:39 AM, Benjamin S Wolf <jokeserver at gmail.com>wrote:

>
> The Python target is current at 3.4. You can check out an up-to-date
> copy at https://github.com/antlr/antlr3.
>

I just checked, and Python code generation is broken in 3.4.

I found some easy-to-fix errors in the templates, but I can't know if that
is all there is to fix.

One of the errors was using "\nel" instead of "\n" in a separator. Another
one is "el:" where it should say "else:". Some others are missing
"self."s. That kind of errors makes me think that the Python target is
abandoned.

-- 
Juancarlo *A?ez*

From jokeserver at gmail.com  Fri Sep 14 16:22:19 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Fri, 14 Sep 2012 16:22:19 -0700
Subject: [antlr-interest] Why Python behind?
In-Reply-To: <CAN1YFWsbG8LfTe=3h_Qa2rxnCihw6P3zGhS2_EqQwD6smYsFfg@mail.gmail.com>
References: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
	<CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>
	<CAN1YFWsbG8LfTe=3h_Qa2rxnCihw6P3zGhS2_EqQwD6smYsFfg@mail.gmail.com>
Message-ID: <CAN51Nt7Aw7=naVDvVSfRX+WKdQxiT1SocVUQ=1KwY4ys8=ve1A@mail.gmail.com>

On Fri, Sep 14, 2012 at 1:16 PM, Juancarlo A?ez <apalala at gmail.com> wrote:
> One of the errors was using "\nel" instead of "\n" in a separator. Another
> one is "el:" where it should say "else:". Some others are missing "self."s.
> That kind of errors makes me think that the Python target is abandoned.

"\nel" is used in a separator between mutually exclusive conditions so
that we have if/elif/elif/.../elif/else blocks as appropriate (instead
of if/if/if).

It actually sounds like you're encountering bugs I ran into and fixed
a few months ago. So I assure you it's not abandoned. :)

If you can generate a test case and open an issue on github I'll look into it.

From apalala at gmail.com  Fri Sep 14 16:48:29 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 14 Sep 2012 19:18:29 -0430
Subject: [antlr-interest] Why Python behind?
In-Reply-To: <CAN51Nt7Aw7=naVDvVSfRX+WKdQxiT1SocVUQ=1KwY4ys8=ve1A@mail.gmail.com>
References: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
	<CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>
	<CAN1YFWsbG8LfTe=3h_Qa2rxnCihw6P3zGhS2_EqQwD6smYsFfg@mail.gmail.com>
	<CAN51Nt7Aw7=naVDvVSfRX+WKdQxiT1SocVUQ=1KwY4ys8=ve1A@mail.gmail.com>
Message-ID: <CAN1YFWvU-SL6ErmeqEqOr7JZT4dgQvD=TwuF_YYNDuPFECCpAg@mail.gmail.com>

Ben,

"\nel" is used in a separator between mutually exclusive conditions so
> that we have if/elif/elif/.../elif/else blocks as appropriate (instead
> of if/if/if).
>

Well, the 'el's are being generated on their own lines.

 It actually sounds like you're encountering bugs I ran into and fixed
> a few months ago. So I assure you it's not abandoned. :)
>

I'm using the 3.4 that I downloaded from antlr.org which is *over a year old
*.

I'll try cloning the version on github.

-- 
Juancarlo *A?ez*

From mike at lischke-online.de  Sat Sep 15 02:53:01 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Sat, 15 Sep 2012 11:53:01 +0200
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
Message-ID: <22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>


Hi Jim,

> I think that you may need to step back on your approach here. You may have
> showed this before, but what (clearly horrible) language are you trying to
> parse, and what is the context? We seem to be solving small issues for
> you, when perhaps your bigger question can be addressed in a more correct
> fashion.


If that were possible I'd be very happy. I have asked the bigger question just a few days ago: http://antlr.markmail.org/message/reuws4bz3mi6hb24, but got no reply.

In the meantime I came very close to a solution, but am stuck now because of the predicates problem I mentioned.

Mike
-- 
www.soft-gems.net



From researcher0x00 at gmail.com  Sat Sep 15 04:09:36 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 15 Sep 2012 07:09:36 -0400
Subject: [antlr-interest] Updating history page
Message-ID: <CAN45N11kzbMO9+gr7BONED7XfD=FR_BsCAE6R_R0DOdGG_Uh5A@mail.gmail.com>

Hi Ter,

Could you upde the history page of ANTLR at
http://www.antlr.org/history.html when you get the time. :)

I like to reference it when I mention ANTLR and it is becoming a bit dated.

Thanks, Eric

From jmcgrew at gmail.com  Sat Sep 15 04:53:41 2012
From: jmcgrew at gmail.com (Jesse McGrew)
Date: Sat, 15 Sep 2012 04:53:41 -0700
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
	<22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
Message-ID: <CAJ3AhhV+_mzPqForojZU5p4OtEvuhTYjrPgWvTfaLYd-iW3_jw@mail.gmail.com>

I think my approach would be for the multiline comment lexer rule to
look ahead after it sees '/*' to determine if it's a matching version
comment. If it is, then only consume the '/*' and set a flag; if not,
consume the whole comment as usual. Then in the lexer rule for the '*'
operator, if the flag is set, allow it to match '*/', mark it hidden,
and clear the flag. So more or less:

MULTILINE_COMMENT
: '/*'
  ( {matchingVersionFollows() == false}?=> .* '*/'     /* regular comment */
  | /* version comment matched, don't consume any more */
    { $type = VERSION_COMMENT_BEGIN; inVersionComment = true; }
  )
  { $channel = HIDDEN; }
;

STAR
: '*'
  ( {inVersionComment}?=> '/' { $type = VERSION_COMMENT_END; $channel
= HIDDEN; inVersionComment = false; }
  | /* just the star */
  )
;

On Sat, Sep 15, 2012 at 2:53 AM, Mike Lischke <mike at lischke-online.de> wrote:
>
> Hi Jim,
>
>> I think that you may need to step back on your approach here. You may have
>> showed this before, but what (clearly horrible) language are you trying to
>> parse, and what is the context? We seem to be solving small issues for
>> you, when perhaps your bigger question can be addressed in a more correct
>> fashion.
>
>
> If that were possible I'd be very happy. I have asked the bigger question just a few days ago: http://antlr.markmail.org/message/reuws4bz3mi6hb24, but got no reply.
>
> In the meantime I came very close to a solution, but am stuck now because of the predicates problem I mentioned.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From apalala at gmail.com  Sat Sep 15 05:18:30 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Sat, 15 Sep 2012 07:48:30 -0430
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
	<22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
Message-ID: <CAN1YFWtMUj02qpEz78eCvjv=ogQJibJo79WAwhchzMV2QeUo=g@mail.gmail.com>

Use one rule for the versioned comments that succeed, ad let the general
comment one catch those that fail.

CAVEAT, This is off the top of my head:



VERSIONED_COMMENT:
    :
    {nesting==0}?=>
    '/''*!'
    v=INTEGER WS
    {check_version($v)}?=>
    {
        nesting = 1;
        expanding = true;
        $channel = $HIDDEN;
    }
    ;

END_EXPAND
    :
    {nesting == 1 && expanding}?=>
    '*''/'
    {
        nesting = 0;
        expanding = false;
        $channel=HIDDEN;
    }
    ;


COMMENT
    :
    '/''*'
    {nesting+=1;}
    {
    COMMENT_TAIL
    {
        $channel = HIDDEN;
    }
    ;

fragment
COMMENT_TAIL
    :
    (options{greedy=false;} (COMMENT|.))*
    '*/'
    {nesting-=1;}
    ;

ANTLR will probably complain that there's ambiguity, but it can be resolved.


On Sat, Sep 15, 2012 at 5:23 AM, Mike Lischke <mike at lischke-online.de>wrote:

>
> Hi Jim,
>
> > I think that you may need to step back on your approach here. You may
> have
> > showed this before, but what (clearly horrible) language are you trying
> to
> > parse, and what is the context? We seem to be solving small issues for
> > you, when perhaps your bigger question can be addressed in a more correct
> > fashion.
>
>
> If that were possible I'd be very happy. I have asked the bigger question
> just a few days ago: http://antlr.markmail.org/message/reuws4bz3mi6hb24,
> but got no reply.
>
> In the meantime I came very close to a solution, but am stuck now because
> of the predicates problem I mentioned.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From guillaume at archlinux.org  Sat Sep 15 06:24:28 2012
From: guillaume at archlinux.org (Guillaume ALAUX)
Date: Sat, 15 Sep 2012 15:24:28 +0200
Subject: [antlr-interest] Patch antlr3 to enable build with jdk7
Message-ID: <CABAOfS96yjJBw4nHCaLXc8FZ2Ve4vSbmUq2qufNq2XwxMb0NFA@mail.gmail.com>

Hello,

I get an error when trying to build ANTLR 3 Jar using
antlrworks-1.4.3-src.zip from download section of your website.
Distribution is Arch Linux with JDK7:

java version "1.7.0_07"
OpenJDK Runtime Environment (IcedTea7 2.3.2) (ArchLinux build
7.u7_2.3.2-2-x86_64)
OpenJDK 64-Bit Server VM (build 23.2-b09, mixed mode)

It seems Fedora and Mageia solve the issue with the following patch [0].

I would thus like to propose the patch to be included upstream. I
haven't found any thread related to this in ML archive so sorry if I'm
double posting.

[0] http://svnweb.mageia.org/packages/cauldron/antlrworks/current/SOURCES/antlrworks-1.4.3-jdk7.patch?revision=214372&view=co

Regards

--
Guillaume

From apalala at gmail.com  Sat Sep 15 07:25:34 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Sat, 15 Sep 2012 09:55:34 -0430
Subject: [antlr-interest] Why Python behind?
In-Reply-To: <CAN1YFWvU-SL6ErmeqEqOr7JZT4dgQvD=TwuF_YYNDuPFECCpAg@mail.gmail.com>
References: <CAN1YFWtcJ4WU8EibpMKiRh15ajCCth0c1G6GGL0_DxrdSuypjA@mail.gmail.com>
	<CAN51Nt5q8=Jis391giBHDUG88G_7HqSLPLpHiU5yDziSAmg-YQ@mail.gmail.com>
	<CAN1YFWsbG8LfTe=3h_Qa2rxnCihw6P3zGhS2_EqQwD6smYsFfg@mail.gmail.com>
	<CAN51Nt7Aw7=naVDvVSfRX+WKdQxiT1SocVUQ=1KwY4ys8=ve1A@mail.gmail.com>
	<CAN1YFWvU-SL6ErmeqEqOr7JZT4dgQvD=TwuF_YYNDuPFECCpAg@mail.gmail.com>
Message-ID: <CAN1YFWt_DnCr0V-k6URsk+pOme4BudUGYXwne5i_r_Wr77RTkg@mail.gmail.com>

Ben,

The Python target works with the clone obtained from github.

-- Juancarlo

On Fri, Sep 14, 2012 at 7:18 PM, Juancarlo A?ez <apalala at gmail.com> wrote:

> Ben,
>
> "\nel" is used in a separator between mutually exclusive conditions so
>> that we have if/elif/elif/.../elif/else blocks as appropriate (instead
>> of if/if/if).
>>
>
> Well, the 'el's are being generated on their own lines.
>
>  It actually sounds like you're encountering bugs I ran into and fixed
>> a few months ago. So I assure you it's not abandoned. :)
>>
>
> I'm using the 3.4 that I downloaded from antlr.org which is *over a year
> old*.
>
> I'll try cloning the version on github.
>
> --
> Juancarlo *A?ez*
>



-- 
Juancarlo *A?ez*

From jimi at temporal-wave.com  Sat Sep 15 09:10:54 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 15 Sep 2012 09:10:54 -0700
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
	<22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
Message-ID: <e90543079c68c1e15f7ed8085a11b7f8@mail.gmail.com>

OK - So:

Create a rule that lexes /*
Create an input->mark at the start of this rule
Using hand crafted code, walk through the input stream
If a normal comment, then you are just finding the matching */ (handle
embedded)
If a !12345 comment, then
   directly change the /*!12345 to spaces in the input stream,
   find the matching */ and change those to spaces
   input->rewind to the mark you created
   exit the rule

Easy :) - sometimes the best solution is not to try and force the lexer to
deal with this. V4 lexers will be able to deal with state and so on, and
should handle this type of thing better.

Jim





> -----Original Message-----
> From: Mike Lischke [mailto:mike at lischke-online.de]
> Sent: Saturday, September 15, 2012 2:53 AM
> To: Jim Idle
> Cc: ANTLR Mailing List
> Subject: Re: [antlr-interest] Follow up to hoisted predicates and local
> variables
>
>
> Hi Jim,
>
> > I think that you may need to step back on your approach here. You may
> > have showed this before, but what (clearly horrible) language are you
> > trying to parse, and what is the context? We seem to be solving small
> > issues for you, when perhaps your bigger question can be addressed in
> > a more correct fashion.
>
>
> If that were possible I'd be very happy. I have asked the bigger
> question just a few days ago:
> http://antlr.markmail.org/message/reuws4bz3mi6hb24, but got no reply.
>
> In the meantime I came very close to a solution, but am stuck now
> because of the predicates problem I mentioned.
>
> Mike
> --
> www.soft-gems.net
>

From jimi at temporal-wave.com  Sat Sep 15 09:22:46 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 15 Sep 2012 09:22:46 -0700
Subject: [antlr-interest] Patch antlr3 to enable build with jdk7
In-Reply-To: <CABAOfS96yjJBw4nHCaLXc8FZ2Ve4vSbmUq2qufNq2XwxMb0NFA@mail.gmail.com>
References: <CABAOfS96yjJBw4nHCaLXc8FZ2Ve4vSbmUq2qufNq2XwxMb0NFA@mail.gmail.com>
Message-ID: <0555cfdd713a815c8ce8e82814f7289f@mail.gmail.com>

I would not use the open jdk - use the sun JDK.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Guillaume ALAUX
> Sent: Saturday, September 15, 2012 6:24 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Patch antlr3 to enable build with jdk7
>
> Hello,
>
> I get an error when trying to build ANTLR 3 Jar using antlrworks-1.4.3-
> src.zip from download section of your website.
> Distribution is Arch Linux with JDK7:
>
> java version "1.7.0_07"
> OpenJDK Runtime Environment (IcedTea7 2.3.2) (ArchLinux build
> 7.u7_2.3.2-2-x86_64)
> OpenJDK 64-Bit Server VM (build 23.2-b09, mixed mode)
>
> It seems Fedora and Mageia solve the issue with the following patch
> [0].
>
> I would thus like to propose the patch to be included upstream. I
> haven't found any thread related to this in ML archive so sorry if I'm
> double posting.
>
> [0]
> http://svnweb.mageia.org/packages/cauldron/antlrworks/current/SOURCES/a
> ntlrworks-1.4.3-jdk7.patch?revision=214372&view=co
>
> Regards
>
> --
> Guillaume
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gbonnema at xs4all.nl  Sat Sep 15 09:36:53 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Sat, 15 Sep 2012 18:36:53 +0200
Subject: [antlr-interest] Patch antlr3 to enable build with jdk7
In-Reply-To: <0555cfdd713a815c8ce8e82814f7289f@mail.gmail.com>
References: <CABAOfS96yjJBw4nHCaLXc8FZ2Ve4vSbmUq2qufNq2XwxMb0NFA@mail.gmail.com>
	<0555cfdd713a815c8ce8e82814f7289f@mail.gmail.com>
Message-ID: <20120915183653.4d2b3ff3@mahatma>

On Sat, 15 Sep 2012 09:22:46 -0700
Jim Idle <jimi at temporal-wave.com> wrote:

> I would not use the open jdk - use the sun JDK.
> 
> Jim
> 

What is wrong with open jdk? 

Guus.

From parrt at cs.usfca.edu  Sat Sep 15 11:36:09 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 15 Sep 2012 11:36:09 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
Message-ID: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>

Howdy folks,

ANTLR v4 release is rapidly approaching. The beta of the reference book will be out next week and the remaining two or three chapters should appear within a month or so afterwards. Sam Harwell and I have been working very hard on the tool itself and we should have 4.0 ready by the time the book goes final. In the meantime, 4.0b1 will be available for use with the beta book. Oh, and we need to release 3.4.1 before 4.0.

I have paid for a new website design for both ANTLR and StringTemplate, which looks great. We will continue to use the same wiki software for documentation. The current website is generated by a Java server I built whereas the new one is going to be static so I have less software to maintain. In other words,  rather than using some kind of include mechanism to get the general look and feel on each page, the new websites will be simply static files on the disk.  The current antlr.org content will become antlr3.org, leaving the current domain pointing at v4 content.

We currently have functionality on the websites to accept new grammars and filesharing and articles and so on. Because this is so infrequent, I think it's reasonable to simply have an HTML form that has an email action instead of an HTTP POST. When I get those requests, I can simply add them to the file on the server. (will that use the user's local mail client or will it force people to set up mail in their actual browsers before it will email me? does anybody know?)

On to the grammar repository. Because it's likely we'll want to make fixes / updates to existing grammars, I don't think a simple form / email mechanism is the best solution. Right now, I have to go in and overwrite / update a number of files for a grammar update. Naturally, this screams for a revision control solution. I was thinking that we might as well just use github for this so that anybody can add or modify the publicly available grammars.

There are a number of issues with using github for this. First, I would not want to create a new repository for each grammar so we would have one repository holding all grammars. This is pretty coarse granularity.  On the other hand, if you just want one grammar, you can download individually from github. The second issue is that we would really have to have a single license for all grammars in the repository. I would hate for a GPL grammar to get its stank on the other grammars. It would confuse people to have multiple licenses within a single repository. Thirdly, not everyone is comfortable with assembly language?er?I mean git. In that case, people could simply mail me a grammar for inclusion. It would only take me a second to add it. The fourth problem. We need a clean URI for grammars and I propose: 

http://www.antlr.org/grammars/<name>

for the root directory of that project. For example,

http://www.antlr.org/grammars/java

would point out a directory that contains Java.g4 and may be a test program or something.

I could easily add a redirect in the tomcat configuration files, assuming I can stomach all of that filthy XML, but that does not scale very well when people add grammars. Instead, perhaps the best solution is to set up a cronjob that pulls from the grammar repository and leaves the grammars on antlr.org's disk so that /grammars URI points at that directory. That way, the URIs would always be up-to-date with the repository and without me having to do any work. Heh, that just might work. http://www.antlr.org/grammars by itself could redirect to the github project.

Anyway, If you have any thoughts on this stuff, please reply.

Terence

From researcher0x00 at gmail.com  Sat Sep 15 11:57:00 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 15 Sep 2012 14:57:00 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
Message-ID: <CAN45N112CVxeo192PzNtiNy=NHKo3XnD4PPSaTLwBUDJ5bWjMw@mail.gmail.com>

First of all a big THANKS for all of your hard work and effort.



Since tree grammars are gone and tree manipulations are done using code,
should we have a separate place or named subdirectory for each language
and/or grammar to add additional/supplemental code?

Eric

From parrt at cs.usfca.edu  Sat Sep 15 12:04:12 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 15 Sep 2012 12:04:12 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <CAN45N112CVxeo192PzNtiNy=NHKo3XnD4PPSaTLwBUDJ5bWjMw@mail.gmail.com>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
	<CAN45N112CVxeo192PzNtiNy=NHKo3XnD4PPSaTLwBUDJ5bWjMw@mail.gmail.com>
Message-ID: <27FA1766-1F1F-4B4B-9AD3-7BE9F340404F@cs.usfca.edu>


On Sep 15, 2012, at 11:57 AM, Eric wrote:

> First of all a big THANKS for all of your hard work and effort.

You're welcome! :)

> Since tree grammars are gone and tree manipulations are done using code,
> should we have a separate place or named subdirectory for each language
> and/or grammar to add additional/supplemental code?

good point.  Well, maybe those are applications and we have actual project repositories for those?

Ter

From researcher0x00 at gmail.com  Sat Sep 15 12:09:11 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 15 Sep 2012 15:09:11 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <27FA1766-1F1F-4B4B-9AD3-7BE9F340404F@cs.usfca.edu>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
	<CAN45N112CVxeo192PzNtiNy=NHKo3XnD4PPSaTLwBUDJ5bWjMw@mail.gmail.com>
	<27FA1766-1F1F-4B4B-9AD3-7BE9F340404F@cs.usfca.edu>
Message-ID: <CAN45N10z8Yv=LrA-yhVJ=_V+hX69YKHp7X9_K4tND88nkHZhKw@mail.gmail.com>

Sounds good; anything that is consistent and doesn't clutter up the grammar
directories works. I would hate to see new people start asking lots of
questions about all of the extra code they don't need until they get past
the basics.


On Sat, Sep 15, 2012 at 3:04 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Sep 15, 2012, at 11:57 AM, Eric wrote:
>
> > First of all a big THANKS for all of your hard work and effort.
>
> You're welcome! :)
>
> > Since tree grammars are gone and tree manipulations are done using code,
> > should we have a separate place or named subdirectory for each language
> > and/or grammar to add additional/supplemental code?
>
> good point.  Well, maybe those are applications and we have actual project
> repositories for those?
>
> Ter

From apalala at gmail.com  Sat Sep 15 13:23:47 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Sat, 15 Sep 2012 15:53:47 -0430
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
Message-ID: <CAN1YFWsXff+OYkaBnvey5ayEL9LsnEXbNSrhWU2D57LSdjUd-A@mail.gmail.com>

Hi Terence,

On Sat, Sep 15, 2012 at 2:06 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> I could easily add a redirect in the tomcat configuration files, assuming
> I can stomach all of that filthy XML, but that does not scale very well
> when people add grammars. Instead, perhaps the best solution is to set up a
> cronjob that pulls from the grammar repository and leaves the grammars on
> antlr.org's disk so that /grammars URI points at that directory. That
> way, the URIs would always be up-to-date with the repository and without me
> having to do any work. Heh, that just might work.
> http://www.antlr.org/grammars by itself could redirect to the github
> project.
>

Looking forward, I think that each grammar should have its own github
repository, with an antlr-grammars user that forks stable versions of
them. It can all be automated.

Grammars with no current "owner" can go as main repositories under
antlr-grammars.

Cheers,

-- 
Juancarlo *A?ez*

From parrt at cs.usfca.edu  Sat Sep 15 15:14:42 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 15 Sep 2012 15:14:42 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <CAN1YFWsXff+OYkaBnvey5ayEL9LsnEXbNSrhWU2D57LSdjUd-A@mail.gmail.com>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
	<CAN1YFWsXff+OYkaBnvey5ayEL9LsnEXbNSrhWU2D57LSdjUd-A@mail.gmail.com>
Message-ID: <301FD49C-926A-4869-9CA6-80FD502893E5@cs.usfca.edu>


On Sep 15, 2012, at 1:23 PM, Juancarlo A?ez wrote:
> Looking forward, I think that each grammar should have its own github
> repository, with an antlr-grammars user that forks stable versions of
> them. It can all be automated.
> 
> Grammars with no current "owner" can go as main repositories under
> antlr-grammars.

hi. Thanks for the suggestion. It's a good one, though it seems to me that the grammar should be a part of the antlr project. I guess it would be okay to have a separate "project" or whatever to hold the grammars.

Currently, for v3, I have that collection of example grammars that is nice and neat in a single directory/repo:

https://github.com/antlr/examples-v3

Hmm? not sure what the best answer is here.  It seems heavyweight to create a new repository for a single grammar file. On the other hand, it's easier to say "create repo" on github than it is to fork/add grammar/ send pull request.

I guess in the end I just don't get that many grammar submissions so people could even just email it to me and I could manage it however works most easily for me.

Ter

From kierans777 at gmail.com  Sun Sep 16 00:44:56 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 16 Sep 2012 17:44:56 +1000
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward
In-Reply-To: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
Message-ID: <50558378.6050109@gmail.com>

Ter/list,
   Thanks again for all your efforts.  In terms of other language 
targets is there an idea/outline of when they'll be available.  I'm 
specifically thinking of the C target.  In a list thread from January 
there was the indication that a C++ target was still a while away so any 
progress updates?

Cheers,


On 16/09/12 4:36 AM, Terence Parr wrote:
> Howdy folks,
>
> ANTLR v4 release is rapidly approaching. The beta of the reference book will be out next week and the remaining two or three chapters should appear within a month or so afterwards. Sam Harwell and I have been working very hard on the tool itself and we should have 4.0 ready by the time the book goes final. In the meantime, 4.0b1 will be available for use with the beta book. Oh, and we need to release 3.4.1 before 4.0.
>
> I have paid for a new website design for both ANTLR and StringTemplate, which looks great. We will continue to use the same wiki software for documentation. The current website is generated by a Java server I built whereas the new one is going to be static so I have less software to maintain. In other words,  rather than using some kind of include mechanism to get the general look and feel on each page, the new websites will be simply static files on the disk.  The current antlr.org content will become antlr3.org, leaving the current domain pointing at v4 content.
>
> We currently have functionality on the websites to accept new grammars and filesharing and articles and so on. Because this is so infrequent, I think it's reasonable to simply have an HTML form that has an email action instead of an HTTP POST. When I get those requests, I can simply add them to the file on the server. (will that use the user's local mail client or will it force people to set up mail in their actual browsers before it will email me? does anybody know?)
>
> On to the grammar repository. Because it's likely we'll want to make fixes / updates to existing grammars, I don't think a simple form / email mechanism is the best solution. Right now, I have to go in and overwrite / update a number of files for a grammar update. Naturally, this screams for a revision control solution. I was thinking that we might as well just use github for this so that anybody can add or modify the publicly available grammars.
>
> There are a number of issues with using github for this. First, I would not want to create a new repository for each grammar so we would have one repository holding all grammars. This is pretty coarse granularity.  On the other hand, if you just want one grammar, you can download individually from github. The second issue is that we would really have to have a single license for all grammars in the repository. I would hate for a GPL grammar to get its stank on the other grammars. It would confuse people to have multiple licenses within a single repository. Thirdly, not everyone is comfortable with assembly language?er?I mean git. In that case, people could simply mail me a grammar for inclusion. It would only take me a second to add it. The fourth problem. We need a clean URI for grammars and I propose:
>
> http://www.antlr.org/grammars/<name>
>
> for the root directory of that project. For example,
>
> http://www.antlr.org/grammars/java
>
> would point out a directory that contains Java.g4 and may be a test program or something.
>
> I could easily add a redirect in the tomcat configuration files, assuming I can stomach all of that filthy XML, but that does not scale very well when people add grammars. Instead, perhaps the best solution is to set up a cronjob that pulls from the grammar repository and leaves the grammars on antlr.org's disk so that /grammars URI points at that directory. That way, the URIs would always be up-to-date with the repository and without me having to do any work. Heh, that just might work. http://www.antlr.org/grammars by itself could redirect to the github project.
>
> Anyway, If you have any thoughts on this stuff, please reply.
>
> Terence

From andy.voelkel at plantronics.com  Sun Sep 16 04:02:10 2012
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Sun, 16 Sep 2012 11:02:10 +0000
Subject: [antlr-interest] ANTLR v4 status (C# target?)
Message-ID: <92E9AB4D42199B4793CE24E094BAEE071BF39B3F@USSCMB03.plt.plantronics.com>

Hi All,

Congrats on the new release and hard work all around!

I had the same question as Kieran, only about the C# target, which is a requirement for any work I would initiate with ANTLR v4.

- Andy

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kieran Simpson
Sent: Sunday, September 16, 2012 12:45 AM
Cc: antlr ANTLR
Subject: Re: [antlr-interest] ANTLR v4 status / website functionality moving forward

Ter/list,
   Thanks again for all your efforts.  In terms of other language targets is there an idea/outline of when they'll be available.  I'm specifically thinking of the C target.  In a list thread from January there was the indication that a C++ target was still a while away so any progress updates?

Cheers,


On 16/09/12 4:36 AM, Terence Parr wrote:
> Howdy folks,
>
> ANTLR v4 release is rapidly approaching. The beta of the reference book will be out next week and the remaining two or three chapters should appear within a month or so afterwards. Sam Harwell and I have been working very hard on the tool itself and we should have 4.0 ready by the time the book goes final. In the meantime, 4.0b1 will be available for use with the beta book. Oh, and we need to release 3.4.1 before 4.0.
>
> I have paid for a new website design for both ANTLR and StringTemplate, which looks great. We will continue to use the same wiki software for documentation. The current website is generated by a Java server I built whereas the new one is going to be static so I have less software to maintain. In other words,  rather than using some kind of include mechanism to get the general look and feel on each page, the new websites will be simply static files on the disk.  The current antlr.org content will become antlr3.org, leaving the current domain pointing at v4 content.
>
> We currently have functionality on the websites to accept new grammars
> and filesharing and articles and so on. Because this is so infrequent,
> I think it's reasonable to simply have an HTML form that has an email
> action instead of an HTTP POST. When I get those requests, I can
> simply add them to the file on the server. (will that use the user's
> local mail client or will it force people to set up mail in their
> actual browsers before it will email me? does anybody know?)
>
> On to the grammar repository. Because it's likely we'll want to make fixes / updates to existing grammars, I don't think a simple form / email mechanism is the best solution. Right now, I have to go in and overwrite / update a number of files for a grammar update. Naturally, this screams for a revision control solution. I was thinking that we might as well just use github for this so that anybody can add or modify the publicly available grammars.
>
> There are a number of issues with using github for this. First, I would not want to create a new repository for each grammar so we would have one repository holding all grammars. This is pretty coarse granularity.  On the other hand, if you just want one grammar, you can download individually from github. The second issue is that we would really have to have a single license for all grammars in the repository. I would hate for a GPL grammar to get its stank on the other grammars. It would confuse people to have multiple licenses within a single repository. Thirdly, not everyone is comfortable with assembly language...er...I mean git. In that case, people could simply mail me a grammar for inclusion. It would only take me a second to add it. The fourth problem. We need a clean URI for grammars and I propose:
>
> http://www.antlr.org/grammars/<name>
>
> for the root directory of that project. For example,
>
> http://www.antlr.org/grammars/java
>
> would point out a directory that contains Java.g4 and may be a test program or something.
>
> I could easily add a redirect in the tomcat configuration files, assuming I can stomach all of that filthy XML, but that does not scale very well when people add grammars. Instead, perhaps the best solution is to set up a cronjob that pulls from the grammar repository and leaves the grammars on antlr.org's disk so that /grammars URI points at that directory. That way, the URIs would always be up-to-date with the repository and without me having to do any work. Heh, that just might work. http://www.antlr.org/grammars by itself could redirect to the github project.
>
> Anyway, If you have any thoughts on this stuff, please reply.
>
> Terence

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From rprememail at yahoo.com  Sun Sep 16 04:02:18 2012
From: rprememail at yahoo.com (Premkumar)
Date: Sun, 16 Sep 2012 04:02:18 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1347793338.89357.BPMail_high_noncarrier@web124702.mail.ne1.yahoo.com>


http://www.agroacceso.com/blogger.com.php?y=kb+suqqyd&vi=u&ognz=gabf&ncmr=pmh&rg=vj+dlzjwe&qo=5-5&la=-8&ab=

From forumer at smartmobili.com  Sun Sep 16 04:46:13 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sun, 16 Sep 2012 13:46:13 +0200
Subject: [antlr-interest] development mission proposal
Message-ID: <7433878cc1a650fe646d058b279a6f0b@smartmobili.com>

Hi,

I am looking for a freelancer that will be able to work with antlr on 
the following subjects :

1) Fix objective-c grammar because last time I have tested it didn't 
work
2) Modify it to parse a language very similar to it.

Please contact me and tell me how much you charge for that.

Regards



From martin.vanaken at 8thcolor.com  Sun Sep 16 05:51:33 2012
From: martin.vanaken at 8thcolor.com (Martin Van Aken)
Date: Sun, 16 Sep 2012 14:51:33 +0200
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
Message-ID: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>

Terrence/list,
I've the same question about the Ruby target. For what I can see from
github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
not move since two years so it is probably lagging behind. Do anyone is
still maintaining it ?

If not, I may be interested in trying to update it myself. Any resource for
(would be) goal maintener that I could start with ? Anyone that would be
interested to contribute (time, advice, test, anything). I may take a look
at the python target (that seems to be keeping up well) as a reference
(closer to Ruby than Java).

Thanks a lot.

Martin

On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:

> Ter/list,
>    Thanks again for all your efforts.  In terms of other language
> targets is there an idea/outline of when they'll be available.  I'm
> specifically thinking of the C target.  In a list thread from January
> there was the indication that a C++ target was still a while away so any
> progress updates?
>
> Cheers,
>
>
> On 16/09/12 4:36 AM, Terence Parr wrote:
> > Howdy folks,
> >
> > ANTLR v4 release is rapidly approaching. The beta of the reference book
> will be out next week and the remaining two or three chapters should appear
> within a month or so afterwards. Sam Harwell and I have been working very
> hard on the tool itself and we should have 4.0 ready by the time the book
> goes final. In the meantime, 4.0b1 will be available for use with the beta
> book. Oh, and we need to release 3.4.1 before 4.0.
> >
> > I have paid for a new website design for both ANTLR and StringTemplate,
> which looks great. We will continue to use the same wiki software for
> documentation. The current website is generated by a Java server I built
> whereas the new one is going to be static so I have less software to
> maintain. In other words,  rather than using some kind of include mechanism
> to get the general look and feel on each page, the new websites will be
> simply static files on the disk.  The current antlr.org content will
> become antlr3.org, leaving the current domain pointing at v4 content.
> >
> > We currently have functionality on the websites to accept new grammars
> and filesharing and articles and so on. Because this is so infrequent, I
> think it's reasonable to simply have an HTML form that has an email action
> instead of an HTTP POST. When I get those requests, I can simply add them
> to the file on the server. (will that use the user's local mail client or
> will it force people to set up mail in their actual browsers before it will
> email me? does anybody know?)
> >
> > On to the grammar repository. Because it's likely we'll want to make
> fixes / updates to existing grammars, I don't think a simple form / email
> mechanism is the best solution. Right now, I have to go in and overwrite /
> update a number of files for a grammar update. Naturally, this screams for
> a revision control solution. I was thinking that we might as well just use
> github for this so that anybody can add or modify the publicly available
> grammars.
> >
> > There are a number of issues with using github for this. First, I would
> not want to create a new repository for each grammar so we would have one
> repository holding all grammars. This is pretty coarse granularity.  On the
> other hand, if you just want one grammar, you can download individually
> from github. The second issue is that we would really have to have a single
> license for all grammars in the repository. I would hate for a GPL grammar
> to get its stank on the other grammars. It would confuse people to have
> multiple licenses within a single repository. Thirdly, not everyone is
> comfortable with assembly language?er?I mean git. In that case, people
> could simply mail me a grammar for inclusion. It would only take me a
> second to add it. The fourth problem. We need a clean URI for grammars and
> I propose:
> >
> > http://www.antlr.org/grammars/<name>
> >
> > for the root directory of that project. For example,
> >
> > http://www.antlr.org/grammars/java
> >
> > would point out a directory that contains Java.g4 and may be a test
> program or something.
> >
> > I could easily add a redirect in the tomcat configuration files,
> assuming I can stomach all of that filthy XML, but that does not scale very
> well when people add grammars. Instead, perhaps the best solution is to set
> up a cronjob that pulls from the grammar repository and leaves the grammars
> on antlr.org's disk so that /grammars URI points at that directory. That
> way, the URIs would always be up-to-date with the repository and without me
> having to do any work. Heh, that just might work.
> http://www.antlr.org/grammars by itself could redirect to the github
> project.
> >
> > Anyway, If you have any thoughts on this stuff, please reply.
> >
> > Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Mobile : +32 486 899 652
Company website : www.8thcolor.com
Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>

From researcher0x00 at gmail.com  Sun Sep 16 06:28:25 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 16 Sep 2012 09:28:25 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
Message-ID: <CAN45N114zMDQeKrFRm=BbWkUTFbBfCYEqOoH_JB9gEA0CDgKgA@mail.gmail.com>

Hi Martin,

As you probably know, but for the benefit of others, each conversion of
ANTLR to another grammar typically done by an individual on their own
personal time.

Java is the only grammar version created by and maintained by Ter.

The C version, by Jim Idle, is very actively maintained and supported here.

The C# 3 version was done by Sam Harwell, and while he would like to
maintain it, he is working on an advanced degree and ANTLR Works 2, so C# 3
is in an on again off again mode, and Sam has stated that he does plan to
get back to it, but last I heard from him a few months ago, don't expect
anything on ANTLR 4.x C#  this year and even first quarter next year.

As you also know, the other versions are either attempts that were never
completed, completed but not fully tested, working but not maintained past
a few versions, etc.

The last version I know of that someone created without having done one
before was the C++ version. That person left several key notes in the post
here several months back so that is where I would start. I tried to search
antlr.markmail.org for the post but C++ search is returning C post also.

The big question is, will you be doing a 3.4.x version or a new 4.x version.

If you are doing a 3.4.x you will have to dig into StringTemplate as that
is used to generate the source code files. Beyond that I can't help. I once
did a lot of work on the C#2 version, but that was many years ago and that
knowledge has lost its value.

The new ANTLR 4.x version is a different beast from what little I have
worked with it.

Low on my list is to do a ANTLR 4.x F# target, more for the AST
transformations than the lexing and parsing, but right now I am focused on
a different project so that may never see the light of day.

My best advice is to go for it and ask questions here. Others who have done
targets will give you what advise they can. I can say that doing one puts
you a different level of understanding how ANTLR works.

Best wishes, Eric

From parrt at cs.usfca.edu  Sun Sep 16 08:55:21 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 16 Sep 2012 08:55:21 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward
In-Reply-To: <50558378.6050109@gmail.com>
References: <B9E258B1-1B8F-4A16-BFB2-AF4EF79C04B8@cs.usfca.edu>
	<50558378.6050109@gmail.com>
Message-ID: <0ABC35C9-D310-4768-AFA3-E8A784D01939@cs.usfca.edu>


On Sep 16, 2012, at 12:44 AM, Kieran Simpson wrote:

> Ter/list,
>   Thanks again for all your efforts.  In terms of other language 
> targets is there an idea/outline of when they'll be available.  I'm 
> specifically thinking of the C target.  In a list thread from January 
> there was the indication that a C++ target was still a while away so any 
> progress updates?

v4?  Sam Harwell will build C#/C++; no C target yet planned.  I'll let Sam give an idea on his targets.

T

From stephen at perceptisys.co.uk  Sun Sep 16 09:26:18 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Sun, 16 Sep 2012 17:26:18 +0100
Subject: [antlr-interest] Ruby Target ?
In-Reply-To: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
Message-ID: <5055FDAA.90300@perceptisys.co.uk>

Martin,

I would /love/ to use/test a ANTLR 3.4 Ruby target, but alas at the 
moment I do not have the bandwidth to /do/ or even /fix/ the Ruby target.

One of the target platforms for my particular ANTLR3 grammar's use will 
be Ruby, however I have decided to make a Ruby 1.9 C code extension 
library using Jim Idle's C generator.  (Principally because my /main/ 
platform will be a C code PHP extension library for use on webservers).

 From my very brief dive into the C target's StringTemplates (looking 
for phase differences between the official download and the gitHub 
versions), I can say that the inter-relations between the templates may 
be a bit confusing at first.

To echo Eric, you /will/ understand Antlr3 a whole lot better when you 
have "finished".

I suspect most ports are based upon the collection of StringTemplates 
which generate the Java version and then tweaked as needed.

Regards,

Stephen Gaito

On 16/09/12 13:51, Martin Van Aken wrote:
> Terrence/list,
> I've the same question about the Ruby target. For what I can see from
> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
> not move since two years so it is probably lagging behind. Do anyone is
> still maintaining it ?
>
> If not, I may be interested in trying to update it myself. Any resource for
> (would be) goal maintener that I could start with ? Anyone that would be
> interested to contribute (time, advice, test, anything). I may take a look
> at the python target (that seems to be keeping up well) as a reference
> (closer to Ruby than Java).
>
> Thanks a lot.
>
> Martin
>
> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
>
>> Ter/list,
>>     Thanks again for all your efforts.  In terms of other language
>> targets is there an idea/outline of when they'll be available.  I'm
>> specifically thinking of the C target.  In a list thread from January
>> there was the indication that a C++ target was still a while away so any
>> progress updates?
>>
>> Cheers,
>>
>>
>> On 16/09/12 4:36 AM, Terence Parr wrote:
>>> Howdy folks,
>>>
>>> ANTLR v4 release is rapidly approaching. The beta of the reference book
>> will be out next week and the remaining two or three chapters should appear
>> within a month or so afterwards. Sam Harwell and I have been working very
>> hard on the tool itself and we should have 4.0 ready by the time the book
>> goes final. In the meantime, 4.0b1 will be available for use with the beta
>> book. Oh, and we need to release 3.4.1 before 4.0.
>>> I have paid for a new website design for both ANTLR and StringTemplate,
>> which looks great. We will continue to use the same wiki software for
>> documentation. The current website is generated by a Java server I built
>> whereas the new one is going to be static so I have less software to
>> maintain. In other words,  rather than using some kind of include mechanism
>> to get the general look and feel on each page, the new websites will be
>> simply static files on the disk.  The current antlr.org content will
>> become antlr3.org, leaving the current domain pointing at v4 content.
>>> We currently have functionality on the websites to accept new grammars
>> and filesharing and articles and so on. Because this is so infrequent, I
>> think it's reasonable to simply have an HTML form that has an email action
>> instead of an HTTP POST. When I get those requests, I can simply add them
>> to the file on the server. (will that use the user's local mail client or
>> will it force people to set up mail in their actual browsers before it will
>> email me? does anybody know?)
>>> On to the grammar repository. Because it's likely we'll want to make
>> fixes / updates to existing grammars, I don't think a simple form / email
>> mechanism is the best solution. Right now, I have to go in and overwrite /
>> update a number of files for a grammar update. Naturally, this screams for
>> a revision control solution. I was thinking that we might as well just use
>> github for this so that anybody can add or modify the publicly available
>> grammars.
>>> There are a number of issues with using github for this. First, I would
>> not want to create a new repository for each grammar so we would have one
>> repository holding all grammars. This is pretty coarse granularity.  On the
>> other hand, if you just want one grammar, you can download individually
>> from github. The second issue is that we would really have to have a single
>> license for all grammars in the repository. I would hate for a GPL grammar
>> to get its stank on the other grammars. It would confuse people to have
>> multiple licenses within a single repository. Thirdly, not everyone is
>> comfortable with assembly language?er?I mean git. In that case, people
>> could simply mail me a grammar for inclusion. It would only take me a
>> second to add it. The fourth problem. We need a clean URI for grammars and
>> I propose:
>>> http://www.antlr.org/grammars/<name>
>>>
>>> for the root directory of that project. For example,
>>>
>>> http://www.antlr.org/grammars/java
>>>
>>> would point out a directory that contains Java.g4 and may be a test
>> program or something.
>>> I could easily add a redirect in the tomcat configuration files,
>> assuming I can stomach all of that filthy XML, but that does not scale very
>> well when people add grammars. Instead, perhaps the best solution is to set
>> up a cronjob that pulls from the grammar repository and leaves the grammars
>> on antlr.org's disk so that /grammars URI points at that directory. That
>> way, the URIs would always be up-to-date with the repository and without me
>> having to do any work. Heh, that just might work.
>> http://www.antlr.org/grammars by itself could redirect to the github
>> project.
>>> Anyway, If you have any thoughts on this stuff, please reply.
>>>
>>> Terence
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


From sam at tunnelvisionlabs.com  Sun Sep 16 10:15:50 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sun, 16 Sep 2012 12:15:50 -0500
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward - Ruby Target ?
In-Reply-To: <CAN45N114zMDQeKrFRm=BbWkUTFbBfCYEqOoH_JB9gEA0CDgKgA@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<CAN45N114zMDQeKrFRm=BbWkUTFbBfCYEqOoH_JB9gEA0CDgKgA@mail.gmail.com>
Message-ID: <00a901cd942e$ecb20ab0$c6162010$@tunnelvisionlabs.com>

This is pretty accurate for where I am, although ANTLRWorks 2 isn't holding
back the process so much as working on the v4 runtime itself. If I port the
runtime to C# (or others) before it's complete, then keeping all the
runtimes in sync is cumbersome and prone to errors. Some of the algorithms
and many sections of the documentation are not quite finalized.

I'll be basing my port(s) of ANTLR 4 on my optimized fork of the Java
runtime since it includes some additional internal features necessary for my
professional work. Since tree parsers and StringTemplate integration were
removed from v4, the runtime has a somewhat smaller overall feature set to
implement in the ports. The most challenging part *by far* will be the
handling the concurrency requirements of my optimized branch. .NET 3.5+
definitely includes the necessary class library support to make this
straightforward, but other languages like C++ are going to be very
challenging.

For the C++ port, definitely expect a dependency on Boost's Thread library.
The necessary concurrent sets and maps will be based on a highly concurrent
B+-tree implementation I built last year. I would also expect the initial
version to use some C++11 features.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Eric [mailto:researcher0x00 at gmail.com] 
Sent: Sunday, September 16, 2012 8:28 AM
To: Martin Van Aken
Cc: antlr ANTLR; Christophe Philemotte
Subject: Re: [antlr-interest] ANTLR v4 status / website functionality moving
forward - Ruby Target ?

Hi Martin,

As you probably know, but for the benefit of others, each conversion of
ANTLR to another grammar typically done by an individual on their own
personal time.

Java is the only grammar version created by and maintained by Ter.

The C version, by Jim Idle, is very actively maintained and supported here.

The C# 3 version was done by Sam Harwell, and while he would like to
maintain it, he is working on an advanced degree and ANTLR Works 2, so C# 3
is in an on again off again mode, and Sam has stated that he does plan to
get back to it, but last I heard from him a few months ago, don't expect
anything on ANTLR 4.x C#  this year and even first quarter next year.

As you also know, the other versions are either attempts that were never
completed, completed but not fully tested, working but not maintained past a
few versions, etc.

The last version I know of that someone created without having done one
before was the C++ version. That person left several key notes in the post
here several months back so that is where I would start. I tried to search
antlr.markmail.org for the post but C++ search is returning C post also.

The big question is, will you be doing a 3.4.x version or a new 4.x version.

If you are doing a 3.4.x you will have to dig into StringTemplate as that is
used to generate the source code files. Beyond that I can't help. I once did
a lot of work on the C#2 version, but that was many years ago and that
knowledge has lost its value.

The new ANTLR 4.x version is a different beast from what little I have
worked with it.

Low on my list is to do a ANTLR 4.x F# target, more for the AST
transformations than the lexing and parsing, but right now I am focused on a
different project so that may never see the light of day.

My best advice is to go for it and ask questions here. Others who have done
targets will give you what advise they can. I can say that doing one puts
you a different level of understanding how ANTLR works.

Best wishes, Eric

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From martin.vanaken at 8thcolor.com  Sun Sep 16 12:13:36 2012
From: martin.vanaken at 8thcolor.com (Martin Van Aken)
Date: Sun, 16 Sep 2012 21:13:36 +0200
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <00a901cd942e$ecb20ab0$c6162010$@tunnelvisionlabs.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<CAN45N114zMDQeKrFRm=BbWkUTFbBfCYEqOoH_JB9gEA0CDgKgA@mail.gmail.com>
	<00a901cd942e$ecb20ab0$c6162010$@tunnelvisionlabs.com>
Message-ID: <CACQyh-Uubp3U-4R8ecKjtBP0tN8qE4FQqiqqAW1jOYCE2hv=QQ@mail.gmail.com>

Thanks to all for the enthousiasm and first advices, I appreciate that.

So, if I understand, I now have two choices: look into the existing
implementations for the 3.4 (there is quite some), or start directly on the
4.0. If I understand correctly, the target system changed quite a lot in
between, but the documentation/community experience is still (logically)
quite low for the 4.0 version.

What would be your advice on this ? I do not want to work on something that
will be gone in some months but on the other hand, I cannot wait too long
to start.

On another matter entirely, does anyone that developed a target in the past
remember (roughly) how much work it is/was ? I'm an antlr user, but never
modified much until now, except playing with grammar.

Martin

On 16 September 2012 19:15, Sam Harwell <sam at tunnelvisionlabs.com> wrote:

> This is pretty accurate for where I am, although ANTLRWorks 2 isn't holding
> back the process so much as working on the v4 runtime itself. If I port the
> runtime to C# (or others) before it's complete, then keeping all the
> runtimes in sync is cumbersome and prone to errors. Some of the algorithms
> and many sections of the documentation are not quite finalized.
>
> I'll be basing my port(s) of ANTLR 4 on my optimized fork of the Java
> runtime since it includes some additional internal features necessary for
> my
> professional work. Since tree parsers and StringTemplate integration were
> removed from v4, the runtime has a somewhat smaller overall feature set to
> implement in the ports. The most challenging part *by far* will be the
> handling the concurrency requirements of my optimized branch. .NET 3.5+
> definitely includes the necessary class library support to make this
> straightforward, but other languages like C++ are going to be very
> challenging.
>
> For the C++ port, definitely expect a dependency on Boost's Thread library.
> The necessary concurrent sets and maps will be based on a highly concurrent
> B+-tree implementation I built last year. I would also expect the initial
> version to use some C++11 features.
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
> -----Original Message-----
> From: Eric [mailto:researcher0x00 at gmail.com]
> Sent: Sunday, September 16, 2012 8:28 AM
> To: Martin Van Aken
> Cc: antlr ANTLR; Christophe Philemotte
> Subject: Re: [antlr-interest] ANTLR v4 status / website functionality
> moving
> forward - Ruby Target ?
>
> Hi Martin,
>
> As you probably know, but for the benefit of others, each conversion of
> ANTLR to another grammar typically done by an individual on their own
> personal time.
>
> Java is the only grammar version created by and maintained by Ter.
>
> The C version, by Jim Idle, is very actively maintained and supported here.
>
> The C# 3 version was done by Sam Harwell, and while he would like to
> maintain it, he is working on an advanced degree and ANTLR Works 2, so C# 3
> is in an on again off again mode, and Sam has stated that he does plan to
> get back to it, but last I heard from him a few months ago, don't expect
> anything on ANTLR 4.x C#  this year and even first quarter next year.
>
> As you also know, the other versions are either attempts that were never
> completed, completed but not fully tested, working but not maintained past
> a
> few versions, etc.
>
> The last version I know of that someone created without having done one
> before was the C++ version. That person left several key notes in the post
> here several months back so that is where I would start. I tried to search
> antlr.markmail.org for the post but C++ search is returning C post also.
>
> The big question is, will you be doing a 3.4.x version or a new 4.x
> version.
>
> If you are doing a 3.4.x you will have to dig into StringTemplate as that
> is
> used to generate the source code files. Beyond that I can't help. I once
> did
> a lot of work on the C#2 version, but that was many years ago and that
> knowledge has lost its value.
>
> The new ANTLR 4.x version is a different beast from what little I have
> worked with it.
>
> Low on my list is to do a ANTLR 4.x F# target, more for the AST
> transformations than the lexing and parsing, but right now I am focused on
> a
> different project so that may never see the light of day.
>
> My best advice is to go for it and ask questions here. Others who have done
> targets will give you what advise they can. I can say that doing one puts
> you a different level of understanding how ANTLR works.
>
> Best wishes, Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Mobile : +32 486 899 652
Company website : www.8thcolor.com
Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>

From parrt at cs.usfca.edu  Sun Sep 16 15:44:17 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 16 Sep 2012 15:44:17 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward - Ruby Target ?
In-Reply-To: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
Message-ID: <03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>

Unfortunately, no one has stepped up to bring the Ruby target up to date. The other bit of bad news is that we really don't have much in the way of how to create a target. just this page:

http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target

Ter
On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:

> Terrence/list,
> I've the same question about the Ruby target. For what I can see from
> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
> not move since two years so it is probably lagging behind. Do anyone is
> still maintaining it ?
> 
> If not, I may be interested in trying to update it myself. Any resource for
> (would be) goal maintener that I could start with ? Anyone that would be
> interested to contribute (time, advice, test, anything). I may take a look
> at the python target (that seems to be keeping up well) as a reference
> (closer to Ruby than Java).
> 
> Thanks a lot.
> 
> Martin
> 
> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
> 
>> Ter/list,
>>   Thanks again for all your efforts.  In terms of other language
>> targets is there an idea/outline of when they'll be available.  I'm
>> specifically thinking of the C target.  In a list thread from January
>> there was the indication that a C++ target was still a while away so any
>> progress updates?
>> 
>> Cheers,
>> 
>> 
>> On 16/09/12 4:36 AM, Terence Parr wrote:
>>> Howdy folks,
>>> 
>>> ANTLR v4 release is rapidly approaching. The beta of the reference book
>> will be out next week and the remaining two or three chapters should appear
>> within a month or so afterwards. Sam Harwell and I have been working very
>> hard on the tool itself and we should have 4.0 ready by the time the book
>> goes final. In the meantime, 4.0b1 will be available for use with the beta
>> book. Oh, and we need to release 3.4.1 before 4.0.
>>> 
>>> I have paid for a new website design for both ANTLR and StringTemplate,
>> which looks great. We will continue to use the same wiki software for
>> documentation. The current website is generated by a Java server I built
>> whereas the new one is going to be static so I have less software to
>> maintain. In other words,  rather than using some kind of include mechanism
>> to get the general look and feel on each page, the new websites will be
>> simply static files on the disk.  The current antlr.org content will
>> become antlr3.org, leaving the current domain pointing at v4 content.
>>> 
>>> We currently have functionality on the websites to accept new grammars
>> and filesharing and articles and so on. Because this is so infrequent, I
>> think it's reasonable to simply have an HTML form that has an email action
>> instead of an HTTP POST. When I get those requests, I can simply add them
>> to the file on the server. (will that use the user's local mail client or
>> will it force people to set up mail in their actual browsers before it will
>> email me? does anybody know?)
>>> 
>>> On to the grammar repository. Because it's likely we'll want to make
>> fixes / updates to existing grammars, I don't think a simple form / email
>> mechanism is the best solution. Right now, I have to go in and overwrite /
>> update a number of files for a grammar update. Naturally, this screams for
>> a revision control solution. I was thinking that we might as well just use
>> github for this so that anybody can add or modify the publicly available
>> grammars.
>>> 
>>> There are a number of issues with using github for this. First, I would
>> not want to create a new repository for each grammar so we would have one
>> repository holding all grammars. This is pretty coarse granularity.  On the
>> other hand, if you just want one grammar, you can download individually
>> from github. The second issue is that we would really have to have a single
>> license for all grammars in the repository. I would hate for a GPL grammar
>> to get its stank on the other grammars. It would confuse people to have
>> multiple licenses within a single repository. Thirdly, not everyone is
>> comfortable with assembly language?er?I mean git. In that case, people
>> could simply mail me a grammar for inclusion. It would only take me a
>> second to add it. The fourth problem. We need a clean URI for grammars and
>> I propose:
>>> 
>>> http://www.antlr.org/grammars/<name>
>>> 
>>> for the root directory of that project. For example,
>>> 
>>> http://www.antlr.org/grammars/java
>>> 
>>> would point out a directory that contains Java.g4 and may be a test
>> program or something.
>>> 
>>> I could easily add a redirect in the tomcat configuration files,
>> assuming I can stomach all of that filthy XML, but that does not scale very
>> well when people add grammars. Instead, perhaps the best solution is to set
>> up a cronjob that pulls from the grammar repository and leaves the grammars
>> on antlr.org's disk so that /grammars URI points at that directory. That
>> way, the URIs would always be up-to-date with the repository and without me
>> having to do any work. Heh, that just might work.
>> http://www.antlr.org/grammars by itself could redirect to the github
>> project.
>>> 
>>> Anyway, If you have any thoughts on this stuff, please reply.
>>> 
>>> Terence
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> -- 
> Mobile : +32 486 899 652
> Company website : www.8thcolor.com
> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at lischke-online.de  Mon Sep 17 05:08:19 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Mon, 17 Sep 2012 14:08:19 +0200
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <e90543079c68c1e15f7ed8085a11b7f8@mail.gmail.com>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
	<22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
	<e90543079c68c1e15f7ed8085a11b7f8@mail.gmail.com>
Message-ID: <499228A5-1575-4925-99E9-628D19F96F68@lischke-online.de>

Hey Jim, Jesse, Juancarlo,

thank you all for your valuable input.

> Create a rule that lexes /*
> Create an input->mark at the start of this rule
> Using hand crafted code, walk through the input stream
> If a normal comment, then you are just finding the matching */ (handle
> embedded)
> If a !12345 comment, then
>   directly change the /*!12345 to spaces in the input stream,
>   find the matching */ and change those to spaces
>   input->rewind to the mark you created
>   exit the rule


Not a bad idea, as it is attacking the problem at a low level. However, I'd like to avoid including target specific code as much as possible (or if included, like in predicates, then in a way that's easy to port).

Additionally, I didn't mention some further facts about those version comments. There's a third form /*! ... */ which is like the one with a version number, but always matches (so the comment decoration is always removed and the content handled as normal text. Additionally, there can be one level of block comment nesting, but then version comments are treated like normal block comments. After letting all this and your input sink in I was able to come up with a solution this morning. For reference if anyone is later searching for a similar solution:

COMMENT_RULE:
	// Comment introducer intentionally written as two chars, to avoid trouble in generated lexer
	// when the source line is quoted in a block comment there. Same applies for the other cases below.
	'/' '*' BLOCK_COMMENT
	| VERSION_COMMENT_END
	| POUND_COMMENT
	| {LA(3) == ' ' || LA(3) == '\t' || LA(3) == '\n' || LA(3) == '\r'}? => DASHDASH_COMMENT
;

// There are 3 types of block comments:
// /* ... */ - The standard multi line comment.
// /*! ... */ - A comment used to mask code for other clients. In MySQL the content is handled as normal code.
// /*!12345 ... */ - Same as the previous one except code is only used when the given number is a lower value
//                   than the current server version (specifying so the minimum server version the code can run with).
fragment BLOCK_COMMENT options{ greedy = false; }:
	{!in_version_comment}? VERSION_COMMENT
	| MULTILINE_COMMENT
;

fragment VERSION_COMMENT
@init { matched_version = true; }
:
	LOGICAL_NOT_OPERATOR
		(
			v = INTEGER { matched_version = check_version($v); } VERSION_COMMENT_TAIL
			| VERSION_COMMENT_TAIL
		)
;

fragment VERSION_COMMENT_TAIL:
	{ !matched_version }? =>
		( options { greedy = false; }:
			('/*' MULTILINE_COMMENT)  // One level of block comment nesting is allowed for versioned comments.
			| . 
		)* '*''/' { $type = MULTILINE_COMMENT; $channel = 98; }
	| { $type = VERSION_COMMENT; $channel = 98; in_version_comment = true; }
;

fragment MULTILINE_COMMENT:	( options { greedy = false; }: . )* '*''/' { $channel = 98; };

fragment VERSION_COMMENT_END:
	{in_version_comment}? => '*''/' { $channel = 98; in_version_comment = false; }
	| // Intentionally left empty to make the gated semantic predicate work.
;

fragment POUND_COMMENT:			'#' ~('\n'|'\r')* '\r'? '\n' { $channel = 98; };
fragment DASHDASH_COMMENT:		'--' (' ' | '\t' | '\n' | '\r') ~('\n'|'\r')* ('\r' | '\n' | EOF) { $channel = 98; };


in_version_comment and matched_version are both lexer member vars. This is part of my upcomming complete MySQL grammar.

Mike
-- 
www.soft-gems.net



From apalala at gmail.com  Mon Sep 17 06:20:40 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Mon, 17 Sep 2012 08:50:40 -0430
Subject: [antlr-interest] Follow up to hoisted predicates and local
	variables
In-Reply-To: <499228A5-1575-4925-99E9-628D19F96F68@lischke-online.de>
References: <CDB6B359-39D9-452C-889E-1993ADB48983@lischke-online.de>
	<fd0c570f3fbd41c5fe5e3b3b82febc06@mail.gmail.com>
	<22C01BDD-4267-4E0A-8427-F9A90CF220E7@lischke-online.de>
	<e90543079c68c1e15f7ed8085a11b7f8@mail.gmail.com>
	<499228A5-1575-4925-99E9-628D19F96F68@lischke-online.de>
Message-ID: <CAN1YFWvf6e4bXvWMzbNSXU69juRf5jt9Tyrhpkk4iwCwYEUdVA@mail.gmail.com>

Mike,

I'm not sure about the treatment of VERSION_COMMENT_END. I would have
excluded it from the first rule, I would have not made it a fragmet, and I
would not have provided the empty option.

But if it works...

-- Juanca

On Mon, Sep 17, 2012 at 7:38 AM, Mike Lischke <mike at lischke-online.de>wrote:

> Hey Jim, Jesse, Juancarlo,
>
> thank you all for your valuable input.
>
> > Create a rule that lexes /*
> > Create an input->mark at the start of this rule
> > Using hand crafted code, walk through the input stream
> > If a normal comment, then you are just finding the matching */ (handle
> > embedded)
> > If a !12345 comment, then
> >   directly change the /*!12345 to spaces in the input stream,
> >   find the matching */ and change those to spaces
> >   input->rewind to the mark you created
> >   exit the rule
>
>
> Not a bad idea, as it is attacking the problem at a low level. However,
> I'd like to avoid including target specific code as much as possible (or if
> included, like in predicates, then in a way that's easy to port).
>
> Additionally, I didn't mention some further facts about those version
> comments. There's a third form /*! ... */ which is like the one with a
> version number, but always matches (so the comment decoration is always
> removed and the content handled as normal text. Additionally, there can be
> one level of block comment nesting, but then version comments are treated
> like normal block comments. After letting all this and your input sink in I
> was able to come up with a solution this morning. For reference if anyone
> is later searching for a similar solution:
>
> COMMENT_RULE:
>         // Comment introducer intentionally written as two chars, to avoid
> trouble in generated lexer
>         // when the source line is quoted in a block comment there. Same
> applies for the other cases below.
>         '/' '*' BLOCK_COMMENT
>         | VERSION_COMMENT_END
>         | POUND_COMMENT
>         | {LA(3) == ' ' || LA(3) == '\t' || LA(3) == '\n' || LA(3) ==
> '\r'}? => DASHDASH_COMMENT
> ;
>
> // There are 3 types of block comments:
> // /* ... */ - The standard multi line comment.
> // /*! ... */ - A comment used to mask code for other clients. In MySQL
> the content is handled as normal code.
> // /*!12345 ... */ - Same as the previous one except code is only used
> when the given number is a lower value
> //                   than the current server version (specifying so the
> minimum server version the code can run with).
> fragment BLOCK_COMMENT options{ greedy = false; }:
>         {!in_version_comment}? VERSION_COMMENT
>         | MULTILINE_COMMENT
> ;
>
> fragment VERSION_COMMENT
> @init { matched_version = true; }
> :
>         LOGICAL_NOT_OPERATOR
>                 (
>                         v = INTEGER { matched_version = check_version($v);
> } VERSION_COMMENT_TAIL
>                         | VERSION_COMMENT_TAIL
>                 )
> ;
>
> fragment VERSION_COMMENT_TAIL:
>         { !matched_version }? =>
>                 ( options { greedy = false; }:
>                         ('/*' MULTILINE_COMMENT)  // One level of block
> comment nesting is allowed for versioned comments.
>                         | .
>                 )* '*''/' { $type = MULTILINE_COMMENT; $channel = 98; }
>         | { $type = VERSION_COMMENT; $channel = 98; in_version_comment =
> true; }
> ;
>
> fragment MULTILINE_COMMENT:     ( options { greedy = false; }: . )* '*''/'
> { $channel = 98; };
>
> fragment VERSION_COMMENT_END:
>         {in_version_comment}? => '*''/' { $channel = 98;
> in_version_comment = false; }
>         | // Intentionally left empty to make the gated semantic predicate
> work.
> ;
>
> fragment POUND_COMMENT:                 '#' ~('\n'|'\r')* '\r'? '\n' {
> $channel = 98; };
> fragment DASHDASH_COMMENT:              '--' (' ' | '\t' | '\n' | '\r')
> ~('\n'|'\r')* ('\r' | '\n' | EOF) { $channel = 98; };
>
>
> in_version_comment and matched_version are both lexer member vars. This is
> part of my upcomming complete MySQL grammar.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From researcher0x00 at gmail.com  Mon Sep 17 13:27:44 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 17 Sep 2012 16:27:44 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
Message-ID: <CAN45N103rYW2CABTCrq7N9JvCgQKs=hQxMw23aupUScumkDVZw@mail.gmail.com>

Martin,

My knowledge on some of these things is so buried away that I don't
remember them for days.

If you do a ANTLR 3.4.x version using StringTemplate 4.x, be sure to make
use of the StringTemplate Inspector.

http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI

Eric

On Sun, Sep 16, 2012 at 6:44 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Unfortunately, no one has stepped up to bring the Ruby target up to date.
> The other bit of bad news is that we really don't have much in the way of
> how to create a target. just this page:
>
>
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
>
> Ter
> On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
>
> > Terrence/list,
> > I've the same question about the Ruby target. For what I can see from
> > github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
> > not move since two years so it is probably lagging behind. Do anyone is
> > still maintaining it ?
> >
> > If not, I may be interested in trying to update it myself. Any resource
> for
> > (would be) goal maintener that I could start with ? Anyone that would be
> > interested to contribute (time, advice, test, anything). I may take a
> look
> > at the python target (that seems to be keeping up well) as a reference
> > (closer to Ruby than Java).
> >
> > Thanks a lot.
> >
> > Martin
> >
> > On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
> >
> >> Ter/list,
> >>   Thanks again for all your efforts.  In terms of other language
> >> targets is there an idea/outline of when they'll be available.  I'm
> >> specifically thinking of the C target.  In a list thread from January
> >> there was the indication that a C++ target was still a while away so any
> >> progress updates?
> >>
> >> Cheers,
> >>
> >>
> >> On 16/09/12 4:36 AM, Terence Parr wrote:
> >>> Howdy folks,
> >>>
> >>> ANTLR v4 release is rapidly approaching. The beta of the reference book
> >> will be out next week and the remaining two or three chapters should
> appear
> >> within a month or so afterwards. Sam Harwell and I have been working
> very
> >> hard on the tool itself and we should have 4.0 ready by the time the
> book
> >> goes final. In the meantime, 4.0b1 will be available for use with the
> beta
> >> book. Oh, and we need to release 3.4.1 before 4.0.
> >>>
> >>> I have paid for a new website design for both ANTLR and StringTemplate,
> >> which looks great. We will continue to use the same wiki software for
> >> documentation. The current website is generated by a Java server I built
> >> whereas the new one is going to be static so I have less software to
> >> maintain. In other words,  rather than using some kind of include
> mechanism
> >> to get the general look and feel on each page, the new websites will be
> >> simply static files on the disk.  The current antlr.org content will
> >> become antlr3.org, leaving the current domain pointing at v4 content.
> >>>
> >>> We currently have functionality on the websites to accept new grammars
> >> and filesharing and articles and so on. Because this is so infrequent, I
> >> think it's reasonable to simply have an HTML form that has an email
> action
> >> instead of an HTTP POST. When I get those requests, I can simply add
> them
> >> to the file on the server. (will that use the user's local mail client
> or
> >> will it force people to set up mail in their actual browsers before it
> will
> >> email me? does anybody know?)
> >>>
> >>> On to the grammar repository. Because it's likely we'll want to make
> >> fixes / updates to existing grammars, I don't think a simple form /
> email
> >> mechanism is the best solution. Right now, I have to go in and
> overwrite /
> >> update a number of files for a grammar update. Naturally, this screams
> for
> >> a revision control solution. I was thinking that we might as well just
> use
> >> github for this so that anybody can add or modify the publicly available
> >> grammars.
> >>>
> >>> There are a number of issues with using github for this. First, I would
> >> not want to create a new repository for each grammar so we would have
> one
> >> repository holding all grammars. This is pretty coarse granularity.  On
> the
> >> other hand, if you just want one grammar, you can download individually
> >> from github. The second issue is that we would really have to have a
> single
> >> license for all grammars in the repository. I would hate for a GPL
> grammar
> >> to get its stank on the other grammars. It would confuse people to have
> >> multiple licenses within a single repository. Thirdly, not everyone is
> >> comfortable with assembly language?er?I mean git. In that case, people
> >> could simply mail me a grammar for inclusion. It would only take me a
> >> second to add it. The fourth problem. We need a clean URI for grammars
> and
> >> I propose:
> >>>
> >>> http://www.antlr.org/grammars/<name>
> >>>
> >>> for the root directory of that project. For example,
> >>>
> >>> http://www.antlr.org/grammars/java
> >>>
> >>> would point out a directory that contains Java.g4 and may be a test
> >> program or something.
> >>>
> >>> I could easily add a redirect in the tomcat configuration files,
> >> assuming I can stomach all of that filthy XML, but that does not scale
> very
> >> well when people add grammars. Instead, perhaps the best solution is to
> set
> >> up a cronjob that pulls from the grammar repository and leaves the
> grammars
> >> on antlr.org's disk so that /grammars URI points at that directory.
> That
> >> way, the URIs would always be up-to-date with the repository and
> without me
> >> having to do any work. Heh, that just might work.
> >> http://www.antlr.org/grammars by itself could redirect to the github
> >> project.
> >>>
> >>> Anyway, If you have any thoughts on this stuff, please reply.
> >>>
> >>> Terence
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> >
> > --
> > Mobile : +32 486 899 652
> > Company website : www.8thcolor.com
> > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rprememail at yahoo.com  Mon Sep 17 14:15:02 2012
From: rprememail at yahoo.com (Premkumar)
Date: Mon, 17 Sep 2012 14:15:02 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1347916502.17825.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>


http://chargemangosteen.com/go.php?m=ni+gkqrth&pq=d&cvvn=wmot&vbqp=tcd&xy=dh+xfnmxh&sk=9-7&ee=-7&cd=

From parrt at cs.usfca.edu  Mon Sep 17 18:31:15 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 17 Sep 2012 18:31:15 -0700
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
Message-ID: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>

Hi,Thanks to Benjamin S Wolf and Gokulakannan Somasundaram we now have a Python 3.2 target and C++ target. Since these are major additions, I'm going to bump the release from 3.4.1 to 3.5.

I have just about everything ready to go for the release I believe.

Ter

From rprememail at yahoo.com  Mon Sep 17 23:18:39 2012
From: rprememail at yahoo.com (Premkumar)
Date: Mon, 17 Sep 2012 23:18:39 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1347949119.28631.BPMail_high_noncarrier@web124702.mail.ne1.yahoo.com>


http://www.demonic-duckz.kilu.de/go.php?m=eq+vmtvnk&ka=f&otwn=njwx&neka=wpt&zl=om+vrwlhg&xf=1-4&lh=-0&ft=

From guillaume at archlinux.org  Tue Sep 18 00:20:26 2012
From: guillaume at archlinux.org (Guillaume ALAUX)
Date: Tue, 18 Sep 2012 09:20:26 +0200
Subject: [antlr-interest] Patch antlr3 to enable build with jdk7
In-Reply-To: <20120915183653.4d2b3ff3@mahatma>
References: <CABAOfS96yjJBw4nHCaLXc8FZ2Ve4vSbmUq2qufNq2XwxMb0NFA@mail.gmail.com>
	<0555cfdd713a815c8ce8e82814f7289f@mail.gmail.com>
	<20120915183653.4d2b3ff3@mahatma>
Message-ID: <CABAOfS-tOXQyUGHNEhU-sFe1vg6kiE9hzke0emPkf5p57GGwxw@mail.gmail.com>

On 15 September 2012 18:36, Guus Bonnema <gbonnema at xs4all.nl> wrote:
> On Sat, 15 Sep 2012 09:22:46 -0700
> Jim Idle <jimi at temporal-wave.com> wrote:
>
>> I would not use the open jdk - use the sun JDK.
>>
>> Jim
>>
>
> What is wrong with open jdk?
>
> Guus.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

Hello,

> I would not use the open jdk - use the sun JDK.
I am building ANTLR to package it for Arch Linux [0]. OpenJDK is the
default JDK we use and we don't plan on changing that ;).

I am not familiar with ANTLR's development scheme: is this the proper
way to propose a patch for integration. Maybe there is an other way
for me to submit it?
This is a very minor change and it would enable 3 Linux distributions
(Fedora, Mageia and Arch Linux) to ship a vanilla version.

Thanks,

[0] https://www.archlinux.org/packages/extra/any/java-antlr3/
--
Guillaume

From rprememail at yahoo.com  Tue Sep 18 01:15:29 2012
From: rprememail at yahoo.com (Premkumar)
Date: Tue, 18 Sep 2012 01:15:29 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1347956129.14343.BPMail_high_noncarrier@web124705.mail.ne1.yahoo.com>


http://www.astrobonzo.com.ar/go.php?q=cu+qihsex&bp=l&nsfb=tshf&bgtt=dpl&up=xy+fwypbo&le=3-5&to=-9&tf=

From mike at lischke-online.de  Tue Sep 18 05:56:17 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Tue, 18 Sep 2012 14:56:17 +0200
Subject: [antlr-interest] [C target] Tree parent references not set
Message-ID: <F7D1F873-BF28-4E96-86DE-CABB9E1F773E@lischke-online.de>

Hey Jim,

there still seems to be a problem with setting the parent for a tree as described by Dimitry (http://markmail.org/message/ykstbb66lqknnvkl). In antrl3basetree.c addChild(..)  the handling of non-nil nodes is not complete. When copying child nodes from the given child node to the new parent tree the parent field of the moved children must be updated as well. Otherwise they all end up with a NULL parent. Here's some parts of my grammar and a dump:

...
logical_xor_expression:
	logical_and_expression (XOR_SYMBOL^ logical_and_expression)*
;
...

String to parse: select A, B, A OR B, A XOR B, ...

Dump:

(1, 0, nil)    nil
	(1, 0, SELECT_SYMBOL [547], address: 0x747b1f0, parent: 0x747b01c)    select
	(1, 0, SELECT_EXPR [546], address: 0x747b460, parent: 0x747b01c)    SELECT_EXPR
		(1, 0, FIELD_REF_ID [212], address: 0x747bebc, parent: 0x0)    FIELD_REF_ID
			(1, 7, IDENTIFIER [259], address: 0x747be20, parent: 0x0)    A
	(1, 8, COMMA_SYMBOL [90], address: 0x747b28c, parent: 0x747b01c)    ,
	(1, 0, SELECT_EXPR [546], address: 0x747b598, parent: 0x747b01c)    SELECT_EXPR
		(1, 0, FIELD_REF_ID [212], address: 0x747c12c, parent: 0x0)    FIELD_REF_ID
			(1, 10, IDENTIFIER [259], address: 0x747c090, parent: 0x0)    B
	(1, 11, COMMA_SYMBOL [90], address: 0x747b328, parent: 0x747b01c)    ,
	(1, 0, SELECT_EXPR [546], address: 0x747b76c, parent: 0x747b01c)    SELECT_EXPR
		(1, 15, OR_SYMBOL [447], address: 0x747b6d0, parent: 0x0)    OR
			(1, 0, FIELD_REF_ID [212], address: 0x747c39c, parent: 0x0)    FIELD_REF_ID
				(1, 13, IDENTIFIER [259], address: 0x747c300, parent: 0x0)    A
			(1, 0, FIELD_REF_ID [212], address: 0x747c4d4, parent: 0x0)    FIELD_REF_ID
				(1, 18, IDENTIFIER [259], address: 0x747c438, parent: 0x0)    B
	(1, 19, COMMA_SYMBOL [90], address: 0x747b3c4, parent: 0x747b01c)    ,
...

Adding setParent() calls to the two child copying branches solves this problem. I also set the child index there (just like freshenPACIndexes does).

Mike
-- 
www.soft-gems.net


From rprememail at yahoo.com  Tue Sep 18 08:08:26 2012
From: rprememail at yahoo.com (Premkumar)
Date: Tue, 18 Sep 2012 08:08:26 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1347980906.46496.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>


http://agrodonpablo.com/go.php?q=hd+lvgcbl&tw=g&hofc=acvm&rpwo=wlj&os=vg+jagqiw&pb=7-5&wl=-9&wi=

From vivipham85 at yahoo.com  Tue Sep 18 12:09:14 2012
From: vivipham85 at yahoo.com (Vivi)
Date: Tue, 18 Sep 2012 15:09:14 -0400
Subject: [antlr-interest] Different rules for same char
Message-ID: <19ACD925-38AB-4059-897E-279321704988@yahoo.com>

I have the input as:
This & bird is user for if(dog & cat)
I want to separate them as 3 tokens as:
This
Bird is used for
If(dog & cat)

But i have a grammar file that produces the following tokens:
This
Bird is used for
If(dog
Cat)
Please help me to fix the following grammar definition:
grammar CFG;

line returns [List<String> result]
@init {
    result = new ArrayList<String>();
}
    : (NEWLINE) => NEWLINE
    | (
        fieldResult=field { result.add(fieldResult); }
        (  BREAK fieldResult=field {result.add(fieldResult);} )*    
        NEWLINE
      )
    ;
 
field returns [String parsedItem]
@init {
    parsedItem = "";
}
    : f=FIELD {$parsedItem=$f.text;}
    | // nothing
    ;
    
 NEWLINE :   '\r'? '\n';
 BREAK :    '&';
 
 FIELD:  NONBREAKING+;
 
// Anything except a line-breaking character or break character is allowed.
fragment NONBREAKING
    :   ~('\r' | '\n' | BREAK );

Thanks,

Tp


From researcher0x00 at gmail.com  Tue Sep 18 12:22:20 2012
From: researcher0x00 at gmail.com (Eric)
Date: Tue, 18 Sep 2012 15:22:20 -0400
Subject: [antlr-interest] JavaScript target current?
Message-ID: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>

Hi,

I noted on ANTLR on a StackOverflow question,
http://stackoverflow.com/q/12416903/1243762 and now the OP is interested in
the JavaScript target. Since the targets page
http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets only list
it as "In sync with ANTLR3 Development" does any know if it is current with
ANTLR 3.4? I have never used the JavaScript taget so I don't know.

Thanks

From parrt at cs.usfca.edu  Tue Sep 18 17:54:56 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 18 Sep 2012 17:54:56 -0700
Subject: [antlr-interest] ANTLR 4.0b1 now available
Message-ID: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>

Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:

	http://www.antlr.org/download/antlr-4.0b1-complete.jar

Source:

	https://github.com/antlr/antlr4/zipball/antlr-4.0b1

Upcoming-book-examples source code

	http://pragprog.com/titles/tpantlr2/source_code

Readme:

	https://github.com/antlr/antlr4/blob/master/README.txt

Enjoy.

Ter

From rprememail at yahoo.com  Tue Sep 18 22:47:52 2012
From: rprememail at yahoo.com (Premkumar)
Date: Tue, 18 Sep 2012 22:47:52 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>


http://swan-kingdom.com/go.php?m=yd+xrccps&ux=k&ftri=qcwz&qajz=ebg&pc=ny+xmfnrb&ya=5-2&pu=-5&wm=

From martin.vanaken at 8thcolor.com  Tue Sep 18 23:33:56 2012
From: martin.vanaken at 8thcolor.com (Martin Van Aken)
Date: Wed, 19 Sep 2012 08:33:56 +0200
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
Message-ID: <CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>

Hello Terence,
Thanks for the info, this is far better than nothing, and I like the
incremental process outlined there. There is still something I'm not sure
to understand : the String Template .stg file is used to generate the
parser/lexer code for the grammar. But those classes inherit from more
general classes in Antlr (in the java version, at least). Are those also
generated by the .stg ?

In other word, what about the runtime of Antlr, is it an output of the
.stg, or is it another part to implement to be able to have a parser
running under a given language (let say Ruby).

Thanks !

Martin

On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:

> Unfortunately, no one has stepped up to bring the Ruby target up to date.
> The other bit of bad news is that we really don't have much in the way of
> how to create a target. just this page:
>
>
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
>
> Ter
> On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
>
> Terrence/list,
> I've the same question about the Ruby target. For what I can see from
> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
> not move since two years so it is probably lagging behind. Do anyone is
> still maintaining it ?
>
> If not, I may be interested in trying to update it myself. Any resource for
> (would be) goal maintener that I could start with ? Anyone that would be
> interested to contribute (time, advice, test, anything). I may take a look
> at the python target (that seems to be keeping up well) as a reference
> (closer to Ruby than Java).
>
> Thanks a lot.
>
> Martin
>
> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
>
> Ter/list,
>
>   Thanks again for all your efforts.  In terms of other language
>
> targets is there an idea/outline of when they'll be available.  I'm
>
> specifically thinking of the C target.  In a list thread from January
>
> there was the indication that a C++ target was still a while away so any
>
> progress updates?
>
>
> Cheers,
>
>
>
> On 16/09/12 4:36 AM, Terence Parr wrote:
>
> Howdy folks,
>
>
> ANTLR v4 release is rapidly approaching. The beta of the reference book
>
> will be out next week and the remaining two or three chapters should appear
>
> within a month or so afterwards. Sam Harwell and I have been working very
>
> hard on the tool itself and we should have 4.0 ready by the time the book
>
> goes final. In the meantime, 4.0b1 will be available for use with the beta
>
> book. Oh, and we need to release 3.4.1 before 4.0.
>
>
> I have paid for a new website design for both ANTLR and StringTemplate,
>
> which looks great. We will continue to use the same wiki software for
>
> documentation. The current website is generated by a Java server I built
>
> whereas the new one is going to be static so I have less software to
>
> maintain. In other words,  rather than using some kind of include mechanism
>
> to get the general look and feel on each page, the new websites will be
>
> simply static files on the disk.  The current antlr.org content will
>
> become antlr3.org, leaving the current domain pointing at v4 content.
>
>
> We currently have functionality on the websites to accept new grammars
>
> and filesharing and articles and so on. Because this is so infrequent, I
>
> think it's reasonable to simply have an HTML form that has an email action
>
> instead of an HTTP POST. When I get those requests, I can simply add them
>
> to the file on the server. (will that use the user's local mail client or
>
> will it force people to set up mail in their actual browsers before it will
>
> email me? does anybody know?)
>
>
> On to the grammar repository. Because it's likely we'll want to make
>
> fixes / updates to existing grammars, I don't think a simple form / email
>
> mechanism is the best solution. Right now, I have to go in and overwrite /
>
> update a number of files for a grammar update. Naturally, this screams for
>
> a revision control solution. I was thinking that we might as well just use
>
> github for this so that anybody can add or modify the publicly available
>
> grammars.
>
>
> There are a number of issues with using github for this. First, I would
>
> not want to create a new repository for each grammar so we would have one
>
> repository holding all grammars. This is pretty coarse granularity.  On the
>
> other hand, if you just want one grammar, you can download individually
>
> from github. The second issue is that we would really have to have a single
>
> license for all grammars in the repository. I would hate for a GPL grammar
>
> to get its stank on the other grammars. It would confuse people to have
>
> multiple licenses within a single repository. Thirdly, not everyone is
>
> comfortable with assembly language?er?I mean git. In that case, people
>
> could simply mail me a grammar for inclusion. It would only take me a
>
> second to add it. The fourth problem. We need a clean URI for grammars and
>
> I propose:
>
>
> http://www.antlr.org/grammars/<name>
>
>
> for the root directory of that project. For example,
>
>
> http://www.antlr.org/grammars/java
>
>
> would point out a directory that contains Java.g4 and may be a test
>
> program or something.
>
>
> I could easily add a redirect in the tomcat configuration files,
>
> assuming I can stomach all of that filthy XML, but that does not scale very
>
> well when people add grammars. Instead, perhaps the best solution is to set
>
> up a cronjob that pulls from the grammar repository and leaves the grammars
>
> on antlr.org's disk so that /grammars URI points at that directory. That
>
> way, the URIs would always be up-to-date with the repository and without me
>
> having to do any work. Heh, that just might work.
>
> http://www.antlr.org/grammars by itself could redirect to the github
>
> project.
>
>
> Anyway, If you have any thoughts on this stuff, please reply.
>
>
> Terence
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>
> Unsubscribe:
>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> --
> Mobile : +32 486 899 652
> Company website : www.8thcolor.com
> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>


-- 
Mobile : +32 486 899 652
Company website : www.8thcolor.com
Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>

From mike at lischke-online.de  Tue Sep 18 23:40:16 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 19 Sep 2012 08:40:16 +0200
Subject: [antlr-interest] ANTLR 4.0b1 now available
In-Reply-To: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
Message-ID: <B31B1AD1-A6FC-4782-A036-76C6EDF86063@lischke-online.de>


Hey Ter,

> Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:
> 
> 	http://www.antlr.org/download/antlr-4.0b1-complete.jar
> 

That's great news! Is there already a changelog or similar describing all the new features? From a quick look at the book source code I saw ANTLR4 supports left recursions now in the grammars, remarkable (is this still LL(*) or what is that called now?). What else has changed grammar-wise? Any information about a new ANTLRWorks release?

Thanks,

Mike
-- 
www.soft-gems.net



From mike at lischke-online.de  Tue Sep 18 23:43:03 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 19 Sep 2012 08:43:03 +0200
Subject: [antlr-interest] (no subject)
In-Reply-To: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>
References: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>
Message-ID: <3E533180-7A0E-4210-828C-9C21813E5B3E@lischke-online.de>


Could someone please take care and forcibly unsubscribe this spammer?

> 
> http://swan-kingdom.com/go.php?m=yd+xrccps&ux=k&ftri=qcwz&qajz=ebg&pc=ny+xmfnrb&ya=5-2&pu=-5&wm=
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

Mike
-- 
www.soft-gems.net



From ranco.marcus at epirion.nl  Wed Sep 19 01:01:56 2012
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Wed, 19 Sep 2012 08:01:56 +0000
Subject: [antlr-interest] ANTLR 4.0b1 now available
In-Reply-To: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>

Congratulations Terence and Sam!
 
Although I will definitely give this 'bad ass' release a test drive, I am eagerly waiting to test honey badger on our CSharp3 grammars. When do you expect this target to be available? Please let me know if I can assist in testing the CSharp3 target. 

Best regards,

Ranco Marcus
Epirion Knowledge Solutions B.V.

________________________________________
From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] on behalf of Terence Parr [parrt at cs.usfca.edu]
Sent: Wednesday, September 19, 2012 2:54 AM
To: antlr ANTLR
Subject: [antlr-interest] ANTLR 4.0b1 now available

Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:

        http://www.antlr.org/download/antlr-4.0b1-complete.jar

Source:

        https://github.com/antlr/antlr4/zipball/antlr-4.0b1

Upcoming-book-examples source code

        http://pragprog.com/titles/tpantlr2/source_code

Readme:

        https://github.com/antlr/antlr4/blob/master/README.txt

Enjoy.

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rprememail at yahoo.com  Wed Sep 19 02:08:36 2012
From: rprememail at yahoo.com (Premkumar)
Date: Wed, 19 Sep 2012 02:08:36 -0700 (PDT)
Subject: [antlr-interest] Fwd:
Message-ID: <1348045716.70836.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>


http://phivetesting.com/go.php?y=ew+rwxvid&bm=c&wgqi=qtdx&funf=zkd&nw=mo+bdovvh&gp=8-6&cs=-8&nc=

From stephen at perceptisys.co.uk  Wed Sep 19 04:35:17 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Wed, 19 Sep 2012 12:35:17 +0100
Subject: [antlr-interest] JavaScript target current?
In-Reply-To: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
References: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
Message-ID: <5059ADF5.1020909@perceptisys.co.uk>

Eric,

The tool I am building would be nice to have inside the likes of Chrome 
or Firefox, so I tried to use the JavaScript target a couple of months 
ago with the ANTRL 3.4.

I found so many generation errors (on the grammar that I was 
successfully using with the Java and C targets) that I had to abandon my 
use of any JavaScript version (for the near future).

Anecdotal, but, I suspect, not surprising.

Regards,
Stephen Gaito

On 18/09/12 20:22, Eric wrote:
> Hi,
>
> I noted on ANTLR on a StackOverflow question,
> http://stackoverflow.com/q/12416903/1243762 and now the OP is interested in
> the JavaScript target. Since the targets page
> http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets only list
> it as "In sync with ANTLR3 Development" does any know if it is current with
> ANTLR 3.4? I have never used the JavaScript taget so I don't know.
>
> Thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From apalala at gmail.com  Wed Sep 19 04:56:04 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Wed, 19 Sep 2012 07:26:04 -0430
Subject: [antlr-interest] JavaScript target current?
In-Reply-To: <5059ADF5.1020909@perceptisys.co.uk>
References: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
	<5059ADF5.1020909@perceptisys.co.uk>
Message-ID: <CAN1YFWu1zjwf8=Rd3s_nY7e-5yD7OFanBCo8=gOXVxH_f3sM3g@mail.gmail.com>

Eric,

The same happened to me with the Python target, but I found that the latest
sources from github worked fine.

Have you tried those?

-- Juancarlo

On Wed, Sep 19, 2012 at 7:05 AM, Stephen Gaito <stephen at perceptisys.co.uk>wrote:

> Eric,
>
> The tool I am building would be nice to have inside the likes of Chrome
> or Firefox, so I tried to use the JavaScript target a couple of months
> ago with the ANTRL 3.4.
>
> I found so many generation errors (on the grammar that I was
> successfully using with the Java and C targets) that I had to abandon my
> use of any JavaScript version (for the near future).
>
> Anecdotal, but, I suspect, not surprising.
>
> Regards,
> Stephen Gaito
>
> On 18/09/12 20:22, Eric wrote:
> > Hi,
> >
> > I noted on ANTLR on a StackOverflow question,
> > http://stackoverflow.com/q/12416903/1243762 and now the OP is
> interested in
> > the JavaScript target. Since the targets page
> > http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets only
> list
> > it as "In sync with ANTLR3 Development" does any know if it is current
> with
> > ANTLR 3.4? I have never used the JavaScript taget so I don't know.
> >
> > Thanks
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From researcher0x00 at gmail.com  Wed Sep 19 05:44:51 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 19 Sep 2012 08:44:51 -0400
Subject: [antlr-interest] JavaScript target current?
In-Reply-To: <CAN1YFWu1zjwf8=Rd3s_nY7e-5yD7OFanBCo8=gOXVxH_f3sM3g@mail.gmail.com>
References: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
	<5059ADF5.1020909@perceptisys.co.uk>
	<CAN1YFWu1zjwf8=Rd3s_nY7e-5yD7OFanBCo8=gOXVxH_f3sM3g@mail.gmail.com>
Message-ID: <CAN45N11bVF9wY2EC3b3+dHfn6tyXnrfTqzN1Vrr_uJzy6Hx=VA@mail.gmail.com>

All,



Thanks for the responses. I am not the one seeking the JavaScript target. I
saw a question on StackOverflow about parsing and using that to
auto-compete input for a IDE and knew of the work of Ter and Sam on this so
I suggested to the OP to take a look at ANTLR. The OP noticed that there
was a JavaScript target for ANTLR and thought about doing a redesign of a
project based on that.



Since I have only used the Java and C# targets, I did not want to give an
answer on StackOverflow suggesting ANTLR and then letting the OP make a bad
and possibly expensive error by choosing a target that was not functional.
Hopefully the OP is paying attention to my comments on StackOverflow or
here.



Thanks,

Eric


On Wed, Sep 19, 2012 at 7:56 AM, Juancarlo A?ez <apalala at gmail.com> wrote:

> Eric,
>
> The same happened to me with the Python target, but I found that the latest
> sources from github worked fine.
>
> Have you tried those?
>
> -- Juancarlo
>
> On Wed, Sep 19, 2012 at 7:05 AM, Stephen Gaito <stephen at perceptisys.co.uk
> >wrote:
>
> > Eric,
> >
> > The tool I am building would be nice to have inside the likes of Chrome
> > or Firefox, so I tried to use the JavaScript target a couple of months
> > ago with the ANTRL 3.4.
> >
> > I found so many generation errors (on the grammar that I was
> > successfully using with the Java and C targets) that I had to abandon my
> > use of any JavaScript version (for the near future).
> >
> > Anecdotal, but, I suspect, not surprising.
> >
> > Regards,
> > Stephen Gaito
> >
> > On 18/09/12 20:22, Eric wrote:
> > > Hi,
> > >
> > > I noted on ANTLR on a StackOverflow question,
> > > http://stackoverflow.com/q/12416903/1243762 and now the OP is
> > interested in
> > > the JavaScript target. Since the targets page
> > > http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets only
> > list
> > > it as "In sync with ANTLR3 Development" does any know if it is current
> > with
> > > ANTLR 3.4? I have never used the JavaScript taget so I don't know.
> > >
> > > Thanks
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
>
> --
> Juancarlo *A?ez*
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Wed Sep 19 05:50:51 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 19 Sep 2012 14:50:51 +0200
Subject: [antlr-interest] JavaScript target current?
In-Reply-To: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
References: <CAN45N10N5Jw2TUg7NKc65r3=HzBi0q+=4X93TcdLk5-Ac9VuYA@mail.gmail.com>
Message-ID: <CAOrgODZ4yvLrKS09p8eekCqRsqjpQRD7mM3hQJ3OM8Zrnb27ew@mail.gmail.com>

Hi Eric, list,

I've only tried the JS target once or twice, but using ANTLR 3.3. I had no
problems generating a moderately "complicated" grammar (a couple of
predicates in it).
A small demo can be found in this SO-Q&A:
http://stackoverflow.com/questions/8200078/antlr-pcre-grammar-to-js-target

Regards,

Bart.


On Tue, Sep 18, 2012 at 9:22 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi,
>
> I noted on ANTLR on a StackOverflow question,
> http://stackoverflow.com/q/12416903/1243762 and now the OP is interested
> in
> the JavaScript target. Since the targets page
> http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets only list
> it as "In sync with ANTLR3 Development" does any know if it is current with
> ANTLR 3.4? I have never used the JavaScript taget so I don't know.
>
> Thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Wed Sep 19 08:31:51 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 08:31:51 -0700
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
Message-ID: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>

Well, It had to happen sometime?the new ANTLR v4 book is available in beta, with only two chapters left to write. Until it is complete, the book is only available at the publisher's website. You can preorder the paper book now but only the electronic format is available until we come out of beta. Go here to get it while it's hot!

http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference

Until Oct 8, 2012, you can get a 25% discount with code: "zANTLRdiscount" while you check out at the pragmatic programmer's website.

Terence

From stephen at perceptisys.co.uk  Wed Sep 19 08:34:55 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Wed, 19 Sep 2012 16:34:55 +0100
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
In-Reply-To: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
References: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
Message-ID: <5059E61F.9050506@perceptisys.co.uk>

Terence,

Well I purchased a copy a couple of hours ago (keen or what?)

Consider the %25 of $24 a donation.... to a job well done (over many years)!

Regards,

Stephen Gaito

On 19/09/12 16:31, Terence Parr wrote:
> Well, It had to happen sometime?the new ANTLR v4 book is available in beta, with only two chapters left to write. Until it is complete, the book is only available at the publisher's website. You can preorder the paper book now but only the electronic format is available until we come out of beta. Go here to get it while it's hot!
>
> http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
>
> Until Oct 8, 2012, you can get a 25% discount with code: "zANTLRdiscount" while you check out at the pragmatic programmer's website.
>
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pop.qvarnstrom at gmail.com  Wed Sep 19 09:07:10 2012
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Wed, 19 Sep 2012 18:07:10 +0200
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
In-Reply-To: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
References: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
Message-ID: <CACCNSud4X6TVn2zRLFVHyVAmYDcMtTJdfCf0L0VkBGBSuuP5-A@mail.gmail.com>

Aaw, discount code received a few hours after buying the beta e-book/paper
book bundle. Bummer!
Den 19 sep 2012 17:32 skrev "Terence Parr" <parrt at cs.usfca.edu>:

> Well, It had to happen sometime?the new ANTLR v4 book is available in
> beta, with only two chapters left to write. Until it is complete, the book
> is only available at the publisher's website. You can preorder the paper
> book now but only the electronic format is available until we come out of
> beta. Go here to get it while it's hot!
>
> http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
>
> Until Oct 8, 2012, you can get a 25% discount with code: "zANTLRdiscount"
> while you check out at the pragmatic programmer's website.
>
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gerald at certiv.net  Wed Sep 19 09:27:06 2012
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 19 Sep 2012 09:27:06 -0700
Subject: [antlr-interest] Reference Antlr g4?
Message-ID: <5059F25A.20405@certiv.net>

Hi Ter,

Looking for the reference Antlr g4 grammar to begin bringing my tools up 
to date.  Could not find one in the GitHub tree.  Did find 
ANTLRv4Lexer.g4 and ANTLRv4Parser.g4 in the book supplemental code 
archive, but cannot tell if they are meant to be the reference grammars.

Thanks,
Gerald

From researcher0x00 at gmail.com  Wed Sep 19 10:34:50 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 19 Sep 2012 13:34:50 -0400
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
In-Reply-To: <CACCNSud4X6TVn2zRLFVHyVAmYDcMtTJdfCf0L0VkBGBSuuP5-A@mail.gmail.com>
References: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
	<CACCNSud4X6TVn2zRLFVHyVAmYDcMtTJdfCf0L0VkBGBSuuP5-A@mail.gmail.com>
Message-ID: <CAN45N117L=LTySmQToTbK=iC3n1jSnoT=XdV23SD7+f1veLy3g@mail.gmail.com>

I just bought the combo pack, e-book and paperback, using the code and
received two discounts. One for the combo pack and one for the coupon code.


Definitive ANTLR Reference, 2nd Edition Combo Pack ? 1:  -$13.00

25% discount ? 1: -$12.00



Thanks, Eric




On Wed, Sep 19, 2012 at 12:07 PM, Pop Qvarnstr?m
<pop.qvarnstrom at gmail.com>wrote:

> Aaw, discount code received a few hours after buying the beta e-book/paper
> book bundle. Bummer!
> Den 19 sep 2012 17:32 skrev "Terence Parr" <parrt at cs.usfca.edu>:
>
> > Well, It had to happen sometime?the new ANTLR v4 book is available in
> > beta, with only two chapters left to write. Until it is complete, the
> book
> > is only available at the publisher's website. You can preorder the paper
> > book now but only the electronic format is available until we come out of
> > beta. Go here to get it while it's hot!
> >
> > http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
> >
> > Until Oct 8, 2012, you can get a 25% discount with code: "zANTLRdiscount"
> > while you check out at the pragmatic programmer's website.
> >
> > Terence
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Wed Sep 19 11:33:54 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 11:33:54 -0700
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
In-Reply-To: <5059E61F.9050506@perceptisys.co.uk>
References: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
	<5059E61F.9050506@perceptisys.co.uk>
Message-ID: <0646AD08-0C7B-4B9B-BBCB-8490E6959A53@cs.usfca.edu>

doh! sorry guys. i tried to email the discount as soon as I got rolling this AM.
Ter
On Sep 19, 2012, at 8:34 AM, Stephen Gaito wrote:

> Terence,
> 
> Well I purchased a copy a couple of hours ago (keen or what?)
> 
> Consider the %25 of $24 a donation.... to a job well done (over many years)!
> 
> Regards,
> 
> Stephen Gaito
> 
> On 19/09/12 16:31, Terence Parr wrote:
>> Well, It had to happen sometime?the new ANTLR v4 book is available in beta, with only two chapters left to write. Until it is complete, the book is only available at the publisher's website. You can preorder the paper book now but only the electronic format is available until we come out of beta. Go here to get it while it's hot!
>> 
>> http://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference
>> 
>> Until Oct 8, 2012, you can get a 25% discount with code: "zANTLRdiscount" while you check out at the pragmatic programmer's website.
>> 
>> Terence
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Sep 19 11:35:25 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 11:35:25 -0700
Subject: [antlr-interest] What's new in v4 (was Re: ANTLR 4.0b1 now
	available)
In-Reply-To: <B31B1AD1-A6FC-4782-A036-76C6EDF86063@lischke-online.de>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<B31B1AD1-A6FC-4782-A036-76C6EDF86063@lischke-online.de>
Message-ID: <7CD525E0-E5FF-47A2-B180-EBFC12560FBF@cs.usfca.edu>

please see the preface:

http://media.pragprog.com/titles/tpantlr2/preface.pdf

Ter
On Sep 18, 2012, at 11:40 PM, Mike Lischke wrote:

> 
> Hey Ter,
> 
>> Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:
>> 
>> 	http://www.antlr.org/download/antlr-4.0b1-complete.jar
>> 
> 
> That's great news! Is there already a changelog or similar describing all the new features? From a quick look at the book source code I saw ANTLR4 supports left recursions now in the grammars, remarkable (is this still LL(*) or what is that called now?). What else has changed grammar-wise? Any information about a new ANTLRWorks release?
> 
> Thanks,
> 
> Mike
> -- 
> www.soft-gems.net
> 
> 


From parrt at cs.usfca.edu  Wed Sep 19 11:37:54 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 11:37:54 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <3E533180-7A0E-4210-828C-9C21813E5B3E@lischke-online.de>
References: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>
	<3E533180-7A0E-4210-828C-9C21813E5B3E@lischke-online.de>
Message-ID: <1B6A91EF-EDA6-4ED3-8B27-800F00AA351B@cs.usfca.edu>

Can't find "Premkumar <rprememail at yahoo.com>" on list membership pages. weird. been trying to kill it.
can'tsee how he emails from that address. any ideas?
Ter
On Sep 18, 2012, at 11:43 PM, Mike Lischke wrote:

> 
> Could someone please take care and forcibly unsubscribe this spammer?
> 
>> 
>> http://swan-kingdom.com/go.php?m=yd+xrccps&ux=k&ftri=qcwz&qajz=ebg&pc=ny+xmfnrb&ya=5-2&pu=-5&wm=
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> Mike
> -- 
> www.soft-gems.net
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Sep 19 12:09:38 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 12:09:38 -0700
Subject: [antlr-interest] Reference Antlr g4?
In-Reply-To: <5059F25A.20405@certiv.net>
References: <5059F25A.20405@certiv.net>
Message-ID: <A80FCAA8-08FF-406D-B555-10BA5CE5E106@cs.usfca.edu>

Hi. Sam was going to clean up these grammars, but I believe those are close to being correct. He is using them for ANTLRWorks2.
Ter
On Sep 19, 2012, at 9:27 AM, Gerald Rosenberg wrote:

> Hi Ter,
> 
> Looking for the reference Antlr g4 grammar to begin bringing my tools up 
> to date.  Could not find one in the GitHub tree.  Did find 
> ANTLRv4Lexer.g4 and ANTLRv4Parser.g4 in the book supplemental code 
> archive, but cannot tell if they are meant to be the reference grammars.
> 
> Thanks,
> Gerald
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pgquiles at elpauer.org  Wed Sep 19 12:22:17 2012
From: pgquiles at elpauer.org (Pau Garcia i Quiles)
Date: Wed, 19 Sep 2012 21:22:17 +0200
Subject: [antlr-interest] (no subject)
In-Reply-To: <1B6A91EF-EDA6-4ED3-8B27-800F00AA351B@cs.usfca.edu>
References: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>
	<3E533180-7A0E-4210-828C-9C21813E5B3E@lischke-online.de>
	<1B6A91EF-EDA6-4ED3-8B27-800F00AA351B@cs.usfca.edu>
Message-ID: <CAKcBokuv6d9muSxTjAFMQeDkqBd3DqWqGCUHOST9L7Q29uMjnQ@mail.gmail.com>

On Wed, Sep 19, 2012 at 8:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Can't find "Premkumar <rprememail at yahoo.com>" on list membership pages. weird. been trying to kill it.
> can'tsee how he emails from that address. any ideas?

Wouldn't just it be ironic if some spammer had used ANTLR to build an
scanner + parser, then create a small application that subscribes to a
mailing list, parses the ack mail, sends spam, then unsubscribes? Top
that with autocreation of dummy e-mail addresses and you've got an
evil business running.

-- 
Pau Garcia i Quiles
http://www.elpauer.org
(Due to my workload, I may need 10 days to answer)

From kferrio at gmail.com  Wed Sep 19 12:25:33 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 19 Sep 2012 12:25:33 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <CAKcBokuv6d9muSxTjAFMQeDkqBd3DqWqGCUHOST9L7Q29uMjnQ@mail.gmail.com>
References: <1348033672.94103.BPMail_high_noncarrier@web124704.mail.ne1.yahoo.com>
	<3E533180-7A0E-4210-828C-9C21813E5B3E@lischke-online.de>
	<1B6A91EF-EDA6-4ED3-8B27-800F00AA351B@cs.usfca.edu>
	<CAKcBokuv6d9muSxTjAFMQeDkqBd3DqWqGCUHOST9L7Q29uMjnQ@mail.gmail.com>
Message-ID: <CAAfeETr-Yh163XchCv4bHD34Hwv=Kc36TX-DdYP7O+bvd4jyhA@mail.gmail.com>

Curses!  You're on to me!  Ok, on to Evil Genius Plan Beta...
On Sep 19, 2012 12:22 PM, "Pau Garcia i Quiles" <pgquiles at elpauer.org>
wrote:

> On Wed, Sep 19, 2012 at 8:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Can't find "Premkumar <rprememail at yahoo.com>" on list membership pages.
> weird. been trying to kill it.
> > can'tsee how he emails from that address. any ideas?
>
> Wouldn't just it be ironic if some spammer had used ANTLR to build an
> scanner + parser, then create a small application that subscribes to a
> mailing list, parses the ack mail, sends spam, then unsubscribes? Top
> that with autocreation of dummy e-mail addresses and you've got an
> evil business running.
>
> --
> Pau Garcia i Quiles
> http://www.elpauer.org
> (Due to my workload, I may need 10 days to answer)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mike at lischke-online.de  Wed Sep 19 12:30:55 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 19 Sep 2012 21:30:55 +0200
Subject: [antlr-interest] What's new in v4 (was Re: ANTLR 4.0b1 now
	available)
In-Reply-To: <7CD525E0-E5FF-47A2-B180-EBFC12560FBF@cs.usfca.edu>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<B31B1AD1-A6FC-4782-A036-76C6EDF86063@lischke-online.de>
	<7CD525E0-E5FF-47A2-B180-EBFC12560FBF@cs.usfca.edu>
Message-ID: <E8726AFA-9185-468B-9C85-C14B51CD73ED@lischke-online.de>


> please see the preface:
> 
> http://media.pragprog.com/titles/tpantlr2/preface.pdf
> 

This all sounds awesome. I'm eager for trying this out. But first the target implementations must be ported.

Btw. "Adaptive LL(*)" or ALL(*) or "all star" is a great designation, very amusing :-)

Thank you,

Mike
-- 
www.soft-gems.net



From parrt at cs.usfca.edu  Wed Sep 19 12:33:14 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Sep 2012 12:33:14 -0700
Subject: [antlr-interest] What's new in v4 (was Re: ANTLR 4.0b1 now
	available)
In-Reply-To: <E8726AFA-9185-468B-9C85-C14B51CD73ED@lischke-online.de>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<B31B1AD1-A6FC-4782-A036-76C6EDF86063@lischke-online.de>
	<7CD525E0-E5FF-47A2-B180-EBFC12560FBF@cs.usfca.edu>
	<E8726AFA-9185-468B-9C85-C14B51CD73ED@lischke-online.de>
Message-ID: <D8250315-72DC-4198-9A9A-F17A7010F5A5@cs.usfca.edu>


On Sep 19, 2012, at 12:30 PM, Mike Lischke wrote:

> 
>> please see the preface:
>> 
>> http://media.pragprog.com/titles/tpantlr2/preface.pdf
>> 
> 
> This all sounds awesome. I'm eager for trying this out. But first the target implementations must be ported.

Sam Harwell we'll be getting on C++ and C# ports but I don't think it will happen right away.

> Btw. "Adaptive LL(*)" or ALL(*) or "all star" is a great designation, very amusing :-)

yeah, I love that!

Ter

From msb5014 at gmail.com  Wed Sep 19 16:35:21 2012
From: msb5014 at gmail.com (Michael Barry)
Date: Wed, 19 Sep 2012 19:35:21 -0400
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
Message-ID: <8008126564149024886@unknownmsgid>

Hello,

Is anyone aware of any projects out there for doing syntax-based
testing using ANTLR grammars?  The simplest form would be a tool for
generating valid language productions from an ANTLR grammar, but more
complex might introduce mutations.


Thanks
Mike Barry

From vinicius.durelli at gmail.com  Wed Sep 19 16:43:12 2012
From: vinicius.durelli at gmail.com (Vinicius Durelli)
Date: Wed, 19 Sep 2012 20:43:12 -0300
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <8008126564149024886@unknownmsgid>
References: <8008126564149024886@unknownmsgid>
Message-ID: <CAFVj062RwdsM+9J9yOozEc95L==2jCHUnhrUsaxAccQLq0cv4Q@mail.gmail.com>

Hi Barry,

Last year I was developing a mutation testing tool based on the Java 5
grammar available on ANTLR's web site. Since I was doing it during my spare
time, I didn't get much done.
As far as I am concerned, there is no mutation testing tool that uses ANTLR
to generate mutants.

Best,
~Vinicius Durelli

On Wed, Sep 19, 2012 at 8:35 PM, Michael Barry <msb5014 at gmail.com> wrote:

> Hello,
>
> Is anyone aware of any projects out there for doing syntax-based
> testing using ANTLR grammars?  The simplest form would be a tool for
> generating valid language productions from an ANTLR grammar, but more
> complex might introduce mutations.
>
>
> Thanks
> Mike Barry
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Wed Sep 19 17:15:11 2012
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 20 Sep 2012 10:15:11 +1000
Subject: [antlr-interest] The Definitive ANTLR 4 Reference BETA released
In-Reply-To: <0646AD08-0C7B-4B9B-BBCB-8490E6959A53@cs.usfca.edu>
References: <3CDFD157-68F5-4E4D-B250-2CE0F9EC2478@cs.usfca.edu>
	<5059E61F.9050506@perceptisys.co.uk>
	<0646AD08-0C7B-4B9B-BBCB-8490E6959A53@cs.usfca.edu>
Message-ID: <CACJVtdPe=-Q42Z2dzexVyxpeVgdWATdbX2gU8RehzC80EjPa6w@mail.gmail.com>

Cool bananas - just got mine !

Michael

From moller at mollerware.com  Wed Sep 19 18:43:39 2012
From: moller at mollerware.com (Chris Moller)
Date: Wed, 19 Sep 2012 21:43:39 -0400
Subject: [antlr-interest] C in Honey Badger?
Message-ID: <505A74CB.5070300@mollerware.com>

In the category of 
giving-away-cool-free-stuff-just-gets-you-nagged-for-more-cool-free-stuff, 
is support for C coming any time soon?

Chris Moller

From researcher0x00 at gmail.com  Thu Sep 20 05:21:56 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 20 Sep 2012 08:21:56 -0400
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <8008126564149024886@unknownmsgid>
References: <8008126564149024886@unknownmsgid>
Message-ID: <CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>

Hi Mike,

If you are talking about phrase generation then Ter did an initial take on
it with

http://www.antlr.org/wiki/display/ANTLR3/Random+phrase+generation+using+an+ANTLR+grammar


I did some work on my own on this a year ago and the problem you get into
is a huge explosion in output. Just to manage the problem of the explosion
I had to create methods just to count the possibilities given a grammar and
the easiest way for me to relate to the size was as a power. So for one
grammar the set could have 10**15 results and others could have 10**30
results. This is not even something that can be reasonably tested.

To tackle this you then need to learn to put in constraints into the
grammar to control the generation of sets. Now the sets you get will be
valid syntax but not semantically valid, so if you are testing with input
to a compiler, most of the cases will be invalid. So then you have to
modify the input grammar to the phrase generator again to only let valid
productions through. At this point even the generation of the input to the
phrase generator is so complicated you find that creating a GUI to manage
it is a good solution.

It can be done but it takes work.


Eric
On Wed, Sep 19, 2012 at 7:35 PM, Michael Barry <msb5014 at gmail.com> wrote:

> Hello,
>
> Is anyone aware of any projects out there for doing syntax-based
> testing using ANTLR grammars?  The simplest form would be a tool for
> generating valid language productions from an ANTLR grammar, but more
> complex might introduce mutations.
>
>
> Thanks
> Mike Barry
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kierans777 at gmail.com  Thu Sep 20 05:30:16 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Thu, 20 Sep 2012 22:30:16 +1000
Subject: [antlr-interest] ANTLR 4.0b1 now available
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>
Message-ID: <505B0C58.3050707@gmail.com>

I too would like to add my congratulations to Terence and Sam.

Like others, I'm interested in a C/C++ target, so look forwards to that 
arriving.

Cheers,

On 19/09/12 6:01 PM, Ranco Marcus wrote:
> Congratulations Terence and Sam!
>
> Although I will definitely give this 'bad ass' release a test drive, I am eagerly waiting to test honey badger on our CSharp3 grammars. When do you expect this target to be available? Please let me know if I can assist in testing the CSharp3 target.
>
> Best regards,
>
> Ranco Marcus
> Epirion Knowledge Solutions B.V.
>
> ________________________________________
> From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] on behalf of Terence Parr [parrt at cs.usfca.edu]
> Sent: Wednesday, September 19, 2012 2:54 AM
> To: antlr ANTLR
> Subject: [antlr-interest] ANTLR 4.0b1 now available
>
> Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:
>
>          http://www.antlr.org/download/antlr-4.0b1-complete.jar
>
> Source:
>
>          https://github.com/antlr/antlr4/zipball/antlr-4.0b1
>
> Upcoming-book-examples source code
>
>          http://pragprog.com/titles/tpantlr2/source_code
>
> Readme:
>
>          https://github.com/antlr/antlr4/blob/master/README.txt
>
> Enjoy.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kierans777 at gmail.com  Thu Sep 20 05:32:12 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Thu, 20 Sep 2012 22:32:12 +1000
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
Message-ID: <505B0CCC.5040809@gmail.com>

This is great!  I was wondering if there are going to be any fixes for 
the C target issues that have been previously raised?

Cheers,

On 18/09/12 11:31 AM, Terence Parr wrote:
> Hi,Thanks to Benjamin S Wolf and Gokulakannan Somasundaram we now have a Python 3.2 target and C++ target. Since these are major additions, I'm going to bump the release from 3.4.1 to 3.5.
>
> I have just about everything ready to go for the release I believe.
>
> Ter

From stephen at perceptisys.co.uk  Thu Sep 20 05:37:06 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Thu, 20 Sep 2012 13:37:06 +0100
Subject: [antlr-interest] C in Honey Badger?
In-Reply-To: <505A74CB.5070300@mollerware.com>
References: <505A74CB.5070300@mollerware.com>
Message-ID: <505B0DF2.90908@perceptisys.co.uk>

Chris, Terence and Sam,

I would also be interested in what sort of time line there will be for a 
C/C++ target.

Given that C++ can be called from C, the real question I have is not 
will there be a C (only) target...

... but, rather, how many and how well controlled will the C++ target's 
dependencies be?

That is, will any "external" dependencies be cleanly re-implementable 
for, for example, running inside the PHP engine?

Regards,

Stephen Gaito

On 20/09/12 02:43, Chris Moller wrote:
> In the category of
> giving-away-cool-free-stuff-just-gets-you-nagged-for-more-cool-free-stuff,
> is support for C coming any time soon?
>
> Chris Moller
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stephen at perceptisys.co.uk  Thu Sep 20 05:46:12 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Thu, 20 Sep 2012 13:46:12 +0100
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <505B0CCC.5040809@gmail.com>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com>
Message-ID: <505B1014.70207@perceptisys.co.uk>

Kieran,

Which issues are these?

I have "fixed" the couple of (release-phase) issues that have been 
affecting my usage of the C target.

You can find my patches on GitHub: https://github.com/stephengaito/antlr3

There is essentially one patch on each of my branches. On my system, I 
take the official C target download and apply each patch to get the code 
source I need.

As you can see from the GitHub fork tool graph, these patches are to 
3.4.1 from Github a couple of months before the 3.5 release.

Regards,

Stephen Gaito

On 20/09/12 13:32, Kieran Simpson wrote:
> This is great!  I was wondering if there are going to be any fixes for
> the C target issues that have been previously raised?
>
> Cheers,
>
> On 18/09/12 11:31 AM, Terence Parr wrote:
>> Hi,Thanks to Benjamin S Wolf and Gokulakannan Somasundaram we now have a Python 3.2 target and C++ target. Since these are major additions, I'm going to bump the release from 3.4.1 to 3.5.
>>
>> I have just about everything ready to go for the release I believe.
>>
>> Ter
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at lischke-online.de  Thu Sep 20 08:46:22 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 20 Sep 2012 17:46:22 +0200
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <505B1014.70207@perceptisys.co.uk>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
Message-ID: <ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>


Hey Stephen,

> Which issues are these?

You fixed the parent return problem in the common tree already, but there's still the issue with not-set parents when moving nodes between trees (antlr3basetree.c) and then I also removed the declaration of "true" and "false" from antlr3convertutf.h and replaced their occurrences in antlr3convertutf.c (as they caused warnings about duplicate declarations). Additionally, I renamed the member PROTOCOL_VERSION in antlr3debugeventlistener.h to lower case, as it conflicted with a macro of the same name (member names should never be written all upper case anyway). Finally I added a number of casts to get rid of compiler warnings.

> I have "fixed" the couple of (release-phase) issues that have been 
> affecting my usage of the C target.

So what is now the most up to date C runtime? The one from you on Github? I can make a diff and send it to you if you want.

Btw: the runtime on antlr.org still has 3.0.1 as version number in the README, even for the 3.4 download. The same holds true for your Git repo.

Mike
-- 
www.soft-gems.net



From mike at lischke-online.de  Thu Sep 20 08:53:10 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 20 Sep 2012 17:53:10 +0200
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>
References: <8008126564149024886@unknownmsgid>
	<CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>
Message-ID: <79F9A8E0-FC53-45CB-A8F3-4FA593459A10@lischke-online.de>


What I wonder is if this way test is really meaningful. I mean, when you create test sentences from the grammar they will always work, no? Since your parser uses the same grammar as the test input stems from there can only be test failures if your grammar uses actions to control what gets parsed how. But for a pure grammar you can only generate test cases when you take your language spec (not codified in a grammar) and create test cases out of it.

> I did some work on my own on this a year ago and the problem you get into
> is a huge explosion in output. Just to manage the problem of the explosion
> I had to create methods just to count the possibilities given a grammar and
> the easiest way for me to relate to the size was as a power. So for one
> grammar the set could have 10**15 results and others could have 10**30
> results. This is not even something that can be reasonably tested.
> 
>> 
>> Is anyone aware of any projects out there for doing syntax-based
>> testing using ANTLR grammars?  The simplest form would be a tool for
>> generating valid language productions from an ANTLR grammar, but more
>> complex might introduce mutations.
>> 
>> 
>> Thanks
>> Mike Barry
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

Mike
-- 
www.soft-gems.net



From researcher0x00 at gmail.com  Thu Sep 20 09:38:47 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 20 Sep 2012 12:38:47 -0400
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <79F9A8E0-FC53-45CB-A8F3-4FA593459A10@lischke-online.de>
References: <8008126564149024886@unknownmsgid>
	<CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>
	<79F9A8E0-FC53-45CB-A8F3-4FA593459A10@lischke-online.de>
Message-ID: <CAN45N11E7sRDd2NHZUVcE2nqwj+YJF9XnCqn7mcpWCxTUr1VMA@mail.gmail.com>

Hi Mike,

"What I wonder is if this way test is really meaningful. I mean, when you
create test sentences from the grammar they will always work, no? "

Yes the test are meaningful but only meaningful if you don't blindly
generate phrases and accept the output without verification.. Since you
don't want to hand validate each result you make the generator smart enough
and give it semantic knowledge to tag the results as this should be valid
and that should be invalid, then look for a negative result. i.e. a test
that should pass that fails or a test that should fail that passes. You
should still hand check a random set of results. Note that even with all
this testing it does not guarantee the app using the ANTLR is correct, it
only helps to increase the level of confidence, unless of course the
grammar is so simple that you can exhaustively test all of the cases. Also
remember that if the generator is smart enough it can focus on a particular
portion of the grammar and run many pivot examples off that portion which
just might be a complete set of test cases.

"Since your parser uses the same grammar as the test input stems from there
can only be test failures if your grammar uses actions to control what gets
parsed how. But for a pure grammar you can only generate test cases when
you take your language spec (not codified in a grammar) and create test
cases out of it."

When I created my proof of concept tool I did give it the ability to
generate both positive and negative results. I was also using C++ and from
the C++ reference grammar  I created one grammar for input to ANTLR and one
grammar for input into my phrase generator. I then used the phrases from
the generator as input into the lexer/parser generated by ANTLR and then
looked at the results.

There is a lot more to this than I explain here but I personally found the
proof of concept tool to be very educational. Many results that came out
for valid were unlike any C++ code I have ever seen from a human but they
did compile. The reason is the generator does not think like a human, it
just does a tree walk based on the rules and generates phrases. Where I
left off was creating another layer to take common human type test
conditions and turn them into the rules to be used by the generator.

After the proof of concept tool worked I moved onto another project because
what I really wanted out of the tool was what was learned in doing it more
than the tool itself. The next steps of converting human conditions into
rules and creating a GUI front end would have required more work than I was
interested in doing.

Eric











On Thu, Sep 20, 2012 at 11:53 AM, Mike Lischke <mike at lischke-online.de>wrote:

>
> What I wonder is if this way test is really meaningful. I mean, when you
> create test sentences from the grammar they will always work, no? Since
> your parser uses the same grammar as the test input stems from there can
> only be test failures if your grammar uses actions to control what gets
> parsed how. But for a pure grammar you can only generate test cases when
> you take your language spec (not codified in a grammar) and create test
> cases out of it.
>
> > I did some work on my own on this a year ago and the problem you get into
> > is a huge explosion in output. Just to manage the problem of the
> explosion
> > I had to create methods just to count the possibilities given a grammar
> and
> > the easiest way for me to relate to the size was as a power. So for one
> > grammar the set could have 10**15 results and others could have 10**30
> > results. This is not even something that can be reasonably tested.
> >
> >>
> >> Is anyone aware of any projects out there for doing syntax-based
> >> testing using ANTLR grammars?  The simplest form would be a tool for
> >> generating valid language productions from an ANTLR grammar, but more
> >> complex might introduce mutations.
> >>
> >>
> >> Thanks
> >> Mike Barry
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> Mike
> --
> www.soft-gems.net
>
>
>

From parrt at cs.usfca.edu  Thu Sep 20 10:35:53 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Sep 2012 10:35:53 -0700
Subject: [antlr-interest] Discount code for book refreshed
Message-ID: <16BEACE4-F8D3-4CD2-9A09-FCF713C29F35@cs.usfca.edu>

Hi, Apparently we blew past the number of discounts on the book they had originally plans to offer but they have increased the number so you should be able to get the discount again now.

Ter

From parrt at cs.usfca.edu  Thu Sep 20 10:37:55 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Sep 2012 10:37:55 -0700
Subject: [antlr-interest] ANTLR 4.0b1 now available
In-Reply-To: <505B0C58.3050707@gmail.com>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>
	<505B0C58.3050707@gmail.com>
Message-ID: <39BB00A7-7482-4EDA-A9D8-DD7984C266B3@cs.usfca.edu>

Thanks guys!  
T
On Sep 20, 2012, at 5:30 AM, Kieran Simpson wrote:

> I too would like to add my congratulations to Terence and Sam.
> 
> Like others, I'm interested in a C/C++ target, so look forwards to that 
> arriving.
> 
> Cheers,
> 
> On 19/09/12 6:01 PM, Ranco Marcus wrote:
>> Congratulations Terence and Sam!
>> 
>> Although I will definitely give this 'bad ass' release a test drive, I am eagerly waiting to test honey badger on our CSharp3 grammars. When do you expect this target to be available? Please let me know if I can assist in testing the CSharp3 target.
>> 
>> Best regards,
>> 
>> Ranco Marcus
>> Epirion Knowledge Solutions B.V.
>> 
>> ________________________________________
>> From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] on behalf of Terence Parr [parrt at cs.usfca.edu]
>> Sent: Wednesday, September 19, 2012 2:54 AM
>> To: antlr ANTLR
>> Subject: [antlr-interest] ANTLR 4.0b1 now available
>> 
>> Sam Harwell and I have given birth to the honey badger. It has emergeth!  Please try out 4.0b1:
>> 
>>         http://www.antlr.org/download/antlr-4.0b1-complete.jar
>> 
>> Source:
>> 
>>         https://github.com/antlr/antlr4/zipball/antlr-4.0b1
>> 
>> Upcoming-book-examples source code
>> 
>>         http://pragprog.com/titles/tpantlr2/source_code
>> 
>> Readme:
>> 
>>         https://github.com/antlr/antlr4/blob/master/README.txt
>> 
>> Enjoy.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From forumer at smartmobili.com  Thu Sep 20 10:44:33 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Thu, 20 Sep 2012 19:44:33 +0200
Subject: [antlr-interest] ANTLR 4.0b1 now available
In-Reply-To: <39BB00A7-7482-4EDA-A9D8-DD7984C266B3@cs.usfca.edu>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>
	<505B0C58.3050707@gmail.com>
	<39BB00A7-7482-4EDA-A9D8-DD7984C266B3@cs.usfca.edu>
Message-ID: <792f4c1a46666b95320e6d87f2609de3@smartmobili.com>

What about ANTLWorks ?

Le 20.09.2012 19:37, Terence Parr a ?crit?:
> Thanks guys!
> T
> On Sep 20, 2012, at 5:30 AM, Kieran Simpson wrote:
>
>> I too would like to add my congratulations to Terence and Sam.
>>
>> Like others, I'm interested in a C/C++ target, so look forwards to 
>> that
>> arriving.
>>
>> Cheers,
>>
>> On 19/09/12 6:01 PM, Ranco Marcus wrote:
>>> Congratulations Terence and Sam!
>>>
>>> Although I will definitely give this 'bad ass' release a test 
>>> drive, I am eagerly waiting to test honey badger on our CSharp3 
>>> grammars. When do you expect this target to be available? Please let 
>>> me know if I can assist in testing the CSharp3 target.
>>>
>>> Best regards,
>>>
>>> Ranco Marcus
>>> Epirion Knowledge Solutions B.V.
>>>
>>> ________________________________________
>>> From: antlr-interest-bounces at antlr.org 
>>> [antlr-interest-bounces at antlr.org] on behalf of Terence Parr 
>>> [parrt at cs.usfca.edu]
>>> Sent: Wednesday, September 19, 2012 2:54 AM
>>> To: antlr ANTLR
>>> Subject: [antlr-interest] ANTLR 4.0b1 now available
>>>
>>> Sam Harwell and I have given birth to the honey badger. It has 
>>> emergeth!  Please try out 4.0b1:
>>>
>>>         http://www.antlr.org/download/antlr-4.0b1-complete.jar
>>>
>>> Source:
>>>
>>>         https://github.com/antlr/antlr4/zipball/antlr-4.0b1
>>>
>>> Upcoming-book-examples source code
>>>
>>>         http://pragprog.com/titles/tpantlr2/source_code
>>>
>>> Readme:
>>>
>>>         https://github.com/antlr/antlr4/blob/master/README.txt
>>>
>>> Enjoy.
>>>
>>> Ter
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Sep 20 10:46:08 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Sep 2012 10:46:08 -0700
Subject: [antlr-interest] ANTLRWorks2
In-Reply-To: <792f4c1a46666b95320e6d87f2609de3@smartmobili.com>
References: <ECB23E6A-505C-402E-B780-653FA4591E4F@cs.usfca.edu>
	<2B65C901391C804DBB9CF9E6FE30C6F96D936A36@sun.epirion.local>
	<505B0C58.3050707@gmail.com>
	<39BB00A7-7482-4EDA-A9D8-DD7984C266B3@cs.usfca.edu>
	<792f4c1a46666b95320e6d87f2609de3@smartmobili.com>
Message-ID: <7D47E9D4-C084-4501-95A5-DF2C486EE997@cs.usfca.edu>

Hi, Forgot to mention Sam Harwell's ANTLRWorks2,

http://www.antlr.org/wiki/display/ANTLR4/1.+Overview

Terence


From researcher0x00 at gmail.com  Thu Sep 20 11:50:25 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 20 Sep 2012 14:50:25 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
Message-ID: <CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>

Ter,

I know you are more than busy, but I didn't see an answer to this. As much
as I know most of the answer I can't remember all of the details at this
point to give a correct answer.

Thanks, Eric

On Wed, Sep 19, 2012 at 2:33 AM, Martin Van Aken <
martin.vanaken at 8thcolor.com> wrote:

> Hello Terence,
> Thanks for the info, this is far better than nothing, and I like the
> incremental process outlined there. There is still something I'm not sure
> to understand : the String Template .stg file is used to generate the
> parser/lexer code for the grammar. But those classes inherit from more
> general classes in Antlr (in the java version, at least). Are those also
> generated by the .stg ?
>
> In other word, what about the runtime of Antlr, is it an output of the
> .stg, or is it another part to implement to be able to have a parser
> running under a given language (let say Ruby).
>
> Thanks !
>
> Martin
>
> On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> > Unfortunately, no one has stepped up to bring the Ruby target up to date.
> > The other bit of bad news is that we really don't have much in the way of
> > how to create a target. just this page:
> >
> >
> >
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
> >
> > Ter
> > On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
> >
> > Terrence/list,
> > I've the same question about the Ruby target. For what I can see from
> > github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
> > not move since two years so it is probably lagging behind. Do anyone is
> > still maintaining it ?
> >
> > If not, I may be interested in trying to update it myself. Any resource
> for
> > (would be) goal maintener that I could start with ? Anyone that would be
> > interested to contribute (time, advice, test, anything). I may take a
> look
> > at the python target (that seems to be keeping up well) as a reference
> > (closer to Ruby than Java).
> >
> > Thanks a lot.
> >
> > Martin
> >
> > On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
> >
> > Ter/list,
> >
> >   Thanks again for all your efforts.  In terms of other language
> >
> > targets is there an idea/outline of when they'll be available.  I'm
> >
> > specifically thinking of the C target.  In a list thread from January
> >
> > there was the indication that a C++ target was still a while away so any
> >
> > progress updates?
> >
> >
> > Cheers,
> >
> >
> >
> > On 16/09/12 4:36 AM, Terence Parr wrote:
> >
> > Howdy folks,
> >
> >
> > ANTLR v4 release is rapidly approaching. The beta of the reference book
> >
> > will be out next week and the remaining two or three chapters should
> appear
> >
> > within a month or so afterwards. Sam Harwell and I have been working very
> >
> > hard on the tool itself and we should have 4.0 ready by the time the book
> >
> > goes final. In the meantime, 4.0b1 will be available for use with the
> beta
> >
> > book. Oh, and we need to release 3.4.1 before 4.0.
> >
> >
> > I have paid for a new website design for both ANTLR and StringTemplate,
> >
> > which looks great. We will continue to use the same wiki software for
> >
> > documentation. The current website is generated by a Java server I built
> >
> > whereas the new one is going to be static so I have less software to
> >
> > maintain. In other words,  rather than using some kind of include
> mechanism
> >
> > to get the general look and feel on each page, the new websites will be
> >
> > simply static files on the disk.  The current antlr.org content will
> >
> > become antlr3.org, leaving the current domain pointing at v4 content.
> >
> >
> > We currently have functionality on the websites to accept new grammars
> >
> > and filesharing and articles and so on. Because this is so infrequent, I
> >
> > think it's reasonable to simply have an HTML form that has an email
> action
> >
> > instead of an HTTP POST. When I get those requests, I can simply add them
> >
> > to the file on the server. (will that use the user's local mail client or
> >
> > will it force people to set up mail in their actual browsers before it
> will
> >
> > email me? does anybody know?)
> >
> >
> > On to the grammar repository. Because it's likely we'll want to make
> >
> > fixes / updates to existing grammars, I don't think a simple form / email
> >
> > mechanism is the best solution. Right now, I have to go in and overwrite
> /
> >
> > update a number of files for a grammar update. Naturally, this screams
> for
> >
> > a revision control solution. I was thinking that we might as well just
> use
> >
> > github for this so that anybody can add or modify the publicly available
> >
> > grammars.
> >
> >
> > There are a number of issues with using github for this. First, I would
> >
> > not want to create a new repository for each grammar so we would have one
> >
> > repository holding all grammars. This is pretty coarse granularity.  On
> the
> >
> > other hand, if you just want one grammar, you can download individually
> >
> > from github. The second issue is that we would really have to have a
> single
> >
> > license for all grammars in the repository. I would hate for a GPL
> grammar
> >
> > to get its stank on the other grammars. It would confuse people to have
> >
> > multiple licenses within a single repository. Thirdly, not everyone is
> >
> > comfortable with assembly language?er?I mean git. In that case, people
> >
> > could simply mail me a grammar for inclusion. It would only take me a
> >
> > second to add it. The fourth problem. We need a clean URI for grammars
> and
> >
> > I propose:
> >
> >
> > http://www.antlr.org/grammars/<name>
> >
> >
> > for the root directory of that project. For example,
> >
> >
> > http://www.antlr.org/grammars/java
> >
> >
> > would point out a directory that contains Java.g4 and may be a test
> >
> > program or something.
> >
> >
> > I could easily add a redirect in the tomcat configuration files,
> >
> > assuming I can stomach all of that filthy XML, but that does not scale
> very
> >
> > well when people add grammars. Instead, perhaps the best solution is to
> set
> >
> > up a cronjob that pulls from the grammar repository and leaves the
> grammars
> >
> > on antlr.org's disk so that /grammars URI points at that directory. That
> >
> > way, the URIs would always be up-to-date with the repository and without
> me
> >
> > having to do any work. Heh, that just might work.
> >
> > http://www.antlr.org/grammars by itself could redirect to the github
> >
> > project.
> >
> >
> > Anyway, If you have any thoughts on this stuff, please reply.
> >
> >
> > Terence
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >
> > Unsubscribe:
> >
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> >
> >
> > --
> > Mobile : +32 486 899 652
> > Company website : www.8thcolor.com
> > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
>
>
> --
> Mobile : +32 486 899 652
> Company website : www.8thcolor.com
> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From nilopaim at gmail.com  Thu Sep 20 12:20:16 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 20 Sep 2012 16:20:16 -0300
Subject: [antlr-interest] Dangling ELSE on Cobol
In-Reply-To: <CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
Message-ID: <003901cd9764$f9c232f0$ed4698d0$@com>

Hi, folks.

I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser Generator
3.4 Jul 19, 2011 11:35:12. actually).

I'm stuck with the old dangling ELSE problem. Here the relevant piece of
code of my grammar that shows me the problem:


	command :
      		ifCmd
    		| 	initializeCmd
    		| 	moveCmd
    		| 	openCmd
    		;

	ifCmd:
    			IF expr command+ ( (ELSE)=> ELSE command+)?
    		;


I cannot put a terminator on the commands 'cause commands in Cobol may end
or with a '.' or with the following command. This is true including the
ifCmd itself.

The code above shows me the following messages:

warning(200): /SuperCobol/src/SC.g:229:13: 
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13: 
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13: 
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13: 
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38: 
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38: 
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38: 
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38: 
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?


8 warnings

Please, any hints?

Thanks in advance,
Nilo
Brazil


From douglasgodfrey at gmail.com  Thu Sep 20 13:37:53 2012
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 20 Sep 2012 16:37:53 -0400
Subject: [antlr-interest] ANTLRWorks2
In-Reply-To: <7D47E9D4-C084-4501-95A5-DF2C486EE997@cs.usfca.edu>
Message-ID: <CC80ED17.1D9A8%douglasgodfrey@gmail.com>

I have a few questions about how ANLTRWorks2 projects will work.

1) The Open Project and New Project functionality is currently
unimplemented. 
   Will there be an ANLTRWorks2 project folder similar to a Netbeans
Project folder?

2) Will ANTLRWorks2 be able to install Netbeans Plugins
   I.e. Java, JavaScript, C/C++, PHP, Ruby, etc. compilers;
        CVS, SVN, Clearcase, etc. source management.

3) After successfully building a grammar, will ANTLRWorks2 be able to open
a Netbeans project for the generated code?
   Or alternatively will ANTLRWorks2 be able to launch Netbeans with a
project for the generated code?






On 9/20/12 1:46 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>Hi, Forgot to mention Sam Harwell's ANTLRWorks2,
>
>http://www.antlr.org/wiki/display/ANTLR4/1.+Overview
>
>Terence
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From sam at tunnelvisionlabs.com  Thu Sep 20 20:06:41 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Fri, 21 Sep 2012 03:06:41 +0000
Subject: [antlr-interest] ANTLRWorks2
In-Reply-To: <CC80ED17.1D9A8%douglasgodfrey@gmail.com>
References: <7D47E9D4-C084-4501-95A5-DF2C486EE997@cs.usfca.edu>
	<CC80ED17.1D9A8%douglasgodfrey@gmail.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377BF8686F@CH1PRD0811MB430.namprd08.prod.outlook.com>

Hi Douglas,

I don't have a final answer regarding #1 and #3 for you at this time.

I would love for #2 to happen (or to make ANTLRWorks an extension to the standard NetBeans environment), but NetBeans itself doesn't support a number of ANTLRWorks' features. ANTLRWorks 2 currently has 14 patches against the NetBeans 7.2 development source to address a number of issues and implement the necessary supporting features, and unfortunately these patches won't work as plugins.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Douglas Godfrey
Sent: Thursday, September 20, 2012 3:38 PM
To: Antlr-Interest Antlr.Org
Subject: Re: [antlr-interest] ANTLRWorks2

I have a few questions about how ANLTRWorks2 projects will work.

1) The Open Project and New Project functionality is currently unimplemented. 
   Will there be an ANLTRWorks2 project folder similar to a Netbeans Project folder?

2) Will ANTLRWorks2 be able to install Netbeans Plugins
   I.e. Java, JavaScript, C/C++, PHP, Ruby, etc. compilers;
        CVS, SVN, Clearcase, etc. source management.

3) After successfully building a grammar, will ANTLRWorks2 be able to open a Netbeans project for the generated code?
   Or alternatively will ANTLRWorks2 be able to launch Netbeans with a project for the generated code?






On 9/20/12 1:46 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>Hi, Forgot to mention Sam Harwell's ANTLRWorks2,
>
>http://www.antlr.org/wiki/display/ANTLR4/1.+Overview
>
>Terence
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From jimi at temporal-wave.com  Thu Sep 20 20:09:45 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 21 Sep 2012 11:09:45 +0800
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
Message-ID: <72a0590c9bd8a88c240e018061fef337@mail.gmail.com>

Sigh.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mike Lischke
Sent: Thursday, September 20, 2012 11:46 PM
To: Stephen Gaito
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 3.5 (was 3.4.1)


Hey Stephen,

> Which issues are these?

You fixed the parent return problem in the common tree already, but
there's still the issue with not-set parents when moving nodes between
trees (antlr3basetree.c) and then I also removed the declaration of "true"
and "false" from antlr3convertutf.h and replaced their occurrences in
antlr3convertutf.c (as they caused warnings about duplicate declarations).
Additionally, I renamed the member PROTOCOL_VERSION in
antlr3debugeventlistener.h to lower case, as it conflicted with a macro of
the same name (member names should never be written all upper case
anyway). Finally I added a number of casts to get rid of compiler
warnings.

> I have "fixed" the couple of (release-phase) issues that have been
> affecting my usage of the C target.

So what is now the most up to date C runtime? The one from you on Github?
I can make a diff and send it to you if you want.

Btw: the runtime on antlr.org still has 3.0.1 as version number in the
README, even for the 3.4 download. The same holds true for your Git repo.

Mike
--
www.soft-gems.net



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sam at tunnelvisionlabs.com  Thu Sep 20 20:12:55 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Fri, 21 Sep 2012 03:12:55 +0000
Subject: [antlr-interest] C in Honey Badger?
In-Reply-To: <505B0DF2.90908@perceptisys.co.uk>
References: <505A74CB.5070300@mollerware.com>
	<505B0DF2.90908@perceptisys.co.uk>
Message-ID: <8802E2F086DC9648BD0585D82AC6377BF86896@CH1PRD0811MB430.namprd08.prod.outlook.com>

Hi Stephen, 

I briefly mentioned this in another email. I'm planning to do a C++ port, but I'm implementing it more for the exercise in expressive C++ than anything else. There will almost certainly be a dependency on boost's Thread library, pervasive use of STL, and the initial release will probably use a handful of C++11 features.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stephen Gaito
Sent: Thursday, September 20, 2012 7:37 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C in Honey Badger?

Chris, Terence and Sam,

I would also be interested in what sort of time line there will be for a C/C++ target.

Given that C++ can be called from C, the real question I have is not will there be a C (only) target...

... but, rather, how many and how well controlled will the C++ target's dependencies be?

That is, will any "external" dependencies be cleanly re-implementable for, for example, running inside the PHP engine?

Regards,

Stephen Gaito

On 20/09/12 02:43, Chris Moller wrote:
> In the category of
> giving-away-cool-free-stuff-just-gets-you-nagged-for-more-cool-free-st
> uff, is support for C coming any time soon?
>
> Chris Moller
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From jimi at temporal-wave.com  Thu Sep 20 20:33:49 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 21 Sep 2012 11:33:49 +0800
Subject: [antlr-interest] C in Honey Badger?
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377BF86896@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <505A74CB.5070300@mollerware.com>	<505B0DF2.90908@perceptisys.co.uk>
	<8802E2F086DC9648BD0585D82AC6377BF86896@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <a5ae36f8a8bccea6cd3dc9413c8fbe5f@mail.gmail.com>

That will be fine for those that can deal with all those dependencies, but
doesn't that rather limit the implementation platforms? I was thinking for
a while that I should have done an absolute minimalist C implementation
for v3 - perhaps there is room for this in v4 - don't implement things
that depend too much on target language stuff, just generate the raw
recognizer sort of thing.

I guess I can take a look at a C runtime, but this time, instead of
copying all the features of the Java version, so that people can moan at
me, just make it raw and down to the wire. The C++ implementation can then
supply all the features that 100MB of library dependencies can provide and
all the C++ programmers will be happy ;)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Friday, September 21, 2012 11:13 AM
To: Stephen Gaito; antlr-interest at antlr.org
Subject: Re: [antlr-interest] C in Honey Badger?

Hi Stephen,

I briefly mentioned this in another email. I'm planning to do a C++ port,
but I'm implementing it more for the exercise in expressive C++ than
anything else. There will almost certainly be a dependency on boost's
Thread library, pervasive use of STL, and the initial release will
probably use a handful of C++11 features.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stephen Gaito
Sent: Thursday, September 20, 2012 7:37 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C in Honey Badger?

Chris, Terence and Sam,

I would also be interested in what sort of time line there will be for a
C/C++ target.

Given that C++ can be called from C, the real question I have is not will
there be a C (only) target...

... but, rather, how many and how well controlled will the C++ target's
dependencies be?

That is, will any "external" dependencies be cleanly re-implementable for,
for example, running inside the PHP engine?

Regards,

Stephen Gaito

On 20/09/12 02:43, Chris Moller wrote:
> In the category of
> giving-away-cool-free-stuff-just-gets-you-nagged-for-more-cool-free-st
> uff, is support for C coming any time soon?
>
> Chris Moller
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mike at lischke-online.de  Thu Sep 20 23:49:05 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Fri, 21 Sep 2012 08:49:05 +0200
Subject: [antlr-interest] ANTLRWorks2
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377BF8686F@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <7D47E9D4-C084-4501-95A5-DF2C486EE997@cs.usfca.edu>
	<CC80ED17.1D9A8%douglasgodfrey@gmail.com>
	<8802E2F086DC9648BD0585D82AC6377BF8686F@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <244A56DF-76FF-40FB-B4BE-5E66AEA60CB3@lischke-online.de>

Hey Sam,

> I don't have a final answer regarding #1 and #3 for you at this time.
> 
> I would love for #2 to happen (or to make ANTLRWorks an extension to the standard NetBeans environment), but NetBeans itself doesn't support a number of ANTLRWorks' features. ANTLRWorks 2 currently has 14 patches against the NetBeans 7.2 development source to address a number of issues and implement the necessary supporting features, and unfortunately these patches won't work as plugins.

is ANTLRWorks2 ready for use already? There are a number of odd things with version 1 (it freezes often etc), which I hope are gone with v2.

Mike
-- 
www.soft-gems.net



From moller at mollerware.com  Fri Sep 21 06:16:40 2012
From: moller at mollerware.com (Chris Moller)
Date: Fri, 21 Sep 2012 09:16:40 -0400
Subject: [antlr-interest] Bug in antlr4
Message-ID: <505C68B8.3030602@mollerware.com>

I just found what I'm fairly sure is a previously unfound bug in v4. Is 
there a list for that?  Or just go straight to github bugs?

FWIW, the bug is from the ExtractInterfaceTool example in the pragprog 
manual.  Per the manual, the result is supposed to be:

    interface IDemo {
    void f(int x, String y);
    int[ ] g(/*no args*/);
    List<Map<String, Integer>>[] h();
    }


and the actual is:

    interface IDemo {
    void f(intx,Stringy);
    int[] g();
    List<Map<String,Integer>>[] h();
    }


The spaces are missing between the types and the parms of method f().  
Also, more trivially, the comment from the arg list of g() is missing.

From stephen at perceptisys.co.uk  Fri Sep 21 07:34:59 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Fri, 21 Sep 2012 15:34:59 +0100
Subject: [antlr-interest] Most up-to-date C runtime WAS: Re: ANTLR 3.5 (was
 3.4.1)
In-Reply-To: <ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
Message-ID: <505C7B13.2070301@perceptisys.co.uk>

Mike,

Let me deal with the issue of" most up to date C runtime" first (and 
then after some more thought, your additional problems)...

SO:
> So what is now the most up to date C runtime? The one from you on Github? I can make a diff and send it to you if you want.
>
> Btw: the runtime on antlr.org still has 3.0.1 as version number in the README, even for the 3.4 download. The same holds true for your Git repo.

/The official C runtime will remain the one in the official ANTLR3 GitHub./

My changes have been /as conservative as possible/ (hence I have /not/// 
changed the version numbers -- as I do not regard my GitHub changes as 
in anyway official or blessed by the ANTLR team).

The changes you see in my GitHub fork of ANTLR3 are the minimal changes 
I needed to get my job done, but done in a public place so that anyone 
who might find them useful could also use them.

For the near future, if you want to make use of my changes, I would 
advise taking the patch files from my repository, which you can obtain 
using GitHub tools, and applying them to the official download.

My understanding is that Jim Idle does not have access, for various 
reasons, to git and GitHub... so the "official" C runtime accidentally 
had some incorrect files uploaded (since I do not believe Terence, who I 
think did the upload to GitHub, makes much or any use of the C runtime 
-- but I could be wrong on this).

As to the most up-to-date C runtime... a quick (but not definitive) look 
at the most recent changes on the various ANTLR3 forks suggests all of 
the activity (which is not on my fork) is directed at the other targets, 
so I suspect my fork includes the most complete set of changes.

At the time I made these changes Terence was busy re-structuring the 
overall process of accepting new contributions.  As this process has 
recently been made substantially easier, I will look into getting my 
changes "pulled" into the main project.  (Though this might take a week 
or two for me to get around to it).

Finally, I need to say, while any open-source software project has its 
glitches, /the ANTLR3 project and the C runtime//, developed largely by 
Terence Parr and Jim Idle (respectively), //are excellent tools./  I 
have repeatedly tried to find better.... and I can not.

I hope this explanation helps,

Regards,

Stephen Gaito


On 20/09/12 16:46, Mike Lischke wrote:
> Hey Stephen,
>
>> Which issues are these?
> You fixed the parent return problem in the common tree already, but there's still the issue with not-set parents when moving nodes between trees (antlr3basetree.c) and then I also removed the declaration of "true" and "false" from antlr3convertutf.h and replaced their occurrences in antlr3convertutf.c (as they caused warnings about duplicate declarations). Additionally, I renamed the member PROTOCOL_VERSION in antlr3debugeventlistener.h to lower case, as it conflicted with a macro of the same name (member names should never be written all upper case anyway). Finally I added a number of casts to get rid of compiler warnings.
>
>> I have "fixed" the couple of (release-phase) issues that have been
>> affecting my usage of the C target.
> So what is now the most up to date C runtime? The one from you on Github? I can make a diff and send it to you if you want.
>
> Btw: the runtime on antlr.org still has 3.0.1 as version number in the README, even for the 3.4 download. The same holds true for your Git repo.
>
> Mike


From apalala at gmail.com  Fri Sep 21 10:11:26 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 21 Sep 2012 12:41:26 -0430
Subject: [antlr-interest] Dangling ELSE on Cobol
In-Reply-To: <003901cd9764$f9c232f0$ed4698d0$@com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
Message-ID: <CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>

Nilo,

It's a lot of lookahead, but it solves your problem:

command :
    ifCmd
    | 'INIT'
    | 'MOVE'
    ;

ifCmd:
    'IF' 'EXPRE' ((command)=>command)+
    (
        ('ELSE')=> 'ELSE' ((command)=>command)+
    |
        ()
    )
    ;

The ambiguity warning were saying that ANTLR didn't know to which nesting
level to add the next "command". The lookaheads tell it to be greedy and
match them against the closest IF or ELSE.

Cheers,

-- Juanca

On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Hi, folks.
>
> I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser Generator
> 3.4 Jul 19, 2011 11:35:12. actually).
>
> I'm stuck with the old dangling ELSE problem. Here the relevant piece of
> code of my grammar that shows me the problem:
>
>
>         command :
>                 ifCmd
>                 |       initializeCmd
>                 |       moveCmd
>                 |       openCmd
>                 ;
>
>         ifCmd:
>                         IF expr command+ ( (ELSE)=> ELSE command+)?
>                 ;
>
>
> I cannot put a terminator on the commands 'cause commands in Cobol may end
> or with a '.' or with the following command. This is true including the
> ifCmd itself.
>
> The code above shows me the following messages:
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "IF" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "MOVE" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "OPEN" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "IF" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "MOVE" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "OPEN" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
>
> 8 warnings
>
> Please, any hints?
>
> Thanks in advance,
> Nilo
> Brazil
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From nilopaim at gmail.com  Fri Sep 21 11:37:05 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Fri, 21 Sep 2012 15:37:05 -0300
Subject: [antlr-interest] RES:  Dangling ELSE on Cobol
In-Reply-To: <CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
Message-ID: <002401cd9828$1c56b250$550416f0$@com>

Juanca,

 

Thanks a lot! Works like a charm!

 

Gracias por su inter?s. 

Saludos from Brazil,

 

Nilo

 

 

De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
Enviada em: sexta-feira, 21 de setembro de 2012 14:11
Para: Nilo Roberto C Paim
Cc: antlr ANTLR
Assunto: Re: [antlr-interest] Dangling ELSE on Cobol

 

Nilo,

 

It's a lot of lookahead, but it solves your problem:

 

command :

    ifCmd

    | 'INIT'

    | 'MOVE'

    ;

 

ifCmd:

    'IF' 'EXPRE' ((command)=>command)+ 

    (

        ('ELSE')=> 'ELSE' ((command)=>command)+ 

    |

        ()

    )

    ;

 

The ambiguity warning were saying that ANTLR didn't know to which nesting level to add the next "command". The lookaheads tell it to be greedy and match them against the closest IF or ELSE.

 

Cheers,

 

-- Juanca

 

On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:

Hi, folks.

I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser Generator
3.4 Jul 19, 2011 11:35:12. actually).

I'm stuck with the old dangling ELSE problem. Here the relevant piece of
code of my grammar that shows me the problem:


        command :
                ifCmd
                |       initializeCmd
                |       moveCmd
                |       openCmd
                ;

        ifCmd:
                        IF expr command+ ( (ELSE)=> ELSE command+)?
                ;


I cannot put a terminator on the commands 'cause commands in Cobol may end
or with a '.' or with the following command. This is true including the
ifCmd itself.

The code above shows me the following messages:

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?


8 warnings

Please, any hints?

Thanks in advance,
Nilo
Brazil


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address





 

-- 
Juancarlo A?ez


From stephen at perceptisys.co.uk  Fri Sep 21 11:49:58 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Fri, 21 Sep 2012 19:49:58 +0100
Subject: [antlr-interest] pull requests at github
In-Reply-To: <466ECCF9-79A2-485C-B5A6-9FE1D72F1E54@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
	<466ECCF9-79A2-485C-B5A6-9FE1D72F1E54@cs.usfca.edu>
Message-ID: <505CB6D6.4080605@perceptisys.co.uk>

Ter,

It has been a couple of months since you wrote this.

Is this an accurate description of your "GitHub pull accepting process"?

If so, could you add it into a "Developer's" section of the ANTLR V3 
(and V4) FAQ, or, alternatively, as an explicit statement in the V3/V4 
READMEs (or both)?

I would like to be able to refer to your process in my reply to Mike 
Lischke on the subject of patches to the C runtime.  It seems we both 
have some patches which really should be incorporated into the official 
ANTLR v3 project.

Regards,

Stephen Gaito


On 14/07/12 01:03, Terence Parr wrote:
> Hi Gang, thanks very much for all the helpful and insightful suggestions. I also talked it over in person with a few people yesterday. Sounds like the simplest thing to do is to create a single contributors file in the repository that contains the contributors license. Anyone that wants to be a contributor, can simply fork, add their name, commit, send a pull request and then they are in the system. Any future pull requests can be merged with a quick check on their name. The contributors file can also be augmented with their signoff him during the first pull request.
>
> This would be on a per project basis.
>
> On a related problem with pull requests. As Sam Harwell pointed out to me, github has a pretty serious problem when it comes to forked repositories.
>
>> We've started fully qualifying everything in our normal commits, but the pull requests are still being merged with the syntax "Merge pull request #23 from parrt/master", which will then propagate to and mess up the issues of everyone who merges antlr/antlr4 into their forks.
> This I guess is only a problem if you are creating your own issues in your own fork of antlr, right? Can anyone comment on this problem?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From df at release14.org  Fri Sep 21 12:10:13 2012
From: df at release14.org (Damir Franusic)
Date: Fri, 21 Sep 2012 21:10:13 +0200
Subject: [antlr-interest] reusing memory in c/c++
In-Reply-To: <505C2D02.5030900@release14.org>
References: <505C2D02.5030900@release14.org>
Message-ID: <505CBB95.7040902@release14.org>

I would like to know if it's possible to reuse streams, parsers, lexers, 
etc. so I don't have to recreate them in every iteration.

*    // input stream
     pANTLR3_INPUT_STREAM input  = antlr3StringStreamNew(...);
     // lexer
     ppminkLexer lexer = pminkLexerNew(input);
     // token stream
     pANTLR3_COMMON_TOKEN_STREAM tstream = 
antlr3CommonTokenStreamSourceNew(...);
     // create parser
     ppminkParser parser = pminkParserNew(tstream);
     // parse and build ast
     pminkParser_lineParser_return ast = parser->lineParser(parser);

     /* do some stuff here */


     // free input stream
     tstream->free(tstream);
     tstream = NULL;

     input->close(input);
     input = NULL;

     lexer->free(lexer);
     lexer = NULL;

     parser->free(parser);
     parser = NULL;*


So I would like to know how to reuse tstream, input, lexer and parser....


Thnx,

*Damir Franusic*
Founder / Lead developer

r14 logo
*Release 14*
e: df at release14.org
p: +385-91-209-1311
w: http://www.release14.org/




From parrt at cs.usfca.edu  Fri Sep 21 12:14:28 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 21 Sep 2012 12:14:28 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <505CB6D6.4080605@perceptisys.co.uk>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
	<466ECCF9-79A2-485C-B5A6-9FE1D72F1E54@cs.usfca.edu>
	<505CB6D6.4080605@perceptisys.co.uk>
Message-ID: <AB284198-8F81-49E8-BAD6-A818135EEFB1@cs.usfca.edu>

Hi.  I just added it to the FAQ

http://www.antlr.org/wiki/pages/viewpage.action?pageId=33947666

and to the 3.5 readme.

Ter
On Sep 21, 2012, at 11:49 AM, Stephen Gaito wrote:

> Ter,
> 
> It has been a couple of months since you wrote this.
> 
> Is this an accurate description of your "GitHub pull accepting process"?
> 
> If so, could you add it into a "Developer's" section of the ANTLR V3 
> (and V4) FAQ, or, alternatively, as an explicit statement in the V3/V4 
> READMEs (or both)?
> 
> I would like to be able to refer to your process in my reply to Mike 
> Lischke on the subject of patches to the C runtime.  It seems we both 
> have some patches which really should be incorporated into the official 
> ANTLR v3 project.
> 
> Regards,
> 
> Stephen Gaito
> 
> 
> On 14/07/12 01:03, Terence Parr wrote:
>> Hi Gang, thanks very much for all the helpful and insightful suggestions. I also talked it over in person with a few people yesterday. Sounds like the simplest thing to do is to create a single contributors file in the repository that contains the contributors license. Anyone that wants to be a contributor, can simply fork, add their name, commit, send a pull request and then they are in the system. Any future pull requests can be merged with a quick check on their name. The contributors file can also be augmented with their signoff him during the first pull request.
>> 
>> This would be on a per project basis.
>> 
>> On a related problem with pull requests. As Sam Harwell pointed out to me, github has a pretty serious problem when it comes to forked repositories.
>> 
>>> We've started fully qualifying everything in our normal commits, but the pull requests are still being merged with the syntax "Merge pull request #23 from parrt/master", which will then propagate to and mess up the issues of everyone who merges antlr/antlr4 into their forks.
>> This I guess is only a problem if you are creating your own issues in your own fork of antlr, right? Can anyone comment on this problem?
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stephen at perceptisys.co.uk  Fri Sep 21 12:29:13 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Fri, 21 Sep 2012 20:29:13 +0100
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
	generators
Message-ID: <505CC009.9050300@perceptisys.co.uk>

Ter,

*Problem:*

Maybe I missed it, but one of the serious drawbacks I found in using 
your excellent ANTLR V3, was the inability of cleanly loading a new or 
slightly altered target (C/C++/Java/...) generator.

If I remember correctly in reading through the Java code for the Tool, 
the list of the various target generators were hard-coded into the Tool.

If my memory is correct, to load my own generator I would need to alter 
your code... which, if I were to open-source my own project, would get 
seriously messy... with a (potential) proliferation of different forks 
of ANTLR.  (Or alternatively with a very large number of "pull" requests 
back into the main project).

*Request:*

As the community begins to develop or port targets for the ANTLR v4, it 
would be nice to have a clean way of developing and deploying targets 
which exist /outside/ of the official ANTLR4 project.

*Benefits:*

This should make maintaining the core ANTLR4 project much easier, and it 
would allow users of ANTLR v4 more flexibility in their choice of targets.

For example, from Sam's comments on the "standard" C++ target, this C++ 
target /might/ make use of "external" dependencies which /might/ 
preclude the use of a generated grammar inside, for example, the PHP engine.

If ANTLR v4 allowed externally loadable target generators, then I (for 
example) might be able to make simple changes to the standard C++ target 
(or alternatively write my own) so that grammars generated using my 
generator would be embeddable inside, for example, the PHP engine.

Then in my (eventually) open-source project I could distribute an 
additional jar file to be loaded at runtime.  This additional jar file 
could, cleanly, contain "my" version of the C++ target generator as 
required by my project.  (Of course I would also provide my C++ target 
as an un-official but, hopefully,  useful GitHub project).

*Possible implementation?*

I know that ANTLR v4 now makes extensive use of Java's reflection 
mechanisms.  Could you use this reflection mechanism to find externally 
loadable target generator interfaces?

Alternatively, could you search for all instances of a suitably named 
file in the resources to load any external target generator?

Regards,

Stephen Gaito



From amal.khailtash at gmail.com  Fri Sep 21 12:51:03 2012
From: amal.khailtash at gmail.com (Amal Khailtash)
Date: Fri, 21 Sep 2012 15:51:03 -0400
Subject: [antlr-interest] antlrworks2.exe is not a valid Win32 application
Message-ID: <CAFh=k9GDh1Q=0n+AtOQjEHTYp+wO7b6PShfa=2XJ=4t2doMfjQ@mail.gmail.com>

Is ANTLRWorks2 supported under Windows XP?  I get the following when I try
to run it:

   2012-09-01-antlrworks2-ea13\bin\antlrworks2.exe is not a valid Win32
application.

*-- Amal*

From douglasgodfrey at gmail.com  Fri Sep 21 13:00:02 2012
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Fri, 21 Sep 2012 16:00:02 -0400
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
 generators
In-Reply-To: <505CC009.9050300@perceptisys.co.uk>
Message-ID: <CC823C3E.1DAB2%douglasgodfrey@gmail.com>

This should be implemented via the existing Netbeans Plugin mechanism.
One of the default Plugin Repositories should be downloads.antlr.org.

When you first launch ANTLRWorks4 you would use the Tools::Plugins menu
to install the AntlrV4 targets of your choice. ANTLRWorks4 already uses
the Netbeans Plugin mechanism [9 plugins] but it does not have any
plugin repository configured.

This would mean that each AntlrV4 Target would need to be packaged as a
library and wrapped in a Netbeans Plugin shell.



On 9/21/12 3:29 PM, "Stephen Gaito" <stephen at perceptisys.co.uk> wrote:

>Ter,
>
>*Problem:*
>
>Maybe I missed it, but one of the serious drawbacks I found in using
>your excellent ANTLR V3, was the inability of cleanly loading a new or
>slightly altered target (C/C++/Java/...) generator.
>
>If I remember correctly in reading through the Java code for the Tool,
>the list of the various target generators were hard-coded into the Tool.
>
>If my memory is correct, to load my own generator I would need to alter
>your code... which, if I were to open-source my own project, would get
>seriously messy... with a (potential) proliferation of different forks
>of ANTLR.  (Or alternatively with a very large number of "pull" requests
>back into the main project).
>
>*Request:*
>
>As the community begins to develop or port targets for the ANTLR v4, it
>would be nice to have a clean way of developing and deploying targets
>which exist /outside/ of the official ANTLR4 project.
>
>*Benefits:*
>
>This should make maintaining the core ANTLR4 project much easier, and it
>would allow users of ANTLR v4 more flexibility in their choice of targets.
>
>For example, from Sam's comments on the "standard" C++ target, this C++
>target /might/ make use of "external" dependencies which /might/
>preclude the use of a generated grammar inside, for example, the PHP
>engine.
>
>If ANTLR v4 allowed externally loadable target generators, then I (for
>example) might be able to make simple changes to the standard C++ target
>(or alternatively write my own) so that grammars generated using my
>generator would be embeddable inside, for example, the PHP engine.
>
>Then in my (eventually) open-source project I could distribute an
>additional jar file to be loaded at runtime.  This additional jar file
>could, cleanly, contain "my" version of the C++ target generator as
>required by my project.  (Of course I would also provide my C++ target
>as an un-official but, hopefully,  useful GitHub project).
>
>*Possible implementation?*
>
>I know that ANTLR v4 now makes extensive use of Java's reflection
>mechanisms.  Could you use this reflection mechanism to find externally
>loadable target generator interfaces?
>
>Alternatively, could you search for all instances of a suitably named
>file in the resources to load any external target generator?
>
>Regards,
>
>Stephen Gaito
>
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From stephen at perceptisys.co.uk  Fri Sep 21 13:10:02 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Fri, 21 Sep 2012 21:10:02 +0100
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
 generators
In-Reply-To: <CC823C3E.1DAB2%douglasgodfrey@gmail.com>
References: <CC823C3E.1DAB2%douglasgodfrey@gmail.com>
Message-ID: <505CC99A.3010706@perceptisys.co.uk>

Douglas,

Alas, sorry to be difficult, but I do not use Netbeans :$

I only use that stinking old command line (I /am/ an old unix hack).

However, adding a Netbeans requirement to an open-source project which 
is not Java based (such as I intend mine to be), would seriously impinge 
wider take-up... so is not really an option for my needs.

Regards,

Stephen Gaito

On 21/09/12 21:00, Douglas Godfrey wrote:
> This should be implemented via the existing Netbeans Plugin mechanism.
> One of the default Plugin Repositories should be downloads.antlr.org.
>
> When you first launch ANTLRWorks4 you would use the Tools::Plugins menu
> to install the AntlrV4 targets of your choice. ANTLRWorks4 already uses
> the Netbeans Plugin mechanism [9 plugins] but it does not have any
> plugin repository configured.
>
> This would mean that each AntlrV4 Target would need to be packaged as a
> library and wrapped in a Netbeans Plugin shell.
>
>
>
> On 9/21/12 3:29 PM, "Stephen Gaito" <stephen at perceptisys.co.uk> wrote:
>
>> Ter,
>>
>> *Problem:*
>>
>> Maybe I missed it, but one of the serious drawbacks I found in using
>> your excellent ANTLR V3, was the inability of cleanly loading a new or
>> slightly altered target (C/C++/Java/...) generator.
>>
>> If I remember correctly in reading through the Java code for the Tool,
>> the list of the various target generators were hard-coded into the Tool.
>>
>> If my memory is correct, to load my own generator I would need to alter
>> your code... which, if I were to open-source my own project, would get
>> seriously messy... with a (potential) proliferation of different forks
>> of ANTLR.  (Or alternatively with a very large number of "pull" requests
>> back into the main project).
>>
>> *Request:*
>>
>> As the community begins to develop or port targets for the ANTLR v4, it
>> would be nice to have a clean way of developing and deploying targets
>> which exist /outside/ of the official ANTLR4 project.
>>
>> *Benefits:*
>>
>> This should make maintaining the core ANTLR4 project much easier, and it
>> would allow users of ANTLR v4 more flexibility in their choice of targets.
>>
>> For example, from Sam's comments on the "standard" C++ target, this C++
>> target /might/ make use of "external" dependencies which /might/
>> preclude the use of a generated grammar inside, for example, the PHP
>> engine.
>>
>> If ANTLR v4 allowed externally loadable target generators, then I (for
>> example) might be able to make simple changes to the standard C++ target
>> (or alternatively write my own) so that grammars generated using my
>> generator would be embeddable inside, for example, the PHP engine.
>>
>> Then in my (eventually) open-source project I could distribute an
>> additional jar file to be loaded at runtime.  This additional jar file
>> could, cleanly, contain "my" version of the C++ target generator as
>> required by my project.  (Of course I would also provide my C++ target
>> as an un-official but, hopefully,  useful GitHub project).
>>
>> *Possible implementation?*
>>
>> I know that ANTLR v4 now makes extensive use of Java's reflection
>> mechanisms.  Could you use this reflection mechanism to find externally
>> loadable target generator interfaces?
>>
>> Alternatively, could you search for all instances of a suitably named
>> file in the resources to load any external target generator?
>>
>> Regards,
>>
>> Stephen Gaito
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From stephen at perceptisys.co.uk  Fri Sep 21 13:33:22 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Fri, 21 Sep 2012 21:33:22 +0100
Subject: [antlr-interest] Additional patches to C runtime WAS: Re: ANTLR 3.5
 (was 3.4.1)
In-Reply-To: <ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
Message-ID: <505CCF12.5000802@perceptisys.co.uk>

Mike,

So, if you are suggesting that you have already fixed these other 
problems, I can see that both I and the wider community would love to 
have these patches. (In particular I am about to start moving nodes 
between trees...)

I have gotten Terence to add the new-and-improved Contribution (aka 
"GitHub pull") process to both the FAQ and the V3 README... so I will 
now place one or more "pull" requests for my changes.

See:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=33947666

and in particular:

https://github.com/antlr/antlr3/blob/master/contributors.txt

However I am not sure I could shepherd your changes through this 
process... item (3) of the contributor's agreement means that I would 
have to take full responsibility for any IPR issues created by your 
patches.... which, sight-un-seen, could be nasty....

SO

It would be much better if you forked antlr/antlr3 on GitHub, added your 
changes, and then issued a pull request.  GitHub is really very easy to 
use (if you already know git).

If this is a great problem, let me know.

Regards,

Stephen Gaito

On 20/09/12 16:46, Mike Lischke wrote:
> Hey Stephen,
>
>> Which issues are these?
> You fixed the parent return problem in the common tree already, but there's still the issue with not-set parents when moving nodes between trees (antlr3basetree.c) and then I also removed the declaration of "true" and "false" from antlr3convertutf.h and replaced their occurrences in antlr3convertutf.c (as they caused warnings about duplicate declarations). Additionally, I renamed the member PROTOCOL_VERSION in antlr3debugeventlistener.h to lower case, as it conflicted with a macro of the same name (member names should never be written all upper case anyway). Finally I added a number of casts to get rid of compiler warnings.
>
>> I have "fixed" the couple of (release-phase) issues that have been
>> affecting my usage of the C target.
> So what is now the most up to date C runtime? The one from you on Github? I can make a diff and send it to you if you want.
>
> Btw: the runtime on antlr.org still has 3.0.1 as version number in the README, even for the 3.4 download. The same holds true for your Git repo.
>
> Mike


From sam at tunnelvisionlabs.com  Fri Sep 21 18:46:12 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sat, 22 Sep 2012 01:46:12 +0000
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
 generators
In-Reply-To: <CC823C3E.1DAB2%douglasgodfrey@gmail.com>
References: <505CC009.9050300@perceptisys.co.uk>
	<CC823C3E.1DAB2%douglasgodfrey@gmail.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377BF87E92@CH1PRD0811MB430.namprd08.prod.outlook.com>

I definitely disagree with the "should" regarding implementation as an IDE plugin, and can confidently say we won't be implementing targets in this manner.

When I build the first real port, I'll be working to ensure the target extension mechanism allows dynamically adding target support and doesn't require any target files to be built into the ANTLR tool or reside in the antlr4 GitHub repository.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Douglas Godfrey
Sent: Friday, September 21, 2012 3:00 PM
To: Stephen Gaito
Cc: Antlr-Interest Antlr.Org
Subject: Re: [antlr-interest] V4 Feature Request: Externally loadable target generators

This should be implemented via the existing Netbeans Plugin mechanism.
One of the default Plugin Repositories should be downloads.antlr.org.

When you first launch ANTLRWorks4 you would use the Tools::Plugins menu
to install the AntlrV4 targets of your choice. ANTLRWorks4 already uses
the Netbeans Plugin mechanism [9 plugins] but it does not have any
plugin repository configured.

This would mean that each AntlrV4 Target would need to be packaged as a
library and wrapped in a Netbeans Plugin shell.



On 9/21/12 3:29 PM, "Stephen Gaito" <stephen at perceptisys.co.uk> wrote:

>Ter,
>
>*Problem:*
>
>Maybe I missed it, but one of the serious drawbacks I found in using
>your excellent ANTLR V3, was the inability of cleanly loading a new or
>slightly altered target (C/C++/Java/...) generator.
>
>If I remember correctly in reading through the Java code for the Tool,
>the list of the various target generators were hard-coded into the Tool.
>
>If my memory is correct, to load my own generator I would need to alter
>your code... which, if I were to open-source my own project, would get
>seriously messy... with a (potential) proliferation of different forks
>of ANTLR.  (Or alternatively with a very large number of "pull" requests
>back into the main project).
>
>*Request:*
>
>As the community begins to develop or port targets for the ANTLR v4, it
>would be nice to have a clean way of developing and deploying targets
>which exist /outside/ of the official ANTLR4 project.
>
>*Benefits:*
>
>This should make maintaining the core ANTLR4 project much easier, and it
>would allow users of ANTLR v4 more flexibility in their choice of targets.
>
>For example, from Sam's comments on the "standard" C++ target, this C++
>target /might/ make use of "external" dependencies which /might/
>preclude the use of a generated grammar inside, for example, the PHP
>engine.
>
>If ANTLR v4 allowed externally loadable target generators, then I (for
>example) might be able to make simple changes to the standard C++ target
>(or alternatively write my own) so that grammars generated using my
>generator would be embeddable inside, for example, the PHP engine.
>
>Then in my (eventually) open-source project I could distribute an
>additional jar file to be loaded at runtime.  This additional jar file
>could, cleanly, contain "my" version of the C++ target generator as
>required by my project.  (Of course I would also provide my C++ target
>as an un-official but, hopefully,  useful GitHub project).
>
>*Possible implementation?*
>
>I know that ANTLR v4 now makes extensive use of Java's reflection
>mechanisms.  Could you use this reflection mechanism to find externally
>loadable target generator interfaces?
>
>Alternatively, could you search for all instances of a suitably named
>file in the resources to load any external target generator?
>
>Regards,
>
>Stephen Gaito
>
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From stephen at perceptisys.co.uk  Fri Sep 21 18:49:54 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Sat, 22 Sep 2012 02:49:54 +0100
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
 generators
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377BF87E92@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <505CC009.9050300@perceptisys.co.uk>
	<CC823C3E.1DAB2%douglasgodfrey@gmail.com>
	<8802E2F086DC9648BD0585D82AC6377BF87E92@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <505D1942.4010001@perceptisys.co.uk>

Sam,

This sounds excellent!

(How can I help?)

Regards,

Stephen Gaito

On 22/09/12 02:46, Sam Harwell wrote:
> I definitely disagree with the "should" regarding implementation as an IDE plugin, and can confidently say we won't be implementing targets in this manner.
>
> When I build the first real port, I'll be working to ensure the target extension mechanism allows dynamically adding target support and doesn't require any target files to be built into the ANTLR tool or reside in the antlr4 GitHub repository.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Friday, September 21, 2012 3:00 PM
> To: Stephen Gaito
> Cc: Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] V4 Feature Request: Externally loadable target generators
>
> This should be implemented via the existing Netbeans Plugin mechanism.
> One of the default Plugin Repositories should be downloads.antlr.org.
>
> When you first launch ANTLRWorks4 you would use the Tools::Plugins menu
> to install the AntlrV4 targets of your choice. ANTLRWorks4 already uses
> the Netbeans Plugin mechanism [9 plugins] but it does not have any
> plugin repository configured.
>
> This would mean that each AntlrV4 Target would need to be packaged as a
> library and wrapped in a Netbeans Plugin shell.
>
>
>
> On 9/21/12 3:29 PM, "Stephen Gaito" <stephen at perceptisys.co.uk> wrote:
>
>> Ter,
>>
>> *Problem:*
>>
>> Maybe I missed it, but one of the serious drawbacks I found in using
>> your excellent ANTLR V3, was the inability of cleanly loading a new or
>> slightly altered target (C/C++/Java/...) generator.
>>
>> If I remember correctly in reading through the Java code for the Tool,
>> the list of the various target generators were hard-coded into the Tool.
>>
>> If my memory is correct, to load my own generator I would need to alter
>> your code... which, if I were to open-source my own project, would get
>> seriously messy... with a (potential) proliferation of different forks
>> of ANTLR.  (Or alternatively with a very large number of "pull" requests
>> back into the main project).
>>
>> *Request:*
>>
>> As the community begins to develop or port targets for the ANTLR v4, it
>> would be nice to have a clean way of developing and deploying targets
>> which exist /outside/ of the official ANTLR4 project.
>>
>> *Benefits:*
>>
>> This should make maintaining the core ANTLR4 project much easier, and it
>> would allow users of ANTLR v4 more flexibility in their choice of targets.
>>
>> For example, from Sam's comments on the "standard" C++ target, this C++
>> target /might/ make use of "external" dependencies which /might/
>> preclude the use of a generated grammar inside, for example, the PHP
>> engine.
>>
>> If ANTLR v4 allowed externally loadable target generators, then I (for
>> example) might be able to make simple changes to the standard C++ target
>> (or alternatively write my own) so that grammars generated using my
>> generator would be embeddable inside, for example, the PHP engine.
>>
>> Then in my (eventually) open-source project I could distribute an
>> additional jar file to be loaded at runtime.  This additional jar file
>> could, cleanly, contain "my" version of the C++ target generator as
>> required by my project.  (Of course I would also provide my C++ target
>> as an un-official but, hopefully,  useful GitHub project).
>>
>> *Possible implementation?*
>>
>> I know that ANTLR v4 now makes extensive use of Java's reflection
>> mechanisms.  Could you use this reflection mechanism to find externally
>> loadable target generator interfaces?
>>
>> Alternatively, could you search for all instances of a suitably named
>> file in the resources to load any external target generator?
>>
>> Regards,
>>
>> Stephen Gaito
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From mike at cargal.net  Sat Sep 22 14:56:01 2012
From: mike at cargal.net (Mike Cargal)
Date: Sat, 22 Sep 2012 17:56:01 -0400
Subject: [antlr-interest] Interesting problem with labels in V4b1
Message-ID: <07F5FC84-806B-4049-B747-38072F0C971E@cargal.net>

This:

grammar Foo;
expr        :   '(' expr ')'           # parenExpr             
            |   '%' expr               # pctExpr      
            !   '^' expr               # expnExpr          
            |   expr ('*'|'/') expr    # multExpr          
            |   expr ('+'|'-') expr    # addExpr           
            ;
gives me the following errors?
error(50): Foo.g4:4:16: mismatched input ''^'' expecting SEMI while matching a rule
error(50): Foo.g4:4:37: '#' came as a complete surprise to me while matching rule preamble


This:

grammar Foo;
expr        :   '(' expr ')'           # parenExpr             
            |   '%' expr               # pctExpr      
//            !   '^' expr               # expnExpr          
            |   expr ('*'|'/') expr    # multExpr          
            |   expr ('+'|'-') expr    # addExpr           
            ; 

generates without error

and this:

grammar Foo;
expr        :   '(' expr ')'                        
            |   '%' expr                     
            !   '^' expr                         
            |   expr ('*'|'/') expr              
            |   expr ('+'|'-') expr               
            ;

generates without error

all compiled using:
java -jar /usr/local/lib/antlr-4.0b1-complete.jar -visitor Foo.g4

Somehow the exponentiation expression is a problem if and only if I'm using labels.

From researcher0x00 at gmail.com  Sat Sep 22 15:03:12 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 22 Sep 2012 18:03:12 -0400
Subject: [antlr-interest] Interesting problem with labels in V4b1
In-Reply-To: <07F5FC84-806B-4049-B747-38072F0C971E@cargal.net>
References: <07F5FC84-806B-4049-B747-38072F0C971E@cargal.net>
Message-ID: <CAN45N13yfGKJQavhb5eGrQJskKj39xtt91z5Bqsa+hg-t9+kMQ@mail.gmail.com>

Hi Mike,

Just giving it a quick syntactic look it looks like the vertical bar before
'^' is an exclamation point.

Eric

On Sat, Sep 22, 2012 at 5:56 PM, Mike Cargal <mike at cargal.net> wrote:

> This:
>
> grammar Foo;
> expr        :   '(' expr ')'           # parenExpr
>             |   '%' expr               # pctExpr
>             !   '^' expr               # expnExpr
>             |   expr ('*'|'/') expr    # multExpr
>             |   expr ('+'|'-') expr    # addExpr
>             ;
> gives me the following errors?
> error(50): Foo.g4:4:16: mismatched input ''^'' expecting SEMI while
> matching a rule
> error(50): Foo.g4:4:37: '#' came as a complete surprise to me while
> matching rule preamble
>
>
> This:
>
> grammar Foo;
> expr        :   '(' expr ')'           # parenExpr
>             |   '%' expr               # pctExpr
> //            !   '^' expr               # expnExpr
>             |   expr ('*'|'/') expr    # multExpr
>             |   expr ('+'|'-') expr    # addExpr
>             ;
>
> generates without error
>
> and this:
>
> grammar Foo;
> expr        :   '(' expr ')'
>             |   '%' expr
>             !   '^' expr
>             |   expr ('*'|'/') expr
>             |   expr ('+'|'-') expr
>             ;
>
> generates without error
>
> all compiled using:
> java -jar /usr/local/lib/antlr-4.0b1-complete.jar -visitor Foo.g4
>
> Somehow the exponentiation expression is a problem if and only if I'm
> using labels.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sam at tunnelvisionlabs.com  Sat Sep 22 15:25:56 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sat, 22 Sep 2012 22:25:56 +0000
Subject: [antlr-interest] Interesting problem with labels in V4b1
In-Reply-To: <07F5FC84-806B-4049-B747-38072F0C971E@cargal.net>
References: <07F5FC84-806B-4049-B747-38072F0C971E@cargal.net>
Message-ID: <8802E2F086DC9648BD0585D82AC6377BF892BF@CH1PRD0811MB430.namprd08.prod.outlook.com>

Your alternatives should be separated by |, not !.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mike Cargal
Sent: Saturday, September 22, 2012 4:56 PM
To: antlr-interest at antlr.org list
Subject: [antlr-interest] Interesting problem with labels in V4b1

This:

grammar Foo;
expr        :   '(' expr ')'           # parenExpr             
            |   '%' expr               # pctExpr      
            !   '^' expr               # expnExpr          
            |   expr ('*'|'/') expr    # multExpr          
            |   expr ('+'|'-') expr    # addExpr           
            ;
gives me the following errors...
error(50): Foo.g4:4:16: mismatched input ''^'' expecting SEMI while matching a rule
error(50): Foo.g4:4:37: '#' came as a complete surprise to me while matching rule preamble


This:

grammar Foo;
expr        :   '(' expr ')'           # parenExpr             
            |   '%' expr               # pctExpr      
//            !   '^' expr               # expnExpr          
            |   expr ('*'|'/') expr    # multExpr          
            |   expr ('+'|'-') expr    # addExpr           
            ; 

generates without error

and this:

grammar Foo;
expr        :   '(' expr ')'                        
            |   '%' expr                     
            !   '^' expr                         
            |   expr ('*'|'/') expr              
            |   expr ('+'|'-') expr               
            ;

generates without error

all compiled using:
java -jar /usr/local/lib/antlr-4.0b1-complete.jar -visitor Foo.g4

Somehow the exponentiation expression is a problem if and only if I'm using labels.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From msb5014 at gmail.com  Sat Sep 22 16:27:20 2012
From: msb5014 at gmail.com (Michael Barry)
Date: Sat, 22 Sep 2012 19:27:20 -0400
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <CAN45N11E7sRDd2NHZUVcE2nqwj+YJF9XnCqn7mcpWCxTUr1VMA@mail.gmail.com>
References: <8008126564149024886@unknownmsgid>
	<CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>
	<79F9A8E0-FC53-45CB-A8F3-4FA593459A10@lischke-online.de>
	<CAN45N11E7sRDd2NHZUVcE2nqwj+YJF9XnCqn7mcpWCxTUr1VMA@mail.gmail.com>
Message-ID: <-322395582167982497@unknownmsgid>

Thanks for the feedback!  The random phrase generator provided a good
base to get started, but to make it work reliably, I had to change the
version in the 3.4 distribution to 1) not generate identifiers that
conflicted with keywords, and 2) limit its internal stack size so that
if it gets too big it just gives up and starts over.  Once I did that
it started generating ~300,000 random syntactically valid productions
per minute, and it has been generating some interesting findings :-)

I am working on my Masters right now, and I think that this may be a
good topic for thesis.

Thanks
Mike Barry

On Sep 20, 2012, at 12:39 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Mike,
>
> "What I wonder is if this way test is really meaningful. I mean, when you
> create test sentences from the grammar they will always work, no? "
>
> Yes the test are meaningful but only meaningful if you don't blindly
> generate phrases and accept the output without verification.. Since you
> don't want to hand validate each result you make the generator smart enough
> and give it semantic knowledge to tag the results as this should be valid
> and that should be invalid, then look for a negative result. i.e. a test
> that should pass that fails or a test that should fail that passes. You
> should still hand check a random set of results. Note that even with all
> this testing it does not guarantee the app using the ANTLR is correct, it
> only helps to increase the level of confidence, unless of course the
> grammar is so simple that you can exhaustively test all of the cases. Also
> remember that if the generator is smart enough it can focus on a particular
> portion of the grammar and run many pivot examples off that portion which
> just might be a complete set of test cases.
>
> "Since your parser uses the same grammar as the test input stems from there
> can only be test failures if your grammar uses actions to control what gets
> parsed how. But for a pure grammar you can only generate test cases when
> you take your language spec (not codified in a grammar) and create test
> cases out of it."
>
> When I created my proof of concept tool I did give it the ability to
> generate both positive and negative results. I was also using C++ and from
> the C++ reference grammar  I created one grammar for input to ANTLR and one
> grammar for input into my phrase generator. I then used the phrases from
> the generator as input into the lexer/parser generated by ANTLR and then
> looked at the results.
>
> There is a lot more to this than I explain here but I personally found the
> proof of concept tool to be very educational. Many results that came out
> for valid were unlike any C++ code I have ever seen from a human but they
> did compile. The reason is the generator does not think like a human, it
> just does a tree walk based on the rules and generates phrases. Where I
> left off was creating another layer to take common human type test
> conditions and turn them into the rules to be used by the generator.
>
> After the proof of concept tool worked I moved onto another project because
> what I really wanted out of the tool was what was learned in doing it more
> than the tool itself. The next steps of converting human conditions into
> rules and creating a GUI front end would have required more work than I was
> interested in doing.
>
> Eric
>
>
>
>
>
>
>
>
>
>
>
> On Thu, Sep 20, 2012 at 11:53 AM, Mike Lischke <mike at lischke-online.de>wrote:
>
>>
>> What I wonder is if this way test is really meaningful. I mean, when you
>> create test sentences from the grammar they will always work, no? Since
>> your parser uses the same grammar as the test input stems from there can
>> only be test failures if your grammar uses actions to control what gets
>> parsed how. But for a pure grammar you can only generate test cases when
>> you take your language spec (not codified in a grammar) and create test
>> cases out of it.
>>
>>> I did some work on my own on this a year ago and the problem you get into
>>> is a huge explosion in output. Just to manage the problem of the
>> explosion
>>> I had to create methods just to count the possibilities given a grammar
>> and
>>> the easiest way for me to relate to the size was as a power. So for one
>>> grammar the set could have 10**15 results and others could have 10**30
>>> results. This is not even something that can be reasonably tested.
>>>
>>>>
>>>> Is anyone aware of any projects out there for doing syntax-based
>>>> testing using ANTLR grammars?  The simplest form would be a tool for
>>>> generating valid language productions from an ANTLR grammar, but more
>>>> complex might introduce mutations.
>>>>
>>>>
>>>> Thanks
>>>> Mike Barry
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> Mike
>> --
>> www.soft-gems.net
>>
>>
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From researcher0x00 at gmail.com  Sat Sep 22 16:58:13 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 22 Sep 2012 19:58:13 -0400
Subject: [antlr-interest] Syntax based testing for ANTLR grammars?
In-Reply-To: <-322395582167982497@unknownmsgid>
References: <8008126564149024886@unknownmsgid>
	<CAN45N13YktWOV61s+pY30oG2pt0kvSUY6j6qwXusH2=NBry3hA@mail.gmail.com>
	<79F9A8E0-FC53-45CB-A8F3-4FA593459A10@lischke-online.de>
	<CAN45N11E7sRDd2NHZUVcE2nqwj+YJF9XnCqn7mcpWCxTUr1VMA@mail.gmail.com>
	<-322395582167982497@unknownmsgid>
Message-ID: <CAN45N12C41Q=jh17cRgCL5u4ph8b=z8Uo+xtAFfUN_+ed1LdOQ@mail.gmail.com>

Hi Michael,

In case you haven't found it, if you search antlr.mailmark.org for "random
phrase" you will find:
http://antlr.markmail.org/search/?q=random%20phrase#query:random%20phrase+page:1+mid:z3jvawmd46xebel7+state:results

Ter gave a reference to Ralf L?mmel.

http://softlang.wikidot.com/rlaemmel:home

He list some papers related to test case generation from a grammar. I did
not find the papers I originally read from a year ago but if I remember
correctly, he also used a seed.

I mention the seed because in my proof of concept I did not use a seed as I
wanted no randomness in the test cases. Even if you can test 10**7 ( ten
million) cases and you can show that there are 10**30 basic cases you still
haven't put much of a dent into the test cases.

In all of the tools I have seen they always use a seed.

As food for thought you might want to see if that is true about the seeds
and create a generator not using a seed.

But then again, you could go for the seed and I could get some seed money
and start a company. :)

Eric



On Sat, Sep 22, 2012 at 7:27 PM, Michael Barry <msb5014 at gmail.com> wrote:

> Thanks for the feedback!  The random phrase generator provided a good
> base to get started, but to make it work reliably, I had to change the
> version in the 3.4 distribution to 1) not generate identifiers that
> conflicted with keywords, and 2) limit its internal stack size so that
> if it gets too big it just gives up and starts over.  Once I did that
> it started generating ~300,000 random syntactically valid productions
> per minute, and it has been generating some interesting findings :-)
>
> I am working on my Masters right now, and I think that this may be a
> good topic for thesis.
>
> Thanks
> Mike Barry
>
> On Sep 20, 2012, at 12:39 PM, Eric <researcher0x00 at gmail.com> wrote:
>
> > Hi Mike,
> >
> > "What I wonder is if this way test is really meaningful. I mean, when you
> > create test sentences from the grammar they will always work, no? "
> >
> > Yes the test are meaningful but only meaningful if you don't blindly
> > generate phrases and accept the output without verification.. Since you
> > don't want to hand validate each result you make the generator smart
> enough
> > and give it semantic knowledge to tag the results as this should be valid
> > and that should be invalid, then look for a negative result. i.e. a test
> > that should pass that fails or a test that should fail that passes. You
> > should still hand check a random set of results. Note that even with all
> > this testing it does not guarantee the app using the ANTLR is correct, it
> > only helps to increase the level of confidence, unless of course the
> > grammar is so simple that you can exhaustively test all of the cases.
> Also
> > remember that if the generator is smart enough it can focus on a
> particular
> > portion of the grammar and run many pivot examples off that portion which
> > just might be a complete set of test cases.
> >
> > "Since your parser uses the same grammar as the test input stems from
> there
> > can only be test failures if your grammar uses actions to control what
> gets
> > parsed how. But for a pure grammar you can only generate test cases when
> > you take your language spec (not codified in a grammar) and create test
> > cases out of it."
> >
> > When I created my proof of concept tool I did give it the ability to
> > generate both positive and negative results. I was also using C++ and
> from
> > the C++ reference grammar  I created one grammar for input to ANTLR and
> one
> > grammar for input into my phrase generator. I then used the phrases from
> > the generator as input into the lexer/parser generated by ANTLR and then
> > looked at the results.
> >
> > There is a lot more to this than I explain here but I personally found
> the
> > proof of concept tool to be very educational. Many results that came out
> > for valid were unlike any C++ code I have ever seen from a human but they
> > did compile. The reason is the generator does not think like a human, it
> > just does a tree walk based on the rules and generates phrases. Where I
> > left off was creating another layer to take common human type test
> > conditions and turn them into the rules to be used by the generator.
> >
> > After the proof of concept tool worked I moved onto another project
> because
> > what I really wanted out of the tool was what was learned in doing it
> more
> > than the tool itself. The next steps of converting human conditions into
> > rules and creating a GUI front end would have required more work than I
> was
> > interested in doing.
> >
> > Eric
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > On Thu, Sep 20, 2012 at 11:53 AM, Mike Lischke <mike at lischke-online.de
> >wrote:
> >
> >>
> >> What I wonder is if this way test is really meaningful. I mean, when you
> >> create test sentences from the grammar they will always work, no? Since
> >> your parser uses the same grammar as the test input stems from there can
> >> only be test failures if your grammar uses actions to control what gets
> >> parsed how. But for a pure grammar you can only generate test cases when
> >> you take your language spec (not codified in a grammar) and create test
> >> cases out of it.
> >>
> >>> I did some work on my own on this a year ago and the problem you get
> into
> >>> is a huge explosion in output. Just to manage the problem of the
> >> explosion
> >>> I had to create methods just to count the possibilities given a grammar
> >> and
> >>> the easiest way for me to relate to the size was as a power. So for one
> >>> grammar the set could have 10**15 results and others could have 10**30
> >>> results. This is not even something that can be reasonably tested.
> >>>
> >>>>
> >>>> Is anyone aware of any projects out there for doing syntax-based
> >>>> testing using ANTLR grammars?  The simplest form would be a tool for
> >>>> generating valid language productions from an ANTLR grammar, but more
> >>>> complex might introduce mutations.
> >>>>
> >>>>
> >>>> Thanks
> >>>> Mike Barry
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >> Mike
> >> --
> >> www.soft-gems.net
> >>
> >>
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From dario.damico at damix.it  Sat Sep 22 17:56:21 2012
From: dario.damico at damix.it (dario.damico at damix.it)
Date: Sun, 23 Sep 2012 02:56:21 +0200
Subject: [antlr-interest] Linking against the C runtime.
Message-ID: <MAS2LX$398C48D45D60424ABCA7B8E8AF1895DC@damix.it>

Hi everybody, I have a problem linking against the C runtime for ANTLR. I'm using the following software:

  Operating system: Mac OS X 10.7.4 
  ANTLRWorks+ANTLR: Version 1.4.3 - for Windows, Linux and Mac OS X
  ANTLR C Runtime : libantlr3c-3.4.tar.gz

I installed the runtime like this:
  ./configure --enable-64bit
  make
  sudo make install

I used ANTLRWorks to generate lexer and parser for a grammar; I obtained
2 .c files and 2 .h files. I tried to compile them like this:

  gcc -lantlr3c SimpleCalcParser.c SimpleCalcLexer.c

But I got this error:

  SimpleCalcParser.c: In function ?main?:
  SimpleCalcParser.c:347: warning: assignment makes pointer from integer without a cast
  Undefined symbols for architecture x86_64:
    "_antlr3AsciiFileStreamNew", referenced from:
        _main in cc4epMVA.o
  ld: symbol(s) not found for architecture x86_64
  collect2: ld returned 1 exit status

If I build the library WITHOUT the --enable-64bit flag, the error looks even worse:

  SimpleCalcParser.c: In function ?main?:
  SimpleCalcParser.c:347: warning: assignment makes pointer from integer without a cast
  ld: warning: ignoring file /usr/local/lib/libantlr3c.dylib, file was built for unsupported file format which is not the architecture being linked (x86_64)
  Undefined symbols for architecture x86_64:
    "_antlr3ParserNewStream", referenced from:
        _SimpleCalcParserNewSSD in ccTJEO4M.o
    "_antlr3AsciiFileStreamNew", referenced from:
        _main in ccTJEO4M.o
    "_antlr3CommonTokenStreamSourceNew", referenced from:
        _main in ccTJEO4M.o
    "_antlr3LexerNewStream", referenced from:
        _SimpleCalcLexerNewSSD in ccC9Aeuk.o
  ld: symbol(s) not found for architecture x86_64
  collect2: ld returned 1 exit status

In these emails, http://www.antlr.org/pipermail/antlr-interest/2010-September/039702.html a problem similar to mine was reported, and was completely solved by adding the --enable-64bit flag.

Any idea? Thanks for your help.

Dario


From dario.damico at damix.it  Sat Sep 22 18:38:01 2012
From: dario.damico at damix.it (dario.damico at damix.it)
Date: Sun, 23 Sep 2012 03:38:01 +0200
Subject: [antlr-interest] Linking against the C runtime.
In-Reply-To: <MAS2LX$398C48D45D60424ABCA7B8E8AF1895DC@damix.it>
References: <MAS2LX$398C48D45D60424ABCA7B8E8AF1895DC@damix.it>
Message-ID: <MAS4JD$572AD41730593841B0C983ECCE0FC904@damix.it>

The same happens when compiling for i386, like in:

    gcc -lantlr3c -arch i386 SimpleCalcParser.c SimpleCalcLexer.c

Then I found the solution proposed by Shinji Nakamatsu in:

    http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3

Sorry, I didn't see that comment before.

Dario

---------- Original Header -----------

From      : antlr-interest-bounces at antlr.org
To          : antlr-interest at antlr.org
Cc          : 
Date      : Sun, 23 Sep 2012 02:56:21 +0200
Subject : [antlr-interest] Linking against the C runtime.

> Hi everybody, I have a problem linking against the C runtime for ANTLR. I'm using the following software:
> 
>   Operating system: Mac OS X 10.7.4 
>   ANTLRWorks+ANTLR: Version 1.4.3 - for Windows, Linux and Mac OS X
>   ANTLR C Runtime : libantlr3c-3.4.tar.gz
> 
> I installed the runtime like this:
>   ./configure --enable-64bit
>   make
>   sudo make install
> 
> I used ANTLRWorks to generate lexer and parser for a grammar; I obtained
> 2 .c files and 2 .h files. I tried to compile them like this:
> 
>   gcc -lantlr3c SimpleCalcParser.c SimpleCalcLexer.c
> 
> But I got this error:
> 
>   SimpleCalcParser.c: In function ?main?:
>   SimpleCalcParser.c:347: warning: assignment makes pointer from integer without a cast
>   Undefined symbols for architecture x86_64:
>     "_antlr3AsciiFileStreamNew", referenced from:
>         _main in cc4epMVA.o
>   ld: symbol(s) not found for architecture x86_64
>   collect2: ld returned 1 exit status
> 
> If I build the library WITHOUT the --enable-64bit flag, the error looks even worse:
> 
>   SimpleCalcParser.c: In function ?main?:
>   SimpleCalcParser.c:347: warning: assignment makes pointer from integer without a cast
>   ld: warning: ignoring file /usr/local/lib/libantlr3c.dylib, file was built for unsupported file format which is not the architecture being linked (x86_64)
>   Undefined symbols for architecture x86_64:
>     "_antlr3ParserNewStream", referenced from:
>         _SimpleCalcParserNewSSD in ccTJEO4M.o
>     "_antlr3AsciiFileStreamNew", referenced from:
>         _main in ccTJEO4M.o
>     "_antlr3CommonTokenStreamSourceNew", referenced from:
>         _main in ccTJEO4M.o
>     "_antlr3LexerNewStream", referenced from:
>         _SimpleCalcLexerNewSSD in ccC9Aeuk.o
>   ld: symbol(s) not found for architecture x86_64
>   collect2: ld returned 1 exit status
> 
> In these emails, http://www.antlr.org/pipermail/antlr-interest/2010-September/039702.html a problem similar to mine was reported, and was completely solved by adding the --enable-64bit flag.
> 
> Any idea? Thanks for your help.
> 
> Dario
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From list at toolazydogs.com  Sat Sep 22 19:29:13 2012
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 22 Sep 2012 19:29:13 -0700
Subject: [antlr-interest] Maven plugin for antlr v4
Message-ID: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>

Is there a maven plugin in the works for antler v4?


Regards,
Alan


From sam at tunnelvisionlabs.com  Sat Sep 22 22:14:51 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sun, 23 Sep 2012 05:14:51 +0000
Subject: [antlr-interest] Maven plugin for antlr v4
In-Reply-To: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>
References: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377BF89E90@CH1PRD0811MB430.namprd08.prod.outlook.com>

Yes, but it's current in source-only form and not available through the Maven distribution site (I don't know how that part of it works). Hopefully we can get to that part of it soon. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
Sent: Saturday, September 22, 2012 9:29 PM
To: Antlr-Interest Antlr.Org
Subject: [antlr-interest] Maven plugin for antlr v4

Is there a maven plugin in the works for antler v4?


Regards,
Alan


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From kierans777 at gmail.com  Sun Sep 23 01:28:49 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 23 Sep 2012 18:28:49 +1000
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <505B1014.70207@perceptisys.co.uk>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
Message-ID: <505EC841.2080406@gmail.com>

On 20/09/12 10:46 PM, Stephen Gaito wrote:
> Kieran,
>
> Which issues are these?

I was thinking of (in precedence order):

- Backtracking and labels (see 
http://www.antlr.org/pipermail/antlr-interest/2012-March/044216.html). 
I started working on this but got stuck, then got project diverted. All 
the context is in the list thread and my code is at 
https://github.com/kierans/antlr3

- Gated semantic predicates for C walkers 
(http://www.antlr.org/pipermail/antlr-interest/2012-April/044387.html). 
  However this may not be a bug as my question about gated semantic 
predicates in walkers throwing exceptions didn't get a reply (are GSP 
treated differently in walkers to parsers?)

- The last issue I was thinking about was more a feature request which I 
don't expect has been done due to time constraints and that's Tree 
Pattern Matchers 
(http://www.antlr.org/pipermail/antlr-interest/2012-August/045126.html).

The first issue is a well known bug, the second may or may not be a bug, 
and the third as mentioned is a feature because it's just missing due to 
noone actually wanting it till now in the C target.

If anyone else who has worked on these issues has gotten them to work, 
it would be nice to have the code in the 3.5 release.  If not, oh well. 
  I'm not trying to bag Jim out here BTW, without his efforts for the C 
target my project would be a bit stuffed as I think Antlr is the best of 
breed tool, and I can't use Java as an implementation language. So I 
personally really appreciate his efforts.

Cheers,

> I have "fixed" the couple of (release-phase) issues that have been
> affecting my usage of the C target.
>
> You can find my patches on GitHub: https://github.com/stephengaito/antlr3
>
> There is essentially one patch on each of my branches. On my system, I
> take the official C target download and apply each patch to get the code
> source I need.
>
> As you can see from the GitHub fork tool graph, these patches are to
> 3.4.1 from Github a couple of months before the 3.5 release.
>
> Regards,
>
> Stephen Gaito
>
> On 20/09/12 13:32, Kieran Simpson wrote:
>> This is great! I was wondering if there are going to be any fixes for
>> the C target issues that have been previously raised?
>>
>> Cheers,
>>
>> On 18/09/12 11:31 AM, Terence Parr wrote:
>>> Hi,Thanks to Benjamin S Wolf and Gokulakannan Somasundaram we now
>>> have a Python 3.2 target and C++ target. Since these are major
>>> additions, I'm going to bump the release from 3.4.1 to 3.5.
>>>
>>> I have just about everything ready to go for the release I believe.
>>>
>>> Ter
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From mike at lischke-online.de  Sun Sep 23 02:48:33 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Sun, 23 Sep 2012 11:48:33 +0200
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <505EC841.2080406@gmail.com>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<505EC841.2080406@gmail.com>
Message-ID: <8008E5B6-4A63-4F9E-A8A2-0186BA47BA7E@lischke-online.de>


Kieran,

> - Gated semantic predicates for C walkers 
> (http://www.antlr.org/pipermail/antlr-interest/2012-April/044387.html). 
>  However this may not be a bug as my question about gated semantic 
> predicates in walkers throwing exceptions didn't get a reply (are GSP 
> treated differently in walkers to parsers?)


This might be related to my recent problem with gated semantic predicates in version comments, where the solution was to have an empty alternative to make the predicate behave as intended (had used in a lexer rule, tho).

Mike
-- 
www.soft-gems.net



From jimi at temporal-wave.com  Sun Sep 23 17:04:55 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Sep 2012 08:04:55 +0800
Subject: [antlr-interest] Linking against the C runtime.
In-Reply-To: <MAS2LX$398C48D45D60424ABCA7B8E8AF1895DC@damix.it>
References: <MAS2LX$398C48D45D60424ABCA7B8E8AF1895DC@damix.it>
Message-ID: <3338aa26983153b839baaae9c3845581@mail.gmail.com>

This:

antlr3AsciiFileStreamNew

Is not the correct function to call for that version of ANTLR. Downloading
the latest examples should show you the new function.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of dario.damico at damix.it
Sent: Sunday, September 23, 2012 8:56 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Linking against the C runtime.

Hi everybody, I have a problem linking against the C runtime for ANTLR. I'm
using the following software:

  Operating system: Mac OS X 10.7.4
  ANTLRWorks+ANTLR: Version 1.4.3 - for Windows, Linux and Mac OS X
  ANTLR C Runtime : libantlr3c-3.4.tar.gz

I installed the runtime like this:
  ./configure --enable-64bit
  make
  sudo make install

I used ANTLRWorks to generate lexer and parser for a grammar; I obtained
2 .c files and 2 .h files. I tried to compile them like this:

  gcc -lantlr3c SimpleCalcParser.c SimpleCalcLexer.c

But I got this error:

  SimpleCalcParser.c: In function ?main?:
  SimpleCalcParser.c:347: warning: assignment makes pointer from integer
without a cast
  Undefined symbols for architecture x86_64:
    "_antlr3AsciiFileStreamNew", referenced from:
        _main in cc4epMVA.o
  ld: symbol(s) not found for architecture x86_64
  collect2: ld returned 1 exit status

If I build the library WITHOUT the --enable-64bit flag, the error looks even
worse:

  SimpleCalcParser.c: In function ?main?:
  SimpleCalcParser.c:347: warning: assignment makes pointer from integer
without a cast
  ld: warning: ignoring file /usr/local/lib/libantlr3c.dylib, file was built
for unsupported file format which is not the architecture being linked
(x86_64)
  Undefined symbols for architecture x86_64:
    "_antlr3ParserNewStream", referenced from:
        _SimpleCalcParserNewSSD in ccTJEO4M.o
    "_antlr3AsciiFileStreamNew", referenced from:
        _main in ccTJEO4M.o
    "_antlr3CommonTokenStreamSourceNew", referenced from:
        _main in ccTJEO4M.o
    "_antlr3LexerNewStream", referenced from:
        _SimpleCalcLexerNewSSD in ccC9Aeuk.o
  ld: symbol(s) not found for architecture x86_64
  collect2: ld returned 1 exit status

In these emails,
http://www.antlr.org/pipermail/antlr-interest/2010-September/039702.html a
problem similar to mine was reported, and was completely solved by adding
the --enable-64bit flag.

Any idea? Thanks for your help.

Dario


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Sun Sep 23 17:08:12 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Sep 2012 08:08:12 +0800
Subject: [antlr-interest] ANTLR 3.5 (was 3.4.1)
In-Reply-To: <505EC841.2080406@gmail.com>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<505EC841.2080406@gmail.com>
Message-ID: <6fadbe558f7260bef2db194230496bae@mail.gmail.com>

The first bug needs to be fixed.

The second issue is really that you should not need predicates in a tree
walker as you are in charge of the tree shape and should therefore produce
a tree that is completely free of ambiguities. I must have missed your
original question.

The third is not likely to be done to be honest - you might be better hand
coded that anyway.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kieran Simpson
Sent: Sunday, September 23, 2012 4:29 PM
To: Stephen Gaito
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 3.5 (was 3.4.1)

On 20/09/12 10:46 PM, Stephen Gaito wrote:
> Kieran,
>
> Which issues are these?

I was thinking of (in precedence order):

- Backtracking and labels (see
http://www.antlr.org/pipermail/antlr-interest/2012-March/044216.html).
I started working on this but got stuck, then got project diverted. All
the context is in the list thread and my code is at
https://github.com/kierans/antlr3

- Gated semantic predicates for C walkers
(http://www.antlr.org/pipermail/antlr-interest/2012-April/044387.html).
  However this may not be a bug as my question about gated semantic
predicates in walkers throwing exceptions didn't get a reply (are GSP
treated differently in walkers to parsers?)

- The last issue I was thinking about was more a feature request which I
don't expect has been done due to time constraints and that's Tree Pattern
Matchers
(http://www.antlr.org/pipermail/antlr-interest/2012-August/045126.html).

The first issue is a well known bug, the second may or may not be a bug,
and the third as mentioned is a feature because it's just missing due to
noone actually wanting it till now in the C target.

If anyone else who has worked on these issues has gotten them to work, it
would be nice to have the code in the 3.5 release.  If not, oh well.
  I'm not trying to bag Jim out here BTW, without his efforts for the C
target my project would be a bit stuffed as I think Antlr is the best of
breed tool, and I can't use Java as an implementation language. So I
personally really appreciate his efforts.


Cheers,

> I have "fixed" the couple of (release-phase) issues that have been
> affecting my usage of the C target.
>
> You can find my patches on GitHub:
> https://github.com/stephengaito/antlr3
>
> There is essentially one patch on each of my branches. On my system, I
> take the official C target download and apply each patch to get the
> code source I need.
>
> As you can see from the GitHub fork tool graph, these patches are to
> 3.4.1 from Github a couple of months before the 3.5 release.
>
> Regards,
>
> Stephen Gaito
>
> On 20/09/12 13:32, Kieran Simpson wrote:
>> This is great! I was wondering if there are going to be any fixes for
>> the C target issues that have been previously raised?
>>
>> Cheers,
>>
>> On 18/09/12 11:31 AM, Terence Parr wrote:
>>> Hi,Thanks to Benjamin S Wolf and Gokulakannan Somasundaram we now
>>> have a Python 3.2 target and C++ target. Since these are major
>>> additions, I'm going to bump the release from 3.4.1 to 3.5.
>>>
>>> I have just about everything ready to go for the release I believe.
>>>
>>> Ter
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Sun Sep 23 17:11:49 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 24 Sep 2012 08:11:49 +0800
Subject: [antlr-interest] reusing memory in c/c++
In-Reply-To: <505CBB95.7040902@release14.org>
References: <505C2D02.5030900@release14.org> <505CBB95.7040902@release14.org>
Message-ID: <7a7a758b3328ef36225d24204f758fe4@mail.gmail.com>

Not for tree walkers, but everything else has ->reuse()

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Damir Franusic
Sent: Saturday, September 22, 2012 3:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] reusing memory in c/c++

I would like to know if it's possible to reuse streams, parsers, lexers,
etc. so I don't have to recreate them in every iteration.

*    // input stream
     pANTLR3_INPUT_STREAM input  = antlr3StringStreamNew(...);
     // lexer
     ppminkLexer lexer = pminkLexerNew(input);
     // token stream
     pANTLR3_COMMON_TOKEN_STREAM tstream =
antlr3CommonTokenStreamSourceNew(...);
     // create parser
     ppminkParser parser = pminkParserNew(tstream);
     // parse and build ast
     pminkParser_lineParser_return ast = parser->lineParser(parser);

     /* do some stuff here */


     // free input stream
     tstream->free(tstream);
     tstream = NULL;

     input->close(input);
     input = NULL;

     lexer->free(lexer);
     lexer = NULL;

     parser->free(parser);
     parser = NULL;*


So I would like to know how to reuse tstream, input, lexer and parser....


Thnx,

*Damir Franusic*
Founder / Lead developer

r14 logo
*Release 14*
e: df at release14.org
p: +385-91-209-1311
w: http://www.release14.org/




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mike at lischke-online.de  Mon Sep 24 01:09:59 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Mon, 24 Sep 2012 10:09:59 +0200
Subject: [antlr-interest] Additional patches to C runtime
In-Reply-To: <505CE2DA.9020204@perceptisys.co.uk>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
	<505CCF12.5000802@perceptisys.co.uk>
	<505CE2DA.9020204@perceptisys.co.uk>
Message-ID: <3613AF36-A4E2-4582-81F1-824344F0D5FD@lischke-online.de>

Hey Stephen,

> Just to let you know, I have just issued the following pull request on my changes.
> 
>> https://github.com/antlr/antlr3/pull/41
> 

I followed your example and also branched antlr3 on Github, merged my changes and sent a pull request:

https://github.com/antlr/antlr3/pull/43

Mike
-- 
www.soft-gems.net



From martin.vanaken at 8thcolor.com  Mon Sep 24 07:24:03 2012
From: martin.vanaken at 8thcolor.com (Martin Van Aken)
Date: Mon, 24 Sep 2012 16:24:03 +0200
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
Message-ID: <CACQyh-UWOz4w82APtF5YhSsSC+YcVf2QYviAZiczimRDA15TMw@mail.gmail.com>

Eric,
In between, I would be interested in your part of the answer (I'm mostly
doing exploratory work at this time anyway). Hopefully Terr or Sam can jump
in afterward to complete/correct.

Thanks !

Martin

On 20 September 2012 20:50, Eric <researcher0x00 at gmail.com> wrote:

> Ter,
>
> I know you are more than busy, but I didn't see an answer to this. As much
> as I know most of the answer I can't remember all of the details at this
> point to give a correct answer.
>
> Thanks, Eric
>
> On Wed, Sep 19, 2012 at 2:33 AM, Martin Van Aken <
> martin.vanaken at 8thcolor.com> wrote:
>
> > Hello Terence,
> > Thanks for the info, this is far better than nothing, and I like the
> > incremental process outlined there. There is still something I'm not sure
> > to understand : the String Template .stg file is used to generate the
> > parser/lexer code for the grammar. But those classes inherit from more
> > general classes in Antlr (in the java version, at least). Are those also
> > generated by the .stg ?
> >
> > In other word, what about the runtime of Antlr, is it an output of the
> > .stg, or is it another part to implement to be able to have a parser
> > running under a given language (let say Ruby).
> >
> > Thanks !
> >
> > Martin
> >
> > On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
> >
> > > Unfortunately, no one has stepped up to bring the Ruby target up to
> date.
> > > The other bit of bad news is that we really don't have much in the way
> of
> > > how to create a target. just this page:
> > >
> > >
> > >
> >
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
> > >
> > > Ter
> > > On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
> > >
> > > Terrence/list,
> > > I've the same question about the Ruby target. For what I can see from
> > > github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it
> has
> > > not move since two years so it is probably lagging behind. Do anyone is
> > > still maintaining it ?
> > >
> > > If not, I may be interested in trying to update it myself. Any resource
> > for
> > > (would be) goal maintener that I could start with ? Anyone that would
> be
> > > interested to contribute (time, advice, test, anything). I may take a
> > look
> > > at the python target (that seems to be keeping up well) as a reference
> > > (closer to Ruby than Java).
> > >
> > > Thanks a lot.
> > >
> > > Martin
> > >
> > > On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com>
> wrote:
> > >
> > > Ter/list,
> > >
> > >   Thanks again for all your efforts.  In terms of other language
> > >
> > > targets is there an idea/outline of when they'll be available.  I'm
> > >
> > > specifically thinking of the C target.  In a list thread from January
> > >
> > > there was the indication that a C++ target was still a while away so
> any
> > >
> > > progress updates?
> > >
> > >
> > > Cheers,
> > >
> > >
> > >
> > > On 16/09/12 4:36 AM, Terence Parr wrote:
> > >
> > > Howdy folks,
> > >
> > >
> > > ANTLR v4 release is rapidly approaching. The beta of the reference book
> > >
> > > will be out next week and the remaining two or three chapters should
> > appear
> > >
> > > within a month or so afterwards. Sam Harwell and I have been working
> very
> > >
> > > hard on the tool itself and we should have 4.0 ready by the time the
> book
> > >
> > > goes final. In the meantime, 4.0b1 will be available for use with the
> > beta
> > >
> > > book. Oh, and we need to release 3.4.1 before 4.0.
> > >
> > >
> > > I have paid for a new website design for both ANTLR and StringTemplate,
> > >
> > > which looks great. We will continue to use the same wiki software for
> > >
> > > documentation. The current website is generated by a Java server I
> built
> > >
> > > whereas the new one is going to be static so I have less software to
> > >
> > > maintain. In other words,  rather than using some kind of include
> > mechanism
> > >
> > > to get the general look and feel on each page, the new websites will be
> > >
> > > simply static files on the disk.  The current antlr.org content will
> > >
> > > become antlr3.org, leaving the current domain pointing at v4 content.
> > >
> > >
> > > We currently have functionality on the websites to accept new grammars
> > >
> > > and filesharing and articles and so on. Because this is so infrequent,
> I
> > >
> > > think it's reasonable to simply have an HTML form that has an email
> > action
> > >
> > > instead of an HTTP POST. When I get those requests, I can simply add
> them
> > >
> > > to the file on the server. (will that use the user's local mail client
> or
> > >
> > > will it force people to set up mail in their actual browsers before it
> > will
> > >
> > > email me? does anybody know?)
> > >
> > >
> > > On to the grammar repository. Because it's likely we'll want to make
> > >
> > > fixes / updates to existing grammars, I don't think a simple form /
> email
> > >
> > > mechanism is the best solution. Right now, I have to go in and
> overwrite
> > /
> > >
> > > update a number of files for a grammar update. Naturally, this screams
> > for
> > >
> > > a revision control solution. I was thinking that we might as well just
> > use
> > >
> > > github for this so that anybody can add or modify the publicly
> available
> > >
> > > grammars.
> > >
> > >
> > > There are a number of issues with using github for this. First, I would
> > >
> > > not want to create a new repository for each grammar so we would have
> one
> > >
> > > repository holding all grammars. This is pretty coarse granularity.  On
> > the
> > >
> > > other hand, if you just want one grammar, you can download individually
> > >
> > > from github. The second issue is that we would really have to have a
> > single
> > >
> > > license for all grammars in the repository. I would hate for a GPL
> > grammar
> > >
> > > to get its stank on the other grammars. It would confuse people to have
> > >
> > > multiple licenses within a single repository. Thirdly, not everyone is
> > >
> > > comfortable with assembly language?er?I mean git. In that case, people
> > >
> > > could simply mail me a grammar for inclusion. It would only take me a
> > >
> > > second to add it. The fourth problem. We need a clean URI for grammars
> > and
> > >
> > > I propose:
> > >
> > >
> > > http://www.antlr.org/grammars/<name>
> > >
> > >
> > > for the root directory of that project. For example,
> > >
> > >
> > > http://www.antlr.org/grammars/java
> > >
> > >
> > > would point out a directory that contains Java.g4 and may be a test
> > >
> > > program or something.
> > >
> > >
> > > I could easily add a redirect in the tomcat configuration files,
> > >
> > > assuming I can stomach all of that filthy XML, but that does not scale
> > very
> > >
> > > well when people add grammars. Instead, perhaps the best solution is to
> > set
> > >
> > > up a cronjob that pulls from the grammar repository and leaves the
> > grammars
> > >
> > > on antlr.org's disk so that /grammars URI points at that directory.
> That
> > >
> > > way, the URIs would always be up-to-date with the repository and
> without
> > me
> > >
> > > having to do any work. Heh, that just might work.
> > >
> > > http://www.antlr.org/grammars by itself could redirect to the github
> > >
> > > project.
> > >
> > >
> > > Anyway, If you have any thoughts on this stuff, please reply.
> > >
> > >
> > > Terence
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >
> > > Unsubscribe:
> > >
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> > >
> > >
> > >
> > >
> > > --
> > > Mobile : +32 486 899 652
> > > Company website : www.8thcolor.com
> > > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > > Follow me on Twitter : @martinvanaken <
> http://twitter.com/martinvanaken>
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> > >
> > >
> >
> >
> > --
> > Mobile : +32 486 899 652
> > Company website : www.8thcolor.com
> > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Mobile : +32 486 899 652
Company website : www.8thcolor.com
Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>

From ropf at itu.dk  Mon Sep 24 07:58:58 2012
From: ropf at itu.dk (Rolf-Helge Pfeiffer)
Date: Mon, 24 Sep 2012 14:58:58 +0000
Subject: [antlr-interest] Language Integration Survey
Message-ID: <324774E357B75E48908235851010CE2BD8DB02@srv-itu-mbx01.itu.local>

Dear all,

Have you already constructed a language using ANTLR? If so, we would appreciate if you participate in our brief survey on "Language Integration".

Your responses to this survey will be used in a research project, which aims to better support developers working on software systems containing multiple domain-specific languages and general purpose languages.

You will find the survey and further information following the link:
http://www.itu.dk/people/ropf/survey.html


Please excuse me for possibly spamming this group. Please also excuse me in case you consider this message a cross-post. This invitation is sent the following language engineering communities via their corresponding mailing lists or forums: Xtext, EMFText, ANTLR, parboiled, javacc, pyparsing. The reason is to allow for generalization of the survey's results by approaching multiple language engineering communities.


Best regards,
Helge

ropf at itu.dk
Process and System Models Group
IT University of Copenhagen







From list at toolazydogs.com  Mon Sep 24 09:31:51 2012
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Mon, 24 Sep 2012 09:31:51 -0700
Subject: [antlr-interest] Maven plugin for antlr v4
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377BF89E90@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>
	<8802E2F086DC9648BD0585D82AC6377BF89E90@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <4F3613FE-A971-44D4-AB0E-D03519FE9735@toolazydogs.com>

Sonatype offers access to a Nexus server that Open Source projects can use to publish their artifacts.  It's free.


Regards,
Alan

On Sep 22, 2012, at 10:14 PM, Sam Harwell wrote:

> Yes, but it's current in source-only form and not available through the Maven distribution site (I don't know how that part of it works). Hopefully we can get to that part of it soon. :)
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
> Sent: Saturday, September 22, 2012 9:29 PM
> To: Antlr-Interest Antlr.Org
> Subject: [antlr-interest] Maven plugin for antlr v4
> 
> Is there a maven plugin in the works for antler v4?
> 
> 
> Regards,
> Alan
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 


From parrt at cs.usfca.edu  Mon Sep 24 10:52:36 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 24 Sep 2012 10:52:36 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward - Ruby Target ?
In-Reply-To: <CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
Message-ID: <21EF8DEF-740F-478F-88C7-EED136BFD55C@cs.usfca.edu>


On Sep 18, 2012, at 11:33 PM, Martin Van Aken wrote:

> Hello Terence,
> Thanks for the info, this is far better than nothing, and I like the incremental process outlined there. There is still something I'm not sure to understand : the String Template .stg file is used to generate the parser/lexer code for the grammar. But those classes inherit from more general classes in Antlr (in the java version, at least). Are those also generated by the .stg ? 

The string template files just generate code specific to the grammar. Most of the common functionality has been factored out into a runtime library. So Lexer, Parser and so on are all part of the runtime library, not generated by antlr. This is in contrast to, for example, javacc that generates all of the runtime for each grammar. If you have multiple grammars in the same  project, you get duplicates.

:)

T
> 
> In other word, what about the runtime of Antlr, is it an output of the .stg, or is it another part to implement to be able to have a parser running under a given language (let say Ruby).
> 
> Thanks !
> 
> Martin
> 
> On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
> Unfortunately, no one has stepped up to bring the Ruby target up to date. The other bit of bad news is that we really don't have much in the way of how to create a target. just this page:
> 
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
> 
> Ter
> On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
> 
>> Terrence/list,
>> I've the same question about the Ruby target. For what I can see from
>> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it has
>> not move since two years so it is probably lagging behind. Do anyone is
>> still maintaining it ?
>> 
>> If not, I may be interested in trying to update it myself. Any resource for
>> (would be) goal maintener that I could start with ? Anyone that would be
>> interested to contribute (time, advice, test, anything). I may take a look
>> at the python target (that seems to be keeping up well) as a reference
>> (closer to Ruby than Java).
>> 
>> Thanks a lot.
>> 
>> Martin
>> 
>> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com> wrote:
>> 
>>> Ter/list,
>>>   Thanks again for all your efforts.  In terms of other language
>>> targets is there an idea/outline of when they'll be available.  I'm
>>> specifically thinking of the C target.  In a list thread from January
>>> there was the indication that a C++ target was still a while away so any
>>> progress updates?
>>> 
>>> Cheers,
>>> 
>>> 
>>> On 16/09/12 4:36 AM, Terence Parr wrote:
>>>> Howdy folks,
>>>> 
>>>> ANTLR v4 release is rapidly approaching. The beta of the reference book
>>> will be out next week and the remaining two or three chapters should appear
>>> within a month or so afterwards. Sam Harwell and I have been working very
>>> hard on the tool itself and we should have 4.0 ready by the time the book
>>> goes final. In the meantime, 4.0b1 will be available for use with the beta
>>> book. Oh, and we need to release 3.4.1 before 4.0.
>>>> 
>>>> I have paid for a new website design for both ANTLR and StringTemplate,
>>> which looks great. We will continue to use the same wiki software for
>>> documentation. The current website is generated by a Java server I built
>>> whereas the new one is going to be static so I have less software to
>>> maintain. In other words,  rather than using some kind of include mechanism
>>> to get the general look and feel on each page, the new websites will be
>>> simply static files on the disk.  The current antlr.org content will
>>> become antlr3.org, leaving the current domain pointing at v4 content.
>>>> 
>>>> We currently have functionality on the websites to accept new grammars
>>> and filesharing and articles and so on. Because this is so infrequent, I
>>> think it's reasonable to simply have an HTML form that has an email action
>>> instead of an HTTP POST. When I get those requests, I can simply add them
>>> to the file on the server. (will that use the user's local mail client or
>>> will it force people to set up mail in their actual browsers before it will
>>> email me? does anybody know?)
>>>> 
>>>> On to the grammar repository. Because it's likely we'll want to make
>>> fixes / updates to existing grammars, I don't think a simple form / email
>>> mechanism is the best solution. Right now, I have to go in and overwrite /
>>> update a number of files for a grammar update. Naturally, this screams for
>>> a revision control solution. I was thinking that we might as well just use
>>> github for this so that anybody can add or modify the publicly available
>>> grammars.
>>>> 
>>>> There are a number of issues with using github for this. First, I would
>>> not want to create a new repository for each grammar so we would have one
>>> repository holding all grammars. This is pretty coarse granularity.  On the
>>> other hand, if you just want one grammar, you can download individually
>>> from github. The second issue is that we would really have to have a single
>>> license for all grammars in the repository. I would hate for a GPL grammar
>>> to get its stank on the other grammars. It would confuse people to have
>>> multiple licenses within a single repository. Thirdly, not everyone is
>>> comfortable with assembly language?er?I mean git. In that case, people
>>> could simply mail me a grammar for inclusion. It would only take me a
>>> second to add it. The fourth problem. We need a clean URI for grammars and
>>> I propose:
>>>> 
>>>> http://www.antlr.org/grammars/<name>
>>>> 
>>>> for the root directory of that project. For example,
>>>> 
>>>> http://www.antlr.org/grammars/java
>>>> 
>>>> would point out a directory that contains Java.g4 and may be a test
>>> program or something.
>>>> 
>>>> I could easily add a redirect in the tomcat configuration files,
>>> assuming I can stomach all of that filthy XML, but that does not scale very
>>> well when people add grammars. Instead, perhaps the best solution is to set
>>> up a cronjob that pulls from the grammar repository and leaves the grammars
>>> on antlr.org's disk so that /grammars URI points at that directory. That
>>> way, the URIs would always be up-to-date with the repository and without me
>>> having to do any work. Heh, that just might work.
>>> http://www.antlr.org/grammars by itself could redirect to the github
>>> project.
>>>> 
>>>> Anyway, If you have any thoughts on this stuff, please reply.
>>>> 
>>>> Terence
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>> 
>> 
>> 
>> -- 
>> Mobile : +32 486 899 652
>> Company website : www.8thcolor.com
>> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
>> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> 
> -- 
> Mobile : +32 486 899 652
> Company website : www.8thcolor.com
> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> Follow me on Twitter : @martinvanaken
> 
> 


From parrt at cs.usfca.edu  Mon Sep 24 11:13:54 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 24 Sep 2012 11:13:54 -0700
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
	generators
In-Reply-To: <505CC009.9050300@perceptisys.co.uk>
References: <505CC009.9050300@perceptisys.co.uk>
Message-ID: <EC6E1A44-49B5-4652-A2AA-0A0CBF214A56@cs.usfca.edu>


On Sep 21, 2012, at 12:29 PM, Stephen Gaito wrote:

> Ter,
> 
> *Problem:*
> 
> Maybe I missed it, but one of the serious drawbacks I found in using 
> your excellent ANTLR V3, was the inability of cleanly loading a new or 
> slightly altered target (C/C++/Java/...) generator.

All you have to do is place the template files before the standard distribution in your class path. I use a resource loader to get those templates and so we will see your modified version's first. no fuss no muss.

This is also true if you want to alter the CTarget.java file or whatever. Just put your own version first in the class that and it will override the standard one when it loads.

 This will also be true of v4.

 Does this do what you want?

Ter
> 
> If I remember correctly in reading through the Java code for the Tool, 
> the list of the various target generators were hard-coded into the Tool.
> 
> If my memory is correct, to load my own generator I would need to alter 
> your code... which, if I were to open-source my own project, would get 
> seriously messy... with a (potential) proliferation of different forks 
> of ANTLR.  (Or alternatively with a very large number of "pull" requests 
> back into the main project).
> 
> *Request:*
> 
> As the community begins to develop or port targets for the ANTLR v4, it 
> would be nice to have a clean way of developing and deploying targets 
> which exist /outside/ of the official ANTLR4 project.
> 
> *Benefits:*
> 
> This should make maintaining the core ANTLR4 project much easier, and it 
> would allow users of ANTLR v4 more flexibility in their choice of targets.
> 
> For example, from Sam's comments on the "standard" C++ target, this C++ 
> target /might/ make use of "external" dependencies which /might/ 
> preclude the use of a generated grammar inside, for example, the PHP engine.
> 
> If ANTLR v4 allowed externally loadable target generators, then I (for 
> example) might be able to make simple changes to the standard C++ target 
> (or alternatively write my own) so that grammars generated using my 
> generator would be embeddable inside, for example, the PHP engine.
> 
> Then in my (eventually) open-source project I could distribute an 
> additional jar file to be loaded at runtime.  This additional jar file 
> could, cleanly, contain "my" version of the C++ target generator as 
> required by my project.  (Of course I would also provide my C++ target 
> as an un-official but, hopefully,  useful GitHub project).
> 
> *Possible implementation?*
> 
> I know that ANTLR v4 now makes extensive use of Java's reflection 
> mechanisms.  Could you use this reflection mechanism to find externally 
> loadable target generator interfaces?
> 
> Alternatively, could you search for all instances of a suitably named 
> file in the resources to load any external target generator?
> 
> Regards,
> 
> Stephen Gaito
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From martin.vanaken at 8thcolor.com  Mon Sep 24 13:28:38 2012
From: martin.vanaken at 8thcolor.com (Martin Van Aken)
Date: Mon, 24 Sep 2012 22:28:38 +0200
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <21EF8DEF-740F-478F-88C7-EED136BFD55C@cs.usfca.edu>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<21EF8DEF-740F-478F-88C7-EED136BFD55C@cs.usfca.edu>
Message-ID: <CACQyh-VzBARta+Xtd-XgNjfd0OCN0MLxF_Ghntpc0Bx7WUoihg@mail.gmail.com>

Hello again,
Thanks for the clarification. I can assume that to have a target that
works, you need an implementation of the runtime also. I've foud some
documentation about the .stg part, but almost nothing about the runtime.
Any pointer (excepted looking at the java reference) ?

Thanks,

Martin

On 24 September 2012 19:52, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Sep 18, 2012, at 11:33 PM, Martin Van Aken wrote:
>
> > Hello Terence,
> > Thanks for the info, this is far better than nothing, and I like the
> incremental process outlined there. There is still something I'm not sure
> to understand : the String Template .stg file is used to generate the
> parser/lexer code for the grammar. But those classes inherit from more
> general classes in Antlr (in the java version, at least). Are those also
> generated by the .stg ?
>
> The string template files just generate code specific to the grammar. Most
> of the common functionality has been factored out into a runtime library.
> So Lexer, Parser and so on are all part of the runtime library, not
> generated by antlr. This is in contrast to, for example, javacc that
> generates all of the runtime for each grammar. If you have multiple
> grammars in the same  project, you get duplicates.
>
> :)
>
> T
> >
> > In other word, what about the runtime of Antlr, is it an output of the
> .stg, or is it another part to implement to be able to have a parser
> running under a given language (let say Ruby).
> >
> > Thanks !
> >
> > Martin
> >
> > On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Unfortunately, no one has stepped up to bring the Ruby target up to
> date. The other bit of bad news is that we really don't have much in the
> way of how to create a target. just this page:
> >
> >
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
> >
> > Ter
> > On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
> >
> >> Terrence/list,
> >> I've the same question about the Ruby target. For what I can see from
> >> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it
> has
> >> not move since two years so it is probably lagging behind. Do anyone is
> >> still maintaining it ?
> >>
> >> If not, I may be interested in trying to update it myself. Any resource
> for
> >> (would be) goal maintener that I could start with ? Anyone that would be
> >> interested to contribute (time, advice, test, anything). I may take a
> look
> >> at the python target (that seems to be keeping up well) as a reference
> >> (closer to Ruby than Java).
> >>
> >> Thanks a lot.
> >>
> >> Martin
> >>
> >> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com>
> wrote:
> >>
> >>> Ter/list,
> >>>   Thanks again for all your efforts.  In terms of other language
> >>> targets is there an idea/outline of when they'll be available.  I'm
> >>> specifically thinking of the C target.  In a list thread from January
> >>> there was the indication that a C++ target was still a while away so
> any
> >>> progress updates?
> >>>
> >>> Cheers,
> >>>
> >>>
> >>> On 16/09/12 4:36 AM, Terence Parr wrote:
> >>>> Howdy folks,
> >>>>
> >>>> ANTLR v4 release is rapidly approaching. The beta of the reference
> book
> >>> will be out next week and the remaining two or three chapters should
> appear
> >>> within a month or so afterwards. Sam Harwell and I have been working
> very
> >>> hard on the tool itself and we should have 4.0 ready by the time the
> book
> >>> goes final. In the meantime, 4.0b1 will be available for use with the
> beta
> >>> book. Oh, and we need to release 3.4.1 before 4.0.
> >>>>
> >>>> I have paid for a new website design for both ANTLR and
> StringTemplate,
> >>> which looks great. We will continue to use the same wiki software for
> >>> documentation. The current website is generated by a Java server I
> built
> >>> whereas the new one is going to be static so I have less software to
> >>> maintain. In other words,  rather than using some kind of include
> mechanism
> >>> to get the general look and feel on each page, the new websites will be
> >>> simply static files on the disk.  The current antlr.org content will
> >>> become antlr3.org, leaving the current domain pointing at v4 content.
> >>>>
> >>>> We currently have functionality on the websites to accept new grammars
> >>> and filesharing and articles and so on. Because this is so infrequent,
> I
> >>> think it's reasonable to simply have an HTML form that has an email
> action
> >>> instead of an HTTP POST. When I get those requests, I can simply add
> them
> >>> to the file on the server. (will that use the user's local mail client
> or
> >>> will it force people to set up mail in their actual browsers before it
> will
> >>> email me? does anybody know?)
> >>>>
> >>>> On to the grammar repository. Because it's likely we'll want to make
> >>> fixes / updates to existing grammars, I don't think a simple form /
> email
> >>> mechanism is the best solution. Right now, I have to go in and
> overwrite /
> >>> update a number of files for a grammar update. Naturally, this screams
> for
> >>> a revision control solution. I was thinking that we might as well just
> use
> >>> github for this so that anybody can add or modify the publicly
> available
> >>> grammars.
> >>>>
> >>>> There are a number of issues with using github for this. First, I
> would
> >>> not want to create a new repository for each grammar so we would have
> one
> >>> repository holding all grammars. This is pretty coarse granularity.
>  On the
> >>> other hand, if you just want one grammar, you can download individually
> >>> from github. The second issue is that we would really have to have a
> single
> >>> license for all grammars in the repository. I would hate for a GPL
> grammar
> >>> to get its stank on the other grammars. It would confuse people to have
> >>> multiple licenses within a single repository. Thirdly, not everyone is
> >>> comfortable with assembly language?er?I mean git. In that case, people
> >>> could simply mail me a grammar for inclusion. It would only take me a
> >>> second to add it. The fourth problem. We need a clean URI for grammars
> and
> >>> I propose:
> >>>>
> >>>> http://www.antlr.org/grammars/<name>
> >>>>
> >>>> for the root directory of that project. For example,
> >>>>
> >>>> http://www.antlr.org/grammars/java
> >>>>
> >>>> would point out a directory that contains Java.g4 and may be a test
> >>> program or something.
> >>>>
> >>>> I could easily add a redirect in the tomcat configuration files,
> >>> assuming I can stomach all of that filthy XML, but that does not scale
> very
> >>> well when people add grammars. Instead, perhaps the best solution is
> to set
> >>> up a cronjob that pulls from the grammar repository and leaves the
> grammars
> >>> on antlr.org's disk so that /grammars URI points at that directory.
> That
> >>> way, the URIs would always be up-to-date with the repository and
> without me
> >>> having to do any work. Heh, that just might work.
> >>> http://www.antlr.org/grammars by itself could redirect to the github
> >>> project.
> >>>>
> >>>> Anyway, If you have any thoughts on this stuff, please reply.
> >>>>
> >>>> Terence
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >>
> >> --
> >> Mobile : +32 486 899 652
> >> Company website : www.8thcolor.com
> >> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> >> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken
> >
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> >
> > --
> > Mobile : +32 486 899 652
> > Company website : www.8thcolor.com
> > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > Follow me on Twitter : @martinvanaken
> >
> >
>
>


-- 
Mobile : +32 486 899 652
Company website : www.8thcolor.com
Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>

From parrt at cs.usfca.edu  Mon Sep 24 13:31:32 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 24 Sep 2012 13:31:32 -0700
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
	forward - Ruby Target ?
In-Reply-To: <CACQyh-VzBARta+Xtd-XgNjfd0OCN0MLxF_Ghntpc0Bx7WUoihg@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<21EF8DEF-740F-478F-88C7-EED136BFD55C@cs.usfca.edu>
	<CACQyh-VzBARta+Xtd-XgNjfd0OCN0MLxF_Ghntpc0Bx7WUoihg@mail.gmail.com>
Message-ID: <557CFB0B-21C5-4856-8DA2-BD67C1E1B58B@cs.usfca.edu>

Unfortunately, there is no documentation about what exactly needs to be in the runtime. Most people simply look at the list of Java classes and mimic them in their new language.
Ter
On Sep 24, 2012, at 1:28 PM, Martin Van Aken wrote:

> Hello again,
> Thanks for the clarification. I can assume that to have a target that
> works, you need an implementation of the runtime also. I've foud some
> documentation about the .stg part, but almost nothing about the runtime.
> Any pointer (excepted looking at the java reference) ?
> 
> Thanks,
> 
> Martin
> 
> On 24 September 2012 19:52, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
>> 
>> On Sep 18, 2012, at 11:33 PM, Martin Van Aken wrote:
>> 
>>> Hello Terence,
>>> Thanks for the info, this is far better than nothing, and I like the
>> incremental process outlined there. There is still something I'm not sure
>> to understand : the String Template .stg file is used to generate the
>> parser/lexer code for the grammar. But those classes inherit from more
>> general classes in Antlr (in the java version, at least). Are those also
>> generated by the .stg ?
>> 
>> The string template files just generate code specific to the grammar. Most
>> of the common functionality has been factored out into a runtime library.
>> So Lexer, Parser and so on are all part of the runtime library, not
>> generated by antlr. This is in contrast to, for example, javacc that
>> generates all of the runtime for each grammar. If you have multiple
>> grammars in the same  project, you get duplicates.
>> 
>> :)
>> 
>> T
>>> 
>>> In other word, what about the runtime of Antlr, is it an output of the
>> .stg, or is it another part to implement to be able to have a parser
>> running under a given language (let say Ruby).
>>> 
>>> Thanks !
>>> 
>>> Martin
>>> 
>>> On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Unfortunately, no one has stepped up to bring the Ruby target up to
>> date. The other bit of bad news is that we really don't have much in the
>> way of how to create a target. just this page:
>>> 
>>> 
>> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
>>> 
>>> Ter
>>> On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
>>> 
>>>> Terrence/list,
>>>> I've the same question about the Ruby target. For what I can see from
>>>> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it
>> has
>>>> not move since two years so it is probably lagging behind. Do anyone is
>>>> still maintaining it ?
>>>> 
>>>> If not, I may be interested in trying to update it myself. Any resource
>> for
>>>> (would be) goal maintener that I could start with ? Anyone that would be
>>>> interested to contribute (time, advice, test, anything). I may take a
>> look
>>>> at the python target (that seems to be keeping up well) as a reference
>>>> (closer to Ruby than Java).
>>>> 
>>>> Thanks a lot.
>>>> 
>>>> Martin
>>>> 
>>>> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com>
>> wrote:
>>>> 
>>>>> Ter/list,
>>>>>  Thanks again for all your efforts.  In terms of other language
>>>>> targets is there an idea/outline of when they'll be available.  I'm
>>>>> specifically thinking of the C target.  In a list thread from January
>>>>> there was the indication that a C++ target was still a while away so
>> any
>>>>> progress updates?
>>>>> 
>>>>> Cheers,
>>>>> 
>>>>> 
>>>>> On 16/09/12 4:36 AM, Terence Parr wrote:
>>>>>> Howdy folks,
>>>>>> 
>>>>>> ANTLR v4 release is rapidly approaching. The beta of the reference
>> book
>>>>> will be out next week and the remaining two or three chapters should
>> appear
>>>>> within a month or so afterwards. Sam Harwell and I have been working
>> very
>>>>> hard on the tool itself and we should have 4.0 ready by the time the
>> book
>>>>> goes final. In the meantime, 4.0b1 will be available for use with the
>> beta
>>>>> book. Oh, and we need to release 3.4.1 before 4.0.
>>>>>> 
>>>>>> I have paid for a new website design for both ANTLR and
>> StringTemplate,
>>>>> which looks great. We will continue to use the same wiki software for
>>>>> documentation. The current website is generated by a Java server I
>> built
>>>>> whereas the new one is going to be static so I have less software to
>>>>> maintain. In other words,  rather than using some kind of include
>> mechanism
>>>>> to get the general look and feel on each page, the new websites will be
>>>>> simply static files on the disk.  The current antlr.org content will
>>>>> become antlr3.org, leaving the current domain pointing at v4 content.
>>>>>> 
>>>>>> We currently have functionality on the websites to accept new grammars
>>>>> and filesharing and articles and so on. Because this is so infrequent,
>> I
>>>>> think it's reasonable to simply have an HTML form that has an email
>> action
>>>>> instead of an HTTP POST. When I get those requests, I can simply add
>> them
>>>>> to the file on the server. (will that use the user's local mail client
>> or
>>>>> will it force people to set up mail in their actual browsers before it
>> will
>>>>> email me? does anybody know?)
>>>>>> 
>>>>>> On to the grammar repository. Because it's likely we'll want to make
>>>>> fixes / updates to existing grammars, I don't think a simple form /
>> email
>>>>> mechanism is the best solution. Right now, I have to go in and
>> overwrite /
>>>>> update a number of files for a grammar update. Naturally, this screams
>> for
>>>>> a revision control solution. I was thinking that we might as well just
>> use
>>>>> github for this so that anybody can add or modify the publicly
>> available
>>>>> grammars.
>>>>>> 
>>>>>> There are a number of issues with using github for this. First, I
>> would
>>>>> not want to create a new repository for each grammar so we would have
>> one
>>>>> repository holding all grammars. This is pretty coarse granularity.
>> On the
>>>>> other hand, if you just want one grammar, you can download individually
>>>>> from github. The second issue is that we would really have to have a
>> single
>>>>> license for all grammars in the repository. I would hate for a GPL
>> grammar
>>>>> to get its stank on the other grammars. It would confuse people to have
>>>>> multiple licenses within a single repository. Thirdly, not everyone is
>>>>> comfortable with assembly language?er?I mean git. In that case, people
>>>>> could simply mail me a grammar for inclusion. It would only take me a
>>>>> second to add it. The fourth problem. We need a clean URI for grammars
>> and
>>>>> I propose:
>>>>>> 
>>>>>> http://www.antlr.org/grammars/<name>
>>>>>> 
>>>>>> for the root directory of that project. For example,
>>>>>> 
>>>>>> http://www.antlr.org/grammars/java
>>>>>> 
>>>>>> would point out a directory that contains Java.g4 and may be a test
>>>>> program or something.
>>>>>> 
>>>>>> I could easily add a redirect in the tomcat configuration files,
>>>>> assuming I can stomach all of that filthy XML, but that does not scale
>> very
>>>>> well when people add grammars. Instead, perhaps the best solution is
>> to set
>>>>> up a cronjob that pulls from the grammar repository and leaves the
>> grammars
>>>>> on antlr.org's disk so that /grammars URI points at that directory.
>> That
>>>>> way, the URIs would always be up-to-date with the repository and
>> without me
>>>>> having to do any work. Heh, that just might work.
>>>>> http://www.antlr.org/grammars by itself could redirect to the github
>>>>> project.
>>>>>> 
>>>>>> Anyway, If you have any thoughts on this stuff, please reply.
>>>>>> 
>>>>>> Terence
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>> 
>>>> 
>>>> 
>>>> 
>>>> --
>>>> Mobile : +32 486 899 652
>>>> Company website : www.8thcolor.com
>>>> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
>>>> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken
>>> 
>>>> 
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> 
>>> 
>>> --
>>> Mobile : +32 486 899 652
>>> Company website : www.8thcolor.com
>>> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
>>> Follow me on Twitter : @martinvanaken
>>> 
>>> 
>> 
>> 
> 
> 
> -- 
> Mobile : +32 486 899 652
> Company website : www.8thcolor.com
> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stuart at apl.washington.edu  Mon Sep 24 14:07:20 2012
From: stuart at apl.washington.edu (Stuart Maclean)
Date: Mon, 24 Sep 2012 14:07:20 -0700
Subject: [antlr-interest] C grammar question
Message-ID: <5060CB88.9040406@apl.washington.edu>

Hi from a newbie.  I have been using Antlr3 for about 4 days.

First, a quick question.  is the mailing list archive searchable in any 
way??  I suspect not (those MailMan interfaces never seem to be), but 
perhaps I am just not seeing it.

My real question relates to the C grammar, bundled in 
examples-v3/java/C.  If I build it as is and run against the following 
input:

typedef void (*a2)(int i);

it will print that both 'a2' and 'i' are new types.  But only 'a2' is a 
new type here, 'i' should not be seen as a new type.  I can see that the 
way the 'isTypedef' info is being communicated from the 'declaration' 
rule to the 'direct_declarator' rule, but the logic is failing if the 
parser has to visit the

     '('  declarator ')'

branch of the direct_declarator rule. which it does for the input above. 
To suppress 'i' being seen as a new type, I added this action to the 
direct_declarator rule:

     |    '( declarator ')'
             { $declaration::isTypedef=false; }

but it seems like a hack and I am wondering if there is some cleaner way 
to do this.

A further question.  What does this mean (in the same C.g)?

type_id
     :   {isTypeName(input.LT(1).getText())}? IDENTIFIER

Is this a 'pre action'??  If so, what does the '?' mean?  I can't find 
any notes about what this construct represents?

Any help gratefully appreciated.

Stuart

From researcher0x00 at gmail.com  Mon Sep 24 14:25:04 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 24 Sep 2012 17:25:04 -0400
Subject: [antlr-interest] ANTLR v4 status / website functionality moving
 forward - Ruby Target ?
In-Reply-To: <557CFB0B-21C5-4856-8DA2-BD67C1E1B58B@cs.usfca.edu>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<21EF8DEF-740F-478F-88C7-EED136BFD55C@cs.usfca.edu>
	<CACQyh-VzBARta+Xtd-XgNjfd0OCN0MLxF_Ghntpc0Bx7WUoihg@mail.gmail.com>
	<557CFB0B-21C5-4856-8DA2-BD67C1E1B58B@cs.usfca.edu>
Message-ID: <CAN45N13L=78oMzYxpqf8nViOZ02oF8ySWuPNBXOQ9SUqPOd+bg@mail.gmail.com>

When I worked on the C#2 version I literally took the Java source and
commented it all out. Then line by line or procedure by procedure I
recreated it leaving the Java lines as comments in the C# code.

The problem with that was that I could not test the conversion right away
so I created a call graph of the Java code and still using all of the
commented out Java code put in *.cs files used that to work from the ground
up. Obviously that allowed me to do unit test as I moved along and worked a
lot better because it identified logic differences that had to made early
on as opposed to at the end with one big blob of code.

If you do a conversion of the runtime, and have the time, don't make the
mistake I made by not documenting and sharing lessons learned for others.

Eric


On Mon, Sep 24, 2012 at 4:31 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Unfortunately, there is no documentation about what exactly needs to be in
> the runtime. Most people simply look at the list of Java classes and mimic
> them in their new language.
> Ter
> On Sep 24, 2012, at 1:28 PM, Martin Van Aken wrote:
>
> > Hello again,
> > Thanks for the clarification. I can assume that to have a target that
> > works, you need an implementation of the runtime also. I've foud some
> > documentation about the .stg part, but almost nothing about the runtime.
> > Any pointer (excepted looking at the java reference) ?
> >
> > Thanks,
> >
> > Martin
> >
> > On 24 September 2012 19:52, Terence Parr <parrt at cs.usfca.edu> wrote:
> >
> >>
> >> On Sep 18, 2012, at 11:33 PM, Martin Van Aken wrote:
> >>
> >>> Hello Terence,
> >>> Thanks for the info, this is far better than nothing, and I like the
> >> incremental process outlined there. There is still something I'm not
> sure
> >> to understand : the String Template .stg file is used to generate the
> >> parser/lexer code for the grammar. But those classes inherit from more
> >> general classes in Antlr (in the java version, at least). Are those also
> >> generated by the .stg ?
> >>
> >> The string template files just generate code specific to the grammar.
> Most
> >> of the common functionality has been factored out into a runtime
> library.
> >> So Lexer, Parser and so on are all part of the runtime library, not
> >> generated by antlr. This is in contrast to, for example, javacc that
> >> generates all of the runtime for each grammar. If you have multiple
> >> grammars in the same  project, you get duplicates.
> >>
> >> :)
> >>
> >> T
> >>>
> >>> In other word, what about the runtime of Antlr, is it an output of the
> >> .stg, or is it another part to implement to be able to have a parser
> >> running under a given language (let say Ruby).
> >>>
> >>> Thanks !
> >>>
> >>> Martin
> >>>
> >>> On 17 September 2012 00:44, Terence Parr <parrt at cs.usfca.edu> wrote:
> >>> Unfortunately, no one has stepped up to bring the Ruby target up to
> >> date. The other bit of bad news is that we really don't have much in the
> >> way of how to create a target. just this page:
> >>>
> >>>
> >>
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code+generation+target
> >>>
> >>> Ter
> >>> On Sep 16, 2012, at 5:51 AM, Martin Van Aken wrote:
> >>>
> >>>> Terrence/list,
> >>>> I've the same question about the Ruby target. For what I can see from
> >>>> github : https://github.com/antlr/antlr3/tree/master/runtime/Ruby it
> >> has
> >>>> not move since two years so it is probably lagging behind. Do anyone
> is
> >>>> still maintaining it ?
> >>>>
> >>>> If not, I may be interested in trying to update it myself. Any
> resource
> >> for
> >>>> (would be) goal maintener that I could start with ? Anyone that would
> be
> >>>> interested to contribute (time, advice, test, anything). I may take a
> >> look
> >>>> at the python target (that seems to be keeping up well) as a reference
> >>>> (closer to Ruby than Java).
> >>>>
> >>>> Thanks a lot.
> >>>>
> >>>> Martin
> >>>>
> >>>> On 16 September 2012 09:44, Kieran Simpson <kierans777 at gmail.com>
> >> wrote:
> >>>>
> >>>>> Ter/list,
> >>>>>  Thanks again for all your efforts.  In terms of other language
> >>>>> targets is there an idea/outline of when they'll be available.  I'm
> >>>>> specifically thinking of the C target.  In a list thread from January
> >>>>> there was the indication that a C++ target was still a while away so
> >> any
> >>>>> progress updates?
> >>>>>
> >>>>> Cheers,
> >>>>>
> >>>>>
> >>>>> On 16/09/12 4:36 AM, Terence Parr wrote:
> >>>>>> Howdy folks,
> >>>>>>
> >>>>>> ANTLR v4 release is rapidly approaching. The beta of the reference
> >> book
> >>>>> will be out next week and the remaining two or three chapters should
> >> appear
> >>>>> within a month or so afterwards. Sam Harwell and I have been working
> >> very
> >>>>> hard on the tool itself and we should have 4.0 ready by the time the
> >> book
> >>>>> goes final. In the meantime, 4.0b1 will be available for use with the
> >> beta
> >>>>> book. Oh, and we need to release 3.4.1 before 4.0.
> >>>>>>
> >>>>>> I have paid for a new website design for both ANTLR and
> >> StringTemplate,
> >>>>> which looks great. We will continue to use the same wiki software for
> >>>>> documentation. The current website is generated by a Java server I
> >> built
> >>>>> whereas the new one is going to be static so I have less software to
> >>>>> maintain. In other words,  rather than using some kind of include
> >> mechanism
> >>>>> to get the general look and feel on each page, the new websites will
> be
> >>>>> simply static files on the disk.  The current antlr.org content will
> >>>>> become antlr3.org, leaving the current domain pointing at v4
> content.
> >>>>>>
> >>>>>> We currently have functionality on the websites to accept new
> grammars
> >>>>> and filesharing and articles and so on. Because this is so
> infrequent,
> >> I
> >>>>> think it's reasonable to simply have an HTML form that has an email
> >> action
> >>>>> instead of an HTTP POST. When I get those requests, I can simply add
> >> them
> >>>>> to the file on the server. (will that use the user's local mail
> client
> >> or
> >>>>> will it force people to set up mail in their actual browsers before
> it
> >> will
> >>>>> email me? does anybody know?)
> >>>>>>
> >>>>>> On to the grammar repository. Because it's likely we'll want to make
> >>>>> fixes / updates to existing grammars, I don't think a simple form /
> >> email
> >>>>> mechanism is the best solution. Right now, I have to go in and
> >> overwrite /
> >>>>> update a number of files for a grammar update. Naturally, this
> screams
> >> for
> >>>>> a revision control solution. I was thinking that we might as well
> just
> >> use
> >>>>> github for this so that anybody can add or modify the publicly
> >> available
> >>>>> grammars.
> >>>>>>
> >>>>>> There are a number of issues with using github for this. First, I
> >> would
> >>>>> not want to create a new repository for each grammar so we would have
> >> one
> >>>>> repository holding all grammars. This is pretty coarse granularity.
> >> On the
> >>>>> other hand, if you just want one grammar, you can download
> individually
> >>>>> from github. The second issue is that we would really have to have a
> >> single
> >>>>> license for all grammars in the repository. I would hate for a GPL
> >> grammar
> >>>>> to get its stank on the other grammars. It would confuse people to
> have
> >>>>> multiple licenses within a single repository. Thirdly, not everyone
> is
> >>>>> comfortable with assembly language?er?I mean git. In that case,
> people
> >>>>> could simply mail me a grammar for inclusion. It would only take me a
> >>>>> second to add it. The fourth problem. We need a clean URI for
> grammars
> >> and
> >>>>> I propose:
> >>>>>>
> >>>>>> http://www.antlr.org/grammars/<name>
> >>>>>>
> >>>>>> for the root directory of that project. For example,
> >>>>>>
> >>>>>> http://www.antlr.org/grammars/java
> >>>>>>
> >>>>>> would point out a directory that contains Java.g4 and may be a test
> >>>>> program or something.
> >>>>>>
> >>>>>> I could easily add a redirect in the tomcat configuration files,
> >>>>> assuming I can stomach all of that filthy XML, but that does not
> scale
> >> very
> >>>>> well when people add grammars. Instead, perhaps the best solution is
> >> to set
> >>>>> up a cronjob that pulls from the grammar repository and leaves the
> >> grammars
> >>>>> on antlr.org's disk so that /grammars URI points at that directory.
> >> That
> >>>>> way, the URIs would always be up-to-date with the repository and
> >> without me
> >>>>> having to do any work. Heh, that just might work.
> >>>>> http://www.antlr.org/grammars by itself could redirect to the github
> >>>>> project.
> >>>>>>
> >>>>>> Anyway, If you have any thoughts on this stuff, please reply.
> >>>>>>
> >>>>>> Terence
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> >>>>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>
> >>>>
> >>>>
> >>>>
> >>>> --
> >>>> Mobile : +32 486 899 652
> >>>> Company website : www.8thcolor.com
> >>>> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> >>>> Follow me on Twitter : @martinvanaken <
> http://twitter.com/martinvanaken
> >>>
> >>>>
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>>
> >>>
> >>>
> >>> --
> >>> Mobile : +32 486 899 652
> >>> Company website : www.8thcolor.com
> >>> Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> >>> Follow me on Twitter : @martinvanaken
> >>>
> >>>
> >>
> >>
> >
> >
> > --
> > Mobile : +32 486 899 652
> > Company website : www.8thcolor.com
> > Contact me on LinkedIn : http://www.linkedin.com/in/martinvanaken
> > Follow me on Twitter : @martinvanaken <http://twitter.com/martinvanaken>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From apalala at gmail.com  Mon Sep 24 16:10:53 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Mon, 24 Sep 2012 18:40:53 -0430
Subject: [antlr-interest] Semantically guided parsing
Message-ID: <CAN1YFWt-H_emqCJLzTdVo4wMKD_tph88WFthRXzPxF-MWtBAZA@mail.gmail.com>

I have to parse hierarchy of descriptions in which each level of the
hierarchy is indicated by an integer.

1 FIRST LEVEL
2 SECOND LEVEL
2 AGAIN SECOND
1 BACK TO FIRST

I've tried to have the parser pick up the hierarchy with semantic
predicates, but I get failures from the predicates instead of simple rule
rejection (the target is Python):

description[d]
    :
    level[d] text
   (description[$d+1])*


level[d]
    :
    { self.input.LA(1) == INTEGER and int(self.input.LT(1).getText()) ==
$d}?
    INTEGER
    ;

"rule level failed predicate: { self.input.LA(1) == INTEGER and int(
self.input.LT(1).getText()) == $d}?"

Any ideas?

-- 
Juancarlo *A?ez*

From apalala at gmail.com  Mon Sep 24 16:40:14 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Mon, 24 Sep 2012 19:10:14 -0430
Subject: [antlr-interest] C grammar question
In-Reply-To: <5060CB88.9040406@apl.washington.edu>
References: <5060CB88.9040406@apl.washington.edu>
Message-ID: <CAN1YFWu1gQ8EzhmanjVO7OUYDiLSjSpsBm+5K3PbbfkO4nPkEQ@mail.gmail.com>

     :   {isTypeName(input.LT(1).getText())}? IDENTIFIER
>

That is a semantic predicate.

https://wincent.com/wiki/ANTLR_predicates

-- 
Juancarlo *A?ez*

From apalala at gmail.com  Mon Sep 24 16:45:47 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Mon, 24 Sep 2012 19:15:47 -0430
Subject: [antlr-interest] Semantically guided parsing
In-Reply-To: <CAN1YFWt-H_emqCJLzTdVo4wMKD_tph88WFthRXzPxF-MWtBAZA@mail.gmail.com>
References: <CAN1YFWt-H_emqCJLzTdVo4wMKD_tph88WFthRXzPxF-MWtBAZA@mail.gmail.com>
Message-ID: <CAN1YFWuP1Ph+EYavm54jT=yO3DWbNXbrvsEuLRASpdVTw6_6gg@mail.gmail.com>

I solved it by moving the semantic check to the higher-level rule.

-- JA

On Mon, Sep 24, 2012 at 6:40 PM, Juancarlo A?ez <apalala at gmail.com> wrote:

>
> I have to parse hierarchy of descriptions in which each level of the
> hierarchy is indicated by an integer.
>
> 1 FIRST LEVEL
> 2 SECOND LEVEL
> 2 AGAIN SECOND
> 1 BACK TO FIRST
>
> I've tried to have the parser pick up the hierarchy with semantic
> predicates, but I get failures from the predicates instead of simple rule
> rejection (the target is Python):
>
> description[d]
>     :
>     level[d] text
>    (description[$d+1])*
>
>
> level[d]
>     :
>     { self.input.LA(1) == INTEGER and int(self.input.LT(1).getText()) ==
> $d}?
>     INTEGER
>     ;
>
> "rule level failed predicate: { self.input.LA(1) == INTEGER and int(
> self.input.LT(1).getText()) == $d}?"
>
> Any ideas?
>
> --
> Juancarlo *A?ez*
>



-- 
Juancarlo *A?ez*

From nilopaim at gmail.com  Mon Sep 24 19:48:53 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 24 Sep 2012 23:48:53 -0300
Subject: [antlr-interest] Tree rewrite rule problem
Message-ID: <002a01cd9ac8$5332d770$f9988650$@com>

Hi, all.

 

I have the following rule on my grammar:

 

expr

  :

  i1=ID

  (

    compOp boolOp

      ->

        ^(BOOLEXPR $i1 compOp boolOp)

    | (NOT)? NUMERIC

      ->

        ^(BOOLEXPR $i1 NOT? NUMERIC)

    |

      ->

        ^(BOOLEXPR $i1)

  )

  ;

 

Problem: the parsing  is done correctly, but the resulting tree contains
only the imaginary node BOOLEXPR, with no children. If I put a
System.out.println as action for the alternatives, It shows me correctly,
but anyway, the tree is corrupt. 

 

Any hints?

 

TIA.

 

Nilo - Brazil


From jimi at temporal-wave.com  Tue Sep 25 01:43:44 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 25 Sep 2012 16:43:44 +0800
Subject: [antlr-interest] Maven plugin for antlr v4
In-Reply-To: <4F3613FE-A971-44D4-AB0E-D03519FE9735@toolazydogs.com>
References: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>
	<8802E2F086DC9648BD0585D82AC6377BF89E90@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<4F3613FE-A971-44D4-AB0E-D03519FE9735@toolazydogs.com>
Message-ID: <125eb11201dc2142c22b73792bc1a216@mail.gmail.com>

We already have this set up.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
Sent: Tuesday, September 25, 2012 12:32 AM
To: Sam Harwell
Cc: Antlr-Interest Antlr.Org
Subject: Re: [antlr-interest] Maven plugin for antlr v4

Sonatype offers access to a Nexus server that Open Source projects can use
to publish their artifacts.  It's free.


Regards,
Alan

On Sep 22, 2012, at 10:14 PM, Sam Harwell wrote:

> Yes, but it's current in source-only form and not available through the
Maven distribution site (I don't know how that part of it works).
Hopefully we can get to that part of it soon. :)
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
> Sent: Saturday, September 22, 2012 9:29 PM
> To: Antlr-Interest Antlr.Org
> Subject: [antlr-interest] Maven plugin for antlr v4
>
> Is there a maven plugin in the works for antler v4?
>
>
> Regards,
> Alan
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From apalala at gmail.com  Tue Sep 25 07:37:09 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Tue, 25 Sep 2012 10:07:09 -0430
Subject: [antlr-interest] Tree rewrite rule problem
In-Reply-To: <002a01cd9ac8$5332d770$f9988650$@com>
References: <002a01cd9ac8$5332d770$f9988650$@com>
Message-ID: <CAN1YFWvSyQHiQsO6kGZn5vhPZZLC-bORouskqgAyNsqiCSsiaQ@mail.gmail.com>

NIlo,

For me, tree rewriting works in mysterious ways...

Replace the $i1 by ID and everything should be fine.

At other times when you need help with disambiguation, create "dummy" rules
that you can reference from within other rules:

expre: .... ;

expre1: expre;

-- Juanca

On Mon, Sep 24, 2012 at 10:18 PM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Hi, all.
>
>
>
> I have the following rule on my grammar:
>
>
>
> expr
>
>   :
>
>   i1=ID
>
>   (
>
>     compOp boolOp
>
>       ->
>
>         ^(BOOLEXPR $i1 compOp boolOp)
>
>     | (NOT)? NUMERIC
>
>       ->
>
>         ^(BOOLEXPR $i1 NOT? NUMERIC)
>
>     |
>
>       ->
>
>         ^(BOOLEXPR $i1)
>
>   )
>
>   ;
>
>
>
> Problem: the parsing  is done correctly, but the resulting tree contains
> only the imaginary node BOOLEXPR, with no children. If I put a
> System.out.println as action for the alternatives, It shows me correctly,
> but anyway, the tree is corrupt.
>
>
>
> Any hints?
>
>
>
> TIA.
>
>
>
> Nilo - Brazil
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From list at toolazydogs.com  Tue Sep 25 07:45:20 2012
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 25 Sep 2012 07:45:20 -0700
Subject: [antlr-interest] Maven plugin for antlr v4
In-Reply-To: <125eb11201dc2142c22b73792bc1a216@mail.gmail.com>
References: <5F05D417-4D96-4F7B-9E05-F9B1D5488F97@toolazydogs.com>
	<8802E2F086DC9648BD0585D82AC6377BF89E90@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<4F3613FE-A971-44D4-AB0E-D03519FE9735@toolazydogs.com>
	<125eb11201dc2142c22b73792bc1a216@mail.gmail.com>
Message-ID: <58B315BD-3AE2-4E0F-A6FD-731A37A6BFE8@toolazydogs.com>

Great!  What's the ETA for publication of the artifacts?

On Sep 25, 2012, at 1:43 AM, Jim Idle wrote:

> We already have this set up.
> 
> Jim
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
> Sent: Tuesday, September 25, 2012 12:32 AM
> To: Sam Harwell
> Cc: Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] Maven plugin for antlr v4
> 
> Sonatype offers access to a Nexus server that Open Source projects can use
> to publish their artifacts.  It's free.
> 
> 
> Regards,
> Alan
> 
> On Sep 22, 2012, at 10:14 PM, Sam Harwell wrote:
> 
>> Yes, but it's current in source-only form and not available through the
> Maven distribution site (I don't know how that part of it works).
> Hopefully we can get to that part of it soon. :)
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
>> Sent: Saturday, September 22, 2012 9:29 PM
>> To: Antlr-Interest Antlr.Org
>> Subject: [antlr-interest] Maven plugin for antlr v4
>> 
>> Is there a maven plugin in the works for antler v4?
>> 
>> 
>> Regards,
>> Alan
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jdmitchell at gmail.com  Tue Sep 25 12:40:21 2012
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Tue, 25 Sep 2012 12:40:21 -0700
Subject: [antlr-interest] antlr-interest Digest, Vol 94, Issue 25
In-Reply-To: <mailman.1.1348599602.25886.antlr-interest@antlr.org>
References: <mailman.1.1348599602.25886.antlr-interest@antlr.org>
Message-ID: <76B36F60-1277-4F36-9A4C-DC514B57E029@gmail.com>


On Sep 25, 2012, at 12:00 , antlr-interest-request at antlr.org wrote:

> From: Stuart Maclean <stuart at apl.washington.edu>
> Subject: [antlr-interest] C grammar question
> To: antlr-interest at antlr.org
> Message-ID: <5060CB88.9040406 at apl.washington.edu>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Hi from a newbie.  I have been using Antlr3 for about 4 days.
> 
> First, a quick question.  is the mailing list archive searchable in any 
> way??  I suspect not (those MailMan interfaces never seem to be), but 
> perhaps I am just not seeing it.

http://antlr.markmail.org/


> My real question relates to the C grammar, bundled in 
> examples-v3/java/C.  If I build it as is and run against the following 
> input:
> 
> typedef void (*a2)(int i);
> 
> it will print that both 'a2' and 'i' are new types.  But only 'a2' is a 
> new type here, 'i' should not be seen as a new type.  I can see that the 
> way the 'isTypedef' info is being communicated from the 'declaration' 
> rule to the 'direct_declarator' rule, but the logic is failing if the 
> parser has to visit the
> 
>     '('  declarator ')'
> 
> branch of the direct_declarator rule. which it does for the input above. 
> To suppress 'i' being seen as a new type, I added this action to the 
> direct_declarator rule:
> 
>     |    '( declarator ')'
>             { $declaration::isTypedef=false; }
> 
> but it seems like a hack and I am wondering if there is some cleaner way 
> to do this.

At the top of that grammar is a note from Ter about the simplified use of a symbol table for dealing with types so it's not too much of a surprise that it's over permissive in this case.

> A further question.  What does this mean (in the same C.g)?
> 
> type_id
>     :   {isTypeName(input.LT(1).getText())}? IDENTIFIER
> 
> Is this a 'pre action'??  If so, what does the '?' mean?  I can't find 
> any notes about what this construct represents?

That's a "semantic predicate". Check out the antlr docs for more info.

Cheers,
John


From jmurray at aerotech.com  Tue Sep 25 12:49:33 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Tue, 25 Sep 2012 15:49:33 -0400
Subject: [antlr-interest] Composite Grammar [C Target]
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>

Hello,

I'm trying to use composite grammars, and can't seem to get off of the
ground. Basically, I have two separate parsers. One preprocesses the
source, and the other compiles it. Naturally, they have a few tokens in
common, such as a newline, and I'd prefer to only define that token
once. This sounds to me like exactly what composite grammars were
designed to do. So I made a CommonTokens.g:

lexer grammar CommonTokens;

NEWLINE_ :  ('\r'? '\n');

Then in my grammar, I added an import:

grammar AerobasicPreprocessor;
import CommonTokens;

options { language=C;  }

line : SOMEOTHERTOKENS_ NEWLINE_;
...


When I run the ANTLR tool on this grammar, I get some less than helpful
errors:

error(100): AerobasicPreprocessor.g:4:1: syntax error: antlr:
org.antlr.runtime.EarlyExitException
error(150):  grammar file AerobasicPreprocessor.g has no rules
error(100): AerobasicPreprocessor.g:0:1: syntax error: assign.types:
org.antlr.runtime.EarlyExitException
org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 326:1
required (...)+ loop did not match anything at input ';'

What am I doing wrong?

Thanks,

- Justin

From apalala at gmail.com  Tue Sep 25 13:36:52 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Tue, 25 Sep 2012 16:06:52 -0430
Subject: [antlr-interest] Composite Grammar [C Target]
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <CAN1YFWvg6L2bA0zVM75+aH=Ed+wvnF_JTonA5MzSE5L8DGfZ_Q@mail.gmail.com>

Justin,

I think it is a bug. Just add this to CommonTokens.g:

nothing
    :
    ;

-- Juancarlo

On Tue, Sep 25, 2012 at 3:19 PM, Justin Murray <jmurray at aerotech.com> wrote:

> Hello,
>
> I'm trying to use composite grammars, and can't seem to get off of the
> ground. Basically, I have two separate parsers. One preprocesses the
> source, and the other compiles it. Naturally, they have a few tokens in
> common, such as a newline, and I'd prefer to only define that token
> once. This sounds to me like exactly what composite grammars were
> designed to do. So I made a CommonTokens.g:
>
> lexer grammar CommonTokens;
>
> NEWLINE_ :  ('\r'? '\n');
>
> Then in my grammar, I added an import:
>
> grammar AerobasicPreprocessor;
> import CommonTokens;
>
> options { language=C;  }
>
> line : SOMEOTHERTOKENS_ NEWLINE_;
> ...
>
>
> When I run the ANTLR tool on this grammar, I get some less than helpful
> errors:
>
> error(100): AerobasicPreprocessor.g:4:1: syntax error: antlr:
> org.antlr.runtime.EarlyExitException
> error(150):  grammar file AerobasicPreprocessor.g has no rules
> error(100): AerobasicPreprocessor.g:0:1: syntax error: assign.types:
> org.antlr.runtime.EarlyExitException
> org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 326:1
> required (...)+ loop did not match anything at input ';'
>
> What am I doing wrong?
>
> Thanks,
>
> - Justin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From nilopaim at gmail.com  Tue Sep 25 14:06:32 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Tue, 25 Sep 2012 18:06:32 -0300
Subject: [antlr-interest] RES:  Tree rewrite rule problem
In-Reply-To: <CAN1YFWvSyQHiQsO6kGZn5vhPZZLC-bORouskqgAyNsqiCSsiaQ@mail.gmail.com>
References: <002a01cd9ac8$5332d770$f9988650$@com>
	<CAN1YFWvSyQHiQsO6kGZn5vhPZZLC-bORouskqgAyNsqiCSsiaQ@mail.gmail.com>
Message-ID: <006301cd9b61$a5fac320$f1f04960$@com>

Hi, Juanca.

 

Mysterious ways indeed... you are right!

 

Replacing $i1 by ID made the trick. And breaking some rules in sub-rules, the tree generated becomes what I initially expected.

 

Thanks a lot for your assistance!

 

Best regards,

Nilo

 

De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
Enviada em: ter?a-feira, 25 de setembro de 2012 11:37
Para: Nilo Roberto C Paim
Cc: antlr ANTLR
Assunto: Re: [antlr-interest] Tree rewrite rule problem

 

NIlo,

 

For me, tree rewriting works in mysterious ways...

 

Replace the $i1 by ID and everything should be fine.

 

At other times when you need help with disambiguation, create "dummy" rules that you can reference from within other rules:

 

expre: .... ;

 

expre1: expre;

 

-- Juanca 

On Mon, Sep 24, 2012 at 10:18 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:

Hi, all.



I have the following rule on my grammar:



expr

  :

  i1=ID

  (

    compOp boolOp

      ->

        ^(BOOLEXPR $i1 compOp boolOp)

    | (NOT)? NUMERIC

      ->

        ^(BOOLEXPR $i1 NOT? NUMERIC)

    |

      ->

        ^(BOOLEXPR $i1)

  )

  ;



Problem: the parsing  is done correctly, but the resulting tree contains
only the imaginary node BOOLEXPR, with no children. If I put a
System.out.println as action for the alternatives, It shows me correctly,
but anyway, the tree is corrupt.



Any hints?



TIA.



Nilo - Brazil


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address





 

-- 
Juancarlo A?ez


From jmurray at aerotech.com  Tue Sep 25 14:18:30 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Tue, 25 Sep 2012 17:18:30 -0400
Subject: [antlr-interest] Composite Grammar [C Target]
In-Reply-To: <CAN1YFWvg6L2bA0zVM75+aH=Ed+wvnF_JTonA5MzSE5L8DGfZ_Q@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
	<CAN1YFWvg6L2bA0zVM75+aH=Ed+wvnF_JTonA5MzSE5L8DGfZ_Q@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0BB71724@EXCH-VIRTUAL.aerotechad.com>

Juancarlo,

Thank you for the suggestion, but that just results in a new error (which at least makes some sense):

error(103): CommonTokens.g:57:1: parser rule nothing not allowed in lexer

Any other ideas?

- Justin

From: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] On Behalf Of Juancarlo A?ez
Sent: Tuesday, September 25, 2012 4:37 PM
To: Justin Murray
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Composite Grammar [C Target]

Justin,

I think it is a bug. Just add this to CommonTokens.g:

nothing?
? ? :?
? ? ;

-- Juancarlo

On Tue, Sep 25, 2012 at 3:19 PM, Justin Murray <jmurray at aerotech.com> wrote:
Hello,

I'm trying to use composite grammars, and can't seem to get off of the
ground. Basically, I have two separate parsers. One preprocesses the
source, and the other compiles it. Naturally, they have a few tokens in
common, such as a newline, and I'd prefer to only define that token
once. This sounds to me like exactly what composite grammars were
designed to do. So I made a CommonTokens.g:

lexer grammar CommonTokens;

NEWLINE_ : ?('\r'? '\n');

Then in my grammar, I added an import:

grammar AerobasicPreprocessor;
import CommonTokens;

options { language=C; ?}

line : SOMEOTHERTOKENS_ NEWLINE_;
...


When I run the ANTLR tool on this grammar, I get some less than helpful
errors:

error(100): AerobasicPreprocessor.g:4:1: syntax error: antlr:
org.antlr.runtime.EarlyExitException
error(150): ?grammar file AerobasicPreprocessor.g has no rules
error(100): AerobasicPreprocessor.g:0:1: syntax error: assign.types:
org.antlr.runtime.EarlyExitException
org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 326:1
required (...)+ loop did not match anything at input ';'

What am I doing wrong?

Thanks,

- Justin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




-- 
Juancarlo A?ez

From jimi at temporal-wave.com  Tue Sep 25 16:50:56 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 26 Sep 2012 07:50:56 +0800
Subject: [antlr-interest] Composite Grammar [C Target]
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <1f9e640d055e542058a0f4c80440b22c@mail.gmail.com>

To use common tokens, take the .tokens file generated by one of the
grammars, merge it with the other .token files, then use tokenVocab
option. You need to keep the token numbers contiguous and unique.

JIm

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Murray
Sent: Wednesday, September 26, 2012 3:50 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Composite Grammar [C Target]

Hello,

I'm trying to use composite grammars, and can't seem to get off of the
ground. Basically, I have two separate parsers. One preprocesses the
source, and the other compiles it. Naturally, they have a few tokens in
common, such as a newline, and I'd prefer to only define that token once.
This sounds to me like exactly what composite grammars were designed to
do. So I made a CommonTokens.g:

lexer grammar CommonTokens;

NEWLINE_ :  ('\r'? '\n');

Then in my grammar, I added an import:

grammar AerobasicPreprocessor;
import CommonTokens;

options { language=C;  }

line : SOMEOTHERTOKENS_ NEWLINE_;
...


When I run the ANTLR tool on this grammar, I get some less than helpful
errors:

error(100): AerobasicPreprocessor.g:4:1: syntax error: antlr:
org.antlr.runtime.EarlyExitException
error(150):  grammar file AerobasicPreprocessor.g has no rules
error(100): AerobasicPreprocessor.g:0:1: syntax error: assign.types:
org.antlr.runtime.EarlyExitException
org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 326:1
required (...)+ loop did not match anything at input ';'

What am I doing wrong?

Thanks,

- Justin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Tue Sep 25 16:56:47 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Sep 2012 16:56:47 -0700
Subject: [antlr-interest] Added grammar repository
Message-ID: <3C994F5A-A445-42AA-8626-BD6D0C9E720F@cs.usfca.edu>

Hi. I added a grammar repository for v4 grammars:

https://github.com/antlr/grammars-v4

Note that, unlike v3, most of the grammars won't have actions in them and so we don't need to separate by target language.

Ter

From kierans777 at gmail.com  Wed Sep 26 01:54:39 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Wed, 26 Sep 2012 18:54:39 +1000
Subject: [antlr-interest] C grammar question
In-Reply-To: <5060CB88.9040406@apl.washington.edu>
References: <5060CB88.9040406@apl.washington.edu>
Message-ID: <5062C2CF.3060200@gmail.com>

To search the mailing list I use the "site" filter on Google.  You can 
either use the "Advanced search" option from the settings wheel on the 
right hand side or type 
"site:http://www.antlr.org/pipermail/antlr-interest/" into the search 
box before your query.

As for getting up to speed with Antlr, I found the Antlr Reference book 
the easiest way to get into Antlr so pick yourself up a copy (no I don't 
get any commission from Terence for saying that ;) ).

Cheers,


On 25/09/12 7:07 AM, Stuart Maclean wrote:
> Hi from a newbie. I have been using Antlr3 for about 4 days.
>
> First, a quick question. is the mailing list archive searchable in any
> way?? I suspect not (those MailMan interfaces never seem to be), but
> perhaps I am just not seeing it.
>
> My real question relates to the C grammar, bundled in
> examples-v3/java/C. If I build it as is and run against the following
> input:
>
> typedef void (*a2)(int i);
>
> it will print that both 'a2' and 'i' are new types. But only 'a2' is a
> new type here, 'i' should not be seen as a new type. I can see that the
> way the 'isTypedef' info is being communicated from the 'declaration'
> rule to the 'direct_declarator' rule, but the logic is failing if the
> parser has to visit the
>
> '(' declarator ')'
>
> branch of the direct_declarator rule. which it does for the input above.
> To suppress 'i' being seen as a new type, I added this action to the
> direct_declarator rule:
>
> | '( declarator ')'
> { $declaration::isTypedef=false; }
>
> but it seems like a hack and I am wondering if there is some cleaner way
> to do this.
>
> A further question. What does this mean (in the same C.g)?
>
> type_id
> : {isTypeName(input.LT(1).getText())}? IDENTIFIER
>
> Is this a 'pre action'?? If so, what does the '?' mean? I can't find any
> notes about what this construct represents?
>
> Any help gratefully appreciated.
>
> Stuart
>

From jimi at temporal-wave.com  Wed Sep 26 02:40:20 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 26 Sep 2012 17:40:20 +0800
Subject: [antlr-interest] C grammar question
In-Reply-To: <5062C2CF.3060200@gmail.com>
References: <5060CB88.9040406@apl.washington.edu> <5062C2CF.3060200@gmail.com>
Message-ID: <22059f692cdb47eeb7b92a3254983a98@mail.gmail.com>

>From the "support" page you can search the archives directly. The URL it
is using is:

http://antlr.markmail.org

(Though it uses the longer URI on the support page as antlr.markmail.org
was a later addition to markmail). This search is much better than the
Google site filter.

Jim


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kieran Simpson
Sent: Wednesday, September 26, 2012 4:55 PM
To: Stuart Maclean
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C grammar question

To search the mailing list I use the "site" filter on Google.  You can
either use the "Advanced search" option from the settings wheel on the
right hand side or type
"site:http://www.antlr.org/pipermail/antlr-interest/" into the search box
before your query.

As for getting up to speed with Antlr, I found the Antlr Reference book
the easiest way to get into Antlr so pick yourself up a copy (no I don't
get any commission from Terence for saying that ;) ).

Cheers,


On 25/09/12 7:07 AM, Stuart Maclean wrote:
> Hi from a newbie. I have been using Antlr3 for about 4 days.
>
> First, a quick question. is the mailing list archive searchable in any
> way?? I suspect not (those MailMan interfaces never seem to be), but
> perhaps I am just not seeing it.
>
> My real question relates to the C grammar, bundled in
> examples-v3/java/C. If I build it as is and run against the following
> input:
>
> typedef void (*a2)(int i);
>
> it will print that both 'a2' and 'i' are new types. But only 'a2' is a
> new type here, 'i' should not be seen as a new type. I can see that
> the way the 'isTypedef' info is being communicated from the
'declaration'
> rule to the 'direct_declarator' rule, but the logic is failing if the
> parser has to visit the
>
> '(' declarator ')'
>
> branch of the direct_declarator rule. which it does for the input above.
> To suppress 'i' being seen as a new type, I added this action to the
> direct_declarator rule:
>
> | '( declarator ')'
> { $declaration::isTypedef=false; }
>
> but it seems like a hack and I am wondering if there is some cleaner
> way to do this.
>
> A further question. What does this mean (in the same C.g)?
>
> type_id
> : {isTypeName(input.LT(1).getText())}? IDENTIFIER
>
> Is this a 'pre action'?? If so, what does the '?' mean? I can't find
> any notes about what this construct represents?
>
> Any help gratefully appreciated.
>
> Stuart
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From biboudis at gmail.com  Wed Sep 26 04:12:05 2012
From: biboudis at gmail.com (Aggelos Biboudis)
Date: Wed, 26 Sep 2012 14:12:05 +0300
Subject: [antlr-interest] How an alternative rule can emit code
 conditionally on the type of the parent node?
Message-ID: <CAHLSyCnJFpoav3uJiGCTr-_-HNFX+a19O1rzgNfgrZpjfT9dmQ@mail.gmail.com>

Dear all,

I am using the C grammar with rewrite option on. I would like to know if it
is possible for my alternative rule (after the "->"), to emit code
depending on the type of the parent node. I want to rewrite the token
buffer in-place (following the book for source-to-source translations when
performing slight modifications/instrumentation) only in compound
statements. My intention is to emit a preamble after the first "{" only if
the compound statement originates from a selection, iteration or jump
statement. For example: I would like to rewrite the if (expr) {
statement1;} to if (expr) { my_statement; statement1;}. Is that conditional
rewriting possible, following the token-buffer edit way?

I am using the usual ANSI C
grammar<http://www.antlr.org/grammar/1153358328744/C.g>and following
the definitive ANTLR reference.

Any help appreciated.
Aggelos B.

From jmurray at aerotech.com  Wed Sep 26 06:05:14 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Wed, 26 Sep 2012 09:05:14 -0400
Subject: [antlr-interest] Composite Grammar [C Target]
In-Reply-To: <1f9e640d055e542058a0f4c80440b22c@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B0BB716F8@EXCH-VIRTUAL.aerotechad.com>
	<1f9e640d055e542058a0f4c80440b22c@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0BB717A2@EXCH-VIRTUAL.aerotechad.com>

Hi Jim,

How does that work exactly? If a combined grammar uses the tokenVocab
option, can it still define additional tokens of its own? Where does the
implementation of the shared lexer rule go in this case? In just one of
the grammars, or in both (, or in a third independent grammar file)?

I still need to have two independent lexers, because the grammar is
quite different for each. I only want to share a handful of common
tokens, so that I can reduce duplicate code.

Thanks,

- Justin

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, September 25, 2012 7:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Composite Grammar [C Target]

To use common tokens, take the .tokens file generated by one of the
grammars, merge it with the other .token files, then use tokenVocab
option. You need to keep the token numbers contiguous and unique.

JIm

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Murray
Sent: Wednesday, September 26, 2012 3:50 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Composite Grammar [C Target]

Hello,

I'm trying to use composite grammars, and can't seem to get off of the
ground. Basically, I have two separate parsers. One preprocesses the
source, and the other compiles it. Naturally, they have a few tokens in
common, such as a newline, and I'd prefer to only define that token
once.
This sounds to me like exactly what composite grammars were designed to
do. So I made a CommonTokens.g:

lexer grammar CommonTokens;

NEWLINE_ :  ('\r'? '\n');

Then in my grammar, I added an import:

grammar AerobasicPreprocessor;
import CommonTokens;

options { language=C;  }

line : SOMEOTHERTOKENS_ NEWLINE_;
...


When I run the ANTLR tool on this grammar, I get some less than helpful
errors:

error(100): AerobasicPreprocessor.g:4:1: syntax error: antlr:
org.antlr.runtime.EarlyExitException
error(150):  grammar file AerobasicPreprocessor.g has no rules
error(100): AerobasicPreprocessor.g:0:1: syntax error: assign.types:
org.antlr.runtime.EarlyExitException
org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 326:1
required (...)+ loop did not match anything at input ';'

What am I doing wrong?

Thanks,

- Justin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From biboudis at gmail.com  Wed Sep 26 06:05:47 2012
From: biboudis at gmail.com (Aggelos Biboudis)
Date: Wed, 26 Sep 2012 16:05:47 +0300
Subject: [antlr-interest] How an alternative rule can emit code
 conditionally on the type of the parent node?
In-Reply-To: <CAHLSyCnJFpoav3uJiGCTr-_-HNFX+a19O1rzgNfgrZpjfT9dmQ@mail.gmail.com>
References: <CAHLSyCnJFpoav3uJiGCTr-_-HNFX+a19O1rzgNfgrZpjfT9dmQ@mail.gmail.com>
Message-ID: <CAHLSyCk-9j0GG_1x6S-2HsFNXC23QdrTmj9cciOSizHCR9-mBw@mail.gmail.com>

It seems dynamic scoping is the solution to this.

Thx,
Aggelos B.

On Wed, Sep 26, 2012 at 2:12 PM, Aggelos Biboudis <biboudis at gmail.com>wrote:

> Dear all,
>
> I am using the C grammar with rewrite option on. I would like to know if
> it is possible for my alternative rule (after the "->"), to emit code
> depending on the type of the parent node. I want to rewrite the token
> buffer in-place (following the book for source-to-source translations when
> performing slight modifications/instrumentation) only in compound
> statements. My intention is to emit a preamble after the first "{" only if
> the compound statement originates from a selection, iteration or jump
> statement. For example: I would like to rewrite the if (expr) {
> statement1;} to if (expr) { my_statement; statement1;}. Is that conditional
> rewriting possible, following the token-buffer edit way?
>
> I am using the usual ANSI C grammar<http://www.antlr.org/grammar/1153358328744/C.g>and following the definitive ANTLR reference.
>
> Any help appreciated.
> Aggelos B.
>

From stephen at perceptisys.co.uk  Wed Sep 26 08:29:51 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Wed, 26 Sep 2012 16:29:51 +0100
Subject: [antlr-interest] V4 Feature Request: Externally loadable target
 generators
In-Reply-To: <EC6E1A44-49B5-4652-A2AA-0A0CBF214A56@cs.usfca.edu>
References: <505CC009.9050300@perceptisys.co.uk>
	<EC6E1A44-49B5-4652-A2AA-0A0CBF214A56@cs.usfca.edu>
Message-ID: <50631F6F.40609@perceptisys.co.uk>

Ter,

In order to answer your question, I went and re-read your code.

Indeed what already exists does exactly what I was asking for.

You are very far sighted in your design, many thanks!

Alas this is a case for reading the code as documentation.  (Or did I 
miss the wiki page on how to write external targets?)

So I think, from a logistical perspective, that it would be good to keep 
all but the "standard" Java target out of the main antlr/antlr4 
repository.  This both decouples their development and provides 
definitive documentation on how to roll your own.  However, this is for 
the future....

Again, many thanks for a well designed project.

Regards,

Stephen Gaito

On 24/09/12 19:13, Terence Parr wrote:
> On Sep 21, 2012, at 12:29 PM, Stephen Gaito wrote:
>
>> Ter,
>>
>> *Problem:*
>>
>> Maybe I missed it, but one of the serious drawbacks I found in using
>> your excellent ANTLR V3, was the inability of cleanly loading a new or
>> slightly altered target (C/C++/Java/...) generator.
> All you have to do is place the template files before the standard distribution in your class path. I use a resource loader to get those templates and so we will see your modified version's first. no fuss no muss.
>
> This is also true if you want to alter the CTarget.java file or whatever. Just put your own version first in the class that and it will override the standard one when it loads.
>
>   This will also be true of v4.
>
>   Does this do what you want?
>
> Ter
>> If I remember correctly in reading through the Java code for the Tool,
>> the list of the various target generators were hard-coded into the Tool.
>>
>> If my memory is correct, to load my own generator I would need to alter
>> your code... which, if I were to open-source my own project, would get
>> seriously messy... with a (potential) proliferation of different forks
>> of ANTLR.  (Or alternatively with a very large number of "pull" requests
>> back into the main project).
>>
>> *Request:*
>>
>> As the community begins to develop or port targets for the ANTLR v4, it
>> would be nice to have a clean way of developing and deploying targets
>> which exist /outside/ of the official ANTLR4 project.
>>
>> *Benefits:*
>>
>> This should make maintaining the core ANTLR4 project much easier, and it
>> would allow users of ANTLR v4 more flexibility in their choice of targets.
>>
>> For example, from Sam's comments on the "standard" C++ target, this C++
>> target /might/ make use of "external" dependencies which /might/
>> preclude the use of a generated grammar inside, for example, the PHP engine.
>>
>> If ANTLR v4 allowed externally loadable target generators, then I (for
>> example) might be able to make simple changes to the standard C++ target
>> (or alternatively write my own) so that grammars generated using my
>> generator would be embeddable inside, for example, the PHP engine.
>>
>> Then in my (eventually) open-source project I could distribute an
>> additional jar file to be loaded at runtime.  This additional jar file
>> could, cleanly, contain "my" version of the C++ target generator as
>> required by my project.  (Of course I would also provide my C++ target
>> as an un-official but, hopefully,  useful GitHub project).
>>
>> *Possible implementation?*
>>
>> I know that ANTLR v4 now makes extensive use of Java's reflection
>> mechanisms.  Could you use this reflection mechanism to find externally
>> loadable target generator interfaces?
>>
>> Alternatively, could you search for all instances of a suitably named
>> file in the resources to load any external target generator?
>>
>> Regards,
>>
>> Stephen Gaito
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglasgodfrey at gmail.com  Wed Sep 26 09:41:41 2012
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Wed, 26 Sep 2012 12:41:41 -0400
Subject: [antlr-interest] How an alternative rule can emit code
 conditionally on the type of the parent node?
In-Reply-To: <CAHLSyCk-9j0GG_1x6S-2HsFNXC23QdrTmj9cciOSizHCR9-mBw@mail.gmail.com>
Message-ID: <CC88A7B3.1DC8E%douglasgodfrey@gmail.com>

Pass the type of the parent node as a parameter to the rule and
1)	use syntactic or semantic predicates to change the parse based on the
parent type
or 
2)	use the parent type to change the actions that generate code or symbol
table entries
or
3)	use the parent type to change the emitted text via string templates



On 9/26/12 9:05 AM, "Aggelos Biboudis" <biboudis at gmail.com> wrote:

>It seems dynamic scoping is the solution to this.
>
>Thx,
>Aggelos B.
>
>On Wed, Sep 26, 2012 at 2:12 PM, Aggelos Biboudis
><biboudis at gmail.com>wrote:
>
>> Dear all,
>>
>> I am using the C grammar with rewrite option on. I would like to know if
>> it is possible for my alternative rule (after the "->"), to emit code
>> depending on the type of the parent node. I want to rewrite the token
>> buffer in-place (following the book for source-to-source translations
>>when
>> performing slight modifications/instrumentation) only in compound
>> statements. My intention is to emit a preamble after the first "{" only
>>if
>> the compound statement originates from a selection, iteration or jump
>> statement. For example: I would like to rewrite the if (expr) {
>> statement1;} to if (expr) { my_statement; statement1;}. Is that
>>conditional
>> rewriting possible, following the token-buffer edit way?
>>
>> I am using the usual ANSI C
>>grammar<http://www.antlr.org/grammar/1153358328744/C.g>and following the
>>definitive ANTLR reference.
>>
>> Any help appreciated.
>> Aggelos B.
>>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From nilopaim at gmail.com  Wed Sep 26 09:56:14 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Wed, 26 Sep 2012 13:56:14 -0300
Subject: [antlr-interest] RES:  Dangling ELSE on Cobol
In-Reply-To: <CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
Message-ID: <008501cd9c07$de05d240$9a1176c0$@com>

Hi, all.

 

Does anyone knows how is this supposed to be in Antlr V4? The ?=>? gave me syntax error?

 

No, I?ve not buy the book yet, but I intend to do soon?

 

TIA,

Nilo - Brazil

 

De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
Enviada em: sexta-feira, 21 de setembro de 2012 14:11
Para: Nilo Roberto C Paim
Cc: antlr ANTLR
Assunto: Re: [antlr-interest] Dangling ELSE on Cobol

 

Nilo,

 

It's a lot of lookahead, but it solves your problem:

 

command :

    ifCmd

    | 'INIT'

    | 'MOVE'

    ;

 

ifCmd:

    'IF' 'EXPRE' ((command)=>command)+ 

    (

        ('ELSE')=> 'ELSE' ((command)=>command)+ 

    |

        ()

    )

    ;

 

The ambiguity warning were saying that ANTLR didn't know to which nesting level to add the next "command". The lookaheads tell it to be greedy and match them against the closest IF or ELSE.

 

Cheers,

 

-- Juanca

 

On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:

Hi, folks.

I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser Generator
3.4 Jul 19, 2011 11:35:12. actually).

I'm stuck with the old dangling ELSE problem. Here the relevant piece of
code of my grammar that shows me the problem:


        command :
                ifCmd
                |       initializeCmd
                |       moveCmd
                |       openCmd
                ;

        ifCmd:
                        IF expr command+ ( (ELSE)=> ELSE command+)?
                ;


I cannot put a terminator on the commands 'cause commands in Cobol may end
or with a '.' or with the following command. This is true including the
ifCmd itself.

The code above shows me the following messages:

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:13:
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "IF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "MOVE" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "OPEN" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?

warning(200): /SuperCobol/src/SC.g:229:38:
Decision can match input such as "INITIALIZE" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> IF expr command+ ( (ELSE)=> ELSE command+)?


8 warnings

Please, any hints?

Thanks in advance,
Nilo
Brazil


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address





 

-- 
Juancarlo A?ez


From jquesada at us.es  Wed Sep 26 10:17:29 2012
From: jquesada at us.es (jquesada)
Date: Wed, 26 Sep 2012 10:17:29 -0700 (PDT)
Subject: [antlr-interest] Antlr3c / Tokenization of big files
Message-ID: <1348679849274-7578903.post@n2.nabble.com>

Hi everybody:

I've been using Antlr3c for the design of a language specification and a
global platform for natural language engineering during the last few months.
Everything is really nice (I come from the lex/yacc world ... and derived).

But I'm catched at the following point:

If I use the language model with small examples everything goes fine, but if
I use very large dictionaries (I'm trying at this moment with a dictionary
containing one million words), the system cracks.

The segmentation fault is produced exactly in the newPoolToken function of
the antlr3c library, although I suspects the real problem is that the memory
is exhausted and in fact is a problem of memory corruption.

I've read that antlr tries to tokenize the whole input before applying
syntactic rules, which makes sense with the behaviour I'm tracing.

Is is possible to deactivate or modify the complete pre-tokenization?

Regards,




--
View this message in context: http://antlr.1301665.n2.nabble.com/Antlr3c-Tokenization-of-big-files-tp7578903.html
Sent from the ANTLR mailing list archive at Nabble.com.

From stephen at perceptisys.co.uk  Wed Sep 26 10:49:37 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Wed, 26 Sep 2012 18:49:37 +0100
Subject: [antlr-interest] Additional patches to C runtime
In-Reply-To: <1A3E1BE2-D78F-4720-9B98-EDCCE15D5BB7@lischke-online.de>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
	<505CCF12.5000802@perceptisys.co.uk>
	<505CE2DA.9020204@perceptisys.co.uk>
	<3613AF36-A4E2-4582-81F1-824344F0D5FD@lischke-online.de>
	<50631FC7.1000809@perceptisys.co.uk>
	<1A3E1BE2-D78F-4720-9B98-EDCCE15D5BB7@lischke-online.de>
Message-ID: <50634031.30305@perceptisys.co.uk>

Mike,
> I'm also curious how the v4 target differs from the v3 target as this directly determines if we can use v4 when it comes out. The new features sound really cool so I'm eager to use them.

The way ANTLR v4 integrates our own target specific code with the code 
generated from the grammar has completely changed.

This change in how the code is integrated has allowed Terence to remove 
AST grammars.... it is now replaced with the better structured object 
oriented code itself.  This is the correct direction for the future, but 
it means that our existing grammars (especially any AST grammars) will 
need to be heavily re-factored/re-written.

So, alas, the ANTLR v3 C target will not work (with out a lot of work) 
with the ANTLR v4 system ;-(

The v3 C target is too specific to the v3 system, and, I would argue, we 
really do need to move to C++ rather than straight C.

While Sam Harwell has suggested he will produce a C++ target for v4, he 
has not said how long this might take.  I suspect that Sam has a few 
other tasks in his pipeline which take priority over a C++ target.

I am looking at how hard it might be to do a quick (and very dirty) 
"hack" of a C++ target for v4.  Alas, I should start using my ANTLR 
based tool rather than build tools to build tools.... so I am not sure I 
can take on a v4 C++ target (even a "quick" and dirty hack) ;-(

Regards,

Stephen Gaito


On 26/09/12 17:03, Mike Lischke wrote:
> Hey Stefen,
>
>> Wonderful!
>>
>> I had a look at it yesterday and it looks good, I will certainly make use of your patches (if nothing else).
>
> Hopefully Ter merges the changes soon. I'm also curious how the v4 target differs from the v3 target as this directly determines if we can use v4 when it comes out. The new features sound really cool so I'm eager to use them.
>
> Mike


From darren at darrenduncan.net  Wed Sep 26 11:21:32 2012
From: darren at darrenduncan.net (Darren Duncan)
Date: Wed, 26 Sep 2012 11:21:32 -0700
Subject: [antlr-interest] Language Integration Survey
In-Reply-To: <324774E357B75E48908235851010CE2BD8DB02@srv-itu-mbx01.itu.local>
References: <324774E357B75E48908235851010CE2BD8DB02@srv-itu-mbx01.itu.local>
Message-ID: <506347AC.9040909@darrenduncan.net>

You should also be looking at http://www.parrot.org/ which is all about what 
you're speaking of, supporting projects with components written in multiple 
programming languages, both general-purpose and domain-specific.  I didn't see 
them on the list of groups, and Parrot is a solid decade old. -- Darren Duncan

Rolf-Helge Pfeiffer wrote:
> Have you already constructed a language using ANTLR? If so, we would appreciate if you participate in our brief survey on "Language Integration".
> 
> Your responses to this survey will be used in a research project, which aims to better support developers working on software systems containing multiple domain-specific languages and general purpose languages.
> 
> You will find the survey and further information following the link:
> http://www.itu.dk/people/ropf/survey.html
> 
> Please excuse me for possibly spamming this group. Please also excuse me in case you consider this message a cross-post. This invitation is sent the following language engineering communities via their corresponding mailing lists or forums: Xtext, EMFText, ANTLR, parboiled, javacc, pyparsing. The reason is to allow for generalization of the survey's results by approaching multiple language engineering communities.



From stephen at perceptisys.co.uk  Wed Sep 26 12:13:40 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Wed, 26 Sep 2012 20:13:40 +0100
Subject: [antlr-interest] Additional patches to C runtime
In-Reply-To: <50634031.30305@perceptisys.co.uk>
References: <6ACB3E5B-D454-4ADA-A5BB-534D7C5C712D@cs.usfca.edu>
	<505B0CCC.5040809@gmail.com> <505B1014.70207@perceptisys.co.uk>
	<ED8AF1C1-F54A-4C6B-83AE-D7AC5AACE000@lischke-online.de>
	<505CCF12.5000802@perceptisys.co.uk>
	<505CE2DA.9020204@perceptisys.co.uk>
	<3613AF36-A4E2-4582-81F1-824344F0D5FD@lischke-online.de>
	<50631FC7.1000809@perceptisys.co.uk>
	<1A3E1BE2-D78F-4720-9B98-EDCCE15D5BB7@lischke-online.de>
	<50634031.30305@perceptisys.co.uk>
Message-ID: <506353E4.3010807@perceptisys.co.uk>

Mike, and the list,

I see that I have to slightly correct my previous statements.

ANTLR v4 does have embedded actions so v3 grammars might not have to be 
as heavily re-factored as I suggested... however in my own heavily 
mulit-lingual project (Java, C, Ruby, JavaScript, PHP, ...) embedded 
actions have been a real pain, and I for one, want to avoid any embedded 
actions.

However, AST grammars no longer exist, so we will have to heavily 
re-code any AST grammars from v3 for any v4 port....

Regards,

Stephen Gaito

On 26/09/12 18:49, Stephen Gaito wrote:
> Mike,
>> I'm also curious how the v4 target differs from the v3 target as this directly determines if we can use v4 when it comes out. The new features sound really cool so I'm eager to use them.
> The way ANTLR v4 integrates our own target specific code with the code
> generated from the grammar has completely changed.
>
> This change in how the code is integrated has allowed Terence to remove
> AST grammars.... it is now replaced with the better structured object
> oriented code itself.  This is the correct direction for the future, but
> it means that our existing grammars (especially any AST grammars) will
> need to be heavily re-factored/re-written.
>
> So, alas, the ANTLR v3 C target will not work (with out a lot of work)
> with the ANTLR v4 system ;-(
>
> The v3 C target is too specific to the v3 system, and, I would argue, we
> really do need to move to C++ rather than straight C.
>
> While Sam Harwell has suggested he will produce a C++ target for v4, he
> has not said how long this might take.  I suspect that Sam has a few
> other tasks in his pipeline which take priority over a C++ target.
>
> I am looking at how hard it might be to do a quick (and very dirty)
> "hack" of a C++ target for v4.  Alas, I should start using my ANTLR
> based tool rather than build tools to build tools.... so I am not sure I
> can take on a v4 C++ target (even a "quick" and dirty hack) ;-(
>
> Regards,
>
> Stephen Gaito
>
>
> On 26/09/12 17:03, Mike Lischke wrote:
>> Hey Stefen,
>>
>>> Wonderful!
>>>
>>> I had a look at it yesterday and it looks good, I will certainly make use of your patches (if nothing else).
>> Hopefully Ter merges the changes soon. I'm also curious how the v4 target differs from the v3 target as this directly determines if we can use v4 when it comes out. The new features sound really cool so I'm eager to use them.
>>
>> Mike
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stuart at apl.washington.edu  Wed Sep 26 12:55:57 2012
From: stuart at apl.washington.edu (Stuart Maclean)
Date: Wed, 26 Sep 2012 12:55:57 -0700
Subject: [antlr-interest] Info extraction, C grammar
Message-ID: <50635DCD.1040807@apl.washington.edu>

I have the C.g grammar for Antlr able to parse some C code I have.  I 
now want to extract function signatures.  So given input

int f(char c);

I want to extract

return type = int

param list = one param, whose type is 'char' and whose name is 'c'.  The 
end goal after extraction is to output more C code. Of course C's syntax 
can be gruesome to parse, so from the declaration

void (*f(int i ))(int);

I want to extract "f is the function name.  Its sole parameter is of 
type int and is called i, and its return type is void (*)(int)".

I am not sure how to go about this. Do I need AST and tree grammars,or 
templates?  Given my intended generation of C source code, it seems that 
templates would be useful?  But given the complexity of the C language 
and hence its grammar, it also seems like tree walking will be needed.

I have looked at examples-v3/java/Cminus.g and associated files and can 
see how the outer rule (function in that case) can set up scopes for 
nested rules, but am not sure if this is the way to go.

For debug and general education, I have been using the -debug option and 
printing out the parse tree. In the worst case I could walk this (large) 
string by hand, pulling out nodes of interest, but my inkling is that 
AST and/or templates are the 'right' way to do this??

Any help gratefully appreciated.

stu

From parrt at cs.usfca.edu  Wed Sep 26 16:15:35 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Sep 2012 16:15:35 -0700
Subject: [antlr-interest] StringTemplate 4.0.6 maintenance release
Message-ID: <99C7740B-3E2A-48BF-ACE4-4F882F17C814@cs.usfca.edu>

Hi, 4.0.6 ST (java impl) released:

http://www.stringtemplate.org/download.html

This is a bug fix release.

	? STRawGroupDir problem and ST("template") issue. When there are no formal args for template t and you map t across some values, t implicitly gets arg "it". E.g., "$names:bold()$" and bold as "<b>$it$</b>".
	? Fixed https://github.com/antlr/stringtemplate4/issues/5
	? Made fields in the error messages public

Terence

From jimi at temporal-wave.com  Wed Sep 26 18:13:04 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 27 Sep 2012 09:13:04 +0800
Subject: [antlr-interest] Antlr3c / Tokenization of big files
In-Reply-To: <1348679849274-7578903.post@n2.nabble.com>
References: <1348679849274-7578903.post@n2.nabble.com>
Message-ID: <8707928be0d269d7b6fbb9de41cbec1c@mail.gmail.com>

You will need to partition the input. Find a logical place to split it,
parse in pieces but keep your symbol tables and so on in tact.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of jquesada
Sent: Thursday, September 27, 2012 1:17 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr3c / Tokenization of big files

Hi everybody:

I've been using Antlr3c for the design of a language specification and a
global platform for natural language engineering during the last few
months.
Everything is really nice (I come from the lex/yacc world ... and
derived).

But I'm catched at the following point:

If I use the language model with small examples everything goes fine, but
if I use very large dictionaries (I'm trying at this moment with a
dictionary containing one million words), the system cracks.

The segmentation fault is produced exactly in the newPoolToken function of
the antlr3c library, although I suspects the real problem is that the
memory is exhausted and in fact is a problem of memory corruption.

I've read that antlr tries to tokenize the whole input before applying
syntactic rules, which makes sense with the behaviour I'm tracing.

Is is possible to deactivate or modify the complete pre-tokenization?

Regards,




--
View this message in context:
http://antlr.1301665.n2.nabble.com/Antlr3c-Tokenization-of-big-files-tp757
8903.html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From apalala at gmail.com  Wed Sep 26 19:06:24 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Wed, 26 Sep 2012 21:36:24 -0430
Subject: [antlr-interest] Antlr3c / Tokenization of big files
In-Reply-To: <8707928be0d269d7b6fbb9de41cbec1c@mail.gmail.com>
References: <1348679849274-7578903.post@n2.nabble.com>
	<8707928be0d269d7b6fbb9de41cbec1c@mail.gmail.com>
Message-ID: <CAN1YFWt_kb26yfvR3aVDpNFkf6_55d_uX0OrkU6EVDgumCHy7Q@mail.gmail.com>

On Wed, Sep 26, 2012 at 8:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> You will need to partition the input. Find a logical place to split it,
> parse in pieces but keep your symbol tables and so on in tact.
>

I bumped against the limits of ANTLR3/Java, with a very large grammar.

Finding a reasonable way to split the grammar solved the problem.

-- 
Juancarlo *A?ez*

From cummings at kjchome.homeip.net  Wed Sep 26 19:38:13 2012
From: cummings at kjchome.homeip.net (Kevin Cummings)
Date: Wed, 26 Sep 2012 22:38:13 -0400
Subject: [antlr-interest] RES:  Dangling ELSE on Cobol
In-Reply-To: <008501cd9c07$de05d240$9a1176c0$@com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
Message-ID: <18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>

I don't think you need it at all.  Just remove the => and everything before it.

--
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232
(http://www.linuxcounter.net/)


On Sep 26, 2012, at 12:56, "Nilo Roberto C Paim" <nilopaim at gmail.com> wrote:

> Hi, all.
> 
> 
> 
> Does anyone knows how is this supposed to be in Antlr V4? The ?=>? gave me syntax error?
> 
> 
> 
> No, I?ve not buy the book yet, but I intend to do soon?
> 
> 
> 
> TIA,
> 
> Nilo - Brazil
> 
> 
> 
> De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
> Enviada em: sexta-feira, 21 de setembro de 2012 14:11
> Para: Nilo Roberto C Paim
> Cc: antlr ANTLR
> Assunto: Re: [antlr-interest] Dangling ELSE on Cobol
> 
> 
> 
> Nilo,
> 
> 
> 
> It's a lot of lookahead, but it solves your problem:
> 
> 
> 
> command :
> 
>    ifCmd
> 
>    | 'INIT'
> 
>    | 'MOVE'
> 
>    ;
> 
> 
> 
> ifCmd:
> 
>    'IF' 'EXPRE' ((command)=>command)+ 
> 
>    (
> 
>        ('ELSE')=> 'ELSE' ((command)=>command)+ 
> 
>    |
> 
>        ()
> 
>    )
> 
>    ;
> 
> 
> 
> The ambiguity warning were saying that ANTLR didn't know to which nesting level to add the next "command". The lookaheads tell it to be greedy and match them against the closest IF or ELSE.
> 
> 
> 
> Cheers,
> 
> 
> 
> -- Juanca
> 
> 
> 
> On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:
> 
> Hi, folks.
> 
> I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser Generator
> 3.4 Jul 19, 2011 11:35:12. actually).
> 
> I'm stuck with the old dangling ELSE problem. Here the relevant piece of
> code of my grammar that shows me the problem:
> 
> 
>        command :
>                ifCmd
>                |       initializeCmd
>                |       moveCmd
>                |       openCmd
>                ;
> 
>        ifCmd:
>                        IF expr command+ ( (ELSE)=> ELSE command+)?
>                ;
> 
> 
> I cannot put a terminator on the commands 'cause commands in Cobol may end
> or with a '.' or with the following command. This is true including the
> ifCmd itself.
> 
> The code above shows me the following messages:
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "IF" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "MOVE" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "OPEN" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "IF" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "MOVE" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "OPEN" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> 
> 8 warnings
> 
> Please, any hints?
> 
> Thanks in advance,
> Nilo
> Brazil
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> 
> 
> 
> 
> -- 
> Juancarlo A?ez
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From wolfgang at haemmer.net  Thu Sep 27 00:14:04 2012
From: wolfgang at haemmer.net (=?ISO-8859-1?Q?wolfgang_h=E4mmer?=)
Date: Thu, 27 Sep 2012 09:14:04 +0200
Subject: [antlr-interest] Cannot find lexer rule
Message-ID: <CAJbG4KBTdwKFXJraKW5Cfcn51O3FcbsO6YACcGNEdVks2bop4g@mail.gmail.com>

Dear all,

I have got an irritating problem with a very simple grammar. May be I can't
see the forest because I am standing at a tree ;-)

Here my grammar: (it is an excerpt)

grammar SRC_REP_FILE;

options {
    language=Java;
    backtrack=true;
    memoize=true;
    output=AST;
}

start_rule
    :
    'PUT' SQUARED_BRACKED_EXPRESSION
    ;

SQUARED_BRACKED_EXPRESSION
    :
    '[' ~('[')* ']'
    ;

WS    :
    (' '| '\r' | '\t' | '\n')   {$channel=HIDDEN;}
    ;


Here my input:

      PUT [<TR>]


And here the results:

line 3:0 mismatched character '<EOF>' expecting ']'
line 3:0 missing SQUARED_BRACKED_EXPRESSION at '<EOF>'


What I am trying to do is to parse an expression like


      PUT
        [
<HTML>
  <HEAD>
    <TITLE>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
FALSE, TOP.PAR_COMPO_ID)]</TITLE>
    [ATS_TEST_REP.CSS]
  </HEAD>
  <BODY>
    <H1>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, FALSE,
TOP.PAR_COMPO_ID)]</H1>
    <TABLE>
      <TR>
        <TH CLASS="MODULE">MODULE</TH>
        <TH CLASS="COMPO">COMPO</TH>
        <TH CLASS="TC">TEST CASE</TH>
        <TH CLASS="CNT">TEST CASE/STEP #</TH>
      </TR>
        ]


in a code where the '[' and ']' occur in other places. I would like to hide
the lexer rule

SQUARED_BRACKED_EXPRESSION
    :
    '[' ~('[')* ']'
    ;

from the rest of the grammer and call it explicitely from a parser rule like

put_statement
    :
    PUT SQUARED_BRACKED_EXPRESSION
    ;

The problem is that I cannot use a 'fragment' as 'fragment' lexer rules can
only be called from other lexer rules.

From gbonnema at xs4all.nl  Thu Sep 27 01:14:56 2012
From: gbonnema at xs4all.nl (Guus Bonnema)
Date: Thu, 27 Sep 2012 10:14:56 +0200
Subject: [antlr-interest] Cannot find lexer rule
In-Reply-To: <CAJbG4KBTdwKFXJraKW5Cfcn51O3FcbsO6YACcGNEdVks2bop4g@mail.gmail.com>
References: <CAJbG4KBTdwKFXJraKW5Cfcn51O3FcbsO6YACcGNEdVks2bop4g@mail.gmail.com>
Message-ID: <20120927101456.3469e9b1@mahatma>

On Thu, 27 Sep 2012 09:14:04 +0200
wolfgang h?mmer <wolfgang at haemmer.net> wrote:

> Dear all,
> 
> I have got an irritating problem with a very simple grammar. May be I can't
> see the forest because I am standing at a tree ;-)
> 

Hi Wolfgang,

The way you defined your expression is not clear to me.
From your example I gather that bracketed expression can be nested.

But you cannot do it that way. You gobble up everything that is not equal to
the opening bracket, including the closing bracket. And nesting seems to be out
of the question too.

Looks like you need a grammar something like:

S : 'PUT' br-expr

br-expr : '[' expr ']'

expr : <some other things> br-expr <other things>

Would that be more like what you want?
Hope this helps.

Guus.

> Here my grammar: (it is an excerpt)
> 
> grammar SRC_REP_FILE;
> 
> options {
>     language=Java;
>     backtrack=true;
>     memoize=true;
>     output=AST;
> }
> 
> start_rule
>     :
>     'PUT' SQUARED_BRACKED_EXPRESSION
>     ;
> 
> SQUARED_BRACKED_EXPRESSION
>     :
>     '[' ~('[')* ']'
>     ;
> 
> WS    :
>     (' '| '\r' | '\t' | '\n')   {$channel=HIDDEN;}
>     ;
> 
> 
> Here my input:
> 
>       PUT [<TR>]
> 
> 
> And here the results:
> 
> line 3:0 mismatched character '<EOF>' expecting ']'
> line 3:0 missing SQUARED_BRACKED_EXPRESSION at '<EOF>'
> 
> 
> What I am trying to do is to parse an expression like
> 
> 
>       PUT
>         [
> <HTML>
>   <HEAD>
>     <TITLE>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
> FALSE, TOP.PAR_COMPO_ID)]</TITLE>
>     [ATS_TEST_REP.CSS]
>   </HEAD>
>   <BODY>
>     <H1>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, FALSE,
> TOP.PAR_COMPO_ID)]</H1>
>     <TABLE>
>       <TR>
>         <TH CLASS="MODULE">MODULE</TH>
>         <TH CLASS="COMPO">COMPO</TH>
>         <TH CLASS="TC">TEST CASE</TH>
>         <TH CLASS="CNT">TEST CASE/STEP #</TH>
>       </TR>
>         ]
> 
> 
> in a code where the '[' and ']' occur in other places. I would like to hide
> the lexer rule
> 
> SQUARED_BRACKED_EXPRESSION
>     :
>     '[' ~('[')* ']'
>     ;
> 
> from the rest of the grammer and call it explicitely from a parser rule like
> 
> put_statement
>     :
>     PUT SQUARED_BRACKED_EXPRESSION
>     ;
> 
> The problem is that I cannot use a 'fragment' as 'fragment' lexer rules can
> only be called from other lexer rules.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Sep 27 03:37:30 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 27 Sep 2012 18:37:30 +0800
Subject: [antlr-interest] Cannot find lexer rule
In-Reply-To: <CAJbG4KBTdwKFXJraKW5Cfcn51O3FcbsO6YACcGNEdVks2bop4g@mail.gmail.com>
References: <CAJbG4KBTdwKFXJraKW5Cfcn51O3FcbsO6YACcGNEdVks2bop4g@mail.gmail.com>
Message-ID: <-8037102478952517151@unknownmsgid>

The issue is that this is in fact a far from trivial problem from a
grammar point of view. You will really need to hand code this. Trigger
the lexer with '[' then embed code to parse the HTML, work out how
many characters that is, input.consume() that many characters, look
for the ] you could use an island grammar to parse the HTML, but that
is non trivial and there are already some good free HTML parsers out
there.

You might find that you don't actually need an ANTLR grammar at all.

Jim

On Sep 27, 2012, at 15:14, "wolfgang h?mmer" <wolfgang at haemmer.net> wrote:

> Dear all,
>
> I have got an irritating problem with a very simple grammar. May be I can't
> see the forest because I am standing at a tree ;-)
>
> Here my grammar: (it is an excerpt)
>
> grammar SRC_REP_FILE;
>
> options {
>    language=Java;
>    backtrack=true;
>    memoize=true;
>    output=AST;
> }
>
> start_rule
>    :
>    'PUT' SQUARED_BRACKED_EXPRESSION
>    ;
>
> SQUARED_BRACKED_EXPRESSION
>    :
>    '[' ~('[')* ']'
>    ;
>
> WS    :
>    (' '| '\r' | '\t' | '\n')   {$channel=HIDDEN;}
>    ;
>
>
> Here my input:
>
>      PUT [<TR>]
>
>
> And here the results:
>
> line 3:0 mismatched character '<EOF>' expecting ']'
> line 3:0 missing SQUARED_BRACKED_EXPRESSION at '<EOF>'
>
>
> What I am trying to do is to parse an expression like
>
>
>      PUT
>        [
> <HTML>
>  <HEAD>
>    <TITLE>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
> FALSE, TOP.PAR_COMPO_ID)]</TITLE>
>    [ATS_TEST_REP.CSS]
>  </HEAD>
>  <BODY>
>    <H1>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, FALSE,
> TOP.PAR_COMPO_ID)]</H1>
>    <TABLE>
>      <TR>
>        <TH CLASS="MODULE">MODULE</TH>
>        <TH CLASS="COMPO">COMPO</TH>
>        <TH CLASS="TC">TEST CASE</TH>
>        <TH CLASS="CNT">TEST CASE/STEP #</TH>
>      </TR>
>        ]
>
>
> in a code where the '[' and ']' occur in other places. I would like to hide
> the lexer rule
>
> SQUARED_BRACKED_EXPRESSION
>    :
>    '[' ~('[')* ']'
>    ;
>
> from the rest of the grammer and call it explicitely from a parser rule like
>
> put_statement
>    :
>    PUT SQUARED_BRACKED_EXPRESSION
>    ;
>
> The problem is that I cannot use a 'fragment' as 'fragment' lexer rules can
> only be called from other lexer rules.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From nilopaim at gmail.com  Thu Sep 27 05:44:43 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 27 Sep 2012 09:44:43 -0300
Subject: [antlr-interest] RES:  RES:  Dangling ELSE on Cobol
In-Reply-To: <18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
	<18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
Message-ID: <003301cd9cad$e0ed3650$a2c7a2f0$@com>

Hi, Kevin.

You were right about the changes. Thanks for your interest.

But with the following syntax:

ifCmd
  :
  IF boolExpr command+
  (
    ELSE command+
  )?
  ;

When I input something like:

   IF (a > b)
      Close z
      Call x
   ELSE
      Open y.

The parser shows me:

line 204:11 no viable alternative at input 'call x'
line 204:11 extraneous input 'ELSE' expecting {'.', 'call', 'close', 'open'}

If I remove the "else" and the following line from the input, everything parses without errors (but obviously, that?s not what I need...).

Any hints?

TIA.
Nilo - Brazil

-----Mensagem original-----
De: Kevin Cummings [mailto:cummings at kjchome.homeip.net] 
Enviada em: quarta-feira, 26 de setembro de 2012 23:38
Para: Nilo Roberto C Paim
Cc: Juancarlo A?ez; antlr ANTLR
Assunto: Re: [antlr-interest] RES: Dangling ELSE on Cobol

I don't think you need it at all.  Just remove the => and everything before it.

--
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232
(http://www.linuxcounter.net/)


On Sep 26, 2012, at 12:56, "Nilo Roberto C Paim" <nilopaim at gmail.com> wrote:

> Hi, all.
> 
> 
> 
> Does anyone knows how is this supposed to be in Antlr V4? The ?=>? 
> gave me syntax error?
> 
> 
> 
> No, I?ve not buy the book yet, but I intend to do soon?
> 
> 
> 
> TIA,
> 
> Nilo - Brazil
> 
> 
> 
> De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome 
> de Juancarlo A?ez Enviada em: sexta-feira, 21 de setembro de 2012 
> 14:11
> Para: Nilo Roberto C Paim
> Cc: antlr ANTLR
> Assunto: Re: [antlr-interest] Dangling ELSE on Cobol
> 
> 
> 
> Nilo,
> 
> 
> 
> It's a lot of lookahead, but it solves your problem:
> 
> 
> 
> command :
> 
>    ifCmd
> 
>    | 'INIT'
> 
>    | 'MOVE'
> 
>    ;
> 
> 
> 
> ifCmd:
> 
>    'IF' 'EXPRE' ((command)=>command)+
> 
>    (
> 
>        ('ELSE')=> 'ELSE' ((command)=>command)+
> 
>    |
> 
>        ()
> 
>    )
> 
>    ;
> 
> 
> 
> The ambiguity warning were saying that ANTLR didn't know to which nesting level to add the next "command". The lookaheads tell it to be greedy and match them against the closest IF or ELSE.
> 
> 
> 
> Cheers,
> 
> 
> 
> -- Juanca
> 
> 
> 
> On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:
> 
> Hi, folks.
> 
> I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser 
> Generator
> 3.4 Jul 19, 2011 11:35:12. actually).
> 
> I'm stuck with the old dangling ELSE problem. Here the relevant piece 
> of code of my grammar that shows me the problem:
> 
> 
>        command :
>                ifCmd
>                |       initializeCmd
>                |       moveCmd
>                |       openCmd
>                ;
> 
>        ifCmd:
>                        IF expr command+ ( (ELSE)=> ELSE command+)?
>                ;
> 
> 
> I cannot put a terminator on the commands 'cause commands in Cobol may 
> end or with a '.' or with the following command. This is true 
> including the ifCmd itself.
> 
> The code above shows me the following messages:
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "IF" using multiple alternatives: 1, 
> 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "MOVE" using multiple alternatives: 
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "OPEN" using multiple alternatives: 
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "IF" using multiple alternatives: 1, 
> 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "MOVE" using multiple alternatives: 
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "OPEN" using multiple alternatives: 
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> 
> 
> 8 warnings
> 
> Please, any hints?
> 
> Thanks in advance,
> Nilo
> Brazil
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> 
> 
> 
> 
> --
> Juancarlo A?ez
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From apalala at gmail.com  Thu Sep 27 06:42:36 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Thu, 27 Sep 2012 09:12:36 -0430
Subject: [antlr-interest] RES: RES: Dangling ELSE on Cobol
In-Reply-To: <003301cd9cad$e0ed3650$a2c7a2f0$@com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
	<18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
	<003301cd9cad$e0ed3650$a2c7a2f0$@com>
Message-ID: <CAN1YFWtLG-egPLRAZWpoFjCmTP2uAV3K6x9_FKgU4n_E-KRoMQ@mail.gmail.com>

How is 'ELSE' defined?

-- Juanca

On Thu, Sep 27, 2012 at 8:14 AM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Hi, Kevin.
>
> You were right about the changes. Thanks for your interest.
>
> But with the following syntax:
>
> ifCmd
>   :
>   IF boolExpr command+
>   (
>     ELSE command+
>   )?
>   ;
>
> When I input something like:
>
>    IF (a > b)
>       Close z
>       Call x
>    ELSE
>       Open y.
>
> The parser shows me:
>
> line 204:11 no viable alternative at input 'call x'
> line 204:11 extraneous input 'ELSE' expecting {'.', 'call', 'close',
> 'open'}
>
> If I remove the "else" and the following line from the input, everything
> parses without errors (but obviously, that?s not what I need...).
>
> Any hints?
>
> TIA.
> Nilo - Brazil
>
> -----Mensagem original-----
> De: Kevin Cummings [mailto:cummings at kjchome.homeip.net]
> Enviada em: quarta-feira, 26 de setembro de 2012 23:38
> Para: Nilo Roberto C Paim
> Cc: Juancarlo A?ez; antlr ANTLR
> Assunto: Re: [antlr-interest] RES: Dangling ELSE on Cobol
>
> I don't think you need it at all.  Just remove the => and everything
> before it.
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232
> (http://www.linuxcounter.net/)
>
>
> On Sep 26, 2012, at 12:56, "Nilo Roberto C Paim" <nilopaim at gmail.com>
> wrote:
>
> > Hi, all.
> >
> >
> >
> > Does anyone knows how is this supposed to be in Antlr V4? The ?=>?
> > gave me syntax error?
> >
> >
> >
> > No, I?ve not buy the book yet, but I intend to do soon?
> >
> >
> >
> > TIA,
> >
> > Nilo - Brazil
> >
> >
> >
> > De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome
> > de Juancarlo A?ez Enviada em: sexta-feira, 21 de setembro de 2012
> > 14:11
> > Para: Nilo Roberto C Paim
> > Cc: antlr ANTLR
> > Assunto: Re: [antlr-interest] Dangling ELSE on Cobol
> >
> >
> >
> > Nilo,
> >
> >
> >
> > It's a lot of lookahead, but it solves your problem:
> >
> >
> >
> > command :
> >
> >    ifCmd
> >
> >    | 'INIT'
> >
> >    | 'MOVE'
> >
> >    ;
> >
> >
> >
> > ifCmd:
> >
> >    'IF' 'EXPRE' ((command)=>command)+
> >
> >    (
> >
> >        ('ELSE')=> 'ELSE' ((command)=>command)+
> >
> >    |
> >
> >        ()
> >
> >    )
> >
> >    ;
> >
> >
> >
> > The ambiguity warning were saying that ANTLR didn't know to which
> nesting level to add the next "command". The lookaheads tell it to be
> greedy and match them against the closest IF or ELSE.
> >
> >
> >
> > Cheers,
> >
> >
> >
> > -- Juanca
> >
> >
> >
> > On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com>
> wrote:
> >
> > Hi, folks.
> >
> > I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser
> > Generator
> > 3.4 Jul 19, 2011 11:35:12. actually).
> >
> > I'm stuck with the old dangling ELSE problem. Here the relevant piece
> > of code of my grammar that shows me the problem:
> >
> >
> >        command :
> >                ifCmd
> >                |       initializeCmd
> >                |       moveCmd
> >                |       openCmd
> >                ;
> >
> >        ifCmd:
> >                        IF expr command+ ( (ELSE)=> ELSE command+)?
> >                ;
> >
> >
> > I cannot put a terminator on the commands 'cause commands in Cobol may
> > end or with a '.' or with the following command. This is true
> > including the ifCmd itself.
> >
> > The code above shows me the following messages:
> >
> > warning(200): /SuperCobol/src/SC.g:229:13:
> > Decision can match input such as "IF" using multiple alternatives: 1,
> > 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:13:
> > Decision can match input such as "MOVE" using multiple alternatives:
> > 1, 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:13:
> > Decision can match input such as "OPEN" using multiple alternatives:
> > 1, 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:13:
> > Decision can match input such as "INITIALIZE" using multiple
> alternatives:
> > 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:38:
> > Decision can match input such as "IF" using multiple alternatives: 1,
> > 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:38:
> > Decision can match input such as "MOVE" using multiple alternatives:
> > 1, 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:38:
> > Decision can match input such as "OPEN" using multiple alternatives:
> > 1, 2 As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> > warning(200): /SuperCobol/src/SC.g:229:38:
> > Decision can match input such as "INITIALIZE" using multiple
> alternatives:
> > 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > |---> IF expr command+ ( (ELSE)=> ELSE command+)?
> >
> >
> > 8 warnings
> >
> > Please, any hints?
> >
> > Thanks in advance,
> > Nilo
> > Brazil
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> >
> >
> >
> >
> > --
> > Juancarlo A?ez
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Juancarlo *A?ez*

From nilopaim at gmail.com  Thu Sep 27 06:48:07 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 27 Sep 2012 10:48:07 -0300
Subject: [antlr-interest] RES:  RES: RES: Dangling ELSE on Cobol
In-Reply-To: <CAN1YFWtLG-egPLRAZWpoFjCmTP2uAV3K6x9_FKgU4n_E-KRoMQ@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
	<18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
	<003301cd9cad$e0ed3650$a2c7a2f0$@com>
	<CAN1YFWtLG-egPLRAZWpoFjCmTP2uAV3K6x9_FKgU4n_E-KRoMQ@mail.gmail.com>
Message-ID: <000601cd9cb6$bbf1cf60$33d56e20$@com>

Hi, Juanca.

 

On the lexer part, 

 

ELSE: ?ELSE;

IF: ?IF?;

And so on... exactly as on the input.

 

Regards,

Nilo - Brazil

 

De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
Enviada em: quinta-feira, 27 de setembro de 2012 10:43
Para: Nilo Roberto C Paim
Cc: Kevin Cummings; antlr ANTLR
Assunto: Re: [antlr-interest] RES: RES: Dangling ELSE on Cobol

 

How is 'ELSE' defined?

 

-- Juanca

On Thu, Sep 27, 2012 at 8:14 AM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:

Hi, Kevin.

You were right about the changes. Thanks for your interest.

But with the following syntax:

ifCmd
  :
  IF boolExpr command+
  (
    ELSE command+
  )?
  ;

When I input something like:

   IF (a > b)
      Close z
      Call x
   ELSE
      Open y.

The parser shows me:

line 204:11 no viable alternative at input 'call x'
line 204:11 extraneous input 'ELSE' expecting {'.', 'call', 'close', 'open'}

If I remove the "else" and the following line from the input, everything parses without errors (but obviously, that?s not what I need...).

Any hints?

TIA.
Nilo - Brazil

-----Mensagem original-----
De: Kevin Cummings [mailto:cummings at kjchome.homeip.net]
Enviada em: quarta-feira, 26 de setembro de 2012 23:38

Para: Nilo Roberto C Paim

Cc: Juancarlo A?ez; antlr ANTLR
Assunto: Re: [antlr-interest] RES: Dangling ELSE on Cobol


I don't think you need it at all.  Just remove the => and everything before it.

--
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232
(http://www.linuxcounter.net/)


On Sep 26, 2012, at 12:56, "Nilo Roberto C Paim" <nilopaim at gmail.com> wrote:

> Hi, all.
>
>
>
> Does anyone knows how is this supposed to be in Antlr V4? The ?=>?
> gave me syntax error?
>
>
>
> No, I?ve not buy the book yet, but I intend to do soon?
>
>
>
> TIA,
>
> Nilo - Brazil
>
>
>
> De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome
> de Juancarlo A?ez Enviada em: sexta-feira, 21 de setembro de 2012
> 14:11
> Para: Nilo Roberto C Paim
> Cc: antlr ANTLR
> Assunto: Re: [antlr-interest] Dangling ELSE on Cobol
>
>
>
> Nilo,
>
>
>
> It's a lot of lookahead, but it solves your problem:
>
>
>
> command :
>
>    ifCmd
>
>    | 'INIT'
>
>    | 'MOVE'
>
>    ;
>
>
>
> ifCmd:
>
>    'IF' 'EXPRE' ((command)=>command)+
>
>    (
>
>        ('ELSE')=> 'ELSE' ((command)=>command)+
>
>    |
>
>        ()
>
>    )
>
>    ;
>
>
>
> The ambiguity warning were saying that ANTLR didn't know to which nesting level to add the next "command". The lookaheads tell it to be greedy and match them against the closest IF or ELSE.
>
>
>
> Cheers,
>
>
>
> -- Juanca
>
>
>
> On Thu, Sep 20, 2012 at 2:50 PM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:
>
> Hi, folks.
>
> I'm trying to parse Cobol sources using Antlr 3.4 (ANTLR Parser
> Generator
> 3.4 Jul 19, 2011 11:35:12. actually).
>
> I'm stuck with the old dangling ELSE problem. Here the relevant piece
> of code of my grammar that shows me the problem:
>
>
>        command :
>                ifCmd
>                |       initializeCmd
>                |       moveCmd
>                |       openCmd
>                ;
>
>        ifCmd:
>                        IF expr command+ ( (ELSE)=> ELSE command+)?
>                ;
>
>
> I cannot put a terminator on the commands 'cause commands in Cobol may
> end or with a '.' or with the following command. This is true
> including the ifCmd itself.
>
> The code above shows me the following messages:
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "IF" using multiple alternatives: 1,
> 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "MOVE" using multiple alternatives:
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "OPEN" using multiple alternatives:
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:13:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "IF" using multiple alternatives: 1,
> 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "MOVE" using multiple alternatives:
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "OPEN" using multiple alternatives:
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
> warning(200): /SuperCobol/src/SC.g:229:38:
> Decision can match input such as "INITIALIZE" using multiple alternatives:
> 1, 2
> As a result, alternative(s) 2 were disabled for that input
> |---> IF expr command+ ( (ELSE)=> ELSE command+)?
>
>
> 8 warnings
>
> Please, any hints?
>
> Thanks in advance,
> Nilo
> Brazil
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
>
> --
> Juancarlo A?ez
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address





 

-- 
Juancarlo A?ez


From apalala at gmail.com  Thu Sep 27 07:59:14 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Thu, 27 Sep 2012 10:29:14 -0430
Subject: [antlr-interest] RES: RES: Dangling ELSE on Cobol
In-Reply-To: <003301cd9cad$e0ed3650$a2c7a2f0$@com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
	<18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
	<003301cd9cad$e0ed3650$a2c7a2f0$@com>
Message-ID: <CAN1YFWs3v+Si84eW=Y6e8_oCwGTR-1XPCqgHNwthhVQsaKfXig@mail.gmail.com>

Nilo,

On Thu, Sep 27, 2012 at 8:14 AM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> line 204:11 no viable alternative at input 'call x'
> line 204:11 extraneous input 'ELSE' expecting {'.', 'call', 'close',
> 'open'}
>
> If I remove the "else" and the following line from the input, everything
> parses without errors (but obviously, that?s not what I need...).
>

I'm not using ANTLR4 yet, but the -trace option in ANTLR3 helped me through
the hardest parts of the large grammar I'e been working on. It lets you see
what the parser is trying to do, and on which rule and token it is failing.

Another hint is that there have been parts of the grammar that I was not
able to solve with +/* repetitions, but only with recursion, all of them
having lists with no terminator token.

command: if|...;

if
    :
    IF expre if_commands
    ;

if_commands
    :
    ELSE command+
    | command if_commands
   ;

Using recursion takes away the greedyness of + (I don't know if
greedy=false can be used in rules; if it can, it may be an option).

-- 
Juanca

From nilopaim at gmail.com  Thu Sep 27 08:24:38 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 27 Sep 2012 12:24:38 -0300
Subject: [antlr-interest] RES:  RES: RES: Dangling ELSE on Cobol
In-Reply-To: <CAN1YFWs3v+Si84eW=Y6e8_oCwGTR-1XPCqgHNwthhVQsaKfXig@mail.gmail.com>
References: <CACQyh-X8xNZXK9fBsrutevTMUwFx30Fk+k1ieDpv3ZwW8oToPw@mail.gmail.com>
	<03E44E50-7E2C-4539-BC88-5AF7AF986C20@cs.usfca.edu>
	<CACQyh-VG=6AW=tr8vfYZDc7dPxHwHYHU4eWnUjq1hyHV5StrQQ@mail.gmail.com>
	<CAN45N12z4fzNQbohpNUqDawPsZdSKc3S+LNO0R4cx-Fg-D=dPg@mail.gmail.com>
	<003901cd9764$f9c232f0$ed4698d0$@com>
	<CAN1YFWsF2ue-Hi4aR8GexB6_G0fayuhbHiFhrtWJ6i6Ar+vj8Q@mail.gmail.com>
	<008501cd9c07$de05d240$9a1176c0$@com>
	<18E986E6-1F32-4EA7-A59D-4D50F2CA7417@kjchome.homeip.net>
	<003301cd9cad$e0ed3650$a2c7a2f0$@com>
	<CAN1YFWs3v+Si84eW=Y6e8_oCwGTR-1XPCqgHNwthhVQsaKfXig@mail.gmail.com>
Message-ID: <001e01cd9cc4$37741550$a65c3ff0$@com>

Juanca,

 

It doesn?t make the trick. Provided the same input, it shows:

 

line 207:49 no viable alternative at input '.'

 

Note that ?command? have optionally a ?.? terminating it. It?s exactly that ?.? That it is not recognized.

 

I attach my grammar and my input file, because I think that maybe some another rules need to be changed either. I guess this can make easier to find the problems.

 

Under Antlr V3, your initial hint worked as expected. The current problem occurs under Antlr V4, that is apparently more, much more adequate to what I?m trying to do.

 

Thanks a lot for your interest. I have not enough words to thank you.

 

Regards,

Nilo - Brazil

 

De: juancarlo.anez at gmail.com [mailto:juancarlo.anez at gmail.com] Em nome de Juancarlo A?ez
Enviada em: quinta-feira, 27 de setembro de 2012 11:59
Para: Nilo Roberto C Paim
Cc: antlr ANTLR
Assunto: Re: [antlr-interest] RES: RES: Dangling ELSE on Cobol

 

Nilo,

On Thu, Sep 27, 2012 at 8:14 AM, Nilo Roberto C Paim <nilopaim at gmail.com> wrote:

line 204:11 no viable alternative at input 'call x'
line 204:11 extraneous input 'ELSE' expecting {'.', 'call', 'close', 'open'}

If I remove the "else" and the following line from the input, everything parses without errors (but obviously, that?s not what I need...).


I'm not using ANTLR4 yet, but the -trace option in ANTLR3 helped me through the hardest parts of the large grammar I'e been working on. It lets you see what the parser is trying to do, and on which rule and token it is failing.

 

Another hint is that there have been parts of the grammar that I was not able to solve with +/* repetitions, but only with recursion, all of them having lists with no terminator token.

 

command: if|...;

 

if

    : 

    IF expre if_commands

    ;

 

if_commands

    :

    ELSE command+

    | command if_commands

   ;


 

Using recursion takes away the greedyness of + (I don't know if greedy=false can be used in rules; if it can, it may be an option).

 

-- 
Juanca

-------------- next part --------------
A non-text attachment was scrubbed...
Name: SC.g4
Type: application/octet-stream
Size: 7368 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120927/43f3147c/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sga.cob
Type: application/octet-stream
Size: 24632 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120927/43f3147c/attachment-0001.obj 

From linq936 at gmail.com  Thu Sep 27 09:39:37 2012
From: linq936 at gmail.com (lin q)
Date: Thu, 27 Sep 2012 09:39:37 -0700
Subject: [antlr-interest] cannot target C
Message-ID: <CAHJ65QmHsEeKdBaRp15-RHZXLJXf5io+mF84fG5ysz1c7cwHyQ@mail.gmail.com>

Hi,

I am new to antlr. I installed antlr v3.4 on my linux machine. I made
the following grammar file:



grammar binder;

/*
options
{
    language=c;
}
*/

/*-------------------------------------------------------------------------------------------
  parser rules
  -------------------------------------------------------------------------------------------*/
grp     :       common_param   EOF ;


common_param : (ID     VAL  New_Line*)* ;


/*-------------------------------------------------------------------------------------------
  lexer rules
  -------------------------------------------------------------------------------------------*/
ID : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')+ ;

VAL : '=' ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '.' | ',')+ ;

WS : ('\t' | ' ')+ { $channel = HIDDEN; } ;

New_Line : ('\r' | '\n')+   ;



You can see I comment out language target because if I uncomment it, I
get the following error:

error(10):  internal error: binder.g :
java.lang.IllegalArgumentException: No such group file:
org/antlr/codegen/templates/c/c.stg
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)


Do you see what could be wrong?

This is my setup and how I run the tool:

CLASSPATH=/vol/3/user/linq/public/antlr-3.4-complete.jar

java    org.antlr.Tool    binder.g

From jmurray at aerotech.com  Thu Sep 27 10:10:13 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 27 Sep 2012 13:10:13 -0400
Subject: [antlr-interest] cannot target C
In-Reply-To: <CAHJ65QmHsEeKdBaRp15-RHZXLJXf5io+mF84fG5ysz1c7cwHyQ@mail.gmail.com>
References: <CAHJ65QmHsEeKdBaRp15-RHZXLJXf5io+mF84fG5ysz1c7cwHyQ@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B0BB719E3@EXCH-VIRTUAL.aerotechad.com>

Try a capital C

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of lin q
Sent: Thursday, September 27, 2012 12:40 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] cannot target C

Hi,

I am new to antlr. I installed antlr v3.4 on my linux machine. I made
the following grammar file:



grammar binder;

/*
options
{
    language=c;
}
*/

/*----------------------------------------------------------------------
---------------------
  parser rules
 
------------------------------------------------------------------------
-------------------*/
grp     :       common_param   EOF ;


common_param : (ID     VAL  New_Line*)* ;


/*----------------------------------------------------------------------
---------------------
  lexer rules
 
------------------------------------------------------------------------
-------------------*/
ID : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')+ ;

VAL : '=' ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '.' | ',')+ ;

WS : ('\t' | ' ')+ { $channel = HIDDEN; } ;

New_Line : ('\r' | '\n')+   ;



You can see I comment out language target because if I uncomment it, I
get the following error:

error(10):  internal error: binder.g :
java.lang.IllegalArgumentException: No such group file:
org/antlr/codegen/templates/c/c.stg
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)


Do you see what could be wrong?

This is my setup and how I run the tool:

CLASSPATH=/vol/3/user/linq/public/antlr-3.4-complete.jar

java    org.antlr.Tool    binder.g

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From biboudis at gmail.com  Thu Sep 27 10:26:29 2012
From: biboudis at gmail.com (Aggelos Biboudis)
Date: Thu, 27 Sep 2012 20:26:29 +0300
Subject: [antlr-interest] How an alternative rule can emit code
 conditionally on the type of the parent node?
In-Reply-To: <CC88A7B3.1DC8E%douglasgodfrey@gmail.com>
References: <CC88A7B3.1DC8E%douglasgodfrey@gmail.com>
Message-ID: <50648C45.1050102@gmail.com>

Thank you. I managed to save some information in a global scope and then 
querying it accordingly.

Aggelos

On 09/26/2012 07:41 PM, Douglas Godfrey wrote:
> Pass the type of the parent node as a parameter to the rule and
> 1)	use syntactic or semantic predicates to change the parse based on the
> parent type
> or
> 2)	use the parent type to change the actions that generate code or symbol
> table entries
> or
> 3)	use the parent type to change the emitted text via string templates
>
>
>
> On 9/26/12 9:05 AM, "Aggelos Biboudis" <biboudis at gmail.com> wrote:
>
>> It seems dynamic scoping is the solution to this.
>>
>> Thx,
>> Aggelos B.
>>
>> On Wed, Sep 26, 2012 at 2:12 PM, Aggelos Biboudis
>> <biboudis at gmail.com>wrote:
>>
>>> Dear all,
>>>
>>> I am using the C grammar with rewrite option on. I would like to know if
>>> it is possible for my alternative rule (after the "->"), to emit code
>>> depending on the type of the parent node. I want to rewrite the token
>>> buffer in-place (following the book for source-to-source translations
>>> when
>>> performing slight modifications/instrumentation) only in compound
>>> statements. My intention is to emit a preamble after the first "{" only
>>> if
>>> the compound statement originates from a selection, iteration or jump
>>> statement. For example: I would like to rewrite the if (expr) {
>>> statement1;} to if (expr) { my_statement; statement1;}. Is that
>>> conditional
>>> rewriting possible, following the token-buffer edit way?
>>>
>>> I am using the usual ANSI C
>>> grammar<http://www.antlr.org/grammar/1153358328744/C.g>and following the
>>> definitive ANTLR reference.
>>>
>>> Any help appreciated.
>>> Aggelos B.
>>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From linq936 at gmail.com  Thu Sep 27 10:43:21 2012
From: linq936 at gmail.com (lin q)
Date: Thu, 27 Sep 2012 10:43:21 -0700
Subject: [antlr-interest] cannot target C
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B0BB719E3@EXCH-VIRTUAL.aerotechad.com>
References: <CAHJ65QmHsEeKdBaRp15-RHZXLJXf5io+mF84fG5ysz1c7cwHyQ@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B0BB719E3@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <CAHJ65QmqTp7WN2vrzj_iDL=7xCwdu0uXqrhvSBrVL0991sSOcA@mail.gmail.com>

That is it. Thanks!

On Thu, Sep 27, 2012 at 10:10 AM, Justin Murray <jmurray at aerotech.com> wrote:
> Try a capital C
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of lin q
> Sent: Thursday, September 27, 2012 12:40 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] cannot target C
>
> Hi,
>
> I am new to antlr. I installed antlr v3.4 on my linux machine. I made
> the following grammar file:
>
>
>
> grammar binder;
>
> /*
> options
> {
>     language=c;
> }
> */
>
> /*----------------------------------------------------------------------
> ---------------------
>   parser rules
>
> ------------------------------------------------------------------------
> -------------------*/
> grp     :       common_param   EOF ;
>
>
> common_param : (ID     VAL  New_Line*)* ;
>
>
> /*----------------------------------------------------------------------
> ---------------------
>   lexer rules
>
> ------------------------------------------------------------------------
> -------------------*/
> ID : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')+ ;
>
> VAL : '=' ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '.' | ',')+ ;
>
> WS : ('\t' | ' ')+ { $channel = HIDDEN; } ;
>
> New_Line : ('\r' | '\n')+   ;
>
>
>
> You can see I comment out language target because if I uncomment it, I
> get the following error:
>
> error(10):  internal error: binder.g :
> java.lang.IllegalArgumentException: No such group file:
> org/antlr/codegen/templates/c/c.stg
> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
> org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.Tool.main(Tool.java:93)
>
>
> Do you see what could be wrong?
>
> This is my setup and how I run the tool:
>
> CLASSPATH=/vol/3/user/linq/public/antlr-3.4-complete.jar
>
> java    org.antlr.Tool    binder.g
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From wolfgang at haemmer.net  Thu Sep 27 13:17:07 2012
From: wolfgang at haemmer.net (=?ISO-8859-1?Q?wolfgang_h=E4mmer?=)
Date: Thu, 27 Sep 2012 22:17:07 +0200
Subject: [antlr-interest] Hide a lexer rules and call it explicitely from
	parser rule
Message-ID: <CAJbG4KDoWgjmerMyixF3gaVfhY-v+P88JDe2Vix-MnCKyOKG0w@mail.gmail.com>

Hi,

I need to call a lexer rule explicitely but I can't declare it as fragment
as I want to reference it in a parser rule.

I want to call the rule explicitely, because the same pattern represented
by the rule occurs in several places in the code. I don't want the lexer
rule to match in these places.

The lexer rule is PUT_EXPRESSION.
Below my grammar, a code example and the error.

And at my wits end ;-) . Thank you for your help.

wolf

My grammar:

/*******************************************************************************

DESCRIPTION:
        Oracle PL/SQL Grammar for ANTLR v3, target language JAVA
AUTHOR:
        Wolfgang H?mmer (wolfgang.haemmer at bsg.ch)
DATE:
        25-Apr-2012
BASED ON:
        This grammar is for AVALOQ FILE REPORT.
COMMENT:

KNOWN ISSUES:

HISTORY:

*******************************************************************************/

grammar SRC_REP_FILE;

options {
    language=Java;
    backtrack=true;
    memoize=true;
    output=AST;
}

import PARSER_BASE;

@lexer::members {
    public static final int CHANNEL_COMMENT = HIDDEN + 1;
    public static final int CHANNEL_PUT = HIDDEN + 2;
}

start_rule
    :    report_body EOF
    ;

report_body
    :
        LBRACK REPORT NUMBER RBRACK validity? r=REPORT n=report_name
        {
            if (gPARSER_BASE.f_scope_trace >= gPARSER_BASE.f_trace_low) {
System.out.println("package_body-new scope: " + $n.text); };
            gPARSER_BASE.f_currentScopePkg.define($n.text);
            gPARSER_BASE.f_currentScopePkg = gPARSER_BASE.new
Scope(gPARSER_BASE.f_currentScopePkg);
        }
        report_naming datamart layout END REPORT
        {
            if (gPARSER_BASE.f_scope_trace >= gPARSER_BASE.f_trace_low)
System.out.println("package_body-pop scope");
            gPARSER_BASE.f_currentScopePkg =
gPARSER_BASE.f_currentScopePkg.pop();
        }
    ->    ^(REPORT_BODY[$r] report_name validity? report_naming datamart
layout)
    ;

validity
    :    OBSOLETE DOUBLEQUOTED_STRING
    |    SUBSTITUTE DOUBLEQUOTED_STRING
    ;

datamart
    :
    DATAMART on_dtm? CONNECT identifier AS identifier
    dtm_where_clause? dtm_group_by? dtm_consolidate? END DATAMART |
    DATAMART identifier
    ;

dtm_where_clause
    :
    (WHERE LBRACK plsql_condition RBRACK) => WHERE LBRACK plsql_condition
RBRACK
    ;

dtm_group_by
    :
    GROUP BY dtm_group_by_expr+
    ;

dtm_group_by_expr
    :
    identifier LBRACK plsql_expression RBRACK dtm_order_by?
    ;

dtm_order_by
    :
    ORDER BY LBRACK ( plsql_expression (ASC | DESC)? COMMA? )+ RBRACK (ASC
| DESC)?
    ;

dtm_consolidate
    :
    CONSOLIDATE on_dtm+
    ;

on_dtm
    :
    ON (REPORT | TOP | identifier) (INHERIT identifier)? field*
    ;

field
    :
    call_name type_spec (SUM | VERBOSE_ASSIGN) LBRACK plsql_expression
RBRACK
    ;

layout
    :
    report_type import_declaration+ filename on_layout END LAYOUT |
    report_type filename import_declaration* on_layout END LAYOUT
    ;

report_type
    :
    XLS LAYOUT | FILE LAYOUT type_declaration
    ;

type_declaration
    :
    TYPE identifier
    ;

filename
    :
    FILENAME plsql_expression
    ;

on_layout
    :
    ON i=(REPORT | TOP | identifier)
    {if (gPARSER_BASE.f_trace >= gPARSER_BASE.f_trace_low)
System.out.println("ON_LAYOUT: " + $i.text);}
    (HEAD | FOOT) seq_of_statements on_layout?
    ;

statement
    :    assignment_statement
    |    exit_statement
    |    case_statement
    |    if_statement
    |    raise_statement
    |    return_statement
    |    plsql_block
    |    function_expression
    |    for_statement
    |    while_statement
    |    with_statement
    |    put_statement
    |    NULL
    ;

put_statement
    :
    PUT_STATEMENT
    ;

A                : 'A';
ALIGN            : 'ALIGN';
AND                : 'AND';
ANY                : 'ANY';
AS                : 'AS';
ASC                : 'ASC';
BEGIN            : 'BEGIN';
BETWEEN            : 'BETWEEN';
BOOLEAN            : 'BOOLEAN';
BY                : 'BY';
CASE            : 'CASE';
COLUMN            : 'COLUMN';
CONNECT            : 'CONNECT';
CONSOLIDATE        : 'CONSOLIDATE';
CONSTANT        : 'CONSTANT';
CTX                : 'CTX';
DATAMART        : 'DATAMART';
DATE            : 'DATE';
DECLARE            : 'DECLARE';
DEFAULT            : 'DEFAULT';
DESC            : 'DESC';
DFLTLANG        : 'DFLTLANG';
DO                : 'DO';
ELSE            : 'ELSE';
ELSIF            : 'ELSIF';
EMPTY            : 'EMPTY';
END                : 'END';
ENGLISH            : 'ENGLISH';
EQUALS_PATH        : 'EQUALS_PATH';
ESCAPE            : 'ESCAPE';
EXCEPTION        : 'EXCEPTION';
EXTENDABLE         : 'EXTENDABLE';
EXTENSION        : 'EXTENSION';
EXIT            : 'EXIT';
FALSE            : 'FALSE';
FILE            : 'FILE';
FILENAME        : 'FILENAME';
FINAL            : 'FINAL';
FOR                : 'FOR';
FOOT            : 'FOOT';
FRENCH            : 'FRENCH';
FUNCTION        : 'FUNCTION';
GERMAN            : 'GERMAN';
GROUP            : 'GROUP';
HEAD            : 'HEAD';
ID_QUALIFIER    : 'ID';
IF                : 'IF';
IMPORT            : 'IMPORT';
IN                : 'IN';
INHERIT            : 'INHERIT';
INSERT            : 'INSERT';
IS                : 'IS';
ITALIAN            : 'ITALIAN';
LABEL            : 'LABEL';
LAYOUT            : 'LAYOUT';
LEFT            : 'LEFT';
LIKE            : 'LIKE';
LIKE2            : 'LIKE2';
LIKE4            : 'LIKE4';
LIKEC            : 'LIKEC';
LONG            : 'LONG';
LOOP            : 'LOOP';
MEMBER            : 'MEMBER';
MOD                  : 'MOD';
NAMING             : 'NAMING';
NATIVE             : 'NATIVE';
NEW                : 'NEW';
NOT                : 'NOT';
NULL            : 'NULL';
OBSOLETE        : 'OBSOLETE';
OF                : 'OF';
ON                : 'ON';
ONLY            : 'ONLY';
OR                : 'OR';
ORDER            : 'ORDER';
PACKAGE         : 'PACKAGE';
PILLAR            : 'PILLAR';
PILLAR_DONE        : 'PILLAR_DONE';
PRESENT         : 'PRESENT';
PROCEDURE        : 'PROCEDURE';
PRINT            : 'PRINT';
PRIVATE            : 'PRIVATE';
PROTECTED        : 'PROTECTED';
PUBLIC            : 'PUBLIC';
PUT_STATEMENT    : 'PUT' SQUARED_BRACKED_EXPRESSION;
RAISE            : 'RAISE';
REGEXP_LIKE        : 'REGEXP_LIKE';
REPORT            : 'REPORT';
RETURN            : 'RETURN';
REVERSE            : 'REVERSE';
RIGHT            : 'RIGHT';
SCRIPT            : 'SCRIPT';
SET                : 'SET';
SPANISH            : 'SPANISH';
SUBMULTISET        : 'SUBMULTISET';
SUBSTITUTE        : 'SUBSTITUTE';
SUM                : 'SUM';
TAB                : 'TAB';
TEXT            : 'TEXT';
THEN            : 'THEN';
TIME_TZ            : 'TIME_TZ';
TOP                : 'TOP';
TRUE            : 'TRUE';
TYPE            : 'TYPE';
UNDER_PATH        : 'UNDER_PATH';
UPDATE            : 'UPDATE';
UPSERT            : 'UPSERT';
USER_ID            : 'USER_ID';
USING            : 'USING';
VERBOSE_ASSIGN    : 'ASSIGN';
WHEN            : 'WHEN';
WHERE            : 'WHERE';
WHILE            : 'WHILE';
WITH            : 'WITH';
XLS                : 'XLS';

QUOTED_STRING
    :    ( 'n' )? '\'' ( '\'\'' | ~('\'') )* '\''
    ;

DOUBLEQUOTED_STRING
    :    '"' ~('"')* '"'
    ;

ID /*options { testLiterals=true; }*/
    :    'A' .. 'Z' ( 'A' .. 'Z' | '0' .. '9' | '_' | '$' | '#' )*
    ;

SEMI
    :    ';'
    ;

COLON
    :    ':'
    ;

DOUBLEDOT
    :    POINT POINT
    ;

DOT
    :    POINT
    ;

fragment
POINT
    :    '.'
    ;

COMMA
    :    ','
    ;

EXPONENT
    :    '**'
    ;

ASTERISK
    :    '*'
    ;

AT_SIGN
    :    '@'
    ;

RPAREN
    :    ')'
    ;

LPAREN
    :    '('
    ;

RBRACK
    :    ']'
    ;


LBRACK
    :    '['
    ;

PLUS
    :    '+'
    ;

MINUS
    :    '-'
    ;

DIVIDE
    :    '/'
    ;

EQ
    :    '='
    ;

PERCENTAGE
    :    '%'
    ;

LLABEL
    :    '<<'
    ;

RLABEL
    :    '>>'
    ;

ASSIGN
    :    ':='
    ;

ARROW
    :    '=>'
    ;

VERTBAR
    :    '|'
    ;

DOUBLEVERTBAR
    :    '||'
    ;

NOT_EQ
    :    '<>' | '!=' | '^='
    ;

LTH
    :    '<'
    ;

LEQ
    :    '<='
    ;

GTH
    :    '>'
    ;

GEQ
    :    '>='
    ;

NUMBER
    :
    (( N POINT N ) => N POINT N
    |            POINT N
    |            N
    )
    ( 'E' ( PLUS | MINUS )? N )?
    ;

fragment
N
    : '0' .. '9' ( '0' .. '9' )*
    ;

QUOTE
    :    '\''
    ;

NEWLINE
    :    ('\r'? '\n') {$channel=HIDDEN;};

WS    :    (' '| '\r' | '\t' | '\n') {$channel=HIDDEN;}
    ;

SL_COMMENT
    :    '--' ~('\n'|'\r')* '\r'? '\n' {$channel=CHANNEL_COMMENT;}
    ;

ML_COMMENT
    :    '/*' ( options {greedy=false;} : . )* '*/'
{$channel=CHANNEL_COMMENT;}
    ;

fragment
SQUARED_BRACKED_EXPRESSION
    :
    '[' (options {greedy=false;} :  .)* ']'
    ;


Some code:

[REPORT 2.0]

REPORT ATS_TEST_REP.TEST_CASE


----------------------------------------------------------------------------
  NAMING
    DFLTLANG  "TEST CASE HTML OVERVIEW"
  USER_ID     "TC"



----------------------------------------------------------------------------
  -- DATAMART

----------------------------------------------------------------------------
  DATAMART

    CONNECT DTM_ATS_TEST_REP AS DTM
      WHERE [DTM.ATS_TEST_PRC_TYPE.INTL_ID != 'DESCN']


    GROUP BY
      ENV_MODULE    [DTM.ENV_MODULE_ID]
           ORDER BY [DTM.ENV_MODULE.USER_ID]

      ENV_COMPO     [DTM.ENV_COMPO_ID]
           ORDER BY [DTM.ENV_COMPO.USER_ID]

      TEST_CASE     [DTM.ATS_TEST_CASE_STEP_ID]
           ORDER BY [DTM.ATS_TEST_CASE_NAME]

      TEST_STEP     [DTM.ATS_TEST_STEP_ID]


    CONSOLIDATE

      ON TOP
        PAR_COMPO_ID NUMBER   ASSIGN
[TASK_EXEC.PARAM('ENV_COMPO_ID').NR_VAL]

      ON ENV_MODULE
        NAME        TEXT      ASSIGN    [DTM.ENV_MODULE.NAME]
        USER_ID     TEXT      ASSIGN    [DTM.ENV_MODULE.USER_ID]
        STEP_CNT    NUMBER    SUM       [ENV_COMPO.STEP_CNT]
        TC_CNT      NUMBER    SUM       [ENV_COMPO.TC_CNT]
        COMPO_CNT   NUMBER    SUM       [ENV_COMPO.COMPO_CNT]

      ON ENV_COMPO
        NAME        TEXT      ASSIGN    [DTM.ENV_COMPO.NAME]
        USER_ID     TEXT      ASSIGN    [DTM.ENV_COMPO.USER_ID]
        STEP_CNT    NUMBER    SUM       [TEST_CASE.STEP_CNT]
        TC_CNT      NUMBER    SUM       [TEST_CASE.TC_CNT]
        COMPO_CNT   NUMBER    ASSIGN    [1]

      ON TEST_CASE
        NAME        TEXT      ASSIGN    [DTM.ATS_TEST_CASE_NAME]
        INTL_ID     TEXT      ASSIGN    [DTM.ATS_TEST_CASE_STEP.INTL_ID]
        STEP_CNT    NUMBER    SUM       [TEST_STEP.STEP_CNT]
        TC_CNT      NUMBER    ASSIGN    [1]

      ON TEST_STEP
        STEP_CNT    NUMBER    ASSIGN    [1]

  END DATAMART



----------------------------------------------------------------------------
  -- LAYOUT

----------------------------------------------------------------------------
  FILE LAYOUT
    TYPE HTML
    IMPORT ATS_TEST_REP;
    FILENAME ATS_TEST_REP.FILE_NAME(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
FALSE, TOP.PAR_COMPO_ID)


--------------------------------------------------------------------------
    ON REPORT HEAD
      PUT
        [
<HTML>
  <HEAD>
    <TITLE>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
FALSE, TOP.PAR_COMPO_ID)]</TITLE>
    [ATS_TEST_REP.CSS]
  </HEAD>
  <BODY>
    <H1>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, FALSE,
TOP.PAR_COMPO_ID)]</H1>
    <TABLE>
      <TR>
        <TH CLASS="MODULE">MODULE</TH>
        <TH CLASS="COMPO">COMPO</TH>
        <TH CLASS="TC">TEST CASE</TH>
        <TH CLASS="CNT">TEST CASE/STEP #</TH>
      </TR>
        ]



--------------------------------------------------------------------------
    ON ENV_MODULE HEAD
      PUT
        [
      <TR>
        <TD CLASS="MODULE"
ROWSPAN="[ENV_MODULE.TC_CNT+ENV_MODULE.COMPO_CNT+1]">[ENV_MODULE.USER_ID]</TD>
        <TD CLASS="MODULE" COLSPAN="2">&NBSP;</TD>
        <TD CLASS="MODULE CNT">[ENV_MODULE.TC_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON ENV_COMPO HEAD
      PUT
        [
      <TR>
        <TD CLASS="COMPO"
ROWSPAN="[ENV_COMPO.TC_CNT+1]">[ENV_COMPO.USER_ID]</TD>
        <TD CLASS="COMPO">&NBSP;</TD>
        <TD CLASS="COMPO CNT">[ENV_COMPO.TC_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON TEST_CASE HEAD
      PUT
        [
      <TR>
        <TD CLASS="TC"><A
HREF="[ATS_TEST_REP.FILE_NAME(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, TRUE,
TOP.PAR_COMPO_ID)]#[ATS_TEST_REP.LINK_REF(ATS_TEST_REP.C_LINK_REF_TYPE_TEST_CASE,
TEST_CASE.INTL_ID)]">[TEST_CASE.NAME]</A></TD>
        <TD CLASS="TC CNT">[TEST_CASE.STEP_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON REPORT FOOT
      PUT
        [
    </TABLE>
  </BODY>
</HTML>
        ]

  END LAYOUT

END REPORT

error:

line 74:6 mismatched input 'PUT' expecting PUT_STATEMENT
line 88:39 no viable alternative at character '#'
line 95:6 mismatched input 'PUT' expecting PUT_STATEMENT
line 99:39 no viable alternative at character '&'
line 107:6 mismatched input 'PUT' expecting PUT_STATEMENT
line 111:26 no viable alternative at character '&'
line 119:6 mismatched input 'PUT' expecting PUT_STATEMENT
line 130:6 mismatched input 'PUT' expecting PUT_STATEMENT

From jimi at temporal-wave.com  Thu Sep 27 21:03:19 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 28 Sep 2012 12:03:19 +0800
Subject: [antlr-interest] Hide a lexer rules and call it explicitely
 from parser rule
In-Reply-To: <CAJbG4KDoWgjmerMyixF3gaVfhY-v+P88JDe2Vix-MnCKyOKG0w@mail.gmail.com>
References: <CAJbG4KDoWgjmerMyixF3gaVfhY-v+P88JDe2Vix-MnCKyOKG0w@mail.gmail.com>
Message-ID: <39f9cb3461b4b96ca3e70f92da974dc5@mail.gmail.com>

Starting with Oracle SQL as your first grammar is not a good idea. You
need to read the documentation and the getting started documents, as well
as the examples. You cannot direct the lexer from the parser for instance.
You need to step away and start with some small examples first. You cannot
solve the '[' html ']' issue in the manner you are trying I am afraid.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of wolfgang h?mmer
Sent: Friday, September 28, 2012 4:17 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Hide a lexer rules and call it explicitely from
parser rule

Hi,

I need to call a lexer rule explicitely but I can't declare it as fragment
as I want to reference it in a parser rule.

I want to call the rule explicitely, because the same pattern represented
by the rule occurs in several places in the code. I don't want the lexer
rule to match in these places.

The lexer rule is PUT_EXPRESSION.
Below my grammar, a code example and the error.

And at my wits end ;-) . Thank you for your help.

wolf

My grammar:

/*************************************************************************
******

DESCRIPTION:
        Oracle PL/SQL Grammar for ANTLR v3, target language JAVA
AUTHOR:
        Wolfgang H?mmer (wolfgang.haemmer at bsg.ch)
DATE:
        25-Apr-2012
BASED ON:
        This grammar is for AVALOQ FILE REPORT.
COMMENT:

KNOWN ISSUES:

HISTORY:

**************************************************************************
*****/

grammar SRC_REP_FILE;

options {
    language=Java;
    backtrack=true;
    memoize=true;
    output=AST;
}

import PARSER_BASE;

@lexer::members {
    public static final int CHANNEL_COMMENT = HIDDEN + 1;
    public static final int CHANNEL_PUT = HIDDEN + 2; }

start_rule
    :    report_body EOF
    ;

report_body
    :
        LBRACK REPORT NUMBER RBRACK validity? r=REPORT n=report_name
        {
            if (gPARSER_BASE.f_scope_trace >= gPARSER_BASE.f_trace_low) {
System.out.println("package_body-new scope: " + $n.text); };
            gPARSER_BASE.f_currentScopePkg.define($n.text);
            gPARSER_BASE.f_currentScopePkg = gPARSER_BASE.new
Scope(gPARSER_BASE.f_currentScopePkg);
        }
        report_naming datamart layout END REPORT
        {
            if (gPARSER_BASE.f_scope_trace >= gPARSER_BASE.f_trace_low)
System.out.println("package_body-pop scope");
            gPARSER_BASE.f_currentScopePkg =
gPARSER_BASE.f_currentScopePkg.pop();
        }
    ->    ^(REPORT_BODY[$r] report_name validity? report_naming datamart
layout)
    ;

validity
    :    OBSOLETE DOUBLEQUOTED_STRING
    |    SUBSTITUTE DOUBLEQUOTED_STRING
    ;

datamart
    :
    DATAMART on_dtm? CONNECT identifier AS identifier
    dtm_where_clause? dtm_group_by? dtm_consolidate? END DATAMART |
    DATAMART identifier
    ;

dtm_where_clause
    :
    (WHERE LBRACK plsql_condition RBRACK) => WHERE LBRACK plsql_condition
RBRACK
    ;

dtm_group_by
    :
    GROUP BY dtm_group_by_expr+
    ;

dtm_group_by_expr
    :
    identifier LBRACK plsql_expression RBRACK dtm_order_by?
    ;

dtm_order_by
    :
    ORDER BY LBRACK ( plsql_expression (ASC | DESC)? COMMA? )+ RBRACK (ASC
| DESC)?
    ;

dtm_consolidate
    :
    CONSOLIDATE on_dtm+
    ;

on_dtm
    :
    ON (REPORT | TOP | identifier) (INHERIT identifier)? field*
    ;

field
    :
    call_name type_spec (SUM | VERBOSE_ASSIGN) LBRACK plsql_expression
RBRACK
    ;

layout
    :
    report_type import_declaration+ filename on_layout END LAYOUT |
    report_type filename import_declaration* on_layout END LAYOUT
    ;

report_type
    :
    XLS LAYOUT | FILE LAYOUT type_declaration
    ;

type_declaration
    :
    TYPE identifier
    ;

filename
    :
    FILENAME plsql_expression
    ;

on_layout
    :
    ON i=(REPORT | TOP | identifier)
    {if (gPARSER_BASE.f_trace >= gPARSER_BASE.f_trace_low)
System.out.println("ON_LAYOUT: " + $i.text);}
    (HEAD | FOOT) seq_of_statements on_layout?
    ;

statement
    :    assignment_statement
    |    exit_statement
    |    case_statement
    |    if_statement
    |    raise_statement
    |    return_statement
    |    plsql_block
    |    function_expression
    |    for_statement
    |    while_statement
    |    with_statement
    |    put_statement
    |    NULL
    ;

put_statement
    :
    PUT_STATEMENT
    ;

A                : 'A';
ALIGN            : 'ALIGN';
AND                : 'AND';
ANY                : 'ANY';
AS                : 'AS';
ASC                : 'ASC';
BEGIN            : 'BEGIN';
BETWEEN            : 'BETWEEN';
BOOLEAN            : 'BOOLEAN';
BY                : 'BY';
CASE            : 'CASE';
COLUMN            : 'COLUMN';
CONNECT            : 'CONNECT';
CONSOLIDATE        : 'CONSOLIDATE';
CONSTANT        : 'CONSTANT';
CTX                : 'CTX';
DATAMART        : 'DATAMART';
DATE            : 'DATE';
DECLARE            : 'DECLARE';
DEFAULT            : 'DEFAULT';
DESC            : 'DESC';
DFLTLANG        : 'DFLTLANG';
DO                : 'DO';
ELSE            : 'ELSE';
ELSIF            : 'ELSIF';
EMPTY            : 'EMPTY';
END                : 'END';
ENGLISH            : 'ENGLISH';
EQUALS_PATH        : 'EQUALS_PATH';
ESCAPE            : 'ESCAPE';
EXCEPTION        : 'EXCEPTION';
EXTENDABLE         : 'EXTENDABLE';
EXTENSION        : 'EXTENSION';
EXIT            : 'EXIT';
FALSE            : 'FALSE';
FILE            : 'FILE';
FILENAME        : 'FILENAME';
FINAL            : 'FINAL';
FOR                : 'FOR';
FOOT            : 'FOOT';
FRENCH            : 'FRENCH';
FUNCTION        : 'FUNCTION';
GERMAN            : 'GERMAN';
GROUP            : 'GROUP';
HEAD            : 'HEAD';
ID_QUALIFIER    : 'ID';
IF                : 'IF';
IMPORT            : 'IMPORT';
IN                : 'IN';
INHERIT            : 'INHERIT';
INSERT            : 'INSERT';
IS                : 'IS';
ITALIAN            : 'ITALIAN';
LABEL            : 'LABEL';
LAYOUT            : 'LAYOUT';
LEFT            : 'LEFT';
LIKE            : 'LIKE';
LIKE2            : 'LIKE2';
LIKE4            : 'LIKE4';
LIKEC            : 'LIKEC';
LONG            : 'LONG';
LOOP            : 'LOOP';
MEMBER            : 'MEMBER';
MOD                  : 'MOD';
NAMING             : 'NAMING';
NATIVE             : 'NATIVE';
NEW                : 'NEW';
NOT                : 'NOT';
NULL            : 'NULL';
OBSOLETE        : 'OBSOLETE';
OF                : 'OF';
ON                : 'ON';
ONLY            : 'ONLY';
OR                : 'OR';
ORDER            : 'ORDER';
PACKAGE         : 'PACKAGE';
PILLAR            : 'PILLAR';
PILLAR_DONE        : 'PILLAR_DONE';
PRESENT         : 'PRESENT';
PROCEDURE        : 'PROCEDURE';
PRINT            : 'PRINT';
PRIVATE            : 'PRIVATE';
PROTECTED        : 'PROTECTED';
PUBLIC            : 'PUBLIC';
PUT_STATEMENT    : 'PUT' SQUARED_BRACKED_EXPRESSION;
RAISE            : 'RAISE';
REGEXP_LIKE        : 'REGEXP_LIKE';
REPORT            : 'REPORT';
RETURN            : 'RETURN';
REVERSE            : 'REVERSE';
RIGHT            : 'RIGHT';
SCRIPT            : 'SCRIPT';
SET                : 'SET';
SPANISH            : 'SPANISH';
SUBMULTISET        : 'SUBMULTISET';
SUBSTITUTE        : 'SUBSTITUTE';
SUM                : 'SUM';
TAB                : 'TAB';
TEXT            : 'TEXT';
THEN            : 'THEN';
TIME_TZ            : 'TIME_TZ';
TOP                : 'TOP';
TRUE            : 'TRUE';
TYPE            : 'TYPE';
UNDER_PATH        : 'UNDER_PATH';
UPDATE            : 'UPDATE';
UPSERT            : 'UPSERT';
USER_ID            : 'USER_ID';
USING            : 'USING';
VERBOSE_ASSIGN    : 'ASSIGN';
WHEN            : 'WHEN';
WHERE            : 'WHERE';
WHILE            : 'WHILE';
WITH            : 'WITH';
XLS                : 'XLS';

QUOTED_STRING
    :    ( 'n' )? '\'' ( '\'\'' | ~('\'') )* '\''
    ;

DOUBLEQUOTED_STRING
    :    '"' ~('"')* '"'
    ;

ID /*options { testLiterals=true; }*/
    :    'A' .. 'Z' ( 'A' .. 'Z' | '0' .. '9' | '_' | '$' | '#' )*
    ;

SEMI
    :    ';'
    ;

COLON
    :    ':'
    ;

DOUBLEDOT
    :    POINT POINT
    ;

DOT
    :    POINT
    ;

fragment
POINT
    :    '.'
    ;

COMMA
    :    ','
    ;

EXPONENT
    :    '**'
    ;

ASTERISK
    :    '*'
    ;

AT_SIGN
    :    '@'
    ;

RPAREN
    :    ')'
    ;

LPAREN
    :    '('
    ;

RBRACK
    :    ']'
    ;


LBRACK
    :    '['
    ;

PLUS
    :    '+'
    ;

MINUS
    :    '-'
    ;

DIVIDE
    :    '/'
    ;

EQ
    :    '='
    ;

PERCENTAGE
    :    '%'
    ;

LLABEL
    :    '<<'
    ;

RLABEL
    :    '>>'
    ;

ASSIGN
    :    ':='
    ;

ARROW
    :    '=>'
    ;

VERTBAR
    :    '|'
    ;

DOUBLEVERTBAR
    :    '||'
    ;

NOT_EQ
    :    '<>' | '!=' | '^='
    ;

LTH
    :    '<'
    ;

LEQ
    :    '<='
    ;

GTH
    :    '>'
    ;

GEQ
    :    '>='
    ;

NUMBER
    :
    (( N POINT N ) => N POINT N
    |            POINT N
    |            N
    )
    ( 'E' ( PLUS | MINUS )? N )?
    ;

fragment
N
    : '0' .. '9' ( '0' .. '9' )*
    ;

QUOTE
    :    '\''
    ;

NEWLINE
    :    ('\r'? '\n') {$channel=HIDDEN;};

WS    :    (' '| '\r' | '\t' | '\n') {$channel=HIDDEN;}
    ;

SL_COMMENT
    :    '--' ~('\n'|'\r')* '\r'? '\n' {$channel=CHANNEL_COMMENT;}
    ;

ML_COMMENT
    :    '/*' ( options {greedy=false;} : . )* '*/'
{$channel=CHANNEL_COMMENT;}
    ;

fragment
SQUARED_BRACKED_EXPRESSION
    :
    '[' (options {greedy=false;} :  .)* ']'
    ;


Some code:

[REPORT 2.0]

REPORT ATS_TEST_REP.TEST_CASE


--------------------------------------------------------------------------
--
  NAMING
    DFLTLANG  "TEST CASE HTML OVERVIEW"
  USER_ID     "TC"



--------------------------------------------------------------------------
--
  -- DATAMART

--------------------------------------------------------------------------
--
  DATAMART

    CONNECT DTM_ATS_TEST_REP AS DTM
      WHERE [DTM.ATS_TEST_PRC_TYPE.INTL_ID != 'DESCN']


    GROUP BY
      ENV_MODULE    [DTM.ENV_MODULE_ID]
           ORDER BY [DTM.ENV_MODULE.USER_ID]

      ENV_COMPO     [DTM.ENV_COMPO_ID]
           ORDER BY [DTM.ENV_COMPO.USER_ID]

      TEST_CASE     [DTM.ATS_TEST_CASE_STEP_ID]
           ORDER BY [DTM.ATS_TEST_CASE_NAME]

      TEST_STEP     [DTM.ATS_TEST_STEP_ID]


    CONSOLIDATE

      ON TOP
        PAR_COMPO_ID NUMBER   ASSIGN
[TASK_EXEC.PARAM('ENV_COMPO_ID').NR_VAL]

      ON ENV_MODULE
        NAME        TEXT      ASSIGN    [DTM.ENV_MODULE.NAME]
        USER_ID     TEXT      ASSIGN    [DTM.ENV_MODULE.USER_ID]
        STEP_CNT    NUMBER    SUM       [ENV_COMPO.STEP_CNT]
        TC_CNT      NUMBER    SUM       [ENV_COMPO.TC_CNT]
        COMPO_CNT   NUMBER    SUM       [ENV_COMPO.COMPO_CNT]

      ON ENV_COMPO
        NAME        TEXT      ASSIGN    [DTM.ENV_COMPO.NAME]
        USER_ID     TEXT      ASSIGN    [DTM.ENV_COMPO.USER_ID]
        STEP_CNT    NUMBER    SUM       [TEST_CASE.STEP_CNT]
        TC_CNT      NUMBER    SUM       [TEST_CASE.TC_CNT]
        COMPO_CNT   NUMBER    ASSIGN    [1]

      ON TEST_CASE
        NAME        TEXT      ASSIGN    [DTM.ATS_TEST_CASE_NAME]
        INTL_ID     TEXT      ASSIGN    [DTM.ATS_TEST_CASE_STEP.INTL_ID]
        STEP_CNT    NUMBER    SUM       [TEST_STEP.STEP_CNT]
        TC_CNT      NUMBER    ASSIGN    [1]

      ON TEST_STEP
        STEP_CNT    NUMBER    ASSIGN    [1]

  END DATAMART



--------------------------------------------------------------------------
--
  -- LAYOUT

--------------------------------------------------------------------------
--
  FILE LAYOUT
    TYPE HTML
    IMPORT ATS_TEST_REP;
    FILENAME ATS_TEST_REP.FILE_NAME(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
FALSE, TOP.PAR_COMPO_ID)


--------------------------------------------------------------------------
    ON REPORT HEAD
      PUT
        [
<HTML>
  <HEAD>
    <TITLE>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE,
FALSE, TOP.PAR_COMPO_ID)]</TITLE>
    [ATS_TEST_REP.CSS]
  </HEAD>
  <BODY>
    <H1>[ATS_TEST_REP.PAGE_TITLE(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, FALSE,
TOP.PAR_COMPO_ID)]</H1>
    <TABLE>
      <TR>
        <TH CLASS="MODULE">MODULE</TH>
        <TH CLASS="COMPO">COMPO</TH>
        <TH CLASS="TC">TEST CASE</TH>
        <TH CLASS="CNT">TEST CASE/STEP #</TH>
      </TR>
        ]



--------------------------------------------------------------------------
    ON ENV_MODULE HEAD
      PUT
        [
      <TR>
        <TD CLASS="MODULE"
ROWSPAN="[ENV_MODULE.TC_CNT+ENV_MODULE.COMPO_CNT+1]">[ENV_MODULE.USER_ID]<
/TD>
        <TD CLASS="MODULE" COLSPAN="2">&NBSP;</TD>
        <TD CLASS="MODULE CNT">[ENV_MODULE.TC_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON ENV_COMPO HEAD
      PUT
        [
      <TR>
        <TD CLASS="COMPO"
ROWSPAN="[ENV_COMPO.TC_CNT+1]">[ENV_COMPO.USER_ID]</TD>
        <TD CLASS="COMPO">&NBSP;</TD>
        <TD CLASS="COMPO CNT">[ENV_COMPO.TC_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON TEST_CASE HEAD
      PUT
        [
      <TR>
        <TD CLASS="TC"><A
HREF="[ATS_TEST_REP.FILE_NAME(ATS_TEST_REP.C_REP_TYPE_TEST_CASE, TRUE,
TOP.PAR_COMPO_ID)]#[ATS_TEST_REP.LINK_REF(ATS_TEST_REP.C_LINK_REF_TYPE_TES
T_CASE,
TEST_CASE.INTL_ID)]">[TEST_CASE.NAME]</A></TD>
        <TD CLASS="TC CNT">[TEST_CASE.STEP_CNT]</TD>
      </TR>
        ]



--------------------------------------------------------------------------
    ON REPORT FOOT
      PUT
        [
    </TABLE>
  </BODY>
</HTML>
        ]

  END LAYOUT

END REPORT

error:

line 74:6 mismatched input 'PUT' expecting PUT_STATEMENT line 88:39 no
viable alternative at character '#'
line 95:6 mismatched input 'PUT' expecting PUT_STATEMENT line 99:39 no
viable alternative at character '&'
line 107:6 mismatched input 'PUT' expecting PUT_STATEMENT line 111:26 no
viable alternative at character '&'
line 119:6 mismatched input 'PUT' expecting PUT_STATEMENT line 130:6
mismatched input 'PUT' expecting PUT_STATEMENT

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From apalala at gmail.com  Thu Sep 27 22:24:19 2012
From: apalala at gmail.com (=?UTF-8?Q?Juancarlo_A=C3=B1ez?=)
Date: Fri, 28 Sep 2012 00:54:19 -0430
Subject: [antlr-interest] Hide a lexer rules and call it explicitely
 from parser rule
In-Reply-To: <39f9cb3461b4b96ca3e70f92da974dc5@mail.gmail.com>
References: <CAJbG4KDoWgjmerMyixF3gaVfhY-v+P88JDe2Vix-MnCKyOKG0w@mail.gmail.com>
	<39f9cb3461b4b96ca3e70f92da974dc5@mail.gmail.com>
Message-ID: <CAN1YFWvGq-29dhiYfHHYyNUBFH0RnKvdwT9ZLrhUkPGwXdMqOQ@mail.gmail.com>

Jim,

On Thu, Sep 27, 2012 at 11:33 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Starting with Oracle SQL as your first grammar is not a good idea. You
> need to read the documentation and the getting started documents, as well
> as the examples. You cannot direct the lexer from the parser for instance.
> You need to step away and start with some small examples first. You cannot
> solve the '[' html ']' issue in the manner you are trying I am afraid.
>

Those are wise words. They should be framed somwhere on the ANTLR site or
docs.

Having access to the best available tool It is not enough. You have to know
what you're doing.

-- 
Juancarlo *A?ez*

From forumer at smartmobili.com  Fri Sep 28 06:49:43 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Fri, 28 Sep 2012 15:49:43 +0200
Subject: [antlr-interest] binary package for ANTLRWorks (antlrv4)
Message-ID: <70ef4aa5279b00f1b1d05badeab91388@smartmobili.com>

Hi,

Could someone provide some binary package (jar) of the next ANTLWorks 
based on antlrv4 ?

Thanks


From biboudis at gmail.com  Fri Sep 28 07:02:50 2012
From: biboudis at gmail.com (Aggelos Biboudis)
Date: Fri, 28 Sep 2012 17:02:50 +0300
Subject: [antlr-interest] Invalid class cast exception
 DebugTokenStream/TokenRewriteStream when rewriting C source
Message-ID: <CAHLSyC==upL1w_wgFhA=W+EF=DvBA68x1b+6OXa6YzZROXNmtg@mail.gmail.com>

 Dear all,

I am using the debug feature of ANTLRWorks 1.4.3 to make source-to-source
transformations of a C program. I have altered the grammar rule for
compound statement with the following format:

compound_statement
    :  '{' {<some_semantic_predicate>}? declaration* statement_list? '}' ->
<some_alternative>
    |  '{' declaration* statement_list? '}'
    ;

I am getting a ClassCastException in runtime for these two class types.

Exception in thread "main" java.lang.ClassCastException:
org.antlr.runtime.debug.DebugTokenStream cannot be cast to
org.antlr.runtime.TokenRewriteStream
    at CParser.compound_statement(CParser.java:10615)
    at CParser.statement(CParser.java:9444)
    at CParser.selection_statement(CParser.java:11022)
    at CParser.statement(CParser.java:9472)
    at CParser.statement_list(CParser.java:10796)
    at CParser.compound_statement(CParser.java:10693)
    at CParser.function_definition(CParser.java:1171)
    at CParser.external_declaration(CParser.java:778)
    at CParser.translation_unit(CParser.java:379)
    at __Test__.main(__Test__.java:19)

In CParser, line 10615, contains only an integer assignment, so I cannot
understand what may went wrong. Has anyone any clue about what may have
happened here?

Thanks,
Aggelos

From danieladacruz at gmail.com  Fri Sep 28 07:14:18 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Fri, 28 Sep 2012 15:14:18 +0100
Subject: [antlr-interest] Testing literals
Message-ID: <CACKT26yb-fUE49py60ttHibADHhH+Aexk9As3_6Aj3W8RxvDcg@mail.gmail.com>

Hi

I am building a grammar for Objective-C using Antlr 2.7 (other versions are
not an option).

One problem I am having is the following. For example, in Objective-C we
have:

foreach(int c in list)
{
}

But we can also have:

int in;

In the grammar I have a rule for identifiers with the option testLiterals =
true ("in" is currently a Literal).

This result in the expression "int in" be not parsed! Anyone have an idea
how to solve this?

thanks
daniela

From mike at cargal.net  Sat Sep 29 14:39:11 2012
From: mike at cargal.net (Mike Cargal)
Date: Sat, 29 Sep 2012 17:39:11 -0400
Subject: [antlr-interest] where do I get antlr-3.5-complete.jar
Message-ID: <0760983E-F424-4B3A-8EF5-86A287EE9B0A@cargal.net>

I just grabbed antlr4 from git.  The build.properties reference antler-3.5-complete.jar, but I'm not able to find it anywhere.

I could get a successful build by chaining it to reference 3.4, but I'd prefer to be up to date/

From parrt at cs.usfca.edu  Sat Sep 29 15:50:16 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 29 Sep 2012 15:50:16 -0700
Subject: [antlr-interest] where do I get antlr-3.5-complete.jar
In-Reply-To: <0760983E-F424-4B3A-8EF5-86A287EE9B0A@cargal.net>
References: <0760983E-F424-4B3A-8EF5-86A287EE9B0A@cargal.net>
Message-ID: <9A996C2C-3BC9-41C1-81F9-83B9C611272A@cs.usfca.edu>

sorry?i'm still waiting on Jim Idle to update this C target before I push 3.5?wooops. 3.4 will work for now
Ter
On Sep 29, 2012, at 2:39 PM, Mike Cargal wrote:

> I just grabbed antlr4 from git.  The build.properties reference antler-3.5-complete.jar, but I'm not able to find it anywhere.
> 
> I could get a successful build by chaining it to reference 3.4, but I'd prefer to be up to date/
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Sep 29 16:06:50 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 29 Sep 2012 16:06:50 -0700
Subject: [antlr-interest] Bug in antlr4
In-Reply-To: <505C68B8.3030602@mollerware.com>
References: <505C68B8.3030602@mollerware.com>
Message-ID: <EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>

Hi. I just ran and it seems ok:

$ java ExtractInterfaceTool Demo.java
interface IDemo {
	void f(int x, String y);
	int[ ] g(/*no args*/);
	List<Map<String, Integer>>[] h();
}

and with 4.0b1 jar specifically:

$ java -cp .:~/tmp/antlr-4.0b1-complete.jar:$CLASSPATH ExtractInterfaceTool Demo.java
interface IDemo {
	void f(int x, String y);
	int[ ] g(/*no args*/);
	List<Map<String, Integer>>[] h();
}

not sure what is happening. i'm using java 1.6 on mac os x 10.7.5.

Ter
On Sep 21, 2012, at 6:16 AM, Chris Moller wrote:

> I just found what I'm fairly sure is a previously unfound bug in v4. Is 
> there a list for that?  Or just go straight to github bugs?
> 
> FWIW, the bug is from the ExtractInterfaceTool example in the pragprog 
> manual.  Per the manual, the result is supposed to be:
> 
>    interface IDemo {
>    void f(int x, String y);
>    int[ ] g(/*no args*/);
>    List<Map<String, Integer>>[] h();
>    }
> 
> 
> and the actual is:
> 
>    interface IDemo {
>    void f(intx,Stringy);
>    int[] g();
>    List<Map<String,Integer>>[] h();
>    }
> 
> 
> The spaces are missing between the types and the parms of method f().  
> Also, more trivially, the comment from the arg list of g() is missing.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From moller at mollerware.com  Sat Sep 29 16:47:49 2012
From: moller at mollerware.com (Chris Moller)
Date: Sat, 29 Sep 2012 19:47:49 -0400
Subject: [antlr-interest] Bug in antlr4
In-Reply-To: <EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>
References: <505C68B8.3030602@mollerware.com>
	<EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>
Message-ID: <506788A5.10108@mollerware.com>

I just rebuilt all the classes:

    java -jar /usr/local/lib/antlr-4.0b1-complete.jar Java.g4
    javac ExtractInterfaceTool.java ExtractInterfaceListener.java
    JavaBaseListener.java JavaLexer.java JavaListener.java JavaParser.java


and reran it:

    java -cp .:/usr/local/lib/antlr-4.0b1-complete.jar:$CLASSPATH
    ExtractInterfaceTool Demo.java
    interface IDemo {
             void f(intx,Stringy);
             int[] g();
             List<Map<String,Integer>>[] h();
    }

and get the same result.

Fedora release 15 (Lovelock) and java-1.6.0-openjdk

II tried looking at the Java antlr created, looking for anything 
obvious, but (a) I'm not a Java guy, and (b) I dead-ended at some antlr 
classes and haven't brought down the source code.  If you like, I'll 
poke at it some more, but refer to (a).

cm

On 09/29/12 19:06, Terence Parr wrote:
> Hi. I just ran and it seems ok:
>
> $ java ExtractInterfaceTool Demo.java
> interface IDemo {
> 	void f(int x, String y);
> 	int[ ] g(/*no args*/);
> 	List<Map<String, Integer>>[] h();
> }
>
> and with 4.0b1 jar specifically:
>
> $ java -cp .:~/tmp/antlr-4.0b1-complete.jar:$CLASSPATH ExtractInterfaceTool Demo.java
> interface IDemo {
> 	void f(int x, String y);
> 	int[ ] g(/*no args*/);
> 	List<Map<String, Integer>>[] h();
> }
>
> not sure what is happening. i'm using java 1.6 on mac os x 10.7.5.
>
> Ter
> On Sep 21, 2012, at 6:16 AM, Chris Moller wrote:
>
>> I just found what I'm fairly sure is a previously unfound bug in v4. Is
>> there a list for that?  Or just go straight to github bugs?
>>
>> FWIW, the bug is from the ExtractInterfaceTool example in the pragprog
>> manual.  Per the manual, the result is supposed to be:
>>
>>     interface IDemo {
>>     void f(int x, String y);
>>     int[ ] g(/*no args*/);
>>     List<Map<String, Integer>>[] h();
>>     }
>>
>>
>> and the actual is:
>>
>>     interface IDemo {
>>     void f(intx,Stringy);
>>     int[] g();
>>     List<Map<String,Integer>>[] h();
>>     }
>>
>>
>> The spaces are missing between the types and the parms of method f().
>> Also, more trivially, the comment from the arg list of g() is missing.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>



From tero.koskinen at iki.fi  Sun Sep 30 04:57:11 2012
From: tero.koskinen at iki.fi (Tero Koskinen)
Date: Sun, 30 Sep 2012 14:57:11 +0300
Subject: [antlr-interest] Bug in antlr4
In-Reply-To: <506788A5.10108@mollerware.com>
References: <505C68B8.3030602@mollerware.com>
	<EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>
	<506788A5.10108@mollerware.com>
Message-ID: <CAOS_ZyiJgh2bXkp+h3+2aPGjCiEcpZVOLm462rd0oowhJFrFUA@mail.gmail.com>

Hi,

On Sun, Sep 30, 2012 at 2:47 AM, Chris Moller <moller at mollerware.com> wrote:
>     interface IDemo {
>              void f(intx,Stringy);
>              int[] g();
>              List<Map<String,Integer>>[] h();
>     }

I can repeat the problem on Windows 7 with JDK 1.7:

[C:\work\antlr-examples]java -cp
output;g:\java\antlr\antlr-4.0b1-complete.jar ExtractInterfaceTool
Demo.java
interface IDemo {
        void f(intx,Stringy);
        int[] g();
        List<Map<String,Integer>>[] h();
}

[C:\work\antlr-examples]java -version
java version "1.7.0_03"
Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)

[C:\work\antlr-examples]type Demo.java
/***
 * Excerpted from "The Definitive ANTLR 4 Reference",
 * published by The Pragmatic Bookshelf.
 * Copyrights apply to this code. It may not be used to create
training material,
 * courses, books, articles, and the like. Contact us if you are in doubt.
 * We make no guarantees that this code is fit for any purpose.
 * Visit http://www.pragmaticprogrammer.com/titles/tpantlr2 for more
book information.
***/
import java.util.List;
import java.util.Map;
public class Demo {
        void f(int x, String y) { }
        int[ ] g(/*no args*/) { return null; }
        List<Map<String, Integer>>[] h() { return null; }
}

[C:\work\antlr-examples]which md5sum
md5sum is an external : C:\WinAVR-20100110\utils\bin\md5sum.exe

[C:\work\antlr-examples]md5sum g:\java\antlr\antlr-4.0b1-complete.jar
\8216a2944a8c64fe819b450b99dd65c5 *g:\\java\\antlr\\antlr-4.0b1-complete.jar

[C:\work\antlr-examples]java -version
java version "1.7.0_03"
Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)

Yours,
 Tero Koskinen

From parrt at cs.usfca.edu  Sun Sep 30 15:11:39 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Sep 2012 15:11:39 -0700
Subject: [antlr-interest] Bug in antlr4
In-Reply-To: <CAOS_ZyiJgh2bXkp+h3+2aPGjCiEcpZVOLm462rd0oowhJFrFUA@mail.gmail.com>
References: <505C68B8.3030602@mollerware.com>
	<EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>
	<506788A5.10108@mollerware.com>
	<CAOS_ZyiJgh2bXkp+h3+2aPGjCiEcpZVOLm462rd0oowhJFrFUA@mail.gmail.com>
Message-ID: <6A24CFCA-21CF-4840-A995-09A4440A6B64@cs.usfca.edu>

ah! Java.g4 used -> skip not -> channel(HIDDEN) in last iteration by mistake. try:

// START: COMMENT
COMMENT
    :   '/*' .* '*/'     -> channel(HIDDEN) // match anything between /* and */
    ;
WS  :   [ \r\t\u000C\n]+ -> channel(HIDDEN)
    ;
// END: COMMENT

LINE_COMMENT
    : '//' ~[\r\n]* '\r'? '\n' -> channel(HIDDEN)
    ;

in Java.g4

Ter
On Sep 30, 2012, at 4:57 AM, Tero Koskinen wrote:

> Hi,
> 
> On Sun, Sep 30, 2012 at 2:47 AM, Chris Moller <moller at mollerware.com> wrote:
>>    interface IDemo {
>>             void f(intx,Stringy);
>>             int[] g();
>>             List<Map<String,Integer>>[] h();
>>    }
> 
> I can repeat the problem on Windows 7 with JDK 1.7:
> 
> [C:\work\antlr-examples]java -cp
> output;g:\java\antlr\antlr-4.0b1-complete.jar ExtractInterfaceTool
> Demo.java
> interface IDemo {
>        void f(intx,Stringy);
>        int[] g();
>        List<Map<String,Integer>>[] h();
> }
> 
> [C:\work\antlr-examples]java -version
> java version "1.7.0_03"
> Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
> Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)
> 
> [C:\work\antlr-examples]type Demo.java
> /***
> * Excerpted from "The Definitive ANTLR 4 Reference",
> * published by The Pragmatic Bookshelf.
> * Copyrights apply to this code. It may not be used to create
> training material,
> * courses, books, articles, and the like. Contact us if you are in doubt.
> * We make no guarantees that this code is fit for any purpose.
> * Visit http://www.pragmaticprogrammer.com/titles/tpantlr2 for more
> book information.
> ***/
> import java.util.List;
> import java.util.Map;
> public class Demo {
>        void f(int x, String y) { }
>        int[ ] g(/*no args*/) { return null; }
>        List<Map<String, Integer>>[] h() { return null; }
> }
> 
> [C:\work\antlr-examples]which md5sum
> md5sum is an external : C:\WinAVR-20100110\utils\bin\md5sum.exe
> 
> [C:\work\antlr-examples]md5sum g:\java\antlr\antlr-4.0b1-complete.jar
> \8216a2944a8c64fe819b450b99dd65c5 *g:\\java\\antlr\\antlr-4.0b1-complete.jar
> 
> [C:\work\antlr-examples]java -version
> java version "1.7.0_03"
> Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
> Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)
> 
> Yours,
> Tero Koskinen
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From moller at mollerware.com  Sun Sep 30 17:44:12 2012
From: moller at mollerware.com (Chris Moller)
Date: Sun, 30 Sep 2012 20:44:12 -0400
Subject: [antlr-interest] Bug in antlr4
In-Reply-To: <6A24CFCA-21CF-4840-A995-09A4440A6B64@cs.usfca.edu>
References: <505C68B8.3030602@mollerware.com>
	<EB07AC18-24D6-4BC0-AFD2-91A59A881329@cs.usfca.edu>
	<506788A5.10108@mollerware.com>
	<CAOS_ZyiJgh2bXkp+h3+2aPGjCiEcpZVOLm462rd0oowhJFrFUA@mail.gmail.com>
	<6A24CFCA-21CF-4840-A995-09A4440A6B64@cs.usfca.edu>
Message-ID: <5068E75C.30602@mollerware.com>

Bingo!

That fixed it.


On 09/30/12 18:11, Terence Parr wrote:
> ah! Java.g4 used -> skip not -> channel(HIDDEN) in last iteration by mistake. try:
>
> // START: COMMENT
> COMMENT
>      :   '/*' .* '*/'     -> channel(HIDDEN) // match anything between /* and */
>      ;
> WS  :   [ \r\t\u000C\n]+ -> channel(HIDDEN)
>      ;
> // END: COMMENT
>
> LINE_COMMENT
>      : '//' ~[\r\n]* '\r'? '\n' -> channel(HIDDEN)
>      ;
>
> in Java.g4
>
> Ter
> On Sep 30, 2012, at 4:57 AM, Tero Koskinen wrote:
>
>> Hi,
>>
>> On Sun, Sep 30, 2012 at 2:47 AM, Chris Moller <moller at mollerware.com> wrote:
>>>     interface IDemo {
>>>              void f(intx,Stringy);
>>>              int[] g();
>>>              List<Map<String,Integer>>[] h();
>>>     }
>> I can repeat the problem on Windows 7 with JDK 1.7:
>>
>> [C:\work\antlr-examples]java -cp
>> output;g:\java\antlr\antlr-4.0b1-complete.jar ExtractInterfaceTool
>> Demo.java
>> interface IDemo {
>>         void f(intx,Stringy);
>>         int[] g();
>>         List<Map<String,Integer>>[] h();
>> }
>>
>> [C:\work\antlr-examples]java -version
>> java version "1.7.0_03"
>> Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
>> Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)
>>
>> [C:\work\antlr-examples]type Demo.java
>> /***
>> * Excerpted from "The Definitive ANTLR 4 Reference",
>> * published by The Pragmatic Bookshelf.
>> * Copyrights apply to this code. It may not be used to create
>> training material,
>> * courses, books, articles, and the like. Contact us if you are in doubt.
>> * We make no guarantees that this code is fit for any purpose.
>> * Visit http://www.pragmaticprogrammer.com/titles/tpantlr2 for more
>> book information.
>> ***/
>> import java.util.List;
>> import java.util.Map;
>> public class Demo {
>>         void f(int x, String y) { }
>>         int[ ] g(/*no args*/) { return null; }
>>         List<Map<String, Integer>>[] h() { return null; }
>> }
>>
>> [C:\work\antlr-examples]which md5sum
>> md5sum is an external : C:\WinAVR-20100110\utils\bin\md5sum.exe
>>
>> [C:\work\antlr-examples]md5sum g:\java\antlr\antlr-4.0b1-complete.jar
>> \8216a2944a8c64fe819b450b99dd65c5 *g:\\java\\antlr\\antlr-4.0b1-complete.jar
>>
>> [C:\work\antlr-examples]java -version
>> java version "1.7.0_03"
>> Java(TM) SE Runtime Environment (build 1.7.0_03-b05)
>> Java HotSpot(TM) Client VM (build 22.1-b02, mixed mode, sharing)
>>
>> Yours,
>> Tero Koskinen
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>



From gwlist at grahamwideman.com  Sun Sep 30 22:19:54 2012
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Sun, 30 Sep 2012 22:19:54 -0700
Subject: [antlr-interest] ANTLR4b2 download not working
Message-ID: <20121001052003.FNVB29577.fed1rmfepo201.cox.net@fed1rmimpo305>

Hi Ter and all,

On page  https://github.com/antlr/antlr4 there's a link to the 4.0b2 jar download: 
<http://www.antlr.org/download/antlr-4.0b2-complete.jar>http://www.antlr.org/download/antlr-4.0b2-complete.jar.

Currently (10:15 pm Pacific, 2012-09-30), this returns a server error: "The requested resource (http://www.antlr.org/download/antlr-4.0b2-complete.jar) is not available."

I guess this might relate to recent bugfix, and I note that various branches of the source have been changed within recent hours.

But in case it's not just working its way through the system I thought I'd mention it.

-- Graham



