From klaren at cs.utwente.nl  Mon Mar  1 02:41:01 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:26 2004
Subject: [antlr-interest] anybody have opinions on blogging systems written in Java?
In-Reply-To: <77C296C8-6977-11D8-97D0-000A95891192@cs.usfca.edu>
References: <77C296C8-6977-11D8-97D0-000A95891192@cs.usfca.edu>
Message-ID: <20040301104101.GA25020@cs.utwente.nl>

Hi,

On Fri, Feb 27, 2004 at 02:51:23PM -0800, Terence Parr wrote:
> about adding forums to antlr.org (thus avoiding nasty 
> yahoogroups) and blogging.  I suspect that blogging is merely a variant 
> of forums, but have looked at these bloggers written in java:

Blogging? Hmmm seems useless to me unless I'm using another definition of
it (basically I only know those as personal pages with odds bits of info
whatever the author wants)

A wiki seems more usefull to me (than a blog) or normal (no offence for the
jguru forums) forum software. A tried phpbb or FUDforum supplies a lot more
and easier functionality (they also install in 5-10 mins if you have a PHP
capable webserver).

Also a good search function would be nice the yahoogroups search seems to
have gotten close to useless over the years.

> http://snipsnap.org/

The wiki part of this one I like.

> http://blojsom.sourceforge.net/
> http://www.rollerweblogger.org/page/project

I don't think these are very usefull to us. Looking at the feature list
their just blogging systems e.g. useless.

> Oh and http://www.jivesoftware.com  would be the forum system.

Would probably require the professional or the enterprise versions for all
the bells and whistles. Then you look at the price.. think about it again..
and download some free forum software that has it all for free....
(Although the software itself looks quite functional after some playing
around)

I'm not sure wether it's a good idea to only have a wiki or only have a
forum. To have both is probably a good idea. Especially forum software that
does not scare a person away (like the ANTLR forums at jguru did with me).
Personally I know I can live with PHPbb or FUDforum like forums, they have
good support for viewing new messages since a last visit, have good
moderation support (e.g. move/copy/delete threads, edit posts and other
things that can help in massaging posts in faq like things), you can sticky
posts, lock stuff etc. Also good support for adding/changing moderators for
board sections etc. Also private messages are supported. I don't think they
have a full email gateway but that's something I can forgo. At least
fudforum has some gateway support but I've never worked with it.

I like FUD forum (fud.prohost.org) pretty much since it's very light in
graphics and seems to be better architected than PHPbb.

The wiki I'd see as the place to keep the documentation of ANTLR, together
with examples etc.

Well that's my 2cts anyway ;)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Innovation makes enemies of all those who prospered under the old
   regime, and only lukewarm support is forthcoming from those who would
               prosper under the new. --- Niccolò Machiavelli



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar  1 05:17:52 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Building for Debugging?
In-Reply-To: <c1t6dq+k52f@eGroups.com>
References: <c1t6dq+k52f@eGroups.com>
Message-ID: <20040301131752.GC25020@cs.utwente.nl>

On Sun, Feb 29, 2004 at 05:10:18PM -0000, offline314159 wrote:
> I attempted to turn on the debugging mode for my parser, got this
> exception:
> 
> java.lang.RuntimeException: setDebugMode() only valid if parser built
> for debugging
> 
> My grammar has the option analyzerDebug=true set in it, but i still
> get this.  How can i fix this?

I think that should be the -debug option when generating. I have no clue
though if the old parseview stuff still works. The guy who wrote it went
MIA. On my antlr page there's a somewhat updated version of the parseview
stuff but I have no idea wether it still works:

http://wwwhome.cs.utwente.nl/~klaren/antlr

The analyzerDebug option is only for debugging parts of antlr itself.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     "Evil will always triumph, because Good is dumb." ---  Spaceballs



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From andreas.zielke at gmx.net  Mon Mar  1 06:52:42 2004
From: andreas.zielke at gmx.net (andreaszielke21)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] lexical nondeterminism Problem
Message-ID: <c1vinq+v8a6@eGroups.com>

Hi *,

I'm trying to build a lexer that is able to differentiate between 
numbers and dates.
I'm not proficient using antlr-style regular expressions so I'll give 
you a short description of the two tokens.
The lexer should return a date token for anything that matches 
dd?.mm?.yyyy i.e. 1.1.1900 or 05.12.2004.
The lexer should return a number token for anything that matches
x+(,x+)? i.e. 3,14 or 42.

My input file for antlr is this:
----------snip-------------------
class TestLexer extends Lexer;
options {
  k=3;
}

DATE  :	'0'..'9'('0'..'9')? '.' '0'..'9' ('0'..'9')? '.' 
('0'..'9''0'..'9''0'..'9''0'..'9')
      { System.out.println("Found DATE:" + getText()); }
      ;

NUM   : ('0'..'9')+(','('0'..'9')+)?
      { System.out.println("Found NUM :" + getText()); }
      ;
----------snip-------------------

I can understand that a lexer with a lookahead of one or two would 
not be able to differentiate between the two token-types, but even 
with a lookahead of three the antlr-Tool gives me the following error 
message:
antlr:
    [antlr] ANTLR Parser Generator   Version 2.7.2   1989-2003 
jGuru.com
    [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
\src\java\ch\forumedia\rpkc\blah.g: warning:lexical nondeterminism 
between rules DATE and NUM upon
    [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
\src\java\ch\forumedia\rpkc\blah.g:     k==1:'0'..'9'
    [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
\src\java\ch\forumedia\rpkc\blah.g:     k==2:'0'..'9'
    [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
\src\java\ch\forumedia\rpkc\blah.g:     k==3:'0'..'9'

Why is the inputfile nondeterministic? If the third character is a 
digit, it cannot be a DATE-Token!?!

Thanks for any hints,
  Andreas



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar  1 07:12:18 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] lexical nondeterminism Problem
In-Reply-To: <c1vinq+v8a6@eGroups.com>
References: <c1vinq+v8a6@eGroups.com>
Message-ID: <20040301151217.GE25020@cs.utwente.nl>

On Mon, Mar 01, 2004 at 02:52:42PM -0000, andreaszielke21 wrote:
> I'm trying to build a lexer that is able to differentiate between 
> numbers and dates.
> I'm not proficient using antlr-style regular expressions so I'll give 
> you a short description of the two tokens.
> The lexer should return a date token for anything that matches 
> dd?.mm?.yyyy i.e. 1.1.1900 or 05.12.2004.
> The lexer should return a number token for anything that matches
> x+(,x+)? i.e. 3,14 or 42.
> 
> My input file for antlr is this:
> ----------snip-------------------
> class TestLexer extends Lexer;
> options {
>   k=3;
> }
> 
> DATE  :	'0'..'9'('0'..'9')? '.' '0'..'9' ('0'..'9')? '.' 
> ('0'..'9''0'..'9''0'..'9''0'..'9')
>       { System.out.println("Found DATE:" + getText()); }
>       ;
> 
> NUM   : ('0'..'9')+(','('0'..'9')+)?
>       { System.out.println("Found NUM :" + getText()); }
>       ;
> ----------snip-------------------
> 
> I can understand that a lexer with a lookahead of one or two would 
> not be able to differentiate between the two token-types, but even 
> with a lookahead of three the antlr-Tool gives me the following error 
> message:
> antlr:
>     [antlr] ANTLR Parser Generator   Version 2.7.2   1989-2003 
> jGuru.com
>     [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
> \src\java\ch\forumedia\rpkc\blah.g: warning:lexical nondeterminism 
> between rules DATE and NUM upon
>     [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
> \src\java\ch\forumedia\rpkc\blah.g:     k==1:'0'..'9'
>     [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
> \src\java\ch\forumedia\rpkc\blah.g:     k==2:'0'..'9'
>     [antlr] C:\PROGRA~1\eclipse\WORKSP~1\PLANKO~2
> \src\java\ch\forumedia\rpkc\blah.g:     k==3:'0'..'9'
> 
> Why is the inputfile nondeterministic? If the third character is a 
> digit, it cannot be a DATE-Token!?!

For a lexer all the non protected rules are combined in one rule/method
(nextToken). So the different non protected rules should not share the same
lookahead. You can solve this by leftfactoring.

DATE_OR_NUM  :	
	( '0'..'9' )+ { $setType(NUM); }
	( { $getText().length <= 2 }? '.' '0'..'9' ('0'..'9')? '.' 
	  ('0'..'9''0'..'9''0'..'9''0'..'9')
	  { $setType(DATE); System.out.println("Found DATE:" + getText()); }
	|   
	   (','('0'..'9')+)?
      { System.out.println("Found NUM :" + getText()); }
	)		
;

Did not test this it might contain an error or two. Also not sure if the
$getText().length trick works. Might have to check that in the normal action.

An alternative solution is using a predicate (peforms less but is more
readable):

DATE_OR_NUM  :	
	( ('0'..'9' ('0'..'9')? '.') => 
		'0'..'9' ('0'..'9')? '.' '0'..'9' ('0'..'9')? '.' 
	  ('0'..'9''0'..'9''0'..'9''0'..'9')
	  { $setType(DATE); System.out.println("Found DATE:" + getText()); }
	|   ( '0'..'9' )+ 
	   (','('0'..'9')+)?
      { $setType(NUM); System.out.println("Found NUM :" + getText()); }
	)		
;

Check the FAQ's on jGuru.com for more on this topic.

HTH,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "Good judgement comes from experience.
     Experience comes from bad judgement." --- Unknown



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Mon Mar  1 08:13:56 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Pushing Characters onto the InputBuffer
Message-ID: <20040301161356.88668.qmail@web12703.mail.yahoo.com>

Hello,

I'm trying to convert a yacc grammar which makes heavy
use of yacc's yyless/unput facilities.  Does ANTLR
provide a means from within an action to push an
arbitrary set of characters onto the input stream? 
I've poked around the code a bit but it seems that the
InputBuffer's queue is protected.  It would be easy
enough for me to expose the queue and rebuild ANTLR
but I'd rather not do this if I don't have to.  It's
possible that in general the use of syntactic
predicates eliminates the need for this kind of
behavior but I'm trying to keep my ANTLR grammar as
close to its yacc counterpart as possible.  So, is
there some way to add characters to the stream or do I
have to roll my own ANTLR?  Thanks in advance for any
replies.

-jason  

__________________________________
Do you Yahoo!?
Get better spam protection with Yahoo! Mail.
http://antispam.yahoo.com/tools


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From antlr-interest at yahoogroups.com  Mon Mar  1 09:43:43 2004
From: antlr-interest at yahoogroups.com (antlr-interest@yahoogroups.com)
Date: Mon Dec 20 16:16:27 2004
Subject: read it immediately
Message-ID: <20040301180304.73ED61CEBFD@lobby.jguru.com>

that's funny
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attachment.zip
Type: application/x-zip-compressed
Size: 22150 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040301/dc3c6d1b/attachment.bin
From klaren at cs.utwente.nl  Mon Mar  1 09:46:05 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Pushing Characters onto the InputBuffer
In-Reply-To: <20040301161356.88668.qmail@web12703.mail.yahoo.com>
References: <20040301161356.88668.qmail@web12703.mail.yahoo.com>
Message-ID: <20040301174605.GI25020@cs.utwente.nl>

Hi,

On Mon, Mar 01, 2004 at 08:13:56AM -0800, Jason wrote:
> I'm trying to convert a yacc grammar which makes heavy use of yacc's
> yyless/unput facilities.  Does ANTLR provide a means from within an action
> to push an arbitrary set of characters onto the input stream?

I trust you mean lex or flex?

No. And it's not advisable to do so unless you really really really really
know what you're doing. You'll very likely to break the use of syntactic
predicates (if you use them). Line/column counting might also be broken.
I'm not saying it might not be possible to do though but it would require
some serious debugging/testing, I would not be surprised if it might be
impossible in some cases. It really sounds like you want to use syntactic
predicates (e.g. guessing mode).

In the case you want to control this unputting of characters from the
parser I can again not recommend this unless you really really .. etc. ;)

> I've poked around the code a bit but it seems that the InputBuffer's queue
> is protected.  It would be easy enough for me to expose the queue and
> rebuild ANTLR but I'd rather not do this if I don't have to.  It's possible
> that in general the use of syntactic predicates eliminates the need for
> this kind of behavior but I'm trying to keep my ANTLR grammar as close to
> its yacc counterpart as possible.  So, is there some way to add characters
> to the stream or do I have to roll my own ANTLR?

Using predicates might give you a more elegant solution. But if you feel
adventurous ;)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Xander: "Buffy, we need to do something *now*"
  Angel: "We need a distraction."
  Buffy: "Right."
  Angel: "What are you going to do?"
  Buffy: "I'm going to kill them all. That oughtta distract 'em..."


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Mon Mar  1 10:08:07 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Pushing Characters onto the InputBuffer
In-Reply-To: <20040301174605.GI25020@cs.utwente.nl>
Message-ID: <20040301180807.25561.qmail@web12705.mail.yahoo.com>

Ric,

Thanks for taking the time to respond.
 
> I trust you mean lex or flex?

Yup.  I've had way too much coffee this morning; of
course I meant flex.
 
> No. And it's not advisable to do so unless you
> really really really really
> know what you're doing. You'll very likely to break
> the use of syntactic
> predicates (if you use them). Line/column counting
> might also be broken.
> I'm not saying it might not be possible to do though
> but it would require
> some serious debugging/testing, I would not be
> surprised if it might be
> impossible in some cases. It really sounds like you
> want to use syntactic
> predicates (e.g. guessing mode).

Yeah, I've had a closer look at the code since I
posted this morning and I realize now that there are
side affects I hadn't anticipated.  The line/column
stuff (a) seems easy enough to fix and (b) isn't very
important to me anyway, but the syntactic predicate
stuff is a different issue.  I don't use it currently
but I definitely want to keep that avenue open so I'm
probably going to ditch the 'roll your own' approach
and rework my grammar with predicates.  Thanks again
for your input.

-jason

__________________________________
Do you Yahoo!?
Get better spam protection with Yahoo! Mail.
http://antispam.yahoo.com/tools


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar  1 10:48:59 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] With apologies for the list-spam, here's another question
In-Reply-To: <c1ubtk+b92s@eGroups.com>
References: <c1ubtk+b92s@eGroups.com>
Message-ID: <19D9391C-6BB1-11D8-97D0-000A95891192@cs.usfca.edu>


On Feb 29, 2004, at 7:50 PM, offline314159 wrote:

> (note that this was foolishly asked in my other thread, little was i
> thinking -- since most people wisely skip the "thanks, d00d" messages.
>  I apologize to all the people who DID read it, and thank you all for
> your patience, which i won't try anymore:  on with the message!)
>
> The input for my parser may consist of "folded" text - basically, some
> lines that are beyond a reasonable length will be wrapped with leading
> whitespace indicating that their values are to be unfolded and treated
> as all one piece.
>
> So how do i look for that? I was originally handling it by filtering
> the input, but that was messing with my linefeeds and CRs, so i'd like
> to handle it in the parser. Essentially what i want is to return a
> single token, call it VALUE, that takes everything from the first ":"
> on a line to the first ENDL character that is not followed by some
> whitespace.
>
> Can this even be done?

Sure.  What's the indicator that you've gone beyond a "reasonable 
length"?  Just add code to the NEWLINE rule:

NEWLINE
     :   '\n' {newline();}
         ( {getColumn()>MAX}? (' '|'\t')+ {$setType(Token.SKIP);})?
     ;

This will ignore newline followed by whitespace if newline is beyond 
MAX column. :)

Ter		

--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Mon Mar  1 11:37:32 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Getting at the token text in a parser
Message-ID: <72C9789739C4214096AE945753B11EA3FABD84@mypxmail04.bco-home.com>

A great way to learn about what antlr is doing is to simply inspect the
generated code.  Helps explain non-determisisms too.

Monty

-----Original Message-----
From: offline314159 [mailto:offline@shaw.ca] 
Sent: Sunday, February 29, 2004 4:51 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Getting at the token text in a parser

Here's what i have  - copied verbatim, because i'm not sure where the
error is.  I'm working w/ 2.7.2 in Eclipse (using the antlreclipse
plugin)

=== begin grammar segment ---
baseitem
:
(
	{ System.out.println("Entering address"); }
	ADR
	(
		params
	)?
	addressparts
	|
	{ System.out.println("Entering org"); }
	ORG
	(
		params
	)?
	orgparts
	|
	{ System.out.println("Entering N"); }
	N
	(
		params
	)?
	nameparts
	|
	{ System.out.println("Entering Agent"); }
	AGENT
	(
		params
	)?
	value
	|
	{ System.out.println("Entering " + $getText); }
	name
	(
		params
	)?
	value
)
ENDL
;
=== end grammar segment ===

It's the $getText above that is giving me troubles - i can't seem to
use it anywhere - i get the following runtime error if i try:

== error ==
java.lang.Error: Unresolved compilation problems: 
	text cannot be resolved
	_begin cannot be resolved
	text cannot be resolved
	_begin cannot be resolved
== end error ==

I get that error anywhere and any time i try to use $getText

I would just be using the debugging parser, but i can't get that to
work either - if i try to turn on analytic debugging in the parser
options, antlr borks on me with a fairly unhelpful silence.

I'm trying hard to get a grasp of this tool, because i can see that
it's very powerful, but i'm getting frustrated at the seeming
impossibility of doing basic things - and the lack of good
troubleshooting and/or common hitches.  The fact that the jguru forum
for it can't be searched unless you're a paying member isn't helping.

Hopefully someone here will be kind enough to walk me through what i'm
doing wrong.  I'll add in anything else that is necessary to diagnose
the problem.

Thanks again
Cheers
--
Chris



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar  1 12:00:47 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] java 1.4 grammar posted
Message-ID: <2187D252-6BBB-11D8-97D0-000A95891192@cs.usfca.edu>

....I see the the Clover folks have a 1.4 grammar.  Can anybody try it 
out?  Link in grammars section.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Mon Mar  1 13:13:09 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: With apologies for the list-spam, here's another question
In-Reply-To: <19D9391C-6BB1-11D8-97D0-000A95891192@cs.usfca.edu>
Message-ID: <c20915+j24a@eGroups.com>

> Sure.  What's the indicator that you've gone beyond a "reasonable 
> length"?  Just add code to the NEWLINE rule:

There's no hard and fast indicator, though the spec recommends 70
chars.  So, it'll be different from file to file.

> NEWLINE
>      :   '\n' {newline();}
>          ( {getColumn()>MAX}? (' '|'\t')+ {$setType(Token.SKIP);})?
>      ;

However, it looks to me like what i want to do is instead modify my
NEWLINE like so:

NEWLINE
:
	('\n' ('\t'|' '))=>
	'\n'('\t'|' ')+ {$setType(Token.SKIP); newline();}
	|
	'\n' {newline();}
;

Because with help from Loring, i've gotten the value part done, but i
haven't accounted for the possibility that there might be a fold
before the first ':' character.  Which, as i see it, this would
account for.

Does this sound right?  Am i missing some form of interaction that i
should be aware of?
> This will ignore newline followed by whitespace if newline is
beyond 
> MAX column. :)
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Mon Mar  1 15:21:23 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] minor issue with comments...
Message-ID: <000d01c3ffe3$ec8fc510$0100a8c0@xpbaby>

Ok, this may be the most minor issue alive today, but if you put comments on
multiline code statements antlr doesn't like it. As in:

local_variable_declaration!
 :  tp:   type
    lvd: local_variable_declarators

    { #local_variable_declaration =
       #(   ([VariableDeclStmt]),
             ([TypeRef], tp),
             ([ModifierAttributes]), // comments not allowed here
              lvd
        );
    }
 ;

I can understand why it is like that looking at the gen'd code, just it is
sometimes useful to have a comment there - in this case to explain why a
node is created for no seemingly good reason. Maybe there is some form of
'grammar only' comments I'm missing?

Anyway, not a buring issue obviously, just thought I'd mention it in case it
hasn't been noticed...

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar  1 15:44:37 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078184677.152.73780.w15@yahoogroups.com>


Hello,

This is an automated email message to let you know that
salgavkar <salgavkar@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From salgavkar at yahoo.com  Mon Mar  1 15:52:09 2004
From: salgavkar at yahoo.com (salgavkar)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Unable to run Xref tool with antlr2.7.2
Message-ID: <c20ib9+c9kb@eGroups.com>

Hi,
i tried to run java cross reference tool (Xref) with antlr2.7.2 and 
got the following error message.

Z:\compbkup\discbackup\bbk\project\buildspec\download\xref-
source\source\recogni
zer>java antlr.Tool javar.g
ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
javar.g:36:0: tokdef/tokenVocabulary options are invalid >= ANTLR 
2.6.0.
  Use importVocab/exportVocab instead.  Please see the documentation.
  The previous options were so heinous that Terence changed the whole
  vocabulary mechanism; it was better to change the names rather than
  subtly change the functionality of the known options.  Sorry!
javar.g:757:0: tokdef/tokenVocabulary options are invalid >= ANTLR 
2.6.0.
  Use importVocab/exportVocab instead.  Please see the documentation.
  The previous options were so heinous that Terence changed the whole
  vocabulary mechanism; it was better to change the names rather than
  subtly change the functionality of the known options.  Sorry!
javar.g:758:0: warning:longestPossible option has been deprecated; 
ignoring it..
.
Exiting due to errors.

I did see that doc on 
http://java.sun.com/developer/technicalArticles/Parser/SeriesPt4/#ANT
LR2.00
specifies that antlr 2.0.0 must be used but i couldnt find it 
anywhere. I also tried running 2.5.0 and 2.4.0 with no joy.

How do i make it work with antlr2.7.2?

Salgavkar




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar  1 16:40:33 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078188033.90.89244.w33@yahoogroups.com>


Hello,

This is an automated email message to let you know that
anglik242417 <anglik2417@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Mon Mar  1 17:08:35 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
In-Reply-To: <c20ib9+c9kb@eGroups.com>
Message-ID: <c20mqj+m9om@eGroups.com>

The version of Xref that you are using is an antique.  Try downloading the one at http://www.antlr.org/share/list (click on the "Java 
Cross Referencing Tool" item).  Any version that is dependent on pre-2.6 ANTLR is guaranteed to have an ancient java grammar, 
anyway, and probably would not work on the code that you are interested in.

--Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Mon Mar  1 17:26:15 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Getting at the token text in a parser
In-Reply-To: <c1u609+f98d@eGroups.com>
Message-ID: <c20nrn+af72@eGroups.com>

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> $getText works in the lexer, not in the parser--in the lexer, there is
> text associated with a rule, but not in the parser..  What you want to
> do is label the AST (or Token) nodes that you want to extract text
> from--say
> v:value { #v.getText(); }
> 
> (assuming Java, not C++).

So sounds good, but if that's the case, what's the deal with this not
working?  If i have this here: (note that group is just a basic word
rule, nothing fancy)

groups
returns [String g]
:
	grp:group {g.append(grp);} ( DOT group )*
	;

When i try to run this code, antlr generates the parser but when it
hits this point i get this:

java.lang.Error: Unresolved compilation problem: 
	grp cannot be resolved

	at aimedia.vcard.util.parser.VCardParser.groups(VCardParser.java:273)

And the surrounding code is:

public final String  groups() throws RecognitionException,
TokenStreamException {
	String g;

	try {      // for error handling
		group();
		g.append(grp);
		{
		_loop2607:
		do {
			if ((LA(1)==DOT)) {
				match(DOT);
				group();
			}
			else {
				break _loop2607;
			}
			
		} while (true);
		}
	}
	catch (RecognitionException ex) {
		reportError(ex);
		consume();
		consumeUntil(_tokenSet_4);
	}
	return g;
}

how do i make that identifier work?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From salgavkar at yahoo.com  Mon Mar  1 18:36:10 2004
From: salgavkar at yahoo.com (salgavkar)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
In-Reply-To: <c20mqj+m9om@eGroups.com>
Message-ID: <c20ruq+o1os@eGroups.com>

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> The version of Xref that you are using is an antique.  Try 
downloading the one at http://www.antlr.org/share/list (click on 
the "Java 
> Cross Referencing Tool" item).  Any version that is dependent on 
pre-2.6 ANTLR is guaranteed to have an ancient java grammar, 
> anyway, and probably would not work on the code that you are 
interested in.
> 
> --Loring

Thanks. Did try Alpha 
(http://www.antlr.org/share/1073500619580/JavaCrossRef.zip), still 
no joy.

I am running antlr 2.7.2 on j2sdk1.4.1_03. get following errors: 

F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>javac 
*.java
Main.java:251: cannot resolve symbol
symbol  : class JavaDefsTreeParser
location: class org.antlr.java.crossref.Main
                        JavaDefsTreeParser dparse = new 
JavaDefsTreeParser();
                        ^
Main.java:251: cannot resolve symbol
symbol  : class JavaDefsTreeParser
location: class org.antlr.java.crossref.Main
                        JavaDefsTreeParser dparse = new 
JavaDefsTreeParser();
                                                        ^
Main.java:265: cannot resolve symbol
symbol  : class JavaPreRefsTreeParser
location: class org.antlr.java.crossref.Main
                        JavaPreRefsTreeParser prparse = new 
JavaPreRefsTreeParse
r();
                        ^
Main.java:265: cannot resolve symbol
symbol  : class JavaPreRefsTreeParser
location: class org.antlr.java.crossref.Main
                        JavaPreRefsTreeParser prparse = new 
JavaPreRefsTreeParse
r();
                                                            ^
Main.java:279: cannot resolve symbol
symbol  : class JavaRefsTreeParser
location: class org.antlr.java.crossref.Main
            JavaRefsTreeParser rparse = new JavaRefsTreeParser();
            ^
Main.java:279: cannot resolve symbol
symbol  : class JavaRefsTreeParser
location: class org.antlr.java.crossref.Main
            JavaRefsTreeParser rparse = new JavaRefsTreeParser();
                                            ^
6 errors 

Did try the following:
java antlr.Tool defs.java
but got 
this error >>>
F:\faltu\JavaCrossRef\antlr.xref\src>java antlr.Tool 
org\antlr\java\crossref\ref
s.g
ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
error: grammar JavaTreeParser not defined

Then i manually compiled JavaTreeParser and repeated the previous 
step, still no joy.

What could be the problem.

Salgavkar



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar  1 18:43:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
In-Reply-To: <c20ruq+o1os@eGroups.com>
References: <c20ruq+o1os@eGroups.com>
Message-ID: <52DA18B6-6BF3-11D8-8C5A-000A95891192@cs.usfca.edu>

Hi.

Assuming that java.g and java.tree.g are included, do

$ java antlr.Tool java.g
$ java antlr.Tool java.tree.g

and then the other grammar file (which derive from these).  Also (i 
know it's obvious) make sure "." dot is in your classpath ;)

Best regards,
Terence

On Mar 1, 2004, at 6:36 PM, salgavkar wrote:

> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
>> The version of Xref that you are using is an antique.  Try
> downloading the one at http://www.antlr.org/share/list (click on
> the "Java
>> Cross Referencing Tool" item).  Any version that is dependent on
> pre-2.6 ANTLR is guaranteed to have an ancient java grammar,
>> anyway, and probably would not work on the code that you are
> interested in.
>>
>> --Loring
>
> Thanks. Did try Alpha
> (http://www.antlr.org/share/1073500619580/JavaCrossRef.zip), still
> no joy.
>
> I am running antlr 2.7.2 on j2sdk1.4.1_03. get following errors:
>
> F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>javac
> *.java
> Main.java:251: cannot resolve symbol
> symbol  : class JavaDefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaDefsTreeParser dparse = new
> JavaDefsTreeParser();
>                         ^
> Main.java:251: cannot resolve symbol
> symbol  : class JavaDefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaDefsTreeParser dparse = new
> JavaDefsTreeParser();
>                                                         ^
> Main.java:265: cannot resolve symbol
> symbol  : class JavaPreRefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaPreRefsTreeParser prparse = new
> JavaPreRefsTreeParse
> r();
>                         ^
> Main.java:265: cannot resolve symbol
> symbol  : class JavaPreRefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaPreRefsTreeParser prparse = new
> JavaPreRefsTreeParse
> r();
>                                                             ^
> Main.java:279: cannot resolve symbol
> symbol  : class JavaRefsTreeParser
> location: class org.antlr.java.crossref.Main
>             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
>             ^
> Main.java:279: cannot resolve symbol
> symbol  : class JavaRefsTreeParser
> location: class org.antlr.java.crossref.Main
>             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
>                                             ^
> 6 errors
>
> Did try the following:
> java antlr.Tool defs.java
> but got
> this error >>>
> F:\faltu\JavaCrossRef\antlr.xref\src>java antlr.Tool
> org\antlr\java\crossref\ref
> s.g
> ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
> error: grammar JavaTreeParser not defined
>
> Then i manually compiled JavaTreeParser and repeated the previous
> step, still no joy.
>
> What could be the problem.
>
> Salgavkar
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Mon Mar  1 19:43:59 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E9106AA5E@rock-corpmail.microfocus.com>

Hi Salgavkar,
  I will post instructions for the cross referencer in the morning.  If you
are still working on it, tonight, look at the Main.java and MyOutput.java
for input and output criteria.

  Terrence is correct.
Jim


-----Original Message-----
From: Terence Parr
To: antlr-interest@yahoogroups.com
Sent: 3/1/04 9:43 PM
Subject: Re: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2

Hi.

Assuming that java.g and java.tree.g are included, do

$ java antlr.Tool java.g
$ java antlr.Tool java.tree.g

and then the other grammar file (which derive from these).  Also (i 
know it's obvious) make sure "." dot is in your classpath ;)

Best regards,
Terence

On Mar 1, 2004, at 6:36 PM, salgavkar wrote:

> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
>> The version of Xref that you are using is an antique.  Try
> downloading the one at http://www.antlr.org/share/list (click on
> the "Java
>> Cross Referencing Tool" item).  Any version that is dependent on
> pre-2.6 ANTLR is guaranteed to have an ancient java grammar,
>> anyway, and probably would not work on the code that you are
> interested in.
>>
>> --Loring
>
> Thanks. Did try Alpha
> (http://www.antlr.org/share/1073500619580/JavaCrossRef.zip), still
> no joy.
>
> I am running antlr 2.7.2 on j2sdk1.4.1_03. get following errors:
>
> F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>javac
> *.java
> Main.java:251: cannot resolve symbol
> symbol  : class JavaDefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaDefsTreeParser dparse = new
> JavaDefsTreeParser();
>                         ^
> Main.java:251: cannot resolve symbol
> symbol  : class JavaDefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaDefsTreeParser dparse = new
> JavaDefsTreeParser();
>                                                         ^
> Main.java:265: cannot resolve symbol
> symbol  : class JavaPreRefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaPreRefsTreeParser prparse = new
> JavaPreRefsTreeParse
> r();
>                         ^
> Main.java:265: cannot resolve symbol
> symbol  : class JavaPreRefsTreeParser
> location: class org.antlr.java.crossref.Main
>                         JavaPreRefsTreeParser prparse = new
> JavaPreRefsTreeParse
> r();
>                                                             ^
> Main.java:279: cannot resolve symbol
> symbol  : class JavaRefsTreeParser
> location: class org.antlr.java.crossref.Main
>             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
>             ^
> Main.java:279: cannot resolve symbol
> symbol  : class JavaRefsTreeParser
> location: class org.antlr.java.crossref.Main
>             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
>                                             ^
> 6 errors
>
> Did try the following:
> java antlr.Tool defs.java
> but got
> this error >>>
> F:\faltu\JavaCrossRef\antlr.xref\src>java antlr.Tool
> org\antlr\java\crossref\ref
> s.g
> ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
> error: grammar JavaTreeParser not defined
>
> Then i manually compiled JavaTreeParser and repeated the previous
> step, still no joy.
>
> What could be the problem.
>
> Salgavkar
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


________________________________________________________________________
This e-mail has been scanned for viruses by MCI's Internet Managed
Scanning Services - powered by MessageLabs. For further information
visit http://www.mci.com
________________________________________________________________________


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar  1 20:38:22 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Getting at the token text in a parser
In-Reply-To: <c20nrn+af72@eGroups.com>
Message-ID: <c2133u+oimv@eGroups.com>

Looks like you haven't set buildAST=true in your parser options
section.  Also, use the #label syntax (#grp instead of grp)--antlr
name "mangling" could change.

--Loring


--- In antlr-interest@yahoogroups.com, "offline314159" <offline@s...>
wrote:
> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> > $getText works in the lexer, not in the parser--in the lexer, there is
> > text associated with a rule, but not in the parser..  What you want to
> > do is label the AST (or Token) nodes that you want to extract text
> > from--say
> > v:value { #v.getText(); }
> > 
> > (assuming Java, not C++).
> 
> So sounds good, but if that's the case, what's the deal with this not
> working?  If i have this here: (note that group is just a basic word
> rule, nothing fancy)
> 
> groups
> returns [String g]
> :
> 	grp:group {g.append(grp);} ( DOT group )*
> 	;
> 
> When i try to run this code, antlr generates the parser but when it
> hits this point i get this:
> 
> java.lang.Error: Unresolved compilation problem: 
> 	grp cannot be resolved
> 
> 	at aimedia.vcard.util.parser.VCardParser.groups(VCardParser.java:273)
> 
> And the surrounding code is:
> 
> public final String  groups() throws RecognitionException,
> TokenStreamException {
> 	String g;
> 
> 	try {      // for error handling
> 		group();
> 		g.append(grp);
> 		{
> 		_loop2607:
> 		do {
> 			if ((LA(1)==DOT)) {
> 				match(DOT);
> 				group();
> 			}
> 			else {
> 				break _loop2607;
> 			}
> 			
> 		} while (true);
> 		}
> 	}
> 	catch (RecognitionException ex) {
> 		reportError(ex);
> 		consume();
> 		consumeUntil(_tokenSet_4);
> 	}
> 	return g;
> }
> 
> how do i make that identifier work?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Mon Mar  1 20:55:58 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Getting at the token text in a parser
In-Reply-To: <c2133u+oimv@eGroups.com>
Message-ID: <c2144u+9v2e@eGroups.com>

It looks like the problem is in the fact that it's a parser rule
instead of a token - i can use that syntax just fine with token
references, and i can set a return value on my parser rules and assign
from them, but that's about it.  And it's kind of a pain, but so be it.

However, that "precede with '#'" trick works, or so it appears...  is
it just me or should that be somewhere in the docs? (Since it isn't
anywhere i can see)

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> Looks like you haven't set buildAST=true in your parser options
> section.  Also, use the #label syntax (#grp instead of grp)--antlr
> name "mangling" could change.
> 
> --Loring
> 




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar  1 21:15:18 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078204518.64.5658.w29@yahoogroups.com>


Hello,

This is an automated email message to let you know that
hero323.tw <hero323.tw@yahoo.com.tw> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Mon Mar  1 21:42:28 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Getting at the token text in a parser
In-Reply-To: <c2144u+9v2e@eGroups.com>
Message-ID: <c216s4+inss@eGroups.com>

Take another look.  It's under the heading "AST Action Translation"

--Loring


--- In antlr-interest@yahoogroups.com, "offline314159" <offline@s...>
wrote:
> It looks like the problem is in the fact that it's a parser rule
> instead of a token - i can use that syntax just fine with token
> references, and i can set a return value on my parser rules and assign
> from them, but that's about it.  And it's kind of a pain, but so be it.
> 
> However, that "precede with '#'" trick works, or so it appears...  is
> it just me or should that be somewhere in the docs? (Since it isn't
> anywhere i can see)
> 
> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> > Looks like you haven't set buildAST=true in your parser options
> > section.  Also, use the #label syntax (#grp instead of grp)--antlr
> > name "mangling" could change.
> > 
> > --Loring
> >



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hero323.tw at yahoo.com.tw  Mon Mar  1 21:27:14 2004
From: hero323.tw at yahoo.com.tw (VAIO)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Antlr doesn't support Chinese character
Message-ID: <c215vi+5825@eGroups.com>

Antlr doesn't support unicode char in Chinese, such 
as '\u0xA7' '\u0xAC' etc. 
How do I deal with them in designing a lexer to skip or retrieve 
words like this? 


---
I'm a new guy here many thanks for response.





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Mon Mar  1 21:59:42 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Victory!
In-Reply-To: <c216s4+inss@eGroups.com>
Message-ID: <c217se+bjij@eGroups.com>

Excellent, again.  It looks like all the basics are done now, all i
have to do is pop out that AST and then make something happen with it :)

I'm assuming that with the AST i have access to all the parts, all the
other good stuff that makes the thingy tick.

Thanks, Loring and Terry for your help - once i have the parser
cleaned up and spitting out the right sort of trees, i'll put it out
on the web where everyone can rip into it for a bit.

Cheers!



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Tue Mar  2 04:00:50 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Java Cross Referencing Tool (Alpha Release)
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E91026D6BA9@rock-corpmail.microfocus.com>

To download the zip file, go to
 
http://www.antlr.org/share/list <http://www.antlr.org/share/list> 
 
Introduction
This is the alpha release of the Java Cross Reference Tool (uses ANTLR
2.7.2).  It is based on Terence's tool in the file sharing section.  To
review its roots you can take a look at www.antlr.org/share/list
<http://www.antlr.org/share/list> .  There have been many improvements and
additions.  The goal is to have another release in the future that improves
the code and streamlines the "get up and running" process.  There might be a
few bug fixes, as well. :0) 
 
Overview
Input: *.java files, jar files, or a directory structure
 
Output:  An XML document with a hierarchical representation of packages,
classes and references.  The MyOutput class regulates the output location of
the XML file.  The name is controlled in the CodeProject class (currently
"null").  MyOutput has methods to control output when references are
resolved.
 
Installation and execution
 
 The process will be streamlined.  The manual installation forces the user
to become familiar necessary configuration steps that could be overlooked.  
Assumptions: Java JDK and Antlr 2.7.2 is installed.  An older java.g 1.3 is
used.  Recent patches have not been integrated.
 
1.	Download JavaCrossRef.zip 
 
2.	Unzip to c:\  (this will create the c:\antlr.xref directory
structure) 
 
3.	cd to the c:\antlr.xref\src\org\antlr\java\crossref subdirectory 
 
4.	To generate the necessary files run the following commands (My path
includes "c:\j2sdk1.4.2_01\bin"; and my full classpath is
".;c:\antlr-2.7.2\antlr.jar") 
A.  java antlr.Tool java.g
a.   Creates JavaRecognizer.java, JavaLexer.java, JavaTokenTypes.java and
JavaTokenTypes.txt
B.  java antlr.Tool javatree.g
a.   Creates JavaTreeParser.java, JavaTreeParserTokenTypes.java and
JavaTreeParserTokenTypes.txt
C.  java antlr.Tool -glib javaTree.g defs.g 
a.   Creates JavaDefsTreeParser.java, JavaTreeDefsParserTokenTypes.java and
JavaTreeDefsParserTokenTypes.txt
b.   Warnings will result for rule JavaDefsTreeParser.packageDefinition and
Rule 'identifier' returning a value
D.  java antlr.Tool -glib javaTree.g prerefs.g
a.   Creates JavaPreRefsTreeParser.java,
JavaTreePreRefsParserTokenTypes.java and JavaTreePreRefsParserTokenTypes.txt
b.   Warnings result for packageDefinition, typeSpec, typeSpecArray, type,
extendsClasue, implementsClause, parameterDef, variableDeclarator,
methodHead, identifier, newExpression and
'identifier'-'parameterDef'-'typeSpecArray'-'typeSpec'-newExpression'
returns a value
E.  java antlr.Tool -glib javaTree.g refs.g
a.   Creates JavaRefsTreeParser.java, JavaTreeRefsParserTokenTypes.java and
JavaTreeRefsParserTokenTypes.txt
b.   Lots more warning messages
 
5.	Before compiling the files you should edit a few of the files to
control the output 
A.  In CodeProject.java, a few fields are "user configurable" and can be
modified
a.   protected String name = null; null can be changed to name the current
project.  Otherwise the xml file will get the name "null.xml".
b.   static final boolean saveReferences = true;  when set to "true" all
references are saved to the CodeProject hierarchical information model by
methods in the refElement(), refMethod(), and refClass() methods. If you
only want your project structure in the XML file, set to "false".
c.   static final boolean printDebug = false;  There is a large amount of
debug "System.out.println()" calls in the Scope classes.  The printDebug
flag in CodeProject is a global flag to enable or disable the possibility
for all of these messages.  When printDebug is set to true in the
CodeProject class, you must go to the individual class files to turn on
messages. Other classes with the printDebug flag are ClassScope,
CodeBlockScope, DebugStack (commented out in defs.g, prerefs.g, and refs.g),
FileScope, and ParameterScope.
B.  In MyOutput.java, final static String OUTPUTDIR = "./"; set the output
directory (OUTPUTDIR), or leave as the current directory (".\")
 
6.	Compile the *.java files with the following commands 
7.	A. javac *.java (or whatever compiler you use) 
8.	test run 
A.  cd c:\antlr.xref\src
B.  "java org.antlr.java.crossref.Main" should produce usage message "Usage:
Main (directory or filename)"
C.   
9.	Another test with real data 
A.  "java org.antlr.java.crossref.Main
org\antlr\java\crossref\location.java"
B.  This will produce many messages to the console in addition to a 70k xml
file to the current directory named "null.xml"
C.  I'll go back and set saveReference = false and recompile and re-run.
D.  I still get all the messages but the xml file is now 9k, but it contains
no reference information.  It just contains the package/class/field/method
structure.  This is good for structure analysis but not for seeing which
classes reference others.
 
 
Credits
 
All "borrowed" classes are from the open source community.  I have no
obligation to give credit to these sources.  However, their mention will
give credit where I think it is due.  
 
K files
 
The "K" files are used to read the input stream from a "*.class" file,
extracting the relevant information.  They are used with minor modification,
mostly to the javadoc section.  These files are the work of Kimberley
Burchett. "Class loading" the files was a short bad idea.  Thanks for saving
me some time, Kimberly!  I kept the class file writer with the code for
those of you who want to do some obfuscation work.
 
http://www.kimbly.com/code/classfile/
<http://www.kimbly.com/code/classfile/> 
 
Location AST help
 
I read the antlraux site to help with the LocationAST work.
 
http://antlraux.sourceforge.net/ <http://antlraux.sourceforge.net/> 
 
Java Cross Reference Tool
 
Antlr and the structure for the tool are based on the work of Terence Parr.
You should be versed in Antlr basics to use this tool. (www.antlr.org
<http://www.antlr.org/> )
 
To Do List
1. Reduce size of XML document
2. Revisit order of imports and "Classpath order".
3. Upgrade java.g
4. Streamline installation
5. Reorganize the user options
6. Redo Location information.  Problem finding files based on XML
information.
7. Bugs
 
Jim OConnor
Jim.OConnor@micfocus.com
 
 
  _____  

Yahoo! Groups Links
*	To visit your group on the web, go to:
http://groups.yahoo.com/group/antlr-interest/
<http://groups.yahoo.com/group/antlr-interest/> 
  
*	To unsubscribe from this group, send an email to:
antlr-interest-unsubscribe@yahoogroups.com
<mailto:antlr-interest-unsubscribe@yahoogroups.com?subject=Unsubscribe> 
  
*	Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service
<http://docs.yahoo.com/info/terms/> . 

________________________________________________________________________
This e-mail has been scanned for viruses by MCI's Internet Managed Scanning
Services - powered by MessageLabs. For further information visit
http://www.mci.com
________________________________________________________________________

________________________________________________________________________
This e-mail has been scanned for viruses by MCI's Internet Managed Scanning
Services - powered by MessageLabs. For further information visit
http://www.mci.com
________________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040302/83d9e960/attachment.html
From notify at yahoogroups.com  Tue Mar  2 05:54:15 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078235655.118.62898.w87@yahoogroups.com>


Hello,

This is an automated email message to let you know that
kristoff_tempelaere <kristoff_tempelaere@yahoo.com.au> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Tue Mar  2 06:02:56 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078236176.1115.56283.m11@yahoogroups.com>


Hello,

This is an automated email message to let you know that
david2109 <david.lagoutte@socgen.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From salgavkar at yahoo.com  Tue Mar  2 07:15:58 2004
From: salgavkar at yahoo.com (salgavkar)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
In-Reply-To: <52DA18B6-6BF3-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c228fe+6q4o@eGroups.com>

Hi.

java.tree.g was not available so i copied it from antlr 2.7.2 tests 
folder and that went fine. i also see JavaTreeParser.java

now when i try <<java antlr.Tool defs.java>> i get the following 
error:

F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>java 
antlr.Tool def
s.g
ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
error: grammar JavaTreeParser not defined

it gives the same error for prerefs.g, and refs.g

I was wondering if there is a installation manual for Alpha?

Thanks.

salgavkar



--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> Hi.
> 
> Assuming that java.g and java.tree.g are included, do
> 
> $ java antlr.Tool java.g
> $ java antlr.Tool java.tree.g
> 
> and then the other grammar file (which derive from these).  Also 
(i 
> know it's obvious) make sure "." dot is in your classpath ;)
> 
> Best regards,
> Terence
> 
> On Mar 1, 2004, at 6:36 PM, salgavkar wrote:
> 
> > --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> 
wrote:
> >> The version of Xref that you are using is an antique.  Try
> > downloading the one at http://www.antlr.org/share/list (click on
> > the "Java
> >> Cross Referencing Tool" item).  Any version that is dependent on
> > pre-2.6 ANTLR is guaranteed to have an ancient java grammar,
> >> anyway, and probably would not work on the code that you are
> > interested in.
> >>
> >> --Loring
> >
> > Thanks. Did try Alpha
> > (http://www.antlr.org/share/1073500619580/JavaCrossRef.zip), 
still
> > no joy.
> >
> > I am running antlr 2.7.2 on j2sdk1.4.1_03. get following errors:
> >
> > 
F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>javac
> > *.java
> > Main.java:251: cannot resolve symbol
> > symbol  : class JavaDefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >                         JavaDefsTreeParser dparse = new
> > JavaDefsTreeParser();
> >                         ^
> > Main.java:251: cannot resolve symbol
> > symbol  : class JavaDefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >                         JavaDefsTreeParser dparse = new
> > JavaDefsTreeParser();
> >                                                         ^
> > Main.java:265: cannot resolve symbol
> > symbol  : class JavaPreRefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >                         JavaPreRefsTreeParser prparse = new
> > JavaPreRefsTreeParse
> > r();
> >                         ^
> > Main.java:265: cannot resolve symbol
> > symbol  : class JavaPreRefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >                         JavaPreRefsTreeParser prparse = new
> > JavaPreRefsTreeParse
> > r();
> >                                                             ^
> > Main.java:279: cannot resolve symbol
> > symbol  : class JavaRefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
> >             ^
> > Main.java:279: cannot resolve symbol
> > symbol  : class JavaRefsTreeParser
> > location: class org.antlr.java.crossref.Main
> >             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
> >                                             ^
> > 6 errors
> >
> > Did try the following:
> > java antlr.Tool defs.java
> > but got
> > this error >>>
> > F:\faltu\JavaCrossRef\antlr.xref\src>java antlr.Tool
> > org\antlr\java\crossref\ref
> > s.g
> > ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
> > error: grammar JavaTreeParser not defined
> >
> > Then i manually compiled JavaTreeParser and repeated the previous
> > step, still no joy.
> >
> > What could be the problem.
> >
> > Salgavkar
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Tue Mar  2 07:28:22 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E91026D6C5E@rock-corpmail.microfocus.com>

Hi salgavkar,
  The instructions, about a page and half, are on their way to you.  
  The direct response to your "Tooling" difficulties is:

"java antlr.Tool -glib javaTree.g refs.g"

should work.  Let me know.
Jim



> -----Original Message-----
> From: salgavkar [mailto:salgavkar@yahoo.com]
> Sent: Tuesday, March 02, 2004 10:16 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Re: Unable to run Xref tool with antlr2.7.2
> 
> Hi.
> 
> java.tree.g was not available so i copied it from antlr 2.7.2 tests
> folder and that went fine. i also see JavaTreeParser.java
> 
> now when i try <<java antlr.Tool defs.java>> i get the following
> error:
> 
> F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>java
> antlr.Tool def
> s.g
> ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
> error: grammar JavaTreeParser not defined
> 
> it gives the same error for prerefs.g, and refs.g
> 
> I was wondering if there is a installation manual for Alpha?
> 
> Thanks.
> 
> salgavkar
> 
> 
> 
> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
> wrote:
> > Hi.
> >
> > Assuming that java.g and java.tree.g are included, do
> >
> > $ java antlr.Tool java.g
> > $ java antlr.Tool java.tree.g
> >
> > and then the other grammar file (which derive from these).  Also
> (i
> > know it's obvious) make sure "." dot is in your classpath ;)
> >
> > Best regards,
> > Terence
> >
> > On Mar 1, 2004, at 6:36 PM, salgavkar wrote:
> >
> > > --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...>
> wrote:
> > >> The version of Xref that you are using is an antique.  Try
> > > downloading the one at http://www.antlr.org/share/list (click on
> > > the "Java
> > >> Cross Referencing Tool" item).  Any version that is dependent on
> > > pre-2.6 ANTLR is guaranteed to have an ancient java grammar,
> > >> anyway, and probably would not work on the code that you are
> > > interested in.
> > >>
> > >> --Loring
> > >
> > > Thanks. Did try Alpha
> > > (http://www.antlr.org/share/1073500619580/JavaCrossRef.zip),
> still
> > > no joy.
> > >
> > > I am running antlr 2.7.2 on j2sdk1.4.1_03. get following errors:
> > >
> > >
> F:\faltu\JavaCrossRef\antlr.xref\src\org\antlr\java\crossref>javac
> > > *.java
> > > Main.java:251: cannot resolve symbol
> > > symbol  : class JavaDefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >                         JavaDefsTreeParser dparse = new
> > > JavaDefsTreeParser();
> > >                         ^
> > > Main.java:251: cannot resolve symbol
> > > symbol  : class JavaDefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >                         JavaDefsTreeParser dparse = new
> > > JavaDefsTreeParser();
> > >                                                         ^
> > > Main.java:265: cannot resolve symbol
> > > symbol  : class JavaPreRefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >                         JavaPreRefsTreeParser prparse = new
> > > JavaPreRefsTreeParse
> > > r();
> > >                         ^
> > > Main.java:265: cannot resolve symbol
> > > symbol  : class JavaPreRefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >                         JavaPreRefsTreeParser prparse = new
> > > JavaPreRefsTreeParse
> > > r();
> > >                                                             ^
> > > Main.java:279: cannot resolve symbol
> > > symbol  : class JavaRefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
> > >             ^
> > > Main.java:279: cannot resolve symbol
> > > symbol  : class JavaRefsTreeParser
> > > location: class org.antlr.java.crossref.Main
> > >             JavaRefsTreeParser rparse = new JavaRefsTreeParser();
> > >                                             ^
> > > 6 errors
> > >
> > > Did try the following:
> > > java antlr.Tool defs.java
> > > but got
> > > this error >>>
> > > F:\faltu\JavaCrossRef\antlr.xref\src>java antlr.Tool
> > > org\antlr\java\crossref\ref
> > > s.g
> > > ANTLR Parser Generator   Version 2.7.2   1989-2003 jGuru.com
> > > error: grammar JavaTreeParser not defined
> > >
> > > Then i manually compiled JavaTreeParser and repeated the previous
> > > step, still no joy.
> > >
> > > What could be the problem.
> > >
> > > Salgavkar
> > >
> > >
> > >
> > >
> > > Yahoo! Groups Links
> > >
> > >
> > >
> > >
> > >
> > >
> > --
> > Professor Comp. Sci., University of San Francisco
> > Creator, ANTLR Parser Generator, http://www.antlr.org
> > Cofounder, http://www.jguru.com
> > Cofounder, http://www.knowspam.net enjoy email again!
> > Cofounder, http://www.peerscope.com pure link sharing
> 
> 
> 
> 
> Yahoo! Groups Links
> 
> 
> 
> 
> 
> 
> ________________________________________________________________________
> This e-mail has been scanned for viruses by MCI's Internet Managed
> Scanning Services - powered by MessageLabs. For further information visit
> http://www.mci.com
> ________________________________________________________________________


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From salgavkar at yahoo.com  Tue Mar  2 07:58:50 2004
From: salgavkar at yahoo.com (salgavkar)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Java Cross Referencing Tool (Alpha Release)
In-Reply-To: <3AC103F1B7EEEC48A855ACB1D2819E91026D6BA9@rock-corpmail.microfocus.com>
Message-ID: <c22avq+vq2k@eGroups.com>

Hi Jim,

It worked automagically. Thanks a lot. I need it for this 
refactoring plug-in that i want to develop, though i havent decided 
the IDE yet. Do let me know if you happen to know of any usefull 
links.

Thanks again.

Salgavkar


--- In antlr-interest@yahoogroups.com, "Jim O'Connor" 
<Jim.OConnor@m...> wrote:
> To download the zip file, go to
>  
> http://www.antlr.org/share/list <http://www.antlr.org/share/list> 
>  
> Introduction
> This is the alpha release of the Java Cross Reference Tool (uses 
ANTLR
> 2.7.2).  It is based on Terence's tool in the file sharing 
section.  To
> review its roots you can take a look at www.antlr.org/share/list
> <http://www.antlr.org/share/list> .  There have been many 
improvements and
> additions.  The goal is to have another release in the future that 
improves
> the code and streamlines the "get up and running" process.  There 
might be a
> few bug fixes, as well. :0) 
>  
> Overview
> Input: *.java files, jar files, or a directory structure
>  
> Output:  An XML document with a hierarchical representation of 
packages,
> classes and references.  The MyOutput class regulates the output 
location of
> the XML file.  The name is controlled in the CodeProject class 
(currently
> "null").  MyOutput has methods to control output when references 
are
> resolved.
>  
> Installation and execution
>  
>  The process will be streamlined.  The manual installation forces 
the user
> to become familiar necessary configuration steps that could be 
overlooked.  
> Assumptions: Java JDK and Antlr 2.7.2 is installed.  An older 
java.g 1.3 is
> used.  Recent patches have not been integrated.
>  
> 1.	Download JavaCrossRef.zip 
>  
> 2.	Unzip to c:\  (this will create the c:\antlr.xref directory
> structure) 
>  
> 3.	cd to the c:\antlr.xref\src\org\antlr\java\crossref 
subdirectory 
>  
> 4.	To generate the necessary files run the following commands 
(My path
> includes "c:\j2sdk1.4.2_01\bin"; and my full classpath is
> ".;c:\antlr-2.7.2\antlr.jar") 
> A.  java antlr.Tool java.g
> a.   Creates JavaRecognizer.java, JavaLexer.java, 
JavaTokenTypes.java and
> JavaTokenTypes.txt
> B.  java antlr.Tool javatree.g
> a.   Creates JavaTreeParser.java, JavaTreeParserTokenTypes.java and
> JavaTreeParserTokenTypes.txt
> C.  java antlr.Tool -glib javaTree.g defs.g 
> a.   Creates JavaDefsTreeParser.java, 
JavaTreeDefsParserTokenTypes.java and
> JavaTreeDefsParserTokenTypes.txt
> b.   Warnings will result for rule 
JavaDefsTreeParser.packageDefinition and
> Rule 'identifier' returning a value
> D.  java antlr.Tool -glib javaTree.g prerefs.g
> a.   Creates JavaPreRefsTreeParser.java,
> JavaTreePreRefsParserTokenTypes.java and 
JavaTreePreRefsParserTokenTypes.txt
> b.   Warnings result for packageDefinition, typeSpec, 
typeSpecArray, type,
> extendsClasue, implementsClause, parameterDef, variableDeclarator,
> methodHead, identifier, newExpression and
> 'identifier'-'parameterDef'-'typeSpecArray'-'typeSpec'-
newExpression'
> returns a value
> E.  java antlr.Tool -glib javaTree.g refs.g
> a.   Creates JavaRefsTreeParser.java, 
JavaTreeRefsParserTokenTypes.java and
> JavaTreeRefsParserTokenTypes.txt
> b.   Lots more warning messages
>  
> 5.	Before compiling the files you should edit a few of the 
files to
> control the output 
> A.  In CodeProject.java, a few fields are "user configurable" and 
can be
> modified
> a.   protected String name = null; null can be changed to name the 
current
> project.  Otherwise the xml file will get the name "null.xml".
> b.   static final boolean saveReferences = true;  when set 
to "true" all
> references are saved to the CodeProject hierarchical information 
model by
> methods in the refElement(), refMethod(), and refClass() methods. 
If you
> only want your project structure in the XML file, set to "false".
> c.   static final boolean printDebug = false;  There is a large 
amount of
> debug "System.out.println()" calls in the Scope classes.  The 
printDebug
> flag in CodeProject is a global flag to enable or disable the 
possibility
> for all of these messages.  When printDebug is set to true in the
> CodeProject class, you must go to the individual class files to 
turn on
> messages. Other classes with the printDebug flag are ClassScope,
> CodeBlockScope, DebugStack (commented out in defs.g, prerefs.g, 
and refs.g),
> FileScope, and ParameterScope.
> B.  In MyOutput.java, final static String OUTPUTDIR = "./"; set 
the output
> directory (OUTPUTDIR), or leave as the current directory (".\")
>  
> 6.	Compile the *.java files with the following commands 
> 7.	A. javac *.java (or whatever compiler you use) 
> 8.	test run 
> A.  cd c:\antlr.xref\src
> B.  "java org.antlr.java.crossref.Main" should produce usage 
message "Usage:
> Main (directory or filename)"
> C.   
> 9.	Another test with real data 
> A.  "java org.antlr.java.crossref.Main
> org\antlr\java\crossref\location.java"
> B.  This will produce many messages to the console in addition to 
a 70k xml
> file to the current directory named "null.xml"
> C.  I'll go back and set saveReference = false and recompile and 
re-run.
> D.  I still get all the messages but the xml file is now 9k, but 
it contains
> no reference information.  It just contains the 
package/class/field/method
> structure.  This is good for structure analysis but not for seeing 
which
> classes reference others.
>  
>  
> Credits
>  
> All "borrowed" classes are from the open source community.  I have 
no
> obligation to give credit to these sources.  However, their 
mention will
> give credit where I think it is due.  
>  
> K files
>  
> The "K" files are used to read the input stream from a "*.class" 
file,
> extracting the relevant information.  They are used with minor 
modification,
> mostly to the javadoc section.  These files are the work of 
Kimberley
> Burchett. "Class loading" the files was a short bad idea.  Thanks 
for saving
> me some time, Kimberly!  I kept the class file writer with the 
code for
> those of you who want to do some obfuscation work.
>  
> http://www.kimbly.com/code/classfile/
> <http://www.kimbly.com/code/classfile/> 
>  
> Location AST help
>  
> I read the antlraux site to help with the LocationAST work.
>  
> http://antlraux.sourceforge.net/ 
<http://antlraux.sourceforge.net/> 
>  
> Java Cross Reference Tool
>  
> Antlr and the structure for the tool are based on the work of 
Terence Parr.
> You should be versed in Antlr basics to use this tool. 
(www.antlr.org
> <http://www.antlr.org/> )
>  
> To Do List
> 1. Reduce size of XML document
> 2. Revisit order of imports and "Classpath order".
> 3. Upgrade java.g
> 4. Streamline installation
> 5. Reorganize the user options
> 6. Redo Location information.  Problem finding files based on XML
> information.
> 7. Bugs
>  
> Jim OConnor
> Jim.OConnor@m...
>  
>  
>   _____  
> 
> Yahoo! Groups Links
> *	To visit your group on the web, go to:
> http://groups.yahoo.com/group/antlr-interest/
> <http://groups.yahoo.com/group/antlr-interest/> 
>   
> *	To unsubscribe from this group, send an email to:
> antlr-interest-unsubscribe@yahoogroups.com
> <mailto:antlr-interest-unsubscribe@yahoogroups.com?
subject=Unsubscribe> 
>   
> *	Your use of Yahoo! Groups is subject to the Yahoo! Terms of 
Service
> <http://docs.yahoo.com/info/terms/> . 
> 
> 
_____________________________________________________________________
___
> This e-mail has been scanned for viruses by MCI's Internet Managed 
Scanning
> Services - powered by MessageLabs. For further information visit
> http://www.mci.com
> 
_____________________________________________________________________
___
> 
> 
_____________________________________________________________________
___
> This e-mail has been scanned for viruses by MCI's Internet Managed 
Scanning
> Services - powered by MessageLabs. For further information visit
> http://www.mci.com
> 
_____________________________________________________________________
___



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  2 10:01:42 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Antlr doesn't support Chinese character
In-Reply-To: <c215vi+5825@eGroups.com>
References: <c215vi+5825@eGroups.com>
Message-ID: <A975CE82-6C73-11D8-8C5A-000A95891192@cs.usfca.edu>

Which output language?  Works in Java; well, it should :)

Ter
On Mar 1, 2004, at 9:27 PM, VAIO wrote:

> Antlr doesn't support unicode char in Chinese, such
> as '\u0xA7' '\u0xAC' etc.
> How do I deal with them in designing a lexer to skip or retrieve
> words like this?
>
>
> ---
> I'm a new guy here many thanks for response.
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Tue Mar  2 12:03:31 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Antlr doesn't support Chinese character
References: <c215vi+5825@eGroups.com>
Message-ID: <000101c40100$6a1056e0$0400a8c0@NOTEBOOK>

If you are talking Java, Look at the java\examples\unicode.IDENTs  directory
for
an example.
matthew

----- Original Message ----- 
From: "VAIO" <hero323.tw@yahoo.com.tw>
To: <antlr-interest@yahoogroups.com>
Sent: Tuesday, March 02, 2004 4:27 PM
Subject: [antlr-interest] Antlr doesn't support Chinese character


> Antlr doesn't support unicode char in Chinese, such
> as '\u0xA7' '\u0xAC' etc.
> How do I deal with them in designing a lexer to skip or retrieve
> words like this?
>
>
> ---
> I'm a new guy here many thanks for response.
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From skellett at anitesystems.de  Wed Mar  3 01:23:47 2004
From: skellett at anitesystems.de (Simon Kellett)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Forcing creation of children in an AST tree parser
Message-ID: <c24873+c5jn@eGroups.com>

Hi,

I am trying to force the creation of children within a rule that is
essentially parsing a function call:

activityTimeRange: ACTIVITY^ L_paren! INSTRUMENT Comma! timeExpr
R_paren!;

My AST correctly shows the ACTIVITY as a root and the parens and comma
dropped. But I would like the parameters (ie INSTRUMENT and timeExpr)
to be *children* of node ACTIVITY.

Reading the manual I have tried various things, but "AST Action
Translation" about "#rule", in the last para seems to give me what I
want: "For example, any children nodes added after the action will be
added to the children of #rule.".

But in the updated rule all I get is an extra "activityTimeRange" node
and no children, only siblings !!

activityTimeRange: ACTIVITY^ {#activityTimeRange =
#([ACTIVITY,"activityTimeRange"], #activityTimeRange);} L_paren!
INSTRUMENT Comma! timeExpr R_paren!;

Any ideas/pointers as to where I am going wrong ?

(would it be useful to have a force-to-child syntax ? (like "^" for
force-to-root and "!" for drop-token).

TIA, Simon



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ifedorenko at rogers.com  Wed Mar  3 05:28:23 2004
From: ifedorenko at rogers.com (Igor Fedorenko)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] optional rule confusion
Message-ID: <4045DD77.5090309@rogers.com>

I must be missing something really simple, but I cannot get antlr 
generate reasonable parser for javadoc-like java method names (like 
com.something.MyClass#method).

Here is what my parser rule looks like

     protected javaname: ID (DOT ID)* (POUND ID)?

And here is what antlr generates for the last part

     switch ( LA(1)) {
     case POUND:
       {
       match(POUND);
       m = LT(1);
       match(ID);
       break;
       }
     case EOF:
       {
       break;
       }
     default:
       {
       throw new NoViableAltException(LT(1), getFilename());
       }
     }


Why would antlr generate NoViableAltException for something which is 
optional?


Regards,
Igor Fedorenko



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lubos.vnuk at rts.at  Wed Mar  3 05:38:38 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: optional rule confusion
In-Reply-To: <4045DD77.5090309@rogers.com>
Message-ID: <c24n4u+mcil@eGroups.com>

I think you can get some information from a similar thread 
titled: "Problem with x: (A)(B)? ; "

Regards,
Lubos.

--- In antlr-interest@yahoogroups.com, Igor Fedorenko 
<ifedorenko@r...> wrote:
> I must be missing something really simple, but I cannot get antlr 
> generate reasonable parser for javadoc-like java method names (like 
> com.something.MyClass#method).
> 
> Here is what my parser rule looks like
> 
>      protected javaname: ID (DOT ID)* (POUND ID)?
> 
> And here is what antlr generates for the last part
> 
>      switch ( LA(1)) {
>      case POUND:
>        {
>        match(POUND);
>        m = LT(1);
>        match(ID);
>        break;
>        }
>      case EOF:
>        {
>        break;
>        }
>      default:
>        {
>        throw new NoViableAltException(LT(1), getFilename());
>        }
>      }
> 
> 
> Why would antlr generate NoViableAltException for something which 
is 
> optional?
> 
> 
> Regards,
> Igor Fedorenko



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar  3 05:47:22 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078321642.83.69467.w40@yahoogroups.com>


Hello,

This is an automated email message to let you know that
navneetarvind <navneetarvind@yahoo.co.uk> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From ifedorenko at rogers.com  Wed Mar  3 05:53:51 2004
From: ifedorenko at rogers.com (Igor Fedorenko)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: optional rule confusion
In-Reply-To: <c24n4u+mcil@eGroups.com>
References: <c24n4u+mcil@eGroups.com>
Message-ID: <4045E36F.6050808@rogers.com>

Thank you for the hint, Lubos, Adding dummy rule does the trick. Note 
however, that my rule is protected so there is no way it can be called 
as a top level rule.

Lubos Vnuk wrote:

> I think you can get some information from a similar thread 
> titled: "Problem with x: (A)(B)? ; "
> 
> Regards,
> Lubos.
> 
> --- In antlr-interest@yahoogroups.com, Igor Fedorenko 
> <ifedorenko@r...> wrote:
> 
>>I must be missing something really simple, but I cannot get antlr 
>>generate reasonable parser for javadoc-like java method names (like 
>>com.something.MyClass#method).
>>
>>Here is what my parser rule looks like
>>
>>     protected javaname: ID (DOT ID)* (POUND ID)?
>>
>>And here is what antlr generates for the last part
>>
>>     switch ( LA(1)) {
>>     case POUND:
>>       {
>>       match(POUND);
>>       m = LT(1);
>>       match(ID);
>>       break;
>>       }
>>     case EOF:
>>       {
>>       break;
>>       }
>>     default:
>>       {
>>       throw new NoViableAltException(LT(1), getFilename());
>>       }
>>     }
>>
>>
>>Why would antlr generate NoViableAltException for something which 
> 
> is 
> 
>>optional?
>>
>>
>>Regards,
>>Igor Fedorenko
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From navneetarvind at yahoo.co.uk  Wed Mar  3 05:51:21 2004
From: navneetarvind at yahoo.co.uk (navneetarvind)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] ANTLR with C++
Message-ID: <c24nsp+s9i1@eGroups.com>

Hi!

I am a new user.

I have been trying to create an antlr.lib file so that I can get the 
parser generator to produce C++ output files. However I can't compile 
the Antlr Cpp and hpp files. I'm using VC++ 6.0 as recommended.

Could anyone tell me what the problem could be? Have tried and 
million different things but've been stuck with this forever now.

Thanks

Navneet.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed Mar  3 06:09:45 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] ANTLR with C++
In-Reply-To: <c24nsp+s9i1@eGroups.com>
References: <c24nsp+s9i1@eGroups.com>
Message-ID: <20040303140945.GE5426@cs.utwente.nl>

Hi,

On Wed, Mar 03, 2004 at 01:51:21PM -0000, navneetarvind wrote:
> I have been trying to create an antlr.lib file so that I can get the 
> parser generator to produce C++ output files. However I can't compile 
> the Antlr Cpp and hpp files. I'm using VC++ 6.0 as recommended.
>
> Could anyone tell me what the problem could be? Have tried and 
> million different things but've been stuck with this forever now.

Try a snapshot from http://wwwhome.cs.utwente.nl/~klaren/antlr/

If that gives problems as well try to give a bit more information on the
procedure you used to build (antlr version etc.)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Chaos often breeds life, when order breeds habit.
  --- Henry B. Adams, The Education of Henry Adams



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From navneetarvind at yahoo.co.uk  Wed Mar  3 06:36:49 2004
From: navneetarvind at yahoo.co.uk (navneetarvind)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: ANTLR with C++
In-Reply-To: <20040303140945.GE5426@cs.utwente.nl>
Message-ID: <c24qi1+7jml@eGroups.com>


..Thanks a million! The snapshot seems to have done the trick for 
now...

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> Hi,
> 
> On Wed, Mar 03, 2004 at 01:51:21PM -0000, navneetarvind wrote:
> > I have been trying to create an antlr.lib file so that I can get 
the 
> > parser generator to produce C++ output files. However I can't 
compile 
> > the Antlr Cpp and hpp files. I'm using VC++ 6.0 as recommended.
> >
> > Could anyone tell me what the problem could be? Have tried and 
> > million different things but've been stuck with this forever now.
> 
> Try a snapshot from http://wwwhome.cs.utwente.nl/~klaren/antlr/
> 
> If that gives problems as well try to give a bit more information 
on the
> procedure you used to build (antlr version etc.)
> 
> Cheers,
> 
> Ric
> -- 
> -----
+++++*****************************************************+++++++++---
----
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
> -----
+++++*****************************************************+++++++++---
----
>   Chaos often breeds life, when order breeds habit.
>   --- Henry B. Adams, The Education of Henry Adams



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar  3 06:49:35 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078325375.1825.67776.m2@yahoogroups.com>


Hello,

This is an automated email message to let you know that
rdenisus <rdenisus@yahoo.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From lubos.vnuk at rts.at  Wed Mar  3 07:08:04 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: optional rule confusion
In-Reply-To: <4045E36F.6050808@rogers.com>
Message-ID: <c24sck+j4bg@eGroups.com>

I always thought the keyword protected was meant for lexers only.

--- In antlr-interest@yahoogroups.com, Igor Fedorenko 
<ifedorenko@r...> wrote:
> Thank you for the hint, Lubos, Adding dummy rule does the trick. 
Note 
> however, that my rule is protected so there is no way it can be 
called 
> as a top level rule.
> 
> Lubos Vnuk wrote:
> 
> > I think you can get some information from a similar thread 
> > titled: "Problem with x: (A)(B)? ; "
> > 
> > Regards,
> > Lubos.
> > 
> > --- In antlr-interest@yahoogroups.com, Igor Fedorenko 
> > <ifedorenko@r...> wrote:
> > 
> >>I must be missing something really simple, but I cannot get antlr 
> >>generate reasonable parser for javadoc-like java method names 
(like 
> >>com.something.MyClass#method).
> >>
> >>Here is what my parser rule looks like
> >>
> >>     protected javaname: ID (DOT ID)* (POUND ID)?
> >>
> >>And here is what antlr generates for the last part
> >>
> >>     switch ( LA(1)) {
> >>     case POUND:
> >>       {
> >>       match(POUND);
> >>       m = LT(1);
> >>       match(ID);
> >>       break;
> >>       }
> >>     case EOF:
> >>       {
> >>       break;
> >>       }
> >>     default:
> >>       {
> >>       throw new NoViableAltException(LT(1), getFilename());
> >>       }
> >>     }
> >>
> >>
> >>Why would antlr generate NoViableAltException for something which 
> > 
> > is 
> > 
> >>optional?
> >>
> >>
> >>Regards,
> >>Igor Fedorenko
> > 
> > 
> > 
> > 
> >  
> > Yahoo! Groups Links
> > 
> > 
> > 
> >  
> > 
> >



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hero323.tw at yahoo.com.tw  Wed Mar  3 08:13:40 2004
From: hero323.tw at yahoo.com.tw (VAIO)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Antlr doesn't support Chinese character
In-Reply-To: <000101c40100$6a1056e0$0400a8c0@NOTEBOOK>
Message-ID: <c2507k+2ra9@eGroups.com>

thanks for help, i forgot to mention that i'm using java. ^^"
i'll try it out. 


--- In antlr-interest@yahoogroups.com, "matthew ford" 
<Matthew.Ford@f...> wrote:
> If you are talking Java, Look at the java\examples\unicode.IDENTs  
directory
> for
> an example.
> matthew
> 
> ----- Original Message ----- 
> From: "VAIO" <hero323.tw@y...>
> To: <antlr-interest@yahoogroups.com>
> Sent: Tuesday, March 02, 2004 4:27 PM
> Subject: [antlr-interest] Antlr doesn't support Chinese character
> 
> 
> > Antlr doesn't support unicode char in Chinese, such
> > as '\u0xA7' '\u0xAC' etc.
> > How do I deal with them in designing a lexer to skip or retrieve
> > words like this?
> >
> >
> > ---
> > I'm a new guy here many thanks for response.
> >
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ifedorenko at rogers.com  Wed Mar  3 08:36:19 2004
From: ifedorenko at rogers.com (Igor Fedorenko)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: optional rule confusion
In-Reply-To: <c24sck+j4bg@eGroups.com>
References: <c24sck+j4bg@eGroups.com>
Message-ID: <40460983.4010908@rogers.com>

Is that true? Did not know that, but it works in parsers just fine. :-) 
And thank you again for helping me with that.

Lubos Vnuk wrote:

> I always thought the keyword protected was meant for lexers only.
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Wed Mar  3 09:12:55 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Forcing creation of children in an AST tree 
	parser
Message-ID: <72C9789739C4214096AE945753B11EA3FABDA2@mypxmail04.bco-home.com>

Show us toStringList() for the result of rule:

activityTimeRange: ACTIVITY^ L_paren! INSTRUMENT Comma! timeExpr
R_paren!;

It should be doing exactly what you want and I don't see why it isn't.

Monty

-----Original Message-----
From: Simon Kellett [mailto:skellett@anitesystems.de] 
Sent: Wednesday, March 03, 2004 1:24 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Forcing creation of children in an AST tree parser

Hi,

I am trying to force the creation of children within a rule that is
essentially parsing a function call:

activityTimeRange: ACTIVITY^ L_paren! INSTRUMENT Comma! timeExpr
R_paren!;

My AST correctly shows the ACTIVITY as a root and the parens and comma
dropped. But I would like the parameters (ie INSTRUMENT and timeExpr)
to be *children* of node ACTIVITY.

Reading the manual I have tried various things, but "AST Action
Translation" about "#rule", in the last para seems to give me what I
want: "For example, any children nodes added after the action will be
added to the children of #rule.".

But in the updated rule all I get is an extra "activityTimeRange" node
and no children, only siblings !!

activityTimeRange: ACTIVITY^ {#activityTimeRange =
#([ACTIVITY,"activityTimeRange"], #activityTimeRange);} L_paren!
INSTRUMENT Comma! timeExpr R_paren!;

Any ideas/pointers as to where I am going wrong ?

(would it be useful to have a force-to-child syntax ? (like "^" for
force-to-root and "!" for drop-token).

TIA, Simon



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Wed Mar  3 09:21:10 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: optional rule confusion
Message-ID: <72C9789739C4214096AE945753B11EA3FABDA4@mypxmail04.bco-home.com>

Yeah, it's only real purpose is for lexers.  In parsers it might just pass
through and make that method protected, I'm not sure.  In any event it
doesn't alter antlr's behavior.

Monty

-----Original Message-----
From: Lubos Vnuk [mailto:lubos.vnuk@rts.at] 
Sent: Wednesday, March 03, 2004 7:08 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: optional rule confusion

I always thought the keyword protected was meant for lexers only.

--- In antlr-interest@yahoogroups.com, Igor Fedorenko 
<ifedorenko@r...> wrote:
> Thank you for the hint, Lubos, Adding dummy rule does the trick. 
Note 
> however, that my rule is protected so there is no way it can be 
called 
> as a top level rule.
> 
> Lubos Vnuk wrote:
> 
> > I think you can get some information from a similar thread 
> > titled: "Problem with x: (A)(B)? ; "
> > 
> > Regards,
> > Lubos.
> > 
> > --- In antlr-interest@yahoogroups.com, Igor Fedorenko 
> > <ifedorenko@r...> wrote:
> > 
> >>I must be missing something really simple, but I cannot get antlr 
> >>generate reasonable parser for javadoc-like java method names 
(like 
> >>com.something.MyClass#method).
> >>
> >>Here is what my parser rule looks like
> >>
> >>     protected javaname: ID (DOT ID)* (POUND ID)?
> >>
> >>And here is what antlr generates for the last part
> >>
> >>     switch ( LA(1)) {
> >>     case POUND:
> >>       {
> >>       match(POUND);
> >>       m = LT(1);
> >>       match(ID);
> >>       break;
> >>       }
> >>     case EOF:
> >>       {
> >>       break;
> >>       }
> >>     default:
> >>       {
> >>       throw new NoViableAltException(LT(1), getFilename());
> >>       }
> >>     }
> >>
> >>
> >>Why would antlr generate NoViableAltException for something which 
> > 
> > is 
> > 
> >>optional?
> >>
> >>
> >>Regards,
> >>Igor Fedorenko
> > 
> > 
> > 
> > 
> >  
> > Yahoo! Groups Links
> > 
> > 
> > 
> >  
> > 
> >



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edcjones at yahoo.com  Wed Mar  3 17:19:56 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] SeeGramWrap: Yet another refactoring
Message-ID: <c2607s+cmmd@eGroups.com>

I have placed a re-refactored version of "SeeGramWrap-03.02.2004.tgz"
on my webpage at "http://members.tripod.com/~edcjones/pycode.html".
SeeGramWrap parses a piece of C code and the resulting parse tree is
output in man and machine readable form. The result can be used for
program transformations. Since a particular trnsformation algorithm
may not require all the information present in the tree, the user can
select what to output.

This program has been written and tested only under linux.

Thanks to John Mitchell and Monty Zukowski for "cgram.tgz". Every
parser generator need to have a good C grammar. Also thanks to
Terrence Parr for ANTLR (http://www.antlr.org/).

==============================================================
                          CONTEXT

Python (http://www.python.org) is a scripting language that is both
easy to read and easy to write. It is so easy to read that I can
usually read my own code six months after I write it. But Python is
slow. If speed is needed for part of a project, Pythonistas write C
code that call functions in Python's large API. It also common to wrap
large C libraries so they can be called by Python. The wrapping code
is repetitive and there may be a lot of it so methods have been
developed for automated wrapping.

The best-known approach is SWIG (http://www.swig.org/). For complex
wrappings, SWIG requires the writing of "typemaps", an unintuitive
process where pieces of C code you write are spliced into the wrapper
code generated by SWIG.

Another wrapper related approach is Pyrex which is found at

    http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/

Pyrex has its own repetitive boilerplate that has to be written. But
the Pyrex boilerplate is so straightforward that it can be taught
algorithmically. See "Michael's Quick Guide to Pyrex" at
"http://ldots.org/pyrex-guide/".

I think that the Pyrex boilerplate is _so_ straightforward that it can
be machine generated. Therefore I have been sporatically developing
software to do this. A thoroughly buggy version of this is on my web
page, "http://members.tripod.com/~edcjones". It is called
"cgram.tar.gz" (The name will be changed). Look at it but don't use
it. "SeeGramWrap" is a major revision of the front end of "cgram.tr.gz".

I think the automatic-wrapper program can be made to work. It might be
easier to use than SWIG. It is still a lot of work to prepare complex
C header files. What we have is really a "program transformation" or
"tree transformation" problem.

I think some of the issues are:

1. Since parser generators have a long and steep learning curve, I
prefer to use them as black boxes which generate parsers which output
results that I can analyze using Python. The parser created by a
parser generator should output trees in two formats: one easy to look
at and another that a program can easily read. For examples, see below.

2. I find trees very easy to work with. I want the trees to be front
and center and highly visible. I prefer to "manipulate a tree" rather
than "fire a rule".

3. The most common type of C macro has a type as one of its arguments:

    #define CAST(x, type) (type *) x

How can these be automatically wrapped for Python which is a
dynamically typed language?

=============================================================
                    TECHNICAL OVERVIEW

I use some C grammars associated with ANTLR. The grammar package is
called "cgram". See "http://www.antlr.org/resources.html".

In "cgram" there is a java program "TestThrough.java" which parses C
code into an AST then runs a tree grammar on the AST and outputs the
original code. The tree grammar is named "GnuCEmitter.g". I work with
this grammar because the terminal tokens are printed in the correct
order. I modified the grammar turning it into a template. A piece of
the original "GnuCEmitter.g" is:

----
typeQualifier
        :       a:"const"                       { print( a ); }
        |       b:"volatile"                    { print( b ); }
        ;
----

The modified version is:

----
typeQualifier
        :       a:"const"                       { <@ a @> }
        |       b:"volatile"                    { <@ b @> }
        ;
----

In this template, strings of the form "<@ ... @>" will each be
replaced by a set of print statements. Moreover the entire rule will
be wrapped by prints.  The template is used in
"emitter/insert_prints.py". If "insert_prints.py" is run the result is:

----
typeQualifier
  { if ( inputState.guessing==0 ) {
          print(Open);
          print("typeQualifier");
       }
    }
        :  (
                a:"const"        {  print(Open);
print("typeQualifier.0"); print( a ); print(Close); }
        |       b:"volatile"     {  print(Open);
print("typeQualifier.1"); print( b ); print(Close); }
           )
  { currentOutput.print(Close + MyTokenSep); }
        ;
----

If the original C program , "temp2.c", is

    char* s = "ab";

The output of the modified emitter grammar is "temp2.c.data":

----
    <<OPEN>>                 <<OPEN>>                 <<OPEN>>
    externalList             declarator               expr
    <<OPEN>>                 <<OPEN>>                 <<OPEN>>
    externalDef              pointerGroup             primaryExpr
    <<OPEN>>                 <<OPEN>>                 <<OPEN>>
    declaration              pointerGroup.0           stringConst
    <<OPEN>>                 *                        <<OPEN>>
    declSpecifiers           <<CLOSE>>                stringConst.0
    <<OPEN>>                 <<CLOSE>>                "ab"
    typeSpecifier            <<OPEN>>                 <<CLOSE>>
    <<OPEN>>                 declarator.0             <<CLOSE>>
    typeSpecifier.1          s                        <<CLOSE>>
    char                     <<CLOSE>>                <<CLOSE>>
    <<CLOSE>>                <<CLOSE>>                <<CLOSE>>
    <<CLOSE>>                <<OPEN>>                 <<CLOSE>>
    <<CLOSE>>                initDecl.0               <<CLOSE>>
    <<OPEN>>                 =                        ;
    initDeclList             <<CLOSE>>                <<CLOSE>>
    <<OPEN>>                 <<OPEN>>                 <<CLOSE>>
    initDecl                 initializer              <<CLOSE>>
----

This output can be processed by "tree.py" to produce "temp2.c.nest"

----
(externalList,
  (externalDef,
    (declaration,
      (declSpecifiers,
        (typeSpecifier,
          (typeSpecifier.1, |char|))),
      (initDeclList,
        (initDecl,
          (declarator,
            (pointerGroup,
              (pointerGroup.0, |*|)),
            (declarator.0, |s|)),
          (initDecl.0, |=|),
          (initializer,
            (expr,
              (primaryExpr,
                (stringConst,
                  (stringConst.0, |"ab"|))))))), |;|)))
----

or "temp2.c.src":

    char * s = "ab" ;

If "temp2.c.src" is put through the entire process itself we get
"temp2.c.src.src" which is identical to "temp2.c.src". This test is
done by "docheck.py".

In the ".data" or ".nest" files the tokens from the original C code
are in the correct order. It is easy to recover

    ('char', '*', 's', '=', '"ab"', ';')

Thanks,
Ed Jones





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar  3 17:54:42 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] SeeGramWrap: Yet another refactoring
In-Reply-To: <c2607s+cmmd@eGroups.com>
References: <c2607s+cmmd@eGroups.com>
Message-ID: <E79CBCCE-6D7E-11D8-8C5A-000A95891192@cs.usfca.edu>

Wow!  Great work, Ed!  Should we make the text of this an "article" at 
antlr.org?

Terence

On Mar 3, 2004, at 5:19 PM, edcjones wrote:

> I have placed a re-refactored version of "SeeGramWrap-03.02.2004.tgz"
> on my webpage at "http://members.tripod.com/~edcjones/pycode.html".
> SeeGramWrap parses a piece of C code and the resulting parse tree is
> output in man and machine readable form. The result can be used for
> program transformations. Since a particular trnsformation algorithm
> may not require all the information present in the tree, the user can
> select what to output.
>
> This program has been written and tested only under linux.
>
> Thanks to John Mitchell and Monty Zukowski for "cgram.tgz". Every
> parser generator need to have a good C grammar. Also thanks to
> Terrence Parr for ANTLR (http://www.antlr.org/).
>
> ==============================================================
>                           CONTEXT
>
> Python (http://www.python.org) is a scripting language that is both
> easy to read and easy to write. It is so easy to read that I can
> usually read my own code six months after I write it. But Python is
> slow. If speed is needed for part of a project, Pythonistas write C
> code that call functions in Python's large API. It also common to wrap
> large C libraries so they can be called by Python. The wrapping code
> is repetitive and there may be a lot of it so methods have been
> developed for automated wrapping.
>
> The best-known approach is SWIG (http://www.swig.org/). For complex
> wrappings, SWIG requires the writing of "typemaps", an unintuitive
> process where pieces of C code you write are spliced into the wrapper
> code generated by SWIG.
>
> Another wrapper related approach is Pyrex which is found at
>
>     http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/
>
> Pyrex has its own repetitive boilerplate that has to be written. But
> the Pyrex boilerplate is so straightforward that it can be taught
> algorithmically. See "Michael's Quick Guide to Pyrex" at
> "http://ldots.org/pyrex-guide/".
>
> I think that the Pyrex boilerplate is _so_ straightforward that it can
> be machine generated. Therefore I have been sporatically developing
> software to do this. A thoroughly buggy version of this is on my web
> page, "http://members.tripod.com/~edcjones". It is called
> "cgram.tar.gz" (The name will be changed). Look at it but don't use
> it. "SeeGramWrap" is a major revision of the front end of 
> "cgram.tr.gz".
>
> I think the automatic-wrapper program can be made to work. It might be
> easier to use than SWIG. It is still a lot of work to prepare complex
> C header files. What we have is really a "program transformation" or
> "tree transformation" problem.
>
> I think some of the issues are:
>
> 1. Since parser generators have a long and steep learning curve, I
> prefer to use them as black boxes which generate parsers which output
> results that I can analyze using Python. The parser created by a
> parser generator should output trees in two formats: one easy to look
> at and another that a program can easily read. For examples, see below.
>
> 2. I find trees very easy to work with. I want the trees to be front
> and center and highly visible. I prefer to "manipulate a tree" rather
> than "fire a rule".
>
> 3. The most common type of C macro has a type as one of its arguments:
>
>     #define CAST(x, type) (type *) x
>
> How can these be automatically wrapped for Python which is a
> dynamically typed language?
>
> =============================================================
>                     TECHNICAL OVERVIEW
>
> I use some C grammars associated with ANTLR. The grammar package is
> called "cgram". See "http://www.antlr.org/resources.html".
>
> In "cgram" there is a java program "TestThrough.java" which parses C
> code into an AST then runs a tree grammar on the AST and outputs the
> original code. The tree grammar is named "GnuCEmitter.g". I work with
> this grammar because the terminal tokens are printed in the correct
> order. I modified the grammar turning it into a template. A piece of
> the original "GnuCEmitter.g" is:
>
> ----
> typeQualifier
>         :       a:"const"                       { print( a ); }
>         |       b:"volatile"                    { print( b ); }
>         ;
> ----
>
> The modified version is:
>
> ----
> typeQualifier
>         :       a:"const"                       { <@ a @> }
>         |       b:"volatile"                    { <@ b @> }
>         ;
> ----
>
> In this template, strings of the form "<@ ... @>" will each be
> replaced by a set of print statements. Moreover the entire rule will
> be wrapped by prints.  The template is used in
> "emitter/insert_prints.py". If "insert_prints.py" is run the result is:
>
> ----
> typeQualifier
>   { if ( inputState.guessing==0 ) {
>           print(Open);
>           print("typeQualifier");
>        }
>     }
>         :  (
>                 a:"const"        {  print(Open);
> print("typeQualifier.0"); print( a ); print(Close); }
>         |       b:"volatile"     {  print(Open);
> print("typeQualifier.1"); print( b ); print(Close); }
>            )
>   { currentOutput.print(Close + MyTokenSep); }
>         ;
> ----
>
> If the original C program , "temp2.c", is
>
>     char* s = "ab";
>
> The output of the modified emitter grammar is "temp2.c.data":
>
> ----
>     <<OPEN>>                 <<OPEN>>                 <<OPEN>>
>     externalList             declarator               expr
>     <<OPEN>>                 <<OPEN>>                 <<OPEN>>
>     externalDef              pointerGroup             primaryExpr
>     <<OPEN>>                 <<OPEN>>                 <<OPEN>>
>     declaration              pointerGroup.0           stringConst
>     <<OPEN>>                 *                        <<OPEN>>
>     declSpecifiers           <<CLOSE>>                stringConst.0
>     <<OPEN>>                 <<CLOSE>>                "ab"
>     typeSpecifier            <<OPEN>>                 <<CLOSE>>
>     <<OPEN>>                 declarator.0             <<CLOSE>>
>     typeSpecifier.1          s                        <<CLOSE>>
>     char                     <<CLOSE>>                <<CLOSE>>
>     <<CLOSE>>                <<CLOSE>>                <<CLOSE>>
>     <<CLOSE>>                <<OPEN>>                 <<CLOSE>>
>     <<CLOSE>>                initDecl.0               <<CLOSE>>
>     <<OPEN>>                 =                        ;
>     initDeclList             <<CLOSE>>                <<CLOSE>>
>     <<OPEN>>                 <<OPEN>>                 <<CLOSE>>
>     initDecl                 initializer              <<CLOSE>>
> ----
>
> This output can be processed by "tree.py" to produce "temp2.c.nest"
>
> ----
> (externalList,
>   (externalDef,
>     (declaration,
>       (declSpecifiers,
>         (typeSpecifier,
>           (typeSpecifier.1, |char|))),
>       (initDeclList,
>         (initDecl,
>           (declarator,
>             (pointerGroup,
>               (pointerGroup.0, |*|)),
>             (declarator.0, |s|)),
>           (initDecl.0, |=|),
>           (initializer,
>             (expr,
>               (primaryExpr,
>                 (stringConst,
>                   (stringConst.0, |"ab"|))))))), |;|)))
> ----
>
> or "temp2.c.src":
>
>     char * s = "ab" ;
>
> If "temp2.c.src" is put through the entire process itself we get
> "temp2.c.src.src" which is identical to "temp2.c.src". This test is
> done by "docheck.py".
>
> In the ".data" or ".nest" files the tokens from the original C code
> are in the correct order. It is easy to recover
>
>     ('char', '*', 's', '=', '"ab"', ';')
>
> Thanks,
> Ed Jones
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar  3 18:30:58 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:27 2004
Subject: New antlr-interest member
Message-ID: <1078367458.79.48010.w87@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sea_sky_heart <sea_sky_heart@yahoo.com.cn> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From skellett at anitesystems.de  Thu Mar  4 01:02:10 2004
From: skellett at anitesystems.de (Simon Kellett)
Date: Mon Dec 20 16:16:27 2004
Subject: [antlr-interest] Re: Forcing creation of children in an AST tree parser
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDA2@mypxmail04.bco-home.com>
Message-ID: <c26rai+8cb2@eGroups.com>

--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> Show us toStringList() for the result of rule:
> 
> activityTimeRange: ACTIVITY^ L_paren! INSTRUMENT Comma! timeExpr
> R_paren!;
> 
> It should be doing exactly what you want and I don't see why it
isn't.

My rule has changed slightly (instrument is now a subrule):

activityTimeRange: ACTIVITY^ L_paren! instrument Comma! timeExpr
R_paren!;
instrument: "MERIS" | "ASAR";

and I run it

Text i/p stream: activity (MERIS, 1234:56)
toStringList() gives: ( activity MERIS 1234:56 )

This is some of the generated Parser code;

else if ((LA(1) == ACTIVITY) && (LA(2) == L_paren) && (LA(3) ==
LITERAL_MERIS || LA(3) == LITERAL_ASAR) && (LA(4) == Comma) && (LA(5)
== ABS_TIME || LA(5) == REL_TIME || LA(5) == ORBIT_TIME)) {
			activityTimeRange();
			astFactory->addASTChild( currentAST, returnAST );

void LmpParser::activityTimeRange() {
...
tmp39_AST = astFactory->create(LT(1));
astFactory->makeASTRoot(currentAST, tmp39_AST);
match(ACTIVITY);
match(L_paren);
instrument();
astFactory->addASTChild( currentAST, returnAST );
match(Comma);
timeExpr();
astFactory->addASTChild( currentAST, returnAST );
match(R_paren);
activityTimeRange_AST = currentAST.root;
...

Thanks, Simon



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Thu Mar  4 01:08:11 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <002601c401c8$3ad28a60$0100a8c0@xpbaby>

Hi again, two hopefully easy questions (that is - hard for me, easy for you
: ).

1) I can't seem to figure out how to nest rules... I'm using a hetrogeneous
tree, and would like rules like (DOT identifier)* to nest. So something
like:

ruleA
 : ruleB (DOT! ruleB)*
 ;

becomes the tree:

AST_B
     |
     AST_B
              |
              AST_B

Maybe it would be easier to explain right by posting the type of thing I've
been trying, something like:

ruleA!
 :   r1:ruleB
  ( r2:ruleB {#r1 = #(#r1, #r2);} )*
 {#ruleA = #r1;}
 ;

which nests, but turns a.b.c into #(a, c). I'm doing this in the parser, not
the tree walker.


2) When getting the text of a rule, I've been calling the generated
variables directly (xx_AST), as in:

ruleA!
 : id:identifier STAR!
  { #ruleA =    #( [Ident, id_AST.getText()] ); } // eg. "id_AST"
 ;

Is there a better way to do that? Ident in this case is a user defined AST
token if that makes a difference, as in:
tokens
{
    Ident      <AST=DDW.CSharp.Ident>;
}


Thanks for the help again : ). The C# parser is all running and put into
trees, but the trees need a lot of work in the expression area - like array
declarations etc. I'm kind of not getting some of the required syntax there
I'm afraid...

Cheers, and thanks as always : )
Robin







 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar  4 01:48:38 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: New antlr-interest member
Message-ID: <1078393718.75.48170.w13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bjowi@ida.liu.se joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From robin at debreuil.com  Thu Mar  4 02:30:26 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
References: <002601c401c8$3ad28a60$0100a8c0@xpbaby>
Message-ID: <000701c401d3$b90694c0$0100a8c0@xpbaby>

Hmm, I got it to work like:

primary_expression!
{ AST curAst = null;}
 :    ps:primary_start
      {curAst = ps_AST;}
     (
         ma:member_access
            {     curAst.setFirstChild(ma_AST);
                   curAst=ma_AST;
            }
     )*
    {#primary_expression = #ps;}
 ;

Maybe there is an easier way? Maybe I 'dont want' this in the first
place...?

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From navneetarvind at yahoo.co.uk  Thu Mar  4 05:45:33 2004
From: navneetarvind at yahoo.co.uk (navneetarvind)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C++ parser
Message-ID: <c27btt+u4gt@eGroups.com>

I'm completely new to parsing...

I've been trying to get the C++ parser put up on teh website to work 
with ANTLR...but it keeps throwing up errors in the "CPPParser.g" 
file..  

I dunno if its a coincidence but all the files that throw up these 
errors have an "include CPPParser.hpp" statement in them...

I'm running VC++ 6.0.  

Any ideas?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar  4 09:10:47 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: New antlr-interest member
Message-ID: <1078420247.93.23096.w53@yahoogroups.com>


Hello,

This is an automated email message to let you know that
softengde <softengde@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From mzukowski at yci.com  Thu Mar  4 09:22:28 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Forcing creation of children in an AST t
	ree parser
Message-ID: <72C9789739C4214096AE945753B11EA3FABDB2@mypxmail04.bco-home.com>

That looks right.  This is lisp notation, where (A B C) means that A is the
root and B is the first child and C is B's sibling.  If 'activity' were not
a root then instead of 
( activity MERIS 1234:56 )
you would have got
activity MERIS 1234:56

Your tree parser rule would look like this:

activityTimeRange: #(ACTIVITY instrument timeExpr);

Monty

-----Original Message-----
From: Simon Kellett [mailto:skellett@anitesystems.de] 
Sent: Thursday, March 04, 2004 1:02 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: Forcing creation of children in an AST tree
parser

--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> Show us toStringList() for the result of rule:
> 
> activityTimeRange: ACTIVITY^ L_paren! INSTRUMENT Comma! timeExpr
> R_paren!;
> 
> It should be doing exactly what you want and I don't see why it
isn't.

My rule has changed slightly (instrument is now a subrule):

activityTimeRange: ACTIVITY^ L_paren! instrument Comma! timeExpr
R_paren!;
instrument: "MERIS" | "ASAR";

and I run it

Text i/p stream: activity (MERIS, 1234:56)
toStringList() gives: ( activity MERIS 1234:56 )

This is some of the generated Parser code;

else if ((LA(1) == ACTIVITY) && (LA(2) == L_paren) && (LA(3) ==
LITERAL_MERIS || LA(3) == LITERAL_ASAR) && (LA(4) == Comma) && (LA(5)
== ABS_TIME || LA(5) == REL_TIME || LA(5) == ORBIT_TIME)) {
			activityTimeRange();
			astFactory->addASTChild( currentAST, returnAST );

void LmpParser::activityTimeRange() {
...
tmp39_AST = astFactory->create(LT(1));
astFactory->makeASTRoot(currentAST, tmp39_AST);
match(ACTIVITY);
match(L_paren);
instrument();
astFactory->addASTChild( currentAST, returnAST );
match(Comma);
timeExpr();
astFactory->addASTChild( currentAST, returnAST );
match(R_paren);
activityTimeRange_AST = currentAST.root;
...

Thanks, Simon



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Thu Mar  4 09:25:00 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <72C9789739C4214096AE945753B11EA3FABDB3@mypxmail04.bco-home.com>

Yeah, typically you wouldn't nest at each DOT, you would have one root and
then all the DOT WHATEVERs as children.  The java grammar or C grammar
should have examples of this.

Monty

-----Original Message-----
From: Robin Debreuil [mailto:robin@debreuil.com] 
Sent: Thursday, March 04, 2004 2:30 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] nesting rules, getting rule text

Hmm, I got it to work like:

primary_expression!
{ AST curAst = null;}
 :    ps:primary_start
      {curAst = ps_AST;}
     (
         ma:member_access
            {     curAst.setFirstChild(ma_AST);
                   curAst=ma_AST;
            }
     )*
    {#primary_expression = #ps;}
 ;

Maybe there is an easier way? Maybe I 'dont want' this in the first
place...?

Cheers,
Robin



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Thu Mar  4 09:49:28 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
References: <72C9789739C4214096AE945753B11EA3FABDB3@mypxmail04.bco-home.com>
Message-ID: <004101c40211$0d890680$0100a8c0@xpbaby>

Great Monty, thanks - these little tips of yours are really helpful to those
of us running blind here : ). I will structure things that way then...

Cheers,
Robin


----- Original Message -----
From: <mzukowski@yci.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 04, 2004 11:25 AM
Subject: RE: [antlr-interest] nesting rules, getting rule text


> Yeah, typically you wouldn't nest at each DOT, you would have one root and
> then all the DOT WHATEVERs as children.  The java grammar or C grammar
> should have examples of this.
>
> Monty
>
> -----Original Message-----
> From: Robin Debreuil [mailto:robin@debreuil.com]
> Sent: Thursday, March 04, 2004 2:30 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] nesting rules, getting rule text
>
> Hmm, I got it to work like:
>
> primary_expression!
> { AST curAst = null;}
>  :    ps:primary_start
>       {curAst = ps_AST;}
>      (
>          ma:member_access
>             {     curAst.setFirstChild(ma_AST);
>                    curAst=ma_AST;
>             }
>      )*
>     {#primary_expression = #ps;}
>  ;
>
> Maybe there is an easier way? Maybe I 'dont want' this in the first
> place...?
>
> Cheers,
> Robin
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Thu Mar  4 09:57:05 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <72C9789739C4214096AE945753B11EA3FABDB6@mypxmail04.bco-home.com>

Yeah, it seems people need a guide to reading the code sometimes.  This
stuff is in Ter's lectures, but maybe something that pointed out techniques
used in the examples would be helpful too for those of you who just start
hacking away?

Monty

-----Original Message-----
From: Robin Debreuil [mailto:robin@debreuil.com] 
Sent: Thursday, March 04, 2004 9:49 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] nesting rules, getting rule text

Great Monty, thanks - these little tips of yours are really helpful to those
of us running blind here : ). I will structure things that way then...

Cheers,
Robin


----- Original Message -----
From: <mzukowski@yci.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 04, 2004 11:25 AM
Subject: RE: [antlr-interest] nesting rules, getting rule text


> Yeah, typically you wouldn't nest at each DOT, you would have one root and
> then all the DOT WHATEVERs as children.  The java grammar or C grammar
> should have examples of this.
>
> Monty
>
> -----Original Message-----
> From: Robin Debreuil [mailto:robin@debreuil.com]
> Sent: Thursday, March 04, 2004 2:30 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] nesting rules, getting rule text
>
> Hmm, I got it to work like:
>
> primary_expression!
> { AST curAst = null;}
>  :    ps:primary_start
>       {curAst = ps_AST;}
>      (
>          ma:member_access
>             {     curAst.setFirstChild(ma_AST);
>                    curAst=ma_AST;
>             }
>      )*
>     {#primary_expression = #ps;}
>  ;
>
> Maybe there is an easier way? Maybe I 'dont want' this in the first
> place...?
>
> Cheers,
> Robin
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar  4 10:58:16 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: New antlr-interest member
Message-ID: <1078426696.170.52181.w31@yahoogroups.com>


Hello,

This is an automated email message to let you know that
newboko <newboko@yahoo.com.mx> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Thu Mar  4 11:27:22 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078428442.117.40416.w14@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bignaegle <john.naegle@qstech.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From edcjones at yahoo.com  Thu Mar  4 15:11:01 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: SeeGramWrap: Yet another refactoring
In-Reply-To: <E79CBCCE-6D7E-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c28d25+a52j@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Wow!  Great work, Ed!

Thanks.

> Should we make the text of this an "article" at antlr.org?

That's OK with me. But before this happens, I would like people to try
running SeeGramWrap on their machine. Please tell me about the bugs
you find. What design errors have I made? Any ideas for improving the
design? If any of you have any difficulties with the documentation,
please tell me so I can improve it.

> On Mar 3, 2004, at 5:19 PM, edcjones wrote:
> 
> I have placed a re-refactored version of SeeGramWrap-03.02.2004.tgz"
> on my webpage at "http://members.tripod.com/~edcjones/pycode.html".
> SeeGramWrap parses a piece of C code and the resulting parse tree is
> output in man and machine readable form. The result can be used for
> program transformations. Since a particular transformation algorithm
> may not require all the information present in the tree, the user 
> can select what to output.
...




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Thu Mar  4 15:30:20 2004
From: offline at shaw.ca (Chris Rose)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Putting this all into an AST
Message-ID: <4047BC0C.2060901@shaw.ca>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Here's what i'm working with -- or at least an example of it:

i have a line from the vCard that will be (for example) this:

com.foo.FN;CHARSET=US-ASCII;ENCODING=8BIT:Rose;Chris;;;;

This is parsed and recognized (so far correctly) as the following tokens:

Type: "WORD" ["com",<33>,line=1,col=1]
Type: "DOT" [".",<8>,line=1,col=4]
Type: "WORD" ["foo",<33>,line=1,col=5]
Type: "DOT" [".",<8>,line=1,col=8]
Type: ""fn"" ["FN",<16>,line=1,col=9]
Type: "SEMI" [";",<34>,line=1,col=11]
Type: ""CHARSET"" ["CHARSET",<39>,line=1,col=12]
Type: "EQUALS" ["=",<36>,line=1,col=19]
Type: ""us-ascii"" ["US-ASCII",<51>,line=1,col=20]
Type: "SEMI" [";",<34>,line=1,col=28]
Type: ""ENCODING"" ["ENCODING",<38>,line=1,col=29]
Type: "EQUALS" ["=",<36>,line=1,col=37]
Type: ""8bit"" ["8BIT",<48>,line=1,col=38]
Type: "VALUE" ["Rose;Chris;;;;

So how do i build a tree out of this?  FN should be the root, with the
WORD (DOT WORD)* preceding it as one descendant, the params as a
separate descendant, and the value as the third, and then another
similar item as its right neighbor.

Thing is, "FN" is one of about 30 possible words there, so i have them
in a parser rule called "name" - but i can't make that the root of a
tree (antlr throws a fit when i try to append a '^' to name)

The same problem comes in everywhere else - the parameter names and
accepted values are in parser rules as well.  So how do i generalize
this to build a tree like the one i'm talking about?

- --
Chris R.
=======
http://offlineblog.com/
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (Cygwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFAR7wLYGWCRcy3UcsRAlnVAJ0ffZ7RcQy0LxEepG4T14xKEP/azACffebA
OZbBom517Deoo4JmbTcHkWE=
=9jXQ
-----END PGP SIGNATURE-----


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Thu Mar  4 15:35:49 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Putting this all into an AST
Message-ID: <72C9789739C4214096AE945753B11EA3FABDC3@mypxmail04.bco-home.com>

You need some imaginary nodes, search for "Imaginary nodes" in Ter's lecture
http://www.cs.usfca.edu/~parrt/course/652/lectures/java.ast.html

Monty

-----Original Message-----
From: Chris Rose [mailto:offline@shaw.ca] 
Sent: Thursday, March 04, 2004 3:30 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Putting this all into an AST

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Here's what i'm working with -- or at least an example of it:

i have a line from the vCard that will be (for example) this:

com.foo.FN;CHARSET=US-ASCII;ENCODING=8BIT:Rose;Chris;;;;

This is parsed and recognized (so far correctly) as the following tokens:

Type: "WORD" ["com",<33>,line=1,col=1]
Type: "DOT" [".",<8>,line=1,col=4]
Type: "WORD" ["foo",<33>,line=1,col=5]
Type: "DOT" [".",<8>,line=1,col=8]
Type: ""fn"" ["FN",<16>,line=1,col=9]
Type: "SEMI" [";",<34>,line=1,col=11]
Type: ""CHARSET"" ["CHARSET",<39>,line=1,col=12]
Type: "EQUALS" ["=",<36>,line=1,col=19]
Type: ""us-ascii"" ["US-ASCII",<51>,line=1,col=20]
Type: "SEMI" [";",<34>,line=1,col=28]
Type: ""ENCODING"" ["ENCODING",<38>,line=1,col=29]
Type: "EQUALS" ["=",<36>,line=1,col=37]
Type: ""8bit"" ["8BIT",<48>,line=1,col=38]
Type: "VALUE" ["Rose;Chris;;;;

So how do i build a tree out of this?  FN should be the root, with the
WORD (DOT WORD)* preceding it as one descendant, the params as a
separate descendant, and the value as the third, and then another
similar item as its right neighbor.

Thing is, "FN" is one of about 30 possible words there, so i have them
in a parser rule called "name" - but i can't make that the root of a
tree (antlr throws a fit when i try to append a '^' to name)

The same problem comes in everywhere else - the parameter names and
accepted values are in parser rules as well.  So how do i generalize
this to build a tree like the one i'm talking about?

- --
Chris R.
=======
http://offlineblog.com/
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (Cygwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFAR7wLYGWCRcy3UcsRAlnVAJ0ffZ7RcQy0LxEepG4T14xKEP/azACffebA
OZbBom517Deoo4JmbTcHkWE=
=9jXQ
-----END PGP SIGNATURE-----


 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Thu Mar  4 16:34:42 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDC3@mypxmail04.bco-home.com>
Message-ID: <c28hv2+ba25@eGroups.com>

I have to disagree with Monty, here (sorry, Monty).  There are a few tricks that you can do.  First of all, you want a value rule that 
builds the subtree with VALUE as root.  The WORD ( DOT WORD )* can be refactored as

WORD ( DOT^ WORD ( DOT! WORD )* )?

to build a tree #( DOT (WORD)+ ) or a single node WORD

name should probably be inlined (ugly, but that's the way ANTLR 2 works) with ^ appended to each of the token names, but as a 
brutal hack you can also do

n:name!  { astFactory.makeASTRoot(currentAST, #n); }

That's pretty ugly, but 2.8 (if Ter can get a final 2.7.3 release out the door and I can find time to finish testing the C++ interface) will 
provide a better alternative.

--Loring


--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> You need some imaginary nodes, search for "Imaginary nodes" in Ter's lecture
> http://www.cs.usfca.edu/~parrt/course/652/lectures/java.ast.html
> 
> Monty
> 
> -----Original Message-----
> From: Chris Rose [mailto:offline@s...] 
> Sent: Thursday, March 04, 2004 3:30 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Putting this all into an AST
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Here's what i'm working with -- or at least an example of it:
> 
> i have a line from the vCard that will be (for example) this:
> 
> com.foo.FN;CHARSET=US-ASCII;ENCODING=8BIT:Rose;Chris;;;;
> 
> This is parsed and recognized (so far correctly) as the following tokens:
> 
> Type: "WORD" ["com",<33>,line=1,col=1]
> Type: "DOT" [".",<8>,line=1,col=4]
> Type: "WORD" ["foo",<33>,line=1,col=5]
> Type: "DOT" [".",<8>,line=1,col=8]
> Type: ""fn"" ["FN",<16>,line=1,col=9]
> Type: "SEMI" [";",<34>,line=1,col=11]
> Type: ""CHARSET"" ["CHARSET",<39>,line=1,col=12]
> Type: "EQUALS" ["=",<36>,line=1,col=19]
> Type: ""us-ascii"" ["US-ASCII",<51>,line=1,col=20]
> Type: "SEMI" [";",<34>,line=1,col=28]
> Type: ""ENCODING"" ["ENCODING",<38>,line=1,col=29]
> Type: "EQUALS" ["=",<36>,line=1,col=37]
> Type: ""8bit"" ["8BIT",<48>,line=1,col=38]
> Type: "VALUE" ["Rose;Chris;;;;
> 
> So how do i build a tree out of this?  FN should be the root, with the
> WORD (DOT WORD)* preceding it as one descendant, the params as a
> separate descendant, and the value as the third, and then another
> similar item as its right neighbor.
> 
> Thing is, "FN" is one of about 30 possible words there, so i have them
> in a parser rule called "name" - but i can't make that the root of a
> tree (antlr throws a fit when i try to append a '^' to name)
> 
> The same problem comes in everywhere else - the parameter names and
> accepted values are in parser rules as well.  So how do i generalize
> this to build a tree like the one i'm talking about?
> 
> - --
> Chris R.
> =======
> http://offlineblog.com/
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.2 (Cygwin)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
> 
> iD8DBQFAR7wLYGWCRcy3UcsRAlnVAJ0ffZ7RcQy0LxEepG4T14xKEP/azACffebA
> OZbBom517Deoo4JmbTcHkWE=
> =9jXQ
> -----END PGP SIGNATURE-----
> 
> 
>  
> Yahoo! Groups Links



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar  4 17:40:58 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] #include on generated hpp files
Message-ID: <c28lra+2v2a@eGroups.com>

My grammar file has a header that #include's the string header file. 
Now I wanted to defined my parser rule to return a std::string as 
such:

page returns [string output]:

But I get a compile error because the header is inserted in the 
generated cpp file. Is there an option to make the header show up in 
the parser's generated hpp file?

When I compile, I get the:

warning:lexical nondeterminism upon
k==1:'-'
k==2:'-'
between alt 1 and exit branch of block

What's the exit branch of a block? Here's the relevant grammar entry:

COMMENT_DATA: (
        {LA(2)!='-' && LA(3)!='>'}? '-' // allow '-' if not "-->"
        | NEWLINE
        | ~('-'|'\n'|'\r')
        )*
        ;

Thanks!

-Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 01:12:41 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] nesting rules, getting rule text
References: <72C9789739C4214096AE945753B11EA3FABDB6@mypxmail04.bco-home.com>
Message-ID: <006801c40292$068bea10$0100a8c0@xpbaby>

For sure - I think I've soaked up more Antlr docs in the last month than is
healthy, but pointers on more specific situations would be really helpful.
Not so much syntax things, but more the 'subjective' stuff. I'm fairly
comfortable getting antlr to do what I want, but I'm not sure if the way I
do it is the recommended way, or even if what I want is something I should
want... An example, what should streams look like after the lexer, after the
parser and tree walkers? Of course they can look like anything you want, but
strong advice helps -- things like  'do like this unless you know you need
something else', vs 'you prefer something else' vs 'you like slow parsers
and confusing grammars'. Knowing how the various trade offs will affect
things like effeciency, size, ease of reading, ease of next stage of parsing
etc really helps out. Even things like when should you record types, what
should be child vs what should be sibling, what is better off in the
lexer/parser/later stages...

Mostly it is that you build the lexer without having ever built an antlr
parser, so you don't really know what you are trying to create even once you
know how to do it. The same goes for the parser - what does a good AST for
antlr look like? I understand this kind of knowledge mostly comes from hard
earned experience, but rough guidelines can be very helpful.

Anyway, hanging out here and reading the archives has been very helpful, esp
when people are giving opinions as well as syntax. Nothing like listening to
experts in the end : ).

Thanks again,
Robin


----- Original Message -----
From: <mzukowski@yci.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 04, 2004 11:57 AM
Subject: RE: [antlr-interest] nesting rules, getting rule text


> Yeah, it seems people need a guide to reading the code sometimes.  This
> stuff is in Ter's lectures, but maybe something that pointed out
techniques
> used in the examples would be helpful too for those of you who just start
> hacking away?
>
> Monty
>
> -----Original Message-----
> From: Robin Debreuil [mailto:robin@debreuil.com]
> Sent: Thursday, March 04, 2004 9:49 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] nesting rules, getting rule text
>
> Great Monty, thanks - these little tips of yours are really helpful to
those
> of us running blind here : ). I will structure things that way then...
>
> Cheers,
> Robin
>
>
> ----- Original Message -----
> From: <mzukowski@yci.com>
> To: <antlr-interest@yahoogroups.com>
> Sent: Thursday, March 04, 2004 11:25 AM
> Subject: RE: [antlr-interest] nesting rules, getting rule text
>
>
> > Yeah, typically you wouldn't nest at each DOT, you would have one root
and
> > then all the DOT WHATEVERs as children.  The java grammar or C grammar
> > should have examples of this.
> >
> > Monty
> >
> > -----Original Message-----
> > From: Robin Debreuil [mailto:robin@debreuil.com]
> > Sent: Thursday, March 04, 2004 2:30 AM
> > To: antlr-interest@yahoogroups.com
> > Subject: Re: [antlr-interest] nesting rules, getting rule text
> >
> > Hmm, I got it to work like:
> >
> > primary_expression!
> > { AST curAst = null;}
> >  :    ps:primary_start
> >       {curAst = ps_AST;}
> >      (
> >          ma:member_access
> >             {     curAst.setFirstChild(ma_AST);
> >                    curAst=ma_AST;
> >             }
> >      )*
> >     {#primary_expression = #ps;}
> >  ;
> >
> > Maybe there is an easier way? Maybe I 'dont want' this in the first
> > place...?
> >
> > Cheers,
> > Robin
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar  5 01:40:49 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C++ parser
In-Reply-To: <c27btt+u4gt@eGroups.com>
References: <c27btt+u4gt@eGroups.com>
Message-ID: <20040305094049.GA8426@cs.utwente.nl>

Hi,

On Thu, Mar 04, 2004 at 01:45:33PM -0000, navneetarvind wrote:
> I'm completely new to parsing...
> 
> I've been trying to get the C++ parser put up on teh website to work 
> with ANTLR...but it keeps throwing up errors in the "CPPParser.g" 
> file..  
> 
> I dunno if its a coincidence but all the files that throw up these 
> errors have an "include CPPParser.hpp" statement in them...

Did you run antlr on the .g files first ? (in the right order if there's
more than one) I'm not really familiar with the grammar on the website.

> I'm running VC++ 6.0.  

Some more information would be helpfull if it's not the above. Like antlr
version used. And what exact error.

If you're new to parsing then starting with a C++ grammar is probably not
the best approach. You got one of the meanest languages to parse there.
Starting with the antlr examples and Terence's lectures (linked somewhere
on antlr.org) is probably a less frustrating start.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar  5 01:46:04 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] #include on generated hpp files
In-Reply-To: <c28lra+2v2a@eGroups.com>
References: <c28lra+2v2a@eGroups.com>
Message-ID: <20040305094604.GB8426@cs.utwente.nl>

On Fri, Mar 05, 2004 at 01:40:58AM -0000, Jerry Dy wrote:
> But I get a compile error because the header is inserted in the 
> generated cpp file. Is there an option to make the header show up in 
> the parser's generated hpp file?

See the doc/cpp-runtime.html at the end there's a template file.

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Before they invented drawing boards, what did they go back to?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 03:19:15 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
Message-ID: <009901c402a3$b4c17a80$0100a8c0@xpbaby>

Hey all,

I have the latest version of the C# parser up - it now puts the tokens into
tree form. The AST is modeled fairly closely on the codeDom, other than what
is missing in there. It is using classes for each node type, except for some
low level ops/literals etc. I have been altering the C# antlr to use enums
and make it cls compliant, I hope I've unwound all those changes for this
version. If you get an error using the C# token classes with antlr 272,
please let me know : ).

The one thing I haven't been albe to get working is verbatim identifiers (it
is obscure - the ones where you can say @keyword for an identifier). The
verbatim strings are working though (the unescaped strings -
@"abc/def\ghi"). It is one or the other so far... I've tired in both the
lexer and the parser - the problem is you can have:

string_literal:
@"string"   // unescaped string
"hello"        // normal string

identifier:
@class        // identifier - must be keyword
ident           // identifier

It seems it should be easy, but the way it lines up all the slots one by one
keeps biting me.

Other than that, it should parse everything except for unsafe code, and the
#if preprocessor stuff (next up). It is pretty slow on large large files
(like 20k lines of the antlr output), but reasonable on less than a few
thousand lines. The grammar is at:

http://www.debreuil.com/CSharp/CSgrammar.html

and the cs files, and a .Net executable (just drag cs files into CSharp.exe)
are at:

http://www.debreuil.com/CSharp/CSharp.zip

I haven't been able to break it for a few hours, but I'm sure there are
still little things in there. Also, the tree is still inserting quite a few
superfluous nodes, and is a bit strange anyway. Next step I'll move that to
a (walkable) nested object structure, shouldn't take long...

Well, back to Antlr'ing... Cool tool, gotta be (re)said!

Cheers,
robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From wiggjd at lsbu.ac.uk  Fri Mar  5 06:21:40 2004
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C++ parser
Message-ID: <40488CF4.8010607@lsbu.ac.uk>

Hi,

You have not given us much to work on!

What were you running at the time?

Could you let us know what steps you have taken successfully so 
far (briefly) and supply some example error messages?

David Wigg

navneetarvind wrote;

Message: 6
    Date: Thu, 04 Mar 2004 13:45:33 -0000
    From: "navneetarvind" <navneetarvind@yahoo.co.uk>
Subject: C++ parser

I'm completely new to parsing...

I've been trying to get the C++ parser put up on teh website to 
work
with ANTLR...but it keeps throwing up errors in the "CPPParser.g"
file..

I dunno if its a coincidence but all the files that throw up these
errors have an "include CPPParser.hpp" statement in them...

I'm running VC++ 6.0.

Any ideas?



________________________________________________________________________



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From skellett at anitesystems.de  Fri Mar  5 06:44:45 2004
From: skellett at anitesystems.de (Simon Kellett)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Forcing creation of children in an AST t ree parser
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDB2@mypxmail04.bco-home.com>
Message-ID: <c2a3ot+432p@eGroups.com>

Hi Monty,

> That looks right.  This is lisp notation, where (A B C) means that A
is the
> root and B is the first child and C is B's sibling.

You are right :-) I just checked my code again and realised that the
"problem" is in my code that prints out the tree (for debugging
purposes).
I had copied the toStringList() code and changed it to print out an
indented tree (like the unix pstree). But as I mis-understood the lisp
notation, I printed out my tree incorrectly :-(
So it works now !

Thanks for your help, Simon



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Fri Mar  5 08:23:19 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
In-Reply-To: <c28hv2+ba25@eGroups.com>
Message-ID: <c2a9hn+ko81@eGroups.com>

Both of those are working like a charm for me.  Now, i'm left with one
problem left, and then this is complete.

i have the following for an item:

item
:
   (name) =>
      baseitem // baseitem starts with (name) always
   |
   groups DOT! baseitem
   ;

Is there a way to plug an empty group into the first alternative, and
use a [group, ""] as the root of a #(group baseitem) tree which will
be the form for both of these?  Or a #([ITEM, "item"] group baseitem)
tree, which might be the better way -- although i think that a group
will be a better, more logical root to the tree.

I tried doing this:

{#item = #([groups, ""], #item);}

but i got back "groups cannot be resolved" in a java.lang.Error

Basically, the groups should be the root, and everything else a node,
and an empty group should still have a group as the root, just with
the text "" instead of a group.

I'm sure i've read how to do this, and i'm looking over the antlr docs
on tree construction now, but i'm missing it, i'm sure.

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> I have to disagree with Monty, here (sorry, Monty).  There are a few
tricks that you can do.  First of all, you want a value rule that 
> builds the subtree with VALUE as root.  The WORD ( DOT WORD )* can
be refactored as
> 
> WORD ( DOT^ WORD ( DOT! WORD )* )?
> 
> to build a tree #( DOT (WORD)+ ) or a single node WORD
> 
> name should probably be inlined (ugly, but that's the way ANTLR 2
works) with ^ appended to each of the token names, but as a 
> brutal hack you can also do
> 
> n:name!  { astFactory.makeASTRoot(currentAST, #n); }
> 
> That's pretty ugly, but 2.8 (if Ter can get a final 2.7.3 release
out the door and I can find time to finish testing the C++ interface)
will 
> provide a better alternative.
> 
> --Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Fri Mar  5 09:45:26 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
Message-ID: <72C9789739C4214096AE945753B11EA3FABDC6@mypxmail04.bco-home.com>

>I have to disagree with Monty, here (sorry, Monty).  

Don't worry, I still have things to learn.

Monty


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Fri Mar  5 09:45:46 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
Message-ID: <72C9789739C4214096AE945753B11EA3FABDC7@mypxmail04.bco-home.com>

Remember, only tokens, not rules, can be made into a root.  So {#item =
#([groups, ""], #item);} makes no sense because "groups" is a rule.  ANTLR
isn't smart enough to know if the rule "groups" only returns a single token.
And I don't know because you didn't post the groups rule.  So more detail is
needed to help you.

Monty

-----Original Message-----
From: offline314159 [mailto:offline@shaw.ca] 
Sent: Friday, March 05, 2004 8:23 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: Putting this all into an AST

Both of those are working like a charm for me.  Now, i'm left with one
problem left, and then this is complete.

i have the following for an item:

item
:
   (name) =>
      baseitem // baseitem starts with (name) always
   |
   groups DOT! baseitem
   ;

Is there a way to plug an empty group into the first alternative, and
use a [group, ""] as the root of a #(group baseitem) tree which will
be the form for both of these?  Or a #([ITEM, "item"] group baseitem)
tree, which might be the better way -- although i think that a group
will be a better, more logical root to the tree.

I tried doing this:

{#item = #([groups, ""], #item);}

but i got back "groups cannot be resolved" in a java.lang.Error

Basically, the groups should be the root, and everything else a node,
and an empty group should still have a group as the root, just with
the text "" instead of a group.

I'm sure i've read how to do this, and i'm looking over the antlr docs
on tree construction now, but i'm missing it, i'm sure.

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> I have to disagree with Monty, here (sorry, Monty).  There are a few
tricks that you can do.  First of all, you want a value rule that 
> builds the subtree with VALUE as root.  The WORD ( DOT WORD )* can
be refactored as
> 
> WORD ( DOT^ WORD ( DOT! WORD )* )?
> 
> to build a tree #( DOT (WORD)+ ) or a single node WORD
> 
> name should probably be inlined (ugly, but that's the way ANTLR 2
works) with ^ appended to each of the token names, but as a 
> brutal hack you can also do
> 
> n:name!  { astFactory.makeASTRoot(currentAST, #n); }
> 
> That's pretty ugly, but 2.8 (if Ter can get a final 2.7.3 release
out the door and I can find time to finish testing the C++ interface)
will 
> provide a better alternative.
> 
> --Loring



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From offline at shaw.ca  Fri Mar  5 10:21:44 2004
From: offline at shaw.ca (offline314159)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDC7@mypxmail04.bco-home.com>
Message-ID: <c2agfo+ovf0@eGroups.com>

As Loring suggested, i refactored groups to read like this:

w:WORD ( DOT^ WORD ( DOT! WORD )* )?

So when i get a single point group, there's just that one word as the
root.
"grpword"
---- (name)
--------(params)
--------(value)

But, when i get more than one subgroup, i get problems - the group
tokens all vanish, and in the AST i get
"."
---- (name)
-------(params)
-------(value)

But it loses the rest of the group, which is not desired behaviour. 
And it doesn't seem to make sense, based on the shape of the rule for
groups

So, i'm wondering, do i have to manually build the group tree?  And if
so, how do i do it with that rule?  This is going to require actions,
i can see that, but i'm not totally sure about the right ones to take
(as should be obvious to the list in general at this point.)

--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> Remember, only tokens, not rules, can be made into a root.  So {#item =
> #([groups, ""], #item);} makes no sense because "groups" is a rule.
 ANTLR
> isn't smart enough to know if the rule "groups" only returns a
single token.
> And I don't know because you didn't post the groups rule.  So more
detail is
> needed to help you.
> 
> Monty



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Fri Mar  5 10:14:33 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby>
Message-ID: <016501c402dd$dd750c00$7e82763e@home>

> Hey all,
>
> and the cs files, and a .Net executable (just drag cs files into
CSharp.exe)
> are at:
>
> http://www.debreuil.com/CSharp/CSharp.zip
>
> Cheers,
> robin

Hello Robin!

I try your parser.
1. CSharpLexer.cs(402) not compiled under MSVC# in one line.
override public new Token nextToken()
and compiled after new keyword removed:
override public Token nextToken().
This line is generated by ANTLR/C#.
2. Parser runs infinite when try parse line at CSharpParser.cs(8191).
3. What are you using to work with C#?

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar  5 10:34:14 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
In-Reply-To: <009901c402a3$b4c17a80$0100a8c0@xpbaby>
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby>
Message-ID: <B419911C-6ED3-11D8-8C5A-000A95891192@cs.usfca.edu>

Awesome :)  Heh, can you post a link to your work at antlr.org under 
grammars?

Ter

On Mar 5, 2004, at 3:19 AM, Robin Debreuil wrote:

> Hey all,
>
> I have the latest version of the C# parser up - it now puts the tokens 
> into
> tree form. The AST is modeled fairly closely on the codeDom, other 
> than what
> is missing in there. It is using classes for each node type, except 
> for some
> low level ops/literals etc. I have been altering the C# antlr to use 
> enums
> and make it cls compliant, I hope I've unwound all those changes for 
> this
> version. If you get an error using the C# token classes with antlr 272,
> please let me know : ).
>
> The one thing I haven't been albe to get working is verbatim 
> identifiers (it
> is obscure - the ones where you can say @keyword for an identifier). 
> The
> verbatim strings are working though (the unescaped strings -
> @"abc/def\ghi"). It is one or the other so far... I've tired in both 
> the
> lexer and the parser - the problem is you can have:
>
> string_literal:
> @"string"   // unescaped string
> "hello"        // normal string
>
> identifier:
> @class        // identifier - must be keyword
> ident           // identifier
>
> It seems it should be easy, but the way it lines up all the slots one 
> by one
> keeps biting me.
>
> Other than that, it should parse everything except for unsafe code, 
> and the
> #if preprocessor stuff (next up). It is pretty slow on large large 
> files
> (like 20k lines of the antlr output), but reasonable on less than a few
> thousand lines. The grammar is at:
>
> http://www.debreuil.com/CSharp/CSgrammar.html
>
> and the cs files, and a .Net executable (just drag cs files into 
> CSharp.exe)
> are at:
>
> http://www.debreuil.com/CSharp/CSharp.zip
>
> I haven't been able to break it for a few hours, but I'm sure there are
> still little things in there. Also, the tree is still inserting quite 
> a few
> superfluous nodes, and is a bit strange anyway. Next step I'll move 
> that to
> a (walkable) nested object structure, shouldn't take long...
>
> Well, back to Antlr'ing... Cool tool, gotta be (re)said!
>
> Cheers,
> robin
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Fri Mar  5 10:54:56 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C# working version
In-Reply-To: <016501c402dd$dd750c00$7e82763e@home>
Message-ID: <c2aie0+4dhk@eGroups.com>

> I try your parser.
> 1. CSharpLexer.cs(402) not compiled under MSVC# in one line.
> override public new Token nextToken()
> and compiled after new keyword removed:
> override public Token nextToken().
> This line is generated by ANTLR/C#.

This is a known issue with ANTLR 2.7.3rc2. Please see this message:
http://groups.yahoo.com/group/antlr-interest/message/10766

> 2. Parser runs infinite when try parse line at CSharpParser.cs(8191).
> 3. What are you using to work with C#?

I'd guess he uses 2.7.2 or a variant thereof. Or a patched 2.7.3rc2. ;-)

Micheal





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ebruno at solution-soft.com  Fri Mar  5 11:05:56 2004
From: ebruno at solution-soft.com (Eric Bruno)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Using antlr as part jsp/servlet with tomcat.
In-Reply-To: <c2agfo+ovf0@eGroups.com>
References: <72C9789739C4214096AE945753B11EA3FABDC7@mypxmail04.bco-home.com>
 <c2agfo+ovf0@eGroups.com>
Message-ID: <6.0.1.1.2.20040305110223.025a9e58@mail.solution-soft.com>

Has anyone done this?
Any known issues?

Eric Bruno
ebruno@solution-soft.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 11:44:14 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby> <016501c402dd$dd750c00$7e82763e@home>
Message-ID: <002301c402ea$4050b390$0100a8c0@xpbaby>

Hey Alex,

Thanks a ton for the feedback : ). I am using 2.72 with mostly the csc
command line compiler (v 7.00.9466). Once in a while I also use VS.Net, when
trying to trace stuff mostly. I had modified a few of the antlr classes, but
afaik (hopefully!) I had changed everything back. I did also apply a
downloadable patch the the C# stuff at one point - maybe that fixed what
Micheal had mentioned? I don't get that line when it generates the cs
anyway, and I certainly didn't fix it ; ).

I had noticed the parsing the parser would hang, but I (think) I could get
each section to parse. The line you mentioned, if I have it right [1], will
parse if you wait a looong time. That isn't to say it isn't a bug, but more
likely its the way I'm going about parsing (in that it dies on very long
recursive stuff). The dark art of optimizing is still a bit of a grey area
to me I'm afraid...

How do you go about isolating the problem parts of a parse? I have to just
delete/comment sections until I can isolate the problem - it seems you use a
better way...? I can usually find the error after a while, but all bets are
off on what line number it was : ).

Thanks again,
Robin


[1] (wrapped...)

class StmtTests
{
 public int TestMeth()
 {
  catch_clause_AST = (AST)astFactory.make( (new
ASTArray(4)).add((AST)astFactory.make( (new
ASTArray(1)).add((DDW.CSharp.CatchClause)
astFactory.create(CatchClause)))).add((AST)astFactory.make( (new
ASTArray(2)).add((DDW.CSharp.TypeRef)
astFactory.create(TypeRef)).add(tp_AST))).add(id_AST).add((AST)astFactory.ma
ke( (new ASTArray(2)).add((DDW.CSharp.Statements)
astFactory.create(Statements)).add(st_AST))));
 }
}


> Hello Robin!
>
> I try your parser.
> 1. CSharpLexer.cs(402) not compiled under MSVC# in one line.
> override public new Token nextToken()
> and compiled after new keyword removed:
> override public Token nextToken().
> This line is generated by ANTLR/C#.
> 2. Parser runs infinite when try parse line at CSharpParser.cs(8191).
> 3. What are you using to work with C#?
>
> Alex.
>




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 11:47:34 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby> <B419911C-6ED3-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <002701c402ea$b9a2bef0$0100a8c0@xpbaby>

> Awesome :)  Heh, can you post a link to your work at antlr.org
> under  grammars?

For sure - do I need a secret handshake or something to post that? Off to
try anyway...

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Fri Mar  5 12:02:26 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C# working version
References: <c2aie0+4dhk@eGroups.com>
Message-ID: <004d01c402ec$eaaa4020$f688763e@home>

> This is a known issue with ANTLR 2.7.3rc2. Please see this message:
> http://groups.yahoo.com/group/antlr-interest/message/10766

Thanks, it help.

> > 2. Parser runs infinite when try parse line at CSharpParser.cs(8191).
> > 3. What are you using to work with C#?
>
> I'd guess he uses 2.7.2 or a variant thereof. Or a patched 2.7.3rc2. ;-)
>
> Micheal

Sorry, I'm ask about IDE that used for develop C# grammar. I'm interesting
in csproj/sln-files for MSVC#.

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Fri Mar  5 12:31:16 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Problem Writing Lexer Rule
In-Reply-To: <002301c402ea$4050b390$0100a8c0@xpbaby>
Message-ID: <20040305203116.43064.qmail@web12707.mail.yahoo.com>

Hello,

The following is a snippet of a grammar I've written:

protected NOT_CB:        ~']';
protected ESC_CB:        "]]";
protected TEMP_D:        NOT_CB | ESC_CB;
protected DELIM_ID:      '['  (TEMP_D)+ ']';
REG_OR_DELIM_ID: DELIM_ID;

It fails on the following input: 

  [aaa].[bbb]

complaining thusly:

  expecting ']', found '.'

I've looked at the generated code and the problem
occurs after the last 'a' has been processed and LA(1)
= ']' and LA(2) = '.'.  The lookahead checks in
mDELIM_ID are constructed such that "]." passes and
mTEMP_D( ) gets called and then of course fails.  This
seems like a job for syntactic predicates but I can't
seem to get it straightened out.  Any guidence would
be greatly appreciated.  Thanks in advance.

-jason

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 12:41:46 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C# working version
References: <c2aie0+4dhk@eGroups.com> <004d01c402ec$eaaa4020$f688763e@home>
Message-ID: <004601c402f2$4a1a3830$0100a8c0@xpbaby>

> Sorry, I'm ask about IDE that used for develop C# grammar. I'm interesting
> in csproj/sln-files for MSVC#.

Oh - I had used TextPad, mostly because of using the java step to generate
the lexer/parser, but also it is because it is easy to adjust the syntax
highlighting for different sections. To work on the token classes and the
antlr libs I used vs.net 2002 - I might have had to modify the project files
to be 2002 compatible (you can just modify the headers of the sln and proj
files). The bat file I use to run it copies whatever updates were made to
antlr into the working directory of the grammar.

To get it to run in vc# (as you probably know), just start an empty project,
add the cs files, and the add a reference to antlr.runtime-2.7.2 dll. I
didn't go as far as calling the java from vs.net, though it shouldn't be too
hard if you want that. The bat file I use (local dirs and all) looks like:

REM ** run.bat **
echo off
cls
java -cp G:\antlr-2.7.2 antlr.Tool csharp.g
copy G:\antlr-2.7.2\lib\csharp\src\obj\Debug\antlr.runtime.dll
F:\Mediator\CSharp\
csc /out:CSharp.exe /warn:1 /nologo /R:F:\Mediator\CSharp\antlr.runtime.dll
*.cs
CSharp.exe cs2.in

I just set that to the F5 hotkey in TextPad... I've put up the syntax
highlighting file for TextPad as well, in case anyone uses that too.
http://www.debreuil.com/CSharp/CSgrammar.syn

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Fri Mar  5 12:49:02 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby> <016501c402dd$dd750c00$7e82763e@home> <002301c402ea$4050b390$0100a8c0@xpbaby>
Message-ID: <007201c402f3$c0147090$f688763e@home>

Hello Robin!

> Hey Alex,
>
> Thanks a ton for the feedback : ).
Sorry for ton.

> I am using 2.72 with mostly the csc
> command line compiler (v 7.00.9466). Once in a while I also use VS.Net,
when
> trying to trace stuff mostly.
What about to add csproj/sln-files in next version zip-archive?

> The line you mentioned, if I have it right [1], will
> parse if you wait a looong time.
Yes, this is not a bug, it just parsing very looong time. Under MSVC#
debugger I wait more than 10 minutes and I have not waited. Than I run it
under comman line. C# parser works very interesting, it may parse more than
1000 line/second and after that may sleep about 1 minute. Is this problem
with garbage collector or 512MB on my computer is not enough to parse 415K
file?

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Fri Mar  5 13:28:31 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# working version
References: <009901c402a3$b4c17a80$0100a8c0@xpbaby> <016501c402dd$dd750c00$7e82763e@home> <002301c402ea$4050b390$0100a8c0@xpbaby> <007201c402f3$c0147090$f688763e@home>
Message-ID: <005501c402f8$d257c950$0100a8c0@xpbaby>

> What about to add csproj/sln-files in next version zip-archive?

I'll do that - I'll try to put the calls to java in there as well...


> Yes, this is not a bug, it just parsing very looong time. Under MSVC#
> debugger I wait more than 10 minutes and I have not waited. Than I run it
> under comman line. C# parser works very interesting, it may parse more
than
> 1000 line/second and after that may sleep about 1 minute. Is this problem
> with garbage collector or 512MB on my computer is not enough to parse 415K
> file?

I haven't gotten all 20k lines of that to parse at once, but each section
seems to. I suspect the problem comes down to

1) Me.

2) I tried to make it somewhat similar looking to the ecma spec, but antlr
probably works better when things look more antlr like. There are a lot of
constructs in there that could be folded into others for example.

3) There are a few spots where syntactic predicates are used. I tried to
keep those down, but haven't optimized them to only look ahead partially.
Mostly this is with numbers, and higher level members (class, interface,
enum etc.), but in the expression parts a bit too. I would imagine there are
situations where this gets geometrically large, but there are only so many
'nondeterminism' errors I can look at before calling in the heavy artillery.
I think some of those can now be taken out or shortened at least.. Some
could also use {LA(2)==xx;}? instead, which I think would be faster.

4) I had a hard time with expressions, it would be the place that
improvements would help the most I suspect. It already looks pretty
different than the spec, and would benefit from being scrapped and rewritten
in a more antlr way. It might catch a few more errors this way though, not
sure..

Anyway, I'm just using this for programming smaller multimedia files (swf,
svg, and small directx apps), so it probably is good enough for that. I
might work more on verifying the tree and compiling before going back to the
speed issues, but if anyone else wants a go at it, that would be great
too...

Cheers,
robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dude at darkfigure.org  Fri Mar  5 13:47:22 2004
From: dude at darkfigure.org (Paul J. Lucas)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Best way to get absolute character position?
Message-ID: <c2asha+q93o@eGroups.com>

The Token class provides getLine() and getColumn().  But what I want is something like 
getBeginCharIndex() and getEndCharIndex(), i.e., functions to tell me the absolute 
character positions the token starts/ends at from the begginning of the character stream.

What's the best way to get this information?

- Paul



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar  5 13:49:40 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: Putting this all into an AST
In-Reply-To: <c2agfo+ovf0@eGroups.com>
Message-ID: <c2aslk+4avs@eGroups.com>

Sorry--

Change this to

( ( WORD DOT^)? (WORD DOT)* )? n:name! ...

My original factoring put <name> as a child of the DOT tree.

Mostly, think through how things should look in a tree, separate out subrules as rules if necessary to structure the tree, and proceed.

--Loring


--- In antlr-interest@yahoogroups.com, "offline314159" <offline@s...> wrote:
> As Loring suggested, i refactored groups to read like this:
> 
> w:WORD ( DOT^ WORD ( DOT! WORD )* )?
> 
> So when i get a single point group, there's just that one word as the
> root.
> "grpword"
> ---- (name)
> --------(params)
> --------(value)
> 
> But, when i get more than one subgroup, i get problems - the group
> tokens all vanish, and in the AST i get
> "."
> ---- (name)
> -------(params)
> -------(value)
> 
> But it loses the rest of the group, which is not desired behaviour. 
> And it doesn't seem to make sense, based on the shape of the rule for
> groups
> 
> So, i'm wondering, do i have to manually build the group tree?  And if
> so, how do i do it with that rule?  This is going to require actions,
> i can see that, but i'm not totally sure about the right ones to take
> (as should be obvious to the list in general at this point.)
> 
> --- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> > Remember, only tokens, not rules, can be made into a root.  So {#item =
> > #([groups, ""], #item);} makes no sense because "groups" is a rule.
>  ANTLR
> > isn't smart enough to know if the rule "groups" only returns a
> single token.
> > And I don't know because you didn't post the groups rule.  So more
> detail is
> > needed to help you.
> > 
> > Monty



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar  5 16:56:06 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: New antlr-interest member
Message-ID: <1078534566.50.49400.w71@yahoogroups.com>


Hello,

This is an automated email message to let you know that
gudujarlson <mbresnah@visi.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From mbresnah at visi.com  Fri Mar  5 18:06:35 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# Classes Not Included in antlr.jar
Message-ID: <EKEJKOHPOIIALFJMKEIGAEPLFHAA.mike@fruitioninc.com>

In antlr-2.7.2.tar.gz, the classes in ./antlr/actions/csharp are not
included in ./antlr.jar.

Mike Bresnahan




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Fri Mar  5 17:07:29 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# Build Error
Message-ID: <EKEJKOHPOIIALFJMKEIGIEPKFHAA.mbresnah@visi.com>

I am brand new to ANTLR.  I downloaded antlr-2.7.2.tar.gz from the website,
untarred it, ran nant in lib/csharp and recieved the following:

--- BEGIN DIAGNOSTICS ---
C:\cygwin\home\administrator\antlr-2.7.2\lib\csharp\antlr.runtime.build(23,4
):
Script exception.
 Could not find file
"C:\cygwin\home\administrator\antlr-2.7.2\lib\csharp\AssemblyInfo.cs".
--- END DIAGNOSTICS ---

So I applied the following patch to antlr.runtime.build.

--- BEGIN PATCH ---
--- antlr.runtime.build.original        2003-01-19 18:37:28.000000000 -0600
+++ antlr.runtime.build 2004-03-05 18:53:20.046686400 -0600
@@ -23,7 +23,7 @@
                <script language="C#">
                        <code><![CDATA[
                                public static void ScriptMain(Project
project) {
-                                       string assemblyInfoFileName =
Path.Combine(project.BaseDirectory, "AssemblyInfo.cs");
+                                       string assemblyInfoFileName =
Path.Combine(project.BaseDirectory, "src/AssemblyInfo.cs");
                                        StreamReader reader =
File.OpenText(assemblyInfoFileName);

                                        try {
--- END PATCH ---




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar  5 21:23:55 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078550635.620.97554.m1@yahoogroups.com>


Hello,

This is an automated email message to let you know that
lord_mondegreen <dennis.heynick@verizon.net> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From parrt at cs.usfca.edu  Fri Mar  5 22:33:02 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# Build Error
In-Reply-To: <EKEJKOHPOIIALFJMKEIGIEPKFHAA.mbresnah@visi.com>
References: <EKEJKOHPOIIALFJMKEIGIEPKFHAA.mbresnah@visi.com>
Message-ID: <1E7B5C4D-6F38-11D8-999D-000393BB647E@cs.usfca.edu>

Have you tried the antlr-2.7.3rc2?  Should fix a bunch.
Terence

On Mar 5, 2004, at 5:07 PM, Mike Bresnahan wrote:

> I am brand new to ANTLR.  I downloaded antlr-2.7.2.tar.gz from the  
> website,
> untarred it, ran nant in lib/csharp and recieved the following:
>
> --- BEGIN DIAGNOSTICS ---
> C:\cygwin\home\administrator\antlr 
> -2.7.2\lib\csharp\antlr.runtime.build(23,4
> ):
> Script exception.
>  Could not find file
> "C:\cygwin\home\administrator\antlr-2.7.2\lib\csharp\AssemblyInfo.cs".
> --- END DIAGNOSTICS ---
>
> So I applied the following patch to antlr.runtime.build.
>
> --- BEGIN PATCH ---
> --- antlr.runtime.build.original        2003-01-19 18:37:28.000000000  
> -0600
> +++ antlr.runtime.build 2004-03-05 18:53:20.046686400 -0600
> @@ -23,7 +23,7 @@
>                 <script language="C#">
>                         <code><![CDATA[
>                                 public static void ScriptMain(Project
> project) {
> -                                       string assemblyInfoFileName =
> Path.Combine(project.BaseDirectory, "AssemblyInfo.cs");
> +                                       string assemblyInfoFileName =
> Path.Combine(project.BaseDirectory, "src/AssemblyInfo.cs");
>                                         StreamReader reader =
> File.OpenText(assemblyInfoFileName);
>
>                                         try {
> --- END PATCH ---
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Sat Mar  6 00:34:20 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C# working version
References: <c2aie0+4dhk@eGroups.com> <004d01c402ec$eaaa4020$f688763e@home> <004601c402f2$4a1a3830$0100a8c0@xpbaby>
Message-ID: <005f01c4035e$bb6f9e00$d884763e@home>

> Oh - I had used TextPad, mostly because of using the java step to generate
> the lexer/parser, but also it is because it is easy to adjust the syntax
> highlighting for different sections. To work on the token classes and the
> antlr libs I used vs.net 2002 - I might have had to modify the project
files
> to be 2002 compatible (you can just modify the headers of the sln and proj
> files). The bat file I use to run it copies whatever updates were made to
> antlr into the working directory of the grammar.
>
> To get it to run in vc# (as you probably know), just start an empty
project,
> add the cs files, and the add a reference to antlr.runtime-2.7.2 dll. I
> didn't go as far as calling the java from vs.net, though it shouldn't be
too
> hard if you want that. The bat file I use (local dirs and all) looks like:
>
> REM ** run.bat **
> echo off
> cls
> java -cp G:\antlr-2.7.2 antlr.Tool csharp.g
> copy G:\antlr-2.7.2\lib\csharp\src\obj\Debug\antlr.runtime.dll
> F:\Mediator\CSharp\
> csc /out:CSharp.exe /warn:1 /nologo
/R:F:\Mediator\CSharp\antlr.runtime.dll
> *.cs
> CSharp.exe cs2.in
>
> I just set that to the F5 hotkey in TextPad... I've put up the syntax
> highlighting file for TextPad as well, in case anyone uses that too.
> http://www.debreuil.com/CSharp/CSgrammar.syn
>
> Cheers,
> Robin

1. You can add command line call to project.
Open project properties add to Common Properties/Build Events/Pre-build
Event Command Line command line ("java -cp G:\antlr-2.7.2 antlr.Tool
csharp.g" (without quotes)). This variant has one disadvantage -
lexer/parser/etc files fully regenerated every time before building the
project (this may take a lot of time).
2. Add antlr/C#-runtime project to solution. And create reference to this
project from C#Parser project.

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat Mar  6 06:46:39 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:28 2004
Subject: New antlr-interest member
Message-ID: <1078584399.222.64698.w53@yahoogroups.com>


Hello,

This is an automated email message to let you know that
levdovidovitch <jc.lelann@wanadoo.fr> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From parrt at cs.usfca.edu  Sat Mar  6 12:05:24 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
Message-ID: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>

Folks,

In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
down everything that annoys me about ANTLR 2.0.  I have started another 
"blog" document:

http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

Feel free to send in your pet peeves to me or to this list.  I will try 
to add to this file.

I can hear John Mitchell now: "predicate hoisting!" ;)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From greenrd at greenrd.org  Sat Mar  6 14:03:41 2004
From: greenrd at greenrd.org (Robin Green)
Date: Mon Dec 20 16:16:28 2004
Subject: [PATCH] Fixes FOLLOW set computation
Message-ID: <20040306220340.GV14069@localhost.localdomain>

This patch against 2.7.2 fixes (I think) an issue where ANTLR would
sometimes fail to complete a FOLLOW set computation, resulting in a
symptom of bogus "unexpected token" exceptions being thrown by the
generated parser. (My grammar is unusual - it's a literalistic
grammar for a YAML parser for Java - so I suspect I have triggered
an unusual edge case here.)

(The patch also includes some additional information I added to the
debug statements, but that's not important.)

Re-reading it, though, the pre-existing comment saying "this is not
crucial" should probably be changed to say the exact opposite! It
seems that this is the critical code path for breaking cycles, and the
person who wrote the comment thought that it wasn't (maybe it wasn't
then). Correct me if I'm wrong.

In any case, IMHO documenting the contract of the containing method
here would have avoided or mitigated this kind of issue. Either this
code was at fault or a caller was - but without documentation it
was hard to tell which was to blame.

Regards,
-- 
Robin


--- antlr/LLkAnalyzer.old	2004-03-06 21:33:38.000000000 +0000
+++ antlr/LLkAnalyzer.java	2004-03-06 16:12:52.000000000 +0000
@@ -400,20 +400,15 @@
             RuleEndElement re = rs.getBlock().endNode;
             // The other entry may not exist because it is still being
             // computed when this cycle cache entry was found here.
-            if (re.cache[k] == null) {
-                // return the cycle...that's all we can do at the moment.
-                return (Lookahead)end.cache[k].clone();
-            }
-            else {
+            if (re.cache[k] != null) {
                 // replace this cache entry with the entry from the referenced computation.
                 // Eventually, this percolates a complete (no cycle reference) cache entry
                 // to this node (or at least gets it closer and closer).  This is not
                 // crucial, but makes cache lookup faster as we might have to look up
                 // lots of cycle references before finding a complete reference.
-                end.cache[k] = re.cache[k];
-                // Return the cache entry associated with the cycle reference.
-                return (Lookahead)re.cache[k].clone();
+                end.cache[k] = FOLLOW (k, re);
             }
+            return (Lookahead)end.cache[k].clone();
         }
 
         end.lock[k] = true;	// prevent FOLLOW computation cycles
@@ -427,17 +422,20 @@
             RuleRefElement rr = rs.getReference(i);
             if (DEBUG_ANALYZER) System.out.println("next[" + rule + "] is " + rr.next.toString());
             Lookahead q = rr.next.look(k);
-            if (DEBUG_ANALYZER) System.out.println("FIRST of next[" + rule + "] ptr is " + q.toString());
+            if (DEBUG_ANALYZER)
+              System.out.println("FIRST of next[" + rule + "," + k + "] ptr is " + q.toString());
             /* If there is a cycle then if the cycle is to the rule for
 			 * this end block, you have a cycle to yourself.  Remove the
 			 * cycle indication--the lookahead is complete.
 			 */
             if (q.cycle != null && q.cycle.equals(rule)) {
+                if (DEBUG_ANALYZER) System.out.println (rule + ": Deleting cycle to self");
                 q.cycle = null;	// don't want cycle to yourself!
             }
             // add the lookahead into the current FOLLOW computation set
             p.combineWith(q);
-            if (DEBUG_ANALYZER) System.out.println("combined FOLLOW[" + rule + "] is " + p.toString());
+            if (DEBUG_ANALYZER)
+              System.out.println("combined FOLLOW[" + rule + "," + k + "] is " + p.toString());
         }
 
         end.lock[k] = false; // we're not doing FOLLOW anymore
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040306/9b2b65b2/attachment.bin
From greenrd at greenrd.org  Sat Mar  6 14:03:41 2004
From: greenrd at greenrd.org (Robin Green)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] [PATCH] Fixes FOLLOW set computation
Message-ID: <20040306220340.GV14069@localhost.localdomain>

This patch against 2.7.2 fixes (I think) an issue where ANTLR would
sometimes fail to complete a FOLLOW set computation, resulting in a
symptom of bogus "unexpected token" exceptions being thrown by the
generated parser. (My grammar is unusual - it's a literalistic
grammar for a YAML parser for Java - so I suspect I have triggered
an unusual edge case here.)

(The patch also includes some additional information I added to the
debug statements, but that's not important.)

Re-reading it, though, the pre-existing comment saying "this is not
crucial" should probably be changed to say the exact opposite! It
seems that this is the critical code path for breaking cycles, and the
person who wrote the comment thought that it wasn't (maybe it wasn't
then). Correct me if I'm wrong.

In any case, IMHO documenting the contract of the containing method
here would have avoided or mitigated this kind of issue. Either this
code was at fault or a caller was - but without documentation it
was hard to tell which was to blame.

Regards,
-- 
Robin


--- antlr/LLkAnalyzer.old	2004-03-06 21:33:38.000000000 +0000
+++ antlr/LLkAnalyzer.java	2004-03-06 16:12:52.000000000 +0000
@@ -400,20 +400,15 @@
             RuleEndElement re = rs.getBlock().endNode;
             // The other entry may not exist because it is still being
             // computed when this cycle cache entry was found here.
-            if (re.cache[k] == null) {
-                // return the cycle...that's all we can do at the moment.
-                return (Lookahead)end.cache[k].clone();
-            }
-            else {
+            if (re.cache[k] != null) {
                 // replace this cache entry with the entry from the referenced computation.
                 // Eventually, this percolates a complete (no cycle reference) cache entry
                 // to this node (or at least gets it closer and closer).  This is not
                 // crucial, but makes cache lookup faster as we might have to look up
                 // lots of cycle references before finding a complete reference.
-                end.cache[k] = re.cache[k];
-                // Return the cache entry associated with the cycle reference.
-                return (Lookahead)re.cache[k].clone();
+                end.cache[k] = FOLLOW (k, re);
             }
+            return (Lookahead)end.cache[k].clone();
         }
 
         end.lock[k] = true;	// prevent FOLLOW computation cycles
@@ -427,17 +422,20 @@
             RuleRefElement rr = rs.getReference(i);
             if (DEBUG_ANALYZER) System.out.println("next[" + rule + "] is " + rr.next.toString());
             Lookahead q = rr.next.look(k);
-            if (DEBUG_ANALYZER) System.out.println("FIRST of next[" + rule + "] ptr is " + q.toString());
+            if (DEBUG_ANALYZER)
+              System.out.println("FIRST of next[" + rule + "," + k + "] ptr is " + q.toString());
             /* If there is a cycle then if the cycle is to the rule for
 			 * this end block, you have a cycle to yourself.  Remove the
 			 * cycle indication--the lookahead is complete.
 			 */
             if (q.cycle != null && q.cycle.equals(rule)) {
+                if (DEBUG_ANALYZER) System.out.println (rule + ": Deleting cycle to self");
                 q.cycle = null;	// don't want cycle to yourself!
             }
             // add the lookahead into the current FOLLOW computation set
             p.combineWith(q);
-            if (DEBUG_ANALYZER) System.out.println("combined FOLLOW[" + rule + "] is " + p.toString());
+            if (DEBUG_ANALYZER)
+              System.out.println("combined FOLLOW[" + rule + "," + k + "] is " + p.toString());
         }
 
         end.lock[k] = false; // we're not doing FOLLOW anymore
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040306/9b2b65b2/attachment-0001.bin
From parrt at cs.usfca.edu  Sat Mar  6 15:35:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] [PATCH] Fixes FOLLOW set computation
In-Reply-To: <20040306220340.GV14069@localhost.localdomain>
References: <20040306220340.GV14069@localhost.localdomain>
Message-ID: <E346BD57-6FC6-11D8-8C5A-000A95891192@cs.usfca.edu>


On Mar 6, 2004, at 2:03 PM, Robin Green wrote:

> This patch against 2.7.2 fixes (I think) an issue where ANTLR would
> sometimes fail to complete a FOLLOW set computation, resulting in a
> symptom of bogus "unexpected token" exceptions being thrown by the
> generated parser. (My grammar is unusual - it's a literalistic
> grammar for a YAML parser for Java - so I suspect I have triggered
> an unusual edge case here.)
>
> (The patch also includes some additional information I added to the
> debug statements, but that's not important.)
>
> Re-reading it, though, the pre-existing comment saying "this is not
> crucial" should probably be changed to say the exact opposite! It
> seems that this is the critical code path for breaking cycles, and the
> person who wrote the comment thought that it wasn't (maybe it wasn't
> then). Correct me if I'm wrong.
>
> In any case, IMHO documenting the contract of the containing method
> here would have avoided or mitigated this kind of issue. Either this
> code was at fault or a caller was - but without documentation it
> was hard to tell which was to blame.

Hi Robin,

Yeah, the code sucks.  However, I believe my comments and intentions 
align in the code included below.  The situation you are manipulating 
is this: you need FOLLOW(r) and there is a cached value there.  If 
there is a complete value (i.e., no cycles indicating partial 
computations), then can just return the value.  Else, we pull out the 
name of the rule, r2, whose FOLLOW was attempted but failed due to 
cycle, leaving FOLLOW(r) partially computed.  We go to the FOLLOW(r2) 
computation cache and see if it has a value.  If no value then it must 
still be being computed (I believe that means that FOLLOW(r2) depends 
on FOLLOW(r) which depends on FOLLOW(r2).  It is my *intention* that a 
cycle cannot occur unless a computation is in progress.  So finding an 
empty cache value means you still can't complete this computation.  
Now, it could be that I'm not properly updating the cache or removing 
the cycles from the cache.  It is more likely that I have a bug 
elsewhere and your patch merely forces FOLLOW computation to begin 
anew.  It may work in your case, but I'm just not sure about the 
general solution without spending hours to regrok all this spaghetti.  
It seems to me though that your

                 end.cache[k] = FOLLOW (k, re);

may not be completely correct.  It would replace FOLLOW(r) with purely 
FOLLOW(r2), when in fact I designed the cache to store partial 
computations and cycles so you may be blowing away any partial results. 
  Since FOLLOW(r)==FOLLOW(r2) semantically you might be ok, but in the 
code I'm not sure all the pieces of FOLLOW(r) would be cobbled together 
properly.  Hmm...I might believe FOLLOW(k, end), however.  Can you send 
me your test case you used to narrow this down or did you just look at 
the code?  I found the same problem in my python front end recently but 
couldn't get a small test case for some reason.

         // Check to see if there is cached value
         if (end.cache[k] != null) {
             if (DEBUG_ANALYZER) {
                 System.out.println("cache entry FOLLOW(" + k + ") for " 
+ rule + ": " + end.cache[k].toString(",", charFormatter, grammar));
             }
             // if the cache is a complete computation then simply 
return entry
             if (end.cache[k].cycle == null) {
                 return (Lookahead)end.cache[k].clone();
             }
             // A cache entry exists, but it is a reference to a cyclic 
computation.
             RuleSymbol rs = 
(RuleSymbol)grammar.getSymbol(end.cache[k].cycle);
             RuleEndElement re = rs.getBlock().endNode;
             // The other entry may not exist because it is still being
             // computed when this cycle cache entry was found here.
             if (re.cache[k] == null) {
                 // return the cycle...that's all we can do at the 
moment.
                 return (Lookahead)end.cache[k].clone();
             }
             else {
                 // replace this cache entry with the entry from the 
referenced computation.
                 // Eventually, this percolates a complete (no cycle 
reference) cache entry
                 // to this node (or at least gets it closer and 
closer).  This is not
                 // crucial, but makes cache lookup faster as we might 
have to look up
                 // lots of cycle references before finding a complete 
reference.
                 end.cache[k] = re.cache[k];
                 // Return the cache entry associated with the cycle 
reference.
                 return (Lookahead)re.cache[k].clone();
             }
         }

Thanks a million for tracking this...if we can find the "right" fix 
then I'll put in 2.7.3.

Best regards,
Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sat Mar  6 21:02:22 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <16458.44254.946476.203864@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
[...]

> Feel free to send in your pet peeves to me or to this list.  I will try
> to add to this file.

Remember that you asked for it!

> I can hear John Mitchell now: "predicate hoisting!" ;)

Well, that would be the *lack* of predicate hoisting.  Hahahaha!

Take care,
	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jc.lelann at wanadoo.fr  Sat Mar  6 06:58:04 2004
From: jc.lelann at wanadoo.fr (jc_lelann)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] expecting IDENT, found 'x'
Message-ID: <c2cots+old2@eGroups.com>

Hi !

Could someone explain me why my parser returns the following message ?

java Test < test.txt
line 1:10: expecting IDENT, found 'x'
exception: line 1:12: unexpected char: ':'

I am new to antlr.
Thanks

JC



My grammar :

// content of my test file :

// constant x : integer := 4;
// constant x,y,z : integer := 5;
// constant x,y,z : integer := 5+5*2;


class TestParser extends Parser;
options {
    buildAST = true;
    defaultErrorHandler = true;     // Generate parser error handlers
}

mytext : 
        (constant_declaration)* EOF! ;

constant_declaration : 
        CONSTANT! identifier_list ":"! subtype_indication ":="!
expression ";"!
;
identifier_list : 
        identifier (","! identifier)*
;
identifier : 
        IDENT
;
subtype_indication : 
        IDENT
;
expression:     
        additiveExpression
;
// addition/subtraction
additiveExpression:     
        multiplicativeExpression((PLUS^ | MINUS^)
multiplicativeExpression)*
;
// multiplication/division   
multiplicativeExpression:     
        powerExpression ( (STAR^ | DIV^ ) powerExpression )*
;
powerExpression: 
        unaryExpression ( POWER^ unaryExpression)*
;
unaryExpression:
        MINUS^ unaryExpression
      |     primaryExpression
;
primaryExpression:
        NUMBER
      |     LPAREN! additiveExpression RPAREN!
      ;

class TestLexer extends Lexer;
options {
	exportVocab=Test;      // call the vocabulary "Java"
}

tokens {
    CONSTANT ="constant";
}

WS    :(    ' ' | '\t' | '\n' | '\r' )
        { _ttype = Token.SKIP; }
;
//-------------
// OPERATORS
//-------------
LPAREN      :     '('   ;     
RPAREN      :     ')'   ;
SEMI        :     ';'   ;     
DOT         :     '.'   ;
DIV         :     '/'   ;     
PLUS        :     '+'   ;
MINUS       :     '-'   ;     
STAR        :     '*'   ;
POWER       :     '^'   ;    

// Rule for IDENTIFIER: testLiterals is set to true.
IDENT
	options {testLiterals=true;}
            : ( 'a'..'z' )+
	;

//for both integer and real number

NUMBER : (DIGIT)+ ( '.' (DIGIT)+ )? ;

//for numbers
protected
DIGIT :     '0'..'9' ;







 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sat Mar  6 09:40:16 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# Build Error
In-Reply-To: <1E7B5C4D-6F38-11D8-999D-000393BB647E@cs.usfca.edu>
Message-ID: <EKEJKOHPOIIALFJMKEIGGEPOFHAA.mbresnah@visi.com>

> Have you tried the antlr-2.7.3rc2?  Should fix a bunch.
> Terence

Upon your recommendation I downloaded antlr-2.7.3rc2, but unfortunately it
has the same bug.

Mike Bresnahan




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Sun Mar  7 02:56:17 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] Re: C# Build Error
In-Reply-To: <EKEJKOHPOIIALFJMKEIGGEPOFHAA.mbresnah@visi.com>
Message-ID: <c2ev4h+4j9t@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Mike Bresnahan"
<mbresnah@v...> wrote:
> > Have you tried the antlr-2.7.3rc2?  Should fix a bunch.
> > Terence
> 
> Upon your recommendation I downloaded antlr-2.7.3rc2, but
unfortunately it
> has the same bug.

Fixed for the next release. Thanks for the report.

Cheers,

Micheal
ANTLR/C#



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sun Mar  7 10:02:32 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] expecting IDENT, found 'x'
In-Reply-To: <c2cots+old2@eGroups.com>
Message-ID: <EKEJKOHPOIIALFJMKEIGKEACFIAA.mbresnah@visi.com>

> Could someone explain me why my parser returns the following message ?

It's because the lexer and parser are not using the same token vocabulary.
Note that the the two files ending in .txt list a different set of tokens.
I was able to fix your problem by putting "exportVocab=Test;" in the parser
options and changing the lexer options to read "importVocab=Test;".

A question for those more experienced, in what senario would you want the
lexer and parser using different vocabularies?  If there aren't any such
senarios, would it be better if ANTLR took care of making sure both are
using the same vocabulary instead of relying on the user to do this?  I
stumbled over the same vocabulary issue myself while learning the basics of
ANTLR.

Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sat Mar  6 22:37:02 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
Message-ID: <EKEJKOHPOIIALFJMKEIGGEABFIAA.mike@fruitioninc.com>

I'm beginning a project to create a .NET mini-language for performing data
transformations.  I'm currently debating which of following would be best:

A) compile the language into a data structure that is used by a runtime
engine to perform the transformations
B) compile the language into C# code that performs the transformations
(after a second compilation)
C) compile the language directly to MSIL (.NET virtual machine assembly-like
language) that performs the transformations

Here's a breakdown of how I see these approaches comparing based on 3
criteria: ease of implementation, execution speed, and compilation speed

Option    Implementation  execution  compilation
-------------------------------------------------
A         easy            slow       fast
B         medium          fast       slow
C         hard            fast       medium

I'm currently leaning towards C, because a) it appears to have the best
trade off between execution and compilation speed b) it is the approach
taken by XSLTC (albeit in Java) and NMock, and c) it sounds like fun.
However, I am aware that ANTLR choose option B for its C#/.NET code
generator.  Would the designers of that piece care to share some insight
with me?

Mike Bresnahan





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Sun Mar  7 12:40:57 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
References: <EKEJKOHPOIIALFJMKEIGGEABFIAA.mike@fruitioninc.com>
Message-ID: <002601c40484$815df870$0100a8c0@xpbaby>

You should throw in an option d) there, parse into a CodeDom structure. That
way you can generate il (pre-generate or at runtime), or source code for
other languages that implement it (C#, vb, etc). You can also use that
sturcture from any .net language. Depends on your needs I guess, but
something to consider...

Cheers,
Robin

----- Original Message -----
From: "Mike Bresnahan" <mbresnah@visi.com>
To: <antlr-interest@yahoogroups.com>
Sent: Sunday, March 07, 2004 12:37 AM
Subject: [antlr-interest] C# vs MSIL Output


> I'm beginning a project to create a .NET mini-language for performing data
> transformations.  I'm currently debating which of following would be best:
>
> A) compile the language into a data structure that is used by a runtime
> engine to perform the transformations
> B) compile the language into C# code that performs the transformations
> (after a second compilation)
> C) compile the language directly to MSIL (.NET virtual machine
assembly-like
> language) that performs the transformations
>
> Here's a breakdown of how I see these approaches comparing based on 3
> criteria: ease of implementation, execution speed, and compilation speed
>
> Option    Implementation  execution  compilation
> -------------------------------------------------
> A         easy            slow       fast
> B         medium          fast       slow
> C         hard            fast       medium
>
> I'm currently leaning towards C, because a) it appears to have the best
> trade off between execution and compilation speed b) it is the approach
> taken by XSLTC (albeit in Java) and NMock, and c) it sounds like fun.
> However, I am aware that ANTLR choose option B for its C#/.NET code
> generator.  Would the designers of that piece care to share some insight
> with me?
>
> Mike Bresnahan
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sun Mar  7 13:08:04 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
In-Reply-To: <002601c40484$815df870$0100a8c0@xpbaby>
Message-ID: <EKEJKOHPOIIALFJMKEIGAEAFFIAA.mbresnah@visi.com>

> You should throw in an option d) there, parse into a CodeDom 
> structure. That
> way you can generate il (pre-generate or at runtime), or source code for
> other languages that implement it (C#, vb, etc). You can also use that
> sturcture from any .net language. Depends on your needs I guess, but
> something to consider...

Most cool!  I was not aware of CodeDom.  Thank you very much!

Mike Bresnahan


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sun Mar  7 15:13:45 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
In-Reply-To: <EKEJKOHPOIIALFJMKEIGAEAFFIAA.mbresnah@visi.com>
Message-ID: <EKEJKOHPOIIALFJMKEIGAEAGFIAA.mbresnah@visi.com>

Upon further investigation, CodeDom is not as cool as I first thought.
Unless I don't understand, CodeDom structures cannot be compiled directly to
MSIL.  Instead they are transformed to C# or VB and then sent to the command
line compiler for transformation to MSIL.  This is equivalent to option B.
However, CodeDom is much more attractive than generating C# (or VB) by hand!

Regardless of this limitation, I think I am going to go down the CodeDom
path.  If compilation performance becomes a problem down the road, I will
then research converting CodeDom directly to MSIL.

Mike Bresnahan

> -----Original Message-----
> From: Mike Bresnahan [mailto:mbresnah@visi.com]
> Sent: Sunday, March 07, 2004 3:08 PM
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] C# vs MSIL Output
>
>
> > You should throw in an option d) there, parse into a CodeDom
> > structure. That
> > way you can generate il (pre-generate or at runtime), or source code for
> > other languages that implement it (C#, vb, etc). You can also use that
> > sturcture from any .net language. Depends on your needs I guess, but
> > something to consider...
>
> Most cool!  I was not aware of CodeDom.  Thank you very much!
>
> Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Sun Mar  7 16:04:15 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
References: <EKEJKOHPOIIALFJMKEIGAEAGFIAA.mbresnah@visi.com>
Message-ID: <003201c404a1$276d8070$0100a8c0@xpbaby>

> Upon further investigation, CodeDom is not as cool as I first thought.
> Unless I don't understand, CodeDom structures cannot be compiled directly
to
> MSIL.  Instead they are transformed to C# or VB and then sent to the
command
> line compiler for transformation to MSIL.  This is equivalent to option B.
> However, CodeDom is much more attractive than generating C# (or VB) by
hand!

Actually you can generate IL once you have a CodeDom tree - there are
classes in the Microsoft.CSharp namespace:

CSharpCodeProvider.CreateCompiler
CSharpCodeProvider.CreateGenerator
CSharpCodeProvider.CreateParser

Note: CreateParser isn't implemented, it always returns null. The antlr C#
project I've been working on will essentially be the missing parser. Other
useful areas to look into if you haven't already are Reflection.Emit (for
emitting IL), and the CodeDom.Compilers namespace. That may be a given, just
the framework is so huge it is easy to overlook stuff (mostly you find it
after two weeks of work implementing it!).

The downside of the CodeDom is there are a few areas missing (eg unary
operators), so you have to get into some ugly workarounds with snippets or
something. If your language needs aren't too demanding though, it will
hopefully fall all into the bounds of the CodeDom. I wrote a bit about what
is missing here/possible workarounds (err, ignore the sarcasm):

http://blog.debreuil.com/posts/190.aspx
http://blog.debreuil.com/posts/195.aspx

To be clear, I haven't done a lot of IL stuff yet - I mostly generate for
graphic/pcode formats (like swf/svg). A lot of my opinions come from
extrapolating a few test files - they are probably in for a bit of a reality
check in the next few weeks ; ).

Cheers,
Robin

>
> Regardless of this limitation, I think I am going to go down the CodeDom
> path.  If compilation performance becomes a problem down the road, I will
> then research converting CodeDom directly to MSIL.
>
> Mike Bresnahan
>
> > -----Original Message-----
> > From: Mike Bresnahan [mailto:mbresnah@visi.com]
> > Sent: Sunday, March 07, 2004 3:08 PM
> > To: antlr-interest@yahoogroups.com
> > Subject: RE: [antlr-interest] C# vs MSIL Output
> >
> >
> > > You should throw in an option d) there, parse into a CodeDom
> > > structure. That
> > > way you can generate il (pre-generate or at runtime), or source code
for
> > > other languages that implement it (C#, vb, etc). You can also use that
> > > sturcture from any .net language. Depends on your needs I guess, but
> > > something to consider...
> >
> > Most cool!  I was not aware of CodeDom.  Thank you very much!
> >
> > Mike Bresnahan
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Sun Mar  7 16:28:08 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:28 2004
Subject: [antlr-interest] C# vs MSIL Output
In-Reply-To: <003201c404a1$276d8070$0100a8c0@xpbaby>
Message-ID: <EKEJKOHPOIIALFJMKEIGMEAKFIAA.mbresnah@visi.com>

> Actually you can generate IL once you have a CodeDom tree - there are
> classes in the Microsoft.CSharp namespace:
>
> CSharpCodeProvider.CreateCompiler
> CSharpCodeProvider.CreateGenerator
> CSharpCodeProvider.CreateParser

As far as I can tell, the ICompiler object created by
CSharpCodeProvider.CreateCompiler converts the CodeDom to C# and invokes
csc.exe.  I'm guessing CodeDom is not transformed directly to MSIL because
csc.exe uses a different data structure for storing the parsed source code.
Until this internal data structure and CodeDom are the same or someone
writes a new compiler, we will be stuck transforming CodeDom to source code
as an intermediate step.

What's interesting is that there is an option to create the compiled
assembly in-memory instead of in a temporary file.  I'm guessing this means
that csc.exe outputs the assembly to stdout or through some other IPC
mechanism, however "csc.exe -help" does not list such and option.

Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Sun Mar  7 11:56:15 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <000001c404ef$6ac13bc0$0400a8c0@NOTEBOOK>

The main thing that gets me about Antlr is the tree construction
manipulation.  It is too easy to get loops in your trees.
Here is my suggestions  for a revised syntax for tree construction. As you
can see they as been around for a while now.
all the best
matthew


Draft specification for Antlr Tree Generation
By Matthew Ford
Revision 1  25th Sept 2001

Section 1:Control of automatic tree generation in the Parser
By default the Parser will automatically generate AST trees.  This
generation can be
disabled globally by setting buildAST=false.

When buildAST=false ALL code related to AST tree building is removed and the
only ways to build your own tree are :-
i) to update a global tree or
ii) use Antlr's return syntax to pass your own tree back.
(Note: in this mode you should not need to link or load any AST code unless
you
reference it yourself from action, etc)

With buildAST = true (that is the default) you can selectively disable tree
generation
by using the ! syntax.  This can be used on either a rule or token basis.
Example of a rule based use of ! to disable tree generation

addition!
    :   INT PLUS i:INT
;

In this case no tree generation code is generated for this rule.  If you
want to create a
tree by hand for this rule you need to return it as shown below
addition returns [AST return_tree]!
   :   INT PLUS i:INT  { .. code to generate return_tree }
;


So I suggest this be relaxed a little to say that
No tree generation code is output except that labels in the rule are
initialized with the
appropiate minimal tree.
For example
> drop_table_statement!
> : "drop" "table" t3:table_name t4:drop_behavior
;
results in #t3 containing tree resulting from the rule table_name
and
statement!
: INT PLUS i:INT
;
would set up a tree for label i consisting of a single root node containing
the INT
token
This allows the user to control what tree code is added to their code if the
tree
generation is turned off for a rule. If there are not labels then no code.


To suppress a single token use ! after the token.  It will not be added to
the tree, eg.
statement
:  lhsVar EQUALS rhs SEMI!  // SEMI is not added to the tree.
;

Note as far as the rule statement is concerned
statement
:   lhsVar EQUALS addition!  // suppress addition of tree returned from
addition
;
addition:
    :   INT PLUS i:INT
;

Is the same as
statement
:   lhsVar EQUALS addition
;
addition!   // suppress generation tree
    :   INT PLUS i:INT
;

But in the second case no rule in the parser can get a tree from the
addition rule.

and
statement
 :  lhsVar EQUALS addition!
;
addition!
    :   INT PLUS i:INT
;

is redundant but legal.

You would probably actually use something like
statement
{AST addTree;}
:   lhsVar EQUALS^ addTree=addition!
   { ## =   build tree here using ## and addTree }
;

addition returns [AST returnTree]
    :   INT PLUS^ i:INT
{ returnTree = ##}  // pick up the autogenerated tree
;

Note: It makes no sense in this system to allow ! to be applied to
alternative of rules
that is :-
statement
{AST addTree;}
:   lhsVar EQUALS^ addTree=addition!
    { ## =   build tree here using ## and addTree }
|!  printstatement
;

is now illegal

In all other cases (that is when buildAST is true and ! is not used) the
return tree is
always generated and assigned to the global AST_return to be picked up by
the parent
rule.  This AST_return can be modified/overwritten using the syntax
discussed below.

Section 2: Syntax for manual modification of trees in the Parser
Note this is for modification of trees that have been automatically created.
If you set
buildAST=false or use ! on a rule, you are on your own as no tree code is
generated
for you.

Tree nodes are created using
#[TOKEN_TYPE] or #[TOKEN_TYPE,"text"]

Trees are created using
#(root, c1, ..., cn)
where
 root must be a node
 c1,to cn are the 1st to nth children which may be either nodes or
other trees.

Elements of the current rule can be addressed using the following
## is a short cut for AST_return, the current result tree.
#id is a short cut for the current tree rooted at the location originally
occupied by the
node labelled by id
@id is a short cut for the root node of the tree rooted at the location
originally
occupied by the node labelled by id
When these occur on the rhs of = they are replaced by clones of their
respective nodes
or trees. This prevents deadly loops.  As an optimisation ## =
#(#[token],##) could be
done without cloning ##.
When these occur on the lhs of = they refer to that location in the tree.
This allows
subtree replacements.

eg
statement
:   lhsVar e:EQUALS^ a:addition
  {
      #a = #(@a,#[INT,"5"],#[INT,"6"]);
     // the children of the addition subtree in the result (##) have been
replace with 5,6
    // a: now refers to the new subtree, the original subtree is has been
replaced by it.
    @a = #[MINUS]
    // the root of the new subtree a is now MINUS
   ## = #(#[STATEMENT],##);
   // add a node to the top of the result tree.  a: and e: still point to
the same subtrees.
  ## = #[DIV];
  // where do a: and e: point now?  They still point to there subtrees which
are not
released until the rule returns.
 // so the following is valid
  ## = #(@#,#a,#[INT,"3"],#a);
   // @# is the root node of ##  which is now just #[DIV]
   // note it is valid to use #a twice as it is cloned.
}
;


----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: <antlr-interest@yahoogroups.com>
Sent: Sunday, March 07, 2004 7:05 AM
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x


> Folks,
>
> In preparation for the ANTLR 3.0 whitepaper, I need to start writing
> down everything that annoys me about ANTLR 2.0.  I have started another
> "blog" document:
>
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
>
> Feel free to send in your pet peeves to me or to this list.  I will try
> to add to this file.
>
> I can hear John Mitchell now: "predicate hoisting!" ;)
>
> Terence
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
Draft specification for Antlr Tree Generation
By Matthew Ford 
Revision 1  25th Sept 2001

Section 1:Control of automatic tree generation in the Parser
By default the Parser will automatically generate AST trees.  This generation can be 
disabled globally by setting buildAST=false.  

When buildAST=false ALL code related to AST tree building is removed and the 
only ways to build your own tree are :-
i) to update a global tree or 
ii) use Antlr's return syntax to pass your own tree back.
(Note: in this mode you should not need to link or load any AST code unless you 
reference it yourself from action, etc)

With buildAST = true (that is the default) you can selectively disable tree generation 
by using the ! syntax.  This can be used on either a rule or token basis.
Example of a rule based use of ! to disable tree generation

addition!
    :   INT PLUS i:INT
;

In this case no tree generation code is generated for this rule.  If you want to create a 
tree by hand for this rule you need to return it as shown below
addition returns [AST return_tree]!
   :   INT PLUS i:INT  { .. code to generate return_tree }
;


So I suggest this be relaxed a little to say that 
No tree generation code is output except that labels in the rule are initialized with the 
appropiate minimal tree. 
For example 
> drop_table_statement!
> : "drop" "table" t3:table_name t4:drop_behavior 
;
results in #t3 containing tree resulting from the rule table_name 
and 
statement! 
: INT PLUS i:INT 
; 
would set up a tree for label i consisting of a single root node containing the INT 
token 
This allows the user to control what tree code is added to their code if the tree 
generation is turned off for a rule. If there are not labels then no code. 


To suppress a single token use ! after the token.  It will not be added to the tree, eg.
statement
:  lhsVar EQUALS rhs SEMI!  // SEMI is not added to the tree.
;

Note as far as the rule statement is concerned 
statement
:   lhsVar EQUALS addition!  // suppress addition of tree returned from addition
;
addition:
    :   INT PLUS i:INT
;

Is the same as 
statement
:   lhsVar EQUALS addition
;
addition!   // suppress generation tree
    :   INT PLUS i:INT
;

But in the second case no rule in the parser can get a tree from the addition rule.

and  
statement
 :  lhsVar EQUALS addition!
;
addition!
    :   INT PLUS i:INT
;

is redundant but legal.

You would probably actually use something like
statement
{AST addTree;}
:   lhsVar EQUALS^ addTree=addition!
   { ## =   build tree here using ## and addTree }
;

addition returns [AST returnTree]
    :   INT PLUS^ i:INT
{ returnTree = ##}  // pick up the autogenerated tree
;

Note: It makes no sense in this system to allow ! to be applied to alternative of rules 
that is :-
statement
{AST addTree;}
:   lhsVar EQUALS^ addTree=addition!
	   { ## =   build tree here using ## and addTree }
|!  printstatement
;

is now illegal

In all other cases (that is when buildAST is true and ! is not used) the return tree is 
always generated and assigned to the global AST_return to be picked up by the parent 
rule.  This AST_return can be modified/overwritten using the syntax discussed below.

Section 2: Syntax for manual modification of trees in the Parser
Note this is for modification of trees that have been automatically created.  If you set 
buildAST=false or use ! on a rule, you are on your own as no tree code is generated 
for you.

Tree nodes are created using
#[TOKEN_TYPE] or #[TOKEN_TYPE,"text"] 

Trees are created using 
#(root, c1, ..., cn)
where
 root must be a node
 c1,to cn are the 1st to nth children which may be either nodes or 
other trees.

Elements of the current rule can be addressed using the following
## is a short cut for AST_return, the current result tree.
#id is a short cut for the current tree rooted at the location originally occupied by the 
node labelled by id
@id is a short cut for the root node of the tree rooted at the location originally 
occupied by the node labelled by id
When these occur on the rhs of = they are replaced by clones of their respective nodes 
or trees. This prevents deadly loops.  As an optimisation ## = #(#[token],##) could be 
done without cloning ##.
When these occur on the lhs of = they refer to that location in the tree. This allows 
subtree replacements.

eg
statement
:   lhsVar e:EQUALS^ a:addition
  { 
      #a = #(@a,#[INT,"5"],#[INT,"6"]);   
     // the children of the addition subtree in the result (##) have been replace with 5,6
    // a: now refers to the new subtree, the original subtree is has been replaced by it.
    @a = #[MINUS]
    // the root of the new subtree a is now MINUS
   ## = #(#[STATEMENT],##);
   // add a node to the top of the result tree.  a: and e: still point to the same subtrees.
  ## = #[DIV];
  // where do a: and e: point now?  They still point to there subtrees which are not 
released until the rule returns.
 // so the following is valid
  ## = #(@#,#a,#[INT,"3"],#a);
   // @# is the root node of ##  which is now just #[DIV]
   // note it is valid to use #a twice as it is cloned.
}
;

From notify at yahoogroups.com  Mon Mar  8 01:55:41 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:29 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078739741.94.82561.w11@yahoogroups.com>


Hello,

This is an automated email message to let you know that
pjcarreira <pjcarreira@bes.pt> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon Mar  8 08:35:21 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:29 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1078763721.1722.45637.m11@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jonahbenton <jonah@jonah.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From mzukowski at yci.com  Mon Mar  8 09:12:24 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] expecting IDENT, found 'x'
Message-ID: <72C9789739C4214096AE945753B11EA3FABDE2@mypxmail04.bco-home.com>

You are using ":" (in the parser) as a literal which it really shouldn't be,
unless it can be part of an identifier.  

Instead you should have this in your lexer:
COLON        :     ':'   ;     

And in the parser you should use COLON, not ":".

Read the docs on literals to get an idea of what was happening and when to
use "something" in the parser.

Monty

-----Original Message-----
From: jc_lelann [mailto:jc.lelann@wanadoo.fr] 
Sent: Saturday, March 06, 2004 6:58 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] expecting IDENT, found 'x'

Hi !

Could someone explain me why my parser returns the following message ?

java Test < test.txt
line 1:10: expecting IDENT, found 'x'
exception: line 1:12: unexpected char: ':'

I am new to antlr.
Thanks

JC



My grammar :

// content of my test file :

// constant x : integer := 4;
// constant x,y,z : integer := 5;
// constant x,y,z : integer := 5+5*2;


class TestParser extends Parser;
options {
    buildAST = true;
    defaultErrorHandler = true;     // Generate parser error handlers
}

mytext : 
        (constant_declaration)* EOF! ;

constant_declaration : 
        CONSTANT! identifier_list ":"! subtype_indication ":="!
expression ";"!
;
identifier_list : 
        identifier (","! identifier)*
;
identifier : 
        IDENT
;
subtype_indication : 
        IDENT
;
expression:     
        additiveExpression
;
// addition/subtraction
additiveExpression:     
        multiplicativeExpression((PLUS^ | MINUS^)
multiplicativeExpression)*
;
// multiplication/division   
multiplicativeExpression:     
        powerExpression ( (STAR^ | DIV^ ) powerExpression )*
;
powerExpression: 
        unaryExpression ( POWER^ unaryExpression)*
;
unaryExpression:
        MINUS^ unaryExpression
      |     primaryExpression
;
primaryExpression:
        NUMBER
      |     LPAREN! additiveExpression RPAREN!
      ;

class TestLexer extends Lexer;
options {
	exportVocab=Test;      // call the vocabulary "Java"
}

tokens {
    CONSTANT ="constant";
}

WS    :(    ' ' | '\t' | '\n' | '\r' )
        { _ttype = Token.SKIP; }
;
//-------------
// OPERATORS
//-------------
LPAREN      :     '('   ;     
RPAREN      :     ')'   ;
SEMI        :     ';'   ;     
DOT         :     '.'   ;
DIV         :     '/'   ;     
PLUS        :     '+'   ;
MINUS       :     '-'   ;     
STAR        :     '*'   ;
POWER       :     '^'   ;    

// Rule for IDENTIFIER: testLiterals is set to true.
IDENT
	options {testLiterals=true;}
            : ( 'a'..'z' )+
	;

//for both integer and real number

NUMBER : (DIGIT)+ ( '.' (DIGIT)+ )? ;

//for numbers
protected
DIGIT :     '0'..'9' ;







 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Mon Mar  8 09:21:13 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] strange lexical nondeterminism
Message-ID: <72C9789739C4214096AE945753B11EA3FABDE3@mypxmail04.bco-home.com>

You're hitting a limitation of the lookahead compression that ANTLR uses.
To do what you want you will have to use a syntactic predicate.  

You may have luck doing this:

REL_TIME: '0'..'2' '0'..'9' ':' '0'..'5' '0'..'9';
REL_TIME2: '0'..'9' '0'..'9' '0'..'9' '.' '0'..'2' '0'..'9' ':'
'0'..'5' '0'..'9' {$setType(REL_TIME);};
INT: ('0'..'9')+;

Monty

-----Original Message-----
From: Simon Kellett [mailto:skellett@anitesystems.de] 
Sent: Monday, March 08, 2004 5:56 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] strange lexical nondeterminism

Two of the rules in my Lexer are:

// optional 3 digit day, followed by hh:mm
REL_TIME: ('0'..'9' '0'..'9' '0'..'9' '.')? '0'..'2' '0'..'9' ':'
'0'..'5' '0'..'9';
INT: ('0'..'9')+;

But I get the following warning (k=10):

lmp_grammer.g: warning:lexical nondeterminism between rules REL_TIME
and INT upon
lmp_grammer.g:     k==1:'0'..'9'
lmp_grammer.g:     k==2:'0'..'9'
lmp_grammer.g:     k==3:'0'..'9'
lmp_grammer.g:     k==4:'0'..'5'
lmp_grammer.g:     k==5:'0'..'9'
lmp_grammer.g:     k==6:<end-of-token>,'0'..'9'
lmp_grammer.g:     k==7:<end-of-token>
lmp_grammer.g:     k==8:<end-of-token>,'0'..'5'
lmp_grammer.g:     k==9:<end-of-token>,'0'..'9'
lmp_grammer.g:     k==10:<end-of-token>

If I remove the optional "?" then the warning disappears.

Surely the Lexer (with k>3) should always know whether it is dealing
with a REL_TIME or an INT ? (if the 4th char is a '.' or the 3rd is a
':' then the token must be a REL_TIME).

I could understand the nondeterminism if k=3 !!

But the generated code is OK: the REL_TIME is checked for first, and
only later the INT is check for.

TIA, Simon



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lubos.vnuk at rts.at  Mon Mar  8 09:38:46 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: strange lexical nondeterminism
In-Reply-To: <c2hu23+glh8@eGroups.com>
Message-ID: <c2ib36+e14p@eGroups.com>

Simon,

Your problem is caused by ANTLR's linear approximation of the look-
ahead. This means that ANTLR merges prediction sets of all the 
alternative branches.

For REL_TIME it will be:
REL_TIME_LAset(1)={'0'..'9'} U {'0'..'2'}={'0'..'9'}
REL_TIME_LAset(2)={'0'..'9'} U {'0'..'9'}={'0'..'9'}
REL_TIME_LAset(3)={'0'..'9'} U {':'}     ={'0'..'9',':'}
REL_TIME_LAset(4)={'.'}      U {'0'..'5'}={'.','0'..'5'}
REL_TIME_LAset(5)={'0'..'2'} U {'0'..'9'}={'0'..'9'}
REL_TIME_LAset(6)={'0'..'9'} U {EOF}     ={'0'..'9',EOF}
REL_TIME_LAset(7)={':'}      U {EOF}     ={':',EOF}
REL_TIME_LAset(8)={'0'..'5'} U {EOF}     ={'0'..'5',EOF}
REL_TIME_LAset(9)={'0'..'9'} U {EOF}     ={'0'..'9',EOF}
REL_TIME_LAset(10)={EOF}     U {EOF}     ={EOF}
...

For the INT rule it is (no linear approximation here):
INT_LAset(1)={'0'..'9'}
INT_LAset(2)={EOF,'0'..'9'}
INT_LAset(3)={EOF,'0'..'9'}
INT_LAset(4)={EOF,'0'..'9'}
INT_LAset(5)={EOF,'0'..'9'}
INT_LAset(6)={EOF,'0'..'9'}
LAsINT_et(7)={EOF,'0'..'9'}
INT_LAset(8)={EOF,'0'..'9'}
INT_LAset(9)={EOF,'0'..'9'}
INT_LAset(10)={EOF,'0'..'9'}
...

Now ANTLR will try to intersect these sets up to the maximum look-
ahead level in order to find two disjoint sets that it can use to 
unambiguously decide on the rule.

REL_TIME_LAset(1) ^ INT_LAset(1)= {'0'..'9'}
REL_TIME_LAset(2) ^ INT_LAset(2)= {'0'..'9'}
REL_TIME_LAset(3) ^ INT_LAset(3)= {'0'..'9'}
REL_TIME_LAset(4) ^ INT_LAset(4)= {'0'..'5'}
REL_TIME_LAset(5) ^ INT_LAset(5)= {'0'..'9'}
REL_TIME_LAset(6) ^ INT_LAset(6)= {EOF,'0'..'9'}
REL_TIME_LAset(7) ^ INT_LAset(7)= {EOF}
REL_TIME_LAset(8) ^ INT_LAset(8)= {EOF'0'..'5'}
REL_TIME_LAset(9) ^ INT_LAset(9)= {EOF,'0'..'9'}
REL_TIME_LAset(10)^ INT_LAset(10)={EOF}
...

HTH,
Lubos.

--- In antlr-interest@yahoogroups.com, "Simon Kellett" 
<skellett@a...> wrote:
> Two of the rules in my Lexer are:
> 
> // optional 3 digit day, followed by hh:mm
> REL_TIME: ('0'..'9' '0'..'9' '0'..'9' '.')? '0'..'2' '0'..'9' ':'
> '0'..'5' '0'..'9';
> INT: ('0'..'9')+;
> 
> But I get the following warning (k=10):
> 
> lmp_grammer.g: warning:lexical nondeterminism between rules REL_TIME
> and INT upon
> lmp_grammer.g:     k==1:'0'..'9'
> lmp_grammer.g:     k==2:'0'..'9'
> lmp_grammer.g:     k==3:'0'..'9'
> lmp_grammer.g:     k==4:'0'..'5'
> lmp_grammer.g:     k==5:'0'..'9'
> lmp_grammer.g:     k==6:<end-of-token>,'0'..'9'
> lmp_grammer.g:     k==7:<end-of-token>
> lmp_grammer.g:     k==8:<end-of-token>,'0'..'5'
> lmp_grammer.g:     k==9:<end-of-token>,'0'..'9'
> lmp_grammer.g:     k==10:<end-of-token>
> 
> If I remove the optional "?" then the warning disappears.
> 
> Surely the Lexer (with k>3) should always know whether it is dealing
> with a REL_TIME or an INT ? (if the 4th char is a '.' or the 3rd is 
a
> ':' then the token must be a REL_TIME).
> 
> I could understand the nondeterminism if k=3 !!
> 
> But the generated code is OK: the REL_TIME is checked for first, and
> only later the INT is check for.
> 
> TIA, Simon



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Mon Mar  8 09:54:59 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
Message-ID: <72C9789739C4214096AE945753B11EA3FABDE5@mypxmail04.bco-home.com>

I would like a better way to manage all the warnings.  I don't particularly
like the warnWhenAmbig=false flag.  For one it doesn't work for all the
cases I want it for. 

I think a companion tool could be better at annotating error messages and
presenting new ones/hiding old ones, etc.  

An ANTLR Cookbook would be quite handy too, and could be built on top of the
existing examples, and my C grammar :)

Of course there's a slew of tree things but Loring's got that covered from
the design cabal.

Interactive parsers are not so fun with ANTLR 2.

I would like to be able to trace a Token all the way back to file offsets so
I could modify files in place, not have to regenerate them entirely.  That's
not so easy with Unicode.

Monty



-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: Saturday, March 06, 2004 12:05 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x

Folks,

In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
down everything that annoys me about ANTLR 2.0.  I have started another 
"blog" document:

http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

Feel free to send in your pet peeves to me or to this list.  I will try 
to add to this file.

I can hear John Mitchell now: "predicate hoisting!" ;)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mark.buckle at intechsolutions.co.uk  Mon Mar  8 09:38:38 2004
From: mark.buckle at intechsolutions.co.uk (Mark Buckle)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] expecting IDENT, found 'x'
Message-ID: <3088879CDDA4D7118C1E00508B44A7A708BA20@WALDORF>


Hi All,

I've read the docs, experimented with the tokens{} section in the lexer and
"literals" in the parser, and still
not quite got to grips with what is going on with tokens and identifers in
ANTLR.

What I'd like to be able to do with my parser is to treat keywords in the
language only as keywords in the places specified.

Eg 
Statement_block
	:			"begin"
				( statement SEMI ) +
				"end"
	;

and have BEGIN and END only treated as distinguished keywords when defining
a block like this, and have them treated as identifiers elsewhere.
>>From what I've read, it seems to be suggested that ANTLR can do this, but
I've not been able to get it to work.  Have I misunderstood things ?
I'm trying to write a parser for a language which has a lot of keywords
which aren't reserved words.  I've gone through the tedium of
doing this in the past in lex/yacc for another language, and had to add the
ambiguous keywords to a list of identifiers, which wasn't always possible
without triggering a lot of reduce/reduce conflicts.  I was hoping that
ANTLR, being ll(k) would be able to use its current context to inform the
lexer
whether something would be an identifier or keyword from the current rule
being tried.

Cheers Mark.




-----Original Message-----
From: mzukowski@yci.com [mailto:mzukowski@yci.com] 
Sent: 08 March 2004 17:12
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] expecting IDENT, found 'x'


You are using ":" (in the parser) as a literal which it really shouldn't be,
unless it can be part of an identifier.  

Instead you should have this in your lexer:
COLON        :     ':'   ;     

And in the parser you should use COLON, not ":".

Read the docs on literals to get an idea of what was happening and when to
use "something" in the parser.

Monty

-----Original Message-----
From: jc_lelann [mailto:jc.lelann@wanadoo.fr] 
Sent: Saturday, March 06, 2004 6:58 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] expecting IDENT, found 'x'

Hi !

Could someone explain me why my parser returns the following message ?

java Test < test.txt
line 1:10: expecting IDENT, found 'x'
exception: line 1:12: unexpected char: ':'

I am new to antlr.
Thanks

JC



My grammar :

// content of my test file :

// constant x : integer := 4;
// constant x,y,z : integer := 5;
// constant x,y,z : integer := 5+5*2;


class TestParser extends Parser;
options {
    buildAST = true;
    defaultErrorHandler = true;     // Generate parser error handlers
}

mytext : 
        (constant_declaration)* EOF! ;

constant_declaration : 
        CONSTANT! identifier_list ":"! subtype_indication ":="! expression
";"! ; identifier_list : 
        identifier (","! identifier)*
;
identifier : 
        IDENT
;
subtype_indication : 
        IDENT
;
expression:     
        additiveExpression
;
// addition/subtraction
additiveExpression:     
        multiplicativeExpression((PLUS^ | MINUS^)
multiplicativeExpression)*
;
// multiplication/division   
multiplicativeExpression:     
        powerExpression ( (STAR^ | DIV^ ) powerExpression )*
;
powerExpression: 
        unaryExpression ( POWER^ unaryExpression)*
;
unaryExpression:
        MINUS^ unaryExpression
      |     primaryExpression
;
primaryExpression:
        NUMBER
      |     LPAREN! additiveExpression RPAREN!
      ;

class TestLexer extends Lexer;
options {
	exportVocab=Test;      // call the vocabulary "Java"
}

tokens {
    CONSTANT ="constant";
}

WS    :(    ' ' | '\t' | '\n' | '\r' )
        { _ttype = Token.SKIP; }
;
//-------------
// OPERATORS
//-------------
LPAREN      :     '('   ;     
RPAREN      :     ')'   ;
SEMI        :     ';'   ;     
DOT         :     '.'   ;
DIV         :     '/'   ;     
PLUS        :     '+'   ;
MINUS       :     '-'   ;     
STAR        :     '*'   ;
POWER       :     '^'   ;    

// Rule for IDENTIFIER: testLiterals is set to true.
IDENT
	options {testLiterals=true;}
            : ( 'a'..'z' )+
	;

//for both integer and real number

NUMBER : (DIGIT)+ ( '.' (DIGIT)+ )? ;

//for numbers
protected
DIGIT :     '0'..'9' ;







 
Yahoo! Groups Links



 


 
Yahoo! Groups Links



 

_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

This e-mail may contain information that is privileged, confidential or
otherwise protected from disclosure. It must not be used by, or its 
contents copied or disclosed to, persons other than the intended 
recipient. However, the contents of this e-mail may be intercepted, 
monitored or recorded by Insurance Technology Solutions Limited for 
the purposes of ensuring compliance with its policies and procedures. 
Any liability (in negligence or otherwise) arising from any third party
acting, or refraining from acting, on any information contained in this
e-mail is excluded.

Any views expressed in this message are those of the individual
sender and do not necessarily represent the views of
Insurance Technology Solutions Limited.

If you have received this e-mail in error please notify the
originator of the message.

Scanning of this message and addition of this footer is performed
by SurfControl E-mail Filter software in conjunction with 
virus detection software.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Mon Mar  8 09:59:03 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
Message-ID: <72C9789739C4214096AE945753B11EA3FABDE6@mypxmail04.bco-home.com>

I also hate dealing with ambiguous keywords!

Monty

-----Original Message-----
From: mzukowski@yci.com [mailto:mzukowski@yci.com] 
Sent: Monday, March 08, 2004 9:55 AM
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] stuff I don't like about ANTLR 2.x

I would like a better way to manage all the warnings.  I don't particularly
like the warnWhenAmbig=false flag.  For one it doesn't work for all the
cases I want it for. 

I think a companion tool could be better at annotating error messages and
presenting new ones/hiding old ones, etc.  

An ANTLR Cookbook would be quite handy too, and could be built on top of the
existing examples, and my C grammar :)

Of course there's a slew of tree things but Loring's got that covered from
the design cabal.

Interactive parsers are not so fun with ANTLR 2.

I would like to be able to trace a Token all the way back to file offsets so
I could modify files in place, not have to regenerate them entirely.  That's
not so easy with Unicode.

Monty



-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: Saturday, March 06, 2004 12:05 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x

Folks,

In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
down everything that annoys me about ANTLR 2.0.  I have started another 
"blog" document:

http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

Feel free to send in your pet peeves to me or to this list.  I will try 
to add to this file.

I can hear John Mitchell now: "predicate hoisting!" ;)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Mon Mar  8 11:19:12 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Unexpected token error
Message-ID: <c2igvg+i1bd@eGroups.com>

Hi, I get an unexpected error for simple grammar below. Can someone 
explain to me why? Thanks!

-Jerry

options { language="Cpp"; }
class PageParser extends Parser;
options { buildAST = true; }
page: element
        ;
element: attr+
        ;
attr: ID
        ;

class PageLexer extends Lexer;
ID: 'a'
        ;

ANTLR Parser Generator   Version 2.7.3 (20040224-91)   1989-2003 
jGuru.com
soac.g:6:10: rule classDef trapped:
soac.g:6:10: unexpected token: attr
error: aborting grammar 'PageParser' due to errors
Exiting due to errors.
*** Error code 1
clearmake: Error: Build script failed for "PageLexer.cpp"




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar  8 11:31:58 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Unexpected token error
In-Reply-To: <c2igvg+i1bd@eGroups.com>
References: <c2igvg+i1bd@eGroups.com>
Message-ID: <43BCF5EC-7137-11D8-8C5A-000A95891192@cs.usfca.edu>

You need (attr)+ not attr+ :)

Ter

On Mar 8, 2004, at 11:19 AM, Jerry Dy wrote:

> Hi, I get an unexpected error for simple grammar below. Can someone
> explain to me why? Thanks!
>
> -Jerry
>
> options { language="Cpp"; }
> class PageParser extends Parser;
> options { buildAST = true; }
> page: element
>         ;
> element: attr+
>         ;
> attr: ID
>         ;
>
> class PageLexer extends Lexer;
> ID: 'a'
>         ;
>
> ANTLR Parser Generator   Version 2.7.3 (20040224-91)   1989-2003
> jGuru.com
> soac.g:6:10: rule classDef trapped:
> soac.g:6:10: unexpected token: attr
> error: aborting grammar 'PageParser' due to errors
> Exiting due to errors.
> *** Error code 1
> clearmake: Error: Build script failed for "PageLexer.cpp"
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cj_daly at yahoo.com  Mon Mar  8 12:51:55 2004
From: cj_daly at yahoo.com (cj_daly)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c2imdb+ga59@eGroups.com>

Here are a few:

0) (I thought of this last but I'm adding it at the beginning because
it's so important to me!).  Those of us wanting to use Antlr within a
corporate environment have to do something to make the laywers happy.
 I think the singlemost important thing you can do here is to have a
mechanism for registering contributers.  Each contributer should be
reachable (email is fine but the more contact info you have the
better) and should have made some kind of affirmation that they agree
with the license (this affirmation could be an email that you print
and save, but a signed form faxed or snail-mailed would be even better).

I suggest looking at some of the bigger open source projects like
Mozilla or Eclipse or Apache to see what mechanisms and forms they use.

Laywers would be even happier if the contributers all assign their
copyrights to one person (i.e. Terence) or entity (like U of S.F.) but
I don't think this is necessary as long as all of the contributers are
contactable (and there aren't so many that it becomes extremely
difficult to contact them all).

Beyond that, you mentioned before that you are considering BSD as the
license.  That would work for me.  GPL or LGPL would totally disallow
me from using Antlr.  CPL (the license Eclipse uses) would be ideal
for me but BSD is very doable.


Here are the more technical suggestions:

1) Ignore options that Antlr doesn't care about.  Warning about
unknown options is ok, but don't just bail out.  I have some cases
where I am parsing the .g files to generate some code that works with
the generated parser.  So I want to be able to define my own options
that my tool looks at but Antlr ignores.

2) never call System.exit()!   Throw an exception instead.

3) I second your #6, "Labels are unique to a Rule".  I would also
recommend replacing the name:TOKEN syntax with name=TOKEN.  Using the
colon in that context can cause some head-scratching bugs.  Look at
the rule(s) below and see what can happen now when you forget the
semicolon at the end of a rule.

rule1 : a b
rule2 : X;

4) When a parser refers to an undefined token complain about it.  For
example the following test case compiles without error even though
token DASH is not defined anywhere:

class TestParser extends Parser;
sos : s o s;
s : DOT DOT DOT;
o : DASH DASH DASH;

class TestLexer extends Lexer;
DOT : '.';

5) I'd like to see a better system for managing parsers and lexers in
separate files.  I don't have any specific ideas here, just the
feeling that the TokenTypes files introduce an unnecessary extra level
of confusion.

6) I want to second what Monty said:

] I would like to be able to trace a Token all the way back
] to file offsets so I could modify files in place, not have
] to regenerate them entirely. That's not so easy with Unicode.

I think Token offset is a more fundamental concept than line/column. 
If the latter are available then the former should be too.

7) Some way of using a literal without adding it to the literals
table.  I always end up with rules enumerating the keywords that are
also legal identifiers, like:

id: ID | "foo" | "bar";

There could be some syntax like "foo"# that means don't (or do) add
this to the table.



Well that's my brain dump for now.  I just want to add that Antlr,
even now, is a fantastic tool.  My hat is off to Terence and all of
the other contributers and I greatly look forward to 3.0!


Chris


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Folks,
> 
> In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
> down everything that annoys me about ANTLR 2.0.  I have started another 
> "blog" document:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> 
> Feel free to send in your pet peeves to me or to this list.  I will try 
> to add to this file.
> 
> I can hear John Mitchell now: "predicate hoisting!" ;)
> 
> Terence
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar  8 13:33:12 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: expecting IDENT, found 'x'
In-Reply-To: <3088879CDDA4D7118C1E00508B44A7A708BA20@WALDORF>
Message-ID: <c2ioqo+lkub@eGroups.com>

It's either/or.  You can identify them, but not as literals if you are might use them as identifiers elsewhere--use semantic predicates to 
match text.  Or, if you do use them as literals, then you need a parser rule that spells out these items as alternatives:
id :  ID | "begin" | "end" ;

and use id everywhere you might have otherwise used ID.  This is much cleaner with semantic predicate hoisting--you can have 
keyword rules..

--Loring


--- In antlr-interest@yahoogroups.com, Mark Buckle <mark.buckle@i...> wrote:
> 
> Hi All,
> 
> I've read the docs, experimented with the tokens{} section in the lexer and
> "literals" in the parser, and still
> not quite got to grips with what is going on with tokens and identifers in
> ANTLR.
> 
> What I'd like to be able to do with my parser is to treat keywords in the
> language only as keywords in the places specified.
> 
> Eg 
> Statement_block
> 	:			"begin"
> 				( statement SEMI ) +
> 				"end"
> 	;
> 
> and have BEGIN and END only treated as distinguished keywords when defining
> a block like this, and have them treated as identifiers elsewhere.
> From what I've read, it seems to be suggested that ANTLR can do this, but
> I've not been able to get it to work.  Have I misunderstood things ?
> I'm trying to write a parser for a language which has a lot of keywords
> which aren't reserved words.  I've gone through the tedium of
> doing this in the past in lex/yacc for another language, and had to add the
> ambiguous keywords to a list of identifiers, which wasn't always possible
> without triggering a lot of reduce/reduce conflicts.  I was hoping that
> ANTLR, being ll(k) would be able to use its current context to inform the
> lexer
> whether something would be an identifier or keyword from the current rule
> being tried.
> 
> Cheers Mark.
> 
> 
> 
> 
> -----Original Message-----
> From: mzukowski@y... [mailto:mzukowski@y...] 
> Sent: 08 March 2004 17:12
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] expecting IDENT, found 'x'
> 
> 
> You are using ":" (in the parser) as a literal which it really shouldn't be,
> unless it can be part of an identifier.  
> 
> Instead you should have this in your lexer:
> COLON        :     ':'   ;     
> 
> And in the parser you should use COLON, not ":".
> 
> Read the docs on literals to get an idea of what was happening and when to
> use "something" in the parser.
> 
> Monty
> 
> -----Original Message-----
> From: jc_lelann [mailto:jc.lelann@w...] 
> Sent: Saturday, March 06, 2004 6:58 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] expecting IDENT, found 'x'
> 
> Hi !
> 
> Could someone explain me why my parser returns the following message ?
> 
> java Test < test.txt
> line 1:10: expecting IDENT, found 'x'
> exception: line 1:12: unexpected char: ':'
> 
> I am new to antlr.
> Thanks
> 
> JC
> 
> 
> 
> My grammar :
> 
> // content of my test file :
> 
> // constant x : integer := 4;
> // constant x,y,z : integer := 5;
> // constant x,y,z : integer := 5+5*2;
> 
> 
> class TestParser extends Parser;
> options {
>     buildAST = true;
>     defaultErrorHandler = true;     // Generate parser error handlers
> }
> 
> mytext : 
>         (constant_declaration)* EOF! ;
> 
> constant_declaration : 
>         CONSTANT! identifier_list ":"! subtype_indication ":="! expression
> ";"! ; identifier_list : 
>         identifier (","! identifier)*
> ;
> identifier : 
>         IDENT
> ;
> subtype_indication : 
>         IDENT
> ;
> expression:     
>         additiveExpression
> ;
> // addition/subtraction
> additiveExpression:     
>         multiplicativeExpression((PLUS^ | MINUS^)
> multiplicativeExpression)*
> ;
> // multiplication/division   
> multiplicativeExpression:     
>         powerExpression ( (STAR^ | DIV^ ) powerExpression )*
> ;
> powerExpression: 
>         unaryExpression ( POWER^ unaryExpression)*
> ;
> unaryExpression:
>         MINUS^ unaryExpression
>       |     primaryExpression
> ;
> primaryExpression:
>         NUMBER
>       |     LPAREN! additiveExpression RPAREN!
>       ;
> 
> class TestLexer extends Lexer;
> options {
> 	exportVocab=Test;      // call the vocabulary "Java"
> }
> 
> tokens {
>     CONSTANT ="constant";
> }
> 
> WS    :(    ' ' | '\t' | '\n' | '\r' )
>         { _ttype = Token.SKIP; }
> ;
> //-------------
> // OPERATORS
> //-------------
> LPAREN      :     '('   ;     
> RPAREN      :     ')'   ;
> SEMI        :     ';'   ;     
> DOT         :     '.'   ;
> DIV         :     '/'   ;     
> PLUS        :     '+'   ;
> MINUS       :     '-'   ;     
> STAR        :     '*'   ;
> POWER       :     '^'   ;    
> 
> // Rule for IDENTIFIER: testLiterals is set to true.
> IDENT
> 	options {testLiterals=true;}
>             : ( 'a'..'z' )+
> 	;
> 
> //for both integer and real number
> 
> NUMBER : (DIGIT)+ ( '.' (DIGIT)+ )? ;
> 
> //for numbers
> protected
> DIGIT :     '0'..'9' ;
> 
> 
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
> 
> This e-mail may contain information that is privileged, confidential or
> otherwise protected from disclosure. It must not be used by, or its 
> contents copied or disclosed to, persons other than the intended 
> recipient. However, the contents of this e-mail may be intercepted, 
> monitored or recorded by Insurance Technology Solutions Limited for 
> the purposes of ensuring compliance with its policies and procedures. 
> Any liability (in negligence or otherwise) arising from any third party
> acting, or refraining from acting, on any information contained in this
> e-mail is excluded.
> 
> Any views expressed in this message are those of the individual
> sender and do not necessarily represent the views of
> Insurance Technology Solutions Limited.
> 
> If you have received this e-mail in error please notify the
> originator of the message.
> 
> Scanning of this message and addition of this footer is performed
> by SurfControl E-mail Filter software in conjunction with 
> virus detection software.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ccc at icsaward.com  Mon Mar  8 14:18:23 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Help with Java grammar
Message-ID: <c2irff+rm9s@eGroups.com>

Hello all,

I am a novice at ANTLR and have managed to get a Java source code
augmenting tool working after reading the article on
TokenStreamRewriting. What I'm having trouble with is the Java grammar
that I've modified from the ANTLR site. In order to get my augmenter
working I had to modify the JavaLexer and tell it not to ignore
whitespace and single line comments. I needed these tokens to flow
through to the rewrite engine. Now I have a scenario where a Java
source file is terminated with a single line comment"//". This seems
to confuse the Lexer and cause an OutOfMemory error. Could one of you
gurus help me tweak the grammar to avoid this? I'm not sure if I
should code an alternate for the single line comment rule like this:

// Single-line comments
SL_COMMENT
	:	"//"
		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
		{
//*CCC- Allow comments to flow through to the rewrite engine
//		    $setType(Token.SKIP);
		    newline();
		}
                |
                "//" EOF
	;
or even if that makes sense. I was also considering removing the
newline characters from the definition but I don't know what kind of
side effects that would have on the grammar. I'm just too nervous to
disturb the original grammar too much without know what's going on. Help! 

Thanks in advance,
Cliff



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar  8 15:16:42 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2irff+rm9s@eGroups.com>
Message-ID: <c2iusq+a6l0@eGroups.com>

Removing the newlines from the // rule is probably the right move for now--the NEWLINE rule should be set to "SKIP".  You, however, 
have uncovered an ANTLR bug--there is no way to match EOF in the lexer as far as I can see:  InputBuffer absorbs the EOF_CHAR.  
Alternatively, you can do something like replacing the newline at the end with

(     { LA(1) == EOF_CHAR}?
      |  <usual "\r\n" and alternatives>
)

and modifying the "match anything but newline" as well.  It's also possible that the language spec says you must end a file with a 
newline--that used to be true of C--but I don't think that that is the case.

--Loring


--- In antlr-interest@yahoogroups.com, "cliftonccraig" <ccc@i...> wrote:
> Hello all,
> 
> I am a novice at ANTLR and have managed to get a Java source code
> augmenting tool working after reading the article on
> TokenStreamRewriting. What I'm having trouble with is the Java grammar
> that I've modified from the ANTLR site. In order to get my augmenter
> working I had to modify the JavaLexer and tell it not to ignore
> whitespace and single line comments. I needed these tokens to flow
> through to the rewrite engine. Now I have a scenario where a Java
> source file is terminated with a single line comment"//". This seems
> to confuse the Lexer and cause an OutOfMemory error. Could one of you
> gurus help me tweak the grammar to avoid this? I'm not sure if I
> should code an alternate for the single line comment rule like this:
> 
> // Single-line comments
> SL_COMMENT
> 	:	"//"
> 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> 		{
> //*CCC- Allow comments to flow through to the rewrite engine
> //		    $setType(Token.SKIP);
> 		    newline();
> 		}
>                 |
>                 "//" EOF
> 	;
> or even if that makes sense. I was also considering removing the
> newline characters from the definition but I don't know what kind of
> side effects that would have on the grammar. I'm just too nervous to
> disturb the original grammar too much without know what's going on. Help! 
> 
> Thanks in advance,
> Cliff



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From richard.ney at aspect.com  Mon Mar  8 16:40:28 2004
From: richard.ney at aspect.com (Ney, Richard)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: C# vs MSIL Output
Message-ID: <B4D3CECB886F164AA5EC912A1D082BCE079036@sac1exch3.aspect.com>

I have an application that converts data fetched from a database with
one schema into the data model for a logical schema. I use the ANTLR
with C# and I have an SQL Parser that generates a bunch of ASTs that
represent each column in the logical query and which physical columns
are used to make render it. The tree parser is excellent for doing
ILGenerator.Emit calls to create MSIL in memory to make the
transformation and the performance is very good. 

I'm not sure if this is the type of operation you are looking at but if
your application needs performance I really recommend that you make the
extra jump and have your ANTLR code generate MSIL for the
transformation. 

Also from a security point of view dropping C# files onto the disk and
compiling so you can load them into your application domain. This opens
the door to rouge code insertion since there is a small lag between the
time you generate the file, compile it and load it. I admit this is a
small window and if random file names are used hard to do but it is
possible. 

-Richard

-----Original Message-----
From: micheal_jor [mailto:open.zone@virgin.net] 
Sent: Monday, March 08, 2004 3:33 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: C# vs MSIL Output

--- In antlr-interest@yahoogroups.com, "Mike Bresnahan"
<mbresnah@v...> wrote:
> I'm beginning a project to create a .NET mini-language for
performing data
> transformations.  I'm currently debating which of following would be
best:
> 
> A) compile the language into a data structure that is used by a
runtime
> engine to perform the transformations
> B) compile the language into C# code that performs the transformations
> (after a second compilation)
> C) compile the language directly to MSIL (.NET virtual machine
assembly-like
> language) that performs the transformations
> 
> Here's a breakdown of how I see these approaches comparing based on 3
> criteria: ease of implementation, execution speed, and compilation
speed
> 
> Option    Implementation  execution  compilation
> -------------------------------------------------
> A         easy            slow       fast
> B         medium          fast       slow
> C         hard            fast       medium
> 
> I'm currently leaning towards C, because a) it appears to have the
best
> trade off between execution and compilation speed b) it is the
approach
> taken by XSLTC (albeit in Java) and NMock, and c) it sounds like fun.
> However, I am aware that ANTLR choose option B for its C#/.NET code
> generator.  Would the designers of that piece care to share some
insight
> with me?

One of ANTLR's main selling point is that it generates code fit for
humans to read, understand and even edit (editing the source grammar
is almost always preferable however). Hence the choice of B for
ANTLR/C# was a no-brainer.

Going back to your options, are you aware of these toolkits?
 - Runtime Assembly Instrumentation Library
   http://rail.dei.uc.pt/
 - Abstract IL
   http://research.microsoft.com/projects/ilx/

Of the two, Abstract IL seems the more relevant for your requirements
as it seems to help in implementing option C.

Cheers,

Micheal
ANTLR/C#




 
Yahoo! Groups Links



 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Mon Mar  8 17:54:50 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: C# vs MSIL Output
In-Reply-To: <B4D3CECB886F164AA5EC912A1D082BCE079036@sac1exch3.aspect.com>
Message-ID: <EKEJKOHPOIIALFJMKEIGIEBHFIAA.mbresnah@visi.com>

> I have an application that converts data fetched from a database with
> one schema into the data model for a logical schema. I use the ANTLR
> with C# and I have an SQL Parser that generates a bunch of ASTs that
> represent each column in the logical query and which physical columns
> are used to make render it. The tree parser is excellent for doing
> ILGenerator.Emit calls to create MSIL in memory to make the
> transformation and the performance is very good.

Does your emitted IL perform selections, cartesian products, projections,
unions, intersections, etc?

Is your source code freely available?

> Also from a security point of view dropping C# files onto the disk and
> compiling so you can load them into your application domain. This opens
> the door to rouge code insertion since there is a small lag between the
> time you generate the file, compile it and load it. I admit this is a
> small window and if random file names are used hard to do but it is
> possible.

Good point.  The option
System.CodeDom.Compiler.CompilerParameters.GenerateInMemory states that the
resultant assembly is generated in memory, not on disk.  However I do not
know if the compiler uses intermediate temporary files.

Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From kristoff_tempelaere at yahoo.com.au  Mon Mar  8 19:44:00 2004
From: kristoff_tempelaere at yahoo.com.au (kristoff_tempelaere)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] SQL2 and AST
Message-ID: <c2jei0+10cdn@eGroups.com>

Hello,

I'm a student, new to ANTLR and need it to create a SQL-parser, so I 
used Lubos Vnuk's grammar (nice one!, only the DML-subset) and 
generate C++ code with Visual Studio 6. I use the latest version 
(20040225) of Ric Klaren...

With buildAst=false it works fine, also with buildAst=true I can 
compile and build it, but when I run it, I get an "access violation"-
error. So there must be some (memory-allocating?)-error in the AST-
code.  

Someone who knows how to fix this?  Or did someone got it work with 
another compiler?  Maybe it can help if I give you the call stack 
when the error occurs, so you find it below... 

It would help me a lot, cos I really need the AST :-(
Kristoff Tempelaere



-------------------------- Call Stack -------------
std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
(__cdecl*)(void)> *,std::allocator<std::pair<char const 
*,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::begin() 
line 93 + 32 bytes

std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
(__cdecl*)(void)> *,std::allocator<std::pair<char const 
*,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::operator[]
(unsigned int 232) line 132 + 37 bytes

antlr::ASTFactory::create(antlr::RefCount<antlr::Token> {...}) line 
155 + 49 bytes
DmlSQL2Parser::query_spec() line 4991 + 50 bytes
DmlSQL2Parser::simple_table() line 4924
DmlSQL2Parser::query_primary() line 4898
DmlSQL2Parser::query_term() line 4786
DmlSQL2Parser::query_exp() line 579
DmlSQL2Parser::select_stmt() line 210
DmlSQL2Parser::sql_data_stmt() line 163
DmlSQL2Parser::sql_stmt() line 100





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar  8 20:37:52 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: SQL2 and AST
In-Reply-To: <c2jei0+10cdn@eGroups.com>
Message-ID: <c2jhn0+tecb@eGroups.com>

This is probably the AST factory initialization crash.  Take a look at
the "Using Custom AST Types" in the C++ runtime section of the ANTLR
manual.

--Loring


--- In antlr-interest@yahoogroups.com, "kristoff_tempelaere"
<kristoff_tempelaere@y...> wrote:
> Hello,
> 
> I'm a student, new to ANTLR and need it to create a SQL-parser, so I 
> used Lubos Vnuk's grammar (nice one!, only the DML-subset) and 
> generate C++ code with Visual Studio 6. I use the latest version 
> (20040225) of Ric Klaren...
> 
> With buildAst=false it works fine, also with buildAst=true I can 
> compile and build it, but when I run it, I get an "access violation"-
> error. So there must be some (memory-allocating?)-error in the AST-
> code.  
> 
> Someone who knows how to fix this?  Or did someone got it work with 
> another compiler?  Maybe it can help if I give you the call stack 
> when the error occurs, so you find it below... 
> 
> It would help me a lot, cos I really need the AST :-(
> Kristoff Tempelaere
> 
> 
> 
> -------------------------- Call Stack -------------
> std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
> (__cdecl*)(void)> *,std::allocator<std::pair<char const 
> *,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::begin() 
> line 93 + 32 bytes
> 
> std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
> (__cdecl*)(void)> *,std::allocator<std::pair<char const 
> *,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::operator[]
> (unsigned int 232) line 132 + 37 bytes
> 
> antlr::ASTFactory::create(antlr::RefCount<antlr::Token> {...}) line 
> 155 + 49 bytes
> DmlSQL2Parser::query_spec() line 4991 + 50 bytes
> DmlSQL2Parser::simple_table() line 4924
> DmlSQL2Parser::query_primary() line 4898
> DmlSQL2Parser::query_term() line 4786
> DmlSQL2Parser::query_exp() line 579
> DmlSQL2Parser::select_stmt() line 210
> DmlSQL2Parser::sql_data_stmt() line 163
> DmlSQL2Parser::sql_stmt() line 100



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From richard.ney at aspect.com  Mon Mar  8 20:30:19 2004
From: richard.ney at aspect.com (Ney, Richard)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: C# vs MSIL Output
Message-ID: <B4D3CECB886F164AA5EC912A1D082BCE079039@sac1exch3.aspect.com>

Mike,

I've included a sample tree grammar that generates the body of my simple
expression evaluators. The classes you are looking for are in the
System.Reflection.Emit namespace. They allow you to generate classes in
memory using MSIL. Now one thing I will point out is that when you
generate in memory MSIL you still get all the abilities of .NET so you
can include a broiler plate superclass that has common methods that can
use in you MSIL. If you are looking at MSIL I assume you have discovered
ILDASM.exe which will allow you to view code you have written in C# as
MSIL. Also there is an option you can set during debugging on the Emit
object that will save the class to a file so you can examine it with
MSIL. I hope this helps get you started.

-Richard

-----Original Message-----
From: Mike Bresnahan [mailto:mbresnah@visi.com] 
Sent: Monday, March 08, 2004 5:55 PM
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] Re: C# vs MSIL Output

> I have an application that converts data fetched from a database with
> one schema into the data model for a logical schema. I use the ANTLR
> with C# and I have an SQL Parser that generates a bunch of ASTs that
> represent each column in the logical query and which physical columns
> are used to make render it. The tree parser is excellent for doing
> ILGenerator.Emit calls to create MSIL in memory to make the
> transformation and the performance is very good.

Does your emitted IL perform selections, cartesian products,
projections,
unions, intersections, etc?

Is your source code freely available?

> Also from a security point of view dropping C# files onto the disk and
> compiling so you can load them into your application domain. This
opens
> the door to rouge code insertion since there is a small lag between
the
> time you generate the file, compile it and load it. I admit this is a
> small window and if random file names are used hard to do but it is
> possible.

Good point.  The option
System.CodeDom.Compiler.CompilerParameters.GenerateInMemory states that
the
resultant assembly is generated in memory, not on disk.  However I do
not
know if the compiler uses intermediate temporary files.

Mike Bresnahan



 
Yahoo! Groups Links



 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ExpressionTreeParser.g
Type: application/octet-stream
Size: 24096 bytes
Desc: ExpressionTreeParser.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040308/9efb9279/ExpressionTreeParser.obj
From gackle at shaw.ca  Mon Mar  8 22:03:59 2004
From: gackle at shaw.ca (Daniel Gackle)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] RE: C# vs MSIL Output
In-Reply-To: <1078784182.615.53930.m12@yahoogroups.com>
Message-ID: <NEBBKKODFMOCLEEIOELFGEBHCPAA.gackle@shaw.ca>

> As far as I can tell, the ICompiler object created by
> CSharpCodeProvider.CreateCompiler converts the CodeDom
> to C# and invokes csc.exe.

That's right. Even if you ask the CodeDom for an in-memory assembly, it
still generates C# source code and parses it all over again before turning
it into IL. It's not possible to use the CodeDom to generate IL directly.
That's what Reflection.Emit does. However, we did some performance tests and
found that, once you get past the compilation of the C#, code generated via
the CodeDom doesn't run significantly slower than code generated via
Reflection.Emit. As a result, we opted for the convenience of the
higher-level CodeDom API.

Daniel

________________________________________________________________________

Message: 6
   Date: Sun, 7 Mar 2004 18:28:08 -0600
   From: "Mike Bresnahan" <mbresnah@visi.com>
Subject: RE: C# vs MSIL Output

> Actually you can generate IL once you have a CodeDom tree - there are
> classes in the Microsoft.CSharp namespace:
>
> CSharpCodeProvider.CreateCompiler
> CSharpCodeProvider.CreateGenerator
> CSharpCodeProvider.CreateParser

As far as I can tell, the ICompiler object created by
CSharpCodeProvider.CreateCompiler converts the CodeDom to C# and invokes
csc.exe.  I'm guessing CodeDom is not transformed directly to MSIL because
csc.exe uses a different data structure for storing the parsed source code.
Until this internal data structure and CodeDom are the same or someone
writes a new compiler, we will be stuck transforming CodeDom to source code
as an intermediate step.

What's interesting is that there is an option to create the compiled
assembly in-memory instead of in a temporary file.  I'm guessing this means
that csc.exe outputs the assembly to stdout or through some other IPC
mechanism, however "csc.exe -help" does not list such and option.

Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From richard.ney at aspect.com  Mon Mar  8 22:36:05 2004
From: richard.ney at aspect.com (Ney, Richard)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] RE: C# vs MSIL Output
Message-ID: <B4D3CECB886F164AA5EC912A1D082BCE07903A@sac1exch3.aspect.com>

As always, it really comes down to a matter of preference and how often
your application needs to do it. To list examples of Microsoft libraries
that uses the two methods. The XML attributes for serializing and
deserializing XML files uses the CodeDom API since creating the classes
to load a XML schema is usually only done once so the cost of pausing
your application and invoking CSC.exe isn't really and issue. Now the
regular expression evaluator library uses the Reflection.Emit API since
it is often placed in GUIs and you don't want the GUI to become
unresponsive while CSC is brought in. 

Both methods should generate code that performs the same since they both
end up as MSIL. In my application using the Emit API is faster since I
generate a custom class to handle each unique request during the
lifetime of my application and they come in large groups. I can't afford
to have 10+ copies of CSC running to convert generated C# into MSIL. But
I do use the XML attributes to load my startup meta-data.

-Richard

-----Original Message-----
From: Daniel Gackle [mailto:gackle@shaw.ca] 
Sent: Monday, March 08, 2004 10:04 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] RE: C# vs MSIL Output

> As far as I can tell, the ICompiler object created by
> CSharpCodeProvider.CreateCompiler converts the CodeDom
> to C# and invokes csc.exe.

That's right. Even if you ask the CodeDom for an in-memory assembly, it
still generates C# source code and parses it all over again before
turning
it into IL. It's not possible to use the CodeDom to generate IL
directly.
That's what Reflection.Emit does. However, we did some performance tests
and
found that, once you get past the compilation of the C#, code generated
via
the CodeDom doesn't run significantly slower than code generated via
Reflection.Emit. As a result, we opted for the convenience of the
higher-level CodeDom API.

Daniel

________________________________________________________________________

Message: 6
   Date: Sun, 7 Mar 2004 18:28:08 -0600
   From: "Mike Bresnahan" <mbresnah@visi.com>
Subject: RE: C# vs MSIL Output

> Actually you can generate IL once you have a CodeDom tree - there are
> classes in the Microsoft.CSharp namespace:
>
> CSharpCodeProvider.CreateCompiler
> CSharpCodeProvider.CreateGenerator
> CSharpCodeProvider.CreateParser

As far as I can tell, the ICompiler object created by
CSharpCodeProvider.CreateCompiler converts the CodeDom to C# and invokes
csc.exe.  I'm guessing CodeDom is not transformed directly to MSIL
because
csc.exe uses a different data structure for storing the parsed source
code.
Until this internal data structure and CodeDom are the same or someone
writes a new compiler, we will be stuck transforming CodeDom to source
code
as an intermediate step.

What's interesting is that there is an option to create the compiled
assembly in-memory instead of in a temporary file.  I'm guessing this
means
that csc.exe outputs the assembly to stdout or through some other IPC
mechanism, however "csc.exe -help" does not list such and option.

Mike Bresnahan



 
Yahoo! Groups Links



 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Tue Mar  9 02:07:43 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <20040309100743.GA26038@cs.utwente.nl>

On Sat, Mar 06, 2004 at 12:05:24PM -0800, Terence Parr wrote:
> Feel free to send in your pet peeves to me or to this list.  I will try
> to add to this file.

- Loring reminded me just now in a post: I want to be able to reference EOF
  in the lexer as a 'normal' token. uponEOF is a kludge.
- ANTLR should stay a commandline tool (the core functionality for grammar
  inheritance or whatever it should replace I don't care) if it doesn't run
  from a Makefile I'm not interested ;)
- More documentation in the code.
- The lack of warnings/errors for incorrect use of options/constructs
- Not being able to specify a default template errorhandler for the whole
  grammar.

Internal things:
- Internally I'd like a better interface between codegenerator and what is
  now the action parser. (if that's still an issue with the new
  codegen/syntax) The near heuristics now used to do the right thing to
  translate a #treethingy into something sane is a horror.
- Codegen wise I'd like to know more things before I start generating a
  piece of code, so I can cut down on declarations etc. Stuff that does not
  need to be constructed does not cost cpu cycles.
- I dislike the 'all-over-the-place' system used for grammar/file options.
  I'd prefer having the included codegenerators register commandline
  options and handlers in the maintool (and get rid of all the globals for
  them).

That's all I can think of for now..

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "You know how to use that thing?" [pointing to the sword]
  "Sure.. The pointy end goes into the other guy."
  --- The Mask of Zorro



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lubos.vnuk at rts.at  Tue Mar  9 02:34:12 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: SQL2 and AST
In-Reply-To: <c2jei0+10cdn@eGroups.com>
Message-ID: <c2k6j4+q81o@eGroups.com>

As the author of the SQL2 grammar I just wanted to explain the 
missing AST support.

My original idea was to make a few SQL parsers for different dialects 
(standard SQL2, SQL3, Oracle, Informix, DB2...) and then make a SQL-
translator to provide the DB server independence. 

I chose ANTLR and started with SQL2. I spent a lot of time fixing ALL 
the non-determinisms (would have likely been much easier with an LR 
parser generator) and making the grammar logically sound, conforming 
to the standard and well-documented that I was really happy to put it 
all together at all.

As I started thinking about putting the tree-building in I decided to 
postpone it because:
1. it would have ruined the readability of the grammar
2. first I wanted to make a few other SQL parsers and decide on the 
right AST structure having in mind the goal of the dialect translation
3. there came the prospect of ANTLR3 which should bring interesting 
speed and functional enhancements

I tested the SQL2 grammar with buildAst=false and buildAst=true (this 
option is still on in the published version I reckon) and encountered 
no problems. Of course setting buildAst=true does not bring much in 
this version and if you want to use tree-building you should build it 
in yourself according to your liking (let me please know of your 
ideas).

In the meantime I have built a few SQL BNFs that I can use to 
generate raw ANTLR grammars with so if anyone wants to help me with 
building SQL3, SQL2003 or DB2 UDB parsers, let me know. More 
information on this in http://sqlweb.vnuk.org

Regards,
Lubos.

--- In antlr-interest@yahoogroups.com, "kristoff_tempelaere" 
<kristoff_tempelaere@y...> wrote:
> Hello,
> 
> I'm a student, new to ANTLR and need it to create a SQL-parser, so 
I 
> used Lubos Vnuk's grammar (nice one!, only the DML-subset) and 
> generate C++ code with Visual Studio 6. I use the latest version 
> (20040225) of Ric Klaren...
> 
> With buildAst=false it works fine, also with buildAst=true I can 
> compile and build it, but when I run it, I get an "access 
violation"-
> error. So there must be some (memory-allocating?)-error in the AST-
> code.  
> 
> Someone who knows how to fix this?  Or did someone got it work with 
> another compiler?  Maybe it can help if I give you the call stack 
> when the error occurs, so you find it below... 
> 
> It would help me a lot, cos I really need the AST :-(
> Kristoff Tempelaere
> 
> 
> 
> -------------------------- Call Stack -------------
> std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
> (__cdecl*)(void)> *,std::allocator<std::pair<char const 
> *,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::begin() 
> line 93 + 32 bytes
> 
> std::vector<std::pair<char const *,antlr::ASTRefCount<antlr::AST>  
> (__cdecl*)(void)> *,std::allocator<std::pair<char const 
> *,antlr::ASTRefCount<antlr::AST>  (__cdecl*)(void)> *> >::operator[]
> (unsigned int 232) line 132 + 37 bytes
> 
> antlr::ASTFactory::create(antlr::RefCount<antlr::Token> {...}) line 
> 155 + 49 bytes
> DmlSQL2Parser::query_spec() line 4991 + 50 bytes
> DmlSQL2Parser::simple_table() line 4924
> DmlSQL2Parser::query_primary() line 4898
> DmlSQL2Parser::query_term() line 4786
> DmlSQL2Parser::query_exp() line 579
> DmlSQL2Parser::select_stmt() line 210
> DmlSQL2Parser::sql_data_stmt() line 163
> DmlSQL2Parser::sql_stmt() line 100



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mark.buckle at intechsolutions.co.uk  Tue Mar  9 02:42:43 2004
From: mark.buckle at intechsolutions.co.uk (Mark Buckle)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: expecting IDENT, found 'x'
Message-ID: <3088879CDDA4D7118C1E00508B44A7A708BA29@WALDORF>


Ugh, groan.
Well if that's how it is, that's how it is.  
BTW what is sematic predicate hoisting ?

-----Original Message-----
From: lgcraymer [mailto:lgc@mail1.jpl.nasa.gov] 
Sent: 08 March 2004 21:33
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: expecting IDENT, found 'x'


It's either/or.  You can identify them, but not as literals if you are might
use them as identifiers elsewhere--use semantic predicates to 
match text.  Or, if you do use them as literals, then you need a parser rule
that spells out these items as alternatives: id :  ID | "begin" | "end" ;

and use id everywhere you might have otherwise used ID.  This is much
cleaner with semantic predicate hoisting--you can have 
keyword rules..

--Loring


--- In antlr-interest@yahoogroups.com, Mark Buckle <mark.buckle@i...> wrote:
> 
> Hi All,
> 
> I've read the docs, experimented with the tokens{} section in the 
> lexer and "literals" in the parser, and still not quite got to grips 
> with what is going on with tokens and identifers in ANTLR.
> 
> What I'd like to be able to do with my parser is to treat keywords in 
> the language only as keywords in the places specified.
> 
> Eg
> Statement_block
> 	:			"begin"
> 				( statement SEMI ) +
> 				"end"
> 	;
> 
> and have BEGIN and END only treated as distinguished keywords when 
> defining a block like this, and have them treated as identifiers 
> elsewhere. From what I've read, it seems to be suggested that ANTLR 
> can do this, but I've not been able to get it to work.  Have I 
> misunderstood things ? I'm trying to write a parser for a language 
> which has a lot of keywords which aren't reserved words.  I've gone 
> through the tedium of doing this in the past in lex/yacc for another 
> language, and had to add the ambiguous keywords to a list of 
> identifiers, which wasn't always possible without triggering a lot of 
> reduce/reduce conflicts.  I was hoping that ANTLR, being ll(k) would 
> be able to use its current context to inform the lexer whether 
> something would be an identifier or keyword from the current rule 
> being tried.
> 
> Cheers Mark.
> 
> 
> 
> 
> -----Original Message-----
> From: mzukowski@y... [mailto:mzukowski@y...]
> Sent: 08 March 2004 17:12
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] expecting IDENT, found 'x'
> 
> 
> You are using ":" (in the parser) as a literal which it really 
> shouldn't be, unless it can be part of an identifier.
> 
> Instead you should have this in your lexer:
> COLON        :     ':'   ;     
> 
> And in the parser you should use COLON, not ":".
> 
> Read the docs on literals to get an idea of what was happening and 
> when to use "something" in the parser.
> 
> Monty
> 
> -----Original Message-----
> From: jc_lelann [mailto:jc.lelann@w...]
> Sent: Saturday, March 06, 2004 6:58 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] expecting IDENT, found 'x'
> 
> Hi !
> 
> Could someone explain me why my parser returns the following message ?
> 
> java Test < test.txt
> line 1:10: expecting IDENT, found 'x'
> exception: line 1:12: unexpected char: ':'
> 
> I am new to antlr.
> Thanks
> 
> JC
> 
> 
> 
> My grammar :
> 
> // content of my test file :
> 
> // constant x : integer := 4;
> // constant x,y,z : integer := 5;
> // constant x,y,z : integer := 5+5*2;
> 
> 
> class TestParser extends Parser;
> options {
>     buildAST = true;
>     defaultErrorHandler = true;     // Generate parser error handlers
> }
> 
> mytext : 
>         (constant_declaration)* EOF! ;
> 
> constant_declaration : 
>         CONSTANT! identifier_list ":"! subtype_indication ":="! 
> expression ";"! ; identifier_list :
>         identifier (","! identifier)*
> ;
> identifier : 
>         IDENT
> ;
> subtype_indication : 
>         IDENT
> ;
> expression:     
>         additiveExpression
> ;
> // addition/subtraction
> additiveExpression:     
>         multiplicativeExpression((PLUS^ | MINUS^)
> multiplicativeExpression)*
> ;
> // multiplication/division   
> multiplicativeExpression:     
>         powerExpression ( (STAR^ | DIV^ ) powerExpression )* ;
> powerExpression: 
>         unaryExpression ( POWER^ unaryExpression)*
> ;
> unaryExpression:
>         MINUS^ unaryExpression
>       |     primaryExpression
> ;
> primaryExpression:
>         NUMBER
>       |     LPAREN! additiveExpression RPAREN!
>       ;
> 
> class TestLexer extends Lexer;
> options {
> 	exportVocab=Test;      // call the vocabulary "Java"
> }
> 
> tokens {
>     CONSTANT ="constant";
> }
> 
> WS    :(    ' ' | '\t' | '\n' | '\r' )
>         { _ttype = Token.SKIP; }
> ;
> //-------------
> // OPERATORS
> //-------------
> LPAREN      :     '('   ;     
> RPAREN      :     ')'   ;
> SEMI        :     ';'   ;     
> DOT         :     '.'   ;
> DIV         :     '/'   ;     
> PLUS        :     '+'   ;
> MINUS       :     '-'   ;     
> STAR        :     '*'   ;
> POWER       :     '^'   ;    
> 
> // Rule for IDENTIFIER: testLiterals is set to true.
> IDENT
> 	options {testLiterals=true;}
>             : ( 'a'..'z' )+
> 	;
> 
> //for both integer and real number
> 
> NUMBER : (DIGIT)+ ( '.' (DIGIT)+ )? ;
> 
> //for numbers
> protected
> DIGIT :     '0'..'9' ;
> 
> 
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
> _ _ _
> 
> This e-mail may contain information that is privileged, confidential 
> or otherwise protected from disclosure. It must not be used by, or its 
> contents copied or disclosed to, persons other than the intended 
> recipient. However, the contents of this e-mail may be intercepted, 
> monitored or recorded by Insurance Technology Solutions Limited for 
> the purposes of ensuring compliance with its policies and procedures. 
> Any liability (in negligence or otherwise) arising from any third 
> party acting, or refraining from acting, on any information contained 
> in this e-mail is excluded.
> 
> Any views expressed in this message are those of the individual sender 
> and do not necessarily represent the views of Insurance Technology 
> Solutions Limited.
> 
> If you have received this e-mail in error please notify the originator 
> of the message.
> 
> Scanning of this message and addition of this footer is performed by 
> SurfControl E-mail Filter software in conjunction with virus detection 
> software.



 
Yahoo! Groups Links



 

_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

This e-mail may contain information that is privileged, confidential or
otherwise protected from disclosure. It must not be used by, or its 
contents copied or disclosed to, persons other than the intended 
recipient. However, the contents of this e-mail may be intercepted, 
monitored or recorded by Insurance Technology Solutions Limited for 
the purposes of ensuring compliance with its policies and procedures. 
Any liability (in negligence or otherwise) arising from any third party
acting, or refraining from acting, on any information contained in this
e-mail is excluded.

Any views expressed in this message are those of the individual
sender and do not necessarily represent the views of
Insurance Technology Solutions Limited.

If you have received this e-mail in error please notify the
originator of the message.

Scanning of this message and addition of this footer is performed
by SurfControl E-mail Filter software in conjunction with 
virus detection software.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue Mar  9 03:19:22 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADB5@lnml1.eca-international.local>

The problem I find is actually FINDING all this stuff. I have a bit of
an aversion to hypertext, much prefer a linear hard copy in front of me,
and find RMS's addiction to "info" for GNU documentation highly
offensive ...

Anyway, enough of the rant ... and I know - the rule is "if you want it,
why don't you write it", but a FAQ, clearly signposted, that consists of
a mildly complicated, highly documented, teaching grammar would be well
received. There are some wonderful resources out there, but IME it's
been a case of either pointers to "get you started" stuff, or a case of
"look at the supplied grammars" (but which one do I want to study for a
"teach yourself" course?).

I'm not saying there isn't anything out there, but I am frustrated time
and time again in that I seem to find either elementary stuff aimed at
newbies, or reference stuff aimed at experts. It's almost impossible to
find stuff aimed at the "I know you're experienced but have never met
this before" level guy. When I started programming in C I went on a
"Beginning C for experienced programmers" course - the prerequisite
being you had to know one - any - computer language well but were
presumed to know nothing about C at all. Where do you find stuff like
that?

Cheers,
Wol

-----Original Message-----
From: mzukowski@yci.com [mailto:mzukowski@yci.com] 
Sent: 04 March 2004 17:57
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] nesting rules, getting rule text

Yeah, it seems people need a guide to reading the code sometimes.  This
stuff is in Ter's lectures, but maybe something that pointed out
techniques
used in the examples would be helpful too for those of you who just
start
hacking away?

Monty

-----Original Message-----
From: Robin Debreuil [mailto:robin@debreuil.com] 
Sent: Thursday, March 04, 2004 9:49 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] nesting rules, getting rule text

Great Monty, thanks - these little tips of yours are really helpful to
those
of us running blind here : ). I will structure things that way then...

Cheers,
Robin


----- Original Message -----
From: <mzukowski@yci.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 04, 2004 11:25 AM
Subject: RE: [antlr-interest] nesting rules, getting rule text


> Yeah, typically you wouldn't nest at each DOT, you would have one root
and
> then all the DOT WHATEVERs as children.  The java grammar or C grammar
> should have examples of this.
>
> Monty
>
> -----Original Message-----
> From: Robin Debreuil [mailto:robin@debreuil.com]
> Sent: Thursday, March 04, 2004 2:30 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] nesting rules, getting rule text
>
> Hmm, I got it to work like:
>
> primary_expression!
> { AST curAst = null;}
>  :    ps:primary_start
>       {curAst = ps_AST;}
>      (
>          ma:member_access
>             {     curAst.setFirstChild(ma_AST);
>                    curAst=ma_AST;
>             }
>      )*
>     {#primary_expression = #ps;}
>  ;
>
> Maybe there is an easier way? Maybe I 'dont want' this in the first
> place...?
>
> Cheers,
> Robin
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From pete.forman at westerngeco.com  Tue Mar  9 03:37:04 2004
From: pete.forman at westerngeco.com (Pete Forman)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <5.1.1.1.2.20040309113140.02326238@wgmail2.gatwick.eur.slb.com>

At 2004-03-06 12:05 -0800, Terence Parr wrote:
>In preparation for the ANTLR 3.0 whitepaper, I need to start writing
>down everything that annoys me about ANTLR 2.0.  I have started
>another "blog" document:
>
>http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
>
>Feel free to send in your pet peeves to me or to this list.  I will
>try to add to this file.

I still have a feature request.  Might we have a "-i" command line
option to specify a directory other than the current one to locate
the import vocab file.  This would complement "-o" for those such as
myself who keep source and generated/object files in separate
directories.

-- 
Pete Forman                -./\.-  Disclaimer: This post is originated
WesternGeco                  -./\.-   by myself and does not represent
pete.forman@westerngeco.com    -./\.-   opinion of Schlumberger, Baker
http://petef.port5.com           -./\.-   Hughes or their divisions.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue Mar  9 03:49:06 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADB6@lnml1.eca-international.local>

Two comments about licencing ...

Why not look at one of the biggest Open Source projects out there?
namely linux <vbg/>

And what's wrong with the *L*GPL? I can't tell Ter what to do with his
stuff, but as a small-time programmer, it would be my licence of choice.
And I don't see why my employers can't take advantage of it if they
wish.

Cheers,
Wol

-----Original Message-----
From: cj_daly [mailto:cj_daly@yahoo.com] 
Sent: 08 March 2004 20:52
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x

Here are a few:

0) (I thought of this last but I'm adding it at the beginning because
it's so important to me!).  Those of us wanting to use Antlr within a
corporate environment have to do something to make the laywers happy.
 I think the singlemost important thing you can do here is to have a
mechanism for registering contributers.  Each contributer should be
reachable (email is fine but the more contact info you have the
better) and should have made some kind of affirmation that they agree
with the license (this affirmation could be an email that you print
and save, but a signed form faxed or snail-mailed would be even better).

I suggest looking at some of the bigger open source projects like
Mozilla or Eclipse or Apache to see what mechanisms and forms they use.

Laywers would be even happier if the contributers all assign their
copyrights to one person (i.e. Terence) or entity (like U of S.F.) but
I don't think this is necessary as long as all of the contributers are
contactable (and there aren't so many that it becomes extremely
difficult to contact them all).

Beyond that, you mentioned before that you are considering BSD as the
license.  That would work for me.  GPL or LGPL would totally disallow
me from using Antlr.  CPL (the license Eclipse uses) would be ideal
for me but BSD is very doable.



***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue Mar  9 03:54:55 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] C# vs MSIL Output
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADB7@lnml1.eca-international.local>

I'm sure Rob will join in when he sees this ... he wrote the MaVerick
DATABASIC grammar.

But that was originally written to spit out java source to feed into the
java compiler. He then wrote another emitter to spit out java p-code.

So why don't you start with (B), making sure that the "output as C#"
stage is an independent module, and then move on to step (C) later,
replacing it with an "output as MSIL" module.

Cheers,
Wol 

-----Original Message-----
From: Mike Bresnahan [mailto:mbresnah@visi.com] 
Sent: 07 March 2004 06:37
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] C# vs MSIL Output

I'm beginning a project to create a .NET mini-language for performing
data
transformations.  I'm currently debating which of following would be
best:

A) compile the language into a data structure that is used by a runtime
engine to perform the transformations
B) compile the language into C# code that performs the transformations
(after a second compilation)
C) compile the language directly to MSIL (.NET virtual machine
assembly-like
language) that performs the transformations

Here's a breakdown of how I see these approaches comparing based on 3
criteria: ease of implementation, execution speed, and compilation speed

Option    Implementation  execution  compilation
-------------------------------------------------
A         easy            slow       fast
B         medium          fast       slow
C         hard            fast       medium

I'm currently leaning towards C, because a) it appears to have the best
trade off between execution and compilation speed b) it is the approach
taken by XSLTC (albeit in Java) and NMock, and c) it sounds like fun.
However, I am aware that ANTLR choose option B for its C#/.NET code
generator.  Would the designers of that piece care to share some insight
with me?

Mike Bresnahan





 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue Mar  9 04:02:37 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADB8@lnml1.eca-international.local>

I *think* that gcc allows you to specifically disable certain warnings -
along the lines of "warn everything except warning number 82". I suspect
that when I get things working the way I want, my screen will explode in
ambiguity warnings! The problem is that there might be one warning I
really need to see, and I miss it in the screeds of ambiguity crap I
can't suppress.

I'd suggest that you allocate numbers to all your warnings (you probably
do that already :-) and then print your warnings via a call to a central
routine. Then have some way of telling that routine that, if it's called
for warning(s) x, it should return without doing anything.

Cheers,
Wol 

-----Original Message-----
From: mzukowski@yci.com [mailto:mzukowski@yci.com] 
Sent: 08 March 2004 17:55
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] stuff I don't like about ANTLR 2.x

I would like a better way to manage all the warnings.  I don't
particularly
like the warnWhenAmbig=false flag.  For one it doesn't work for all the
cases I want it for. 

I think a companion tool could be better at annotating error messages
and
presenting new ones/hiding old ones, etc.  

An ANTLR Cookbook would be quite handy too, and could be built on top of
the
existing examples, and my C grammar :)

Of course there's a slew of tree things but Loring's got that covered
from
the design cabal.

Interactive parsers are not so fun with ANTLR 2.

I would like to be able to trace a Token all the way back to file
offsets so
I could modify files in place, not have to regenerate them entirely.
That's
not so easy with Unicode.

Monty



-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: Saturday, March 06, 2004 12:05 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x

Folks,

In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
down everything that annoys me about ANTLR 2.0.  I have started another 
"blog" document:

http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

Feel free to send in your pet peeves to me or to this list.  I will try 
to add to this file.

I can hear John Mitchell now: "predicate hoisting!" ;)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ccc at icsaward.com  Tue Mar  9 05:55:26 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2iusq+a6l0@eGroups.com>
Message-ID: <c2kice+hhri@eGroups.com>

Thank you Loring,

I tried the following to no avail:
// Single-line comments
SL_COMMENT
	:	"//"
		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
		{
//*CCC- Allow comments to flow through to the rewrite engine
//		    $setType(Token.SKIP);
		    newline();
		}
        |
                "//" { LA(1) == EOF_CHAR}?
	;

I'm still struggling. I'm not sure if I understand how to do this.

Cliff


--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> Removing the newlines from the // rule is probably the right move
for now--the NEWLINE rule should be set to "SKIP".  You, however, 
> have uncovered an ANTLR bug--there is no way to match EOF in the
lexer as far as I can see:  InputBuffer absorbs the EOF_CHAR.  
> Alternatively, you can do something like replacing the newline at
the end with
> 
> (     { LA(1) == EOF_CHAR}?
>       |  <usual "\r\n" and alternatives>
> )
> 
> and modifying the "match anything but newline" as well.  It's also
possible that the language spec says you must end a file with a 
> newline--that used to be true of C--but I don't think that that is
the case.
> 
> --Loring
> 
> 
> --- In antlr-interest@yahoogroups.com, "cliftonccraig" <ccc@i...> wrote:
> > Hello all,
> > 
> > I am a novice at ANTLR and have managed to get a Java source code
> > augmenting tool working after reading the article on
> > TokenStreamRewriting. What I'm having trouble with is the Java grammar
> > that I've modified from the ANTLR site. In order to get my augmenter
> > working I had to modify the JavaLexer and tell it not to ignore
> > whitespace and single line comments. I needed these tokens to flow
> > through to the rewrite engine. Now I have a scenario where a Java
> > source file is terminated with a single line comment"//". This seems
> > to confuse the Lexer and cause an OutOfMemory error. Could one of you
> > gurus help me tweak the grammar to avoid this? I'm not sure if I
> > should code an alternate for the single line comment rule like this:
> > 
> > // Single-line comments
> > SL_COMMENT
> > 	:	"//"
> > 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> > 		{
> > //*CCC- Allow comments to flow through to the rewrite engine
> > //		    $setType(Token.SKIP);
> > 		    newline();
> > 		}
> >                 |
> >                 "//" EOF
> > 	;
> > or even if that makes sense. I was also considering removing the
> > newline characters from the definition but I don't know what kind of
> > side effects that would have on the grammar. I'm just too nervous to
> > disturb the original grammar too much without know what's going
on. Help! 
> > 
> > Thanks in advance,
> > Cliff



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ccc at icsaward.com  Tue Mar  9 06:08:09 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2kice+hhri@eGroups.com>
Message-ID: <c2kj49+41bi@eGroups.com>

I just tried this:
SL_COMMENT
	:	"//"
		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
		{
//*CCC- Allow comments to flow through to the rewrite engine
//		    $setType(Token.SKIP);
		    newline();
		}
		|
		"//" (~('\n'|'\r'))*
	;

And I got an warning saying:
D:\scm\tools\parsers\grammar\ANTLR\java.g:1235: warning:lexical
nondeterminism between alts 1 and 2 of block upon
D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==1:'/'
D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==2:'/'
D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
k==3:'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
k==4:<end-of-token>,'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'

I think I'm really lost. Help!

Cliff
--- In antlr-interest@yahoogroups.com, "cliftonccraig" <ccc@i...> wrote:
> Thank you Loring,
> 
> I tried the following to no avail:
> // Single-line comments
> SL_COMMENT
> 	:	"//"
> 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> 		{
> //*CCC- Allow comments to flow through to the rewrite engine
> //		    $setType(Token.SKIP);
> 		    newline();
> 		}
>         |
>                 "//" { LA(1) == EOF_CHAR}?
> 	;
> 
> I'm still struggling. I'm not sure if I understand how to do this.
> 
> Cliff
> 
> 
> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> > Removing the newlines from the // rule is probably the right move
> for now--the NEWLINE rule should be set to "SKIP".  You, however, 
> > have uncovered an ANTLR bug--there is no way to match EOF in the
> lexer as far as I can see:  InputBuffer absorbs the EOF_CHAR.  
> > Alternatively, you can do something like replacing the newline at
> the end with
> > 
> > (     { LA(1) == EOF_CHAR}?
> >       |  <usual "\r\n" and alternatives>
> > )
> > 
> > and modifying the "match anything but newline" as well.  It's also
> possible that the language spec says you must end a file with a 
> > newline--that used to be true of C--but I don't think that that is
> the case.
> > 
> > --Loring
> > 
> > 
> > --- In antlr-interest@yahoogroups.com, "cliftonccraig" <ccc@i...>
wrote:
> > > Hello all,
> > > 
> > > I am a novice at ANTLR and have managed to get a Java source code
> > > augmenting tool working after reading the article on
> > > TokenStreamRewriting. What I'm having trouble with is the Java
grammar
> > > that I've modified from the ANTLR site. In order to get my augmenter
> > > working I had to modify the JavaLexer and tell it not to ignore
> > > whitespace and single line comments. I needed these tokens to flow
> > > through to the rewrite engine. Now I have a scenario where a Java
> > > source file is terminated with a single line comment"//". This seems
> > > to confuse the Lexer and cause an OutOfMemory error. Could one
of you
> > > gurus help me tweak the grammar to avoid this? I'm not sure if I
> > > should code an alternate for the single line comment rule like this:
> > > 
> > > // Single-line comments
> > > SL_COMMENT
> > > 	:	"//"
> > > 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> > > 		{
> > > //*CCC- Allow comments to flow through to the rewrite engine
> > > //		    $setType(Token.SKIP);
> > > 		    newline();
> > > 		}
> > >                 |
> > >                 "//" EOF
> > > 	;
> > > or even if that makes sense. I was also considering removing the
> > > newline characters from the definition but I don't know what kind of
> > > side effects that would have on the grammar. I'm just too nervous to
> > > disturb the original grammar too much without know what's going
> on. Help! 
> > > 
> > > Thanks in advance,
> > > Cliff



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Tue Mar  9 06:26:38 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2kj49+41bi@eGroups.com>
References: <c2kice+hhri@eGroups.com> <c2kj49+41bi@eGroups.com>
Message-ID: <20040309142638.GC26038@cs.utwente.nl>

On Tue, Mar 09, 2004 at 02:08:09PM -0000, cliftonccraig wrote:
> I just tried this:
> SL_COMMENT
> 	:	"//"
> 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> 		{
> //*CCC- Allow comments to flow through to the rewrite engine
> //		    $setType(Token.SKIP);
> 		    newline();
> 		}
> 		|
> 		"//" (~('\n'|'\r'))*
> 	;

How about this? 

SL_COMMENT
   :  "//" 
      ( ~('\n'|'\r') )*                         // not a newline part...
      ( ('\n'|'\r'('\n')? { newline(); } ) )?   // optional newline
   ;

If this gives trouble generate the lexer with -traceLexer and see where it
gets stuck. (or check with debugger)

There's a few dirty tricks you can do with EOF checks that work by checking
LA(i) for EOF in the init action of a closure rule, but I don't think these
should be necessary for this. (unless I'm missing the point somewhere)

> And I got an warning saying:
> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235: warning:lexical
> nondeterminism between alts 1 and 2 of block upon
> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==1:'/'
> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==2:'/'
> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> k==3:'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> k==4:<end-of-token>,'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'

Don't worry too much about warnings like these ;) Read the source for what
antlr generated for the rule and it often becomes obvious if the
parser/lexer will do the right thing. (and it helps in getting a feel for
things)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 Time what is time - I wish I knew how to tell You why - It hurts to know -
          Aren't we machines - Time what is time - Unlock the door
               - And see the truth - Then time is time again
                From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ccc at icsaward.com  Tue Mar  9 08:25:17 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <20040309142638.GC26038@cs.utwente.nl>
Message-ID: <c2kr5e+nife@eGroups.com>

Thanks Ric,

Still no luck. I tried your suggestion and while it went through the
ANTLR generator ok it didnt stop the OutOfMemory error. It appears my
parser is still getting hung up on the last line being a single
comment. I'm trying another ugly solution to my problem that is not
ANTLR related and maybe someone can help me here. I am trying to
append a newline character to each stream fed into my parser but I'm
not satisfied with what I have. I created an AppendInputStream that
extends a filtered stream. I need this to perform as fast as possible
and I didn't find anything in the JDK that looked like it would help.
Basically what I want to do is wrap the FileInputStream that I give my
parser in my custom AppendInputStream and hand it off like so:
Reader r = new InputStreamReader( new AppendInputStream( new
FileInputStream(javaFile), "\r\n" ) )

It sounds like overkill but I just don't see any easier way to do
this. I thought I saw a way to chain or concatenate to InputStreams
together as one in some book or article but I can't remember. Please,
could someone help me with either solution. I feel so stumped.

Cliff

The source to my AppendInputStream is below:
    private static class AppendInputStream extends FilterInputStream
    {
        InputStream additional;
        private static final int EOF = -1;
        private boolean endOfFirst = false, firstMarked = false,
secondMarked = false;
        private int markCount = 0, markLimit = 0;

        public AppendInputStream(InputStream in, String additional)
        {
            this(in,additional.getBytes());
        }

        protected AppendInputStream(InputStream in, byte[] add)
        {
            this(in, new ByteArrayInputStream(add));
        }

        protected AppendInputStream(InputStream in, InputStream add)
        {
            super(in);
            additional = add;
        }

        public int read() throws IOException
        {
            int val = EOF;
            if (false==endOfFirst)
            {
                val = super.read();
            }
            if (EOF != val)
            {
                trackMarking(1);
                return val;
            }
            else
            {
                endOfFirst = true;
                conditionallyMark();
                return additional.read();
            }
        }

        public int read(byte b[]) throws IOException
        {
            return read(b, 0, b.length);
        }

        public int read(byte b[], int off, int len) throws IOException
        {
            if(off + len > b.length)
                throw new IndexOutOfBoundsException("Cannot read " +
len + " bytes from offset " + off + " in array of length " +
b.length);
            int val = EOF;
            if (false==endOfFirst)
            {
                val = super.read(b, off, len);
                trackMarking(val);
            }
            if (EOF != val)
            {
                if( len > val )
                {
                    endOfFirst = true;
                    val += readAdditional(b, val + off, len - val);
                }
            }
            else
            {
                endOfFirst = true;
                val = readAdditional(b, 0, b.length);
            }
            return val;
        }

        /**
         * Keep track of the # of bytes read into our marking.
         * @param val
         */
        private void trackMarking(int val)
        {
            if(firstMarked) markCount += val;
        }

        private int readAdditional(byte[] b, int off, int len) throws
IOException
        {
            conditionallyMark();
            return additional.read(b, off, len);
        }

        private void conditionallyMark()
        {
            //Just-in-time marking. If the 1st is marked but the 2nd
hasn't been marked
            //and have haven't read past our mark limit we mark it
right before our 1st
            //attempt to read into it.
            if(firstMarked && false==secondMarked && markLimit -
markCount > 0)
            {
                additional.mark(markLimit - markCount);
                secondMarked = true;
            }
        }

        public int available() throws IOException
        {
            if (endOfFirst)
            {
                return additional.available();
            }
            else
            {
                return super.available();
            }
        }

        public void close() throws IOException
        {
            super.close();
            additional.close();
        }

        public synchronized void mark(int readlimit)
        {
            markLimit = readlimit;
            if(endOfFirst && false==firstMarked &&
false==secondMarked)
            {
                additional.mark(readlimit);
                secondMarked = true;
            }
            else
            {
                super.mark(readlimit);
                firstMarked = true;
            }
        }

        public boolean markSupported()
        {
            return super.markSupported() && additi
onal.markSupported();
        }

        public synchronized void reset() throws IOException
        {
            if(firstMarked)
            {
                super.reset();
                firstMarked = false;
            }
            markCount = 0; markLimit = 0;

            if (secondMarked)
            {
                additional.reset();
            }
        }

        public long skip(long n) throws IOException
        {
            if(endOfFirst)
                return additional.skip(n);
            else
                return super.skip(n);
        }
    }


--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Tue, Mar 09, 2004 at 02:08:09PM -0000, cliftonccraig wrote:
> > I just tried this:
> > SL_COMMENT
> > 	:	"//"
> > 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> > 		{
> > //*CCC- Allow comments to flow through to the rewrite engine
> > //		    $setType(Token.SKIP);
> > 		    newline();
> > 		}
> > 		|
> > 		"//" (~('\n'|'\r'))*
> > 	;
> 
> How about this? 
> 
> SL_COMMENT
>    :  "//" 
>       ( ~('\n'|'\r') )*                         // not a newline
part...
>       ( ('\n'|'\r'('\n')? { newline(); } ) )?   // optional newline
>    ;
> 
> If this gives trouble generate the lexer with -traceLexer and see
where it
> gets stuck. (or check with debugger)
> 
> There's a few dirty tricks you can do with EOF checks that work by
checking
> LA(i) for EOF in the init action of a closure rule, but I don't
think these
> should be necessary for this. (unless I'm missing the point
somewhere)
> 
> > And I got an warning saying:
> > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235: warning:lexical
> > nondeterminism between alts 1 and 2 of block upon
> > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==1:'/'
> > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==2:'/'
> > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> > k==3:'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
> > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> >
k==4:<end-of-token>,'\u0003'..'\t','\u000b','\u000
c','\u000e'..'\uffff'
> 
> Don't worry too much about warnings like these ;) Read the source
for what
> antlr generated for the rule and it often becomes obvious if the
> parser/lexer will do the right thing. (and it helps in getting a
feel for
> things)
> 
> Cheers,
> 
> Ric
> -- 
>
-----+++++****************************************
*************+++++++++-------
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
>
-----+++++****************************************
*************+++++++++-------
>  Time what is time - I wish I knew how to tell You why - It hurts to
know -
>           Aren't we machines - Time what is time - Unlock the door
>                - And see the truth - Then time is time again
>                 From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue Mar  9 09:54:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:29 2004
Subject: New antlr-interest member
Message-ID: <1078854870.81.57783.w75@yahoogroups.com>


Hello,

This is an automated email message to let you know that
kktec69 <kktec69@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From parrt at cs.usfca.edu  Tue Mar  9 10:00:33 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADB6@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADB6@lnml1.eca-international.local>
Message-ID: <A8E44A6C-71F3-11D8-8C5A-000A95891192@cs.usfca.edu>

Howdy.  Yeah, I'm still thinking that BSD is the least restrictive and  
yet makes some lawyers feel better.

Thanks,
Ter

On Mar 9, 2004, at 3:49 AM, Anthony Youngman wrote:

> Two comments about licencing ...
>
> Why not look at one of the biggest Open Source projects out there?
> namely linux <vbg/>
>
> And what's wrong with the *L*GPL? I can't tell Ter what to do with his
> stuff, but as a small-time programmer, it would be my licence of  
> choice.
> And I don't see why my employers can't take advantage of it if they
> wish.
>
> Cheers,
> Wol
>
> -----Original Message-----
> From: cj_daly [mailto:cj_daly@yahoo.com]
> Sent: 08 March 2004 20:52
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
>
> Here are a few:
>
> 0) (I thought of this last but I'm adding it at the beginning because
> it's so important to me!).  Those of us wanting to use Antlr within a
> corporate environment have to do something to make the laywers happy.
>  I think the singlemost important thing you can do here is to have a
> mechanism for registering contributers.  Each contributer should be
> reachable (email is fine but the more contact info you have the
> better) and should have made some kind of affirmation that they agree
> with the license (this affirmation could be an email that you print
> and save, but a signed form faxed or snail-mailed would be even  
> better).
>
> I suggest looking at some of the bigger open source projects like
> Mozilla or Eclipse or Apache to see what mechanisms and forms they use.
>
> Laywers would be even happier if the contributers all assign their
> copyrights to one person (i.e. Terence) or entity (like U of S.F.) but
> I don't think this is necessary as long as all of the contributers are
> contactable (and there aren't so many that it becomes extremely
> difficult to contact them all).
>
> Beyond that, you mentioned before that you are considering BSD as the
> license.  That would work for me.  GPL or LGPL would totally disallow
> me from using Antlr.  CPL (the license Eclipse uses) would be ideal
> for me but BSD is very doable.
>
>
>
> *********************************************************************** 
> ************
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you  
> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
> *********************************************************************** 
> ************
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 10:01:31 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <20040309142638.GC26038@cs.utwente.nl>
References: <c2kice+hhri@eGroups.com> <c2kj49+41bi@eGroups.com> <20040309142638.GC26038@cs.utwente.nl>
Message-ID: <CBB01E1A-71F3-11D8-8C5A-000A95891192@cs.usfca.edu>

Just to make sure everybody's aware, this EOF issue is already on my  
"stuff I don't like about ANTLR 2 list" ;)

Ter

On Mar 9, 2004, at 6:26 AM, Ric Klaren wrote:

> On Tue, Mar 09, 2004 at 02:08:09PM -0000, cliftonccraig wrote:
>> I just tried this:
>> SL_COMMENT
>> 	:	"//"
>> 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
>> 		{
>> //*CCC- Allow comments to flow through to the rewrite engine
>> //		    $setType(Token.SKIP);
>> 		    newline();
>> 		}
>> 		|
>> 		"//" (~('\n'|'\r'))*
>> 	;
>
> How about this?
>
> SL_COMMENT
>    :  "//"
>       ( ~('\n'|'\r') )*                         // not a newline  
> part...
>       ( ('\n'|'\r'('\n')? { newline(); } ) )?   // optional newline
>    ;
>
> If this gives trouble generate the lexer with -traceLexer and see  
> where it
> gets stuck. (or check with debugger)
>
> There's a few dirty tricks you can do with EOF checks that work by  
> checking
> LA(i) for EOF in the init action of a closure rule, but I don't think  
> these
> should be necessary for this. (unless I'm missing the point somewhere)
>
>> And I got an warning saying:
>> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235: warning:lexical
>> nondeterminism between alts 1 and 2 of block upon
>> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==1:'/'
>> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==2:'/'
>> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:
>> k==3:'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
>> D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:
>> k==4:<end-of- 
>> token>,'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
>
> Don't worry too much about warnings like these ;) Read the source for  
> what
> antlr generated for the rule and it often becomes obvious if the
> parser/lexer will do the right thing. (and it helps in getting a feel  
> for
> things)
>
> Cheers,
>
> Ric
> -- 
> ----- 
> +++++*****************************************************+++++++++---- 
> ---
>     ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722   
> ----
> ----- 
> +++++*****************************************************+++++++++---- 
> ---
>  Time what is time - I wish I knew how to tell You why - It hurts to  
> know -
>           Aren't we machines - Time what is time - Unlock the door
>                - And see the truth - Then time is time again
>                 From: 'Time what is Time' by Blind Guardian
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 10:39:19 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
Message-ID: <13691EDB-71F9-11D8-8C5A-000A95891192@cs.usfca.edu>

Folks,

Keep that hate mail coming ;)  Thanks for all the words of 
encouragement also :)  I have updated the page to include your 
comments:

http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Tue Mar  9 10:51:25 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <72C9789739C4214096AE945753B11EA3FABDFC@mypxmail04.bco-home.com>

The best thing I can think of for you can do is to keep track of your
questions, preferably in one place so when someone sits down to write the
O'Reilly book we'll have a good list to start from.  

Perhaps you have archived your emails?  I'm not ready to try to organize all
that right now, but someday one of us will be.  When Terence, Loring and I
got together about ANTLR 3 the two questions were "What do people want to
do?" and "How can we best make it easy to use?"--which to me includes
documentation, explanation, FAQs, all that stuff.  

Myself, I tend to answer email questions, but the really big questions like
what should my tree look like or how to optimize are things I can't answer
with much detail in half an hour and currently I don't have the time to
write those kinds of guides.

Yeah, the other question was "Why don't people get this?"  Tree building,
tree parsing, left factoring, we're looking for the stumbling blocks but we
don't see them because we already "Get it."

When I sit down to write the best thing I could have in front of me would be
a diary of "aha"s.  What did you learn, what did you think before you
learned it?  How could it be introduced better for your learning style?

I understand you have frustrations, getting more specific details really
would help us target our efforts.  

Monty

-----Original Message-----
From: Anthony Youngman [mailto:Anthony.Youngman@ECA-International.com] 
Sent: Tuesday, March 09, 2004 3:19 AM
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] nesting rules, getting rule text

The problem I find is actually FINDING all this stuff. I have a bit of
an aversion to hypertext, much prefer a linear hard copy in front of me,
and find RMS's addiction to "info" for GNU documentation highly
offensive ...

Anyway, enough of the rant ... and I know - the rule is "if you want it,
why don't you write it", but a FAQ, clearly signposted, that consists of
a mildly complicated, highly documented, teaching grammar would be well
received. There are some wonderful resources out there, but IME it's
been a case of either pointers to "get you started" stuff, or a case of
"look at the supplied grammars" (but which one do I want to study for a
"teach yourself" course?).

I'm not saying there isn't anything out there, but I am frustrated time
and time again in that I seem to find either elementary stuff aimed at
newbies, or reference stuff aimed at experts. It's almost impossible to
find stuff aimed at the "I know you're experienced but have never met
this before" level guy. When I started programming in C I went on a
"Beginning C for experienced programmers" course - the prerequisite
being you had to know one - any - computer language well but were
presumed to know nothing about C at all. Where do you find stuff like
that?

Cheers,
Wol
...


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Tue Mar  9 10:53:13 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: expecting IDENT, found 'x'
In-Reply-To: <3088879CDDA4D7118C1E00508B44A7A708BA29@WALDORF>
References: <3088879CDDA4D7118C1E00508B44A7A708BA29@WALDORF>
Message-ID: <16462.4761.697154.593400@despot.non.net>

'netiquette nanny says: Top posting is Evil(tm)!
'netiquette nanny says: Trim those posts!

>>>>> "Mark" == Mark Buckle <mark.buckle@intechsolutions.co.uk> writes:
[...]

> BTW what is sematic predicate hoisting ?

"Hoisting" is the act of pulling a decision up from a sub-rule into a
decision point being made in one of the parent rules.

Hoisting semantic predicates just means that the type of decision that's
been hoisted is a disambiguating semantic decision.


Basically, the point with hoisting is that you, as the grammar writer, want
to be able to express the grammar with clarity and have the generator be
smart enough to condense the actual decision making for concision.

There are some cases in grammars using Antlr v2.x where we have to do some
funky gyrations in the grammar to make the decisions work correctly.

Hope this helps,
		John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 11:04:46 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] nesting rules, getting rule text
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADB5@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADB5@lnml1.eca-international.local>
Message-ID: <A1767A0E-71FC-11D8-8C5A-000A95891192@cs.usfca.edu>

Hi Anthony,

As monty said, it'd be great to get a list of those questions... Can  
you summarize your thoughts?  I promise to use them appropriately even  
if it takes me a bit.

Have you seen the "add C++ style templates to Java" USF CS652 project  
with solution?  That could be useful.  There are a number of projects  
and labs on my USF site that perhaps are not visible enough.

Have you seen the really cool PS interpreter and viewer lab?  All my  
labs are bite-size chunks designed to be finished in 1:45.  There is a  
cool byte-code interpreter lab as well.  Have you checked these out?   
See my next email about the new project. :)

Ter

On Mar 9, 2004, at 3:19 AM, Anthony Youngman wrote:

> The problem I find is actually FINDING all this stuff. I have a bit of
> an aversion to hypertext, much prefer a linear hard copy in front of  
> me,
> and find RMS's addiction to "info" for GNU documentation highly
> offensive ...
>
> Anyway, enough of the rant ... and I know - the rule is "if you want  
> it,
> why don't you write it", but a FAQ, clearly signposted, that consists  
> of
> a mildly complicated, highly documented, teaching grammar would be well
> received. There are some wonderful resources out there, but IME it's
> been a case of either pointers to "get you started" stuff, or a case of
> "look at the supplied grammars" (but which one do I want to study for a
> "teach yourself" course?).
>
> I'm not saying there isn't anything out there, but I am frustrated time
> and time again in that I seem to find either elementary stuff aimed at
> newbies, or reference stuff aimed at experts. It's almost impossible to
> find stuff aimed at the "I know you're experienced but have never met
> this before" level guy. When I started programming in C I went on a
> "Beginning C for experienced programmers" course - the prerequisite
> being you had to know one - any - computer language well but were
> presumed to know nothing about C at all. Where do you find stuff like
> that?
>
> Cheers,
> Wol
>
> -----Original Message-----
> From: mzukowski@yci.com [mailto:mzukowski@yci.com]
> Sent: 04 March 2004 17:57
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] nesting rules, getting rule text
>
> Yeah, it seems people need a guide to reading the code sometimes.  This
> stuff is in Ter's lectures, but maybe something that pointed out
> techniques
> used in the examples would be helpful too for those of you who just
> start
> hacking away?
>
> Monty
>
> -----Original Message-----
> From: Robin Debreuil [mailto:robin@debreuil.com]
> Sent: Thursday, March 04, 2004 9:49 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] nesting rules, getting rule text
>
> Great Monty, thanks - these little tips of yours are really helpful to
> those
> of us running blind here : ). I will structure things that way then...
>
> Cheers,
> Robin
>
>
> ----- Original Message -----
> From: <mzukowski@yci.com>
> To: <antlr-interest@yahoogroups.com>
> Sent: Thursday, March 04, 2004 11:25 AM
> Subject: RE: [antlr-interest] nesting rules, getting rule text
>
>
>> Yeah, typically you wouldn't nest at each DOT, you would have one root
> and
>> then all the DOT WHATEVERs as children.  The java grammar or C grammar
>> should have examples of this.
>>
>> Monty
>>
>> -----Original Message-----
>> From: Robin Debreuil [mailto:robin@debreuil.com]
>> Sent: Thursday, March 04, 2004 2:30 AM
>> To: antlr-interest@yahoogroups.com
>> Subject: Re: [antlr-interest] nesting rules, getting rule text
>>
>> Hmm, I got it to work like:
>>
>> primary_expression!
>> { AST curAst = null;}
>>  :    ps:primary_start
>>       {curAst = ps_AST;}
>>      (
>>          ma:member_access
>>             {     curAst.setFirstChild(ma_AST);
>>                    curAst=ma_AST;
>>             }
>>      )*
>>     {#primary_expression = #ps;}
>>  ;
>>
>> Maybe there is an easier way? Maybe I 'dont want' this in the first
>> place...?
>>
>> Cheers,
>> Robin
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
>
> *********************************************************************** 
> ************
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you  
> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
> *********************************************************************** 
> ************
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 11:05:04 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] new CS652 project: State Machines Galore
Message-ID: <AC915239-71FC-11D8-8C5A-000A95891192@cs.usfca.edu>

Howdy,

I've just posted a new project called "State Machines Galore" (not 
quite fully fleshed out...it will take me a few more days to really get 
explicit in the project):

http://www.cs.usfca.edu/~parrt/course/652/projects-Spring-2004/nfa.html

Basically the students will build a language for describing NFAs (as 
opposed to converting regex to NFAs) and then generate DOT/GraphViz 
pictures and then simulate.  Next they convert to DFAs, simulate, build 
a picture, and then generate Java code to emulate. :)

It is designed to introduce NFA/DFA and graph stuff while teaching 
language goodies:

	? 	grammar construction for an unusual language
	? 	 simple symbol table management and semantic error handling
	? 	 syntax-directed translation using a template engine 
(http://www.stringtemplate.org)
	? 	 recursive graph-algorithms
	? 	 code generation

The solution is illuminating and will be posted after they have 
completed the project.  Note that much of this project was research for 
ANTLR 3.0 including automatic GraphViz-based visual diagramming from 
grammars and generating state-machines in code rather than tables.  
I'll need this for my LL-regular stuff and for auto-left factoring 
etc...

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ccc at icsaward.com  Tue Mar  9 11:18:01 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2kr5e+nife@eGroups.com>
Message-ID: <c2l599+d8qd@eGroups.com>

I found some issues with my AppendInputStream. I'm including my
revised code. Once again, can anyone chime in and show me where I'm
re-inventing the wheel? Is there a simpler way to do what I'm doing?

Cliff

    static class AppendInputStream extends FilterInputStream
    {
        InputStream additional;
        private static final int EOF = -1;
        private boolean endOfFirst = false, firstMarked = false,
secondMarked = false;
        private int markCount = 0, markLimit = 0;

        public AppendInputStream(InputStream in, String additional)
        {
            this(in,additional.getBytes());
        }

        public AppendInputStream(InputStream in, byte[] add)
        {
            this(in, new ByteArrayInputStream(add));
        }

        public AppendInputStream(InputStream in, InputStream add)
        {
            super(in);
            additional = add;
        }

        public int read() throws IOException
        {
            int val = EOF;
            if (false==endOfFirst)
            {
                val = super.read();
            }
            if (EOF != val)
            {
                trackMarking(1);
                return val;
            }
            else
            {
                endOfFirst = true;
                conditionallyMark();
                return additional.read();
            }
        }

        public int read(byte b[]) throws IOException
        {
            return read(b, 0, b.length);
        }

        public int read(byte b[], int off, int len) throws IOException
        {
            if(off + len > b.length)
                throw new IndexOutOfBoundsException("Cannot read " +
len + " bytes from offset " + off + " in array of length " + b.length);
            int val = EOF;
            if (false==endOfFirst)
            {
                val = super.read(b, off, len);
            }
            if (EOF != val)
            {
                trackMarking(val);
                if( len > val )
                {
                    endOfFirst = true;
                    val += readAdditional(b, val + off, len - val);
                }
            }
            else
            {
                endOfFirst = true;
                val = readAdditional(b, off, len);
            }
            return val;
        }

        /**
         * Keep track of the # of bytes read into our marking.
         * @param val
         */
        private void trackMarking(int val)
        {
            if(firstMarked) markCount += val;
        }

        private int readAdditional(byte[] b, int off, int len) throws
IOException
        {
            conditionallyMark();
            return additional.read(b, off, len);
        }

        private void conditionallyMark()
        {
            //Just-in-time marking. If the 1st is marked but the 2nd
hasn't been marked
            //and have haven't read past our mark limit we mark it
right before our 1st
            //attempt to read into it.
            if(firstMarked && false==secondMarked && markLimit -
markCount > 0)
            {
                additional.mark(markLimit - markCount);
                secondMarked = true;
            }
        }

        public int available() throws IOException
        {
            if (endOfFirst)
            {
                return additional.available();
            }
            else
            {
                return super.available();
            }
        }

        public void close() throws IOException
        {
            super.close();
            additional.close();
        }

        public synchronized void mark(int readlimit)
        {
            markLimit = readlimit;
            if(endOfFirst && false==firstMarked && false==secondMarked)
            {
                additional.mark(readlimit);
                secondMarked = true;
            }
            else
            {
                super.mark(readlimit);
                firstMarked = true;
            }
        }

        public boolean markSupported()
        {
            return super.markSupported() && additional.markSupported();
        }

        public synchronized void reset() throws IOException
        {
            if(firstMarked)
            {
                super.reset();
                firstMarked = false;
            }
            markCount = 0; markLimit = 0;

            if (secondMarked)
            {
                additional.reset();
            }
        }

        public long skip(long n) throws IOException
        {
            if(endOfFirst)
                return additional.skip(n);
            else
                return super.skip(n);
        }
    }

--- In antlr-interest@yahoogroups.com, "cliftonccraig" <ccc@i...> wrote:
> Thanks Ric,
> 
> Still no luck. I tried your suggestion and while it went through the
> ANTLR generator ok it didnt stop the OutOfMemory error. It appears my
> parser is still getting hung up on the last line being a single
> comment. I'm trying another ugly solution to my problem that is not
> ANTLR related and maybe someone can help me here. I am trying to
> append a newline character to each stream fed into my parser but I'm
> not satisfied with what I have. I created an AppendInputStream that
> extends a filtered stream. I need this to perform as fast as possible
> and I didn't find anything in the JDK that looked like it would help.
> Basically what I want to do is wrap the FileInputStream that I give my
> parser in my custom AppendInputStream and hand it off like so:
> Reader r = new InputStreamReader( new AppendInputStream( new
> FileInputStream(javaFile), "\r\n" ) )
> 
> It sounds like overkill but I just don't see any easier way to do
> this. I thought I saw a way to chain or concatenate to InputStreams
> together as one in some book or article but I can't remember. Please,
> could someone help me with either solution. I feel so stumped.
> 
> Cliff
> 
> The source to my AppendInputStream is below:
>     private static class AppendInputStream extends FilterInputStream
>     {
>         InputStream additional;
>         private static final int EOF = -1;
>         private boolean endOfFirst = false, firstMarked = false,
> secondMarked = false;
>         private int markCount = 0, markLimit = 0;
> 
>         public AppendInputStream(InputStream in, String additional)
>         {
>             this(in,additional.getBytes());
>         }
> 
>         protected AppendInputStream(InputStream in, byte[] add)
>         {
>             this(in, new ByteArrayInputStream(add));
>         }
> 
>         protected AppendInputStream(InputStream in, InputStream add)
>         {
>             super(in);
>             additional = add;
>         }
> 
>         public int read() throws IOException
>         {
>             int val = EOF;
>             if (false==endOfFirst)
>             {
>                 val = super.read();
>             }
>             if (EOF != val)
>             {
>                 trackMarking(1);
>                 return val;
>             }
>             else
>             {
>                 endOfFirst = true;
>                 conditionallyMark();
>                 return additional.read();
>             }
>         }
> 
>         public int read(byte b[]) throws IOException
>         {
>             return read(b, 0, b.length);
>         }
> 
>         public int read(byte b[], int off, int len) throws IOException
>         {
>             if(off + len > b.length)
>                 throw new IndexOutOfBoundsException("Cannot read " +
> len + " bytes from offset " + off + " in array of length " +
> b.length);
>             int val = EOF;
>             if (false==endOfFirst)
>             {
>                 val = super.read(b, off, len);
>                 trackMarking(val);
>             }
>             if (EOF != val)
>             {
>                 if( len > val )
>                 {
>                     endOfFirst = true;
>                     val += readAdditional(b, val + off, len - val);
>                 }
>             }
>             else
>             {
>                 endOfFirst = true;
>                 val = readAdditional(b, 0, b.length);
>             }
>             return val;
>         }
> 
>         /**
>          * Keep track of the # of bytes read into our marking.
>          * @param val
>          */
>         private void trackMarking(int val)
>         {
>             if(firstMarked) markCount += val;
>         }
> 
>         private int readAdditional(byte[] b, int off, int len) throws
> IOException
>         {
>             conditionallyMark();
>             return additional.read(b, off, len);
>         }
> 
>         private void conditionallyMark()
>         {
>             //Just-in-time marking. If the 1st is marked but the 2nd
> hasn't been marked
>             //and have haven't read past our mark limit we mark it
> right before our 1st
>             //attempt to read into it.
>             if(firstMarked && false==secondMarked && markLimit -
> markCount > 0)
>             {
>                 additional.mark(markLimit - markCount);
>                 secondMarked = true;
>             }
>         }
> 
>         public int available() throws IOException
>         {
>             if (endOfFirst)
>             {
>                 return additional.available();
>             }
>             else
>             {
>                 return super.available();
>             }
>         }
> 
>         public void close() throws IOException
>         {
>             super.close();
>             additional.close();
>         }
> 
>         public synchronized void mark(int readlimit)
>         {
>             markLimit = readlimit;
>             if(endOfFirst && false==firstMarked &&
> false==secondMarked)
>             {
>                 additional.mark(readlimit);
>                 secondMarked = true;
>             }
>             else
>             {
>                 super.mark(readlimit);
>                 firstMarked = true;
>             }
>         }
> 
>         public boolean markSupported()
>         {
>             return super.markSupported() && additi
> onal.markSupported();
>         }
> 
>         public synchronized void reset() throws IOException
>         {
>             if(firstMarked)
>             {
>                 super.reset();
>                 firstMarked = false;
>             }
>             markCount = 0; markLimit = 0;
> 
>             if (secondMarked)
>             {
>                 additional.reset();
>             }
>         }
> 
>         public long skip(long n) throws IOException
>         {
>             if(endOfFirst)
>                 return additional.skip(n);
>             else
>                 return super.skip(n);
>         }
>     }
> 
> 
> --- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> > On Tue, Mar 09, 2004 at 02:08:09PM -0000, cliftonccraig wrote:
> > > I just tried this:
> > > SL_COMMENT
> > > 	:	"//"
> > > 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> > > 		{
> > > //*CCC- Allow comments to flow through to the rewrite engine
> > > //		    $setType(Token.SKIP);
> > > 		    newline();
> > > 		}
> > > 		|
> > > 		"//" (~('\n'|'\r'))*
> > > 	;
> > 
> > How about this? 
> > 
> > SL_COMMENT
> >    :  "//" 
> >       ( ~('\n'|'\r') )*                         // not a newline
> part...
> >       ( ('\n'|'\r'('\n')? { newline(); } ) )?   // optional newline
> >    ;
> > 
> > If this gives trouble generate the lexer with -traceLexer and see
> where it
> > gets stuck. (or check with debugger)
> > 
> > There's a few dirty tricks you can do with EOF checks that work by
> checking
> > LA(i) for EOF in the init action of a closure rule, but I don't
> think these
> > should be necessary for this. (unless I'm missing the point
> somewhere)
> > 
> > > And I got an warning saying:
> > > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235: warning:lexical
> > > nondeterminism between alts 1 and 2 of block upon
> > > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==1:'/'
> > > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:     k==2:'/'
> > > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> > > k==3:'\u0003'..'\t','\u000b','\u000c','\u000e'..'\uffff'
> > > D:\scm\tools\parsers\grammar\ANTLR\java.g:1235:    
> > >
> k==4:<end-of-token>,'\u0003'..'\t','\u000b','\u000
> c','\u000e'..'\uffff'
> > 
> > Don't worry too much about warnings like these ;) Read the source
> for what
> > antlr generated for the rule and it often becomes obvious if the
> > parser/lexer will do the right thing. (and it helps in getting a
> feel for
> > things)
> > 
> > Cheers,
> > 
> > Ric
> > -- 
> >
> -----+++++****************************************
> *************+++++++++-------
> >     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
> >
> -----+++++****************************************
> *************+++++++++-------
> >  Time what is time - I wish I knew how to tell You why - It hurts to
> know -
> >           Aren't we machines - Time what is time - Unlock the door
> >                - And see the truth - Then time is time again
> >                 From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mtiller at ford.com  Tue Mar  9 11:20:32 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB3401A1D293@na1fcm52.dearborn.ford.com>

I'd like the C++ runtime to use data structures that handle heterogenous tree construction better.  I gather the current approach is based on trying to mirror the Java side of things (at least that is what I recall Ric saying).  I think a more C++ish design is necessary.  I used heterogenous trees in my project and I don't regret it (in the sense that I strongly prefer heterogenous trees), but it sure was a pain to work through all the inheritance, reference counting, type casting, issues.

--
Mike

> -----Original Message-----
> From: Terence Parr [mailto:parrt@cs.usfca.edu]
> Sent: Tuesday, March 09, 2004 1:39 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] updated "antlr 2 bashing list"
> 
> 
> Folks,
> 
> Keep that hate mail coming ;)  Thanks for all the words of 
> encouragement also :)  I have updated the page to include your 
> comments:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> 
> Terence
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Tue Mar  9 11:27:05 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
Message-ID: <72C9789739C4214096AE945753B11EA3FABDFE@mypxmail04.bco-home.com>


> Keep that hate mail coming ;)

I really would like to be able to use a semantic predicate to break out of a
loop.

Monty


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 11:57:12 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDFE@mypxmail04.bco-home.com>
References: <72C9789739C4214096AE945753B11EA3FABDFE@mypxmail04.bco-home.com>
Message-ID: <F4DF7FAF-7203-11D8-8C5A-000A95891192@cs.usfca.edu>


On Mar 9, 2004, at 11:27 AM, mzukowski@yci.com wrote:

>
>> Keep that hate mail coming ;)
>
> I really would like to be able to use a semantic predicate to break 
> out of a
> loop.
>

Doesn't ( {foo}? blort )+ work?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 11:59:53 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:29 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB3401A1D293@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB3401A1D293@na1fcm52.dearborn.ford.com>
Message-ID: <54B50C66-7204-11D8-8C5A-000A95891192@cs.usfca.edu>

Added. :)  I suspect a thorough review of "natural" tree 
implementations and garbage collection issues should be done for 
various code generators.

I plan on having multiple "support levels" where each language target 
such as Java or C++ would support basic parsing, lexing as level 1 and 
then perhaps tree construction as level 2 then tree parsing etc...  The 
spec would say how trees behave but not how they are implemented.

Ter

On Mar 9, 2004, at 11:20 AM, Tiller, Michael (M.M.) wrote:

> I'd like the C++ runtime to use data structures that handle 
> heterogenous tree construction better.  I gather the current approach 
> is based on trying to mirror the Java side of things (at least that is 
> what I recall Ric saying).  I think a more C++ish design is necessary. 
>  I used heterogenous trees in my project and I don't regret it (in the 
> sense that I strongly prefer heterogenous trees), but it sure was a 
> pain to work through all the inheritance, reference counting, type 
> casting, issues.
>
> --
> Mike
>
>> -----Original Message-----
>> From: Terence Parr [mailto:parrt@cs.usfca.edu]
>> Sent: Tuesday, March 09, 2004 1:39 PM
>> To: antlr-interest@yahoogroups.com
>> Subject: [antlr-interest] updated "antlr 2 bashing list"
>>
>>
>> Folks,
>>
>> Keep that hate mail coming ;)  Thanks for all the words of
>> encouragement also :)  I have updated the page to include your
>> comments:
>>
>> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
>>
>> Terence
>> --
>> Professor Comp. Sci., University of San Francisco
>> Creator, ANTLR Parser Generator, http://www.antlr.org
>> Cofounder, http://www.jguru.com
>> Cofounder, http://www.knowspam.net enjoy email again!
>> Cofounder, http://www.peerscope.com pure link sharing
>>
>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Tue Mar  9 12:03:05 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
References: <13691EDB-71F9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <003a01c40611$8c21c2d0$0100a8c0@xpbaby>

Well, I like it a lot already - have to say that first : ).

One thing I find strange is using exceptions for flow control in the
generated code. I prefer exceptions to just be used for things you aren't
expecting in code, probably that is just a style thing though. Just this way
they seem to be much like gotos with global variables for state...

For the C# version, it would be really nice to use Enums for all the tokens,
or better yet, categories of them. It makes debugging much easier, and the
whole thing becomes a bit more 'solid'.

Above all though, it would be great to have more error information
available, both in the grammars and when running the generated code. The
program itself is designed to facilitate building that kind of thing into
languages, so it seems kind of like the cobblers kids going without shoes.
Maybe restrict what is valid syntax in a grammar and catch more common
errors. For the generated code, maybe a debug version - where it can tell
you things like the statement that it couldn't get past etc. Maybe even
things like setting breakpoints on input files.. Probably that would be
hard, but with all the guessing levels, gotos, exceptions, etc, it can get
pretty hard to trace. I may be overlooking a few exisiting techniques here
though, I'm pretty new to it.

Regardless, it is a great tool - the above would only make it easier (I
think anyway) to do what is already pretty easy, considering...

Cheers,
Robin




> Folks,
>
> Keep that hate mail coming ;)  Thanks for all the words of
> encouragement also :)  I have updated the page to include your
> comments:
>
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
>
> Terence
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Tue Mar  9 12:05:58 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
Message-ID: <72C9789739C4214096AE945753B11EA3FABDFF@mypxmail04.bco-home.com>

Oops, I mean a syntactic predicate?  The details are hazy, but I remember
wanting to code a loop that says "if you see this, then break out of the
loop", as opposed to the "if you see this then match the following rule."

Monty


-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: Tuesday, March 09, 2004 11:57 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] updated "antlr 2 bashing list"


On Mar 9, 2004, at 11:27 AM, mzukowski@yci.com wrote:

>
>> Keep that hate mail coming ;)
>
> I really would like to be able to use a semantic predicate to break 
> out of a
> loop.
>

Doesn't ( {foo}? blort )+ work?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 12:19:05 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDFF@mypxmail04.bco-home.com>
References: <72C9789739C4214096AE945753B11EA3FABDFF@mypxmail04.bco-home.com>
Message-ID: <036B069C-7207-11D8-8C5A-000A95891192@cs.usfca.edu>

On Mar 9, 2004, at 12:05 PM, mzukowski@yci.com wrote:

> Oops, I mean a syntactic predicate?  The details are hazy, but I 
> remember
> wanting to code a loop that says "if you see this, then break out of 
> the
> loop", as opposed to the "if you see this then match the following 
> rule."

Added to your hate list ;)  I hope that the LL-regular stuff will 
handle this.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue Mar  9 13:29:55 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <036B069C-7207-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c2ld0j+4dme@eGroups.com>

I agree wholeheartedly with Monty's request, but would generalize it a
bit.  If you rewrite loops as recursive constructs, syntactic
predicates work.  The broader goal should be that logically equivalent
constructs should behave similarly--refactorings need to be supported.

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> On Mar 9, 2004, at 12:05 PM, mzukowski@y... wrote:
> 
> > Oops, I mean a syntactic predicate?  The details are hazy, but I 
> > remember
> > wanting to code a loop that says "if you see this, then break out of 
> > the
> > loop", as opposed to the "if you see this then match the following 
> > rule."
> 
> Added to your hate list ;)  I hope that the LL-regular stuff will 
> handle this.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Tue Mar  9 14:46:41 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Troubel With Keywords / Whitespaces
In-Reply-To: <036B069C-7207-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <20040309224641.94034.qmail@web12704.mail.yahoo.com>

Hello,

I've run into a problem when I run the lexer generated
with the grammar which follows on, for instance, this
input stream:  'select foo bar bar selectbar foo'. 
Everything works ducky except that rather than
matching the 'REG_ID' rule, 'selectbar' matches the
'EAL_SELECT' rule followed by the "REG_ID' rule.  It's
obvious why this is happening but I can't figure out
the best way to fix it.  I know it's unusual to make
each Keyword a rule, but I make heavy use of semantic
predicates to determine whether a keyword has been
matched or not.  The only solution I've come up with
is to change 'select' to 'select ' but there's got to
be something better.  If anyone has any thoughts I'd
greatly appreciate it.

class TestLexer extends Lexer;

options
{
  k = 8;
  exportVocab=Test;
}

EAL_SELECT: "select"   { };

protected ALPHA_CHAR: ('a'..'z' | 'A'..'Z') { };
protected DIGIT: ('0'..'9');

REG_ID: ALPHA_CHAR ( ALPHA_CHAR | DIGIT )* { };

// Whitespace -- ignored
WS	:	
  (	' ' |	'\t' |	'\f' |	(options
{generateAmbigWarnings=false;}
			:	"\r\n" 
			|	'\r'   
			|	'\n'   
			)
			{ newline(); }
		)+
		{ _ttype = Token.SKIP; }
  ;

-jason

-jason

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 15:39:52 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
In-Reply-To: <003a01c40611$8c21c2d0$0100a8c0@xpbaby>
References: <13691EDB-71F9-11D8-8C5A-000A95891192@cs.usfca.edu> <003a01c40611$8c21c2d0$0100a8c0@xpbaby>
Message-ID: <0FF0F8A4-7223-11D8-8C5A-000A95891192@cs.usfca.edu>


On Mar 9, 2004, at 12:03 PM, Robin Debreuil wrote:

> Well, I like it a lot already - have to say that first : ).
>
> One thing I find strange is using exceptions for flow control in the
> generated code. I prefer exceptions to just be used for things you 
> aren't
> expecting in code, probably that is just a style thing though. Just 
> this way
> they seem to be much like gotos with global variables for state...

"Exceptions are for exceptional conditions and not for control-flow" is 
a great rule....unless you are automatically generating that code.  The 
syn pred mechanism is meant to be used sparingly because it has 
exponential complexity when they start to nest.  The extra catch 
overhead (which is only invoked upon failure) is not a huge part of 
that I'd wager.  Further, I find the try/catch more readable than say 
wrapping all method calls in

boolean failed = rule();
if ( failed ) { ... }

also makes it kind of hard to return values efficiently.   i agree that 
it might be interesting to look at the two different approaches.

I'm adding the rest to the list... thanks...

Ter

> For the C# version, it would be really nice to use Enums for all the 
> tokens,
> or better yet, categories of them. It makes debugging much easier, and 
> the
> whole thing becomes a bit more 'solid'.
>
> Above all though, it would be great to have more error information
> available, both in the grammars and when running the generated code. 
> The
> program itself is designed to facilitate building that kind of thing 
> into
> languages, so it seems kind of like the cobblers kids going without 
> shoes.
> Maybe restrict what is valid syntax in a grammar and catch more common
> errors. For the generated code, maybe a debug version - where it can 
> tell
> you things like the statement that it couldn't get past etc. Maybe even
> things like setting breakpoints on input files.. Probably that would be
> hard, but with all the guessing levels, gotos, exceptions, etc, it can 
> get
> pretty hard to trace. I may be overlooking a few exisiting techniques 
> here
> though, I'm pretty new to it.
>
> Regardless, it is a great tool - the above would only make it easier (I
> think anyway) to do what is already pretty easy, considering...
>
> Cheers,
> Robin
>
>
>
>
>> Folks,
>>
>> Keep that hate mail coming ;)  Thanks for all the words of
>> encouragement also :)  I have updated the page to include your
>> comments:
>>
>> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
>>
>> Terence
>> --
>> Professor Comp. Sci., University of San Francisco
>> Creator, ANTLR Parser Generator, http://www.antlr.org
>> Cofounder, http://www.jguru.com
>> Cofounder, http://www.knowspam.net enjoy email again!
>> Cofounder, http://www.peerscope.com pure link sharing
>>
>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Tue Mar  9 15:45:37 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <c2ld0j+4dme@eGroups.com>
References: <036B069C-7207-11D8-8C5A-000A95891192@cs.usfca.edu>
	<c2ld0j+4dme@eGroups.com>
Message-ID: <16462.22305.870773.264586@despot.non.net>

>>>>> "lgcraymer" == lgcraymer  <lgc@mail1.jpl.nasa.gov> writes:
[...]

> I agree wholeheartedly with Monty's request, but would generalize it a
> bit.  If you rewrite loops as recursive constructs, syntactic predicates
> work.  The broader goal should be that logically equivalent constructs
> should behave similarly--refactorings need to be supported.

++

John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue Mar  9 16:31:05 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: Troubel With Keywords / Whitespaces
In-Reply-To: <20040309224641.94034.qmail@web12704.mail.yahoo.com>
Message-ID: <c2lnk9+3a73@eGroups.com>

Jason--

In your EAL_SELECT, "select" is not matched as a literal--it is
matched as 's' 'e' 'l' 'e' 'c' 't'.

To get the behavior that you want, delete the EAL_SELECT rule and add
EAL_SELECT="select" to your "tokens" in the lexer.  Or use "select" in
your parser grammar

--Loring

--- In antlr-interest@yahoogroups.com, Jason <jasonriz@y...> wrote:
> Hello,
> 
> I've run into a problem when I run the lexer generated
> with the grammar which follows on, for instance, this
> input stream:  'select foo bar bar selectbar foo'. 
> Everything works ducky except that rather than
> matching the 'REG_ID' rule, 'selectbar' matches the
> 'EAL_SELECT' rule followed by the "REG_ID' rule.  It's
> obvious why this is happening but I can't figure out
> the best way to fix it.  I know it's unusual to make
> each Keyword a rule, but I make heavy use of semantic
> predicates to determine whether a keyword has been
> matched or not.  The only solution I've come up with
> is to change 'select' to 'select ' but there's got to
> be something better.  If anyone has any thoughts I'd
> greatly appreciate it.
> 
> class TestLexer extends Lexer;
> 
> options
> {
>   k = 8;
>   exportVocab=Test;
> }
> 
> EAL_SELECT: "select"   { };
> 
> protected ALPHA_CHAR: ('a'..'z' | 'A'..'Z') { };
> protected DIGIT: ('0'..'9');
> 
> REG_ID: ALPHA_CHAR ( ALPHA_CHAR | DIGIT )* { };
> 
> // Whitespace -- ignored
> WS	:	
>   (	' ' |	'\t' |	'\f' |	(options
> {generateAmbigWarnings=false;}
> 			:	"\r\n" 
> 			|	'\r'   
> 			|	'\n'   
> 			)
> 			{ newline(); }
> 		)+
> 		{ _ttype = Token.SKIP; }
>   ;
> 
> -jason
> 
> -jason
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Search - Find what you're looking for faster
> http://search.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue Mar  9 16:51:08 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <0FF0F8A4-7223-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c2lops+tt0k@eGroups.com>

Ter--

I hate to say it, but I think that that's a cop out.  Building
exception objects and stack frames costs, and there is no point when
in guessing mode.  They are also obnoxious when debugging (especially
C++) and hamper code generation for languages which do not have
exceptions.  It would be better to have a "synpredFailed flag as part
of the generated classes-the flag will always be in cache, so is not a
performance issue--or to have a return flag from rules and wrap rule
invocations (foo) in
if (foo() == false) return;

and add
if (guessing)
    return false;
else {
    <throw exception>
}

around the <throw exception>s in ANTLR.  Come to think of it,
implementing this with the current ANTLR runtime would be only about
10 lines of code or so (maybe a little more--I think that each
exception would have to be fixed separately).

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 9, 2004, at 12:03 PM, Robin Debreuil wrote:
> 
> > Well, I like it a lot already - have to say that first : ).
> >
> > One thing I find strange is using exceptions for flow control in the
> > generated code. I prefer exceptions to just be used for things you 
> > aren't
> > expecting in code, probably that is just a style thing though. Just 
> > this way
> > they seem to be much like gotos with global variables for state...
> 
> "Exceptions are for exceptional conditions and not for control-flow" is 
> a great rule....unless you are automatically generating that code.  The 
> syn pred mechanism is meant to be used sparingly because it has 
> exponential complexity when they start to nest.  The extra catch 
> overhead (which is only invoked upon failure) is not a huge part of 
> that I'd wager.  Further, I find the try/catch more readable than say 
> wrapping all method calls in
> 
> boolean failed = rule();
> if ( failed ) { ... }
> 
> also makes it kind of hard to return values efficiently.   i agree that 
> it might be interesting to look at the two different approaches.
> 
> I'm adding the rest to the list... thanks...
> 
> Ter
> 
> > For the C# version, it would be really nice to use Enums for all the 
> > tokens,
> > or better yet, categories of them. It makes debugging much easier,
and 
> > the
> > whole thing becomes a bit more 'solid'.
> >
> > Above all though, it would be great to have more error information
> > available, both in the grammars and when running the generated code. 
> > The
> > program itself is designed to facilitate building that kind of thing 
> > into
> > languages, so it seems kind of like the cobblers kids going without 
> > shoes.
> > Maybe restrict what is valid syntax in a grammar and catch more common
> > errors. For the generated code, maybe a debug version - where it can 
> > tell
> > you things like the statement that it couldn't get past etc. Maybe
even
> > things like setting breakpoints on input files.. Probably that
would be
> > hard, but with all the guessing levels, gotos, exceptions, etc, it
can 
> > get
> > pretty hard to trace. I may be overlooking a few exisiting techniques 
> > here
> > though, I'm pretty new to it.
> >
> > Regardless, it is a great tool - the above would only make it
easier (I
> > think anyway) to do what is already pretty easy, considering...
> >
> > Cheers,
> > Robin
> >
> >
> >
> >
> >> Folks,
> >>
> >> Keep that hate mail coming ;)  Thanks for all the words of
> >> encouragement also :)  I have updated the page to include your
> >> comments:
> >>
> >> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> >>
> >> Terence
> >> --
> >> Professor Comp. Sci., University of San Francisco
> >> Creator, ANTLR Parser Generator, http://www.antlr.org
> >> Cofounder, http://www.jguru.com
> >> Cofounder, http://www.knowspam.net enjoy email again!
> >> Cofounder, http://www.peerscope.com pure link sharing
> >>
> >>
> >>
> >>
> >>
> >>
> >> Yahoo! Groups Links
> >>
> >>
> >>
> >>
> >>
> >>
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Tue Mar  9 17:10:54 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: Troubel With Keywords / Whitespaces
In-Reply-To: <c2lnk9+3a73@eGroups.com>
Message-ID: <20040310011054.73821.qmail@web12701.mail.yahoo.com>

Loring,

Thanks for taking the time to reply.  The rule wasn't
actually:

EAL_SELECT: "select"   { };

but something like:

EAL_SELECT: {mState = INITAL || mState = IDLIST}? { };

The lex grammar I was using as my base, made heavy use
of flex's start states and I ported them to antlr
using semantic predicates, thus the need for the
explicit rule.  The real grammar (as opposed to the
one I included in my email) actually has about 80
similar rules.  In any case, I just moved them all to
the token sections.  What happens when things blow up
because I've lost the state information?  I'll cross
that bridge when I get to it :)

One general comment to no one in particular.  I
started with a pretty complicated pair of FLEX/BISON
grammars which I intended to 'port' to ANTLR.  In
practice the differing features/facilities of the two
have made this very difficult.  If I had it to do
over, I'd scratch the FLEX/Bison grammars and start
fresh with ANTLR right from the source description of
the language.

-jason


--- lgcraymer <lgc@mail1.jpl.nasa.gov> wrote:
> Jason--
> 
> In your EAL_SELECT, "select" is not matched as a
> literal--it is
> matched as 's' 'e' 'l' 'e' 'c' 't'.
> 
> To get the behavior that you want, delete the
> EAL_SELECT rule and add
> EAL_SELECT="select" to your "tokens" in the lexer. 
> Or use "select" in
> your parser grammar
> 
> --Loring
> 
> --- In antlr-interest@yahoogroups.com, Jason
> <jasonriz@y...> wrote:
> > Hello,
> > 
> > I've run into a problem when I run the lexer
> generated
> > with the grammar which follows on, for instance,
> this
> > input stream:  'select foo bar bar selectbar foo'.
> 
> > Everything works ducky except that rather than
> > matching the 'REG_ID' rule, 'selectbar' matches
> the
> > 'EAL_SELECT' rule followed by the "REG_ID' rule. 
> It's
> > obvious why this is happening but I can't figure
> out
> > the best way to fix it.  I know it's unusual to
> make
> > each Keyword a rule, but I make heavy use of
> semantic
> > predicates to determine whether a keyword has been
> > matched or not.  The only solution I've come up
> with
> > is to change 'select' to 'select ' but there's got
> to
> > be something better.  If anyone has any thoughts
> I'd
> > greatly appreciate it.
> > 
> > class TestLexer extends Lexer;
> > 
> > options
> > {
> >   k = 8;
> >   exportVocab=Test;
> > }
> > 
> > EAL_SELECT: "select"   { };
> > 
> > protected ALPHA_CHAR: ('a'..'z' | 'A'..'Z') { };
> > protected DIGIT: ('0'..'9');
> > 
> > REG_ID: ALPHA_CHAR ( ALPHA_CHAR | DIGIT )* { };
> > 
> > // Whitespace -- ignored
> > WS	:	
> >   (	' ' |	'\t' |	'\f' |	(options
> > {generateAmbigWarnings=false;}
> > 			:	"\r\n" 
> > 			|	'\r'   
> > 			|	'\n'   
> > 			)
> > 			{ newline(); }
> > 		)+
> > 		{ _ttype = Token.SKIP; }
> >   ;
> > 
> > -jason
> > 
> > -jason
> > 
> > __________________________________
> > Do you Yahoo!?
> > Yahoo! Search - Find what you're looking for
> faster
> > http://search.yahoo.com
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar  9 17:22:25 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <c2lops+tt0k@eGroups.com>
References: <c2lops+tt0k@eGroups.com>
Message-ID: <639AAFCE-7231-11D8-8C5A-000A95891192@cs.usfca.edu>


On Mar 9, 2004, at 4:51 PM, lgcraymer wrote:

> Ter--
>
> I hate to say it, but I think that that's a cop out.  Building
> exception objects and stack frames costs, and there is no point when
> in guessing mode.

This never happens unless you fail and is a minor cost compared to the 
cost of nested predicates, right?

>   They are also obnoxious when debugging (especially
> C++)

Doesn't bother me in Java, but other languages might be a drag.

I can investigate not using exceptions to see what the code looks like. 
  Actually somebody who has used JavaCC could tell us what it looks like 
;)  They do not use exceptions.

> and hamper code generation for languages which do not have
> exceptions.  It would be better to have a "synpredFailed flag as part
> of the generated classes-the flag will always be in cache, so is not a
> performance issue--or to have a return flag from rules and wrap rule
> invocations (foo) in
> if (foo() == false) return;
>
> and add
> if (guessing)
>     return false;
> else {
>     <throw exception>
> }
>
> around the <throw exception>s in ANTLR.  Come to think of it,
> implementing this with the current ANTLR runtime would be only about
> 10 lines of code or so (maybe a little more--I think that each
> exception would have to be fixed separately).

Uh...how you gonna redo return values in 10 lines ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Tue Mar  9 17:35:19 2004
From: brian-l-smith at uiowa.edu (brian-l-smith@uiowa.edu)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
In-Reply-To: <13691EDB-71F9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <13691EDB-71F9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <1078882519.404e70d73dd5e@webmail2.its.uiowa.edu>

Quoting Terence Parr <parrt@cs.usfca.edu>:

> Folks,
> 
> Keep that hate mail coming ;)  Thanks for all the words of 
> encouragement also :)  I have updated the page to include your 
> comments:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml

All the runtime error messages that generated lexers/parsers produce should be
localizable and just generally easily customizable.

- Brian




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue Mar  9 19:02:07 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <639AAFCE-7231-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c2m0ff+oiuh@eGroups.com>

True about the return values--the fail flag would have to be added as
a field in the parser/lexer/treewalker objects instead.  That's still
pretty minor.

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 9, 2004, at 4:51 PM, lgcraymer wrote:
> 
> > Ter--
> >
> > I hate to say it, but I think that that's a cop out.  Building
> > exception objects and stack frames costs, and there is no point when
> > in guessing mode.
> 
> This never happens unless you fail and is a minor cost compared to the 
> cost of nested predicates, right?
> 
> >   They are also obnoxious when debugging (especially
> > C++)
> 
> Doesn't bother me in Java, but other languages might be a drag.
> 
> I can investigate not using exceptions to see what the code looks like. 
>   Actually somebody who has used JavaCC could tell us what it looks
like 
> ;)  They do not use exceptions.
> 
> > and hamper code generation for languages which do not have
> > exceptions.  It would be better to have a "synpredFailed flag as part
> > of the generated classes-the flag will always be in cache, so is not a
> > performance issue--or to have a return flag from rules and wrap rule
> > invocations (foo) in
> > if (foo() == false) return;
> >
> > and add
> > if (guessing)
> >     return false;
> > else {
> >     <throw exception>
> > }
> >
> > around the <throw exception>s in ANTLR.  Come to think of it,
> > implementing this with the current ANTLR runtime would be only about
> > 10 lines of code or so (maybe a little more--I think that each
> > exception would have to be fixed separately).
> 
> Uh...how you gonna redo return values in 10 lines ;)
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dude at darkfigure.org  Tue Mar  9 21:04:02 2004
From: dude at darkfigure.org (Paul J. Lucas)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Popping a lexer upon EOF
Message-ID: <c2m7k2+90jh@eGroups.com>

According to the FAQ, "How do I handle #include files or other nested input streams?", it 
says in part:

When you see an #include, create a new lexer just like you've been doing (no parser), and 
then notify the TokenStreamSelector (push state and point at new lexer). At the close of 
the included stream, tell the selector to pop it's state.

The question is: how do you catch "the close of the included stream" in order to pop it's 
state?

- Paul



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From vehreschild at sc.rwth-aachen.de  Wed Mar 10 02:41:37 2004
From: vehreschild at sc.rwth-aachen.de (Andre Vehreschild)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Popping a lexer upon EOF
In-Reply-To: <c2m7k2+90jh@eGroups.com>
References: <c2m7k2+90jh@eGroups.com>
Message-ID: <200403101141.38872.vehreschild@sc.rwth-aachen.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

have a look at the example in $ANTLR_ROOT/examples/your_language/includeFile/

It is described pretty good in there! That example code did help me more then 
the documentation :-)

Greets,
	Andre
- -- 
Andre Vehreschild -- Institute for Scientific Computing, RWTH Aachen Univ.
mailto:vehreschild@sc.rwth-aachen.de , phone: ++49- 241- 80- 24874
GnuPG-key available at http://www.sc.rwth-aachen.de/vehreschild
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQFATvDhzVF62HujQtARAjThAJ9DBHaXxPQvG190m20L64EMbFKNYwCgkhya
KldENkHwbXGgoLEL2B+QKoo=
=j3Mk
-----END PGP SIGNATURE-----




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Wed Mar 10 03:21:17 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADC0@lnml1.eca-international.local>

What do you mean by "restrictive"? There are at least three groups of
people you need to consider, and you need to ask "which licence
restricts which group, and how?". The three groups of people are the
software writers, software distributors, and software users. The GPL is
very *user* friendly, closed source is *writer/distributor* friendly,
and other licences fall between the two. The BSD is pretty much the MOST
restrictive licence out there, if you view it from the writer's
viewpoint :-)

I think licences can be split into four groups, really.

1. The "don't sue me, but do as you like" group.

BSD, artistic, etc. Basically, they waive copyright restrictions, and
say to the user "you're on your own". Actually, Ter, I'd seriously look
at the Artistic licence. It's just as free with the *CODE* as the BSD,
but it's basically got a "don't piss me off or I'll take the *NAME*
away" clause. After all, you wouldn't be pleased if I took ANTLR,
modified it, sold it under the ANTLR name, and ruined your reputation.
Would you? For those customers who just want the code, there's no
difference between BSD and artistic. But for those people who rely on
the ANTLR name and trust your integrity, the artistic licence is much
better.

For example, when Artistic State released "Perl for Windows", everybody
just *knew* that MS had not pulled their "extend, ..." tricks because
the product was called Perl. Piss of Larry, and while the artistic
licence would not let him object to the *product*, he could make them
pull every reference to Perl from their literature...

2. The "I don't want your original code, but if you improve mine I want
it back" group.

As embodied in the *L*GPL - you have to keep my code separate from your
private code, but provided you keep your code separate with a clear
line, and make my code available, what you do to your code is your
business.

Basically, it prevents you taking my code proprietary and secret.

I'd be a lot happier if this was ANTLR's licence. A bit more hassle for
companies, and I suspect a lot of lawyers might need a visit with a
clue-by-four, but it really is a good, commercially friendly, licence.

3. The "I gave my code freely to you, you have to give yours back to me"
group.

The GPL! Actually, done properly, this is the most commercially friendly
open licence of all! Just ask MySQL, TrollTech, and probably a fair few
other companies. However, it's almost impossible to achieve "commercial
friendliness" unless this was planned from the beginning, so it's
invariably used by companies converting from closed source, and very few
others, if this is the aim. No use whatever to ANTLR.

4. Closed source.

As embodied in all sorts of EULAs, some nice, some horrible. Need I say
more?

Cheers,
Wol

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 09 March 2004 18:01
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Re: stuff I don't like about ANTLR 2.x

Howdy.  Yeah, I'm still thinking that BSD is the least restrictive and  
yet makes some lawyers feel better.

Thanks,
Ter

On Mar 9, 2004, at 3:49 AM, Anthony Youngman wrote:

> Two comments about licencing ...
>
> Why not look at one of the biggest Open Source projects out there?
> namely linux <vbg/>
>
> And what's wrong with the *L*GPL? I can't tell Ter what to do with his
> stuff, but as a small-time programmer, it would be my licence of  
> choice.
> And I don't see why my employers can't take advantage of it if they
> wish.
>
> Cheers,
> Wol
>
> -----Original Message-----
> From: cj_daly [mailto:cj_daly@yahoo.com]
> Sent: 08 March 2004 20:52
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
>
> Here are a few:
>
> 0) (I thought of this last but I'm adding it at the beginning because
> it's so important to me!).  Those of us wanting to use Antlr within a
> corporate environment have to do something to make the laywers happy.
>  I think the singlemost important thing you can do here is to have a
> mechanism for registering contributers.  Each contributer should be
> reachable (email is fine but the more contact info you have the
> better) and should have made some kind of affirmation that they agree
> with the license (this affirmation could be an email that you print
> and save, but a signed form faxed or snail-mailed would be even  
> better).
>
> I suggest looking at some of the bigger open source projects like
> Mozilla or Eclipse or Apache to see what mechanisms and forms they
use.
>
> Laywers would be even happier if the contributers all assign their
> copyrights to one person (i.e. Terence) or entity (like U of S.F.) but
> I don't think this is necessary as long as all of the contributers are
> contactable (and there aren't so many that it becomes extremely
> difficult to contact them all).
>
> Beyond that, you mentioned before that you are considering BSD as the
> license.  That would work for me.  GPL or LGPL would totally disallow
> me from using Antlr.  CPL (the license Eclipse uses) would be ideal
> for me but BSD is very doable.
>
>
>
>
*********************************************************************** 
> ************
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you

> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
>
*********************************************************************** 
> ************
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed Mar 10 03:49:06 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
In-Reply-To: <639AAFCE-7231-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <c2lops+tt0k@eGroups.com> <639AAFCE-7231-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <20040310114906.GF26038@cs.utwente.nl>

On Tue, Mar 09, 2004 at 05:22:25PM -0800, Terence Parr wrote:
> > I hate to say it, but I think that that's a cop out.  Building
> > exception objects and stack frames costs, and there is no point when
> > in guessing mode.

Have to agree with Loring here.

> This never happens unless you fail and is a minor cost compared to the
> cost of nested predicates, right?

Well in C++ you can compile without exception support which gives you a
faster and smaller binary, people in the embedded business might like that.
I'm not sure though wether I would support two versions of the runtime...

> Doesn't bother me in Java, but other languages might be a drag.

The argument for retargeting to a exceptionless generated code would also
make a C codegenerator an (easy) option. (Hmm wonder how far you'd get with
longjmp and co. talk about ugly...)

> I can investigate not using exceptions to see what the code looks like.
>   Actually somebody who has used JavaCC could tell us what it looks like
> ;)  They do not use exceptions.

What I recall of the code generated by ell from cocktail it's not that bad
although it seems to have an advantage due to its error recovery code. It
doesn't even return an error code for a rule. Basically it looks like
(simplified of course and a bit translated to antlr-ish data structures the
original uses C with a distinct modula2-to-C convertor taste)

void rule( Token incomingtoken, BitSet recoverySet )
{
   Token someTokenInRule;
   Token someOtherTokenInRule;

	for(;;) {
		if( curToken.getType() == .. ) { }
		if( curToken.getType() == .. ) { }
		unexpectedTokenHandler( recoverySet );
	}
	unexpectedTokenHandler( anotherRecoverySet );
}

It would use labels and goto's to jump over unexpectedHandlers but that's
something that could be done differently. Similar to our guessing mode
counter it has a RepairMode flag which is set when the parser is
inserting/skipping tokens to get to a restart point. At certain points
repairmode is reset (probably for the rules that are at restart points).
Sometimes inside rules some extra checks for repairmode and recovery are
inserted. In between rule invocations the recovery sets are 'tweaked' (all
simple index updating). There are a few flavours of unexpectedTokenHandlers
used (think mostly to handle negated bitsets).

The unexpectedTokenHandler calls would correspond to antlr's catch blocks
and to some extend match calls. I guess the guessing could also be wrapped
into them. Most (all more likely) guessing handling could be done in antlr
with shuffling around a few if/else parts. Maybe add a stack of active
predicates (to replace the guessing counter) then maintain the stack during
guessing and you can even keep track of what predicate failed where. Or
make the predicate a parameter to the rule.

> > and hamper code generation for languages which do not have
> > exceptions.  It would be better to have a "synpredFailed flag as part
> > of the generated classes-the flag will always be in cache, so is not a
> > performance issue--or to have a return flag from rules and wrap rule
> > invocations (foo) in
> > if (foo() == false) return;
> >
> > and add
> > if (guessing)
> >     return false;
> > else {
> >     <throw exception>
> > }
> >
> > around the <throw exception>s in ANTLR.  Come to think of it,
> > implementing this with the current ANTLR runtime would be only about
> > 10 lines of code or so (maybe a little more--I think that each
> > exception would have to be fixed separately).
>
> Uh...how you gonna redo return values in 10 lines ;)

I don't think you'd even need return values (other than how we use them
already for rule return values). An error attribute on the parser class
would probably already do the trick or a queue of them. Or suppose you'd
use something like:

rule { int val; } :
	( NUM NUM NUM (ID|COMMA) ) => val=someRule
	| NUM NUM NUM
;

-- start of predicate test --
Predicate p = new Predicate("NUM NUM NUM (ID|COMMA)");
val = someRule( p )
if( p.failed() )
 ...
-- end --

In the rule itself

----snip----
int someRule( Predicate p ) {
 ...
 if( p != null )  // equivalent to our inputState.guessing != 0
----snip----

When nested predicates occur you could create a linked list of predicates
giving you a fail trace. Or just pass the failed status. If you tinker with
the predicate class you can probably do some nice stuff too (debugging vs.
production code version).

The average syntactic predicate check now looks like:

--------snip--------
         boolean synPredMatched6 = false;
         if (((LA(1)==TK_int||LA(1)==TK_char||LA(1)==ID))) {
            int _m6 = mark();
            synPredMatched6 = true;
            inputState.guessing++;
            ///// doesn't this bit look a bit excessive ? ///////////
				try {
               {
                  variable();
                  otherrule();
                  otherrule();
                  match(SOME_TOKEN);
               }
            }
            catch (RecognitionException pe) {
               synPredMatched6 = false;
            }
            /////////////////////////////////////////////////////////
            rewind(_m6);
            inputState.guessing--;
         }
         if ( synPredMatched6 ) {
            variable();
         }
--------snip--------

The exception is always caught in the level directly above the call. So a
bunch of if-else-if's would be just as practical.

In C++ mode the approach with the predicate class could be quite nice. I
could probably do the mark/rewind stuff in the constructor/destructor and
get automatic rewinding for free (and exception safe to boot). Java is out
of luck there though ;)

Another option is to generate rules like:

RULE_RETURN_VALUE_TYPE
   someRule( InternalReturnValue ret, Predicate p, <other rule params>  )
{
 ...
}

or

InternalReturnValue
   someRule( RULE_RETURN_VALUE_TYPE ret, Predicate p, <other rule params>  )
{
 ...
}

In java you'd have to use an Integer wrapper or something for the internal
return value.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Wo das Chaos auf die Ordnung trifft, gewinnt meist das Chaos, weil es
  besser organisiert ist. --- Friedrich Nietzsche



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Wed Mar 10 04:05:44 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: updated "antlr 2 bashing list"
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADC1@lnml1.eca-international.local>

And no I am not suggesting we add PL/1 support ...

Exceptions are not handled consistently across languages. I think the
PL/1 mechanism is quite good (not that I've ever used PL/1 much), and
when a handler is invoked you basically get three choices - (1) fix the
problem and go back where you came from or (2) abort the program or (3)
"continue to signal" ie rethrow the exception and see if there's another
handler that can cope. That doesn't sound like Java-style to me at
all...

So really, what I'm saying, is that using exceptions is a bad idea. It's
bad enough restricting yourself to languages that support exceptions,
but you're restricting yourself to languages that support your kind of
exceptions. I'm a C / DATABASIC programmer by trade, neither of which
are OO languages, and I don't want to try for a paradigm shift only to
discover that my version of the new paradigm isn't supported :-)

Cheers,
Wol

-----Original Message-----
From: Ric Klaren [mailto:klaren@cs.utwente.nl] 
Sent: 10 March 2004 11:49
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Re: updated "antlr 2 bashing list"

On Tue, Mar 09, 2004 at 05:22:25PM -0800, Terence Parr wrote:
> > I hate to say it, but I think that that's a cop out.  Building
> > exception objects and stack frames costs, and there is no point when
> > in guessing mode.

Have to agree with Loring here.

> This never happens unless you fail and is a minor cost compared to the
> cost of nested predicates, right?

Well in C++ you can compile without exception support which gives you a
faster and smaller binary, people in the embedded business might like
that.
I'm not sure though wether I would support two versions of the
runtime...

> Doesn't bother me in Java, but other languages might be a drag.

The argument for retargeting to a exceptionless generated code would
also
make a C codegenerator an (easy) option. (Hmm wonder how far you'd get
with
longjmp and co. talk about ugly...)



***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed Mar 10 04:25:47 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <20040310122547.GG26038@cs.utwente.nl>

On Sat, Mar 06, 2004 at 12:05:24PM -0800, Terence Parr wrote:
> Feel free to send in your pet peeves to me or to this list.  I will try
> to add to this file.

Part 2:

- Clear semantics for things like:

  ( { x < 4 }? myRule )*
  ( { x < 4 }? myRule )+

- Clear documented semantics for the scope of a variable defined in actions:

    (  { int somevar; }

    )*

  Or:

    (  { int somevar; } :

    )*

  Or dirty stuff like:

    (  { if( i > 10 ) break;  } :
      someRule
    )*

    (  { if( i > 10 ) throw ....;  } :
      someRule
    )*

  Or a statement like 'You're on your own!'.

- Consistent importVocab/exportVocab behaviour when the lexer/parser are in
  the same file and in the separate files cases.

- it would be nice if ANTLR would examine dependent grammars and remake them
  if needed. Would probably require some extra options for specifying the
  search path for grammars/vocabs. (we definitely need more control for
  this as someone else pointed out as well)

- It would be nice if ANTLR3 was designed from the outset for heterogeneous
  AST and Token support. In antlr2 this was not the case and it shows.

- I would love a shorthand syntax for:

  ( stuff ) ( DELIMITER stuff )*

  Where delimiter is usual a single token or a set of tokens. The advantage
  is that the action code for stuff can be the same. In the current
  implementation you have to keep some near identical bits of code
  synchronized with the occasional copy paste error resulting from that.

  ell used a syntax like ( stuff || DELIMITER )* or something along those
  lines.

- It would be nice if antlr would warn for common mistakes like 
  rule* in stead of ( rule )*
  
Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "I think we better split up."
  "Good idea. We can do more damage that way."
  --- Ghostbusters



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bob.donovan at ugsplm.com  Wed Mar 10 07:26:54 2004
From: bob.donovan at ugsplm.com (Donovan, Bob)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Antlr exceptions
Message-ID: <BA38992C3BC5B543BEE63132C4B45AF76EFFBA@uscimplm001.net.plm.eds.com>

Hi,

In my parser, I am collecting all errors generated from the parser so that I can present them in a view after the parse is complete. I have extended the CommonToken class with an ExtentToken tracks columns, rows, etc of each token.

I noticed that only the MismatchedTokenException and the NoViableAltException have a variable that holds a token:
public antlr.Token token;

which I can use to retrieve the token.

Are these the only two subclasses of ANTLRException that I need to be concerned about that return a Token? Or do I need to get tokens from the other exceptions? I want to make sure that I am capturing all errors generated along with where in the file they occur?

Bob


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jsrs701 at yahoo.com  Wed Mar 10 09:07:43 2004
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Runtime trouble with 2.7.3 on MSVC
Message-ID: <c2ni0v+eb9m@eGroups.com>

Hi gang,

This has probably been beaten to death by now, but I've been off the 
list for a while.

I recently built a simple project using 2.7.2 on Visual Studio 2003 
(that hosts MSVC 7.1), and everything compiled just fine.  But I got 
weird runtime errors, things faulting in the middle of the STL vector 
class.

I upgraded to Ric's 20040225 build (a 2.7.3 build, I believe), and 
the same thing happens--though in xtree, this time.

Is anyone else seeing this kinda weird behavior?  Any hints?

I'm compiling the ANTLR lib first (single threaded debug), and then 
linking it with my project into an exe (single threaded debug as 
well).

Steve



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 10:26:33 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Antlr exceptions
In-Reply-To: <BA38992C3BC5B543BEE63132C4B45AF76EFFBA@uscimplm001.net.plm.eds.com>
References: <BA38992C3BC5B543BEE63132C4B45AF76EFFBA@uscimplm001.net.plm.eds.com>
Message-ID: <7587C51B-72C0-11D8-87A9-000A95891192@cs.usfca.edu>


On Mar 10, 2004, at 7:26 AM, Donovan, Bob wrote:

> Hi,
>
> In my parser, I am collecting all errors generated from the parser so 
> that I can present them in a view after the parse is complete. I have 
> extended the CommonToken class with an ExtentToken tracks columns, 
> rows, etc of each token.
>
> I noticed that only the MismatchedTokenException and the 
> NoViableAltException have a variable that holds a token:
> public antlr.Token token;
>
> which I can use to retrieve the token.
>
> Are these the only two subclasses of ANTLRException that I need to be 
> concerned about that return a Token? Or do I need to get tokens from 
> the other exceptions? I want to make sure that I am capturing all 
> errors generated along with where in the file they occur?

Hi,

I believe those the only recognition issues: "i didn't get the right 
token" and "I have no idea how to proceed with this token".

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 10:32:37 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADC0@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADC0@lnml1.eca-international.local>
Message-ID: <4E5B431A-72C1-11D8-87A9-000A95891192@cs.usfca.edu>


On Mar 10, 2004, at 3:21 AM, Anthony Youngman wrote:
> I think licences can be split into four groups, really.
>
> 1. The "don't sue me, but do as you like" group.
>
> BSD, artistic, etc. Basically, they waive copyright restrictions, and
> say to the user "you're on your own". Actually, Ter, I'd seriously look
> at the Artistic licence. It's just as free with the *CODE* as the BSD,
> but it's basically got a "don't piss me off or I'll take the *NAME*
> away" clause. After all, you wouldn't be pleased if I took ANTLR,
> modified it, sold it under the ANTLR name, and ruined your reputation.
> Would you? For those customers who just want the code, there's no
> difference between BSD and artistic. But for those people who rely on
> the ANTLR name and trust your integrity, the artistic licence is much
> better.

An interesting point, though, I'm not all that worried about this issue.

> For example, when Artistic State released "Perl for Windows", everybody
> just *knew* that MS had not pulled their "extend, ..." tricks because
> the product was called Perl. Piss of Larry, and while the artistic
> licence would not let him object to the *product*, he could make them
> pull every reference to Perl from their literature...

Interesting...problem is that the current version of ANTLR could be 
"stolen".  The horse may already be out of the barn ;)

Thanks,
Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 10:42:35 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] syn pred implementation
Message-ID: <B2741C42-72C2-11D8-87A9-000A95891192@cs.usfca.edu>

Heh great ideas everybody!

I will definitely explore this option.  I like having a single style of 
code gen that will work on all algol derivatives so exception-based 
implementations ain't so good.  I just have to look at it some more.

 From a grammar user perspective, however, I think exceptions for errors 
is a major leap over other stuff.  Perhaps we can just make it look 
like you have exceptions but under the hood it's a bunch of IFs and 
such.

I wonder what LISP and ML will do.  Hmm...

Oh, the old C-code generator for PCCTS used longjmp for predicates ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jsrs701 at yahoo.com  Wed Mar 10 11:11:41 2004
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] My antlr 2 bashing list
Message-ID: <c2np9d+29cu@eGroups.com>


(Er, gimme a sec whilst I put on my bullet-proof jacket here...)

BETTER MSVC INTEGRATION SUPPORT.  *ducks the rocks*  I know we all 
hate M$, and I'm no exception.  But for the love of god, there's a 
LOT of development going on in MSVC these days, and ignoring the poor 
saps (like me) who have to use it is not so nice.  Basically, we need 
for ANTLR to be truly platform agnostic, not just *nix agnostic.

To whit:
* NMAKE-compatible makefiles for the C++ libs.  If we can cobble up 
NMAKE makefiles, then we're cool with Ric--we're purely command-
line.  I got no problem with that, since if you can make an NMAKE 
file, you can make a GUI project for it.

* Has anyone mentioned smoke testing of builds yet?  If that's 
already happening, let's get MSVC as a test target for the C++ libs.

* A warning-free build for the C++ libs, for all major targets.  A 
Windows build is still littered with warnings all over the place.

* Let's get multiple error reporting formats.  Make them command-line 
selectable.  MSVC mandates a specific format for error output from 
external commands in order to integrate them fully into the 
environment (eg. being able to double-click an ANTLR error in the 
output window and it taking you to the offending line in your grammar 
file).

I hope I haven't repeated anoyone else's thoughts here.

Steve




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 11:24:17 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] My antlr 2 bashing list
In-Reply-To: <c2np9d+29cu@eGroups.com>
References: <c2np9d+29cu@eGroups.com>
Message-ID: <85F1B3F2-72C8-11D8-87A9-000A95891192@cs.usfca.edu>

Hi Steve,

Updated the list (and with Ric's pass 2 etc...).

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 10 12:04:02 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:30 2004
Subject: New antlr-interest member
Message-ID: <1078949042.103.31140.w6@yahoogroups.com>


Hello,

This is an automated email message to let you know that
a_w_abate <a_w_abate@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From robin at debreuil.com  Wed Mar 10 12:26:37 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] My antlr 2 bashing list
References: <c2np9d+29cu@eGroups.com> <85F1B3F2-72C8-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <004901c406de$1fc1afb0$0100a8c0@xpbaby>

> Updated the list (and with Ric's pass 2 etc...).

You aren't being very fair about all this - you really should start a "stuff
I *like* about antlr" page to give the other side a voice as well : ). My
list is ready...

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 10 12:54:53 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:30 2004
Subject: New antlr-interest member
Message-ID: <1078952093.75.56615.w73@yahoogroups.com>


Hello,

This is an automated email message to let you know that
payasam79 <payasam79@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From parrt at cs.usfca.edu  Wed Mar 10 12:58:50 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] My antlr 2 bashing list
In-Reply-To: <004901c406de$1fc1afb0$0100a8c0@xpbaby>
References: <c2np9d+29cu@eGroups.com> <85F1B3F2-72C8-11D8-87A9-000A95891192@cs.usfca.edu> <004901c406de$1fc1afb0$0100a8c0@xpbaby>
Message-ID: <BB57918E-72D5-11D8-87A9-000A95891192@cs.usfca.edu>


On Mar 10, 2004, at 12:26 PM, Robin Debreuil wrote:

>> Updated the list (and with Ric's pass 2 etc...).
>
> You aren't being very fair about all this - you really should start a 
> "stuff
> I *like* about antlr" page to give the other side a voice as well : ). 
> My
> list is ready...

Actually you're right...  We need a list of good stuff so that I don't 
screw up the stuff people like (the bash list is so I look at fixing 
the bad stuff). ;)

I'll start it off and then post a note ;)

Good idea, Robin.

Thanks,
Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 13:07:44 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
Message-ID: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu>

Ok, we have another list so we avoid breaking a good recipe:

http://www.antlr.org/blog/antlr3/antlr2.group.hug.tml

Send in your "group hug" stuff :)

I can't wait to work on the ANTLR 3 whitepaper after we collection 
good/bad stuff :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Wed Mar 10 13:30:53 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: syn pred implementation
In-Reply-To: <B2741C42-72C2-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <c2o1ed+aqdf@eGroups.com>

I certainly agree on exceptions for errors--that's an ergonomic issue since error codes are rarely checked--whether they are set in 
errno (C) or are returned from functions--if an operation normally succeeds.

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Heh great ideas everybody!
> 
> I will definitely explore this option.  I like having a single style of 
> code gen that will work on all algol derivatives so exception-based 
> implementations ain't so good.  I just have to look at it some more.
> 
>  From a grammar user perspective, however, I think exceptions for errors 
> is a major leap over other stuff.  Perhaps we can just make it look 
> like you have exceptions but under the hood it's a bunch of IFs and 
> such.
> 
> I wonder what LISP and ML will do.  Hmm...
> 
> Oh, the old C-code generator for PCCTS used longjmp for predicates ;)
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Wed Mar 10 13:03:07 2004
From: payasam79 at yahoo.com (Bharath)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] AntLR Grammar
Message-ID: <c2nvqb+3dog@eGroups.com>

Hi antlers,

I am planning to use AntLR to generate a parser for a programming 
language. I have the grammar (production rules) and the token 
definitions already. To convert the good ol' grammar into a format 
that AntLR can understand, how much effort does it take? I am 
specifially asking this question because I read on several sites 
that AntLR grammar is tedious in a way (no offense) and I do not 
have too much time. 

Are there many users of Eclipse AntLR plugin here?

Happy trails.

Bharath.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Wed Mar 10 13:37:46 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
In-Reply-To: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu>
References: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <16463.35498.303226.632177@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
[...]

> Send in your "group hug" stuff :)

Readability of the generated code.

Syntactic and semantic predicates.

Permissive licensing.

This mailing list and the people that make it so valuable.

All of the people who have contributed so many grammars, etc.

Thanks,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jsrs701 at yahoo.com  Wed Mar 10 13:53:07 2004
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: What we *do* like about ANTLR
In-Reply-To: <16463.35498.303226.632177@despot.non.net>
Message-ID: <c2o2o3+kono@eGroups.com>

> > Send in your "group hug" stuff :)
> 
> Readability of the generated code.
> 
> Syntactic and semantic predicates.
> 
> Permissive licensing.
> 
> This mailing list and the people that make it so valuable.
> 
> All of the people who have contributed so many grammars, etc.

Hear hear!  What John said!  I'm not so interested in the third item 
right now, but all the rest make it a damn fine project.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 13:57:57 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] AntLR Grammar
In-Reply-To: <c2nvqb+3dog@eGroups.com>
References: <c2nvqb+3dog@eGroups.com>
Message-ID: <FDA625E7-72DD-11D8-87A9-000A95891192@cs.usfca.edu>


On Mar 10, 2004, at 1:03 PM, Bharath wrote:

> Hi antlers,
>
> I am planning to use AntLR to generate a parser for a programming
> language. I have the grammar (production rules) and the token
> definitions already. To convert the good ol' grammar into a format
> that AntLR can understand, how much effort does it take? I am
> specifially asking this question because I read on several sites
> that AntLR grammar is tedious in a way (no offense) and I do not
> have too much time.
>
> Are there many users of Eclipse AntLR plugin here?

Howdy :)

I built a lab for my students at USF where, in 1hr 45minutes, they 
converted the Python grammar that comes with Python's distribution to 
ANTLR format:

http://www.cs.usfca.edu/~parrt/course/652/labs/python.html

This might help indirectly :)

For the record, the syntax of antlr is good, it's just that converting 
from an LR-based tool like yacc can cause trouble like left-recursion 
and such.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 13:59:24 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
In-Reply-To: <16463.35498.303226.632177@despot.non.net>
References: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu> <16463.35498.303226.632177@despot.non.net>
Message-ID: <3134E115-72DE-11D8-87A9-000A95891192@cs.usfca.edu>

On Mar 10, 2004, at 1:37 PM, John D. Mitchell wrote:

>>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
> [...]
>
>> Send in your "group hug" stuff :)
>
> Readability of the generated code.
>
> Syntactic and semantic predicates.
>
> Permissive licensing.
>
> This mailing list and the people that make it so valuable.
>
> All of the people who have contributed so many grammars, etc.

Thanks John.  Updated on site.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Wed Mar 10 14:02:57 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: What we *do* like about ANTLR
In-Reply-To: <c2o2o3+kono@eGroups.com>
Message-ID: <c2o3ah+v2dr@eGroups.com>

Actions are invoked in a civilized manner.

ANTLR-style trees are an aid to language transformation.

Labels, rule arguments, and return values help with semantic processing.

Encapsulating generated code in classes is very clean.

--Loring


--- In antlr-interest@yahoogroups.com, "J. Stephen Riley Silber" <jsrs701@y...> wrote:
> > > Send in your "group hug" stuff :)
> > 
> > Readability of the generated code.
> > 
> > Syntactic and semantic predicates.
> > 
> > Permissive licensing.
> > 
> > This mailing list and the people that make it so valuable.
> > 
> > All of the people who have contributed so many grammars, etc.
> 
> Hear hear!  What John said!  I'm not so interested in the third item 
> right now, but all the rest make it a damn fine project.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Wed Mar 10 14:12:57 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] AntLR Grammar for structured text
In-Reply-To: <FDA625E7-72DD-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <20040310221257.9496.qmail@web41009.mail.yahoo.com>

Hi Terence,

I played around a bit with AntLR by adding my own
grammar and the syntax is cool so far. I'm dabbling
with a CC for the first time and hence the concern.

The Python grammar conversion is actually pretty
useful. Have you ever worked with Structured Text(a
PLC programming language)? I have the grammar for the
language and I need to translate it to AntLR format.

Thanks for your prompt reply!

B.

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> On Mar 10, 2004, at 1:03 PM, Bharath wrote:
> 
> > Hi antlers,
> >
> > I am planning to use AntLR to generate a parser
> for a programming
> > language. I have the grammar (production rules)
> and the token
> > definitions already. To convert the good ol'
> grammar into a format
> > that AntLR can understand, how much effort does it
> take? I am
> > specifially asking this question because I read on
> several sites
> > that AntLR grammar is tedious in a way (no
> offense) and I do not
> > have too much time.
> >
> > Are there many users of Eclipse AntLR plugin here?
> 
> Howdy :)
> 
> I built a lab for my students at USF where, in 1hr
> 45minutes, they 
> converted the Python grammar that comes with
> Python's distribution to 
> ANTLR format:
> 
>
http://www.cs.usfca.edu/~parrt/course/652/labs/python.html
> 
> This might help indirectly :)
> 
> For the record, the syntax of antlr is good, it's
> just that converting 
> from an LR-based tool like yacc can cause trouble
> like left-recursion 
> and such.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


=====
Bharath Sundararaman
Graduate Assistant, CAHS.
(312)-5606532 (M)
http://www.cs.uic.edu/~bsundara

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 14:25:38 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] AntLR Grammar for structured text
In-Reply-To: <20040310221257.9496.qmail@web41009.mail.yahoo.com>
References: <20040310221257.9496.qmail@web41009.mail.yahoo.com>
Message-ID: <DB69090C-72E1-11D8-87A9-000A95891192@cs.usfca.edu>


On Mar 10, 2004, at 2:12 PM, Bharath S wrote:
> The Python grammar conversion is actually pretty
> useful. Have you ever worked with Structured Text(a
> PLC programming language)? I have the grammar for the
> language and I need to translate it to AntLR format.

I've not worked with Structured Text...sorry.  What's it look like?  
Perhaps we can spot the trouble areas...

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Wed Mar 10 14:24:07 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
Message-ID: <72C9789739C4214096AE945753B11EA3FABE16@mypxmail04.bco-home.com>

Human readable code.  Still the best way to learn what is going on inside.

Solid theoretical basis.  Way beyond your typical LL parser generator.

Does smart things for k>1.  So many possibly cool tools limit themselves to
LL(1) and ignore real problems.

Monty



-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: Wednesday, March 10, 2004 1:08 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] What we *do* like about ANTLR

Ok, we have another list so we avoid breaking a good recipe:

http://www.antlr.org/blog/antlr3/antlr2.group.hug.tml

Send in your "group hug" stuff :)

I can't wait to work on the ANTLR 3 whitepaper after we collection 
good/bad stuff :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Wed Mar 10 14:35:54 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] AntLR Grammar for structured text
In-Reply-To: <DB69090C-72E1-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <20040310223554.27698.qmail@web41001.mail.yahoo.com>

Hi Terence,

I find structured text very similar to Pascal. It has
if-then-else, case, for-ntext, while, repeat and
bit/word assignment. It also has ladder instructions
which are specific to certain devices. 

Since there's existing grammar for pascal, the basic
constructs should not be troublesome. I am however
unsure of ladder instructions because it is a very
unconventional programming language, as such.

Thanks for your feedback, Ter. This is great help.

B.


--- Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> On Mar 10, 2004, at 2:12 PM, Bharath S wrote:
> > The Python grammar conversion is actually pretty
> > useful. Have you ever worked with Structured
> Text(a
> > PLC programming language)? I have the grammar for
> the
> > language and I need to translate it to AntLR
> format.
> 
> I've not worked with Structured Text...sorry. 
> What's it look like?  
> Perhaps we can spot the trouble areas...
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


=====
Bharath Sundararaman
Graduate Assistant, CAHS.
(312)-5606532 (M)
http://www.cs.uic.edu/~bsundara

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Wed Mar 10 15:12:50 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
References: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <002401c406f5$38d035a0$0100a8c0@xpbaby>

- It actually works - this is not a minor consideration. Works very well in
fact, and all of it.
- It is simple enough that you can get useful work done within a few days,
and pursue the finer points over time.
- Cross platform (C++, C# versions), and cross OS (java based)
- It is free to use, and to modify little things to suit your specific needs
(er, I think!)
- The grammar markup is consistant - a few concepts will generally apply the
same way in different situations (eg, ! applies to a rule, a choice, a
subrule, a Token - similar with labels etc.)
- The ability to insert native code anywhere, and actually see what it is up
to (in a grok-able context) in the output.
- The syntax and concepts are similar across Lexer, Parser, and Tree walker
- The generated code is easy to understand, conceptually as well, so it
isn't a 'magic' blackbox step.
- There is a lot of underlying prewritten goodness that can help you out, at
your option. Nothing is forced on you.
- You have near total control over what the generated tree looks like, and
things like hetrogeneous trees are not an all or nothing option.
- It is complete across stages - eg. it isn't a lexer with a parser quickly
tacked on, so one program, one set of concepts, no gluing chunks together.
- Documentation is quite good for those just starting out, with plenty of
sample files.
- LL(k)
- It is similar enough to ebnf etc. that such documents remain very useful
- Grammars are easy to read, navigate and modify (as opposed to say regular
expressions etc). Doing things like moving a task from the Lexer to the
Parser is trivial.
- Option to use it as a (uber) filter is great
- Multiple contributors are welcomed, feedback is solicited, improvment is
ongoing
- The 'culture' around the program is very generous, encouraging and smart -
and tolerant of newcomers :).
- There is a great mailing list (filled with the above people) with a
searchable archives.
- There is a central up to date site with the latest news, tutorials,
grammars, and oh yes, that picture. Mostly it all comes down to that
picture.

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 10 17:12:37 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] What we *do* like about ANTLR
In-Reply-To: <002401c406f5$38d035a0$0100a8c0@xpbaby>
References: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu> <002401c406f5$38d035a0$0100a8c0@xpbaby>
Message-ID: <2F1F7F42-72F9-11D8-87A9-000A95891192@cs.usfca.edu>

On Mar 10, 2004, at 3:12 PM, Robin Debreuil wrote:
> - There is a central up to date site with the latest news, tutorials,
> grammars, and oh yes, that picture. Mostly it all comes down to that
> picture.

I'm afraid that picture is now 4 or 5 years out of date and a bit 
blurry.  I no longer look like the short-haired surfer dude; instead 
I'm a mild-mannered professor with glasses ;)  I keep thinking that I'm 
a surfer though. ;)  Just wanted people to think there was a human 
behind all this lunacy :D

Updated the site with your comments...thanks!

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Wed Mar 10 17:47:11 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] C# vs MSIL Output
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADB7@lnml1.eca-internati
 onal.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADB7@lnml1.eca-international.local>
Message-ID: <6.0.3.0.0.20040311114129.01c2afc0@postoffice.trump.net.au>

Hello,

At 10:54 PM 9/03/2004, Anthony Youngman wrote:
>I'm sure Rob will join in when he sees this ... he wrote the MaVerick
>DATABASIC grammar.
>
>But that was originally written to spit out java source to feed into the
>java compiler. He then wrote another emitter to spit out java p-code.

Yes did a to java source and to java bytecode compiler/translator.

I did the translator to java source first thinking that would be 
easier.  In a way it was in that every step of the way was an ascii human 
readable form(ie source, ast tree, java source).  This was offset though by 
the difficulty trying to remotely control third party software in the java 
source compiler(errors were particularly hard to handle nicely), poor 
compiler performance, difficulty in efficiently implementing low level 
constructs of the source language in java and debugging the compiled 
program used the intermediate java lang not the original program source.

The java bytecode is not like traditional asm it is much higher level.  I 
have only had a very brief look at MSIL but it looks kind of similar.

The classes i did to output java bytecode i was thinking of using them to 
create a direct bytecode-generator in antlr.  The major problem i think 
would be that have to do actions differently perhaps some kind of 
listener/event interface or something.

The other thing i could do is a simple tree walker for the java grammer to 
actually output byte codes.

  - Robert



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edcjones at yahoo.com  Wed Mar 10 19:30:23 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <c2omgf+mjc7@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
wrote:
> Folks,
> 
> In preparation for the ANTLR 3.0 whitepaper, I need to start
< writing down everything that annoys me about ANTLR 2.0.  I have 
< started another "blog" document:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> 
> Feel free to send in your pet peeves to me or to this list.  I will 
> try to add to this file.

Here are some unrealistic and inexpert ideas for ANTLR 3.

Rewrite ANTRL in C or C++.

Output parsers written in C or Python.

Print trees in an easy to look at form.

Is is necessary for the user to see as much java as he now has to?

An approach to the man-machine interface issues: if you were designing
a Python (Perl, ...) module that wraps around ANTLR, what would be the
classes and functions in the module?

A grammar is a highly terse description of a highly recursive stucture
with little internal documentation and with bits of java in it like
prions in a brain. Are there better ways to write down a grammar?

Should there be a separate chapter on ANTLR parsers in the Reference
manual?

Non-interactive debugger. Ideally, there would be an interactive
debugger where you see the tokens as they are fed to the parser and
also see the changes that are made in tha AST.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 10 20:23:52 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:30 2004
Subject: New antlr-interest member
Message-ID: <1078979032.767.95060.w59@yahoogroups.com>


Hello,

This is an automated email message to let you know that
ccarenacc2000 <ccarena@cox.net> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From johnm-antlr at non.net  Wed Mar 10 20:37:47 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: What we *do* like about ANTLR
In-Reply-To: <c2o3ah+v2dr@eGroups.com>
References: <c2o2o3+kono@eGroups.com>
	<c2o3ah+v2dr@eGroups.com>
Message-ID: <16463.60699.407407.800063@despot.non.net>

>>>>> "lgcraymer" == lgcraymer  <lgc@mail1.jpl.nasa.gov> writes:
[...]

> ANTLR-style trees are an aid to language transformation.

Indeed!

Furthermore, Antlr's grammar based tree transformation is, IMHO, way
underappreciated (even though it can still improve a lot :-).

Rock on,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu Mar 11 02:19:40 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADC6@lnml1.eca-international.local>

What I'm doing at the moment, is trying to get the basics of my grammar
in place. Precedence of mathematical operations. How do you lex (and
parse) the difference between an array and a function-reference (I know
- treat an array as if it's a function :-). How do you parse a token
when semantics depends on syntax?

(My example is, for example, "a = b < c" and "a = b < c >". The former
is a logical comparison, the latter is using <> as a special sort of
array-reference parenthesis. Monty knows *exactly* what I'm talking
about :-)

Parsing "if then else" constructs, and those damn ambiguity warnings! I
feel pressured to treat EOL as white space, but especially with "if then
else", they are actually syntactically crucial ...

I've come across various references to emitters, but have yet to come
across one. I'm trying to write a tree parser that emits object code.
Severely hampered by my lack of knowledge of Java :-)

Don't worry about any of this at the moment, but if I can get this
*functionally* complete, with 90% of the keywords missing, then I think
it would make a very good, simple, teaching grammar. My thinking is
strongly influenced by the Prime FTN compiler which, when I saw how it
worked, about all it did was convert my complex source into a symbol
table and bunch of CALL statements, using them to do almost everything
even down to the "assign a variable" level! By leaving out 99% of the
instances of "convert language statement to function call" we'll end up
with a grammar that is almost 100% teaching material and very little
repetition. Consisting of a lexer, parser, and treeparse/emitter :-)

Cheers,
Wol

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 09 March 2004 19:05
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] nesting rules, getting rule text

Hi Anthony,

As monty said, it'd be great to get a list of those questions... Can  
you summarize your thoughts?  I promise to use them appropriately even  
if it takes me a bit.

Have you seen the "add C++ style templates to Java" USF CS652 project  
with solution?  That could be useful.  There are a number of projects  
and labs on my USF site that perhaps are not visible enough.

Have you seen the really cool PS interpreter and viewer lab?  All my  
labs are bite-size chunks designed to be finished in 1:45.  There is a  
cool byte-code interpreter lab as well.  Have you checked these out?   
See my next email about the new project. :)

Ter

On Mar 9, 2004, at 3:19 AM, Anthony Youngman wrote:

> The problem I find is actually FINDING all this stuff. I have a bit of
> an aversion to hypertext, much prefer a linear hard copy in front of  
> me,
> and find RMS's addiction to "info" for GNU documentation highly
> offensive ...
>
> Anyway, enough of the rant ... and I know - the rule is "if you want  
> it,
> why don't you write it", but a FAQ, clearly signposted, that consists

> of
> a mildly complicated, highly documented, teaching grammar would be
well
> received. There are some wonderful resources out there, but IME it's
> been a case of either pointers to "get you started" stuff, or a case
of
> "look at the supplied grammars" (but which one do I want to study for
a
> "teach yourself" course?).
>
> I'm not saying there isn't anything out there, but I am frustrated
time
> and time again in that I seem to find either elementary stuff aimed at
> newbies, or reference stuff aimed at experts. It's almost impossible
to
> find stuff aimed at the "I know you're experienced but have never met
> this before" level guy. When I started programming in C I went on a
> "Beginning C for experienced programmers" course - the prerequisite
> being you had to know one - any - computer language well but were
> presumed to know nothing about C at all. Where do you find stuff like
> that?
>
> Cheers,
> Wol
>
> -----Original Message-----
> From: mzukowski@yci.com [mailto:mzukowski@yci.com]
> Sent: 04 March 2004 17:57
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] nesting rules, getting rule text
>
> Yeah, it seems people need a guide to reading the code sometimes.
This
> stuff is in Ter's lectures, but maybe something that pointed out
> techniques
> used in the examples would be helpful too for those of you who just
> start
> hacking away?
>
> Monty
>


***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 02:46:54 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Popping a lexer upon EOF
In-Reply-To: <c2m7k2+90jh@eGroups.com>
References: <c2m7k2+90jh@eGroups.com>
Message-ID: <20040311104654.GE5125@cs.utwente.nl>

On Wed, Mar 10, 2004 at 05:04:02AM -0000, Paul J. Lucas wrote:
> According to the FAQ, "How do I handle #include files or other nested
> input streams?", it says in part:
> 
> When you see an #include, create a new lexer just like you've been doing
> (no parser), and then notify the TokenStreamSelector (push state and point
> at new lexer). At the close of the included stream, tell the selector to
> pop it's state.
> 
> The question is: how do you catch "the close of the included stream" in
> order to pop it's state?

Override uponEOF() ? I'm not 100% sure if it's the best thing to do since
it behaves sometimes a bit fuzzy (it may get called multiple times after
seeing EOF (depeding on tracing/guessing) so you might have to put a guard
in it)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
   Words fly like arrows
      as if we knew what was right and wrong. --- Chuang Tsu



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From skellett at anitesystems.de  Thu Mar 11 03:18:23 2004
From: skellett at anitesystems.de (Simon Kellett)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: strange lexical nondeterminism
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABDE3@mypxmail04.bco-home.com>
Message-ID: <c2phtv+m3f1@eGroups.com>

> You may have luck doing this:
> REL_TIME: '0'..'2' '0'..'9' ':' '0'..'5' '0'..'9';
> REL_TIME2: '0'..'9' '0'..'9' '0'..'9' '.' '0'..'2' '0'..'9' ':'
> '0'..'5' '0'..'9' {$setType(REL_TIME);};
> INT: ('0'..'9')+;

Thanks, yes this did remove the warning, and it also works !!

And thanks Lubos for the explaination of the internal workings.

However I think the question remains: given that ANTLR produces the
*correct* code, then why does it *warn me* about a non-determinism.
To me the message is just confusing !! Can it not be just dropped ?

Thanks, Simon



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 05:19:02 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2kr5e+nife@eGroups.com>
References: <20040309142638.GC26038@cs.utwente.nl> <c2kr5e+nife@eGroups.com>
Message-ID: <20040311131902.GG5125@cs.utwente.nl>

On Tue, Mar 09, 2004 at 04:25:17PM -0000, cliftonccraig wrote:
> Still no luck. I tried your suggestion and while it went through the
> ANTLR generator ok it didnt stop the OutOfMemory error.

Where does the out of memory error come from (can you get backtraces of
where it bombs out)? Did you try running the lexer standalone (e.g. just do
nextToken in a loop) and see if it groks the offending input file.

Are you doing stuff in the uponEOF handler (maybe in combination with
tracing turned on)? Does it also happen with a trivial input file ? If so
did you try single stepping trough it with a debugger.

> It sounds like overkill but I just don't see any easier way to do
> this. I thought I saw a way to chain or concatenate to InputStreams
> together as one in some book or article but I can't remember. Please,
> could someone help me with either solution. I feel so stumped.

It might be easier to use a custom InputBuffer that adds a "\r\n" before
EOF. InputBuffer seems to me as a simpler class to override. For java mode
you'd probably have to look at CharBuffer.java looks like you only have to
add one check in the fill method. Then use the more specific constructors
of the lexer to glue stuff together.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "Good judgement comes from experience.
     Experience comes from bad judgement." --- Unknown



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ifedorenko at rogers.com  Thu Mar 11 05:21:28 2004
From: ifedorenko at rogers.com (Igor Fedorenko)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <405067D8.5040900@rogers.com>

Being new to ANTLR and parsing in general I haven't got many complains, 
for me ANTLR works just the way it was designed to ;-)
One little thing though. It would be nice if ANTLR-generated 
parsers/lexers did not require antlr.jar at runtime. Makes no or little 
technical difference, but would help when it comes to getting lawyers 
approval for ANTLR. Thanks for the great tool.

Terence Parr wrote:
> Folks,
> 
> In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
> down everything that annoys me about ANTLR 2.0.  I have started another 
> "blog" document:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> 
> Feel free to send in your pet peeves to me or to this list.  I will try 
> to add to this file.
> 
> I can hear John Mitchell now: "predicate hoisting!" ;)
> 
> Terence
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From john-yahoo at pybus.org  Thu Mar 11 05:34:33 2004
From: john-yahoo at pybus.org (John Pybus)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <405067D8.5040900@rogers.com>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu> <405067D8.5040900@rogers.com>
Message-ID: <40506AE9.2020502@pybus.org>

Igor Fedorenko wrote:
> Being new to ANTLR and parsing in general I haven't got many complains, 
> for me ANTLR works just the way it was designed to ;-)
> One little thing though. It would be nice if ANTLR-generated 
> parsers/lexers did not require antlr.jar at runtime. Makes no or little 
> technical difference, but would help when it comes to getting lawyers 
> approval for ANTLR. Thanks for the great tool.

I understand where you're coming from, but I'm not sure it would make so 
much difference.  To include the same functionality, the antlr generated 
java files would have to contain substantial amounts of boilerplate code 
present in the ANTLR distribution and would almost certainly count as 
derived works.

Yours,

John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 05:42:26 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <c2omgf+mjc7@eGroups.com>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu> <c2omgf+mjc7@eGroups.com>
Message-ID: <20040311134226.GH5125@cs.utwente.nl>

On Thu, Mar 11, 2004 at 03:30:23AM -0000, edcjones wrote:
> Rewrite ANTRL in C or C++.

Hehe dunno how many horses we'd need to drag Terence to a C/C++ compiler ;)

> A grammar is a highly terse description of a highly recursive stucture
> with little internal documentation and with bits of java in it like
> prions in a brain. Are there better ways to write down a grammar?

Dunno, it works for me. All I know is that up to now I've always been
*very* glad to get rid of any userinterface in front of a parser tool/suite
and exchange it for the underlying commandline tools.

> Should there be a separate chapter on ANTLR parsers in the Reference
> manual?

The whole manual could use a major rework.

> Non-interactive debugger. Ideally, there would be an interactive
> debugger where you see the tokens as they are fed to the parser and
> also see the changes that are made in tha AST.

There's ParseView for java mode but nobody seems interested in maintaining
it. The most up to date version (for 2.7.1?) of it can be downloaded from
my ANTLR page.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Wit is cultured insolence. --- Aristotle



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 11 06:07:23 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:30 2004
Subject: New antlr-interest member
Message-ID: <1079014043.738.4511.w62@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jacekkuch99 <doctor99@poczta.onet.pl> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From ccc at icsaward.com  Thu Mar 11 06:48:37 2004
From: ccc at icsaward.com (cliftonccraig)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <20040311131902.GG5125@cs.utwente.nl>
Message-ID: <c2pu85+g987@eGroups.com>

Thanx Ric,

I have tried running in my debugger but I couldn't follow all of the
jumps that were made. It appeared to be jumping back and forth between
two statements in a switch nested in a infinite while loop. I couldn't
tell at that point if it was stuck of trying to match some complex
lexer rule or what. That experience did, however, point me to the fact
that it was the last single line comment that was hanging everything
up. I think I noticed it (the single line comment) when I eval'ed a
buffer or something. I couldn't understand exactly what was happening
but I knew it had to be at that point in the processing and then when
I looked back at the input file I then noticed the comment was on the
EOF line. I recalled reading somewhere that you shouldn't end a source
file with EOF (probably an article on the ANTLR or JavaCC site) and
made an educated guess that this is what was causing my problem. I
confirmed my suspicion when I inserted a newline in the input file and
all was good. I later (at home) tried the parser out of the box on one
of the tests that ship out of the box and got the same results after
putting a single line comment on the last line. That confirmed, for
me, that it was not the additional logic from the rewrite engine that
 was causing this. (I didn't think it would be but I had to confirm
it.) I know little of why it happens and I will try to look into it
again a little later. I'm sure anyone could replicate the problem just
by downloading the Antlr package, generating the JavaReckognizer with
the included grammar and running over any Java file that ends with a
single line comment. For now I have my work around in place. I'd love
to improve on it because it always inserts a new line which is carried
over into the rewritten file. (Ooh, I just thought of a workaround for
my workaround!) I'd love to take your advice on overridding the
CharBuffer or whatever but I know little of these classes and have
only been working with this technology for a matter of days. I'm not
stupid, I'm just afraid it will take me some time to figure out what
to put where in the overriding logic. Thank you for all of your help.
I really appreciate it. You will probably here back from me on this
mailing list when I get back to working with this.

Cliff

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Tue, Mar 09, 2004 at 04:25:17PM -0000, cliftonccraig wrote:
> > Still no luck. I tried your suggestion and while it went through the
> > ANTLR generator ok it didnt stop the OutOfMemory error.
> 
> Where does the out of memory error come from (can you get backtraces of
> where it bombs out)? Did you try running the lexer standalone (e.g.
just do
> nextToken in a loop) and see if it groks the offending input file.
> 
> Are you doing stuff in the uponEOF handler (maybe in combination with
> tracing turned on)? Does it also happen with a trivial input file ?
If so
> did you try single stepping trough it with a debugger.
> 
> > It sounds like overkill but I just don't see any easier way to do
> > this. I thought I saw a way to chain or concatenate to InputStreams
> > together as one in some book or article but I can't remember. Please,
> > could someone help me with either solution. I feel so stumped.
> 
> It might be easier to use a custom InputBuffer that adds a "\r\n" before
> EOF. InputBuffer seems to me as a simpler class to override. For
java mode
> you'd probably have to look at CharBuffer.java looks like you only
have to
> add one check in the fill method. Then use the more specific
constructors
> of the lexer to glue stuff together.
> 
> Cheers,
> 
> Ric
> --
>
-----+++++*****************************************************+++++++++-------
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
>
-----+++++*****************************************************+++++++++-------
>   "Good judgement comes from experience.
>      Experience comes from bad judgement." --- Unknown



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 06:57:17 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] My antlr 2 bashing list
In-Reply-To: <c2np9d+29cu@eGroups.com>
References: <c2np9d+29cu@eGroups.com>
Message-ID: <20040311145717.GI5125@cs.utwente.nl>

Hi,

On Wed, Mar 10, 2004 at 07:11:41PM -0000, J. Stephen Riley Silber wrote:
> (Er, gimme a sec whilst I put on my bullet-proof jacket here...)
>
> BETTER MSVC INTEGRATION SUPPORT.  *ducks the rocks*  I know we all
> hate M$, and I'm no exception.  But for the love of god, there's a
> LOT of development going on in MSVC these days, and ignoring the poor
> saps (like me) who have to use it is not so nice.  Basically, we need
> for ANTLR to be truly platform agnostic, not just *nix agnostic.

I only have limited access to MSVC6. So I can't really test stuff for MSVC.
Basically I'm very close to the point to drop all MSVC support except for
structural things in the codegen (the extra #define's in class headers
stuff like that)

When I started there was pretty much no MSVC out of the box support I then
naively said that I would like to support it. By now I'm more tending to
the opinion that I should not try to support a compiler that is 'weird' and
I cannot test myself. Trying to cobble together community patches and
fail/success reports is not very effective.

I think it would save myself and the community a lot of aggravation if
after an ANTLR release there's someone who cobbles up a MSVC-Version-X
rescue kit and puts it in the filesharing section.

To be clear about it I did not make the final decision to completely drop
MSVC yet. But if the 2.7.3 release will be another disaster MSVC wise I
might. So MSVC users grab those snapshots and prereleases and test them
till you drop and give (good & specific) feedback!

> To whit:
> * NMAKE-compatible makefiles for the C++ libs.  If we can cobble up
> NMAKE makefiles, then we're cool with Ric--we're purely command-
> line.  I got no problem with that, since if you can make an NMAKE
> file, you can make a GUI project for it.

If someone makes these for the latest snapshot/prerelease I'll drop them in
the contrib section. Please be clear about for which MSVC version they are
though. Also DSP/DSW files are welcome. I don't expect any changes in the
amount of header/source files unless I get time to port the
TokenStreamRewrite stuff.

To sum it up:
- Or things work out mostly via 2.7.3 release and MSVC getting saner with
  versions 7.0+7.1. And I'll meddle on with whatever comes my way in patches.
- Or MSVC support gets dropped
- Or it will be third party via antlr.org filesharing
- Or someone steps up to do *continued* MSVC support (who has the compilers
  etc)
- Or someone donates a license of MSVC for ANTLR support licensed to Ter
  maybe? (If I'd personally buy it, I'd buy the full version usable for
  commercial stuff, but to dish out that amount of cash for something I'd
  mainly use for ANTLR I'd have to fall on my head pretty hard)

I'm not against MSVC per se, but I don't want the hassle it gives at the
moment (not to mention the rude behaviour of some people in the MSVC camp).
I'd rather won't release something for a platform than release something
halfworking for a platform.

> * Has anyone mentioned smoke testing of builds yet?  If that's
> already happening, let's get MSVC as a test target for the C++ libs.

No compiler no test. Hmm no compiler no bugs.. no compiler no cry. Erm...
No test suite no test too.. but less usable for puns...

But seriously it would be very good to have a test suite. But heck I didn't
even have time to write one for the compiler/tool I work on. Also not
familiar with the term smoke testing (I assume that's just checking if it
builds? then again then we'd need a farm of machines/os/compilers to check
everything probably not feasible for an opensource project at least not
this one)

> * A warning-free build for the C++ libs, for all major targets.  A
> Windows build is still littered with warnings all over the place.

Expecting a warning free build across all platforms is maybe not realistic.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 "Don't call me stupid." "Oh, right. To call you stupid would be an insult
    to stupid people. I've known sheep that could outwit you! I've worn
              dresses with higher IQs!" --- A Fish Called Wanda



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From yhhf_dy at yahoo.com  Thu Mar 11 07:39:05 2004
From: yhhf_dy at yahoo.com (Fan Yang)
Date: Mon Dec 20 16:16:30 2004
Subject: [antlr-interest] how to eliminate non-determinism warnings upon keywords and literals?
Message-ID: <c2q16p+1p0a@eGroups.com>

Hi,

There are some non-determinism warnings for the following grammar

////// snippit1
class TestLexer extends Lexer;
...
TOKEN_IFDEF	:	"ifdef" { semantic actions }
	;

ID	:	('a'..'z')+
	;
//////

I know I can use token {...} section to eliminate those warnings, but 
I can't add semantic actions in the tokens section, which is 
important for me. 

My question is how to get rid of those warnings by using the same way 
as snippit1 indicated.


I really appreciate your help,

fan 

////// snippit2
// One solution but I can't use semantics action
class TestLexer extends Lexer;
...
tokens {
        BEGIN="begin";
}

ID	:	('a'..'z')+
	;





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 11 07:41:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:31 2004
Subject: New antlr-interest member
Message-ID: <1079019702.86.37207.w25@yahoogroups.com>


Hello,

This is an automated email message to let you know that
magnar_nedland <magnarn@interagon.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From klaren at cs.utwente.nl  Thu Mar 11 07:51:54 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <c2pu85+g987@eGroups.com>
References: <20040311131902.GG5125@cs.utwente.nl> <c2pu85+g987@eGroups.com>
Message-ID: <20040311155154.GJ5125@cs.utwente.nl>

Hi,

Hmmmm nice one you find a bug, the vanilla java grammar has indeed the same
problem. SL_COMMENT hangs when it's fed only '//'.

I can offer another solution now: switch to C++ mode it is doing the right
thing (complain it found an unexpected EOF). Also the sane fix for
SL_COMMENT which I expected to work works in C++ mode.

So...
a) Java codegen is generating the wrong bitset.
b) The java implementation of BitSet is incorrectly saying that EOF value
   65535 is in the bitset of what is supposed to be valid for the
   (~(\n|\r))* part.

Hmmm writing that down a little coin dropped...

c) Antlr should warn if you set the charVocabulary to '\u0003'..'\uFFFF';
   then it includes EOF. Which of course gets automagically added if you
   use ~ constructs.

So there's another easy fix e.g. limiting the charVocabulary of the lexer
to:

charVocabulary='\u0003'..'\u7FFF';

And change SL_COMMENT to:

SL_COMMENT
	:	"//"
		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
		{$setType(Token.SKIP); newline();}
	;

And you should be set.

Cheers,

Ric

On Thu, Mar 11, 2004 at 02:48:37PM -0000, cliftonccraig wrote:
> I have tried running in my debugger but I couldn't follow all of the
> jumps that were made. It appeared to be jumping back and forth between
> two statements in a switch nested in a infinite while loop. I couldn't
> tell at that point if it was stuck of trying to match some complex
> lexer rule or what. That experience did, however, point me to the fact
> that it was the last single line comment that was hanging everything
> up. I think I noticed it (the single line comment) when I eval'ed a
> buffer or something. I couldn't understand exactly what was happening
> but I knew it had to be at that point in the processing and then when
> I looked back at the input file I then noticed the comment was on the
> EOF line. I recalled reading somewhere that you shouldn't end a source
> file with EOF (probably an article on the ANTLR or JavaCC site) and
> made an educated guess that this is what was causing my problem. I
> confirmed my suspicion when I inserted a newline in the input file and
> all was good. I later (at home) tried the parser out of the box on one
> of the tests that ship out of the box and got the same results after
> putting a single line comment on the last line. That confirmed, for
> me, that it was not the additional logic from the rewrite engine that
>  was causing this. (I didn't think it would be but I had to confirm
> it.) I know little of why it happens and I will try to look into it
> again a little later. I'm sure anyone could replicate the problem just
> by downloading the Antlr package, generating the JavaReckognizer with
> the included grammar and running over any Java file that ends with a
> single line comment. For now I have my work around in place. I'd love
> to improve on it because it always inserts a new line which is carried
> over into the rewritten file. (Ooh, I just thought of a workaround for
> my workaround!) I'd love to take your advice on overridding the
> CharBuffer or whatever but I know little of these classes and have
> only been working with this technology for a matter of days. I'm not
> stupid, I'm just afraid it will take me some time to figure out what
> to put where in the overriding logic. Thank you for all of your help.
> I really appreciate it. You will probably here back from me on this
> mailing list when I get back to working with this.

--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
   Words fly like arrows
      as if we knew what was right and wrong. --- Chuang Tsu



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 07:55:10 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Help with Java grammar
In-Reply-To: <20040311155154.GJ5125@cs.utwente.nl>
References: <20040311131902.GG5125@cs.utwente.nl> <c2pu85+g987@eGroups.com> <20040311155154.GJ5125@cs.utwente.nl>
Message-ID: <20040311155510.GK5125@cs.utwente.nl>

On Thu, Mar 11, 2004 at 04:51:54PM +0100, Ric Klaren wrote:
> c) Antlr should warn if you set the charVocabulary to '\u0003'..'\uFFFF';
>    then it includes EOF. Which of course gets automagically added if you
>    use ~ constructs.
> 
> So there's another easy fix e.g. limiting the charVocabulary of the lexer
> to:
> 
> charVocabulary='\u0003'..'\u7FFF';

I forgot... And give a foot-bandage(tm) to the bloke who wrote that \uFFFF
in that vocabulary ;)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Chaos often breeds life, when order breeds habit.
  --- Henry B. Adams, The Education of Henry Adams



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From magnarn at interagon.com  Thu Mar 11 07:51:40 2004
From: magnarn at interagon.com (Magnar Nedland)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Why doesn't ANTLRException inherit from std::exception?
Message-ID: <c2q1uc+fuvl@eGroups.com>

This relates to the generated c++ code.

I just upgraded from antlr-2.7.1 to 2.7.2.
Is there a reason why ANTLRException no longer inherits from 
std::exception? By using a standard interface the surrounding 
environment has a much easier time coping with the exceptions.

Also, I think that the fact that you now have to instantiate an 
ASTFactory for your parser explicitly should be mentioned somewhere. 
Ideally the constructor should require it by reference, so a legal 
ASTFactory is guaranteed.

Magnar




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Thu Mar 11 08:13:35 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Code Generation/Optimization.
In-Reply-To: <DB69090C-72E1-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <20040311161335.81908.qmail@web41011.mail.yahoo.com>

Hi All,

My understanding is that AntLR can be used to generate
the front-end of a compiler (lex-parser-AST). What
about the backend? (code generation/optimization?). As
of now, I am getting clear ideas about defining the
"structured text" language's syntax+semantics; How
would i convert it to bytecode?

Thanks a lot.

Bharath.

=====
Bharath Sundararaman
Graduate Assistant, CAHS.
(312)-5606532 (M)
http://www.cs.uic.edu/~bsundara

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 11 08:14:04 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Why doesn't ANTLRException inherit from std::exception?
In-Reply-To: <c2q1uc+fuvl@eGroups.com>
References: <c2q1uc+fuvl@eGroups.com>
Message-ID: <20040311161403.GL5125@cs.utwente.nl>

Hi,

On Thu, Mar 11, 2004 at 03:51:40PM -0000, Magnar Nedland wrote:
> I just upgraded from antlr-2.7.1 to 2.7.2.
> Is there a reason why ANTLRException no longer inherits from
> std::exception? By using a standard interface the surrounding
> environment has a much easier time coping with the exceptions.

Because we can't mirror the signature of the what method for all antlr
exceptions. If I recall right this got a problem with some newer gcc
release I'm not 100% sure.

> Also, I think that the fact that you now have to instantiate an
> ASTFactory for your parser explicitly should be mentioned somewhere.

Should be some mention of it in the 2.7.2 docs/cpp-runtime.html. Although I
clarified it a bit since then.

> Ideally the constructor should require it by reference, so a legal
> ASTFactory is guaranteed.

Good point.

You might want to check out the 2.7.3 prereleases they're already superior
to 2.7.2 in bugs fixed etc. and various config problems.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Chaos is found in greatest abundance wherever order is being sought.
  --- Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lubos.vnuk at rts.at  Thu Mar 11 08:14:34 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: how to eliminate non-determinism warnings upon keywords and literals?
In-Reply-To: <c2q16p+1p0a@eGroups.com>
Message-ID: <c2q39a+a8ju@eGroups.com>

Why not put semantic actions in the parser?

Or you could turn off the testLiterals option, call testLiteralsTable
() and check the return in the lexer rule manually.

HTH,
Lubos.

--- In antlr-interest@yahoogroups.com, "Fan Yang" <yhhf_dy@y...> 
wrote:
> Hi,
> 
> There are some non-determinism warnings for the following grammar
> 
> ////// snippit1
> class TestLexer extends Lexer;
> ...
> TOKEN_IFDEF	:	"ifdef" { semantic actions }
> 	;
> 
> ID	:	('a'..'z')+
> 	;
> //////
> 
> I know I can use token {...} section to eliminate those warnings, 
but 
> I can't add semantic actions in the tokens section, which is 
> important for me. 
> 
> My question is how to get rid of those warnings by using the same 
way 
> as snippit1 indicated.
> 
> 
> I really appreciate your help,
> 
> fan 
> 
> ////// snippit2
> // One solution but I can't use semantics action
> class TestLexer extends Lexer;
> ...
> tokens {
>         BEGIN="begin";
> }
> 
> ID	:	('a'..'z')+
> 	;



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Thu Mar 11 08:39:05 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Code Generation/Optimization.
In-Reply-To: <20040311161335.81908.qmail@web41011.mail.yahoo.com>
References: <DB69090C-72E1-11D8-87A9-000A95891192@cs.usfca.edu>
	<20040311161335.81908.qmail@web41011.mail.yahoo.com>
Message-ID: <16464.38441.819101.55643@despot.non.net>

>>>>> "Bharath" == Bharath S <payasam79@yahoo.com> writes:
[...]

> My understanding is that AntLR can be used to generate the front-end of a
> compiler (lex-parser-AST). What about the backend? (code
> generation/optimization?). As of now, I am getting clear ideas about
> defining the "structured text" language's syntax+semantics; How would i
> convert it to bytecode?

Basically, write a set of tree grammars that performs various tree
transformations (such as optimizations) and side effects (such as use-def
chains, constants table creation, etc.) and then a final tree grammar which
takes all of that and spits out the output in your desired format.

Of course, it goes without saying that the output of that last pass may
also be the input for other code generation tools.

Have fun,
	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From yhhf_dy at yahoo.com  Thu Mar 11 08:37:59 2004
From: yhhf_dy at yahoo.com (Fan Yang)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: how to eliminate non-determinism warnings upon keywords and literals?
In-Reply-To: <c2q39a+a8ju@eGroups.com>
Message-ID: <c2q4l7+qpoo@eGroups.com>

thank you very much for your response. 

> Why not put semantic actions in the parser?
I need semantic actions in the lexel.

> Or you could turn off the testLiterals option, call 
> testLiteralsTable

I have tried "turn off the testLiterals option", but the warnings are 
still there.

Other suggestions?

thanks,

Fan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Thu Mar 11 08:48:34 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Code Generation/Optimization.
In-Reply-To: <16464.38441.819101.55643@despot.non.net>
Message-ID: <20040311164834.28467.qmail@web41010.mail.yahoo.com>

Hi John,

Thanks much for your comments! I downloaded the
grammar for Pascal and found the "tree grammar" that
you mentioned. 

One other question: If I had actions associated with
tokens in my lexer rules, does it have any side
effects when compared to having actions in parser
rules and only tokens in lexer rules? My understanding
is that semantic actions along with tokens is used to
resolve non-determinism.

Thanks!!

B.
--- "John D. Mitchell" <johnm-antlr@non.net> wrote:
> >>>>> "Bharath" == Bharath S <payasam79@yahoo.com>
> writes:
> [...]
> 
> > My understanding is that AntLR can be used to
> generate the front-end of a
> > compiler (lex-parser-AST). What about the backend?
> (code
> > generation/optimization?). As of now, I am getting
> clear ideas about
> > defining the "structured text" language's
> syntax+semantics; How would i
> > convert it to bytecode?
> 
> Basically, write a set of tree grammars that
> performs various tree
> transformations (such as optimizations) and side
> effects (such as use-def
> chains, constants table creation, etc.) and then a
> final tree grammar which
> takes all of that and spits out the output in your
> desired format.
> 
> Of course, it goes without saying that the output of
> that last pass may
> also be the input for other code generation tools.
> 
> Have fun,
> 	John
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Thu Mar 11 09:13:06 2004
From: brian-l-smith at uiowa.edu (brian-l-smith@uiowa.edu)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <40506AE9.2020502@pybus.org>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu> <405067D8.5040900@rogers.com> <40506AE9.2020502@pybus.org>
Message-ID: <1079025186.40509e22f1080@webmail3.its.uiowa.edu>

Quoting John Pybus <john-yahoo@pybus.org>:

> Igor Fedorenko wrote:
> > Being new to ANTLR and parsing in general I haven't got many complains, 
> > for me ANTLR works just the way it was designed to ;-)
> > One little thing though. It would be nice if ANTLR-generated 
> > parsers/lexers did not require antlr.jar at runtime. Makes no or little 
> > technical difference, but would help when it comes to getting lawyers 
> > approval for ANTLR. Thanks for the great tool.
> 
> I understand where you're coming from, but I'm not sure it would make so 
> much difference.  To include the same functionality, the antlr generated 
> java files would have to contain substantial amounts of boilerplate code 
> present in the ANTLR distribution and would almost certainly count as 
> derived works.

I agree with what John said. You are still distributing the code, whether or not
it is in ANTLR.JAR or mixed in with the rest of your generated code. In fact, I
would prefer less generated code and more code in the runtime library. So,
please keep the runtime JAR file and make it bigger!

- Brian




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Thu Mar 11 09:21:47 2004
From: brian-l-smith at uiowa.edu (brian-l-smith@uiowa.edu)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] RE: updated "antlr 2 bashing list...
Message-ID: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>

Here are some more feature requests:

* Provide a mechanism to explicitly label a rule as a start rule. The current
mechanism of "if it isn't referenced, it is a start rule" has caused me a lot of
frustration in the past. This also forces us to create "dummy" start rules. For
example, imagine a grammar for a Java-like language. I might want to be able to
start my parser at any of the following rules:
    sourceFile, classOrInterface, method, attribute,
    feature, declaration, expression, statement,
    packageDeclaration, importDeclaration, etc.
Currently, I have to create an extra "start rule" for each of these rules. I
would rather prefix the original rules with a "start" keyword. 
    
* In the generated code, make all rules that aren't start rules private instead
of public. In general, I believe that almost all of the generated methods should
be private by default.

* Provide a way to prevent the generation of constructors for the generated
parser and lexer classes. Usually I want to create my own special public
constructor(s) with additional arguments, and I don't want to have all of the
generated constructors around.

- Brian






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lubos.vnuk at rts.at  Thu Mar 11 09:26:49 2004
From: lubos.vnuk at rts.at (Lubos Vnuk)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: how to eliminate non-determinism warnings upon keywords and literals?
In-Reply-To: <c2q4l7+qpoo@eGroups.com>
Message-ID: <c2q7gp+8fhu@eGroups.com>

> I have tried "turn off the testLiterals option", but the
> warnings are still there.
I meant: use the tokens section, delete your non-ID rules and be sure 
to use testLiterals=false.

Then you can do something like this:
ID : ('a'..'z')+
{$setType(testLiteralsTable(ID));
if (_ttype==TOKEN_IFDEF).......semantic actions........ } 
;

Regards,
Lubos.

--- In antlr-interest@yahoogroups.com, "Fan Yang" <yhhf_dy@y...> 
wrote:
> thank you very much for your response. 
> 
> > Why not put semantic actions in the parser?
> I need semantic actions in the lexel.
> 
> > Or you could turn off the testLiterals option, call 
> > testLiteralsTable
> 
> I have tried "turn off the testLiterals option", but the warnings 
are 
> still there.
> 
> Other suggestions?
> 
> thanks,
> 
> Fan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Thu Mar 11 09:36:34 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] RE: updated "antlr 2 bashing list...
In-Reply-To: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>
References: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>
Message-ID: <16464.41890.771724.333978@despot.non.net>

>>>>> "brian-l-smith" == brian-l-smith  <brian-l-smith@uiowa.edu> writes:
[...]

> * Provide a mechanism to explicitly label a rule as a start rule.

++


> * In the generated code, make all rules that aren't start rules private
> instead of public. In general, I believe that almost all of the generated
> methods should be private by default.

Hmm... Do you really want them private or should they be protected?

Thanks,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Thu Mar 11 09:34:04 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Code Generation/Optimization.
In-Reply-To: <20040311164834.28467.qmail@web41010.mail.yahoo.com>
References: <16464.38441.819101.55643@despot.non.net>
	<20040311164834.28467.qmail@web41010.mail.yahoo.com>
Message-ID: <16464.41740.194035.962727@despot.non.net>

>>>>> "Bharath" == Bharath S <payasam79@yahoo.com> writes:
[...]

> One other question: If I had actions associated with tokens in my lexer
> rules, does it have any side effects when compared to having actions in
> parser rules and only tokens in lexer rules? My understanding is that
> semantic actions along with tokens is used to resolve non-determinism.

Basically, the actions in a lexer should be very strictly limited to only
what you need to do to create a token from the input stream (including
whatever meta-information that you need such as location information).

One view of translators that I have is that each phase is sort of like a
net.  The early phases are very coarse and each successive phase is tighter
and tighter.  So, a lexer's job is to take the input stream and make a
sequence of tokens for the parser whose job is to make a tree.


In terms of deciding in which phase to make various (kinds of) decisions, a
great place to start is determining the nature of the (kind of) decision.
I.e., what is the scope of the information that you need to be able to make
the decision.  

For example, look at the lexer rules for dealing with floats and integers
-- that's a little crusty but doable completely in the lexer (for a
language like e.g., Java).  Another example is the distinguishment of
language literals from "ID"s in languages such as Java being doable in the
lexer with the use of the literals lookup table but NOT doable in the
lexers for languages that allow the use of literals to depend upon context.

The same goes for parsers.  Some folks put their grammars through wild
gyrations to (try to) deal with all e.g., ambiguities in the parser when
it's much simpler to just build a reasonable clean and useful tree and
create a tree grammar or three to clean things up.

Hope this helps,
		John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu Mar 11 11:26:05 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Code Generation/Optimization.
In-Reply-To: <20040311161335.81908.qmail@web41011.mail.yahoo.com>
References: <20040311161335.81908.qmail@web41011.mail.yahoo.com>
Message-ID: <F10AE5EB-7391-11D8-87A9-000A95891192@cs.usfca.edu>

Hi  I have a lab using JBurg to generate code in conjunction with 
ANTLR.  Google jburg and check the lab out also at my USF course notes. 
:)

Ter
On Mar 11, 2004, at 8:13 AM, Bharath S wrote:

> Hi All,
>
> My understanding is that AntLR can be used to generate
> the front-end of a compiler (lex-parser-AST). What
> about the backend? (code generation/optimization?). As
> of now, I am getting clear ideas about defining the
> "structured text" language's syntax+semantics; How
> would i convert it to bytecode?
>
> Thanks a lot.
>
> Bharath.
>
> =====
> Bharath Sundararaman
> Graduate Assistant, CAHS.
> (312)-5606532 (M)
> http://www.cs.uic.edu/~bsundara
>
> __________________________________
> Do you Yahoo!?
> Yahoo! Search - Find what you?re looking for faster
> http://search.yahoo.com
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Thu Mar 11 12:27:23 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] jBurg
In-Reply-To: <F10AE5EB-7391-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <20040311202723.58343.qmail@web41015.mail.yahoo.com>

Hi Ter,

I looked at jBurg and I'm glad that there's lot of
information/help. Thank you very much for your
insight.

B.

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> Hi  I have a lab using JBurg to generate code in
> conjunction with 
> ANTLR.  Google jburg and check the lab out also at
> my USF course notes. 
> :)
> 
> Ter
> On Mar 11, 2004, at 8:13 AM, Bharath S wrote:
> 
> > Hi All,
> >
> > My understanding is that AntLR can be used to
> generate
> > the front-end of a compiler (lex-parser-AST). What
> > about the backend? (code
> generation/optimization?). As
> > of now, I am getting clear ideas about defining
> the
> > "structured text" language's syntax+semantics; How
> > would i convert it to bytecode?
> >
> > Thanks a lot.
> >
> > Bharath.
> >
> > =====
> > Bharath Sundararaman
> > Graduate Assistant, CAHS.
> > (312)-5606532 (M)
> > http://www.cs.uic.edu/~bsundara
> >
> > __________________________________
> > Do you Yahoo!?
> > Yahoo! Search - Find what youre looking for
> faster
> > http://search.yahoo.com
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


=====
Bharath Sundararaman
Graduate Assistant, CAHS.
(312)-5606532 (M)
http://www.cs.uic.edu/~bsundara

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Thu Mar 11 12:36:07 2004
From: brian-l-smith at uiowa.edu (brian-l-smith@uiowa.edu)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] RE: updated "antlr 2 bashing list...
In-Reply-To: <16464.41890.771724.333978@despot.non.net>
References: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu> <16464.41890.771724.333978@despot.non.net>
Message-ID: <1079037367.4050cdb726178@webmail3.its.uiowa.edu>

Quoting "John D. Mitchell" <johnm-antlr@non.net>:

> >>>>> "brian-l-smith" == brian-l-smith  <brian-l-smith@uiowa.edu> writes:
> [...]
> 
> > * Provide a mechanism to explicitly label a rule as a start rule.
> 
> ++
> 
> 
> > * In the generated code, make all rules that aren't start rules private
> > instead of public. In general, I believe that almost all of the generated
> > methods should be private by default.
> 
> Hmm... Do you really want them private or should they be protected?

I'm not sure when you would ever want a non-start rule to be public, because I
think that they generally can't do anything useful unless they are called via
"normal" processing (i.e. starting with a start rule on the call stack). But,
maybe I'm wrong.

Actually, I would like a way of saying that all the "public" methods should be
protected or package private by default, as well.

- Brian




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar 11 12:57:02 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] unexpected token error
Message-ID: <c2qjqu+mnch@eGroups.com>

I have the following simple grammar. When I compile, I get an 
unexpected token error. When remove the '*' behind the DATA token, 
then it works! Just curious why it's an error? Thanks!

-Jerry

options { language="Cpp"; }
class PageParser extends Parser;
options { buildAST = true; }
page: DATA*
        ;

class PageLexer extends Lexer;
options { charVocabulary = '\3'..'\377'; }
DATA: ('a'..'z')+
        ;

ANTLR Parser Generator   Version 2.7.3 (20040224-91)   1989-2003 
jGuru.com
soac.g:4:7: rule classDef trapped:
soac.g:4:7: unexpected token: DATA
error: aborting grammar 'PageParser' due to errors
Exiting due to errors.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From yhhf_dy at yahoo.com  Thu Mar 11 12:59:30 2004
From: yhhf_dy at yahoo.com (Fan Yang)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: how to eliminate non-determinism warnings upon keywords and literals?
In-Reply-To: <c2q7gp+8fhu@eGroups.com>
Message-ID: <c2qjvi+78d1@eGroups.com>

Hi Lubos,

Thanks much for your answer! That's exact what I want.

Thanks,

Fan


--- In antlr-interest@yahoogroups.com, "Lubos Vnuk" <lubos.vnuk@r...> 
wrote:
> > I have tried "turn off the testLiterals option", but the
> > warnings are still there.
> I meant: use the tokens section, delete your non-ID rules and be 
sure 
> to use testLiterals=false.
> 
> Then you can do something like this:
> ID : ('a'..'z')+
> {$setType(testLiteralsTable(ID));
> if (_ttype==TOKEN_IFDEF).......semantic actions........ } 
> ;
> 
> Regards,
> Lubos.
> 
> --- In antlr-interest@yahoogroups.com, "Fan Yang" <yhhf_dy@y...> 
> wrote:
> > thank you very much for your response. 
> > 
> > > Why not put semantic actions in the parser?
> > I need semantic actions in the lexel.
> > 
> > > Or you could turn off the testLiterals option, call 
> > > testLiteralsTable
> > 
> > I have tried "turn off the testLiterals option", but the warnings 
> are 
> > still there.
> > 
> > Other suggestions?
> > 
> > thanks,
> > 
> > Fan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar 11 14:34:43 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] referencing the lexer context from the parser
Message-ID: <c2qpi3+4913@eGroups.com>

I'm experimenting with using context sensitive state in my lexer like 
so (got this from the documentation):

BEGIN_TABLE
    :   '[' {this.inTable=true;} // enter table context
    ;

ROW_SEP
    :   {this.inTable}? "----"
    ;

As you can see, I'm using the inTable variable to check the current 
context of the lexer.

Does it make sense to access this inTable variable from my parser? If 
so, how is it done? Thanks!

-Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Thu Mar 11 16:20:00 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: referencing the lexer context from the parser
In-Reply-To: <c2qpi3+4913@eGroups.com>
Message-ID: <c2qvng+pbe3@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Jerry Dy" <jerrydy@s...> wrote:
> Does it make sense to access this inTable variable from my parser? If 
> so, how is it done? Thanks!

Best advice here is "don't".  The problem is lookahead:  if k>1, the lexer state may have changed by the time you look at a token.  
This also makes for fragile code.  Usually, when you feel the urge to tie the lexer to the parser in this way it is time to ask "Am I trying 
to do too much in the lexer?" and expect to hear "yes" echoing back.

--Loring

> -Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 11 21:58:47 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:31 2004
Subject: New antlr-interest member
Message-ID: <1079071127.112.46752.w26@yahoogroups.com>


Hello,

This is an automated email message to let you know that
oliver_kellogg <oliver_kellogg@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From oliver_kellogg at yahoo.com  Thu Mar 11 23:39:15 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Manually insert a node into an automatically contructed tree?
Message-ID: <c2rpf3+roqj@eGroups.com>

Hi,

Is it possible to insert an artificial (dummy) item in the tree
that is automatically constructed for a rule?

I would like to do this for the sake of a more regular
node structure. Here is the concerning rule:

component_list [boolean has_discrim]
  : component_items ( variant_part { has_discrim }? )?
  | /* empty_component_items */ variant_part { has_discrim }?
  ;

At the place of the empty_component_items, I would like
to insert the empty node.
This would make the tree look the same regardless of
whether or not the component_items are present.

The component_items rule is this:

component_items : ( pragma | comp_decl )+
  { #component_items =
     #(#[COMPONENT_ITEMS, "COMPONENT_ITEMS"], #component_items); }


Thanks,

Oliver





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Thu Mar 11 12:12:49 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Free MSVC compiler
References: <c2np9d+29cu@eGroups.com> <20040311145717.GI5125@cs.utwente.nl>
Message-ID: <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>

Hi Ric,

You can down load the MSVC compiler for free now, as part of the .Net stuff
I downloaded it but have not tried to use it yet (still using V6 for what
ever C I get forced into mainly JNI to libraries and don't use C++ at all)

matthew
----- Original Message ----- 
From: "Ric Klaren" <klaren@cs.utwente.nl>
To: <antlr-interest@yahoogroups.com>
Sent: Friday, March 12, 2004 1:57 AM
Subject: Re: [antlr-interest] My antlr 2 bashing list


> Hi,
>
> On Wed, Mar 10, 2004 at 07:11:41PM -0000, J. Stephen Riley Silber wrote:
> > (Er, gimme a sec whilst I put on my bullet-proof jacket here...)
> >
> > BETTER MSVC INTEGRATION SUPPORT.  *ducks the rocks*  I know we all
> > hate M$, and I'm no exception.  But for the love of god, there's a
> > LOT of development going on in MSVC these days, and ignoring the poor
> > saps (like me) who have to use it is not so nice.  Basically, we need
> > for ANTLR to be truly platform agnostic, not just *nix agnostic.
>
> I only have limited access to MSVC6. So I can't really test stuff for
MSVC.
> Basically I'm very close to the point to drop all MSVC support except for
> structural things in the codegen (the extra #define's in class headers
> stuff like that)
>
> When I started there was pretty much no MSVC out of the box support I then
> naively said that I would like to support it. By now I'm more tending to
> the opinion that I should not try to support a compiler that is 'weird'
and
> I cannot test myself. Trying to cobble together community patches and
> fail/success reports is not very effective.
>
> I think it would save myself and the community a lot of aggravation if
> after an ANTLR release there's someone who cobbles up a MSVC-Version-X
> rescue kit and puts it in the filesharing section.
>
> To be clear about it I did not make the final decision to completely drop
> MSVC yet. But if the 2.7.3 release will be another disaster MSVC wise I
> might. So MSVC users grab those snapshots and prereleases and test them
> till you drop and give (good & specific) feedback!
>
> > To whit:
> > * NMAKE-compatible makefiles for the C++ libs.  If we can cobble up
> > NMAKE makefiles, then we're cool with Ric--we're purely command-
> > line.  I got no problem with that, since if you can make an NMAKE
> > file, you can make a GUI project for it.
>
> If someone makes these for the latest snapshot/prerelease I'll drop them
in
> the contrib section. Please be clear about for which MSVC version they are
> though. Also DSP/DSW files are welcome. I don't expect any changes in the
> amount of header/source files unless I get time to port the
> TokenStreamRewrite stuff.
>
> To sum it up:
> - Or things work out mostly via 2.7.3 release and MSVC getting saner with
>   versions 7.0+7.1. And I'll meddle on with whatever comes my way in
patches.
> - Or MSVC support gets dropped
> - Or it will be third party via antlr.org filesharing
> - Or someone steps up to do *continued* MSVC support (who has the
compilers
>   etc)
> - Or someone donates a license of MSVC for ANTLR support licensed to Ter
>   maybe? (If I'd personally buy it, I'd buy the full version usable for
>   commercial stuff, but to dish out that amount of cash for something I'd
>   mainly use for ANTLR I'd have to fall on my head pretty hard)
>
> I'm not against MSVC per se, but I don't want the hassle it gives at the
> moment (not to mention the rude behaviour of some people in the MSVC
camp).
> I'd rather won't release something for a platform than release something
> halfworking for a platform.
>
> > * Has anyone mentioned smoke testing of builds yet?  If that's
> > already happening, let's get MSVC as a test target for the C++ libs.
>
> No compiler no test. Hmm no compiler no bugs.. no compiler no cry. Erm...
> No test suite no test too.. but less usable for puns...
>
> But seriously it would be very good to have a test suite. But heck I
didn't
> even have time to write one for the compiler/tool I work on. Also not
> familiar with the term smoke testing (I assume that's just checking if it
> builds? then again then we'd need a farm of machines/os/compilers to check
> everything probably not feasible for an opensource project at least not
> this one)
>
> > * A warning-free build for the C++ libs, for all major targets.  A
> > Windows build is still littered with warnings all over the place.
>
> Expecting a warning free build across all platforms is maybe not
realistic.
>
> Cheers,
>
> Ric
> --
> -----+++++*****************************************************+++++++++--
-----
>     ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
> -----+++++*****************************************************+++++++++--
-----
>  "Don't call me stupid." "Oh, right. To call you stupid would be an insult
>     to stupid people. I've known sheep that could outwit you! I've worn
>               dresses with higher IQs!" --- A Fish Called Wanda
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Thu Mar 11 11:52:39 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: syn pred implementation
References: <c2o1ed+aqdf@eGroups.com>
Message-ID: <000001c40818$ab5afa00$0400a8c0@NOTEBOOK>

Actually we are talking machine generated code here so error code returns
are OK,
if we can trust the machine to generate the code to check them
matthew
----- Original Message ----- 
From: "lgcraymer" <lgc@mail1.jpl.nasa.gov>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 11, 2004 8:30 AM
Subject: [antlr-interest] Re: syn pred implementation


> I certainly agree on exceptions for errors--that's an ergonomic issue
since error codes are rarely checked--whether they are set in
> errno (C) or are returned from functions--if an operation normally
succeeds.
>
> --Loring
>
>
> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> > Heh great ideas everybody!
> >
> > I will definitely explore this option.  I like having a single style of
> > code gen that will work on all algol derivatives so exception-based
> > implementations ain't so good.  I just have to look at it some more.
> >
> >  From a grammar user perspective, however, I think exceptions for errors
> > is a major leap over other stuff.  Perhaps we can just make it look
> > like you have exceptions but under the hood it's a bunch of IFs and
> > such.
> >
> > I wonder what LISP and ML will do.  Hmm...
> >
> > Oh, the old C-code generator for PCCTS used longjmp for predicates ;)
> >
> > Ter
> > --
> > Professor Comp. Sci., University of San Francisco
> > Creator, ANTLR Parser Generator, http://www.antlr.org
> > Cofounder, http://www.jguru.com
> > Cofounder, http://www.knowspam.net enjoy email again!
> > Cofounder, http://www.peerscope.com pure link sharing
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Thu Mar 11 12:44:10 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Stuff I want improved in antlr and Code Generation/Optimization.
References: <DB69090C-72E1-11D8-87A9-000A95891192@cs.usfca.edu><20040311161335.81908.qmail@web41011.mail.yahoo.com> <16464.38441.819101.55643@despot.non.net>
Message-ID: <000301c40818$adabeee0$0400a8c0@NOTEBOOK>

I had trouble with the mutlti-pass translator/optimizer I built.

The translation was not 1:1  It produced an algorithmic numerical derivative
of the input expression (not a symbolic derivative).
Algorithmic derivatives accurately calculate the derivative of a function
numerically at a given point without using the small differences usually
found in
numerical derivatives, but you would not want to write the code by hand even
for simple functions.
So the tree manipulations were extreme with mulitple replications of
slightly different versions of various branches.

The problems mainly had to do with getting the result tree back into the
main tree without infinite loops and also cutting up, adding new sub-trees
and stitching back together various parts of the branch in one go.
I ended up doing most of it by hand coded optimization routines that worked
on expressions identified by the tree walker.

My comments on reworking of the tree syntax is an attempt to overcome this
problem as the hand coded stuff is
messy and hard to support now that I have forgotten what I was doing.

matthew

----- Original Message ----- 
From: "John D. Mitchell" <johnm-antlr@non.net>
To: <antlr-interest@yahoogroups.com>
Sent: Friday, March 12, 2004 3:39 AM
Subject: [antlr-interest] Code Generation/Optimization.


> >>>>> "Bharath" == Bharath S <payasam79@yahoo.com> writes:
> [...]
>
> > My understanding is that AntLR can be used to generate the front-end of
a
> > compiler (lex-parser-AST). What about the backend? (code
> > generation/optimization?). As of now, I am getting clear ideas about
> > defining the "structured text" language's syntax+semantics; How would i
> > convert it to bytecode?
>
> Basically, write a set of tree grammars that performs various tree
> transformations (such as optimizations) and side effects (such as use-def
> chains, constants table creation, etc.) and then a final tree grammar
which
> takes all of that and spits out the output in your desired format.
>
> Of course, it goes without saying that the output of that last pass may
> also be the input for other code generation tools.
>
> Have fun,
> John
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Thu Mar 11 12:00:54 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like about ANTLR 2.x
References: <c2omgf+mjc7@eGroups.com>
Message-ID: <000101c40818$abef23b0$0400a8c0@NOTEBOOK>

    I like the Java base.
If it ANTLR was not basically in Java I would not be using it.
matthew
----- Original Message ----- 
From: "edcjones" <edcjones@yahoo.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 11, 2004 2:30 PM
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x


> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
> wrote:
> > Folks,
> > 
> > In preparation for the ANTLR 3.0 whitepaper, I need to start
> < writing down everything that annoys me about ANTLR 2.0.  I have 
> < started another "blog" document:
> > 
> > http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> > 
> > Feel free to send in your pet peeves to me or to this list.  I will 
> > try to add to this file.
> 
> Here are some unrealistic and inexpert ideas for ANTLR 3.
> 
> Rewrite ANTRL in C or C++.
> 
> Output parsers written in C or Python.
> 
> Print trees in an easy to look at form.
> 
> Is is necessary for the user to see as much java as he now has to?
> 
> An approach to the man-machine interface issues: if you were designing
> a Python (Perl, ...) module that wraps around ANTLR, what would be the
> classes and functions in the module?
> 
> A grammar is a highly terse description of a highly recursive stucture
> with little internal documentation and with bits of java in it like
> prions in a brain. Are there better ways to write down a grammar?
> 
> Should there be a separate chapter on ANTLR parsers in the Reference
> manual?
> 
> Non-interactive debugger. Ideally, there would be an interactive
> debugger where you see the tokens as they are fed to the parser and
> also see the changes that are made in tha AST.
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From pete.forman at westerngeco.com  Fri Mar 12 01:42:05 2004
From: pete.forman at westerngeco.com (Pete Forman)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] RE: updated "antlr 2 bashing list...
In-Reply-To: <16464.41890.771724.333978@despot.non.net>
References: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>
 <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>
Message-ID: <5.1.1.1.2.20040312091945.0237a150@wgmail2.gatwick.eur.slb.com>

At 2004-03-11 09:36 -0800, John D. Mitchell wrote:
> >>>>> "brian-l-smith" == brian-l-smith  <brian-l-smith@uiowa.edu> writes:
>[...]
>
> > * Provide a mechanism to explicitly label a rule as a start rule.
>
>++
>
>
> > * In the generated code, make all rules that aren't start rules private
> > instead of public. In general, I believe that almost all of the generated
> > methods should be private by default.
>
>Hmm... Do you really want them private or should they be protected?

My immediate thought was private.  Then I thought of an example where
protected might be needed.

If the code generated by ANTLR can be manually improved for a rule
then it might make sense to subclass and override the methods for one
or more rules.  The derived class would be used by the driving
application.

Care would need to be taken.  The optimized rule would need to be
revisited whenever the grammar was changed.  However things like
actions in other rules could be updated without worrying about the
optimized rule.

So I'd modify the OP's request to this:

     In the generated code, make all rules that aren't start rules
     private instead of public by default.  Provide an option to set
     the visibility of these non-start rules.

-- 
Pete Forman                -./\.-  Disclaimer: This post is originated
WesternGeco                  -./\.-   by myself and does not represent
pete.forman@westerngeco.com    -./\.-   opinion of Schlumberger, Baker
http://petef.port5.com           -./\.-   Hughes or their divisions.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Fri Mar 12 02:13:03 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like
    about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADD3@lnml1.eca-international.local>

I know this has been addressed ...

It's all right to require the developer to install Java. Much as I may
or may not like it, if I'm clever enough to understand ANTLR, then I'm
clever enough to understand Java.

But (and this is addressed by the current C++ output and the planned
"emit any compatible language" module) it is NOT reasonable to force us
to require that our users have Java installed. Once we've generated our
lexer/parser/compiler, we need to be able to distribute that as a
stand-alone that doesn't have problematic dependencies ...

Cheers,
Wol

-----Original Message-----
From: matthew ford [mailto:Matthew.Ford@forward.com.au] 
Sent: 11 March 2004 20:01
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest]Stuff I like about ANTRL Re: stuff I don't
like about ANTLR 2.x

    I like the Java base.
If it ANTLR was not basically in Java I would not be using it.
matthew
----- Original Message ----- 
From: "edcjones" <edcjones@yahoo.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, March 11, 2004 2:30 PM
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x


> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
> wrote:
> > Folks,
> > 
> > In preparation for the ANTLR 3.0 whitepaper, I need to start
> < writing down everything that annoys me about ANTLR 2.0.  I have 
> < started another "blog" document:
> > 
> > http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> > 
> > Feel free to send in your pet peeves to me or to this list.  I will 
> > try to add to this file.
> 
> Here are some unrealistic and inexpert ideas for ANTLR 3.
> 
> Rewrite ANTRL in C or C++.
> 
> Output parsers written in C or Python.
> 
> Print trees in an easy to look at form.
> 
> Is is necessary for the user to see as much java as he now has to?
> 
> An approach to the man-machine interface issues: if you were designing
> a Python (Perl, ...) module that wraps around ANTLR, what would be the
> classes and functions in the module?
> 
> A grammar is a highly terse description of a highly recursive stucture
> with little internal documentation and with bits of java in it like
> prions in a brain. Are there better ways to write down a grammar?
> 
> Should there be a separate chapter on ANTLR parsers in the Reference
> manual?
> 
> Non-interactive debugger. Ideally, there would be an interactive
> debugger where you see the tokens as they are fed to the parser and
> also see the changes that are made in tha AST.
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar 12 03:04:37 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Free MSVC compiler
In-Reply-To: <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>
References: <c2np9d+29cu@eGroups.com> <20040311145717.GI5125@cs.utwente.nl> <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>
Message-ID: <20040312110437.GA417@cs.utwente.nl>

Hi,

On Fri, Mar 12, 2004 at 07:12:49AM +1100, matthew ford wrote:
> You can down load the MSVC compiler for free now, as part of the .Net stuff
> I downloaded it but have not tried to use it yet (still using V6 for what
> ever C I get forced into mainly JNI to libraries and don't use C++ at all)

Thanks for the pointer I was not aware of that. I'll check it out.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Chaos always defeats order because it is better organized.
  --- Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar 12 03:12:11 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] unexpected token error
In-Reply-To: <c2qjqu+mnch@eGroups.com>
References: <c2qjqu+mnch@eGroups.com>
Message-ID: <20040312111211.GB417@cs.utwente.nl>

On Thu, Mar 11, 2004 at 08:57:02PM -0000, Jerry Dy wrote:
> page: DATA*

It should be (DATA)* the parenthesis are not optional in ANTLR's syntax. As
aside note rules like this (that can match nothing) might lead to weird
stuff.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Innovation makes enemies of all those who prospered under the old
   regime, and only lukewarm support is forthcoming from those who would
               prosper under the new. --- Niccolò Machiavelli



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Fri Mar 12 05:21:56 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Stuff I want improved in antlr and Code Generation/Optimization.
In-Reply-To: <000301c40818$adabeee0$0400a8c0@NOTEBOOK>
Message-ID: <20040312132156.18574.qmail@web41005.mail.yahoo.com>

Hi Matthew,

Terrence suggested using jBURG(java bottom-up rewrite
generator) for code generation/optimization. Did you
get a chance to look at it? I'm relatively new to
AntLR/jBURG, so pardon me if you were talking about
problems with jBURG implicitly.

Good luck.

B.

--- matthew ford <Matthew.Ford@forward.com.au> wrote:
> I had trouble with the mutlti-pass
> translator/optimizer I built.
> 
> The translation was not 1:1  It produced an
> algorithmic numerical derivative
> of the input expression (not a symbolic derivative).
> Algorithmic derivatives accurately calculate the
> derivative of a function
> numerically at a given point without using the small
> differences usually
> found in
> numerical derivatives, but you would not want to
> write the code by hand even
> for simple functions.
> So the tree manipulations were extreme with mulitple
> replications of
> slightly different versions of various branches.
> 
> The problems mainly had to do with getting the
> result tree back into the
> main tree without infinite loops and also cutting
> up, adding new sub-trees
> and stitching back together various parts of the
> branch in one go.
> I ended up doing most of it by hand coded
> optimization routines that worked
> on expressions identified by the tree walker.
> 
> My comments on reworking of the tree syntax is an
> attempt to overcome this
> problem as the hand coded stuff is
> messy and hard to support now that I have forgotten
> what I was doing.
> 
> matthew
> 
> ----- Original Message ----- 
> From: "John D. Mitchell" <johnm-antlr@non.net>
> To: <antlr-interest@yahoogroups.com>
> Sent: Friday, March 12, 2004 3:39 AM
> Subject: [antlr-interest] Code
> Generation/Optimization.
> 
> 
> > >>>>> "Bharath" == Bharath S <payasam79@yahoo.com>
> writes:
> > [...]
> >
> > > My understanding is that AntLR can be used to
> generate the front-end of
> a
> > > compiler (lex-parser-AST). What about the
> backend? (code
> > > generation/optimization?). As of now, I am
> getting clear ideas about
> > > defining the "structured text" language's
> syntax+semantics; How would i
> > > convert it to bytecode?
> >
> > Basically, write a set of tree grammars that
> performs various tree
> > transformations (such as optimizations) and side
> effects (such as use-def
> > chains, constants table creation, etc.) and then a
> final tree grammar
> which
> > takes all of that and spits out the output in your
> desired format.
> >
> > Of course, it goes without saying that the output
> of that last pass may
> > also be the input for other code generation tools.
> >
> > Have fun,
> > John
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar 12 05:32:36 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Runtime trouble with 2.7.3 on MSVC
In-Reply-To: <c2ni0v+eb9m@eGroups.com>
References: <c2ni0v+eb9m@eGroups.com>
Message-ID: <20040312133236.GD417@cs.utwente.nl>

On Wed, Mar 10, 2004 at 05:07:43PM -0000, J. Stephen Riley Silber wrote:
> I recently built a simple project using 2.7.2 on Visual Studio 2003
> (that hosts MSVC 7.1), and everything compiled just fine.  But I got
> weird runtime errors, things faulting in the middle of the STL vector
> class.
>
> I upgraded to Ric's 20040225 build (a 2.7.3 build, I believe), and
> the same thing happens--though in xtree, this time.

AFAIK this snapshot should have no problems with msvc 7.1 (unless something
new got in). A backtrace might be helpfull. Or the usual -traceParser/Lexer
stuff.

> I'm compiling the ANTLR lib first (single threaded debug), and then
> linking it with my project into an exe (single threaded debug as
> well).

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "I don't have anything against Java - it's the best damn implementation
              of UCSD Pascal ever released..." --- Larry Smith



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From kjerken at yahoo.com  Fri Mar 12 09:00:25 2004
From: kjerken at yahoo.com (kjerken)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Overriding reportError
Message-ID: <c2sqb9+sk6s@eGroups.com>

I've sucessfully built a parser using ANTLR (in C++, thanks Ric!) and
I was wondering what the appropriate method to isolate it from the std
iostreams was.  I can inherit from my generated parser and override
reportError, but I'd rather have an option to completely replace
cout/cerr in the generated parser.  I couldn't find such an option in
the documentation.  Does such a thing exist, and if so, how might I
use it?

Regards,
Kjerken



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 09:37:12 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Stuff I want improved in antlr and Code Generation/Optimization.
In-Reply-To: <20040312132156.18574.qmail@web41005.mail.yahoo.com>
References: <000301c40818$adabeee0$0400a8c0@NOTEBOOK>
	<20040312132156.18574.qmail@web41005.mail.yahoo.com>
Message-ID: <16465.62792.462183.811510@despot.non.net>

>>>>> "Bharath" == Bharath S <payasam79@yahoo.com> writes:
[...]

> Terrence suggested using jBURG(java bottom-up rewrite generator) for code
> generation/optimization. Did you get a chance to look at it? I'm
> relatively new to AntLR/jBURG, so pardon me if you were talking about
> problems with jBURG implicitly.

I can't speak for Matthew but I think you're confusing the tree phase work
with the generation of the (final) output.  They are separate but related
problems.

Take care,
	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 09:38:49 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] RE: updated "antlr 2 bashing list...
In-Reply-To: <5.1.1.1.2.20040312091945.0237a150@wgmail2.gatwick.eur.slb.com>
References: <1079025707.4050a02b13ca3@webmail3.its.uiowa.edu>
	<5.1.1.1.2.20040312091945.0237a150@wgmail2.gatwick.eur.slb.com>
Message-ID: <16465.62889.913343.918578@despot.non.net>

>>>>> "Pete" == Pete Forman <pete.forman@westerngeco.com> writes:
[...]

> In the generated code, make all rules that aren't start rules
> private instead of public by default.  Provide an option to set the
> visibility of these non-start rules.

That would work for me.

Thanks,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 09:45:48 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <1079025186.40509e22f1080@webmail3.its.uiowa.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
	<405067D8.5040900@rogers.com>
	<40506AE9.2020502@pybus.org>
	<1079025186.40509e22f1080@webmail3.its.uiowa.edu>
Message-ID: <16465.63308.703441.975299@despot.non.net>

>>>>> "brian-l-smith" == brian-l-smith  <brian-l-smith@uiowa.edu> writes:
>>>>>> Quoting John Pybus <john-yahoo@pybus.org>:
[...]

> I agree with what John said. You are still distributing the code, whether
> or not it is in ANTLR.JAR or mixed in with the rest of your generated
> code. In fact, I would prefer less generated code and more code in the
> runtime library. So, please keep the runtime JAR file and make it bigger!

I concur.

Specifically, I really like the idea of moving to a more dynamic runtime
ANTLR engine than just statically generated code.


However, I've talked with a handful of people who have decided to go with
JavaCC and one of their big reasons was this antlr.jar issue.  Yes, I think
that's completely insane but there you go.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 09:56:26 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like
    about ANTLR 2.x
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADD3@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADD3@lnml1.eca-international.local>
Message-ID: <16465.63946.618457.36432@despot.non.net>

>>>>> "Anthony" == Anthony Youngman <Anthony.Youngman@ECA-International.com> writes:
[...]

> But (and this is addressed by the current C++ output and the planned
> "emit any compatible language" module) it is NOT reasonable to force us
> to require that our users have Java installed. Once we've generated our
> lexer/parser/compiler, we need to be able to distribute that as a
> stand-alone that doesn't have problematic dependencies ...

So you're wanting someone to reimplement the Antlr run-time for every
single, supported action language?  Ouch.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 09:52:03 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <c2omgf+mjc7@eGroups.com>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
	<c2omgf+mjc7@eGroups.com>
Message-ID: <16465.63683.525221.869261@despot.non.net>

>>>>> "edcjones" == edcjones  <edcjones@yahoo.com> writes:
[...]

> Rewrite ANTRL in C or C++.

Have fun doing that yourself.  :-( :-)

Really, that's just plain nuts.


> Output parsers written in C or Python.

++


> Print trees in an easy to look at form.

What do you mean by that?

You might check out Ter's pstree or whatever he called it which created
fairly nice tree diagrams in Postscript.


> Is is necessary for the user to see as much java as he now has to?

What do you mean by that?


[...]

> A grammar is a highly terse description of a highly recursive stucture
> with little internal documentation and with bits of java in it like
> prions in a brain. Are there better ways to write down a grammar?

Basically, it comes down to... What tradeoffs matter to you?


[...]

> Non-interactive debugger. Ideally, there would be an interactive debugger
> where you see the tokens as they are fed to the parser and also see the
> changes that are made in tha AST.

Yeah, I'm hoping that Antlr3 will make hooking in various kinds of code
generation and run-time instrumentation much cleaner.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Fri Mar 12 10:28:17 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] jBurg + automatic file generation.
In-Reply-To: <16465.62792.462183.811510@despot.non.net>
Message-ID: <20040312182817.61988.qmail@web41010.mail.yahoo.com>

Hi John,

I apologize if i caused any confusion with the
jBURG/tree phase issue. 

When I run the grammar (t.g), it generates p.java,
l.java etc. If i wanted these files to be generated
into a particular package, how would i do it? Please
let me know.

Thanks!

B.
--- "John D. Mitchell" <johnm-antlr@non.net> wrote:
> >>>>> "Bharath" == Bharath S <payasam79@yahoo.com>
> writes:
> [...]
> 
> > Terrence suggested using jBURG(java bottom-up
> rewrite generator) for code
> > generation/optimization. Did you get a chance to
> look at it? I'm
> > relatively new to AntLR/jBURG, so pardon me if you
> were talking about
> > problems with jBURG implicitly.
> 
> I can't speak for Matthew but I think you're
> confusing the tree phase work
> with the generation of the (final) output.  They are
> separate but related
> problems.
> 
> Take care,
> 	John
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Fri Mar 12 10:26:08 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] jBurg + automatic file generation.
In-Reply-To: <16465.62792.462183.811510@despot.non.net>
Message-ID: <20040312182608.48472.qmail@web41012.mail.yahoo.com>


--- "John D. Mitchell" <johnm-antlr@non.net> wrote:
> >>>>> "Bharath" == Bharath S <payasam79@yahoo.com>
> writes:
> [...]
> 
> > Terrence suggested using jBURG(java bottom-up
> rewrite generator) for code
> > generation/optimization. Did you get a chance to
> look at it? I'm
> > relatively new to AntLR/jBURG, so pardon me if you
> were talking about
> > problems with jBURG implicitly.
> 
> I can't speak for Matthew but I think you're
> confusing the tree phase work
> with the generation of the (final) output.  They are
> separate but related
> problems.
> 
> Take care,
> 	John
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


=====
Bharath Sundararaman
Graduate Assistant, CAHS.
(312)-5606532 (M)
http://www.cs.uic.edu/~bsundara

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mtiller at ford.com  Fri Mar 12 10:29:29 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Java runtime
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB345A243C@na1fcm52.dearborn.ford.com>

I don't understand this issue.  The original poster asked that the Java
runtime not be included for C++ projects.  On the face of it, this sounds
like quite a reasonable requirement and as far as I know it is satisfied by
Antlr 2.x.

Has it been stated at any point that this won't be true for Antlr 3.x?

--
Mike

> -----Original Message-----
> From: John D. Mitchell [mailto:johnm-antlr@non.net]
> Sent: Friday, March 12, 2004 12:56 PM
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest]Stuff I like about ANTRL Re: 
> stuff I don't
> like about ANTLR 2.x
> 
> 
> >>>>> "Anthony" == Anthony Youngman 
> <Anthony.Youngman@ECA-International.com> writes:
> [...]
> 
> > But (and this is addressed by the current C++ output and the planned
> > "emit any compatible language" module) it is NOT reasonable 
> to force us
> > to require that our users have Java installed. Once we've 
> generated our
> > lexer/parser/compiler, we need to be able to distribute that as a
> > stand-alone that doesn't have problematic dependencies ...
> 
> So you're wanting someone to reimplement the Antlr run-time for every
> single, supported action language?  Ouch.
> 
> Take care,
> 	John
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Fri Mar 12 10:34:51 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Java runtime
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A243C@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A243C@na1fcm52.dearborn.ford.com>
Message-ID: <16466.715.354768.190609@despot.non.net>

>>>>> "M" == M M <Tiller> writes:
>>>>>> JDM wrote:
[...]

>> So you're wanting someone to reimplement the Antlr run-time for every
>> single, supported action language?  Ouch.

> I don't understand this issue.  The original poster asked that the Java
> runtime not be included for C++ projects.  On the face of it, this sounds
> like quite a reasonable requirement and as far as I know it is satisfied
> by Antlr 2.x.

Well, it seemed pretty clear to me that the OP was asking about all
languages not just C++.

I asked for clarification  w.r.t. the issue of wanting this done for all of
the supported language (-- along with an implicit plonk :-).

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 12 11:46:05 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Java runtime
In-Reply-To: <16466.715.354768.190609@despot.non.net>
Message-ID: <c2t41t+d0hp@eGroups.com>

Actually, I read the original post as "I don't want to have to install java just to be able to run ANTLR".  I think that that was addressed 
by bringing ANTLR up under GCJ and Ric's makefile.

--Loring


--- In antlr-interest@yahoogroups.com, "John D. Mitchell" <johnm-antlr@n...> wrote:
> >>>>> "M" == M M <Tiller> writes:
> >>>>>> JDM wrote:
> [...]
> 
> >> So you're wanting someone to reimplement the Antlr run-time for every
> >> single, supported action language?  Ouch.
> 
> > I don't understand this issue.  The original poster asked that the Java
> > runtime not be included for C++ projects.  On the face of it, this sounds
> > like quite a reasonable requirement and as far as I know it is satisfied
> > by Antlr 2.x.
> 
> Well, it seemed pretty clear to me that the OP was asking about all
> languages not just C++.
> 
> I asked for clarification  w.r.t. the issue of wanting this done for all of
> the supported language (-- along with an implicit plonk :-).
> 
> Take care,
> 	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mtiller at ford.com  Fri Mar 12 12:17:47 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Java runtime
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB345A243E@na1fcm52.dearborn.ford.com>

> From: lgcraymer [mailto:lgc@mail1.jpl.nasa.gov]
> Sent: Friday, March 12, 2004 2:46 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Re: Java runtime
> 
> Actually, I read the original post as "I don't want to have 
> to install java just to be able to run ANTLR".  I think that 
> that was addressed 
> by bringing ANTLR up under GCJ and Ric's makefile.

Huh? Are you sure you are not mixing threads?  The original poster (Anthony
Youngman) made it very clear he had no problem with installing Java to run
ANTLR.  Note the first sentence of his message (quoted in its entirety):

AY: I know this has been addressed ...
AY: 
AY: It's all right to require the developer to install Java. Much as I may
AY: or may not like it, if I'm clever enough to understand ANTLR, then I'm
AY: clever enough to understand Java.
AY: 
AY: But (and this is addressed by the current C++ output and the planned
AY: "emit any compatible language" module) it is NOT reasonable to force us
AY: to require that our users have Java installed. Once we've generated our
AY: lexer/parser/compiler, we need to be able to distribute that as a
AY: stand-alone that doesn't have problematic dependencies ...
AY: 
AY: Cheers,
AY: Wol

Just to be clear, when you say "run ANTLR" I'm assuming you don't mean "use
ANTLR" or "run an ANTLR generated parser".

> --Loring

--
Mike


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 12 13:59:49 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Java runtime
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A243E@na1fcm52.dearborn.ford.com>
Message-ID: <c2tbsl+fotv@eGroups.com>

You're right, I misremembered.  It would be somewhat of a challenge to implement mixed Java/anything runtimes that were even 
moderately portable.

--Loring


--- In antlr-interest@yahoogroups.com, "Tiller, Michael (M.M.)" <mtiller@f...> wrote:
> > From: lgcraymer [mailto:lgc@m...]
> > Sent: Friday, March 12, 2004 2:46 PM
> > To: antlr-interest@yahoogroups.com
> > Subject: [antlr-interest] Re: Java runtime
> > 
> > Actually, I read the original post as "I don't want to have 
> > to install java just to be able to run ANTLR".  I think that 
> > that was addressed 
> > by bringing ANTLR up under GCJ and Ric's makefile.
> 
> Huh? Are you sure you are not mixing threads?  The original poster (Anthony
> Youngman) made it very clear he had no problem with installing Java to run
> ANTLR.  Note the first sentence of his message (quoted in its entirety):
> 
> AY: I know this has been addressed ...
> AY: 
> AY: It's all right to require the developer to install Java. Much as I may
> AY: or may not like it, if I'm clever enough to understand ANTLR, then I'm
> AY: clever enough to understand Java.
> AY: 
> AY: But (and this is addressed by the current C++ output and the planned
> AY: "emit any compatible language" module) it is NOT reasonable to force us
> AY: to require that our users have Java installed. Once we've generated our
> AY: lexer/parser/compiler, we need to be able to distribute that as a
> AY: stand-alone that doesn't have problematic dependencies ...
> AY: 
> AY: Cheers,
> AY: Wol
> 
> Just to be clear, when you say "run ANTLR" I'm assuming you don't mean "use
> ANTLR" or "run an ANTLR generated parser".
> 
> > --Loring
> 
> --
> Mike



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Fri Mar 12 14:12:59 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Handling delimeter separated lists
Message-ID: <20040312221259.12758.qmail@web12703.mail.yahoo.com>

Hello,

I have a grammar which has multiple instances of
comma-separated lists of different types.  The upshot
of this is that I've got several sets of rules which
look like this:

foo_list: foo (COMMA foo)*;

I find these lists much harder to process than their
LR counterparts.  I'm generally doing something like
this:

foo_list
  returns [List fooInstList]
  :
{ String fooInst = null; fooInstList = null; } 
:
  fooInst = foo[true, null] 
  {
    fooInstList = new ArrayList( );
    fooInstList.add(fooInst);
  }
  (EAL_COMMA property[false, fooInstList])*
  {
    // Nothing left to do
  }
}
;

foo [boolean isFirst, List foobarList] returns [String
fooInst]
  {fooInst = null;} 
  :
  foo:FOOBAR
  {
    String fooInst = foo.getText( );
    if (!isFirst)
    {
      foobarList.add(fooInst);
    }
  }
;

This seems to work but it seems less than elegant
especially in those cases where foo is called from
productions other than foo_list.  This issue must
arise pretty frequently in LL grammars.  Does anyone
have any idioms they'd like to share?  Is there
something I'm missing?  Thanks in advance.

-jason  

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 12 14:38:10 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Handling delimeter separated lists
In-Reply-To: <20040312221259.12758.qmail@web12703.mail.yahoo.com>
Message-ID: <c2te4i+rosv@eGroups.com>

Look at the AST generation and tree parser support.  Generally, you want to use the parsing pass to structure a tree and process 
actions from a tree walker, possibly after several tree transformation passes.

--Loring

--- In antlr-interest@yahoogroups.com, Jason <jasonriz@y...> wrote:
> Hello,
> 
> I have a grammar which has multiple instances of
> comma-separated lists of different types.  The upshot
> of this is that I've got several sets of rules which
> look like this:
> 
> foo_list: foo (COMMA foo)*;
> 
> I find these lists much harder to process than their
> LR counterparts.  I'm generally doing something like
> this:
> 
> foo_list
>   returns [List fooInstList]
>   :
> { String fooInst = null; fooInstList = null; } 
> :
>   fooInst = foo[true, null] 
>   {
>     fooInstList = new ArrayList( );
>     fooInstList.add(fooInst);
>   }
>   (EAL_COMMA property[false, fooInstList])*
>   {
>     // Nothing left to do
>   }
> }
> ;
> 
> foo [boolean isFirst, List foobarList] returns [String
> fooInst]
>   {fooInst = null;} 
>   :
>   foo:FOOBAR
>   {
>     String fooInst = foo.getText( );
>     if (!isFirst)
>     {
>       foobarList.add(fooInst);
>     }
>   }
> ;
> 
> This seems to work but it seems less than elegant
> especially in those cases where foo is called from
> productions other than foo_list.  This issue must
> arise pretty frequently in LL grammars.  Does anyone
> have any idioms they'd like to share?  Is there
> something I'm missing?  Thanks in advance.
> 
> -jason  
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Search - Find what you're looking for faster
> http://search.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Fri Mar 12 14:45:25 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Nested parsing
Message-ID: <16466.15749.78063.848103@swan.psy.cmu.edu>

In the past, I've successfully used multiple lexers in ANTLR with a
single parser, to parse documents (as in the javadoc comment example
that comes with ANTLR).

But now, I am trying to figure out how best to design multilevel
parsers, while maintaining the proper location information suitable
for error reporting, etc.  There are a couple of different examples of
things I need to do, but I will just give one example right now:

Let's say I am given the task of parsing an XML document (supposedly
conforming to a schema) that has embedded text that I need to also
parse, e.g. (stripping out a lot of relevant stuff):

<document>
<turn>
Hi <pause/> there.  Say something?
</turn>
<turn>
One.  Two.  Three.
</turn>
</document>
My task is to parse, do some rearrangement and computation, and spit
out a new XML document, conforming to a different schema, e.g:

<d>
<t>
<u><w>Hi</w><p/><w>there</w><period/></u>
<u><w>Say</w><w>something</w><question/></u>
</t>
<t>
<u><w>One</w><period/></u>
<u><w>Two</w><period/></u>
<u><w>Three</w><period/></u>
</t>
</d>

Currently, I'm doing this task as follows:
- Parse XML, with validation, using Sun JAXB data binding
- Walk the tree, doing stuff, and each time hitting a "turn", manually
  concatenate text and also invent special tokens (corresponding to
  stuff like "pause")
- Pass the text to an ANTLR-generated parser which turns it into JAXB
  tree fragments
- Serialize the tree into an XML file

One problem is that slurping XML into a tree does not create locator
information, so ANTLR parsing error messages are hard to correlate
back to the original XML file.

I was thinking of replacing use of JAXB for parsing in the first step,
using SAX instead, and getting location information that way, passing
it to the ANTLR parser.  But SAX is brutally low level and I lose the
advantage of just automatically getting a tree.

Another possibility is to use XTA for ANTLR.  This seems to require
hand-translating the schema into an ANTLR grammar.  In addition, I'm
not sure from the documentation how XTA would interact with an attempt
to nest a parser within it (and share location information).  The
samples use the "PCDATA" token to slurp up text content of XML.

Any ideas on an elegant architecture for my transformation task?

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 12 15:02:49 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Nested parsing
In-Reply-To: <16466.15749.78063.848103@swan.psy.cmu.edu>
Message-ID: <c2tfip+70g5@eGroups.com>

--- In antlr-interest@yahoogroups.com, FranklinChen@c... wrote:
> Another possibility is to use XTA for ANTLR.  This seems to require
> hand-translating the schema into an ANTLR grammar.  In addition, I'm
> not sure from the documentation how XTA would interact with an attempt
> to nest a parser within it (and share location information).  The
> samples use the "PCDATA" token to slurp up text content of XML.

Have you looked at Oliver Zeigermann's XPA (from the www.antlr.org Showcase)?

--Loring

> Any ideas on an elegant architecture for my transformation task?
> 
> -- 
> Franklin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cj_daly at yahoo.com  Fri Mar 12 15:14:47 2004
From: cj_daly at yahoo.com (Chris Daly)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Handling delimeter separated lists
In-Reply-To: <20040312221259.12758.qmail@web12703.mail.yahoo.com>
Message-ID: <c2tg97+l3ob@eGroups.com>

Hi Jason,

I do this sort of thing a lot.  The pattern I've come up with looks
something like this (I haven't run it through Antlr so there could be
some typos, but it should give the general idea).  Note how you can
construct the ArrayList immediately inside the returns clause and how
you can do all of the ArrayList.add() calls in foo_list (no need to
pass the list into the foo rule.

foo_list returns [List l = new ArrayList()] :
{ String f = null; }
f=foo { l.add(f); } (COMMA f=foo { l.add(f); } )*
;

foo returns [String val = null] :
foo:FOO { val = foo.getText(); }
;


Hope this helps...

Chris



--- In antlr-interest@yahoogroups.com, Jason <jasonriz@y...> wrote:
> Hello,
> 
> I have a grammar which has multiple instances of
> comma-separated lists of different types.  The upshot
> of this is that I've got several sets of rules which
> look like this:
> 
> foo_list: foo (COMMA foo)*;
> 
> I find these lists much harder to process than their
> LR counterparts.  I'm generally doing something like
> this:
> 
> foo_list
>   returns [List fooInstList]
>   :
> { String fooInst = null; fooInstList = null; } 
> :
>   fooInst = foo[true, null] 
>   {
>     fooInstList = new ArrayList( );
>     fooInstList.add(fooInst);
>   }
>   (EAL_COMMA property[false, fooInstList])*
>   {
>     // Nothing left to do
>   }
> }
> ;
> 
> foo [boolean isFirst, List foobarList] returns [String
> fooInst]
>   {fooInst = null;} 
>   :
>   foo:FOOBAR
>   {
>     String fooInst = foo.getText( );
>     if (!isFirst)
>     {
>       foobarList.add(fooInst);
>     }
>   }
> ;
> 
> This seems to work but it seems less than elegant
> especially in those cases where foo is called from
> productions other than foo_list.  This issue must
> arise pretty frequently in LL grammars.  Does anyone
> have any idioms they'd like to share?  Is there
> something I'm missing?  Thanks in advance.
> 
> -jason  
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Search - Find what you're looking for faster
> http://search.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 12 15:20:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Manually insert a node into an automatically contructed tree?
In-Reply-To: <c2rpf3+roqj@eGroups.com>
References: <c2rpf3+roqj@eGroups.com>
Message-ID: <C97083E4-747B-11D8-963D-000A95891192@cs.usfca.edu>


On Mar 11, 2004, at 11:39 PM, oliver_kellogg wrote:

> Hi,
>
> Is it possible to insert an artificial (dummy) item in the tree
> that is automatically constructed for a rule?

Yes.  It looks like you are doing so below...doesn't that work?

Thanks,
Ter
>
> I would like to do this for the sake of a more regular
> node structure. Here is the concerning rule:
>
> component_list [boolean has_discrim]
>   : component_items ( variant_part { has_discrim }? )?
>   | /* empty_component_items */ variant_part { has_discrim }?
>   ;
>
> At the place of the empty_component_items, I would like
> to insert the empty node.
> This would make the tree look the same regardless of
> whether or not the component_items are present.
>
> The component_items rule is this:
>
> component_items : ( pragma | comp_decl )+
>   { #component_items =
>      #(#[COMPONENT_ITEMS, "COMPONENT_ITEMS"], #component_items); }
>
>
> Thanks,
>
> Oliver
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Fri Mar 12 15:38:20 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Handling delimeter separated lists
In-Reply-To: <c2tg97+l3ob@eGroups.com>
Message-ID: <20040312233820.17043.qmail@web12702.mail.yahoo.com>

> foo_list returns [List l = new ArrayList()] :
> { String f = null; }
> f=foo { l.add(f); } (COMMA f=foo { l.add(f); } )*
> ;
> 
> foo returns [String val = null] :
> foo:FOO { val = foo.getText(); }
> ;
> 
> 
> Hope this helps...
> 
Chris,

Thanks, this solves my problem; I'm glad I asked.  I
didn't realize you could sneak that action into the
midst of the subrule.  I knew there had to be an
easier way.  Thanks again.

-jason

__________________________________
Do you Yahoo!?
Yahoo! Search - Find what youre looking for faster
http://search.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 12 18:16:25 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] added a lot of lookahead computation notes
Message-ID: <6DAC5AFB-7494-11D8-963D-000A95891192@cs.usfca.edu>

Folks, if you're following my thoughts for ANTLR 3 lookahead 
computation and usage during parse-time, you will find my recent entry 
interesting:

http://www.antlr.org/blog/antlr3/lookahead.tml

I think I have a nice way to do generalized LL lookahead (k=1, k>1, 
infinite k) including hoisting of predicates, all in the guise of a 
specialized  NFA->DFA conversion.  In fact, I'm a little frightened I 
have rendered my dissertation old news! ;)  'Course that *was* 13 years 
ago (heavy sigh) ;)

The reason that I am using all of my cpu time thinking about how to 
view lookahead computation etc... is that I smell a vast simplification 
of the process (that will also appeal to theory-wienies).  The simpler 
the perspective, the simpler the algorithm, and hopefully the more 
transparent the ANTLR code will be.  One of my primary goals is 
"obvious code" for ANTLR 3.0.

Anyway, I've tried to write down my current understanding of the 
issues...feel free to comment or whatever (yes, I know there are some 
typos in there) :)  I really think I've latched onto something 
significant here.

Ahhhhhh....I'm never happier than when I'm working on a graph algorithm 
:) :D

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mbresnah at visi.com  Fri Mar 12 19:12:16 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Free MSVC compiler
In-Reply-To: <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>
Message-ID: <EKEJKOHPOIIALFJMKEIGAEEMFIAA.mbresnah@visi.com>

> You can down load the MSVC compiler for free now, as part of the
> .Net stuff
> I downloaded it but have not tried to use it yet (still using V6 for what
> ever C I get forced into mainly JNI to libraries and don't use C++ at all)

Are you sure the .NET SDK includes a C/C++ compiler?  All I am aware of are
C#, VB, and JScript compilers.  A J# compiler is downloadable separately.

Mike Bresnahan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Fri Mar 12 23:43:33 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Free MSVC compiler
References: <EKEJKOHPOIIALFJMKEIGAEEMFIAA.mbresnah@visi.com>
Message-ID: <006801c408ce$e32cdd70$0400a8c0@NOTEBOOK>

Here is the info that pointed me to it.  As I said I have not actually
tested it.

matthew

http://www.thefreecountry.com/compilers/cpp.shtml

"Unbelievably, the Microsoft Visual C/C++ command line compiler, along with
C#, VB.NET and JScript.NET, appears to be available from Microsoft for
download for free. (Note that if you use the Opera web browser to go to this
URL, set Opera to pretend that it is Mozilla (just hit F12 and select
Mozilla 5.0), otherwise Microsoft's web server will redirect you to a dummy
page. Their browser detection script, which serves different pages to
different browsers, is broken.) You will also need to download the Microsoft
Platform SDK which contains the Windows headers and libraries for the
compilers. The command line compiler is the same one that comes with the
commercial Visual C++ Standard, which means that it does not have an
optimizer (or at least, not the optimizer that ships with the Professional
version that comes with MSDN). "

----- Original Message ----- 
From: "Mike Bresnahan" <mbresnah@visi.com>
To: <antlr-interest@yahoogroups.com>
Sent: Saturday, March 13, 2004 2:12 PM
Subject: RE: [antlr-interest] Free MSVC compiler


> > You can down load the MSVC compiler for free now, as part of the
> > .Net stuff
> > I downloaded it but have not tried to use it yet (still using V6 for
what
> > ever C I get forced into mainly JNI to libraries and don't use C++ at
all)
>
> Are you sure the .NET SDK includes a C/C++ compiler?  All I am aware of
are
> C#, VB, and JScript compilers.  A J# compiler is downloadable separately.
>
> Mike Bresnahan
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From antlr-interest at yahoogroups.com  Sat Mar 13 00:37:58 2004
From: antlr-interest at yahoogroups.com (antlr-interest@yahoogroups.com)
Date: Mon Dec 20 16:16:31 2004
Subject: take it
Message-ID: <20040313085745.9BF591CE894@lobby.jguru.com>

<?}
-------------- next part --------------
A non-text attachment was scrubbed...
Name: shower_regid.zip
Type: application/x-zip-compressed
Size: 25491 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040313/1f1fbe9c/shower_regid.bin
From oliver_kellogg at yahoo.com  Sat Mar 13 04:20:46 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Manually insert a node into an automatically contructed tree
Message-ID: <c2uuau+qbsc@eGroups.com>

Terence Parr wrote:

> > Is it possible to insert an artificial (dummy) item in the tree
> > that is automatically constructed for a rule?
> 
> Yes. It looks like you are doing so below...doesn't that work?

It does work for the C++ targeted grammar, but it
doesn't for the Java targeted one which I am currently
working on:

AdaParser.java:7061: exception antlr.RecognitionException is never 
thrown in body of corresponding try statement

This happens while translating the method empty_component_items()
which is produced by the rule

empty_component_items :
  { #empty_component_items =
    #(#[COMPONENT_ITEMS,
       "COMPONENT_ITEMS"], #empty_component_items); }
  ;

Thanks,

Oliver




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat Mar 13 09:06:10 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:31 2004
Subject: [antlr-interest] Re: Manually insert a node into an automatically contructed tree
In-Reply-To: <c2uuau+qbsc@eGroups.com>
References: <c2uuau+qbsc@eGroups.com>
Message-ID: <B9F770E8-7510-11D8-963D-000A95891192@cs.usfca.edu>

On Mar 13, 2004, at 4:20 AM, oliver_kellogg wrote:

> Terence Parr wrote:
>
>>> Is it possible to insert an artificial (dummy) item in the tree
>>> that is automatically constructed for a rule?
>>
>> Yes. It looks like you are doing so below...doesn't that work?
>
> It does work for the C++ targeted grammar, but it
> doesn't for the Java targeted one which I am currently
> working on:
>
> AdaParser.java:7061: exception antlr.RecognitionException is never
> thrown in body of corresponding try statement
>
> This happens while translating the method empty_component_items()
> which is produced by the rule
>
> empty_component_items :
>   { #empty_component_items =
>     #(#[COMPONENT_ITEMS,
>        "COMPONENT_ITEMS"], #empty_component_items); }
>   ;

Oh, sorry about that...that rule has no content to match.  Put this 
imaginary root generation code in the rule where you actually match 
stuff that needs an imaginary root.

:)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver_kellogg at yahoo.com  Sat Mar 13 11:31:38 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Manually insert a node into an automatically contructed tree
Message-ID: <c2vniq+d47u@eGroups.com>

Terence Parr wrote:
> 
> Oh, sorry about that...that rule has no content to match. Put this
> imaginary root generation code in the rule where you actually match
> stuff that needs an imaginary root.

Ah, just to make sure I am understanding you:
I changed the original

  component_list [boolean has_discrim]
    : component_items ( variant_part { has_discrim }? )?
    | empty_component_items variant_part { has_discrim }?
    ;

to

  component_list [boolean has_discrim]
    : component_items ( variant_part { has_discrim }? )?
    |! vp:variant_part { has_discrim }?
         { #component_list =
             #(#[COMPONENT_LIST, "COMPONENT_LIST"],
               #(#[COMPONENT_ITEMS, "COMPONENT_ITEMS"]), #vp); }
    ;

Is that what you had in mind?

Thanks alot,

Oliver




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat Mar 13 14:29:41 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079216981.129.69549.w31@yahoogroups.com>


Hello,

This is an automated email message to let you know that
myzhaoxh <myzhaoxh@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From parrt at cs.usfca.edu  Sat Mar 13 16:27:59 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Manually insert a node into an automatically contructed tree
In-Reply-To: <c2vniq+d47u@eGroups.com>
References: <c2vniq+d47u@eGroups.com>
Message-ID: <72B7F050-754E-11D8-963D-000A95891192@cs.usfca.edu>


On Mar 13, 2004, at 11:31 AM, oliver_kellogg wrote:

> Terence Parr wrote:
>>
>> Oh, sorry about that...that rule has no content to match. Put this
>> imaginary root generation code in the rule where you actually match
>> stuff that needs an imaginary root.
>
> Ah, just to make sure I am understanding you:
> I changed the original
>
>   component_list [boolean has_discrim]
>     : component_items ( variant_part { has_discrim }? )?
>     | empty_component_items variant_part { has_discrim }?
>     ;
>
> to
>
>   component_list [boolean has_discrim]
>     : component_items ( variant_part { has_discrim }? )?
>     |! vp:variant_part { has_discrim }?
>          { #component_list =
>              #(#[COMPONENT_LIST, "COMPONENT_LIST"],
>                #(#[COMPONENT_ITEMS, "COMPONENT_ITEMS"]), #vp); }
>     ;
>
> Is that what you had in mind?

Yup...if you only want the imag node on the second alt (that action 
goes in 2nd alt, don't forget) :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat Mar 13 16:30:32 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] fixed nasty FOLLOW computation bug
Message-ID: <CDDA3437-754E-11D8-963D-000A95891192@cs.usfca.edu>

Folks,

Thanks goes to help and prodding by Robin Green...I have spent a few 
hours and determined the exact problem and fix. My python grammar now 
works properly :)  I'll be releasing antlr-2.7.3rc3 very soon and then 
by end of my spring break (next week), we'll have 2.7.3 out if no one 
has serious problems with the rc3. :)

Robin: I'll send you the fix separately.

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From braden at endoframe.com  Sat Mar 13 20:27:36 2004
From: braden at endoframe.com (Braden McDaniel)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
Message-ID: <1079238456.3448.70.camel@localhost.localdomain>

On Sat, 2004-03-06 at 15:05, Terence Parr wrote:
> Folks,
> 
> In preparation for the ANTLR 3.0 whitepaper, I need to start writing 
> down everything that annoys me about ANTLR 2.0.  I have started another 
> "blog" document:
> 
> http://www.antlr.org/blog/antlr3/antlr2.bashing.tml
> 
> Feel free to send in your pet peeves to me or to this list.  I will try 
> to add to this file.

Hopefully I'm not repeating someone; but I don't see this on the list
yet.

I use ANTLR to generate C++. For some time, my major complaint about the
C++ part of ANTLR has been that the support library seems to be poorly
factored. For instance, I don't use ANTLR's AST support. But because of
the rather monolithic nature of the support library, there seems to be
no way to keep from pulling in all the support library's AST machinery
when linking.

That's my number one beef. The other thing I ran into is that it was
*way* too difficult to convince ANTLR to generate the parser in an
unnamed namespace. The C++ code generator is more or less hard-wired to
generate code that will be available to multiple translation units; but
I don't want that. Fortunately, I was able to trick ANTLR into doing
what I want.

Considering those are my major complaints, it seems I've been pretty
happy with ANTLR. :-)

-- 
Braden McDaniel                           e-mail: <braden@endoframe.com>
<http://endoframe.com>                    Jabber: <braden@jabber.org>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Sun Mar 14 09:32:51 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Free MSVC compiler
In-Reply-To: <006801c408ce$e32cdd70$0400a8c0@NOTEBOOK>
References: <EKEJKOHPOIIALFJMKEIGAEEMFIAA.mbresnah@visi.com> <006801c408ce$e32cdd70$0400a8c0@NOTEBOOK>
Message-ID: <20040314173250.GA9861@cs.utwente.nl>

On Sat, Mar 13, 2004 at 06:43:33PM +1100, matthew ford wrote:
> Here is the info that pointed me to it.  As I said I have not actually
> tested it.

It looks like the info is wrong. I could not find the compiler in the .NET
sdk stuff this site points to. Unless I got the wrong files or something.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
   Words fly like arrows
      as if we knew what was right and wrong. --- Chuang Tsu



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Sun Mar 14 12:01:52 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Free MSVC compiler
In-Reply-To: <20040314173250.GA9861@cs.utwente.nl>
Message-ID: <c32dnh+p9p@eGroups.com>

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Sat, Mar 13, 2004 at 06:43:33PM +1100, matthew ford wrote:
> > Here is the info that pointed me to it.  As I said I have not actually
> > tested it.
> 
> It looks like the info is wrong. I could not find the compiler in
the .NET
> sdk stuff this site points to. Unless I got the wrong files or
something.

The SDK *does* include a C++ compiler Ric:

http://weblogs.asp.net/jtobler/articles/35600.aspx
http://winprog.org/tutorial/msvc.html
http://www.pcplus.co.uk/media/pcplus/pdf/193/193.programmers%20world.c++.pdf
http://groups.google.com/groups?selm=eqN2%24oRiDHA.2224%40TK2MSFTNGP10.phx.gbl

Cheers,

Micheal
ANTLR/C#




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun Mar 14 12:39:13 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <1079238456.3448.70.camel@localhost.localdomain>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu> <1079238456.3448.70.camel@localhost.localdomain>
Message-ID: <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>


On Mar 13, 2004, at 8:27 PM, Braden McDaniel wrote:
> I use ANTLR to generate C++. For some time, my major complaint about 
> the
> C++ part of ANTLR has been that the support library seems to be poorly
> factored. For instance, I don't use ANTLR's AST support. But because of
> the rather monolithic nature of the support library, there seems to be
> no way to keep from pulling in all the support library's AST machinery
> when linking.

The issue could be that C++ / C header files are a poor mechanism in 
general for factoring stuff due to very coarse granularity of 
dependencies.  Can you suggest some factoring tips?

[Side note from an anti-C++ bigot: I can't believe people don't 
complain about the complete lack of portability of C++.  Never once 
have I heard people say that the Java code won't compile somewhere 
(course the build process is a different story perhaps<wink>).  It is 
truly astounding that nearly 20 years after the first lecture I heard 
on C++, we still don't have a portable language.  Stroustroup (SP?) is 
coming to USF to speak soon...I'll try to leave my heavier projectiles 
at home.] ;) :D  Just my opinion folks ;)

> That's my number one beef. The other thing I ran into is that it was
> *way* too difficult to convince ANTLR to generate the parser in an
> unnamed namespace. The C++ code generator is more or less hard-wired to
> generate code that will be available to multiple translation units; but
> I don't want that. Fortunately, I was able to trick ANTLR into doing
> what I want.

Hooray!

> Considering those are my major complaints, it seems I've been pretty
> happy with ANTLR. :-)

Yeah!  Thanks, Braden...

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun Mar 14 13:16:29 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] comments on Tom Moog's notes
Message-ID: <DC7BBA9C-75FC-11D8-963D-000A95891192@cs.usfca.edu>

Hi Tom,

Tom,

Thanks for the very impressive notes.  There are linked to from "antlr 
2 bashing page" and here is a direct link:

http://www.antlr.org/blog/antlr3/moog.txt

A few comments enclosed.

Terence

> Follow set caching
> ------------------
> There are problems analyzing expressions of the form:
>
> rule: (A1|B1) {A2|B2) ... (A25|B25)
>
> because follow sets are cached only for rules.  In this case 2**25
> alternative would need to be computed.  However, if each subrule
> had its follow set cached, it would require only 50 evaluations.

The new NFA to DFA conversion will not simulate the NFA to compute a 
finite, acyclic DFA (i.e., lookahead tree).  It will compute a possibly 
cyclic DFA.  Now, lookahead computation will not be a function of k!  
It will be a function of the number of states. :)

> There are two kinds of semantic predicates needed.  One kind is used
> to creat a "virtual token" which combines token information with a
> semantic test.  This is the classic C typename test.  The other kind
> of semantic predicate is used to control flow and does not depend on
> context.  In short, type 1 semantic predicate always depend onOB
> lookahead while type 2 semantic predicate never depend on lookahead.

Can't you just define a predicate that doesn't reference lookahead?  Is 
that what you mean?  Can you give me an example?

> Support for Unicode up to at least 0x10ffff (current xml range).
>
> Tolerance for binary zero would be desirable.  After all, flex
> can do it.

I have an example that matches binary stuff :)  The UNICODE works up to 
0xFFFFE :)

> Consider the following rule:
>
>     r1: A ( B | epsilon )* C ;
>
> with input:
>
>     A C
>
> In pccts this results in an ambiguity warning because it can't decide
> whether whether to enter the epsilon branch or bypass the entire
> subrule.  When there is no action in the epsilon alternative antlr3
> should allow it and handle it in the "natural" way - bypassing
> the subrule

I'm not sure I can agree...you have provided two ways to match the same 
input: an ambiguity by definition, right?  On the other hand, are you 
saying for action processing this is very desirable?  For example,

(A | B)*

matches the same thing as

(A | B | {foo} )*

but {foo} is executed as it exits or if nothing is matched?

>  |   call       : ("@" ID)? && <<isVarName(LT(2))>>? fun_call          
>     |
>  |              | (ID)?     && <<isExtCmdName>>?     command           
>     |
>  |              | (ID "(")?                          fun_call          
>     |
>  |              |                                    command           
>     |
>  |              ;                                                      
>     |

How does isExtCmdName test the input symbol?  Is it a variable?  If so, 
where is it set?

I'm hoping to "hoist > 0 lookahead distance" with the combined NFA->DFA 
conversion + collect predicts.  I'll run this past you when I figure it 
out ;)

> The volume of memory required for bit sets grows as N**2 because the
> number of terminals tends to grow as N and the number of tests grows
> as N.  For very large grammars this is a bit of an annoyance (pun).
> You might consider a technique which would try for greater locality of
> bit sets so that it for non-pathological cases it would be N**1.5 or
> N*log(N).  An alternative would be run-length encoding for sparse
> bit sets.  The bits sets could be expanded at startup time.
> I believe JFlex uses this.

I think that a simple initial offset like "my first non-zero bit is n" 
will lop off a big chunk off the front and still provide equally fast 
access at analysis and parse-time with no uncompression.  Not sure, but 
should help.  I'm definitely a bit concerned with the size of the 
bitsets needed to build DFAs from a large grammar.  Could end up with 
30,000 states for a big grammar.  I note that there are 4515 words in 
the java.g file.  Each word will result in perhaps 3 or 4 states.

Note that I stop the DFA conversion the instant an alternative is 
uniquely predicted.  Even if sets are very big, I won't be computing 
that many of them.  For degenerate cases like

a : A Q R S | B X Y Z ;

The DFA would be simply three states:

o -A-> o predict alt 1
|
| -B-> o predict alt 2

I won't even consider the Q or X or beyond.  Slick, eh?

Now, UNICODE in the lexer could be an issue, but again, I don't build a 
DFA for entire lexer grammar, just for the left edges for prediction. 
:)

Concerning exceptions for code gen.  I agree that try/catch is the 
easiest to use as I want to use exceptions for error handling.  What 
would we do for C?  I'd resist the longjmp this time probably ;)

> Set Difference
> --------------
> Is there any way to say: this token matches all the tokens *not* in
> the FIRST set of some other alternative or not in the union of the
> FIRST sets of some other alternatives ?

Do you mean like

( x
| y
| .
)

This means match not x and not y.  It removes the lookhead from '.' 
from previous alts...this is an "idiom" i guess.  Are you suggesting 
something more formal?

Thanks again for the thoughts.
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sun Mar 14 13:54:25 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] comments on Tom Moog's notes
In-Reply-To: <DC7BBA9C-75FC-11D8-963D-000A95891192@cs.usfca.edu>
References: <DC7BBA9C-75FC-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <16468.54417.369065.375842@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
[...]

>> Support for Unicode up to at least 0x10ffff (current xml range).

>> Tolerance for binary zero would be desirable.  After all, flex can do
>> it.

> I have an example that matches binary stuff :) The UNICODE works up to
> 0xFFFFE :)

All input should be *cleanly* supported.  I.e., get rid of all of the
inline/in-band signaling.


[...]

> Now, UNICODE in the lexer could be an issue, but again, I don't build a
> DFA for entire lexer grammar, just for the left edges for prediction.  :)

This is going to be great for lexing.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sun Mar 14 13:59:21 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <c32kjp+hufu@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> [Side note from an anti-C++ bigot: I can't believe people don't 
> complain about the complete lack of portability of C++.  Never once 
> have I heard people say that the Java code won't compile somewhere 
> (course the build process is a different story perhaps<wink>).  It is 
> truly astounding that nearly 20 years after the first lecture I heard 
> on C++, we still don't have a portable language.  Stroustroup (SP?) is 
> coming to USF to speak soon...I'll try to leave my heavier projectiles 
> at home.] ;) :D  Just my opinion folks ;)
> 

Ter--

You just don't understand (said in a tone of absolute innocence).  C++
_was_ a portable language--and then they "standardized" it.  The
problem is that the standards committee re-invented the
language--standard C++ depends heavily on templates--rather than
standardizing and tweaking common practice.

But, "don't worry, be happy".  Java generics are coming!  I sure hope
that Sun has learned from the C++ lessons and devised some sort of
reflection support so that debuggers behave decently.

--Loring




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From fehrin at t-online.de  Sun Mar 14 11:47:06 2004
From: fehrin at t-online.de (fehrin@t-online.de)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Free MSVC compiler
In-Reply-To: <20040314173250.GA9861@cs.utwente.nl>
References: <EKEJKOHPOIIALFJMKEIGAEEMFIAA.mbresnah@visi.com> <006801c408ce$e32cdd70$0400a8c0@NOTEBOOK> <20040314173250.GA9861@cs.utwente.nl>
Message-ID: <20040314204706.A1919@t-online.de>

To my best knowledge there is one theoretical and suboptimal way to get the Microsoft C++ Compiler for free
and it is to get the Windows device driver kit (DDK).
It is theoretical since you cannot download it and have to pay for handling and shipping
and it is suboptimal in so far as it is not the current compiler (7.0 instead of 7.1), it works
only after manual configuration and it produces warnings (but executable executables) on using it.

Cheers

Franz

On Sun, Mar 14, 2004 at 06:32:51PM +0100, Ric Klaren wrote:
> On Sat, Mar 13, 2004 at 06:43:33PM +1100, matthew ford wrote:
> > Here is the info that pointed me to it.  As I said I have not actually
> > tested it.
> 
> It looks like the info is wrong. I could not find the compiler in the .NET
> sdk stuff this site points to. Unless I got the wrong files or something.
> 
> Cheers,
> 
> Ric




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun Mar 14 14:48:46 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <c32kjp+hufu@eGroups.com>
References: <c32kjp+hufu@eGroups.com>
Message-ID: <C0C159A7-7609-11D8-A7E6-000393BB647E@cs.usfca.edu>


On Mar 14, 2004, at 1:59 PM, lgcraymer wrote:
> You just don't understand (said in a tone of absolute innocence).  C++
> _was_ a portable language--and then they "standardized" it.  The

<snicker>

> problem is that the standards committee re-invented the
> language--standard C++ depends heavily on templates--rather than
> standardizing and tweaking common practice.
>
> But, "don't worry, be happy".  Java generics are coming!  I sure hope

Ewwww.  I'm not sure I like the idea.  Like the concept (even in C++) 
but I don't like what it does to my language :)

> that Sun has learned from the C++ lessons and devised some sort of
> reflection support so that debuggers behave decently.

It shall be better, but the boxing / unboxing stuff will cause some 
trouble...over private email, somebody just sent me an example where a 
hashtable<string,string> gets messed up because table.put(1,3) converts 
the ints to Integers and doesn't complain.

Anyhoo...not sure I like the complexity :)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cesar at ciencias.unam.mx  Sun Mar 14 15:35:33 2004
From: cesar at ciencias.unam.mx (=?ISO-8859-1?Q?C=E9sar_L=F3pez_Natar=E9n?=)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] !, for non contributing elements of the rule's text.
Message-ID: <1079307333.11688.6.camel@rats>

Hello:

I found that the '!' operator helps me for indicating that certain text
matched on a do not have  to be included on the rule's text.

It worked great on the following rule:

'\''! (~('\'' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))*'\''!

It does not include the ' on the rule's text, but when I tried to
apllied the same pattern to the double-quote literal:

'"'! (~('"' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))* '"'!

Antlr generate the lexer, but when I tried to compile the source code
(*NOTE: I'm using the C# generator), I get this errors:


JScriptLexer.cs(789) error CS0103: The name `_saveIndex' could not be
found in `Microsoft.JScript.JScriptLexer'

I'm not sending the full lexer file, but if it's needed just let know.

The full rule is:

STRING_LITERAL
	: '"'! (~('"' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))*
'"'! 
	|
	  '\''! (~('\'' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))*
'\''!
    ;


Thanks in advance.

-- 
C?sar


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From braden at endoframe.com  Sun Mar 14 17:12:32 2004
From: braden at endoframe.com (Braden McDaniel)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu>
	 <1079238456.3448.70.camel@localhost.localdomain>
	 <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <1079313152.3448.140.camel@localhost.localdomain>

On Sun, 2004-03-14 at 15:39, Terence Parr wrote:
> On Mar 13, 2004, at 8:27 PM, Braden McDaniel wrote:
> > I use ANTLR to generate C++. For some time, my major complaint about 
> > the
> > C++ part of ANTLR has been that the support library seems to be poorly
> > factored. For instance, I don't use ANTLR's AST support. But because of
> > the rather monolithic nature of the support library, there seems to be
> > no way to keep from pulling in all the support library's AST machinery
> > when linking.
> 
> The issue could be that C++ / C header files are a poor mechanism in 
> general for factoring stuff due to very coarse granularity of 
> dependencies.  Can you suggest some factoring tips?

Specifically, header files aren't the problem. I think the classes
themselves could be factored differently; couldn't the AST stuff be
factored into a subclass of antlr::Parser? That way a generated parser
that doesn't use an AST could inherit an AST-ignorant abstract parser.

Since you mention header files, though, I will make the comment that I
find the "one header + one source file per class" strategy to be a poor
one for factoring C++ projects into files. It leads to a lot of files
with hard-to-track dependencies. It also encourages the use of "private
headers" to factor out implementation details common to different
classes. Private headers, while not intrinsically bad, are an
all-too-convenient vehicle for leaking private symbols into a library
interface.

By keeping closely related classes (that are likely to be used together)
in the same header-source file pair, one can keep common implementation
details in an unnamed namespace where they are out of the library
interface. And since there are fewer files, there are fewer header file
dependencies to keep track of. One has a clearer idea of what gets
pulled in by a particular include directive simply because more code is
in fewer places.

Also, for a given volume of code, a project with fewer translation units
will almost always compile faster than one with more translation units
(however, incremental compilation will generally be slower with fewer
translation units). There is also the theoretical observation that the
more code is thrown at the compiler at once, the more opportunities it
should have to optimize the code.

> [Side note from an anti-C++ bigot: I can't believe people don't 
> complain about the complete lack of portability of C++.

Because it is figment of the imagination of anti-C++ bigots. ;-)

Really, ANTLR's C++ library builds on many platforms; and I could rattle
off a number of other C++ projects that do the same (including my own).
Doesn't sound like a "complete lack of portability" to me.

>   Never once 
> have I heard people say that the Java code won't compile somewhere 
> (course the build process is a different story perhaps<wink>).

And I never heard a C++ developer complain of CLASSPATH issues,
unexpected behavior on an untested VM, poor performance due to
constraints inherent in the dynamism of the language...

I'll stop. ;-)

>   It is 
> truly astounding that nearly 20 years after the first lecture I heard 
> on C++, we still don't have a portable language.  Stroustroup (SP?) is 
> coming to USF to speak soon...I'll try to leave my heavier projectiles 
> at home.] ;) :D  Just my opinion folks ;)

Perhaps we don't have a fully portable language; but we do have a
standard vendor-independent one. With sufficient interest and time for
standard support to materialize (and C++ has that), that can be just as
good. Maybe better. ;-)

-- 
Braden McDaniel                           e-mail: <braden@endoframe.com>
<http://endoframe.com>                    Jabber: <braden@jabber.org>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Sun Mar 14 17:58:34 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: !, for non contributing elements of the rule's text.
In-Reply-To: <1079307333.11688.6.camel@rats>
Message-ID: <c332ka+9ckq@eGroups.com>

--- In antlr-interest@yahoogroups.com, C?sar L?pez Natar?n
<cesar@c...> wrote:
> Hello:
> 
> I found that the '!' operator helps me for indicating that certain text
> matched on a do not have  to be included on the rule's text.
> 
> It worked great on the following rule:
> 
> '\''! (~('\'' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))*'\''!
> 
> It does not include the ' on the rule's text, but when I tried to
> apllied the same pattern to the double-quote literal:
> 
> '"'! (~('"' | '\\' | '\u000A' | '\u000D' | '\u2028' | '\u2029'))* '"'!
> 
> Antlr generate the lexer, but when I tried to compile the source code
> (*NOTE: I'm using the C# generator), I get this errors:
> 
> 
> JScriptLexer.cs(789) error CS0103: The name `_saveIndex' could not be
> found in `Microsoft.JScript.JScriptLexer'
> 
> I'm not sending the full lexer file, but if it's needed just let know.

Hiya C?sar,

Please try the 2.7.3rc2 release on the site. You will need to apply a
fix discussed here:
    http://groups.yahoo.com/group/antlr-interest/message/10766

Cheers,

Micheal
ANTLR/C#

PS   How's your project going?. You may not have noticed but your RSS
feed seems to be dead (from your blog).

PPS  If you have tested build scripts for ANTLR/C# on Mono, I'd be
happy to incorporate them in the standard distro.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver_kellogg at yahoo.com  Sun Mar 14 21:48:11 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x
Message-ID: <c33g2r+e8fl@eGroups.com>

Hi all,

It turns out that changing the grammar to avoid the
empty rules is major work.
I figure that the lack of support for them is somewhat
debatable since in the ANTLR C++ code, they work - only
in the Java target generator they don't.

So, if I had a single wish for the next ANTLR, it would
be this - support for empty rules by the Java code
generator.

(-: Oliver


oliver_kellogg wrote:
> It does work for the C++ targeted grammar, but it
> doesn't for the Java targeted one which I am currently
> working on:
>
> AdaParser.java:7061: exception antlr.RecognitionException is never
> thrown in body of corresponding try statement
>
> This happens while translating the method empty_component_items()
> which is produced by the rule
>
> empty_component_items :  /* empty */
> { #empty_component_items =
> #(#[COMPONENT_ITEMS,
> "COMPONENT_ITEMS"], #empty_component_items); }
> ;





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Mon Mar 15 02:07:00 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like 
      about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADDA@lnml1.eca-international.local>

Sorry, I don't get you ...

If it's a "supported action language", then surely the Antlr runtime
must be available?

If I get Antlr to emit a lexer/parser in C++, I want to be able to
compile that into an executable, otherwise what's the point of doing it?
And if the runtime is only available as Java, then my lexer/parser isn't
going to work, so what was the point of doing it?

But for any COMPILEABLE language, your requirement can be met by gcj :-)

For any INTERPRETED "supported action language", well it can't be a
supported action language unless either the language supports calls into
Java or the Antlr runtime has been ported into it ... and the former
could easily not be an available option.

Cheers,
Wol

-----Original Message-----
From: John D. Mitchell [mailto:johnm-antlr@non.net] 
Sent: 12 March 2004 17:56
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest]Stuff I like about ANTRL Re: stuff I don't
like about ANTLR 2.x

>>>>> "Anthony" == Anthony Youngman
<Anthony.Youngman@ECA-International.com> writes:
[...]

> But (and this is addressed by the current C++ output and the planned
> "emit any compatible language" module) it is NOT reasonable to force
us
> to require that our users have Java installed. Once we've generated
our
> lexer/parser/compiler, we need to be able to distribute that as a
> stand-alone that doesn't have problematic dependencies ...

So you're wanting someone to reimplement the Antlr run-time for every
single, supported action language?  Ouch.

Take care,
	John


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar 15 02:17:04 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Free MSVC compiler
In-Reply-To: <c32dnh+p9p@eGroups.com>
References: <20040314173250.GA9861@cs.utwente.nl> <c32dnh+p9p@eGroups.com>
Message-ID: <20040315101704.GA12687@cs.utwente.nl>

Hmmm, I'll recheck then I thought I tried every exe that came with it for
signs of C++ understanding, looks like I missed one.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  There are 10 kinds of people - those that understand binary and
  those that don't. --- Unknown



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar 15 03:05:19 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like about ANTLR 2.x
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409ADDA@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409ADDA@lnml1.eca-international.local>
Message-ID: <20040315110519.GB12687@cs.utwente.nl>

Hi,

On Mon, Mar 15, 2004 at 10:07:00AM -0000, Anthony Youngman wrote:
> For any INTERPRETED "supported action language", well it can't be a

Interpreted!?!? Whoever said that ? I've always been under the impression
that this would be a language-to-language translation. If performance is an
aim for ANTLR 3 then interpreted is definitely not the way to go.

> supported action language unless either the language supports calls into
> Java or the Antlr runtime has been ported into it ... and the former
> could easily not be an available option.

For C++ support in ANTLR 3 calling/interfacing java from C++ looks to me
personally a total non option. A tool requiring java for a generated parser
targetted for C++, sounds like a tool I personally would give a very wide
berth. Requiring java for development I can tolerate ;)

Cheers,

Ric 'if-it-ain't-compiled-it-ain't-no-good ;)' Klaren
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 Why don't we just invite them to dinner and massacre them all when they're
  drunk? You heard the man. There's seven hundred thousand of them. Ah? ..
           So it'd have to be something simple with pasta, then.
                 From: Interesting Times by Terry Pratchet


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Mon Mar 15 03:22:56 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest]Stuff I like about ANTRL  Re: stuff I don't like 
      about ANTLR 2.x
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADDD@lnml1.eca-international.local>

Don't worry :-)

I was responding to the previous poster to say that I was confused.

Now you're responding to me saying you're confused.

I think your sig about chaos winning (because it's better organised)
discusses this bit of the thead to a T :-)

Cheers,
Wol 

-----Original Message-----
From: Ric Klaren [mailto:klaren@cs.utwente.nl] 
Sent: 15 March 2004 11:05
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest]Stuff I like about ANTRL Re: stuff I don't
like about ANTLR 2.x

Hi,

On Mon, Mar 15, 2004 at 10:07:00AM -0000, Anthony Youngman wrote:
> For any INTERPRETED "supported action language", well it can't be a

Interpreted!?!? Whoever said that ? I've always been under the
impression
that this would be a language-to-language translation. If performance is
an
aim for ANTLR 3 then interpreted is definitely not the way to go.

> supported action language unless either the language supports calls
into
> Java or the Antlr runtime has been ported into it ... and the former
> could easily not be an available option.

For C++ support in ANTLR 3 calling/interfacing java from C++ looks to me
personally a total non option. A tool requiring java for a generated
parser
targetted for C++, sounds like a tool I personally would give a very
wide
berth. Requiring java for development I can tolerate ;)

Cheers,

Ric 'if-it-ain't-compiled-it-ain't-no-good ;)' Klaren
--
-----+++++*****************************************************+++++++++
-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++
-------
 Why don't we just invite them to dinner and massacre them all when
they're
  drunk? You heard the man. There's seven hundred thousand of them. Ah?
..
           So it'd have to be something simple with pasta, then.
                 From: Interesting Times by Terry Pratchet


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar 15 03:54:23 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079351663.108.43515.w60@yahoogroups.com>


Hello,

This is an automated email message to let you know that
fatih_boy <fatih_boy@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From wiggjd at lsbu.ac.uk  Mon Mar 15 04:02:25 2004
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] MSVC and ANTLR-2.7.3
Message-ID: <40559B51.7090204@lsbu.ac.uk>

I had problems compiling an ANTLR-2.7.3 downloaded from the 
ANTLR website but am now using Ric's version 20040115 
successfully. I also compiled an ANTLR library.

Thanks Ric. Please don't give uplooking after us MSVC users, I 
don't know what I would do without your help.

Also I must put it on record that I have not had any runtime 
problems with using MSVC 6.

David.

Message: 11
    Date: Fri, 12 Mar 2004 14:32:36 +0100
    From: Ric Klaren <klaren@cs.utwente.nl>
Subject: Re: Runtime trouble with 2.7.3 on MSVC

On Wed, Mar 10, 2004 at 05:07:43PM -0000, J. Stephen Riley 
Silber wrote:

 > I recently built a simple project using 2.7.2 on Visual 
Studio 2003
 > (that hosts MSVC 7.1), and everything compiled just fine. 
But I got
 > weird runtime errors, things faulting in the middle of the 
STL vector
 > class.
 >
 > I upgraded to Ric's 20040225 build (a 2.7.3 build, I 
believe), and
 > the same thing happens--though in xtree, this time.


AFAIK this snapshot should have no problems with msvc 7.1 
(unless something
new got in). A backtrace might be helpfull. Or the usual 
-traceParser/Lexer
stuff.


 > I'm compiling the ANTLR lib first (single threaded debug), 
and then
 > linking it with my project into an exe (single threaded debug as
 > well).


Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
     ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 
4893722  ----
-----+++++*****************************************************+++++++++-------
   "I don't have anything against Java - it's the best damn 
implementation
               of UCSD Pascal ever released..." --- Larry Smith



________________________________________________________________________



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar 15 04:18:18 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] stuff I don't like about ANTLR 2.x
In-Reply-To: <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>
References: <9AF79B38-6FA9-11D8-8C5A-000A95891192@cs.usfca.edu> <1079238456.3448.70.camel@localhost.localdomain> <A7752516-75F7-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <20040315121818.GE12687@cs.utwente.nl>

Hi,

On Sun, Mar 14, 2004 at 12:39:13PM -0800, Terence Parr wrote:
> The issue could be that C++ / C header files are a poor mechanism in
> general for factoring stuff due to very coarse granularity of
> dependencies.  Can you suggest some factoring tips?

Well that's not the issue ;) It's more that it's a 1-on-1 java port and in
java the only hammer java people have to solve something is OO. While in
C++ stuff might have been solved in another way (antlr's support lib is
just waiting for some template stuff)

There's a lot of algorithms wrapped in classes like ASTFactory that
actually would be more fit for a template implementation (dupTree and
friends) Also interface stuff does not port as nicely to C++ in all
situations. The reference counter used in the runtime is then another way
to make things work less than ideal. The C++ runtime also has a some
redundant class hierarchies. AST<-BaseAST<-CommonAST baseast is redundant
since no antlr code will work with less than common AST functionality.

<ANTI-JAVA-BIGOT-SECTION>
> [Side note from an anti-C++ bigot: I can't believe people don't
> complain about the complete lack of portability of C++.]

We complain more about compiler compliance ;)

> Never once have I heard people say that the Java code won't compile

Ah it just runs out of memory if I take the wrong VM.. or does other funny
random things ;)

> It is truly astounding that nearly 20 years after the first lecture I heard
> on C++, we still don't have a portable language.

My guess is that C++ code runs on more platforms than java ;) Might I make
a honourable mention of java's sibling (developer wise) TCL/TK which is
seriously more portable than java ;)

Not to mention the fact that's it's so easy to catch a nullpointer
exception in java. So that the below-average developer can just add a catch
somewhere to work around his incompetence, leaving the offending program in
some inconsistent state with all the 'funny' side effects. Of course in
windows you'll never (well almost) see the exception spam this creates.
(yes I wasted too much time tracking down a problem in a program that did
this kind off stuff... Ye gods I like core dumps! (it took java to make me
say that ;) ))

To sum up C++ is not ideal but java is far from the holy grail it was
heralded to be ;) Incompetents can still make holes in feet all over the
planet (their own as well as in the feet of the poor sobs that have to use
their products) I kinda prefer working around the trouble with C++ but
everyone their own poison ;)

</ANTI-JAVA-BIGOT-SECTION>

(sorry for the XML Ter ;) )

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "Good judgement comes from experience.
     Experience comes from bad judgement." --- Unknown



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar 15 06:45:19 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079361919.1304.31127.w52@yahoogroups.com>


Hello,

This is an automated email message to let you know that
salee2945 <suh.lee@hydroone.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From braden at endoframe.com  Mon Mar 15 07:29:41 2004
From: braden at endoframe.com (Braden McDaniel)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Free MSVC compiler
In-Reply-To: <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>
References: <c2np9d+29cu@eGroups.com> <20040311145717.GI5125@cs.utwente.nl>
	 <000201c40818$ac7a4cb0$0400a8c0@NOTEBOOK>
Message-ID: <1079364580.3448.144.camel@localhost.localdomain>

On Thu, 2004-03-11 at 15:12, matthew ford wrote:
> Hi Ric,
> 
> You can down load the MSVC compiler for free now, as part of the .Net stuff
> I downloaded it but have not tried to use it yet (still using V6 for what
> ever C I get forced into mainly JNI to libraries and don't use C++ at all)

It does not, however, include *any* of the C++ standard library, which
significantly hampers its utility for compiling C++ programs.

-- 
Braden McDaniel                           e-mail: <braden@endoframe.com>
<http://endoframe.com>                    Jabber: <braden@jabber.org>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From glindholm at yahoo.com  Mon Mar 15 07:42:22 2004
From: glindholm at yahoo.com (Greg Lindholm)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Antlr website font for code samples is unreadable
In-Reply-To: <6DAC5AFB-7494-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <20040315154223.67824.qmail@web12407.mail.yahoo.com>

Hi Ter,
 
Sorry to gripe but I find the font you use for code samples on the Antlr website to be practically unreadable.   Do you think maybe you could make it a little bigger, please.
 
To read the source code stuff I have to either "view source" or copy and paste it into notepad.
 
I'm using M$-IE and have no problems anywhere else.
 
Thanks,

Greg

Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040315/a0aaeead/attachment.html
From jsrs701 at yahoo.com  Mon Mar 15 10:56:10 2004
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: MSVC and ANTLR-2.7.3
In-Reply-To: <40559B51.7090204@lsbu.ac.uk>
Message-ID: <c34u8a+recf@eGroups.com>


Ha ha!  When I finally got to tracing down the runtime problem I was 
having, it was only when I was building trees--and astFactory was 
NULL.

So, um, apparently you have to set up the AST Factory manually now in 
C++, huh?  :)

Steve



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 15 12:24:52 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x
In-Reply-To: <c33g2r+e8fl@eGroups.com>
References: <c33g2r+e8fl@eGroups.com>
Message-ID: <D07E2B50-76BE-11D8-963D-000A95891192@cs.usfca.edu>

Ack...yeah, Java's contract for exceptions means you cannot generate 
the try/catch if you have nothing to match.  Hm....I guess we could 
detect that.

Is it a pain to avoid these just because you have a lot or is there a 
semantics reason?

Thanks,
Ter

On Mar 14, 2004, at 9:48 PM, oliver_kellogg wrote:

> Hi all,
>
> It turns out that changing the grammar to avoid the
> empty rules is major work.
> I figure that the lack of support for them is somewhat
> debatable since in the ANTLR C++ code, they work - only
> in the Java target generator they don't.
>
> So, if I had a single wish for the next ANTLR, it would
> be this - support for empty rules by the Java code
> generator.
>
> (-: Oliver
>
>
> oliver_kellogg wrote:
>> It does work for the C++ targeted grammar, but it
>> doesn't for the Java targeted one which I am currently
>> working on:
>>
>> AdaParser.java:7061: exception antlr.RecognitionException is never
>> thrown in body of corresponding try statement
>>
>> This happens while translating the method empty_component_items()
>> which is produced by the rule
>>
>> empty_component_items :  /* empty */
>> { #empty_component_items =
>> #(#[COMPONENT_ITEMS,
>> "COMPONENT_ITEMS"], #empty_component_items); }
>> ;
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From tmoog at polhode.com  Sun Mar 14 21:08:58 2004
From: tmoog at polhode.com (Tom Moog)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] unicode, predicates, exceptions
In-Reply-To: <DC7BBA9C-75FC-11D8-963D-000A95891192@cs.usfca.edu>
References: <DC7BBA9C-75FC-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <Pine.NEB.4.58.0403141726180.29836@panix5.panix.com>



> THM: Support for Unicode up to at least 0x10ffff (current xml
> range).

> TJP: I have an example that matches binary stuff :)  The
> UNICODE works up to 0xFFFFE :)

THM: I forgot that antlr 2 can handle large unicode values, but I
had the impression that this was not practical because the bit
sets were too large.  It's not that people use Linear B all that
often; it's that without support for unicode up to 0x10ffff, the
programmer isn't guarantted that it is compatible with xml
based software.

> THM:  Regarding ambiguity for: A ( B | epsilon )* C

> TJP: I'm not sure I can agree...you have provided two ways to
> match the same input: an ambiguity by definition, right?  On
> the other hand, are you saying for action processing this is
> very desirable?  For example,

> (A | B)*
>
> matches the same thing as
>
> (A | B | {foo} )*
>
> but {foo} is executed as it exits or if nothing is matched?

THM: My suggestions wasn't very well thought out.  Let's drop it.

> TJP: How does isExtCmdName test the input symbol?  Is it a
> variable?  If so, where is it set?

THM: "isExtCmdName" is a boolean valued function of the lookahead
token that consults a dictionary.

> TJP: I'm hoping to "hoist > 0 lookahead distance" with the
> combined NFA->DFA conversion + collect predicts.  I'll run this
> past you when I figure it out ;)

Ahhh, right, regular expression lookahead gives you more freedom.

> TJP: Concerning exceptions for code gen.  I agree that
> try/catch is the easiest to use as I want to use exceptions for
> error handling.  What would we do for C?  I'd resist the
> longjmp this time probably ;)

THM: Yes C is a problem.  Not only are there the transfer of
control problems, but it doesn't have the concept of dtors
for cleanup as the stack is unwound.  You would have to
create something which allowed dtor-like actions on stack
local variables.

> TJP: Do you mean like
>
> ( x
> | y
> | .
> )

THM: Ahhh, previously, "." would match everything and
resulted in lots of ambiguity warnings.  This would be ok.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From gudnabrsam at yahoo.com  Mon Mar 15 12:38:06 2004
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Antlr website font for code samples is unreadable
In-Reply-To: <16E68CFB-76BF-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <20040315203806.89892.qmail@web20405.mail.yahoo.com>

I think that's Ter's way of preserving elitism in the
field of computer science...  ;)

-Matt

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> On Mar 15, 2004, at 7:42 AM, Greg Lindholm wrote:
> 
> > Hi Ter,
> >  
> > Sorry to gripe but I find the font you use for
> code samples on the 
> > Antlr website to be practically unreadable.   Do
> you think maybe you 
> > could make it a little bigger, please.
> >  
> > To read the source code stuff I have to either
> "view source" or copy 
> > and paste it into notepad.
> >  
> > I'm using M$-IE and have no problems anywhere
> else.
> 
> Hmm...IE on the mac is ok.  Hm...i thought size=2
> was a pretty size for 
> people.  That is what we chose for jGuru, though I
> wanted size=1 ;)
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
http://mail.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 15 12:26:50 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Antlr website font for code samples is unreadable
In-Reply-To: <20040315154223.67824.qmail@web12407.mail.yahoo.com>
References: <20040315154223.67824.qmail@web12407.mail.yahoo.com>
Message-ID: <16E68CFB-76BF-11D8-963D-000A95891192@cs.usfca.edu>


On Mar 15, 2004, at 7:42 AM, Greg Lindholm wrote:

> Hi Ter,
> ?
> Sorry to gripe but I find the font you use for code samples on the 
> Antlr website to be practically unreadable.?? Do you think maybe you 
> could make it a little bigger, please.
> ?
> To read the source code stuff I have to either "view source" or copy 
> and paste it into notepad.
> ?
> I'm using M$-IE and have no problems anywhere else.

Hmm...IE on the mac is ok.  Hm...i thought size=2 was a pretty size for 
people.  That is what we chose for jGuru, though I wanted size=1 ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 15 13:19:34 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Antlr website font for code samples is unreadable
In-Reply-To: <20040315203806.89892.qmail@web20405.mail.yahoo.com>
Message-ID: <c356l6+r5c1@eGroups.com>

The "text size" menu under "View" works with IE and antlr.org.  Oops--now I=
've pointed out that I have learned how to use an MS 
product.  I cannot possibly be one of the elite ...

--Loring


--- In antlr-interest@yahoogroups.com, Matt Benson <gudnabrsam@y...> wrote:=

> I think that's Ter's way of preserving elitism in the
> field of computer science...  ;)
> 
> -Matt
> 
> --- Terence Parr <parrt@c...> wrote:
> > 
> > On Mar 15, 2004, at 7:42 AM, Greg Lindholm wrote:
> > 
> > > Hi Ter,
> > > ?
> > > Sorry to gripe but I find the font you use for
> > code samples on the 
> > > Antlr website to be practically unreadable.?? Do
> > you think maybe you 
> > > could make it a little bigger, please.
> > > ?
> > > To read the source code stuff I have to either
> > "view source" or copy 
> > > and paste it into notepad.
> > > ?
> > > I'm using M$-IE and have no problems anywhere
> > else.
> > 
> > Hmm...IE on the mac is ok.  Hm...i thought size=2
> > was a pretty size for 
> > people.  That is what we chose for jGuru, though I
> > wanted size=1 ;)
> > 
> > Ter
> > --
> > Professor Comp. Sci., University of San Francisco
> > Creator, ANTLR Parser Generator,
> > http://www.antlr.org
> > Cofounder, http://www.jguru.com
> > Cofounder, http://www.knowspam.net enjoy email
> > again!
> > Cofounder, http://www.peerscope.com pure link
> > sharing
> > 
> > 
> > 
> > 
> > 
> >  
> > Yahoo! Groups Links
> > 
> > 
> >      antlr-interest-unsubscribe@yahoogroups.com
> > 
> >  
> > 
> 
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail - More reliable, more storage, less spam
> http://mail.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Mon Mar 15 13:30:32 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Antlr website font for code samples is unreadable
In-Reply-To: <16E68CFB-76BF-11D8-963D-000A95891192@cs.usfca.edu>
References: <20040315154223.67824.qmail@web12407.mail.yahoo.com>
	<16E68CFB-76BF-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <16470.8312.546939.224935@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
[...]

> Hmm...IE on the mac is ok.  Hm...i thought size=2 was a pretty size for
> people.  That is what we chose for jGuru, though I wanted size=1 ;)

Just don't bother to specify the size at all and let the browser apply the
user's preferences.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From gudnabrsam at yahoo.com  Mon Mar 15 13:28:02 2004
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Antlr website font for code samples is unreadable
In-Reply-To: <c356l6+r5c1@eGroups.com>
Message-ID: <20040315212802.26193.qmail@web20422.mail.yahoo.com>

Not to mention the fact that you've undermined any
hope of keeping out anybody who doesn't REALLY want to
read the examples.  I only wish you'd done it sooner.
:)

-Matt


--- lgcraymer <lgc@mail1.jpl.nasa.gov> wrote:
> The "text size" menu under "View" works with IE and
> antlr.org.  Oops--now I=
> 've pointed out that I have learned how to use an MS
> 
> product.  I cannot possibly be one of the elite ...
> 
> --Loring
> 
> 
> --- In antlr-interest@yahoogroups.com, Matt Benson
> <gudnabrsam@y...> wrote:=
> 
> > I think that's Ter's way of preserving elitism in
> the
> > field of computer science...  ;)
> > 
> > -Matt
> > 
> > --- Terence Parr <parrt@c...> wrote:
> > > 
> > > On Mar 15, 2004, at 7:42 AM, Greg Lindholm
> wrote:
> > > 
> > > > Hi Ter,
> > > >  
> > > > Sorry to gripe but I find the font you use for
> > > code samples on the 
> > > > Antlr website to be practically unreadable.  
> Do
> > > you think maybe you 
> > > > could make it a little bigger, please.
> > > >  
> > > > To read the source code stuff I have to either
> > > "view source" or copy 
> > > > and paste it into notepad.
> > > >  
> > > > I'm using M$-IE and have no problems anywhere
> > > else.
> > > 
> > > Hmm...IE on the mac is ok.  Hm...i thought
> size=2
> > > was a pretty size for 
> > > people.  That is what we chose for jGuru, though
> I
> > > wanted size=1 ;)
> > > 
> > > Ter
> > > --
> > > Professor Comp. Sci., University of San
> Francisco
> > > Creator, ANTLR Parser Generator,
> > > http://www.antlr.org
> > > Cofounder, http://www.jguru.com
> > > Cofounder, http://www.knowspam.net enjoy email
> > > again!
> > > Cofounder, http://www.peerscope.com pure link
> > > sharing
> > > 
> > > 
> > > 
> > > 
> > > 
> > >  
> > > Yahoo! Groups Links
> > > 
> > > 
> > >      antlr-interest-unsubscribe@yahoogroups.com
> > > 
> > >  
> > > 
> > 
> > 
> > __________________________________
> > Do you Yahoo!?
> > Yahoo! Mail - More reliable, more storage, less
> spam
> > http://mail.yahoo.com
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
http://mail.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar 15 12:15:34 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079381734.115.41069.w54@yahoogroups.com>


Hello,

This is an automated email message to let you know that
antonarhipov <tonyfox24@hot.ee> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon Mar 15 15:10:33 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079392233.138.12524.w70@yahoogroups.com>


Hello,

This is an automated email message to let you know that
richardmatthias <bulk@exaflop.org> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon Mar 15 15:13:52 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079392432.162.60655.w63@yahoogroups.com>


Hello,

This is an automated email message to let you know that
richardmatthias <richard@exaflop.org> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From glindholm at yahoo.com  Mon Mar 15 14:07:57 2004
From: glindholm at yahoo.com (Greg Lindholm)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Antlr website font for code samples is unreadable
In-Reply-To: <c356l6+r5c1@eGroups.com>
Message-ID: <20040315220757.11034.qmail@web12406.mail.yahoo.com>

Thanks for the info, when I bumped it up one notch to "larger" it's very readable. 
 
However... it was set to the default ("medium") and I've never had to adjusted this for any other sites.    
 
I've now played with it for a couple minutes going off to a few different sites... and "larger" is uncomfortably large on many sites.
 
I hope you'll take my advice and make the font larger, if not at least I have a work-around.
 
P.S. You might want (or not) to run some of these pages thru an HTML validator. (There's a lot of errors on the "Lookahead Analysis" page.) If you are generating HTML from TML then you could propably tweek your generator to fix most of the errors.
 
Here are two online HTML validators I've used.
http://validator.w3.org/
http://www.htmlhelp.com/tools/validator/
The second one is a little friendlier to use.
 
 


lgcraymer <lgc@mail1.jpl.nasa.gov> wrote:
The "text size" menu under "View" works with IE and antlr.org. Oops--now I=
've pointed out that I have learned how to use an MS 
product. I cannot possibly be one of the elite ...

--Loring


--- In antlr-interest@yahoogroups.com, Matt Benson wrote:=

> I think that's Ter's way of preserving elitism in the
> field of computer science... ;)
> 
> -Matt
> 
> --- Terence Parr 
wrote:
> > 
> > On Mar 15, 2004, at 7:42 AM, Greg Lindholm wrote:
> > 
> > > Hi Ter,
> > >  
> > > Sorry to gripe but I find the font you use for
> > code samples on the 
> > > Antlr website to be practically unreadable.   Do
> > you think maybe you 
> > > could make it a little bigger, please.
> > >  
> > > To read the source code stuff I have to either
> > "view source" or copy 
> > > and paste it into notepad.
> > >  
> > > I'm using M$-IE and have no problems anywhere
> > else.
> > 
> > Hmm...IE on the mac is ok. Hm...i thought size=2
> > was a pretty size for 
> > people. That is what we chose for jGuru, though I
> > wanted size=1 ;)
> > 
> > Ter
> > --
> > Professor Comp. Sci., University of San Francisco
> > Creator, ANTLR Parser Generator,
> > http://www.antlr.org
> > Cofounder, http://www.jguru.com
> > Cofounder, http://www.knowspam.net enjoy email
> > again!
> > Cofounder, http://www.peerscope.com pure link
> > sharing
> > 
> > 
> > 
> > 
> > 
> > 
> > Yahoo! Groups Links
> > 
> > 
> > antlr-interest-unsubscribe@yahoogroups.com
> > 
> > 
> > 
> 
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail - More reliable, more storage, less spam
> http://mail.yahoo.com




Yahoo! Groups Links





Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040315/8efd9732/attachment.html
From parrt at cs.usfca.edu  Mon Mar 15 16:13:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Antlr website font for code samples is unreadable
In-Reply-To: <20040315220757.11034.qmail@web12406.mail.yahoo.com>
References: <20040315220757.11034.qmail@web12406.mail.yahoo.com>
Message-ID: <AFCBF608-76DE-11D8-963D-000A95891192@cs.usfca.edu>


On Mar 15, 2004, at 2:07 PM, Greg Lindholm wrote:
> P.S. You might want (or not) to run some of these pages thru an HTML 
> validator. (There's a lot of errors on the "Lookahead Analysis" page.) 
> If you are generating HTML from TML then you could propably tweek your 
> generator to fix most of the errors.
> ?
> Here are two online HTML validators I've used.
> http://validator.w3.org/
> http://www.htmlhelp.com/tools/validator/
> The second one is a little friendlier to use.

Thanks...bookmarked 'em :)
Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From richard at exaflop.org  Mon Mar 15 15:15:07 2004
From: richard at exaflop.org (Richard Matthias)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Stuff I don't like about ANTLR 2.x /ANTLR 3 wants
In-Reply-To: <D07E2B50-76BE-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <000801c40ae3$5b4b9330$8b682252@TESTXP>

Hi,

1. The syntax for manual tree building. It looks an absolute mess with all
those # and [] marks. I assume this is because it sits in with action code in
the target language and you have to use syntax that won't clash with any
language known to man. Because tree building is free it only increases the
impact of the tree building syntax obscurity for occasional ANTLR users like
myself. What I would like to see is some simple ANTLR specific syntax for
tree building that exists outside the actions block.

2. Different syntax for manipulating tokens in Lexer actions compared to
manipulation of AST nodes in Parser actions. For example, in the Parser I can
change the AST node class from "within ANTLR syntax", but I still have to use
action code to change the node to use an 'imaginary' token. For example:-

unary
	: PLUS^<AST=iASTUnaryOp>   {#PLUS.setType(UNARYPLUS);} unary
	| MINUS^<AST=iASTUnaryOp>  {#MINUS.setType(UNARYMINUS);} unary
	| atom ( PERCENT^<AST=ASTUnaryOp> )?
	;

Whereas in the lexer, I sometimes want to change the token and have to use an
action (again), but this time have different syntax (it took me a while to
work this out too when I first started with ANTLR on this project):-

LESSTHAN		: "<"		;
LESSTHAN2		: "_lt_" { _ttype = LESSTHAN; };

(as an aside, I never really worked out why I couldn't use LESSTHAN: "<" |
"_lt_"; here. It consistently produced nondeterminism errors no matter how
much lookahead I allowed, yet this apparently equivalent construct works
fine. Thankfully its easy to change the token type (once you know the magic
syntax) so it didn't cause a major problem).

Another concern here is these actions are presumably quite dependent on the
object model employed by the target language selected. Given the proposed
language agnosticism of ANTLR3, doing common things like this without having
to dip into action code would be 'a good thing' IMO.

3. Actually that's it I think. I still think ANTLR is a great program and am
very glad to have it. I've been following PCCTS/ANTLR for a long time now
(I'm proud owner of an actual paper copy of the PCCTS book!), but I haven't
used it in anger until recently. Big thanks are also due to the people that
put the C# code-generator together!

Regards,

Richard Matthias




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 15 17:05:10 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x /ANTLR 3 wants
In-Reply-To: <000801c40ae3$5b4b9330$8b682252@TESTXP>
Message-ID: <c35js6+uks5@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Richard Matthias" <richard@e...> wrote:
> Hi,
> 
> 1. The syntax for manual tree building. It looks an absolute mess with all
> those # and [] marks. I assume this is because it sits in with action code in
> the target language and you have to use syntax that won't clash with any
> language known to man. Because tree building is free it only increases the
> impact of the tree building syntax obscurity for occasional ANTLR users like
> myself. What I would like to see is some simple ANTLR specific syntax for
> tree building that exists outside the actions block.

That's coming in 2.8.  I've got the modified C++ backend to compile (half the problem) and just need to get my test cases to run (they 
work with Java).  Once that happens, I'll update my code to the match 2.7.3 final (pending) and a release should follow soon after.

> 
> 2. Different syntax for manipulating tokens in Lexer actions compared to
> manipulation of AST nodes in Parser actions. For example, in the Parser I can
> change the AST node class from "within ANTLR syntax", but I still have to use
> action code to change the node to use an 'imaginary' token. For example:-

Ter, Monty, and I briefly discussed adding an attribute (language independent AST specification) syntax in ANTLR 3 at the cabal.  It 
may happen.

> unary
> 	: PLUS^<AST=iASTUnaryOp>   {#PLUS.setType(UNARYPLUS);} unary
> 	| MINUS^<AST=iASTUnaryOp>  {#MINUS.setType(UNARYMINUS);} unary
> 	| atom ( PERCENT^<AST=ASTUnaryOp> )?
> 	;
> 
> Whereas in the lexer, I sometimes want to change the token and have to use an
> action (again), but this time have different syntax (it took me a while to
> work this out too when I first started with ANTLR on this project):-
> 
> LESSTHAN		: "<"		;
> LESSTHAN2		: "_lt_" { _ttype = LESSTHAN; };
> 
> (as an aside, I never really worked out why I couldn't use LESSTHAN: "<" |
> "_lt_"; here. It consistently produced nondeterminism errors no matter how
> much lookahead I allowed, yet this apparently equivalent construct works
> fine. Thankfully its easy to change the token type (once you know the magic
> syntax) so it didn't cause a major problem).

ANTLR 3 should fix this and have dramatically improved lexer speed as well.

--Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar 15 15:10:43 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Overriding reportError
In-Reply-To: <c2sqb9+sk6s@eGroups.com>
References: <c2sqb9+sk6s@eGroups.com>
Message-ID: <20040315231042.GA15331@cs.utwente.nl>

Hi,

On Fri, Mar 12, 2004 at 05:00:25PM -0000, kjerken wrote:
> I've sucessfully built a parser using ANTLR (in C++, thanks Ric!) and
> I was wondering what the appropriate method to isolate it from the std
> iostreams was.

I guess you should look at InputBufer and friends. I'm not sure if you can
circumvent all stream usage (might be a stringstream around somewhere) The
plain old string input buffer variant is the simplest to start from but
nothing stops you from hacking (deriving from) the stream one to something
different. Check the calc examples for details on how to set up
lexer/parser with a custom inputbuffer. (might have to grab examples from a
snapshot for the latest)

> I can inherit from my generated parser and override
> reportError, but I'd rather have an option to completely replace
> cout/cerr in the generated parser.  

You can directly override reportError etc. in the generated parser by
dumping them in the action part after 'x extends LLkParser' see the grammar
template in the docs for exact places (can't recall offhand if that was
extends Parser or something else ;))

If you got reportError and Inputbuffer covered then you should have most of
it.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "I don't have anything against Java - it's the best damn implementation
              of UCSD Pascal ever released..." --- Larry Smith



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar 15 21:01:45 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:32 2004
Subject: New antlr-interest member
Message-ID: <1079413305.96.89031.w36@yahoogroups.com>


Hello,

This is an automated email message to let you know that
cwrenniks <cwrenniks@arcanacom.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From cwrenniks at arcanacom.com  Mon Mar 15 21:09:32 2004
From: cwrenniks at arcanacom.com (cwrenniks)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Generated C++ Parser Performance
Message-ID: <c3626c+t43l@eGroups.com>

Hello,

Been doing some testing in a cross language project, generating my 
grammar in both C++ and Java. I've noticed that the Java parser is 
much faster than the C++ parser, which surprised me. We generated 
the parser over to C++ looking for more performance, and were bummed 
when it went the other way! Is this going to be corrected?

Cheers!

Renniks




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 15 22:33:00 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Generated C++ Parser Performance
In-Reply-To: <c3626c+t43l@eGroups.com>
Message-ID: <c3672s+c6ct@eGroups.com>

When you write "parser", do you mean "language processor"?  If so, the
lexer is likely to be the problem--check the flex example for an
alternative approach.

--Loring

--- In antlr-interest@yahoogroups.com, "cwrenniks" <cwrenniks@a...> wrote:
> Hello,
> 
> Been doing some testing in a cross language project, generating my 
> grammar in both C++ and Java. I've noticed that the Java parser is 
> much faster than the C++ parser, which surprised me. We generated 
> the parser over to C++ looking for more performance, and were bummed 
> when it went the other way! Is this going to be corrected?
> 
> Cheers!
> 
> Renniks



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cwrenniks at arcanacom.com  Mon Mar 15 22:43:00 2004
From: cwrenniks at arcanacom.com (cwrenniks)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Generated C++ Parser Performance
In-Reply-To: <c3672s+c6ct@eGroups.com>
Message-ID: <c367lk+38ps@eGroups.com>

Actually, I hadn't broken it down between the lexer and parser, in 
terms of processing time. We're using a generated lexer, into a 
parser, and then into a tree parser. Is there some documentation or 
archives out there that I can scan for tips to make the c++ 
generated code faster? 

Regards,

Renniks

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> When you write "parser", do you mean "language processor"?  If so, 
the
> lexer is likely to be the problem--check the flex example for an
> alternative approach.
> 
> --Loring
> 
> --- In antlr-interest@yahoogroups.com, "cwrenniks" 
<cwrenniks@a...> wrote:
> > Hello,
> > 
> > Been doing some testing in a cross language project, generating 
my 
> > grammar in both C++ and Java. I've noticed that the Java parser 
is 
> > much faster than the C++ parser, which surprised me. We 
generated 
> > the parser over to C++ looking for more performance, and were 
bummed 
> > when it went the other way! Is this going to be corrected?
> > 
> > Cheers!
> > 
> > Renniks



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 15 22:48:14 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Generated C++ Parser Performance
In-Reply-To: <c367lk+38ps@eGroups.com>
Message-ID: <c367ve+spud@eGroups.com>

I'd bet on the lexer then.  The only other likely sources of slowdown
 memory are memory management--a custom allocator for ASTs might
help--and exceptions (syntactic predicates).  Ric may have some other
suggestions.

--Loring

--- In antlr-interest@yahoogroups.com, "cwrenniks" <cwrenniks@a...> wrote:
> Actually, I hadn't broken it down between the lexer and parser, in 
> terms of processing time. We're using a generated lexer, into a 
> parser, and then into a tree parser. Is there some documentation or 
> archives out there that I can scan for tips to make the c++ 
> generated code faster? 
> 
> Regards,
> 
> Renniks
> 
> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> > When you write "parser", do you mean "language processor"?  If so, 
> the
> > lexer is likely to be the problem--check the flex example for an
> > alternative approach.
> > 
> > --Loring
> > 
> > --- In antlr-interest@yahoogroups.com, "cwrenniks" 
> <cwrenniks@a...> wrote:
> > > Hello,
> > > 
> > > Been doing some testing in a cross language project, generating 
> my 
> > > grammar in both C++ and Java. I've noticed that the Java parser 
> is 
> > > much faster than the C++ parser, which surprised me. We 
> generated 
> > > the parser over to C++ looking for more performance, and were 
> bummed 
> > > when it went the other way! Is this going to be corrected?
> > > 
> > > Cheers!
> > > 
> > > Renniks



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From sunshine at public.kherson.ua  Tue Mar 16 00:04:48 2004
From: sunshine at public.kherson.ua (Ruslan Zasukhin)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Generated C++ Parser Performance
In-Reply-To: <c367ve+spud@eGroups.com>
Message-ID: <BC7C81C0.160BF%sunshine@public.kherson.ua>

On 3/16/04 8:48 AM, "lgcraymer" <lgc@mail1.jpl.nasa.gov> wrote:

> I'd bet on the lexer then.  The only other likely sources of slowdown
> memory are memory management--a custom allocator for ASTs might
> help--and exceptions (syntactic predicates).  Ric may have some other
> suggestions.

Lorin,

Why you say this is lexer fault?
Java parser uses the same ANTLR lexer, yes?

So why C++ parser is slower of Java ?!

Sounds not pleasant.


Oh guys:    "I feel the need...the need for speed"

-----------------------
Terrence, Rick,

Speed should be the highest priority for ANTLR 3.0 IMHO.

You should develop 
    -- regression tests
    -- regression BENCHMARKS
    -- run benchmarks with profiles
        improve everything you can improve.



-- 
Best regards,
Ruslan Zasukhin      [ I feel the need...the need for speed ]
-------------------------------------------------------------
e-mail: ruslan@paradigmasoft.com
web: http://www.paradigmasoft.com

To subscribe to the Valentina mail list go to:
http://lists.macserve.net/mailman/listinfo/valentina
-------------------------------------------------------------



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Matthew.Ford at forward.com.au  Mon Mar 15 11:53:12 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Antlr website font for code samples is unreadable
References: <20040315154223.67824.qmail@web12407.mail.yahoo.com>
Message-ID: <000101c40b31$fff66f60$0400a8c0@NOTEBOOK>

I had the same problem and was cursing Ter under my breath but then I found a solution
In IE choose View -> Text Size  -> Larger
and all is revealed.

So far I only need to do this for Ter's site.  
matthew
  ----- Original Message ----- 
  From: Greg Lindholm 
  To: antlr-interest@yahoogroups.com 
  Sent: Tuesday, March 16, 2004 2:42 AM
  Subject: [antlr-interest] Antlr website font for code samples is unreadable


  Hi Ter,

  Sorry to gripe but I find the font you use for code samples on the Antlr website to be practically unreadable.   Do you think maybe you could make it a little bigger, please.

  To read the source code stuff I have to either "view source" or copy and paste it into notepad.

  I'm using M$-IE and have no problems anywhere else.

  Thanks,

  Greg
  Do you Yahoo!?
  Yahoo! Mail - More reliable, more storage, less spam 



------------------------------------------------------------------------------
  Yahoo! Groups Links

    a.. To visit your group on the web, go to:
    http://groups.yahoo.com/group/antlr-interest/
      
    b.. To unsubscribe from this group, send an email to:
    antlr-interest-unsubscribe@yahoogroups.com
      
    c.. Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040316/2946c7f6/attachment.html
From klaren at cs.utwente.nl  Tue Mar 16 00:41:17 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Generated C++ Parser Performance
In-Reply-To: <c3626c+t43l@eGroups.com>
References: <c3626c+t43l@eGroups.com>
Message-ID: <20040316084116.GA17158@cs.utwente.nl>

Hi,

On Tue, Mar 16, 2004 at 05:09:32AM -0000, cwrenniks wrote:
> Been doing some testing in a cross language project, generating my
> grammar in both C++ and Java. I've noticed that the Java parser is
> much faster than the C++ parser, which surprised me. We generated
> the parser over to C++ looking for more performance, and were bummed
> when it went the other way! Is this going to be corrected?

Must be something in your grammar that triggers some pathetic case. In
general the C++ parser is faster (not much but faster still). Can't say
much without seeing some common practices in the grammars. As Loring
pointed out it may be beneficial to see which part of the parser is the
time hog. 

Might be that you're using some expensive constructors/destructors in a few
critical areas (treeparser maybe?).

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Before they invented drawing boards, what did they go back to?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue Mar 16 00:57:10 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Generated C++ Parser Performance
In-Reply-To: <BC7C81C0.160BF%sunshine@public.kherson.ua>
Message-ID: <c36fh6+cgse@eGroups.com>

Ruslan--

The lexer is the part of ANTLR most in need of optimization--many very
small methods (a likely source of differences), unoptimized memory
usage, and so on.  Function call overhead is less likely to be a
problem in the parser--function bodies are larger--although memory
management could still be an issue.  Object creation/destruction could
also be a contributing factor, but that would show up as method
overhead--C++ does a lot of object create/delete in method calls
because of the mix of call by reference and call by value that occurs
with little programmer awareness.

Anyway, call it an educated guess.  I could be wrong; however,
replacing the lexer is an easy way to improve performance.

--Loring


--- In antlr-interest@yahoogroups.com, Ruslan Zasukhin <sunshine@p...>
wrote:
> On 3/16/04 8:48 AM, "lgcraymer" <lgc@m...> wrote:
> 
> > I'd bet on the lexer then.  The only other likely sources of slowdown
> > memory are memory management--a custom allocator for ASTs might
> > help--and exceptions (syntactic predicates).  Ric may have some other
> > suggestions.
> 
> Lorin,
> 
> Why you say this is lexer fault?
> Java parser uses the same ANTLR lexer, yes?
> 
> So why C++ parser is slower of Java ?!
> 
> Sounds not pleasant.
> 
> 
> Oh guys:    "I feel the need...the need for speed"
> 
> -----------------------
> Terrence, Rick,
> 
> Speed should be the highest priority for ANTLR 3.0 IMHO.
> 
> You should develop 
>     -- regression tests
>     -- regression BENCHMARKS
>     -- run benchmarks with profiles
>         improve everything you can improve.
> 
> 
> 
> -- 
> Best regards,
> Ruslan Zasukhin      [ I feel the need...the need for speed ]
> -------------------------------------------------------------
> e-mail: ruslan@p...
> web: http://www.paradigmasoft.com
> 
> To subscribe to the Valentina mail list go to:
> http://lists.macserve.net/mailman/listinfo/valentina
> -------------------------------------------------------------



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From salee2945 at yahoo.ca  Tue Mar 16 05:20:49 2004
From: salee2945 at yahoo.ca (salee2945)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] New to Antlr: need guideline for parsing C++ header file.
Message-ID: <c36uvh+fo0r@eGroups.com>

Hello, Antlr users: 

I need to write a program that parses C++ header files to generate 
some C++ source code for my current C++ RMI project. I am new to 
Antlr or any other parser/lexer stuff.

I downloaded C++ grammar by David Wigg from the share list at Antlr 
web site and managed to generate CPPParser and CPPlexer files, but 
failed to compile them, using binaries comiled with MSVC 7.0 by Arnar 
Birgisson (which i also downloaded from the share list).

Now I am thinking if generating general C++ parser is an overkill to 
parse only header files for things like: class names, base class 
names, virtual methord names, and their parameters.

Could anyone tell me if I am in the right track? If not, any 
suggestion? 

Thanks in advance,

SL







 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Tue Mar 16 08:44:52 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] nesting rules, getting rule text
Message-ID: <72C9789739C4214096AE945753B11EA3FABE26@mypxmail04.bco-home.com>

Yeah, I made the parser figure it out with syntactic predicates and didn't
deal with it in the lexer.

Monty

-----Original Message-----
From: Anthony Youngman [mailto:Anthony.Youngman@ECA-International.com] 
Sent: Thursday, March 11, 2004 2:20 AM
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] nesting rules, getting rule text

What I'm doing at the moment, is trying to get the basics of my grammar
in place. Precedence of mathematical operations. How do you lex (and
parse) the difference between an array and a function-reference (I know
- treat an array as if it's a function :-). How do you parse a token
when semantics depends on syntax?

(My example is, for example, "a = b < c" and "a = b < c >". The former
is a logical comparison, the latter is using <> as a special sort of
array-reference parenthesis. Monty knows *exactly* what I'm talking
about :-)

Parsing "if then else" constructs, and those damn ambiguity warnings! I
feel pressured to treat EOL as white space, but especially with "if then
else", they are actually syntactically crucial ...

I've come across various references to emitters, but have yet to come
across one. I'm trying to write a tree parser that emits object code.
Severely hampered by my lack of knowledge of Java :-)

Don't worry about any of this at the moment, but if I can get this
*functionally* complete, with 90% of the keywords missing, then I think
it would make a very good, simple, teaching grammar. My thinking is
strongly influenced by the Prime FTN compiler which, when I saw how it
worked, about all it did was convert my complex source into a symbol
table and bunch of CALL statements, using them to do almost everything
even down to the "assign a variable" level! By leaving out 99% of the
instances of "convert language statement to function call" we'll end up
with a grammar that is almost 100% teaching material and very little
repetition. Consisting of a lexer, parser, and treeparse/emitter :-)

Cheers,
Wol

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 09 March 2004 19:05
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] nesting rules, getting rule text

Hi Anthony,

As monty said, it'd be great to get a list of those questions... Can  
you summarize your thoughts?  I promise to use them appropriately even  
if it takes me a bit.

Have you seen the "add C++ style templates to Java" USF CS652 project  
with solution?  That could be useful.  There are a number of projects  
and labs on my USF site that perhaps are not visible enough.

Have you seen the really cool PS interpreter and viewer lab?  All my  
labs are bite-size chunks designed to be finished in 1:45.  There is a  
cool byte-code interpreter lab as well.  Have you checked these out?   
See my next email about the new project. :)

Ter

On Mar 9, 2004, at 3:19 AM, Anthony Youngman wrote:

> The problem I find is actually FINDING all this stuff. I have a bit of
> an aversion to hypertext, much prefer a linear hard copy in front of  
> me,
> and find RMS's addiction to "info" for GNU documentation highly
> offensive ...
>
> Anyway, enough of the rant ... and I know - the rule is "if you want  
> it,
> why don't you write it", but a FAQ, clearly signposted, that consists

> of
> a mildly complicated, highly documented, teaching grammar would be
well
> received. There are some wonderful resources out there, but IME it's
> been a case of either pointers to "get you started" stuff, or a case
of
> "look at the supplied grammars" (but which one do I want to study for
a
> "teach yourself" course?).
>
> I'm not saying there isn't anything out there, but I am frustrated
time
> and time again in that I seem to find either elementary stuff aimed at
> newbies, or reference stuff aimed at experts. It's almost impossible
to
> find stuff aimed at the "I know you're experienced but have never met
> this before" level guy. When I started programming in C I went on a
> "Beginning C for experienced programmers" course - the prerequisite
> being you had to know one - any - computer language well but were
> presumed to know nothing about C at all. Where do you find stuff like
> that?
>
> Cheers,
> Wol
>
> -----Original Message-----
> From: mzukowski@yci.com [mailto:mzukowski@yci.com]
> Sent: 04 March 2004 17:57
> To: antlr-interest@yahoogroups.com
> Subject: RE: [antlr-interest] nesting rules, getting rule text
>
> Yeah, it seems people need a guide to reading the code sometimes.
This
> stuff is in Ter's lectures, but maybe something that pointed out
> techniques
> used in the examples would be helpful too for those of you who just
> start
> hacking away?
>
> Monty
>


****************************************************************************
*******

This transmission is intended for the named recipient only. It may contain
private and confidential information. If this has come to you in error you
must not act on anything disclosed in it, nor must you copy it, modify it,
disseminate it in any way, or show it to anyone. Please e-mail the sender to
inform us of the transmission error or telephone ECA International
immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911
7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1
212 582 2333.

****************************************************************************
*******



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Tue Mar 16 09:30:37 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] New to Antlr: need guideline for parsing C++ header file.
In-Reply-To: <c36uvh+fo0r@eGroups.com>
References: <c36uvh+fo0r@eGroups.com>
Message-ID: <A398A468-776F-11D8-A7E6-000393BB647E@cs.usfca.edu>


On Mar 16, 2004, at 5:20 AM, salee2945 wrote:
> Now I am thinking if generating general C++ parser is an overkill to
> parse only header files for things like: class names, base class
> names, virtual methord names, and their parameters.
>
> Could anyone tell me if I am in the right track? If not, any
> suggestion?

Howdy.  My experience is that the declarations outside of function 
bodies is just not that bad in C++.  it's the actions and other crap 
inside function bodies that will kill you.  In the old days I built a 
C++ header file reader for a large company with only a few letters in 
their name using PCCTS and while 90,000 line header file expansions can 
produce some damn wacky character sequences, parsing headers is not a 
huge problem.

Remove all the function bodies with a lexer that knows how to match 
curlies and you're golden!  Note that ANTLR can do this with recursion 
in the lexer rather than using an int counter. ;)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Tue Mar 16 10:18:16 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] updated "antlr 2 bashing list"
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E91027711D2@rock-corpmail.microfocus.com>

IBM's Job Control Language (JCL) has a feature called symbolic replacement
 
SET   MYVAR="FRED,ANOTHERPARAMETER=MARY"
DD   DDNAME PARAMETER=&MYVAR
 
The ability to recognize PARAMETER=FRED,ANOTHERPARAMETER=MARY involves
modifying the input stream.  A workable solution involves a class MyToken
that has a TracedText element.  It knows about &MYVAR being replaced by
"FRED,ANOTHERPARAMETER=MARY".  To use these constructs, it was necessary to
modify the JavaCodeGenerator.
 
println("   _token = makeToken(_ttype);");
 
was change to
 
println("   _token = makeToken(_ttype, inputState.tokenStartColumn + _begin
- 1, text.length()-_begin);");
 
 
and I had to make tokenStartColumn public in order to use a TracedText
feature of the MyToken class.
 
 
What can be done to make this easier to implement?
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040316/8a8ce095/attachment.html
From oliver_kellogg at yahoo.com  Tue Mar 16 13:08:27 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x
In-Reply-To: <D07E2B50-76BE-11D8-963D-000A95891192@cs.usfca.edu>
Message-ID: <c37qcb+poia@eGroups.com>

(Sorry if you get this twice - resending because I
 didn't see my orignial reply on antlr-interest)

Terence Parr wrote:
> Ack...yeah, Java's contract for exceptions means you cannot  
generate 
> the try/catch if you have nothing to match.  Hm....I guess we could 
> detect that.

Sounds like a winner :-)

> Is it a pain to avoid these just because you have a lot or is there 
a 
> semantics reason?

In ada.g, take a look at the rules decl_common and type_def,
and their use of the empty_discrim_opt rule.
I haven't found a simple way of rewriting the rules to
avoid the empty_discrim_opt rule...
Perhaps someone has advice for me ?

Thanks,

 Oliver




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rbo at acm.org  Tue Mar 16 13:34:26 2004
From: rbo at acm.org (Rodrigo B. de Oliveira)
Date: Mon Dec 20 16:16:32 2004
Subject: [antlr-interest] What we *do* like about ANTLR
References: <F9E7D497-72D6-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <013901c40b9e$75705190$fe00a8c0@bambook>

----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>


> Ok, we have another list so we avoid breaking a good recipe:
> 
> http://www.antlr.org/blog/antlr3/antlr2.group.hug.tml
> 
> Send in your "group hug" stuff :)
> 
> ...

1) TokenStream chaining
2) TokenStreamSelector
3) options { language="CSharp"; }
4) semantic predicates
5) I can write my own token classes
6) I can write my own hetero ast classes
7) very easy to integrate in a build script

I could go on and on... ;-)

Rodrigo


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue Mar 16 14:39:41 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079476781.244.34185.w60@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bknotwell <b.knotwell@f5.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Tue Mar 16 15:05:06 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x
In-Reply-To: <c37qcb+poia@eGroups.com>
Message-ID: <c38172+tg9m@eGroups.com>

Oliver--

What you can do is
{    RefAST ast = #(#[DISCRIM_PART_OPT, "DISCRIM_PART_OPT"], #empty_discrim_opt);
     astFactory->addASTChild(currentAST, ast);
}
in an action to eliminate the empty rule (C++; java differs in that it converts the -> to . and that ast is an AST, not a RefAST).  
currentAST is defined within the rule, while astFactory is a parser field.


--- In antlr-interest@yahoogroups.com, "oliver_kellogg" <oliver_kellogg@y...> wrote:
> (Sorry if you get this twice - resending because I
>  didn't see my orignial reply on antlr-interest)
> 
> Terence Parr wrote:
> > Ack...yeah, Java's contract for exceptions means you cannot  
> generate 
> > the try/catch if you have nothing to match.  Hm....I guess we could 
> > detect that.
> 
> Sounds like a winner :-)
> 
> > Is it a pain to avoid these just because you have a lot or is there 
> a 
> > semantics reason?
> 
> In ada.g, take a look at the rules decl_common and type_def,
> and their use of the empty_discrim_opt rule.
> I haven't found a simple way of rewriting the rules to
> avoid the empty_discrim_opt rule...
> Perhaps someone has advice for me ?
> 
> Thanks,
> 
>  Oliver



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver_kellogg at yahoo.com  Tue Mar 16 22:05:32 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x
In-Reply-To: <c38172+tg9m@eGroups.com>
Message-ID: <c38prc+ur61@eGroups.com>

"lgcraymer" wrote:
> 
> What you can do is
> {    RefAST ast = #(#[DISCRIM_PART_OPT, "DISCRIM_PART_OPT"], 
#empty_discrim_opt);
>      astFactory->addASTChild(currentAST, ast);
> }
> [...]
 
Great! That does the trick for me.

Many thanks.

--Oliver




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver_kellogg at yahoo.com  Tue Mar 16 23:31:49 2004
From: oliver_kellogg at yahoo.com (oliver_kellogg)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Stuff I don't like about ANTLR 2.x /ANTLR 3 wants
In-Reply-To: <c35js6+uks5@eGroups.com>
Message-ID: <c38ut5+mnsb@eGroups.com>

I strongly second these wishes, and I look forward
to the day when we can maintain just _one_ grammar
independent of the codegen target language.

>>From the Ada grammar perspective, there is one
prominent issue that needs resolving. The "." vs "->"
notation for access to members in Java vs C++.
Even a primitive solution, such as adding preprocessor
directives to the action parts (like #ifdef JAVA or 
#ifdef CPLUSPLUS), would help!

Just my EUR 0.02

Oliver

On Tue Mar 16, 2004  2:05 am, "lgcraymer" wrote:
> --- In antlr-interest@yahoogroups.com, "Richard Matthias" 
<richard@e...> wrote:
> > Hi,
> > 
> > 1. The syntax for manual tree building. It looks an absolute mess 
with all
> > those # and [] marks. I assume this is because it sits in with 
action code in
> > the target language and you have to use syntax that won't clash 
with any
> > language known to man. Because tree building is free it only 
increases the
> > impact of the tree building syntax obscurity for occasional ANTLR 
users like
> > myself. What I would like to see is some simple ANTLR specific 
syntax for
> > tree building that exists outside the actions block.
> 
> That's coming in 2.8.  I've got the modified C++ backend to compile 
(half the problem) and just need to get my test cases to run (they 
> work with Java).  Once that happens, I'll update my code to the 
match 2.7.3 final (pending) and a release should follow soon after.
> 
> > 
> > 2. Different syntax for manipulating tokens in Lexer actions 
compared to
> > manipulation of AST nodes in Parser actions. For example, in the 
Parser I can
> > change the AST node class from "within ANTLR syntax", but I still 
have to use
> > action code to change the node to use an 'imaginary' token. For 
example:-
> 
> Ter, Monty, and I briefly discussed adding an attribute (language 
independent AST specification) syntax in ANTLR 3 at the cabal.  It 
> may happen.
> 
> [...]




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Wed Mar 17 04:40:39 2004
From: rjc at trump.net.au (rjc@trump.net.au)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Your website
Message-ID: <20040317124037.E899574123@nexus.cs.usfca.edu>

Your file is attached.


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: your_website.pif
Type: application/octet-stream
Size: 17424 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040317/68d89526/your_website.obj
From wiggjd at lsbu.ac.uk  Wed Mar 17 05:24:32 2004
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Parsing C++header files
Message-ID: <40585190.2080907@lsbu.ac.uk>

I normally parse C++ programs from the pre-processed, *.i files 
in order to pick up types properly. However, it is quite easy to 
parse *.h and *.cpp files although it may mean putting in some 
temporary dummy typedefs.

When I process *.i files I use the /P (MSVC parameter) to 
generate #line directives which are in turn used to control the 
use of our own application code at the correct time.

I'm sorry to hear you weren't able to compile and link a usable 
version. If you would like to try again please let me know. I'm 
using MSVC 6.0 .

I would have thought it easier to use an existing parser, even 
if it does more than you want, than write a new, albeit simpler one.

For your information I am still working on providing a cleaned 
up version of the parser, and I have also been able to find out 
how to separate our application code from the parser code by 
sub-classing it so our application code is now kept in separate 
*.hpp and *.cpp files.

In this way the application code and the parser code can be 
maintained independently and I will be able to provide updated 
versions of the parser code without having to take all our 
application code out each time.

In addition it might even make it possible for us to "attach" 
our application code to other antlr parsers of similar languages 
later on.

David

Message: 11
    Date: Tue, 16 Mar 2004 13:20:49 -0000
    From: "salee2945" <salee2945@yahoo.ca>
Subject: New to Antlr: need guideline for parsing C++ header file.

Hello, Antlr users:

I need to write a program that parses C++ header files to generate
some C++ source code for my current C++ RMI project. I am new to
Antlr or any other parser/lexer stuff.

I downloaded C++ grammar by David Wigg from the share list at Antlr
web site and managed to generate CPPParser and CPPlexer files, but
failed to compile them, using binaries comiled with MSVC 7.0 by 
Arnar
Birgisson (which i also downloaded from the share list).

Now I am thinking if generating general C++ parser is an 
overkill to
parse only header files for things like: class names, base class
names, virtual methord names, and their parameters.

Could anyone tell me if I am in the right track? If not, any
suggestion?

Thanks in advance,

SL



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Wed Mar 17 09:20:51 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Antlr v3: Trees
Message-ID: <16472.35059.396438.678698@despot.non.net>

I know that a major overhaul is coming on the tree handling stuff but I
just wanted to state publically that this is, to me, *the* area where Antlr
can really make a huge difference to the state of practice.

Grammar-based tree transformation is great not just for the traditional
language "compiler" world but is also key to cleaning up all of the ad hoc
tree crap that people are doing as part of the tidal wave of XML.

Speaking of XML, I think that it's critical to make sure that Antlr v3
efficiently and effectively supports XML recognition, validation, and
transformation.

Go wild,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mtiller at ford.com  Wed Mar 17 09:50:39 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Antlr v3: Trees
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB345A2448@na1fcm52.dearborn.ford.com>

This reminds me of a few other issues:

1) Because I've had a fair amount of difficulty with the current C++
implementations for heterogenous ASTs, I'm working on a project where I
would like to be able to formally output the AST in XML so it can be read in
by other tools.  It would be nice if ANTLR3 could somehow support that.
Here are some ideas of how this could be done:

  1a) Allow the grammar (and node type definitions) to be marked up with
information about how the nodes should be translated to XML.  Specifically,
allow the developer to map different AST node types in ANTLR to different
XML element types.
  1b) Given the grammar information, it might be possible to examine the
action rules to generate a DTD for the generated XML automatically (probably
quite a bit of work though).
  1c) Allow high-level descriptions of AST node types that distinguish
between "attributes" and "children".  By this I mean that if I'm parsing a
number or a boolean piece of information, it would be nice to store it as an
attribute of a node rather than as a child.  The distinction is that
children are dynamic (you don't know how many, if any, you might end up
with).  Attributes are fixed...if you have this node, you have one of each
of these attributes.  One of the main reasons I prefer Heterogenous ASTs is
because they allow me to make this distinction.

2) I'm working with a group that uses "Natural Semantics"
(http://www.modelica.org/papers/scs98sem.pdf).  It seems like where ANTLR
transformations take the approach of having multiple passes (from one tree
grammar to another), this natural semantics approach expresses the process
differently by allowing you to define rules from the start to the end.  The
interesting thing, to me, is that the latter seems like it opens up the
possibility of automatically and completely identifying holes in the
complete transformation process from these sets of rules.  I mention it
because I agree that ANTLR's strength is in the tree handling and I just
wonder if users out there might benefit from having these kinds of
capabilities available to them (as a next step beyond the current tree
parsing capability).

I should add that, all this being said, I'm not really a "professional"
compiler developer and, frankly, know very little about what serious users
need.  As such, I understand if these ideas/requirements are considered low
priority (or even misdirected :-).  If I had to pick one thing in this list
that was most important to me, it would be 1c.

--
Mike

> -----Original Message-----
> From: John D. Mitchell [mailto:johnm-antlr@non.net]
> Sent: Wednesday, March 17, 2004 12:21 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Antlr v3: Trees
> 
> 
> I know that a major overhaul is coming on the tree handling 
> stuff but I
> just wanted to state publically that this is, to me, *the* 
> area where Antlr
> can really make a huge difference to the state of practice.
> 
> Grammar-based tree transformation is great not just for the 
> traditional
> language "compiler" world but is also key to cleaning up all 
> of the ad hoc
> tree crap that people are doing as part of the tidal wave of XML.
> 
> Speaking of XML, I think that it's critical to make sure that Antlr v3
> efficiently and effectively supports XML recognition, validation, and
> transformation.
> 
> Go wild,
> 	John
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bob.donovan at ugsplm.com  Wed Mar 17 10:42:29 2004
From: bob.donovan at ugsplm.com (Donovan, Bob)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Lexer tokens
Message-ID: <BA38992C3BC5B543BEE63132C4B45AF76EFFC0@uscimplm001.net.plm.eds.com>

Hi,

I have a lexer rule which matches a string "value" as shown below. I needed to make this a Lexer rule because I have to set a trigger point (boolean) for multiple lexers.

The problem I am having is that sometimes the word "value" and other keywords have different uses..not always a keyword. Most of the keywords are are literals and get translated to thier keyword token in the testLiteralsTable() method. However the VALUE token is not getting translated because its not a Literal, its a lexer rule token.

How can I get around this?

Thanks, Bob Donovan



VALUE			:	"value" 
		{
			isPictureDefinition = false;
		}
		;



	public int testLiteralsTable(int ttype) { 
	 	// Test the token text against the literals table 
    		// Override this method to perform a different literals test
    		int oldType = ttype;
		hashString.setBuffer(text.getBuffer(), text.length()); 
		Integer literalsIndex = (Integer)literals.get(hashString);  
		
		if (literalsIndex != null) { 
			ttype = literalsIndex.intValue();
			// reset the type to ID, if the last token was a message argument
			// this resets the token to ID, just in case 
			// the source contains a keyword where an ID should be.
			if (isMsgArgName(ttype)) {
				ttype = ID;
			}
		} 
		
		secndPred = firstPred;
		firstPred = ttype;
		return ttype; 
	  }


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 17 13:47:31 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] ANTLR syntax diagram generator
Message-ID: <B111B503-785C-11D8-9C42-000A95891192@cs.usfca.edu>

Folks,

Jennifer Zheng created an interesting program you might find useful, 
which I have posted to antlr.org.  Here is the description I added for 
her software:

View your ANTLR grammars as syntax diagrams.  This prototype 
demonstrates a multi-phase ANTLR translator.  Phases read the grammar, 
compute elements widths, layout elements, draw elements, etc...  Very 
easy to use: just send your grammar file into edu.usfca.syndiag.Main 
via System.in and it will display a Swing window with your syntax 
diagram.  Ultimately I hope to use something like this to display 
ambiguous paths in your grammar during analysis.

You'll find a link in the file sharing area on home page and on:

http://www.antlr.org/share/list

Thanks, Jennifer!

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 17 13:50:03 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079560203.104.31028.w24@yahoogroups.com>


Hello,

This is an automated email message to let you know that
montyzukowski <mzukowski@bco.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Wed Mar 17 14:01:07 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Antlr v3: Trees
In-Reply-To: <16472.35059.396438.678698@despot.non.net>
Message-ID: <c3ahr3+kjar@eGroups.com>

I see four areas where ANTLR 3 will make a difference--performance, industrial-strength tree support, output templates, and (if we can 
get there) workbench support for visual editing and refactoring.  The output templates and workbench support are also very high impact 
items.  I figure that the tree support knocks off about 30% of current development overhead, output templates will account for another 
30%, and the workbench might account for another 30%.  "Comes the revolution, comes the revolution".

--Loring


--- In antlr-interest@yahoogroups.com, "John D. Mitchell" <johnm-antlr@n...> wrote:
> I know that a major overhaul is coming on the tree handling stuff but I
> just wanted to state publically that this is, to me, *the* area where Antlr
> can really make a huge difference to the state of practice.
> 
> Grammar-based tree transformation is great not just for the traditional
> language "compiler" world but is also key to cleaning up all of the ad hoc
> tree crap that people are doing as part of the tidal wave of XML.
> 
> Speaking of XML, I think that it's critical to make sure that Antlr v3
> efficiently and effectively supports XML recognition, validation, and
> transformation.
> 
> Go wild,
> 	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Wed Mar 17 14:29:05 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Redifinition of token in tokens {...}: CTAGBEGIN
Message-ID: <c3ajfh+anlm@eGroups.com>

Hi,
Why do I get an error "Redifinition of token in tokens {...}: 
CTAGBEGIN" for the following grammar?

Below parser with token reference to CTAGBEGIN seem to be causing the 
problem. Thanks!

-Jerry

options { language="Cpp"; }
class PageParser extends Parser;
test: CTAGBEGIN
        ;

class PageLexer extends Lexer;
tokens { CTAGBEGIN; }
OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
        ;



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 17 14:53:08 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Redifinition of token in tokens {...}: CTAGBEGIN
In-Reply-To: <c3ajfh+anlm@eGroups.com>
References: <c3ajfh+anlm@eGroups.com>
Message-ID: <DBCF6E44-7865-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 17, 2004, at 2:29 PM, Jerry Dy wrote:

> Hi,
> Why do I get an error "Redifinition of token in tokens {...}:
> CTAGBEGIN" for the following grammar?
>
> Below parser with token reference to CTAGBEGIN seem to be causing the
> problem. Thanks!
>
> -Jerry
>
> options { language="Cpp"; }
> class PageParser extends Parser;
> test: CTAGBEGIN
>         ;
>
> class PageLexer extends Lexer;
> tokens { CTAGBEGIN; }
> OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
>         ;

Hi Jerry,

Because the CTAGBEGIN is implicitly defined in the parser. :)

Ter

--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 17 15:12:52 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: New antlr-interest member
Message-ID: <1079565172.83.84112.w47@yahoogroups.com>


Hello,

This is an automated email message to let you know that
charlesskelton <c.skelton@skelton.de> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From olsenc at ichips.intel.com  Wed Mar 17 15:32:57 2004
From: olsenc at ichips.intel.com (olsenc@ichips.intel.com)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Your music
Message-ID: <20040317233254.7F8DD7412A@nexus.cs.usfca.edu>

Your document is attached.


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mp3music.pif
Type: application/octet-stream
Size: 17424 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040318/358b2053/mp3music.obj
From mzukowski at yci.com  Wed Mar 17 15:58:04 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] antlr 3 stuff
Message-ID: <72C9789739C4214096AE945753B11EA3FABE69@mypxmail04.bco-home.com>

I'd like to explore the 'language extension' space for antlr 3.  To me
developing a grammar and extending a grammar are very distinct phases of
antlr coding.  Plenty of people download grammars and just want to tweak
them with actions or a small bit of new syntax.  In "Growing Languages with
Metamorphic Syntax Macros" by Claus Brabrand and Michael I. Schwartzbach at
http://www.brics.dk/bigwig/publications/#macro they present a system that
makes it safe for people to extend languages by not letting them do stupid
things that have huge side effects.  When the time comes I'll re-read the
paper again and try and convince Ter & Loring.

Monty
www.codetransform.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From c.skelton at skelton.de  Wed Mar 17 15:45:36 2004
From: c.skelton at skelton.de (charlesskelton)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] comment must be preceded by whitespace
Message-ID: <c3anv0+mfuo@eGroups.com>

I'm new to antlr.

I'm trying to write lexer for a language, k, in which single line 
comments begin with a '/'. If there is no whitespace before the '/', 
or the '/' is not in column 1, then it is not a comment.

e.g

/this is a comment
   /this is also a comment
a:+/!10 /this text after the second forward slash is a comment

In this language, +/!10 actually means sum over numbers 0 thru 9, 
but that is not very relevant here, except it shows the other use 
of '/'.

I did try to define the comment as

SL_COMMENT
	:
            ((" /")  (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  (("\t/") (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  (("\f/") (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  {getColumn()==1}? (('/')  (~('\n'|'\r'))* 
('\n'|'\r'('\n')?))
	;

but it complains when the first char is not a '/'. I would define it 
as

          (("\n/")  (~('\n'|'\r'))* ('\n'|'\r'('\n')?))

but I need \n to match WS type.

Any help would be greatly appreciated.

Many thanks,
Charlie





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 17 16:09:54 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] comment must be preceded by whitespace
In-Reply-To: <c3anv0+mfuo@eGroups.com>
References: <c3anv0+mfuo@eGroups.com>
Message-ID: <958C4456-7870-11D8-9C42-000A95891192@cs.usfca.edu>

On Mar 17, 2004, at 3:45 PM, charlesskelton wrote:

> I'm new to antlr.
>
> I'm trying to write lexer for a language, k, in which single line
> comments begin with a '/'. If there is no whitespace before the '/',
> or the '/' is not in column 1, then it is not a comment.

Try

comment : {getColumn()==1}? '/' (~'\n')* '\n' {newline();} ;

would that work?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Wed Mar 17 16:22:12 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] comment must be preceded by whitespace
Message-ID: <72C9789739C4214096AE945753B11EA3FABE6A@mypxmail04.bco-home.com>

You are running into linear approximation lookahead issues.  

I would recommend setting a flag when you hit a newline and unsetting it
after the first non-whitespace character.  If the flag is set and you see
'/' then it is a comment.  If not it's just a '/'.

The easiest way to deal with the flag is to set in in the newline() function
and unset it in match() when match is called on a non-WS character.

Monty

-----Original Message-----
From: charlesskelton [mailto:c.skelton@skelton.de] 
Sent: Wednesday, March 17, 2004 3:46 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] comment must be preceded by whitespace

I'm new to antlr.

I'm trying to write lexer for a language, k, in which single line 
comments begin with a '/'. If there is no whitespace before the '/', 
or the '/' is not in column 1, then it is not a comment.

e.g

/this is a comment
   /this is also a comment
a:+/!10 /this text after the second forward slash is a comment

In this language, +/!10 actually means sum over numbers 0 thru 9, 
but that is not very relevant here, except it shows the other use 
of '/'.

I did try to define the comment as

SL_COMMENT
	:
            ((" /")  (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  (("\t/") (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  (("\f/") (~('\n'|'\r'))* ('\n'|'\r'('\n')?))
         |  {getColumn()==1}? (('/')  (~('\n'|'\r'))* 
('\n'|'\r'('\n')?))
	;

but it complains when the first char is not a '/'. I would define it 
as

          (("\n/")  (~('\n'|'\r'))* ('\n'|'\r'('\n')?))

but I need \n to match WS type.

Any help would be greatly appreciated.

Many thanks,
Charlie





 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From c.skelton at skelton.de  Wed Mar 17 16:22:37 2004
From: c.skelton at skelton.de (charlesskelton)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: comment must be preceded by whitespace
In-Reply-To: <958C4456-7870-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3aq4d+9s3t@eGroups.com>

Nice idea, but ynfortunately not - I need the \n to return as a 
token by itself.

Any other suggestions?

Thanks,
Charlie
--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> On Mar 17, 2004, at 3:45 PM, charlesskelton wrote:
> 
> > I'm new to antlr.
> >
> > I'm trying to write lexer for a language, k, in which single line
> > comments begin with a '/'. If there is no whitespace before 
the '/',
> > or the '/' is not in column 1, then it is not a comment.
> 
> Try
> 
> comment : {getColumn()==1}? '/' (~'\n')* '\n' {newline();} ;
> 
> would that work?
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 17 16:36:04 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: comment must be preceded by whitespace
In-Reply-To: <c3aq4d+9s3t@eGroups.com>
References: <c3aq4d+9s3t@eGroups.com>
Message-ID: <3CFC494E-7874-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 17, 2004, at 4:22 PM, charlesskelton wrote:

> Nice idea, but ynfortunately not - I need the \n to return as a
> token by itself.
>
> Any other suggestions?

Sure.  Don't put the '\n' {newline();} on the end. :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Wed Mar 17 16:38:31 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: antlr 3 stuff
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABE69@mypxmail04.bco-home.com>
Message-ID: <c3ar28+rbep@eGroups.com>

Monty--

I tend to think that this is part of what a language workbench is about--refactoring support, tree visualization, and all of the other stuff 
that would make it feasible to tweak a translator fast.  It would be nice if we could figure out how to preserve refactorings when 
regenerating tree grammars.  (On glancing over the paper you mention, "metamorphism"  == refactoring).

Macros I consider both very useful and very evil.  I think that a reasonable refactoring editor would be a better approach.  And it might 
be useful if ANTLR inlined rules--that would cover the "syntax macros" and improve performance.

--Loring


--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> I'd like to explore the 'language extension' space for antlr 3.  To me
> developing a grammar and extending a grammar are very distinct phases of
> antlr coding.  Plenty of people download grammars and just want to tweak
> them with actions or a small bit of new syntax.  In "Growing Languages with
> Metamorphic Syntax Macros" by Claus Brabrand and Michael I. Schwartzbach at
> http://www.brics.dk/bigwig/publications/#macro they present a system that
> makes it safe for people to extend languages by not letting them do stupid
> things that have huge side effects.  When the time comes I'll re-read the
> paper again and try and convince Ter & Loring.
> 
> Monty
> www.codetransform.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Wed Mar 17 16:41:00 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: comment must be preceded by whitespace
In-Reply-To: <c3aq4d+9s3t@eGroups.com>
Message-ID: <c3ar6s+mnr6@eGroups.com>

Take out the '\n', then--that's the only thing apart from EOF that can follow _~'\n)*.

--Loring


--- In antlr-interest@yahoogroups.com, "charlesskelton" <c.skelton@s...> wrote:
> Nice idea, but ynfortunately not - I need the \n to return as a 
> token by itself.
> 
> Any other suggestions?
> 
> Thanks,
> Charlie
> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
> wrote:
> > On Mar 17, 2004, at 3:45 PM, charlesskelton wrote:
> > 
> > > I'm new to antlr.
> > >
> > > I'm trying to write lexer for a language, k, in which single line
> > > comments begin with a '/'. If there is no whitespace before 
> the '/',
> > > or the '/' is not in column 1, then it is not a comment.
> > 
> > Try
> > 
> > comment : {getColumn()==1}? '/' (~'\n')* '\n' {newline();} ;
> > 
> > would that work?
> > 
> > Ter
> > --
> > Professor Comp. Sci., University of San Francisco
> > Creator, ANTLR Parser Generator, http://www.antlr.org
> > Cofounder, http://www.jguru.com
> > Cofounder, http://www.knowspam.net enjoy email again!
> > Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 17 16:50:36 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: New antlr-interest member
Message-ID: <1079571036.86.39504.w26@yahoogroups.com>


Hello,

This is an automated email message to let you know that
veflings <veflings@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From atripp at comcast.net  Wed Mar 17 19:31:15 2004
From: atripp at comcast.net (atripp54321)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] (unknown)
Message-ID: <c3b563+imj8@eGroups.com>

Neat tool!
This may sound crazy, but I've always thought
that a great addition to ANTLR would be a tool
that lets me draw a syntax diagram graphically,
and then generates the .g file from the graph.

I think what makes ANTLR (and similar tools) hard
for newbies is that you've got the ANTLR language/syntax
all mixed in with the target language syntax. A graphical
tool could potentially hide all ANTLR syntax from
the ANTLR user.

Just look at some simple .g code from a newbie's eyes:

constructorBody
    :   lc:LCURLY^ {#lc.setType(SLIST);}
            ( options { greedy=true; } :                
explicitConstructorInvocation)?
            (statement)*
        RCURLY!
    ;

Here, we have to know what all the symbols mean: ":", ";",
"^", "#", "(" and ")", "{" and "}" "?", "!", 
and how to put them all together. Wouldn't it be possible
to just draw a syntax diagram with special notation
(colors or shapes rather than symbols) to indicate the
functions of the "^", "!", "{...}" symbols?

After all, BNF-like languages aren't much better than XML,
and we all know humans should not be editing XML by hand :)

Just a thought.
Andy



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 17 22:48:36 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079592516.911.74517.m8@yahoogroups.com>


Hello,

This is an automated email message to let you know that
philipp_lucas <phlucas@gmx.de> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From Anthony.Youngman at ECA-International.com  Thu Mar 18 03:29:15 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Antlr v3: Trees
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADF0@lnml1.eca-international.local>

Maybe a bit off topic, but if you're into XML, look at the multi-value
data model.

If you're using XML as a data store, the paradigms are very similar and
we've been handling it for nearly forty years :-)

Cheers,
Wol

-----Original Message-----
From: John D. Mitchell [mailto:johnm-antlr@non.net] 
Sent: 17 March 2004 17:21
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Antlr v3: Trees

I know that a major overhaul is coming on the tree handling stuff but I
just wanted to state publically that this is, to me, *the* area where
Antlr
can really make a huge difference to the state of practice.

Grammar-based tree transformation is great not just for the traditional
language "compiler" world but is also key to cleaning up all of the ad
hoc
tree crap that people are doing as part of the tidal wave of XML.

Speaking of XML, I think that it's critical to make sure that Antlr v3
efficiently and effectively supports XML recognition, validation, and
transformation.

Go wild,
	John


 
Yahoo! Groups Links



 





***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hrvoje.nezic at envox-lab.hr  Thu Mar 18 07:03:23 2004
From: hrvoje.nezic at envox-lab.hr (Hrvoje Nezic)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Exceptions on errors, thread safety
Message-ID: <001401c40cfa$2d9c1ea0$df01a8c0@envox.local.hr>

Hi,

I haven't used ANTLR for some time, now I installed 2.7.3rc2.
I am using the C# version.

I would like to be able to get exceptions if input text is not correct.
However, it seems this is not the case. Exceptions are not thrown.
Instead, error messages are written on the console.

Is this by design, and can it be changed somehow?
Is it possible to achieve that error messages are not written on the console?

My second question is about thread safety: are ANTLT-generated parsers 
(and especially the C# version) thread-safe?

Thanks!

Best regards,
Hrvoje Nezic
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040318/8e29b200/attachment.html
From open.zone at virgin.net  Thu Mar 18 08:40:12 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Exceptions on errors, thread safety
In-Reply-To: <001401c40cfa$2d9c1ea0$df01a8c0@envox.local.hr>
Message-ID: <c3cjdc+n438@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Hrvoje Nezic"
<hrvoje.nezic@e...> wrote:
> Hi,

Hi Hrvoje Nezic,

> I haven't used ANTLR for some time, now I installed 2.7.3rc2.
> I am using the C# version.

Did you patch it as detailed on the list? (search for 2.7.3rc2 in the
archives)

> I would like to be able to get exceptions if input text is not correct.
> However, it seems this is not the case. Exceptions are not thrown.
> Instead, error messages are written on the console.

AFAICR - and off the top of my head - this shouldn't be the case.

Questions:
1.  Did you *re-generate* your Lexer/Parser/TreeParser from your
grammar files using 2.7.3rc2?. 
2.  Did you also then re-build your C# project taking care to ensure
that you build against the 2.7.3rc2 runtime and not an older version?

If doing this doesn't fix the issue, send me a copy of your project
and I'll have a look at it.

> Is this by design, and can it be changed somehow?

I need to check if this happens as you describe first but, "No. And
yes, it can be changed".

The intent is that ANTLR lexer/parser/treeparsers should be usable
from all application types and not just command-line apps.

> Is it possible to achieve that error messages are not written on the
console?

Yes. That is the intent.

> My second question is about thread safety: are ANTLT-generated parsers 
> (and especially the C# version) thread-safe?

No. And there is no advantage AFAICT in making them so IMHO. Or is there?

Cheers,

Micheal
ANTLR/C#






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu Mar 18 09:19:18 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Exceptions on errors, thread safety
In-Reply-To: <001401c40cfa$2d9c1ea0$df01a8c0@envox.local.hr>
References: <001401c40cfa$2d9c1ea0$df01a8c0@envox.local.hr>
Message-ID: <20040318171918.GJ22137@cs.utwente.nl>

On Thu, Mar 18, 2004 at 04:03:23PM +0100, Hrvoje Nezic wrote:
> I would like to be able to get exceptions if input text is not correct.
> However, it seems this is not the case. Exceptions are not thrown.
> Instead, error messages are written on the console.

Could also be the defaultErrorHandler grammar option.... Check the docs for
details.

> Is this by design, and can it be changed somehow?
> Is it possible to achieve that error messages are not written on the console?

Check for reportError and friends. You need to override those to customize
error messages/handling.

> My second question is about thread safety: are ANTLT-generated parsers 
> (and especially the C# version) thread-safe?

C++ ones are not.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar 18 09:19:08 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Redifinition of token in tokens {...}: CTAGBEGIN
In-Reply-To: <DBCF6E44-7865-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3clmc+gjkg@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> 
> On Mar 17, 2004, at 2:29 PM, Jerry Dy wrote:
> 
> > Hi,
> > Why do I get an error "Redifinition of token in tokens {...}:
> > CTAGBEGIN" for the following grammar?
> >
> > Below parser with token reference to CTAGBEGIN seem to be causing 
the
> > problem. Thanks!
> >
> > -Jerry
> >
> > options { language="Cpp"; }
> > class PageParser extends Parser;
> > test: CTAGBEGIN
> >         ;
> >
> > class PageLexer extends Lexer;
> > tokens { CTAGBEGIN; }
> > OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
> >         ;
> 
> Hi Jerry,
> 
> Because the CTAGBEGIN is implicitly defined in the parser. :)
> 

Am I not simply referencing the token CTAGBEGIN in the parser, not 
defining it? The cpp files where generated without errors when I 
removed CTAGBEGIN from the tokens section... in this case, where is 
the CTAGBEGIN token defined??

-Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar 18 09:23:27 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] "PageLexer.cpp", line 89 # ';' expected before '}'
In-Reply-To: <c3ajfh+anlm@eGroups.com>
Message-ID: <c3cluf+lod6@eGroups.com>

Ric,

I have the following grammar and the generated cpp and hpp files will 
not compile with error "PageLexer.cpp", line 89 # ';' expected 
before '}'

options { language="Cpp"; }
class PageParser extends Parser;
test: CTAGBEGIN
        ;

class PageLexer extends Lexer;
OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
        ;


The relevant lines are as follows:
#line 8 "test.g"
  _ttype = CTAGBEGIN           // <== does not have ';' at the end
#line 89 PageLexer.cpp

It works after I manually add the ';' at the end of the statement. Is 
this a bug in the lexer generator? Thanks!

-Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rbo at acm.org  Thu Mar 18 09:06:05 2004
From: rbo at acm.org (Rodrigo B. de Oliveira)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Exceptions on errors, thread safety
References: <001401c40cfa$2d9c1ea0$df01a8c0@envox.local.hr>
Message-ID: <002e01c40d0b$4dda25c0$fe00a8c0@bambook>

Hi, 

override reportError(antlr.RecognitionException) in your parser classe.

Best regards,
Rodrigo
  ----- Original Message ----- 
  From: Hrvoje Nezic 
  To: antlr-interest@yahoogroups.com 
  Sent: Thursday, March 18, 2004 12:03 PM
  Subject: [antlr-interest] Exceptions on errors, thread safety


  Hi,

  I haven't used ANTLR for some time, now I installed 2.7.3rc2.
  I am using the C# version.

  I would like to be able to get exceptions if input text is not correct.
  However, it seems this is not the case. Exceptions are not thrown.
  Instead, error messages are written on the console.

  Is this by design, and can it be changed somehow?
  Is it possible to achieve that error messages are not written on the console?

  My second question is about thread safety: are ANTLT-generated parsers 
  (and especially the C# version) thread-safe?

  Thanks!

  Best regards,
  Hrvoje Nezic



------------------------------------------------------------------------------
  Yahoo! Groups Links

    a.. To visit your group on the web, go to:
    http://groups.yahoo.com/group/antlr-interest/
      
    b.. To unsubscribe from this group, send an email to:
    antlr-interest-unsubscribe@yahoogroups.com
      
    c.. Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040318/3a67c98c/attachment.html
From mzukowski at yci.com  Thu Mar 18 09:45:55 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] "PageLexer.cpp", line 89 # ';' expected befo
	re '}'
Message-ID: <72C9789739C4214096AE945753B11EA3FABE6B@mypxmail04.bco-home.com>

OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
Should be
OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)};)?

You need a complete statement in an action, which for cpp means semicolon
termination.

Monty
-----Original Message-----
From: Jerry Dy [mailto:jerrydy@sbcglobal.net] 
Sent: Thursday, March 18, 2004 9:23 AM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] "PageLexer.cpp", line 89 # ';' expected before '}'

Ric,

I have the following grammar and the generated cpp and hpp files will 
not compile with error "PageLexer.cpp", line 89 # ';' expected 
before '}'

options { language="Cpp"; }
class PageParser extends Parser;
test: CTAGBEGIN
        ;

class PageLexer extends Lexer;
OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
        ;


The relevant lines are as follows:
#line 8 "test.g"
  _ttype = CTAGBEGIN           // <== does not have ';' at the end
#line 89 PageLexer.cpp

It works after I manually add the ';' at the end of the statement. Is 
this a bug in the lexer generator? Thanks!

-Jerry



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mzukowski at yci.com  Thu Mar 18 10:10:57 2004
From: mzukowski at yci.com (mzukowski@yci.com)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: antlr 3 stuff
Message-ID: <72C9789739C4214096AE945753B11EA3FABE6C@mypxmail04.bco-home.com>

Actually there are a few distinctions (but no decisions) I'd like to make.

1.  It's not just refactoring, though the workbench may be the appropriate
place to accommodate this.  We will need exposure to the lookahead analysis,
however.  I want two modes:
  A.  I know what I'm doing, help me fix my ambiguities.
  B.  I have no clue, keep me from introducing ambiguities.

'A' is static.  'B' isn't.  For 'B' there is the before & after.  The
difference is what is important, and we need hooks to analyze that
difference.  From the metamorphic syntactic macro point of view, you
separate the master grammar from the extensions and analyze them
differently.  This also lets you combine multiple extensions from different
files, etc., much like we wish for grammar modularization.  I believe hooks
into the grammar analysis will be necessary or at least desirable to support
this kind of feature.

2.  I believe we have the common goal of being able to write an ANSI C
grammar, write syntax extensions for GCC or MSVC, allow people to write
their own extensions such as safe pointers or programming by contract, write
any number of tree passes for analysis and manipulation, and have the whole
thing modularized for maintainablility.

3.  Modifying the ANTLR syntax could have some benefits.  It could also get
way out of control.  Most of the stuff I care about can be handled through
templates controlling the code generation.  Action syntax is the most
problematic thing for ANTLR, and maybe can be helped.

4.  The other cool thing about syntactic macros is transparency--they
transform the new syntax into the old syntax.  For antlr that would mean
that the tree generated by the syntactic macro would be a tree compatible
with the tree grammar for the master grammar, and hence with all tree
grammars written for C or whatever.  This is not practical for, say, GCC
grammar extensions.  Those would simply be grammar extensions, as they are
now.  It is very practical for domain specific languages, or at least a
large class of them.  I see no reason why the transformation to original
syntax has to be immediate.  I might want to do some analysis passes and
manipulations before it becomes the original syntax, and that would be easy
to support.  Getting it back to the original syntax means you can generate
plain unextended C and compile it with any compiler, etc.  Guaranteeing that
it did get back to the original syntax would make it safe.

5.  I think ANTLR could become a standard in the DSL world if grammars were
easy and safe to extend.  

Monty

-----Original Message-----
From: lgcraymer [mailto:lgc@mail1.jpl.nasa.gov] 
Sent: Wednesday, March 17, 2004 4:39 PM
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Re: antlr 3 stuff

Monty--

I tend to think that this is part of what a language workbench is
about--refactoring support, tree visualization, and all of the other stuff 
that would make it feasible to tweak a translator fast.  It would be nice if
we could figure out how to preserve refactorings when 
regenerating tree grammars.  (On glancing over the paper you mention,
"metamorphism"  == refactoring).

Macros I consider both very useful and very evil.  I think that a reasonable
refactoring editor would be a better approach.  And it might 
be useful if ANTLR inlined rules--that would cover the "syntax macros" and
improve performance.

--Loring


--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> I'd like to explore the 'language extension' space for antlr 3.  To me
> developing a grammar and extending a grammar are very distinct phases of
> antlr coding.  Plenty of people download grammars and just want to tweak
> them with actions or a small bit of new syntax.  In "Growing Languages
with
> Metamorphic Syntax Macros" by Claus Brabrand and Michael I. Schwartzbach
at
> http://www.brics.dk/bigwig/publications/#macro they present a system that
> makes it safe for people to extend languages by not letting them do stupid
> things that have huge side effects.  When the time comes I'll re-read the
> paper again and try and convince Ter & Loring.
> 
> Monty
> www.codetransform.com



 
Yahoo! Groups Links



 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jerrydy at sbcglobal.net  Thu Mar 18 10:13:39 2004
From: jerrydy at sbcglobal.net (Jerry Dy)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: "PageLexer.cpp", line 89 # ';' expected befo re '}'
In-Reply-To: <72C9789739C4214096AE945753B11EA3FABE6B@mypxmail04.bco-home.com>
Message-ID: <c3cosj+kik0@eGroups.com>

--- In antlr-interest@yahoogroups.com, mzukowski@y... wrote:
> OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)})?
> Should be
> OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN)};)?
> 
> You need a complete statement in an action, which for cpp means 
semicolon termination.

Small correction:
OTAGBEGIN: '<' ('/' {$setType(CTAGBEGIN);})?

It worked. Thanks!

-Jerry



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu Mar 18 11:21:15 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] (unknown)
In-Reply-To: <c3b563+imj8@eGroups.com>
References: <c3b563+imj8@eGroups.com>
Message-ID: <6D22C83C-7911-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 17, 2004, at 7:31 PM, atripp54321 wrote:

> Neat tool!
> This may sound crazy, but I've always thought
> that a great addition to ANTLR would be a tool
> that lets me draw a syntax diagram graphically,
> and then generates the .g file from the graph.

I assume you are talking about the syntax diagram generator. :)

I hope you like it.  It is not very flexible at this point, just a 
prototype.  I definitely plan on building better gui tools as part of 
my work.  Hopefully, some hotshot students will appear that like GUIs 
<shudder>. ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu Mar 18 12:25:12 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] ANTLR 2.7.3 release candidate 3 available
Message-ID: <5C16DDCE-791A-11D8-9C42-000A95891192@cs.usfca.edu>

Howdy folks,

ANTLR 2.7.3 Release Candidate 3 is ready for you to take a look at.

I plan on releasing 2.7.3 final on this Monday March 22.  I have 
changed the analyzer to fix the FOLLOW computation bug (and updated the 
python grammar at antlr.org) so you should run it on your grammar.

This release also has the (java-only) versions of the 
TokenStreamRewriteEngine and the parse-tree/derivation debugging stuff 
in the distribution.  I have updated the doc as well.

Please let me know if I have broken anything ;)  The antlr.jar file 
inside should have everything (tool + runtime).

http://www.antlr.org/download/antlr-2.7.3rc3.tar.gz

Best regards,
Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Thu Mar 18 13:48:02 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <5C16DDCE-791A-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3d5ei+ge2h@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Howdy folks,
> 
> ANTLR 2.7.3 Release Candidate 3 is ready for you to take a look at.

Yippee! ;-)

> This release also has the (java-only) versions of the 
> TokenStreamRewriteEngine and the parse-tree/derivation debugging stuff 
> in the distribution.  I have updated the doc as well.

Quick update to Ter's announcement:

The TokenStreamRewriteEngine and ParseTree derivation/debugging
features are also present in ANTLR/C#. See the following sample
projects in the distribution:
    antlr-2.7.3rc3/examples/csharp/TokenStreamRewrite/
    antlr-2.7.3rc3/examples/csharp/ParseTreeDebug/

Enjoy,

Micheal
ANTLR/C#




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu Mar 18 15:14:12 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3d5ei+ge2h@eGroups.com>
References: <c3d5ei+ge2h@eGroups.com>
Message-ID: <F7E5DE96-7931-11D8-82EB-000393BB647E@cs.usfca.edu>

On Mar 18, 2004, at 1:48 PM, micheal_jor wrote:

> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
>> Howdy folks,
>>
>> ANTLR 2.7.3 Release Candidate 3 is ready for you to take a look at.
>
> Yippee! ;-)
>
>> This release also has the (java-only) versions of the
>> TokenStreamRewriteEngine and the parse-tree/derivation debugging stuff
>> in the distribution.  I have updated the doc as well.
>
> Quick update to Ter's announcement:
>
> The TokenStreamRewriteEngine and ParseTree derivation/debugging
> features are also present in ANTLR/C#. See the following sample
> projects in the distribution:
>     antlr-2.7.3rc3/examples/csharp/TokenStreamRewrite/
>     antlr-2.7.3rc3/examples/csharp/ParseTreeDebug/
>

Wow!  Didn't know you did this.  C# and Java must be pretty similar.  
Is C# just Java with the serial numbers filed off? ;)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Thu Mar 18 16:24:09 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <F7E5DE96-7931-11D8-82EB-000393BB647E@cs.usfca.edu>
Message-ID: <c3dej9+78ir@eGroups.com>

I'll add to that.  I've got a C++ version of the parse tree debug stuff working, and extended it to handle tree parsers (Java and C++ 
versions).  I've also got code for a lexer version (Java), but have had no time to get that working.   I'm using the ParseTreeDebug 
classes to debug the C++ code generation for my tree stuff as well as the Java version in a language-independent fashion.  It will help 
a lot that Micheal has a C# version--I've modified CSharpCodeGenerator.java, but have no way of testing generated C# code.  I'm 
expecting to install the ParseTreeDebugParser and ParseTreeDebugTreeParser classes as antlr.test.Parser and antlr.test.TreeParser 
in 2.8 (or antlr::test::Parser and antlr::test::TreeParser for C++).  I have also added some options and flags to support the language 
independence--I'm not quite there yet, but the idea is to use one set of grammar files for testing all three runtimes.

That just leaves the C++ version of the TokenStreamRewriteEngine as a missing feature.  Any volunteers?

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> On Mar 18, 2004, at 1:48 PM, micheal_jor wrote:
> 
> > --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> >> Howdy folks,
> >>
> >> ANTLR 2.7.3 Release Candidate 3 is ready for you to take a look at.
> >
> > Yippee! ;-)
> >
> >> This release also has the (java-only) versions of the
> >> TokenStreamRewriteEngine and the parse-tree/derivation debugging stuff
> >> in the distribution.  I have updated the doc as well.
> >
> > Quick update to Ter's announcement:
> >
> > The TokenStreamRewriteEngine and ParseTree derivation/debugging
> > features are also present in ANTLR/C#. See the following sample
> > projects in the distribution:
> >     antlr-2.7.3rc3/examples/csharp/TokenStreamRewrite/
> >     antlr-2.7.3rc3/examples/csharp/ParseTreeDebug/
> >
> 
> Wow!  Didn't know you did this.  C# and Java must be pretty similar.  
> Is C# just Java with the serial numbers filed off? ;)
> 
> Ter



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Thu Mar 18 16:44:15 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
References: <c3d5ei+ge2h@eGroups.com> <F7E5DE96-7931-11D8-82EB-000393BB647E@cs.usfca.edu>
Message-ID: <058401c40d4b$5163f4b0$0100a8c0@xpbaby>

> Wow!  Didn't know you did this.  C# and Java must be pretty similar.  
> Is C# just Java with the serial numbers filed off? ;)

Oh, those were serial numbers? I thought they were just rough edges ; ).

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From atripp at comcast.net  Thu Mar 18 19:34:04 2004
From: atripp at comcast.net (atripp54321)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR syntax diagram generator
In-Reply-To: <B111B503-785C-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3dpnc+sipk@eGroups.com>

That's a neat tool.

What I've always thought would be a great tool for ANTLR newbies
would be a nice graphical syntax diagram editor, from which
the .g file is generated.

IMO, the biggest hurdle in learning ANTLR and related tools is
in trying to learn the syntax. Just take a typical
snippet:

constructorBody
    :   lc:LCURLY^ {#lc.setType(SLIST);}
            ( options { greedy=true; } : explicitC
onstructorInvocation)?
            (statement)*
        RCURLY!
    ;

To write these few lines, you need to understand many symbols:
":", "^", "{" and "}", "(" and ")", "?", "*", "!", ";"
and you have to know how to put them all together. Basically,
you need to hold the ANTLR syntax and grammar in your head while
you want to be focusing on your target syntax and grammar.

Wouldn't it be possible to build
a graphical syntax diagram editing tool that that hides
virtually all of the ANTLR syntax? Have a syntax diagram where
each node can be tagged with various symbols to indicate
"this LCURLY box gets an AST node" (the meaning of "^")
"this RCURLY box does not" ("!")
"the following code is associated with this LCURLY" ("{...}")
Using colors, shapes and icons on a visual graph 
rather than terse symbols inside a text file would be
much easier to visualize, I would think.

Just a thought.
Andy



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Fri Mar 19 01:32:34 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
Message-ID: <C7FE35004D40FD45AA342991B88CE40409ADF7@lnml1.eca-international.local>

My Visual Studio thinks it owns .java files.

If you're emitting C# code, I would have thought a fair rewrite was
needed. If you're merely loading code from elsewhere into your C#
project, then you're pretty much spot on the money :-)

C# is generally reckoned to be MS's next attempt to an EEE on Java ...

Cheers,
Wol

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 18 March 2004 23:14
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3
available


Wow!  Didn't know you did this.  C# and Java must be pretty similar.  
Is C# just Java with the serial numbers filed off? ;)

Ter



***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar 19 02:18:37 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3dej9+78ir@eGroups.com>
References: <F7E5DE96-7931-11D8-82EB-000393BB647E@cs.usfca.edu> <c3dej9+78ir@eGroups.com>
Message-ID: <20040319101837.GA1431@cs.utwente.nl>

Hi,

Great the DebugParser stuff is then covered :) and glad I didn't start
hacking on those.

On Fri, Mar 19, 2004 at 12:24:09AM -0000, lgcraymer wrote:
> generated C# code.  I'm expecting to install the ParseTreeDebugParser and
> ParseTreeDebugTreeParser classes as antlr.test.Parser and
> antlr.test.TreeParser in 2.8 (or antlr::test::Parser and
> antlr::test::TreeParser for C++).

Slight nitpick ;) but why use a different convention as the java part? E.g.
not antlr::debug::TreeParser etc.

> I have also added some options and flags
> to support the language independence--I'm not quite there yet, but the idea
> is to use one set of grammar files for testing all three runtimes.
>
> That just leaves the C++ version of the TokenStreamRewriteEngine as a
> missing feature.  Any volunteers?

I got the tokenWithIndex class ported (duh trivial) and started on the
rewrite engine but doing a direct port is just too plain ugly (it wrings a
bit between indici and iterators). I probably won't be able to finish and
test this before monday. Providing an addon lateron is no problem though.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 'And this 'rebooting' business? Give it a good kicking, do you?' 'Oh, no,
  of course, we ... that is ... well, yes, in fact,' said Ponder. 'Adrian
    goes round the back and ... er ... prods it with his foot. But in a
     technical way,' he added. --- From: Hogfather by Terry Pratchett.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Fri Mar 19 02:56:48 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Redifinition of token in tokens {...}: CTAGBEGIN
In-Reply-To: <c3clmc+gjkg@eGroups.com>
References: <DBCF6E44-7865-11D8-9C42-000A95891192@cs.usfca.edu> <c3clmc+gjkg@eGroups.com>
Message-ID: <20040319105648.GB1431@cs.utwente.nl>

On Thu, Mar 18, 2004 at 05:19:08PM -0000, Jerry Dy wrote:
> > Because the CTAGBEGIN is implicitly defined in the parser. :)
> >
>
> Am I not simply referencing the token CTAGBEGIN in the parser, not
> defining it? The cpp files where generated without errors when I
> removed CTAGBEGIN from the tokens section... in this case, where is
> the CTAGBEGIN token defined??

ANTLR defines tokens implicitly as it encounters them (think vanilla
BASIC), this can be a real PITA, but Ter nearly had me shot when I tried to
change that ;)

Also it does different things if you have lexer/parser in one file or
separate files. The behaviour with separate files is a more consistent. But
you'll usually have to make a exportVocab -> importVocab 'chain'.

E.g. make your lexer define tokens there do an exportVocab from the lexer.
Then in the parser use a importVocab .. add imaginary tokens if you need
them do an exportVocab to another vocabulary which can be used by
treeparsers and so on. See the FAQ's on this topic on jguru.com.
Disadvantage of this approach though is that you need to build your
grammars in the right order (although it's not much different from normal
build processes, unless you're not aware of those due to nice
shiny gui's ;) )

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Before they invented drawing boards, what did they go back to?


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar 19 10:41:27 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: New antlr-interest member
Message-ID: <1079721687.68.40954.w47@yahoogroups.com>


Hello,

This is an automated email message to let you know that
alphadog4 <tiseo.paul@mayo.edu> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Fri Mar 19 11:23:47 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <20040319101837.GA1431@cs.utwente.nl>
Message-ID: <c3fhc3+aobq@eGroups.com>

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> Hi,
> 
> Great the DebugParser stuff is then covered :) and glad I didn't start
> hacking on those.
> 
> On Fri, Mar 19, 2004 at 12:24:09AM -0000, lgcraymer wrote:
> > generated C# code.  I'm expecting to install the ParseTreeDebugParser and
> > ParseTreeDebugTreeParser classes as antlr.test.Parser and
> > antlr.test.TreeParser in 2.8 (or antlr::test::Parser and
> > antlr::test::TreeParser for C++).
> 
> Slight nitpick ;) but why use a different convention as the java part? E.g.
> not antlr::debug::TreeParser etc.

They are really the same--it's just that the two languages differ in their namespace qualifier syntax--'.' vs '::'.  C# follows Java in this, so 
I have to translate '.'s to '::'s for packages when generating C++.

> 
> > I have also added some options and flags
> > to support the language independence--I'm not quite there yet, but the idea
> > is to use one set of grammar files for testing all three runtimes.
> >
> > That just leaves the C++ version of the TokenStreamRewriteEngine as a
> > missing feature.  Any volunteers?
> 
> I got the tokenWithIndex class ported (duh trivial) and started on the
> rewrite engine but doing a direct port is just too plain ugly (it wrings a
> bit between indici and iterators). I probably won't be able to finish and
> test this before monday. Providing an addon lateron is no problem though.

Way cool!  I've almost gotten the C++ runtime for my tree stuff up and running--only one of my test cases fails.  I have about two 
weeks of down time coming up and will use that to integrate the final 2.7.3 changes and clean a few things up.  With Micheal's port of 
the C# ParseTreeDebugParser, he should be able to bring the C# runtime up very quickly for 2.8 (I know just enough C# to edit the 
code generator, but have no hands-on experience).

--Loring

> 
> Cheers,
> 
> Ric
> --
> -----+++++*****************************************************+++++++++-------
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
> -----+++++*****************************************************+++++++++-------
>  'And this 'rebooting' business? Give it a good kicking, do you?' 'Oh, no,
>   of course, we ... that is ... well, yes, in fact,' said Ponder. 'Adrian
>     goes round the back and ... er ... prods it with his foot. But in a
>      technical way,' he added. --- From: Hogfather by Terry Pratchett.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Fri Mar 19 12:37:20 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Problem with noConstructors option
In-Reply-To: <c3dpnc+sipk@eGroups.com>
Message-ID: <20040319203720.23254.qmail@web12707.mail.yahoo.com>

Hello,

The beginning of my parser grammar looks similar to
this:

header
{
  package com.mycompany.mypackage;
  import java.util.*;
}

class MyParser extends Parser;

options
{
 importVocab=MyVocab;
 noConstructors=true;
 k=3;
 codeGenBitsetTestThreshold=999;
}

Antlr has no complaints when I build the parser, but
the resulting .java file DOES contain the default
constructors.  I'm sure I've done something silly but
I can't figure out what it might be.  Any suggestions?
 Thanks in advance.

-jason

__________________________________
Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
http://mail.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 19 13:10:52 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Problem with noConstructors option
In-Reply-To: <20040319203720.23254.qmail@web12707.mail.yahoo.com>
Message-ID: <c3fnks+ip0a@eGroups.com>

Note the code in the documentation--FGLC (file/grammar/lexer and C/C++ only).  You are not doing anything wrong; the Java code 
generator does not support this option.

--Loring

--- In antlr-interest@yahoogroups.com, Jason <jasonriz@y...> wrote:
> Hello,
> 
> The beginning of my parser grammar looks similar to
> this:
> 
> header
> {
>   package com.mycompany.mypackage;
>   import java.util.*;
> }
> 
> class MyParser extends Parser;
> 
> options
> {
>  importVocab=MyVocab;
>  noConstructors=true;
>  k=3;
>  codeGenBitsetTestThreshold=999;
> }
> 
> Antlr has no complaints when I build the parser, but
> the resulting .java file DOES contain the default
> constructors.  I'm sure I've done something silly but
> I can't figure out what it might be.  Any suggestions?
>  Thanks in advance.
> 
> -jason
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail - More reliable, more storage, less spam
> http://mail.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jasonriz at yahoo.com  Fri Mar 19 13:39:43 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Problem with noConstructors option
In-Reply-To: <c3fnks+ip0a@eGroups.com>
Message-ID: <20040319213943.13429.qmail@web12708.mail.yahoo.com>


--- lgcraymer <lgc@mail1.jpl.nasa.gov> wrote:
> Note the code in the documentation--FGLC
> (file/grammar/lexer and C/C++ only).  You are not
> doing anything wrong; the Java code 
> generator does not support this option.
> 
> --Loring

Loring,

Thanks for taking the time to reply.  I noticed the
[FGLC] in the 'type' column but to be truthful, it
wasn't (and still isn't) clear to me how one can
deduce from that, that the option's not supported by
the Java code generator.  In any case it should be
easy enough to work around.  Thanks again.

-jason

__________________________________
Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
http://mail.yahoo.com


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 19 14:17:07 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: Problem with noConstructors option
In-Reply-To: <20040319213943.13429.qmail@web12708.mail.yahoo.com>
Message-ID: <c3frh3+o2rq@eGroups.com>

Jason--

Ric has added a few flags to deal with nastinesses of C++ that are only valid for C++--stuff for header file inclusion and the like.  
Anything labeled "C" in the type column is specific to C/C++.

--Loring


--- In antlr-interest@yahoogroups.com, Jason <jasonriz@y...> wrote:
> 
> --- lgcraymer <lgc@m...> wrote:
> > Note the code in the documentation--FGLC
> > (file/grammar/lexer and C/C++ only).  You are not
> > doing anything wrong; the Java code 
> > generator does not support this option.
> > 
> > --Loring
> 
> Loring,
> 
> Thanks for taking the time to reply.  I noticed the
> [FGLC] in the 'type' column but to be truthful, it
> wasn't (and still isn't) clear to me how one can
> deduce from that, that the option's not supported by
> the Java code generator.  In any case it should be
> easy enough to work around.  Thanks again.
> 
> -jason
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail - More reliable, more storage, less spam
> http://mail.yahoo.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Fri Mar 19 14:13:30 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3fhc3+aobq@eGroups.com>
Message-ID: <c3fraa+sghh@eGroups.com>

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> --- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> > Hi,
> > 
> > Great the DebugParser stuff is then covered :) and glad I didn't start
> > hacking on those.
> > 
> > On Fri, Mar 19, 2004 at 12:24:09AM -0000, lgcraymer wrote:
> > > I'm expecting to install the ParseTreeDebugParser and
> > > ParseTreeDebugTreeParser classes as antlr.test.Parser and
> > > antlr.test.TreeParser in 2.8 (or antlr::test::Parser and
> > > antlr::test::TreeParser for C++).
> > 
> > Slight nitpick ;) but why use a different convention as the java
part? E.g.
> > not antlr::debug::TreeParser etc.
> 
> They are really the same--it's just that the two languages differ in
their namespace qualifier syntax--'.' vs '::'.  C# follows Java in
this, so 
> I have to translate '.'s to '::'s for packages when generating C++.

I think he meant the actual package/namespace naming:

He want to know why you've decided to use
   antlr.test.Parser       (or antlr::test::Parser)
   antlr.test.TreeParser   (or antlr::test::TreeParser )

instead of the "original"
   antlr.debug.Parser      (or antlr::debug::Parser)
   antlr.debug.TreeParser  (or antlr::debug::TreeParser )

Cheers,

Micheal




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bob.donovan at ugsplm.com  Fri Mar 19 14:27:39 2004
From: bob.donovan at ugsplm.com (Donovan, Bob)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Parser performance
Message-ID: <BA38992C3BC5B543BEE63132C4B45AF76EFFC7@uscimplm001.net.plm.eds.com>

I just finished testing a new parser that I generated with ANTLR.

The parser will parse the grammar, build and AST, and walk the AST to generate some statements that I use to update a model.

When I compare the performance of the antlr generated parser vs an older parser that i wrote by hand, I find that my older parser was twice as fast

ANTLR: 44 seconds
OLDER: 16 seconds

I really expected the ANTLR parser to run just as fast or maybe even faster. Not sure why it is slower. 
I optimized the ANTLR parser by putting the most common rules in front of less common rules.

Does anyone have any suggestions?
Is the AST Tree generation time consuming?
Is walking a tree time consuming?

I have one thought?
1) Instead of walking the tree to produce the model statements, I could move the generation of these statements into the first pass in the parser.

Thanks, Bob


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri Mar 19 14:45:34 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3fraa+sghh@eGroups.com>
Message-ID: <c3ft6e+jhls@eGroups.com>

--- In antlr-interest@yahoogroups.com, "micheal_jor" <open.zone@v...> wrote: 
> He want to know why you've decided to use
>    antlr.test.Parser       (or antlr::test::Parser)
>    antlr.test.TreeParser   (or antlr::test::TreeParser )
> 
> instead of the "original"
>    antlr.debug.Parser      (or antlr::debug::Parser)
>    antlr.debug.TreeParser  (or antlr::debug::TreeParser )

You mean "ParseTreeDebugParser, don't you?  I haven't looked at the rc3; maybe Ter put it in "debug" as "Parser" after our 
discussions.

At any rate, it is so I can specify a superclass package on the command line to override the default "antlr" for locating the 
CharScanner, Parser and TreeParser classes.  That way, you can use the same grammar to generate debugging code that you use 
for normal code output just by specifying "-super antlr.test" as a command line option.  I had originally thought to override the 
superclass grammars individually on the command line, but Ter convinced me that proliferation of command line options was evil; 
anyway, this is a cleaner approach.

I felt that Ter's parse tree debugging approach was elegant to be an add-on, so I've made it a built-in.  The antlr.test namespace will 
also includes a TestFilter class (grammar) that allow you to do each test case as a separate tree with its own derivation output.  It 
makes for a very satisfying ANTLR Unit test framework; the only thing missing right now is a working CharScanner class (and C# 
TreeParser class, but that should be easy--the debug TreeParser is quite similar to the debug Parser in both Java and C++).

--Loring

> Cheers,
> 
> Micheal



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar 19 16:27:50 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:33 2004
Subject: New antlr-interest member
Message-ID: <1079742470.138.4977.w43@yahoogroups.com>


Hello,

This is an automated email message to let you know that
rigpa_man <maswann@verizon.net> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From lgc at mail1.jpl.nasa.gov  Fri Mar 19 17:17:19 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3fraa+sghh@eGroups.com>
Message-ID: <c3g62v+vn1q@eGroups.com>

Micheal, Ric--

Ok, I looked at the rc3.  That has antlr.debug.ParseTreeDebugParser.java.  I guess Ter put it there to avoid adding 
directories--antlr.debug is the home of support classes for ParseView (defunct); also, he is invoking that via the grammar superclass 
support.  I was very surprised to find that Micheal has a C# implementation of antlr.debug--how was that stuff tested?

Anyway, I have just enough unit test scaffolding to justify an antlr.test namespace and expect more stuff to be added later.  The 
derivation analysis is a neat approach to ANTLR unit testing--Ter was truly inspired when he came up with the idea of using parse 
trees for that.

One additional point:  when I started down the path of command-line superclasses, Ter asked "What happens if the user specifies a 
superclass in the grammar?"  Having namespace-qualified versions of the CharScanner, Parser, and TreeParser--or of the user's 
superclasses--solves this problem.  "class MyParser extends YourParser" can be supported by alternative versions of 
YourParser--one a subclass of antlr.Parser, and the other a subclass of antlr.test.Parser.

--Loring


--- In antlr-interest@yahoogroups.com, "micheal_jor" <open.zone@v...> wrote:
> I think he meant the actual package/namespace naming:
> 
> He want to know why you've decided to use
>    antlr.test.Parser       (or antlr::test::Parser)
>    antlr.test.TreeParser   (or antlr::test::TreeParser )
> 
> instead of the "original"
>    antlr.debug.Parser      (or antlr::debug::Parser)
>    antlr.debug.TreeParser  (or antlr::debug::TreeParser )
> 
> Cheers,
> 
> Micheal



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From maswann at verizon.net  Fri Mar 19 16:54:08 2004
From: maswann at verizon.net (rigpa_man)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Found a BUG ! (maybe)
Message-ID: <c3g4ng+ut93@eGroups.com>

Hi all,

I used ANTLR (PCCTS) a few years ago and loved it. I have a use for 
it again so I'm picking it up to play with one more time.

Here is my problem:
(bug appears in both antlr-2.7.2 and antlr-2.7.3rc2)

The following lex rule...

SCOLN
	:	';' (~'\n')* '\n'
	;

...gets converted to this... (parts removed for brevity)

	. . .
	match(';');
	{
	_loop6:
	do {
		if ((LA(1)==';')) {
			matchNot('\n');
		}
		else {
			break _loop6;
		}
	} while (true);
	}
	match('\n');
	. . .

...which does not work.

I changed one line as follows and it works great now.
I changed...
	if ((LA(1)==';')) {
to...
	if ((LA(1)!='\n'')) {

and it works as advertized.

The code that was generated cannot be right.

Please convince me that I am doing something wrong.

Thanks,

Mark Swann





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 19 17:25:08 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Parser performance
In-Reply-To: <BA38992C3BC5B543BEE63132C4B45AF76EFFC7@uscimplm001.net.plm.eds.com>
References: <BA38992C3BC5B543BEE63132C4B45AF76EFFC7@uscimplm001.net.plm.eds.com>
Message-ID: <6CDD857C-7A0D-11D8-9C42-000A95891192@cs.usfca.edu>

On Mar 19, 2004, at 2:27 PM, Donovan, Bob wrote:
> I just finished testing a new parser that I generated with ANTLR.
>
> The parser will parse the grammar, build and AST, and walk the AST to 
> generate some statements that I use to update a model.
>
> When I compare the performance of the antlr generated parser vs an 
> older parser that i wrote by hand, I find that my older parser was 
> twice as fast
>
> ANTLR: 44 seconds
> OLDER: 16 seconds
>
> I really expected the ANTLR parser to run just as fast or maybe even 
> faster. Not sure why it is slower.
> I optimized the ANTLR parser by putting the most common rules in front 
> of less common rules.

I think the lexer is to blame.  Should be able to double speed 
according to tests done by a friend...I just can't make them general 
enough fast enough for 2.7.3...my energy is devoted to 3.0 and making 
it fast as @&&*(@#%#($.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 19 17:29:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:33 2004
Subject: [antlr-interest] Re: ANTLR 2.7.3 release candidate 3 available
In-Reply-To: <c3g62v+vn1q@eGroups.com>
References: <c3g62v+vn1q@eGroups.com>
Message-ID: <F773175D-7A0D-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 19, 2004, at 5:17 PM, lgcraymer wrote:
> Ok, I looked at the rc3.  That has 
> antlr.debug.ParseTreeDebugParser.java.  I guess Ter put it there to 
> avoid adding
> directories

That was one reason.  The other is that I used it for debugging not 
testing, though it's great for both!

> --antlr.debug is the home of support classes for ParseView (defunct); 
> also, he is invoking that via the grammar superclass
> support.  I was very surprised to find that Micheal has a C# 
> implementation of antlr.debug--how was that stuff tested?
>
> Anyway, I have just enough unit test scaffolding to justify an 
> antlr.test namespace and expect more stuff to be added later.  The
> derivation analysis is a neat approach to ANTLR unit testing--Ter was 
> truly inspired when he came up with the idea of using parse
> trees for that.

I blame it on the pakistani restaurant in my new neighborhood.  I eat 
there constantly...i think there is something in the water.

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 19 17:30:31 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Found a BUG ! (maybe)
In-Reply-To: <c3g4ng+ut93@eGroups.com>
References: <c3g4ng+ut93@eGroups.com>
Message-ID: <2D2FB9D4-7A0E-11D8-9C42-000A95891192@cs.usfca.edu>

On Mar 19, 2004, at 4:54 PM, rigpa_man wrote:

> Hi all,
>
> I used ANTLR (PCCTS) a few years ago and loved it. I have a use for
> it again so I'm picking it up to play with one more time.

welcome back, rigpa_man!

> Here is my problem:
> (bug appears in both antlr-2.7.2 and antlr-2.7.3rc2)
>
> The following lex rule...
>
> SCOLN
> 	:	';' (~'\n')* '\n'
> 	;
>
> ...gets converted to this... (parts removed for brevity)
>
> 	. . .
> 	match(';');
> 	{
> 	_loop6:
> 	do {
> 		if ((LA(1)==';')) {
> 			matchNot('\n');
> 		}
> 		else {
> 			break _loop6;
> 		}
> 	} while (true);
> 	}
> 	match('\n');
> 	. . .
>
> ...which does not work.

This indicates that you have not specified a charVocab='\003'..'\377' 
option in your lexer to tell it was ~'\n' means.  Give that a shot.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From maswann at verizon.net  Fri Mar 19 20:29:52 2004
From: maswann at verizon.net (rigpa_man)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Found a BUG ! (maybe)
In-Reply-To: <2D2FB9D4-7A0E-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3ghc0+n3dc@eGroups.com>

Thanks for responding, Ter.

I do recall trying charVocab='\003'..'\377' without success. I will 
try it again in case my memory is not serving me.

However! It still does not make sense that the generated code would 
do an LA(1) for a semi-colon after the semi-colon had already been 
matched, especially since the rule did not make explicit mention of 
caring about semi-colons after finding the first one. It also makes 
no sense to detect a semi-colon in the look-ahead queue if you are 
going to turn right around and do a matchNot('\n'). 

I give much humble prostration to the great ANTLR guru but this time 
I think he has a bug. 

Your humble servant and student of the divine ANTLR scriptures, ;-)

Mark Swann

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> On Mar 19, 2004, at 4:54 PM, rigpa_man wrote:
> 
> > Hi all,
> >
> > I used ANTLR (PCCTS) a few years ago and loved it. I have a use 
for
> > it again so I'm picking it up to play with one more time.
> 
> welcome back, rigpa_man!
> 
> > Here is my problem:
> > (bug appears in both antlr-2.7.2 and antlr-2.7.3rc2)
> >
> > The following lex rule...
> >
> > SCOLN
> > 	:	';' (~'\n')* '\n'
> > 	;
> >
> > ...gets converted to this... (parts removed for brevity)
> >
> > 	. . .
> > 	match(';');
> > 	{
> > 	_loop6:
> > 	do {
> > 		if ((LA(1)==';')) {
> > 			matchNot('\n');
> > 		}
> > 		else {
> > 			break _loop6;
> > 		}
> > 	} while (true);
> > 	}
> > 	match('\n');
> > 	. . .
> >
> > ...which does not work.
> 
> This indicates that you have not specified a 
charVocab='\003'..'\377' 
> option in your lexer to tell it was ~'\n' means.  Give that a shot.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 19 21:03:04 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Found a BUG ! (maybe)
In-Reply-To: <c3ghc0+n3dc@eGroups.com>
References: <c3ghc0+n3dc@eGroups.com>
Message-ID: <DEE18709-7A2B-11D8-82EB-000393BB647E@cs.usfca.edu>


On Mar 19, 2004, at 8:29 PM, rigpa_man wrote:

> Thanks for responding, Ter.
>
> I do recall trying charVocab='\003'..'\377' without success. I will
> try it again in case my memory is not serving me.
>
> However! It still does not make sense that the generated code would
> do an LA(1) for a semi-colon after the semi-colon had already been
> matched,

Howdy.

It would if ~'\n' includes ';', right? ;)

>  especially since the rule did not make explicit mention of
> caring about semi-colons after finding the first one. It also makes
> no sense to detect a semi-colon in the look-ahead queue if you are
> going to turn right around and do a matchNot('\n').

Yeah, it's all in how antlr does the analysis...

> I give much humble prostration to the great ANTLR guru but this time
> I think he has a bug.

Oh honored prostate supplicant...guru says "there are many bugs...this 
just ain't one of 'em" ;)

> Your humble servant and student of the divine ANTLR scriptures, ;-)

<snicker>

Seriously though I think that behavior is fully explained by the 
charVocab :)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat Mar 20 01:54:00 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079776440.73.96527.w67@yahoogroups.com>


Hello,

This is an automated email message to let you know that
vamsikp406 <vamsi.pendela@wipro.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Sat Mar 20 01:55:31 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079776531.162.62285.w80@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sudha_vara <vamsikp406@kiwibox.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Sat Mar 20 04:16:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079785002.174.67358.w32@yahoogroups.com>


Hello,

This is an automated email message to let you know that
altugbayram2 <altugbayram2@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Sat Mar 20 10:04:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079805870.118.32682.w20@yahoogroups.com>


Hello,

This is an automated email message to let you know that
leoengbr <alberto.de@leo.eng.br> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From maswann at verizon.net  Sat Mar 20 15:00:37 2004
From: maswann at verizon.net (rigpa_man)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Found a BUG ! (maybe)
In-Reply-To: <DEE18709-7A2B-11D8-82EB-000393BB647E@cs.usfca.edu>
Message-ID: <c3iiel+aqjt@eGroups.com>

Hi again, Ter,

You were right. I tried charVocab='\003'..'\377' and it worked. 
Actually it didn't initially work so I changed charVocab to 
charVocabulary and then it worked. 

I would like to say, however, that setting charVocabulary this way 
should not be necessary especially since none of the examples I saw 
that used (~'\n')* '\n' (such as the c++ comment ->  "//" 
(~'\n')* '\n') mentioned that it would not work unless you defined 
charVocabulary. There should already be a default charVocabulary that 
is usable without modification.

Thanks,

Mark

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> 
> On Mar 19, 2004, at 8:29 PM, rigpa_man wrote:
> 
> > Thanks for responding, Ter.
> >
> > I do recall trying charVocab='\003'..'\377' without success. I 
will
> > try it again in case my memory is not serving me.
> >
> > However! It still does not make sense that the generated code 
would
> > do an LA(1) for a semi-colon after the semi-colon had already been
> > matched,
> 
> Howdy.
> 
> It would if ~'\n' includes ';', right? ;)
> 
> >  especially since the rule did not make explicit mention of
> > caring about semi-colons after finding the first one. It also 
makes
> > no sense to detect a semi-colon in the look-ahead queue if you are
> > going to turn right around and do a matchNot('\n').
> 
> Yeah, it's all in how antlr does the analysis...
> 
> > I give much humble prostration to the great ANTLR guru but this 
time
> > I think he has a bug.
> 
> Oh honored prostate supplicant...guru says "there are many 
bugs...this 
> just ain't one of 'em" ;)
> 
> > Your humble servant and student of the divine ANTLR scriptures, ;-
)
> 
> <snicker>
> 
> Seriously though I think that behavior is fully explained by the 
> charVocab :)
> 
> Ter



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat Mar 20 15:30:10 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Found a BUG ! (maybe)
In-Reply-To: <c3iiel+aqjt@eGroups.com>
References: <c3iiel+aqjt@eGroups.com>
Message-ID: <8760719C-7AC6-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 20, 2004, at 3:00 PM, rigpa_man wrote:
> I would like to say, however, that setting charVocabulary this way
> should not be necessary especially since none of the examples I saw
> that used (~'\n')* '\n' (such as the c++ comment ->  "//"
> (~'\n')* '\n') mentioned that it would not work unless you defined
> charVocabulary. There should already be a default charVocabulary that
> is usable without modification.

Yeah, i suppose ASCII would be a good assumption and folks can change 
it if they want.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat Mar 20 21:21:31 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1079846491.1988.26622.m13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sea_sky_heart <sea_sky_heart@yahoo.com.cn> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From notify at yahoogroups.com  Sun Mar 21 04:29:43 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079872183.73.56346.w71@yahoogroups.com>


Hello,

This is an automated email message to let you know that
handballer78 <moviem@web.de> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Sun Mar 21 10:16:54 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079893014.91.85229.w50@yahoogroups.com>


Hello,

This is an automated email message to let you know that
craigbarker1 <craigbarker1@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon Mar 22 01:12:12 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079946732.207.44660.w17@yahoogroups.com>


Hello,

This is an automated email message to let you know that
ddavid42 <ddavid42@yahoo.fr> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon Mar 22 02:38:15 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079951895.77.83986.w84@yahoogroups.com>


Hello,

This is an automated email message to let you know that
xserty <xserty@yahoo.it> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From bob.donovan at ugsplm.com  Mon Mar 22 10:37:41 2004
From: bob.donovan at ugsplm.com (Donovan, Bob)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Parser performance
Message-ID: <BA38992C3BC5B543BEE63132C4B45AF7014536F7@uscimplm001.net.plm.eds.com>

Terence,

Are you saying we should see a performance improvement in antlr 3.0?
I looked on the website for info about when 3.0 is due out, but I didn't see anything. Any thoughts on a release date?

Thanks, Bob

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu]
Sent: Friday, March 19, 2004 8:25 PM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Parser performance


On Mar 19, 2004, at 2:27 PM, Donovan, Bob wrote:
> I just finished testing a new parser that I generated with ANTLR.
>
> The parser will parse the grammar, build and AST, and walk the AST to 
> generate some statements that I use to update a model.
>
> When I compare the performance of the antlr generated parser vs an 
> older parser that i wrote by hand, I find that my older parser was 
> twice as fast
>
> ANTLR: 44 seconds
> OLDER: 16 seconds
>
> I really expected the ANTLR parser to run just as fast or maybe even 
> faster. Not sure why it is slower.
> I optimized the ANTLR parser by putting the most common rules in front 
> of less common rules.

I think the lexer is to blame.  Should be able to double speed 
according to tests done by a friend...I just can't make them general 
enough fast enough for 2.7.3...my energy is devoted to 3.0 and making 
it fast as @&&*(@#%#($.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links



 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 10:55:33 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Parser performance
In-Reply-To: <BA38992C3BC5B543BEE63132C4B45AF7014536F7@uscimplm001.net.plm.eds.com>
References: <BA38992C3BC5B543BEE63132C4B45AF7014536F7@uscimplm001.net.plm.eds.com>
Message-ID: <7FA2B1B8-7C32-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 22, 2004, at 10:37 AM, Donovan, Bob wrote:

> Terence,
>
> Are you saying we should see a performance improvement in antlr 3.0?

Hi Bob,

Yes.  A huge weakness in ANTLR 2 is the speed of the lexers.  There are 
two main reasons: huge overhead and (I'm guessing) poor prediction 
speed between rules.

ANTLR 3.0 will derive its speed partially from an improved prediction 
algorithm that is not only faster but also much more powerful.  
Essentially, k-token lookahead can be seen as a DFA acyclic prediction 
machine of depth k.  Allow lookahead DFA cycles and all of a sudden you 
allow k to vary arbitrarily :)  It degenerates to fixed lookahead when 
necessary, but predicts which alt to match in one shot rather than in 
successive testing (if-then-else sequences) as it does now.  The other 
benefit is that only a single symbol of lookahead is required at any 
point, dramatically reducing the infrastructure from a window of tokens 
to essentially:

int tokenType;

or

int c;

for characters.

<snicker>

> I looked on the website for info about when 3.0 is due out, but I 
> didn't see anything. Any thoughts on a release date?

I hope to have the core parsing engine done this summer and then I must 
study the user-level semantics like attributes, tree construction 
etc...  Loring, Monty and I have discussed this stuff at length, but I 
must propose stuff, get it past you folks, and then implement it! ;)  
Don't expect 3.0 any time soon.  It may be useful to people in the Fall 
if they don't need much in the way of support such as trees.  I'm first 
focusing on the core analysis and code gen portions.

In its full glory, 3.0 won't be ready for quite a while, though I 
expect to release multiple completion levels on my way up to full 3.0 
functionality :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 11:00:46 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] antlr 2.7.3 released!
Message-ID: <39E29A00-7C33-11D8-9C42-000A95891192@cs.usfca.edu>

Howdy folks,

2.7.3 final version just went live!  Thanks to everyone that has 
submitted patches, intellectual effort, coding efforts, etc...! :)

http://www.antlr.org/download.html

Doc and javadoc have been updated on the site to reflect 2.7.3.  Let me 
know if there is any trouble with the distribution, but it should be 
ok.

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 11:40:16 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] another lookahead issue with TokenStreamRewriteEngine
In-Reply-To: <200402051829.02062.saintiss@arklinux.org>
References: <200402051829.02062.saintiss@arklinux.org>
Message-ID: <BED31C44-7C38-11D8-9C42-000A95891192@cs.usfca.edu>

On Feb 5, 2004, at 9:29 AM, SainTiss wrote:

Hi Hans,

> PS Terence: there are a couple of minor bugs in the 
> TokenStreamRewriteEngine
> as well:
> 1) In a couple of places, "programName" should be passed on to the
> addToSortedRewriteList, but isn't... (e.g. in public void 
> replace(String
> programName, Token from, Token to, String text))
> 2) A delete operation should be defined as replace with text "", not 
> text
> null, because the latter will put the characters n-u-l-l in the 
> string...

I think these are fixed in the version supplied with 2.7.3 that I just 
released! :)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 22 12:06:27 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Parser performance
In-Reply-To: <7FA2B1B8-7C32-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3nh03+p1v2@eGroups.com>

On 3.0:

Ter's DFA approach will also speed up the parsing engine; interestingly enough, it may also apply to tree walkers and lead to k>1 
support.  AST generation can be significantly optimized (ANTLR 2 does no optimization), and Ter is starting down a path that could 
support that--basically, what you would need is a tree generation (static) analysis pass coupled with some dynamic runtime 
"analysis" (build an tree constructor instruction stream, and edit it on the fly before generating code).  Stay tuned.

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 22, 2004, at 10:37 AM, Donovan, Bob wrote:
> 
> > Terence,
> >
> > Are you saying we should see a performance improvement in antlr 3.0?
> 
> Hi Bob,
> 
> Yes.  A huge weakness in ANTLR 2 is the speed of the lexers.  There are 
> two main reasons: huge overhead and (I'm guessing) poor prediction 
> speed between rules.
> 
> ANTLR 3.0 will derive its speed partially from an improved prediction 
> algorithm that is not only faster but also much more powerful.  
> Essentially, k-token lookahead can be seen as a DFA acyclic prediction 
> machine of depth k.  Allow lookahead DFA cycles and all of a sudden you 
> allow k to vary arbitrarily :)  It degenerates to fixed lookahead when 
> necessary, but predicts which alt to match in one shot rather than in 
> successive testing (if-then-else sequences) as it does now.  The other 
> benefit is that only a single symbol of lookahead is required at any 
> point, dramatically reducing the infrastructure from a window of tokens 
> to essentially:
> 
> int tokenType;
> 
> or
> 
> int c;
> 
> for characters.
> 
> <snicker>
> 
> > I looked on the website for info about when 3.0 is due out, but I 
> > didn't see anything. Any thoughts on a release date?
> 
> I hope to have the core parsing engine done this summer and then I must 
> study the user-level semantics like attributes, tree construction 
> etc...  Loring, Monty and I have discussed this stuff at length, but I 
> must propose stuff, get it past you folks, and then implement it! ;)  
> Don't expect 3.0 any time soon.  It may be useful to people in the Fall 
> if they don't need much in the way of support such as trees.  I'm first 
> focusing on the core analysis and code gen portions.
> 
> In its full glory, 3.0 won't be ready for quite a while, though I 
> expect to release multiple completion levels on my way up to full 3.0 
> functionality :)
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 12:15:55 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Parser performance
In-Reply-To: <c3nh03+p1v2@eGroups.com>
References: <c3nh03+p1v2@eGroups.com>
Message-ID: <B984BDC6-7C3D-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 22, 2004, at 12:06 PM, lgcraymer wrote:

> On 3.0:
>
> Ter's DFA approach will also speed up the parsing engine; 
> interestingly enough, it may also apply to tree walkers and lead to 
> k>1
> support.  AST generation can be significantly optimized (ANTLR 2 does 
> no optimization), and Ter is starting down a path that could
> support that--basically, what you would need is a tree generation 
> (static) analysis pass coupled with some dynamic runtime
> "analysis" (build an tree constructor instruction stream, and edit it 
> on the fly before generating code).  Stay tuned.

Let's be clear to everybody though that this is us thinking out loud as 
we do research.  No one should expect 3.0 to magically pop up in the 
near future; i.e., don't wait for 3.0 to use ANTLR.  Use 2.7.3 as 3.0 
is a nebulous future event.

note that I will provide a migration tool that auto-converts your 
grammars to 3.0 where possible. :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon Mar 22 13:03:29 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1079989409.121.90135.w11@yahoogroups.com>


Hello,

This is an automated email message to let you know that
mark_in_mtn_view <markl@glyphic.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jasonriz at yahoo.com  Mon Mar 22 13:24:21 2004
From: jasonriz at yahoo.com (Jason)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] antlr 2.7.3 released!
In-Reply-To: <39E29A00-7C33-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <20040322212421.53744.qmail@web12703.mail.yahoo.com>


--- Terence Parr <parrt@cs.usfca.edu> wrote:
> Howdy folks,
> 
> 2.7.3 final version just went live! 

Congratulations!  I have one quick comment and one
question.  I've noticed that the zip file has 200 more
files than the corresponding tar file.  The difference
seems to be that the zip file contains all of the
.class files while they are absent from the tar file. 
This isn't a problem and it may be by design but I
just thought I'd mention it.  The question:  are there
any release notes anywhere detailing what's new/fixed
in 2.7.3 versus 2.7.2.  I poked around a bit but I
couldn't find any.  Thanks to all the ANTLR developers
for all your hard work on this software.

-jason


__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 14:41:39 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] antlr 2.7.3 released!
In-Reply-To: <20040322212421.53744.qmail@web12703.mail.yahoo.com>
References: <20040322212421.53744.qmail@web12703.mail.yahoo.com>
Message-ID: <15A0481A-7C52-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 22, 2004, at 1:24 PM, Jason wrote:

>
> --- Terence Parr <parrt@cs.usfca.edu> wrote:
>> Howdy folks,
>>
>> 2.7.3 final version just went live!
>
> Congratulations!  I have one quick comment and one
> question.  I've noticed that the zip file has 200 more
> files than the corresponding tar file.  The difference
> seems to be that the zip file contains all of the
> .class files while they are absent from the tar file.

Oh, right. I knew I forgot something...i'll fix that.

> This isn't a problem and it may be by design but I
> just thought I'd mention it.  The question:  are there
> any release notes anywhere detailing what's new/fixed
> in 2.7.3 versus 2.7.2.  I poked around a bit but I
> couldn't find any.  Thanks to all the ANTLR developers
> for all your hard work on this software.

We've been rather loose with this, but here is the URL:

http://www.antlr.org/blog/CHANGES-2.7.3.txt

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon Mar 22 15:23:06 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] antlr 2.7.3 released!
In-Reply-To: <15A0481A-7C52-11D8-9C42-000A95891192@cs.usfca.edu>
References: <20040322212421.53744.qmail@web12703.mail.yahoo.com> <15A0481A-7C52-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <20040322232306.GA16473@cs.utwente.nl>

On Mon, Mar 22, 2004 at 02:41:39PM -0800, Terence Parr wrote:
> http://www.antlr.org/blog/CHANGES-2.7.3.txt

- Added custom AST which supports line numbers to the C++ treewalk example.
- Fixed antlr crash on empty commandline argument.
- HP-UX fixes (thanks to Jerry Dy)
- More fixes for cygwin/mingw. Untested DLL target for lib. (probably has
name mangling issues if it builds at all)

Think these got integrated in 2.7.3 too...

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  "You know how to use that thing?" [pointing to the sword]
  "Sure.. The pointy end goes into the other guy."
  --- The Mask of Zorro



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon Mar 22 17:17:18 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] antlr 2.7.3 released!
In-Reply-To: <20040322232306.GA16473@cs.utwente.nl>
References: <20040322212421.53744.qmail@web12703.mail.yahoo.com> <15A0481A-7C52-11D8-9C42-000A95891192@cs.usfca.edu> <20040322232306.GA16473@cs.utwente.nl>
Message-ID: <D3A92612-7C67-11D8-9C42-000A95891192@cs.usfca.edu>


On Mar 22, 2004, at 3:23 PM, Ric Klaren wrote:

> On Mon, Mar 22, 2004 at 02:41:39PM -0800, Terence Parr wrote:
>> http://www.antlr.org/blog/CHANGES-2.7.3.txt
>
> - Added custom AST which supports line numbers to the C++ treewalk 
> example.
> - Fixed antlr crash on empty commandline argument.
> - HP-UX fixes (thanks to Jerry Dy)
> - More fixes for cygwin/mingw. Untested DLL target for lib. (probably 
> has
> name mangling issues if it builds at all)

Updated doc on site.
Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon Mar 22 17:22:48 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Parser performance
In-Reply-To: <B984BDC6-7C3D-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3o3h8+g4nm@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 22, 2004, at 12:06 PM, lgcraymer wrote:
> 
> > On 3.0:
> >
> > Ter's DFA approach will also speed up the parsing engine; 
> > interestingly enough, it may also apply to tree walkers and lead to 
> > k>1
> > support.  AST generation can be significantly optimized (ANTLR 2 does 
> > no optimization), and Ter is starting down a path that could
> > support that--basically, what you would need is a tree generation 
> > (static) analysis pass coupled with some dynamic runtime
> > "analysis" (build an tree constructor instruction stream, and edit it 
> > on the fly before generating code).  Stay tuned.
> 
> Let's be clear to everybody though that this is us thinking out loud as 
> we do research.  No one should expect 3.0 to magically pop up in the 
> near future; i.e., don't wait for 3.0 to use ANTLR.  Use 2.7.3 as 3.0 
> is a nebulous future event.

Perhaps I should have added the caveat.  Ter and I just submitted a seed proposal to NASA--even if ANTLR 3 can be released this 
year, we still can easily lay out a three year research plan that includes significant enhancements.

> note that I will provide a migration tool that auto-converts your 
> grammars to 3.0 where possible. :)

Note that that's a big step up over 2.0:  auto-converting 1.33 grammars that used predicate hoisting, dlg lexers, and so on would have 
been a big task.  Of course, "where possible" is probably not true for tree construction actions, so there will still be some 
disconnects.

--Loring

> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Mon Mar 22 18:01:39 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: antlr 2.7.3 released!
In-Reply-To: <15A0481A-7C52-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3o5q3+ms6u@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 22, 2004, at 1:24 PM, Jason wrote:

> > This isn't a problem and it may be by design but I
> > just thought I'd mention it.  The question:  are there
> > any release notes anywhere detailing what's new/fixed
> > in 2.7.3 versus 2.7.2.  I poked around a bit but I
> > couldn't find any.  Thanks to all the ANTLR developers
> > for all your hard work on this software.
> 
> We've been rather loose with this, but here is the URL:
> 
> http://www.antlr.org/blog/CHANGES-2.7.3.txt

Changes for C# support (by Anthony Oguntimehin, Kunle Odutola &
Micheal Jordan):

-- Added in-built support for reusing instances of Lexers, Parsers and
TreeParsers.
   See the following methods:
   a) resetState(Stream s)          in the CharScanner class (for Lexers)
      resetState(TextReader tr)     in the CharScanner class (for Lexers)
      
   b) resetState()                  in the Parser class
   c) resetState()                  in the TreeParser class
   
   The related XXXSharedInputState classes have reset() methods that
do some of
   the heavy lifting.
   
   NOTE: If using TokenStreamSelector, call resetText() on the other
lexers
         after calling resetState() on one of them.

-- ***BREAKING***: Made the following changes after Rodrigo B. de
Oliveira [rodrigobamboo@hotmail.com]
   submitted a patch and prodded Micheal about it. Repeatedly ;-).
Ouch...erm...thanks Rodrigo!.
   a) TokenStreamSelector.cs: nextToken() now has a specific catch
clause for TokenStreamRetryException
   b) Token.cs: setFilename() and getFilename(string) are now virtual
   c) CharScanner.cs: makeToken(int) now calls setFilename(string) on
newly created tokens
   
-- ***BREAKING***: CharScanner.nextToken() is now a virtual method so,
CSharpCodeGenerator.java 
   now generates nextToken() in generated lexers as an overridden method.

-- Added a fix for a reported issue with un-compileable generated lexers

-- Added the TokenStreamRewrite framework to the C# runtime library
   [See http://www.antlr.org/article/rewrite.engine/index.tml]

-- Added the ParseTreeDebugParser framework to the C# runtime library
   [See http://www.antlr.org/article/parse.trees/index.tml]
   
-- Added two new C# example projects to illustrate the two frameworks
above:
   a) TokenStreamRewrite - demonstrates use of TokenStreamRewrite
framework
   b) ParseTreeDebug - demonstrates use of the ParseTreeDebugParser
framework

-- C# VS.NET solution and project files & names have been updated to 2.7.3

-- Incorporated latest fixes for the java grammar into the C# example
project

-- ***BREAKING***: Method ToStringTree() of antlr.BaseAST now behaves
correctly. It's output 
   is the same as the Java and C++ versions. The current output that
looks like a tree graphically 
   has been moved to a new method ToTree().

-- The Nant build file should not be looking for AssemblyInfo.cs in
the base directory. 
   It's in the 'src' sub-directory. Fixed.

Cheers,

ANTLR/C# guys




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From warkda at yahoo.com  Mon Mar 22 19:11:57 2004
From: warkda at yahoo.com (warkda rrior 1)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] LaTeX grammar
Message-ID: <c3o9tt+dmo9@eGroups.com>

Does anyone know of a grammar for LaTeX? I am mostly interested in the
syntactic structure, don't care about semantics...

Thanks,

warkda



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bob at werken.com  Mon Mar 22 19:21:42 2004
From: bob at werken.com (bob mcwhirter)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] LaTeX grammar
In-Reply-To: <c3o9tt+dmo9@eGroups.com>
References: <c3o9tt+dmo9@eGroups.com>
Message-ID: <Pine.LNX.4.58.0403222220520.9643@moth.exeter.org>

On Tue, 23 Mar 2004, warkda rrior 1 wrote:

> Does anyone know of a grammar for LaTeX? I am mostly interested in the
> syntactic structure, don't care about semantics...

I don't know if it's something you can readily define with a grammar.

There are commands that change the syntax (ie, \makeatother and \makeatletter)
along with other things that can alter the parse all the way down to the
lexer, if I recall.

	-bob


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jan.oetting at gmx.de  Tue Mar 23 04:51:44 2004
From: jan.oetting at gmx.de (Jan Oetting)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Error token
References: <1079754073.462.75932.m12@yahoogroups.com>
Message-ID: <621.1080046304@www17.gmx.net>

Hello,
I'd like to use satc (Syntax Aware Text Component) With ANTLR.
satc scannes my grammar every few seconds and if it recognise a token,
it displays it colored (great feature).
But if a token is omitted, the text is displayed white (on white
background).
So even if I am in an error state for example ("Hello World) without closing
"
I need to get a token back.
So I need in my Lexer a possibility to define a token, that takes every text
if it is not 
reached by another rule.
How can I do this?
If I 
1) define REST : (.)* I have thousands of NONDETERMINISMUS and no guaranties
that this rule
ist machted second
2) catch the RecognitionException with a Tokenstramfilter, SATC cannot
operate on the filter, because
it needs a Charscanner to operate on...
3)...another idea?

Thanks in advance
Jan Oetting

-- 
+++ NEU bei GMX und erstmalig in Deutschland: T?V-gepr?fter Virenschutz +++
100% Virenerkennung nach Wildlist. Infos: http://www.gmx.net/virenschutz



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jimirwin at holoscenes.com  Tue Mar 23 06:18:58 2004
From: jimirwin at holoscenes.com (Jim Irwin)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: antlr 2.7.3 released!
In-Reply-To: <39E29A00-7C33-11D8-9C42-000A95891192@cs.usfca.edu>
Message-ID: <c3ph0i+kfml@eGroups.com>

--- Terence Parr <parrt@c...> wrote:
> 2.7.3 final version just went live!  [...] Let me 
> know if there is any trouble with the distribution...

There was a C# bug previously reported that doesn't appear to have 
been fixed in this release.  The C# runtime ignores the 
caseSensitiveLiterals option.

The earlier report suggested one fix.  Here is another simple fix 
that works:

antlr\CharScanner.cs:
public virtual int testLiteralsTable(int ttype)
{
   try
   {
      int literalsIndex;
      if (caseSensitiveLiterals)
         literalsIndex = (int) literals[text.ToString()];
      else
         literalsIndex = (int) literals[text.ToString().ToLower()];
      ttype = literalsIndex;
      return ttype;
   }
   catch
   {
      return ttype;
   }  		
}




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From gudnabrsam at yahoo.com  Tue Mar 23 06:48:21 2004
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Error token
In-Reply-To: <621.1080046304@www17.gmx.net>
Message-ID: <20040323144821.53021.qmail@web20422.mail.yahoo.com>

--- Jan Oetting <jan.oetting@gmx.de> wrote:
> Hello,
> I'd like to use satc (Syntax Aware Text Component)
> With ANTLR.
> satc scannes my grammar every few seconds and if it
> recognise a token,
> it displays it colored (great feature).
> But if a token is omitted, the text is displayed
> white (on white
> background).

Is it displayed white-on-white, or not at all?  IIRC
SATC wants to use the last OK parse, so assuming there
was one, and your text IS being displayed
white-on-white, then you probably just need to modify
a setting somewhere to get black-on-white (or
whatever) for text added since the last valid parse.

This is pure speculation, however...

-Matt

__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bogdan_mt at yahoo.com  Tue Mar 23 08:13:05 2004
From: bogdan_mt at yahoo.com (Bogdan Mitu)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Error token
Message-ID: <20040323161305.83630.qmail@web60303.mail.yahoo.com>

Hello Jan,

I wrote the SATC syntax highlight some time ago. ANTLR was not designed for
incomplete source file, as they are while under edit, and generated lexers
are unforgivening with tokens that they don't recognise (I mean, they are
not created at all). 

What I did was to patch the ANTLR JavaCodeGenerator. I attach the patch (it
was ANTLR 2.7.2a1 at that time). My changes are marked with //b>> and //b<<.

If you are reluctant to modify ANTLR files, you can obtain the same result
by post-processing the lexers generated by ANTLR. Or maybe someone can come
up with a simpler idea.

If you use the version from the Yahoo ANTLR group, you might want to try
also a newer version, available on www.antlr.org in the shared files. This
one features an incremental parser for Java (keeps the AST updated while the
source file is edited). 

Cheers,
Bogdan


--- In antlr-interest@yahoogroups.com, "Jan Oetting" <jan.oetting@g...>
wrote:
> Hello,
> I'd like to use satc (Syntax Aware Text Component) With ANTLR.
> satc scannes my grammar every few seconds and if it recognise a token,
> it displays it colored (great feature).
> But if a token is omitted, the text is displayed white (on white
> background).
> So even if I am in an error state for example ("Hello World) without
closing
> "
> I need to get a token back.
> So I need in my Lexer a possibility to define a token, that takes every
text
> if it is not 
> reached by another rule.
> How can I do this?
> If I 
> 1) define REST : (.)* I have thousands of NONDETERMINISMUS and no
guaranties
> that this rule
> ist machted second
> 2) catch the RecognitionException with a Tokenstramfilter, SATC cannot
> operate on the filter, because
> it needs a Charscanner to operate on...
> 3)...another idea?
> 
> Thanks in advance
> Jan Oetting
> 
> -- 
> +++ NEU bei GMX und erstmalig in Deutschland: TÜV-geprüfter Virenschutz
+++
> 100% Virenerkennung nach Wildlist. Infos: http://www.gmx.net/virenschutz

__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html

 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: incomplete_patch.zip
Type: application/zip
Size: 53146 bytes
Desc: incomplete_patch.zip
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040323/b3c4a6d6/incomplete_patch.zip
From gudnabrsam at yahoo.com  Tue Mar 23 08:43:35 2004
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Error token
In-Reply-To: <20040323161305.83630.qmail@web60303.mail.yahoo.com>
Message-ID: <20040323164335.3226.qmail@web20414.mail.yahoo.com>

--- Bogdan Mitu <bogdan_mt@yahoo.com> wrote:
> If you are reluctant to modify ANTLR files, you can
> obtain the same result
> by post-processing the lexers generated by ANTLR. Or
> maybe someone can come
> up with a simpler idea.

Does this mean you could just define a TokenStream
that defers to a Lexer and returns something generic
under error conditions?  Wouldn't this be more
portable across ANTLR versions?

-Matt

__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue Mar 23 11:22:36 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: New antlr-interest member
Message-ID: <1080069756.100.84389.w3@yahoogroups.com>


Hello,

This is an automated email message to let you know that
earlsinclair8888 <earlsinclair8888@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From cesar at ciencias.unam.mx  Tue Mar 23 12:44:45 2004
From: cesar at ciencias.unam.mx (=?ISO-8859-1?Q?C=E9sar_L=F3pez_Natar=E9n?=)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: !, for non contributing elements of the
	rule's text.
In-Reply-To: <c332ka+9ckq@eGroups.com>
References: <c332ka+9ckq@eGroups.com>
Message-ID: <1080074684.2851.18.camel@rats>

On Sun, 2004-03-14 at 19:58, micheal_jor wrote:

> Hiya C?sar,
> 

Hello!


> PPS  If you have tested build scripts for ANTLR/C# on Mono, I'd be
> happy to incorporate them in the standard distro.

Here it's a makefile for building the C# code generation and runtime
support.

It must go at: antlr-2.7.3/lib/csharp/src

antlr.runtime.dll and antlr.runtime.dll.so are the good ones which have
to be copied to the class lib path for .net assemblies.

Hope it helps.

Greetings.

-- 
C?sar


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: makefile.mono
Type: text/x-makefile
Size: 4253 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040323/2da8b184/makefile.bin
From open.zone at virgin.net  Tue Mar 23 10:14:18 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: antlr 2.7.3 released!
In-Reply-To: <c3ph0i+kfml@eGroups.com>
Message-ID: <c3pupq+8bag@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Jim Irwin" <jimirwin@h...> wrote:
> --- Terence Parr <parrt@c...> wrote:
> > 2.7.3 final version just went live!  [...] Let me 
> > know if there is any trouble with the distribution...
> 
> There was a C# bug previously reported that doesn't appear to have 
> been fixed in this release.  The C# runtime ignores the 
> caseSensitiveLiterals option.

How are you testing this?. A repro-grammar would be appreciated.

> The earlier report suggested one fix.  Here is another simple fix 
> that works:
> 
> antlr\CharScanner.cs:
> public virtual int testLiteralsTable(int ttype)
> {
>    try
>    {
>       int literalsIndex;
>       if (caseSensitiveLiterals)
>          literalsIndex = (int) literals[text.ToString()];
>       else
>          literalsIndex = (int) literals[text.ToString().ToLower()];
>       ttype = literalsIndex;
>       return ttype;
>    }
>    catch
>    {
>       return ttype;
>    }  		
> }

The library already has a fix built-in. I'd be very helpful to have a
grammar that triggers the incorrect behaviour that you are reporting.

Cheers,

Micheal




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ddavid42 at yahoo.fr  Mon Mar 22 10:26:46 2004
From: ddavid42 at yahoo.fr (David)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] ASTFrame
Message-ID: <c3nb56+6hu4@eGroups.com>

Hi all,

I'm curently trying to learn ANTLR. I'm using the documentation made
by Ashley J.S Mills and when I tried to debug the AST tree throught a
AST Frame I'm getting the following message:

Exception in thread "main" java.lang.NoClassDefFoundError:
antlr/debug/misc/ASTFrame$MyTreeSelectionListener
        at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
        at Main.main(Main.java:17)

Instead of the nice figure 5 on page 16 of the pdf document. I tried
with some other simpler example and I'm getting the same answer.

For information I'm using the last version of antlr available on the
web which is antlr-2.7.3rc3.

Does anyone know how to solve this problem ?

David.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From earlsinclair8888 at yahoo.com  Tue Mar 23 11:25:40 2004
From: earlsinclair8888 at yahoo.com (earlsinclair8888)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] exception unexpected char in simple parser
Message-ID: <c3q2vl+n4l3@eGroups.com>

Hello,

I am encountering a problem while constructing a simple test parser, 
for an ?gSQL like?h language. I would appreciate any help
that I could 
get solving this. I created the parser/lexer using antlr.tool and 
used a test file for input which looks like this:

select field1, field2, field3
from table1;     

The trace output appears to being what I would expect the parser to 
be doing, except that once it reaches eof it produces the following 
message:

exception: E:\SQLJava\Test1.txt:6:1: unexpected char: 0x?F


The last line of input is line 5. I assume this is an EOF problem on 
my part (?). Being an amateur at this, perhaps someone can point me 
in the right direction.

Thanks for any help.

John Parke



Pertinent Info:



class SqlParser extends Parser;

options
{
    exportVocab                = Sql;
    k                          = 2;
    buildAST                   = false;
    defaultErrorHandler        = false;
}



start_rule:        select_command (SEMI)?  EOF! ;

select_command:    select_statement;

select_statement:
          ( OPEN_PAREN select_command CLOSE_PAREN ) => OPEN_PAREN 
select_command CLOSE_PAREN
          | select_expression ;


select_expression:
                select_clause from_clause (where_clause)?;
         
         
select_clause:  SELECT ( ALL )? select_list;
         
from_clause:    FROM table_name ;

where_clause:   WHERE where_condition;


select_list:    field_name_list
                | ASTERISK;

field_name_list:   field_name ( COMMA field_name )* ;


table_name:        IDENTIFIER;

where_condition:   condition ;


field_name:        IDENTIFIER ;

?c rest omitted?c



class SqlLexer extends Lexer;

options {
    exportVocab   = Sql;
    testLiterals  = false;
    k             = 2;
    caseSensitive = false;
    caseSensitiveLiterals = false;
    charVocabulary = '\u0000'..'\uFFFE';
}

tokens
{
 SELECT   =   "select";
 ALL      =   "all";
 FROM     =   "from";
 WHERE    =   "where";
 OR       =   "or";
 AND      =   "and";
 NOT      =   "not";
}


IDENTIFIER options {testLiterals=true;} :

           'a' .. 'z' ( 'a' .. 'z' | '0' .. '9' | '_' | '$' )* ;


// quoted_string 
//    ::= "'" { "any_character" } "'" 

QUOTED_STRING:  '\'' ( ~'\'' )* '\''  ;


SEMI:        ';' ;
DOT:         '.' ;
COMMA:       ',' ;
ASTERISK:    '*' ;
AT_SIGN:     '@' ;

OPEN_PAREN:  '(';
CLOSE_PAREN: ')';


EQ:          '=' ;
LE:          "<="; 
NOT_EQ:      "!=" | "^=";
GT:          '>';
GE:          ">=";

QUOTE: '\'';

NUMBER:        (SIGN UINTEGER)                 => INTEGER
              |(UINTEGER  '.' UINTEGER)        => DECIMAL
              |(SIGN UINTEGER '.' UINTEGER)    => DECIMAL
              |('.' (DIGIT)+ )                 => DECIMAL
              | UINTEGER;                      


HEXLITERAL:   'x' QUOTE (HEXDIGIT HEXDIGIT)+ QUOTE; 
    
protected
DIGIT:        '0'..'9';

protected
HEXDIGIT:     (DIGIT | 'a'..'f' ); 

protected                 
INTEGER:;  

protected
UINTEGER:     (DIGIT)+ ;     

PLUS:         '+' ;
MINUS:        '-' ;

protected
SIGN:         PLUS | MINUS;

protected
DECIMAL:;

// Whitespace -- ignored
WS:         ( ' ' | '\t' | '\f'       
        |   (   "\r\n"  |   '\r' |   '\n' ) { newline(); }  ) { 
_ttype = Token.SKIP; } ;
   

ML_COMMENT: "/*" (options { generateAmbigWarnings=false;} :
              { LA(2)!='/' }? '*'
              | ~('*') )*
              "*/"
             {$setType(Token.SKIP);} ;


Execution Output with Trace

Parsing: E:\SQLJava\Test1.txt
 > start_rule;  > lexer mIDENTIFIER; c==s
 < lexer mIDENTIFIER; c== 
LA(1)==select,  > lexer mWS; c== 
 < lexer mWS; c==f
 > lexer mIDENTIFIER; c==f
 < lexer mIDENTIFIER; c==,
LA(2)==field1
  > select_command; LA(1)==select, LA(2)==field1
   > select_statement; LA(1)==select, LA(2)==field1
    > select_expression; LA(1)==select, LA(2)==field1
     > select_clause; LA(1)==select, LA(2)==field1
      > select_list; LA(1)==field1,  > lexer mCOMMA; c==,
 < lexer mCOMMA; c== 
LA(2)==,
       > field_name_list; LA(1)==field1, LA(2)==,
        > field_name; LA(1)==field1, LA(2)==,
        < field_name; LA(1)==,,  > lexer mWS; c== 
 < lexer mWS; c==f
 > lexer mIDENTIFIER; c==f
 < lexer mIDENTIFIER; c==,
LA(2)==field2
        > field_name; LA(1)==field2,  > lexer mCOMMA; c==,
 < lexer mCOMMA; c== 
LA(2)==,
        < field_name; LA(1)==,,  > lexer mWS; c== 
 < lexer mWS; c==f
 > lexer mIDENTIFIER; c==f
 < lexer mIDENTIFIER; c==

LA(2)==field3
        > field_name; LA(1)==field3,  > lexer mWS; c==

 < lexer mWS; c==f
 > lexer mIDENTIFIER; c==f
 < lexer mIDENTIFIER; c== 
LA(2)==from
        < field_name; LA(1)==from,  > lexer mWS; c== 
 < lexer mWS; c==t
 > lexer mIDENTIFIER; c==t
 < lexer mIDENTIFIER; c==;
LA(2)==table1
       < field_name_list; LA(1)==from, LA(2)==table1
      < select_list; LA(1)==from, LA(2)==table1
     < select_clause; LA(1)==from, LA(2)==table1
     > from_clause; LA(1)==from, LA(2)==table1
      > table_name; LA(1)==table1,  > lexer mSEMI; c==;
 < lexer mSEMI; c== 
LA(2)==;
      < table_name; LA(1)==;,  > lexer mWS; c== 
 < lexer mWS; c== 
 > lexer mWS; c== 
 
 < from_clause; LA(1)==;,  > lexer mNUMBER; c==?
  > lexer mSIGN; c==?

  > lexer mSIGN; c==?
  < lexer mSIGN; c==?
 < lexer mNUMBER; c==?
      < select_expression; LA(1)==;,  > lexer mNUMBER; c==?
  > lexer mSIGN; c==?
  < lexer mSIGN; c==?

 < lexer mNUMBER; c==?
      < select_statement; LA(1)==;,  > lexer mNUMBER; c==?
  > lexer mSIGN; c==?

 < lexer mNUMBER; c==?
      < select_command; LA(1)==;,  > lexer mNUMBER; c==?
  > lexer mSIGN; c==?

 < lexer mNUMBER; c==?
      < start_rule; LA(1)==;,  > lexer mNUMBER; c==?
  > lexer mSIGN; c==?
  < lexer mSIGN; c==?

 < lexer mNUMBER; c==?
exception: E:\SQLJava\Test1.txt:6:1: unexpected char: 0x?F





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From maswann at verizon.net  Tue Mar 23 20:32:51 2004
From: maswann at verizon.net (rigpa_man)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] New Win32 binary for version 2.7.3
Message-ID: <c3r31j+8kcl@eGroups.com>

Hello gentlemen (you too Ter),

I compiled a Win32 binary for version 2.7.3. Seems to work fine. 
Anybody want it? Where do I put it? (no rude answers) Is there a 
repository for things like this. (Can you tell that I'm new to this 
forum?)

Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From maswann at verizon.net  Tue Mar 23 20:43:33 2004
From: maswann at verizon.net (rigpa_man)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3nb56+6hu4@eGroups.com>
Message-ID: <c3r3ll+7li1@eGroups.com>

Welcom David,

I had the same problem and finally figured out that the CLASSPATH 
wasn't set right. Don't forget to add a reference to your current 
directory as a single dot ('.') in CLASSPATH. If you don't want to 
touch CLASSPATH, you can do it on the java command line. I think you 
add "-d ." to the command line. I'm not a java programmer so this was 
a tough one for me.

Good luck,

Mark


--- In antlr-interest@yahoogroups.com, "David" <ddavid42@y...> wrote:
> Hi all,
> 
> I'm curently trying to learn ANTLR. I'm using the documentation made
> by Ashley J.S Mills and when I tried to debug the AST tree throught 
a
> AST Frame I'm getting the following message:
> 
> Exception in thread "main" java.lang.NoClassDefFoundError:
> antlr/debug/misc/ASTFrame$MyTreeSelectionListener
>         at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
>         at Main.main(Main.java:17)
> 
> Instead of the nice figure 5 on page 16 of the pdf document. I tried
> with some other simpler example and I'm getting the same answer.
> 
> For information I'm using the last version of antlr available on the
> web which is antlr-2.7.3rc3.
> 
> Does anyone know how to solve this problem ?
> 
> David.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ddavid42 at yahoo.fr  Wed Mar 24 00:01:55 2004
From: ddavid42 at yahoo.fr (David)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3r3ll+7li1@eGroups.com>
Message-ID: <c3rf9j+vbj2@eGroups.com>

Thank you, I tried both your advice but it is still not working. My
CLASSPATH is set to :
CLASSPATH=.:/home/ddefour/tmp/antlr/cgram/examples:/home/ddefour/tmp/antlr/cgram/grammars:/usr/share/java/antlr.jar:/usr/share/java:/usr/local/java/j2sdk1.4.1_05/lib

The fact that there is a '$' sign within the name of the classe
(ASTFrame$MyTreeSelectionListener) seem very surprising for me. Is it
not the source of the problem ? because in Linux shell this sign is
very specific. 

David.

--- In antlr-interest@yahoogroups.com, "rigpa_man" <maswann@v...> wrote:
> Welcom David,
> 
> I had the same problem and finally figured out that the CLASSPATH 
> wasn't set right. Don't forget to add a reference to your current 
> directory as a single dot ('.') in CLASSPATH. If you don't want to 
> touch CLASSPATH, you can do it on the java command line. I think you 
> add "-d ." to the command line. I'm not a java programmer so this was 
> a tough one for me.
> 
> Good luck,
> 
> Mark
> 
> 
> --- In antlr-interest@yahoogroups.com, "David" <ddavid42@y...> wrote:
> > Hi all,
> > 
> > I'm curently trying to learn ANTLR. I'm using the documentation made
> > by Ashley J.S Mills and when I tried to debug the AST tree throught 
> a
> > AST Frame I'm getting the following message:
> > 
> > Exception in thread "main" java.lang.NoClassDefFoundError:
> > antlr/debug/misc/ASTFrame$MyTreeSelectionListener
> >         at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
> >         at Main.main(Main.java:17)
> > 
> > Instead of the nice figure 5 on page 16 of the pdf document. I tried
> > with some other simpler example and I'm getting the same answer.
> > 
> > For information I'm using the last version of antlr available on the
> > web which is antlr-2.7.3rc3.
> > 
> > Does anyone know how to solve this problem ?
> > 
> > David.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jan.oetting at gmx.de  Wed Mar 24 00:04:51 2004
From: jan.oetting at gmx.de (Jan Oetting)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Error Token
References: <1080105126.561.97056.m12@yahoogroups.com>
Message-ID: <12902.1080115491@www12.gmx.net>

Hi,
thanks for your answers, Matt and Bogdan

1. to be correct, Text is not displayed white on white, but not at all
2.Bodgan, my problem with unclosed Strings is even in your Java grammar
example
"Hello World (without " after World) is not displayed, isnt' it?
Is this okay for you?
3. Matt:using Tokenstreams instead
SATC uses the CharScanner class not a Tokenstream
So I can not provide a ErrorFilterTokenStream and present it to SATC (i
tried this :-(
Probably SATC needs the CharScanner because of the MultistateLexer ( I
guess)

4. my new idea
make a new class extending my Lexer and overwriting the nextToken method,
catching all Errors,
extracting the text from the error text and present this class to SATC.
Is this a good idea?

Greetings
Jan

-- 
+++ NEU bei GMX und erstmalig in Deutschland: T?V-gepr?fter Virenschutz +++
100% Virenerkennung nach Wildlist. Infos: http://www.gmx.net/virenschutz



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jan.oetting at gmx.de  Wed Mar 24 00:11:14 2004
From: jan.oetting at gmx.de (Jan Oetting)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] dangling else problem (maybe bug in ANTLr 2.7.2?)
References: <1080105126.561.97056.m12@yahoogroups.com>
Message-ID: <10932.1080115874@www12.gmx.net>

Hi,
i found a bug in my IF ELSE Statement and I am not sure  if this i my bug.


testing_statement 	: 
IF^ LPAREN! expression RPAREN!  ( command  | command_block)
(
// nondeterminism is okay  here
  options {
        warnWhenFollowAmbig=false;
    }
 :	ELSE!  ( command | command_block)
)?;

If I use correct statements, everything works fine.
But following script doesn't work

if (a==0)
   statement1;
   statement2;
else
  statement3;
statement4;

this script should be rejected.
But it it interpreted like
if (a==0)
  statement1;
statement2;


the else part is ignored.
No error is thrown.
Anybody knows why?

Greeting
Jan

-- 
+++ NEU bei GMX und erstmalig in Deutschland: T?V-gepr?fter Virenschutz +++
100% Virenerkennung nach Wildlist. Infos: http://www.gmx.net/virenschutz



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed Mar 24 02:18:56 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] ASTFrame
In-Reply-To: <c3rf9j+vbj2@eGroups.com> <c3nb56+6hu4@eGroups.com>
References: <c3r3ll+7li1@eGroups.com> <c3rf9j+vbj2@eGroups.com> <c3nb56+6hu4@eGroups.com>
Message-ID: <20040324101856.GA22862@cs.utwente.nl>

On Mon, Mar 22, 2004 at 06:26:46PM -0000, David wrote:
> Exception in thread "main" java.lang.NoClassDefFoundError:
> antlr/debug/misc/ASTFrame$MyTreeSelectionListener
>         at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
>         at Main.main(Main.java:17)
> 
> For information I'm using the last version of antlr available on the
> web which is antlr-2.7.3rc3.

FYI 2.7.3 is out since a few days.

On Wed, Mar 24, 2004 at 08:01:55AM -0000, David wrote:
> Thank you, I tried both your advice but it is still not working. My
> CLASSPATH is set to :
> CLASSPATH=.:/home/ddefour/tmp/antlr/cgram/examples:/home/ddefour/tmp/antlr/cgram/grammars:/usr/share/java/antlr.jar:/usr/share/java:/usr/local/java/j2sdk1.4.1_05/lib
> 
> The fact that there is a '$' sign within the name of the classe
> (ASTFrame$MyTreeSelectionListener) seem very surprising for me. Is it
> not the source of the problem ? because in Linux shell this sign is
> very specific. 

The '$' get generated by compiling certain java classes (was it with inner
classes or something) anyway it's normal for java. I could suspect that
this file might be missing from the antlr.jar. You can check with:

jar tvf antlr.jar

If it's missing you can try following the build instructions to build the
jar file anew. On unix the configure+make recipe should work as well.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 Time what is time - I wish I knew how to tell You why - It hurts to know -
          Aren't we machines - Time what is time - Unlock the door
               - And see the truth - Then time is time again
                From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed Mar 24 02:28:13 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] New Win32 binary for version 2.7.3
In-Reply-To: <c3r31j+8kcl@eGroups.com>
References: <c3r31j+8kcl@eGroups.com>
Message-ID: <20040324102813.GC22862@cs.utwente.nl>

Hi,

On Wed, Mar 24, 2004 at 04:32:51AM -0000, rigpa_man wrote:
> I compiled a Win32 binary for version 2.7.3. Seems to work fine. 
> Anybody want it? Where do I put it? (no rude answers) Is there a 
> repository for things like this. (Can you tell that I'm new to this 
> forum?)

Thanks! You could drop it in the File sharing section (left bottom corner
of the www.antlr.org page)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 Time what is time - I wish I knew how to tell You why - It hurts to know -
          Aren't we machines - Time what is time - Unlock the door
               - And see the truth - Then time is time again
                From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed Mar 24 03:33:57 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:34 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1080128037.140.58867.w2@yahoogroups.com>


Hello,

This is an automated email message to let you know that
dklao <danlao@mail.dannet.dk> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jimirwin at holoscenes.com  Wed Mar 24 04:50:36 2004
From: jimirwin at holoscenes.com (Jim Irwin)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: antlr 2.7.3 released!
In-Reply-To: <c3pupq+8bag@eGroups.com>
Message-ID: <c3s06s+dhdf@eGroups.com>

--- "micheal_jor" <open.zone@v...> wrote:
> 
> The library already has a fix built-in. I'd be very helpful to 
have a
> grammar that triggers the incorrect behaviour that you are 
reporting.
> 

OK, I see the problem.  I built the 2.7.3 C# library, but didn't re-
generate my parser files.  I simply referenced the new 2.7.3 
library, expecting that the fix would be incorporated in the library 
code, not the generated parser and lexer code.  Simply referencing 
the new library with my old parser project didn't fix anything.  
When I have time to build the 2.7.3 antlr class files, and then 
rebuild my lexer and parsers, I will see if the rebuilt parsers and 
lexer still exhibit the problem.  For now, I will stick with the 
2.7.2 that I have working.

Thanks,

Jim



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ddavid42 at yahoo.fr  Wed Mar 24 05:01:05 2004
From: ddavid42 at yahoo.fr (David)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <20040324101856.GA22862@cs.utwente.nl>
Message-ID: <c3s0qh+28b8@eGroups.com>

Yes the problem was coming from the fast that this class wasn't in the
archive (even by using the makefile automaticaly generated with
autoconf). This was due to the presence of a $ within the name of the
class. I solve this problem by adding manualy the class to the archive
 using the following command :

 jar uf antlr.jar
'antlr/debug/misc/ASTFrame$MyTreeSelectionListener.class'

jar uf antlr.jar 'antlr/debug/misc/ASTFrame$1.class'

David.


--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Mon, Mar 22, 2004 at 06:26:46PM -0000, David wrote:
> > Exception in thread "main" java.lang.NoClassDefFoundError:
> > antlr/debug/misc/ASTFrame$MyTreeSelectionListener
> >         at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
> >         at Main.main(Main.java:17)
> > 
> > For information I'm using the last version of antlr available on the
> > web which is antlr-2.7.3rc3.
> 
> FYI 2.7.3 is out since a few days.
> 
> On Wed, Mar 24, 2004 at 08:01:55AM -0000, David wrote:
> > Thank you, I tried both your advice but it is still not working. My
> > CLASSPATH is set to :
> >
CLASSPATH=.:/home/ddefour/tmp/antlr/cgram/examples:/home/ddefour/tmp/antlr/cgram/grammars:/usr/share/java/antlr.jar:/usr/share/java:/usr/local/java/j2sdk1.4.1_05/lib
> > 
> > The fact that there is a '$' sign within the name of the classe
> > (ASTFrame$MyTreeSelectionListener) seem very surprising for me. Is it
> > not the source of the problem ? because in Linux shell this sign is
> > very specific. 
> 
> The '$' get generated by compiling certain java classes (was it with
inner
> classes or something) anyway it's normal for java. I could suspect that
> this file might be missing from the antlr.jar. You can check with:
> 
> jar tvf antlr.jar
> 
> If it's missing you can try following the build instructions to
build the
> jar file anew. On unix the configure+make recipe should work as well.
> 
> Cheers,
> 
> Ric
> -- 
>
-----+++++*****************************************************+++++++++-------
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
>
-----+++++*****************************************************+++++++++-------
>  Time what is time - I wish I knew how to tell You why - It hurts to
know -
>           Aren't we machines - Time what is time - Unlock the door
>                - And see the truth - Then time is time again
>                 From: 'Time what is Time' by Blind Guardian



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From j.klaren at utwente.nl  Wed Mar 24 05:44:31 2004
From: j.klaren at utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3s0qh+28b8@eGroups.com>
References: <20040324101856.GA22862@cs.utwente.nl> <c3s0qh+28b8@eGroups.com>
Message-ID: <20040324134431.GG22862@cs.utwente.nl>

Hi,

On Wed, Mar 24, 2004 at 01:01:05PM -0000, David wrote:
> Yes the problem was coming from the fast that this class wasn't in the
> archive (even by using the makefile automaticaly generated with
> autoconf). 

Bah missed the quoting in one spot. This patch fixes that.

----snip----
--- /tmp/tmp.31527.0    2004-03-24 14:44:03.000000000 +0100
+++ /home/fmg/klaren/Antlr/code/org.antlr/main/main/scripts/Rules.make  2004-03-24 14:36:00.000000000 +0100
@@ -140,7 +140,7 @@ unexport obj_dir_arg javac_paths
        @ echo "==========================================="
        @ echo "Making $(@)..."
        @ rm -f $@
-       @ $(JAR) cf $@ $^
+       @ $(JAR) cvf $@ $(subst $$,\$$,$^)
        @ echo "==========================================="
 
 #
----snip----

Terence, any chance to sneak this fix into the tarball for 2.7.3 ? The jars
in the 2.7.3 zip and tar.gz are ok with respect to the missing AST$Framexxx
stuff.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Quidquid latine dictum sit, altum viditur.
                 (Whatever is said in Latin sounds profound.)

From klaren at cs.utwente.nl  Wed Mar 24 05:44:31 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3s0qh+28b8@eGroups.com>
References: <20040324101856.GA22862@cs.utwente.nl> <c3s0qh+28b8@eGroups.com>
Message-ID: <20040324134431.GG22862@cs.utwente.nl>

Hi,

On Wed, Mar 24, 2004 at 01:01:05PM -0000, David wrote:
> Yes the problem was coming from the fast that this class wasn't in the
> archive (even by using the makefile automaticaly generated with
> autoconf). 

Bah missed the quoting in one spot. This patch fixes that.

----snip----
--- /tmp/tmp.31527.0    2004-03-24 14:44:03.000000000 +0100
+++ /home/fmg/klaren/Antlr/code/org.antlr/main/main/scripts/Rules.make  2004-03-24 14:36:00.000000000 +0100
@@ -140,7 +140,7 @@ unexport obj_dir_arg javac_paths
        @ echo "==========================================="
        @ echo "Making $(@)..."
        @ rm -f $@
-       @ $(JAR) cf $@ $^
+       @ $(JAR) cvf $@ $(subst $$,\$$,$^)
        @ echo "==========================================="
 
 #
----snip----

Terence, any chance to sneak this fix into the tarball for 2.7.3 ? The jars
in the 2.7.3 zip and tar.gz are ok with respect to the missing AST$Framexxx
stuff.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
  Quidquid latine dictum sit, altum viditur.
                 (Whatever is said in Latin sounds profound.)



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From gudnabrsam at yahoo.com  Wed Mar 24 06:57:08 2004
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Error Token
In-Reply-To: <12902.1080115491@www12.gmx.net>
Message-ID: <20040324145708.72598.qmail@web20420.mail.yahoo.com>

--- Jan Oetting <jan.oetting@gmx.de> wrote:
> 3. Matt:using Tokenstreams instead
> SATC uses the CharScanner class not a Tokenstream
> So I can not provide a ErrorFilterTokenStream and
> present it to SATC (i
> tried this :-(
> Probably SATC needs the CharScanner because of the
> MultistateLexer ( I
> guess)

Bogdan, can you verify why SATC's API doesn't use a
generic TokenStream?  (possibly it wasn't available
when SATC was created?)

> 
> 4. my new idea
> make a new class extending my Lexer and overwriting
> the nextToken method,
> catching all Errors,
> extracting the text from the error text and present
> this class to SATC.
> Is this a good idea?
> 

Sounds similar to what I was saying before...

seems like building that into SATC might be the
ticket, though... default colorization for tokens that
have not yet shown their "true colors".

-Matt

__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bogdan_mt at yahoo.com  Wed Mar 24 07:59:34 2004
From: bogdan_mt at yahoo.com (bogdan_mt)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: Error Token
In-Reply-To: <12902.1080115491@www12.gmx.net>
Message-ID: <c3sb96+b6aj@eGroups.com>

Hi Jan,

If you're concerned only about strings, you can replace the string
rule with the following:

STRING_LITERAL
      : '"' (ESC|~('"'|'\\'|'\n'|'\r'))* ('"')?
      ;

This will accept unfinished strings as well. I checked it and it's
working.

The above solution will display unfinished strings with the same color
as finished ones. If you want to show unfinished strings as errors,
you can use the following:

UNFINISHED_STRING
      : '"' 
        (ESC|~('"'|'\\'|'\n'|'\r'))* 
        ('"' {$setType(STRING_LITERAL);} )?
      ;
 
In the later case, you also have to add STRING_LITERAL in the tokens
section of the lexer, and to edit the Java settings to color
UNFINISHED_STRING in a different way.

Note that you have to do something similar for CHAR.

Bogdan


--- In antlr-interest@yahoogroups.com, "Jan Oetting"
<jan.oetting@g...> wrote:
> Hi,
> thanks for your answers, Matt and Bogdan
> 
> 1. to be correct, Text is not displayed white on white, but not at all
> 2.Bodgan, my problem with unclosed Strings is even in your Java grammar
> example
> "Hello World (without " after World) is not displayed, isnt' it?
> Is this okay for you?
> 3. Matt:using Tokenstreams instead
> SATC uses the CharScanner class not a Tokenstream
> So I can not provide a ErrorFilterTokenStream and present it to SATC (i
> tried this :-(
> Probably SATC needs the CharScanner because of the MultistateLexer ( I
> guess)
> 
> 4. my new idea
> make a new class extending my Lexer and overwriting the nextToken
method,



> catching all Errors,
> extracting the text from the error text and present this class to SATC.
> Is this a good idea?
> 
> Greetings
> Jan
> 
> -- 
> +++ NEU bei GMX und erstmalig in Deutschland: T?V-gepr?fter
Virenschutz +++
> 100% Virenerkennung nach Wildlist. Infos: http://www.gmx.net/virenschutz



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 24 08:26:15 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3s0qh+28b8@eGroups.com>
References: <c3s0qh+28b8@eGroups.com>
Message-ID: <F8CEC0AE-7DAF-11D8-82EB-000393BB647E@cs.usfca.edu>


On Mar 24, 2004, at 5:01 AM, David wrote:

> Yes the problem was coming from the fast that this class wasn't in the
> archive (even by using the makefile automaticaly generated with
> autoconf). This was due to the presence of a $ within the name of the
> class. I solve this problem by adding manualy the class to the archive
>  using the following command :
>
>  jar uf antlr.jar
> 'antlr/debug/misc/ASTFrame$MyTreeSelectionListener.class'

Wow...that's weird.  I did a *.class everywhere.  Did the jar command  
not find anything with $ in it?  If so, I've got a problem with  
antlr.jar ;)

Ter

>
> jar uf antlr.jar 'antlr/debug/misc/ASTFrame$1.class'
>
> David.
>
>
> --- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
>> On Mon, Mar 22, 2004 at 06:26:46PM -0000, David wrote:
>>> Exception in thread "main" java.lang.NoClassDefFoundError:
>>> antlr/debug/misc/ASTFrame$MyTreeSelectionListener
>>>         at antlr.debug.misc.ASTFrame.<init>(ASTFrame.java:42)
>>>         at Main.main(Main.java:17)
>>>
>>> For information I'm using the last version of antlr available on the
>>> web which is antlr-2.7.3rc3.
>>
>> FYI 2.7.3 is out since a few days.
>>
>> On Wed, Mar 24, 2004 at 08:01:55AM -0000, David wrote:
>>> Thank you, I tried both your advice but it is still not working. My
>>> CLASSPATH is set to :
>>>
> CLASSPATH=.:/home/ddefour/tmp/antlr/cgram/examples:/home/ddefour/tmp/ 
> antlr/cgram/grammars:/usr/share/java/antlr.jar:/usr/share/java:/usr/ 
> local/java/j2sdk1.4.1_05/lib
>>>
>>> The fact that there is a '$' sign within the name of the classe
>>> (ASTFrame$MyTreeSelectionListener) seem very surprising for me. Is it
>>> not the source of the problem ? because in Linux shell this sign is
>>> very specific.
>>
>> The '$' get generated by compiling certain java classes (was it with
> inner
>> classes or something) anyway it's normal for java. I could suspect  
>> that
>> this file might be missing from the antlr.jar. You can check with:
>>
>> jar tvf antlr.jar
>>
>> If it's missing you can try following the build instructions to
> build the
>> jar file anew. On unix the configure+make recipe should work as well.
>>
>> Cheers,
>>
>> Ric
>> -- 
>>
> ----- 
> +++++*****************************************************+++++++++---- 
> ---
>>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893722  ----
>>
> ----- 
> +++++*****************************************************+++++++++---- 
> ---
>>  Time what is time - I wish I knew how to tell You why - It hurts to
> know -
>>           Aren't we machines - Time what is time - Unlock the door
>>                - And see the truth - Then time is time again
>>                 From: 'Time what is Time' by Blind Guardian
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 24 08:24:42 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] New Win32 binary for version 2.7.3
In-Reply-To: <20040324102813.GC22862@cs.utwente.nl>
References: <c3r31j+8kcl@eGroups.com> <20040324102813.GC22862@cs.utwente.nl>
Message-ID: <C1818738-7DAF-11D8-82EB-000393BB647E@cs.usfca.edu>


On Mar 24, 2004, at 2:28 AM, Ric Klaren wrote:

> Hi,
>
> On Wed, Mar 24, 2004 at 04:32:51AM -0000, rigpa_man wrote:
>> I compiled a Win32 binary for version 2.7.3. Seems to work fine.
>> Anybody want it? Where do I put it? (no rude answers) Is there a
>> repository for things like this. (Can you tell that I'm new to this
>> forum?)
>
> Thanks! You could drop it in the File sharing section (left bottom 
> corner
> of the www.antlr.org page)
Yeah, and I'll add to the downloads page.
Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 24 08:27:19 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <20040324134431.GG22862@cs.utwente.nl>
References: <20040324101856.GA22862@cs.utwente.nl> <c3s0qh+28b8@eGroups.com> <20040324134431.GG22862@cs.utwente.nl>
Message-ID: <1ED58E61-7DB0-11D8-82EB-000393BB647E@cs.usfca.edu>


On Mar 24, 2004, at 5:44 AM, Ric Klaren wrote:

> Hi,
>
> On Wed, Mar 24, 2004 at 01:01:05PM -0000, David wrote:
>> Yes the problem was coming from the fast that this class wasn't in the
>> archive (even by using the makefile automaticaly generated with
>> autoconf).
>
> Bah missed the quoting in one spot. This patch fixes that.
>
> ----snip----
> --- /tmp/tmp.31527.0    2004-03-24 14:44:03.000000000 +0100
> +++ /home/fmg/klaren/Antlr/code/org.antlr/main/main/scripts/Rules.make 
>  2004-03-24 14:36:00.000000000 +0100
> @@ -140,7 +140,7 @@ unexport obj_dir_arg javac_paths
>         @ echo "==========================================="
>         @ echo "Making $(@)..."
>         @ rm -f $@
> -       @ $(JAR) cf $@ $^
> +       @ $(JAR) cvf $@ $(subst $$,\$$,$^)
>         @ echo "==========================================="
>
>  #
> ----snip----
>
> Terence, any chance to sneak this fix into the tarball for 2.7.3 ? The 
> jars
> in the 2.7.3 zip and tar.gz are ok with respect to the missing 
> AST$Framexxx
> stuff.

Hmm..what do people think?  Is it ok to update the makefile for a 
released version?

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Wed Mar 24 13:18:21 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <1ED58E61-7DB0-11D8-82EB-000393BB647E@cs.usfca.edu>
Message-ID: <c3stut+jguv@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On Mar 24, 2004, at 5:44 AM, Ric Klaren wrote:
> > Terence, any chance to sneak this fix into the tarball for 2.7.3 ?
The 
> > jars
> > in the 2.7.3 zip and tar.gz are ok with respect to the missing 
> > AST$Framexxx
> > stuff.
> 
> Hmm..what do people think?  Is it ok to update the makefile for a 
> released version?
> 
> Ter

The disciplined approach would be to withdraw the release, relabel it
2.7.3rc4 after the fix, and reopen the evaluation period for a week or so.

--Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 24 13:52:58 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] released TML (Terence's Markup Language)
Message-ID: <9D109732-7DDD-11D8-B9D2-000A95891192@cs.usfca.edu>

Howdy,

Just in case anybody would like to see the TML language I use for 
building course notes and so on, I've just posted to ANTLR.org:

http://www.antlr.org/TML/index.tml

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed Mar 24 13:57:41 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
In-Reply-To: <c3stut+jguv@eGroups.com>
References: <c3stut+jguv@eGroups.com>
Message-ID: <45C6DCD4-7DDE-11D8-B9D2-000A95891192@cs.usfca.edu>


On Mar 24, 2004, at 1:18 PM, lgcraymer wrote:
> The disciplined approach would be to withdraw the release, relabel it
> 2.7.3rc4 after the fix, and reopen the evaluation period for a week or 
> so.

I was mainly thinking that given that people have downloaded 2.7.3 
already and we don't want multiple versions floating around, we should 
immediately do a 2.7.4 ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Wed Mar 24 17:20:42 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: dangling else problem (maybe bug in ANTLr 2.7.2?)
In-Reply-To: <10932.1080115874@www12.gmx.net>
Message-ID: <c3tc5a+98ir@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Jan Oetting"
<jan.oetting@g...> wrote:
> If I use correct statements, everything works fine.
> But following script doesn't work
> 
> if (a==0)
>    statement1;
>    statement2;
> else
>   statement3;
> statement4;
> 
> this script should be rejected.
> But it it interpreted like
> if (a==0)
>   statement1;
> statement2;
> 
> 
> the else part is ignored.
> No error is thrown.
> Anybody knows why?

Just a guess: Does your top level production (program or script or some such) end with the  
token EOF?  Bet not....

Without the EOF token at the end of the top level rule, Antlr doesn't need to match the 
whole input.  So, it is happily matching the first part of the input and returning the tree for  
that.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu Mar 25 00:30:14 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:34 2004
Subject: [antlr-interest] Re: ASTFrame
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AE0D@lnml1.eca-international.local>

Why not do what a lot of people do - add a letter to indicate a bugfix
rev.

So release it as 2.7.3a, along with a note that it fixes a bug in the
makefile. Those who don't do "make", don't need it.

If you make it absolutely standard that a letter increment is only ever
a logged bugfix, then people can be confident that all variants of 2.7.3
are compatible (provided they work :-)

Cheers,
Wol 

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 24 March 2004 21:58
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Re: ASTFrame


On Mar 24, 2004, at 1:18 PM, lgcraymer wrote:
> The disciplined approach would be to withdraw the release, relabel it
> 2.7.3rc4 after the fix, and reopen the evaluation period for a week or

> so.

I was mainly thinking that given that people have downloaded 2.7.3 
already and we don't want multiple versions floating around, we should 
immediately do a 2.7.4 ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing




***********************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

***********************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 25 02:46:45 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080211605.91.59893.w81@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sven_kloppenburg <kloppenburg@informatik.tu-darmstadt.de> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From veflings at hotmail.com  Thu Mar 25 03:10:42 2004
From: veflings at hotmail.com (veflings)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Loosing hidden tokens
Message-ID: <c3ueni+95g9@eGroups.com>

I have downloaded the java grammar from the antlr site and have 
filtered the lexer through a TokenStreamHiddenTokenFilter.
The Lexer is set to use antlr.CommonHiddenStreamToken and the parser 
to antlr.CommonASTWithHiddenTokens.

Everything works fine exept in a rule where a node is duplicated with:

getASTFactory().dupTree(theNode)


The duplicated node has the hidden tokens set to null.
Why does this happen and what can I do to prevent it?

Thanks in advance

Henning




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 25 08:00:49 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080230449.216.20808.w15@yahoogroups.com>


Hello,

This is an automated email message to let you know that
mr_nur2000 <mr_nur2000@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Thu Mar 25 08:35:06 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080232506.124.6427.w13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
inveiglecon <inveiglecon@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From inveiglecon at yahoo.com  Thu Mar 25 08:36:31 2004
From: inveiglecon at yahoo.com (inveiglecon)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] C# or Java lexer-parser with CodeDOM or XML Style Information
Message-ID: <c3v1qf+2jhp@eGroups.com>

Hi,

Does anybody have any files that retrieves XML Info or CodeDom style 
info from C# or Java Files

Any help will be greatly appreciated

Thanks



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From payasam79 at yahoo.com  Thu Mar 25 12:23:46 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] AntLR grammar problems.
In-Reply-To: <F10AE5EB-7391-11D8-87A9-000A95891192@cs.usfca.edu>
Message-ID: <20040325202347.41887.qmail@web41008.mail.yahoo.com>

Hi grp,

My antlr grammar seems to behave strangely, offlate.
For example, I have a lexer rule:

IDENTIFIER: ('a'..'z');

I have a parser rule associated with it:
-------------------------------------
idList returns [String strs="zilch"]
{String s;}
: x: IDENTIFIER {strs = x.getText();}
;
-------------------------------------

When I run Main.java and type the character 'a' (when
i type it, i dont include the single quotes) and it
says:

"line 1:1: expecting IDENTIFIER, found 'a'".

This happened earlier but the mistake disappeared by
itself. Also, when i try delete the lexer so that i
would recreate the lexer instead of overwriting it, it
often says "OUT OF SYNC WITH THE SYSTEM".

Can anybody shed some light on this?

Bharath.

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> Hi  I have a lab using JBurg to generate code in
> conjunction with 
> ANTLR.  Google jburg and check the lab out also at
> my USF course notes. 
> :)
> 
> Ter
> On Mar 11, 2004, at 8:13 AM, Bharath S wrote:
> 
> > Hi All,
> >
> > My understanding is that AntLR can be used to
> generate
> > the front-end of a compiler (lex-parser-AST). What
> > about the backend? (code
> generation/optimization?). As
> > of now, I am getting clear ideas about defining
> the
> > "structured text" language's syntax+semantics; How
> > would i convert it to bytecode?
> >
> > Thanks a lot.
> >
> > Bharath.
> >
> > =====
> > Bharath Sundararaman
> > Graduate Assistant, CAHS.
> > (312)-5606532 (M)
> > http://www.cs.uic.edu/~bsundara
> >
> > __________________________________
> > Do you Yahoo!?
> > Yahoo! Search - Find what youre looking for
> faster
> > http://search.yahoo.com
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 25 14:01:21 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080252081.142.15557.w59@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jfosoriot <jfosorio@eel.upc.es> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From mbresnah at visi.com  Thu Mar 25 15:28:38 2004
From: mbresnah at visi.com (Mike Bresnahan)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] C# or Java lexer-parser with CodeDOM or XML Style Information
In-Reply-To: <c3v1qf+2jhp@eGroups.com>
Message-ID: <EKEJKOHPOIIALFJMKEIGCELNFIAA.mbresnah@visi.com>

> Does anybody have any files that retrieves XML Info or CodeDom style 
> info from C# or Java Files

http://www.debreuil.com/CSharp




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Thu Mar 25 15:48:54 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] C# or Java lexer-parser with CodeDOM or XML Style Information
References: <EKEJKOHPOIIALFJMKEIGCELNFIAA.mbresnah@visi.com>
Message-ID: <01e301c412c3$bed72530$0100a8c0@xpbaby>

Almost almost done the next rev.. It put things into a graph like structure
like CodeDom, but specific to C#... There is a viewer that is almost
complete, that is helping pop up bugs I've missed...

 (screenshot)
http://debreuil.com/CSharp/csdomView.gif

Maybe a day or two more.

Cheers,
Robin


> > Does anybody have any files that retrieves XML Info or CodeDom style
> > info from C# or Java Files
>
> http://www.debreuil.com/CSharp
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu Mar 25 16:43:06 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] AntLR grammar problems.
In-Reply-To: <20040325202347.41887.qmail@web41008.mail.yahoo.com>
References: <20040325202347.41887.qmail@web41008.mail.yahoo.com>
Message-ID: <8C1483AE-7EBE-11D8-B9D2-000A95891192@cs.usfca.edu>


On Mar 25, 2004, at 12:23 PM, Bharath S wrote:
> This happened earlier but the mistake disappeared by
> itself. Also, when i try delete the lexer so that i
> would recreate the lexer instead of overwriting it, it
> often says "OUT OF SYNC WITH THE SYSTEM".

Hi. :)  To start with it sounds like you have a revision control issue.

Then for your grammar, you probably have a token type disconnect 
between lexer and parser.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 25 17:59:39 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080266379.109.14461.w32@yahoogroups.com>


Hello,

This is an automated email message to let you know that
don_bradshaw60 <don.bradshaw@quipoz.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From don.bradshaw at quipoz.com  Thu Mar 25 18:12:25 2004
From: don.bradshaw at quipoz.com (don_bradshaw60)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Missing tokens when using a Selector and Hidden toke filter
Message-ID: <c403i9+3vmq@eGroups.com>

I'm having problems using a TokenStreamSelector with 
TokenStreamHiddenTokenFilter(s).

Every time I switch I loose a token. I don't lose it permanently, 
when I switch back, sometime later, the token that was lost is 
injected back into the stream (at the wrong point ofcourse) 
replacing the one that should have been returned. 

This happens every time I switch.

It works fine when switching between TokenStreamBasicFilter(s).

The problem happens regardless of whether I have actually defined 
any tokens to be hidden or not. 

Any help would be appreciated.

Thanks,
Don Bradshaw.






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu Mar 25 21:29:31 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1080278971.1150.95550.m11@yahoogroups.com>


Hello,

This is an automated email message to let you know that
handballer78 <moviem@web.de> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From payasam79 at yahoo.com  Fri Mar 26 08:16:03 2004
From: payasam79 at yahoo.com (Bharath S)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] AntLR grammar problems.
In-Reply-To: <8C1483AE-7EBE-11D8-B9D2-000A95891192@cs.usfca.edu>
Message-ID: <20040326161603.27952.qmail@web41002.mail.yahoo.com>

Hi Ter,

I am not running my antlr project on CVS yet. So its
not a revision control issue. Does token disconnect
mean that I am referring to the token wrongly in my
parser? (For eg, defining a token called INT and
trying to parse INTEGER, which has not been defined?)

Please let me know. Another funny observation is that,
when I have my lex rule as
---------------------------------------------------
IDENTIFIER options{testLiterals=true;}:
('_'(LETTER|INT))|(LETTER'_'LETTER);
---------------------------------------------------
it works. But if i change the (LETTER'_'LETTER) in the
above rule to just (LETTER)+, it says "expecting
identifier, found "abcd"; LETTER: ('0'..'9'); by the
way.

Thanks.

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> On Mar 25, 2004, at 12:23 PM, Bharath S wrote:
> > This happened earlier but the mistake disappeared
> by
> > itself. Also, when i try delete the lexer so that
> i
> > would recreate the lexer instead of overwriting
> it, it
> > often says "OUT OF SYNC WITH THE SYSTEM".
> 
> Hi. :)  To start with it sounds like you have a
> revision control issue.
> 
> Then for your grammar, you probably have a token
> type disconnect 
> between lexer and parser.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email
> again!
> Cofounder, http://www.peerscope.com pure link
> sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
>      antlr-interest-unsubscribe@yahoogroups.com
> 
>  
> 


__________________________________
Do you Yahoo!?
Yahoo! Finance Tax Center - File online. File on time.
http://taxes.yahoo.com/filing.html


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 26 11:47:02 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Missing tokens when using a Selector and Hidden toke filter
In-Reply-To: <c403i9+3vmq@eGroups.com>
References: <c403i9+3vmq@eGroups.com>
Message-ID: <5A3259E8-7F5E-11D8-B9D2-000A95891192@cs.usfca.edu>


On Mar 25, 2004, at 6:12 PM, don_bradshaw60 wrote:

> I'm having problems using a TokenStreamSelector with
> TokenStreamHiddenTokenFilter(s).
>
> Every time I switch I loose a token. I don't lose it permanently,
> when I switch back, sometime later, the token that was lost is
> injected back into the stream (at the wrong point ofcourse)
> replacing the one that should have been returned.
>
> This happens every time I switch.
>
> It works fine when switching between TokenStreamBasicFilter(s).
>
> The problem happens regardless of whether I have actually defined
> any tokens to be hidden or not.
>
> Any help would be appreciated.

Hi Don.  Been a while since I've used that sucker.  How does your app 
compare to the hidden filter stuff used with the javadoc example?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri Mar 26 11:47:55 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] AntLR grammar problems.
In-Reply-To: <20040326161603.27952.qmail@web41002.mail.yahoo.com>
References: <20040326161603.27952.qmail@web41002.mail.yahoo.com>
Message-ID: <7999C968-7F5E-11D8-B9D2-000A95891192@cs.usfca.edu>


On Mar 26, 2004, at 8:16 AM, Bharath S wrote:

> Hi Ter,
>
> I am not running my antlr project on CVS yet. So its

Well, something (not ANTLR and not Java) is telling you something about 
it being out of sync.  This would explain how two grammar files could 
be out of date.  The token types need to be the same across lexer and 
parser so that 32 means the same token in each, for example.

Ter

> not a revision control issue. Does token disconnect
> mean that I am referring to the token wrongly in my
> parser? (For eg, defining a token called INT and
> trying to parse INTEGER, which has not been defined?)
>
> Please let me know. Another funny observation is that,
> when I have my lex rule as
> ---------------------------------------------------
> IDENTIFIER options{testLiterals=true;}:
> ('_'(LETTER|INT))|(LETTER'_'LETTER);
> ---------------------------------------------------
> it works. But if i change the (LETTER'_'LETTER) in the
> above rule to just (LETTER)+, it says "expecting
> identifier, found "abcd"; LETTER: ('0'..'9'); by the
> way.
>
> Thanks.
>
> --- Terence Parr <parrt@cs.usfca.edu> wrote:
>>
>> On Mar 25, 2004, at 12:23 PM, Bharath S wrote:
>>> This happened earlier but the mistake disappeared
>> by
>>> itself. Also, when i try delete the lexer so that
>> i
>>> would recreate the lexer instead of overwriting
>> it, it
>>> often says "OUT OF SYNC WITH THE SYSTEM".
>>
>> Hi. :)  To start with it sounds like you have a
>> revision control issue.
>>
>> Then for your grammar, you probably have a token
>> type disconnect
>> between lexer and parser.
>>
>> Ter
>> --
>> Professor Comp. Sci., University of San Francisco
>> Creator, ANTLR Parser Generator,
>> http://www.antlr.org
>> Cofounder, http://www.jguru.com
>> Cofounder, http://www.knowspam.net enjoy email
>> again!
>> Cofounder, http://www.peerscope.com pure link
>> sharing
>>
>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>      antlr-interest-unsubscribe@yahoogroups.com
>>
>>
>>
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! Finance Tax Center - File online. File on time.
> http://taxes.yahoo.com/filing.html
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar 26 12:46:47 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080334007.364.89060.w36@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jduquevieira <jpdv@medialog.pt> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From inveiglecon at yahoo.com  Fri Mar 26 10:57:24 2004
From: inveiglecon at yahoo.com (inveiglecon)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Problems with C# or Java lexer-parser with CodeDOM or XML Style Information
In-Reply-To: <01e301c412c3$bed72530$0100a8c0@xpbaby>
Message-ID: <c41uek+na28@eGroups.com>

Hi,
 GREAT stuff there in your grammer files
But I am running into some problems here, 
As long as I just download the executable and run, it runs fine

but if I open the files in VS.NET and generate C# files with the 
grammer, compile, and build and then run it, it does not return 
anything, it says that the nothing was found, whereas the same file 
runs from the executable directly downloaded

Any suggestions or help is greatly appreciate

Thanks











--- In antlr-interest@yahoogroups.com, "Robin Debreuil" <robin@d...> 
wrote:
> Almost almost done the next rev.. It put things into a graph like 
structure
> like CodeDom, but specific to C#... There is a viewer that is almost
> complete, that is helping pop up bugs I've missed...
> 
>  (screenshot)
> http://debreuil.com/CSharp/csdomView.gif
> 
> Maybe a day or two more.
> 
> Cheers,
> Robin
> 
> 
> > > Does anybody have any files that retrieves XML Info or CodeDom 
style
> > > info from C# or Java Files
> >
> > http://www.debreuil.com/CSharp
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From inveiglecon at yahoo.com  Fri Mar 26 15:24:01 2004
From: inveiglecon at yahoo.com (inveiglecon)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] What does setVerboseStringConversions Do ? and is the last AST Node always null
Message-ID: <c42e2h+3b9r@eGroups.com>

Hi,

What is the meaning of verboseString Conversions

If I want to list out all the nodes, right till the end and then 
customize every node, then does lastnode = null be the breaking 
condition, out of the loop




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri Mar 26 16:21:27 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] unexpected nondeterminism...
Message-ID: <c42he7+m7vo@eGroups.com>

Call me dense, but I'm not getting why this results in a nondeterminism:

class TestParser extends Parser;
	options { k = 2; }

term:		ID ;
expression:	term ( OP term )* ;
statement:	expression ( assignment )? ;
assignment:	( OP )? AOP expression ;

The warning given is:

ANTLR Parser Generator   Version 2.7.3 (20040322-1)   1989-2004 jGuru.com
foo.g:7: warning:nondeterminism upon
foo.g:7:     k==1:OP
foo.g:7:     k==2:ID
foo.g:7:     between alt 1 and exit branch of block

Surely, with k=2 look ahead, the sequence [ OP, ID ] can only be alternative one of the 
block.  There doesn't seem to be a way in which OP can be followed by anything other than 
ID (in which case it is a continuation of the ()* block in expression), or AOP, in which case 
it is an assignment.  Doesn't the k=2 ensure that in the code for expression, it can look 
ahead and say if k==1:OP, k==2:ID then continue the loop, otherwise exit?

Any help to clear my thick-headed understanding would be appreciated!

- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri Mar 26 21:08:10 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:35 2004
Subject: New antlr-interest member
Message-ID: <1080364090.116.91128.w7@yahoogroups.com>


Hello,

This is an automated email message to let you know that
rajakswamy <rajakswamy@yahoo.co.in> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From robin at debreuil.com  Fri Mar 26 21:58:38 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Problems with C# or Java lexer-parser with CodeDOM or XML Style Information
References: <c41uek+na28@eGroups.com>
Message-ID: <002601c413c0$90087b20$0100a8c0@xpbaby>

> but if I open the files in VS.NET and generate C# files with the
> grammer, compile, and build and then run it, it does not return
> anything, it says that the nothing was found, whereas the same file
> runs from the executable directly downloaded

Not sure - what exactly does it say when it says 'nothing' was found? Like
no file, or no antlr runtime, or...? Afaik it works, but I haven't stress
tested it on multiple systems or anything. There are some bugs in that
grammar that have since been corrected, I will post it shortly - I'd post
the new grammar now but it probably wouldn't run in the old harness as it
depends on custom classes being present.

All this other stuff keeps poping up, so frustrating having to work for a
living ; ).

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jan.oetting at gmx.de  Fri Mar 26 23:18:59 2004
From: jan.oetting at gmx.de (Jan Oetting)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: unexpected nondeterminism...
In-Reply-To: <1080360100.351.40406.m12@yahoogroups.com>
References: <1080360100.351.40406.m12@yahoogroups.com>
Message-ID: <1799282867.20040327081859@gmx.de>

Hi Mark,
in a LL(k)-Parser is it not allowed to have two productions resulting
in a text, where the first k Tokens are identical. In your grammar it
is possible to break this rule, independent of the size of k.

Let me simplify your grammar to show you the point
ID OP ID (OP ID)*  ( AOP ID )?

example for the nondeterminus (with k=2)
beginning with 'statement' you can produce following
First way:

statement -> expression assignment -> term OP term assignment
-> ID OP ID assignment -> ID OP IP AOP expression -> ID OP ID AOP ID



second way:
statement -> expression -> term OP term -> ID OP term --> ID OP ID

Setting k higher doesn't help.
But because the meaning doesn't change whichever way the parser
choose, you could ignore the warning.

Cheers
Jan




Call me dense, but I'm not getting why this results in a nondeterminism:

class TestParser extends Parser;
        options { k = 2; }

term:           ID ;
expression:     term ( OP term )* ;
statement:      expression ( assignment )? ;
assignment:     ( OP )? AOP expression ;

The warning given is:

ANTLR Parser Generator   Version 2.7.3 (20040322-1)   1989-2004 jGuru.com
foo.g:7: warning:nondeterminism upon
foo.g:7:     k==1:OP
foo.g:7:     k==2:ID
foo.g:7:     between alt 1 and exit branch of block

Surely, with k=2 look ahead, the sequence [ OP, ID ] can only be alternative one of the 
block.  There doesn't seem to be a way in which OP can be followed by anything other than 
ID (in which case it is a continuation of the ()* block in expression), or AOP, in which case 
it is an assignment.  Doesn't the k=2 ensure that in the code for expression, it can look 
ahead and say if k==1:OP, k==2:ID then continue the loop, otherwise exit?

Any help to clear my thick-headed understanding would be appreciated!

- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat Mar 27 11:21:21 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] unexpected nondeterminism...
In-Reply-To: <c42he7+m7vo@eGroups.com>
References: <c42he7+m7vo@eGroups.com>
Message-ID: <EDE0C012-8023-11D8-B9D2-000A95891192@cs.usfca.edu>

Hi.  I think this is a limitation of the linear approximate lookahead 
not your understanding.  There is usually one place in a grammar where 
the approximation bites you.  ANTLR will do the right thing by 
consuming the OP greedily, but it confuses itself and then gives you a 
warning.  My suggestion is to just leave it and add "options { 
greedy=true; } :" to the subrule (OP)? so that you can inform ANTLR you 
intended to do this.  It will obediently shut up and do the right 
thing. :)

Sorry for the hassle.

Ter

On Mar 26, 2004, at 4:21 PM, Mark wrote:

> Call me dense, but I'm not getting why this results in a 
> nondeterminism:
>
> class TestParser extends Parser;
> 	options { k = 2; }
>
> term:		ID ;
> expression:	term ( OP term )* ;
> statement:	expression ( assignment )? ;
> assignment:	( OP )? AOP expression ;
>
> The warning given is:
>
> ANTLR Parser Generator   Version 2.7.3 (20040322-1)   1989-2004 
> jGuru.com
> foo.g:7: warning:nondeterminism upon
> foo.g:7:     k==1:OP
> foo.g:7:     k==2:ID
> foo.g:7:     between alt 1 and exit branch of block
>
> Surely, with k=2 look ahead, the sequence [ OP, ID ] can only be 
> alternative one of the
> block.  There doesn't seem to be a way in which OP can be followed by 
> anything other than
> ID (in which case it is a continuation of the ()* block in 
> expression), or AOP, in which case
> it is an assignment.  Doesn't the k=2 ensure that in the code for 
> expression, it can look
> ahead and say if k==1:OP, k==2:ID then continue the loop, otherwise 
> exit?
>
> Any help to clear my thick-headed understanding would be appreciated!
>
> - Mark
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sat Mar 27 12:55:49 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: unexpected nondeterminism...
In-Reply-To: <EDE0C012-8023-11D8-B9D2-000A95891192@cs.usfca.edu>
Message-ID: <c44pol+qrh8@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Hi.  I think this is a limitation of the linear approximate lookahead 
> not your understanding.  

> My suggestion is to just leave it and add "options { 
> greedy=true; } :" to the subrule (OP)? so that you can inform ANTLR you 
> intended to do this.  It will obediently shut up and do the right 
> thing. :)

Actually, I had to add it to the (OP term)* rule:

expression: term ( options{greedy=true;}: OP term )* ;
statement:  expression ( assignment )? ;
assignment: ( OP )? AOP expression ;

This works and does the right thing, based on reading the code of the generated parser.

Actually, you were right, w/o the greedy=true, the generated parser does exactly the same 
thing, so the option just quells the warning.... Which I like, since I'm one of the those 
"must-compile-without-a-single-warning" kinda programmers!

> Sorry for the hassle.
Not at all!  Antlr is saving so much time on my project (Wheat), I can hardly complain 
about the occasional quirkyness.  Thank you for the wonderful tool.

- Mark
Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat Mar 27 13:23:30 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: unexpected nondeterminism...
In-Reply-To: <c44pol+qrh8@eGroups.com>
References: <c44pol+qrh8@eGroups.com>
Message-ID: <FEC82C14-8034-11D8-B9D2-000A95891192@cs.usfca.edu>


On Mar 27, 2004, at 12:55 PM, Mark wrote:
> This works and does the right thing, based on reading the code of the 
> generated parser.

Whew! ;)  Hooray for being able to read the generated parser!

>> Sorry for the hassle.
> Not at all!  Antlr is saving so much time on my project (Wheat), I can 
> hardly complain
> about the occasional quirkyness.  Thank you for the wonderful tool.

You are welcome...i'm neck deep as we speak in the new grammar analysis 
algorithm for my eventual antlr 3.0 prototype that will remove this 
approximation limitation.  Sitting in a cafe in San Francisco...free 
wireless, lots of caffeine, and plenty of freaks walking around. ;)  
Nothing I like more than being highly-caffeinated and immersed in a 
graph algorithm. :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rajakswamy at yahoo.co.in  Sat Mar 27 20:47:38 2004
From: rajakswamy at yahoo.co.in (=?iso-8859-1?q?RajaKuppuswamy?=)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: unexpected nondeterminism...
In-Reply-To: <c44pol+qrh8@eGroups.com>
Message-ID: <20040328044738.8523.qmail@web8207.mail.in.yahoo.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: Rules.g
Type: application/octet-stream
Size: 5784 bytes
Desc: Rules.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040328/31f6beb1/Rules.obj
From robin at debreuil.com  Sun Mar 28 05:21:12 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] CSharp treeview
Message-ID: <004501c414c7$8d473cc0$0100a8c0@xpbaby>

I've updated the CSparser at
http://www.debreuil.com/CSharp/

Not quite finished, but you can see what is left. I probably have another
week before it gets down to less obvious bugs... You can view cs files in a
tree viewer now (just drag cs files into CSharp.exe).

I'll put it in the file section once it is fully done if that is ok...

Cheers,
Robin



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun Mar 28 06:23:52 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] lexical nondeterminism
Message-ID: <20040328142105.184A557C002@h4866.serverkompetenz.net>

Hi,

I'm a newcomer with ANTLR, coming over from SableCC, and while I'm converting my SableCC grammars I found a warning, which I don't understand. Suppose I have two lexer rules like:

INTEGER_LITERAL: DECIMAL_NUMBER_LITERAL | HEX_NUMBER_LITERAL | OCTAL_NUMBER_LITERAL;

FLOATING_POINT_LITERAL:
    (DIGIT)+ '.' (DIGIT)* (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)? |
    '.' (DIGIT)+ (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)? |
    (DIGIT)+ EXPONENT_PART (FLOAT_TYPE_SUFFIX)? |
    (DIGIT)+ (EXPONENT_PART)? FLOAT_TYPE_SUFFIX;

With these simple rules I get the warning: 

V:\Eclipse projects\ParserTest\Grammar\Test.g: warning:lexical nondeterminism between rules INTEGER_LITERAL and FLOATING_POINT_LITERAL upon
V:\Eclipse projects\ParserTest\Grammar\Test.g:     k==1:'0'..'9'
V:\Eclipse projects\ParserTest\Grammar\Test.g:     k==2:'0'..'9'

Given that rules are handled in a greedy manner I don't see where there is an ambiquity. There is no definition for a pure sequence of digits in the floating point literal so such an input should really only match the integer literal rule. Where is my mistake of understanding?

Thankful for any help,

Mike
--
www.soft-gems.net




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun Mar 28 06:32:18 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Building hierarchical grammars
Message-ID: <20040328142930.A9E0957C002@h4866.serverkompetenz.net>

Hi again,

Another little issue I currently encounter is a warning for lexical nondeterminism for rules like:

INTEGER_LITERAL: DECIMAL_NUMBER_LITERAL | HEX_NUMBER_LITERAL | OCTAL_NUMBER_LITERAL;
...	

LITERAL:    INTEGER_LITERAL | FLOATING_POINT_LITERAL | CHARACTER_LITERAL | STRING_LITERAL;

I have many similar rules where I build parts of a complex rule in subrules and glue them then together to the main rule. Unfortunately, I get now for each of these compositions a lexical nondeterminism warning, in this case:

V:\Eclipse projects\ParserTest\Grammar\Test.g: warning:lexical nondeterminism between rules INTEGER_LITERAL and LITERAL upon
V:\Eclipse projects\ParserTest\Grammar\Test.g:     k==1:'0'..'9'
V:\Eclipse projects\ParserTest\Grammar\Test.g:     k==2:<end-of-token>,'0'..'9','l','x'

Sure is there a kind of ambiguity since certain input sequences can be detected by both rules. But that is the very nature of hierarchical grammar building, isn't it. How am I supposed to write this down and still keep the same level of readability? Btw: defining INTEGER_LITERAL as protected would help but is not a general solution. In this very case I even need both rules for my parser (in different parser rules).

Help is much appreciated.

Mike
--
www.soft-gems.net




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jfosorio at eel.upc.es  Sun Mar 28 13:06:52 2004
From: jfosorio at eel.upc.es (Juan Felipe Osorio)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Segmention Fault  in antlr c++ examples under linux
In-Reply-To: <002601c413c0$90087b20$0100a8c0@xpbaby>
Message-ID: <002401c41508$97edeb10$0c315393@upc.es>


Hello, 
I am trying to run the c++ examples in the antlr getting started web
page using c++ under linux (g++). I have done successfully the
compilation process, but the result program produce a segmentation fault
just when the main routing try to parse the input (parser.expr() in the
code below, part of the John Merrells example of a simple calculator). I
think that the problem is something related with the way the main
rutting pass the cin stream to the parser routing but I am not sure. Any
Idea ?


//main.cpp
#include <iostream>
#include "CalcLexer.hpp"
#include "CalcParser.hpp"

using namespace std;
using namespace antlr;

int main()
{
try {
CalcLexer lexer(cin);
CalcParser parser(lexer);
parser.expr();
RefAST t = parser.getAST();
cout << t->toStringList() << endl;
} catch(exception& e) {
cerr << "exception: " << e.what() << endl;
}
}



// calc.g
options
{
language="Cpp";
}
class CalcLexer extends Lexer;
public
INTEGER: (DIGIT)+;
LPAREN: '(';
RPAREN: ')';
PLUS: '+';
protected
DIGIT: '0'..'9';


class CalcParser extends Parser;
options
{
buildAST=true;
}
expr: LPAREN INTEGER (PLUS INTEGER)* RPAREN;






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun Mar 28 08:09:52 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] lexical nondeterminism
In-Reply-To: <20040328142105.184A557C002@h4866.serverkompetenz.net>
Message-ID: <20040328160704.2869157C002@h4866.serverkompetenz.net>


> Given that rules are handled in a greedy manner I don't see 
> where there is an ambiquity. There is no definition for a 
> pure sequence of digits in the floating point literal so such 
> an input should really only match the integer literal rule. 
> Where is my mistake of understanding?

I saw, a similar question was discussed already yesterday. I searched for the wrong keywords in the archive so I did not find these messages. Sorry for that.

On the other hand however I tried the supposed solution and found it not working (it was as if I had not specified the greedy option). I also read the help and tried to understand what I can do, but still have no idea.

Mike
--
www.soft-gems.net




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sun Mar 28 08:22:47 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Legibility Bug in C++ Lexer generation
Message-ID: <2682A81A-80D4-11D8-9F3A-000393A56BB6@glyphic.com>

When a Lexer generates a bit-set test for a set of characters, the 
generated code works, but is misnamed and the comment is incorrect.  
For example:

NUMBER: ( '-' )? ( '0'..'9' )+ ;

Results in this code:
--------------------
if ((_tokenSet_0.member(LA(1))) && (true)) {
     mNUMBER(true);
     theRetToken=_returnToken;
}
...
const unsigned long ScriptLexer::_tokenSet_0_data_[] = { 0UL, 
67051520UL, 0UL, 0UL, 0UL, 0UL };
// "use" "public" "protected" "private" "instance" "const" ID "include"
// "if" "else" "loop"
const antlr::BitSet ScriptLexer::_tokenSet_0(_tokenSet_0_data_,6);
--------------------

Of course, these are really character sets, not token sets, and the 
generated comment is completely wrong..  The generated code would be 
much more readable if it were:
--------------------
if ((_characterSet_0.member(LA(1))) && (true)) {
     mNUMBER(true);
     theRetToken=_returnToken;
}
...
const unsigned long ScriptLexer:: _characterSet_0_data_[] = { 0UL, 
67051520UL, 0UL, 0UL, 0UL, 0UL };
// '-' '0' '1' '2' '3' '4' '5' '6'
// '7' '8' '9'
const antlr::BitSet ScriptLexer:: 
_characterSet_0(_characterSet_0_data_,6);
--------------------

- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sun Mar 28 08:34:12 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: lexical nondeterminism
In-Reply-To: <20040328160704.2869157C002@h4866.serverkompetenz.net>
Message-ID: <c46uq4+oqcc@eGroups.com>

INTEGER_LITERAL: DECIMAL_NUMBER_LITERAL | HEX_NUMBER_LITERAL |
OCTAL_NUMBER_LITERAL;

FLOATING_POINT_LITERAL:
(DIGIT)+ '.' (DIGIT)* (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)? |
'.' (DIGIT)+ (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)? |
(DIGIT)+ EXPONENT_PART (FLOAT_TYPE_SUFFIX)? |
(DIGIT)+ (EXPONENT_PART)? FLOAT_TYPE_SUFFIX;

> I saw, a similar question was discussed already yesterday. I searched for the wrong 
keywords in the archive so I did not find these messages. Sorry for that.
> 
> On the other hand however I tried the supposed solution and found it not working (it 
was as if I had not specified the greedy option). I also read the help and tried to 
understand what I can do, but still have no idea.

Yes - that was my question... But your case and my case are different because in your 
case, the common prefix of both INTEGER_LITERAL and FLOATING_POINT_LITERAL is 
(DIGIT)+.  The common prefix is arbitrarily long.  There is no fixed k value long enough.  
The parser would have to look ahead an arbitrary number of characters (until it hit some 
non-digit) before it could decide to go down the INTEGER_LITERAL path or the 
FLOATING_POINT_LITERAL path.

In my case, the common prefix was only one character and k was set to 2, so the lexer 
could indeed predict with fixed look-ahead.  My 'error' turned out to just be an overly 
conservative warning from the lexer, and the greedy option simply silenced the message.  
The generated code was always correct and deterministic.

Look in the examples folder of the Antlr distribution at the pascal or java grammars to 
see how to handle lexar matching of numbers.  Basically, you have to match the prefix 
(DIGIT)+ in one rule, and then based on what matches next, use {$setType(...)} to fix-up 
the token type.

- Mark




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sun Mar 28 08:45:45 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: Building hierarchical grammars
In-Reply-To: <20040328142930.A9E0957C002@h4866.serverkompetenz.net>
Message-ID: <c46vfp+doaf@eGroups.com>

> LITERAL:    INTEGER_LITERAL | FLOATING_POINT_LITERAL | CHARACTER_LITERAL | 
STRING_LITERAL;

These things should be parser rules, not lexer rules.

literal: INTEGER_LITERAL | FLOATING_POINT_LITERAL | CHARACTER_LITERAL | 
STRING_LITERAL;

In general, Lexers are not 'hierarchical', Parsers are.  Different parser rules can match 
similar things because they are called from other rules:

array-assignment: ID "[" index "]" "=" value ";' ;
index: INTEGER_LITERAL  ;
value:  INTEGER_LITERAL | FLOATING_POINT_LITERAL ;

Lexers, on the other hand, have to pick from among ALL the Lexer rules each and every 
time they are asked for the next token.  They don't 'know' where they are called from in 
the parser, and so can't restrict the set of token parses for a particular case.

- Mark




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Sun Mar 28 09:02:22 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
Message-ID: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>

What's currently the best way to do multipass parsing (while retaining
all location information so that error messages are informative)?

Basically, I would like to be able to evolve a parser by starting from
recognizing and processing a coarse-grained structure and then
refining it, e.g., suppose I have a language that can be thought of at
a first cut as consisting of space-delimited tokens, and then I wish
also to parse within those tokens eventually.

Say I have a stream of text
    It was long-lived - 1810-1910 had 3+4-1.
and I wish to parse this by first splitting into 
    It
    was
    long-lived
    -
    1810-1910
    had
    3+4-1.
and refining eventually to what one might expect: a parse tree
containing words, compound words, dashes (delimiters in sentences),
durations of dates, arithmetic expressions, sentence terminator.

It seems difficult or monolithic to attempt to do this by creating
tokens in one pass and then parsing that stream of tokens.  Rather, it
seems it would be best to create token streams, which are then
manipulated to create refined token streams, etc.

Any ideas on how I should proceed?

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun Mar 28 11:12:32 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: Building hierarchical grammars
In-Reply-To: <c46vfp+doaf@eGroups.com>
Message-ID: <20040328190943.C009857C003@h4866.serverkompetenz.net>

Hi Mark, 

Thank you very much for your quick help (also with my other question). After moving some rules around, rebuilding the
number literal rule and making a few things protected my lexer grammer now compiles fine. Phew, now I can finally start
testing :-)

> In general, Lexers are not 'hierarchical', Parsers are.  
> Different parser rules can match similar things because they 
> are called from other rules:

However, building things up hierarchically works great with ANTLR. But maybe only when build the hierarchy up with
protected tokens?
 
> Lexers, on the other hand, have to pick from among ALL the 
> Lexer rules each and every time they are asked for the next 
> token.  They don't 'know' where they are called from in the 
> parser, and so can't restrict the set of token parses for a 
> particular case.

Thanks for pointing this out. This is an important point IMO, also when it comes to performance. And it explains a lot.

Mike
--
www.soft-gems.net




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun Mar 28 11:32:52 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Case sensitivity warnings
Message-ID: <20040328193003.175FE57C002@h4866.serverkompetenz.net>

Hi all,

As you can see I'm heavily working with ANTLR and while I'm trying to build a grammar for files with Unicode format I came accross a general problem, which might particularly interest Terence et al.

As you surely know Unicode input might contain a lot of different characters from different cultures. Many of the Unicode code points, however, are not yet assigned, even in the BMP. So a correct alphabet should not simply include '\u0000'..'\ufffe', but is rather complex and looks in my grammar so:

protected
  UNICODE_LETTER:
      '\u0041' .. '\u005A' | '\u0061' .. '\u007A' | '\u00AA' .. '\u00AA' | '\u00B5' .. '\u00B5' |
      '\u00BA' .. '\u00BA' | '\u00C0' .. '\u00D6' | '\u00D8' .. '\u00F6' | '\u00F8' .. '\u01F5' |
      '\u01FA' .. '\u0217' | '\u0250' .. '\u02A8' | '\u02B0' .. '\u02B8' | '\u02BB' .. '\u02C1' |
      '\u02D0' .. '\u02D1' | '\u02E0' .. '\u02E4' | '\u037A' .. '\u037A' | '\u0386' .. '\u0386' |
      '\u0388' .. '\u038A' | '\u038C' .. '\u038C' | '\u038E' .. '\u03A1' | '\u03A3' .. '\u03CE' |
      '\u03D0' .. '\u03D6' | '\u03DA' .. '\u03DA' | '\u03DC' .. '\u03DC' | '\u03DE' .. '\u03DE' |
      '\u03E0' .. '\u03E0' | '\u03E2' .. '\u03F3' | '\u0401' .. '\u040C' | '\u040E' .. '\u044F' |
...
      '\uFFC2' .. '\uFFC7' | '\uFFCA' .. '\uFFCF' | '\uFFD2' .. '\uFFD7' | '\uFFDA' .. '\uFFDC';

This rule will however cause a warning about using only lower case characters when case sensitivity is switched off. I think it is time to abolish this message and the check behind it. The reason is that you can easily determine whether the rule includes both upper and lower case letters for the ASCII range of letters. Unfortunately, things become much more difficult if you consider all Unicode characters and their culturally correct casing. Sometimes it is even more complex. Consider for instance the german letter ? (sharp s), which does not have an upper case equivalent but an alternative 'ss'. Similar cases exist for greek and many other languages (keyword: case folding). 

You *could* implement case checking the correct way e.g. by using IBM's ICU implementation, but I think the result is not worth the effort (with regard to issuing the warning message). Although, in the long run you won't come around to use this or a similar library if you want correct Unicode support without case sensitivity, because you need it to case-fold input characters culturally correct then.

Mike
--
www.soft-gems.net




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sun Mar 28 15:00:58 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Re: Building hierarchical grammars
In-Reply-To: <20040328190943.C009857C003@h4866.serverkompetenz.net>
References: <c46vfp+doaf@eGroups.com>
	<20040328190943.C009857C003@h4866.serverkompetenz.net>
Message-ID: <16487.22826.877293.355742@despot.non.net>

>>>>> "Mike" == Mike Lischke <lists@lischke-online.de> writes:
[...]

> However, building things up hierarchically works great with ANTLR. But
> maybe only when build the hierarchy up with protected tokens?

Exactly.


>> Lexers, on the other hand, have to pick from among ALL the Lexer rules
>> each and every time they are asked for the next token.  They don't
>> 'know' where they are called from in the parser, and so can't restrict
>> the set of token parses for a particular case.

> Thanks for pointing this out. This is an important point IMO, also when
> it comes to performance. And it explains a lot.

So, using the "protected" qualifier effectively hides those
sub-rules/-hierarchies.

Have fun,
	John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sun Mar 28 15:17:28 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
In-Reply-To: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>
References: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>
Message-ID: <16487.23816.552066.215487@despot.non.net>

>>>>> "FranklinChen" == FranklinChen  <FranklinChen@cmu.edu> writes:
[...]

> What's currently the best way to do multipass parsing (while retaining
> all location information so that error messages are informative)?

> Basically, I would like to be able to evolve a parser by starting from
> recognizing and processing a coarse-grained structure and then refining
> it, e.g., suppose I have a language that can be thought of at a first cut
> as consisting of space-delimited tokens, and then I wish also to parse
> within those tokens eventually.

For your example, with Antlr, you can write a separate grammar for each of
the languages and then invoke the appropriate grammar at the appropriate
spot.

However, given your example, I don't understand *why* you'd want to do
"nested parsing".  The main reason to do nested parsing is because you have
dynamically changing/configurable sub-languages.  If you don't need that
kind of pluggability, it's much easier to write a lexer and a parser do the
minimum necessary to reliably build up a tree and then do your multiple
"refinement" passes over the tree (rather than trying to do all of the
stuff in the parser).

Or do you have some other need/constraint on the sub-languages?

Hope this helps,
		John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Sun Mar 28 16:11:52 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
In-Reply-To: <16487.23816.552066.215487@despot.non.net>
References: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>
	<16487.23816.552066.215487@despot.non.net>
Message-ID: <16487.27080.307786.290434@SWAN.PSY.cmu.edu>

> >>>>> "FranklinChen" == FranklinChen  <FranklinChen@cmu.edu> writes:
> [...]
> 
> > What's currently the best way to do multipass parsing (while retaining
> > all location information so that error messages are informative)?
> 
> > Basically, I would like to be able to evolve a parser by starting from
> > recognizing and processing a coarse-grained structure and then refining
> > it, e.g., suppose I have a language that can be thought of at a first cut
> > as consisting of space-delimited tokens, and then I wish also to parse
> > within those tokens eventually.
> 
> For your example, with Antlr, you can write a separate grammar for each of
> the languages and then invoke the appropriate grammar at the appropriate
> spot.

Can you sketch out sample grammars and code that would handle what I
posted?  Seriously.  I've read the entire ANTLR documentation site and the
jGuru FAQ site and the source code for all the examples (for Java
generation), and I cannot offhand come up with what I am looking for.
 
> However, given your example, I don't understand *why* you'd want to do
> "nested parsing".  The main reason to do nested parsing is because you have
> dynamically changing/configurable sub-languages.  If you don't need that
> kind of pluggability, it's much easier to write a lexer and a parser do the
> minimum necessary to reliably build up a tree and then do your multiple
> "refinement" passes over the tree (rather than trying to do all of the
> stuff in the parser).
> 
> Or do you have some other need/constraint on the sub-languages?

Just a few observations:

- As my toy example tries to indicate, "-" can mean three
  different things, depending on the context 
- The whitespace first pass is important, because I want to pass
      grape[fruit]
  completely differently from
      grape [fruit]
- I want to be able to deal with unexpected input at fine granularity
  and recovery, to minimize parse failures, e.g., if I see
      1+2* is 7
  I want to not go below the "word" level in the first "token" "1+2*"
  because I don't want to try to parse an expression and fail.

Basically, imagine parsing English from random Web pages, with the
idea of getting as much information as possible.  You wouldn't want to
come up with a big monolithic grammar for English, because it will be
horribly ambiguous and/or not cover everything one might want down to
the lowest levels of detail or be designed to enable local error
recovery.

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sun Mar 28 17:23:59 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
In-Reply-To: <16487.27080.307786.290434@SWAN.PSY.cmu.edu>
References: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>
	<16487.23816.552066.215487@despot.non.net>
	<16487.27080.307786.290434@SWAN.PSY.cmu.edu>
Message-ID: <16487.31407.71043.292362@despot.non.net>

>>>>> "FranklinChen" == FranklinChen  <FranklinChen@cmu.edu> writes:
>>>>>>> "FranklinChen" == FranklinChen <FranklinChen@cmu.edu> writes:
[...]

>> For your example, with Antlr, you can write a separate grammar for each
>> of the languages and then invoke the appropriate grammar at the
>> appropriate spot.

> Can you sketch out sample grammars and code that would handle what I
> posted?  Seriously.  I've read the entire ANTLR documentation site and
> the jGuru FAQ site and the source code for all the examples (for Java
> generation), and I cannot offhand come up with what I am looking for.

I'm running off for a few days but I'm available on a consulting basis for
this type of work.

[...]

> - As my toy example tries to indicate, "-" can mean three different
> things, depending on the context

That's what parsers and tree grammars are good at.

> The whitespace first pass is important, because I want to pass
> grape[fruit] completely differently from grape [fruit]

FWIW, that's a *really* bad idea in a language.

> I want to be able to deal with unexpected input at fine granularity and
> recovery, to minimize parse failures, e.g., if I see 1+2* is 7 I want to
> not go below the "word" level in the first "token" "1+2*" because I don't
> want to try to parse an expression and fail.

As I noted, you can write a very permissive lexer and a permissive parser
and then do whatever specific checks via multiple tree grammars.

Have fun,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Sun Mar 28 17:41:31 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
In-Reply-To: <16487.31407.71043.292362@despot.non.net>
References: <16487.1310.676816.306558@SWAN.PSY.cmu.edu>
	<16487.23816.552066.215487@despot.non.net>
	<16487.27080.307786.290434@SWAN.PSY.cmu.edu>
	<16487.31407.71043.292362@despot.non.net>
Message-ID: <16487.32459.217710.846905@SWAN.PSY.cmu.edu>

> > - As my toy example tries to indicate, "-" can mean three different
> > things, depending on the context
> 
> That's what parsers and tree grammars are good at.
>
> > The whitespace first pass is important, because I want to pass
> > grape[fruit] completely differently from grape [fruit]
> 
> FWIW, that's a *really* bad idea in a language.

It's also not under my control.  I am given a language, I need to
parse it, so I'm interested in ideas on how to do it with ANTLR, if
possible.  I didn't design this language.
 
> > I want to be able to deal with unexpected input at fine granularity and
> > recovery, to minimize parse failures, e.g., if I see 1+2* is 7 I want to
> > not go below the "word" level in the first "token" "1+2*" because I don't
> > want to try to parse an expression and fail.
> 
> As I noted, you can write a very permissive lexer and a permissive parser
> and then do whatever specific checks via multiple tree grammars.
> 
> Have fun,
> 	John

Context-sensitivity, including the whitespace issue, makes this
difficult.  For example:
       grape[fruit]
should be differently parsed from
       grape [C { int i; }]
and differently parsed from
       grape [Perl { my $i = 3; }]

I need multiple lexers, not just one permissive lexer.

Now, I do know how to multiplex lexers dynamically, and have done so
in the past in a different task in constrained circumstances (such as
the Java/JavaDoc example), but the task here seems to require more
than that.

I think that where I am stuck is that ANTLR allows me to take a text
stream to a token stream by means of a lexer, then a token stream to a
tree by means of a parser, and a tree to something else by means of a
tree parser, but what I want is to turn a token i for language A
(permissive) into a token stream for language B_i, and then have all
the B_i conconcatened into a new token stream for language C.

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Sun Mar 28 21:46:50 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Multipass parsing
In-Reply-To: <16487.32459.217710.846905@SWAN.PSY.cmu.edu>
References: <16487.1310.676816.306558@SWAN.PSY.cmu.edu> <16487.23816.552066.215487@despot.non.net> <16487.27080.307786.290434@SWAN.PSY.cmu.edu> <16487.31407.71043.292362@despot.non.net> <16487.32459.217710.846905@SWAN.PSY.cmu.edu>
Message-ID: <798040EB-8144-11D8-B751-000393B5606C@codetransform.com>

>
> I think that where I am stuck is that ANTLR allows me to take a text
> stream to a token stream by means of a lexer, then a token stream to a
> tree by means of a parser, and a tree to something else by means of a
> tree parser, but what I want is to turn a token i for language A
> (permissive) into a token stream for language B_i, and then have all
> the B_i conconcatened into a new token stream for language C.
>
>
See my article "Using a Parser as a TokenFilter" 
http://www.codetransform.com/filterexample.html
ANTLR doesn't natively support token stream to token stream parsing, 
but if you know how to properly override consume() and nextToken() as I 
show in my article, then you can do it without too much pain.  If you 
need to lex the contents of a token from the token stream you can do 
that too, just modify consume() appropriately.

Try it out and post more details if you get stuck.  What is this 
language anyhow?

Note to Ter for ANTLR 3 -- must support token stream output from a 
parser!

Monty
www.codetransform.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From inveiglecon at yahoo.com  Mon Mar 29 07:25:09 2004
From: inveiglecon at yahoo.com (inveiglecon)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Problems of C# Parser : Does not recognize multiple interfaces,Corrections ?
Message-ID: <c49f4l+8veu@eGroups.com>

Hi,

The C# Parser, does not parse the output correctly, when a class 
implements multiple interfaces, it takes all interfaces seperated by 
comma as the same ident token type, without differentiation.

How do I correct this in the grammer

Thanks




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From luc_ost at hotmail.com  Mon Mar 29 08:54:34 2004
From: luc_ost at hotmail.com (gwind04)
Date: Mon Dec 20 16:16:35 2004
Subject: [antlr-interest] Strange problem with ending symbol of Top rule
Message-ID: <c49kca+jp60@eGroups.com>

Hi,

We found a problem when we were trying to develop a grammar as 
following:

...
class CPreExpr extends Parser;
constant_expression
	:	//logicalOrExpression
		// ...
		primary_expression
		( 	"QUESTION"
			constant_expression
			"COLON"
			constant_expression
 		)?
	;
primary_expression
	:
	"Something"
	|
	"LPAREN" constant_expression "RPAREN"
	;

ANTLR 2.7.3 generated the following codes with it:

void CPreExpr::constant_expression() {
	
	try {      // for error handling
		primary_expression();
		{
		switch ( LA(1)) {
*********	case LITERAL_QUESTION:
		{
			match(LITERAL_QUESTION);
			constant_expression();
			match(LITERAL_COLON);
			constant_expression();
			break;
		}
********	case LITERAL_COLON:
********	case LITERAL_RPAREN:
		{
			break;
		}
		default:
		{
			throw ANTLR_USE_NAMESPACE(antlr)
NoViableAltException(LT(1), getFilename());
		}
		}
		}
	}
...	
}

If we put an ending symbol in the top rule, such as EOF, the code 
generated was:
   ...
********	case LITERAL_QUESTION:
		{
			match(LITERAL_QUESTION);
			constant_expression();
			match(LITERAL_COLON);
			constant_expression();
			break;
		}
********      case ANTLR_USE_NAMESPACE(antlr)Token::EOF_TYPE:
		{
			break;
		}
	      default:
		{
         throw ANTLR_USE_NAMESPACE(antlr)NoViableAltException(LT(1), 
getFilename());
		}
		}
		}
	match(ANTLR_USE_NAMESPACE(antlr)Token::EOF_TYPE);
...

The second part codes were exactly what we wanted. It seemed an 
ending symbol is necessary in the Top rule.May we know, where 
possibly we can find the corresponding explanation, the reason of the 
problem, in ANTLR documents?

Any opinion is appreciated.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

