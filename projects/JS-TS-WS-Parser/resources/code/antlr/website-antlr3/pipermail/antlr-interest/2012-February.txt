From cristian.tarsoaga at gmail.com  Wed Feb  1 05:11:36 2012
From: cristian.tarsoaga at gmail.com (=?ISO-8859-2?Q?Cristian_T=E2r=BAoag=E3?=)
Date: Wed, 1 Feb 2012 15:11:36 +0200
Subject: [antlr-interest] antlrWorks 1.4.3 - NoViableAltException
Message-ID: <CAA07yUjg2EWASfa8u6bGxe5Q_p_0mjGACY0Gw=N60zup637sqg@mail.gmail.com>

Hi everybody,

I try to 'interpret' the following grammar using antlrWorks 1.4.3

grammar test;

//arr : elem*;

elem : (itemA? itemB) => itemA? itemB
 | itemA;
 itemA : SPACE LETTER_A LETTER_A;
itemB : SPACE LETTER_B LETTER_B;

SPACE : ' ';
LETTER_A: 'A'|'a';
LETTER_B: 'B'|'B';


If I try using input text as ' AA', while 'arr' rule is commented, the
'elem' rule is matched.

If I try using input text as ' AA', while 'arr' rule is uncommented, the
'elem' rule fails: I get NoViableAltException.

I don't understand the effect of the 'arr' rule over the 'elem' one (and I
don't even try to match 'arr')

Can somebody help/explain?

Thanks a lot,
Chris

From chwchw at gmx.de  Wed Feb  1 06:00:33 2012
From: chwchw at gmx.de (Christian)
Date: Wed, 01 Feb 2012 15:00:33 +0100
Subject: [antlr-interest] Copying return value of a rule
In-Reply-To: <4F285473.60402@gmx.de>
References: <4F285473.60402@gmx.de>
Message-ID: <4F294581.9070809@gmx.de>

> The first problem: Attributes and modifiers are optional, so I get an
> EmptyStackException if one of the following action is not declared in
> the corresponding upper rule. Can I somehow check whether the attrs and
> members are defined?
I thought the EmptyStackException would have come from the fact that my
attributes and modifiers rules are optional. However the stack is never
popped while being in a subrule (I checked the implementation). Hence,
the stack must never be pushed with an element. And well, I used the scope

		$typed_member_declaration::type

not in a subrule, but outside of the scope. That's why the stack was
empty: nothing was pushed to it.

So, only problem 2 remains.

Am 31.01.2012 21:52, schrieb Christian:
> Hi @all,
>
> as one might know from common programming languages, a field declaration
> looks like the following (here C#)
>
>     [attribute] public String name, text;
>
> My corresponding rule looks as follows:
>
>     variable_declarators
>     : variable_declarator ( COMMA  variable_declarator )*
>       -> ^(VARIABLE_DECLARATOR {$class_member_declaration::attrs}
> {$class_member_declaration::members}
>           {$typed_member_declaration::type} variable_declarator)+
>     ;
>
> The first problem: Attributes and modifiers are optional, so I get an
> EmptyStackException if one of the following action is not declared in
> the corresponding upper rule. Can I somehow check whether the attrs and
> members are defined?
> The second problem: I do not know a good alternative. Passing e.g. type
> through 3 or more rule levels is not maintainable. Furthermore, copying
> the return value of the type rule for each field (here: name and text)
> does not work. Any solution for that?
>
> Regards,
> Christian
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From james.randles at gmail.com  Wed Feb  1 07:57:17 2012
From: james.randles at gmail.com (James Randles)
Date: Wed, 1 Feb 2012 07:57:17 -0800 (PST)
Subject: [antlr-interest] Getting an output from a TreeWalker and String
	Template in C#
Message-ID: <1328111836897-7243399.post@n2.nabble.com>

Hi,

I am trying to view the output from my treewalker. I have successfully
created a grammar for the parser, lexer and treewalker. However I cannot
find the correct object in C# to see the result of the walker after
attaching a string template. 

My treewalker function which is generated from the grammar files returns a
type of TemplateTreeRuleReturnScope<StringTemplate, CommonTree>. Are there
any code snippets or bits of documentation to show me how I can use this
type to produce my final translated output? 

Thanks
James


--
View this message in context: http://antlr.1301665.n2.nabble.com/Getting-an-output-from-a-TreeWalker-and-String-Template-in-C-tp7243399p7243399.html
Sent from the ANTLR mailing list archive at Nabble.com.

From death.iron.bug at gmail.com  Wed Feb  1 08:13:09 2012
From: death.iron.bug at gmail.com (Iron Bug)
Date: Wed, 01 Feb 2012 22:13:09 +0600
Subject: [antlr-interest] Problem when using scopes in C with ANTLR 3.4
In-Reply-To: <mailman.1.1302462002.6989.antlr-interest@antlr.org>
References: <mailman.1.1302462002.6989.antlr-interest@antlr.org>
Message-ID: <1328112789.3519.8.camel@Belial.38-245-62.FTTH.rus-com.net>

Greetings, everybody!

I have found a problem with C code generation in ANTLR 3.4 (I used pure
3.4 from standard downloads).

A simple grammar (just to show the problem):

//////////////////////////////////////////////////////////////////////
grammar test;

options
{
  language		= C;
}

scope GlobalScope
{
	int scope;
}

@header 
{
#include "antlr3.h"
}

command 
scope GlobalScope;
@init
{
	$GlobalScope::scope = 10;
}
	:
	VALUE	
	;

VALUE
	:	('0'..'9')+ 
	;
	
/////////////////////////////////////////////////////////////////
The grammar produces code with error in generated file testParser.c,
line 321:

SCOPE_TOP(GlobalScope) =
(ptestParser_GlobalScope_SCOPE)(ctx->ptestParser_GlobalScopeStack->get(ctx->, ctx->ptestParser_GlobalScopeStack_limit - 1));

(the ctx with reference to nowhere in the first parameter of get()).
It goes all right in 3.3, though. Have I missed some changes in 3.4 or
is this a bug?

Sincerely, Yana A. Kireyonok


From gonzague.reydet at gmail.com  Wed Feb  1 08:50:15 2012
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Wed, 1 Feb 2012 17:50:15 +0100
Subject: [antlr-interest] Problem when using scopes in C with ANTLR 3.4
In-Reply-To: <1328112789.3519.8.camel@Belial.38-245-62.FTTH.rus-com.net>
References: <mailman.1.1302462002.6989.antlr-interest@antlr.org>
	<1328112789.3519.8.camel@Belial.38-245-62.FTTH.rus-com.net>
Message-ID: <CAHHXKCa25zWMiZy_3KdkpHpNdy=MDCL87VJqjH5S9VTsFgCDjA@mail.gmail.com>

Hi!

See the following thread: http://antlr.markmail.org/thread/kq766wc2mbzuji2u
It is a bug in the C target generation template. I worked around this issue
applying a hotfix in the C.stg file contained in the antlr jar.
I don't know if Jim already treated this issue in antlr source tree.

Regards,
Gonzague

2012/2/1 Iron Bug <death.iron.bug at gmail.com>

> Greetings, everybody!
>
> I have found a problem with C code generation in ANTLR 3.4 (I used pure
> 3.4 from standard downloads).
>
> A simple grammar (just to show the problem):
>
> //////////////////////////////////////////////////////////////////////
> grammar test;
>
> options
> {
>  language              = C;
> }
>
> scope GlobalScope
> {
>        int scope;
> }
>
> @header
> {
> #include "antlr3.h"
> }
>
> command
> scope GlobalScope;
> @init
> {
>        $GlobalScope::scope = 10;
> }
>        :
>        VALUE
>        ;
>
> VALUE
>        :       ('0'..'9')+
>        ;
>
> /////////////////////////////////////////////////////////////////
> The grammar produces code with error in generated file testParser.c,
> line 321:
>
> SCOPE_TOP(GlobalScope) =
> (ptestParser_GlobalScope_SCOPE)(ctx->ptestParser_GlobalScopeStack->get(ctx->,
> ctx->ptestParser_GlobalScopeStack_limit - 1));
>
> (the ctx with reference to nowhere in the first parameter of get()).
> It goes all right in 3.3, though. Have I missed some changes in 3.4 or
> is this a bug?
>
> Sincerely, Yana A. Kireyonok
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Feb  1 09:44:35 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 1 Feb 2012 09:44:35 -0800
Subject: [antlr-interest] Problem when using scopes in C with ANTLR 3.4
In-Reply-To: <1328112789.3519.8.camel@Belial.38-245-62.FTTH.rus-com.net>
References: <mailman.1.1302462002.6989.antlr-interest@antlr.org>
	<1328112789.3519.8.camel@Belial.38-245-62.FTTH.rus-com.net>
Message-ID: <925a0f887af63d893b9b301e4f135976@mail.gmail.com>

Could well be a bug - when 3.4 changed template engines there were updates
to the templates and I am beginning to feel that we did not test it quite
well enough. I have added it to the list. I have fixed one or two other
small template items and have a fix to find for tree rewriting templates
too. I will discuss with Ter as to a reasonable time for a 3.4 bug fix
release.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Iron Bug
> Sent: Wednesday, February 01, 2012 8:13 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem when using scopes in C with ANTLR 3.4
>
> Greetings, everybody!
>
> I have found a problem with C code generation in ANTLR 3.4 (I used pure
> 3.4 from standard downloads).
>
> A simple grammar (just to show the problem):
>
> //////////////////////////////////////////////////////////////////////
> grammar test;
>
> options
> {
>   language		= C;
> }
>
> scope GlobalScope
> {
> 	int scope;
> }
>
> @header
> {
> #include "antlr3.h"
> }
>
> command
> scope GlobalScope;
> @init
> {
> 	$GlobalScope::scope = 10;
> }
> 	:
> 	VALUE
> 	;
>
> VALUE
> 	:	('0'..'9')+
> 	;
>
> /////////////////////////////////////////////////////////////////
> The grammar produces code with error in generated file testParser.c,
> line 321:
>
> SCOPE_TOP(GlobalScope) =
> (ptestParser_GlobalScope_SCOPE)(ctx->ptestParser_GlobalScopeStack-
> >get(ctx->, ctx->ptestParser_GlobalScopeStack_limit - 1));
>
> (the ctx with reference to nowhere in the first parameter of get()).
> It goes all right in 3.3, though. Have I missed some changes in 3.4 or
> is this a bug?
>
> Sincerely, Yana A. Kireyonok
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From danialcibar at gmail.com  Wed Feb  1 10:45:02 2012
From: danialcibar at gmail.com (=?ISO-8859-1?Q?Daniel_Alc=EDbar?=)
Date: Wed, 1 Feb 2012 19:45:02 +0100
Subject: [antlr-interest] Attributes and other ingformation management
Message-ID: <CADxqOZXZXFZHGqxu4H751a-qNZqZXbCqbP0_Tr8iJQTv8DR2NA@mail.gmail.com>

First of all, excuse me for my English. I am  finishing my Final Year
Project and I need your help. I want to know how I can access to the "a
token information" of a rule from another second rule. I know that for
attributes declared in "scope" I can acceed to the infomation as follows:

variable = $rule:: attributes;

But if the information that interests me is in the AST tree of a rule,
example:

rule:
//code
^ (^ DECL_VAR_ARR (var_name a = IDENT) ^ (LENGTH expr))
//more code
;

I need to know how to access the contents of "expr" from another rule. This
is an integer, but I need to handle it in another second rule.

Thank you very much.

From death.iron.bug at gmail.com  Wed Feb  1 13:28:31 2012
From: death.iron.bug at gmail.com (Iron Bug)
Date: Thu, 02 Feb 2012 03:28:31 +0600
Subject: [antlr-interest] Problem when using scopes in C with ANTLR 3.4
In-Reply-To: <mailman.1.1328126404.21527.antlr-interest@antlr.org>
References: <mailman.1.1328126404.21527.antlr-interest@antlr.org>
Message-ID: <1328131711.3519.22.camel@Belial.38-245-62.FTTH.rus-com.net>

The bug fix, offered by Gonzague,
( http://antlr.markmail.org/thread/kq766wc2mbzuji2u )
worked for my issue. I just edited the typo in C.stg and now it
generates the right code.
So it may be considered as known bug.

I didn't find any other problems in 3.4 yet, although I have quite large
parsers, generated by ANTLR in C. and I also use them in C++ projects,
compiling as CPP source. I adopt them for C++, using pointers to class
instances in scopes. no problems occured since. just this little bug
that found when I switched to 3.4.

Sincerely, Yana A. Kireyonok


From ronburk at gmail.com  Wed Feb  1 13:49:08 2012
From: ronburk at gmail.com (Ron Burk)
Date: Wed, 1 Feb 2012 13:49:08 -0800
Subject: [antlr-interest] Language Design
In-Reply-To: <CANSf4X7FLsnQPWC+NHX4jjq4oKDQNwV_6MEmH_SZ7aPcY-964w@mail.gmail.com>
References: <CANSf4X7FLsnQPWC+NHX4jjq4oKDQNwV_6MEmH_SZ7aPcY-964w@mail.gmail.com>
Message-ID: <CAEVkYxfPxRn71+oMoqG4dSB9sX7DsR9dUF4RhNZNRjTXNvoa=g@mail.gmail.com>

"And some things that should not have been forgotten were lost."

     http://lambda-the-ultimate.org/classic/message2011.html

From stefika at gmail.com  Wed Feb  1 15:17:59 2012
From: stefika at gmail.com (Andreas Stefik)
Date: Wed, 1 Feb 2012 17:17:59 -0600
Subject: [antlr-interest] Language Design
In-Reply-To: <CAEVkYxfPxRn71+oMoqG4dSB9sX7DsR9dUF4RhNZNRjTXNvoa=g@mail.gmail.com>
References: <CANSf4X7FLsnQPWC+NHX4jjq4oKDQNwV_6MEmH_SZ7aPcY-964w@mail.gmail.com>
	<CAEVkYxfPxRn71+oMoqG4dSB9sX7DsR9dUF4RhNZNRjTXNvoa=g@mail.gmail.com>
Message-ID: <CABiHOJnLQHA-qoe=XLfzZdvyrkbiR_T5v5b9UG0Or750fcqj5Q@mail.gmail.com>

Hi Dave,

Are you looking for information on how to make language's usable to
humans, or more technical content? If the former, I could point you to
some very recent academic literature on the topic, including some of
my own. If the latter, sources like the Dragon book are invaluable, as
you already know, although it's more algorithmic than design related.
If the former, it turns out to be the case that word and syntax choice
can make a truly huge differences to novices trying to get "out of the
gate" with your language. Here's one of my recent papers on that:
http://www.cs.siue.edu/~astefik/papers/StefikPlateau2011.pdf

Similarly, there are a number of papers out by the CMU group on
natural programming: http://www.cs.cmu.edu/~NatProg/ That work isn't
all about programming languages, really, but there is a few papers in
there on API design that might be relevant for you (many by Jeff
Stylos). Also, when it comes to usability of type systems, or whether
not you should include aspect-oriented features, Stefan Hanenberg's
work is highly relevant.

Anyway, I don't know if that helps, as it's more on the language
usability side (if that is a consideration for you), but there are
some thoughts,

Stefik



On Wed, Feb 1, 2012 at 3:49 PM, Ron Burk <ronburk at gmail.com> wrote:
> "And some things that should not have been forgotten were lost."
>
> ? ? http://lambda-the-ultimate.org/classic/message2011.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From cristian.tarsoaga at gmail.com  Thu Feb  2 03:53:11 2012
From: cristian.tarsoaga at gmail.com (=?ISO-8859-2?Q?Cristian_T=E2r=BAoag=E3?=)
Date: Thu, 2 Feb 2012 13:53:11 +0200
Subject: [antlr-interest] reusing parser/lexer
Message-ID: <CAA07yUhz=uG8UMH=iyrr4EWvH69F9qYBgtaFAfRhOzgkjw28JA@mail.gmail.com>

Hi everybody,

I have a simple question: is it possible to reuse both a lexer and a parser
into some other grammar file?
I know that lexer rules can be accessed in a different grammar file by
using tokenVocab option

What happens if I have not just lexer but also parser rules that are common
to multiple grammars?
Putting all rules in one file is not feasible, it would become a too
large/complex file.


Thanks,
Chris

From cristian.tarsoaga at gmail.com  Thu Feb  2 04:24:41 2012
From: cristian.tarsoaga at gmail.com (=?ISO-8859-2?Q?Cristian_T=E2r=BAoag=E3?=)
Date: Thu, 2 Feb 2012 14:24:41 +0200
Subject: [antlr-interest] reusing parser/lexer
In-Reply-To: <CAA07yUhz=uG8UMH=iyrr4EWvH69F9qYBgtaFAfRhOzgkjw28JA@mail.gmail.com>
References: <CAA07yUhz=uG8UMH=iyrr4EWvH69F9qYBgtaFAfRhOzgkjw28JA@mail.gmail.com>
Message-ID: <CAA07yUjzciBcJfF76q1QKzH_kEkUJMsTMfugDARw10sHQSQDoA@mail.gmail.com>

I guess this is the answer...

http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars

thanks

2012/2/2 Cristian T?r?oag? <cristian.tarsoaga at gmail.com>

> Hi everybody,
>
> I have a simple question: is it possible to reuse both a lexer and a
> parser into some other grammar file?
> I know that lexer rules can be accessed in a different grammar file by
> using tokenVocab option
>
> What happens if I have not just lexer but also parser rules that are
> common to multiple grammars?
> Putting all rules in one file is not feasible, it would become a too
> large/complex file.
>
>
> Thanks,
> Chris
>

From ramadevi.java at gmail.com  Thu Feb  2 04:37:45 2012
From: ramadevi.java at gmail.com (Rama Devi)
Date: Thu, 2 Feb 2012 18:07:45 +0530
Subject: [antlr-interest] Need help to show error line numbers
Message-ID: <CAJoZY+89Kb8aXs0ctu4OzV5kKF+Ds6NLgQHRFa-dwy=dJx=OEg@mail.gmail.com>

Hi,


My .g file contains the following code, but it is not returning the error
line number and always shows as 1.  Please find below code and help me out
in finding the bug and generate correct line number.


Regards
Rama.

.g file code
========

@lexer::members {
    public boolean success = true;
    public Vector<ValidationError> errors = new Vector<ValidationError>();

    @Override
    public void reportError(RecognitionException exc) {
        success = false;
        String[] tokenNames = this.getTokenNames();
        String errorMessage = this.getErrorMessage(exc, tokenNames);

        ValidationError _valError = new ValidationError();
        _valError.setDescription(errorMessage);
        _valError.setCharacterPosition(exc.charPositionInLine == 0 ?
exc.charPositionInLine + 1 : exc.charPositionInLine);
        _valError.setLineNumber(exc.line == 0 ? exc.line + 1 :
exc.line);
        errors.add(_valError);
    }
}

@members {
    public boolean success = true;
    public Vector<ValidationError> errors = new Vector<ValidationError>();

    protected void AddError(RecognitionException exc)
    {
        success = false;
        String[] tokenNames = this.getTokenNames();
        String errorMessage = this.getErrorMessage(exc, tokenNames);

        ValidationError _valError = new ValidationError();
        _valError.setDescription(errorMessage);
        _valError.setCharacterPosition(exc.charPositionInLine == 0 ?
exc.charPositionInLine + 1 : exc.charPositionInLine);
        _valError.setLineNumber(exc.line == 0 ? exc.line + 1 :
exc.line);
        errors.add(_valError);
    }

    public void displayRecognitionError(String[] tokenNames,
RecognitionException exc)
    {
        success = false;
        String errorMessage = this.getErrorMessage(exc, tokenNames);

        ValidationError _valError = new ValidationError();
        _valError.setDescription(errorMessage);
        _valError.setCharacterPosition(exc.charPositionInLine == 0 ?
exc.charPositionInLine + 1 : exc.charPositionInLine);
        _valError.setLineNumber(exc.line == 0 ? exc.line + 1 : exc.line);
        errors.add(_valError);
    }

    protected void Evaluate(Evaluator eval, int line, int pos, String text)
    {
        try
        {
            ValidationError _valError = eval.evaluate();
            String _errDescription = _valError.getDescription();
              if (_errDescription.length() > 0) {
                  success = false;
                  _valError.setLineNumber(line);
                  _valError.setCharacterPosition(pos);
                  _valError.setExcerpt(text);
                  errors.add(_valError);
              }
        }
        catch (Exception exc)
        {
            success = false;
            ValidationError _valError = new ValidationError();
            _valError.setDescription(exc.getMessage());
            errors.add(_valError);
        }
    }
}

callingProtocol
    :    (connectBlock | messageBlock)+
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

connectBlock
    :    CONNECT
            protocolBlock*
        ENDCONNECT
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

messageBlock
    :    MESSAGE messageOptions (',' messageOptions)*
            (OUTGOING | BACKLOGGED)?
            protocolBlock*
        ENDMESSAGE
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

protocolBlock
    :    protocolStatement |
        commandStatement |
        getStatement |
        greetingStatement |
        listenStatement |
        menuStatement |
        setAnalysisStatement |
        logStatement |
        waitStatement
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

messageOptions
    :    ACKED |
        ALL |
        ALL SERVICE |
        SERVICE i1=INTEGER |
        ARRIVAL '>' |
        ARRIVED |
        CLEAR '>' |
        CLOSED '>' |
        TICKET '>' |
        INITIAL |
        TIMER i2=INTEGER
        {
            Evaluator eval = new RangeEvaluator("Message Service",
$i1.text, "2", "8");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);

            eval = new RangeEvaluator("Message Timer", $i2.text, "1", "9");
            Evaluate(eval, $i2.line, $i2.pos, $i2.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

commandStatement
    :    dialStatement |
        sayStatement |
        sendStatement |
        sharedDirectoryOptions
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

dialStatement
    :    DIAL dialOptions
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

dialOptions
    :    STRING_LITERAL |
        CONTACTID contactIdOptions |
        DISPATCHERPHONE |
        extensionStatement |
        ID i1=INTEGER |
        PHONE |
        PREFIX |
        STATUSCODE |
        SUFFIX |
        TICKET |
        WORKREQ STRING_LITERAL
        {
            Evaluator eval = new RangeEvaluator("Dial ID", $i1.text, "1",
"4");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

contactIdOptions
    :    CALLED |
        REFERENCED |
        STRING_LITERAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

waitParm
    :    WAIT '=' w1=WAITPARM
        {
            Evaluator eval = new WaitTicksEvaluator($w1.text);
            Evaluate(eval, $w1.line, $w1.pos, $w1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

getStatement
    :    GET getOptions ','
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

getOptions
    :    CONTACTLOGIN |
        PASSWORD |
        STRING_LITERAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

greetingStatement
    :    GREETING waitParm
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

listenStatement
    :    LISTEN
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

menuStatement
    :    MENU
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

protocolStatement
    :    PROTOCOL INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

sayStatement
    :    SAY sayOptions
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

sayOptions
    :    ADDRESS |
        BACKLOGGED |
        STRING_LITERAL |
        COMMON INTEGER |
        CONDITION |
        CONTACT (contactIdOptions)? |
        CUSTOM INTEGER |
        extensionStatement |
        ID i1=INTEGER |
        phoneStatement |
        REFERENCE |
        START |
        STATUS |
        TICKET
        {
            Evaluator eval = new RangeEvaluator("Say ID", $i1.text, "1",
"4");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

sendStatement
    :    SEND sendOptions
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

sendOptions
    :    STRING_LITERAL |
        ADDRESS i1=INTEGER |
        CONTACT contactIdOptions |
        CONTACTID contactIdOptions |
        DISPATCHERPHONE |
        extensionStatement |
        i2=ID INTEGER |
        phoneStatement |
        STATUS |
        STATUSCODE |
        TICKET |
        WORKREQ STRING_LITERAL |
        WORKREQDESC
        {
            Evaluator eval = new RangeEvaluator("Send Address", $i1.text,
"1", "2");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);

            eval = new RangeEvaluator("Send ID", $i2.text, "1", "4");
            Evaluate(eval, $i2.line, $i2.pos, $i2.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

extensionStatement
    :    EXTENSION (i1=INTEGER)? (',' CONTACT '=' contactIdOptions)?
        {
            Evaluator eval = new RangeEvaluator("Say Extension", $i1.text,
"1", "3");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

phoneStatement
    :    PHONE i1=INTEGER (',' CONTACT '=' contactIdOptions)?
        {
            Evaluator eval = new RangeEvaluator("Say Phone", $i1.text, "1",
"3");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

setAnalysisStatement
    :    SET ANALYSIS (CONTACT | INTEGER)
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

logStatement
    :    LOG INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

waitStatement
    :    WAIT waitParm
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

numIdent
    :    (INTEGER | IDENT)+
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

relation
    : ('=' | '!=' | '<' | '<=' | '>=' | '>')
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

sharedDirectoryOptions
    :    ifStatement |
        whileLoop |
        fileCloseStatement |
        fileCreateStatement |
        fileDeleteStatement |
        fileMoveStatement |
        fileNameRetrieveStatement |
        fileOpenFirstStatement |
        fileOpenNextStatement |
        fileReadDecalStatement |
        fileReadRemoteStatement |
        fileWriteStatement |
        fileWriteDataStatement |
        fileWriteDecalStatement |
        logDispatchStatement |
        logFailureStatement |
        logSuccessStatement |
        setFilepathStatement |
        readStatement |
        recformStatement |
        generateStatusStatement
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

recformStatement
    :    RECFORM INTEGER (',' PARM '=' p1=INTEGER)? (',' USE '=' PARMS)?
        {
            Evaluator eval = new ParmEvaluator($p1.text);
            Evaluate(eval, $p1.line, $p1.pos, $p1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

readStatement
    :    READ PARM '=' p1=INTEGER ',' ROW '=' r1=INTEGER ',' COL '='
c1=INTEGER ',' LEN '=' l1=INTEGER
        {
            Evaluator eval = new ParmEvaluator($p1.text);
            Evaluate(eval, $p1.line, $p1.pos, $p1.text);

            eval = new RangeEvaluator("Row", $r1.text, "1", "255");
            Evaluate(eval, $r1.line, $r1.pos, $r1.text);

            eval = new RangeEvaluator("Col", $c1.text, "1", "255");
            Evaluate(eval, $c1.line, $c1.pos, $c1.text);

            eval = new RangeEvaluator("Len", $l1.text, "1", "255");
            Evaluate(eval, $l1.line, $l1.pos, $l1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileCreateStatement
    :    FILECREATE UNIQUE i1=INTEGER
        {
            Evaluator eval = new RangeEvaluator("FileCreate Unique",
$i1.text, "1", "5");
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileCloseStatement
    :    FILECLOSE
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileDeleteStatement
    :    FILEDELETE
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileMoveStatement
    :    f=FILEMOVE i1=STRING_LITERAL
        {
            Evaluator eval = new FilepathEvaluator($i1.text);
            Evaluate(eval, $f.line, $f.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileNameRetrieveStatement
    :    FILENAMERETRIEVE PARM '=' i1=INTEGER
        {
            Evaluator eval = new ParmEvaluator($i1.text);
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileOpenFirstStatement
    :    FILEOPENFIRST STRING_LITERAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileOpenNextStatement
    :    FILEOPENNEXT
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileReadDecalStatement
    :    FILEREADDECAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileReadRemoteStatement
    :    FILEREADREMOTE
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileWriteStatement
    :    FILEWRITE STRING_LITERAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileWriteDataStatement
    :    f1=FILEWRITEDATA '\"' s1=numIdent? '\"'
        {
            Evaluator eval = new ParmSubstitutionEvaluator($s1.text);
            Evaluate(eval, $f1.line, $f1.pos, $s1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileWriteDecalStatement
    :    FILEWRITEDECAL
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

generateStatusStatement
    :    GENERATESTATUS STRING_LITERAL (',' ID '=' STRING_LITERAL)?
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

logDispatchStatement
    :    LOGDISPATCH
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

logFailureStatement
    :    LOGFAILURE
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

logSuccessStatement
    :    LOGSUCCESS
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

setFilepathStatement
    :    SET FILEPATH i1=STRING_LITERAL
        {
            Evaluator eval = new FilepathEvaluator($i1.text);
            Evaluate(eval, $i1.line, $i1.pos, $i1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

expression
    :    fileDateTime |
        fileResult |
        fileSize |
        recformResult |
        strcmpResult |
        systemDateTime |
        valcmpResult
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

conditionalStatement
    :    '('? expression (mathematical expression)* ')'?
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

ifStatement
    :    IF conditionalStatement
            protocolBlock*
        (ELSEIF
            protocolBlock*)*
        (ELSE
            protocolBlock*)?
        ENDIF
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

mathematical
    :    AND |
        OR |
        '*' |
        '/' |
        '+' |
        '-'
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

whileLoop
    :    LOOP WHILE conditionalStatement+ ',' MAXTIME '=' t1=WAITPARM
            protocolBlock*
        ENDLOOP
        {
            Evaluator eval = new MaxTimeEvaluator($t1.text);
            Evaluate(eval, $t1.line, $t1.pos, $t1.text);
        }
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileDateTime
    :    FILEDATETIME relation INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileResult
    :    FILERESULT relation INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

fileSize
    :    FILESIZE relation INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

recformResult
    :    RECFORMRESULT relation INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

strcmpResult
    :    STRCMPRESULT relation (TRUE | FALSE)
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

systemDateTime
    :    SYSTEMDATETIME relation INTEGER
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

valcmpResult
    :    VALCMPRESULT relation (TRUE | FALSE)
    ;
    catch [RecognitionException ex] {
        AddError(ex);
    }

SET: ('s' | 'S')('e' | 'E')('t'| 'T');
ANALYSIS: ('a' | 'A')('n' | 'N')('a' | 'A')('l' | 'L')('y' | 'Y')('s' |
'S')('i' | 'I')('s' | 'S');
SEND: ('s' | 'S')('e' | 'E')('n' | 'N')('d' | 'D');
START: ('s' | 'S')('t'| 'T')('a' | 'A')('r' | 'R')('t'| 'T');
CUSTOM: ('c' | 'C')('u' | 'U')('s' | 'S')('t'| 'T')('o' | 'O')('m' | 'M');
CONDITION: ('c' | 'C')('o' | 'O')('n' | 'N')('d' | 'D')('i' | 'I')('t'|
'T')('i' | 'I')('o' | 'O')('n' | 'N');
COMMON: ('c' | 'C')('o' | 'O')('m' | 'M')('m' | 'M')('o' | 'O')('n' | 'N');
ADDRESS: ('a' | 'A')('d' | 'D')('d' | 'D')('r' | 'R')('e' | 'E')('s' |
'S')('s' | 'S');
SAY: ('s' | 'S')('a' | 'A')('y' | 'Y');
PROTOCOL: ('p' | 'P')('r' | 'R')('o' | 'O')('t'| 'T')('o' | 'O')('c' |
'C')('o' | 'O')('l' | 'L');
MENU: ('m' | 'M')('e' | 'E')('n' | 'N')('u' | 'U');
LISTEN: ('l' | 'L')('i' | 'I')('s' | 'S')('t'| 'T')('e' | 'E')('n' | 'N');
GREETING: ('g' | 'G')('r' | 'R')('e' | 'E')('e' | 'E')('t'| 'T')('i' |
'I')('n' | 'N')('g' | 'G');
RETRIESPARM: '/' INTEGER;
PASSWORD: ('p' | 'P')('a' | 'A')('s' | 'S')('s' | 'S')('w' | 'W')('o' |
'O')('r' | 'R')('d' | 'D');
WAITPARM: INTEGER ':' INTEGER ('.' INTEGER)? (RETRIESPARM)?;
WAIT: ('w' | 'W')('a' | 'A')('i' | 'I')('t' | 'T');
CONTACT: ('c' | 'C')('o' | 'O')('n' | 'N')('t' |'T')('a' | 'A')('c' |
'C')('t'| 'T');
LOGIN: ('l' | 'L')('o' | 'O')('g' | 'G')('i' | 'I')('n' | 'N');
CONTACTLOGIN: CONTACT LOGIN;
GET: ('g' | 'G')('e' | 'E')('t' | 'T');
WORKREQ: ('w' | 'W')('o' | 'O')('r' | 'R')('k' | 'K')('r' | 'R')('e' |
'E')('q' | 'Q');
WORKREQDESC: ('w' | 'W')('o' | 'O')('r' | 'R')('k' | 'K')('r' | 'R')('e' |
'E')('q' | 'Q')('d' | 'D')('e' | 'E')('s' | 'S')('c' | 'C');
SUFFIX: ('s' | 'S')('u' | 'U')('f' | 'F')('f' | 'F')('i' | 'I')('x' | 'X');
STATUS: ('s' | 'S')('t' | 'T')('a' | 'A')('t' | 'T')('u' | 'U')('s' | 'S');
STATUSCODE: STATUS ('c' | 'C')('o' | 'O')('d' | 'D')('e' | 'E');
PREFIX: ('p' | 'P')('r' | 'R')('e' | 'E')('f' | 'F')('i' | 'I')('x' | 'X');
ID: ('i' | 'I')('d' | 'D');
EXTENSION: ('e' | 'E')('x' | 'X')('t' | 'T')('e' | 'E')('n' | 'N')('s' |
'S')('i' | 'I')('o' | 'O')('n' | 'N');
PHONE: ('p' | 'P')('h' | 'H')('o' | 'O')('n' | 'N')('e' | 'E');
DISPATCHERPHONE: ('d' | 'D')('i' | 'I')('s' | 'S')('p' | 'P')('a' |'A')('t'
| 'T')('c' | 'C')('h' | 'H')('e' | 'E')('r' |'R')PHONE;
REFERENCE: ('r' | 'R')('e' | 'E')('f' | 'F')('e' | 'E')('r' | 'R')('e' |
'E')('n' | 'N')('c' | 'C')('e' | 'E');
REFERENCED: ('r' | 'R')('e' | 'E')('f' | 'F')('e' | 'E')('r' | 'R')('e' |
'E')('n' | 'N')('c' | 'C')('e' | 'E')('d' | 'D');
CALLED: ('c' | 'C')('a' |'A')('l' | 'L')('l' | 'L')('e' | 'E')('d' | 'D');
CONTACTID: ('c' | 'C')('o' | 'O')('n' | 'N')('t' | 'T')('a' |'A')('c' |
'C')('t' | 'T')('i' | 'I')('d' | 'D');
DIAL: ('d' | 'D')('i' | 'I')('a' |'A')('l' | 'L');
ACKED: ('a' |'A')('c' | 'C')('k' | 'K')('e' | 'E')('d' | 'D');
ALL: ('a' |'A')('l' | 'L')('l' | 'L');
SERVICE: ('s' | 'S')('e' | 'E')('r' | 'R')('v' | 'V')('i' | 'I')('c' |
'C')('e' | 'E');
ARRIVAL: ('a' |'A')('r' | 'R')('r' | 'R')('i' | 'I')('v' | 'V')('a'
|'A')('l' | 'L');
ARRIVED: ('a' |'A')('r' | 'R')('r' | 'R')('i' | 'I')('v' | 'V')('e' |
'E')('d' | 'D');
CLEAR: ('c' | 'C')('l' | 'L')('e' | 'E')('a' |'A')('r' | 'R');
CLOSED: ('c' | 'C')('l' | 'L')('o' | 'O')('s' | 'S')('e' | 'E')('d' | 'D');
TICKET: ('t' | 'T')('i' | 'I')('c' | 'C')('k' | 'K')('e' | 'E')('t' | 'T');
INITIAL: ('i' | 'I')('n' | 'N')('i' | 'I')('t' | 'T')('i' | 'I')('a'
|'A')('l' | 'L');
TIMER: ('t' | 'T')('i' | 'I')('m' | 'M')('e' | 'E')('r' | 'R');
OUTGOING: ('o' | 'O')('u' | 'U')('t' | 'T')('g' | 'G')('o' | 'O')('i' |
'I')('n' | 'N')('g' | 'G');
BACKLOGGED: ('b' | 'B')('a' | 'A')('c' | 'C')('k' | 'K')('l' | 'L')('o' |
'O')('g' | 'G')('g' | 'G')('e' | 'E')('d' | 'D');
MESSAGE: ('m' | 'M')('e' | 'E')('s' | 'S')('s' | 'S')('a' | 'A')('g' |
'G')('e' | 'E');
ENDMESSAGE: END MESSAGE;
CONNECT: ('c' | 'C')('o' | 'O')('n' | 'N')('n' | 'N')('e' | 'E')('c' |
'C')('t' | 'T');
ENDCONNECT: END CONNECT;
END: ('e' | 'E')('n' | 'N')('d' | 'D');
LOG: ('l' | 'L')('o' | 'O')('g' | 'G');
FILE: ('f' | 'F')('i' | 'I')('l' | 'L')('e' | 'E');
CREATE: ('c' | 'C')('r' | 'R')('e' | 'E')('a' | 'A')('t' | 'T')('e' | 'E');
UNIQUE: ('u' | 'U')('n' | 'N')('i' | 'I')('q' | 'Q')('u' | 'U')('e' | 'E');
DATETIME: ('d' | 'D')('a' | 'A')('t' | 'T')('e' | 'E')('t' | 'T')('i' |
'I')('m' | 'M')('e' | 'E');
FILEDATETIME: FILE '.' DATETIME;
FILECREATE: FILE CREATE;
IF: ('i' | 'I')('f' | 'F');
ELSE: ('e' | 'E')('l' | 'L')('s' | 'S')('e' | 'E');
ELSEIF: ELSE IF;
ENDIF: END IF;
LOOP: ('l' | 'L')('o' | 'O')('o' | 'O')('p' | 'P');
WHILE: ('w' | 'W')('h' | 'H')('i' | 'I')('l' | 'L')('e' | 'E');
ENDLOOP: END LOOP;
MAXTIME: ('m' | 'M')('a' | 'A')('x' | 'X')('t' | 'T')('i' | 'I')('m' |
'M')('e' | 'E');
RESULT: ('r' | 'R')('e' | 'E')('s' | 'S')('u' | 'U')('l' | 'L')('t' | 'T');
FILERESULT: FILE '.' RESULT;
SIZE: ('s' | 'S')('i' | 'I')('z' | 'Z')('e' | 'E');
FILESIZE: FILE '.' SIZE;
RECFORM: ('r' | 'R')('e' | 'E')('c' | 'C')('f' | 'F')('o' | 'O')('r' |
'R')('m' | 'M');
RECFORMRESULT: RECFORM '.' RESULT;
STRCMP: ('s' | 'S')('t' | 'T')('r' | 'R')('c' | 'C')('m' | 'M')('p' | 'P');
STRCMPRESULT: STRCMP '.' RESULT;
SYSTEM: ('s' | 'S')('y' | 'Y')('s' | 'S')('t' | 'T')('e' | 'E')('m' | 'M');
SYSTEMDATETIME: SYSTEM '.' DATETIME;
TRUE: ('t' | 'T')('r' | 'R')('u' | 'U')('e' | 'E');
FALSE: ('f' | 'F')('a' | 'A')('l' | 'L')('s' | 'S')('e' | 'E');
VALCMP: ('v' | 'V')('a' | 'A')('l' | 'L')('c' | 'C')('m' | 'M')('p' | 'P');
VAL1: ('v' | 'V')('a' | 'A')('l' | 'L') '1';
VAL2: ('v' | 'V')('a' | 'A')('l' | 'L') '2';
VALCMPRESULT: VALCMP '.' RESULT;
PING: ('p' | 'P')('i' | 'I')('n' | 'N')('g' | 'G');
PINGRESULT: PING '.' RESULT;
CLOSE: ('c' | 'C')('l' | 'L')('o' | 'O')('s' | 'S')('e' | 'E');
FILECLOSE: FILE CLOSE;
DELETE: ('d' | 'D')('e' | 'E')('l' | 'L')('e' | 'E')('t' | 'T')('e' | 'E');
FILEDELETE: FILE DELETE;
READ: ('r' | 'R')('e' | 'E')('a' | 'A')('d' | 'D');
WRITE: ('w' | 'W')('r' | 'R')('i' | 'I')('t' | 'T')('e' | 'E');
MOVE: ('m' | 'M')('o' | 'O')('v' | 'V')('e' | 'E');
FILEMOVE: FILE MOVE;
NAME: ('n' | 'N')('a' | 'A')('m' | 'M')('e' | 'E');
RETRIEVE: ('r' | 'R')('e' | 'E')('t' | 'T')('r' | 'R')('i' | 'I')('e' |
'E')('v' | 'V')('e' | 'E');
FILENAMERETRIEVE: FILE NAME RETRIEVE;
OPEN: ('o' | 'O')('p' | 'P')('e' | 'E')('n' | 'N');
FIRST: ('f' | 'F')('i' | 'I')('r' | 'R')('s' | 'S')('t' | 'T');
FILEOPENFIRST: FILE OPEN FIRST;
NEXT: ('n' | 'N')('e' | 'E')('x' | 'X')('t' | 'T');
FILEOPENNEXT: FILE OPEN NEXT;
DECAL: ('d' | 'D')('e' | 'E')('c' | 'C')('a' | 'A')('l' | 'L');
FILEREADDECAL: FILE READ DECAL;
REMOTE: ('r' | 'R')('e' | 'E')('m' | 'M')('o' | 'O')('t' | 'T')('e' | 'E');
FILEREADREMOTE: FILE READ REMOTE;
FILEWRITE: FILE WRITE;
FILEWRITEDECAL: FILE WRITE DECAL;
DATA: ('d' | 'D')('a' | 'A')('t' | 'T')('a' | 'A');
FILEWRITEDATA: FILE WRITE DATA;
GENERATE: ('g' | 'G')('e' | 'E')('n' | 'N')('e' | 'E')('r' | 'R')('a' |
'A')('t' | 'T')('e' | 'E');
GENERATESTATUS: GENERATE STATUS;
DISPATCH: ('d' | 'D')('i' | 'I')('s' | 'S')('p' | 'P')('a' | 'A')('t' |
'T')('c' | 'C')('h' | 'H');
LOGDISPATCH: LOG DISPATCH;
FAILURE: ('f' | 'F')('a' | 'A')('i' | 'I')('l' | 'L')('u' | 'U')('r' |
'R')('e' | 'E');
LOGFAILURE: LOG FAILURE;
SUCCESS: ('s' | 'S')('u' | 'U')('c' | 'C')('c' | 'C')('e' | 'E')('s' |
'S')('s' | 'S');
LOGSUCCESS: LOG SUCCESS;
PATH: ('p' | 'P')('a' | 'A')('t' | 'T')('h' | 'H');
FILEPATH: FILE PATH;
PARM: ('p' | 'P')('a' | 'A')('r' | 'R')('m' | 'M');
PARMS: ('p' | 'P')('a' | 'A')('r' | 'R')('m' | 'M')('s' | 'S');
ROW: ('r' | 'R')('o' | 'O')('w' | 'W');
COL: ('c' | 'C')('o' | 'O')('l' | 'L');
LEN: ('l' | 'L')('e' | 'E')('n' | 'N');
USE: ('u' | 'U')('s' | 'S')('e' | 'E');
AND: ('a' | 'A')('n' | 'N')('d' | 'D');
OR: ('o' | 'O')('r' | 'R');

INTEGER : '0'..'9'+ ;
IDENT: (('0'..'9') | ('A'..'Z') | ('a'..'z') | '*' | '#' | '_' | '.' | '\\'
| '@' | ':')+;
STRING_LITERAL: '"' ~('"' | '\r' | '\n')* '"';
WS : (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;};
COMMENT : '\'' .* ('\n' | '\r') {$channel = HIDDEN;};

From opensource at peoplemerge.com  Thu Feb  2 14:26:03 2012
From: opensource at peoplemerge.com (Dave Thomas)
Date: Thu, 2 Feb 2012 17:26:03 -0500
Subject: [antlr-interest] Language Design
In-Reply-To: <CABiHOJnLQHA-qoe=XLfzZdvyrkbiR_T5v5b9UG0Or750fcqj5Q@mail.gmail.com>
References: <CANSf4X7FLsnQPWC+NHX4jjq4oKDQNwV_6MEmH_SZ7aPcY-964w@mail.gmail.com>
	<CAEVkYxfPxRn71+oMoqG4dSB9sX7DsR9dUF4RhNZNRjTXNvoa=g@mail.gmail.com>
	<CABiHOJnLQHA-qoe=XLfzZdvyrkbiR_T5v5b9UG0Or750fcqj5Q@mail.gmail.com>
Message-ID: <CANSf4X6rTpJGTczGnREQSrF97yFfa6=CBpUQ6tYx7b-3xdXQ4A@mail.gmail.com>

Exactly, it's the former point on how to make a language usable for humans,
to get "out of the gate," but provide building blocks for users to extend
too.

Thanks Andreas, Ron, and Ter!  I also read Martin Fowler's DSL book and he
has some general tips on API design.  With your help, I think I've got my
work cut out for me.

On Wed, Feb 1, 2012 at 6:17 PM, Andreas Stefik <stefika at gmail.com> wrote:

> Hi Dave,
>
> Are you looking for information on how to make language's usable to
> humans, or more technical content? If the former, I could point you to
> some very recent academic literature on the topic, including some of
> my own. If the latter, sources like the Dragon book are invaluable, as
> you already know, although it's more algorithmic than design related.
> If the former, it turns out to be the case that word and syntax choice
> can make a truly huge differences to novices trying to get "out of the
> gate" with your language. Here's one of my recent papers on that:
> http://www.cs.siue.edu/~astefik/papers/StefikPlateau2011.pdf
>
> Similarly, there are a number of papers out by the CMU group on
> natural programming: http://www.cs.cmu.edu/~NatProg/ That work isn't
> all about programming languages, really, but there is a few papers in
> there on API design that might be relevant for you (many by Jeff
> Stylos). Also, when it comes to usability of type systems, or whether
> not you should include aspect-oriented features, Stefan Hanenberg's
> work is highly relevant.
>
> Anyway, I don't know if that helps, as it's more on the language
> usability side (if that is a consideration for you), but there are
> some thoughts,
>
> Stefik
>
>
>
> On Wed, Feb 1, 2012 at 3:49 PM, Ron Burk <ronburk at gmail.com> wrote:
> > "And some things that should not have been forgotten were lost."
> >
> >     http://lambda-the-ultimate.org/classic/message2011.html
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cgitsis at gmail.com  Thu Feb  2 20:02:03 2012
From: cgitsis at gmail.com (Gitsis Christos)
Date: Fri, 3 Feb 2012 06:02:03 +0200
Subject: [antlr-interest] [ANTLR3C] how to create a C++ std::string from
	tokens
Message-ID: <CAHDzULK8vmB9ikNcYvn6omdq7JTJdTNqMjbR4U+6Sqn4cwQt+g@mail.gmail.com>

Hello,

I would like to use std::strings in my grammar. Actually I am already using
them, somehow like this:

website returns [std::string s]: STRING
  { /* TODO: remove reinterpret casts */
    $s = string(reinterpret_cast<const char*> ($text->chars));
  };

Surely there is a better way, and actually I have found (here:
http://antlr.markmail.org/message/4altudq2tagicz2z?q=std+string#query:std%20string+page:1+mid:7yok3nvtiqgekwec+state:results<https://webmail.uth.gr/horde/services/go.php?url=http%3A%2F%2Fantlr.markmail.org%2Fmessage%2F4altudq2tagicz2z%3Fq%3Dstd%2Bstring%23query%3Astd%2520string%2Bpage%3A1%2Bmid%3A7yok3nvtiqgekwec%2Bstate%3Aresults>
)
a message from Jim Idle implying that I must do it another way, but I would
like
someone to elaborate. His advice was:

"Get a token reference: mytok=TOKEN

Then create a factory method or a function or whatever that takes a token
pointer and creates your C++ string. Do not use the $text references as
these
will create ANTLR3_STRING that you don't need."

I tried this

website returns [std::string s]: strtoken=STRING
  {
    ANTLR3_MARKER c1 = $strtoken->start;
    ANTLR3_MARKER c2 = $strtoken->stop;
    /* ... ? */
  };

c1 and c2 seem to be long numbers, I cannot make much sense of them, nor of
antlr3c's source code. How to continue?

And could this method be generalized so as to receive the whole text
matched for
one rule, e.g.

dateTime : INT'/'INT'/'INT INT':'INT':'INT
  {
    string s = string(reinterpret_cast<const char*> ($text->chars));
    $timestamp::t = boost::posix_time::time_from_string(s);
  };

From jimi at temporal-wave.com  Thu Feb  2 20:20:41 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Feb 2012 20:20:41 -0800
Subject: [antlr-interest] [ANTLR3C] how to create a C++ std::string from
	tokens
In-Reply-To: <CAHDzULK8vmB9ikNcYvn6omdq7JTJdTNqMjbR4U+6Sqn4cwQt+g@mail.gmail.com>
References: <CAHDzULK8vmB9ikNcYvn6omdq7JTJdTNqMjbR4U+6Sqn4cwQt+g@mail.gmail.com>
Message-ID: <6b8f7850c3adc2340fb94a858434ccbf@mail.gmail.com>

They are not long numbers, they are pointers to memory the difference in
them gives the length in bytes (not always the same as characters).

Don't use the $text references :)

So you then have a helper method somewhere:

std::string tt(pANTLR3_BASE_TOKEN tok) {

// Get the pointers (note (pANTLR3_COMMON_TOKEN)(tok->super) points to the
default token type
// Make the std:string
// Return it

}

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gitsis Christos
> Sent: Thursday, February 02, 2012 8:02 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [ANTLR3C] how to create a C++ std::string
> from tokens
>
> Hello,
>
> I would like to use std::strings in my grammar. Actually I am already
> using them, somehow like this:
>
> website returns [std::string s]: STRING
>   { /* TODO: remove reinterpret casts */
>     $s = string(reinterpret_cast<const char*> ($text->chars));
>   };
>
> Surely there is a better way, and actually I have found (here:
> http://antlr.markmail.org/message/4altudq2tagicz2z?q=std+string#query:s
> td%20string+page:1+mid:7yok3nvtiqgekwec+state:results<https://webmail.u
> th.gr/horde/services/go.php?url=http%3A%2F%2Fantlr.markmail.org%2Fmessa
> ge%2F4altudq2tagicz2z%3Fq%3Dstd%2Bstring%23query%3Astd%2520string%2Bpag
> e%3A1%2Bmid%3A7yok3nvtiqgekwec%2Bstate%3Aresults>
> )
> a message from Jim Idle implying that I must do it another way, but I
> would like someone to elaborate. His advice was:
>
> "Get a token reference: mytok=TOKEN
>
> Then create a factory method or a function or whatever that takes a
> token pointer and creates your C++ string. Do not use the $text
> references as these will create ANTLR3_STRING that you don't need."
>
> I tried this
>
> website returns [std::string s]: strtoken=STRING
>   {
>     ANTLR3_MARKER c1 = $strtoken->start;
>     ANTLR3_MARKER c2 = $strtoken->stop;
>     /* ... ? */
>   };
>
> c1 and c2 seem to be long numbers, I cannot make much sense of them,
> nor of antlr3c's source code. How to continue?
>
> And could this method be generalized so as to receive the whole text
> matched for one rule, e.g.
>
> dateTime : INT'/'INT'/'INT INT':'INT':'INT
>   {
>     string s = string(reinterpret_cast<const char*> ($text->chars));
>     $timestamp::t = boost::posix_time::time_from_string(s);
>   };
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From asicaddress at gmail.com  Thu Feb  2 20:26:05 2012
From: asicaddress at gmail.com (A Z)
Date: Fri, 3 Feb 2012 10:26:05 +0600
Subject: [antlr-interest] [ANTLR3C] how to create a C++ std::string from
	tokens
In-Reply-To: <CAHDzULK8vmB9ikNcYvn6omdq7JTJdTNqMjbR4U+6Sqn4cwQt+g@mail.gmail.com>
References: <CAHDzULK8vmB9ikNcYvn6omdq7JTJdTNqMjbR4U+6Sqn4cwQt+g@mail.gmail.com>
Message-ID: <CAP86aOcUzbfaLrefSenk8WFM8dXWu+a_ZrBOhrN8RsJomPteHg@mail.gmail.com>

Using $strtoken will tell ANTLR to create pointer(pANTLR3_COMMON_TOKEN) to
the token specified. The fields start and stop are themselves pointers to
your input stream which you can cast to "const char *". Then you can use
something like

std::string ident((const char *)start,((const char *)stop+1)-(const char
*)start);

To get text for an entire rule there are two ways that I've used:
1. Get the start field from the first token and the stop field from the
last token. This will work inside the parser rule.
2. Assign to the rule to a variable in your grammar. When the rule return
ANTLR will create a struct containing the first and last tokens so you can
access them with something like:

some_rule :
  $var = sub_rule {ctx->some_function($var.start->start,$var.stop->stop);}
  ;


On Fri, Feb 3, 2012 at 10:02 AM, Gitsis Christos <cgitsis at gmail.com> wrote:

> Hello,
>
> I would like to use std::strings in my grammar. Actually I am already using
> them, somehow like this:
>
> website returns [std::string s]: STRING
>  { /* TODO: remove reinterpret casts */
>    $s = string(reinterpret_cast<const char*> ($text->chars));
>  };
>
> Surely there is a better way, and actually I have found (here:
>
> http://antlr.markmail.org/message/4altudq2tagicz2z?q=std+string#query:std%20string+page:1+mid:7yok3nvtiqgekwec+state:results
> <
> https://webmail.uth.gr/horde/services/go.php?url=http%3A%2F%2Fantlr.markmail.org%2Fmessage%2F4altudq2tagicz2z%3Fq%3Dstd%2Bstring%23query%3Astd%2520string%2Bpage%3A1%2Bmid%3A7yok3nvtiqgekwec%2Bstate%3Aresults
> >
> )
> a message from Jim Idle implying that I must do it another way, but I would
> like
> someone to elaborate. His advice was:
>
> "Get a token reference: mytok=TOKEN
>
> Then create a factory method or a function or whatever that takes a token
> pointer and creates your C++ string. Do not use the $text references as
> these
> will create ANTLR3_STRING that you don't need."
>
> I tried this
>
> website returns [std::string s]: strtoken=STRING
>  {
>    ANTLR3_MARKER c1 = $strtoken->start;
>    ANTLR3_MARKER c2 = $strtoken->stop;
>    /* ... ? */
>  };
>
> c1 and c2 seem to be long numbers, I cannot make much sense of them, nor of
> antlr3c's source code. How to continue?
>
> And could this method be generalized so as to receive the whole text
> matched for
> one rule, e.g.
>
> dateTime : INT'/'INT'/'INT INT':'INT':'INT
>  {
>    string s = string(reinterpret_cast<const char*> ($text->chars));
>    $timestamp::t = boost::posix_time::time_from_string(s);
>  };
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Fri Feb  3 06:17:29 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 3 Feb 2012 22:17:29 +0800
Subject: [antlr-interest] Reporting a bug in C grammar
Message-ID: <CAHMh4-b3Jgtr6LYM90htihc+shG505gMi1501NMNqrr0BwQN-w@mail.gmail.com>

Hi,
   I am referring to antlr 3.4 C runtime. In antlr3tokenstream.c, on line
750, there are some lines like this.

*if  (   types == NULL*
* || types->isMember(types, tok->getType(tok) == ANTLR3_TRUE)*
*    )*

I think this should be changed to something like this.
*if  (    types == NULL*
* || (types->isMember(types, tok->getType(tok)) == ANTLR3_TRUE)*
*     )*
*
*
Thanks,
Gokul.

From plasticfridge at googlemail.com  Fri Feb  3 06:38:46 2012
From: plasticfridge at googlemail.com (Jonathan Roberts)
Date: Fri, 3 Feb 2012 14:38:46 +0000
Subject: [antlr-interest] C# target debugging issues
Message-ID: <CAC9gNVX_ZBCO62ES3bVM5GX0y2Fhf7J9-+0skWjV1pX4mWPtbw@mail.gmail.com>

All,



After some research on why I am struggling to get debugging working with
the Antlr C# target I ran into this post (About Antlr 3.3)



8< Snip



 Hi, i'm writing because i have some problems using Antlr 3.3, target

CSharp3 with -debug option.

Compile the attached grammar (taken from Antlr 3.3 examples)  with -debug,

ANTLR generates wrong C# code eg:



     * generates wrong class definition eg: public partial class Myclass

: DebugAntlr.Runtime.Parser instead of Antlr.Runtime.Debug.DebugParser

     * doesn't genrate static member decisionCanBacktrack

     * set the DebugListener readonly property in the constructor



Best Regards

Max





Hi Max,



The CSharp3 target does not currently support ANTLRWorks-style debugging.

I'm planning to support debugging in a future release of the target.



Thanks,

Sam Harwell



>8 End snip





I was just wondering if this had been fixed with the latest version or if
this is the source of my issues.



If it is, does anyone know of a workaround?



Cheers



Jon

From sam at tunnelvisionlabs.com  Fri Feb  3 08:58:10 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Fri, 3 Feb 2012 10:58:10 -0600
Subject: [antlr-interest] C# target debugging issues
In-Reply-To: <CAC9gNVX_ZBCO62ES3bVM5GX0y2Fhf7J9-+0skWjV1pX4mWPtbw@mail.gmail.com>
References: <CAC9gNVX_ZBCO62ES3bVM5GX0y2Fhf7J9-+0skWjV1pX4mWPtbw@mail.gmail.com>
Message-ID: <043c01cce295$033c9c10$09b5d430$@tunnelvisionlabs.com>

Hi Jon,

At this point I'm focused on ANTLR 4 aside from taking care of critical bugs
in ANTLR 3. ANTLR 4 will include a new form of debugging support that should
work very well across each of the targets.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Jonathan Roberts [mailto:plasticfridge at googlemail.com] 
Sent: Friday, February 03, 2012 8:39 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# target debugging issues

All,



After some research on why I am struggling to get debugging working with the
Antlr C# target I ran into this post (About Antlr 3.3)



8< Snip




From nicklarooy at hotmail.com  Fri Feb  3 11:47:06 2012
From: nicklarooy at hotmail.com (Nick La Rooy)
Date: Fri, 3 Feb 2012 19:47:06 +0000
Subject: [antlr-interest] Parse failing, not sure why
Message-ID: <COL123-W1830B2095D8F9D26A0491DC6710@phx.gbl>


I'm writing a grammar for Small-C. 

As far as I can tell, my grammar matches the language specification. 

ANTLR generates the Java code with no hiccups. 


However, in the interpreter, ANTLR does not seem to be matching rules that it could match, and instead is returning mismatch exceptions. 



Glaring example: 


Given: 

main()
{
    return 1;
}


The interpreter sends back: 

MismatchedTokenException: line 1:5 mismatched input ')' expecting '\u0016'


But this rule should match: 

main : MAIN LPAREN RPAREN body ;



What could be causing this?

Does rule declaration order make a difference?



Grammars are attached. 
 		 	   		  
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SmallCLexer.g
Type: application/octet-stream
Size: 1543 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120203/80a0e07c/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SmallCParser.g
Type: application/octet-stream
Size: 1185 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120203/80a0e07c/attachment-0001.obj 

From jimi at temporal-wave.com  Fri Feb  3 12:20:22 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 3 Feb 2012 12:20:22 -0800
Subject: [antlr-interest] Parse failing, not sure why
In-Reply-To: <COL123-W1830B2095D8F9D26A0491DC6710@phx.gbl>
References: <COL123-W1830B2095D8F9D26A0491DC6710@phx.gbl>
Message-ID: <6b61b9a96215864ac54e85385a8fcee1@mail.gmail.com>

Don't use the interpreter, use the debugger - you will likely have better
results.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Nick La Rooy
> Sent: Friday, February 03, 2012 11:47 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Parse failing, not sure why
>
>
> I'm writing a grammar for Small-C.
>
> As far as I can tell, my grammar matches the language specification.
>
> ANTLR generates the Java code with no hiccups.
>
>
> However, in the interpreter, ANTLR does not seem to be matching rules
> that it could match, and instead is returning mismatch exceptions.
>
>
>
> Glaring example:
>
>
> Given:
>
> main()
> {
>     return 1;
> }
>
>
> The interpreter sends back:
>
> MismatchedTokenException: line 1:5 mismatched input ')' expecting
> '\u0016'
>
>
> But this rule should match:
>
> main : MAIN LPAREN RPAREN body ;
>
>
>
> What could be causing this?
>
> Does rule declaration order make a difference?
>
>
>
> Grammars are attached.
>

From ramponjerome at yahoo.fr  Fri Feb  3 14:25:28 2012
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Fri, 3 Feb 2012 22:25:28 +0000 (GMT)
Subject: [antlr-interest] scope and composite grammar
Message-ID: <1328307928.5530.YahooMailNeo@web24710.mail.ird.yahoo.com>




Hi,


I did not find any data in markmail or antlr-interest on the following
and would appreciate any feedback, experiment


I split a large grammar in let 'say grammar TOP, A, B and lexer C
TOP import A, B and C

I wonder how scopes (or members) defined in TOP rules (or in TOP members) 

could be accessed in A or B ?
Is there one way to do it

-for TOP scopes ?
-for TOP members ?


Any idea to bypass or get some equivalent if not possible


Thanks

Jerome

From gokul007 at gmail.com  Fri Feb  3 21:17:46 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sat, 4 Feb 2012 13:17:46 +0800
Subject: [antlr-interest] Help required in writing the C++ Target
Message-ID: <CAHMh4-YaBZ82zhO1uaWVevN5LbK1kHXCZQ5sQLfwZnrq=f644g@mail.gmail.com>

Hi,
      As i have already mentioned in my one another email, i started
working on the C++ Target and i have almost completed things with writing
the runtime Cpp files. My question is:
a) Is there some standard procedure, i need to follow, to write a new
target? I mean, should i touch some Java files to make the code generator
know, that there is a c++ target existing?

I am going to take the C Target .stg file and play around with it to create
the C++ version. In the meanwhile, if someone can point me in some
direction, that can save some time for me, that would be great.

Thanks,
Gokul.

From jokeserver at gmail.com  Sat Feb  4 01:13:37 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sat, 4 Feb 2012 01:13:37 -0800
Subject: [antlr-interest] Antlr3.4 Python bugs, workarounds
In-Reply-To: <FE073D71-BB07-47D2-9473-DDADB3CCD3FB@cs.usfca.edu>
References: <CAN51Nt60R=9DF1+BWvsnMQShLE7GRpXmm5o30DnZ+KLZq8duUA@mail.gmail.com>
	<CAN51Nt4Dp7yMUSkNqYnrkMvthRB2p0UA4g4TB5DZhi-ywn0THA@mail.gmail.com>
	<CAE33G67XoyDyGcdL2YmsptmU0S_NyPfTHrb1zanA3Y0t8miDjA@mail.gmail.com>
	<CAN51Nt5aQTu1jqeXuCUhHYHXCy0Xsq00vgCB-BEWhjSqT5z8Qw@mail.gmail.com>
	<CAE33G642=9wHcY1ofj4UogteExF6a_91+eGxr7Nx70PUUs+q2g@mail.gmail.com>
	<FE073D71-BB07-47D2-9473-DDADB3CCD3FB@cs.usfca.edu>
Message-ID: <CAN51Nt5vJRget=-srr-O9x_OJ1-0-ogGH-5ET0juU=yHH_2xqQ@mail.gmail.com>

For reference, I believe I've found the culprit code. I was browsing
the antlr network on github and I came across this commit:
https://github.com/vslavik/antlr/commit/bbf349ab7d7ccb468604f95b28b08eefd694206f

ie. the code probably looked like:

<dfa.specialStateSTs:{state | \r\n
if s == <i0>: <! compressed special state numbers 0..n-1 !>
    <state>}; separator="\nel">

which caused a newline to be output before "if",
and I changed it to

<dfa.specialStateSTs:{state | \n
if s == <i0>: <! compressed special state numbers 0..n-1 !>
    <state>}; separator="\nel">

which fixed the issue for me,
and vslavik changed it to

<dfa.specialStateSTs:{state | if s == <i0>: <! compressed special
state numbers 0..n-1 !>
    <state>}; separator="\nel">

which apparently fixed the issue for him.

On Wed, Dec 28, 2011 at 2:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Dec 27, 2011, at 5:08 PM, Benjamin Niemann wrote:
>>> Hi Benjamin,
>>>
>>> I was meddling around with the stg templates for Python in trying to
>>> fix some other bugs I reported in another thread, and after updating
>>> the files in antlr-3.4-complete.jar this problem was alleviated.
>>>
>>> I narrowed down the diff and discovered that the stg templates in the
>>> original jar all had DOS line endings (that is, \r\n instead of just
>>> \n), and that removing all the carriage returns in
>>> org/antlr/codegen/templates/Python/Python.stg solved the issue of the
>>> elif being split across a newline.
>>>
>>> That certainly explains why it only showed in antlr-3.4-complete.jar,
>>> since the templates included with antlr-3.4.tar.gz did not have the
>>> carriage returns. :)
>>
>> Good catch, thanks a lot for figuring that out.
>> That seems like a bug in stringtemplate to me - I thought it was
>> smarter about dealing with line endings.
>>
>> Ter:
>> Was the jar built on a windows box?
>
> nope. mac os x.
>
>> I assume perforce adds the CRLFs
>> when checking out the files under windows - the files are stored as
>> "text", i.e. line endings are converted to the native system.
>
> that's correct i think.
>
>> Unless ST can be taught to deal with that properly, we could store the
>> templates as binary in the repository - but that could be messy when
>> someone actually wants to edit them under windows and it's hard to
>> notice when CRs creep back in.
>> Or avoid building jars on windows ;)
>> This probably affects other targets as well, but those are probably
>> less picky about some extra whitespace here and there. Could lead to
>> some obscure bugs though.
>
> ST emits proper newlines per platform and should read \r\n just like \n. ?BUT?apparently not ;) ?I'm adding to list to check ST v4 to see how it works.
>
> Ter

From gokul007 at gmail.com  Sat Feb  4 23:50:52 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 5 Feb 2012 15:50:52 +0800
Subject: [antlr-interest] My Progress on C++ Target
Message-ID: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>

Hi,
   I have completed the C++ Runtime, and right now i am working on the
String Template Cpp.stg. I have attached the entire runtime, but right now
i have just made sure things are compiling for a simple parser( not yet for
the tree parser ) in Windows. After i complete the Cpp.stg, i will check
out a simple run. Some logic behind some of the changes

a) As i have already said, there are no function pointers/ virtual
functions. This is completely written making use of the power of C++
templates. At the same time, i have kept a check on the compile times.
b) I have put the functional logic into the .inl file.
c) Right now i have made a GenericStreamTraits inside antlr3.h, to provide
a default implementation of all the templated parameters
d) I have changed all the types with ANTLR3_ into ANTLR_, as i have pulled
in everything inside antlr3 namespace.
e) I have removed the StringFactory and TokenFactory, as i feel they are
related to memory allocation optimization and can be easily solved with
providing a memory pool implementation. There are a lot of Pool
implementations available( Boost, Intel TBB, POCO etc). There are even
object specific pools available to be made use of.
f) I have tried to change all the void* members with some type, but still
not complete with it. Similarly, i feel i won't be able to get away with
all the C Style casts.
g) Regarding the Unicode stuff, i feel that we should make use of ICU
library(why replicate the effort?). But i have went ahead and converted all
that was in C Target, except the unicode conversion functions.
h) Tried to remove all the #defines and converted into enum and static
const variables
i) Memory allocation failures and file errors are handled with exceptions
in the default implementation(even std::vector and std::deque use
exceptions inside). So even if some overrides are provided for these, they
should throw exception and should not assume return value handling.
j) The Exception related to parsing and scanning are not using C++
exceptions. This is because there is try .. catch block setup for every
token being read in Java Target, which would be a performance problem in
C++.
k) A Keen observer can also find that some of the runtime errors have
become compile time errors in the C++ implementation.

For the files generated using Cpp.stg, i am trying to remove the macros and
the function pointers.

Any thoughts/suggestions?

Thanks,
Gokul.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cpp.7z
Type: application/octet-stream
Size: 86003 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120205/a78acc8f/attachment.obj 

From forumer at smartmobili.com  Sun Feb  5 01:36:55 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sun, 05 Feb 2012 10:36:55 +0100
Subject: [antlr-interest] Objective-J parser
Message-ID: <b032602106370507488955f3459f9e9d@smartmobili.com>

Hi,

I am working on web project to manage all my numeric data with some 
smart relationship between them and
the first module I wanted to have is a webmail (can give you a link to 
see what it looks like if you are
intererested). This web application has been developed using a not very 
common but quite powerful web framework called cappuccino and that is a
kind of objective-C applied to javascript. If you are interested here 
is an example of Objective-J :



/// Objective J simple example
@implementation Address : CPObject
{
    CPString name;
    CPString city;
}

- (id)initWithName:(CPString)aName city:(CPString)aCity
{
     self = [super init];

     name = aName;
     city = aCity;

     return self;
}

-(void)setName:(CPString)aName
{
       name = aName;
}

-(CPString)name
{
       return name;
}

+(id)newAddressWithName:(CPString)aName city:(CPString)aCity
{
       return [[self alloc] initWithName:aName city:aCity];
}

@end

This language once parsed is transformed into javascript.


I have invested some time and money in my web application but the 
problem I see with this technology is
the fact that for the moment tools are only available on MacOs and 
linux(but on this platform you don't have access
to XCode Interface Builder so I suppose you have to declare all the ui 
by hand).
I find also that existing ide plugins misses some important feature 
like code completion (called code assistant on eclipse)
so I wanted to see if it wouldn't be possible to improve things.
I have started by evaluating javaCC that seems very good but with a 
very poor documentation and a smaller community. Good point is
there is a working objective C grammar that I was able to modify to 
parse the most simple objective j example.
Now I would like to do the same with antlr but the objective-C grammar 
I found doesn't work very well and I don't have too much
time to understand why it doesn't work. Besides now I work I don't have 
time to learn parser/compiler theory.
So I am posting here to find a developer or a student that could be 
interested by helping me in my project.
If you are interested please contact-me and we will discuss about 
payment.








From antlr at mirality.co.nz  Sun Feb  5 06:02:16 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 06 Feb 2012 03:02:16 +1300
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.g
	mail.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
Message-ID: <20120205140225.1E7D9341845C@www.antlr.org>

At 20:50 5/02/2012, Gokulakannan Somasundaram wrote:
 >d) I have changed all the types with ANTLR3_ into ANTLR_, as i 
have
 >pulled in everything inside antlr3 namespace.

I don't really see the point of keeping an ANTLR_ prefix if the 
symbols are in a namespace anyway.  It smacks of too much C-ism 
(as does using all-caps for things that aren't macros).

Having said that, keeping names similar to the C target might aid 
in portability...


From gokul007 at gmail.com  Sun Feb  5 06:05:52 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 5 Feb 2012 22:05:52 +0800
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <4f2e8bf0.0e3b650a.34d6.014cSMTPIN_ADDED@mx.google.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
	<4f2e8bf0.0e3b650a.34d6.014cSMTPIN_ADDED@mx.google.com>
Message-ID: <CAHMh4-aS=jXLhpa-ao8YVpdCv1HNv57Os+A+q_vNvpdycTzPGg@mail.gmail.com>

>
>
> I don't really see the point of keeping an ANTLR_ prefix if the symbols
> are in a namespace anyway.  It smacks of too much C-ism (as does using
> all-caps for things that aren't macros).
>
>
+1. I will change that accordingly.

Thanks,
Gokul.

From marco.laponder at kewill.com  Mon Feb  6 04:30:16 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Mon, 6 Feb 2012 13:30:16 +0100
Subject: [antlr-interest] newbi question : operator + any
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>

Hi All,

 

I am trying to setup a very simple grammar, ik should be able to handle

 

"> thiscouldbeanything"

 

So I tried:

 

COMPARE : '>';

ANYTHING : (.)+;

testExpression : COMPARE ANYTHING;

 

but when generating java resources it gave me the error: 

 

"The following alternatives can never be matched: 1"

 

The problems seems to be the ANYTHING, so how should I define a grammar
to be able to handle this ? 

 

Kind regards,

Marco


From gokul007 at gmail.com  Mon Feb  6 07:56:19 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 6 Feb 2012 23:56:19 +0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
Message-ID: <CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>

COMPARE : '>';

ANYTHING : (~'>')(.)*;

testExpression : COMPARE ANYTHING;


Try this.

Gokul.

On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder <marco.laponder at kewill.com>wrote:

> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From lmeyerov at eecs.berkeley.edu  Mon Feb  6 12:43:45 2012
From: lmeyerov at eecs.berkeley.edu (Leo Meyerovich)
Date: Mon, 6 Feb 2012 12:43:45 -0800
Subject: [antlr-interest] current best practice for a macro preprocessor?
Message-ID: <34F095B7-AE27-4771-8B09-435E257B2DD7@eecs.berkeley.edu>

Hi all,

I'd like to add a simple (unhygienic etc.) preprocessor, e.g.,


trait MyDefs {  myDef1; myDef2; }

class MyClass(MyDefs) { myDef3; }

=>

class MyClass { myDef1; myDef2; myDef3; }

Any suggestions on the current best practice, preferably with code examples? So far, I've seen:

-- http://www.ibm.com/developerworks/aix/library/au-c_plusplus_antlr/index.html

-- http://www.antlr.org/pipermail/antlr-interest/2009-September/035854.html


Thanks for any tips!


- Leo



 

From peterpiper797 at hotmail.com  Mon Feb  6 16:13:48 2012
From: peterpiper797 at hotmail.com (Peter Piper)
Date: Tue, 7 Feb 2012 00:13:48 +0000
Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step zero
Message-ID: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>


I'm using Antlr3 version 3.4.1.9004.

I added a reference to the Antlr4.StringTemplate.dll and set the output option to "output=template" in my (working) tree grammar. Even though I hadn't added any template expansions, a quick verifying-compilation failed because Antlr added the following statements to the source file that it generated:

using Antlr3.ST;
using Antlr3.ST.Language;

which do not refer to the correct namespaces for the DLL that I downloaded (it should be Antlr4.StringTemplate), and it also has added code like this:

   private StringTemplateGroup _templateGroup = new StringTemplateGroup("PhaseTwoTemplates", typeof(AngleBracketTemplateLexer) );

yet the object browser shows that the DLL contains no such object (it should be called TemplateGroup).

Does this stuff work under C#, or have I got a corrupted setup somehow?

Thanks for any help!

Dan

 		 	   		  

From marco.laponder at kewill.com  Mon Feb  6 23:44:47 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Tue, 7 Feb 2012 08:44:47 +0100
Subject: [antlr-interest] newbi question : operator + any
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>

This still gives me the same error, any other ideas ? Of is antlr just
not appropriate for this ?

 

Kind regards,

Marco

 

________________________________

Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Verzonden: maandag 6 februari 2012 16:56
Aan: Marco Laponder
CC: antlr-interest at antlr.org
Onderwerp: Re: [antlr-interest] newbi question : operator + any

 

COMPARE : '>';

ANYTHING : (~'>')(.)*;

testExpression : COMPARE ANYTHING; 

 

 

Try this.

 

Gokul.

On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Hi All,



I am trying to setup a very simple grammar, ik should be able to handle



"> thiscouldbeanything"



So I tried:



COMPARE : '>';

ANYTHING : (.)+;

testExpression : COMPARE ANYTHING;



but when generating java resources it gave me the error:



"The following alternatives can never be matched: 1"



The problems seems to be the ANYTHING, so how should I define a grammar
to be able to handle this ?



Kind regards,

Marco


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From peterpiper797 at hotmail.com  Tue Feb  7 01:32:33 2012
From: peterpiper797 at hotmail.com (Peter Piper)
Date: Tue, 7 Feb 2012 09:32:33 +0000
Subject: [antlr-interest] Tree grammar rule attributes
Message-ID: <BAY155-W6228BCF6811E75EE7AAFB0FE750@phx.gbl>


To workaround another problem (posted yesterday), I'm trying to get access to the CommonTree from within a rule inside my tree grammar.

The ANTLR rule:

            myRule : subRule1 subRule2  { doSomething($arguments.tree); } ;

compiles OK in ANTLR but produces an error in the C# compiler because it has declared arguments like this in the C#:

            TreeRuleReturnScope<CommonTree> arguments = ....

but it tries to use it like this:

   doSomething( (arguments!=null?((CommonTree)arguments.Tree):default(CommonTree)) );

Unfortunately, TreeRuleReturnScope<> only has properties called Start and Stop, not a property called Tree.

Surely this system must have worked at some point? How do you guys do this stuff?

Dan

 		 	   		  

From r.b.lists at gmx.net  Tue Feb  7 04:08:20 2012
From: r.b.lists at gmx.net (Roland Braito)
Date: Tue, 07 Feb 2012 13:08:20 +0100
Subject: [antlr-interest] Tree Grammars,
	Complex Data and StringTemplateGroups
Message-ID: <20120207120820.256360@gmx.net>


Hello all,

Sorry if this was answered before, but i didn't find an answer yet...

Short version:

am using antlr 3.3.jar and the packaged version of ST

i want to build a retargetable code generator.

using the pattern of  DSL to AST to output via StringTemplate

i am having severe problems getting the AST to StringTemplate mapping to 

work

Is there a way to build such a thing with more than one level of nesting in lists without traversing the AST by hand?

Long version:

I follow the usual pattern of parsing a DSL into an AST and am now 

trying to feed that AST to a tree grammar.

Since i have to create multiple very diverse output files form the 

single input tree, i was planning to create a StringTemplateGroup file 

for every output language needed.

The AST is deeply nested and has repeating elements at various levels 

(think Object hierarchy)

I have one "interface" template called all(a1,a2,a3,a4) which takes 

several lists of objects and then calls the various templates needed for 

the language from the group files.

(e.g. sql.stg, java.stg,...)

I do not want to have any template definitions in the tree walker.

The problem is with grammar constructs like:

list_of_list 
	:	^( LIST1 list2+ ) 
	;

list2	:	^( L2 another_list+ element+)
	;

another_list
	:	^( AL bla)
	;

bla	:	ID
	;

element	:	ID
	; 

i want to give the list_of_lists to the StringTemplateGroup, since the 

hierarchy encodes valuable information, which i want to map to something like

header ::=<<
<list_of_lists:process_l2()>
>>

process_l2() ::=<<
<another_list:etc()> <element; separator=", ">
>>

and so on.

how do i map the repeating elements to the templates in the group file?

Things i tried:

^( LIST1 l+=list2+ ) -> template(list={l})""

gives emtpy results ( empty template because i dont want to have any 

definitions in the grammar, but probably the "" interferes with the stg)


defining a return value and setting it via 

^( LIST1 l+=list2+ ) {$list=$l}

antlr generates code like

	if (list_p==null) list_p=new ArrayList();
    	list_p.add(p.getTemplate());

but the template would itself be a list of templates or at least objects

I tried to define the templates manually in {} and in ->{} and assign 

them attributes manually, but i cant seem to access those in the stg 

file.

The only thing which almost worked was to define helper classes in the 

grammar, fill them up via {} code in the rules and pass those object 

trees to the StringTemplateGroup. 

But this failed at populating the object lists, since the code to add 
another instance was generated by antlr to be out of the loop traversing the tree nodes and thus only got the last element of repeating sub-trees ( another_list+).

Is there a way to build such a thing with more than one level of nesting in lists without traversing the AST by hand?

Thanks for any help!

From gokul007 at gmail.com  Tue Feb  7 09:02:29 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 8 Feb 2012 01:02:29 +0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>
Message-ID: <CAHMh4-amPc0yrOVg-FgtGSyY5iwAYbcbaAsgSgqiP9w=8NYhQA@mail.gmail.com>

ANTLR is appropriate. Keep that constant. OK i should have tried before
posting. This helps, but i don't know, whether this would suffice your
requirement.


COMPARE : '>';

ANYTHING : (~('>'))*;

testExpression : COMPARE ANYTHING;

Or please explain me, what are you trying to do.

Gokul.

On Tue, Feb 7, 2012 at 3:44 PM, Marco Laponder <marco.laponder at kewill.com>wrote:

>  This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?****
>
> ** **
>
> Kind regards,****
>
> Marco****
>
> ** **
>  ------------------------------
>
> *Van:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Verzonden:* maandag 6 februari 2012 16:56
> *Aan:* Marco Laponder
> *CC:* antlr-interest at antlr.org
> *Onderwerp:* Re: [antlr-interest] newbi question : operator + any****
>
> ** **
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING; ****
>
> ** **
>
> ** **
>
> Try this.****
>
> ** **
>
> Gokul.****
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder <marco.laponder at kewill.com>
> wrote:****
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address****
>
> ** **
>

From gsmiro at gmail.com  Tue Feb  7 09:30:10 2012
From: gsmiro at gmail.com (Gabriel Miro)
Date: Tue, 7 Feb 2012 15:30:10 -0200
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <CAHMh4-amPc0yrOVg-FgtGSyY5iwAYbcbaAsgSgqiP9w=8NYhQA@mail.gmail.com>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>
	<CAHMh4-amPc0yrOVg-FgtGSyY5iwAYbcbaAsgSgqiP9w=8NYhQA@mail.gmail.com>
Message-ID: <CAJ0A1K-93Mve_-==_m0iPw=V38xMwrJ2Jz7o-Ew=FpBWRcG3_g@mail.gmail.com>

The problem is that ANYTHING also matches '>'. What Gokul is suggesting
will make ANYTHING match all characters that are not '>' and COMPARE match
'>' only. Give us more info and we might be able to give further help.

Mir?

On Tue, Feb 7, 2012 at 3:02 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> ANTLR is appropriate. Keep that constant. OK i should have tried before
> posting. This helps, but i don't know, whether this would suffice your
> requirement.
>
>
> COMPARE : '>';
>
> ANYTHING : (~('>'))*;
>
> testExpression : COMPARE ANYTHING;
>
> Or please explain me, what are you trying to do.
>
> Gokul.
>
> On Tue, Feb 7, 2012 at 3:44 PM, Marco Laponder <marco.laponder at kewill.com
> >wrote:
>
> >  This still gives me the same error, any other ideas ? Of is antlr just
> > not appropriate for this ?****
> >
> > ** **
> >
> > Kind regards,****
> >
> > Marco****
> >
> > ** **
> >  ------------------------------
> >
> > *Van:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> > *Verzonden:* maandag 6 februari 2012 16:56
> > *Aan:* Marco Laponder
> > *CC:* antlr-interest at antlr.org
> > *Onderwerp:* Re: [antlr-interest] newbi question : operator + any****
> >
> > ** **
> >
> > COMPARE : '>';
> >
> > ANYTHING : (~'>')(.)*;
> >
> > testExpression : COMPARE ANYTHING; ****
> >
> > ** **
> >
> > ** **
> >
> > Try this.****
> >
> > ** **
> >
> > Gokul.****
> >
> > On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder <
> marco.laponder at kewill.com>
> > wrote:****
> >
> > Hi All,
> >
> >
> >
> > I am trying to setup a very simple grammar, ik should be able to handle
> >
> >
> >
> > "> thiscouldbeanything"
> >
> >
> >
> > So I tried:
> >
> >
> >
> > COMPARE : '>';
> >
> > ANYTHING : (.)+;
> >
> > testExpression : COMPARE ANYTHING;
> >
> >
> >
> > but when generating java resources it gave me the error:
> >
> >
> >
> > "The following alternatives can never be matched: 1"
> >
> >
> >
> > The problems seems to be the ANYTHING, so how should I define a grammar
> > to be able to handle this ?
> >
> >
> >
> > Kind regards,
> >
> > Marco
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address****
> >
> > ** **
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Tue Feb  7 12:48:15 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 7 Feb 2012 12:48:15 -0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BAF7@scania.interchain.nl>
Message-ID: <ff5b1ff13168a151eef6102a669e5aeb@mail.gmail.com>

You cannot use .* or .+ as this means match everything. The ANYTHING rule
can only be:

ANYTHING : . ;

Which means that you get one token for a single character that is not
consumed by any previous rules.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Laponder
> Sent: Monday, February 06, 2012 11:45 PM
> To: Gokulakannan Somasundaram
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbi question : operator + any
>
> This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kferrio at gmail.com  Tue Feb  7 15:32:55 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Tue, 7 Feb 2012 16:32:55 -0700
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
Message-ID: <CAAfeETpG-D-spAmMx9qiAy+CPF-bWgJv3CzAQW33-LjmNZQe+A@mail.gmail.com>

Hi.  Joining late.  I don't know how much this helps, but my experience is
that when I make a grammar "too" simple (usually in an effort to understand
antlr better) I sometimes run into interesting edge cases which teach/test
something different from my original intent.  I don't know what you need to
do, but if you place some constraints on your grammar...like comparisons
operate on expressions and (e.g.) expressions are limited to well-formed
alphanumeric identifiers...you might find a fast path to a solution.  If
you really need to compare 'anything's with almost no syntactic limits,
then you should ignore this advice!

Kyle
 On Feb 6, 2012 5:30 AM, "Marco Laponder" <marco.laponder at kewill.com> wrote:

> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From marco.laponder at kewill.com  Tue Feb  7 22:58:20 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Wed, 8 Feb 2012 07:58:20 +0100
Subject: [antlr-interest] newbi question : operator + any
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>

Lets explain what I am trying to accomplish, maybe you can provide me
the most impressive grammars :-)

 

I am trying to parse a filter string which filter on a column of a
table, so I need to know the operator. In my example I stated the '>'
but of course I would like to expand it to '<','>=' etc and alter on
even add parenthesis, 'and' and 'or' etc. But I would like to start
simple as I am new at ANTLR.

 

Your sample does the trick, however looks hard to maintain, e.g., when I
add the '<' to COMPARE I also need to add it to ANYTHING. (Well it seems
still more maintainable than a single regular expression no one
understands to do the trick ;-) )

 

Kind regards,
Marco

 

________________________________

Van: Marco Laponder 
Verzonden: dinsdag 7 februari 2012 8:45
Aan: 'Gokulakannan Somasundaram'
CC: antlr-interest at antlr.org
Onderwerp: RE: [antlr-interest] newbi question : operator + any

 

This still gives me the same error, any other ideas ? Of is antlr just
not appropriate for this ?

 

Kind regards,

Marco

 

________________________________

Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Verzonden: maandag 6 februari 2012 16:56
Aan: Marco Laponder
CC: antlr-interest at antlr.org
Onderwerp: Re: [antlr-interest] newbi question : operator + any

 

COMPARE : '>';

ANYTHING : (~'>')(.)*;

testExpression : COMPARE ANYTHING; 

 

 

Try this.

 

Gokul.

On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Hi All,



I am trying to setup a very simple grammar, ik should be able to handle



"> thiscouldbeanything"



So I tried:



COMPARE : '>';

ANYTHING : (.)+;

testExpression : COMPARE ANYTHING;



but when generating java resources it gave me the error:



"The following alternatives can never be matched: 1"



The problems seems to be the ANYTHING, so how should I define a grammar
to be able to handle this ?



Kind regards,

Marco


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From jimi at temporal-wave.com  Wed Feb  8 10:54:09 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 8 Feb 2012 10:54:09 -0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
Message-ID: <784f3b97a0dd9eb7dd51ca98a21dfa36@mail.gmail.com>

Did you see my explanation of why you must use:

ANYTHING : . ;

And not use + or * with the . ?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Laponder
> Sent: Tuesday, February 07, 2012 10:58 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbi question : operator + any
>
> Lets explain what I am trying to accomplish, maybe you can provide me
> the most impressive grammars :-)
>
>
>
> I am trying to parse a filter string which filter on a column of a
> table, so I need to know the operator. In my example I stated the '>'
> but of course I would like to expand it to '<','>=' etc and alter on
> even add parenthesis, 'and' and 'or' etc. But I would like to start
> simple as I am new at ANTLR.
>
>
>
> Your sample does the trick, however looks hard to maintain, e.g., when
> I add the '<' to COMPARE I also need to add it to ANYTHING. (Well it
> seems still more maintainable than a single regular expression no one
> understands to do the trick ;-) )
>
>
>
> Kind regards,
> Marco
>
>
>
> ________________________________
>
> Van: Marco Laponder
> Verzonden: dinsdag 7 februari 2012 8:45
> Aan: 'Gokulakannan Somasundaram'
> CC: antlr-interest at antlr.org
> Onderwerp: RE: [antlr-interest] newbi question : operator + any
>
>
>
> This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From quintin.beukes at signio.co.za  Thu Feb  9 02:20:50 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Thu, 9 Feb 2012 12:20:50 +0200
Subject: [antlr-interest] Not Matching
Message-ID: <CAF2nK61NtuFuqAD6kaQkAbOf8Eq0qgaki+mmKGTHEobWW73qJQ@mail.gmail.com>

Hi,

I've been playing around with ANTLR 3.3 and am trying to match a very
simple input with a very simple grammar, though I keep getting this
error:
input.txt line 1:0 missing 'OnChange:' at ''

What am I doing wrong?

The input.txt file:
OnChange:

The grammar:
grammar TestGrammar;

@members {
  public static void main(String[] args) throws Exception {
    TestGrammarLexer lex = new TestGrammarLexer(new ANTLRFileStream(args[0]));
    CommonTokenStream tokens = new CommonTokenStream(lex);

    TestGrammarParser parser = new TestGrammarParser(tokens);

    try {
      parser.fieldRules();
    } catch (RecognitionException e)  {
      e.printStackTrace();
    }
  }
}

fieldRules
  : 'OnChange:' WS
  ;

WS
  : ('\t' | ' ' | '\n' | '\r')*
  ;


Quintin Beukes

From ramponjerome at yahoo.fr  Thu Feb  9 03:03:14 2012
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Thu, 9 Feb 2012 11:03:14 +0000 (GMT)
Subject: [antlr-interest] antlr3.4  C target Bug ?
Message-ID: <1328785394.17742.YahooMailNeo@web24702.mail.ird.yahoo.com>




Hi,

For info ...


Something like a bug apparently (with C output and antlr3.4 version)

On missing EOF

in recoverFromMistmatchedToken, ... getMissingSymbol
from code testing EOF? (pANTLR3_COMMON_TOKEN) MATCHT(EOF, &FOLLOW_EOF_in_...);

around line 2219, following code

text->append8(text, (const char *)recognizer->state->tokenNames[expectedTokenType]);

expectedTokenType has no real entry in tokenNames array

Returns NULL, then crash

Maybe already reported. I made a local fix in my version in append8

with expectedTokenType == EOF ? ....


Regards


Jerome

From gokul007 at gmail.com  Thu Feb  9 03:48:11 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 9 Feb 2012 19:48:11 +0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
Message-ID: <CAHMh4-bj=3Saock8oroB9MZ3aH+Kkj-5-6V_k7JRteqfuyKLdQ@mail.gmail.com>

So how will the filter string look like?

I understand that it contains the operator. What else does it contain?

Gokul.

From macolange at gmail.com  Thu Feb  9 04:35:33 2012
From: macolange at gmail.com (Maximilien Colange)
Date: Thu, 09 Feb 2012 13:35:33 +0100
Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step
 zero
In-Reply-To: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>
References: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>
Message-ID: <4F33BD95.7000501@gmail.com>

Hi,

> I'm using Antlr3 version 3.4.1.9004.
>
> I added a reference to the Antlr4.StringTemplate.dll and set the output option to "output=template" in my (working) tree grammar. Even though I hadn't added any template expansions, a quick verifying-compilation failed because Antlr added the following statements to the source file that it generated:
>
> using Antlr3.ST;
> using Antlr3.ST.Language;
>
> which do not refer to the correct namespaces for the DLL that I downloaded (it should be Antlr4.StringTemplate), and it also has added code like this:
>
>     private StringTemplateGroup _templateGroup = new StringTemplateGroup("PhaseTwoTemplates", typeof(AngleBracketTemplateLexer) );
>
> yet the object browser shows that the DLL contains no such object (it should be called TemplateGroup).
Beware: the StringTemplate4 library is released and (as far as i know) 
running, whereas Antlr4 is still under development.
You can use StringTemplate4 with Antlr3 with a few modifications to your 
code: http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
> Does this stuff work under C#, or have I got a corrupted setup somehow?
It seems to me that you got confused between StringTemplate4 and Antlr4.
I do not use the C# target, but according to the doc of ST4, it works 
with C#.

Hope this helps.

-- 
Maximilien

From quintin.beukes at signio.co.za  Thu Feb  9 04:43:16 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Thu, 9 Feb 2012 14:43:16 +0200
Subject: [antlr-interest] Not Matching
In-Reply-To: <CAF2nK61NtuFuqAD6kaQkAbOf8Eq0qgaki+mmKGTHEobWW73qJQ@mail.gmail.com>
References: <CAF2nK61NtuFuqAD6kaQkAbOf8Eq0qgaki+mmKGTHEobWW73qJQ@mail.gmail.com>
Message-ID: <CAF2nK624vOspg+sf4Px7LyDrR98w5egBK3YrOYuViZ-uCjQJrA@mail.gmail.com>

Just thought I'd mention that the problem was input.txt being
UTF-16LE, and I didn't provide for that at this time.
Quintin Beukes


On Thu, Feb 9, 2012 at 12:20 PM, Quintin Beukes
<quintin.beukes at signio.co.za> wrote:
> Hi,
>
> I've been playing around with ANTLR 3.3 and am trying to match a very
> simple input with a very simple grammar, though I keep getting this
> error:
> input.txt line 1:0 missing 'OnChange:' at ''
>
> What am I doing wrong?
>
> The input.txt file:
> OnChange:
>
> The grammar:
> grammar TestGrammar;
>
> @members {
> ?public static void main(String[] args) throws Exception {
> ? ?TestGrammarLexer lex = new TestGrammarLexer(new ANTLRFileStream(args[0]));
> ? ?CommonTokenStream tokens = new CommonTokenStream(lex);
>
> ? ?TestGrammarParser parser = new TestGrammarParser(tokens);
>
> ? ?try {
> ? ? ?parser.fieldRules();
> ? ?} catch (RecognitionException e) ?{
> ? ? ?e.printStackTrace();
> ? ?}
> ?}
> }
>
> fieldRules
> ?: 'OnChange:' WS
> ?;
>
> WS
> ?: ('\t' | ' ' | '\n' | '\r')*
> ?;
>
>
> Quintin Beukes

From sam at tunnelvisionlabs.com  Thu Feb  9 05:25:03 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Thu, 9 Feb 2012 07:25:03 -0600
Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step
	zero
In-Reply-To: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>
References: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>
Message-ID: <067701cce72e$3c616730$b5243590$@tunnelvisionlabs.com>

The automatic template feature of ANTLR 3 targets StringTemplate 3. If you
want to use StringTemplate 4 for your output templates, you'll have to
remove "output=template;" and use your own action code to create/render the
templates.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Peter Piper [mailto:peterpiper797 at hotmail.com] 
Sent: Monday, February 06, 2012 6:14 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step zero


I'm using Antlr3 version 3.4.1.9004.

I added a reference to the Antlr4.StringTemplate.dll and set the output
option to "output=template" in my (working) tree grammar. Even though I
hadn't added any template expansions, a quick verifying-compilation failed
because Antlr added the following statements to the source file that it
generated:

using Antlr3.ST;
using Antlr3.ST.Language;

which do not refer to the correct namespaces for the DLL that I downloaded
(it should be Antlr4.StringTemplate), and it also has added code like this:

   private StringTemplateGroup _templateGroup = new
StringTemplateGroup("PhaseTwoTemplates", typeof(AngleBracketTemplateLexer)
);

yet the object browser shows that the DLL contains no such object (it should
be called TemplateGroup).

Does this stuff work under C#, or have I got a corrupted setup somehow?

Thanks for any help!

Dan

 		 	   		  

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From peterpiper797 at hotmail.com  Thu Feb  9 09:08:09 2012
From: peterpiper797 at hotmail.com (Peter Piper)
Date: Thu, 9 Feb 2012 17:08:09 +0000
Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step
 zero
In-Reply-To: <067701cce72e$3c616730$b5243590$@tunnelvisionlabs.com>
References: <BAY155-W25EEA3752125F85E5A5BF5FE750@phx.gbl>,
	<067701cce72e$3c616730$b5243590$@tunnelvisionlabs.com>
Message-ID: <BAY155-W566D83739437DC9B14B07BFE7B0@phx.gbl>


Dear Sam,

Thank you for the reply; I'd already stopped using StringTemplate v4 in the light of Stefan's comment earlier.

Yours,

Dan

> From: sam at tunnelvisionlabs.com
> To: peterpiper797 at hotmail.com; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] StringTemplate v4 and C# fails for me at step zero
> Date: Thu, 9 Feb 2012 07:25:03 -0600
> 
> The automatic template feature of ANTLR 3 targets StringTemplate 3. If you
> want to use StringTemplate 4 for your output templates, you'll have to
> remove "output=template;" and use your own action code to create/render the
> templates.
> 
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> -----Original Message-----
> From: Peter Piper [mailto:peterpiper797 at hotmail.com] 
> Sent: Monday, February 06, 2012 6:14 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] StringTemplate v4 and C# fails for me at step zero
> 
> 
> I'm using Antlr3 version 3.4.1.9004.
> 
> I added a reference to the Antlr4.StringTemplate.dll and set the output
> option to "output=template" in my (working) tree grammar. Even though I
> hadn't added any template expansions, a quick verifying-compilation failed
> because Antlr added the following statements to the source file that it
> generated:
> 
> using Antlr3.ST;
> using Antlr3.ST.Language;
> 
> which do not refer to the correct namespaces for the DLL that I downloaded
> (it should be Antlr4.StringTemplate), and it also has added code like this:
> 
>    private StringTemplateGroup _templateGroup = new
> StringTemplateGroup("PhaseTwoTemplates", typeof(AngleBracketTemplateLexer)
> );
> 
> yet the object browser shows that the DLL contains no such object (it should
> be called TemplateGroup).
> 
> Does this stuff work under C#, or have I got a corrupted setup somehow?
> 
> Thanks for any help!
> 
> Dan
> 
>  		 	   		  
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
 		 	   		  

From quintin.beukes at signio.co.za  Thu Feb  9 09:10:50 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Thu, 9 Feb 2012 19:10:50 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
Message-ID: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>

Hi,

Can someone please explain the following behavior to me. I've narrowed
the problem down to a single space match, as described below.

// Begin Grammar //
grammar DebugA;

fieldRules
? : EVENTNAME ':' NEWLINE
? ? rules
? ? EOF
? ;

rules
? : (rule)+
? ;

rule
? : WS ALPHANUMERICSPACE NEWLINE
? ? WS '(' ruleExpression '):' NEWLINE
? ;

ruleExpression
? : 'If'
? ;

EVENTNAME
? : 'OnChange'
? | 'OnClick'
? ;

WS
? : ('\t' | ' ')+
? ;

ALPHANUMERICSPACE
? : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
? ;

NEWLINE
? : '\r'? '\n'
? ;
// End Grammar //

// Begin Input //
OnChange:
  Rule Name
 (If):
// End Input //

The above grammar and input matches perfectly.

Though, if I change the last line of the input to:
  (If ):

And change the ruleExpression in the grammar to:
ruleExpression
? : 'If' WS
? ;

Then it doesn't match. Matching 'If ' works, and 'If' ' ' doesn't.
I've tried numerous things and can't seem to get past this oddity.

Quintin Beukes

From quintin.beukes at signio.co.za  Thu Feb  9 09:52:06 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Thu, 9 Feb 2012 19:52:06 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
Message-ID: <CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>

I've narrowed it down to:
ALPHANUMERICSPACE
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
  ;

It seems when I remove the second grouping, it works with the space. As in:
ALPHANUMERICSPACE
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+
  ;

Though I originally ended up with it as above because I had other
conflicts when I also have and use them as follows (no matter the
order they're defined):
ALPHANUMERIC
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+
  ;

ALPHANUMERICSPACE
  : ('a'..'z' | 'A'..'Z' | '0'..'9' | ' ')+
  ;

Any suggestions as to how to solve this would be appreciated. I keep
running into such conflicts and must be ignorant of some concept.

Quintin Beukes

On Thu, Feb 9, 2012 at 7:10 PM, Quintin Beukes
<quintin.beukes at signio.co.za> wrote:
> Hi,
>
> Can someone please explain the following behavior to me. I've narrowed
> the problem down to a single space match, as described below.
>
> // Begin Grammar //
> grammar DebugA;
>
> fieldRules
> ? : EVENTNAME ':' NEWLINE
> ? ? rules
> ? ? EOF
> ? ;
>
> rules
> ? : (rule)+
> ? ;
>
> rule
> ? : WS ALPHANUMERICSPACE NEWLINE
> ? ? WS '(' ruleExpression '):' NEWLINE
> ? ;
>
> ruleExpression
> ? : 'If'
> ? ;
>
> EVENTNAME
> ? : 'OnChange'
> ? | 'OnClick'
> ? ;
>
> WS
> ? : ('\t' | ' ')+
> ? ;
>
> ALPHANUMERICSPACE
> ? : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
> ? ;
>
> NEWLINE
> ? : '\r'? '\n'
> ? ;
> // End Grammar //
>
> // Begin Input //
> OnChange:
> ?Rule Name
> ?(If):
> // End Input //
>
> The above grammar and input matches perfectly.
>
> Though, if I change the last line of the input to:
> ?(If ):
>
> And change the ruleExpression in the grammar to:
> ruleExpression
> ? : 'If' WS
> ? ;
>
> Then it doesn't match. Matching 'If ' works, and 'If' ' ' doesn't.
> I've tried numerous things and can't seem to get past this oddity.
>
> Quintin Beukes

From Stefan.Maetje at esd-electronics.com  Thu Feb  9 10:35:50 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Thu, 09 Feb 2012 19:35:50 +0100
Subject: [antlr-interest] Fwd: Re: StringTemplate v4 and C# fails for me at
 step zero [Stefan.Maetje@esd-electronics.com]
Message-ID: <1328812550.3027.1@pc-stefanm>

Hi,

in the light of the last comments on this topic I've detected that I did 
forget the CC: to the mailing list when I wrote my answer. So for completeness 
forward my answer to the mailing list now.

Greetings,
	Stefan

Am 07.02.2012 11:04:47 schrieb(en) Stefan M?tje:
Hi,

please note that ANTLR 3.4 uses StringTemplate 4 (ST4) internally but the 
generated code is still using StringTemplate 3 (ST3).

There was a discussion on the mailing list around 04 November last year. Look 
for mails of Sam Harwell on the topic "StringTemplate and Antrl3.runtime 
version mess on C# target"

The wiki tells about the versions and releases here:

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

I hope that helps,
	Stefan


Am 07.02.2012 01:13:48 schrieb(en) Peter Piper:
> 
> I'm using Antlr3 version 3.4.1.9004.
> 
> I added a reference to the Antlr4.StringTemplate.dll and set the output
> option to "output=template" in my (working) tree grammar. Even though I
> hadn't added any template expansions, a quick verifying-compilation failed
> because Antlr added the following statements to the source file that it
> generated:
> 
> using Antlr3.ST;
> using Antlr3.ST.Language;
> 
> which do not refer to the correct namespaces for the DLL that I downloaded
> (it should be Antlr4.StringTemplate), and it also has added code like this:
> 
>    private StringTemplateGroup _templateGroup = new
> StringTemplateGroup("PhaseTwoTemplates", typeof
> (AngleBracketTemplateLexer) );
> 
> yet the object browser shows that the DLL contains no such object (it should
> be called TemplateGroup).
> 
> Does this stuff work under C#, or have I got a corrupted setup somehow?
> 
> Thanks for any help!





From parrt at cs.usfca.edu  Thu Feb  9 10:51:48 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 9 Feb 2012 10:51:48 -0800
Subject: [antlr-interest] Antlr3.4 Python bugs, workarounds
In-Reply-To: <CAN51Nt5vJRget=-srr-O9x_OJ1-0-ogGH-5ET0juU=yHH_2xqQ@mail.gmail.com>
References: <CAN51Nt60R=9DF1+BWvsnMQShLE7GRpXmm5o30DnZ+KLZq8duUA@mail.gmail.com>
	<CAN51Nt4Dp7yMUSkNqYnrkMvthRB2p0UA4g4TB5DZhi-ywn0THA@mail.gmail.com>
	<CAE33G67XoyDyGcdL2YmsptmU0S_NyPfTHrb1zanA3Y0t8miDjA@mail.gmail.com>
	<CAN51Nt5aQTu1jqeXuCUhHYHXCy0Xsq00vgCB-BEWhjSqT5z8Qw@mail.gmail.com>
	<CAE33G642=9wHcY1ofj4UogteExF6a_91+eGxr7Nx70PUUs+q2g@mail.gmail.com>
	<FE073D71-BB07-47D2-9473-DDADB3CCD3FB@cs.usfca.edu>
	<CAN51Nt5vJRget=-srr-O9x_OJ1-0-ogGH-5ET0juU=yHH_2xqQ@mail.gmail.com>
Message-ID: <4D13FF99-EC7A-4B8D-8485-0A72813DCFA0@cs.usfca.edu>

Hi Benjamin (Wolf), thanks very much.

I've recently change the main v3 repository to antlr/antlr3 not antlr/antlr. Since I am a newbie at git/github, could you send me a pull request to that new repository for the same fix? then I can integrate it.

I've just left a redirect signal in the readme file at antlr/antlr so hopefully people will see that now.

thansk!
Ter
On Feb 4, 2012, at 1:13 AM, Benjamin S Wolf wrote:

> For reference, I believe I've found the culprit code. I was browsing
> the antlr network on github and I came across this commit:
> https://github.com/vslavik/antlr/commit/bbf349ab7d7ccb468604f95b28b08eefd694206f
> 
> ie. the code probably looked like:
> 
> <dfa.specialStateSTs:{state | \r\n
> if s == <i0>: <! compressed special state numbers 0..n-1 !>
>    <state>}; separator="\nel">
> 
> which caused a newline to be output before "if",
> and I changed it to
> 
> <dfa.specialStateSTs:{state | \n
> if s == <i0>: <! compressed special state numbers 0..n-1 !>
>    <state>}; separator="\nel">
> 
> which fixed the issue for me,
> and vslavik changed it to
> 
> <dfa.specialStateSTs:{state | if s == <i0>: <! compressed special
> state numbers 0..n-1 !>
>    <state>}; separator="\nel">
> 
> which apparently fixed the issue for him.
> 
> On Wed, Dec 28, 2011 at 2:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> 
>> On Dec 27, 2011, at 5:08 PM, Benjamin Niemann wrote:
>>>> Hi Benjamin,
>>>> 
>>>> I was meddling around with the stg templates for Python in trying to
>>>> fix some other bugs I reported in another thread, and after updating
>>>> the files in antlr-3.4-complete.jar this problem was alleviated.
>>>> 
>>>> I narrowed down the diff and discovered that the stg templates in the
>>>> original jar all had DOS line endings (that is, \r\n instead of just
>>>> \n), and that removing all the carriage returns in
>>>> org/antlr/codegen/templates/Python/Python.stg solved the issue of the
>>>> elif being split across a newline.
>>>> 
>>>> That certainly explains why it only showed in antlr-3.4-complete.jar,
>>>> since the templates included with antlr-3.4.tar.gz did not have the
>>>> carriage returns. :)
>>> 
>>> Good catch, thanks a lot for figuring that out.
>>> That seems like a bug in stringtemplate to me - I thought it was
>>> smarter about dealing with line endings.
>>> 
>>> Ter:
>>> Was the jar built on a windows box?
>> 
>> nope. mac os x.
>> 
>>> I assume perforce adds the CRLFs
>>> when checking out the files under windows - the files are stored as
>>> "text", i.e. line endings are converted to the native system.
>> 
>> that's correct i think.
>> 
>>> Unless ST can be taught to deal with that properly, we could store the
>>> templates as binary in the repository - but that could be messy when
>>> someone actually wants to edit them under windows and it's hard to
>>> notice when CRs creep back in.
>>> Or avoid building jars on windows ;)
>>> This probably affects other targets as well, but those are probably
>>> less picky about some extra whitespace here and there. Could lead to
>>> some obscure bugs though.
>> 
>> ST emits proper newlines per platform and should read \r\n just like \n.  BUT?apparently not ;)  I'm adding to list to check ST v4 to see how it works.
>> 
>> Ter


From parrt at cs.usfca.edu  Thu Feb  9 11:03:02 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 9 Feb 2012 11:03:02 -0800
Subject: [antlr-interest] github repo updates
Message-ID: <847AAE0E-F749-4A27-8F18-7E6F422C8FD4@cs.usfca.edu>

Hiya, I've removed antlr/stringtemplate and we should is antlr/stringtemplate3 instead now. Also I have created antlr/antlr3, which is what everybody should use. I have notified all users that have forked the old antlr/antlr repository, at least those that had e-mail addresses in github. This old repository is now stale and will be deleted soon.

antlr3
antlr4
stringtemplate3
stringtemplate4

or the correct repositories.

Ter

From quintin.beukes at signio.co.za  Thu Feb  9 11:20:27 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Thu, 9 Feb 2012 21:20:27 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
Message-ID: <CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>

I debugged the Lexer, and it seems that it's predictions for the next
token always seems to match against ALPHANUMERICSPACE.

How can I resolve such a prediction error? Even if just pointing me to the wiki.

thanks,
Quintin Beukes

From jimi at temporal-wave.com  Thu Feb  9 11:30:28 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 9 Feb 2012 11:30:28 -0800
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
	<CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
Message-ID: <1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>

Don't use 'strings' in your parser, create real tokens and list the
keywords and punctuation in the lexer before the generic rule. Also, it
does not look like you need the spaces, so try skipping them:

LPAREN: '(' ;
...
KEYWORD: 'keyword';
....
ALPHANUMERICSPACE: 'A'..'Z'+ ... etc

WS: (' '|'\t')+ { skip(); } ;  // Then remove WS refs in your parser


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Quintin Beukes
> Sent: Thursday, February 09, 2012 11:20 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
>
> I debugged the Lexer, and it seems that it's predictions for the next
> token always seems to match against ALPHANUMERICSPACE.
>
> How can I resolve such a prediction error? Even if just pointing me to
> the wiki.
>
> thanks,
> Quintin Beukes
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From asicaddress at gmail.com  Thu Feb  9 12:10:01 2012
From: asicaddress at gmail.com (A Z)
Date: Fri, 10 Feb 2012 02:10:01 +0600
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
Message-ID: <CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>

Hi Gokulakannan,

Are you targeting this for Linux as well? The definition for
ANTLR_BEGIN_NAMESPACE is contained within "#ifdef    ANTLR_WINDOWS" so the
compile fails. If I fix this I get a lot of template-related errors:

error: use 'template' keyword to treat 'RewriteStreamType' as a dependent
template name
        typedef typename ImplTraits::RewriteStreamType< ComponentType >
RewriteStreamType;

From jimi at temporal-wave.com  Thu Feb  9 12:54:52 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 9 Feb 2012 12:54:52 -0800
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
	<CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>
Message-ID: <6715ac251f700e83a77fc6cdc471399b@mail.gmail.com>

If building on Windows, you need to compile with ALL warnings turned on,
or you have no chance of getting gcc to compile code. Getting even C code
to compile on all the different systems compilers without error is a
mammoth task and you have to be very careful.

That's why you should use C++ as just a better C and forget about
templates and namespaces and all the other stuff that is not usually very
cross compiler/system compliant. Wait until you try compilers like the one
on HPUX.

While the compatibility of C++ compilers improves all the time, it is not
so great. Back when I used Ric's 2.x C++ target I had to port it to about
6 or 7 compilers - it was a terrible job and we seemed to be sending Ric
patches all the time; and it had nothing to do with Ric's code.

I think that the task of creating a C++ runtime target is being slightly
underestimated.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Thursday, February 09, 2012 12:10 PM
> To: Gokulakannan Somasundaram
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] My Progress on C++ Target
>
> Hi Gokulakannan,
>
> Are you targeting this for Linux as well? The definition for
> ANTLR_BEGIN_NAMESPACE is contained within "#ifdef    ANTLR_WINDOWS" so
> the
> compile fails. If I fix this I get a lot of template-related errors:
>
> error: use 'template' keyword to treat 'RewriteStreamType' as a
> dependent template name
>         typedef typename ImplTraits::RewriteStreamType< ComponentType >
> RewriteStreamType;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jswidler at gmail.com  Thu Feb  9 15:17:38 2012
From: jswidler at gmail.com (Jesse Swidler)
Date: Thu, 9 Feb 2012 15:17:38 -0800
Subject: [antlr-interest] Using String literals in grammar
Message-ID: <CA+y3OjZ2BWAViaw7QFAE-uMx3EN+8skFzwAdcNY-w8+h7NxVtA@mail.gmail.com>

I am trying to write a grammar for ABAP, which is a pretty verbose
language.

Pretty much nothing is reserved in ABAP.  You can name a variable whatever
you want.  If your variable is named in such a way that it would make your
syntax ambiguous, you must add an "!" before your variable name to resolve
the problem (although the ABAP style guide recommends against naming your
variables this way, it is not prevented.)  The DATA keyword is used to
declare variables, so the following is an example statement to define a
variable named "DATA"

DATA DATA.


A greatly simplified grammar would look like:

data:
     'DATA' fieldDefId  DOT;

fieldDefId: anySingleToken;


WS : (' '|'\t')+ {$channel=HIDDEN;};
NL : '\r'? '\n' {$channel=HIDDEN;};
DOT: '.';
INTEGER_LITERAL
: '0'..'9'+;
WORD: ~(' '|'\t'|'\r'|'\n'|'.'|':'|','|'('|')'|'<'|'>'|'*'|'-'|'\'')+ ;

anySingleToken: INTEGER_LITERAL | WORD ; //Not really any token, for
instance DOT is not supposed to be accepted.


My problem here is that ANTLR goes ahead and makes a DATA token type
automatically.  So if you were to try "DATA DATA." - which is most
definitely legal - it does not work because DATA is not being returned as a
WORD token like I want it to be.  I would need to make the anySingleToken
production have an or "DATA" appended to it.  There are about 750 words
like DATA that would need to be accounted for and included in the
anySingleToken production if I must create a unique token type for each
"keyword" type thing in ABAP.  Additionally when I defined this many
different token types, ANTLR produced a java file which would not compile
on account of a function containing more than 25,000 lines of code.  So I
am worried that I have two problems here.

1) I don't see a way to get the behavior I want without including a large
production that makes a union of all of these keywords in the language.
 This would be okay, even if it is not as eloquent as I would like, except
that;

2) I am also worried any grammar which uses about 800 token types will
always be a problem for ANTLR because it creates a function which is not
allowed by java because it exceeds some maximum number of LOC per function.

What suggestions do people have for solving this issue?




--Jesse Swidler

From jswidler at gmail.com  Thu Feb  9 16:14:55 2012
From: jswidler at gmail.com (Jesse Swidler)
Date: Thu, 9 Feb 2012 16:14:55 -0800
Subject: [antlr-interest] Using String literals in grammar
In-Reply-To: <CA+y3OjZ2BWAViaw7QFAE-uMx3EN+8skFzwAdcNY-w8+h7NxVtA@mail.gmail.com>
References: <CA+y3OjZ2BWAViaw7QFAE-uMx3EN+8skFzwAdcNY-w8+h7NxVtA@mail.gmail.com>
Message-ID: <CA+y3OjayGjgZ7gJGFfTeYTwUJ9rr4+ejirSZcTuspz6rVaBjNw@mail.gmail.com>

In case it is useful, I will attach a smallish version of the grammar, with
the purposed (less than ideal) solution and exhibiting the problem of a
function being too large in the lexer because of it.  I am not sure
anything can be done outside of manually fixing the problem after antlr
builds the lexer,

--Jesse Swidler


On Thu, Feb 9, 2012 at 3:17 PM, Jesse Swidler <jswidler at gmail.com> wrote:

> I am trying to write a grammar for ABAP, which is a pretty verbose
> language.
>
> Pretty much nothing is reserved in ABAP.  You can name a variable whatever
> you want.  If your variable is named in such a way that it would make your
> syntax ambiguous, you must add an "!" before your variable name to resolve
> the problem (although the ABAP style guide recommends against naming your
> variables this way, it is not prevented.)  The DATA keyword is used to
> declare variables, so the following is an example statement to define a
> variable named "DATA"
>
> DATA DATA.
>
>
> A greatly simplified grammar would look like:
>
> data:
>      'DATA' fieldDefId  DOT;
>
> fieldDefId: anySingleToken;
>
>
> WS : (' '|'\t')+ {$channel=HIDDEN;};
> NL : '\r'? '\n' {$channel=HIDDEN;};
> DOT: '.';
> INTEGER_LITERAL
> : '0'..'9'+;
> WORD: ~(' '|'\t'|'\r'|'\n'|'.'|':'|','|'('|')'|'<'|'>'|'*'|'-'|'\'')+ ;
>
> anySingleToken: INTEGER_LITERAL | WORD ; //Not really any token, for
> instance DOT is not supposed to be accepted.
>
>
> My problem here is that ANTLR goes ahead and makes a DATA token type
> automatically.  So if you were to try "DATA DATA." - which is most
> definitely legal - it does not work because DATA is not being returned as a
> WORD token like I want it to be.  I would need to make the anySingleToken
> production have an or "DATA" appended to it.  There are about 750 words
> like DATA that would need to be accounted for and included in the
> anySingleToken production if I must create a unique token type for each
> "keyword" type thing in ABAP.  Additionally when I defined this many
> different token types, ANTLR produced a java file which would not compile
> on account of a function containing more than 25,000 lines of code.  So I
> am worried that I have two problems here.
>
> 1) I don't see a way to get the behavior I want without including a large
> production that makes a union of all of these keywords in the language.
>  This would be okay, even if it is not as eloquent as I would like, except
> that;
>
> 2) I am also worried any grammar which uses about 800 token types will
> always be a problem for ANTLR because it creates a function which is not
> allowed by java because it exceeds some maximum number of LOC per function.
>
> What suggestions do people have for solving this issue?
>
>
>
>
> --Jesse Swidler
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ABAP.g
Type: application/octet-stream
Size: 23149 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120209/0d920733/attachment.obj 

From jokeserver at gmail.com  Thu Feb  9 21:16:17 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Thu, 9 Feb 2012 21:16:17 -0800
Subject: [antlr-interest] Antlr3.4 Python bugs, workarounds
In-Reply-To: <4D13FF99-EC7A-4B8D-8485-0A72813DCFA0@cs.usfca.edu>
References: <CAN51Nt60R=9DF1+BWvsnMQShLE7GRpXmm5o30DnZ+KLZq8duUA@mail.gmail.com>
	<CAN51Nt4Dp7yMUSkNqYnrkMvthRB2p0UA4g4TB5DZhi-ywn0THA@mail.gmail.com>
	<CAE33G67XoyDyGcdL2YmsptmU0S_NyPfTHrb1zanA3Y0t8miDjA@mail.gmail.com>
	<CAN51Nt5aQTu1jqeXuCUhHYHXCy0Xsq00vgCB-BEWhjSqT5z8Qw@mail.gmail.com>
	<CAE33G642=9wHcY1ofj4UogteExF6a_91+eGxr7Nx70PUUs+q2g@mail.gmail.com>
	<FE073D71-BB07-47D2-9473-DDADB3CCD3FB@cs.usfca.edu>
	<CAN51Nt5vJRget=-srr-O9x_OJ1-0-ogGH-5ET0juU=yHH_2xqQ@mail.gmail.com>
	<4D13FF99-EC7A-4B8D-8485-0A72813DCFA0@cs.usfca.edu>
Message-ID: <CAN51Nt4c+HoSHzd-aUzdohJ6s2GTbnFugr_xufFj-Kmqm-VfpQ@mail.gmail.com>

Sure. I'll note that the fixes I had there were for a different set of
issues. But I can add in my fixes for the two here, then put the pull
request on antlr/antlr3.

On Thu, Feb 9, 2012 at 10:51 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi Benjamin (Wolf), thanks very much.
>
> I've recently change the main v3 repository to antlr/antlr3 not antlr/antlr. Since I am a newbie at git/github, could you send me a pull request to that new repository for the same fix? then I can integrate it.
>
> I've just left a redirect signal in the readme file at antlr/antlr so hopefully people will see that now.
>
> thansk!
> Ter
> On Feb 4, 2012, at 1:13 AM, Benjamin S Wolf wrote:
>
>> For reference, I believe I've found the culprit code. I was browsing
>> the antlr network on github and I came across this commit:
>> https://github.com/vslavik/antlr/commit/bbf349ab7d7ccb468604f95b28b08eefd694206f
>>
>> ie. the code probably looked like:
>>
>> <dfa.specialStateSTs:{state | \r\n
>> if s == <i0>: <! compressed special state numbers 0..n-1 !>
>> ? ?<state>}; separator="\nel">
>>
>> which caused a newline to be output before "if",
>> and I changed it to
>>
>> <dfa.specialStateSTs:{state | \n
>> if s == <i0>: <! compressed special state numbers 0..n-1 !>
>> ? ?<state>}; separator="\nel">
>>
>> which fixed the issue for me,
>> and vslavik changed it to
>>
>> <dfa.specialStateSTs:{state | if s == <i0>: <! compressed special
>> state numbers 0..n-1 !>
>> ? ?<state>}; separator="\nel">
>>
>> which apparently fixed the issue for him.
>>
>> On Wed, Dec 28, 2011 at 2:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>
>>> On Dec 27, 2011, at 5:08 PM, Benjamin Niemann wrote:
>>>>> Hi Benjamin,
>>>>>
>>>>> I was meddling around with the stg templates for Python in trying to
>>>>> fix some other bugs I reported in another thread, and after updating
>>>>> the files in antlr-3.4-complete.jar this problem was alleviated.
>>>>>
>>>>> I narrowed down the diff and discovered that the stg templates in the
>>>>> original jar all had DOS line endings (that is, \r\n instead of just
>>>>> \n), and that removing all the carriage returns in
>>>>> org/antlr/codegen/templates/Python/Python.stg solved the issue of the
>>>>> elif being split across a newline.
>>>>>
>>>>> That certainly explains why it only showed in antlr-3.4-complete.jar,
>>>>> since the templates included with antlr-3.4.tar.gz did not have the
>>>>> carriage returns. :)
>>>>
>>>> Good catch, thanks a lot for figuring that out.
>>>> That seems like a bug in stringtemplate to me - I thought it was
>>>> smarter about dealing with line endings.
>>>>
>>>> Ter:
>>>> Was the jar built on a windows box?
>>>
>>> nope. mac os x.
>>>
>>>> I assume perforce adds the CRLFs
>>>> when checking out the files under windows - the files are stored as
>>>> "text", i.e. line endings are converted to the native system.
>>>
>>> that's correct i think.
>>>
>>>> Unless ST can be taught to deal with that properly, we could store the
>>>> templates as binary in the repository - but that could be messy when
>>>> someone actually wants to edit them under windows and it's hard to
>>>> notice when CRs creep back in.
>>>> Or avoid building jars on windows ;)
>>>> This probably affects other targets as well, but those are probably
>>>> less picky about some extra whitespace here and there. Could lead to
>>>> some obscure bugs though.
>>>
>>> ST emits proper newlines per platform and should read \r\n just like \n. ?BUT?apparently not ;) ?I'm adding to list to check ST v4 to see how it works.
>>>
>>> Ter
>

From marco.laponder at kewill.com  Thu Feb  9 22:08:13 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Fri, 10 Feb 2012 07:08:13 +0100
Subject: [antlr-interest] newbi question : operator + any
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl><CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com><BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
	<CAAfeETq6wZzNJVL024MPh75qiZLe8NtU8i9XuzwGdAyPBZmO3g@mail.gmail.com>
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF9744B@scania.interchain.nl>

Hi,

 

Let tackle your questions:

 

Q1: I was struggling with this question myself, as I was explaining
earlier for now it is pretty simple, a comparison operator followed by a
string which is nog problem to handle with a regular expression. However
I would like to enhance this later on, with parenthesis, 'and', 'or'
constructions etc. So in the future I might be able to handle a string
like : 
( > a && < b) || ( (<=c and >=f )  or (== f) )
which is harder (for me anyway) to handle with a regular expression

 

Q2: ANYTHING is really anything, the grammar is for a filter language on
a table for a specific column, and as the user (especially my users I
think ;-) ) must best be able to filter on anything in the table I have
no additional restrictions there. The data in the table can contain
anything, and therefore the filter can contain anything

 

I am working with antlr v3 right now, but if v4 is the better way to go
there is no problem there as I am just getting started. Regarding the
books, there you have a fair point. I will look what the ANLTR bibles
are.

 

Kind regards,

Marco

 

________________________________

Van: Kyle Ferrio [mailto:kferrio at gmail.com] 
Verzonden: woensdag 8 februari 2012 15:52
Aan: Marco Laponder
Onderwerp: Re: [antlr-interest] newbi question : operator + any

 

Hi,

I'm joining the thread late, but this sounds a bit like an experience I
have seen a few times. Sometimes trying to make things "too simple"
actually makes lexing and parsing more difficult.  While is is often
good to defer decisions in software as long as possible, it is also
helpful to use all of the information at our disposal.  That probably
seems vague, so here are some questions to consider. 

Q1: Is your application likely to grow in syntactic and/or semantic
complexity to a point that its needs cannot be economically met by a
simple filter implemented, say, with GNU awk?  I'm not trying to
discourage you from using ANTLR.  ANTLR is awesome.  But the difference
in costs between the two approaches is large, so it makes sense to ask.

Q2: Do you have any stronger guarantees on the form of the input?  For
example, is  ANYTHING really anything (excluding a finite set of
operators)?  Or are legal operands actually restricted, say, to the set
of common alphanumeric identifiers and possibly literal values?  If so,
your work just got vastly easier.

I don't recall whether you mentioned that you're working with antlr v3
or the yet-to-be-released v4.  I suggest pursuing the examples
appropriate to your version from the antlr website.  (Note that antlr v4
provides greatly enhanced expressiveness for expression-parsing, but
examples for v3 are much more plentiful at the moment.)

Also, definitely get your hands on the two ANTLR books.  They'll save
you time and are actually a lot of fun if you're into this sort of
thing.

Best Luck,
Kyle



On Tue, Feb 7, 2012 at 11:58 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Lets explain what I am trying to accomplish, maybe you can provide me
the most impressive grammars :-)



I am trying to parse a filter string which filter on a column of a
table, so I need to know the operator. In my example I stated the '>'
but of course I would like to expand it to '<','>=' etc and alter on
even add parenthesis, 'and' and 'or' etc. But I would like to start
simple as I am new at ANTLR.



Your sample does the trick, however looks hard to maintain, e.g., when I
add the '<' to COMPARE I also need to add it to ANYTHING. (Well it seems
still more maintainable than a single regular expression no one
understands to do the trick ;-) )



Kind regards,
Marco



________________________________

Van: Marco Laponder
Verzonden: dinsdag 7 februari 2012 8:45
Aan: 'Gokulakannan Somasundaram'
CC: antlr-interest at antlr.org
Onderwerp: RE: [antlr-interest] newbi question : operator + any



This still gives me the same error, any other ideas ? Of is antlr just
not appropriate for this ?



Kind regards,

Marco



________________________________

Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
Verzonden: maandag 6 februari 2012 16:56
Aan: Marco Laponder
CC: antlr-interest at antlr.org
Onderwerp: Re: [antlr-interest] newbi question : operator + any



COMPARE : '>';

ANYTHING : (~'>')(.)*;

testExpression : COMPARE ANYTHING;





Try this.



Gokul.

On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Hi All,



I am trying to setup a very simple grammar, ik should be able to handle



"> thiscouldbeanything"



So I tried:



COMPARE : '>';

ANYTHING : (.)+;

testExpression : COMPARE ANYTHING;



but when generating java resources it gave me the error:



"The following alternatives can never be matched: 1"



The problems seems to be the ANYTHING, so how should I define a grammar
to be able to handle this ?



Kind regards,

Marco


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From marco.laponder at kewill.com  Thu Feb  9 22:10:03 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Fri, 10 Feb 2012 07:10:03 +0100
Subject: [antlr-interest] newbi question : operator + any
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl><CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com><BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
	<784f3b97a0dd9eb7dd51ca98a21dfa36@mail.gmail.com>
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF9744C@scania.interchain.nl>

This would mean the ANYTHING is a single character,so
>abc

Would mean 4 tokens? Is that the best way to go? 

Kind regards,
Marco

-----Oorspronkelijk bericht-----
Van: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Namens Jim Idle
Verzonden: woensdag 8 februari 2012 19:54
Aan: antlr-interest at antlr.org
Onderwerp: Re: [antlr-interest] newbi question : operator + any

Did you see my explanation of why you must use:

ANYTHING : . ;

And not use + or * with the . ?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Laponder
> Sent: Tuesday, February 07, 2012 10:58 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbi question : operator + any
>
> Lets explain what I am trying to accomplish, maybe you can provide me
> the most impressive grammars :-)
>
>
>
> I am trying to parse a filter string which filter on a column of a
> table, so I need to know the operator. In my example I stated the '>'
> but of course I would like to expand it to '<','>=' etc and alter on
> even add parenthesis, 'and' and 'or' etc. But I would like to start
> simple as I am new at ANTLR.
>
>
>
> Your sample does the trick, however looks hard to maintain, e.g., when
> I add the '<' to COMPARE I also need to add it to ANYTHING. (Well it
> seems still more maintainable than a single regular expression no one
> understands to do the trick ;-) )
>
>
>
> Kind regards,
> Marco
>
>
>
> ________________________________
>
> Van: Marco Laponder
> Verzonden: dinsdag 7 februari 2012 8:45
> Aan: 'Gokulakannan Somasundaram'
> CC: antlr-interest at antlr.org
> Onderwerp: RE: [antlr-interest] newbi question : operator + any
>
>
>
> This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to
handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a
grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gokul007 at gmail.com  Fri Feb 10 00:14:17 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 10 Feb 2012 16:14:17 +0800
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
	<CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>
Message-ID: <CAHMh4-Yjzz6tD6gWb3vcFLyQD5GDSWX1QexweJ5EU-LdkwWiwg@mail.gmail.com>

On Fri, Feb 10, 2012 at 4:10 AM, A Z <asicaddress at gmail.com> wrote:

> Hi Gokulakannan,
>
> Are you targeting this for Linux as well? The definition for
> ANTLR_BEGIN_NAMESPACE is contained within "#ifdef    ANTLR_WINDOWS" so the
> compile fails. If I fix this I get a lot of template-related errors:
>
> error: use 'template' keyword to treat 'RewriteStreamType' as a dependent
> template name
>         typedef typename ImplTraits::RewriteStreamType< ComponentType >
> RewriteStreamType;
>
>
>
> Of course, i am targeting Linux as well. i will change the namespace
definition as you said. But once i get things working with Windows, i will
start testing and fixing bugs on linux as well. I am having a hard time
with String Templates and code conversion. That's really slowing me now.

Gokul.

From quintin.beukes at signio.co.za  Fri Feb 10 00:17:21 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Fri, 10 Feb 2012 10:17:21 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
	<CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
	<1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>
Message-ID: <CAF2nK62W7wcchzPsjCLAX-A6xQ-jHbux-At25_sKo8=-b9T0rA@mail.gmail.com>

I have tried to skip whitespace and have used tokens. The above
grammar is mostly just in debug state.

If I can narrow down the problem even further. The lexer keeps
predicting the "If " to be ALPHANUMERICSPACE, so the lexer fails. I
can actually not see why it would even do that, because this string
can never even match ALPHANUMERICSPACE.

Input:
(If )

grammar DebugA;

tokens {
  IF = 'If';
  OB = '(';
  CB = ')';
}

fieldRules
  : rule
    EOF
  ;

rule
  : OB ruleExpression CB NEWLINE
  ;

ruleExpression
  : IF ALPHANUMERIC
  ;

ALPHANUMERIC
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+
  ;

ALPHANUMERICSPACE
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
  ;

WS
  : (' '|'\t')+ {skip();}
  ;

NEWLINE
  : '\r'? '\n'
  ;


Quintin Beukes

On Thu, Feb 9, 2012 at 9:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> Don't use 'strings' in your parser, create real tokens and list the
> keywords and punctuation in the lexer before the generic rule. Also, it
> does not look like you need the spaces, so try skipping them:
>
> LPAREN: '(' ;
> ...
> KEYWORD: 'keyword';
> ....
> ALPHANUMERICSPACE: 'A'..'Z'+ ... etc
>
> WS: (' '|'\t')+ { skip(); } ; ?// Then remove WS refs in your parser
>
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Quintin Beukes
>> Sent: Thursday, February 09, 2012 11:20 AM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
>>
>> I debugged the Lexer, and it seems that it's predictions for the next
>> token always seems to match against ALPHANUMERICSPACE.
>>
>> How can I resolve such a prediction error? Even if just pointing me to
>> the wiki.
>>
>> thanks,
>> Quintin Beukes
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gokul007 at gmail.com  Fri Feb 10 00:18:45 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 10 Feb 2012 16:18:45 +0800
Subject: [antlr-interest] My Progress on C++ Target
In-Reply-To: <6715ac251f700e83a77fc6cdc471399b@mail.gmail.com>
References: <CAHMh4-YFW2nFs5xt5DUrqsbZFVUiCb2wXN2BSAZ2C7VgzRQdjQ@mail.gmail.com>
	<CAP86aOeQDEMKBvV39GwMBM0SydUNksQphNPNNDP5dp-WwmYvZw@mail.gmail.com>
	<6715ac251f700e83a77fc6cdc471399b@mail.gmail.com>
Message-ID: <CAHMh4-Y0NAbPSjUtZqERkP6cmzKA7GYLWUA+1vxyWg+pmBDAJQ@mail.gmail.com>

On Fri, Feb 10, 2012 at 4:54 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> If building on Windows, you need to compile with ALL warnings turned on,
> or you have no chance of getting gcc to compile code. Getting even C code
> to compile on all the different systems compilers without error is a
> mammoth task and you have to be very careful.
>
> That's why you should use C++ as just a better C and forget about
> templates and namespaces and all the other stuff that is not usually very
> cross compiler/system compliant. Wait until you try compilers like the one
> on HPUX.
>
> While the compatibility of C++ compilers improves all the time, it is not
> so great. Back when I used Ric's 2.x C++ target I had to port it to about
> 6 or 7 compilers - it was a terrible job and we seemed to be sending Ric
> patches all the time; and it had nothing to do with Ric's code.
>
> I think that the task of creating a C++ runtime target is being slightly
> underestimated.
>
> Jim
>
>
Jim,
     my goal is to test it out on MSVC and g++ and fix all the bugs. I am
trying not to use any modern features of C++. But templates are there for
quite some time and things have attained a lot of maturity. I could
complete the C++ runtime within the estimated time, but i am finding it
hard to even complete the .stg file for the parser. I will start  a new
thread listing out my issues. Your guidance on that would be greatly
valuable.

Thanks,
Gokul.

From gokul007 at gmail.com  Fri Feb 10 00:32:12 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 10 Feb 2012 16:32:12 +0800
Subject: [antlr-interest] Help required on Cpp.stg( String Templates )
Message-ID: <CAHMh4-YRo5RMfQUpGCBHc9CVnPRv5_sXOjgaH6DXwyzfhZRZmQ@mail.gmail.com>

Hi,
     I need some expert help in completing the Cpp.stg for completion of
C++ Target. I have attached the work, i have completed so far. It is still
incomplete. Consider me as a novice in String template, when you look at
some horrible mistakes. Let me explain the problem, i have.

I want the syntactic predicate fragment rules( fragment rules being called
from predicate ) to be member functions of a C++ Class. It is present in
the template rule "synpredRule" in Java.stg and C.stg. But i find that this
rule is not getting called from other template rules. Now this gets
generated in the .cpp file. But i want all those names to be iterated in
the header file to generate the declarations. I have already spent a day on
it and not able to come up with anything useful. Can someone please help me
on this?

Thanks in Advance,
Gokul.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: CPP.stg
Type: application/octet-stream
Size: 74682 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120210/45223044/attachment.obj 

From quintin.beukes at signio.co.za  Fri Feb 10 01:09:32 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Fri, 10 Feb 2012 11:09:32 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <CAF2nK62W7wcchzPsjCLAX-A6xQ-jHbux-At25_sKo8=-b9T0rA@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
	<CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
	<1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>
	<CAF2nK62W7wcchzPsjCLAX-A6xQ-jHbux-At25_sKo8=-b9T0rA@mail.gmail.com>
Message-ID: <CAF2nK63ZVeujgBcGHbjMVbC9thKy8rh0u56YN+DjYNn9OjT+TQ@mail.gmail.com>

I have further simplified the grammer to the following.

Changing the "If " to "If" causes a perfectly fine match. Still
ALPHANUMERICSPACE is predicted as the input. It results in this error:
line 1:3 required (...)+ loop did not match anything at character '<EOF>'

It keeps predicting the wrong input. I have read through tons of
documents and am not seeing how to fix this whilst keeping
ALPHANUMERICSPACE (which is needed to match multiword tokens).

grammar DebugA;

@members {
  public static void main(String[] args) throws Exception {
    DebugALexer lex = new DebugALexer(new ANTLRStringStream("If "));
    Token token;
    while ((token = lex.nextToken())!=null) {
      if ("<EOF>".equals(token.getText())) break;
      System.out.println("Token: " + token.getType() + "/" + token.getText());
    }
  }
}

ruleExpression
  : IF NEWLINE?
    EOF
  ;

IF
  : 'If';

ALPHANUMERICSPACE
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
  ;

WS
  : (' '|'\t')+ {skip();}
  ;

NEWLINE
  : '\r'? '\n'
  ;

Quintin Beukes

On Fri, Feb 10, 2012 at 10:17 AM, Quintin Beukes
<quintin.beukes at signio.co.za> wrote:
> I have tried to skip whitespace and have used tokens. The above
> grammar is mostly just in debug state.
>
> If I can narrow down the problem even further. The lexer keeps
> predicting the "If " to be ALPHANUMERICSPACE, so the lexer fails. I
> can actually not see why it would even do that, because this string
> can never even match ALPHANUMERICSPACE.
>
> Input:
> (If )
>
> grammar DebugA;
>
> tokens {
> ?IF = 'If';
> ?OB = '(';
> ?CB = ')';
> }
>
> fieldRules
> ?: rule
> ? ?EOF
> ?;
>
> rule
> ?: OB ruleExpression CB NEWLINE
> ?;
>
> ruleExpression
> ?: IF ALPHANUMERIC
> ?;
>
> ALPHANUMERIC
> ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+
> ?;
>
> ALPHANUMERICSPACE
> ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' | '0'..'9')+)*
> ?;
>
> WS
> ?: (' '|'\t')+ {skip();}
> ?;
>
> NEWLINE
> ?: '\r'? '\n'
> ?;
>
>
> Quintin Beukes
>
> On Thu, Feb 9, 2012 at 9:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> Don't use 'strings' in your parser, create real tokens and list the
>> keywords and punctuation in the lexer before the generic rule. Also, it
>> does not look like you need the spaces, so try skipping them:
>>
>> LPAREN: '(' ;
>> ...
>> KEYWORD: 'keyword';
>> ....
>> ALPHANUMERICSPACE: 'A'..'Z'+ ... etc
>>
>> WS: (' '|'\t')+ { skip(); } ; ?// Then remove WS refs in your parser
>>
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Quintin Beukes
>>> Sent: Thursday, February 09, 2012 11:20 AM
>>> To: antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
>>>
>>> I debugged the Lexer, and it seems that it's predictions for the next
>>> token always seems to match against ALPHANUMERICSPACE.
>>>
>>> How can I resolve such a prediction error? Even if just pointing me to
>>> the wiki.
>>>
>>> thanks,
>>> Quintin Beukes
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From plasticfridge at googlemail.com  Fri Feb 10 03:28:21 2012
From: plasticfridge at googlemail.com (Jonathan Roberts)
Date: Fri, 10 Feb 2012 11:28:21 +0000
Subject: [antlr-interest] Rapidly expanding grammar when using gated
	predicate
Message-ID: <CAC9gNVWQid4-K30_Gmdu7C495sBSuXZ8Bqqk12kRNR6-nAYNpw@mail.gmail.com>

Hello all,

Hope you can help.  I am trying to parse a file format called L5K (Allen
Bradley Logix Controller language) and have hit a snag. Below is a small
sample of some encoded data.





                ENCODED_DATA ( Name := "EncData",

                              Description := "Some Encoded data",

                              Revision := "1.0",

                              RevisionExtension := "Initial Release",

                              RevisionNote := "08-06-16: Version 1.0 -
Initial release")



                                xbr+GxxsZhjttrjMWfkzJFlYwrgbwregbwrwer
<<Lots more encoded data follows>>



                END_ENCODED_DATA



Parsing the start tag, end tag and parameter list is not an issue. The
problem is the line that starts ?xbr+Gxxs?.



This is just a long sting of encoded data that terminates with a new line.
A small sample of the grammar that I am using to match is as follows?





ENCODED_DATA

                :               'ENCODED_DATA' {parseState.isEncodedData =
true;}

                ;



END_ENCODED_DATA

                :               'END_ENCODED_DATA'
{parseState.isEncodedData = false;}

                ;



ENC_DATA_LINE

                :               {parseState.isEncodedData}?=> (~'\n')+

                ;



This seams to work pretty well when tested in isolation but when combined
with the rest of the L5K grammar generates me a huge java file that simple
will not compile (too large).



I have tried splitting the grammar into multiple files in the hope that I
can make smaller java files that will compile with little success.



I have also tried with a C# target and while that will compile it results
in several other problems with the generated code (exceptions not being
caught, AST issues etc).


I am using version 3.4 as previous versions take issue with the gated
predicate.



Anyone have any thoughts on how to solve this problem?


Kind regards


Jonathan Roberts

From kunalsawlani at gmail.com  Fri Feb 10 08:28:33 2012
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Fri, 10 Feb 2012 11:28:33 -0500
Subject: [antlr-interest] gUnit tests with multiple languages
Message-ID: <CAFJ6+2d4m6cAE_7Mj7smR1K9qdxULcTuzmsxpc+U_yECpORDkA@mail.gmail.com>

Hi,

I am currently using gUnit to test the Java parsers we are currently
generating from ANTLR.

However, we are using the same grammar source to generate parsers in a
couple of other languages (Ruby, JavaScript). I would like to use the same
gUnit tests for testing the results from these parsers as well, to enable
single sourcing of my tests, and not re-write them for every language.

Is there any way to do this? May be a JSON format for specifying test cases
which would work for all the languages?

Thanks,

-- 
Kunal

From parrt at cs.usfca.edu  Fri Feb 10 08:29:41 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 10 Feb 2012 08:29:41 -0800
Subject: [antlr-interest] redirecting git forks
Message-ID: <8F35DA2A-82FA-4A9F-B0FE-96D68F287C02@cs.usfca.edu>

From Zenaan Harkness:

> For those not so familiar with git, here is a quick way to update your
> remote urls for "origin":
> 
> To view current remote(s):
> git remote -v
> 
> To change url of remote named "origin" for antl.git to antlr3.git:
> git remote set-url origin https://github.com/antlr/antlr3.git
> 
> And similar for stringtemplate.
> 
> Now, I only had an st4 github repo, so I just added the st3 repo to my
> existing st4 git clone, under a different remote name ("st3" funnily
> enough), as follows:
> git remote add st3 https://github.com/antlr/stringtemplate3.git
> git fetch st3
> git branch st3 st3/master
> git branch -a
> 
> Then of course you can swap between st3 and origin i.e. st4 if it's
> called origin, or you could rename origin to st4 or add a branch named
> st4 as you wish.
> 
> Note that if you do as I did (combining st3 and st4), you will get a
> warning saying that no shared root/parent commit was found. This is
> expected. It is of course not at all necessary to have combined repo,
> just a preference of mine...
> 
> Regards
> Zen

From jimi at temporal-wave.com  Fri Feb 10 13:44:05 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 10 Feb 2012 13:44:05 -0800
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF9744C@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl><CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com><BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
	<784f3b97a0dd9eb7dd51ca98a21dfa36@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF9744C@scania.interchain.nl>
Message-ID: <732c984c907211f04d1ba1293a4114b6@mail.gmail.com>

It is the only way you can do this, but I wonder if ANTLR is the right
choice for this situation. If you can afford the time to experiment
though, go for it.

Jim

> -----Original Message-----
> From: Marco Laponder [mailto:marco.laponder at kewill.com]
> Sent: Thursday, February 09, 2012 10:10 PM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] newbi question : operator + any
>
> This would mean the ANYTHING is a single character,so
> >abc
>
> Would mean 4 tokens? Is that the best way to go?
>
> Kind regards,
> Marco
>
> -----Oorspronkelijk bericht-----
> Van: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Namens Jim Idle
> Verzonden: woensdag 8 februari 2012 19:54
> Aan: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
> Did you see my explanation of why you must use:
>
> ANYTHING : . ;
>
> And not use + or * with the . ?
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Marco Laponder
> > Sent: Tuesday, February 07, 2012 10:58 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] newbi question : operator + any
> >
> > Lets explain what I am trying to accomplish, maybe you can provide me
> > the most impressive grammars :-)
> >
> >
> >
> > I am trying to parse a filter string which filter on a column of a
> > table, so I need to know the operator. In my example I stated the '>'
> > but of course I would like to expand it to '<','>=' etc and alter on
> > even add parenthesis, 'and' and 'or' etc. But I would like to start
> > simple as I am new at ANTLR.
> >
> >
> >
> > Your sample does the trick, however looks hard to maintain, e.g.,
> when
> > I add the '<' to COMPARE I also need to add it to ANYTHING. (Well it
> > seems still more maintainable than a single regular expression no one
> > understands to do the trick ;-) )
> >
> >
> >
> > Kind regards,
> > Marco
> >
> >
> >
> > ________________________________
> >
> > Van: Marco Laponder
> > Verzonden: dinsdag 7 februari 2012 8:45
> > Aan: 'Gokulakannan Somasundaram'
> > CC: antlr-interest at antlr.org
> > Onderwerp: RE: [antlr-interest] newbi question : operator + any
> >
> >
> >
> > This still gives me the same error, any other ideas ? Of is antlr
> just
> > not appropriate for this ?
> >
> >
> >
> > Kind regards,
> >
> > Marco
> >
> >
> >
> > ________________________________
> >
> > Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> > Verzonden: maandag 6 februari 2012 16:56
> > Aan: Marco Laponder
> > CC: antlr-interest at antlr.org
> > Onderwerp: Re: [antlr-interest] newbi question : operator + any
> >
> >
> >
> > COMPARE : '>';
> >
> > ANYTHING : (~'>')(.)*;
> >
> > testExpression : COMPARE ANYTHING;
> >
> >
> >
> >
> >
> > Try this.
> >
> >
> >
> > Gokul.
> >
> > On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> > <marco.laponder at kewill.com> wrote:
> >
> > Hi All,
> >
> >
> >
> > I am trying to setup a very simple grammar, ik should be able to
> handle
> >
> >
> >
> > "> thiscouldbeanything"
> >
> >
> >
> > So I tried:
> >
> >
> >
> > COMPARE : '>';
> >
> > ANYTHING : (.)+;
> >
> > testExpression : COMPARE ANYTHING;
> >
> >
> >
> > but when generating java resources it gave me the error:
> >
> >
> >
> > "The following alternatives can never be matched: 1"
> >
> >
> >
> > The problems seems to be the ANYTHING, so how should I define a
> grammar
> > to be able to handle this ?
> >
> >
> >
> > Kind regards,
> >
> > Marco
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Feb 10 14:14:22 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 10 Feb 2012 14:14:22 -0800
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <CAF2nK63ZVeujgBcGHbjMVbC9thKy8rh0u56YN+DjYNn9OjT+TQ@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
	<CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
	<1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>	<CAF2nK62W7wcchzPsjCLAX-A6xQ-jHbux-At25_sKo8=-b9T0rA@mail.gmail.com>
	<CAF2nK63ZVeujgBcGHbjMVbC9thKy8rh0u56YN+DjYNn9OjT+TQ@mail.gmail.com>
Message-ID: <9744a3d3c97297e7ff0230e6d6ff9bc3@mail.gmail.com>

Logically, this is never going to work, regardless of what ANTLR is
predicting or not. As soon as you enter the ALPHANUMERIC rule you will
consume the next space plus whatever, whether it is a keyword or anything
else. You are somehow expecting the LEXER to 'know' what you mean and it
cannot do that.

You do not need to consume the space and next word, you need to just have:

ALPHANUMERIC
  : ('a'..'z' | 'A'..'Z' | '0'..'9')+ ;

and

words: ALPHANUMERIC+ ;


You can get the whole text of the words rule easily enough if you need it.

However, if you will have cases where the words like 'If' are not always
keywords, then you will need a parser rule that allows that (keywords as
identifiers basically).

I am not sure what you are trying to achieve here, but perhaps you are
over simplifying your problem?

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Quintin Beukes
> Sent: Friday, February 10, 2012 1:10 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
>
> I have further simplified the grammer to the following.
>
> Changing the "If " to "If" causes a perfectly fine match. Still
> ALPHANUMERICSPACE is predicted as the input. It results in this error:
> line 1:3 required (...)+ loop did not match anything at character
> '<EOF>'
>
> It keeps predicting the wrong input. I have read through tons of
> documents and am not seeing how to fix this whilst keeping
> ALPHANUMERICSPACE (which is needed to match multiword tokens).
>
> grammar DebugA;
>
> @members {
>   public static void main(String[] args) throws Exception {
>     DebugALexer lex = new DebugALexer(new ANTLRStringStream("If "));
>     Token token;
>     while ((token = lex.nextToken())!=null) {
>       if ("<EOF>".equals(token.getText())) break;
>       System.out.println("Token: " + token.getType() + "/" +
> token.getText());
>     }
>   }
> }
>
> ruleExpression
>   : IF NEWLINE?
>     EOF
>   ;
>
> IF
>   : 'If';
>
> ALPHANUMERICSPACE
>   : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' |
> '0'..'9')+)*
>   ;
>
> WS
>   : (' '|'\t')+ {skip();}
>   ;
>
> NEWLINE
>   : '\r'? '\n'
>   ;
>
> Quintin Beukes
>
> On Fri, Feb 10, 2012 at 10:17 AM, Quintin Beukes
> <quintin.beukes at signio.co.za> wrote:
> > I have tried to skip whitespace and have used tokens. The above
> > grammar is mostly just in debug state.
> >
> > If I can narrow down the problem even further. The lexer keeps
> > predicting the "If " to be ALPHANUMERICSPACE, so the lexer fails. I
> > can actually not see why it would even do that, because this string
> > can never even match ALPHANUMERICSPACE.
> >
> > Input:
> > (If )
> >
> > grammar DebugA;
> >
> > tokens {
> > ?IF = 'If';
> > ?OB = '(';
> > ?CB = ')';
> > }
> >
> > fieldRules
> > ?: rule
> > ? ?EOF
> > ?;
> >
> > rule
> > ?: OB ruleExpression CB NEWLINE
> > ?;
> >
> > ruleExpression
> > ?: IF ALPHANUMERIC
> > ?;
> >
> > ALPHANUMERIC
> > ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+
> > ?;
> >
> > ALPHANUMERICSPACE
> > ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' |
> > '0'..'9')+)*
> > ?;
> >
> > WS
> > ?: (' '|'\t')+ {skip();}
> > ?;
> >
> > NEWLINE
> > ?: '\r'? '\n'
> > ?;
> >
> >
> > Quintin Beukes
> >
> > On Thu, Feb 9, 2012 at 9:30 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >> Don't use 'strings' in your parser, create real tokens and list the
> >> keywords and punctuation in the lexer before the generic rule. Also,
> >> it does not look like you need the spaces, so try skipping them:
> >>
> >> LPAREN: '(' ;
> >> ...
> >> KEYWORD: 'keyword';
> >> ....
> >> ALPHANUMERICSPACE: 'A'..'Z'+ ... etc
> >>
> >> WS: (' '|'\t')+ { skip(); } ; ?// Then remove WS refs in your parser
> >>
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of Quintin Beukes
> >>> Sent: Thursday, February 09, 2012 11:20 AM
> >>> To: antlr-interest at antlr.org
> >>> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
> >>>
> >>> I debugged the Lexer, and it seems that it's predictions for the
> >>> next token always seems to match against ALPHANUMERICSPACE.
> >>>
> >>> How can I resolve such a prediction error? Even if just pointing me
> >>> to the wiki.
> >>>
> >>> thanks,
> >>> Quintin Beukes
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From quintin.beukes at signio.co.za  Sat Feb 11 00:01:24 2012
From: quintin.beukes at signio.co.za (Quintin Beukes)
Date: Sat, 11 Feb 2012 10:01:24 +0200
Subject: [antlr-interest] Adding a Space Leads to Mismatch
In-Reply-To: <9744a3d3c97297e7ff0230e6d6ff9bc3@mail.gmail.com>
References: <CAF2nK61GR4VpeEq1e+uP=7rt1EHSqRh-rvJ-MfHF+2XjFZHCUA@mail.gmail.com>
	<CAF2nK606bThgM3VBRun+C25m28WPzje2Jo-YFn2QsUZ6kPY5hg@mail.gmail.com>
	<CAF2nK61bOGaRYjN4=wWQOZQW_aqcOn5wiq55W62e5spy3-bAoQ@mail.gmail.com>
	<1180905038eb1cce7b0c74f847c562a6@mail.gmail.com>
	<CAF2nK62W7wcchzPsjCLAX-A6xQ-jHbux-At25_sKo8=-b9T0rA@mail.gmail.com>
	<CAF2nK63ZVeujgBcGHbjMVbC9thKy8rh0u56YN+DjYNn9OjT+TQ@mail.gmail.com>
	<9744a3d3c97297e7ff0230e6d6ff9bc3@mail.gmail.com>
Message-ID: <CAF2nK63YPk=7gYmhBjMrGjsZYYrCXztx4Viy3H6FOAGzi+CPbQ@mail.gmail.com>

Hi,

Thanks for your input.

I eventually settled for matching multiword keywords with
ALPHANUMERIC, and then using the parser to group it. Very similar to
the solution you proposed.

Quintin Beukes


On Sat, Feb 11, 2012 at 12:14 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Logically, this is never going to work, regardless of what ANTLR is
> predicting or not. As soon as you enter the ALPHANUMERIC rule you will
> consume the next space plus whatever, whether it is a keyword or anything
> else. You are somehow expecting the LEXER to 'know' what you mean and it
> cannot do that.
>
> You do not need to consume the space and next word, you need to just have:
>
> ALPHANUMERIC
> ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+ ;
>
> and
>
> words: ALPHANUMERIC+ ;
>
>
> You can get the whole text of the words rule easily enough if you need it.
>
> However, if you will have cases where the words like 'If' are not always
> keywords, then you will need a parser rule that allows that (keywords as
> identifiers basically).
>
> I am not sure what you are trying to achieve here, but perhaps you are
> over simplifying your problem?
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Quintin Beukes
> > Sent: Friday, February 10, 2012 1:10 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
> >
> > I have further simplified the grammer to the following.
> >
> > Changing the "If " to "If" causes a perfectly fine match. Still
> > ALPHANUMERICSPACE is predicted as the input. It results in this error:
> > line 1:3 required (...)+ loop did not match anything at character
> > '<EOF>'
> >
> > It keeps predicting the wrong input. I have read through tons of
> > documents and am not seeing how to fix this whilst keeping
> > ALPHANUMERICSPACE (which is needed to match multiword tokens).
> >
> > grammar DebugA;
> >
> > @members {
> > ? public static void main(String[] args) throws Exception {
> > ? ? DebugALexer lex = new DebugALexer(new ANTLRStringStream("If "));
> > ? ? Token token;
> > ? ? while ((token = lex.nextToken())!=null) {
> > ? ? ? if ("<EOF>".equals(token.getText())) break;
> > ? ? ? System.out.println("Token: " + token.getType() + "/" +
> > token.getText());
> > ? ? }
> > ? }
> > }
> >
> > ruleExpression
> > ? : IF NEWLINE?
> > ? ? EOF
> > ? ;
> >
> > IF
> > ? : 'If';
> >
> > ALPHANUMERICSPACE
> > ? : ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' |
> > '0'..'9')+)*
> > ? ;
> >
> > WS
> > ? : (' '|'\t')+ {skip();}
> > ? ;
> >
> > NEWLINE
> > ? : '\r'? '\n'
> > ? ;
> >
> > Quintin Beukes
> >
> > On Fri, Feb 10, 2012 at 10:17 AM, Quintin Beukes
> > <quintin.beukes at signio.co.za> wrote:
> > > I have tried to skip whitespace and have used tokens. The above
> > > grammar is mostly just in debug state.
> > >
> > > If I can narrow down the problem even further. The lexer keeps
> > > predicting the "If " to be ALPHANUMERICSPACE, so the lexer fails. I
> > > can actually not see why it would even do that, because this string
> > > can never even match ALPHANUMERICSPACE.
> > >
> > > Input:
> > > (If )
> > >
> > > grammar DebugA;
> > >
> > > tokens {
> > > ?IF = 'If';
> > > ?OB = '(';
> > > ?CB = ')';
> > > }
> > >
> > > fieldRules
> > > ?: rule
> > > ? ?EOF
> > > ?;
> > >
> > > rule
> > > ?: OB ruleExpression CB NEWLINE
> > > ?;
> > >
> > > ruleExpression
> > > ?: IF ALPHANUMERIC
> > > ?;
> > >
> > > ALPHANUMERIC
> > > ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+
> > > ?;
> > >
> > > ALPHANUMERICSPACE
> > > ?: ('a'..'z' | 'A'..'Z' | '0'..'9')+ (' '+ ('a'..'z' | 'A'..'Z' |
> > > '0'..'9')+)*
> > > ?;
> > >
> > > WS
> > > ?: (' '|'\t')+ {skip();}
> > > ?;
> > >
> > > NEWLINE
> > > ?: '\r'? '\n'
> > > ?;
> > >
> > >
> > > Quintin Beukes
> > >
> > > On Thu, Feb 9, 2012 at 9:30 PM, Jim Idle <jimi at temporal-wave.com>
> > wrote:
> > >> Don't use 'strings' in your parser, create real tokens and list the
> > >> keywords and punctuation in the lexer before the generic rule. Also,
> > >> it does not look like you need the spaces, so try skipping them:
> > >>
> > >> LPAREN: '(' ;
> > >> ...
> > >> KEYWORD: 'keyword';
> > >> ....
> > >> ALPHANUMERICSPACE: 'A'..'Z'+ ... etc
> > >>
> > >> WS: (' '|'\t')+ { skip(); } ; ?// Then remove WS refs in your parser
> > >>
> > >>
> > >> Jim
> > >>
> > >>> -----Original Message-----
> > >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > >>> bounces at antlr.org] On Behalf Of Quintin Beukes
> > >>> Sent: Thursday, February 09, 2012 11:20 AM
> > >>> To: antlr-interest at antlr.org
> > >>> Subject: Re: [antlr-interest] Adding a Space Leads to Mismatch
> > >>>
> > >>> I debugged the Lexer, and it seems that it's predictions for the
> > >>> next token always seems to match against ALPHANUMERICSPACE.
> > >>>
> > >>> How can I resolve such a prediction error? Even if just pointing me
> > >>> to the wiki.
> > >>>
> > >>> thanks,
> > >>> Quintin Beukes
> > >>>
> > >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >>> Unsubscribe:
> > >>> http://www.antlr.org/mailman/options/antlr-interest/your-
> > >>> email-address
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jokeserver at gmail.com  Sat Feb 11 00:32:15 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sat, 11 Feb 2012 00:32:15 -0800
Subject: [antlr-interest] grammarDecisionDescription
Message-ID: <CAN51Nt482pCE8imXprTZXKnM=rcG51qQ6cug0kva=tThPXNXeA@mail.gmail.com>

I'm trying to debug my grammar, and the book suggests retrieving a
variable from the error object called "grammarDecisionDescription".
However, all NoViableAltExceptions antlr generates are of the form

nvae = NoViableAltException("", 5, 0, self.input)

with the "" being the argument set as grammarDecisionDescription. The
templates indicate that the "" should be "<description>" (which is
also placed in a comment several lines above), but it is always empty
in this section of the generated code. Is there a way to enable this?

From jokeserver at gmail.com  Sat Feb 11 00:35:51 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sat, 11 Feb 2012 00:35:51 -0800
Subject: [antlr-interest] DFAs
Message-ID: <CAN51Nt4zb65_yZXV74JP77==akQShEcosvg-ZusXsQT7HgE-Yg@mail.gmail.com>

Has anyone been able to have antlr3.4 generate a DFA? I get an error, caused by:

org.antlr.tool.DOTGenerator.java:48    public static STGroup stlib =
new STGroupDir("org/antlr/tool/templates/dot/dfa");

where "org/antlr/tool/templates/dot/dfa" does not exist;
"org/antlr/tool/templates/dot/" contains several .st and .stg files,
including "dfa.st", but no folder named "dfa".

I have similar results for NFA.

From forumer at smartmobili.com  Sat Feb 11 01:48:22 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sat, 11 Feb 2012 10:48:22 +0100
Subject: [antlr-interest] ObjectiveC grammar
Message-ID: <bb9d581f1d51a6d7ad4ae63804185a33@smartmobili.com>

Hi,

I am new to antlr and for the moment I have started to watch the great 
video tutorials by Scott Stanchfield.
TO start working with antlr I would like to parse objective-c and I 
have downloaded grammar from Cedric Cuche,
however when I try to parse very simple example I got some errors :

//
//  SimpleCar.h
//  CarClassTest
//
//

#import <Cocoa/Cocoa.h>


@interface SimpleCar : NSObject {

	NSString* make;
	NSString* model;
	NSNumber* vin;

}

// set methods
- (void) setVin:   (NSNumber*)newVin;
- (void) setMake:  (NSString*)newMake;
- (void) setModel: (NSString*)newModel;

// convenience method
- (void) setMake: (NSString*)newMake andModel: (NSString*)newModel;

// get methods
- (NSString*) make;
- (NSString*) model;
- (NSNumber*) vin;

@end


Inside eclipse with the antlr plugin installed, interpreter tells me :

Failed predicate exception : line 2:0 rule translation_unit failed: 
{can't deal with predicated yet}?

The project is located here : 
https://github.com/smartmobili/parsing/tree/master/ObjectiveC/antlr-objc

What am I doing wrong ?

Thanks



From researcher0x00 at gmail.com  Sat Feb 11 04:52:53 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 11 Feb 2012 07:52:53 -0500
Subject: [antlr-interest] Fwd:  DFAs
In-Reply-To: <CAN45N13b_AUooND3GUtSFZGgO1ZN3gDCYTE0JhhPJFUGQc75uQ@mail.gmail.com>
References: <CAN51Nt4zb65_yZXV74JP77==akQShEcosvg-ZusXsQT7HgE-Yg@mail.gmail.com>
	<CAN45N13b_AUooND3GUtSFZGgO1ZN3gDCYTE0JhhPJFUGQc75uQ@mail.gmail.com>
Message-ID: <CAN45N13Xq2Gt=gLXwp6g_z=5yLbXrRL+9fia7WtW1QomB+-54w@mail.gmail.com>

---------- Forwarded message ----------
From: Eric <researcher0x00 at gmail.com>
Date: Sat, Feb 11, 2012 at 7:29 AM
Subject: Re: [antlr-interest] DFAs
To: Benjamin S Wolf <jokeserver at gmail.com>


Hi Benjamin,

There is a bug with ANTLR 3.4 when generating the DFA or NFA.

I reported is some time ago. See:
http://antlr.markmail.org/search/?q=dfa%203.4#query:dfa%203.4+page:1+mid:cqadnswa2mjzo357+state:results

If you switch to ANTLR 3.3 it should work.

As this is not a show stopper, I do not expect it to be fixed since Ter is
working on ANTLR 4.x.

Remember that Ter is only one person and if he were to fix and make ANTLR
3.4  perfect, we would never have seen ANTLR 4.x.

For me, the trade off is well worth it.

Eric
On Sat, Feb 11, 2012 at 3:35 AM, Benjamin S Wolf <jokeserver at gmail.com>wrote:

> Has anyone been able to have antlr3.4 generate a DFA? I get an error,
> caused by:
>
> org.antlr.tool.DOTGenerator.java:48    public static STGroup stlib =
> new STGroupDir("org/antlr/tool/templates/dot/dfa");
>
> where "org/antlr/tool/templates/dot/dfa" does not exist;
> "org/antlr/tool/templates/dot/" contains several .st and .stg files,
> including "dfa.st", but no folder named "dfa".
>
> I have similar results for NFA.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Sat Feb 11 04:56:55 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 11 Feb 2012 07:56:55 -0500
Subject: [antlr-interest] Fwd:  ObjectiveC grammar
In-Reply-To: <CAN45N12RY4uEtmkEf8i=krWbOHF86QCnpw5UR=TZi4KbrQ_2MA@mail.gmail.com>
References: <bb9d581f1d51a6d7ad4ae63804185a33@smartmobili.com>
	<CAN45N12RY4uEtmkEf8i=krWbOHF86QCnpw5UR=TZi4KbrQ_2MA@mail.gmail.com>
Message-ID: <CAN45N13supqSiAKGHfOoAGxb1nGHN68GAWto4NO2tPHcAXUFAA@mail.gmail.com>

---------- Forwarded message ----------
From: Eric <researcher0x00 at gmail.com>
Date: Sat, Feb 11, 2012 at 7:49 AM
Subject: Re: [antlr-interest] ObjectiveC grammar
To: forumer at smartmobili.com


Hi,

Based on the comment in ObjectiveC.g from the github location you noted

/**
* ObjectiveC version 2
* based on an LL ansic grammars and
* and ObjectiveC grammar found in Learning Object C
*
* It's a Work in progress, most of the .h file can be parsed
* June 2008 Cedric Cuche
**/

I would consider it incomplete and contact Cedric Cuche for details.

There seems to be another ObjectiveC grammar by Alan Condit. It is in the
ANTLR 3.4 download as ObjC

See: http://www.antlr.org/wiki/display/ANTLR3/ANTLR3+Objective-C+Target

Hope that helps,

Eric

On Sat, Feb 11, 2012 at 4:48 AM, <forumer at smartmobili.com> wrote:

> Hi,
>
> I am new to antlr and for the moment I have started to watch the great
> video tutorials by Scott Stanchfield.
> TO start working with antlr I would like to parse objective-c and I
> have downloaded grammar from Cedric Cuche,
> however when I try to parse very simple example I got some errors :
>
> //
> //  SimpleCar.h
> //  CarClassTest
> //
> //
>
> #import <Cocoa/Cocoa.h>
>
>
> @interface SimpleCar : NSObject {
>
>        NSString* make;
>        NSString* model;
>        NSNumber* vin;
>
> }
>
> // set methods
> - (void) setVin:   (NSNumber*)newVin;
> - (void) setMake:  (NSString*)newMake;
> - (void) setModel: (NSString*)newModel;
>
> // convenience method
> - (void) setMake: (NSString*)newMake andModel: (NSString*)newModel;
>
> // get methods
> - (NSString*) make;
> - (NSString*) model;
> - (NSNumber*) vin;
>
> @end
>
>
> Inside eclipse with the antlr plugin installed, interpreter tells me :
>
> Failed predicate exception : line 2:0 rule translation_unit failed:
> {can't deal with predicated yet}?
>
> The project is located here :
> https://github.com/smartmobili/parsing/tree/master/ObjectiveC/antlr-objc
>
> What am I doing wrong ?
>
> Thanks
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From forumer at smartmobili.com  Sat Feb 11 06:02:15 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sat, 11 Feb 2012 15:02:15 +0100
Subject: [antlr-interest] Fwd:  ObjectiveC grammar
In-Reply-To: <CAN45N13supqSiAKGHfOoAGxb1nGHN68GAWto4NO2tPHcAXUFAA@mail.gmail.com>
References: <bb9d581f1d51a6d7ad4ae63804185a33@smartmobili.com>
	<CAN45N12RY4uEtmkEf8i=krWbOHF86QCnpw5UR=TZi4KbrQ_2MA@mail.gmail.com>
	<CAN45N13supqSiAKGHfOoAGxb1nGHN68GAWto4NO2tPHcAXUFAA@mail.gmail.com>
Message-ID: <740cd52551c18a6f67ddf2b5862272fb@smartmobili.com>

Hi,

 From what I understand it's an objective-c backend and allows to 
generate objc code from a ANTLR grammar.
Cannot see any objc grammar but maybe I don't fully understand this 
project.



Le 11.02.2012 13:56, Eric a ?crit?:
> ---------- Forwarded message ----------
> From: Eric <>
> Date: Sat, Feb 11, 2012 at 7:49 AM
> Subject: Re: [antlr-interest] ObjectiveC grammar
> To:
>
>
> Hi,
>
> Based on the comment in ObjectiveC.g from the github location you 
> noted
>
> /**
> * ObjectiveC version 2
> * based on an LL ansic grammars and
> * and ObjectiveC grammar found in Learning Object C
> *
> * It's a Work in progress, most of the .h file can be parsed
> * June 2008 Cedric Cuche
> **/
>
> I would consider it incomplete and contact Cedric Cuche for details.
>
> There seems to be another ObjectiveC grammar by Alan Condit. It is in 
> the
> ANTLR 3.4 download as ObjC
>
> See: 
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR3+Objective-C+Target
>
> Hope that helps,
>
> Eric
>
> On Sat, Feb 11, 2012 at 4:48 AM, <> wrote:
>
>> Hi,
>>
>> I am new to antlr and for the moment I have started to watch the 
>> great
>> video tutorials by Scott Stanchfield.
>> TO start working with antlr I would like to parse objective-c and I
>> have downloaded grammar from Cedric Cuche,
>> however when I try to parse very simple example I got some errors :
>>
>> //
>> //  SimpleCar.h
>> //  CarClassTest
>> //
>> //
>>
>> #import <Cocoa/Cocoa.h>
>>
>>
>> @interface SimpleCar : NSObject {
>>
>>        NSString* make;
>>        NSString* model;
>>        NSNumber* vin;
>>
>> }
>>
>> // set methods
>> - (void) setVin:   (NSNumber*)newVin;
>> - (void) setMake:  (NSString*)newMake;
>> - (void) setModel: (NSString*)newModel;
>>
>> // convenience method
>> - (void) setMake: (NSString*)newMake andModel: (NSString*)newModel;
>>
>> // get methods
>> - (NSString*) make;
>> - (NSString*) model;
>> - (NSNumber*) vin;
>>
>> @end
>>
>>
>> Inside eclipse with the antlr plugin installed, interpreter tells me 
>> :
>>
>> Failed predicate exception : line 2:0 rule translation_unit failed:
>> {can't deal with predicated yet}?
>>
>> The project is located here :
>> 
>> https://github.com/smartmobili/parsing/tree/master/ObjectiveC/antlr-objc
>>
>> What am I doing wrong ?
>>
>> Thanks
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From researcher0x00 at gmail.com  Sat Feb 11 06:56:27 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 11 Feb 2012 09:56:27 -0500
Subject: [antlr-interest] Fwd: ObjectiveC grammar
In-Reply-To: <740cd52551c18a6f67ddf2b5862272fb@smartmobili.com>
References: <bb9d581f1d51a6d7ad4ae63804185a33@smartmobili.com>
	<CAN45N12RY4uEtmkEf8i=krWbOHF86QCnpw5UR=TZi4KbrQ_2MA@mail.gmail.com>
	<CAN45N13supqSiAKGHfOoAGxb1nGHN68GAWto4NO2tPHcAXUFAA@mail.gmail.com>
	<740cd52551c18a6f67ddf2b5862272fb@smartmobili.com>
Message-ID: <CAN45N11Eqep2r7k3NcSnx_7nKKzLKz+kq9TkgGfABvHU0oHzcA@mail.gmail.com>

Hi,

My mistake, I thought the ObjC directory had an objectivec.g file in it,
and it doesn''t.

I would still try and contact Cedric Cuche.

Eric
On Sat, Feb 11, 2012 at 9:02 AM, <forumer at smartmobili.com> wrote:

> Hi,
>
>  From what I understand it's an objective-c backend and allows to
> generate objc code from a ANTLR grammar.
> Cannot see any objc grammar but maybe I don't fully understand this
> project.
>
>
>
> Le 11.02.2012 13:56, Eric a ?crit :
> > ---------- Forwarded message ----------
> > From: Eric <>
> > Date: Sat, Feb 11, 2012 at 7:49 AM
> > Subject: Re: [antlr-interest] ObjectiveC grammar
> > To:
> >
> >
> > Hi,
> >
> > Based on the comment in ObjectiveC.g from the github location you
> > noted
> >
> > /**
> > * ObjectiveC version 2
> > * based on an LL ansic grammars and
> > * and ObjectiveC grammar found in Learning Object C
> > *
> > * It's a Work in progress, most of the .h file can be parsed
> > * June 2008 Cedric Cuche
> > **/
> >
> > I would consider it incomplete and contact Cedric Cuche for details.
> >
> > There seems to be another ObjectiveC grammar by Alan Condit. It is in
> > the
> > ANTLR 3.4 download as ObjC
> >
> > See:
> > http://www.antlr.org/wiki/display/ANTLR3/ANTLR3+Objective-C+Target
> >
> > Hope that helps,
> >
> > Eric
> >
> > On Sat, Feb 11, 2012 at 4:48 AM, <> wrote:
> >
> >> Hi,
> >>
> >> I am new to antlr and for the moment I have started to watch the
> >> great
> >> video tutorials by Scott Stanchfield.
> >> TO start working with antlr I would like to parse objective-c and I
> >> have downloaded grammar from Cedric Cuche,
> >> however when I try to parse very simple example I got some errors :
> >>
> >> //
> >> //  SimpleCar.h
> >> //  CarClassTest
> >> //
> >> //
> >>
> >> #import <Cocoa/Cocoa.h>
> >>
> >>
> >> @interface SimpleCar : NSObject {
> >>
> >>        NSString* make;
> >>        NSString* model;
> >>        NSNumber* vin;
> >>
> >> }
> >>
> >> // set methods
> >> - (void) setVin:   (NSNumber*)newVin;
> >> - (void) setMake:  (NSString*)newMake;
> >> - (void) setModel: (NSString*)newModel;
> >>
> >> // convenience method
> >> - (void) setMake: (NSString*)newMake andModel: (NSString*)newModel;
> >>
> >> // get methods
> >> - (NSString*) make;
> >> - (NSString*) model;
> >> - (NSNumber*) vin;
> >>
> >> @end
> >>
> >>
> >> Inside eclipse with the antlr plugin installed, interpreter tells me
> >> :
> >>
> >> Failed predicate exception : line 2:0 rule translation_unit failed:
> >> {can't deal with predicated yet}?
> >>
> >> The project is located here :
> >>
> >>
> https://github.com/smartmobili/parsing/tree/master/ObjectiveC/antlr-objc
> >>
> >> What am I doing wrong ?
> >>
> >> Thanks
> >>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >>
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kierans777 at gmail.com  Sat Feb 11 13:33:57 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 12 Feb 2012 08:33:57 +1100
Subject: [antlr-interest] gUnit tests with multiple languages
In-Reply-To: <CAFJ6+2d4m6cAE_7Mj7smR1K9qdxULcTuzmsxpc+U_yECpORDkA@mail.gmail.com>
References: <CAFJ6+2d4m6cAE_7Mj7smR1K9qdxULcTuzmsxpc+U_yECpORDkA@mail.gmail.com>
Message-ID: <4F36DEC5.5070302@gmail.com>

The solution I've come up with is to unit test the parser (the grammar 
that produces an AST) with gUnit and use a testing framework for my 
target language to test the tree walker as the point of the tree walker 
is to interact with my other code.  Using stubs I can examine the 
behaviour of the tree walker as it walks a test AST.

HTH.

On 23/07/64 5:59 AM, Kunal Sawlani wrote:
> Hi,
>
> I am currently using gUnit to test the Java parsers we are currently
> generating from ANTLR.
>
> However, we are using the same grammar source to generate parsers in a
> couple of other languages (Ruby, JavaScript). I would like to use the same
> gUnit tests for testing the results from these parsers as well, to enable
> single sourcing of my tests, and not re-write them for every language.
>
> Is there any way to do this? May be a JSON format for specifying test cases
> which would work for all the languages?
>
> Thanks,
>

From gokul007 at gmail.com  Sat Feb 11 22:31:05 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 12 Feb 2012 14:31:05 +0800
Subject: [antlr-interest] C++ Target First cut
Message-ID: <CAHMh4-atoRZvPpaDRssTg+_PpmJNvmrjJ-3sop+x+bdLBhasRQ@mail.gmail.com>

Hi,
   I have made the C++ Target working for a small example. Now i need the
help of everyone who needs a C++ Parser to test it and report me with the
bugs. This would help us to complete the C++ Target. I have made it working
with the dynamic scopes example, which is also present in the attachment.
I will also test with other examples.
  I would also welcome any suggestions that might make the usage more
intuitive. Currently, just to work with the defaults, we need to write a
header file like this and include it like this

@lexer::includes
{
   #include "UserTraits.hpp"
   #define USER_NAMESPACE User
}

@parser::includes
{
   #include "UserTraits.hpp"
   #define USER_NAMESPACE User
}

Of course the namespace #define is optional. But the UserTraits is
necessary and it looks like this for the generated lexer and parser TLexer
and TParser.


namespace User {

//If you need to override, copy the traits here and override the necessary
traits
#include <antlr3traits.hpp>

class TLexer;
class TParser;

typedef StreamTraits<TLexer, TParser> TTraits;
typedef TTraits TLexerTraits;
typedef TTraits TParserTraits;


}


Please let me know, if you need any clarifications. I have also fixed the
bugs testing it with g++.

Thanks,
Gokul.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cpp.7z
Type: application/octet-stream
Size: 106717 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120212/ae7bd72d/attachment.obj 

From gokul007 at gmail.com  Sun Feb 12 03:03:03 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 12 Feb 2012 19:03:03 +0800
Subject: [antlr-interest] C++ Target First cut
In-Reply-To: <CAHMh4-atoRZvPpaDRssTg+_PpmJNvmrjJ-3sop+x+bdLBhasRQ@mail.gmail.com>
References: <CAHMh4-atoRZvPpaDRssTg+_PpmJNvmrjJ-3sop+x+bdLBhasRQ@mail.gmail.com>
Message-ID: <CAHMh4-bJEOPktFNme+VOkUN=3A6OwSMAsQmK7gkwWaC6YmZ=Cg@mail.gmail.com>

Fixed a memory leekage. Even if there are any more memory leekages, if the
user uses a memory pool for all the allocation needs of the Parser and
finally drops the memory pool at the end of parsing, the leekages can be
totally avoided.

Thanks,
Gokul.

On Sun, Feb 12, 2012 at 2:31 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Hi,
>    I have made the C++ Target working for a small example. Now i need the
> help of everyone who needs a C++ Parser to test it and report me with the
> bugs. This would help us to complete the C++ Target. I have made it working
> with the dynamic scopes example, which is also present in the attachment.
> I will also test with other examples.
>   I would also welcome any suggestions that might make the usage more
> intuitive. Currently, just to work with the defaults, we need to write a
> header file like this and include it like this
>
> @lexer::includes
> {
>    #include "UserTraits.hpp"
>    #define USER_NAMESPACE User
> }
>
> @parser::includes
> {
>    #include "UserTraits.hpp"
>    #define USER_NAMESPACE User
> }
>
> Of course the namespace #define is optional. But the UserTraits is
> necessary and it looks like this for the generated lexer and parser TLexer
> and TParser.
>
>
> namespace User {
>
> //If you need to override, copy the traits here and override the necessary
> traits
> #include <antlr3traits.hpp>
>
> class TLexer;
> class TParser;
>
> typedef StreamTraits<TLexer, TParser> TTraits;
> typedef TTraits TLexerTraits;
> typedef TTraits TParserTraits;
>
>
> }
>
>
> Please let me know, if you need any clarifications. I have also fixed the
> bugs testing it with g++.
>
> Thanks,
> Gokul.
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cpp.7z
Type: application/octet-stream
Size: 106734 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120212/14edbd65/attachment-0001.obj 

From toolusr at gmail.com  Sun Feb 12 03:57:28 2012
From: toolusr at gmail.com (ToolUsr)
Date: Sun, 12 Feb 2012 03:57:28 -0800
Subject: [antlr-interest] Why is the filter option incompatible with the
	template option?
Message-ID: <CEDA1CB8-E33A-4A6A-A1E7-C633247C9AB0@gmail.com>

Hello,
    I have a Model-View pattern where the Model is an AST producing grammar  created from a parsed language (i.e. Java), which is then passed on to various tree grammar Views which filter the model for presentation. The Model is output language independent, just pure ANTLR producing the full AST representation of the file. The Views (which are filters by their nature) use actions and what not to act on the full model, and I need to have this be a template for various reasons. However, ANTLR errors out that the two options are incompatible, in a tree grammar at least. 
    This makes no sense to me, in a MVC pattern it makes sense for the model to be complete and as the heavy lifting is done in the Views, they need as much help as they can get, i.e. filtering and templates for code generation and whatnot. 

From gokul007 at gmail.com  Sun Feb 12 17:37:34 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 13 Feb 2012 09:37:34 +0800
Subject: [antlr-interest] C++ Target First cut
In-Reply-To: <CAHMh4-bJEOPktFNme+VOkUN=3A6OwSMAsQmK7gkwWaC6YmZ=Cg@mail.gmail.com>
References: <CAHMh4-atoRZvPpaDRssTg+_PpmJNvmrjJ-3sop+x+bdLBhasRQ@mail.gmail.com>
	<CAHMh4-bJEOPktFNme+VOkUN=3A6OwSMAsQmK7gkwWaC6YmZ=Cg@mail.gmail.com>
Message-ID: <CAHMh4-Ym53muSBmW1SDEx-E4pN7qf3oydHLxZ8iCrTZD178zYA@mail.gmail.com>

Made some more improvements, especially with respect to the CommonToken
storage. Also changed the way how namespace is mentioned to the code
generator. Removed the #define and introduced a scope called @namespace.

Did some quick benchmarks on the dynamic_scope example of C Target. I
removed the print statements, so that the parsing alone is benchmarked.
Found around 20% runtime improvement with the C++ Target. :). This is with
the defaults of C++ Target like std::string, std::vector etc. Request
someone to verify the same. The code is attached here by, but i have used
boost timestamp functions.

Planning to do some more testing.

Gokul.

On Sun, Feb 12, 2012 at 7:03 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Fixed a memory leekage. Even if there are any more memory leekages, if the
> user uses a memory pool for all the allocation needs of the Parser and
> finally drops the memory pool at the end of parsing, the leekages can be
> totally avoided.
>
> Thanks,
> Gokul.
>
>
> On Sun, Feb 12, 2012 at 2:31 PM, Gokulakannan Somasundaram <
> gokul007 at gmail.com> wrote:
>
>> Hi,
>>    I have made the C++ Target working for a small example. Now i need the
>> help of everyone who needs a C++ Parser to test it and report me with the
>> bugs. This would help us to complete the C++ Target. I have made it working
>> with the dynamic scopes example, which is also present in the attachment.
>> I will also test with other examples.
>>   I would also welcome any suggestions that might make the usage more
>> intuitive. Currently, just to work with the defaults, we need to write a
>> header file like this and include it like this
>>
>> @lexer::includes
>> {
>>    #include "UserTraits.hpp"
>>    #define USER_NAMESPACE User
>> }
>>
>> @parser::includes
>> {
>>    #include "UserTraits.hpp"
>>    #define USER_NAMESPACE User
>> }
>>
>> Of course the namespace #define is optional. But the UserTraits is
>> necessary and it looks like this for the generated lexer and parser TLexer
>> and TParser.
>>
>>
>> namespace User {
>>
>> //If you need to override, copy the traits here and override the
>> necessary traits
>> #include <antlr3traits.hpp>
>>
>> class TLexer;
>> class TParser;
>>
>> typedef StreamTraits<TLexer, TParser> TTraits;
>> typedef TTraits TLexerTraits;
>> typedef TTraits TParserTraits;
>>
>>
>> }
>>
>>
>> Please let me know, if you need any clarifications. I have also fixed the
>> bugs testing it with g++.
>>
>> Thanks,
>> Gokul.
>>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cpp.7z
Type: application/octet-stream
Size: 111285 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120213/1c749cc7/attachment.obj 

From marco.laponder at kewill.com  Mon Feb 13 01:28:24 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Mon, 13 Feb 2012 10:28:24 +0100
Subject: [antlr-interest] newbi question : operator + any
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl><CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com><BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl><CAAfeETq6wZzNJVL024MPh75qiZLe8NtU8i9XuzwGdAyPBZmO3g@mail.gmail.com><BF31D3D67397D347A50CB2E0ACE89ADAF9744B@scania.interchain.nl>
	<CAAfeETrR8eTpg4dktYQMBRx7Gq6HTXAJAFxPj+v=B2ECph2ixQ@mail.gmail.com>
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF97607@scania.interchain.nl>

Well, although @4dUbb%ez_5&q is not likely, it is a valid filter string,
as all the characters could be present in a field of the table to be
filtered. A '@' could e.g. be present in a mail address, the '&' in a
name (Bang & Olufsen), etc. So I would consider  @4dUbb%ez_5&q valid. I
understand parsing for an identifier would be more simple, but not
sufficient for my case.

 

Kind regards,
Marco

 

________________________________

Van: Kyle Ferrio [mailto:kferrio at gmail.com] 
Verzonden: vrijdag 10 februari 2012 21:10
Aan: Marco Laponder
Onderwerp: RE: [antlr-interest] newbi question : operator + any

 

Ok.  You do want to parse grouped  combinations of Boolean expressions.
So you almost certainly want a parser, not an awk filter.

But I note with interest that the instances of ANYTHING in your examples
are limited to lower case alpha.  Ask yourself this... Would
@4dUbb%ez_5&q be a valid ANYTHING in your language?  If not, why not?  A
non-null answer will define an identifier pattern which restricts the
class, so that the kind of awkward problem you're encountering now
simply won't arise.  This is easier to see after doing than before
doing.

BTW, you're actually grappling with the edges of a pretty profound
linguistic/semiotic question, namely what do we mean by 'language' and
how do we discriminate (much less parse) language from noise.  I'm not
smart enough to answer that, which is off-topic for this listserv
anyway.  So I just try to make things simple and get work done.  I think
specifying an IDENTIFIER class in place of your ANYTHING will make your
task much easier.

Kyle

On Feb 9, 2012 11:08 PM, "Marco Laponder" <marco.laponder at kewill.com>
wrote:

Hi,

 

Let tackle your questions:

 

Q1: I was struggling with this question myself, as I was explaining
earlier for now it is pretty simple, a comparison operator followed by a
string which is nog problem to handle with a regular expression. However
I would like to enhance this later on, with parenthesis, 'and', 'or'
constructions etc. So in the future I might be able to handle a string
like : 
( > a && < b) || ( (<=c and >=f )  or (== f) )
which is harder (for me anyway) to handle with a regular expression

 

Q2: ANYTHING is really anything, the grammar is for a filter language on
a table for a specific column, and as the user (especially my users I
think ;-) ) must best be able to filter on anything in the table I have
no additional restrictions there. The data in the table can contain
anything, and therefore the filter can contain anything

 

I am working with antlr v3 right now, but if v4 is the better way to go
there is no problem there as I am just getting started. Regarding the
books, there you have a fair point. I will look what the ANLTR bibles
are.

 

Kind regards,

Marco

 

________________________________

Van: Kyle Ferrio [mailto:kferrio at gmail.com] 
Verzonden: woensdag 8 februari 2012 15:52
Aan: Marco Laponder
Onderwerp: Re: [antlr-interest] newbi question : operator + any

 

Hi,

I'm joining the thread late, but this sounds a bit like an experience I
have seen a few times. Sometimes trying to make things "too simple"
actually makes lexing and parsing more difficult.  While is is often
good to defer decisions in software as long as possible, it is also
helpful to use all of the information at our disposal.  That probably
seems vague, so here are some questions to consider. 

Q1: Is your application likely to grow in syntactic and/or semantic
complexity to a point that its needs cannot be economically met by a
simple filter implemented, say, with GNU awk?  I'm not trying to
discourage you from using ANTLR.  ANTLR is awesome.  But the difference
in costs between the two approaches is large, so it makes sense to ask.

Q2: Do you have any stronger guarantees on the form of the input?  For
example, is  ANYTHING really anything (excluding a finite set of
operators)?  Or are legal operands actually restricted, say, to the set
of common alphanumeric identifiers and possibly literal values?  If so,
your work just got vastly easier.

I don't recall whether you mentioned that you're working with antlr v3
or the yet-to-be-released v4.  I suggest pursuing the examples
appropriate to your version from the antlr website.  (Note that antlr v4
provides greatly enhanced expressiveness for expression-parsing, but
examples for v3 are much more plentiful at the moment.)

Also, definitely get your hands on the two ANTLR books.  They'll save
you time and are actually a lot of fun if you're into this sort of
thing.

Best Luck,
Kyle

On Tue, Feb 7, 2012 at 11:58 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Lets explain what I am trying to accomplish, maybe you can provide me
the most impressive grammars :-)



I am trying to parse a filter string which filter on a column of a
table, so I need to know the operator. In my example I stated the '>'
but of course I would like to expand it to '<','>=' etc and alter on
even add parenthesis, 'and' and 'or' etc. But I would like to start
simple as I am new at ANTLR.



Your sample does the trick, however looks hard to maintain, e.g., when I
add the '<' to COMPARE I also need to add it to ANYTHING. (Well it seems
still more maintainable than a single regular expression no one
understands to do the trick ;-) )



Kind regards,
Marco



________________________________

Van: Marco Laponder
Verzonden: dinsdag 7 februari 2012 8:45
Aan: 'Gokulakannan Somasundaram'
CC: antlr-interest at antlr.org
Onderwerp: RE: [antlr-interest] newbi question : operator + any



This still gives me the same error, any other ideas ? Of is antlr just
not appropriate for this ?



Kind regards,

Marco



________________________________

Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
Verzonden: maandag 6 februari 2012 16:56
Aan: Marco Laponder
CC: antlr-interest at antlr.org
Onderwerp: Re: [antlr-interest] newbi question : operator + any



COMPARE : '>';

ANYTHING : (~'>')(.)*;

testExpression : COMPARE ANYTHING;





Try this.



Gokul.

On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
<marco.laponder at kewill.com> wrote:

Hi All,



I am trying to setup a very simple grammar, ik should be able to handle



"> thiscouldbeanything"



So I tried:



COMPARE : '>';

ANYTHING : (.)+;

testExpression : COMPARE ANYTHING;



but when generating java resources it gave me the error:



"The following alternatives can never be matched: 1"



The problems seems to be the ANYTHING, so how should I define a grammar
to be able to handle this ?



Kind regards,

Marco


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From kferrio at gmail.com  Mon Feb 13 08:46:59 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Mon, 13 Feb 2012 09:46:59 -0700
Subject: [antlr-interest] newbi question : operator + any
In-Reply-To: <BF31D3D67397D347A50CB2E0ACE89ADAF97607@scania.interchain.nl>
References: <BF31D3D67397D347A50CB2E0ACE89ADAF4BA2A@scania.interchain.nl>
	<CAHMh4-b254jjG7d+W65POktKPc6QUHqbfDiLxHVUNfsZ1ULEcA@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF4BC9A@scania.interchain.nl>
	<CAAfeETq6wZzNJVL024MPh75qiZLe8NtU8i9XuzwGdAyPBZmO3g@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF9744B@scania.interchain.nl>
	<CAAfeETrR8eTpg4dktYQMBRx7Gq6HTXAJAFxPj+v=B2ECph2ixQ@mail.gmail.com>
	<BF31D3D67397D347A50CB2E0ACE89ADAF97607@scania.interchain.nl>
Message-ID: <CAAfeETr3op6X0tabxmqmuiPJEuK1GwWqrD2U6k_TeZc9oymVGA@mail.gmail.com>

Hi Marco,

I see.  Perhaps you will discover classes (email, name, stock symbol,
whatever) each of which is suuficiently constrained to facilitate your
work.

Good luck,
Kyle
 On Feb 13, 2012 2:28 AM, "Marco Laponder" <marco.laponder at kewill.com>
wrote:

>  Well, although @4dUbb%ez_5&q is not likely, it is a valid filter string,
> as all the characters could be present in a field of the table to be
> filtered. A ?@? could e.g. be present in a mail address, the ?&? in a name
> (Bang & Olufsen), etc. So I would consider  @4dUbb%ez_5&q valid. I
> understand parsing for an identifier would be more simple, but not
> sufficient for my case.****
>
> ** **
>
> Kind regards,
> Marco****
>
> ** **
>  ------------------------------
>
> *Van:* Kyle Ferrio [mailto:kferrio at gmail.com]
> *Verzonden:* vrijdag 10 februari 2012 21:10
> *Aan:* Marco Laponder
> *Onderwerp:* RE: [antlr-interest] newbi question : operator + any****
>
> ** **
>
> Ok.  You do want to parse grouped  combinations of Boolean expressions.
> So you almost certainly want a parser, not an awk filter.****
>
> But I note with interest that the instances of ANYTHING in your examples
> are limited to lower case alpha.  Ask yourself this... Would @4dUbb%ez_5&q
> be a valid ANYTHING in your language?  If not, why not?  A non-null answer
> will define an identifier pattern which restricts the class, so that the
> kind of awkward problem you're encountering now simply won't arise.  This
> is easier to see after doing than before doing.****
>
> BTW, you're actually grappling with the edges of a pretty profound
> linguistic/semiotic question, namely what do we mean by 'language' and how
> do we discriminate (much less parse) language from noise.  I'm not smart
> enough to answer that, which is off-topic for this listserv anyway.  So I
> just try to make things simple and get work done.  I think specifying an
> IDENTIFIER class in place of your ANYTHING will make your task much easier.
> ****
>
> Kyle****
>
> On Feb 9, 2012 11:08 PM, "Marco Laponder" <marco.laponder at kewill.com>
> wrote:****
>
> Hi,****
>
>  ****
>
> Let tackle your questions:****
>
>  ****
>
> Q1: I was struggling with this question myself, as I was explaining
> earlier for now it is pretty simple, a comparison operator followed by a
> string which is nog problem to handle with a regular expression. However I
> would like to enhance this later on, with parenthesis, ?and?, ?or?
> constructions etc. So in the future I might be able to handle a string like
> :
> ( > a && < b) || ( (<=c and >=f )  or (== f) )
> which is harder (for me anyway) to handle with a regular expression****
>
>  ****
>
> Q2: ANYTHING is really anything, the grammar is for a filter language on a
> table for a specific column, and as the user (especially my users I think
> ;-) ) must best be able to filter on anything in the table I have no
> additional restrictions there. The data in the table can contain anything,
> and therefore the filter can contain anything****
>
>  ****
>
> I am working with antlr v3 right now, but if v4 is the better way to go
> there is no problem there as I am just getting started. Regarding the
> books, there you have a fair point. I will look what the ANLTR bibles are.
> ****
>
>  ****
>
> Kind regards,****
>
> Marco****
>
>  ****
>  ------------------------------
>
> *Van:* Kyle Ferrio [mailto:kferrio at gmail.com]
> *Verzonden:* woensdag 8 februari 2012 15:52
> *Aan:* Marco Laponder
> *Onderwerp:* Re: [antlr-interest] newbi question : operator + any****
>
>  ****
>
> Hi,
>
> I'm joining the thread late, but this sounds a bit like an experience I
> have seen a few times. Sometimes trying to make things "too simple"
> actually makes lexing and parsing more difficult.  While is is often good
> to defer decisions in software as long as possible, it is also helpful to
> use all of the information at our disposal.  That probably seems vague, so
> here are some questions to consider.
>
> Q1: Is your application likely to grow in syntactic and/or semantic
> complexity to a point that its needs cannot be economically met by a simple
> filter implemented, say, with GNU awk?  I'm not trying to discourage you
> from using ANTLR.  ANTLR is awesome.  But the difference in costs between
> the two approaches is large, so it makes sense to ask.
>
> Q2: Do you have any stronger guarantees on the form of the input?  For
> example, is  ANYTHING really *anything* (excluding a finite set of
> operators)?  Or are legal operands actually restricted, say, to the set of
> common alphanumeric identifiers and possibly literal values?  If so, your
> work just got vastly easier.
>
> I don't recall whether you mentioned that you're working with antlr v3 or
> the yet-to-be-released v4.  I suggest pursuing the examples appropriate to
> your version from the antlr website.  (Note that antlr v4 provides greatly
> enhanced expressiveness for expression-parsing, but examples for v3 are
> much more plentiful at the moment.)
>
> Also, definitely get your hands on the two ANTLR books.  They'll save you
> time and are actually a lot of fun if you're into this sort of thing.
>
> Best Luck,
> Kyle****
>
> On Tue, Feb 7, 2012 at 11:58 PM, Marco Laponder <marco.laponder at kewill.com>
> wrote:****
>
> Lets explain what I am trying to accomplish, maybe you can provide me
> the most impressive grammars :-)
>
>
>
> I am trying to parse a filter string which filter on a column of a
> table, so I need to know the operator. In my example I stated the '>'
> but of course I would like to expand it to '<','>=' etc and alter on
> even add parenthesis, 'and' and 'or' etc. But I would like to start
> simple as I am new at ANTLR.
>
>
>
> Your sample does the trick, however looks hard to maintain, e.g., when I
> add the '<' to COMPARE I also need to add it to ANYTHING. (Well it seems
> still more maintainable than a single regular expression no one
> understands to do the trick ;-) )
>
>
>
> Kind regards,
> Marco
>
>
>
> ________________________________
>
> Van: Marco Laponder
> Verzonden: dinsdag 7 februari 2012 8:45
> Aan: 'Gokulakannan Somasundaram'
> CC: antlr-interest at antlr.org
> Onderwerp: RE: [antlr-interest] newbi question : operator + any
>
>
>
> This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address****
>
>  ****
>

From fwierzbicki at gmail.com  Tue Feb 14 11:02:46 2012
From: fwierzbicki at gmail.com (fwierzbicki at gmail.com)
Date: Tue, 14 Feb 2012 11:02:46 -0800
Subject: [antlr-interest] Changing the Lexer based on parsing the first part
 of a file for Python 2.6
Message-ID: <CADrh4zKcSe9B87SEuvMBDKEueWzwDg5QyBcPJFdU4bQyyVmwFQ@mail.gmail.com>

Hi all,

Python 2.6 has syntax to change lexing behavior. Specifically:

from __future__ import unicode_literals

If this statement is present the lexing of strings changes. Without
this directive,

foo = "bar"

assigns foo a String value. With the __future__ statement, foo gets a
unicode statement. Also the __future__ statement causes

foo = u"bar"

to be an illegal statement. Essentially this allows you to write a 2.x
program that will look more like a Python 3 program.

So my question - what is a reasonable way to get my ANTLR3 grammar to
signal the lexer to change? Though it seems ugly, my first thought is
to pass a reference to the lexer to the parser and just set a boolean
on the lexer so it has the correct behavior from then on. The reason
that this *may* work is that Python only allows "from __future__"
statements at the very top of the file and so no string/unicode/etc
tokens are possible until after all "from __future__" statements have
occurred. Will I get into trouble with cached lexing that has already
happened? Or is there a better way to do this sort of thing?

Kind regards,

-Frank Wierzbicki

From jimi at temporal-wave.com  Tue Feb 14 12:56:33 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 14 Feb 2012 12:56:33 -0800
Subject: [antlr-interest] Changing the Lexer based on parsing the first
 part of a file for Python 2.6
In-Reply-To: <CADrh4zKcSe9B87SEuvMBDKEueWzwDg5QyBcPJFdU4bQyyVmwFQ@mail.gmail.com>
References: <CADrh4zKcSe9B87SEuvMBDKEueWzwDg5QyBcPJFdU4bQyyVmwFQ@mail.gmail.com>
Message-ID: <0097b488d90358bfc04f68813998cc5b@mail.gmail.com>

You should only change the lexing behavior within the lexer. You will have
to set a member variable to false, then in the lexer you will need to look
for that statement and set the state in the lexer. You will not be able to
get the parser to tell the lexer about this as generally it will be too
late.

Another way might be that the lexer can do the most expansive thing (for
instance add two possibilities to a token), and the parser can choose the
one that makes sense after it hits that statement.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of fwierzbicki at gmail.com
> Sent: Tuesday, February 14, 2012 11:03 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Changing the Lexer based on parsing the first
> part of a file for Python 2.6
>
> Hi all,
>
> Python 2.6 has syntax to change lexing behavior. Specifically:
>
> from __future__ import unicode_literals
>
> If this statement is present the lexing of strings changes. Without
> this directive,
>
> foo = "bar"
>
> assigns foo a String value. With the __future__ statement, foo gets a
> unicode statement. Also the __future__ statement causes
>
> foo = u"bar"
>
> to be an illegal statement. Essentially this allows you to write a 2.x
> program that will look more like a Python 3 program.
>
> So my question - what is a reasonable way to get my ANTLR3 grammar to
> signal the lexer to change? Though it seems ugly, my first thought is
> to pass a reference to the lexer to the parser and just set a boolean
> on the lexer so it has the correct behavior from then on. The reason
> that this *may* work is that Python only allows "from __future__"
> statements at the very top of the file and so no string/unicode/etc
> tokens are possible until after all "from __future__" statements have
> occurred. Will I get into trouble with cached lexing that has already
> happened? Or is there a better way to do this sort of thing?
>
> Kind regards,
>
> -Frank Wierzbicki
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ramponjerome at yahoo.fr  Tue Feb 14 13:06:58 2012
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Tue, 14 Feb 2012 21:06:58 +0000 (GMT)
Subject: [antlr-interest] Composite grammars - potential improvement
Message-ID: <1329253618.34845.YahooMailNeo@web24710.mail.ird.yahoo.com>




Hi,


As a potential future incremental compilation speed-up (for ANTLR project developments)


I noticed the following with a large grammar

I do have split version with composite grammar
and not splitted one :

The generation of output JAVA Lexer is similar if antlr is invoked twice
on whatever case.


For the generation of output JAVA parser,
there are some differences in the order of delegated rules listing for the
composite version. It does not impact the results but
a kind of issue regarding incremental compilation and generation of an ANTLR project.


Probably some hash output listing which is not sorted alphabetically ...

For non composite version, only versionning and date of ANTLR differs
I use it with some diff <(tail -n +2 ANTLR output) ... to avoid over-compilation
in project builds


Not working with composite parsers ...


Jerome

From parrt at cs.usfca.edu  Tue Feb 14 16:38:40 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Feb 2012 16:38:40 -0800
Subject: [antlr-interest] updated honey badger v4 listener events
Message-ID: <22E1C0A1-5419-41AB-93E1-F98EF6AE2E80@cs.usfca.edu>

Hi, pushed a lot of small fixes and did a major overhaul of the listener event mechanism:

* See https://github.com/antlr/antlr4/issues/8

* Renamed BlankXListener to XBaseListener

* removed "Rule" from the listener events: enter(MyParser.XContext ctx)

* added getter methods for all elements in a rule or labeled alternative for easy access within the listeners.

See A.g4 and A2.g4 and their test rigs to see with the listeners look like. pretty damn cool.

http://www.antlr.org/wiki/display/ANTLR4/Examples

can grab the latest from here:

https://github.com/antlr/antlr4/downloads

jump inside and say "ant distribute" or "ant"

Ter



From citizen.adrian.1 at gmail.com  Tue Feb 14 17:10:50 2012
From: citizen.adrian.1 at gmail.com (Adrian Evans)
Date: Wed, 15 Feb 2012 02:10:50 +0100
Subject: [antlr-interest] Help With Antlr3.4 on Mac Os X
Message-ID: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>

Hello,

 I'm trying to follow the examples from : How do I use ANTLR v3 from the command line. I've installed antlr-3.4 on Mac OS 10.6.8:

java version "1.6.0_26"
Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)

java org.antlr.Tool -version
ANTLR Parser Generator  Version 3.4

 In the example directory (examples-v3/java/LL-star), I can compile the .g and compile the java - no problem:

echo $CLASSPATH
../../../antlr-3.4/lib/antlr-3.4-complete.jar

[examples-v3/java/LL-star] % java org.antlr.Tool SimpleC.g
[examples-v3/java/LL-star] % javac *java

But when I run - I GET

[examples-v3/java/LL-star] % java Main input
Exception in thread "main" java.lang.NoClassDefFoundError: Main
Caused by: java.lang.ClassNotFoundException: Main
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
[examples-v3/java/LL-star] % 
more Main.java 
import org.antlr.runtime.*;

public class Main {
        public static void main(String[] args) throws Exception {
                CharStream input = new ANTLRFileStream(args[0]);
                SimpleCLexer lex = new SimpleCLexer(input);
                CommonTokenStream tokens = new CommonTokenStream(lex);
                //System.out.println("tokens="+tokens);
                SimpleCParser parser = new SimpleCParser(tokens);
                parser.program();
        }
}

Any tips?

Thanks!

AE

From parrt at cs.usfca.edu  Tue Feb 14 17:33:51 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Feb 2012 17:33:51 -0800
Subject: [antlr-interest] Help With Antlr3.4 on Mac Os X
In-Reply-To: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>
References: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>
Message-ID: <3AC624A0-7E0C-4AEE-AC9D-B71B43D7A879@cs.usfca.edu>

is dot in your classpath?
Ter
On Feb 14, 2012, at 5:10 PM, Adrian Evans wrote:

> Hello,
> 
> I'm trying to follow the examples from : How do I use ANTLR v3 from the command line. I've installed antlr-3.4 on Mac OS 10.6.8:
> 
> java version "1.6.0_26"
> Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
> Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
> 
> java org.antlr.Tool -version
> ANTLR Parser Generator  Version 3.4
> 
> In the example directory (examples-v3/java/LL-star), I can compile the .g and compile the java - no problem:
> 
> echo $CLASSPATH
> ../../../antlr-3.4/lib/antlr-3.4-complete.jar
> 
> [examples-v3/java/LL-star] % java org.antlr.Tool SimpleC.g
> [examples-v3/java/LL-star] % javac *java
> 
> But when I run - I GET
> 
> [examples-v3/java/LL-star] % java Main input
> Exception in thread "main" java.lang.NoClassDefFoundError: Main
> Caused by: java.lang.ClassNotFoundException: Main
> 	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
> 	at java.security.AccessController.doPrivileged(Native Method)
> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
> [examples-v3/java/LL-star] % 
> more Main.java 
> import org.antlr.runtime.*;
> 
> public class Main {
>        public static void main(String[] args) throws Exception {
>                CharStream input = new ANTLRFileStream(args[0]);
>                SimpleCLexer lex = new SimpleCLexer(input);
>                CommonTokenStream tokens = new CommonTokenStream(lex);
>                //System.out.println("tokens="+tokens);
>                SimpleCParser parser = new SimpleCParser(tokens);
>                parser.program();
>        }
> }
> 
> Any tips?
> 
> Thanks!
> 
> AE
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gokul007 at gmail.com  Tue Feb 14 22:58:43 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 15 Feb 2012 14:58:43 +0800
Subject: [antlr-interest] Fwd: C++ Target - Second Version - (works with all
 the examples in Windows and Linux)
In-Reply-To: <CAHMh4-a0Pfkop9qiioOXcSmMaELbLEdZtWs9fd9uD44NdAnRXw@mail.gmail.com>
References: <CAHMh4-a0Pfkop9qiioOXcSmMaELbLEdZtWs9fd9uD44NdAnRXw@mail.gmail.com>
Message-ID: <CAHMh4-YVxKqPw2HxCukUUjzPE4B_uJumX55pvKf5q_XW63yAbA@mail.gmail.com>

I tried sending this mail yesterday, but it has been stopped, as it has
crossed allowed mail size limit.  So i am sending the files without the
antlr-3.4.jar

Thanks,
Gokul

---------- Forwarded message ----------
From: Gokulakannan Somasundaram <gokul007 at gmail.com>
Date: Wed, Feb 15, 2012 at 4:56 AM
Subject: C++ Target - Second Version - (works with all the examples in
Windows and Linux)
To: antlr-interest at antlr.org


Hi,
   I am attaching the updated C++ Target files. I have checked with all the
examples except the first one "C". I am attaching the files for two -
dynamic_scope and composite_java. Of Course it won't work with TreeParsers.
I have tested it on a 64 bit system on Windows and Linux. (Visual Studio
2010 and g++ 4.4.6).
   I have also attached the antlr-3.4.jar built with the modified Cpp.stg
and CppTarget.java. You can use it for testing. As previously said you need
to define a Traits file. There is a second restriction that has added. In
the generated Parser, the lexer has to get included. So in all the
grammars, you have to write
@parser::include { #include <lexer.h> }

I cannot get away with it, because of the filtering mode option, which
becomes a compile time parameter. But its available only for the Lexer. So
i define it as a trait in the Lexer and in order for Parser to invoke
nextToken method, it has to access that Trait.

The C++ Target also supports island grammars. Anyone can find it how it has
been done by looking at Traits.hpp. Feel free to contact me to ask for any
other examples / help.  Looking forward for the feedback.

Terence,
      Can you please let me know, whether its possible to put it out in the
website as a C++ Target? Please let me know, the stuffs i have to complete
in order to be there. I know i have to write some readme.txt docs.


Thanks,
Gokul.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cpp.7z
Type: application/octet-stream
Size: 121020 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120215/d338040a/attachment.obj 

From citizen.adrian.1 at gmail.com  Wed Feb 15 02:00:35 2012
From: citizen.adrian.1 at gmail.com (Adrian Evans)
Date: Wed, 15 Feb 2012 11:00:35 +0100
Subject: [antlr-interest] Help With Antlr3.4 on Mac Os X
In-Reply-To: <3AC624A0-7E0C-4AEE-AC9D-B71B43D7A879@cs.usfca.edu>
References: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>
	<3AC624A0-7E0C-4AEE-AC9D-B71B43D7A879@cs.usfca.edu>
Message-ID: <6EB5A5B0-3AC5-4F94-B3A4-2F284F5FD7E3@gmail.com>

No that was the problem. Thanks very much.

->Adrian

Le 2012-02-15 ? 2:33, Terence Parr <parrt at cs.usfca.edu> a ?crit :

> is dot in your classpath?
> Ter
> On Feb 14, 2012, at 5:10 PM, Adrian Evans wrote:
> 
>> Hello,
>> 
>> I'm trying to follow the examples from : How do I use ANTLR v3 from the command line. I've installed antlr-3.4 on Mac OS 10.6.8:
>> 
>> java version "1.6.0_26"
>> Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
>> Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
>> 
>> java org.antlr.Tool -version
>> ANTLR Parser Generator  Version 3.4
>> 
>> In the example directory (examples-v3/java/LL-star), I can compile the .g and compile the java - no problem:
>> 
>> echo $CLASSPATH
>> ../../../antlr-3.4/lib/antlr-3.4-complete.jar
>> 
>> [examples-v3/java/LL-star] % java org.antlr.Tool SimpleC.g
>> [examples-v3/java/LL-star] % javac *java
>> 
>> But when I run - I GET
>> 
>> [examples-v3/java/LL-star] % java Main input
>> Exception in thread "main" java.lang.NoClassDefFoundError: Main
>> Caused by: java.lang.ClassNotFoundException: Main
>>    at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
>>    at java.security.AccessController.doPrivileged(Native Method)
>>    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
>>    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
>>    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
>>    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
>> [examples-v3/java/LL-star] % 
>> more Main.java 
>> import org.antlr.runtime.*;
>> 
>> public class Main {
>>       public static void main(String[] args) throws Exception {
>>               CharStream input = new ANTLRFileStream(args[0]);
>>               SimpleCLexer lex = new SimpleCLexer(input);
>>               CommonTokenStream tokens = new CommonTokenStream(lex);
>>               //System.out.println("tokens="+tokens);
>>               SimpleCParser parser = new SimpleCParser(tokens);
>>               parser.program();
>>       }
>> }
>> 
>> Any tips?
>> 
>> Thanks!
>> 
>> AE
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From marco.laponder at kewill.com  Wed Feb 15 05:12:07 2012
From: marco.laponder at kewill.com (Marco Laponder)
Date: Wed, 15 Feb 2012 14:12:07 +0100
Subject: [antlr-interest] tree structure only one deep
Message-ID: <BF31D3D67397D347A50CB2E0ACE89ADAF9796A@scania.interchain.nl>

Hi All,

 

I have been creating a grammar in antlr Works and with a given input it
now displays an impressive (at least I think that) tree, with the
structure of my input displayed/ However when I know generate java
sources based on this grammar and call my generated parser it is able to
parse it probably but the tree which I get from the call to my parser is
only one deep. 

 

Is this expected behaviour ? The tree antlrworks is displaying is only a
service of that tool ? Or should I be able to get such a tree based on
the generated java sources ? 



Kind regards,

Marco


From francois.jaouen at softeam.com  Wed Feb 15 08:05:12 2012
From: francois.jaouen at softeam.com (=?ISO-8859-1?Q?Fran=E7ois_Jaouen?=)
Date: Wed, 15 Feb 2012 17:05:12 +0100
Subject: [antlr-interest] Can't find snapshot of 3.4.1
Message-ID: <4F3BD7B8.4040508@softeam.com>


Hi there

Few days ago, I have downloaded a snapshot of ANTLR 3.4.1 that fixes a
generation problem on labels variable in predicate methods (Java language).
Unfortunately I can't find it anymore in :
http://antlr.org/depot/antlr3/main/tool/target
Does it means that an offical 3.4.1 is about to be released ?
Thanks for your work and your help
-- 
Fran?ois Jaouen
Modelio Open Source : www.modelio.org





From jimi at temporal-wave.com  Wed Feb 15 11:25:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 15 Feb 2012 11:25:01 -0800
Subject: [antlr-interest] Help With Antlr3.4 on Mac Os X
In-Reply-To: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>
References: <9A02567F-19F3-4820-BE48-F8A84E250F84@gmail.com>
Message-ID: <2086d6a120d4e29bce3e605c63a5b35c@mail.gmail.com>

Did you try java -jar antlr-3.4-complete.jar ....

The whole point is that you don't need the classpath. Also, you will get
in to trouble using a relative classpath anyway. I usually wrap this in to
a shell script.

Jim

#! /bin/bash

java -Xmx750M -Xincgc -jar
~/antlrsrc/code/antlr/release-3.4/target/antlr-master-3.4-completejar.jar
-Xconversiontimeout 32000 $

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Adrian Evans
> Sent: Tuesday, February 14, 2012 5:11 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Help With Antlr3.4 on Mac Os X
>
> Hello,
>
>  I'm trying to follow the examples from : How do I use ANTLR v3 from
> the command line. I've installed antlr-3.4 on Mac OS 10.6.8:
>
> java version "1.6.0_26"
> Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425) Java
> HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
>
> java org.antlr.Tool -version
> ANTLR Parser Generator  Version 3.4
>
>  In the example directory (examples-v3/java/LL-star), I can compile the
> .g and compile the java - no problem:
>
> echo $CLASSPATH
> ../../../antlr-3.4/lib/antlr-3.4-complete.jar
>
> [examples-v3/java/LL-star] % java org.antlr.Tool SimpleC.g [examples-
> v3/java/LL-star] % javac *java
>
> But when I run - I GET
>
> [examples-v3/java/LL-star] % java Main input Exception in thread "main"
> java.lang.NoClassDefFoundError: Main Caused by:
> java.lang.ClassNotFoundException: Main
> 	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
> 	at java.security.AccessController.doPrivileged(Native Method)
> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
> [examples-v3/java/LL-star] %
> more Main.java
> import org.antlr.runtime.*;
>
> public class Main {
>         public static void main(String[] args) throws Exception {
>                 CharStream input = new ANTLRFileStream(args[0]);
>                 SimpleCLexer lex = new SimpleCLexer(input);
>                 CommonTokenStream tokens = new CommonTokenStream(lex);
>                 //System.out.println("tokens="+tokens);
>                 SimpleCParser parser = new SimpleCParser(tokens);
>                 parser.program();
>         }
> }
>
> Any tips?
>
> Thanks!
>
> AE
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Wed Feb 15 12:53:49 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Feb 2012 12:53:49 -0800
Subject: [antlr-interest] C++ Target - Second Version - (works with all
	the examples in Windows and Linux)
In-Reply-To: <CAHMh4-YVxKqPw2HxCukUUjzPE4B_uJumX55pvKf5q_XW63yAbA@mail.gmail.com>
References: <CAHMh4-a0Pfkop9qiioOXcSmMaELbLEdZtWs9fd9uD44NdAnRXw@mail.gmail.com>
	<CAHMh4-YVxKqPw2HxCukUUjzPE4B_uJumX55pvKf5q_XW63yAbA@mail.gmail.com>
Message-ID: <DD276F08-60EE-47AF-9437-3CF136C397F3@cs.usfca.edu>

sure. maybe put into wiki. just make an account.
T
On Feb 14, 2012, at 10:58 PM, Gokulakannan Somasundaram wrote:

> I tried sending this mail yesterday, but it has been stopped, as it has
> crossed allowed mail size limit.  So i am sending the files without the
> antlr-3.4.jar
> 
> Thanks,
> Gokul
> 
> ---------- Forwarded message ----------
> From: Gokulakannan Somasundaram <gokul007 at gmail.com>
> Date: Wed, Feb 15, 2012 at 4:56 AM
> Subject: C++ Target - Second Version - (works with all the examples in
> Windows and Linux)
> To: antlr-interest at antlr.org
> 
> 
> Hi,
>   I am attaching the updated C++ Target files. I have checked with all the
> examples except the first one "C". I am attaching the files for two -
> dynamic_scope and composite_java. Of Course it won't work with TreeParsers.
> I have tested it on a 64 bit system on Windows and Linux. (Visual Studio
> 2010 and g++ 4.4.6).
>   I have also attached the antlr-3.4.jar built with the modified Cpp.stg
> and CppTarget.java. You can use it for testing. As previously said you need
> to define a Traits file. There is a second restriction that has added. In
> the generated Parser, the lexer has to get included. So in all the
> grammars, you have to write
> @parser::include { #include <lexer.h> }
> 
> I cannot get away with it, because of the filtering mode option, which
> becomes a compile time parameter. But its available only for the Lexer. So
> i define it as a trait in the Lexer and in order for Parser to invoke
> nextToken method, it has to access that Trait.
> 
> The C++ Target also supports island grammars. Anyone can find it how it has
> been done by looking at Traits.hpp. Feel free to contact me to ask for any
> other examples / help.  Looking forward for the feedback.
> 
> Terence,
>      Can you please let me know, whether its possible to put it out in the
> website as a C++ Target? Please let me know, the stuffs i have to complete
> in order to be there. I know i have to write some readme.txt docs.
> 
> 
> Thanks,
> Gokul.
> <Cpp.7z>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From Philippe.Frankson at Frsglobal.com  Thu Feb 16 03:30:49 2012
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Thu, 16 Feb 2012 12:30:49 +0100
Subject: [antlr-interest] lexer semantic predicate
Message-ID: <148D436D71E918499E8A71E1DAD38DD0184803CD@BRU-EXCH01.frsglobal.internal>

Hi,

I'm using ANTLR 3.4
Here attached, the grammar file (light version).
I would like the lexer to return the same token for 3 specific cases:
{NAME1}<<NAME2>>[NAME3|NAME3]...
So, when I am inside '{ }', I have a work collection name. When I am
inside '<< >>', I have a report name (called TSD name), otherwise I have
another name.
The possible characters for each of those is different so I wanted to
use the semantic predicate to deal with it.
Here is the lexer rule that is supposed to return the token 'NAME':

NAME		: ({!inTSDName && !inWCName}? ALPHA (ALPHA | INT)*) |
({inTSDName}? TSDFIRST (TSDNEXT)*) | ({inWCName}? WCNAMEFIRST
(WCNAMENEXT)*);

And to initialize the variables I have the following lexer rules:
SST @init {inTSDName = true;}		
		: '<<';
		
LLT @init {inTSDName = false;}
		: '>>';
		
OCB @init {inWCName = true;}
		: '{';

CCB @init {inWCName = false;}
		: '}';
 

If I test the grammar with the following rule:
sum({mywc}<<myreport>>[row1,row2..row10|col1,col2,col3]) > 0.5 + .2

Question 1.
I notice that the first returned token is NAME and not SUM like expected
despite the fact that SUM is defined before. Why so ? How to fix that
problem ?

Question 2.
While debugging , it looks like it enters in an infinite loop. I suspect
it is related to the 'NAME' rule. Can you help me solving that issue ?

Thanks a lot.
Philippe


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 08 February 2012 19:54
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] newbi question : operator + any

Did you see my explanation of why you must use:

ANYTHING : . ;

And not use + or * with the . ?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Laponder
> Sent: Tuesday, February 07, 2012 10:58 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbi question : operator + any
>
> Lets explain what I am trying to accomplish, maybe you can provide me
> the most impressive grammars :-)
>
>
>
> I am trying to parse a filter string which filter on a column of a
> table, so I need to know the operator. In my example I stated the '>'
> but of course I would like to expand it to '<','>=' etc and alter on
> even add parenthesis, 'and' and 'or' etc. But I would like to start
> simple as I am new at ANTLR.
>
>
>
> Your sample does the trick, however looks hard to maintain, e.g., when
> I add the '<' to COMPARE I also need to add it to ANYTHING. (Well it
> seems still more maintainable than a single regular expression no one
> understands to do the trick ;-) )
>
>
>
> Kind regards,
> Marco
>
>
>
> ________________________________
>
> Van: Marco Laponder
> Verzonden: dinsdag 7 februari 2012 8:45
> Aan: 'Gokulakannan Somasundaram'
> CC: antlr-interest at antlr.org
> Onderwerp: RE: [antlr-interest] newbi question : operator + any
>
>
>
> This still gives me the same error, any other ideas ? Of is antlr just
> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to
handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a
grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Formula.g
Type: application/octet-stream
Size: 4233 bytes
Desc: Formula.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120216/8820c312/attachment.obj 

From Philippe.Frankson at Frsglobal.com  Thu Feb 16 15:28:47 2012
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Fri, 17 Feb 2012 00:28:47 +0100
Subject: [antlr-interest] lexer semantic predicate
Message-ID: <148D436D71E918499E8A71E1DAD38DD018480772@BRU-EXCH01.frsglobal.internal>

My syntax was not correct for semantic predicate (forgot the '=>', see
below the correction) but still one remaining problem.

NAME		: ({!inTSDName && !inWCName}?=> ALPHA (ALPHA | INT)*) 
		| ({inTSDName}?=> TSDFIRST (TSDNEXT)*) 
		| ({inWCName}?=> WCNAMEFIRST (WCNAMENEXT)*);

The token NAME is returned for each of the following lexer rules :

EMPTY		: E M P T Y;
IF		: I F;
KEY		: K E Y;
SEQNUM	: S E Q U E N C E N U M B E R;
SUM		: S U M;
UPPER		: U P P E R;
LOWER		: L O W E R;
PROPER	: P R O P E R;
ROUND		: R O U N D;
FIXED		: F I X E D;
PAGENUMBER	: P A G E N U M B E R;

As those rules are defined before the NAME rule, I would expect the
appropriate token is returned for each of those.

I don't understand what I'm doing wrong.

Thank you for any help
Philippe
 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Philippe Frankson
Sent: 16 February 2012 12:31
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexer semantic predicate

Hi,

I'm using ANTLR 3.4
Here attached, the grammar file (light version).
I would like the lexer to return the same token for 3 specific cases:
{NAME1}<<NAME2>>[NAME3|NAME3]...
So, when I am inside '{ }', I have a work collection name. When I am
inside '<< >>', I have a report name (called TSD name), otherwise I have
another name.
The possible characters for each of those is different so I wanted to
use the semantic predicate to deal with it.
Here is the lexer rule that is supposed to return the token 'NAME':

NAME		: ({!inTSDName && !inWCName}? ALPHA (ALPHA | INT)*) |
({inTSDName}? TSDFIRST (TSDNEXT)*) | ({inWCName}? WCNAMEFIRST
(WCNAMENEXT)*);

And to initialize the variables I have the following lexer rules:
SST @init {inTSDName = true;}		
		: '<<';
		
LLT @init {inTSDName = false;}
		: '>>';
		
OCB @init {inWCName = true;}
		: '{';

CCB @init {inWCName = false;}
		: '}';
 

If I test the grammar with the following rule:
sum({mywc}<<myreport>>[row1,row2..row10|col1,col2,col3]) > 0.5 + .2

Question 1.
I notice that the first returned token is NAME and not SUM like expected
despite the fact that SUM is defined before. Why so ? How to fix that
problem ?

Question 2.
While debugging , it looks like it enters in an infinite loop. I suspect
it is related to the 'NAME' rule. Can you help me solving that issue ?

Thanks a lot.
Philippe


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 08 February 2012 19:54
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] newbi question : operator + any

Did you see my explanation of why you must use:

ANYTHING : . ;

And not use + or * with the . ?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Marco Laponder
> Sent: Tuesday, February 07, 2012 10:58 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbi question : operator + any
>
> Lets explain what I am trying to accomplish, maybe you can provide me 
> the most impressive grammars :-)
>
>
>
> I am trying to parse a filter string which filter on a column of a 
> table, so I need to know the operator. In my example I stated the '>'
> but of course I would like to expand it to '<','>=' etc and alter on 
> even add parenthesis, 'and' and 'or' etc. But I would like to start 
> simple as I am new at ANTLR.
>
>
>
> Your sample does the trick, however looks hard to maintain, e.g., when

> I add the '<' to COMPARE I also need to add it to ANYTHING. (Well it 
> seems still more maintainable than a single regular expression no one 
> understands to do the trick ;-) )
>
>
>
> Kind regards,
> Marco
>
>
>
> ________________________________
>
> Van: Marco Laponder
> Verzonden: dinsdag 7 februari 2012 8:45
> Aan: 'Gokulakannan Somasundaram'
> CC: antlr-interest at antlr.org
> Onderwerp: RE: [antlr-interest] newbi question : operator + any
>
>
>
> This still gives me the same error, any other ideas ? Of is antlr just

> not appropriate for this ?
>
>
>
> Kind regards,
>
> Marco
>
>
>
> ________________________________
>
> Van: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Verzonden: maandag 6 februari 2012 16:56
> Aan: Marco Laponder
> CC: antlr-interest at antlr.org
> Onderwerp: Re: [antlr-interest] newbi question : operator + any
>
>
>
> COMPARE : '>';
>
> ANYTHING : (~'>')(.)*;
>
> testExpression : COMPARE ANYTHING;
>
>
>
>
>
> Try this.
>
>
>
> Gokul.
>
> On Mon, Feb 6, 2012 at 8:30 PM, Marco Laponder 
> <marco.laponder at kewill.com> wrote:
>
> Hi All,
>
>
>
> I am trying to setup a very simple grammar, ik should be able to
handle
>
>
>
> "> thiscouldbeanything"
>
>
>
> So I tried:
>
>
>
> COMPARE : '>';
>
> ANYTHING : (.)+;
>
> testExpression : COMPARE ANYTHING;
>
>
>
> but when generating java resources it gave me the error:
>
>
>
> "The following alternatives can never be matched: 1"
>
>
>
> The problems seems to be the ANYTHING, so how should I define a
grammar
> to be able to handle this ?
>
>
>
> Kind regards,
>
> Marco
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Thu Feb 16 18:13:32 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 16 Feb 2012 18:13:32 -0800
Subject: [antlr-interest] Honey badger update: add auto generated visitors
Message-ID: <1A0054CB-FCE8-40D1-8200-3154CDAEE9B4@cs.usfca.edu>

Hi..automatically generated visitors working. You can take a look at what they do at the bottom of this page:

http://www.antlr.org/wiki/display/ANTLR4/Examples

Very similar to listeners but useful in some cases. you can either, or, or both using commandline options.

you can grab the latest source tree:

https://github.com/antlr/antlr4

and run ant from the root.

Ter

From kferrio at gmail.com  Thu Feb 16 20:10:29 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Thu, 16 Feb 2012 21:10:29 -0700
Subject: [antlr-interest] Honey badger update: add auto generated
	visitors
In-Reply-To: <1A0054CB-FCE8-40D1-8200-3154CDAEE9B4@cs.usfca.edu>
References: <1A0054CB-FCE8-40D1-8200-3154CDAEE9B4@cs.usfca.edu>
Message-ID: <CAAfeETrOZqdicvGbArAi_HCWCFxwtCyXMC3FNcVAxVyNnJD=1w@mail.gmail.com>

Just took it for a spin and overrode a couple visitor contexts to do crazy
stuff like a Honey Badger might.  (Are *you* going to tell Honey Badger he
doesn't know how to add?  I didn't think so.)  Nice.  I will probably use
visitors a little more often in v4, now that the antlr tool automatically
generates the interface.  This will *really* help with maintenance.

BTW, I just built v4 as-grabbed-from-github for the first time.  Painless.
Great move!

Kyle



On Thu, Feb 16, 2012 at 7:13 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi..automatically generated visitors working. You can take a look at what
> they do at the bottom of this page:
>
> http://www.antlr.org/wiki/display/ANTLR4/Examples
>
> Very similar to listeners but useful in some cases. you can either, or, or
> both using commandline options.
>
> you can grab the latest source tree:
>
> https://github.com/antlr/antlr4
>
> and run ant from the root.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From oliver.kowalke at gmx.de  Fri Feb 17 06:51:29 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Fri, 17 Feb 2012 15:51:29 +0100
Subject: [antlr-interest] C++ target Problem (typedef)
Message-ID: <4F3E6971.9040906@gmx.de>

Hi,

I'm happy to see a runtime for C++.

Unfortunately I get an error:
The grammer is named 'legacyDevCfg' and in the lexer header file 
(legacyDevCfgLexer.hpp) a typedef is declared:

typedef legacyDevCfgLexerTraits legacyDevCfgLexerImplTraits;

But legacyDevCfgLexerTraits is not defined in the files (grep 
legacyDevCfgLexerTraits *) :/

echo $CLASSPATH
/home/abc/Projekte/Antlr/antlr_with_cpp-3.4.jar

g++ -W -Wall -g -pthread -I.-I./Cpp/include  -c -o main.o main.cpp

-> error: ?legacyDevCfgLexerTraits? is not a type

any ideas?

thx,
Oliver

From gokul007 at gmail.com  Fri Feb 17 07:02:50 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 17 Feb 2012 23:02:50 +0800
Subject: [antlr-interest] C++ target Problem (typedef)
In-Reply-To: <4F3E6971.9040906@gmx.de>
References: <4F3E6971.9040906@gmx.de>
Message-ID: <CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>

Thanks for testing the C++ grammar. Please do mention the compiler in which
you are doing the testing.

What you are seeing is not a bug. You should explicitly write a Traits
file. If you look at the example, you might understand.
After writing the TraitsFile, you have to include the file in @includes.

Suppose you are generating legacyDevCfgLexer.hpp(.cpp) and
legacyDevCfgParser.hpp(.cpp), then you write a TraitsFile like this.

using namespace antlr3;

namespace {yours} {
      #include <antlr3traits.hpp>

      typedef Traits<legacyDevCfgLexer, legacyDevCfgParser>
legacyDevCfgTraits;
      typedef legacyDevCfgTraits legacyDevCfgLexerTraits;
      typedef legacyDevCfgTraits legacyDevCfgParserTraits;
};

This will create a traits definition with all defaults. The traits is
required in C++, as we do change the definition at compile time using
metaprogramming. Please let me know, if you need any help and let me know,
if you find any bugs.

Thanks,
Gokul.

On Fri, Feb 17, 2012 at 10:51 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

> Hi,
>
> I'm happy to see a runtime for C++.
>
> Unfortunately I get an error:
> The grammer is named 'legacyDevCfg' and in the lexer header file
> (legacyDevCfgLexer.hpp) a typedef is declared:
>
> typedef legacyDevCfgLexerTraits legacyDevCfgLexerImplTraits;
>
> But legacyDevCfgLexerTraits is not defined in the files (grep
> legacyDevCfgLexerTraits *) :/
>
> echo $CLASSPATH
> /home/abc/Projekte/Antlr/antlr_with_cpp-3.4.jar
>
> g++ -W -Wall -g -pthread -I.-I./Cpp/include  -c -o main.o main.cpp
>
> -> error: ?legacyDevCfgLexerTraits? is not a type
>
> any ideas?
>
> thx,
> Oliver
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From oliver.kowalke at gmx.de  Fri Feb 17 07:37:59 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Fri, 17 Feb 2012 16:37:59 +0100
Subject: [antlr-interest] C++ target Problem (typedef)
In-Reply-To: <CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>
References: <4F3E6971.9040906@gmx.de>
	<CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>
Message-ID: <4F3E7457.8090200@gmx.de>

OK - traits header done.

Unfortunately I get another error:

error: antlr3traits.hpp:6:10: error: ?antlr3? is not a type (using g++ 
4.6.1)

header antlr3traits.hpp is missing include directive for headers 
(string, antlr3memory.hpp for instance)

regards,
Oliver

Am 17.02.2012 16:02, schrieb Gokulakannan Somasundaram:
> Thanks for testing the C++ grammar. Please do mention the compiler in 
> which you are doing the testing.
>
> What you are seeing is not a bug. You should explicitly write a Traits 
> file. If you look at the example, you might understand.
> After writing the TraitsFile, you have to include the file in @includes.
>
> Suppose you are generating legacyDevCfgLexer.hpp(.cpp) and 
> legacyDevCfgParser.hpp(.cpp), then you write a TraitsFile like this.
>
> using namespace antlr3;
>
> namespace {yours} {
>       #include <antlr3traits.hpp>
>
>       typedef Traits<legacyDevCfgLexer, legacyDevCfgParser> 
> legacyDevCfgTraits;
>       typedef legacyDevCfgTraits legacyDevCfgLexerTraits;
>       typedef legacyDevCfgTraits legacyDevCfgParserTraits;
> };
>
> This will create a traits definition with all defaults. The traits is 
> required in C++, as we do change the definition at compile time using 
> metaprogramming. Please let me know, if you need any help and let me 
> know, if you find any bugs.
>
> Thanks,
> Gokul.
>
> On Fri, Feb 17, 2012 at 10:51 PM, Oliver Kowalke 
> <oliver.kowalke at gmx.de <mailto:oliver.kowalke at gmx.de>> wrote:
>
>     Hi,
>
>     I'm happy to see a runtime for C++.
>
>     Unfortunately I get an error:
>     The grammer is named 'legacyDevCfg' and in the lexer header file
>     (legacyDevCfgLexer.hpp) a typedef is declared:
>
>     typedef legacyDevCfgLexerTraits legacyDevCfgLexerImplTraits;
>
>     But legacyDevCfgLexerTraits is not defined in the files (grep
>     legacyDevCfgLexerTraits *) :/
>
>     echo $CLASSPATH
>     /home/abc/Projekte/Antlr/antlr_with_cpp-3.4.jar
>
>     g++ -W -Wall -g -pthread -I.-I./Cpp/include  -c -o main.o main.cpp
>
>     -> error: ?legacyDevCfgLexerTraits? is not a type
>
>     any ideas?
>
>     thx,
>     Oliver
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From gokul007 at gmail.com  Fri Feb 17 07:39:33 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 17 Feb 2012 23:39:33 +0800
Subject: [antlr-interest] C++ target Problem (typedef)
In-Reply-To: <4F3E7457.8090200@gmx.de>
References: <4F3E6971.9040906@gmx.de>
	<CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>
	<4F3E7457.8090200@gmx.de>
Message-ID: <CAHMh4-b_pzg=pHAvitj7YEOUUM5-kHcG33ABdeNca7XHRB97Jw@mail.gmail.com>

Can you send me your traits file? Have you taken a look at the examples
provided? There is a UserTraits.hpp in each.

Thanks,
Gokul.

On Fri, Feb 17, 2012 at 11:37 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

>  OK - traits header done.
>
> Unfortunately I get another error:
>
> error: antlr3traits.hpp:6:10: error: ?antlr3? is not a type (using g++
> 4.6.1)
>
> header antlr3traits.hpp is missing include directive for headers (string,
> antlr3memory.hpp for instance)
>
> regards,
> Oliver
>
> Am 17.02.2012 16:02, schrieb Gokulakannan Somasundaram:
>
> Thanks for testing the C++ grammar. Please do mention the compiler in
> which you are doing the testing.
>
> What you are seeing is not a bug. You should explicitly write a Traits
> file. If you look at the example, you might understand.
> After writing the TraitsFile, you have to include the file in @includes.
>
> Suppose you are generating legacyDevCfgLexer.hpp(.cpp) and
> legacyDevCfgParser.hpp(.cpp), then you write a TraitsFile like this.
>
> using namespace antlr3;
>
> namespace {yours} {
>       #include <antlr3traits.hpp>
>
>       typedef Traits<legacyDevCfgLexer, legacyDevCfgParser>
> legacyDevCfgTraits;
>       typedef legacyDevCfgTraits legacyDevCfgLexerTraits;
>       typedef legacyDevCfgTraits legacyDevCfgParserTraits;
> };
>
> This will create a traits definition with all defaults. The traits is
> required in C++, as we do change the definition at compile time using
> metaprogramming. Please let me know, if you need any help and let me know,
> if you find any bugs.
>
> Thanks,
> Gokul.
>
> On Fri, Feb 17, 2012 at 10:51 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:
>
>> Hi,
>>
>> I'm happy to see a runtime for C++.
>>
>> Unfortunately I get an error:
>> The grammer is named 'legacyDevCfg' and in the lexer header file
>> (legacyDevCfgLexer.hpp) a typedef is declared:
>>
>> typedef legacyDevCfgLexerTraits legacyDevCfgLexerImplTraits;
>>
>> But legacyDevCfgLexerTraits is not defined in the files (grep
>> legacyDevCfgLexerTraits *) :/
>>
>> echo $CLASSPATH
>> /home/abc/Projekte/Antlr/antlr_with_cpp-3.4.jar
>>
>> g++ -W -Wall -g -pthread -I.-I./Cpp/include  -c -o main.o main.cpp
>>
>> -> error: ?legacyDevCfgLexerTraits? is not a type
>>
>> any ideas?
>>
>> thx,
>> Oliver
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>

From oliver.kowalke at gmx.de  Fri Feb 17 07:48:56 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Fri, 17 Feb 2012 16:48:56 +0100
Subject: [antlr-interest] C++ target Problem (typedef)
In-Reply-To: <CAHMh4-b_pzg=pHAvitj7YEOUUM5-kHcG33ABdeNca7XHRB97Jw@mail.gmail.com>
References: <4F3E6971.9040906@gmx.de>
	<CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>
	<4F3E7457.8090200@gmx.de>
	<CAHMh4-b_pzg=pHAvitj7YEOUUM5-kHcG33ABdeNca7XHRB97Jw@mail.gmail.com>
Message-ID: <4F3E76E8.8000609@gmx.de>

legacyDevCfg.h contains:

#include <antlr3traits.hpp>

using namespace antlr3;

typedef Traits< legacyDevCfgLexer, legacyDevCfgParser > legacyDevCfgTraits;
typedef legacyDevCfgTraits legacyDevCfgLexerTraits;
typedef legacyDevCfgTraits legacyDevCfgParserTraits


in Cpp/dynamic-scope example:

g++ -W -Wall -g -I. -I/home/abc/Projekte/Antlr/Cpp/include  -c -o main.o 
main.cpp

produces:

In file included from UserTraits.hpp:18:0,
                  from TLexer.hpp:66,
                  from main.cpp:1:
Cpp/include/antlr3traits.hpp:8:10: error: ?DefaultAllocPolicy? in 
Namensbereich ?antlr3? is not a type

Oliver

> Can you send me your traits file? Have you taken a look at the 
> examples provided? There is a UserTraits.hpp in each.
>
> Thanks,
> Gokul.


From parrt at cs.usfca.edu  Fri Feb 17 10:04:24 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Feb 2012 10:04:24 -0800
Subject: [antlr-interest] Honey badger update: add auto generated
	visitors
In-Reply-To: <CAAfeETrOZqdicvGbArAi_HCWCFxwtCyXMC3FNcVAxVyNnJD=1w@mail.gmail.com>
References: <1A0054CB-FCE8-40D1-8200-3154CDAEE9B4@cs.usfca.edu>
	<CAAfeETrOZqdicvGbArAi_HCWCFxwtCyXMC3FNcVAxVyNnJD=1w@mail.gmail.com>
Message-ID: <521DBB40-88BF-473F-886C-19A43A395AF6@cs.usfca.edu>


On Feb 16, 2012, at 8:10 PM, Kyle Ferrio wrote:

> Just took it for a spin and overrode a couple visitor contexts to do crazy
> stuff like a Honey Badger might.  (Are *you* going to tell Honey Badger he
> doesn't know how to add?  I didn't think so.)  Nice.  I will probably use
> visitors a little more often in v4, now that the antlr tool automatically
> generates the interface.  This will *really* help with maintenance.

yep,And there is no problem with making a grammar tied to a particular language because there are no actions embedded within.

> 
> BTW, I just built v4 as-grabbed-from-github for the first time.  Painless.
> Great move!

hooray!

Ter

From parrt at cs.usfca.edu  Fri Feb 17 16:27:53 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Feb 2012 16:27:53 -0800
Subject: [antlr-interest] Why do we need ANTLR v4?
Message-ID: <8F647EC4-9B4C-4595-BDF7-8C01F662DA05@cs.usfca.edu>

Oliver Zeigermann asked me some questions about v4. Here is our conversation.

http://www.antlr.org/wiki/pages/viewpage.action?pageId=29130850

Ter

From researcher0x00 at gmail.com  Fri Feb 17 16:59:46 2012
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 17 Feb 2012 19:59:46 -0500
Subject: [antlr-interest] Why do we need ANTLR v4?
In-Reply-To: <8F647EC4-9B4C-4595-BDF7-8C01F662DA05@cs.usfca.edu>
References: <8F647EC4-9B4C-4595-BDF7-8C01F662DA05@cs.usfca.edu>
Message-ID: <CAN45N112RnM5iLvk7vTSftgropzm76hOmUpDvpoZZNp6X4dHqQ@mail.gmail.com>

>
> Ter and Oliver,
>
> Thanks,  Eric
>

From gokul007 at gmail.com  Fri Feb 17 23:22:45 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sat, 18 Feb 2012 15:22:45 +0800
Subject: [antlr-interest] C++ Target - Second Version - (works with all
 the examples in Windows and Linux)
In-Reply-To: <CAHMh4-a6_dxN9KHqPwnnOde_NRF2EUQeATnujAdxA97Dpwr+sw@mail.gmail.com>
References: <CAHMh4-a0Pfkop9qiioOXcSmMaELbLEdZtWs9fd9uD44NdAnRXw@mail.gmail.com>
	<CAHMh4-YVxKqPw2HxCukUUjzPE4B_uJumX55pvKf5q_XW63yAbA@mail.gmail.com>
	<DD276F08-60EE-47AF-9437-3CF136C397F3@cs.usfca.edu>
	<CAHMh4-a6_dxN9KHqPwnnOde_NRF2EUQeATnujAdxA97Dpwr+sw@mail.gmail.com>
Message-ID: <CAHMh4-a8xgvEh28ZTKs7ucdpaFr=BZpuGf1cSsBOsUWfZ=WZsg@mail.gmail.com>

I fixed a few more bugs like
a) Adjusting the declaration of return value structs
b) few warnings in g++ thanks to Ivan and Oliver
c) C++ Target can co-exist in a application with C-Target. I think lot of
people testing out are facing these issues.

So now the revised target is available in the wiki page of C++ Target.
http://www.antlr.org/wiki/pages/viewpage.action?pageId=29130826

I feel the target is relatively stable now. I have tested it with a serious
parser and it works fine. Also tested it on Linux with g++. Please let me
know of your experiences.

Terence,
       Is it fine, if i host the target in Wiki? Also i need your help in
deleting the out-dated files already uploaded.

Thanks,
Gokul.

On Thu, Feb 16, 2012 at 8:50 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Removed the dependency on the configure script. Previously the linux build
> of Cpp Target included antlr3config.h generated by the configure script of
> C Target. I have removed that dependency.
>
> Thanks,
> Gokul.
>
> On Thu, Feb 16, 2012 at 4:53 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> sure. maybe put into wiki. just make an account.
>> T
>> On Feb 14, 2012, at 10:58 PM, Gokulakannan Somasundaram wrote:
>>
>> > I tried sending this mail yesterday, but it has been stopped, as it has
>> > crossed allowed mail size limit.  So i am sending the files without the
>> > antlr-3.4.jar
>> >
>> > Thanks,
>> > Gokul
>> >
>> > ---------- Forwarded message ----------
>> > From: Gokulakannan Somasundaram <gokul007 at gmail.com>
>> > Date: Wed, Feb 15, 2012 at 4:56 AM
>> > Subject: C++ Target - Second Version - (works with all the examples in
>> > Windows and Linux)
>> > To: antlr-interest at antlr.org
>> >
>> >
>> > Hi,
>> >   I am attaching the updated C++ Target files. I have checked with all
>> the
>> > examples except the first one "C". I am attaching the files for two -
>> > dynamic_scope and composite_java. Of Course it won't work with
>> TreeParsers.
>> > I have tested it on a 64 bit system on Windows and Linux. (Visual Studio
>> > 2010 and g++ 4.4.6).
>> >   I have also attached the antlr-3.4.jar built with the modified Cpp.stg
>> > and CppTarget.java. You can use it for testing. As previously said you
>> need
>> > to define a Traits file. There is a second restriction that has added.
>> In
>> > the generated Parser, the lexer has to get included. So in all the
>> > grammars, you have to write
>> > @parser::include { #include <lexer.h> }
>> >
>> > I cannot get away with it, because of the filtering mode option, which
>> > becomes a compile time parameter. But its available only for the Lexer.
>> So
>> > i define it as a trait in the Lexer and in order for Parser to invoke
>> > nextToken method, it has to access that Trait.
>> >
>> > The C++ Target also supports island grammars. Anyone can find it how it
>> has
>> > been done by looking at Traits.hpp. Feel free to contact me to ask for
>> any
>> > other examples / help.  Looking forward for the feedback.
>> >
>> > Terence,
>> >      Can you please let me know, whether its possible to put it out in
>> the
>> > website as a C++ Target? Please let me know, the stuffs i have to
>> complete
>> > in order to be there. I know i have to write some readme.txt docs.
>> >
>> >
>> > Thanks,
>> > Gokul.
>> > <Cpp.7z>
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From gokul007 at gmail.com  Fri Feb 17 23:25:21 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sat, 18 Feb 2012 15:25:21 +0800
Subject: [antlr-interest] C++ target Problem (typedef)
In-Reply-To: <4F3E76E8.8000609@gmx.de>
References: <4F3E6971.9040906@gmx.de>
	<CAHMh4-aGxfFip6A7iZkxpV+G1+=ZzGpEduW_q1149FjCQ3zUuQ@mail.gmail.com>
	<4F3E7457.8090200@gmx.de>
	<CAHMh4-b_pzg=pHAvitj7YEOUUM5-kHcG33ABdeNca7XHRB97Jw@mail.gmail.com>
	<4F3E76E8.8000609@gmx.de>
Message-ID: <CAHMh4-ZzM_BpxNWgeYLreQRQ5kmKAN3uS1ecQ4ZsDYy2BVED0Q@mail.gmail.com>

      The Cpp Target which can co-exist with the C Target is now in Wiki.

Thanks,
Gokul.

On Fri, Feb 17, 2012 at 11:48 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

> legacyDevCfg.h contains:
>
> #include <antlr3traits.hpp>
>
> using namespace antlr3;
>
>
> typedef Traits< legacyDevCfgLexer, legacyDevCfgParser > legacyDevCfgTraits;
> typedef legacyDevCfgTraits legacyDevCfgLexerTraits;
> typedef legacyDevCfgTraits legacyDevCfgParserTraits
>
>
> in Cpp/dynamic-scope example:
>
> g++ -W -Wall -g -I. -I/home/abc/Projekte/Antlr/**Cpp/include  -c -o
> main.o main.cpp
>
> produces:
>
> In file included from UserTraits.hpp:18:0,
>                 from TLexer.hpp:66,
>                 from main.cpp:1:
> Cpp/include/antlr3traits.hpp:**8:10: error: ?DefaultAllocPolicy? in
> Namensbereich ?antlr3? is not a type
>
> Oliver
>
>
>  Can you send me your traits file? Have you taken a look at the examples
>> provided? There is a UserTraits.hpp in each.
>>
>> Thanks,
>> Gokul.
>>
>
>

From gokul007 at gmail.com  Sat Feb 18 09:23:21 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 19 Feb 2012 01:23:21 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
Message-ID: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>

Hi,
   I am planning to write a TokenStream with the following characteristics
a) It will fetch k number of tokens every time it is called. ( I am setting
a default of 100)
b) Every time a rule's action is executed in execution mode( when
backtracking == 0 ), it will delete all the tokens except the first and
last token.
c) After the tokens are deleted, if they are tried to be accessed, this
will throw an exception

Advantages:
Memory usage will be be optimal. It will be dependant on
a) amount of backtracking required
b) Maximum number of tokens covered in a single rule
c) Amount of look-ahead( This will never be a determining factor )

Disadvantages
a) As a rule will lose its tokens except start and stop token, any attempt
to refer to those tokens would result in a exception.

But this can be overcome by storing the required data of those tokens in a
variable storage, during the execution of the rule.

This can be enabled by changing the trait TOKENS_ACCESSED_FROM_OWNING_RULE
to false.

Any Comments / Suggestions?

Thanks,
Gokul.

From gokul007 at gmail.com  Sat Feb 18 09:43:58 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 19 Feb 2012 01:43:58 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
Message-ID: <CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>

one small correction.

This can be enabled by changing the trait TOKENS_ACCESSED_FROM_OWNING_RULE
to true.

Thanks,
Gokul.

On Sun, Feb 19, 2012 at 1:23 AM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Hi,
>    I am planning to write a TokenStream with the following characteristics
> a) It will fetch k number of tokens every time it is called. ( I am
> setting a default of 100)
> b) Every time a rule's action is executed in execution mode( when
> backtracking == 0 ), it will delete all the tokens except the first and
> last token.
> c) After the tokens are deleted, if they are tried to be accessed, this
> will throw an exception
>
> Advantages:
> Memory usage will be be optimal. It will be dependant on
> a) amount of backtracking required
> b) Maximum number of tokens covered in a single rule
> c) Amount of look-ahead( This will never be a determining factor )
>
> Disadvantages
> a) As a rule will lose its tokens except start and stop token, any attempt
> to refer to those tokens would result in a exception.
>
> But this can be overcome by storing the required data of those tokens in a
> variable storage, during the execution of the rule.
>
> This can be enabled by changing the trait TOKENS_ACCESSED_FROM_OWNING_RULE
> to false.
>
> Any Comments / Suggestions?
>
> Thanks,
> Gokul.
>

From Johannes.Lichtenberger at uni-konstanz.de  Sat Feb 18 11:03:34 2012
From: Johannes.Lichtenberger at uni-konstanz.de (Johannes.Lichtenberger)
Date: Sat, 18 Feb 2012 20:03:34 +0100
Subject: [antlr-interest] XQuery lexer/parser
Message-ID: <4F3FF606.7020908@uni-konstanz.de>

Hello,

I maybe want to use an XQuery parser to implement som parts of XQuery,
for instance XPath 2.0 for a DOM-like tree-structure.

I downloaded http://code.google.com/p/xqgrammar/ and successfully
imported the project in eclipse with maven support. Now I have no clue
how to use the parsed rules. Maybe I have to implement specific parts in
XQParser or more specifically for Path expressions for instance in the
XPath parser which is called within the XQParser constructor. Buf I
think it will mess up the parser itself, thus maybe a callback for each
parsed rule would suffice. Furthermore I don't know if I would have to
parse a query twice if I want to do query rewritings.

But a first step with XPath axis steps and predicates would be ok, or
maybe parsing simple XQuery statements besides the FLOWR expression ;-)

regards,
Johannes

From Johannes.Lichtenberger at uni-konstanz.de  Sat Feb 18 11:06:05 2012
From: Johannes.Lichtenberger at uni-konstanz.de (Johannes.Lichtenberger)
Date: Sat, 18 Feb 2012 20:06:05 +0100
Subject: [antlr-interest] XQuery lexer/parser
In-Reply-To: <4F3FF606.7020908@uni-konstanz.de>
References: <4F3FF606.7020908@uni-konstanz.de>
Message-ID: <4F3FF69D.7090804@uni-konstanz.de>

On 02/18/2012 08:03 PM, Johannes.Lichtenberger wrote:
> I maybe want to use an XQuery parser to implement som parts of XQuery,
> for instance XPath 2.0 for a DOM-like tree-structure.
> 
> I downloaded http://code.google.com/p/xqgrammar/ and successfully
> imported the project in eclipse with maven support. Now I have no clue
> how to use the parsed rules. Maybe I have to implement specific parts in
> XQParser or more specifically for Path expressions for instance in the
> XPath parser which is called within the XQParser constructor. Buf I
> think it will mess up the parser itself, thus maybe a callback for each
> parsed rule would suffice. Furthermore I don't know if I would have to
> parse a query twice if I want to do query rewritings.
> 
> But a first step with XPath axis steps and predicates would be ok, or
> maybe parsing simple XQuery statements besides the FLOWR expression ;-)

BTW: The author hasn't responsed for about 2 months, that's why I'm
asking on the ANTLR-mailinglist.

kind regards,
Johannes


From asicaddress at gmail.com  Sat Feb 18 11:26:25 2012
From: asicaddress at gmail.com (A Z)
Date: Sun, 19 Feb 2012 01:26:25 +0600
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
Message-ID: <CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>

Hi Gokulakannan,

  I played with idea myself, since it is the most efficient way, but I
don't see how it can work for any LL(*) grammar without adding grammar
constraints. If k is set in the options then it is much easier and actually
someone did this a few years ago:
http://markmail.org/message/ej25vkco44ppkaxt


b) Every time a rule's action is executed in execution mode( when
> backtracking == 0 ), it will delete all the tokens except the first and
> last token.
>
I don't quite follow you here. Actions can appear anywhere in rules and
since you'll be in a rule at all times, the only way to know which tokens
are safe to delete is to track all the tokens used by rule actions and only
delete them after the action executes.
  The codegen probably knows about all calls to $token_vars in actions but
it likely doesn't know about calls to LT(n). I think this approach can work
but it will probably require that any user code cannot access the token
stream or any tokens directly except with $ references.






On Sat, Feb 18, 2012 at 11:43 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> one small correction.
>
> This can be enabled by changing the trait TOKENS_ACCESSED_FROM_OWNING_RULE
> to true.
>
> Thanks,
> Gokul.
>
> On Sun, Feb 19, 2012 at 1:23 AM, Gokulakannan Somasundaram <
> gokul007 at gmail.com> wrote:
>
> > Hi,
> >    I am planning to write a TokenStream with the following
> characteristics
> > a) It will fetch k number of tokens every time it is called. ( I am
> > setting a default of 100)
> > b) Every time a rule's action is executed in execution mode( when
> > backtracking == 0 ), it will delete all the tokens except the first and
> > last token.
> > c) After the tokens are deleted, if they are tried to be accessed, this
> > will throw an exception
> >
> > Advantages:
> > Memory usage will be be optimal. It will be dependant on
> > a) amount of backtracking required
> > b) Maximum number of tokens covered in a single rule
> > c) Amount of look-ahead( This will never be a determining factor )
> >
> > Disadvantages
> > a) As a rule will lose its tokens except start and stop token, any
> attempt
> > to refer to those tokens would result in a exception.
> >
> > But this can be overcome by storing the required data of those tokens in
> a
> > variable storage, during the execution of the rule.
> >
> > This can be enabled by changing the trait
> TOKENS_ACCESSED_FROM_OWNING_RULE
> > to false.
> >
> > Any Comments / Suggestions?
> >
> > Thanks,
> > Gokul.
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Sat Feb 18 12:12:35 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 19 Feb 2012 04:12:35 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
Message-ID: <CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>

>
>
>   I played with idea myself, since it is the most efficient way, but I
> don't see how it can work for any LL(*) grammar without adding grammar
> constraints. If k is set in the options then it is much easier and actually
> someone did this a few years ago:
> http://markmail.org/message/ej25vkco44ppkaxt
>
>
> That was definitely a good attempt. But it has a constant size token list.
So when we write a rule with more  than the stored tokens and try to access
all the tokens ( say for getting the text ), then it is not possible. This
is a problem, which cannot be solved in this approach.


>
> b) Every time a rule's action is executed in execution mode( when
>> backtracking == 0 ), it will delete all the tokens except the first and
>> last token.
>>
> I don't quite follow you here. Actions can appear anywhere in rules and
> since you'll be in a rule at all times, the only way to know which tokens
> are safe to delete is to track all the tokens used by rule actions and only
> delete them after the action executes.
>

We are talking only about named rules here.


>   The codegen probably knows about all calls to $token_vars in actions but
> it likely doesn't know about calls to LT(n). I think this approach can work
> but it will probably require that any user code cannot access the token
> stream or any tokens directly except with $ references.
>
> No i am not attempting to knows about all calls to $token_vars in actions.
If a user attempts to look ahead, there won't be any issue. If a user looks
backward, it might result i an exception. If the user wants to access any
token, it has to be attempted only from within the rule. This is the
discipline a parser programmer has to follow to reduce the memory
footprint. After the rule's scope is completed, the tokens might get
deleted. So, the necessary info has to be stored in some variable at rule
scope / global scope and accessed from there.

Gokul.

From gokul007 at gmail.com  Sat Feb 18 12:18:30 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 19 Feb 2012 04:18:30 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
	<CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
Message-ID: <CAHMh4-Z_jj0B9MPehOoM7hqTitCkWC74FCo=yTzdxYS2HM=9hw@mail.gmail.com>

>
>
>> b) Every time a rule's action is executed in execution mode( when
>>> backtracking == 0 ), it will delete all the tokens except the first and
>>> last token.
>>>
>> I don't quite follow you here. Actions can appear anywhere in rules and
>> since you'll be in a rule at all times, the only way to know which tokens
>> are safe to delete is to track all the tokens used by rule actions and only
>> delete them after the action executes.
>>
>
> We are talking only about named rules here.
>
> The tokens will get deleted only after all the action part is executed( at
the exit of the rule action ).

Gokul.

From parrt at cs.usfca.edu  Sat Feb 18 12:41:43 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 18 Feb 2012 12:41:43 -0800
Subject: [antlr-interest] updates to visitor/listener naming stuff
Message-ID: <F200685E-B06A-448D-A713-7B259F40DE9C@cs.usfca.edu>

Changes:

* names changed. visit() -> visitX(). enter/exit() -> enter/exitX()
* capitalizing automatically now. rule s -> SContext not sContext
* no enter/exit method in generic rule context object if rule has alt labels, nor in interfaces.
* dup labels allowed in same rule
* label X or x illegal if rule x exists

Pushed to parrt/antlr4/master at github.

Ter

Example:

s : e ;

e : e '*' e             -> Mult
  | e '+' e             -> Add
  | INT                 -> primary
  | ID                  -> primary
  | '(' e ')'           -> Parens
  ;

public interface AVisitor<T> {
	T visitMult(AParser.MultContext ctx);
	T visitParens(AParser.ParensContext ctx);
	T visitS(AParser.SContext ctx);
	T visitPrimary(AParser.PrimaryContext ctx);
	T visitAdd(AParser.AddContext ctx);
}

public interface AListener extends ParseTreeListener<Token> {
	void enterMult(AParser.MultContext ctx);
	void exitMult(AParser.MultContext ctx);
	void enterParens(AParser.ParensContext ctx);
	void exitParens(AParser.ParensContext ctx);
	void enterS(AParser.SContext ctx);
	void exitS(AParser.SContext ctx);
	void enterPrimary(AParser.PrimaryContext ctx);
	void exitPrimary(AParser.PrimaryContext ctx);
	void enterAdd(AParser.AddContext ctx);
	void exitAdd(AParser.AddContext ctx);
}

From Johannes.Lichtenberger at uni-konstanz.de  Sat Feb 18 21:15:37 2012
From: Johannes.Lichtenberger at uni-konstanz.de (Johannes.Lichtenberger)
Date: Sun, 19 Feb 2012 06:15:37 +0100
Subject: [antlr-interest] XQuery lexer/parser
In-Reply-To: <4F3FF69D.7090804@uni-konstanz.de>
References: <4F3FF606.7020908@uni-konstanz.de>
	<4F3FF69D.7090804@uni-konstanz.de>
Message-ID: <4F408579.7090003@uni-konstanz.de>

On 02/18/2012 08:06 PM, Johannes.Lichtenberger wrote:
> On 02/18/2012 08:03 PM, Johannes.Lichtenberger wrote:
>> I maybe want to use an XQuery parser to implement som parts of XQuery,
>> for instance XPath 2.0 for a DOM-like tree-structure.
>>
>> I downloaded http://code.google.com/p/xqgrammar/ and successfully
>> imported the project in eclipse with maven support. Now I have no clue
>> how to use the parsed rules. Maybe I have to implement specific parts in
>> XQParser or more specifically for Path expressions for instance in the
>> XPath parser which is called within the XQParser constructor. Buf I
>> think it will mess up the parser itself, thus maybe a callback for each
>> parsed rule would suffice. Furthermore I don't know if I would have to
>> parse a query twice if I want to do query rewritings.
>>
>> But a first step with XPath axis steps and predicates would be ok, or
>> maybe parsing simple XQuery statements besides the FLOWR expression ;-)
> 
> BTW: The author hasn't responsed for about 2 months, that's why I'm
> asking on the ANTLR-mailinglist.

So basically I think I want to implement observers which have to
implement all generated parser rules. For instance an interface and an
abstract class with empty method implementations.

Is this somehow doable or how do I make use of a generated parser
otherwise? Anyhow it would be great, as I can't find suitable
documentation besides maybe the books ;-) I just want to use the
generated parser to implement for instance some basic XPath 2.0 things.

kind regards,
Johannes

From oliver.kowalke at gmx.de  Sun Feb 19 05:31:15 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Sun, 19 Feb 2012 14:31:15 +0100
Subject: [antlr-interest] antlr2-C++ target patching?!
Message-ID: <4F40F9A3.1030401@gmx.de>

Hi,
I'm forced to use antlrv2 because antlr3 does not support C++!
The C target encloses the generated lexer/parser code in 'extern "C"' 
which prevents using C++ constructs (like templates or constructs from 
other C++ libs) inside the parser.

I found that the last version of antlr2 (2.7.7) requires a patch because 
of missing headers.
Where do I have to post this patch?

regards,
Oliver

From finis at in.tum.de  Sun Feb 19 07:52:10 2012
From: finis at in.tum.de (Jan Finis)
Date: Sun, 19 Feb 2012 16:52:10 +0100
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
Message-ID: <4F411AAA.6030507@in.tum.de>

Hi folks, hi Ter,

I discovered the following things while using Honey Badger. They seem 
like bugs to me but maybe they are features or I got something wrong:

1. Alternative precedence:

Consider the following left recursive rule for expressions:

expr
     : ID '=' expr;
     | ID
     | expr '+' expr;

ID : 'a' ;

the precedence should be from top to bottom, right? So, the input  a=a+a 
should be parsed as (a=a)+a, since the assignment rule is on the top. 
However, this is not the case, instead, it is parsed as a=(a+a). Bug, or 
am I interpreting something wrong?

2. Name binding

Consider this example:

expr returns [int r]
     : '-' expr { $r = - $expr.r; }

In this example $expr should bind to the sub-expression in my opinion. 
However, it does not. Since the rule is also named expr, $expr refers to 
the rule context instead of the context of the sub-expression. I think 
most of the time this is not what the user wants.

Regards,
Jan


From parrt at cs.usfca.edu  Sun Feb 19 13:33:46 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Feb 2012 13:33:46 -0800
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <4F411AAA.6030507@in.tum.de>
References: <4F411AAA.6030507@in.tum.de>
Message-ID: <0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>


On Feb 19, 2012, at 7:52 AM, Jan Finis wrote:

> Hi folks, hi Ter,
> 
> I discovered the following things while using Honey Badger. They seem 
> like bugs to me but maybe they are features or I got something wrong:
> 
> 1. Alternative precedence:
> 
> Consider the following left recursive rule for expressions:
> 
> expr
>     : ID '=' expr;
>     | ID
>     | expr '+' expr;
> 
> ID : 'a' ;

Hi. this suprising me. It translates to:

expr[int _p]
    :   ( ID '=' expr[3] 
        | ID 
        )
        ( {1 >= $_p}? '+' expr[2]
        )*
    ;

(See -Xlog option).  Pretty hard for that to match as a=(a+a). are you sure?

> 
> the precedence should be from top to bottom, right? So, the input  a=a+a 
> should be parsed as (a=a)+a, since the assignment rule is on the top. 
> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or 
> am I interpreting something wrong?
> 
> 2. Name binding
> 
> Consider this example:
> 
> expr returns [int r]
>     : '-' expr { $r = - $expr.r; }
> 
> In this example $expr should bind to the sub-expression in my opinion. 
> However, it does not. Since the rule is also named expr, $expr refers to 
> the rule context instead of the context of the sub-expression. I think 
> most of the time this is not what the user wants.

I think this is consistent with v3. i'll add to list to think about. thanks!
Ter

From jimi at temporal-wave.com  Sun Feb 19 13:47:02 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 19 Feb 2012 13:47:02 -0800
Subject: [antlr-interest] antlr2-C++ target patching?!
In-Reply-To: <4F40F9A3.1030401@gmx.de>
References: <4F40F9A3.1030401@gmx.de>
Message-ID: <f4a2a780510e636530ceead83b49277a@mail.gmail.com>

You should not be using C++ inside the actions. Create a helper class, and
call from it. The headers are extern "C" and then compiler the generated C
as C++ and you are fine. I doubt that anyone will be patching 2.7.7 C++
target.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Oliver Kowalke
> Sent: Sunday, February 19, 2012 5:31 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] antlr2-C++ target patching?!
>
> Hi,
> I'm forced to use antlrv2 because antlr3 does not support C++!
> The C target encloses the generated lexer/parser code in 'extern "C"'
> which prevents using C++ constructs (like templates or constructs from
> other C++ libs) inside the parser.
>
> I found that the last version of antlr2 (2.7.7) requires a patch
> because of missing headers.
> Where do I have to post this patch?
>
> regards,
> Oliver
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From finis at in.tum.de  Mon Feb 20 04:41:57 2012
From: finis at in.tum.de (Jan Finis)
Date: Mon, 20 Feb 2012 13:41:57 +0100
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
References: <4F411AAA.6030507@in.tum.de>
	<0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
Message-ID: <4F423F95.5000201@in.tum.de>

On 02/19/2012 10:33 PM, Terence Parr wrote:
>
> Hi. this suprising me. It translates to:
>
> expr[int _p]
>      :   ( ID '=' expr[3]
>          | ID
>          )
>          ( {1>= $_p}? '+' expr[2]
>          )*
>      ;
>
> (See -Xlog option).  Pretty hard for that to match as a=(a+a). are you sure?

Hi Ter,

I tested it again and was able to confirm the precedence bug, here is an 
example grammar producing the bug:

grammar TestGrammar;

start returns [String result]
   : expr {$result = $expr.result; }
   ;

expr returns [String result]
     :   ID '=' e1=expr { $result = "(" + $ID.getText() + "=" + 
$e1.result + ")"; }
     |   ID { $result = $ID.getText(); }
     |   e1=expr '+' e2=expr { $result = "(" + $e1.result + "+" + 
$e2.result + ")"; }
     ;

ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
     ;

This is the input:

a=a+a

The output is (a=(a+a)). With correct precedence the output should be 
((a=a)+a).

I used the jar from

http://antlr.org/download/antlr-4.0ea-complete.jar

and redownloaded it to make sure that I do not have an outdated version.

The output was produced using this code:

TestGrammarLexer lex = new TestGrammarLexer(new ANTLRInputStream(new 
FileInputStream(new File("test.input"))));
CommonTokenStream tokens = new CommonTokenStream(lex);

StartContext i = new TestGrammarParser(tokens).start();

System.out.println(i.result);

>
>> the precedence should be from top to bottom, right? So, the input  a=a+a
>> should be parsed as (a=a)+a, since the assignment rule is on the top.
>> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or
>> am I interpreting something wrong?
>>
>> 2. Name binding
>>
>> Consider this example:
>>
>> expr returns [int r]
>>      : '-' expr { $r = - $expr.r; }
>>
>> In this example $expr should bind to the sub-expression in my opinion.
>> However, it does not. Since the rule is also named expr, $expr refers to
>> the rule context instead of the context of the sub-expression. I think
>> most of the time this is not what the user wants.
> I think this is consistent with v3. i'll add to list to think about. thanks!
> Ter

Yes, it is consistent with v3, however v3 didn't have these crazy left 
recursive rules :).
With these rules, it is much more common to have a non-terminal of the 
same type as the rule itself.


From jimi at temporal-wave.com  Mon Feb 20 09:13:30 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 20 Feb 2012 09:13:30 -0800
Subject: [antlr-interest] antlr2-C++ target patching?!
In-Reply-To: <4F41E06E.7070107@gmx.de>
References: <4F40F9A3.1030401@gmx.de>
	<f4a2a780510e636530ceead83b49277a@mail.gmail.com>
	<4F41E06E.7070107@gmx.de>
Message-ID: <a87bd16768dba0a6392c80a3f217a89c@mail.gmail.com>

> -----Original Message-----
> From: Oliver Kowalke [mailto:oliver.kowalke at gmx.de]
> Sent: Sunday, February 19, 2012 9:56 PM
> To: Jim Idle
> Subject: Re: [antlr-interest] antlr2-C++ target patching?!
>
> Am 19.02.2012 22:47, schrieb Jim Idle:
> > You should not be using C++ inside the actions. Create a helper
> class,
> > and call from it. The headers are extern "C" and then compiler the
> > generated C as C++ and you are fine.
>
> that means that I've to reimplement all the C++ containers from teh STL
> or multi-index container etc. (if ever implementable in C).

What makes you think that? Your helper class(es) can use anything that
they like.

From kferrio at gmail.com  Mon Feb 20 10:38:01 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Mon, 20 Feb 2012 11:38:01 -0700
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <4F423F95.5000201@in.tum.de>
References: <4F411AAA.6030507@in.tum.de>
	<0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
	<4F423F95.5000201@in.tum.de>
Message-ID: <CAAfeETpXosfx8MShDr5W3jk3_4-LugeGS_fieZkkg1O8DN0dog@mail.gmail.com>

I think I did not run into this because I prefer that assignments are not
expressions in my DSLs.  That said, your example reminds me of resolving
ambiguities with bison and I wonder if there's something there which could
help honey badger...

Kyle
On Feb 20, 2012 5:42 AM, "Jan Finis" <finis at in.tum.de> wrote:

> On 02/19/2012 10:33 PM, Terence Parr wrote:
> >
> > Hi. this suprising me. It translates to:
> >
> > expr[int _p]
> >      :   ( ID '=' expr[3]
> >          | ID
> >          )
> >          ( {1>= $_p}? '+' expr[2]
> >          )*
> >      ;
> >
> > (See -Xlog option).  Pretty hard for that to match as a=(a+a). are you
> sure?
>
> Hi Ter,
>
> I tested it again and was able to confirm the precedence bug, here is an
> example grammar producing the bug:
>
> grammar TestGrammar;
>
> start returns [String result]
>   : expr {$result = $expr.result; }
>   ;
>
> expr returns [String result]
>     :   ID '=' e1=expr { $result = "(" + $ID.getText() + "=" +
> $e1.result + ")"; }
>     |   ID { $result = $ID.getText(); }
>     |   e1=expr '+' e2=expr { $result = "(" + $e1.result + "+" +
> $e2.result + ")"; }
>     ;
>
> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>     ;
>
> This is the input:
>
> a=a+a
>
> The output is (a=(a+a)). With correct precedence the output should be
> ((a=a)+a).
>
> I used the jar from
>
> http://antlr.org/download/antlr-4.0ea-complete.jar
>
> and redownloaded it to make sure that I do not have an outdated version.
>
> The output was produced using this code:
>
> TestGrammarLexer lex = new TestGrammarLexer(new ANTLRInputStream(new
> FileInputStream(new File("test.input"))));
> CommonTokenStream tokens = new CommonTokenStream(lex);
>
> StartContext i = new TestGrammarParser(tokens).start();
>
> System.out.println(i.result);
>
> >
> >> the precedence should be from top to bottom, right? So, the input  a=a+a
> >> should be parsed as (a=a)+a, since the assignment rule is on the top.
> >> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or
> >> am I interpreting something wrong?
> >>
> >> 2. Name binding
> >>
> >> Consider this example:
> >>
> >> expr returns [int r]
> >>      : '-' expr { $r = - $expr.r; }
> >>
> >> In this example $expr should bind to the sub-expression in my opinion.
> >> However, it does not. Since the rule is also named expr, $expr refers to
> >> the rule context instead of the context of the sub-expression. I think
> >> most of the time this is not what the user wants.
> > I think this is consistent with v3. i'll add to list to think about.
> thanks!
> > Ter
>
> Yes, it is consistent with v3, however v3 didn't have these crazy left
> recursive rules :).
> With these rules, it is much more common to have a non-terminal of the
> same type as the rule itself.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Feb 20 10:53:06 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 20 Feb 2012 10:53:06 -0800
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <4F423F95.5000201@in.tum.de>
References: <4F411AAA.6030507@in.tum.de>
	<0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
	<4F423F95.5000201@in.tum.de>
Message-ID: <98466471-C0D4-493C-BB20-0619F2E0749F@cs.usfca.edu>

Oops.  prefix left-recursive alts weren't recognized with actions on end.

https://github.com/parrt/antlr4/commit/7287f5a2d3719f992f34bfea5071c8d7d9c16ab5

grab parrt/antlr4 again :)

Thanks,
Ter
On Feb 20, 2012, at 4:41 AM, Jan Finis wrote:

> On 02/19/2012 10:33 PM, Terence Parr wrote:
>> 
>> 
>> Hi. this suprising me. It translates to:
>> 
>> expr[int _p]
>>     :   ( ID '=' expr[3] 
>>         | ID 
>>         )
>>         ( {1 >= $_p}? '+' expr[2]
>>         )*
>>     ;
>> 
>> (See -Xlog option).  Pretty hard for that to match as a=(a+a). are you sure?
> 
> Hi Ter,
> 
> I tested it again and was able to confirm the precedence bug, here is an example grammar producing the bug:
> 
> grammar TestGrammar;
> 
> start returns [String result]
>   : expr {$result = $expr.result; }
>   ;
> 
> expr returns [String result]
>     :   ID '=' e1=expr { $result = "(" + $ID.getText() + "=" + $e1.result + ")"; }
>     |   ID { $result = $ID.getText(); }
>     |   e1=expr '+' e2=expr { $result = "(" + $e1.result + "+" + $e2.result + ")"; }
>     ;
> 
> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>     ;
> 
> This is the input:
> 
> a=a+a
> 
> The output is (a=(a+a)). With correct precedence the output should be ((a=a)+a).
> 
> I used the jar from 
> 
> http://antlr.org/download/antlr-4.0ea-complete.jar
> 
> and redownloaded it to make sure that I do not have an outdated version.
> 
> The output was produced using this code:
> 
> TestGrammarLexer lex = new TestGrammarLexer(new ANTLRInputStream(new FileInputStream(new File("test.input"))));
> CommonTokenStream tokens = new CommonTokenStream(lex);
>            
> StartContext i = new TestGrammarParser(tokens).start();
>         
> System.out.println(i.result);
> 
>> 
>>> the precedence should be from top to bottom, right? So, the input  a=a+a 
>>> should be parsed as (a=a)+a, since the assignment rule is on the top. 
>>> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or 
>>> am I interpreting something wrong?
>>> 
>>> 2. Name binding
>>> 
>>> Consider this example:
>>> 
>>> expr returns [int r]
>>>     : '-' expr { $r = - $expr.r; }
>>> 
>>> In this example $expr should bind to the sub-expression in my opinion. 
>>> However, it does not. Since the rule is also named expr, $expr refers to 
>>> the rule context instead of the context of the sub-expression. I think 
>>> most of the time this is not what the user wants.
>> I think this is consistent with v3. i'll add to list to think about. thanks!
>> Ter
> 
> Yes, it is consistent with v3, however v3 didn't have these crazy left recursive rules :). 
> With these rules, it is much more common to have a non-terminal of the same type as the rule itself.
> 


From kierans777 at gmail.com  Mon Feb 20 16:29:40 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Tue, 21 Feb 2012 11:29:40 +1100
Subject: [antlr-interest] antlr2-C++ target patching?!
In-Reply-To: <f4a2a780510e636530ceead83b49277a@mail.gmail.com>
References: <4F40F9A3.1030401@gmx.de>
	<f4a2a780510e636530ceead83b49277a@mail.gmail.com>
Message-ID: <4F42E574.2090703@gmail.com>

I have to agree here.  I've been using the C target from within a wider 
C++ application using this process.  It's a bit fiddly keeping the code 
organised properly so that C++ constructs don't leak into the extern C 
code (via header includes) but it does result in some very modular code 
which is nice.

If you want specific details let me know.

Cheers,

On 23/07/64 5:59 AM, Jim Idle wrote:
> You should not be using C++ inside the actions. Create a helper class, and
> call from it. The headers are extern "C" and then compiler the generated C
> as C++ and you are fine. I doubt that anyone will be patching 2.7.7 C++
> target.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Oliver Kowalke
>> Sent: Sunday, February 19, 2012 5:31 AM
>> To: antlr-interest Interest
>> Subject: [antlr-interest] antlr2-C++ target patching?!
>>
>> Hi,
>> I'm forced to use antlrv2 because antlr3 does not support C++!
>> The C target encloses the generated lexer/parser code in 'extern "C"'
>> which prevents using C++ constructs (like templates or constructs from
>> other C++ libs) inside the parser.
>>
>> I found that the last version of antlr2 (2.7.7) requires a patch
>> because of missing headers.
>> Where do I have to post this patch?
>>
>> regards,
>> Oliver

From gokul007 at gmail.com  Tue Feb 21 03:04:01 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 21 Feb 2012 19:04:01 +0800
Subject: [antlr-interest] C++ Target updates
Message-ID: <CAHMh4-ZHoAbjnL=wJUR-hWOHqHip_6+35hy1Xiz=3GccimHVkg@mail.gmail.com>

Hi,
   I have uploaded the latest version of C++ Target with some enhancements
and bug-fixes into the wiki
http://www.antlr.org/wiki/pages/viewpage.action?pageId=29130826

a) The C++ Target now has a TokenStream which significantly reduces the
memory usage of the parsing operation, as it tries to delete the tokens
after the tokens are condensed into a rule. Right now the start and stop
tokens are not deleted, as they are part of the rule attributes.
b) The Traits definition and overriding has been made more user-friendly.
Previously in order to override a particular trait, we need to copy the
entire Traits file and override those types which are required. Now we can
just inherit from the CustomTraitsBase and override only the required.
There is also a @Traits section available, which can be used for
convenience purposes. Both are shown in the examples.
c) There was a bug fix in the Exception handling, which was reported by Oliver
Kowalke
d) Also the rule return variables now have a copy constructor and operator=
overload, that should help people define c++ objects as return values.


-- a request has been made to have an input stream that uses std::iostream
as input. I will implement this in the next pacakge.

Please let me know, if you face any issues/bugs.

Thanks,
Gokul.

From finis at in.tum.de  Tue Feb 21 04:20:54 2012
From: finis at in.tum.de (Jan Finis)
Date: Tue, 21 Feb 2012 13:20:54 +0100
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <98466471-C0D4-493C-BB20-0619F2E0749F@cs.usfca.edu>
References: <4F411AAA.6030507@in.tum.de>
	<0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
	<4F423F95.5000201@in.tum.de>
	<98466471-C0D4-493C-BB20-0619F2E0749F@cs.usfca.edu>
Message-ID: <4F438C26.3030208@in.tum.de>

Works fine now, thanks!

*Another strange thing I encountered:*

The "good" case:

expr
     :   ID op=('=' | '+=' | '-=') expr
     ;

In this case op becomes the Token representing the matched operator, 
which is fine and what the user intended.

The "bad" case:
expr
     :   ID op=('=' | '+=' | expr) expr
     ;

In this (strange) case op is still of type Token. Regardless of the 
matched alternative, it is initialized with _input.LT(1); (which was 
correct in the good case).
If the third alternative (expr) is matched, that does not make any sense.

It is not clear what the user intended in this case, but I think he 
wanted to save the Token/context of the matching alternative into op.
So, op should be an Object (in Java) so that it can hold either an 
Exprcontext or a Token (or contexts and tokens should receive a common 
superclass/interface and op should be of that class/interface). Op should be
initialized with the matched context/token instead of LT(1).
An other alternative would be to completely forbid things like that but 
I think it could be handy sometimes.

Code generated now (btw. the cast is superfluous, _localctx is an 
ExprContext) :

public static class ExprContext extends ParserRuleContext<Token> {
     public Token op;

...

((ExprContext)_localctx).op = _input.LT(1);
switch ( getInterpreter().adaptivePredict(_input,0,_ctx) ) {
     case 1:
         {
         setState(10); match(5);
         }
         break;
     case 2:
         {
         setState(12); match(3);
         }
         break;
     case 3:
         {
         setState(14); expr(3);
         }
         break;
}

How it could look like:

public static class ExprContext extends ParserRuleContext<Token> {
     public TokenOrContext op; //TokenOrContext is an interface 
implemented by Tokens and contexts, for example

...

switch ( getInterpreter().adaptivePredict(_input,0,_ctx) ) {
     case 1:
         {
         setState(10); _localctx.op = match(5);
         }
         break;
     case 2:
         {
         setState(12); _localctx.op = match(3);
         }
         break;
     case 3:
         {
         setState(14); _localctx.op = expr(3);
         }
         break;
}

Regards,
Jan



On 02/20/2012 07:53 PM, Terence Parr wrote:
> Oops.  prefix left-recursive alts weren't recognized with actions on end.
>
> https://github.com/parrt/antlr4/commit/7287f5a2d3719f992f34bfea5071c8d7d9c16ab5
>
> grab parrt/antlr4 again :)
>
> Thanks,
> Ter
> On Feb 20, 2012, at 4:41 AM, Jan Finis wrote:
>
>> On 02/19/2012 10:33 PM, Terence Parr wrote:
>>>
>>> Hi. this suprising me. It translates to:
>>>
>>> expr[int _p]
>>>      :   ( ID '=' expr[3]
>>>          | ID
>>>          )
>>>          ( {1>= $_p}? '+' expr[2]
>>>          )*
>>>      ;
>>>
>>> (See -Xlog option).  Pretty hard for that to match as a=(a+a). are you sure?
>>
>> Hi Ter,
>>
>> I tested it again and was able to confirm the precedence bug, here is 
>> an example grammar producing the bug:
>>
>> grammar TestGrammar;
>>
>> start returns [String result]
>>   : expr {$result = $expr.result; }
>>   ;
>>
>> expr returns [String result]
>>     :   ID '=' e1=expr { $result = "(" + $ID.getText() + "=" + 
>> $e1.result + ")"; }
>>     |   ID { $result = $ID.getText(); }
>>     |   e1=expr '+' e2=expr { $result = "(" + $e1.result + "+" + 
>> $e2.result + ")"; }
>>     ;
>>
>> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>     ;
>>
>> This is the input:
>>
>> a=a+a
>>
>> The output is (a=(a+a)). With correct precedence the output should be 
>> ((a=a)+a).
>>
>> I used the jar from
>>
>> http://antlr.org/download/antlr-4.0ea-complete.jar
>>
>> and redownloaded it to make sure that I do not have an outdated version.
>>
>> The output was produced using this code:
>>
>> TestGrammarLexer lex = new TestGrammarLexer(new ANTLRInputStream(new 
>> FileInputStream(new File("test.input"))));
>> CommonTokenStream tokens = new CommonTokenStream(lex);
>>
>> StartContext i = new TestGrammarParser(tokens).start();
>>
>> System.out.println(i.result);
>>
>>>> the precedence should be from top to bottom, right? So, the input  a=a+a
>>>> should be parsed as (a=a)+a, since the assignment rule is on the top.
>>>> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or
>>>> am I interpreting something wrong?
>>>>
>>>> 2. Name binding
>>>>
>>>> Consider this example:
>>>>
>>>> expr returns [int r]
>>>>      : '-' expr { $r = - $expr.r; }
>>>>
>>>> In this example $expr should bind to the sub-expression in my opinion.
>>>> However, it does not. Since the rule is also named expr, $expr refers to
>>>> the rule context instead of the context of the sub-expression. I think
>>>> most of the time this is not what the user wants.
>>> I think this is consistent with v3. i'll add to list to think about. thanks!
>>> Ter
>>
>> Yes, it is consistent with v3, however v3 didn't have these crazy 
>> left recursive rules :).
>> With these rules, it is much more common to have a non-terminal of 
>> the same type as the rule itself.
>>
>


From costa_basil at yahoo.ca  Tue Feb 21 15:49:55 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Tue, 21 Feb 2012 15:49:55 -0800 (PST)
Subject: [antlr-interest] localizing parser/lexer messages in the C# 3 target
Message-ID: <1329868195.64036.YahooMailNeo@web161406.mail.bf1.yahoo.com>

What is the best way to localize the parser/lexer messages for the C# 3 target? I need to add the Spanish versions of these messages.

Thank you

From antlr at mirality.co.nz  Wed Feb 22 00:01:49 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 22 Feb 2012 21:01:49 +1300
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.g
	mail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
	<CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
Message-ID: <20120222080215.3177C34184B9@www.antlr.org>

At 09:12 19/02/2012, Gokulakannan Somasundaram wrote:
 >>> b) Every time a rule's action is executed in execution mode(
 >>> when backtracking == 0 ), it will delete all the tokens 
except
 >>> the first and last token.
[...]
 >If a user attempts to look ahead, there won't be any issue. If a 

 >user looks backward, it might result i an exception. If the user 

 >wants to access any token, it has to be attempted only from
 >within the rule. This is the discipline a parser programmer has
 >to follow to reduce the memory footprint. After the rule's scope 

 >is completed, the tokens might get deleted. So, the necessary
 >info has to be stored in some variable at rule scope / global
 >scope and accessed from there.

Why not have an option that wraps all Token references inside a 
std::shared_ptr (or std::tr1::shared_ptr or boost::shared_ptr for 
backwards compatibility)?  That way the action code can cache 
particular tokens for as long as required, while uninteresting 
tokens (even start/stop tokens if the action code clears them) can 
get automatically deleted as they fall out of scope.

(It shouldn't be the default though, as shared_ptrs aren't cheap.)

-- 
Gavin Lambert, Mirality Systems
<http://www.mirality.co.nz/>
<http://lambert.geek.nz/>
----
Anyone who goes to a psychiatrist ought to have their head 
examined.

Few women admit their age.  Few men act theirs.


From eric.dong at intel.com  Wed Feb 22 01:05:41 2012
From: eric.dong at intel.com (Dong, Eric)
Date: Wed, 22 Feb 2012 09:05:41 +0000
Subject: [antlr-interest] How to resolve this warning?
Message-ID: <ED077930C258884BBCB450DB737E66220FCD256F@SHSMSX102.ccr.corp.intel.com>

Hi Experts:
         Now I confront a warning, and I don't know how to fix it. Detail info below:

Warning:
Warning: alts 1 and 2 of {..} ambiguous upon ( "\|" OpenBrace )

Related code is the following:
  {
    ClassGuid "=" guidDefinition[ClassGuid1]        << ++ClassGuidNum; >>
                  {
                   "\|" guidDefinition[ClassGuid2]  << ++ClassGuidNum; >>
                  }
                  {
                   "\|" guidDefinition[ClassGuid3]  << ++ClassGuidNum; >>
                  }
                  ","
  }

Thanks,
Eric


From oliver.kowalke at gmx.de  Wed Feb 22 01:12:41 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Wed, 22 Feb 2012 10:12:41 +0100
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <20120222080215.3177C34184B9@www.antlr.org>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
	<CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
	<20120222080215.3177C34184B9@www.antlr.org>
Message-ID: <20120222091241.34500@gmx.net>

> Why not have an option that wraps all Token references inside a 
> std::shared_ptr (or std::tr1::shared_ptr or boost::shared_ptr for 
> backwards compatibility)? 

I would suggest to use boost::intrusive_ptr instead - it is less resource-hungry (intrusive-pointer fits into a register).

Oliver
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From gokul007 at gmail.com  Wed Feb 22 03:54:57 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 22 Feb 2012 19:54:57 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <20120222091241.34500@gmx.net>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
	<CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
	<20120222080215.3177C34184B9@www.antlr.org>
	<20120222091241.34500@gmx.net>
Message-ID: <CAHMh4-aBYUiYejjRVP3r4LtaKHmPf=hxusJ4Gv_F_bHvTtgfdw@mail.gmail.com>

Yeah. But i don't want to make ANTLR C++ Target based on boost and C++11x.
But the option is open for any of the user to re-implement things using
traits.

Second, boost::shared_ptr cannot be used here. If you look at the token
life-cycle you can understand.

Gokul.

On Wed, Feb 22, 2012 at 5:12 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

> > Why not have an option that wraps all Token references inside a
> > std::shared_ptr (or std::tr1::shared_ptr or boost::shared_ptr for
> > backwards compatibility)?
>
> I would suggest to use boost::intrusive_ptr instead - it is less
> resource-hungry (intrusive-pointer fits into a register).
>
> Oliver
> --
> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Wed Feb 22 04:45:29 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 22 Feb 2012 20:45:29 +0800
Subject: [antlr-interest] Yet an another TokenStream ( for C++ Target )
In-Reply-To: <CAHMh4-aBYUiYejjRVP3r4LtaKHmPf=hxusJ4Gv_F_bHvTtgfdw@mail.gmail.com>
References: <CAHMh4-Yai6gKOtjmY3KENMziGchUDbORriSKFCF0bHM3GafAMg@mail.gmail.com>
	<CAHMh4-aHa4UT4TaxkZOXZ-+0Xjkws25V0927OJkKGYXknUFP1A@mail.gmail.com>
	<CAP86aOcZAqmc4RsosY1XNb9TGhkZS9HnoLX0iOU3ZNH9tCaDSw@mail.gmail.com>
	<CAHMh4-azL1nzyQ7-vjUTeXZDu_GaM0Vz_95m412mTPwS29VFhw@mail.gmail.com>
	<20120222080215.3177C34184B9@www.antlr.org>
	<20120222091241.34500@gmx.net>
	<CAHMh4-aBYUiYejjRVP3r4LtaKHmPf=hxusJ4Gv_F_bHvTtgfdw@mail.gmail.com>
Message-ID: <CAHMh4-ZKgFrVXh2OSvpCWgvZMc4=21d31J1KJbnuedn-oOYVtQ@mail.gmail.com>

> Second, boost::shared_ptr cannot be used here. If you look at the token
> life-cycle you can understand.
>

I was wrong here. We can use it here. But right now i am storing the
CommonToken by value in the container. If its changed to pointer, then it
can be replaced by shared_ptr/intrusive_ptr.

Gokul.

From Jean-Claude.Durand at imag.fr  Wed Feb 22 07:30:42 2012
From: Jean-Claude.Durand at imag.fr (Jean-Claude Durand)
Date: Wed, 22 Feb 2012 16:30:42 +0100
Subject: [antlr-interest] wildcard for tree node: x=EOA ?
Message-ID: <E37666D7-5896-4E87-82A1-CDE437FA4CEB@imag.fr>

Hello,

Sam Harwell (26 novembre 2008) proposed the correction for the generic wildcard node:
1. Is it implemented in antlr 3.4 for C ?
2. Is EOA the generic type of a node ? 
3. Can I write:

// Impression XML:
// ***************
xml
@init{ int nond=0; }
	:
	appxml[1, &nond]
	;
	
appxml[int indent, int* pnond]:
	^( x=EOA
			{ imprimerNoeud2XML(indent, debut, $x, pnond); }
		appxml[indent+1, pnond]+
			{ imprimerNoeud2XML(indent, fin, $x, pnond); }
	)
	|
		y=EOA		
			{ imprimerNoeud2XML(indent, feuille, $y, pnond); }
	;


I am upgrading from antlr 3.1 to 3.4 and until now I used the dot as the generic node (  x=. and y=. in the above example ).
Now I get the error "Wildcard invalid as root; wildcard can itself be a tree".

Thanks a lot in advance

Jean-Claude Durand

LIG, ?quipe GETALP
385, rue de la Biblioth?que
BP 53
38041 Grenoble cedex 9

Jean-Claude.Durand at imag.fr
t?l: +33 (0)4 76 51 43 81
fax: +33 (0)4 76 63 56 86


From paul.delamusica at gmail.com  Wed Feb 22 10:36:06 2012
From: paul.delamusica at gmail.com (Paul De La Musica)
Date: Wed, 22 Feb 2012 10:36:06 -0800
Subject: [antlr-interest] Best Practices for Migrating Antlr 2.7.7 to 3.4
Message-ID: <CAGc1We9syb4L1MiEVyk6Q6oQNhcJZGB_nDRYgNshm4O=V5D5UA@mail.gmail.com>

Hi,

We are trying to migrate a script.g file fron V2.7.7 to V3.4.

A quick trial on the v2v3 conversion utility doesn't seem to work (see
error below).

Is the best way just to go through the 2.7.7 *.g file line by line?

Thanks,

Paul

>java -cp ./;../antlr-3.4-complete.jar v3me -combined script.g

Exception in thread "main" java.lang.NoSuchFieldError: type
        at ANTLRLexer.mT45(ANTLRLexer.java:85)
        at ANTLRLexer.mTokens(ANTLRLexer.java:2801)
        at org.antlr.runtime.Lexer.nextToken(Lexer.java:89)
        at
org.antlr.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:133)
        at
org.antlr.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:127)
        at
org.antlr.runtime.CommonTokenStream.setup(CommonTokenStream.java:132)
        at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:91)
        at org.antlr.runtime.BufferedTokenStream.LA
(BufferedTokenStream.java:162)
        at ANTLRParser.antlrGrammar(ANTLRParser.java:124)
        at v3me.main(v3me.java:25)

From parrt at cs.usfca.edu  Wed Feb 22 13:40:53 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 22 Feb 2012 13:40:53 -0800
Subject: [antlr-interest] Some bugs (or features?) in Honey Badger
In-Reply-To: <4F438C26.3030208@in.tum.de>
References: <4F411AAA.6030507@in.tum.de>
	<0F16F8B3-DBCD-4531-AE06-BC1377524D0D@cs.usfca.edu>
	<4F423F95.5000201@in.tum.de>
	<98466471-C0D4-493C-BB20-0619F2E0749F@cs.usfca.edu>
	<4F438C26.3030208@in.tum.de>
Message-ID: <0C77640A-FFBB-4B51-BE89-E99C65982FF2@cs.usfca.edu>

hi. that's basically a bug. :) It should not allow rules that are simple sets of tokens.
Ter
On Feb 21, 2012, at 4:20 AM, Jan Finis wrote:

> Works fine now, thanks!
> 
> *Another strange thing I encountered:*
> 
> The "good" case:
> 
> expr
>     :   ID op=('=' | '+=' | '-=') expr
>     ;
> 
> In this case op becomes the Token representing the matched operator, 
> which is fine and what the user intended.
> 
> The "bad" case:
> expr
>     :   ID op=('=' | '+=' | expr) expr
>     ;
> 
> In this (strange) case op is still of type Token. Regardless of the 
> matched alternative, it is initialized with _input.LT(1); (which was 
> correct in the good case).
> If the third alternative (expr) is matched, that does not make any sense.
> 
> It is not clear what the user intended in this case, but I think he 
> wanted to save the Token/context of the matching alternative into op.
> So, op should be an Object (in Java) so that it can hold either an 
> Exprcontext or a Token (or contexts and tokens should receive a common 
> superclass/interface and op should be of that class/interface). Op should be
> initialized with the matched context/token instead of LT(1).
> An other alternative would be to completely forbid things like that but 
> I think it could be handy sometimes.
> 
> Code generated now (btw. the cast is superfluous, _localctx is an 
> ExprContext) :
> 
> public static class ExprContext extends ParserRuleContext<Token> {
>     public Token op;
> 
> ...
> 
> ((ExprContext)_localctx).op = _input.LT(1);
> switch ( getInterpreter().adaptivePredict(_input,0,_ctx) ) {
>     case 1:
>         {
>         setState(10); match(5);
>         }
>         break;
>     case 2:
>         {
>         setState(12); match(3);
>         }
>         break;
>     case 3:
>         {
>         setState(14); expr(3);
>         }
>         break;
> }
> 
> How it could look like:
> 
> public static class ExprContext extends ParserRuleContext<Token> {
>     public TokenOrContext op; //TokenOrContext is an interface 
> implemented by Tokens and contexts, for example
> 
> ...
> 
> switch ( getInterpreter().adaptivePredict(_input,0,_ctx) ) {
>     case 1:
>         {
>         setState(10); _localctx.op = match(5);
>         }
>         break;
>     case 2:
>         {
>         setState(12); _localctx.op = match(3);
>         }
>         break;
>     case 3:
>         {
>         setState(14); _localctx.op = expr(3);
>         }
>         break;
> }
> 
> Regards,
> Jan
> 
> 
> 
> On 02/20/2012 07:53 PM, Terence Parr wrote:
>> Oops.  prefix left-recursive alts weren't recognized with actions on end.
>> 
>> https://github.com/parrt/antlr4/commit/7287f5a2d3719f992f34bfea5071c8d7d9c16ab5
>> 
>> grab parrt/antlr4 again :)
>> 
>> Thanks,
>> Ter
>> On Feb 20, 2012, at 4:41 AM, Jan Finis wrote:
>> 
>>> On 02/19/2012 10:33 PM, Terence Parr wrote:
>>>> 
>>>> Hi. this suprising me. It translates to:
>>>> 
>>>> expr[int _p]
>>>>     :   ( ID '=' expr[3]
>>>>         | ID
>>>>         )
>>>>         ( {1>= $_p}? '+' expr[2]
>>>>         )*
>>>>     ;
>>>> 
>>>> (See -Xlog option).  Pretty hard for that to match as a=(a+a). are you sure?
>>> 
>>> Hi Ter,
>>> 
>>> I tested it again and was able to confirm the precedence bug, here is 
>>> an example grammar producing the bug:
>>> 
>>> grammar TestGrammar;
>>> 
>>> start returns [String result]
>>>  : expr {$result = $expr.result; }
>>>  ;
>>> 
>>> expr returns [String result]
>>>    :   ID '=' e1=expr { $result = "(" + $ID.getText() + "=" + 
>>> $e1.result + ")"; }
>>>    |   ID { $result = $ID.getText(); }
>>>    |   e1=expr '+' e2=expr { $result = "(" + $e1.result + "+" + 
>>> $e2.result + ")"; }
>>>    ;
>>> 
>>> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>    ;
>>> 
>>> This is the input:
>>> 
>>> a=a+a
>>> 
>>> The output is (a=(a+a)). With correct precedence the output should be 
>>> ((a=a)+a).
>>> 
>>> I used the jar from
>>> 
>>> http://antlr.org/download/antlr-4.0ea-complete.jar
>>> 
>>> and redownloaded it to make sure that I do not have an outdated version.
>>> 
>>> The output was produced using this code:
>>> 
>>> TestGrammarLexer lex = new TestGrammarLexer(new ANTLRInputStream(new 
>>> FileInputStream(new File("test.input"))));
>>> CommonTokenStream tokens = new CommonTokenStream(lex);
>>> 
>>> StartContext i = new TestGrammarParser(tokens).start();
>>> 
>>> System.out.println(i.result);
>>> 
>>>>> the precedence should be from top to bottom, right? So, the input  a=a+a
>>>>> should be parsed as (a=a)+a, since the assignment rule is on the top.
>>>>> However, this is not the case, instead, it is parsed as a=(a+a). Bug, or
>>>>> am I interpreting something wrong?
>>>>> 
>>>>> 2. Name binding
>>>>> 
>>>>> Consider this example:
>>>>> 
>>>>> expr returns [int r]
>>>>>     : '-' expr { $r = - $expr.r; }
>>>>> 
>>>>> In this example $expr should bind to the sub-expression in my opinion.
>>>>> However, it does not. Since the rule is also named expr, $expr refers to
>>>>> the rule context instead of the context of the sub-expression. I think
>>>>> most of the time this is not what the user wants.
>>>> I think this is consistent with v3. i'll add to list to think about. thanks!
>>>> Ter
>>> 
>>> Yes, it is consistent with v3, however v3 didn't have these crazy 
>>> left recursive rules :).
>>> With these rules, it is much more common to have a non-terminal of 
>>> the same type as the rule itself.
>>> 
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Feb 22 17:42:27 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 22 Feb 2012 17:42:27 -0800
Subject: [antlr-interest] updated honey badger examples
Message-ID: <249EAFA1-56CE-48B0-A8FB-2D6059B08FB8@cs.usfca.edu>

hi. added TestExpr.java and TestLExpr.java for more listeners / visitors. altered page to be consistent with latest build:

http://www.antlr.org/wiki/display/ANTLR4/Examples

Ter

From finis at in.tum.de  Thu Feb 23 00:46:26 2012
From: finis at in.tum.de (Jan Finis)
Date: Thu, 23 Feb 2012 09:46:26 +0100
Subject: [antlr-interest] Two More Bugs in ANTLRv4
Message-ID: <4F45FCE2.2080904@in.tum.de>

Hi,

I encountered two more bugs in ANTLRv4, tested with the parrt/antlr4 
fork pulled yesterday from github:

First Bug:

The following rule does not work:
expr
   : 'x'
   | e1=expr '?'
   | e1=expr e2=expr
   ;

Error: The following sets of rules are mutually left-recursive [expr]

It seems to be the concatenation operation of two expressions (last 
alternative). If I leave it out, it works fine.

I am sure that I did not have this bug with my old 4.0ea ANTLR build. So 
it must be introduced lately.

Second Bug:

If you take the rule from above and leave out the second alternative 
like that:

expr
   : 'x'
   | e1=expr e2=expr
   ;

then the following exception is thrown:

         [java] can't find rule grammarSpec or tree structure error: 
(COMBINED_GRAMMAR ANTLRv4 (RULES (RULE expr (BLOCK (ALT 'x') (ALT (= e1 
expr[1]) (= e2 expr[1]))))))
         [java] java.lang.reflect.InvocationTargetException
         [java]     at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
         [java]     at 
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
         [java]     at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
         [java]     at java.lang.reflect.Method.invoke(Unknown Source)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.visit(GrammarTreeVisitor.java:192)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.visitGrammar(GrammarTreeVisitor.java:186)
         [java]     at 
org.antlr.v4.semantics.SymbolCollector.process(SymbolCollector.java:69)
         [java]     at 
org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:95)
         [java]     at 
org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:301)
         [java]     at org.antlr.v4.Tool.process(Tool.java:290)
         [java]     at 
org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
         [java]     at org.antlr.v4.Tool.main(Tool.java:144)
         [java] Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
         [java]     at 
org.antlr.v4.semantics.SymbolCollector.discoverOuterAlt(SymbolCollector.java:112)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.outerAlternative(GrammarTreeVisitor.java:2197)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.ruleBlock(GrammarTreeVisitor.java:2105)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.rule(GrammarTreeVisitor.java:1576)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.rules(GrammarTreeVisitor.java:1096)
         [java]     at 
org.antlr.v4.parse.GrammarTreeVisitor.grammarSpec(GrammarTreeVisitor.java:307)
         [java]     ... 12 more
         [java] error(9):  internal error: Rule expr[1] undefined
         [java] error(9):  internal error: Rule expr[1] undefined
         [java] Exception in thread "main" java.lang.NullPointerException
         [java]     at 
org.antlr.v4.automata.ParserATNFactory.elemList(ParserATNFactory.java:386)
         [java]     at 
org.antlr.v4.automata.ParserATNFactory.alt(ParserATNFactory.java:375)
         [java]     at 
org.antlr.v4.parse.ATNBuilder.alternative(ATNBuilder.java:615)
         [java]     at 
org.antlr.v4.parse.ATNBuilder.ruleBlock(ATNBuilder.java:294)
         [java]     at 
org.antlr.v4.automata.ParserATNFactory._createATN(ParserATNFactory.java:127)
         [java]     at 
org.antlr.v4.automata.ParserATNFactory.createATN(ParserATNFactory.java:109)
         [java]     at 
org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:309)
         [java]     at org.antlr.v4.Tool.process(Tool.java:290)
         [java]     at 
org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
         [java]     at org.antlr.v4.Tool.main(Tool.java:144)

Regards,
Jan

From gokul007 at gmail.com  Thu Feb 23 01:57:45 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 23 Feb 2012 17:57:45 +0800
Subject: [antlr-interest] C++ target and excpetions
In-Reply-To: <4F451DB5.7090508@gmx.de>
References: <4F451DB5.7090508@gmx.de>
Message-ID: <CAHMh4-Ygvh5MXzeiAneShUJGO57nz1NO_r6p98yd3C-54FTw0g@mail.gmail.com>

Hmm.. I am confused. Don't catch the exception in displayRecognitionError.
throw it from inside. In the my_rule, setup some instance variable of the
parser to the kind of exception, you want to throw. Inside
displayRecognitionError, access the instance variable and throw either
different kinds of exception / same exception with its instance variable
set to different values. So it should be like this.

@parser::context {
    enum RuleType {
                 MY_RULE1
                 , MY_RULE2
                 ......
    };
    RuleType m_rule_type;

     void displayRecognitionError(.... )
     {
            switch( m_rule_type ){
                 case MY_RULE1:
                         throw ipaddress_error("invalid ipaddress at line "
+ get_line( ex) );
                          .....
            }
     }
}

my_rule1
@init{
    m_rule_type = MY_RULE1;
}
   : ID '=' IPADDRESS { ... }
   ;

Better catch these exceptions at the level, where you call the parser.

Usually It is a bad idea in C++ to setup a lot of try..catch blocks. But i
also want to provide the decision making power to the library user. So i
have created and uploaded the latest jar file which supports rulecatch
directive correctly.

Adding the group, as it might be useful for everyone.

Thanks,
Gokul.

On Thu, Feb 23, 2012 at 12:54 AM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

> Hi Gokul,
>
> I've another requirement related to exceptions. As you already told me you
> consider not to implement @rulecatch directive.
> Could you provide a rule-specific catch directive?
>
> my_rule
>    : ID '=' IPADDRESS { ... }
>    ;
>    catch[RecognitionError const& e]
>    { throw ipaddress_error("invalid ipaddress at line " + get_line( ex) );
> }
>
> Only rules with the catch-directive would get a try-catch block. If I
> catch this implementation in displayRecognitionError() I don't know if it
> was an illformed ipaddres or an invalid interface etc.
>
> regards,
> Oliver
>

From gokul007 at gmail.com  Thu Feb 23 02:19:22 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 23 Feb 2012 18:19:22 +0800
Subject: [antlr-interest] C++ Target updates
In-Reply-To: <CAHMh4-ZHoAbjnL=wJUR-hWOHqHip_6+35hy1Xiz=3GccimHVkg@mail.gmail.com>
References: <CAHMh4-ZHoAbjnL=wJUR-hWOHqHip_6+35hy1Xiz=3GccimHVkg@mail.gmail.com>
Message-ID: <CAHMh4-YejFxP2gcvMgPxekHn1ZLPxBpL_0-bNs4QhLJ4DP18cg@mail.gmail.com>

Hi,
  I have uploaded the latest version of C++ Target with some enhancements
into the wiki. There are no changes to the existing behavior.
http://www.antlr.org/wiki/pages/viewpage.action?pageId=29130826

a) I have made the default structure of the return value as a trait. I have
also merged this structure into the structure, i created before to get
created and destroyed in every rule. Usually it includes the
CommonToken* start;
CommonToken* stop;

start gets assigned at a point and stop gets assigned at a point. I have
made those points to call a function and made sure everything by default
works in the same behavior. The memory savings i have implemented before
has a limitation. It doesn't delete the first and last token after tokens
are condensed into a rule. So, say we have two rules like this
rule2: rule1*;
rule1: TOKEN1 TOKEN2;

Now the the memory occupied by rule1 will not get freed, till rule2 is
completed. The default return value( especially the stop token assignment)
was an impediment to implement the memory behaviour wherein everything
including the start and stop tokens are destroyed( even if we are not using
rule attributes ).
So if a user doesn't use the rule attributes outside the rule, his memory
usage will be very optimal. I am posting an example of how to achieve this
in the attachment.

b) @rulecatch is implemented similar to Java.


Thanks,
Gokul.

From oliver.kowalke at gmx.de  Thu Feb 23 03:17:55 2012
From: oliver.kowalke at gmx.de (Oliver Kowalke)
Date: Thu, 23 Feb 2012 12:17:55 +0100
Subject: [antlr-interest] C++ target and excpetions
In-Reply-To: <CAHMh4-Ygvh5MXzeiAneShUJGO57nz1NO_r6p98yd3C-54FTw0g@mail.gmail.com>
References: <4F451DB5.7090508@gmx.de>
	<CAHMh4-Ygvh5MXzeiAneShUJGO57nz1NO_r6p98yd3C-54FTw0g@mail.gmail.com>
Message-ID: <20120223111755.7410@gmx.net>

Hello Gokul,

it's a missunderstanding - I was asking for specializing the catch clauses per rule, not globaly as I provide with @rulecatch.
I'm referring to the book 'The Definitive ANTLR Reference', T. Parr, chap. 10.5, p. 243.

regards,
Oliver

> Hmm.. I am confused. Don't catch the exception in displayRecognitionError.
> throw it from inside. In the my_rule, setup some instance variable of the
> parser to the kind of exception, you want to throw. Inside
> displayRecognitionError, access the instance variable and throw either
> different kinds of exception / same exception with its instance variable
> set to different values. So it should be like this.
> 
> @parser::context {
>     enum RuleType {
>                  MY_RULE1
>                  , MY_RULE2
>                  ......
>     };
>     RuleType m_rule_type;
> 
>      void displayRecognitionError(.... )
>      {
>             switch( m_rule_type ){
>                  case MY_RULE1:
>                          throw ipaddress_error("invalid ipaddress at line
> "
> + get_line( ex) );
>                           .....
>             }
>      }
> }
> 
> my_rule1
> @init{
>     m_rule_type = MY_RULE1;
> }
>    : ID '=' IPADDRESS { ... }
>    ;
> 
> Better catch these exceptions at the level, where you call the parser.
> 
> Usually It is a bad idea in C++ to setup a lot of try..catch blocks. But i
> also want to provide the decision making power to the library user. So i
> have created and uploaded the latest jar file which supports rulecatch
> directive correctly.
> 
> Adding the group, as it might be useful for everyone.
> 
> Thanks,
> Gokul.
> 
> On Thu, Feb 23, 2012 at 12:54 AM, Oliver Kowalke
> <oliver.kowalke at gmx.de>wrote:
> 
> > Hi Gokul,
> >
> > I've another requirement related to exceptions. As you already told me
> you
> > consider not to implement @rulecatch directive.
> > Could you provide a rule-specific catch directive?
> >
> > my_rule
> >    : ID '=' IPADDRESS { ... }
> >    ;
> >    catch[RecognitionError const& e]
> >    { throw ipaddress_error("invalid ipaddress at line " + get_line( ex)
> );
> > }
> >
> > Only rules with the catch-directive would get a try-catch block. If I
> > catch this implementation in displayRecognitionError() I don't know if
> it
> > was an illformed ipaddres or an invalid interface etc.
> >
> > regards,
> > Oliver
> >

-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From gokul007 at gmail.com  Thu Feb 23 04:06:51 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 23 Feb 2012 20:06:51 +0800
Subject: [antlr-interest] C++ target and excpetions
In-Reply-To: <20120223111755.7410@gmx.net>
References: <4F451DB5.7090508@gmx.de>
	<CAHMh4-Ygvh5MXzeiAneShUJGO57nz1NO_r6p98yd3C-54FTw0g@mail.gmail.com>
	<20120223111755.7410@gmx.net>
Message-ID: <CAHMh4-Y=ZK8j=6cjj3z0Cd5y0ctdWMeDPm4bGhfhU7gTNpSEPg@mail.gmail.com>

OK. I have implemented it referring to the Java Target. I will send tha jar
to you separately. If you test it out, i will put it in the wiki.

Gokul.

On Thu, Feb 23, 2012 at 7:17 PM, Oliver Kowalke <oliver.kowalke at gmx.de>wrote:

> Hello Gokul,
>
> it's a missunderstanding - I was asking for specializing the catch clauses
> per rule, not globaly as I provide with @rulecatch.
> I'm referring to the book 'The Definitive ANTLR Reference', T. Parr, chap.
> 10.5, p. 243.
>
> regards,
> Oliver
>
> > Hmm.. I am confused. Don't catch the exception in
> displayRecognitionError.
> > throw it from inside. In the my_rule, setup some instance variable of the
> > parser to the kind of exception, you want to throw. Inside
> > displayRecognitionError, access the instance variable and throw either
> > different kinds of exception / same exception with its instance variable
> > set to different values. So it should be like this.
> >
> > @parser::context {
> >     enum RuleType {
> >                  MY_RULE1
> >                  , MY_RULE2
> >                  ......
> >     };
> >     RuleType m_rule_type;
> >
> >      void displayRecognitionError(.... )
> >      {
> >             switch( m_rule_type ){
> >                  case MY_RULE1:
> >                          throw ipaddress_error("invalid ipaddress at line
> > "
> > + get_line( ex) );
> >                           .....
> >             }
> >      }
> > }
> >
> > my_rule1
> > @init{
> >     m_rule_type = MY_RULE1;
> > }
> >    : ID '=' IPADDRESS { ... }
> >    ;
> >
> > Better catch these exceptions at the level, where you call the parser.
> >
> > Usually It is a bad idea in C++ to setup a lot of try..catch blocks. But
> i
> > also want to provide the decision making power to the library user. So i
> > have created and uploaded the latest jar file which supports rulecatch
> > directive correctly.
> >
> > Adding the group, as it might be useful for everyone.
> >
> > Thanks,
> > Gokul.
> >
> > On Thu, Feb 23, 2012 at 12:54 AM, Oliver Kowalke
> > <oliver.kowalke at gmx.de>wrote:
> >
> > > Hi Gokul,
> > >
> > > I've another requirement related to exceptions. As you already told me
> > you
> > > consider not to implement @rulecatch directive.
> > > Could you provide a rule-specific catch directive?
> > >
> > > my_rule
> > >    : ID '=' IPADDRESS { ... }
> > >    ;
> > >    catch[RecognitionError const& e]
> > >    { throw ipaddress_error("invalid ipaddress at line " + get_line( ex)
> > );
> > > }
> > >
> > > Only rules with the catch-directive would get a try-catch block. If I
> > > catch this implementation in displayRecognitionError() I don't know if
> > it
> > > was an illformed ipaddres or an invalid interface etc.
> > >
> > > regards,
> > > Oliver
> > >
>
> --
> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>

From lrperlmu at colby.edu  Sun Feb 26 17:55:30 2012
From: lrperlmu at colby.edu (Leah Perlmutter)
Date: Sun, 26 Feb 2012 20:55:30 -0500
Subject: [antlr-interest] Tree building question
Message-ID: <CACtzuji4zmVOjBwNtyTMOYicgsAii+tedZa5_7Q-_+O9W6JqFw@mail.gmail.com>

I am using antlr 3.4 and I have the following rule:

postfix_expression
    :   primary_expression
        (   '['^ expression ']'!
        |   '('^ ')'!
        |   '('^ argument_expression_list ')'!
        |   '.'^ IDENTIFIER
        |   '->'^ IDENTIFIER
        |   '++'^
        |   '--'^
        )*
    ;

It works almost the way I want, except in the first 3 cases of the or I
want the root to be an imaginary node with a name of my choosing instead of
the opening punctuation symbol. Is there a good way to do this?

Thanks,
-Leah

From kpj1 at wustl.edu  Sun Feb 26 21:23:44 2012
From: kpj1 at wustl.edu (Jones, Keith)
Date: Mon, 27 Feb 2012 05:23:44 +0000
Subject: [antlr-interest] Iteration and token comparison?
Message-ID: <9B4325C41059734A98D713599A1E0FD7324DB818@SN2PRD0202MB140.namprd02.prod.outlook.com>

Hello,

I'm new to ANTLR and I'm still trying to get a feel for exactly what it can do. There's two things I need to do with it, but I'm not sure how and I haven't been able to find information online about them...

1) Suppose I have a grammar rule COLUMN, and another rule MAX that has the format "COLUMN COLUMN+", i.e. it takes a series of two or more COLUMNs. How would I iterate over the columns of MAX and extract properties from each?

2) I have a grammar rule for NAMEs, each consisting of a series of LETTERs ('a' . . . 'z'). Is there any way to compare values of LETTERs in the NAMEs to do things such as sort items alphabetically?

Thanks!

From bkiers at gmail.com  Sun Feb 26 23:34:33 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 27 Feb 2012 08:34:33 +0100
Subject: [antlr-interest] Tree building question
In-Reply-To: <CACtzuji4zmVOjBwNtyTMOYicgsAii+tedZa5_7Q-_+O9W6JqFw@mail.gmail.com>
References: <CACtzuji4zmVOjBwNtyTMOYicgsAii+tedZa5_7Q-_+O9W6JqFw@mail.gmail.com>
Message-ID: <CAOrgODa_0RD+BMxUnYGo+b5jMjJZJmEzrN0jp6Yf_ZvCaoJkdw@mail.gmail.com>

Yes, do something like this:

grammar T;

tokens {
  ROOT;
}

postfix_expression
   :   primary_expression
       (   '[' expression ']' -> ^(ROOT expression)
       |   '(' ')' -> ^(...)
       |   '(' argument_expression_list ')' -> ^(...)
       |   '.' IDENTIFIER -> ^(...)
       |   '->' IDENTIFIER -> ^(...)
       |   '++'
       |   '--'
       )*
   ;

Note that you must use either inline tree operators ^ and !, or use rewrite
rules, not both in 1 rule. You can leave '--' and '++' as they are: no need
to specify they're the root of their own tree.

Also see: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

Particularly the paragraphs "Rewrite rules" and "Imaginary nodes".

Regards,
Bart.


On Mon, Feb 27, 2012 at 2:55 AM, Leah Perlmutter <lrperlmu at colby.edu> wrote:

> I am using antlr 3.4 and I have the following rule:
>
> postfix_expression
>    :   primary_expression
>        (   '['^ expression ']'!
>        |   '('^ ')'!
>        |   '('^ argument_expression_list ')'!
>        |   '.'^ IDENTIFIER
>        |   '->'^ IDENTIFIER
>        |   '++'^
>        |   '--'^
>        )*
>    ;
>
> It works almost the way I want, except in the first 3 cases of the or I
> want the root to be an imaginary node with a name of my choosing instead of
> the opening punctuation symbol. Is there a good way to do this?
>
> Thanks,
> -Leah
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kga.official at gmail.com  Mon Feb 27 00:08:51 2012
From: kga.official at gmail.com (Akshay Kini)
Date: Mon, 27 Feb 2012 13:38:51 +0530
Subject: [antlr-interest] TokenStreamException does not contain Line
	numbers. Alternative suggestions?
Message-ID: <CAFtx=Tm7m8q7ZDRjnC0UU2ndZ8_27_avKOsoJTOquzToFOV9NQ@mail.gmail.com>

Hi All,

I am using Antlr 2.7.6 (Due to requirements, I cannot go to v3, although
2.7.7 should be okay).

I need an error message displayed with line number for Invalid Characters
(according to my input language) in the input file.

So far I have tried:

a) Setting 'charVocabulary'  to the correct input characters.
This causes an Exception of the type "TokenStreamException". This is a
problem as it does not have the line number information.

Any workaround for this?

b) I tried to ensure that the invalid character does not become a token
(many of my rules accept all characters inside comments of my language). So
I prevented this.
Now I get an error, but that is also of type "TokenStreamException".

What do I do?

Is there anything I can do to get Line Numbers for this type of an issue?

Thanks,
Regards,
KGA.

From sboisen at mail.dk  Mon Feb 27 02:10:04 2012
From: sboisen at mail.dk (=?UTF-8?Q?S=C3=B8ren_Boisen?=)
Date: Mon, 27 Feb 2012 11:10:04 +0100
Subject: [antlr-interest] AST - Ordering of sibling nodes
Message-ID: <CAM1TniBjHNciJYV9amOXEgxnq0MHYgwprwbpp-W00Q_4kwTJCQ@mail.gmail.com>

Hi there, I'm transforming a URL query language (OData) to SQL. In the
query language the query operators can be specified in arbitrary
sequence:

uri ? ? : ? resource ('?' query)? EOF
? ? ? ?-> ?^(URI resource query?) ;

query   :   queryOp ('&' queryOp)*
        ->  ^(QUERY queryOp+) ;

queryOp :	  expandQueryOp
        |	  orderByQueryOp
        |	  selectQueryOp
        |	  filterQueryOp ;

<--------snip--------->


However, in SQL I of course have to abide by a very specific ordering:

selectClause
fromClause
whereClause
orderByClause

The question is, what's the best/easiest/simplest way of reordering
the AST nodes, so they align with the SQL requirements?
Currently I'm generating the SQL via string templates like so:

uri     :   ^(URI clauses+=resource clauses+=queryOp*)
        ->  query(clauses={$clauses}) ;

resource:   ^(RESOURCE ID s=subResource*)
             -> fromClause(entity={entity($ID)}, joins={$s.st}) ;

queryOp	:   ^(SELECT items=selectItem+)        ->
selectClause(items={$items.st})
                |   ^(FILTER expr)                               ->
whereClause(condition={$expr.st})
                |   ^(ORDERBY items=orderByItem+)   ->
orderByClause(items={$items.st}) ;

<--------snip--------->

But this requires that the nodes are already sorted in the right order.

/S?ren

From toolusr at gmail.com  Mon Feb 27 09:48:59 2012
From: toolusr at gmail.com (ToolUsr)
Date: Mon, 27 Feb 2012 09:48:59 -0800
Subject: [antlr-interest] C# target: String Templates and translation bug?
Message-ID: <E46B6667-E0D9-497C-8996-0B92F6B38B7D@gmail.com>

Hello,
    Taking an illustrative example from Language Implementation Patterns page 336 (Cymbol translation)

tree grammar Gen; options {

  tokenVocab = Cymbol;
  ASTLabelType = CommonTree;
  output = template;
}



Here we are walking a tree (ASTLabelType) and outputting a template (output=template). Going down a little further


compilationUnit
    :   ( d+=classDeclaration | d+=methodDeclaration | d+=varDeclaration )+
        -> file(defs={$d})
    ;

 The 'd' variable accumulates the goodies for output to a template. In C# with an equivalent example I get the following code generated ...




List<CommonTree> list_d = null;
...
if (list_d==null) list_d=new List<StringTemplate>();

which is a compilation error as new List<StringTemplate>() doesn't cast to List<CommonTree>. 



Seems like a bug, thoughts? I'm using the latest version of the tools.



From headhunter3 at gmail.com  Mon Feb 27 10:37:45 2012
From: headhunter3 at gmail.com (Tom Hicks)
Date: Mon, 27 Feb 2012 10:37:45 -0800
Subject: [antlr-interest] Newbie with a simple problem
Message-ID: <CAPU76L-nyvLO1A+J28=j1SM+BN71OimeZe-uMDjQgjrdhWvndg@mail.gmail.com>

I need to implement a fairly simple scripting language for a project
I'm working on and I'm trying to use antlr to help.

I'm not sure if antlr is the right tool for this so I'm going to start
by explaining how I'm trying to use the script.
Each line is either whitespace, a directive, or an action.
Whitespace is only for readability and when I load the script should be ignored.
Actions are things like show a message box, play a bgm, or change the
current character and background images.  There are more but they are
all implemented the same way.
Directives are used to set options on groups of actions.  Each action
has a play condition so if I put a message box action after an "#if
HasHadConversation dlg_darren_photos" directive and before the
corresponding "#endif" directive, then the action should have it's
playcondition set to "HasHadConversation dlg_darren_photos" Which is
another data model object.
I can explain that in more detail if necessarry, but I don't want to
make this too long.

When I load the script file I want to generate a list of the
appropriate actions.  I have this working except for the directives
just using regular expressions, unfortunately the logical expressions
in the directives can't be matched to regular expressions.
So I started looking at parser generators but everything else I've
found expects that I'm familiar with bison/lex and I'm not.  Antlr
looks far more friendly and supports C# which is what I need.

I tried writing a grammar for the script other than an extremely
trivial example I'm completely stumped.

When I use the following grammar with the input "_SC play test 01"
(without the quotes). I get a NoViableAltException.  "_SC stop" works
though
grammar PBScript;
options {
output = AST;
}

line	:	'_SC stop'
	|	'_SC play ' ASSETNAME
	;
ASSETNAME
	:	(~('\n'|'\r'))+ ;

If instead I use this grammar it works but captures the space as part
of ASSETNAME
grammar PBScript;
options {
output = AST;
}

line	:	'_SC stop'
	|	'_SC play' ASSETNAME
	;
ASSETNAME
	:	' '(~('\n'|'\r'))+ ;

~Tom

From martijn.reuvers at gmail.com  Mon Feb 27 10:47:50 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 27 Feb 2012 19:47:50 +0100
Subject: [antlr-interest] Newbie with a simple problem
In-Reply-To: <CAPU76L-nyvLO1A+J28=j1SM+BN71OimeZe-uMDjQgjrdhWvndg@mail.gmail.com>
References: <CAPU76L-nyvLO1A+J28=j1SM+BN71OimeZe-uMDjQgjrdhWvndg@mail.gmail.com>
Message-ID: <CAON31m5NiQS2Ro25pSq9mShWUHeb=oVhM_OiLk-7OU1T9m6D0Q@mail.gmail.com>

Hello Tom,

First: don't use literals (the strings) in parser rules, this always
gives problems sooner or later and makes error reporting bad - use
real tokens instead.

To skip whitespace between tokens (you can also write it to a hidden
channel if you need it later):

WS
	: (' ' | '\t' | '\n' | '\r')+
		{ skip(); }
  ;

Regards,
Martijn


On Mon, Feb 27, 2012 at 7:37 PM, Tom Hicks <headhunter3 at gmail.com> wrote:
> I need to implement a fairly simple scripting language for a project
> I'm working on and I'm trying to use antlr to help.
>
> I'm not sure if antlr is the right tool for this so I'm going to start
> by explaining how I'm trying to use the script.
> Each line is either whitespace, a directive, or an action.
> Whitespace is only for readability and when I load the script should be ignored.
> Actions are things like show a message box, play a bgm, or change the
> current character and background images. ?There are more but they are
> all implemented the same way.
> Directives are used to set options on groups of actions. ?Each action
> has a play condition so if I put a message box action after an "#if
> HasHadConversation dlg_darren_photos" directive and before the
> corresponding "#endif" directive, then the action should have it's
> playcondition set to "HasHadConversation dlg_darren_photos" Which is
> another data model object.
> I can explain that in more detail if necessarry, but I don't want to
> make this too long.
>
> When I load the script file I want to generate a list of the
> appropriate actions. ?I have this working except for the directives
> just using regular expressions, unfortunately the logical expressions
> in the directives can't be matched to regular expressions.
> So I started looking at parser generators but everything else I've
> found expects that I'm familiar with bison/lex and I'm not. ?Antlr
> looks far more friendly and supports C# which is what I need.
>
> I tried writing a grammar for the script other than an extremely
> trivial example I'm completely stumped.
>
> When I use the following grammar with the input "_SC play test 01"
> (without the quotes). I get a NoViableAltException. ?"_SC stop" works
> though
> grammar PBScript;
> options {
> output = AST;
> }
>
> line ? ?: ? ? ? '_SC stop'
> ? ? ? ?| ? ? ? '_SC play ' ASSETNAME
> ? ? ? ?;
> ASSETNAME
> ? ? ? ?: ? ? ? (~('\n'|'\r'))+ ;
>
> If instead I use this grammar it works but captures the space as part
> of ASSETNAME
> grammar PBScript;
> options {
> output = AST;
> }
>
> line ? ?: ? ? ? '_SC stop'
> ? ? ? ?| ? ? ? '_SC play' ASSETNAME
> ? ? ? ?;
> ASSETNAME
> ? ? ? ?: ? ? ? ' '(~('\n'|'\r'))+ ;
>
> ~Tom
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Mon Feb 27 11:31:33 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Feb 2012 11:31:33 -0800
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <4F45FCE2.2080904@in.tum.de>
References: <4F45FCE2.2080904@in.tum.de>
Message-ID: <4F4BDA15.9070909@cs.usfca.edu>



Jan Finis wrote:
> Hi,
>
> I encountered two more bugs in ANTLRv4, tested with the parrt/antlr4
> fork pulled yesterday from github:
>
> First Bug:
>
> The following rule does not work:
> expr
>     : 'x'
>     | e1=expr '?'
>     | e1=expr e2=expr
>     ;
>
> Error: The following sets of rules are mutually left-recursive [expr]

that does not fit the expression pattern and so is definitely left 
recursive by my current definition. Hmm... I'm not sure I am able to 
translate this one properly given the double recursion to itself.

>
> It seems to be the concatenation operation of two expressions (last
> alternative). If I leave it out, it works fine.
>
> I am sure that I did not have this bug with my old 4.0ea ANTLR build. So
> it must be introduced lately.
>
> Second Bug:
>
> If you take the rule from above and leave out the second alternative
> like that:
>
> expr
>     : 'x'
>     | e1=expr e2=expr
>     ;

zoiks. adding to the bug list. your expression rule doesn't make sense, 
  by the way. You probably want something else.
Ter
>
> then the following exception is thrown:
>
>           [java] can't find rule grammarSpec or tree structure error:
> (COMBINED_GRAMMAR ANTLRv4 (RULES (RULE expr (BLOCK (ALT 'x') (ALT (= e1
> expr[1]) (= e2 expr[1]))))))
>           [java] java.lang.reflect.InvocationTargetException
>           [java]     at
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           [java]     at
> sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>           [java]     at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>           [java]     at java.lang.reflect.Method.invoke(Unknown Source)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.visit(GrammarTreeVisitor.java:192)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.visitGrammar(GrammarTreeVisitor.java:186)
>           [java]     at
> org.antlr.v4.semantics.SymbolCollector.process(SymbolCollector.java:69)
>           [java]     at
> org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:95)
>           [java]     at
> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:301)
>           [java]     at org.antlr.v4.Tool.process(Tool.java:290)
>           [java]     at
> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
>           [java]     at org.antlr.v4.Tool.main(Tool.java:144)
>           [java] Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
>           [java]     at
> org.antlr.v4.semantics.SymbolCollector.discoverOuterAlt(SymbolCollector.java:112)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.outerAlternative(GrammarTreeVisitor.java:2197)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.ruleBlock(GrammarTreeVisitor.java:2105)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.rule(GrammarTreeVisitor.java:1576)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.rules(GrammarTreeVisitor.java:1096)
>           [java]     at
> org.antlr.v4.parse.GrammarTreeVisitor.grammarSpec(GrammarTreeVisitor.java:307)
>           [java]     ... 12 more
>           [java] error(9):  internal error: Rule expr[1] undefined
>           [java] error(9):  internal error: Rule expr[1] undefined
>           [java] Exception in thread "main" java.lang.NullPointerException
>           [java]     at
> org.antlr.v4.automata.ParserATNFactory.elemList(ParserATNFactory.java:386)
>           [java]     at
> org.antlr.v4.automata.ParserATNFactory.alt(ParserATNFactory.java:375)
>           [java]     at
> org.antlr.v4.parse.ATNBuilder.alternative(ATNBuilder.java:615)
>           [java]     at
> org.antlr.v4.parse.ATNBuilder.ruleBlock(ATNBuilder.java:294)
>           [java]     at
> org.antlr.v4.automata.ParserATNFactory._createATN(ParserATNFactory.java:127)
>           [java]     at
> org.antlr.v4.automata.ParserATNFactory.createATN(ParserATNFactory.java:109)
>           [java]     at
> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:309)
>           [java]     at org.antlr.v4.Tool.process(Tool.java:290)
>           [java]     at
> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
>           [java]     at org.antlr.v4.Tool.main(Tool.java:144)
>
> Regards,
> Jan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From finis at in.tum.de  Mon Feb 27 12:40:36 2012
From: finis at in.tum.de (Jan Finis)
Date: Mon, 27 Feb 2012 21:40:36 +0100
Subject: [antlr-interest] Two More Bugs in ANTLRv4 + A new one, again ; )
In-Reply-To: <4F4BDA15.9070909@cs.usfca.edu>
References: <4F45FCE2.2080904@in.tum.de> <4F4BDA15.9070909@cs.usfca.edu>
Message-ID: <4F4BEA44.7040306@in.tum.de>

Hi Ter,

thanks for the answer. The expr rules I presented as examples were only 
for showing the bug, they are not intended to be meaningful expression 
definitions (however, the concatenation of two expression is often a 
meaningful operation, for example when specifying a grammar to match 
regular expressions).

I see that a concatenation like

expr : expr expr;

might be a problem since it is somehow "doubly" left recursive, however, 
then the error message is misleading. The word "mutually" somehow 
indicates at least two rules. Another thing I wonder about is why the 
rule parses fine (and even the resulting parser matches those 
concatenations correctly) with the earlier 4.0ea version I have. It was 
somehow possible there. Seems that Honey Badger is full of magic ;). 
Would be really nice if you could make that one work, somehow.

The next thing (sorry for digging out new stuff all the time ;) I 
encountered, probably a feature, but, in my oppinion, an annoying one:

When using non-terminals in actions, ANTLR forces me to use the member 
access operator, e.g.:

expr returns [int i]
   : '+' e=expr { $i = $e.i; } // Works fine
   ;

stmt
   : (l=label ':')? expr ';' { if($l != null) { 
System.out.println("Label was there!"); } //Does not work, missing 
member access at $l

As you see in the second example, I want to use if($l != null) to test 
whether the optional part (a label) was present in the input. However, 
ANTLR complains that I must use a member access with $l, which is in 
this case not what I want. So why is there the need to use a member 
access? Sometimes the user really wants to refer to the context, not one 
of its members.

Regards,
Jan

From antlr at mirality.co.nz  Mon Feb 27 12:48:44 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Feb 2012 09:48:44 +1300
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <4F45FCE2.2080904@in.tum.de>
References: <4F45FCE2.2080904@in.tum.de>
Message-ID: <20120227204856.02BF8341847F@www.antlr.org>

At 21:46 23/02/2012, Jan Finis wrote:
 >The following rule does not work:
 >expr
 >   : 'x'
 >   | e1=expr '?'
 >   | e1=expr e2=expr
 >   ;
 >
 >Error: The following sets of rules are mutually left-recursive
 >[expr]
 >
 >It seems to be the concatenation operation of two expressions
 >(last alternative). If I leave it out, it works fine.

I don't consider that a bug either.  It's basically saying that 
one possible form of expr is two exprs (which in turn can each be 
another two exprs).  With no other distinguishing tokens there's 
no way to exit that path.  So that way lies infinite recursion, 
madness, and/or Sparta.  A compiler error is the correct response.

Was this from a real usage attempt (if so, please explain more 
what you were trying), or were you just experimenting?


From martijn.reuvers at gmail.com  Mon Feb 27 13:10:53 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 27 Feb 2012 22:10:53 +0100
Subject: [antlr-interest] Iteration and token comparison?
In-Reply-To: <9B4325C41059734A98D713599A1E0FD7324DB818@SN2PRD0202MB140.namprd02.prod.outlook.com>
References: <9B4325C41059734A98D713599A1E0FD7324DB818@SN2PRD0202MB140.namprd02.prod.outlook.com>
Message-ID: <CAON31m4nQy0wx77N83jn17NAsAJGXE5Dx_42D5SZx5Yxs4gkTA@mail.gmail.com>

Hello Keith,

It can do a lot (write custom languages, code generation, interpreters
etc). Go to antlr.org and read the wiki, read the get started etc.. to
get an idea, or buy one of the books suggested there (I'd personally
recommend the 'Language Implementation Patterns' book).

1) You can do that for example within 'actions' or do it when
evaluating an AST, both approaches have benefits/drawbacks, again see
wiki for these 2 terms
2) No, you usually do that later either in the parser's actions or
again when evaluating the ast where you apply such logic.

Regards,
Martijn



On Mon, Feb 27, 2012 at 6:23 AM, Jones, Keith <kpj1 at wustl.edu> wrote:
> Hello,
>
> I'm new to ANTLR and I'm still trying to get a feel for exactly what it can do. There's two things I need to do with it, but I'm not sure how and I haven't been able to find information online about them...
>
> 1) Suppose I have a grammar rule COLUMN, and another rule MAX that has the format "COLUMN COLUMN+", i.e. it takes a series of two or more COLUMNs. How would I iterate over the columns of MAX and extract properties from each?
>
> 2) I have a grammar rule for NAMEs, each consisting of a series of LETTERs ('a' . . . 'z'). Is there any way to compare values of LETTERs in the NAMEs to do things such as sort items alphabetically?
>
> Thanks!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From researcher0x00 at gmail.com  Mon Feb 27 14:02:52 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 27 Feb 2012 17:02:52 -0500
Subject: [antlr-interest] Newbie with a simple problem
In-Reply-To: <CAPU76L-nyvLO1A+J28=j1SM+BN71OimeZe-uMDjQgjrdhWvndg@mail.gmail.com>
References: <CAPU76L-nyvLO1A+J28=j1SM+BN71OimeZe-uMDjQgjrdhWvndg@mail.gmail.com>
Message-ID: <CAN45N13gRg7yEejEvKaswWqReHP_wPB2Wu-3jS_UQ=+Gdz7YiA@mail.gmail.com>

Hi Tom,

I am not going to try and give you an answer to your specific problem,
instead I would suggest that if the following terms are concepts that you
can not explain to someone else and feel confident, then you need to do
some reading. Parsing is not something most people can pick up without
learning the concepts first. Until you are comfortable with them, you will
just be beating your head against a wall.

The terms are: scanner, tokenization, token stream, paring, AST, ambiguous
grammar, lookahead, context free, BNF, extended BNF, recursive descent
That should get you going, and for more advanced terms see:
http://www.antlr.org/doc/glossary.html

I would suggest getting a copy of Ter's book:
http://pragprog.com/book/tpantlr/the-definitive-antlr-reference
If you are really serious, then also get  the dragon book:
http://www.amazon.com/Compilers-Principles-Techniques-Tools-2nd/dp/0321486811

When I started learning ANTLR at ver 2.x, the book did not exist. When I
came back to ANTLR after a few years, the first thing I did was buy the
book. Be aware the the book references a version of ANTLR around 3.1, and
the ANTLR 2.x and 4.x are not close enough to it to use the book.

Also a big help early on is to use ANTLRWorks:
http://www.antlr.org/works/index.html  This will require you to use Java,
but since you know C#, the trade off of using Java for learning concepts is
worth the price of admission. Once you get the concepts down, you can then
use C# for the real problems.

Basically take smaller steps to get the concepts down, before jumping into
the deep end.

Hope that helps, Eric


On Mon, Feb 27, 2012 at 1:37 PM, Tom Hicks <headhunter3 at gmail.com> wrote:

> I need to implement a fairly simple scripting language for a project
> I'm working on and I'm trying to use antlr to help.
>
> I'm not sure if antlr is the right tool for this so I'm going to start
> by explaining how I'm trying to use the script.
> Each line is either whitespace, a directive, or an action.
> Whitespace is only for readability and when I load the script should be
> ignored.
> Actions are things like show a message box, play a bgm, or change the
> current character and background images.  There are more but they are
> all implemented the same way.
> Directives are used to set options on groups of actions.  Each action
> has a play condition so if I put a message box action after an "#if
> HasHadConversation dlg_darren_photos" directive and before the
> corresponding "#endif" directive, then the action should have it's
> playcondition set to "HasHadConversation dlg_darren_photos" Which is
> another data model object.
> I can explain that in more detail if necessarry, but I don't want to
> make this too long.
>
> When I load the script file I want to generate a list of the
> appropriate actions.  I have this working except for the directives
> just using regular expressions, unfortunately the logical expressions
> in the directives can't be matched to regular expressions.
> So I started looking at parser generators but everything else I've
> found expects that I'm familiar with bison/lex and I'm not.  Antlr
> looks far more friendly and supports C# which is what I need.
>
> I tried writing a grammar for the script other than an extremely
> trivial example I'm completely stumped.
>
> When I use the following grammar with the input "_SC play test 01"
> (without the quotes). I get a NoViableAltException.  "_SC stop" works
> though
> grammar PBScript;
> options {
> output = AST;
> }
>
> line    :       '_SC stop'
>        |       '_SC play ' ASSETNAME
>        ;
> ASSETNAME
>        :       (~('\n'|'\r'))+ ;
>
> If instead I use this grammar it works but captures the space as part
> of ASSETNAME
> grammar PBScript;
> options {
> output = AST;
> }
>
> line    :       '_SC stop'
>        |       '_SC play' ASSETNAME
>        ;
> ASSETNAME
>        :       ' '(~('\n'|'\r'))+ ;
>
> ~Tom
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Stefan.Maetje at esd-electronics.com  Tue Feb 28 03:08:02 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Tue, 28 Feb 2012 12:08:02 +0100
Subject: [antlr-interest] All say that literal strings in parser rules are
	doing harm. Why?
Message-ID: <1330427282.2333.0@pc-stefanm>

Dear list members,

often I read on this list that including literal strings in parser rules is 
not recommended. Doing this would provoke problems and make error reporting 
more difficult.

Could somebody explain the possible problems and drawbacks to me. All postings 
I found on the list so far sound a little bit vague to me.

Can somebody please point me to a discussion or example grammar where the pros 
and cons are displayed more thoroughly?

At the moment I have a somewhat mixed grammar file (around 1800 lines) with in 
part using lexer tokens and in part using string literals in the parser rules. 
Especially I do that if the keyword exists only in a single rule.

Regards,
	Stefan M?tje


From sboisen at mail.dk  Tue Feb 28 05:35:06 2012
From: sboisen at mail.dk (=?UTF-8?Q?S=C3=B8ren_Boisen?=)
Date: Tue, 28 Feb 2012 14:35:06 +0100
Subject: [antlr-interest] AST - Ordering of sibling nodes
In-Reply-To: <CAM1TniBjHNciJYV9amOXEgxnq0MHYgwprwbpp-W00Q_4kwTJCQ@mail.gmail.com>
References: <CAM1TniBjHNciJYV9amOXEgxnq0MHYgwprwbpp-W00Q_4kwTJCQ@mail.gmail.com>
Message-ID: <CAM1TniB2MC0_C+JWZyWnWpgw06f1fihUj18GZOj1d+Ffa0=H6Q@mail.gmail.com>

For reference, here is my solution, that seems to be working.

I created a simple base class for sorting (just to have as much Java
code in .java files as possible as opposed to having it floating
around in the grammar file):



public abstract class BaseSqlSorter extends TreeRewriter {

    private Map<Integer, Integer> sortValues = new HashMap<Integer,
Integer>(10);

    public BaseSqlSorter (TreeNodeStream input) {
        super(input);
        insertSortValues(sortValues);
    }

    public BaseSqlSorter (TreeNodeStream input, RecognizerSharedState state) {
        super(input, state);
        insertSortValues(sortValues);
    }

    protected abstract void insertSortValues (Map<Integer, Integer> map);

    public final class NodeComparator implements Comparator<ODataNode> {
        @Override
        public int compare (ODataNode n1, ODataNode n2) {
            Integer s1 = sortValues.get(n1.getType());
            Integer s2 = sortValues.get(n2.getType());

            assert s1 != null && s2 != null : "unrecognized token type(s): "
                    + n1.getType() + ", " + n2.getType();

            return s1.compareTo(s2);
        }
    }

    public void sortChildren (ODataNode uriNode) {
        List<ODataNode> children = new
ArrayList<ODataNode>(uriNode.getChildren());
        Collections.sort(children, new NodeComparator());

        ODataNode root = new ODataNode((Token) null);
        root.addChildren(children);

        input.replaceChildren(uriNode, 0, children.size()-1, root);
    }

}




And then I can create a very primitive rewrite tree grammar:

tree grammar SqlSorter;
options {
    tokenVocab = QueryParser;
    ASTLabelType = ODataNode;
    filter = true;
    output = AST;
    superClass = BaseSqlSorter;
}

@header {
<------- SNIP --------->
}

@members {
    protected void insertSortValues (Map<Integer, Integer> map) {
        map.put(SELECT, 25);
        map.put(RESOURCE, 50);
        map.put(FILTER, 75);
        map.put(ORDERBY, 100);
    }
}

topdown:    sortUriChildren ;

sortUriChildren
       :    ^(URI .*) {
           sortChildren($URI);
       } ;



This way I emulate what happens during normal tree rewrite operations,
so I should hopefully be pretty safe :)


/S?ren


27. feb. 2012 11.10 skrev S?ren Boisen <sboisen at mail.dk>:
> Hi there, I'm transforming a URL query language (OData) to SQL. In the
> query language the query operators can be specified in arbitrary
> sequence:
>
> uri ? ? : ? resource ('?' query)? EOF
> ? ? ? ?-> ?^(URI resource query?) ;
>
> query ? : ? queryOp ('&' queryOp)*
> ? ? ? ?-> ?^(QUERY queryOp+) ;
>
> queryOp : ? ? ? ? expandQueryOp
> ? ? ? ?| ? ? ? ? orderByQueryOp
> ? ? ? ?| ? ? ? ? selectQueryOp
> ? ? ? ?| ? ? ? ? filterQueryOp ;
>
> <--------snip--------->
>
>
> However, in SQL I of course have to abide by a very specific ordering:
>
> selectClause
> fromClause
> whereClause
> orderByClause
>
> The question is, what's the best/easiest/simplest way of reordering
> the AST nodes, so they align with the SQL requirements?
> Currently I'm generating the SQL via string templates like so:
>
> uri ? ? : ? ^(URI clauses+=resource clauses+=queryOp*)
> ? ? ? ?-> ?query(clauses={$clauses}) ;
>
> resource: ? ^(RESOURCE ID s=subResource*)
> ? ? ? ? ? ? -> fromClause(entity={entity($ID)}, joins={$s.st}) ;
>
> queryOp : ? ^(SELECT items=selectItem+) ? ? ? ?->
> selectClause(items={$items.st})
> ? ? ? ? ? ? ? ?| ? ^(FILTER expr) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ->
> whereClause(condition={$expr.st})
> ? ? ? ? ? ? ? ?| ? ^(ORDERBY items=orderByItem+) ? ->
> orderByClause(items={$items.st}) ;
>
> <--------snip--------->
>
> But this requires that the nodes are already sorted in the right order.
>
> /S?ren

From Stefan.Maetje at esd-electronics.com  Tue Feb 28 05:37:21 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Tue, 28 Feb 2012 14:37:21 +0100
Subject: [antlr-interest] All say that literal strings in parser rules
 are doing harm. Why?
In-Reply-To: <CAN45N13y+Tiu1KE92EcxbazbVXr-E50OhzbbWt4HE3SZLcXMJw@mail.gmail.com>
	(from researcher0x00@gmail.com on Tue Feb 28 13:37:39 2012)
Message-ID: <1330436241.3235.0@pc-stefanm>

Hi Eric,

thanks for that information. I added my comments below.

But to all the others: Are there more drawbacks to expect using literals in 
parser rules?

Thanks in advance,
	Stefan


Am 28.02.2012 13:37:39 schrieb(en) Eric:
> Hi Stefan,
> 
> As I only use the tools and do not do formal proofs on them, there may be
> more to this than what I present here.
>
> If you are using string and/or char literals in parser rules, then ANTLR
> must create a new set of lexer rules that include all of the string and/or
> char literals in the parser rules. Remember that the parser can only see
> tokens and not raw text. So string and/or char literals cannot be passed to
> the parser.

That's clear so far.

> To see the new set of lexer rules, use org.antlr.Tool ?Xsavelexer, and then
> open the created grammar file. The name may be like <grammar>__.g . If you
> have string and/or char literals in your parser rules you will see lexer
> rules with name starting with T__  .

That is a valuable hint to see how the real lexer will be implemented by 
ANTLR.

> The T__ names make it harder to debug because you don't know what they
> mean. 

I always used the generated *.token file to match T__xxx names to the strings 
they mean. But I needed to do that nearly never.

> Also because ANTLR added them at the top, it may cause other problems
> for other lexer rules.

As I only used the keywords directly in the parser rules (punctuation symbols 
have lexer rules) the keywords surprisingly appear in the generated lexer 
intermediate grammar at the point I myself would have written them down.

> 
> Eric

Thank you so far,
	Stefan



> On Tue, Feb 28, 2012 at 6:08 AM, Stefan M?tje <
> Stefan.Maetje at esd-electronics.com> wrote:
> 
> > Dear list members,
> >
> > often I read on this list that including literal strings in parser rules 
> is
> > not recommended. Doing this would provoke problems and make error 
> reporting
> > more difficult.
> >
> > Could somebody explain the possible problems and drawbacks to me. All
> > postings
> > I found on the list so far sound a little bit vague to me.
> >
> > Can somebody please point me to a discussion or example grammar where the
> > pros
> > and cons are displayed more thoroughly?
> >
> > At the moment I have a somewhat mixed grammar file (around 1800 lines)
> > with in
> > part using lexer tokens and in part using string literals in the parser
> > rules.
> > Especially I do that if the keyword exists only in a single rule.
> >
> > Regards,
> >        Stefan M?tje
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 


From finis at in.tum.de  Tue Feb 28 06:11:48 2012
From: finis at in.tum.de (Jan Finis)
Date: Tue, 28 Feb 2012 15:11:48 +0100
Subject: [antlr-interest] Double Left Recursion Update: Test case with
 working "double left recursion"
In-Reply-To: <4F4BDA15.9070909@cs.usfca.edu>
References: <4F45FCE2.2080904@in.tum.de> <4F4BDA15.9070909@cs.usfca.edu>
Message-ID: <4F4CE0A4.4010409@in.tum.de>

Hi again,

as I mentioned in my last mail, I think that the problem with rules of 
the form

expr : expr expr;

is solvable because old Honey Badger was able to match them. I tried 
again and could confirm this. This grammar:


result : expr { System.out.println($expr.s); } EOF;

expr returns [String s]
	: 'x' { $s = "x"; }
	| e1=expr '?' { $s = $e1.s + "?"; }
	| e1=expr e2=expr { $s = "(" + $e1.s + " " + $e2.s + ")"; }
	;


parses correctly with an older 4.0ea version. I have uploaded this 
version here:
http://www-db.in.tum.de/~finis/antlr-4.0ea-complete-old.jar/

It does not only parse correctly, even the resulting parser is really 
able to match input without descending into a looping recursion.

I tested the resulting parser on the following input:

xxxxx?xx?xx


and the result was:

(x (x (x (x (x? (x (x? (x x))))))))

so the concatenation operation seems to be right associative, but it 
works perfectly fine :).

Best regards,
Jan


From lgcraymer at yahoo.com  Tue Feb 28 07:31:40 2012
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 28 Feb 2012 07:31:40 -0800 (PST)
Subject: [antlr-interest] All say that literal strings in parser rules
	are doing harm. Why?
In-Reply-To: <1330436241.3235.0@pc-stefanm>
References: <CAN45N13y+Tiu1KE92EcxbazbVXr-E50OhzbbWt4HE3SZLcXMJw@mail.gmail.com>
	(from researcher0x00@gmail.com on Tue Feb 28 13:37:39 2012)
	<1330436241.3235.0@pc-stefanm>
Message-ID: <1330443100.32083.YahooMailNeo@web125504.mail.ne1.yahoo.com>

Add to Eric's comments that strings commit a DFA path; if you have a typical IDENT rule, and a keyword, say, 'default', then any IDENT which partially matches the keyword, say 'define', will confuse the lexer-- 'd' 'e' 'f' is the path to 'default' so that it has troubles matching 'define'; to get around that, you eventually fold keyword specifications into the IDENT rule.

--Loring



>________________________________
> From: Stefan M?tje <Stefan.Maetje at esd-electronics.com>
>To: antlr-interest <antlr-interest at antlr.org> 
>Sent: Tuesday, February 28, 2012 5:37 AM
>Subject: Re: [antlr-interest] All say that literal strings in parser rules are doing harm. Why?
> 
>Hi Eric,
>
>thanks for that information. I added my comments below.
>
>But to all the others: Are there more drawbacks to expect using literals in 
>parser rules?
>
>Thanks in advance,
>??? Stefan
>
>
>Am 28.02.2012 13:37:39 schrieb(en) Eric:
>> Hi Stefan,
>> 
>> As I only use the tools and do not do formal proofs on them, there may be
>> more to this than what I present here.
>>
>> If you are using string and/or char literals in parser rules, then ANTLR
>> must create a new set of lexer rules that include all of the string and/or
>> char literals in the parser rules. Remember that the parser can only see
>> tokens and not raw text. So string and/or char literals cannot be passed to
>> the parser.
>
>That's clear so far.
>
>> To see the new set of lexer rules, use org.antlr.Tool ?Xsavelexer, and then
>> open the created grammar file. The name may be like <grammar>__.g . If you
>> have string and/or char literals in your parser rules you will see lexer
>> rules with name starting with T__? .
>
>That is a valuable hint to see how the real lexer will be implemented by 
>ANTLR.
>
>> The T__ names make it harder to debug because you don't know what they
>> mean. 
>
>I always used the generated *.token file to match T__xxx names to the strings 
>they mean. But I needed to do that nearly never.
>
>> Also because ANTLR added them at the top, it may cause other problems
>> for other lexer rules.
>
>As I only used the keywords directly in the parser rules (punctuation symbols 
>have lexer rules) the keywords surprisingly appear in the generated lexer 
>intermediate grammar at the point I myself would have written them down.
>
>> 
>> Eric
>
>Thank you so far,
>??? Stefan
>
>
>
>> On Tue, Feb 28, 2012 at 6:08 AM, Stefan M?tje <
>> Stefan.Maetje at esd-electronics.com> wrote:
>> 
>> > Dear list members,
>> >
>> > often I read on this list that including literal strings in parser rules 
>> is
>> > not recommended. Doing this would provoke problems and make error 
>> reporting
>> > more difficult.
>> >
>> > Could somebody explain the possible problems and drawbacks to me. All
>> > postings
>> > I found on the list so far sound a little bit vague to me.
>> >
>> > Can somebody please point me to a discussion or example grammar where the
>> > pros
>> > and cons are displayed more thoroughly?
>> >
>> > At the moment I have a somewhat mixed grammar file (around 1800 lines)
>> > with in
>> > part using lexer tokens and in part using string literals in the parser
>> > rules.
>> > Especially I do that if the keyword exists only in a single rule.
>> >
>> > Regards,
>> >? ? ? ? Stefan M?tje
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> 
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From finis at in.tum.de  Tue Feb 28 07:38:23 2012
From: finis at in.tum.de (Jan Finis)
Date: Tue, 28 Feb 2012 16:38:23 +0100
Subject: [antlr-interest] All say that literal strings in parser rules
 are doing harm. Why?
In-Reply-To: <1330443100.32083.YahooMailNeo@web125504.mail.ne1.yahoo.com>
References: <CAN45N13y+Tiu1KE92EcxbazbVXr-E50OhzbbWt4HE3SZLcXMJw@mail.gmail.com>
	(from researcher0x00@gmail.com on Tue Feb 28 13:37:39 2012)
	<1330436241.3235.0@pc-stefanm>
	<1330443100.32083.YahooMailNeo@web125504.mail.ne1.yahoo.com>
Message-ID: <4F4CF4EF.1050300@in.tum.de>

I have never seen keyword specs in an IDENT rule and it would be very 
confusing. To be honest, I do not understand a single word of your mail; 
a DFA is surely able to distinguish words with identical prefixes. If 
not, lexer design would be very hard.

I use literals in parser code and never had any problems with it until now.

On 02/28/2012 04:31 PM, Loring Craymer wrote:
> Add to Eric's comments that strings commit a DFA path; if you have a typical IDENT rule, and a keyword, say, 'default', then any IDENT which partially matches the keyword, say 'define', will confuse the lexer-- 'd' 'e' 'f' is the path to 'default' so that it has troubles matching 'define'; to get around that, you eventually fold keyword specifications into the IDENT rule.
>
> --Loring
>
>
>
>> ________________________________
>> From: Stefan M?tje<Stefan.Maetje at esd-electronics.com>
>> To: antlr-interest<antlr-interest at antlr.org>
>> Sent: Tuesday, February 28, 2012 5:37 AM
>> Subject: Re: [antlr-interest] All say that literal strings in parser rules are doing harm. Why?
>>
>> Hi Eric,
>>
>> thanks for that information. I added my comments below.
>>
>> But to all the others: Are there more drawbacks to expect using literals in
>> parser rules?
>>
>> Thanks in advance,
>>      Stefan
>>
>>
>> Am 28.02.2012 13:37:39 schrieb(en) Eric:
>>> Hi Stefan,
>>>
>>> As I only use the tools and do not do formal proofs on them, there may be
>>> more to this than what I present here.
>>>
>>> If you are using string and/or char literals in parser rules, then ANTLR
>>> must create a new set of lexer rules that include all of the string and/or
>>> char literals in the parser rules. Remember that the parser can only see
>>> tokens and not raw text. So string and/or char literals cannot be passed to
>>> the parser.
>> That's clear so far.
>>
>>> To see the new set of lexer rules, use org.antlr.Tool ?Xsavelexer, and then
>>> open the created grammar file. The name may be like<grammar>__.g . If you
>>> have string and/or char literals in your parser rules you will see lexer
>>> rules with name starting with T__  .
>> That is a valuable hint to see how the real lexer will be implemented by
>> ANTLR.
>>
>>> The T__ names make it harder to debug because you don't know what they
>>> mean.
>> I always used the generated *.token file to match T__xxx names to the strings
>> they mean. But I needed to do that nearly never.
>>
>>> Also because ANTLR added them at the top, it may cause other problems
>>> for other lexer rules.
>> As I only used the keywords directly in the parser rules (punctuation symbols
>> have lexer rules) the keywords surprisingly appear in the generated lexer
>> intermediate grammar at the point I myself would have written them down.
>>
>>> Eric
>> Thank you so far,
>>      Stefan
>>
>>
>>
>>> On Tue, Feb 28, 2012 at 6:08 AM, Stefan M?tje<
>>> Stefan.Maetje at esd-electronics.com>  wrote:
>>>
>>>> Dear list members,
>>>>
>>>> often I read on this list that including literal strings in parser rules
>>> is
>>>> not recommended. Doing this would provoke problems and make error
>>> reporting
>>>> more difficult.
>>>>
>>>> Could somebody explain the possible problems and drawbacks to me. All
>>>> postings
>>>> I found on the list so far sound a little bit vague to me.
>>>>
>>>> Can somebody please point me to a discussion or example grammar where the
>>>> pros
>>>> and cons are displayed more thoroughly?
>>>>
>>>> At the moment I have a somewhat mixed grammar file (around 1800 lines)
>>>> with in
>>>> part using lexer tokens and in part using string literals in the parser
>>>> rules.
>>>> Especially I do that if the keyword exists only in a single rule.
>>>>
>>>> Regards,
>>>>          Stefan M?tje
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From finis at in.tum.de  Tue Feb 28 08:29:32 2012
From: finis at in.tum.de (Jan Finis)
Date: Tue, 28 Feb 2012 17:29:32 +0100
Subject: [antlr-interest] Yet another bug in ANTLRv4
In-Reply-To: <4F4BDA15.9070909@cs.usfca.edu>
References: <4F45FCE2.2080904@in.tum.de> <4F4BDA15.9070909@cs.usfca.edu>
Message-ID: <4F4D00EC.5030806@in.tum.de>

Hi Ter,

I tried to change the "expr with concatenation" grammar to work without 
using a doubly left-recursive concat operation ( expr : expr expr;)
in case that Honey Badger will never allow such rules again.

The resulting grammar is accepted by latest Honey Badger (the one pulled 
from parrt/antlr). However, the resulting parser contains errors: an 
unused semPred method with errors is produced. Since it is unused, I 
simply deleted it. However, the parser still does not match the input 
correctly. I guess both things have are symptoms of the same bug.

Here is (a simplified version of) the grammar producing the erroneous 
parser:

rule returns [String r]
   :  t=ID  ':' alts+=expr ('|' alts+= expr)* ';'
       {  $r = "x"; }
   ;

strongExpr returns [String r]
   : ID                      { $r = "x"; }
   | '(' ep=parenExpr ')'       		{ $r = "x"; }
   | e1=strongExpr '?'             { $r = "x"; }
   ;

expr returns [String r]
   : e=strongExpr (e2=expr)? { $r = "x"; }
   | e1=expr '->' ID {$r = "x"; }
   ;

parenExpr returns [String r]
   : e1=expr '|' e2=parenExpr { $r = "x"; }
   | expr              {$r = $expr.r; }
   ;

ID  :	('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
     ;

the resulting unused sempred with errors:

public boolean sempred(RuleContext _localctx, int ruleIndex, int 
predIndex) {
switch ( ruleIndex ) {
case 1 : return strongExpr_sempred((StrongExprContext)_localctx, 
predIndex);	
case 2 : return expr_sempred((ExprContext)_localctx, predIndex);
		}
		return true;
	}

the problems are the casts (StrongExprContext)_localctx and 
(ExprContext)_localctx, since _localctx is a RuleContext here.
As mentioned, the sempred is not called anyway.

Best regards,
Jan



From gokul007 at gmail.com  Tue Feb 28 10:07:07 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 29 Feb 2012 02:07:07 +0800
Subject: [antlr-interest] C++ Target updates
In-Reply-To: <CAHMh4-YejFxP2gcvMgPxekHn1ZLPxBpL_0-bNs4QhLJ4DP18cg@mail.gmail.com>
References: <CAHMh4-ZHoAbjnL=wJUR-hWOHqHip_6+35hy1Xiz=3GccimHVkg@mail.gmail.com>
	<CAHMh4-YejFxP2gcvMgPxekHn1ZLPxBpL_0-bNs4QhLJ4DP18cg@mail.gmail.com>
Message-ID: <CAHMh4-bqXRB_DAEGt=RJBpJMu8J30kNpPDYHv1fVeAVXcbmGLg@mail.gmail.com>

Minor update:
Now the version supports VS2008 toolset also and it has been tested against
the same.

Thanks,
Gokul.

From parrt at cs.usfca.edu  Tue Feb 28 11:45:24 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Feb 2012 11:45:24 -0800
Subject: [antlr-interest] Yet another bug in ANTLRv4
In-Reply-To: <4F4D00EC.5030806@in.tum.de>
References: <4F45FCE2.2080904@in.tum.de> <4F4BDA15.9070909@cs.usfca.edu>
	<4F4D00EC.5030806@in.tum.de>
Message-ID: <4F4D2ED4.6090602@cs.usfca.edu>

Interesting. I will add this to the issue list.

https://github.com/antlr/antlr4/issues/27

Ter

> Jan Finis <mailto:finis at in.tum.de>
> February 28, 2012 8:29 AM
> Hi Ter,
>
> I tried to change the "expr with concatenation" grammar to work without
> using a doubly left-recursive concat operation ( expr : expr expr;)
> in case that Honey Badger will never allow such rules again.
>
> The resulting grammar is accepted by latest Honey Badger (the one pulled
> from parrt/antlr). However, the resulting parser contains errors: an
> unused semPred method with errors is produced. Since it is unused, I
> simply deleted it. However, the parser still does not match the input
> correctly. I guess both things have are symptoms of the same bug.
>
> Here is (a simplified version of) the grammar producing the erroneous
> parser:
>
> rule returns [String r]
> : t=ID ':' alts+=expr ('|' alts+= expr)* ';'
> { $r = "x"; }
> ;
>
> strongExpr returns [String r]
> : ID { $r = "x"; }
> | '(' ep=parenExpr ')' { $r = "x"; }
> | e1=strongExpr '?' { $r = "x"; }
> ;
>
> expr returns [String r]
> : e=strongExpr (e2=expr)? { $r = "x"; }
> | e1=expr '->' ID {$r = "x"; }
> ;
>
> parenExpr returns [String r]
> : e1=expr '|' e2=parenExpr { $r = "x"; }
> | expr {$r = $expr.r; }
> ;
>
> ID : ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
> ;
>
> the resulting unused sempred with errors:
>
> public boolean sempred(RuleContext _localctx, int ruleIndex, int
> predIndex) {
> switch ( ruleIndex ) {
> case 1 : return strongExpr_sempred((StrongExprContext)_localctx,
> predIndex);
> case 2 : return expr_sempred((ExprContext)_localctx, predIndex);
> }
> return true;
> }
>
> the problems are the casts (StrongExprContext)_localctx and
> (ExprContext)_localctx, since _localctx is a RuleContext here.
> As mentioned, the sempred is not called anyway.
>
> Best regards,
> Jan
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> Terence Parr <mailto:parrt at cs.usfca.edu>
> February 27, 2012 11:31 AM
> Jan Finis wrote:
>> Hi,
>>
>> I encountered two more bugs in ANTLRv4, tested with the parrt/antlr4
>> fork pulled yesterday from github:
>>
>> First Bug:
>>
>> The following rule does not work:
>> expr
>>      : 'x'
>>      | e1=expr '?'
>>      | e1=expr e2=expr
>>      ;
>>
>> Error: The following sets of rules are mutually left-recursive [expr]
>
> that does not fit the expression pattern and so is definitely left
> recursive by my current definition. Hmm... I'm not sure I am able to
> translate this one properly given the double recursion to itself.
>
>> It seems to be the concatenation operation of two expressions (last
>> alternative). If I leave it out, it works fine.
>>
>> I am sure that I did not have this bug with my old 4.0ea ANTLR build. So
>> it must be introduced lately.
>>
>> Second Bug:
>>
>> If you take the rule from above and leave out the second alternative
>> like that:
>>
>> expr
>>      : 'x'
>>      | e1=expr e2=expr
>>      ;
>
> zoiks. adding to the bug list. your expression rule doesn't make sense,
>    by the way. You probably want something else.
> Ter
>> then the following exception is thrown:
>>
>>            [java] can't find rule grammarSpec or tree structure error:
>> (COMBINED_GRAMMAR ANTLRv4 (RULES (RULE expr (BLOCK (ALT 'x') (ALT (= e1
>> expr[1]) (= e2 expr[1]))))))
>>            [java] java.lang.reflect.InvocationTargetException
>>            [java]     at
>> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>            [java]     at
>> sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>>            [java]     at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>>            [java]     at java.lang.reflect.Method.invoke(Unknown Source)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.visit(GrammarTreeVisitor.java:192)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.visitGrammar(GrammarTreeVisitor.java:186)
>>            [java]     at
>> org.antlr.v4.semantics.SymbolCollector.process(SymbolCollector.java:69)
>>            [java]     at
>> org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:95)
>>            [java]     at
>> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:301)
>>            [java]     at org.antlr.v4.Tool.process(Tool.java:290)
>>            [java]     at
>> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
>>            [java]     at org.antlr.v4.Tool.main(Tool.java:144)
>>            [java] Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
>>            [java]     at
>> org.antlr.v4.semantics.SymbolCollector.discoverOuterAlt(SymbolCollector.java:112)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.outerAlternative(GrammarTreeVisitor.java:2197)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.ruleBlock(GrammarTreeVisitor.java:2105)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.rule(GrammarTreeVisitor.java:1576)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.rules(GrammarTreeVisitor.java:1096)
>>            [java]     at
>> org.antlr.v4.parse.GrammarTreeVisitor.grammarSpec(GrammarTreeVisitor.java:307)
>>            [java]     ... 12 more
>>            [java] error(9):  internal error: Rule expr[1] undefined
>>            [java] error(9):  internal error: Rule expr[1] undefined
>>            [java] Exception in thread "main" java.lang.NullPointerException
>>            [java]     at
>> org.antlr.v4.automata.ParserATNFactory.elemList(ParserATNFactory.java:386)
>>            [java]     at
>> org.antlr.v4.automata.ParserATNFactory.alt(ParserATNFactory.java:375)
>>            [java]     at
>> org.antlr.v4.parse.ATNBuilder.alternative(ATNBuilder.java:615)
>>            [java]     at
>> org.antlr.v4.parse.ATNBuilder.ruleBlock(ATNBuilder.java:294)
>>            [java]     at
>> org.antlr.v4.automata.ParserATNFactory._createATN(ParserATNFactory.java:127)
>>            [java]     at
>> org.antlr.v4.automata.ParserATNFactory.createATN(ParserATNFactory.java:109)
>>            [java]     at
>> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:309)
>>            [java]     at org.antlr.v4.Tool.process(Tool.java:290)
>>            [java]     at
>> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
>>            [java]     at org.antlr.v4.Tool.main(Tool.java:144)
>>
>> Regards,
>> Jan
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> Jan Finis <mailto:finis at in.tum.de>
> February 23, 2012 12:46 AM
> Hi,
>
> I encountered two more bugs in ANTLRv4, tested with the parrt/antlr4
> fork pulled yesterday from github:
>
> First Bug:
>
> The following rule does not work:
> expr
> : 'x'
> | e1=expr '?'
> | e1=expr e2=expr
> ;
>
> Error: The following sets of rules are mutually left-recursive [expr]
>
> It seems to be the concatenation operation of two expressions (last
> alternative). If I leave it out, it works fine.
>
> I am sure that I did not have this bug with my old 4.0ea ANTLR build. So
> it must be introduced lately.
>
> Second Bug:
>
> If you take the rule from above and leave out the second alternative
> like that:
>
> expr
> : 'x'
> | e1=expr e2=expr
> ;
>
> then the following exception is thrown:
>
> [java] can't find rule grammarSpec or tree structure error:
> (COMBINED_GRAMMAR ANTLRv4 (RULES (RULE expr (BLOCK (ALT 'x') (ALT (= e1
> expr[1]) (= e2 expr[1]))))))
> [java] java.lang.reflect.InvocationTargetException
> [java] at
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> [java] at
> sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
> [java] at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
> [java] at java.lang.reflect.Method.invoke(Unknown Source)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.visit(GrammarTreeVisitor.java:192)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.visitGrammar(GrammarTreeVisitor.java:186)
> [java] at
> org.antlr.v4.semantics.SymbolCollector.process(SymbolCollector.java:69)
> [java] at
> org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:95)
> [java] at
> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:301)
> [java] at org.antlr.v4.Tool.process(Tool.java:290)
> [java] at
> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
> [java] at org.antlr.v4.Tool.main(Tool.java:144)
> [java] Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
> [java] at
> org.antlr.v4.semantics.SymbolCollector.discoverOuterAlt(SymbolCollector.java:112)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.outerAlternative(GrammarTreeVisitor.java:2197)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.ruleBlock(GrammarTreeVisitor.java:2105)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.rule(GrammarTreeVisitor.java:1576)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.rules(GrammarTreeVisitor.java:1096)
> [java] at
> org.antlr.v4.parse.GrammarTreeVisitor.grammarSpec(GrammarTreeVisitor.java:307)
> [java] ... 12 more
> [java] error(9): internal error: Rule expr[1] undefined
> [java] error(9): internal error: Rule expr[1] undefined
> [java] Exception in thread "main" java.lang.NullPointerException
> [java] at
> org.antlr.v4.automata.ParserATNFactory.elemList(ParserATNFactory.java:386)
> [java] at
> org.antlr.v4.automata.ParserATNFactory.alt(ParserATNFactory.java:375)
> [java] at
> org.antlr.v4.parse.ATNBuilder.alternative(ATNBuilder.java:615)
> [java] at
> org.antlr.v4.parse.ATNBuilder.ruleBlock(ATNBuilder.java:294)
> [java] at
> org.antlr.v4.automata.ParserATNFactory._createATN(ParserATNFactory.java:127)
> [java] at
> org.antlr.v4.automata.ParserATNFactory.createATN(ParserATNFactory.java:109)
> [java] at
> org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:309)
> [java] at org.antlr.v4.Tool.process(Tool.java:290)
> [java] at
> org.antlr.v4.Tool.processGrammarsOnCommandLine(Tool.java:254)
> [java] at org.antlr.v4.Tool.main(Tool.java:144)
>
> Regards,
> Jan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kunal.a.naik at gmail.com  Tue Feb 28 19:06:54 2012
From: kunal.a.naik at gmail.com (Kunal Naik)
Date: Tue, 28 Feb 2012 22:06:54 -0500
Subject: [antlr-interest] Starting two parser rules with the same token
Message-ID: <CAMas4U-k-j_41rMyYX14kwf9sQN9YnX3vLyyRivMJFZdMsL1Jw@mail.gmail.com>

Hello,

So the subject text is probably already getting most of you ready to yell
"wrong!" but hear me out.  I'm trying to write a grammar that supports
something like the following:
(1*2/(3-variableOne) >= variableTwo OR variableThree != 4) AND variableFour
> 5

Basically I want to be able to use parentheses to group the mathematical
operations [(1*2/(3-variableOne) above] as well as use parentheses to group
the boolean operations [binding the two operations around OR above].  The
way the grammar is laid out, we can have an infinite amount of opening
parenthesis so ANTLR can't immediately tell if it's at the start of a
grouped mathematical statement or boolean statement.  If I could limit the
number of nested parenthesis, I think I could probably set k in the options
to that same limit and that might help but I haven't come up with an
elegant solution of enforcing a limit.

I feel like this has to be possible because the Java grammar allows me to
do something like:
if((1*2/(3-variableOne) >= variableTwo || variableThree != 4) &&
variableFour > 5) { //do something}
and there is apparently an example Java.g for ANTLR so perhaps it has been
implemented?  (although I haven't actually compiled and tested against it,
just read Java.g and couldn't figure out how they accomplished it)

ANTLR is throwing the following error: "rule simpleFilterExpression has
non-LL(*) decision due to recursive rule invocations reachable from alts
1,2.  Resolve by left-factoring or using syntactic predicates or using
backtrack=true option." which makes sense now that I've wrapped my head
around the problem.  After much Googling, I even tried setting the
backtrack setting to true but that didn't seem to help.
I'm pasting the grammar below if anyone would like to take a stab at it.

Thanks,
Kunal

Grammar:

options
{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens {
    ADD  = '+' ;
    SUB  = '-' ;
    MULT = '*' ;
    DIV  = '/' ;
    EQ   = '=';
    DEQ  = '==';
    NEQ  = '!=';
    GT   = '>';
    GTE  = '>=';
    LT   = '<';
    LTE  = '<=';
    LEFT_PARENTHESIS  = '(';
    RIGHT_PARENTHESIS = ')';
}

//////////////
// Parser rules
//////////////
// entry point
compoundFilterExpression : orFilterExpression EOF;

// AND takes precedence over OR
orFilterExpression : andFilterExpression (OR^ andFilterExpression)*;

andFilterExpression : simpleFilterExpression (AND^ simpleFilterExpression)*;

simpleFilterExpression
    : additiveExpression (EQ|DEQ|NEQ|GT|GTE|LT|LTE)^ additiveExpression
    | LEFT_PARENTHESIS! orFilterExpression RIGHT_PARENTHESIS!
    ;

// * and / take precedence over + and -
additiveExpression : multiplicativeExpression ((ADD|SUB)^
multiplicativeExpression)*;

multiplicativeExpression : atom ((MULT|DIV)^ atom)*;

// There is no way to differentiate between a numeric and string column
// in the grammar so we have to group them together for now and do an
// explicit check while walking the AST
atom
    : COLUMN_NAME
    | FLOAT
    | STRING
    | LEFT_PARENTHESIS! additiveExpression RIGHT_PARENTHESIS!
    ;

//////////////
// Lexer rules (plus the tokens at the top)
//////////////
OR
    : 'or'
    | 'OR'
    | '||'
    | '|'
    ;

AND
    : 'and'
    | 'AND'
    | '&&'
    | '&'
    ;

COLUMN_NAME : ('a'..'z'|'A'..'Z')+ ; // anything from a-z and A-Z

FLOAT
    : ('0'..'9')+ '.' ('0'..'9')+    // 123.456
    | '.' ('0'..'9')+ //.456
    | ('0'..'9')+  // 123
    ;

STRING
    :  '"' ( ESC_SEQ | ~('\\'|'"') )+ '"'
    ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

WS : ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;} ;

From jimi at temporal-wave.com  Tue Feb 28 19:21:15 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Feb 2012 19:21:15 -0800
Subject: [antlr-interest] Starting two parser rules with the same token
In-Reply-To: <CAMas4U-k-j_41rMyYX14kwf9sQN9YnX3vLyyRivMJFZdMsL1Jw@mail.gmail.com>
References: <CAMas4U-k-j_41rMyYX14kwf9sQN9YnX3vLyyRivMJFZdMsL1Jw@mail.gmail.com>
Message-ID: <DF2196DE-135F-4E20-B353-630976363975@temporal-wave.com>

Wrong! ;)

This just means that your grammar rules are not organized in ll precedence  properly and you need to restructure. If you look at the Java grammar, you should see how to construct the expression tree. Your parents should be in the final rule which has highest presence. This will let you have unlimited nesting. the parentheses should only be in your atom rule and it will work out. 

Jim

On Feb 28, 2012, at 19:06, Kunal Naik <kunal.a.naik at gmail.com> wrote:

> Hello,
> 
> So the subject text is probably already getting most of you ready to yell
> "wrong!" but hear me out.  I'm trying to write a grammar that supports
> something like the following:
> (1*2/(3-variableOne) >= variableTwo OR variableThree != 4) AND variableFour
>> 5
> 
> Basically I want to be able to use parentheses to group the mathematical
> operations [(1*2/(3-variableOne) above] as well as use parentheses to group
> the boolean operations [binding the two operations around OR above].  The
> way the grammar is laid out, we can have an infinite amount of opening
> parenthesis so ANTLR can't immediately tell if it's at the start of a
> grouped mathematical statement or boolean statement.  If I could limit the
> number of nested parenthesis, I think I could probably set k in the options
> to that same limit and that might help but I haven't come up with an
> elegant solution of enforcing a limit.
> 
> I feel like this has to be possible because the Java grammar allows me to
> do something like:
> if((1*2/(3-variableOne) >= variableTwo || variableThree != 4) &&
> variableFour > 5) { //do something}
> and there is apparently an example Java.g for ANTLR so perhaps it has been
> implemented?  (although I haven't actually compiled and tested against it,
> just read Java.g and couldn't figure out how they accomplished it)
> 
> ANTLR is throwing the following error: "rule simpleFilterExpression has
> non-LL(*) decision due to recursive rule invocations reachable from alts
> 1,2.  Resolve by left-factoring or using syntactic predicates or using
> backtrack=true option." which makes sense now that I've wrapped my head
> around the problem.  After much Googling, I even tried setting the
> backtrack setting to true but that didn't seem to help.
> I'm pasting the grammar below if anyone would like to take a stab at it.
> 
> Thanks,
> Kunal
> 
> Grammar:
> 
> options
> {
>    output=AST;
>    ASTLabelType=CommonTree;
> }
> 
> tokens {
>    ADD  = '+' ;
>    SUB  = '-' ;
>    MULT = '*' ;
>    DIV  = '/' ;
>    EQ   = '=';
>    DEQ  = '==';
>    NEQ  = '!=';
>    GT   = '>';
>    GTE  = '>=';
>    LT   = '<';
>    LTE  = '<=';
>    LEFT_PARENTHESIS  = '(';
>    RIGHT_PARENTHESIS = ')';
> }
> 
> //////////////
> // Parser rules
> //////////////
> // entry point
> compoundFilterExpression : orFilterExpression EOF;
> 
> // AND takes precedence over OR
> orFilterExpression : andFilterExpression (OR^ andFilterExpression)*;
> 
> andFilterExpression : simpleFilterExpression (AND^ simpleFilterExpression)*;
> 
> simpleFilterExpression
>    : additiveExpression (EQ|DEQ|NEQ|GT|GTE|LT|LTE)^ additiveExpression
>    | LEFT_PARENTHESIS! orFilterExpression RIGHT_PARENTHESIS!
>    ;
> 
> // * and / take precedence over + and -
> additiveExpression : multiplicativeExpression ((ADD|SUB)^
> multiplicativeExpression)*;
> 
> multiplicativeExpression : atom ((MULT|DIV)^ atom)*;
> 
> // There is no way to differentiate between a numeric and string column
> // in the grammar so we have to group them together for now and do an
> // explicit check while walking the AST
> atom
>    : COLUMN_NAME
>    | FLOAT
>    | STRING
>    | LEFT_PARENTHESIS! additiveExpression RIGHT_PARENTHESIS!
>    ;
> 
> //////////////
> // Lexer rules (plus the tokens at the top)
> //////////////
> OR
>    : 'or'
>    | 'OR'
>    | '||'
>    | '|'
>    ;
> 
> AND
>    : 'and'
>    | 'AND'
>    | '&&'
>    | '&'
>    ;
> 
> COLUMN_NAME : ('a'..'z'|'A'..'Z')+ ; // anything from a-z and A-Z
> 
> FLOAT
>    : ('0'..'9')+ '.' ('0'..'9')+    // 123.456
>    | '.' ('0'..'9')+ //.456
>    | ('0'..'9')+  // 123
>    ;
> 
> STRING
>    :  '"' ( ESC_SEQ | ~('\\'|'"') )+ '"'
>    ;
> 
> fragment
> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
> 
> fragment
> ESC_SEQ
>    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>    |   UNICODE_ESC
>    |   OCTAL_ESC
>    ;
> 
> fragment
> OCTAL_ESC
>    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>    |   '\\' ('0'..'7') ('0'..'7')
>    |   '\\' ('0'..'7')
>    ;
> 
> fragment
> UNICODE_ESC
>    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>    ;
> 
> WS : ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;} ;
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ronburk at gmail.com  Wed Feb 29 09:00:54 2012
From: ronburk at gmail.com (Ron Burk)
Date: Wed, 29 Feb 2012 09:00:54 -0800
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <20120227204856.02BF8341847F@www.antlr.org>
References: <4F45FCE2.2080904@in.tum.de>
	<20120227204856.02BF8341847F@www.antlr.org>
Message-ID: <CAEVkYxd0+s_SkDORrmFLn2iFNauVuZeMyFnGB6EkQVnGUUPMog@mail.gmail.com>

> ?It's basically saying that
> one possible form of expr is two exprs (which in turn can each be
> another two exprs). ?With no other distinguishing tokens there's
> no way to exit that path. ?So that way lies infinite recursion,
> madness, and/or Sparta.

Hmm, looks like a perfectly fine grammar to me.
Not one a top-down parser would like, of course,
but no problem for bottom-up algorithms. expr
can always produce 'x', so there's nothing "infinite"
other than the normal ability of a grammar to produce
an infinite number of strings (it's not non-terminating).

> Was this from a real usage attempt (if so, please explain more
> what you were trying), or were you just experimenting?

Awk introduced implicit concatenation about 35
years ago. Not sure if there are any earlier examples of
the implicit binary operator.

This is a one-off case, but a well-established one.
A parser generator that truly supported expressions
in their "natural" language should not only allow
the implicit operator, but allow the user to specify
its precedence and associativity, IMHO.

This is certainly doable bottom-up. One knows when an
expr has been seen and that the next token could start
an expr and can therefore "pretend" that the implicit
operator exists. Haven't thought about doing it top-down. I think
the harder problem is intelligent guidance so the user doesn't
make a mess. For example, it's problematic to try to add
this operator to C, and the parser generator has to know
quite a lot about expressions (apart from grammars) in order
to give an intelligent explanation of why that is (can't use
implicit binary if an outfix operator is overloaded to be a
postunary operator as well, as is the case in C with
'(X')' and 'X(X)').

How does Awk do it then, since it also uses parens
for both grouping and function call? Unlike C, Awk
doesn't allow a function "name" to be an expression.
(Awk source code at google: The One True Awk).
More complications! (Although, complications like
that particular one get unified, I think, if you use LR(0)
and then only examine inadequate states to see what
problems are left over for precedence/associativity
to attempt to resolve).

This is exactly why parser generators don't "really"
support expressions. To really go into that domain
requires embedding a lot of extra knowledge that's
pretty hard to get right, since it's not on a solid
mathematical foundation to start with. If you
don't try to jump in with both feet and handle
all the messes, then you only "sorta" support
expressions, like Yacc/Bison, and have to
(like them) leave a note mentioning that the user's
probably going to get into trouble if s/he strays outside
a few well-established usages.

From finis at in.tum.de  Wed Feb 29 09:12:33 2012
From: finis at in.tum.de (Jan Finis)
Date: Wed, 29 Feb 2012 18:12:33 +0100
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <CAEVkYxd0+s_SkDORrmFLn2iFNauVuZeMyFnGB6EkQVnGUUPMog@mail.gmail.com>
References: <4F45FCE2.2080904@in.tum.de>
	<20120227204856.02BF8341847F@www.antlr.org>
	<CAEVkYxd0+s_SkDORrmFLn2iFNauVuZeMyFnGB6EkQVnGUUPMog@mail.gmail.com>
Message-ID: <4F4E5C81.9030703@in.tum.de>

The funny thing is that Honey Badger DID support this kind of grammar 
(see my earlier mail with a running example). Maybe due to a bug, but 
that shows that it must be somehow possible in a top-down manner.

On 02/29/2012 06:00 PM, Ron Burk wrote:
>>   It's basically saying that
>> one possible form of expr is two exprs (which in turn can each be
>> another two exprs).  With no other distinguishing tokens there's
>> no way to exit that path.  So that way lies infinite recursion,
>> madness, and/or Sparta.
> Hmm, looks like a perfectly fine grammar to me.
> Not one a top-down parser would like, of course,
> but no problem for bottom-up algorithms. expr
> can always produce 'x', so there's nothing "infinite"
> other than the normal ability of a grammar to produce
> an infinite number of strings (it's not non-terminating).
>
>> Was this from a real usage attempt (if so, please explain more
>> what you were trying), or were you just experimenting?
> Awk introduced implicit concatenation about 35
> years ago. Not sure if there are any earlier examples of
> the implicit binary operator.
>
> This is a one-off case, but a well-established one.
> A parser generator that truly supported expressions
> in their "natural" language should not only allow
> the implicit operator, but allow the user to specify
> its precedence and associativity, IMHO.
>
> This is certainly doable bottom-up. One knows when an
> expr has been seen and that the next token could start
> an expr and can therefore "pretend" that the implicit
> operator exists. Haven't thought about doing it top-down. I think
> the harder problem is intelligent guidance so the user doesn't
> make a mess. For example, it's problematic to try to add
> this operator to C, and the parser generator has to know
> quite a lot about expressions (apart from grammars) in order
> to give an intelligent explanation of why that is (can't use
> implicit binary if an outfix operator is overloaded to be a
> postunary operator as well, as is the case in C with
> '(X')' and 'X(X)').
>
> How does Awk do it then, since it also uses parens
> for both grouping and function call? Unlike C, Awk
> doesn't allow a function "name" to be an expression.
> (Awk source code at google: The One True Awk).
> More complications! (Although, complications like
> that particular one get unified, I think, if you use LR(0)
> and then only examine inadequate states to see what
> problems are left over for precedence/associativity
> to attempt to resolve).
>
> This is exactly why parser generators don't "really"
> support expressions. To really go into that domain
> requires embedding a lot of extra knowledge that's
> pretty hard to get right, since it's not on a solid
> mathematical foundation to start with. If you
> don't try to jump in with both feet and handle
> all the messes, then you only "sorta" support
> expressions, like Yacc/Bison, and have to
> (like them) leave a note mentioning that the user's
> probably going to get into trouble if s/he strays outside
> a few well-established usages.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sam at tunnelvisionlabs.com  Wed Feb 29 09:43:49 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 29 Feb 2012 11:43:49 -0600
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <4F4E5C81.9030703@in.tum.de>
References: <4F45FCE2.2080904@in.tum.de>	<20120227204856.02BF8341847F@www.antlr.org>	<CAEVkYxd0+s_SkDORrmFLn2iFNauVuZeMyFnGB6EkQVnGUUPMog@mail.gmail.com>
	<4F4E5C81.9030703@in.tum.de>
Message-ID: <010a01ccf709$b2d5bca0$188135e0$@tunnelvisionlabs.com>

The ambiguity in these rules lies in the shape of the parse tree as opposed
to the actual set of inputs which can be matched. I gave a more detailed
explanation and possible solutions as comments on the issue at github:

https://github.com/antlr/antlr4/issues/26

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Jan Finis [mailto:finis at in.tum.de] 
Sent: Wednesday, February 29, 2012 11:13 AM
To: Ron Burk
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Two More Bugs in ANTLRv4

The funny thing is that Honey Badger DID support this kind of grammar (see
my earlier mail with a running example). Maybe due to a bug, but that shows
that it must be somehow possible in a top-down manner.



From finis at in.tum.de  Wed Feb 29 10:06:31 2012
From: finis at in.tum.de (Jan Finis)
Date: Wed, 29 Feb 2012 19:06:31 +0100
Subject: [antlr-interest] Two More Bugs in ANTLRv4
In-Reply-To: <010a01ccf709$b2d5bca0$188135e0$@tunnelvisionlabs.com>
References: <4F45FCE2.2080904@in.tum.de>	<20120227204856.02BF8341847F@www.antlr.org>	<CAEVkYxd0+s_SkDORrmFLn2iFNauVuZeMyFnGB6EkQVnGUUPMog@mail.gmail.com>
	<4F4E5C81.9030703@in.tum.de>
	<010a01ccf709$b2d5bca0$188135e0$@tunnelvisionlabs.com>
Message-ID: <4F4E6927.4070205@in.tum.de>

Of course the grammar is ambiguous, but there are conventions to resolve 
this: Without specification, any operation is left-associative, so x x x 
should parse as ((x x) x). I see that there is no way of specifying 
right associativity in this case, but this is rather a problem of the 
grammar specification language than of the top down parser generator.

Your suggestion from github:

|exprs
     : expr+
     ;

expr
     : 'x'
     ;
|


works for this example, but this is only a small example for showing the 
issue. In the real application, there are more left recursive 
alternatives in expr. Thus, your suggestion would produce a mutual left 
recursion between exprs and expr. For example, consider this grammar for 
matching regular expressions

expr :
     | ID
     | expr ('?' | '*' | '+')
     | expr expr
     | expr '|' expr

Of course, this grammar can be transformed into one that has no double 
left recursion, but the resulting grammar would look a lot more ugly.


Regards,
Jan

On 02/29/2012 06:43 PM, Sam Harwell wrote:
> The ambiguity in these rules lies in the shape of the parse tree as opposed
> to the actual set of inputs which can be matched. I gave a more detailed
> explanation and possible solutions as comments on the issue at github:
>
> https://github.com/antlr/antlr4/issues/26
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> From: Jan Finis [mailto:finis at in.tum.de]
> Sent: Wednesday, February 29, 2012 11:13 AM
> To: Ron Burk
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Two More Bugs in ANTLRv4
>
> The funny thing is that Honey Badger DID support this kind of grammar (see
> my earlier mail with a running example). Maybe due to a bug, but that shows
> that it must be somehow possible in a top-down manner.
>
>


From sam at tunnelvisionlabs.com  Wed Feb 29 10:20:33 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 29 Feb 2012 12:20:33 -0600
Subject: [antlr-interest] Double Left Recursion Update: Test case with
	working "double left recursion"
In-Reply-To: <4F4CE0A4.4010409@in.tum.de>
References: <4F45FCE2.2080904@in.tum.de> <4F4BDA15.9070909@cs.usfca.edu>
	<4F4CE0A4.4010409@in.tum.de>
Message-ID: <011701ccf70e$d4943fb0$7dbcbf10$@tunnelvisionlabs.com>

Hi Jan,

Why not simply change the result rule to the following?

result : expr+ EOF;

I go into more detail in comments on the following issue on github:
https://github.com/antlr/antlr4/issues/26

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Jan Finis [mailto:finis at in.tum.de] 
Sent: Tuesday, February 28, 2012 8:12 AM
To: Terence Parr
Cc: antlr-interest at antlr.org
Subject: [antlr-interest] Double Left Recursion Update: Test case with
working "double left recursion"

Hi again,

as I mentioned in my last mail, I think that the problem with rules of the
form

expr : expr expr;

is solvable because old Honey Badger was able to match them. I tried again
and could confirm this. This grammar:


result : expr { System.out.println($expr.s); } EOF;

expr returns [String s]
	: 'x' { $s = "x"; }
	| e1=expr '?' { $s = $e1.s + "?"; }
	| e1=expr e2=expr { $s = "(" + $e1.s + " " + $e2.s + ")"; }
	;


parses correctly with an older 4.0ea version. I have uploaded this 
version here:
http://www-db.in.tum.de/~finis/antlr-4.0ea-complete-old.jar/

It does not only parse correctly, even the resulting parser is really 
able to match input without descending into a looping recursion.

I tested the resulting parser on the following input:

xxxxx?xx?xx


and the result was:

(x (x (x (x (x? (x (x? (x x))))))))

so the concatenation operation seems to be right associative, but it 
works perfectly fine :).

Best regards,
Jan


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bouchardrichard at comcast.net  Wed Feb 29 19:19:45 2012
From: bouchardrichard at comcast.net (bouchardrichard at comcast.net)
Date: Thu, 1 Mar 2012 03:19:45 +0000 (UTC)
Subject: [antlr-interest] Need person to assist with commercial development
In-Reply-To: <154466841.1965862.1330571394834.JavaMail.root@sz0050a.westchester.pa.mail.comcast.net>
Message-ID: <540975967.1966149.1330571985242.JavaMail.root@sz0050a.westchester.pa.mail.comcast.net>



Apologies if commercial messages aren't appropriate to the list, but I didn't see anything in the list description that would prohibit them. 


I'm working on a commercial embedded project, and want to provide an ANTLR-based command-line interface. I'll be using C++ as my target language. I'm looking for someone experienced with both ANTLR and C++ to do some initial prototyping. I'll provide specifics once I have an individual identified. This is work someone can do at home as long as they have access to a Linux-based system and a current gnu c++ compiler. This would be a paid position, compensation details will be worked out with the individual.? I would speculate this is on the order of 10-20 hours of work. 

If interested, please contact me with a bit of your background, and I'll send you more specifics on what is needed. 


From young_m_j at hotmail.com  Wed Feb 29 19:53:27 2012
From: young_m_j at hotmail.com (Michael Young)
Date: Thu, 1 Mar 2012 03:53:27 +0000
Subject: [antlr-interest] Compiling ANTLR with gcj/classpath
Message-ID: <BAY150-W6134B4BB3CA9E79E58B1A1A26C0@phx.gbl>


Does anyone have any recent experience compiling a recent version of ANTLR using gcj?  (Everything I found via a web search was quite old.)  Is there documentation on how to do this?

I'm actually looking to compile the generated parser and the required runtime support classes, not the ANTLR tool itself.

What version of Java does the generated code require?
Is there any UI, reflection API usage, or dynamic class loading in the library (or generated code)?

The reason for using the Java version and then compiling it (and linking with other object modules), rather than using another target (such as C) is : a) Java has Unicode support, b) the main development (and, presumably, most users) is done in Java, and there will be more feature support, a larger support community, and less bugs there, and c) by linking with other modules developed in other languages, I can provide a native package, rather than require a JVM on a user's machine and using JNI/CNI (reduced support liabilities).

Longer term, I may be interested in helping with a true C++ (vs. "wrapped C") target, and integrating ICU for Unicode support (assuming the licensing is compatible).  I probably won't be able to contribute much at first (I'm new to ANTLR in general), but I'll probably try to look things over and be a "guinea pig".  In addition to Unicode, my current project requires tree support, which is not yet in the C++ target.

Thanks for any help,
    Michael 		 	   		  

From jimi at temporal-wave.com  Wed Feb 29 20:29:23 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 29 Feb 2012 20:29:23 -0800
Subject: [antlr-interest] Compiling ANTLR with gcj/classpath
In-Reply-To: <BAY150-W6134B4BB3CA9E79E58B1A1A26C0@phx.gbl>
References: <BAY150-W6134B4BB3CA9E79E58B1A1A26C0@phx.gbl>
Message-ID: <F9E28561-F074-4CC6-BA4C-B85BE3B50401@temporal-wave.com>

C target has full Unicode support and can be compiled as c++. Java has java UTF8 support. If you think that getting it to compile with gcj is easier than using the C target, then good luck, but I think you are in the wrong track to be honest. 

Jim



On Feb 29, 2012, at 19:53, Michael Young <young_m_j at hotmail.com> wrote:

> 
> Does anyone have any recent experience compiling a recent version of ANTLR using gcj?  (Everything I found via a web search was quite old.)  Is there documentation on how to do this?
> 
> I'm actually looking to compile the generated parser and the required runtime support classes, not the ANTLR tool itself.
> 
> What version of Java does the generated code require?
> Is there any UI, reflection API usage, or dynamic class loading in the library (or generated code)?
> 
> The reason for using the Java version and then compiling it (and linking with other object modules), rather than using another target (such as C) is : a) Java has Unicode support, b) the main development (and, presumably, most users) is done in Java, and there will be more feature support, a larger support community, and less bugs there, and c) by linking with other modules developed in other languages, I can provide a native package, rather than require a JVM on a user's machine and using JNI/CNI (reduced support liabilities).
> 
> Longer term, I may be interested in helping with a true C++ (vs. "wrapped C") target, and integrating ICU for Unicode support (assuming the licensing is compatible).  I probably won't be able to contribute much at first (I'm new to ANTLR in general), but I'll probably try to look things over and be a "guinea pig".  In addition to Unicode, my current project requires tree support, which is not yet in the C++ target.
> 
> Thanks for any help,
>    Michael                         
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

